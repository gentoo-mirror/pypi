<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![header](cascade/docs/imgs/header.png)![ver](https://img.shields.io/github/v/release/oxid15/cascade?style=plastic)![build](https://github.com/oxid15/cascade/actions/workflows/python-package.yml/badge.svg)[![Downloads](https://pepy.tech/badge/cascade-ml)](https://pepy.tech/project/cascade-ml)[![DOI](https://zenodo.org/badge/460920693.svg)](https://zenodo.org/badge/latestdoi/460920693)Lightweight and modular MLOps library with the aim to make ML development more efficient targeted at small teams or individuals.Cascade was built especially for individuals or small teams that are in need of MLOps, but don't have time or resources to integrate with platforms.**Included in [Model Lifecycle](https://github.com/kelvins/awesome-mlops#model-lifecycle) section of Awesome MLOps list**## Installation```bashpip install cascade-ml```More info on installation can be found in [documentation](https://oxid15.github.io/cascade/en/latest/quickstart.html#installation)## Docs[Go to Cascade documentation](https://oxid15.github.io/cascade/en/latest)## UsageThis section is divided into blocks based on what problem you can solve using Cascade. These are the simplest examplesof what the library is capable of. See more in documentation.### ETL pipeline trackingData processing pipelines need to be versioned and tracked as a part of model experiments.  To track changes and version everything about data Cascade has `Datasets` - special wrappersthat encapsulate operations on data.```pythonfrom pprint import pprintfrom cascade import data as cddfrom sklearn.datasets import load_digitsimport numpy as npX, y = load_digits(return_X_y=True)pairs = [(x, y) for (x, y) in zip(X, y)]ds = cdd.Wrapper(pairs)ds = cdd.RandomSampler(ds)train_ds, test_ds = cdd.split(ds)train_ds = cdd.ApplyModifier(    train_ds,    lambda pair: pair + np.random.random() * 0.1 - 0.05)pprint(train_ds.get_meta())```We see all the stages that we did in meta.&lt;details&gt;&lt;summary&gt;Click to see full pipeline metadata&lt;/summary&gt;```json[{&quot;comments&quot;: [],  &quot;description&quot;: null,  &quot;len&quot;: 898,  &quot;links&quot;: [],  &quot;name&quot;: &quot;cascade.data.apply_modifier.ApplyModifier&quot;,  &quot;tags&quot;: [],  &quot;type&quot;: &quot;dataset&quot;}, {&quot;comments&quot;: [],  &quot;description&quot;: null,  &quot;len&quot;: 898,  &quot;links&quot;: [],  &quot;name&quot;: &quot;cascade.data.range_sampler.RangeSampler&quot;,  &quot;tags&quot;: [],  &quot;type&quot;: &quot;dataset&quot;}, {&quot;comments&quot;: [],  &quot;description&quot;: null,  &quot;len&quot;: 1797,  &quot;links&quot;: [],  &quot;name&quot;: &quot;cascade.data.random_sampler.RandomSampler&quot;,  &quot;tags&quot;: [],  &quot;type&quot;: &quot;dataset&quot;}, {&quot;comments&quot;: [],  &quot;len&quot;: 1797,  &quot;links&quot;: [],  &quot;name&quot;: &quot;cascade.data.dataset.Wrapper&quot;,  &quot;obj_type&quot;: &quot;&lt;class 'list'&gt;&quot;,  &quot;tags&quot;: [],  &quot;type&quot;: &quot;dataset&quot;}]```&lt;/details&gt;See all datasets in [zoo](https://oxid15.github.io/cascade/en/latest/examples/dataset_zoo.html)  See all use-cases in [documentation](https://oxid15.github.io/cascade/en/latest/examples.html)### Pipeline versioningCascade offers automatic pipeline versioningutilities```pythonfrom cascade.data import Wrapper, Modifier, versionds = Wrapper([0, 1, 2])ds = Modifier(ds)ver = version(ds, &quot;version_log.yml&quot;)```Will output `0.1` and for any change in the steps or any meta of the pipeline it willbump the version. If you return to the previous version, then will return to previous one as well.### Experiment trackingNot only data and pipelines changes over time. Models change more frequently and require special system to handle experiments and artifacts.```pythonimport randomfrom cascade import models as cdmfrom cascade import data as cddmodel = cdm.Model()model.add_metric('acc', random.random())repo = cdm.ModelRepo('repos/use_case_repo')line = repo.add_line('baseline')line.save(model, only_meta=True)````Repo` is the collection of model lines and `Line` can be a bunch of experiments on one model type.&lt;details&gt;&lt;summary&gt;Click to see full model metadata&lt;/summary&gt;```json[{&quot;comments&quot;: [],  &quot;created_at&quot;: &quot;2023-11-06T07:42:42.737248+00:00&quot;,  &quot;description&quot;: null,  &quot;links&quot;: [],  &quot;metrics&quot;: [{&quot;created_at&quot;: &quot;2023-11-06T07:42:43.004261+00:00&quot;,               &quot;name&quot;: &quot;acc&quot;,               &quot;value&quot;: 0.3730907820891789}],  &quot;name&quot;: &quot;cascade.models.model.Model&quot;,  &quot;params&quot;: {},  &quot;path&quot;: &quot;/home/user/repos/use_case_repo/baseline/00001&quot;,  &quot;saved_at&quot;: &quot;2023-11-06T07:43:17.325593+00:00&quot;,  &quot;slug&quot;: &quot;cerulean_jaguarundi_of_trust&quot;,  &quot;tags&quot;: [],  &quot;type&quot;: &quot;model&quot;}]```&lt;/details&gt;See all use-cases in [documentation](https://oxid15.github.io/cascade/en/latest/examples.html)### Data validationValidation is an important part of pipelines. Simple asserts can do the thing, butthere are more useful validation tools.  Validators provide meaningful error messages and a way to perform many checks in one run over the dataset.```pythonfrom cascade import meta as cmefrom cascade import data as cddfrom sklearn.datasets import load_digitsimport numpy as npX, y = load_digits(return_X_y=True)pairs = [(x, y) for (x, y) in zip(X, y)]ds = cdd.Wrapper(pairs)ds = cdd.RandomSampler(ds)train_ds, test_ds = cdd.split(ds)cme.PredicateValidator(    train_ds,    [        lambda pair: all(pair[0] &lt; 20),        lambda pair: pair[1] in (i for i in range(10))    ])```See all use-cases in [documentation](https://oxid15.github.io/cascade/en/latest/examples.html)### Metadata analysisDuring experiments Cascade produces many metadata which can be analyzed later.`MetricViewer` is the tool that allows to see the relationship between parameters andmetrics of all models in repository.```pythonfrom cascade import meta as cmefrom cascade import models as cdmrepo = cdm.ModelRepo('repos/use_case_repo')# This runs web-server that relies on optional dependencycme.MetricViewer(repo).serve()```![metric-viewer](cascade/docs/imgs/metric-viewer.gif)`HistoryViewer` allows to see model's lineage, what parameters resulted in what metrics```pythonfrom cascade import meta as cmefrom cascade import models as cdmrepo = cdm.ModelRepo('repos/use_case_repo')# This returns plotly figurecme.HistoryViewer(repo).plot()# This runs a server ans allows to see changes in real time (for example while models are trained)cme.HistoryViewer(repo).serve()```See all use-cases in [documentation](https://oxid15.github.io/cascade/en/latest/examples.html)![history-viewer](cascade/docs/imgs/history-viewer.gif)## Who could find Cascade usefulSmall and fast-prototyping AI-teams could use it as a tradeoff between total missingness of any MLOps practices and demanding enterprise solutions.## PrinciplesThe key principles of Cascade are:* **Elegancy** - ML code should be about ML with minimum meta-code* **Flexibility** - to easily build prototypes and integrate existing projects with Cascade *(don't pay for what you don't use)** **Reusability** - code to be reused in similar projects with no effort* **Traceability** - everything should have meta-data## ContributingPull requests and issues are welcome! For major changes, please open an issue first to discuss what you would like to change.Please make sure to update tests and docs as appropriate.## License[Apache License 2.0](https://choosealicense.com/licenses/apache-2.0/)## VersionsThis project uses Semantic Versioning - &lt;https://semver.org/&gt;## Cite the codeIf you used the code in your research, please cite it with:    [![DOI](https://zenodo.org/badge/460920693.svg)](https://zenodo.org/badge/latestdoi/460920693)```bibtex@software{ilia_moiseev_2023_8006995,  author       = {Ilia Moiseev},  title        = {Oxid15/cascade: Lightweight ML Engineering library},  month        = jun,  year         = 2023,  publisher    = {Zenodo},  doi          = {10.5281/zenodo.8006995},  url          = {https://doi.org/10.5281/zenodo.8006995}}```![footer](cascade/docs/imgs/footer.png)</longdescription>
</pkgmetadata>