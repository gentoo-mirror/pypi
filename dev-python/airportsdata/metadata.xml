<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========================airportsdata |downloads|========================.. |ICAO| replace:: 28,133.. |IATA| replace:: 7,588.. |LID| replace:: 12,567.. |pyversion| image:: https://img.shields.io/pypi/v/airportsdata.svg    :target: https://pypi.org/project/airportsdata/    :alt: pypi version.. |support| image:: https://img.shields.io/pypi/pyversions/airportsdata.svg    :target: https://pypi.org/project/airportsdata/    :alt: supported Python version.. |pypi_version| image:: https://img.shields.io/pypi/v/airportsdata.svg?label=    :target: https://pypi.org/project/airportsdata/    :alt: PyPI version.. |format| image:: https://img.shields.io/pypi/format/airportsdata.svg    :target: https://pypi.org/project/airportsdata/    :alt: Kit format.. |downloads| image:: https://static.pepy.tech/badge/airportsdata    :target: https://www.pepy.tech/project/airportsdata    :alt: PyPI downloads.. |license| image:: https://img.shields.io/pypi/l/airportsdata.svg    :target: https://pypi.org/project/airportsdata/    :alt: license.. |issues| image:: https://img.shields.io/github/issues-raw/mborsetti/airportsdata    :target: https://github.com/mborsetti/airportsdata/issues    :alt: issues.. |CI| image:: https://github.com/mborsetti/airportsdata/actions/workflows/ci-cd.yaml/badge.svg?event=push    :target: https://github.com/mborsetti/airportsdata/actions    :alt: CI testing status.. |coveralls| image:: https://coveralls.io/repos/github/mborsetti/airportsdata/badge.svg?branch=main    :target: https://coveralls.io/github/mborsetti/airportsdata?branch=main    :alt: code coverage by Coveralls.. |status| image:: https://img.shields.io/pypi/status/airportsdata.svg    :target: https://pypi.org/project/airportsdata/    :alt: Package stability.. |security| image:: https://img.shields.io/badge/security-bandit-yellow.svg    :target: https://github.com/PyCQA/bandit    :alt: Security StatusExtensive database of location and timezone data for nearly every operational airport and landing strip in the world,with |ICAO| entries.Each entry consists of the following data:* ``icao``: ICAO 4-letter DOC7910 Location Indicator or (if none) an internal Pseudo-ICAO Identifier [#]_ (|ICAO|  entries)* ``iata``: IATA 3-letter Location Code (|IATA| entries) or an empty string [#]_* ``name``: Official name (latin script)* ``city``: City in latin script, ideally using the local language* ``subd``: Subdivision (e.g. state, province, region, etc.), ideally using the local-language or English names of  `ISO 3166-2 &lt;https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes&gt;`__* ``country``: `ISO 3166-1 &lt;https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes&gt;`__ alpha-2 country code  (plus ``XK`` for Kosovo)* ``elevation``: MSL elevation (the highest point of the landing area) in feet; it is often wrong* ``lat``: Latitude (decimal)* ``lon``: Longitude (decimal)* ``tz``: Timezone expressed as a `tz database name &lt;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&gt;`__  (IANA-compliant) or an empty string for Antarctica* ``lid``: U.S. FAA Location Identifier (|LID| entries), or an empty string.. [#] See `here &lt;https://github.com/mborsetti/airportsdata/blob/main/README_identifiers.rst&gt;`__ for an explanation on   how the Pseudo-ICAO Identifier is generated for airports and seaplane bases without an ICAO 4-letter Location   Indicator... [#] IATA Multi Airport Cities are not not airports so are not included, but we provide a database and a Python   function that returns the above data for all of their component airports of a IATA MAC. Please see documentation   `here &lt;https://github.com/mborsetti/airportsdata/blob/main/README_IATA.rst&gt;`__.Best efforts are placed to review all contributions for accuracy, but accuracy cannot be guaranteed nor should beexpected by users.Important notes:* Timezone was originally sourced from `TimeZoneDB &lt;https://timezonedb.com&gt;`__ and is missing for Antarctica;* No historical data (closed airports are removed).Please report any issues you may find `here&lt;https://github.com/mborsetti/airportsdata/blob/main/CONTRIBUTING.rst&gt;`__.This project is a fork of https://github.com/mwgg/Airports. All new data submitted in this fork have been validatedagainst national `Aeronautical Information Publications (AIP) or equivalent&lt;https://github.com/mborsetti/airportsdata/blob/main/README_AIP.rst&gt;`__ (orARINC database) and `IATA &lt;https://www.iata.org/en/publications/directories/code-search/&gt;`__ before publishing.Raw data========A CSV (comma separated values) file, with headers and encoded in UTF-8, is downloadable from GitHub `here&lt;https://github.com/mborsetti/airportsdata/raw/main/airportsdata/airports.csv&gt;`__.Python======|pyversion| |support| |format| |status| |security| |CI| |coveralls| |issues|Install from `PyPi &lt;https://pypi.org/project/airportsdata/&gt;`__  using pip:.. code-block:: bash  pip install -U airportsdataOnce installed, to load the data into a dict:.. code-block:: python   import airportsdata   airports = airportsdata.load()  # key is the ICAO identifier (the default)   print(airports['KJFK'])or.. code-block:: python   import airportsdata   airports = airportsdata.load('IATA')  # key is the IATA location code   print(airports['JFK'])or.. code-block:: python   import airportsdata   airports = airportsdata.load('LID')  # key is the FAA LID   print(airports['01AA'])Older Python versions are supported for 3 years after being obsoleted by a new major release (i.e. about 4 yearssince their original release).License=======|license|Released under the `MIT License &lt;https://opensource.org/licenses/MIT&gt;`__ (see license `here&lt;https://github.com/mborsetti/airportsdata/blob/main/LICENSE&gt;`__).</longdescription>
</pkgmetadata>