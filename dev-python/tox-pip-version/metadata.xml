<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.com/pglass/tox-pip-version.svg?branch=master)](https://travis-ci.com/pglass/tox-pip-version)![](https://img.shields.io/pypi/v/tox-pip-version.svg)![](https://img.shields.io/pypi/pyversions/tox-pip-version.svg)Overview--------This is a tox plugin that preinstalls a specific version of pip in each toxenvironment.```bashpip install tox-pip-version```This works around the default behavior of tox/virtualenv that always installsthe latest version pip. It is an improvment over the `VIRTUALENV_NO_DOWNLOAD=1`option that does not install the latest version, but could result in usage ofan outdated version of pip.*Recommendation*: Do not pin the pip version long term. You get more stablerepeatable builds, but at the cost of using an outdated (possibly vulnerable)package. This should be used as a temporary fix for breakages in upstream pip,or in conjunction with a regular process to update the version pin.*Note*: This relies on an [unstable tox plugin interface](https://tox.readthedocs.io/en/latest/plugins.html#tox.hookspecs.tox_testenv_create).You may experience breakage with new tox versions. If you do, please feelfree to [report the issue](https://github.com/pglass/tox-pip-version/issues/new)on Github.### UsageInstall the package and include `pip_version` in your tox.ini```tox[testenv]pip_version = pip==19.0.1```Or, set the `TOX_PIP_VERSION` environment variable,```bashexport TOX_PIP_VERSION=18.1tox```The plugin will install that version of pip into the tox-created virtualenv,just after tox creates the virtualenv, but before dependencies are installed.The `pip_version` within tox.ini, if present, is always used over theenvironment variable.If neither `pip_version` or `TOX_PIP_VERSION` is present, the plugin doesnothing.### Version SetsVersion sets/ranges are supported, enabling installation of a version of pipmatching a set of specifiers. There are two basic formats: a plain versionnumber, or the package name with optional [PEP440-compatible](https://www.python.org/dev/peps/pep-0440/#version-specifiers) versionspecifiers.| tox.ini                      | effective pip command        || ---------------------------- | ---------------------------- || `pip_version = 19.0`         | `pip install -U pip==19.0`   || `pip_version = pip==19.0`    | `pip install -U pip==19.0`   || `pip_version = pip&gt;=19.0`    | `pip install -U pip&gt;=19.0`   || `pip_version = pip!=19,&gt;18`  | `pip install -U pip!=19,&gt;18` || `pip_version = pip`          | `pip install -U pip`         |### TestsUse `make test` to run the tests, which includes linting and functional tests.Each of the `tests/*` directories is a &quot;feature&quot; that needs testing. Eachfeature sub-directory contains a tox.ini file that sets pip version in aparticular way, and then uses a tox command to check the correct pip versionwas installed.</longdescription>
</pkgmetadata>