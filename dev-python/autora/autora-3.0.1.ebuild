# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Autonomous Research Assistant (AutoRA) is a framework for automating steps of the empirical research process."

HOMEPAGE="http://www.empiricalresearch.ai/"
LICENSE="Copyright 2021, Brown University, Providence, RI.  All Rights Reserved  Permission to use, copy, modify, and distribute this software and its documentation for any purpose other than its incorporation into a commercial product or service is hereby granted without fee, provided that the above copyright notice appear in all copies and that both that copyright notice and this permission notice appear in supporting documentation, and that the name of Brown University not be used in advertising or publicity pertaining to distribution of the software without specific, written prior permission.  BROWN UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL BROWN UNIVERSITY BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
SRC_URI="https://files.pythonhosted.org/packages/source/a/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all all-experiment-runner-experimentation-managers all-experiment-runner-recruitment-managers all-experiment-runners all-experimentalists all-theorists dev docs experiment-runner-experimentation-manager-firebase experiment-runner-firebase-prolific experiment-runner-recruitment-manager-prolific experimentalist-falsification experimentalist-sampler-inequality experimentalist-sampler-model-disagreement experimentalist-sampler-nearest-value experimentalist-sampler-novelty experimentalist-sampler-uncertainty test theorist-bms theorist-bsr theorist-darts"
DEPENDENCIES="dev-python/autora-core[${PYTHON_USEDEP}]
	dev-python/autora-workflow[${PYTHON_USEDEP}]
	dev-python/autora-synthetic[${PYTHON_USEDEP}]
	all? ( dev-python/autora[${PYTHON_USEDEP}] )
	all? ( dev-python/autora[${PYTHON_USEDEP}] )
	all? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experiment-runner-experimentation-managers? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experiment-runner-recruitment-managers? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experiment-runners? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experimentalists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experimentalists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experimentalists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experimentalists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experimentalists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-experimentalists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-theorists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-theorists? ( dev-python/autora[${PYTHON_USEDEP}] )
	all-theorists? ( dev-python/autora[${PYTHON_USEDEP}] )
	dev? ( dev-python/autora-core[${PYTHON_USEDEP}] )
	docs? ( dev-python/autora-core[${PYTHON_USEDEP}] )
	docs? ( dev-python/mkdocs-simple-hooks[${PYTHON_USEDEP}] )
	experiment-runner-experimentation-manager-firebase? ( dev-python/autora-experiment-runner-experimentation-manager-firebase[${PYTHON_USEDEP}] )
	experiment-runner-firebase-prolific? ( dev-python/autora-experiment-runner-firebase-prolific[${PYTHON_USEDEP}] )
	experiment-runner-recruitment-manager-prolific? ( dev-python/autora-experiment-runner-recruitment-manager-prolific[${PYTHON_USEDEP}] )
	experimentalist-falsification? ( dev-python/autora-experimentalist-falsification[${PYTHON_USEDEP}] )
	experimentalist-sampler-inequality? ( dev-python/autora-experimentalist-sampler-inequality[${PYTHON_USEDEP}] )
	experimentalist-sampler-model-disagreement? ( dev-python/autora-experimentalist-sampler-model-disagreement[${PYTHON_USEDEP}] )
	experimentalist-sampler-nearest-value? ( dev-python/autora-experimentalist-sampler-nearest-value[${PYTHON_USEDEP}] )
	experimentalist-sampler-novelty? ( dev-python/autora-experimentalist-sampler-novelty[${PYTHON_USEDEP}] )
	experimentalist-sampler-uncertainty? ( dev-python/autora-experimentalist-sampler-uncertainty[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	theorist-bms? ( dev-python/autora-theorist-bms[${PYTHON_USEDEP}] )
	theorist-bsr? ( dev-python/autora-theorist-bsr[${PYTHON_USEDEP}] )
	theorist-darts? ( dev-python/autora-theorist-darts[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
