<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># glom*Restructuring data, the Python way*&lt;a href=&quot;https://pypi.org/project/glom/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/glom.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://calver.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/calver-YY.MM.MICRO-22bfda.svg&quot;&gt;&lt;/a&gt;&lt;img width=&quot;30%&quot; align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/mahmoud/glom/master/docs/_static/comet.png&quot;&gt;Real applications have real data, and real data nests. Objects insideof objects inside of lists of objects.glom is a new and powerful way to handle real-world data, featuring:* Path-based access for nested data structures* Readable, meaningful error messages* Declarative data transformation, using lightweight, Pythonic specifications* Built-in data exploration and debugging featuresAll of that and more, available as a [fully-documented][rtd],pure-Python package, tested on Python 3.7+, as well asPyPy3. Installation is as easy as:```  pip install glom```And when you install glom, you also get [the `glom` command-lineinterface][cli_rtd], letting you experiment at the console, but never limitingyou to shell scripts:```Usage: glom [FLAGS] [spec [target]]Command-line interface to the glom library, providing nested data access and datarestructuring with the power of Python.Flags:  --help / -h                     show this help message and exit  --target-file TARGET_FILE       path to target data source (optional)  --target-format TARGET_FORMAT   format of the source data (json or python) (defaults                                  to 'json')  --spec-file SPEC_FILE           path to glom spec definition (optional)  --spec-format SPEC_FORMAT       format of the glom spec definition (json, python,                                  python-full) (defaults to 'python')  --indent INDENT                 number of spaces to indent the result, 0 to disable                                  pretty-printing (defaults to 2)  --debug                         interactively debug any errors that come up  --inspect                       interactively explore the data```Anything you can do at the command line readily translates to Pythoncode, so you've always got a path forward when complexity starts toramp up.## Examples#### Without glom```python&gt;&gt;&gt; data = {'a': {'b': {'c': 'd'}}}&gt;&gt;&gt; data['a']['b']['c']'d'&gt;&gt;&gt; data2 = {'a': {'b': None}}&gt;&gt;&gt; data2['a']['b']['c']Traceback (most recent call last):...TypeError: 'NoneType' object is not subscriptable```#### With glom```python&gt;&gt;&gt; glom(data, 'a.b.c')'d'&gt;&gt;&gt; glom(data2, 'a.b.c')Traceback (most recent call last):...PathAccessError: could not access 'c', index 2 in path Path('a', 'b', 'c'), got error: ...```## Learn more&lt;img width=&quot;30%&quot; align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/mahmoud/glom/master/docs/_static/comet_multi.png&quot;&gt;If all this seems interesting, continue exploring glom below:* [glom Tutorial][tutorial]* [Full API documentation at Read the Docs][rtd]* [Original announcement blog post (2018-05-09)][glom_announce]* [Frequently Asked Questions][faq]* [PyCon 2018 Lightning Talk (2018-05-11)][pycon_talk]All of the links above are overflowing with examples, but should youfind anything about the docs, or glom itself, lacking, [please submitan issue][gh_issues]![rtd]: https://glom.readthedocs.io[cli_rtd]: http://glom.readthedocs.io/en/latest/cli.html[tutorial]: https://glom.readthedocs.io/en/latest/tutorial.html[faq]: https://glom.readthedocs.io/en/latest/faq.html[glom_announce]: https://sedimental.org/glom_restructured_data.html[gh_issues]: https://github.com/mahmoud/glom/issues/[pycon_talk]: https://www.youtube.com/watch?v=bTAFl8P2DkE&amp;t=18m07sIn the meantime, just remember: When you've got nested data, glom it! ☄️</longdescription>
</pkgmetadata>