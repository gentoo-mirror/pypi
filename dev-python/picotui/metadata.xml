<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>picotui=======Picotui is a Text User Interface (TUI) widget library for Python3.It is known to work with CPython3 and`Pycopy &lt;https://github.com/pfalcon/pycopy&gt;`_ (Unix version isofficially supported for the latter), but should work with anyPython3 implementation which allows to access stdin/stdout filedescriptors.You can learn more about it with the help of a virtual Q&amp;A session:Q: There're a few TUI libraries for Python, why yet another one?A: Urwid is one well-known such TUI library. Here's an entry from itsFAQ: &quot;How do I create drop-downs, floating windows, and scroll bars? -You need to start writing some fairly complex widgets. Thisfunctionality hasn't been added to Urwid yet.&quot; So, Urwid is awidget library which doesn't have dropdowns. Version 0.8.0 ofUrwid was imported into SVN (and later Git) in 2004. Urwid doesn'thave dropdowns and stuff for 10+ years.Q: Hey, but you cut off the answer from Urwid FAQ. It says: &quot;but if youare willing to write it, we do accept patches&quot;. Why didn't you implementthose widgets for Urwid and contribute them?A: Why didn't you? No, wait, that's not productive. I didn't implementthem for Urwid because I don't like its architecture and the fact thatits widget set is rather weak (so it's hard to write new widgets - thereare not enough examples to start from). And don't get me wrong, but thefact that nobody wrote those widgets for Urwid during 10+ years, got tomean something. However, I tried to hack on another, less, but stillknown Python TUI library - Npyscreen. Its widget set is much moreadvanced and usable. But - it still has some architectural choiceswhich makes extending it and overriding some behaviors problematic.I also found its project management a bit unresponsive. So, after makinga dozen of commits to my fork, I thought it's time to get some breath andstarted picotui.Q: So, sun must shine bright in the picotui land, and it must be the bestlibrary out there?A: Alas, no. Let me start with the fact that most TUI libraries are basedon ``curses`` library for terminal screen management. It makes sure that ifyou update a screen, only the minimal set of updates is made. This wasvery important at the era of 300 baud serial connections. Let's count:300 baud is about 30 bytes/s, and the standard VT100 screen is 80*24 = ~2K.Double that for attributes. So, transferring a complete screen to showto user would take 2 mins. If you draw the same screen twice (no changes incontent), it would take 4 mins. ``curses`` library cuts that back to mere 2mins. So, alas, ``picotui`` doesn't use curses. That's based on the factthat picotui wants to be compatible with Pycopy, and its philosophyis minimalism - if it's possible to do screen output without ``curses``,let's do just that. It's also grounded in the fact that nobody uses300 baud modems any longer, most apps are run in a local terminal emulatorwith instant updates, most of the remaining are run over LANs whichalso offer fast updates. The modern basic serial connection speed is115200 which is still too slow for real-time fullscreen updates though.That's why I say &quot;alas&quot;. Beyond the optimized screen updates, ``picotui``lacks many other things too: e.g., double-buffering (so redrawing theprevious screen content behind pop-ups is up to you), it lacks geometrymanagers, so calculating coordinates is up to you, etc. Yes, just likethat - I lacked widgets the most, and that's what I implemented. The restis just KISS.Q: But that's really sad!A: Indeed, it is. The only good news is that now you have a choice: ifyou want your app work well with 300 baud modems, you can use otherlibraries, and if you want widgets, you can use `picotui`.Q: So many words, where's a mandatory screenshot?A: Sure:.. image:: https://raw.githubusercontent.com/pfalcon/picotui/master/picotui.pngDocumentation-------------Picotui is an experimental WIP project, and the best documentation currentlyis the source code (https://github.com/pfalcon/picotui/tree/master/picotui)and examples (see below).Examples--------* example_widgets.py - Shows repertoire of widgets, inside a dialog.* example_menu.py - Shows a &quot;fullscreen&quot; application with a main menu.* example_dialogs.py - Shows some standard dialogs.* examples/ - More assorted examples.Known Issues------------Pay attention to what Unicode font you use in your console. Some Linuxdistributions, e.g. Ubuntu, are known to have a broken Unicode fontinstalled by default, which causes various visual artifacts (specifically,Ubuntu Mono font isn't really monospace - many Unicode pseudographiccharacters have double (or so) width, box-drawing symbols have gaps, etc.)</longdescription>
</pkgmetadata>