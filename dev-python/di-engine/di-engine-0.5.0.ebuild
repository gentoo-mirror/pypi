# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="DI-engine"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Decision AI Engine"

HOMEPAGE="https://github.com/opendilab/DI-engine"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${LITERALNAME::1}/${LITERALNAME}/${LITERALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${LITERALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="bsuite_env common_env dist envpool fast gfootball_env k8s mario minigrid_env procgen_env slimevolleygym_env smac_env sokoban style test video"
DEPENDENCIES="dev-python/setuptools[${PYTHON_USEDEP}]
	dev-python/yapf[${PYTHON_USEDEP}]
	dev-python/gym[${PYTHON_USEDEP}]
	dev-python/gymnasium[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/DI-treetensor[${PYTHON_USEDEP}]
	dev-python/DI-toolkit[${PYTHON_USEDEP}]
	dev-python/trueskill[${PYTHON_USEDEP}]
	dev-python/tensorboardX[${PYTHON_USEDEP}]
	dev-python/wandb[${PYTHON_USEDEP}]
	dev-python/matplotlib[${PYTHON_USEDEP}]
	dev-python/easydict[${PYTHON_USEDEP}]
	dev-python/pyyaml[${PYTHON_USEDEP}]
	dev-python/enum-tools[${PYTHON_USEDEP}]
	dev-python/cloudpickle[${PYTHON_USEDEP}]
	dev-python/hickle[${PYTHON_USEDEP}]
	dev-python/tabulate[${PYTHON_USEDEP}]
	dev-python/click[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	dev-python/flask[${PYTHON_USEDEP}]
	dev-python/responses[${PYTHON_USEDEP}]
	dev-python/URLObject[${PYTHON_USEDEP}]
	dev-python/MarkupSafe[${PYTHON_USEDEP}]
	dev-python/pynng[${PYTHON_USEDEP}]
	dev-python/redis[${PYTHON_USEDEP}]
	dev-python/mpire[${PYTHON_USEDEP}]
	bsuite_env? ( dev-python/bsuite[${PYTHON_USEDEP}] )
	common_env? ( dev-python/ale-py[${PYTHON_USEDEP}] )
	common_env? ( dev-python/autorom[${PYTHON_USEDEP}] )
	common_env? ( dev-python/gym[${PYTHON_USEDEP}] )
	common_env? ( dev-python/cmake[${PYTHON_USEDEP}] )
	common_env? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	dist? ( dev-python/redis-py-cluster[${PYTHON_USEDEP}] )
	envpool? ( dev-python/envpool[${PYTHON_USEDEP}] )
	fast? ( dev-python/numpy-stl[${PYTHON_USEDEP}] )
	fast? ( dev-python/numba[${PYTHON_USEDEP}] )
	gfootball_env? ( dev-python/gfootball[${PYTHON_USEDEP}] )
	gfootball_env? ( dev-python/kaggle-environments[${PYTHON_USEDEP}] )
	k8s? ( dev-python/kubernetes[${PYTHON_USEDEP}] )
	mario? ( dev-python/gym-super-mario-bros[${PYTHON_USEDEP}] )
	minigrid_env? ( dev-python/minigrid[${PYTHON_USEDEP}] )
	procgen_env? ( dev-python/procgen[${PYTHON_USEDEP}] )
	slimevolleygym_env? ( dev-python/slimevolleygym[${PYTHON_USEDEP}] )
	smac_env? ( dev-python/pysc2[${PYTHON_USEDEP}] )
	sokoban? ( dev-python/gym-sokoban[${PYTHON_USEDEP}] )
	style? ( dev-python/yapf[${PYTHON_USEDEP}] )
	style? ( dev-python/flake8[${PYTHON_USEDEP}] )
	style? ( dev-python/importlib-metadata[${PYTHON_USEDEP}] )
	test? ( dev-python/coverage[${PYTHON_USEDEP}] )
	test? ( dev-python/mock[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-mock[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-rerunfailures[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-timeout[${PYTHON_USEDEP}] )
	test? ( dev-python/readerwriterlock[${PYTHON_USEDEP}] )
	test? ( dev-python/pandas[${PYTHON_USEDEP}] )
	test? ( dev-python/lz4[${PYTHON_USEDEP}] )
	test? ( dev-python/h5py[${PYTHON_USEDEP}] )
	test? ( dev-python/scipy[${PYTHON_USEDEP}] )
	test? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	test? ( dev-python/gym[${PYTHON_USEDEP}] )
	test? ( dev-python/pettingzoo[${PYTHON_USEDEP}] )
	test? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	video? ( dev-python/moviepy[${PYTHON_USEDEP}] )
	video? ( dev-python/imageio[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
