<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Asklora PortalShared utilities and helper classes used in Asklora projects## Contents1. Clients for external services (MarketData, Broker, PriceData, DAMECAClient, DAMFBClient) and their supporting classes (DAM, pydantic models for xml serialising and de-serialising)2. Helper classes (SingletonMeta, ExtendedEnum, PGPHelper)3. Helper functions (deep_get, get_file_size, get_file_sha1)## Information on specific sections### Broker, PriceData and MarketData client#### required .env config when importing these- `BROKER_API_URL=brokerurl`- `MARKET_API_URL=market url`- `BROKER_KEY=key`- `BROKER_SECRET=secret`#### usage```pythonfrom asklora import Brokerbroker = Broker()broker.create_account(...)```or you can use our Portal class to get the specific model```pythonimport askloraportal = asklora.Portal()rest = portal.get_broker_client() # get a REST client for trade, user, position , ordermarketrest = portal.get_market_client() # get a REST client for market dataeventclient = portal.get_event_client() # get an event client for trade, user, position, order```### PriceData (for IEX)#### required .env config- `IEX_API_URL`- `IEX_TOKEN`#### usage```pythonfrom asklora import PriceDataprice_data = PriceData()price_data.get_lastestPrice(&quot;MSFT&quot;)```### DAMECAClient and DAMFBClient#### required .env config- `DAM_URL`- `DAM_CSID`#### usageFor these clients, you can find the Pydantic models needed by some of the class methods in the `models` and `enums` module.for example, in the `DAMECAClient`, in the `generate_application_payload` method, the first argument accepts `DAMApplicationPayload` model that will automatically processed to xml the API endpoint needs.### examples- DAMECAClient  ```python  from asklora import DAMECAClient, PGPHelper  from asklora.models import DAMApplicationPayload  client = DAMECAClient()  # Build payload  payload = DAMApplicationPayload(      user_id=56,      first_name=&quot;Jane&quot;,      last_name=&quot;Smith&quot;,      ...  )  # Needed for encryption  pgp_helper = PGPHelper(      private_key_path=...,      public_key_path=...,      remote_public_key_path=...,  )  # Send the request  client.create_account(payload, pgp_helper=pgp_helper)  ```- DAMFBClient  ```python  from asklora import DAMFBClient, PGPHelper  from asklora.models import InstructionSet, InternalCashTransfer, CancelTransaction  client = DAMFBClient()  instruction_set = InstructionSet(      instructions=[          InternalCashTransfer(             id=4,             source=&quot;U199516&quot;,             destination=&quot;U34516&quot;,             amount=1000,             currency=&quot;USD&quot;,          ),          CancelTransaction(             id=5,             ib_instr_id=&quot;3&quot;,             reason=&quot;Wrong destination&quot;,          ),      ]  )  pgp_helper = PGPHelper(      private_key_path=...,      public_key_path=...,      remote_public_key_path=...,  )  client.create_instruction(instruction_set, pgp_helper=pgp_helper)  # if needed, you can also send xml directly  payload = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  &lt;instruction_set    xmlns=&quot;http://www.interactivebrokers.com/fbfb_instruction_set&quot;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;    xsi:schemaLocation=&quot;http://www.interactivebrokers.com/fbfb_instruction_set fbfb_instruction_set.xsd &quot;    creation_date=&quot;2019-01-11&quot; id=&quot;2450&quot; version=&quot;1&quot;&gt;    &lt;close_account id=&quot;2450&quot;&gt;        &lt;client_ib_acct_id&gt;U1234567&lt;/client_ib_acct_id&gt;        &lt;close_reason&gt; No longer needed &lt;/close_reason&gt;    &lt;/close_account&gt;  &lt;/instruction_set&gt;&quot;&quot;&quot;  client.create_instruction(payload, pgp_helper=pgp_helper)  ```- Both  You can also initialise one or both of the classes above like this:  ```python  from asklora import IBClient  eca_client = IBClient.get_ECA_client()  fb_client = IBClient.get_FB_client()  ```</longdescription>
</pkgmetadata>