<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## MulticallableEasy way to work with Multicall package### Installation```shellpip install -U multicallable```### UsageImporting Web3```python&gt;&gt;&gt; from web3 import Web3```Initializing Web3 instance```python&gt;&gt;&gt; ETH_RPC_URL = 'https://rpc.ankr.com/eth'&gt;&gt;&gt; w3 = Web3(Web3.HTTPProvider(ETH_RPC_URL))```Importing Multicallable```python&gt;&gt;&gt; from multicallable import Multicallable```Initializing Multicallable instance for Deus token```python# ERC20 ABI string is cropped for readability&gt;&gt;&gt; ERC20_ABI = '[{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;name&quot;, ...&gt;&gt;&gt; DEUS_TOKEN = '0xDE5ed76E7c05eC5e4572CfC88d1ACEA165109E44'&gt;&gt;&gt; deus = Multicallable(DEUS_TOKEN, ERC20_ABI, w3)```Calling balanceOf function for a list of addresses```python&gt;&gt;&gt; addresses = [...     '0xa345c89c07fEB0A13937eecE0204327271904cB7',...     '0xF493284a730e3D561Bf81f52991AF0C8D9227C35',...     '0x19dceFD603ea112CF547Cdddb8D68f61c6F4c73C',...     '0x633cBf6347ddddb5fEc65ad803b4e0B282ADdBd7',... ]&gt;&gt;&gt; deus.balanceOf(addresses).call()[3955776201653330000000, 1499972538000000000000, 334010000000000000000, 135760891050327000000]```#### Get more details for call```python&gt;&gt;&gt; addresses = [...     '0xa345c89c07fEB0A13937eecE0204327271904cB7',...     '0xF493284a730e3D561Bf81f52991AF0C8D9227C35',...     '0x19dceFD603ea112CF547Cdddb8D68f61c6F4c73C',...     '0x633cBf6347ddddb5fEc65ad803b4e0B282ADdBd7',... ]&gt;&gt;&gt; deus.balanceOf(addresses).detailed_call()[{'block_number': 54040756,  'result': [3955776201653330000000,             1499972538000000000000,             334010000000000000000,             135760891050327000000]}]```#### Ignore failed callsIf `require_success` is `True`, all calls must return true, otherwise the multicall fails. \The default value is `True`.```python&gt;&gt;&gt; contract_address = '0x15BB7787Be4E03E6Caa09D2fF502564D3eD67Ec2'&gt;&gt;&gt; contract_abi = '[{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;num&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;getNum&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;stateMutability&quot;:&quot;pure&quot;,&quot;type&quot;:&quot;function&quot;}]'&gt;&gt;&gt; mc = Multicallable(contract_address, contract_abi, w3)&gt;&gt;&gt; mc.getNum(list(range(7))).call(require_success=True)Traceback (most recent call last):...web3.exceptions.ContractLogicError: execution reverted: Multicall3: call failed&gt;&gt;&gt; mc.getNum(list(range(7))).call(require_success=False)[ValueError('Bad number!'), 2, 3, 4, 5, ValueError('Bad number!'), 7]```#### Change number of bucketsSet `n` as the number of buckets for calling Multicall contract for large number of calls. \The default value is `1`.```python&gt;&gt;&gt; result = mc.getNum(list(range(70000))).call(require_success=False)Traceback (most recent call last):...ValueError: {'code': -32000, 'message': 'out of gas'}&gt;&gt;&gt; result = mc.getNum(list(range(70000))).call(require_success=False, n=100)&gt;&gt;&gt; len(result)70000```#### Show progress barUse `progress_bar=True` to show progress bar while sending buckets.```python&gt;&gt;&gt; result = mc.getNum(list(range(70000))).call(n=100, progress_bar=True, require_success=False)    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100/100 buckets&gt;&gt;&gt; len(result)70000```#### Use with custom MulticallIt is possible to pass a Multicall instance with custom address and abi to Multicallable```python&gt;&gt;&gt; from multicallable.multicall import Multicall&gt;&gt;&gt; multicall = Multicall(w3, custom_address, custom_abi)&gt;&gt;&gt; mc = Multicallable(contract_address, contract_abi, multicall=multicall)```</longdescription>
</pkgmetadata>