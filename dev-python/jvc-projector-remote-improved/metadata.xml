<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># JVC Projector Remote ImprovedThis implements new features, improvements, and optimizations based on work in https://github.com/bezmi/jvc_projector. This was made with NZ models in mind. Almost every function will work with NX models but I do not guarantee operability for them.This is designed to work with my Home Assistant plugin: https://github.com/iloveicedgreentea/jvc_homeassistant## Installation```# Assuming you have a venv with &gt;=python3.9pip install jvc-projector-remote-improved```## Quick StartSet your network password if you have an NZ model first.```pythonjvc = JVCProjector(host=&quot;ipaddr&quot;, connect_timeout=60, password=&quot;password&quot;)# Commands are passed as a single string delimited by a comma# Everything executes async in the background. Sync interfaces are provided# open menucmd = jvc.exec_command(&quot;menu, menu&quot;)# press left buttoncmd = jvc.exec_command(&quot;menu, left&quot;)# set picture mode to frame adapt HDRcmd = jvc.exec_command(&quot;picture_mode, frame_adapt_hdr&quot;)# turn oncmd = jvc.power_on()```## UsageSee [quick-start](#quick-start) for importingThe commands are structured to use simple keywords and options:```textCommand: low_latencyOption: offcode: jvc.exec_command(&quot;low_latency, off&quot;)``````textCommand: picture_modeOption: hdr_pluscode: jvc.exec_command(&quot;picture_mode, hdr_plus&quot;)```You can also run multiple commands in a row by just giving it a list```pythonjvc.exec_command([&quot;picture_mode, hdr_plus&quot;, &quot;motion_enhance, off&quot;])```Use `print_commands()` to get all the latest support commands. This is dynamically generated at runtime so it is always up to date.## Currently Supported Commands- Power on/off- Lens Memory/Installation Modes- Input HDMI 1 or 2- Power and Low Latency Status- Low Latency Mode on/off- Menu and arrow buttons (Menu, LRUD, back)- Masking- Laser power low/med/high- Laser Dimming off/auto1/auto2- E-shift on/off- Aperture off/auto1/auto2- Anamorphic modes- And many others## Useful Meta functionsThese are opinionated presets so you can have a one-click action to set your settings up for the desired task. This is also supported in home assistant as a service.- async_gaming_mode_hdr()- async_gaming_mode_sdr()- async_hdr_picture_mode()- async_sdr_picture_mode()- async_is_on()- async_get_low_latency_state()## Supported Models- NZ7/NZ8/NZ9 (Network password is required)- NX5/NX7/NX9- Most likely any other D-ILA projector, and possibly older models with ethernet cables.## Home Assistant```yaml# configuration.yamlremote:  - platform: jvc_projectors    name: nz7    password: password    host: 192.168.1.2    scan_interval: 30```## Development```shell# Create venvpython3 -m venv .venvsource .venv/bin/activate``````shell# Edit envcp .env.template .env# edit .env with values```### Adding new commandsAll commands are stored in Enums within `commands.py`. Add them using [this guide](http://pro.jvc.com/pro/attributes/PRESENT/manual/2018_ILA-FPJ_Ext_Command_List_v1.2.pdf) as a reference.### TestingJVC_TEST_POWER: true/false to test power functionsJVC_TEST_FUNCTIONS: true/false to test various button functionsYou can run the test at the local device or run a mock server I made (WIP) to test commands```shell# Venv in one windowpython mock/mochrie.py``````shell# Run tests in other windowsource .envexport JVC_HOST=127.0.0.1make test```</longdescription>
</pkgmetadata>