<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==========Anonymizer==========.. image:: https://img.shields.io/pypi/v/ansible-anonymizer.svg        :target: https://pypi.python.org/pypi/ansible-anonymizer.. image:: https://github.com/ansible/anonymizer/actions/workflows/tox.yml/badge.svg        :target: https://github.com/ansible/anonymizer/actionsLibrary to clean up Ansible tasks from any Personally Identifiable Information (PII)* Free software: Apache Software License 2.0Features--------The library can be used to remove the PII from a multi level structure:.. code-block::   $ python3   &gt;&gt;&gt; from ansible_anonymizer import anonymizer   &gt;&gt;&gt; example = [{&quot;name&quot;: &quot;foo bar&quot;, &quot;email&quot;: &quot;my-email@address.com&quot;}]   &gt;&gt;&gt; anonymizer.anonymize_struct(example)   ['- email: lucas27@example.com\n  name: foo bar\n']But you can also anonymize a block of text:.. code-block::   &gt;&gt;&gt; from ansible_anonymizer import anonymizer   &gt;&gt;&gt; some_text = &quot;&quot;&quot;   ... - name: a task   ...   a_module:   ...     secret: foobar   ... &quot;&quot;&quot;   &gt;&gt;&gt; anonymizer.anonymize_text_block(some_text)   '\n- name: a task\n  a_module:\n    secret: {{ }}\n'You can also use the ``ansible-anonymizer`` command:.. code-block:: console   ansible-anonymizer my-secret-file</longdescription>
</pkgmetadata>