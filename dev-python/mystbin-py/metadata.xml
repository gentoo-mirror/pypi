<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;    &lt;h1&gt;Mystbin.py!&lt;/h1&gt;    &lt;a href='https://mystbinpy.readthedocs.io/en/latest/?badge=latest'&gt;        &lt;img src='https://readthedocs.org/projects/mystbinpy/badge/?version=latest' alt='Documentation Status' /&gt;    &lt;/a&gt;    &lt;a href='https://github.com/PythonistaGuild/mystbin.py/actions/workflows/coverage_and_lint.yaml'&gt;        &lt;img src='https://github.com/PythonistaGuild/mystbin.py/workflows/Type%20Coverage%20and%20Linting/badge.svg?branch=main' alt='Linting status' /&gt;    &lt;/a&gt;    &lt;a href='https://github.com/PythonistaGuild/mystbin.py/actions/workflows/build.yaml'&gt;        &lt;img src='https://github.com/PythonistaGuild/mystbin.py/workflows/Build/badge.svg' alt='Build status' /&gt;    &lt;/a&gt;&lt;/div&gt;&lt;br&gt;A small simple wrapper around the [Mystb.in](https://mystb.in/) API. API docs can be found [here](https://api.mystb.in/docs).Documentation for this wrapper can be found [here](https://mystbinpy.readthedocs.io/en/stable/).If you want the docs for the `main` branch, those can be found [here](https://mystbinpy.readthedocs.io/en/latest/).----------### Features- [x] - Creating pastes.  - [ ] Supporting attachments.- [ ] - Editing pastes.    - Pending design work.- [x] - Deleting pastes.- [x] - Getting pastes.- [ ] - User endpoints.- [ ] - Sync client.  - This one will take some time as I have no motivation to do it, but PRs are welcome if others want to do it.### InstallationThis project will be on [PyPI](https://pypi.org/project/mystbin.py/) as a stable release, you can always find that there.Installing via `pip`:```shellpython -m pip install -U mystbin.py```Installing from source:```shellpython -m pip install git+https://github.com/PythonistaGuild/mystbin.py.git```### Usage examples```py# async example - it will default to asyncimport mystbinclient = mystbin.Client()paste = await client.create_paste(filename=&quot;Hello.txt&quot;, content=&quot;Hello there!&quot;)# we also support passing a mystbin.File directly to the `file=` kwarg!str(paste)&gt;&gt;&gt; 'https://mystb.in/&lt;your generated ID&gt;'get_paste = await client.get_paste(&quot;&lt;your generated ID&gt;&quot;)get_paste.files[0].content&gt;&gt;&gt; &quot;Hello there!&quot;get_paste.created_at&gt;&gt;&gt; datetime.datetime(2020, 10, 6, 10, 53, 57, 556741)```Or if you want to create a paste with multiple files...```pyimport mystbinfile = mystbin.File(filename=&quot;File1.txt&quot;, content=&quot;Hello there!&quot;)file2 = mystbin.File(filename=&quot;test.py&quot;, content=&quot;print('hello!')&quot;)paste = await client.create_paste(files=[file, file2])for file in paste.files:    print(file.content)&gt;&gt;&gt; &quot;Hello there!&quot;&gt;&gt;&gt; &quot;print('hello!')&quot;```If you have any question please feel free to join the Pythonista Discord server:&lt;div align=&quot;left&quot;&gt;    &lt;a href=&quot;https://discord.gg/RAKc3HF&quot;&gt;        &lt;img src=&quot;https://discordapp.com/api/guilds/490948346773635102/widget.png?style=banner2&quot; alt=&quot;Discord Server&quot;/&gt;    &lt;/a&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>