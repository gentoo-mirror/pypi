<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===================python-ripple-lib===================| **DEPRECATION NOTICE**: this library is not actively maintained, please consider using the Python library which was made by `XRPLF &lt;https://xrplf.org/&gt;` and which is maintained. You can find information about this library via links below:| `xrpl-py on Github &lt;https://github.com/XRPLF/xrpl-py&gt;`_| `xrpl-py on PyPI &lt;https://pypi.org/project/xrpl-py/&gt;`_| | python-ripple-lib is a client library to access Ripple `rippled API &lt;https://developers.ripple.com/rippled-api.html&gt;`_ and `Data API &lt;https://developers.ripple.com/data-api.html&gt;`_.| Currently it supports public and admin methods (some of them still are work in progress though). List of implemented methods is displayed below. Basically, it's just a wrapper on top of http requests made to API.Available on `PyPi &lt;https://pypi.org/project/python-ripple-lib/&gt;`_Installation-------------To install the package from PyPi run the following command::    pip install python-ripple-libIf you want to install package from this repo, use ``setup.py``::    python setup.py installIf you want to install package just for development purposes, use another command::    python setup.py developThis command creates symlinks to package files instead of copying it to package directoryJSON-RPC Methods----------------| Most of JSON-RPC methods are implemented inside, for the full list of methods please refer to list of `Public &lt;https://developers.ripple.com/public-rippled-methods.html&gt;`_ and `Admin &lt;https://developers.ripple.com/admin-rippled-methods.html&gt;`_ methods from ripple documentation| How to use:.. code-block:: python3    from ripple_api import RippleRPCClient    # module supports authentication as well    rpc = RippleRPCClient('http://s1.ripple.com:51234/', username='&lt;username&gt;', password='&lt;password&gt;')    account_info = rpc.account_info('r9cZA1mLK5R5Am25ArfXFmqgNwjZgnfk59')Data API Methods----------------| Most of Data API requests are implemented here as well, fll list located in `here &lt;https://developers.ripple.com/data-api.html&gt;`_| How to use:.. code-block:: python    from ripple_api import RippleDataAPIClient    api = RippleDataAPIClient('https://data.ripple.com')    identifier = '3170DA37CE2B7F045F889594CBC323D88686D2E90E8FFD2BBCD9BAD12E416DB5'    query_params = dict(transactions='true')    ledger_info = api.get_ledger(ledger_identifier=identifier, **query_params)| Example of get_transactions() query:.. code-block:: python   from ripple_api import RippleDataAPIClient   from pprint import pprint   api = RippleDataAPIClient('https://data.ripple.com')   # to get name of a specific transaction type please refer to this link:   # https://developers.ripple.com/transaction-types.html   query_params = dict(type=&quot;Payment&quot;)   txs = api.get_transactions(**query_params)   pprint(txs)Additional methods------------------Send XRP from address tp address via Account instance:.. code-block:: python    from ripple_api import Account    taker = 'rYuHe4VogMzYmvHpSsgGxRH97UvqumgER'    issuer = 'rMEmLrfkfooLjdkerU5TKTcAVpfy9fpSxt'    seed = '&lt;account_seed&gt;'    account = Account('http://localhost:5005', issuer, seed)    tx_info = account.send_xrp(issuer=issuer, taker=taker, secret=seed, amount=10)Contributing------------------------1. Fork this project2. Clone it locally3. Add your changes4. Run tests:::    make testor::    python -m unittest -v5. If tests are successful and everything is OK, commit to your local fork6. Submit a pull request to this repo</longdescription>
</pkgmetadata>