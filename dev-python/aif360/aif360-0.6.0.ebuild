# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="IBM AI Fairness 360"

HOMEPAGE="https://github.com/Trusted-AI/AIF360"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="adversarialdebiasing all art disparateimpactremover docs fairadapt infairness lfr lime notebooks optimaltransport optimpreproc reductions tests"
DEPENDENCIES=">=dev-python/numpy-1.16[${PYTHON_USEDEP}]
	>=dev-python/scipy-1.2.0[${PYTHON_USEDEP}]
	>=dev-python/pandas-0.24.0[${PYTHON_USEDEP}]
	>=dev-python/scikit-learn-1.0[${PYTHON_USEDEP}]
	dev-python/matplotlib[${PYTHON_USEDEP}]
	art? ( dev-python/adversarial-robustness-toolbox[${PYTHON_USEDEP}] )
	adversarialdebiasing? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	disparateimpactremover? ( dev-python/BlackBoxAuditing[${PYTHON_USEDEP}] )
	fairadapt? ( dev-python/rpy2[${PYTHON_USEDEP}] )
	lfr? ( dev-python/torch[${PYTHON_USEDEP}] )
	lime? ( dev-python/lime[${PYTHON_USEDEP}] )
	optimpreproc? ( dev-python/cvxpy[${PYTHON_USEDEP}] )
	optimaltransport? ( dev-python/POT[${PYTHON_USEDEP}] )
	reductions? ( dev-python/fairlearn[${PYTHON_USEDEP}] )
	all? ( dev-python/adversarial-robustness-toolbox[${PYTHON_USEDEP}] )
	all? ( dev-python/igraph[${PYTHON_USEDEP}] )
	all? ( dev-python/fairlearn[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	all? ( dev-python/rpy2[${PYTHON_USEDEP}] )
	all? ( dev-python/skorch[${PYTHON_USEDEP}] )
	all? ( dev-python/infairness[${PYTHON_USEDEP}] )
	all? ( dev-python/cvxpy[${PYTHON_USEDEP}] )
	all? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pytest-cov-2.8.1[${PYTHON_USEDEP}] )
	all? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	all? ( >dev-python/jinja-3.1.0[${PYTHON_USEDEP}] )
	all? ( dev-python/BlackBoxAuditing[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pytest-3.5[${PYTHON_USEDEP}] )
	all? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	all? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	all? ( dev-python/ipympl[${PYTHON_USEDEP}] )
	all? ( dev-python/lime[${PYTHON_USEDEP}] )
	all? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	all? ( dev-python/POT[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	docs? ( >dev-python/jinja-3.1.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	docs? ( dev-python/fairlearn[${PYTHON_USEDEP}] )
	infairness? ( dev-python/skorch[${PYTHON_USEDEP}] )
	infairness? ( dev-python/infairness[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/igraph[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/ipympl[${PYTHON_USEDEP}] )
	tests? ( dev-python/cvxpy[${PYTHON_USEDEP}] )
	tests? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	tests? ( dev-python/BlackBoxAuditing[${PYTHON_USEDEP}] )
	tests? ( dev-python/torch[${PYTHON_USEDEP}] )
	tests? ( dev-python/lime[${PYTHON_USEDEP}] )
	tests? ( dev-python/adversarial-robustness-toolbox[${PYTHON_USEDEP}] )
	tests? ( dev-python/fairlearn[${PYTHON_USEDEP}] )
	tests? ( dev-python/rpy2[${PYTHON_USEDEP}] )
	tests? ( dev-python/skorch[${PYTHON_USEDEP}] )
	tests? ( dev-python/infairness[${PYTHON_USEDEP}] )
	tests? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	tests? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	tests? ( dev-python/igraph[${PYTHON_USEDEP}] )
	tests? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	tests? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	tests? ( dev-python/ipympl[${PYTHON_USEDEP}] )
	tests? ( dev-python/POT[${PYTHON_USEDEP}] )
	tests? ( >=dev-python/pytest-3.5[${PYTHON_USEDEP}] )
	tests? ( >=dev-python/pytest-cov-2.8.1[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
