<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>###  Qt framework for building graphql driven QML applications[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qtgql?style=for-the-badge)](https://pypi.org/project/qtgql/)[![PyPI](https://img.shields.io/pypi/v/qtgql?style=for-the-badge)](https://pypi.org/project/qtgql/)[![GitHub Workflow Status (with branch)](https://img.shields.io/github/actions/workflow/status/nrbnlulu/qtgql/tests.yml?branch=main&amp;style=for-the-badge)](https://github.com/nrbnlulu/qtgql/actions/workflows/tests.yml)[![Codecov](https://img.shields.io/codecov/c/github/nrbnlulu/qtgql?style=for-the-badge)](https://app.codecov.io/gh/nrbnlulu/qtgql)[![Discord](https://img.shields.io/discord/1067870318301032558?label=discord&amp;style=for-the-badge)](https://discord.gg/5vmRRJp9fu)![PyPI - Downloads](https://img.shields.io/pypi/dm/qtgql?style=for-the-badge)### DisclaimerThis project is currently under development, and **it is not** production ready,You can play-around and tell us what is wrong / missing / awesome :smile:.[Visit the docs for more info](https://nrbnlulu.github.io/qtgql/)### Features- [x] object types, for each field there is a corresponding `Property`- [x] enums- [x] custom scalars- [x] Unions- [x] interfaces- [x] Garbage collection- [x] Type-safe Mutation handlers- [x] Type-safe Query handlers: queries your server when a component uses this query (or imperatively fetched).- [x] Query updates: fetch the same query multiple times would not instantiate everything from scratchit would compare the current data with data received and emit __only__ the signals that are needed.- [x] Native-Qt client implementation of &quot;[graphql-transport-ws](https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md)&quot; protocol (supports subscriptions) - You can provide your own network layer though.- [x] Mutations.- [x] Subscriptions.- [x] Fully typed input variables.#### Helpers- [x] generic models that get created from dictionaries (with update, pop, insert implemented by default)- [x] `Property` classes that are accessible from QML, with dataclasses  syntax (using attrs)- [x] `@slot` - decorator to be replaced with `QtCore.Slot()` that get types from type hints.### TODO- Migrate to C++- Fragments?</longdescription>
</pkgmetadata>