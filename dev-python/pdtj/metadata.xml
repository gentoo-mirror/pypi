<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![PyPI - Downloads](https://img.shields.io/pypi/dm/pdtj)![PyPI](https://img.shields.io/pypi/v/pdtj)![PyPI - Wheel](https://img.shields.io/pypi/wheel/pdtj)![PyPI - License](https://img.shields.io/pypi/l/pdtj)# PDTJ - (Python Docstring To Json)## IntroductionThis project was created to solve a personal need for a flexible and simple tool to retrieve allPython docstrings and convert them into a JSON format. The tool's design provides flexibility tocustomize the parsing and documentation process, making it easy to navigate through the codebase's structure anddocumentation.This project aims to provide a powerful tool for parsing and documenting Python code within a directory. The tool worksby recursively traversing a directory and identifying all Python files contained within it. It then extracts thedocstrings of these files, organizing them into a dictionary format that captures the structure and documentation of theentire codebase. This dictionary is then written to a JSON file, making it easy to view and access the informationit contains.Whether you're a software developer or a codebase maintainer,this tool can help you gain a deeper understanding of your Python code and streamline the documentationprocess.Moreover, this tool aims to simplify the process of generating a documentation webpage byusing the JSON file. It provides a clear overview of the codebase's structure and documentation,allowing users to quickly navigate through the code and understand its functionality.The project is designed to be flexible and customizable, enabling users to tailor the parsingand documentation process to their specific needs. With this tool, you can easily generate comprehensivedocumentation for your Python codebase and share it with others.# How to Use## InstallationTo install the tool, run the following command:```shellpip install pdtj```Next, create a ```.pdtj.yaml``` file in the root directory of your project and specify the following information:```shellname: &lt;project name&gt; # replace &lt;project name&gt; with your project's nameshelve: &lt;shelve name&gt; # choose any name you like for &lt;shelve name&gt;sub-project: &lt;sub-project name&gt; # choose any name you like for &lt;sub-project name&gt;```## Generating the DocumentationOnce you have installed the tool and configured the ```.pdtj.yaml``` file, you can generate the documentation by runningthe following command:```shellpdtj```If everything is set up correctly, the tool will traverse your project directory, extract the docstrings from all Pythonfiles, and create a JSON file containing the documentation. The resulting file can be used to generate adocumentation webpage or for any other purpose.# Features missing- [ ] Log- [ ] Unit tests# LicenseThis project is licensed under the MIT License - see the [LICENSE](https://github.com/Joaopeuko/pdtj/blob/master/LICENSE) file for details.</longdescription>
</pkgmetadata>