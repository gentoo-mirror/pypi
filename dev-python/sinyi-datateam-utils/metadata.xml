<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Introduction Sinyi Datateam common module (for databricks environment)# VersionLatest releases - https://pypi.org/project/sinyi-datateam-utils/# Getting Started1.Installation process - Module has already installed in databricks cluster# Use Guideline## sinyi-utils modulemodule tree structure:```.├── __init__.py├── db_connector.py└── format_tool.py```### format_tool``` pythonfrom sinyi_utils.format_tool import AESCrypto, roc_era_to_ad, Road8```1. AESCrypto: google decrypt &amp; encrypt    - For envitornment databricks-dev/databricks-stg/databricks-prd    ```python        secrect_key = dbutils.secrets.get(scope = &quot;label360-kv-dev&quot;, key = &quot;AESCrypto-key&quot;)        secrect_iv =  dbutils.secrets.get(scope = &quot;label360-kv-dev&quot;, key = &quot;AESCrypto-iv&quot;)        aesc_crypto = AESCrypto(secrect_key, secrect_iv)    ```    - method: decrypt/encrypt    ```python        aesc_crypto.decrypt('QR/JKD7pcH+/lOlmejP9WjB94FTtnR0rRPrcSyorHwU=')    ```2. roc_era_to_ad : transfer Chinese date to AD    Example:    ```python    roc_era_to_ad('0801122')    # Out: '19911122'    ```3. Road8  - For envitornment databricks-dev/databricks-stg/databricks-prd    ```python        env = os.environ['ENV']        api_key = dbutils.secrets.get(scope = f&quot;label360-kv-{env}&quot;, key = &quot;road8-api-key&quot;)        host = dbutils.secrets.get(scope = f&quot;label360-kv-{env}&quot;, key = &quot;road8-host&quot;)        road8_normalize = Road8(api_key, host)    ``` - Normalize address: response will get entire json from api     ```python        road8_normalize.normalize('臺北市萬華區武成街56巷4號二樓')    ```### db_connector```pythonfrom sinyi_utils.db_connector import upload_blob_from_memory, DW001Connector, AzureADSConnector...```1. MssqlConnector : connector to all kinds of db#### method : query(query,database)```python# DW001Connectorquery=  &quot;&quot;&quot;            TRUNCATE TABLE [TMP].[dbo].[TMP_SYNAPSE_PIPELINE_LOG_test]         &quot;&quot;&quot;DW001Connector.query(query,database='TMP')# AzureADSConnector/AzureTMPConnectorquery=  &quot;&quot;&quot;            DELETE FROM [dbo].[SA_GENE_LIST] WHERE GENE_ID='M106_P13af_a' and MOBILE_NO = 999999;       &quot;&quot;&quot;AzureTMPConnector.query(query)# out: 1 rows affected```#### method : connector(database)```python # DW001Connectorquery = '''SELECT TOP(10)[AGEN_CUST_ID]      ,[OBJ_ID]      ,[RECE_ID]      ,[TRADE_CATE]      ,[CUST_CATE]      ,[DEAL_DATE]  FROM [DIM].[dbo].[DIM_CUSTOMER_DEAL_STATUS_DATE]  '''df = pd.read_sql(query,DW001Connector.connector(database='DIM'))# AzureADSConnector/AzureTMPConnectorquery = '''SELECT TOP (10) [MOBILE_NO]      ,[GENE_VALUE]  FROM [dbo].[SA_GENE_RESULT_OUTPUT]  '''df = pd.read_sql(query,AzureADSConnector.connector())```# ContributeTODO: Explain how other users and developers can contribute to make your code better. </longdescription>
</pkgmetadata>