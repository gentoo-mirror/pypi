<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;types-aiobotocore-networkmanager&quot;&gt;&lt;/a&gt;# types-aiobotocore-networkmanager[![PyPI - types-aiobotocore-networkmanager](https://img.shields.io/pypi/v/types-aiobotocore-networkmanager.svg?color=blue)](https://pypi.org/project/types-aiobotocore-networkmanager)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-networkmanager.svg?color=blue)](https://pypi.org/project/types-aiobotocore-networkmanager)[![Docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_networkmanager/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-networkmanager?color=blue)](https://pypistats.org/packages/types-aiobotocore-networkmanager)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[aiobotocore.NetworkManager 2.5.2](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/networkmanager.html#NetworkManager)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in[types-aiobotocore-networkmanager docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_networkmanager/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [types-aiobotocore-networkmanager](#types-aiobotocore-networkmanager)  - [How to install](#how-to-install)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `types-aiobotocore` for `NetworkManager` service.```bash# install with aiobotocore type annotationspython -m pip install 'types-aiobotocore[networkmanager]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'types-aiobotocore-lite[networkmanager]'# standalone installationpython -m pip install types-aiobotocore-networkmanager```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y types-aiobotocore-networkmanager```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `types-aiobotocore[networkmanager]` in your environment:```bashpython -m pip install 'types-aiobotocore[networkmanager]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `aiobotocore` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `types-aiobotocore-lite[networkmanager]` in your environment:```bashpython -m pip install 'types-aiobotocore-lite[networkmanager]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `types-aiobotocore` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `types-aiobotocore` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[networkmanager]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed  `types-aiobotocore`Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `types-aiobotocore[networkmanager]` with services you use in your  environment:```bashpython -m pip install 'types-aiobotocore[networkmanager]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `types-aiobotocore[networkmanager]` in your environment:```bashpython -m pip install 'types-aiobotocore[networkmanager]'````Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `types-aiobotocore[networkmanager]` in your environment:```bashpython -m pip install 'types-aiobotocore[networkmanager]'```Optionally, you can install `types-aiobotocore` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`NetworkManagerClient` provides annotations for`session.create_client(&quot;networkmanager&quot;)`.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_networkmanager import NetworkManagerClientsession = get_session()async with session.create_client(&quot;networkmanager&quot;) as client:    client: NetworkManagerClient    # now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`types_aiobotocore_networkmanager.paginator` module contains type annotationsfor all paginators.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_networkmanager import NetworkManagerClientfrom types_aiobotocore_networkmanager.paginator import (    DescribeGlobalNetworksPaginator,    GetConnectPeerAssociationsPaginator,    GetConnectionsPaginator,    GetCoreNetworkChangeEventsPaginator,    GetCoreNetworkChangeSetPaginator,    GetCustomerGatewayAssociationsPaginator,    GetDevicesPaginator,    GetLinkAssociationsPaginator,    GetLinksPaginator,    GetNetworkResourceCountsPaginator,    GetNetworkResourceRelationshipsPaginator,    GetNetworkResourcesPaginator,    GetNetworkTelemetryPaginator,    GetSitesPaginator,    GetTransitGatewayConnectPeerAssociationsPaginator,    GetTransitGatewayRegistrationsPaginator,    ListAttachmentsPaginator,    ListConnectPeersPaginator,    ListCoreNetworkPolicyVersionsPaginator,    ListCoreNetworksPaginator,    ListPeeringsPaginator,)session = get_session()async with session.create_client(&quot;networkmanager&quot;) as client:    client: NetworkManagerClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    describe_global_networks_paginator: DescribeGlobalNetworksPaginator = client.get_paginator(        &quot;describe_global_networks&quot;    )    get_connect_peer_associations_paginator: GetConnectPeerAssociationsPaginator = (        client.get_paginator(&quot;get_connect_peer_associations&quot;)    )    get_connections_paginator: GetConnectionsPaginator = client.get_paginator(&quot;get_connections&quot;)    get_core_network_change_events_paginator: GetCoreNetworkChangeEventsPaginator = (        client.get_paginator(&quot;get_core_network_change_events&quot;)    )    get_core_network_change_set_paginator: GetCoreNetworkChangeSetPaginator = client.get_paginator(        &quot;get_core_network_change_set&quot;    )    get_customer_gateway_associations_paginator: GetCustomerGatewayAssociationsPaginator = (        client.get_paginator(&quot;get_customer_gateway_associations&quot;)    )    get_devices_paginator: GetDevicesPaginator = client.get_paginator(&quot;get_devices&quot;)    get_link_associations_paginator: GetLinkAssociationsPaginator = client.get_paginator(        &quot;get_link_associations&quot;    )    get_links_paginator: GetLinksPaginator = client.get_paginator(&quot;get_links&quot;)    get_network_resource_counts_paginator: GetNetworkResourceCountsPaginator = client.get_paginator(        &quot;get_network_resource_counts&quot;    )    get_network_resource_relationships_paginator: GetNetworkResourceRelationshipsPaginator = (        client.get_paginator(&quot;get_network_resource_relationships&quot;)    )    get_network_resources_paginator: GetNetworkResourcesPaginator = client.get_paginator(        &quot;get_network_resources&quot;    )    get_network_telemetry_paginator: GetNetworkTelemetryPaginator = client.get_paginator(        &quot;get_network_telemetry&quot;    )    get_sites_paginator: GetSitesPaginator = client.get_paginator(&quot;get_sites&quot;)    get_transit_gateway_connect_peer_associations_paginator: GetTransitGatewayConnectPeerAssociationsPaginator = client.get_paginator(        &quot;get_transit_gateway_connect_peer_associations&quot;    )    get_transit_gateway_registrations_paginator: GetTransitGatewayRegistrationsPaginator = (        client.get_paginator(&quot;get_transit_gateway_registrations&quot;)    )    list_attachments_paginator: ListAttachmentsPaginator = client.get_paginator(&quot;list_attachments&quot;)    list_connect_peers_paginator: ListConnectPeersPaginator = client.get_paginator(        &quot;list_connect_peers&quot;    )    list_core_network_policy_versions_paginator: ListCoreNetworkPolicyVersionsPaginator = (        client.get_paginator(&quot;list_core_network_policy_versions&quot;)    )    list_core_networks_paginator: ListCoreNetworksPaginator = client.get_paginator(        &quot;list_core_networks&quot;    )    list_peerings_paginator: ListPeeringsPaginator = client.get_paginator(&quot;list_peerings&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`types_aiobotocore_networkmanager.literals` module contains literals extractedfrom shapes that can be used in user code for type checking.```pythonfrom types_aiobotocore_networkmanager.literals import (    AttachmentStateType,    AttachmentTypeType,    ChangeActionType,    ChangeSetStateType,    ChangeStatusType,    ChangeTypeType,    ConnectPeerAssociationStateType,    ConnectPeerStateType,    ConnectionStateType,    ConnectionStatusType,    ConnectionTypeType,    CoreNetworkPolicyAliasType,    CoreNetworkStateType,    CustomerGatewayAssociationStateType,    DescribeGlobalNetworksPaginatorName,    DeviceStateType,    GetConnectPeerAssociationsPaginatorName,    GetConnectionsPaginatorName,    GetCoreNetworkChangeEventsPaginatorName,    GetCoreNetworkChangeSetPaginatorName,    GetCustomerGatewayAssociationsPaginatorName,    GetDevicesPaginatorName,    GetLinkAssociationsPaginatorName,    GetLinksPaginatorName,    GetNetworkResourceCountsPaginatorName,    GetNetworkResourceRelationshipsPaginatorName,    GetNetworkResourcesPaginatorName,    GetNetworkTelemetryPaginatorName,    GetSitesPaginatorName,    GetTransitGatewayConnectPeerAssociationsPaginatorName,    GetTransitGatewayRegistrationsPaginatorName,    GlobalNetworkStateType,    LinkAssociationStateType,    LinkStateType,    ListAttachmentsPaginatorName,    ListConnectPeersPaginatorName,    ListCoreNetworkPolicyVersionsPaginatorName,    ListCoreNetworksPaginatorName,    ListPeeringsPaginatorName,    PeeringStateType,    PeeringTypeType,    RouteAnalysisCompletionReasonCodeType,    RouteAnalysisCompletionResultCodeType,    RouteAnalysisStatusType,    RouteStateType,    RouteTableTypeType,    RouteTypeType,    SiteStateType,    TransitGatewayConnectPeerAssociationStateType,    TransitGatewayRegistrationStateType,    TunnelProtocolType,    NetworkManagerServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,)def check_value(value: AttachmentStateType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`types_aiobotocore_networkmanager.type_defs` module contains structures andshapes assembled to typed dictionaries for additional type checking.```pythonfrom types_aiobotocore_networkmanager.type_defs import (    AWSLocationTypeDef,    AcceptAttachmentRequestRequestTypeDef,    AccountStatusTypeDef,    AssociateConnectPeerRequestRequestTypeDef,    ConnectPeerAssociationTypeDef,    AssociateCustomerGatewayRequestRequestTypeDef,    CustomerGatewayAssociationTypeDef,    AssociateLinkRequestRequestTypeDef,    LinkAssociationTypeDef,    AssociateTransitGatewayConnectPeerRequestRequestTypeDef,    TransitGatewayConnectPeerAssociationTypeDef,    TagTypeDef,    BandwidthTypeDef,    BgpOptionsTypeDef,    ConnectAttachmentOptionsTypeDef,    ConnectPeerBgpConfigurationTypeDef,    ConnectionHealthTypeDef,    CoreNetworkChangeEventValuesTypeDef,    CoreNetworkChangeValuesTypeDef,    CoreNetworkEdgeTypeDef,    CoreNetworkPolicyErrorTypeDef,    CoreNetworkPolicyVersionTypeDef,    CoreNetworkSegmentEdgeIdentifierTypeDef,    CoreNetworkSegmentTypeDef,    LocationTypeDef,    VpcOptionsTypeDef,    DeleteAttachmentRequestRequestTypeDef,    DeleteConnectPeerRequestRequestTypeDef,    DeleteConnectionRequestRequestTypeDef,    DeleteCoreNetworkPolicyVersionRequestRequestTypeDef,    DeleteCoreNetworkRequestRequestTypeDef,    DeleteDeviceRequestRequestTypeDef,    DeleteGlobalNetworkRequestRequestTypeDef,    DeleteLinkRequestRequestTypeDef,    DeletePeeringRequestRequestTypeDef,    DeleteResourcePolicyRequestRequestTypeDef,    DeleteSiteRequestRequestTypeDef,    DeregisterTransitGatewayRequestRequestTypeDef,    DescribeGlobalNetworksRequestDescribeGlobalNetworksPaginateTypeDef,    DescribeGlobalNetworksRequestRequestTypeDef,    DisassociateConnectPeerRequestRequestTypeDef,    DisassociateCustomerGatewayRequestRequestTypeDef,    DisassociateLinkRequestRequestTypeDef,    DisassociateTransitGatewayConnectPeerRequestRequestTypeDef,    ExecuteCoreNetworkChangeSetRequestRequestTypeDef,    GetConnectAttachmentRequestRequestTypeDef,    GetConnectPeerAssociationsRequestGetConnectPeerAssociationsPaginateTypeDef,    GetConnectPeerAssociationsRequestRequestTypeDef,    GetConnectPeerRequestRequestTypeDef,    GetConnectionsRequestGetConnectionsPaginateTypeDef,    GetConnectionsRequestRequestTypeDef,    GetCoreNetworkChangeEventsRequestGetCoreNetworkChangeEventsPaginateTypeDef,    GetCoreNetworkChangeEventsRequestRequestTypeDef,    GetCoreNetworkChangeSetRequestGetCoreNetworkChangeSetPaginateTypeDef,    GetCoreNetworkChangeSetRequestRequestTypeDef,    GetCoreNetworkPolicyRequestRequestTypeDef,    GetCoreNetworkRequestRequestTypeDef,    GetCustomerGatewayAssociationsRequestGetCustomerGatewayAssociationsPaginateTypeDef,    GetCustomerGatewayAssociationsRequestRequestTypeDef,    GetDevicesRequestGetDevicesPaginateTypeDef,    GetDevicesRequestRequestTypeDef,    GetLinkAssociationsRequestGetLinkAssociationsPaginateTypeDef,    GetLinkAssociationsRequestRequestTypeDef,    GetLinksRequestGetLinksPaginateTypeDef,    GetLinksRequestRequestTypeDef,    GetNetworkResourceCountsRequestGetNetworkResourceCountsPaginateTypeDef,    GetNetworkResourceCountsRequestRequestTypeDef,    NetworkResourceCountTypeDef,    GetNetworkResourceRelationshipsRequestGetNetworkResourceRelationshipsPaginateTypeDef,    GetNetworkResourceRelationshipsRequestRequestTypeDef,    RelationshipTypeDef,    GetNetworkResourcesRequestGetNetworkResourcesPaginateTypeDef,    GetNetworkResourcesRequestRequestTypeDef,    GetNetworkTelemetryRequestGetNetworkTelemetryPaginateTypeDef,    GetNetworkTelemetryRequestRequestTypeDef,    GetResourcePolicyRequestRequestTypeDef,    GetResourcePolicyResponseTypeDef,    GetRouteAnalysisRequestRequestTypeDef,    GetSiteToSiteVpnAttachmentRequestRequestTypeDef,    GetSitesRequestGetSitesPaginateTypeDef,    GetSitesRequestRequestTypeDef,    GetTransitGatewayConnectPeerAssociationsRequestGetTransitGatewayConnectPeerAssociationsPaginateTypeDef,    GetTransitGatewayConnectPeerAssociationsRequestRequestTypeDef,    GetTransitGatewayPeeringRequestRequestTypeDef,    GetTransitGatewayRegistrationsRequestGetTransitGatewayRegistrationsPaginateTypeDef,    GetTransitGatewayRegistrationsRequestRequestTypeDef,    GetTransitGatewayRouteTableAttachmentRequestRequestTypeDef,    GetVpcAttachmentRequestRequestTypeDef,    ListAttachmentsRequestListAttachmentsPaginateTypeDef,    ListAttachmentsRequestRequestTypeDef,    ListConnectPeersRequestListConnectPeersPaginateTypeDef,    ListConnectPeersRequestRequestTypeDef,    ListCoreNetworkPolicyVersionsRequestListCoreNetworkPolicyVersionsPaginateTypeDef,    ListCoreNetworkPolicyVersionsRequestRequestTypeDef,    ListCoreNetworksRequestListCoreNetworksPaginateTypeDef,    ListCoreNetworksRequestRequestTypeDef,    ListOrganizationServiceAccessStatusRequestRequestTypeDef,    ListPeeringsRequestListPeeringsPaginateTypeDef,    ListPeeringsRequestRequestTypeDef,    ListTagsForResourceRequestRequestTypeDef,    NetworkResourceSummaryTypeDef,    NetworkRouteDestinationTypeDef,    PaginatorConfigTypeDef,    PutCoreNetworkPolicyRequestRequestTypeDef,    PutResourcePolicyRequestRequestTypeDef,    RegisterTransitGatewayRequestRequestTypeDef,    RejectAttachmentRequestRequestTypeDef,    ResponseMetadataTypeDef,    RestoreCoreNetworkPolicyVersionRequestRequestTypeDef,    RouteAnalysisCompletionTypeDef,    RouteAnalysisEndpointOptionsSpecificationTypeDef,    RouteAnalysisEndpointOptionsTypeDef,    StartOrganizationServiceAccessUpdateRequestRequestTypeDef,    TransitGatewayRegistrationStateReasonTypeDef,    UntagResourceRequestRequestTypeDef,    UpdateConnectionRequestRequestTypeDef,    UpdateCoreNetworkRequestRequestTypeDef,    UpdateGlobalNetworkRequestRequestTypeDef,    UpdateNetworkResourceMetadataRequestRequestTypeDef,    UpdateNetworkResourceMetadataResponseTypeDef,    OrganizationStatusTypeDef,    AssociateConnectPeerResponseTypeDef,    DisassociateConnectPeerResponseTypeDef,    GetConnectPeerAssociationsResponseTypeDef,    AssociateCustomerGatewayResponseTypeDef,    DisassociateCustomerGatewayResponseTypeDef,    GetCustomerGatewayAssociationsResponseTypeDef,    AssociateLinkResponseTypeDef,    DisassociateLinkResponseTypeDef,    GetLinkAssociationsResponseTypeDef,    AssociateTransitGatewayConnectPeerResponseTypeDef,    DisassociateTransitGatewayConnectPeerResponseTypeDef,    GetTransitGatewayConnectPeerAssociationsResponseTypeDef,    ConnectPeerSummaryTypeDef,    ConnectionTypeDef,    CoreNetworkSummaryTypeDef,    CreateConnectionRequestRequestTypeDef,    CreateCoreNetworkRequestRequestTypeDef,    CreateGlobalNetworkRequestRequestTypeDef,    CreateSiteToSiteVpnAttachmentRequestRequestTypeDef,    CreateTransitGatewayPeeringRequestRequestTypeDef,    CreateTransitGatewayRouteTableAttachmentRequestRequestTypeDef,    GlobalNetworkTypeDef,    ListTagsForResourceResponseTypeDef,    NetworkResourceTypeDef,    PeeringTypeDef,    ProposedSegmentChangeTypeDef,    TagResourceRequestRequestTypeDef,    CreateLinkRequestRequestTypeDef,    LinkTypeDef,    UpdateLinkRequestRequestTypeDef,    CreateConnectPeerRequestRequestTypeDef,    CreateConnectAttachmentRequestRequestTypeDef,    ConnectPeerConfigurationTypeDef,    NetworkTelemetryTypeDef,    CoreNetworkChangeEventTypeDef,    CoreNetworkChangeTypeDef,    CoreNetworkPolicyTypeDef,    ListCoreNetworkPolicyVersionsResponseTypeDef,    RouteTableIdentifierTypeDef,    CoreNetworkTypeDef,    CreateDeviceRequestRequestTypeDef,    CreateSiteRequestRequestTypeDef,    DeviceTypeDef,    SiteTypeDef,    UpdateDeviceRequestRequestTypeDef,    UpdateSiteRequestRequestTypeDef,    CreateVpcAttachmentRequestRequestTypeDef,    UpdateVpcAttachmentRequestRequestTypeDef,    GetNetworkResourceCountsResponseTypeDef,    GetNetworkResourceRelationshipsResponseTypeDef,    PathComponentTypeDef,    NetworkRouteTypeDef,    StartRouteAnalysisRequestRequestTypeDef,    TransitGatewayRegistrationTypeDef,    ListOrganizationServiceAccessStatusResponseTypeDef,    StartOrganizationServiceAccessUpdateResponseTypeDef,    ListConnectPeersResponseTypeDef,    CreateConnectionResponseTypeDef,    DeleteConnectionResponseTypeDef,    GetConnectionsResponseTypeDef,    UpdateConnectionResponseTypeDef,    ListCoreNetworksResponseTypeDef,    CreateGlobalNetworkResponseTypeDef,    DeleteGlobalNetworkResponseTypeDef,    DescribeGlobalNetworksResponseTypeDef,    UpdateGlobalNetworkResponseTypeDef,    GetNetworkResourcesResponseTypeDef,    DeletePeeringResponseTypeDef,    ListPeeringsResponseTypeDef,    TransitGatewayPeeringTypeDef,    AttachmentTypeDef,    CreateLinkResponseTypeDef,    DeleteLinkResponseTypeDef,    GetLinksResponseTypeDef,    UpdateLinkResponseTypeDef,    ConnectPeerTypeDef,    GetNetworkTelemetryResponseTypeDef,    GetCoreNetworkChangeEventsResponseTypeDef,    GetCoreNetworkChangeSetResponseTypeDef,    DeleteCoreNetworkPolicyVersionResponseTypeDef,    GetCoreNetworkPolicyResponseTypeDef,    PutCoreNetworkPolicyResponseTypeDef,    RestoreCoreNetworkPolicyVersionResponseTypeDef,    GetNetworkRoutesRequestRequestTypeDef,    CreateCoreNetworkResponseTypeDef,    DeleteCoreNetworkResponseTypeDef,    GetCoreNetworkResponseTypeDef,    UpdateCoreNetworkResponseTypeDef,    CreateDeviceResponseTypeDef,    DeleteDeviceResponseTypeDef,    GetDevicesResponseTypeDef,    UpdateDeviceResponseTypeDef,    CreateSiteResponseTypeDef,    DeleteSiteResponseTypeDef,    GetSitesResponseTypeDef,    UpdateSiteResponseTypeDef,    RouteAnalysisPathTypeDef,    GetNetworkRoutesResponseTypeDef,    DeregisterTransitGatewayResponseTypeDef,    GetTransitGatewayRegistrationsResponseTypeDef,    RegisterTransitGatewayResponseTypeDef,    CreateTransitGatewayPeeringResponseTypeDef,    GetTransitGatewayPeeringResponseTypeDef,    AcceptAttachmentResponseTypeDef,    ConnectAttachmentTypeDef,    DeleteAttachmentResponseTypeDef,    ListAttachmentsResponseTypeDef,    RejectAttachmentResponseTypeDef,    SiteToSiteVpnAttachmentTypeDef,    TransitGatewayRouteTableAttachmentTypeDef,    VpcAttachmentTypeDef,    CreateConnectPeerResponseTypeDef,    DeleteConnectPeerResponseTypeDef,    GetConnectPeerResponseTypeDef,    RouteAnalysisTypeDef,    CreateConnectAttachmentResponseTypeDef,    GetConnectAttachmentResponseTypeDef,    CreateSiteToSiteVpnAttachmentResponseTypeDef,    GetSiteToSiteVpnAttachmentResponseTypeDef,    CreateTransitGatewayRouteTableAttachmentResponseTypeDef,    GetTransitGatewayRouteTableAttachmentResponseTypeDef,    CreateVpcAttachmentResponseTypeDef,    GetVpcAttachmentResponseTypeDef,    UpdateVpcAttachmentResponseTypeDef,    GetRouteAnalysisResponseTypeDef,    StartRouteAnalysisResponseTypeDef,)def get_structure() -&gt; AWSLocationTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for`aiobotocore` updates. It delivers drop-in type annotations for you and makessure that:- All available `aiobotocore` services are covered.- Each public class and method of every `aiobotocore` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`types-aiobotocore-networkmanager` version is the same as related `aiobotocore`version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_networkmanager/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>