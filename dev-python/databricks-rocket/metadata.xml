<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Databricks-Rocket&lt;img src=&quot;https://user-images.githubusercontent.com/2252355/173396060-8ebb3a33-f389-421d-bea4-afc01a078307.svg&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;[![PyPI version](https://badge.fury.io/py/databricks-rocket.svg)](https://badge.fury.io/py/databricks-rocket)![PyPI downloads](https://img.shields.io/pypi/dm/databricks-rocket)Databricks-Rocket (short db-rockets), keeps your local Python scripts installed and synchronized with a Databricks notebook. Every change on your local machineis automatically reflected in the notebook. This shortens the feedback loop for developing git-based projects andeliminates the need to set up a local development environment.## InstallationInstall `databricks-rocket` using pip:```shpip install databricks-rocket```## SetupEnsure you've created a personal access token inDatabricks ([offical documentation](https://docs.databricks.com/dev-tools/cli/index.html)). Afterward, set up theDatabricks CLI by executing:```shdatabricks configure --token```Alternatively, you can set the Databricks token and host in your environment variables:```shexport DATABRICKS_HOST=&quot;mydatabrickshost&quot;export DATABRICKS_TOKEN=&quot;mydatabrickstoken&quot;```If your project isn't already a pip package, you'll need to convert it into one. Use dbrocket for this:```shrocket setup```Will create a setup.py for you.## Usage### To Sync Your ProjectBy default, `databricks-rocket` syncs your project to DBFS automatically. This allows you to update your code and havethose changes reflected in your Databricks notebook without restarting the Python kernel. Simply execute:```shrocket launch```You'll then receive the exact command to run in your notebook. Example:```shstevenmi@MacBook db-rocket % rocket launch --watch=False&gt;&gt; Watch activated. Uploaded your project to databricks. Install your project in your databricks notebook by running:&gt;&gt; %pip install --upgrade pip&gt;&gt; %pip install  -r /dbfs/temp/stevenmi/db-rocket/requirements.txt&gt;&gt; %pip install --no-deps -e /dbfs/temp/stevenmi/db-rocketand following in a new Python cell:&gt;&gt; %load_ext autoreload&gt;&gt; %autoreload 2```Finally, add the content in you databricks notebook:![imgs/img_2.png](imgs/img_2.png)### To Upload Your Python PackageIf you've disabled the watch feature, `databricks-rocket` will only upload your project as a wheel to DBFS:```shrocket launch --watch=False```Example:```shstevenmi@MacBook db-rocket % rocket launch --watch=False&gt;&gt; Watch is disabled. Building creating a python wheel from your project&gt;&gt; Found setup.py. Building python library&gt;&gt; Uploaded ./dist/databricks_rocket-2.0.0-py3-none-any.whl to dbfs:/temp/stevenmi/db-rocket/dist/databricks_rocket-2.0.0-py3-none-any.whl&gt;&gt; Uploaded wheel to databricks. Install your library in your databricks notebook by running:&gt;&gt; %pip install --upgrade pip&gt;&gt; %pip install  /dbfs/temp/stevenmi/db-rocket/databricks_rocket-2.0.0-py3-none-any.whl --force-reinstall```## Support- Databricks: &gt;=7- Python: &gt;=3.7- Tested on Platform: Linux, MacOs. Windows will probably not work but contributions are welcomed!## Acknowledgments- Thanks Leon Poli for the Logo :)- Thanks Stephane Leonard for source-code and documentation improvements :)- Thanks Malachi Soord for the CICD setup and README improvementsContributions are welcomed!## Blogposts- [DB Rocket 1.0](https://www.getyourguide.careers/posts/open-sourcing-db-rocket-for-data-scientists) post also gives more details about the rationale around dbrocket.# SecurityFor security issues please contact [security@getyourguide.com](mailto:security@getyourguide.com).# Legaldb-rocket is licensed under the Apache License, Version 2.0. See [LICENSE](LICENSE.txt) for the full text.</longdescription>
</pkgmetadata>