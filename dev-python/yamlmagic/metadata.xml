<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>yamlmagic=========    an `IPython &lt;http://ipython.org/&gt;`__    `magic &lt;https://ipython.org/ipython-doc/dev/interactive/tutorial.html&gt;`__    for capturing data in `YAML &lt;http://yaml.org/&gt;`__ into a running    IPython kernel.|Build Status| |pypi|.. |Build Status| image:: https://travis-ci.org/bollwyvl/yamlmagic.svg?branch=master   :target: https://travis-ci.org/bollwyvl/yamlmagic.. |pypi| image:: https://pypip.in/version/yamlmagic/badge.svg?style=flatInstall-------From the command line (or with ``!`` in a notebook cell):.. code:: bash    pip install yamlmagicEnable------Ad-hoc~~~~~~In the notebook, you can use the ``%load_ext`` or ``%reload_ext`` linemagic... code:: python    %reload_ext yamlmagicConfiguration~~~~~~~~~~~~~In your profile's ``ipython_kernel_config.py``, you can add thefollowing line to automatically load ``yamlmagic`` into all your runningkernels:.. code:: python    c.InteractiveShellApp.extensions = ['yaml_magic']Use---The ``%%yaml`` cell magic will either act as simple parser:.. code:: python    %%yaml    a_toplevel_key: 1.. parsed-literal::    &lt;IPython.core.display.Javascript object&gt;.. parsed-literal::    {'a_toplevel_key': 1}which can be accessed by the special last result variable ``_``:.. code:: python    _.. parsed-literal::    {'a_toplevel_key': 1}Or will update a named variable with the parsed document:.. code:: python    %%yaml x    - a: 1      b: 2.. parsed-literal::    &lt;IPython.core.display.Javascript object&gt;.. code:: python    x.. parsed-literal::    [{'a': 1, 'b': 2}]By default, ``yaml.SafeLoader`` will be used, which won't allow the`powerful butdangerous &lt;http://pyyaml.org/wiki/PyYAMLDocumentation#LoadingYAML&gt;`__(and unportable) ```!python/``tags &lt;http://pyyaml.org/wiki/PyYAMLDocumentation#YAMLtagsandPythontypes&gt;`__.If you'd like to use them, provide the ``-l`` (or ``--loader``) argumentwith a ``BaseLoader`` subclass available via a local variable..... code:: python    from yaml import Loader    class FooLoader(Loader):        # some special things you have built        pass.. code:: python    %%yaml --loader FooLoader    - a: !!python/float 1      b: !!python/float 2.. parsed-literal::    &lt;IPython.core.display.Javascript object&gt;.. parsed-literal::    [{'a': 1.0, 'b': 2.0}]...or dotted-notation path to a loader:.. code:: python    %%yaml --loader yaml.Loader    - a: !!python/float 1      b: !!python/float 2.. parsed-literal::    &lt;IPython.core.display.Javascript object&gt;.. parsed-literal::    [{'a': 1.0, 'b': 2.0}]Contribute----------`Issues &lt;https://github.com/bollwyvl/yamlmagic/issues&gt;`__ and `pullrequests &lt;https://github.com/bollwyvl/yamlmagic/pulls&gt;`__ welcome!License-------``yamlmagic`` is released as free software under the `BSD 3-Clauselicense &lt;./LICENSE&gt;`__.Thank------  [@tonyfast](http://robclewley.github.io) for asking for this-  [@robclewley](http://robclewley.github.io) for documentation-shaming   a gist into a module</longdescription>
</pkgmetadata>