<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Pypi](https://img.shields.io/pypi/v/eorzeaenv.svg?style=flat-square)](https://pypi.org/project/EorzeaEnv/)[![Pypi](https://img.shields.io/pypi/pyversions/eorzeaenv.svg?style=flat-square)](https://pypi.org/project/EorzeaEnv/)[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FEltonChou%2FEorzeaEnv%2Fbadge&amp;style=flat-square)](https://github.com/EltonChou/EorzeaEnv/actions)![PyPI - Downloads](https://img.shields.io/pypi/dm/EorzeaEnv?style=flat-square)![Coverage](https://img.shields.io/codecov/c/github/EltonChou/EorzeaEnv?style=flat-square)# EorzeaEnv+ [CHANGELOG](https://github.com/EltonChou/EorzeaEnv/blob/master/CHANGELOG.md)## Installation```pip install eorzeaenv```## Usage```pyfrom EorzeaEnv import EorzeaLang, EorzeaTime, EorzeaWeather, EorzeaPlaceName```### Eorzea Language enum```pysupport_langs = [    EorzeaLang.EN,    EorzeaLang.JA,    EorzeaLang.DE,    EorzeaLang.FR,    EorzeaLang.ZH_SC,    EorzeaLang.KO,]```### Eorzea Time```sh&gt;&gt;&gt; EorzeaTime.now()'EorzeaTime(Sixth Embral Moon, 11, 21, 56, Phase:0.50, Althyk)'&gt;&gt;&gt; EorzeaTime.now().moon'Sixth Embral Moon'&gt;&gt;&gt; EorzeaTime.now().sun11&gt;&gt;&gt; EorzeaTime.now().hour21&gt;&gt;&gt; EorzeaTime.now().minute56&gt;&gt;&gt; EorzeaTime.now().phase0.50&gt;&gt;&gt; EorzeaTime.now().guardian'Althyk'```+ Get the unix timestamp (int not float)```sh&gt;&gt;&gt; EorzeaTime.now().get_unix_time()1661114514```+ Get the eorzea timestamp (int not float)```sh&gt;&gt;&gt; EorzeaTime.now().get_eorzea_time()34177649220```### Weather Forecast+ Using period as tuple or list```python# defalut step value is 5# This method return a generator if you need to re-use it save the values as `tuple` or `list`.t = tuple(EorzeaTime.weather_period(step=3))# Use EorzeaPlaceName to ensure the place is valid or# you can directly pass the place string to forecast.place_name = EorzeaPlaceName('Eureka Pyros')# Defalut lang is 'en'# Defalut strict is `True` for strict mode `False` for fuzzy mode.# eg. `eurekaa puros` is valid in fuzzy mode.# In fuzzy mode, you can set the cutoff score to prevent unexpected place name to be passed.# default value is 80. (100 &gt;= value &gt;= 0)EorzeaWeather.set_fuzzy_cutoff(95)weather_en = EorzeaWeather.forecast(place_name, t, strict=True)weather_ja = EorzeaWeather.forecast(place_name, t, lang=EorzeaLang.JA, strict=True)weather_de = EorzeaWeather.forecast(place_name, t, lang=EorzeaLang.DE, strict=True)weather_fr = EorzeaWeather.forecast(place_name, t, lang=EorzeaLang.FR, strict=True)``````sh&gt;&gt;&gt; print(weather_en)['Thunder', 'Snow', 'Blizzards']&gt;&gt;&gt; print(weather_ja)['雷', '雪', '吹雪']&gt;&gt;&gt; print(weather_de)['Gewittrig', 'Schnee', 'Schneesturm']&gt;&gt;&gt; print(weather_fr)['Orages', 'Neige', 'Blizzard']```+ Using period in for-loop```pyweather_en = []for t in EorzeaTime.weather_period(step=3):    w = EorzeaWeather.forecast('Eureka Pyros', t)    weather_en.append(w)``````sh&gt;&gt;&gt; print(weather_en)['Thunder', 'Snow', 'Blizzards']```+ Provide a desired base time to calculate.```pyfor t in EorzeaTime.weather_period(step=3, from_=datetime(2025, 10, 25).timestamp()):    w = EorzeaWeather.forecast('Eureka Pyros', t)    print(w)```+ Using period generator directly```pyweather = EorzeaWeather.forecast('Eureka Pyros', EorzeaTime.weather_period(step=3))``````sh&gt;&gt;&gt; print(weather_en)['Thunder', 'Snow', 'Blizzards']```### Eorzea place nameAn instance of EorzeaPlaceName would be always a valid place name in this pacakge.An invalid place name will raises `InvalidEorzeaPlaceName` error.```pyplace_name = EorzeaPlaceName(    'The Ruby Sea',    # `False` to fuzzy mode, default is `True`    strict=True,    # Stricted scope for validation of place name.    # default is all supports locale.    locale_scopes=[        EorzeaLang.EN,        EorzeaLang.JA,        EorzeaLang.FR,        EorzeaLang.DE],    # Used in fuzzy mode to cut-off the result under the score.    # default is `80`.    fuzzy_cutoff=80)``````sh&gt;&gt;&gt; place_nameEorrzeaPlaceName('The Ruby Sea')&gt;&gt;&gt; print(place_name)'The Ruby Sea````Belowings are valid place names in strict mode with full locale scopes (default settings).```pyEorzeaPlaceName('The Ruby Sea') # valid `The Ruby Sea`EorzeaPlaceName('the ruby sea') # valid `The Ruby Sea`EorzeaPlaceName('ruby sea') # valid `The Ruby Sea`EorzeaPlaceName('rubinsee') # valid `Rubinsee`EorzeaPlaceName('紅玉海') # valid `紅玉海````With stricted scopes.```pyscopes = [EorzeaLang.JA, EorzeaLang.DE]EorzeaPlaceName('The Ruby Sea', locale_scopes=scopes) # raises errorEorzeaPlaceName('the ruby sea', locale_scopes=scopes) # raises errorEorzeaPlaceName('ruby sea', locale_scopes=scopes) # raises errorEorzeaPlaceName('rubinsee', locale_scopes=scopes) # valid `Rubinsee`EorzeaPlaceName('紅玉海', locale_scopes=scopes) # valid `紅玉海````In fuzzy mode.```pyEorzeaPlaceName('the ruby see', strict=False) # valid `The Ruby Sea`EorzeaPlaceName('ruby see', strict=False) # valid `The Ruby Sea`EorzeaPlaceName('rubisee', strict=False) # valid `Rubinsee`EorzeaPlaceName('紅玉貝', strict=False) # raises errorEorzeaPlaceName('紅玉貝', strict=False, fuzzy_cutoff=66) # valid `紅玉海````### Eorzea rainbow predictUse EorzeaRainbow to predict when will the rainbow appears.```pyfrom datetime import datetimefrom EorzeaEnv import EorzeaPlaceName, EorzeaRainbow, EorzeaTime, EorzeaWeatherrainbow_times: list[datetime] = []place = EorzeaPlaceName(&quot;東ラノシア&quot;)the_rainbow = EorzeaRainbow(place_name=place)for t in EorzeaTime.weather_period(step='inf'):    the_rainbow.append(t, EorzeaWeather.forecast(place, t, raw=True))    if the_rainbow.is_appear:        rainbow_times.append(datetime.fromtimestamp(t))    if len(rainbow_times) == 20:        breakprint(rainbow_times)```### Errors```pyfrom EorzeaEnv.errors import \    EorzeaEnvError, \    InvalidEorzeaPlaceName, \    WeatherRateDataError``````Exception    |- EorzeaEnvError        |- InvalidEorzeaPlaceName        |- WeatherRateDataError```## Thanks- [Rogueadyn-SaintCoinach](https://github.com/Rogueadyn/SaintCoinach)</longdescription>
</pkgmetadata>