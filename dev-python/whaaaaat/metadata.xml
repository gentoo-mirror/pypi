<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>whaaaaat?=========A collection of common interactive command line user interfaces.Table of Contents-----------------1. `Documentation &lt;#documentation&gt;`__   1. `Installation &lt;#installation&gt;`__   2. `Examples &lt;#examples&gt;`__   3. `Quickstart &lt;#quickstart&gt;`__   4. `Question Types &lt;#types&gt;`__   5. `Question Properties &lt;#properties&gt;`__   6. `User Interfaces and Styles &lt;#styles&gt;`__2. `Windows Platform &lt;#windows&gt;`__3. `Support &lt;#support&gt;`__4. `Contributing &lt;#contributing&gt;`__5. `Acknowledgments &lt;#acknowledgements&gt;`__6. `License &lt;#license&gt;`__Goal and Philosophy-------------------**``whaaaaat``** strives to be an easily embeddable and beautifulcommand line interface for `Python &lt;https://python.org/&gt;`__.**``whaaaaat``** wants to make it easy for existing Inquirer.js users towrite immersive command line applications in Python. We are convincedthat its feature-set is the most complete for building immersive CLIapplications. We also hope that **``whaaaaat``** proves itself useful toPython users.**``whaaaaat``** should ease the process of - providing *error feedback*- *asking questions* - *parsing* input - *validating* answers - managing*hierarchical prompts***Note:** **``whaaaaat``** provides the user interface and the inquirysession flow. &gt; If you're searching for a scaffolding utility, thencheck out `banana &lt;https://github.com/finklabs/banana&gt;`__, thewhaaaaat's sister utility.Documentation-------------Installation~~~~~~~~~~~~Like most Python packages whaaaaat is available on `PyPi &lt;TODO&gt;`__.Simply use pip to install the whaaaaat package.. code:: shell    pip install whaaaaatQuickstart~~~~~~~~~~Like Inquirer.js, using inquirer is structured into two simple steps:-  you define a **list of questions** and hand them to **prompt**-  promt returns a **list of answers**.. code:: python    from __future__ import print_function, unicode_literals    from whaaaaat import prompt, print_json    questions = [        {            'type': 'input',            'name': 'first_name',            'message': 'What\'s your first name',        }    ]    answers = prompt(questions)    print_json(answers)  # use the answers as input for your appA good starting point from here is probably the examples section.Examples~~~~~~~~Most of the examples intend to demonstrate a single question type orfeature:-  bottom-bar.py-  expand.py-  list.py-  password.py-  when.py-  checkbox.py-  hierarchical.py-  pizza.py - demonstrate using different question types-  editor.py-  input.py-  rawlist.pyQuestion Types~~~~~~~~~~~~~~``questions`` is a list of questions. Each question has a type.List - ``{type: 'list'}``^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``, ``choices``\ [, ``default``,``filter``] properties. (Note that default must be the choice ``index``in the array or a choice ``value``).. figure:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/input-prompt.png   :alt: List prompt   List prompt--------------Raw List - ``{type: 'rawlist'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``, ``choices``\ [, ``default``,``filter``] properties. (Note that default must the choice ``index`` inthe array).. figure:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/raw-list.png   :alt: Raw list prompt   Raw list prompt--------------Expand - ``{type: 'expand'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``, ``choices``\ [, ``default``]properties. (Note that default must be the choice ``index`` in thearray. If ``default`` key not provided, then ``help`` will be used asdefault choice)Note that the ``choices`` object will take an extra parameter called``key`` for the ``expand`` prompt. This parameter must be a single(lowercased) character. The ``h`` option is added by the prompt andshouldn't be defined by the user.See ``examples/expand.py`` for a running example.|Expand prompt closed| |Expand prompt expanded|--------------Checkbox - ``{type: 'checkbox'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``, ``choices``\ [, ``filter``,``validate``, ``default``] properties. ``default`` is expected to be anArray of the checked choices value.Choices marked as ``{checked: true}`` will be checked by default.Choices whose property ``disabled`` is truthy will be unselectable. If``disabled`` is a string, then the string will be outputted next to thedisabled choice, otherwise it'll default to ``&quot;Disabled&quot;``. The``disabled`` property can also be a synchronous function receiving thecurrent answers as argument and returning a boolean or a string... figure:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/checkbox-prompt.png   :alt: Checkbox prompt   Checkbox prompt--------------Confirm - ``{type: 'confirm'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``\ [, ``default``] properties.``default`` is expected to be a boolean if used... figure:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/confirm-prompt.png   :alt: Confirm prompt   Confirm prompt--------------Input - ``{type: 'input'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``\ [, ``default``, ``filter``,``validate``] properties... figure:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/input-prompt.png   :alt: Input prompt   Input prompt--------------Password - ``{type: 'password'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``\ [, ``default``, ``filter``,``validate``] properties... figure:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/password-prompt.png   :alt: Password prompt   Password prompt--------------Editor - ``{type: 'editor'}``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Take ``type``, ``name``, ``message``\ [, ``default``, ``filter``,``validate``] propertiesLaunches an instance of the users preferred editor on a temporary file.Once the user exits their editor, the contents of the temporary file areread in as the result. The editor to use is determined by reading the$VISUAL or $EDITOR environment variables. If neither of those arepresent, notepad (on Windows) or vim (Linux or Mac) is used.Question Properties~~~~~~~~~~~~~~~~~~~A question is a dictionary containing question related values:-  type: (String) Type of the prompt. Defaults: input - Possible values:   input, confirm, list, rawlist, expand, checkbox, password, editor-  name: (String) The name to use when storing the answer in the answers   hash. If the name contains periods, it will define a path in the   answers hash.-  message: (String\|Function) The question to print. If defined as a   function, the first parameter will be the current inquirer session   answers.-  default: (String\|Number\|Array\|Function) Default value(s) to use if   nothing is entered, or a function that returns the default value(s).   If defined as a function, the first parameter will be the current   inquirer session answers.-  choices: (Array\|Function) Choices array or a function returning a   choices array. If defined as a function, the first parameter will be   the current inquirer session answers. Array values can be simple   strings, or objects containing a name (to display in list), a value   (to save in the answers hash) and a short (to display after   selection) properties. The choices array can also contain a   Separator.-  validate: (Function) Receive the user input and should return true if   the value is valid, and an error message (String) otherwise. If false   is returned, a default error message is provided.-  filter: (Function) Receive the user input and return the filtered   value to be used inside the program. The value returned will be added   to the Answers hash.-  when: (Function, Boolean) Receive the current user answers hash and   should return true or false depending on whether or not this question   should be asked. The value can also be a simple boolean.-  pageSize: (Number) Change the number of lines that will be rendered   when using list, rawList, expand or checkbox.User Interfaces and Styles~~~~~~~~~~~~~~~~~~~~~~~~~~TODOWindows Platform----------------**``whaaaaat``** is build on prompt\_toolkit which is cross platform,and everything that you build on top should run fine on both Unix andWindows systems. On Windows, it uses a different event loop(WaitForMultipleObjects instead of select), and another input and outputsystem. (Win32 APIs instead of pseudo-terminals and VT100.)It's worth noting that the implementation is a &quot;best effort of what ispossible&quot;. Both Unix and Windows terminals have their limitations. Butin general, the Unix experience will still be a little better.For Windows, it's recommended to use either cmder or conemu.Support-------Most of the questions are probably related to using a question type orfeature. Please lookup and study the appropriate examples.Issue on Github TODO linkFor many issues like for example common Python programming issuesstackoverflow might be a good place to search for an answer. TODO linkVisit the finklabs slack channel for announcements and news. TODO linkContributing------------Unit test Unit test are written using pytest. Please add a unit test forevery new feature or bug fix.Documentation Add documentation for every API change. Feel free to sendtypo fixes and better docs!We're looking to offer good support for multiple prompts andenvironments. If you want to help, we'd like to keep a list of testersfor each terminal/OS so we can contact you and get feedback beforerelease. Let us know if you want to be added to the list.Acknowledgments---------------Many thanks to our friends at Inquirer.js. We think they did a great jobdeveloping the tooling to support the nodejs technology.License-------Copyright (c) 2016-2017 Mark Fink (twitter: @markfink) Licensed underthe MIT license... |Expand prompt closed| image:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/expand-prompt-1.png.. |Expand prompt expanded| image:: https://raw.githubusercontent.com/finklabs/whaaaaat/develop/docs/images/expand-prompt-2.png</longdescription>
</pkgmetadata>