<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![pastastore](https://github.com/pastas/pastastore/workflows/pastastore/badge.svg)[![Documentation Status](https://readthedocs.org/projects/pastastore/badge/?version=latest)](https://pastastore.readthedocs.io/en/latest/?badge=latest)[![Codacy Badge](https://api.codacy.com/project/badge/Grade/81b1e0294f5247cfa4eca657a8eebc61)](https://www.codacy.com/gh/pastas/pastastore?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pastas/pastastore&amp;utm_campaign=Badge_Grade)[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/81b1e0294f5247cfa4eca657a8eebc61)](https://www.codacy.com/gh/pastas/pastastore/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pastas/pastastore&amp;utm_campaign=Badge_Coverage)![PyPI](https://img.shields.io/pypi/v/pastastore)# pastastoreThis module stores [Pastas](https://pastas.readthedocs.io/en/latest/) time series and models in adatabase.Storing time series and models in a database allows the user to manage timeseries and Pastas models on disk, which allows the user to pick up where theyleft off without having to reload everything.## InstallationInstall the module with `pip install pastastore`.For installing in development mode, clone the repository and install by typing`pip install -e .` from the module root directory.For plotting background maps, the `contextily` and `pyproj` packages arerequired. For a full install, including optional dependencies for plotting andlabeling data on maps, use: `pip install pastastore[optional]` Windows usersare asked to install `rasterio` themselves since it often cannot be installedusing `pip`. `rasterio` is a dependency of `contextily`.## UsageThe following snippets show typical usage. The first step is to define aso-called `Connector` object. This object contains methods to store time seriesor models to the database, or read objects from the database.The following code creates a PasConnector, which uses Pastas JSON-styled&quot;`.pas`-files&quot; to save models in a folder on your computer (in this case afolder called `pastas_db` in the current directory).```pythonimport pastastore as pst# create connector instanceconn = pst.PasConnector(name=&quot;pastas_db&quot;, path=&quot;.&quot;)```The next step is to pass that connector to the `PastaStore` object. This objectcontains all kinds of useful methods to analyze and visualize time series, andbuild and analyze models.```python# create PastaStore instancepstore = pst.PastaStore(conn)```Now the user can add time series, models or analyze or visualize existingobjects in the database. Some examples showing the functionality of thePastaStore object are shown below:```pythonimport pandas as pdimport pastas as ps# load oseries from CSV and add to databaseoseries = pd.read_csv(&quot;oseries.csv&quot;)pstore.add_oseries(oseries, &quot;my_oseries&quot;, metadata={&quot;x&quot;: 100_000, &quot;y&quot;: 400_000})# read oseries from databaseoseries = pstore.get_oseries(&quot;my_oseries&quot;)# view oseries metadata DataFramepstore.oseries# plot oseries location on mapax = pstore.maps.oseries()pstore.maps.add_background_map(ax)  # add a background map# plot my_oseries time seriesax2 = pstore.plot.oseries(names=[&quot;my_oseries&quot;])# create a model with pastasml = ps.Model(oseries, name=&quot;my_model&quot;)# add model to databasepstore.add_model(ml)# load model from databaseml2 = pstore.get_models(&quot;my_model&quot;)# export whole database to a zip filepstore.to_zip(&quot;my_backup.zip&quot;)```For more elaborate examples, refer to the[Notebooks](https://pastastore.readthedocs.io/en/latest/examples.html#example-notebooks).</longdescription>
</pkgmetadata>