<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/jonathf/numpoly/raw/master/docs/.static/numpoly_logo.svg   :height: 200 px   :width: 200 px   :align: center|circleci| |codecov| |readthedocs| |downloads| |pypi|.. |circleci| image:: https://circleci.com/gh/jonathf/numpoly/tree/master.svg?style=shield    :target: https://circleci.com/gh/jonathf/numpoly/tree/master.. |codecov| image:: https://codecov.io/gh/jonathf/numpoly/branch/master/graph/badge.svg    :target: https://codecov.io/gh/jonathf/numpoly.. |readthedocs| image:: https://readthedocs.org/projects/numpoly/badge/?version=master    :target: http://numpoly.readthedocs.io/en/master/?badge=master.. |downloads| image:: https://img.shields.io/pypi/dm/numpoly    :target: https://pypistats.org/packages/numpoly.. |pypi| image:: https://badge.fury.io/py/numpoly.svg    :target: https://badge.fury.io/py/numpolyNumpoly is a generic library for creating, manipulating and evaluatingarrays of polynomials based on ``numpy.ndarray`` objects.* Intuitive interface for users experienced with ``numpy``, as the library  provides a high level of compatibility with the ``numpy.ndarray``, including  fancy indexing, broadcasting, ``numpy.dtype``, vectorized operations to name  a few.* Computationally fast evaluations of lots of functionality inherent from  ``numpy``.* Vectorized polynomial evaluation.* Support for arbitrary number of dimensions.* Native support for lots of ``numpy.&lt;name&gt;`` functions using ``numpy``'s  compatibility layer (which also exists as ``numpoly.&lt;name&gt;``  equivalents).* Support for polynomial division through the operators ``/``, ``%`` and  ``divmod``.* Extra polynomial specific attributes exposed on the polynomial objects like  ``poly.exponents``, ``poly.coefficients``, ``poly.indeterminants`` etc.* Polynomial derivation through functions like ``numpoly.derivative``,  ``numpoly.gradient``, ``numpoly.hessian`` etc.* Decompose polynomial sums into vector of addends using ``numpoly.decompose``.* Variable substitution through ``numpoly.call``.Installation============Installation should be straight forward:.. code-block:: bash    pip install numpolyExample Usage=============Constructing polynomial is typically done using one of the availableconstructors:.. code-block:: python    &gt;&gt;&gt; import numpoly    &gt;&gt;&gt; numpoly.monomial(start=0, stop=3, dimensions=2)    polynomial([1, q0, q0**2, q1, q0*q1, q1**2])It is also possible to construct your own from symbols together with`numpy &lt;https://python.org&gt;`_:.. code-block:: python    &gt;&gt;&gt; import numpy    &gt;&gt;&gt; q0, q1 = numpoly.variable(2)    &gt;&gt;&gt; numpoly.polynomial([1, q0**2-1, q0*q1, q1**2-1])    polynomial([1, q0**2-1, q0*q1, q1**2-1])Or in combination with numpy objects using various arithmetics:.. code-block:: python    &gt;&gt;&gt; q0**numpy.arange(4)-q1**numpy.arange(3, -1, -1)    polynomial([-q1**3+1, -q1**2+q0, q0**2-q1, q0**3-1])The constructed polynomials can be evaluated as needed:.. code-block:: python    &gt;&gt;&gt; poly = 3*q0+2*q1+1    &gt;&gt;&gt; poly(q0=q1, q1=[1, 2, 3])    polynomial([3*q1+3, 3*q1+5, 3*q1+7])Or manipulated using various numpy functions:.. code-block:: python    &gt;&gt;&gt; numpy.reshape(q0**numpy.arange(4), (2, 2))    polynomial([[1, q0],                [q0**2, q0**3]])    &gt;&gt;&gt; numpy.sum(numpoly.monomial(13)[::3])    polynomial(q0**12+q0**9+q0**6+q0**3+1)Installation============Installation should be straight forward from `pip &lt;https://pypi.org/&gt;`_:.. code-block:: bash    pip install numpolyAlternatively, to get the most current experimental version, the code can beinstalled from `Github &lt;https://github.com/&gt;`_ as follows:* First time around, download the repository:  .. code-block:: bash      git clone git@github.com:jonathf/numpoly.git* Every time, move into the repository:  .. code-block:: bash      cd numpoly/* After  the first time, you want to update the branch to the most current  version of ``master``:  .. code-block:: bash      git checkout master      git pull* Install the latest version of ``numpoly`` with:  .. code-block:: bash      pip install .Development-----------Installing ``numpoly`` for development canbe done from the repository root with the command::    pip install -e .[dev]The deployment of the code is done with Python 3.10 and dependencies are thenfixed using::    pip install -r requirements-dev.txtTesting-------To run test:.. code-block:: bash    pytest --doctest-modules numpoly test docs/user_guide/*.rst README.rstDocumentation-------------To build documentation locally on your system, use ``make`` from the ``doc/``folder:.. code-block:: bash    cd doc/    make htmlRun ``make`` without argument to get a list of build targets. All targetsstores output to the folder ``doc/.build/html``.Note that the documentation build assumes that ``pandoc`` is installed on yoursystem and available in your path.</longdescription>
</pkgmetadata>