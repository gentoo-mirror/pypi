<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># WARP: Wrapper around Replicated Processes&lt;p align=&quot;center&quot;&gt;  &lt;img style=&quot;width:300px&quot; src=&quot;https://i.imgur.com/0oS4Jih.png&quot; /&gt;&lt;/p&gt;WARP is a light-weight manager for background processes.Functionality* Easily spawn any process as a managed subprocess* Automatic recover from failed process* Runs completely async* Cleanly exits in a safe order (subprocess, WARP manager, then main process)### OverviewSo you need to run a subprocess in the background of your Python application. How do you do it?* If you simply start the process in an async way, how can you ensure that the process can is restarted if it exits?* If you start the process in a synchronous way, how do you ensure that the rest of your program continues to execute?* If you use `supervisord`, how do you ensure that all your users have `supervisord` installed ahead of time?* If you use `celery` or some kind of heavy weight solution, you now need standalone infra and need to manage a lot of complexityWARP makes it very simple to manage a background process in a self-healing way. The subprocess runs in a backgroundthread that continually monitors the health of the subprocess. WARP is also able to intelligently support interruptsignals.### Installation`pip install warp`### UsageImport WARP```pythonfrom warp import Warp```Create a WARP object```pythonwp = Warp(command=&quot;dummy_server.py&quot;)```Start the WARP process```pythonwp.start()```The process will automatically be killed (cleanly) when the main process exitsAlternatively you may also forcefully stop this background process```pythonwp.stop()```### TestingRun the following command from the repo root```bashpytest```### Python CompatibilityWARP only supports the following Python versions* 3.7* 3.8* 3.9### ContributingWARP is a community project. Feel free to submit a PR and/or an issue if you are looking for more functionality or found a bug!</longdescription>
</pkgmetadata>