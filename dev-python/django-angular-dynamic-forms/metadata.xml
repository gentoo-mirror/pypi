<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django Rest Framework meets Angular 6 dynamic forms===================================================This repo provides Django mixins and Angular library for rapiddevelopment of create/edit dialogs for django rest framework.It depends on Django 2, Angular 6 and Material UI.Note: support for Angular 5 and Django&lt;2 is not actively developed - userelease/angular5 branch or 1.1.* versions of packages if you need that.On django side, extend your ``Viewset`` to use ``AngularFormMixin``and optionally configure the mixin by providing either layoutinformation or field defaults (such as css classes). See demosfor details... code-block:: python    class CityViewSet(AngularFormMixin, viewsets.ModelViewSet):        &quot;&quot;&quot;        API for cities        &quot;&quot;&quot;        queryset = City.objects.all()        serializer_class = CitySerializerOn angular side, use ``DjangoFormDialogService`` to display a dialog:.. code-block:: typescript    constructor(private dialog: DjangoFormDialogService) {    }    createCity() {        this.dialog.open('/api/1.0/cities/').subscribe(result =&gt; {            console.log('City created, result from server is:', result);        });    }You can also display the form inside your own component via ``&lt;django-inpage-form&gt;`` tag... code-block:: html    &lt;django-inpage-form django_url=&quot;/api/1.0/cities/&quot;                        (submit)=&quot;submit($event)&quot;                        (cancel)=&quot;cancel($event)&quot;&gt;&lt;/django-inpage-form&gt;Demo and sample source files----------------------------See demos at http://mesemus.no-ip.org:12569.. image:: https://raw.githubusercontent.com/mesemus/django-angular-dynamic-forms/develop/docs/demo.pngWith a bit of work on your side, foreign keys and many-to-many relationships are supported as well (see the demos for details).. image:: https://raw.githubusercontent.com/mesemus/django-angular-dynamic-forms/develop/docs/foreign_key.pngInstallation------------*Django side:*.. code-block:: bash    pip install django-angular-dynamic-forms*Angular side:*.. code-block:: bash    npm install --save django-angular-dynamic-forms @ng-dynamic-forms/core @ng-dynamic-forms/ui-materialTo render forms, this library uses https://github.com/udos86/ng-dynamic-forms - do not forgetto add it to your package.json.and add ``DjangoFormModule`` to imports. You will need to provide your own ErrorService for showingcommunication errors back to the user. See the ``demo/angular/src/app/mat-error.service.ts`` foran example implementation... code-block:: typescript    import {DjangoFormModule, ErrorService} from 'django-angular-dynamic-forms';    @NgModule({        declarations: [            ...        ],        imports: [            BrowserAnimationsModule,            DynamicFormsCoreModule.forRoot(),            DynamicFormsMaterialUIModule,            DjangoFormModule,            HttpClientModule,            ...        ],        providers: [            {                provide: ErrorService,                useClass: MatErrorService            },        ],        bootstrap: [AppComponent]    })    export class AppModule {    }Configuration-------------If your angular and django server are on the same host/port (seehttps://github.com/angular/angular-cli/blob/master/docs/documentation/stories/proxy.md for development tips),no configuration is necessary.If angular and django are on different hosts/ports, set django setting ``ANGULAR_FORM_ABSOLUTE_URLS=True`` (thanks @sssolid for pointing this out).</longdescription>
</pkgmetadata>