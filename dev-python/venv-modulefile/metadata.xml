<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># venv-modulefile[&lt;img src=&quot;https://www.python.org/static/community_logos/python-logo-master-v3-TM.png&quot; height=&quot;30&quot;/&gt;](Python)[&lt;img src=&quot;https://raw.githubusercontent.com/cea-hpc/modules/v5.2.0/doc/img/modules_red.svg&quot; height=&quot;30&quot; style=&quot;background-color: white&quot;/&gt;](Environment_Module)- [venv-modulefile](#venv-modulefile)  - [Description](#description)  - [Quick start](#quick-start)  - [Available commands](#available-commands)## DescriptionTool to create Python complient environment from non-pythonic tools in a Python virtualenvironment.It is based on [Environment Module](https://modules.readthedocs.io/en/latest/) tomodify the virtual environment.The package offers several commands to build environment modules activated by the virtualenvironnment## Quick startThe following example adds `foo/bar/baz` to `LD_LIBRARY_PATH` when the environment is loaded```bashvenvmod-initialize ${VIRTUAL_ENV}venvmod-prepend-path ${VIRTUAL_ENV} LD_LIBRARY_PATH foo/bar/baz```## Available commandsThe list of available commands is the following:- `venvmod-initialize` is the first command to call. It is expected before everithing as it upgrades  the virtual environment with modulefile.- The following commands modify the modulefile of the virtual environment:  - `venvmod-cmd-append-path` / `venvmod-cmd-prepend-path`: modifies an environment variable  - `venvmod-cmd-module-load`: loads a modulefile  - `venvmod-cmd-module-use`: adds a search path for modulefile  - `venvmod-cmd-remove-path`: removes path from environment variable  - `venvmod-cmd-setenv`: defines an environment variable  - `venvmod-cmd-set-alias`: defines an alias  - `venvmod-cmd-source-sh`: sources a script- `venvmod-cmd-read-env`: reads modifications to do from environment variable:  - `[NAME]_LD_LIBRARY_PATH`, `[NAME]_PYTHONPATH`, `[NAME]_PATH`: ``prepend`` for each element separated by ':'  - `[NAME]_MODULE_USE`: ``module use`` for each element 'module' separated by ' '  - `[NAME]_MODULEFILES`: ``module load`` for each element '/path/' separated by ' '  - `[NAME]_SOURCEFILES`: ``source-sh`` for each element 'shell script [args...]' separated by ';'  - `[NAME]_EXPORTS`: ``setenv`` for each element 'var=value' separated by ' '  - `[NAME]_ALIASES`: ``set-alias`` for each element 'var=&quot;value&quot;' separated by ' '  - `[NAME]_REMOVE_PATHS`: ``remove-path`` for each element 'var=value' separated by ' '  where `[NAME]` is the name of the environment module (case insensitive, &quot;-&quot; and &quot;.&quot; are replaced by &quot;_&quot;).- `venvmod-add-appli` allows to create sub modulefile. `--appli` option of the above commands  permit to modify these modulefiles.- `venvmod-test-import`: tests the import of modules given as argumentSee `--help` option for cli description of each command.The sequence to modify the environment respects the sequence of call of the different functions.</longdescription>
</pkgmetadata>