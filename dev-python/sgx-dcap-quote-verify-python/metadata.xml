<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SGX DCAP quote verify for PythonThis package provides a Python binding to the [SGX Quote Verification Library](https://github.com/intel/SGXDataCenterAttestationPrimitives/tree/master/QuoteVerification/QVL) (QVL), which is the reference implementation of ECDSA-based SGX quote verification. It allows you to verify ECDSA-based quotes generated by the Intel provided Quoting Enclave in Python.## Usage```pyimport sgx_dcap_quote_verifyfrom pathlib import Pathfrom datetime import datetime# You can download the trusted root CA in PEM format directly from Intel at :# &lt;https://certificates.trustedservices.intel.com/Intel_SGX_Provisioning_Certification_RootCA.pem&gt;trusted_root_ca_certificate = Path(&quot;path/to/root_ca_certificate.pem&quot;).read_text()# Get the quote and the collateral from the service you want to attestpck_certificate = Path(&quot;path/to/pck_certificate.pem&quot;).read_text()pck_signing_chain = Path(&quot;path/to/pck_signing_chain.pem&quot;).read_text()root_ca_crl = Path(&quot;/path/to/root_ca_crl.pem&quot;).read_text()intermediate_ca_crl = Path(&quot;/path/to/intermediate_ca_crl.pem&quot;).read_text()tcb_info = Path(&quot;/path/to/tcb_info.json&quot;).read_text()tcb_signing_chain = Path(&quot;/path/to/tcb_signing_chain.pem&quot;).read_text()quote = Path(&quot;/path/to/quote.dat&quot;).read_bytes()qe_identity = Path(&quot;/path/to/qe_identity.json&quot;).read_text()# Set the date used to check if the collateral (certificates,CRLs...) is still valid# Except for test purposes it should be set to the current time as is done belowexpiration_date = datetime.now()# Use the package to check the validity of the quoteattestation_result = sgx_dcap_quote_verify.verify(    trusted_root_ca_certificate,    pck_certificate,    pck_signing_chain,    root_ca_crl,    intermediate_ca_crl,    tcb_info,    tcb_signing_chain,    quote,    qe_identity,    expiration_date,)assert attestation_result.okassert (    attestation_result.pck_certificate_status    == sgx_dcap_quote_verify.VerificationStatus.STATUS_OK)assert (    attestation_result.tcb_info_status    == sgx_dcap_quote_verify.VerificationStatus.STATUS_OK)assert (    attestation_result.qe_identity_status    == sgx_dcap_quote_verify.VerificationStatus.STATUS_OK)assert (    attestation_result.quote_status    == sgx_dcap_quote_verify.VerificationStatus.STATUS_OK)# The attestation result contains the report data, which includes the MR_ENCLAVEprint(&quot;mr_enclave =&quot;, attestation_result.enclave_report.mr_enclave)```**Disclaimer** : This package is not endorsed by Intel Corporation. It is provided as is, use it at your own risk.## LicenseThe source code of the binding is provided under Apache-2.0 license.This software also uses the SGX Quote Verification Library, which is licensed under [BSD license](https://github.com/mithril-security/SGXDataCenterAttestationPrimitives/blob/master/License.txt).Distribution of the software as a whole, including the external library, may be subject to the terms of the external library's license.</longdescription>
</pkgmetadata>