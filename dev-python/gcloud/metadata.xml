<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Google Cloud Python Client==========================    Python idiomatic client for `Google Cloud Platform`_ services... _Google Cloud Platform: https://cloud.google.com/|pypi| |versions|``google-cloud``----------------**Warning**: This package has moved. It has been renamed to`google-cloud on PyPI`_. No new releases will be made for``gcloud``... _google-cloud on PyPI: https://pypi.python.org/pypi/google-cloudOverview---------  `Homepage`_-  `API Documentation`_.. _Homepage: https://googlecloudplatform.github.io/gcloud-python/.. _API Documentation: http://googlecloudplatform.github.io/gcloud-python/stable/This client supports the following Google Cloud Platform services:-  Google Cloud `Datastore`_-  Google Cloud `Storage`_-  Google Cloud `Pub/Sub`_-  Google `BigQuery`_-  Google Cloud `Resource Manager`_-  Google `Stackdriver Logging`_.. _Datastore: https://github.com/GoogleCloudPlatform/gcloud-python#google-cloud-datastore.. _Storage: https://github.com/GoogleCloudPlatform/gcloud-python#google-cloud-storage.. _Pub/Sub: https://github.com/GoogleCloudPlatform/gcloud-python#google-cloud-pubsub.. _BigQuery: https://github.com/GoogleCloudPlatform/gcloud-python#google-bigquery.. _Resource Manager: https://github.com/GoogleCloudPlatform/gcloud-python#google-cloud-resource-manager.. _Stackdriver Logging: https://github.com/GoogleCloudPlatform/gcloud-python#google-cloud-loggingIf you need support for other Google APIs, check out the`Google APIs Python Client library`_... _Google APIs Python Client library: https://github.com/google/google-api-python-clientQuick Start-----------::    $ pip install --upgrade gcloudExample Applications---------------------  `getting-started-python`_ - A sample and `tutorial`_ that demonstrates how to build a complete web application using Cloud Datastore, Cloud Storage, and Cloud Pub/Sub and deploy it to Google App Engine or Google Compute Engine.-  `gcloud-python-expenses-demo`_ - A sample expenses demo using Cloud Datastore and Cloud Storage.. _getting-started-python: https://github.com/GoogleCloudPlatform/getting-started-python.. _tutorial: https://cloud.google.com/python.. _gcloud-python-expenses-demo: https://github.com/GoogleCloudPlatform/gcloud-python-expenses-demoAuthentication--------------With ``gcloud-python`` we try to make authentication as painless as possible.Check out the `Authentication section`_ in our documentation to learn more.You may also find the `authentication document`_ shared by all the ``gcloud-*``libraries to be helpful... _Authentication section: http://gcloud-python.readthedocs.org/en/latest/gcloud-auth.html.. _authentication document: https://github.com/GoogleCloudPlatform/gcloud-common/tree/master/authenticationGoogle Cloud Datastore----------------------Google `Cloud Datastore`_ (`Datastore API docs`_) is a fully managed, schemalessdatabase for storing non-relational data. Cloud Datastore automatically scaleswith your users and supports ACID transactions, high availability of reads andwrites, strong consistency for reads and ancestor queries, and eventualconsistency for all other queries... _Cloud Datastore: https://cloud.google.com/datastore/docs.. _Datastore API docs: https://cloud.google.com/datastore/docs/apis/v1beta3/See the ``gcloud-python`` API `datastore documentation`_ to learn how tointeract with the Cloud Datastore using this Client Library... _datastore documentation: https://googlecloudplatform.github.io/gcloud-python/stable/datastore-client.htmlSee the `official Google Cloud Datastore documentation`_ for more details on howto activate Cloud Datastore for your project... _official Google Cloud Datastore documentation: https://cloud.google.com/datastore/docs/activate.. code:: python    from gcloud import datastore    # Create, populate and persist an entity    entity = datastore.Entity(key=datastore.Key('EntityKind'))    entity.update({        'foo': u'bar',        'baz': 1337,        'qux': False,    })    # Then query for entities    query = datastore.Query(kind='EntityKind')    for result in query.fetch():        print resultGoogle Cloud Storage--------------------Google `Cloud Storage`_ (`Storage API docs`_) allows you to store data on Googleinfrastructure with very high reliability, performance and availability, and canbe used to distribute large data objects to users via direct download... _Cloud Storage: https://cloud.google.com/storage/docs.. _Storage API docs: https://cloud.google.com/storage/docs/json_api/v1See the ``gcloud-python`` API `storage documentation`_ to learn how to connectto Cloud Storage using this Client Library... _storage documentation: https://googlecloudplatform.github.io/gcloud-python/stable/storage-client.htmlYou need to create a Google Cloud Storage bucket to use this client library.Follow along with the `official Google Cloud Storage documentation`_ to learnhow to create a bucket... _official Google Cloud Storage documentation: https://cloud.google.com/storage/docs/cloud-console#_creatingbuckets.. code:: python    from gcloud import storage    client = storage.Client()    bucket = client.get_bucket('bucket-id-here')    # Then do other things...    blob = bucket.get_blob('remote/path/to/file.txt')    print blob.download_as_string()    blob.upload_from_string('New contents!')    blob2 = bucket.blob('remote/path/storage.txt')    blob2.upload_from_filename(filename='/local/path.txt')Google Cloud Pub/Sub--------------------Google `Cloud Pub/Sub`_ (`Pub/Sub API docs`_) is designed to provide reliable,many-to-many, asynchronous messaging between applications. Publisherapplications can send messages to a ``topic`` and other applications cansubscribe to that topic to receive the messages. By decoupling senders andreceivers, Google Cloud Pub/Sub allows developers to communicate betweenindependently written applications... _Cloud Pub/Sub: https://cloud.google.com/pubsub/docs.. _Pub/Sub API docs: https://cloud.google.com/pubsub/reference/rest/See the ``gcloud-python`` API `Pub/Sub documentation`_ to learn how to connectto Cloud Pub/Sub using this Client Library... _Pub/Sub documentation: https://googlecloudplatform.github.io/gcloud-python/stable/pubsub-usage.htmlTo get started with this API, you'll need to create.. code:: python    from gcloud import pubsub    client = pubsub.Client()    topic = client.topic('topic_name')    topic.create()    topic.publish('this is the message_payload',                  attr1='value1', attr2='value2')Google BigQuery---------------Querying massive datasets can be time consuming and expensive without theright hardware and infrastructure. Google`BigQuery`__ (`BigQuery API docs`_)solves this problem by enabling super-fast, SQL-like queries againstappend-only tables, using the processing power of Google's infrastructure... _BQ-indirect: https://cloud.google.com/bigquery/what-is-bigquery.. _BigQuery API docs: https://cloud.google.com/bigquery/docs/reference/v2/__ `BQ-indirect`_This package is still being implemented, but it is almost complete!Load data from CSV~~~~~~~~~~~~~~~~~~.. code:: python    import csv    from gcloud import bigquery    from gcloud.bigquery import SchemaField    client = bigquery.Client()    dataset = client.dataset('dataset_name')    dataset.create()  # API request    SCHEMA = [        SchemaField('full_name', 'STRING', mode='required'),        SchemaField('age', 'INTEGER', mode='required'),    ]    table = dataset.table('table_name', SCHEMA)    table.create()    with open('csv_file', 'rb') as readable:        table.upload_from_file(            readable, source_format='CSV', skip_leading_rows=1)Perform a synchronous query~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    # Perform a synchronous query.    QUERY = (        'SELECT name FROM [bigquery-public-data:usa_names.usa_1910_2013] '        'WHERE state = &quot;TX&quot;')    query = client.run_sync_query('%s LIMIT 100' % QUERY)    query.timeout_ms = TIMEOUT_MS    query.run()    for row in query.rows:        print rowSee the ``gcloud-python`` API `BigQuery documentation`_ to learn how to connectto BigQuery using this Client Library... _BigQuery documentation: https://googlecloudplatform.github.io/gcloud-python/stable/bigquery-usage.htmlGoogle Cloud Resource Manager-----------------------------The Cloud `Resource Manager`__ API (`Resource Manager API docs`_) providesmethods that you can use to programmatically manage your projects in theGoogle Cloud Platform... _RM-indirect: https://cloud.google.com/resource-manager/.. _Resource Manager API docs: https://cloud.google.com/resource-manager/reference/rest/__ `RM-indirect`_See the ``gcloud-python`` API `Resource Manager documentation`_ to learn how tomanage projects using this Client Library... _Resource Manager documentation: https://googlecloudplatform.github.io/gcloud-python/stable/resource-manager-api.htmlGoogle Stackdriver Logging--------------------------`Stackdriver Logging`__ API (`Logging API docs`_) allows you to store, search,analyze, monitor, and alert on log data and events from Google Cloud Platform... _SL-indirect: https://cloud.google.com/logging/.. _Logging API docs: https://cloud.google.com/logging/docs/__ `SL-indirect`_.. code:: python    from gcloud import logging    client = logging.Client()    logger = client.logger('log_name')    logger.log_text(&quot;A simple entry&quot;)  # API callExample of fetching entries:.. code:: python    entries, token = logger.list_entries()    for entry in entries:        print entry.payloadSee the ``gcloud-python`` API `logging documentation`_ to learn how to connectto Stackdriver Logging using this Client Library... _logging documentation: https://googlecloudplatform.github.io/gcloud-python/stable/logging-usage.htmlContributing------------Contributions to this library are always welcome and highly encouraged.See `CONTRIBUTING doc`_ for more information on how to get started... _CONTRIBUTING doc: https://github.com/GoogleCloudPlatform/gcloud-python/blob/master/CONTRIBUTING.rstLicense-------Apache 2.0 - See `the LICENSE`_ for more information... _the LICENSE: https://github.com/GoogleCloudPlatform/gcloud-python/blob/master/LICENSE.. |build| image:: https://travis-ci.org/GoogleCloudPlatform/gcloud-python.svg?branch=master   :target: https://travis-ci.org/GoogleCloudPlatform/gcloud-python.. |coverage| image:: https://codecov.io/gh/GoogleCloudPlatform/gcloud-python/branch/master/graph/badge.svg   :target: https://codecov.io/gh/GoogleCloudPlatform/gcloud-python.. |pypi| image:: https://img.shields.io/pypi/v/gcloud.svg   :target: https://pypi.python.org/pypi/gcloud.. |versions| image:: https://img.shields.io/pypi/pyversions/gcloud.svg   :target: https://pypi.python.org/pypi/gcloud</longdescription>
</pkgmetadata>