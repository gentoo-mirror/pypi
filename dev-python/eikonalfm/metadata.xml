<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Eikonal Fast Marchingeikonalfm is a Python (C++) extension which implements the Fast Marching method for the eikonal equation  &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://latex.codecogs.com/svg.latex?\lvert\nabla\tau(x)\rvert^2=\frac{1}{c^2(x)},&quot; title=&quot;\lvert\nabla\tau(x)\rvert^2=\frac{1}{c^2(x)},&quot; /&gt;&lt;/p&gt;  and the factored eikonal equation  &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://latex.codecogs.com/svg.latex?\lvert(\tau_0\nabla\tau_1&amp;plus;\tau_1\nabla\tau_0)(x)\rvert^2=\frac{1}{c^2(x)},&quot; title=&quot;\lvert(\tau_0\nabla\tau_1+\tau_1\nabla\tau_0)(x)\rvert^2=\frac{1}{c^2(x)},&quot; /&gt;&lt;/p&gt;  where &lt;img src=&quot;https://latex.codecogs.com/svg.latex?\inline&amp;space;\tau_0(x)=\lvert&amp;space;x-x_s\rvert.&quot; title=&quot;\tau_0(x)=\lvert x-x_s\rvert&quot; /&gt;## References- J. Sethian. Fast marching methods. SIAM Review, 41(2):199-235, 1999. doi: 10.1137/S0036144598347059. URL https://doi.org/10.1137/S0036144598347059- Eran Treister and Eldad Haber. A fast marching algorithm for the factored eikonal equation. Journal of Computational Physics, 324:210-225, 2016.## Requirements- Python 3- numpy version 1.7 or higher- C++11 compiler## Installation### Installation from PyPi:```bashpip install eikonalfm```### Manual install from the repository:```bashgit clone https://github.com/kevinganster/eikonalfm.gitcd eikonalfmpip install .```or```bashpip install git+https://github.com/kevinganster/eikonalfm.git```## Examples```pythonimport numpy as npimport eikonalfmc = np.ones((100, 100))x_s = (0, 0)dx = (1.0, 1.0)order = 2tau_fm = eikonalfm.fast_marching(c, x_s, dx, order)tau1_ffm = eikonalfm.factored_fast_marching(c, x_s, dx, order)```Note that the source position `x_s` describes an index-vector.To visualize the results, matplotlib (https://pypi.org/project/matplotlib/) can be used, for example:```pythonimport matplotlib.pyplot as plt# for the distance-function 'x_s' also describes an index-vectortau0 = eikonalfm.distance(tau1_ffm.shape, dx, x_s, indexing=&quot;ij&quot;)plt.contourf(tau0 * tau1_ffm)plt.show()```</longdescription>
</pkgmetadata>