<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># **Sixth**[![N|Solid](https://firebasestorage.googleapis.com/v0/b/test-103bf.appspot.com/o/waves.png?alt=media&amp;token=0fa4c489-d9c9-4a3b-9178-593b2b018613)](https://nodesource.com/products/nsolid)Six helps you proactively identify security vulnerabilities and prevent cyberattacks on your system that could cost you millions of dollars.## Features- Automated Penetration Testing- End to End encryption of data- DDOS attack mitigation- Man in the Middle Attack prevention- No Rate Limit Attack Prevention- Cross site scripting mitigation- Cross site request forgery mitigationSixth SDK is a lightweight library that helps you make sure your application stays secured from all sorts of cybersecurity threats and attacks and helps you mitigate them. visit our [website](https://withsix.co) to get started!.## **Installation and usage**### PythonSixth SDK is currently only available for [fasiapi](https://fastapi.tiangolo.com/lo/) and can be installed as followed.#### _Installation_```shpip install six-python```#### _usage_```python#import sixth SDKfrom sixth_sense.sixth_sense import SixthSensefrom fastapi import FastAPIapp = FastAPI()# initalize app, add routes, middleware, exception handlers etc#....SixthSense(apikey=&quot;api key&quot;, app=app).init()if __name__ == &quot;__main__&quot;:    uvicorn.run(app, host=host, port=PORT)```### JavascriptSixth SDK is currently only available for [express](https://expressjs.com/) and can be installed as followed.#### _Installation_```shnpm i sixth-node```#### _usage_```jsimport SixthSense from &quot;sixth-node&quot;;import  express  from &quot;express&quot;;const app = express();const six = new SixthSense(&quot;apikey&quot;, app)await six.init()// add routes, middleware, exception handlers etc// after done adding routes, middleware, etcsix.sync_project();app.listen(PORT, ()=&gt; console.log(`Server running on port: http://localhost:${PORT}`))```</longdescription>
</pkgmetadata>