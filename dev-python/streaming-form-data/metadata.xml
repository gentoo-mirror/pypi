<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Streaming multipart/form-data parser[![image](https://github.com/siddhantgoel/streaming-form-data/actions/workflows/test.yml/badge.svg)](https://github.com/siddhantgoel/streaming-form-data/actions/workflows/test.yml) [![image](https://github.com/siddhantgoel/streaming-form-data/actions/workflows/build.yml/badge.svg)](https://github.com/siddhantgoel/streaming-form-data/actions/workflows/build.yml)[![image](https://img.shields.io/pypi/v/streaming-form-data.svg)](https://pypi.python.org/pypi/streaming-form-data)[![image](https://img.shields.io/pypi/pyversions/streaming-form-data.svg)](https://pypi.python.org/pypi/streaming-form-data)[![image](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)`streaming_form_data` provides a Python parser for parsing `multipart/form-data`input chunks (the encoding used when submitting data over HTTP through HTMLforms).## Testimonials&gt; &quot;[_this speeds up file uploads to my Flask app by **more than factor 10**_](https://github.com/pallets/werkzeug/issues/875#issuecomment-429287766)&quot;&gt; &quot;[_Thanks a lot for your fix with streaming-form-data. I can finally upload gigabyte sized files at good speed and without memory filling up!_](https://github.com/pallets/werkzeug/issues/875#issuecomment-530020990)&quot;## Installation```bash$ pip install streaming-form-data```In case you prefer cloning the Github repository and installing manually, pleasenote that `main` is the development branch, so `stable` is what you should beworking with.## Usage```python&gt;&gt;&gt; from streaming_form_data import StreamingFormDataParser&gt;&gt;&gt; from streaming_form_data.targets import ValueTarget, FileTarget, NullTarget&gt;&gt;&gt;&gt;&gt;&gt; headers = {'Content-Type': 'multipart/form-data; boundary=boundary'}&gt;&gt;&gt;&gt;&gt;&gt; parser = StreamingFormDataParser(headers=headers)&gt;&gt;&gt;&gt;&gt;&gt; parser.register('name', ValueTarget())&gt;&gt;&gt; parser.register('file', FileTarget('/tmp/file.txt'))&gt;&gt;&gt; parser.register('discard-me', NullTarget())&gt;&gt;&gt;&gt;&gt;&gt; for chunk in request.body:...     parser.data_received(chunk)...&gt;&gt;&gt;```## DocumentationUp-to-date documentation is available on [Read the Docs].## DevelopmentPlease make sure you have Python 3.8+ and [pip-tools] installed.Since this package includes a C extension, please make sure you have a working Ccompiler available. On Debian-based distros this usually means installing the`build-essentials` package.1. Git clone the repository:   `git clone https://github.com/siddhantgoel/streaming-form-data`2. Install the packages required for development:   `make pip-sync`3. Install `streaming_form_data` itself:   `pip install .`4. That's basically it. You should now be able to run the test suite:   `make test`Note that if you make any changes to Cython files (`.pyx, .pxd, .pxi`), you'll need to re-compile (`make compile`) and re-install `streaming_form_data` before you can test your changes.[pip-tools]: https://pypi.org/project/pip-tools/[Read the Docs]: https://streaming-form-data.readthedocs.io/</longdescription>
</pkgmetadata>