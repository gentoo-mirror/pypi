<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aiogram3-formA library to create forms in aiogram3```shellpip install aiogram3-form```# Example```Pythonimport asynciofrom aiogram import Bot, Dispatcher, F, Router, typesfrom aiogram3_form import Form, FormFieldfrom aiogram.fsm.context import FSMContextbot = Bot(token=YOUR_TOKEN)dispatcher = Dispatcher()router = Router()dispatcher.include_router(router)class NameForm(Form, router=router):    first_name: str = FormField(enter_message_text=&quot;Enter your first name please&quot;)    second_name: str = FormField(        enter_message_text=&quot;Enter your second name please&quot;,        filter=F.text.len() &gt; 10 &amp; F.text,    )    age: int = FormField(        enter_message_text=&quot;Enter age as integer&quot;,        error_message_text=&quot;Age should be numeric!&quot;,    )@NameForm.submit()async def name_form_submit_handler(form: NameForm, event_chat: types.Chat):    # handle form data    # also supports aiogram standart DI (e. g. middlewares, filters, etc)    await form.answer(        f&quot;{form.first_name} {form.second_name} of age {form.age} in chat {event_chat.title}&quot;    )@router.message(F.text == &quot;/form&quot;)async def form_handler(_, state: FSMContext):    await NameForm.start(bot, state)  # start your formasync def main():    await dispatcher.start_polling(bot)asyncio.run(main())```</longdescription>
</pkgmetadata>