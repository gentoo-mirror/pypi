<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># OARepo Model Builder Multilingualplugin for the [oarepo-model-builder module](https://github.com/oarepo/oarepo-model-builder) that adds support formultilingual data types## UsageWithin this plugin, two data types are added: multilingual and i18nstr. They can be added to the data modelusing `type: multilingual` or `type: i18nstr`.Values containing language tags must be in IETF [format](https://www.w3.org/International/articles/language-tags/).The structure of both data types can be changed using the `multilingual` field## i18nStrAn object that contains the language of the item and the actual value of the item.### Example#### Model```json&quot;abstract&quot;: {&quot;type&quot;: &quot;i18nStr&quot;}```#### Generated JsonSchema```json &quot;abstract&quot;: {    &quot;type&quot;: &quot;object&quot;,    &quot;properties&quot;: {        &quot;lang&quot;: {        &quot;type&quot;: &quot;string&quot;        },        &quot;value&quot;: {        &quot;type&quot;: &quot;string&quot;        }    }  }```## MultilingualArray of i18nStr objects.### Example#### Model```json&quot;abstract&quot;: {&quot;type&quot;: &quot;multilingual&quot;}```#### Generated Schema```json &quot;abstract&quot;: {    &quot;type&quot;: &quot;array&quot;,    &quot;items&quot;: {        &quot;type&quot;: &quot;object&quot;,        &quot;properties&quot;: {            &quot;lang&quot;: {            &quot;type&quot;: &quot;string&quot;            },            &quot;value&quot;: {            &quot;type&quot;: &quot;string&quot;            }        }    }}```### Usage of i18nStr within another objecti18nstr can be added to another object using `&quot;use&quot;: &quot;i18n&quot;`.#### Example### Supported languages:Supported languages are defined in the object in the structure: `&quot;supported language tag&quot;: {object containing additionalinformation}` within the field `supported-langs` in model settings.Supported languages definition is used to specify the languages to be indexed in elasticsearch and opensearch,respectively. All supplied data for the supported language will be inserted into the mapping definition.#### Example##### Model```json&quot;model&quot;: {&quot;properties&quot;: {&quot;a&quot;: {&quot;type&quot;: &quot;multilingual&quot;}}          &quot;settings&quot;: {&quot;supported-langs&quot;: {            &quot;cs&quot;: {                &quot;text&quot;: {                    &quot;analyzer&quot;: &quot;czech&quot;,                },                &quot;sort&quot;: {                    &quot;type&quot;: &quot;icu_collation_keyword&quot;                },                &quot;keyword&quot;: {                    &quot;test&quot;: &quot;test&quot;                }            },            &quot;en&quot;: {                &quot;text&quot;: {                    &quot;analyzer&quot;: &quot;en&quot;                },                &quot;sort&quot;: {                    &quot;type&quot;: &quot;icu_collation_keyword&quot;                }            }}}}```##### Generated Schema```json&quot;mappings&quot;: {        &quot;properties&quot;: {            &quot;a&quot;: {                &quot;type&quot;: &quot;object&quot;,                &quot;properties&quot;: {                    &quot;lang&quot;: {                        &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;value&quot;: {                        &quot;type&quot;: &quot;text&quot;                    }                }            },            &quot;a_cs&quot;: {                &quot;type&quot;: &quot;text&quot;,                &quot;analyzer&quot;: &quot;czech&quot;,                &quot;sort&quot;: {                    &quot;type&quot;: &quot;icu_collation_keyword&quot;,                    &quot;index&quot;: false,                    &quot;language&quot;: &quot;cs&quot;                },                &quot;fields&quot;: {                    &quot;keyword&quot;: {                        &quot;test&quot;: &quot;test&quot;,                        &quot;type&quot;: &quot;keyword&quot;                    }                }            },            &quot;a_en&quot;: {                &quot;type&quot;: &quot;text&quot;,                &quot;analyzer&quot;: &quot;en&quot;,                &quot;sort&quot;: {                    &quot;type&quot;: &quot;icu_collation_keyword&quot;,                    &quot;index&quot;: false,                    &quot;language&quot;: &quot;en&quot;                },                &quot;fields&quot;: {                    &quot;keyword&quot;: {                        &quot;type&quot;: &quot;keyword&quot;                    }                }            }}```### The change of the name of a language or value fieldThe name of the field for the language value and the name of the field for the value of the item itself can be changedusing the `multilingual` field and the `value-field` and `lang-field` fields. It is not required to rename both fields.#### Example:##### Model```json&quot;b&quot;:{&quot;type&quot;: &quot;i18nStr&quot;, &quot;multilingual&quot;:{&quot;lang-field&quot;: &quot;language&quot;, &quot;value-field&quot;: &quot;val&quot;}}```##### Generated Schema```pythonclass BSchema(ma.Schema, ):    &quot;&quot;&quot;BSchema schema.&quot;&quot;&quot;        language = ma_fields.String()        val = ma_fields.String()    class TestSchema(ma.Schema, ):    &quot;&quot;&quot;TestSchema schema.&quot;&quot;&quot;        b = ma_fields.Nested(lambda: BSchema())```### Indexing another data type using supported languagesIf supported languages are defined, indexing for these languages can be added to data types other than multilingual andi18nStr. For this purpose you need to add to the field: `'multilingual': {'i18n': True}`#### Example:##### Model:```json&quot;model&quot;: {&quot;properties&quot;: {&quot;a&quot;: {&quot;type&quot;: &quot;fulltext&quot;, &quot;multilingual&quot;: {&quot;i18n&quot;: true}}}        &quot;settings&quot;: {&quot;supported-langs&quot;: {&quot;cs&quot;: {}, &quot;en&quot;: {}}}}```##### Schema:```json{&quot;mappings&quot;:{&quot;properties&quot;:{  &quot;a&quot;:{&quot;type&quot;:&quot;text&quot;},  &quot;a_cs&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;fields&quot;:{&quot;keyword&quot;:{&quot;type&quot;:&quot;keyword&quot;,&quot;ignore_above&quot;:50}}},  &quot;a_en&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;fields&quot;:{&quot;keyword&quot;:{&quot;type&quot;:&quot;keyword&quot;,&quot;ignore_above&quot;:50}}}}}}```</longdescription>
</pkgmetadata>