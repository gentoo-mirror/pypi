<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Logo](https://raw.githubusercontent.com/cruisen/cli-calc/4986df3abb3f1871d6669dec27d5e37aba0d11a3/assets/images/Cli-Calc.png)# cli-calc[![test](https://github.com/cruisen/cli-calc/actions/workflows/test.yml/badge.svg)](https://github.com/cruisen/cli-calc/actions/workflows/test.yml)[![codecov](https://codecov.io/gh/cruisen/cli-calc/branch/main/graph/badge.svg?token=i9nYZL3MM3)](https://codecov.io/gh/cruisen/cli-calc)[![Python Version](https://img.shields.io/pypi/pyversions/cli-calc.svg)](https://pypi.org/project/cli-calc/)[![pypi](https://img.shields.io/pypi/v/cli-calc)](https://pypi.org/project/cli-calc/)[![github release](https://img.shields.io/github/release-date/cruisen/cli-calc)](https://github.com/cruisen/cli-calc/releases)[![pypi downloads](https://img.shields.io/pypi/dm/cli-calc?label=pypi%20downloads)](https://pypistats.org/packages/cli-calc)[![DEV](https://img.shields.io/badge/about-dev-green)](https://github.com/cruisen/cli-calc/blob/main/docs/extras/develop.md)Powerful yet easy command line calculator.## IntroductionPlease note: Using plain python at the command line already does provide a pretty decent calculator:```$ pythonPython 3.8.5 (default, Aug  2 2020, 16:00:15)[Clang 11.0.0 (clang-1100.0.33.17)] on darwinType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; 2**101024&gt;&gt;&gt; _ / 10102.4&gt;&gt;&gt; import math&gt;&gt;&gt; math.pi3.141592653589793&gt;&gt;&gt; math.sin(math.pi / 2)1.0&gt;&gt;&gt; exit()```[Read more about[Python as a Calculator](https://docs.python.org/3/tutorial/introduction.html#using-python-as-a-calculator).]But not all is straight forward.For example, if you want to calculate ```sin(pi/2)```:* First you need to ```import math```,* and then use it with ```math.sin( math.pi / 2 )```.But[there must be a better way!](https://www.youtube.com/watch?v=UANN2Eu6ZnM)And there is...### cli-calc```$ cli-calchex, int, float, : INPUT0x0, 0, 0.0, : 2**102**100x400, 1024, 1024.0, : _ / 101024.0/100x66, 102, 102.4, : pipi0x3, 3, 3.141592653589793, : sin(pi / 2)sin(pi/2)0x1, 1, 1.0, : q$```[Batteries included](https://www.python.org/dev/peps/pep-0206/#batteries-included-philosophy):* ```cli-calc``` adds the standard[math](https://docs.python.org/3/library/math.html)library to the mix, as well as cmath and others.* Provides convenience functions for formatted output, like[fractions](https://docs.python.org/3.6/library/fractions.html)and[IEEE 754](https://en.wikipedia.org/wiki/IEEE_754).* Supports line input from files and Unix pipes.* And some more... :-)## More examples```$ cli-calchex, int, float, : INPUT0x0, 0, 0.0, : cos(pi/2)cos(pi/2)0x0, 0, 6.123233995736766e-17, : 0xFF ^ 0b100xFF^0b100xfd, 253, 253.0, : 2**8-12**8-10xff, 255, 255.0, : log(e)log(e)0x1, 1, 1.0, : comb(49,6)comb(49,6)0xd56048, 13983816, 13983816.0, : factorial(42)factorial(42)0x3c1581d491b28f523c23abdf35b689c908000000000, 1405006117752879898543142606244511569936384000000000, 1.40500611775288e+51, : random()random()0x0, 0, 0.24958817003921918, : cmath.phase(complex(-1.0, 0.0))cmath.phase(complex(-1.0,0.0))0x3, 3, 3.141592653589793, : q$```## Included Math LibrariesReady to use out of the box:- [standard operators](https://www.w3schools.com/python/python_operators.asp)  ``` -, &gt;&gt;, ...```- [standard math library](https://docs.python.org/3/library/math.html)  ```cd, log, sin, sinh, gamma, pi, e, tau, inf, nan...```- [cmath](https://docs.python.org/3/library/cmath.html)  ```phase(complex(-1.0, 0.0)), and then most of the above with complex numbers.```- [random](https://docs.python.org/3/library/random.html#examples)  ```random, choice(['win', 'lose', 'draw']), mean, ...```- [built in functions](https://docs.python.org/3/library/functions.html)  ```max, help, sum, ...```# Installation```bashpip install cli-calc```- [pypi cli-calc](https://pypi.org/project/cli-calc/)## ConfigurationFor convenience, add a shell script in ```~/bin```:```bashcd ~/binvi cli-calc```with the following lines:*Note*: Please adjust the path!```bashpath=~/path/to/your/cli-calc/cd $pathpython3 -m cli_calc```Make it executable:```bashchmod a+x cli-calc```then use it anywhere. :-)```bashecho &quot;7+8&quot; | cli-calccat foo.bar | cli-calccli-calc```## Help```bashcli-calch--------------------------------------------------    cli-calc 0.3.1: Powerful yet easy command line calculator.    INPUT:    &quot;q&quot; for quit, &quot;h&quot; for help    &quot;_&quot; for last float value    &quot;_int_&quot; for last int value    &quot;sin(pi/2)&quot; for sinus, ...    &quot;pi&quot;, &quot;tau&quot; and &quot;e&quot; for pi, tau and Euler    &quot;+f&quot; to add display for fraction, &quot;-f&quot; to suppress display for fraction        Other letters are:        he(x), (o)ctal, (b)inary, (i)nteger,        (f)raction, (t)ruth, i(e)ee, ieee_bi(n), f(r)om_ieee        &quot;float&quot; is always visible    Also try &quot;cos(pi/2)&quot;, &quot;0xFF ^ 0b10&quot;, &quot;2**8-1&quot;, &quot;factorial(42)&quot;, &quot;help(math)&quot;    See https://docs.python.org/3/library/math.html, use without &quot;math.&quot;        https://www.w3schools.com/python/python_operators.asp        https://github.com/cruisen/cli-calc    (c) 2022-2022 Nikolai von Krusenstiern, License: MIT    --------------------------------------------------hex, int, float, : INPUT```* Permalink to this document as a[github page](https://cruisen.github.io/cli-calc/)## Warning- Use of [```eval```](https://docs.python.org/3/library/functions.html#eval) is evil.  However precautions are taken.# Pull RequestPR's are Welcome!* Please read more about  [Contributing](https://github.com/cruisen/cli-calc/blob/main/CONTRIBUTING.md)* and our  [development](https://github.com/cruisen/cli-calc/blob/main/docs/extras/develop.md)  environment and tool set.* Or just simply raise an [issue](https://github.com/cruisen/cli-calc/issues/new/choose).# License[MIT](https://github.com/cruisen/cli-calc/blob/master/LICENSE)## CreditsThis project was generated with [`wemake-python-package`](https://github.com/wemake-services/wemake-python-package). Current template version is: [d06993f12e3ffad79652a2aec86189dee92d94dd](https://github.com/wemake-services/wemake-python-package/tree/d06993f12e3ffad79652a2aec86189dee92d94dd). See what is [updated](https://github.com/wemake-services/wemake-python-package/compare/d06993f12e3ffad79652a2aec86189dee92d94dd...master) since then.</longdescription>
</pkgmetadata>