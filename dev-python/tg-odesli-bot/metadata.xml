<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Telegram Odesli BotSend a song link in any (supported) music streaming service and get backa message with links in other services.Add in Telegram: [@odesli\_bot](https://t.me/odesli_bot)It's useful but still work in progress. Some turbulence is expected.[![PyPI](https://img.shields.io/pypi/v/tg-odesli-bot?color=blue)](https://pypi.org/project/tg-odesli-bot/)[![Azure build status](https://dev.azure.com/9dogs/tg-odesli-bot/_apis/build/status/9dogs.tg-odesli-bot?branchName=master)](https://github.com/9dogs/tg-odesli-bot)[![Code coverage](https://codecov.io/gh/9dogs/tg-odesli-bot/branch/master/graph/badge.svg?token=3nWZWJ3Bl3)](https://codecov.io/gh/9dogs/tg-odesli-bot)[![Supported versions](https://img.shields.io/badge/python-3.10%20|%203.11-blue)](https://github.com/9dogs/tg-odesli-bot)[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)[![Codestyle: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)## What is it for?You love to share music with your friends (or be shared with), but yousettled in different streaming services? With the help of this bot youcan share any song link to the Bot and get all other links back inreply.Powered by the great [Odesli](https://odesli.co/) (former Songlink) service.You can message the bot directly, invite it to group chats or use an inlinemode (type `@odesli_bot &lt;URL&gt;`). In group chats the bot will react only tomessages with music streaming links (it will also skip messages marked withspecial token `!skip`). You can promote the bot to a group admin and itwill remove original message so that the chat remains tidy.Original message           |  Bot's replay:-------------------------:|:-------------------------:&lt;img alt=&quot;Original message&quot; title=&quot;Original message&quot; src=&quot;https://user-images.githubusercontent.com/432235/67324149-0a2b2580-f51c-11e9-8ce2-033cdf2d6628.png&quot; height=&quot;200px&quot;&gt;  | &lt;img alt=&quot;Bot's reply&quot; title=&quot;Bot's reply&quot; src=&quot;https://user-images.githubusercontent.com/432235/67324159-0dbeac80-f51c-11e9-834a-7d4831a661d8.png&quot; height=&quot;200px&quot;&gt;## Features- Inline mode- Inline search mode- Private chat mode- Group chat mode## Supported servicesCurrently, the following services are supported:  - Deezer  - Google Music  - SoundCloud  - Yandex Music  - Spotify  - YouTube Music  - YouTube  - Apple Music  - TidalNote that bot doesn't react to YouTube links in group chats. Reasons are [here](https://github.com/9dogs/tg-odesli-bot/issues/12).## Privacy considerationsThe bot have to have access to messages in group chats to operate (thatis, it operates with disabled [privacymode](https://core.telegram.org/bots#privacy-mode)). It does not storenor transfer messages anywhere. However, the only way to be completelyprivate is to read through source code in this repository **and** runyour copy of the bot (see section below). Or simply create a specialgroup only for music sharing and where no sensitive information will beposted.## Running your own copy### PrerequisitesYou need a Telegram [bottoken](https://core.telegram.org/bots/api#authorizing-your-bot) to runyour copy of the bot. Don't worry, it can be obtained easily. Follow the[instructions](https://core.telegram.org/bots#6-botfather) to create anew bot (you can set a name and a username to whatever you want). All youneed is a string like `110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw` -this is your new bot token.Additionally, disable privacy mode for your bot in a dialog with@BotFather: &quot;Group Privacy&quot; - &quot;Turn off&quot; (that is for the bot to be ableto read group messages).Bot from this repository will looks for `TG_ODESLI_BOT_TG_API_TOKEN`environment variable on start, thus you must set it either in shell orvia `.env` file:```console$ echo &quot;&lt;your_token&gt;&quot; &gt; .env$ # OR$ TG_ODESLI_BOT_TG_API_TOKEN=&lt;your_token&gt; &lt;bot_run_command (see below)&gt;```Ones you obtain a Telegram bot token, you can run bot using either Python(3.10 or 3.11) or Docker.### Run PyPI versionCreate virtual environment, install `tg-odesli-bot` package and run the botwith `tg-odesli-bot` command:```console$ python -m venv botenv$ source botenv/bin/activate$ pip install tg-odesli-bot$ TG_ODESLI_BOT_TG_API_TOKEN=&lt;your_token&gt; tg-odesli-bot```### Run with DockerSet `TG_ODESLI_BOT_TG_API_TOKEN` environment variable and run the image`9dogs/tg-odesli-bot` (in order to use the `.env` file, mount it to`/opt/tg-odesli-bot/.env`):```console$ docker run --rm -it -v /path/to/.env:/opt/tg-odesli-bot/.env 9dogs/tg-odesli-bot# OR$ TG_ODESLI_BOT_TG_API_TOKEN=&lt;your_token&gt; docker run -it --rm 9dogs/tg-odesli-bot```### Run version from the repositoryClone this repository, [installpoetry](https://python-poetry.org/docs/#installation), copy `.env` fileinto the project's root directory and run the bot:```console$ git clone https://github.com/9dogs/tg-odesli-bot.git &amp;&amp; cd tg-odesli-bot# Install dependencies$ poetry install# If you have token in .env file$ cp /path/to/.env ./$ poetry run tg-odesli-bot# If you specify token via shell env var$ TG_ODESLI_BOT_TG_API_TOKEN=&lt;your_token&gt; poetry run tg-odesli-bot```## ContributingContributions are welcome via GitHub pull requests. The easiest way to bootstrapdevelopment environment is to build `builder` target of Docker image:```console$ git clone https://github.com/9dogs/tg-odesli-bot.git &amp;&amp; cd tg-odesli-bot$ docker build -t 9dogs/tg-odesli-bot:dev --target=builder --build-arg poetry_args= .```Then you can run a shell inside the container:```console$ docker run -it --rm -v %cd%:/opt/tg-odesli-bot -v /opt/tg-odesli-bot/.venv 9dogs/tg-odesli-bot:dev bash(container)$ make lint test```</longdescription>
</pkgmetadata>