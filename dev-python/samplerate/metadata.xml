<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-samplerate=================This is a wrapper around Erik de Castro Lopo's `libsamplerate`_ (aka SecretRabbit Code) for high-quality sample rate conversion.It implements all three `APIs&lt;http://www.mega-nerd.com/libsamplerate/api.html&gt;`_ available in`libsamplerate`_:* **Simple API**: for resampling a large chunk of data with a single library  call* **Full API**: for obtaining the resampled signal from successive chunks of  data* **Callback API**: like Full API, but input samples are provided by a callback  functionLibrary calls to `libsamplerate`_ are performed using `CFFI&lt;http://cffi.readthedocs.io/en/latest/&gt;`_.Installation------------    $ pip install samplerateBinaries of `libsamplerate`_ for macOS and Windows (32 and 64 bit) are includedand used if not present on the system.Usage-----.. code-block:: python   import numpy as np   import samplerate   # Synthesize data   fs = 1000.   t = np.arange(fs * 2) / fs   input_data = np.sin(2 * np.pi * 5 * t)   # Simple API   ratio = 1.5   converter = 'sinc_best'  # or 'sinc_fastest', ...   output_data_simple = samplerate.resample(input_data, ratio, converter)   # Full API   resampler = samplerate.Resampler(converter, channels=1)   output_data_full = resampler.process(input_data, ratio, end_of_input=True)   # The result is the same for both APIs.   assert np.allclose(output_data_simple, output_data_full)   # See `samplerate.CallbackResampler` for the Callback API, or   # `examples/play_modulation.py` for an example.See ``samplerate.resample``, ``samplerate.Resampler``, and``samplerate.CallbackResampler`` in the API documentation for details.See also--------* `scikits.samplerate &lt;https://pypi.python.org/pypi/scikits.samplerate&gt;`_  implements only the Simple API and uses `Cython &lt;http://cython.org/&gt;`_ for  extern calls. The `resample` function of `scikits.samplerate` and this package  share the same function signature for compatiblity.* `resampy &lt;https://github.com/bmcfee/resampy&gt;`_: sample rate conversion in  Python + Cython.License-------This project is licensed under the `MIT license&lt;https://opensource.org/licenses/MIT&gt;`_.As of version 0.1.9, `libsamplerate`_ is licensed under the `2-clause BSDlicense &lt;https://opensource.org/licenses/BSD-2-Clause&gt;`_... _libsamplerate: http://www.mega-nerd.com/libsamplerate/</longdescription>
</pkgmetadata>