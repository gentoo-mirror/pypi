<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Microsoft Azure SDK for PythonThis is the Microsoft Azure Traffic Manager Management Client Library.This package has been tested with Python 3.7+.For a more complete view of Azure libraries, see the [azure sdk python release](https://aka.ms/azsdk/python/all).## _Disclaimer__Azure SDK Python packages support for Python 2.7 has ended 01 January 2022. For more information and questions, please refer to https://github.com/Azure/azure-sdk-for-python/issues/20691_## Getting started### Prerequisites- Python 3.7+ is required to use this package.- [Azure subscription](https://azure.microsoft.com/free/)### Install the package```bashpip install azure-mgmt-trafficmanagerpip install azure-identity```### AuthenticationBy default, [Azure Active Directory](https://aka.ms/awps/aad) token authentication depends on correct configure of following environment variables.- `AZURE_CLIENT_ID` for Azure client ID.- `AZURE_TENANT_ID` for Azure tenant ID.- `AZURE_CLIENT_SECRET` for Azure client secret.In addition, Azure subscription ID can be configured via environment variable `AZURE_SUBSCRIPTION_ID`.With above configuration, client can be authenticated by following code:```pythonfrom azure.identity import DefaultAzureCredentialfrom azure.mgmt.trafficmanager import TrafficManagerManagementClientimport ossub_id = os.getenv(&quot;AZURE_SUBSCRIPTION_ID&quot;)client = TrafficManagerManagementClient(credential=DefaultAzureCredential(), subscription_id=sub_id)```## ExamplesCode samples for this package can be found at:- [Search Traffic Manager Management](https://docs.microsoft.com/samples/browse/?languages=python&amp;term=Getting%20started%20-%20Managing&amp;terms=Getting%20started%20-%20Managing) on docs.microsoft.com- [Azure Python Mgmt SDK Samples Repo](https://aka.ms/azsdk/python/mgmt/samples)## Troubleshooting## Next steps## Provide FeedbackIf you encounter any bugs or have suggestions, please file an issue in the[Issues](https://github.com/Azure/azure-sdk-for-python/issues)section of the project. ![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fazure-mgmt-trafficmanager%2FREADME.png)# Release History## 1.1.0 (2023-06-16)### Features Added  - Added operation ProfilesOperations.check_traffic_manager_name_availability_v2  - Model Endpoint has a new parameter always_serve## 1.1.0b1 (2022-11-17)### Features Added  - Model Endpoint has a new parameter always_serve## 1.0.0 (2022-01-19)**Features**  - Added model EndpointType## 1.0.0b1 (2021-05-13)This is beta preview version.This version uses a next-generation code generator that introduces important breaking changes, but also important new features (like unified authentication and async programming).**General breaking changes**- Credential system has been completly revamped:  - `azure.common.credentials` or `msrestazure.azure_active_directory` instances are no longer supported, use the `azure-identity` classes instead: https://pypi.org/project/azure-identity/  - `credentials` parameter has been renamed `credential`- The `config` attribute no longer exists on a client, configuration should be passed as kwarg. Example: `MyClient(credential, subscription_id, enable_logging=True)`. For a complete set of  supported options, see the [parameters accept in init documentation of azure-core](https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/CLIENT_LIBRARY_DEVELOPER.md#available-policies)- You can't import a `version` module anymore, use `__version__` instead- Operations that used to return a `msrest.polling.LROPoller` now returns a `azure.core.polling.LROPoller` and are prefixed with `begin_`.- Exceptions tree have been simplified and most exceptions are now `azure.core.exceptions.HttpResponseError` (`CloudError` has been removed).- Most of the operation kwarg have changed. Some of the most noticeable:  - `raw` has been removed. Equivalent feature can be found using `cls`, a callback that will give access to internal HTTP response for advanced user  - For a complete set of  supported options, see the [parameters accept in Request documentation of azure-core](https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/CLIENT_LIBRARY_DEVELOPER.md#available-policies)**General new features**- Type annotations support using `typing`. SDKs are mypy ready.- This client has now stable and official support for async. Check the `aio` namespace of your package to find the async client.- This client now support natively tracing library like OpenCensus or OpenTelemetry. See this [tracing quickstart](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/core/azure-core-tracing-opentelemetry) for an overview.## 0.51.0 (2019-01-08)**Features**  - Model Endpoint has a new parameter subnets  - Model Profile has a new parameter max_return  - Added operation group TrafficManagerUserMetricsKeysOperations## 0.50.0 (2018-05-25)**Features**  - Model Endpoint has a new parameter custom_headers  - Model MonitorConfig has a new parameter custom_headers  - Model MonitorConfig has a new parameter    expected_status_code_ranges  - Model Profile has a new parameter traffic_view_enrollment_status  - Added operation group HeatMapOperations  - Client class can be used as a context manager to keep the underlying    HTTP session open for performance**General Breaking changes**This version uses a next-generation code generator that *might*introduce breaking changes.  - Model signatures now use only keyword-argument syntax. All    positional arguments must be re-written as keyword-arguments. To    keep auto-completion in most cases, models are now generated for    Python 2 and Python 3. Python 3 uses the &quot;\*&quot; syntax for    keyword-only arguments.  - Enum types now use the &quot;str&quot; mixin (class AzureEnum(str, Enum)) to    improve the behavior when unrecognized enum values are encountered.    While this is not a breaking change, the distinctions are important,    and are documented here:    &lt;https://docs.python.org/3/library/enum.html#others&gt; At a glance:      - &quot;is&quot; should not be used at all.      - &quot;format&quot; will return the string value, where &quot;%s&quot; string        formatting will return `NameOfEnum.stringvalue`. Format syntax        should be prefered.  - New Long Running Operation:      - Return type changes from        `msrestazure.azure_operation.AzureOperationPoller` to        `msrest.polling.LROPoller`. External API is the same.      - Return type is now **always** a `msrest.polling.LROPoller`,        regardless of the optional parameters used.      - The behavior has changed when using `raw=True`. Instead of        returning the initial call result as `ClientRawResponse`,        without polling, now this returns an LROPoller. After polling,        the final resource will be returned as a `ClientRawResponse`.      - New `polling` parameter. The default behavior is        `Polling=True` which will poll using ARM algorithm. When        `Polling=False`, the response of the initial call will be        returned without polling.      - `polling` parameter accepts instances of subclasses of        `msrest.polling.PollingMethod`.      - `add_done_callback` will no longer raise if called after        polling is finished, but will instead execute the callback right        away.**Bugfixes**  - Compatibility of the sdist with wheel 0.31.0## 0.40.0 (2017-07-03)**Features**  - New MonitorConfig settings  - New Api Version 2017-05-01**Breaking changes**  - Rename &quot;list_by_in_resource_group&quot; to    &quot;list_by_resource_group&quot;  - Rename &quot;list_all&quot; to &quot;list_by_subscription&quot;## 0.30.0 (2017-04-20)  - Initial Release (ApiVersion 2017-03-01)This wheel package is built with the azure wheel extension</longdescription>
</pkgmetadata>