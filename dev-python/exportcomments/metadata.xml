<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ExportComments API for PythonOfficial Python client for the [ExportComments API](https://exportcomments.com/api). Build and run machine learning models for language processing from your Python apps.## InstallationYou can use pip to install the library:```bash$ pip install exportcomments```Alternatively, you can just clone the repository and run the setup.py script:```bash$ python setup.py install```## UsageBefore making requests to the API, you need to create an instance of the ExportComments client. You will have to use your [account API Key](https://exportcomments.com/pricing):```pythonfrom exportcomments import ExportComments# Instantiate the client Using your API keyex = ExportComments('&lt;YOUR API TOKEN HERE&gt;')```### Usage ExamplesFrom the ExportComments client instance, you can call any endpoint:## Check export```pythonresponse = ex.exports.check(    guid='dfd6a2f2-5579-421f-96ac-98993d0edea1')```### ResponsesThe response object returned by every endpoint call is a `ExportCommentsResponse` object. The `body` attribute has the parsed response from the API:```pythonprint(response.body)# =&gt;  {# =&gt;      &quot;code&quot;: 200,# =&gt;      &quot;success&quot;: true,# =&gt;      &quot;data&quot;: {# =&gt;          &quot;url&quot;: &quot;https://www.instagram.com/p/1234567&quot;,# =&gt;          &quot;guid&quot;: &quot;2cfb0b9d-7633-4341-a702-cb889fe549eb&quot;,# =&gt;          &quot;status&quot;: &quot;queueing&quot;,# =&gt;          &quot;replies&quot;: false,# =&gt;          &quot;fileName&quot;: &quot;comments5ea4b4d5a7602-1325511884314646.xlsx&quot;,# =&gt;          &quot;fileNameRAW&quot;: &quot;08b735760a5a40eb1fd70ca16e97aed3-2e0916fe-de86-4422-8449-fb608cbe5221.json&quot;,# =&gt;          &quot;total&quot;: 0,# =&gt;          &quot;totalExported&quot;: 0,# =&gt;          &quot;retry&quot;: 0,# =&gt;          &quot;error&quot;: null,# =&gt;          &quot;repliesCount&quot;: 0,# =&gt;          &quot;twitterType&quot;: null,# =&gt;          &quot;timezone&quot;: &quot;UTC&quot;,# =&gt;          &quot;createdAt&quot;: &quot;2016-08-26T07:32:09+00:00&quot;,# =&gt;          &quot;updatedAt&quot;: &quot;2016-08-26T07:32:09+00:00&quot;,# =&gt;          &quot;exportedAt&quot;: &quot;&quot;,# =&gt;          &quot;downloadUrl&quot;: &quot;/exports/comments5ea4b4d5a7602-1325511884314646.xlsx&quot;,# =&gt;          &quot;rawUrl&quot;: &quot;/exports/08b735760a5a40eb1fd70ca16e97aed3-2e0916fe-de86-4422-8449-fb608cbe5221.json&quot;# =&gt;      },# =&gt;      &quot;message&quot;: null# =&gt;  }```## Create export```pythonresponse = ex.exports.create(    url='https://www.instagram.com/p/1234567', replies='false', twitterType=None)```### ErrorsEndpoint calls may raise exceptions. Here is an example on how to handle them:```pythonfrom exportcomments.exceptions import PlanQueryLimitError, ExportCommentsExceptiontry:    response = ex.exports.create(url='https://www.instagram.com/p/1234567', replies='false', twitterType=None)except PlanQueryLimitError as e:    # No monthly queries left    # e.response contains the ExportCommentsResponse object    print(e.error_code, e.detail)except ExportCommentsException:    raise```Available exceptions:| class                       | Description                                                                                         || --------------------------- | --------------------------------------------------------------------------------------------------- || `ExportCommentsException`   | Base class for every exception below.                                                               || `RequestParamsError`        | An invalid parameter was sent. Check the exception message or response object for more information. || `AuthenticationError`       | Authentication failed, usually because an invalid token was provided. Check the exception message.  || `ForbiddenError`            | You don't have permissions to perform the action on the given resource.                             || `PlanRateLimitError`        | You have sent too many requests in the last minute.                                                 || `ConcurrencyRateLimitError` | You have sent too many requests in the last second.                                                 |</longdescription>
</pkgmetadata>