<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>====================The **trans** module====================This module translates national characters into similar soundinglatin characters (transliteration).At the moment, Czech, Greek, Latvian, Polish, Turkish, Russian, Ukrainian,Kazakh and Farsi alphabets are supported (it covers 99% of needs)... contents::Simple usage------------It's very easy to use~~~~~~~~~~~~~~~~~~~~~Python 3:  &gt;&gt;&gt; from trans import trans  &gt;&gt;&gt; trans('Привет, Мир!')Python 2:  &gt;&gt;&gt; import trans  &gt;&gt;&gt; u'Привет, Мир!'.encode('trans')  u'Privet, Mir!'  &gt;&gt;&gt; trans.trans(u'Привет, Мир!')  u'Privet, Mir!'Work only with unicode strings~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  &gt;&gt;&gt; 'Hello World!'.encode('trans')  Traceback (most recent call last):      ...  TypeError: trans codec support only unicode string, &lt;type 'str'&gt; given.This is readability~~~~~~~~~~~~~~~~~~~  &gt;&gt;&gt; s = u'''\  ...    -- Раскудрить твою через коромысло в бога душу мать  ...             триста тысяч раз едрену вошь тебе в крыло  ...             и кактус в глотку! -- взревел разъяренный Никодим.  ...    -- Аминь, -- робко добавил из склепа папа Пий.  ...                 (c) Г. Л. Олди, &quot;Сказки дедушки вампира&quot;.'''  &gt;&gt;&gt;  &gt;&gt;&gt; print s.encode('trans')     -- Raskudrit tvoyu cherez koromyslo v boga dushu mat              trista tysyach raz edrenu vosh tebe v krylo              i kaktus v glotku! -- vzrevel razyarennyy Nikodim.     -- Amin, -- robko dobavil iz sklepa papa Piy.                  (c) G. L. Oldi, &quot;Skazki dedushki vampira&quot;.Table &quot;**slug**&quot;~~~~~~~~~~~~~~~~Use the table &quot;slug&quot;, leaving only the Latin characters, digits and underscores:  &gt;&gt;&gt; print u'1 2 3 4 5 \n6 7 8 9 0'.encode('trans')  1 2 3 4 5  6 7 8 9 0  &gt;&gt;&gt; print u'1 2 3 4 5 \n6 7 8 9 0'.encode('trans/slug')  1_2_3_4_5__6_7_8_9_0  &gt;&gt;&gt; s.encode('trans/slug')[-42:-1]  u'_c__G__L__Oldi___Skazki_dedushki_vampira_'Table &quot;**id**&quot;~~~~~~~~~~~~~~Table **id** is deprecated and renamed to **slug**.Old name also available, but not recommended.Define user tables------------------Simple variant~~~~~~~~~~~~~~  &gt;&gt;&gt; u'1 2 3 4 5 6 7 8 9 0'.encode('trans/my')  Traceback (most recent call last):      ...  ValueError: Table &quot;my&quot; not found in tables!  &gt;&gt;&gt; trans.tables['my'] = {u'1': u'A', u'2': u'B'};  &gt;&gt;&gt; u'1 2 3 4 5 6 7 8 9 0'.encode('trans/my')  u'A_B________________'  &gt;&gt;&gt;A little harder~~~~~~~~~~~~~~~Table can consist of two parts - the map of diphthongs and the map of characters.Diphthongs are processed first by simple replacement in the substring.Then each character of the received string is replaced according to the map ofcharacters. If character is absent in the map of characters, key **None** are checked.If key **None** is not present, the default character **u'_'** is used.  &gt;&gt;&gt; diphthongs = {u'11': u'AA', u'22': u'BB'}  &gt;&gt;&gt; characters = {u'a': u'z', u'b': u'y', u'c': u'x', None: u'-',  ...               u'A': u'A', u'B': u'B'}  # See below...  &gt;&gt;&gt; trans.tables['test'] = (diphthongs, characters)  &gt;&gt;&gt; u'11abc22cbaCC'.encode('trans/test')  u'AAzyxBBxyz--'**The characters are created by processing of diphthongs also processedby the map of the symbols:**  &gt;&gt;&gt; diphthongs = {u'11': u'AA', u'22': u'BB'}  &gt;&gt;&gt; characters = {u'a': u'z', u'b': u'y', u'c': u'x', None: u'-'}  &gt;&gt;&gt; trans.tables['test'] = (diphthongs, characters)  &gt;&gt;&gt; u'11abc22cbaCC'.encode('trans/test')  u'--zyx--xyz--'Without the diphthongs~~~~~~~~~~~~~~~~~~~~~~These two tables are equivalent:  &gt;&gt;&gt; characters = {u'a': u'z', u'b': u'y', u'c': u'x', None: u'-'}  &gt;&gt;&gt; trans.tables['t1'] = characters  &gt;&gt;&gt; trans.tables['t2'] = ({}, characters)  &gt;&gt;&gt; u'11abc22cbaCC'.encode('trans/t1') == u'11abc22cbaCC'.encode('trans/t2')  TrueChangeLog---------2.1 2016-09-19    * Add Farsi alphabet (thx rodgar-nvkz)    * Use pytest    * Some code style refactoring2.0 2013-04-01    * Python 3 support    * class Trans for create different tables spaces1.5 2012-09-12    * Add support of kazakh alphabet.1.4 2011-11-29    * Change license to BSD.1.3 2010-05-18    * Table &quot;id&quot; renamed to &quot;slug&quot;. Old name also available.    * Some speed optimizations (thx to AndyLegkiy &lt;andy.legkiy at gmail.com&gt;).1.2 2010-01-10    * First public release.    * Translate documentation to English.Finally-------+ *Special thanks to Yuri Yurevich aka j2a for the kick in the right direction.*    - http://python.su/forum/viewtopic.php?pid=28965    - http://code.djangoproject.com/browser/django/trunk/django/contrib/admin/media/js/urlify.js+ *I ask forgiveness for my bad English. I promise to be corrected.*</longdescription>
</pkgmetadata>