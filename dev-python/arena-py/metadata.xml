<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ARENA-PyDraw objects and run programs in the ARENA using Python!## DocumentationThe ARENA Python library user guide and tutorials:[ARENA Documentation: Python](https://docs.arenaxr.org/content/python/).## SetupInstall package using pip:```shellpip3 install arena-py```## Hello ARENARun the `hello.py` example:```shellcd examplespython hello.py````hello.py````pythonfrom arena import *scene = Scene(host=&quot;arenaxr.org&quot;, scene=&quot;example&quot;)@scene.run_oncedef make_box():    scene.add_object(Box())scene.run_tasks()```## ARENA-py LibraryThe above is the simplest example of an ARENA Python program. This library sits above the ARENA pub/sub MQTTmessage protocol: JSON messages described in more detail at https://github.com/conix-center/ARENA-core which runs in a browser.That forms a layer, in turn, on top of [A-Frame](https://aframe.io/) and [THREE.js](http://threejs.org/) javascript libraries.## AuthenticationWe have added protection to the ARENA MQTT broker to limit access to change your scenes, which requires Python programs to supply authentication through a Google account.### Sign-In Desktop OSIf you have a web browser available, the ARENA-py library `Scene(host=&quot;myhost.com&quot;)` will launch a web browser the first time and ask you for an account to authenticate you with, before opening a client MQTT connection.### Sign-In Server/Headless OSFor headless environments, the ARENA-py library `Scene(host=&quot;myhost.com&quot;)` will provide you with a url to cut and paste in a browser anywhere, ask you for an account to authenticate you with, and show you a code you can enter on the command line, before opening a client MQTT connection.## ScriptsSome helper script aliases have been added in this library to help you manage authentication and quick command-line (CLI) publish and subscribe to the ARENA.### Sign-Out```basharena-py-signout```### Show Permissions```basharena-py-permissions```### CLI Subscribe to Scene Messages```basharena-py-sub -mh arenaxr.org -s example```### CLI Subscribe to Custom Topic```basharena-py-sub -mh arenaxr.org -t realm/g/a```### CLI Publish a Scene Object Message```basharena-py-pub -mh arenaxr.org -s example -m '{&quot;object_id&quot;: &quot;gltf-model_Earth&quot;, &quot;action&quot;: &quot;create&quot;, &quot;type&quot;: &quot;object&quot;, &quot;data&quot;: {&quot;object_type&quot;: &quot;gltf-model&quot;, &quot;position&quot;: {&quot;x&quot;:0, &quot;y&quot;: 0.1, &quot;z&quot;: 0}, &quot;url&quot;: &quot;store/models/Earth.glb&quot;, &quot;scale&quot;: {&quot;x&quot;: 5, &quot;y&quot;: 5, &quot;z&quot;: 5}}}'```### CLI Help```basharena-py-pub --helparena-py-sub --help```## ChangelogChangelog can be found [here](https://github.com/conix-center/ARENA-py/tree/master/CHANGELOG.md).## ARENA-py Repository Files- [arena/](https://github.com/conix-center/ARENA-py/tree/master/arena/): The ARENA Python library.- [examples/](https://github.com/conix-center/ARENA-py/tree/master/examples/): Canonical examples of ARENA functions from the [documentation](https://docs.arenaxr.org/content/python/).- [examples/objects](https://github.com/conix-center/ARENA-py/tree/master/examples/objects): Examples on how to create various ARENA-py objects.- [examples/attributes](https://github.com/conix-center/ARENA-py/tree/master/examples/attributes): Examples on how to declare an add various ARENA-py object attributes.- [examples/legacy/](https://github.com/conix-center/ARENA-py/tree/master/examples/legacy/): **Deprecated** demos for **ARENA-py &lt; 0.1.0**.- [examples/legacy/digital-twins/](https://github.com/conix-center/ARENA-py/tree/master/examples/legacy/digital-twins/): **Deprecated** demo of digital twins of physical spaces for **ARENA-py &lt; 0.1.0**.- [system-tests/](https://github.com/conix-center/ARENA-py/tree/master/system-tests/): Workouts and tests for ARENA-py.- [tools/](https://github.com/conix-center/ARENA-py/tree/master/tools/): Reusable tools for any ARENA scene.</longdescription>
</pkgmetadata>