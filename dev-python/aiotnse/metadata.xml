<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aioTNSEAsynchronous Python API for [TNS-Energo](https://tns-e.ru).## InstallationUse pip to install the library:```commandlinepip install aiotnse```## Usage```pythonimport asynciofrom pprint import pprintimport aiohttpfrom aiotnse import SimpleTNSEAuth, TNSEApiasync def main(account: str) -&gt; None:    &quot;&quot;&quot;Create the aiohttp session and run the example.&quot;&quot;&quot;    async with aiohttp.ClientSession() as session:        auth = SimpleTNSEAuth(session)        api = TNSEApi(auth)        data = await api.async_get_latest_readings(account)        pprint(data)if __name__ == &quot;__main__&quot;:    _account = string = str(input(&quot;Account: &quot;))    asyncio.run(main(_account))```The `SimpleTNSEAuth` client also accept custom access token (this can be found by sniffing the client).This will return a price object that looks a little like this:```json{  &quot;STATUS&quot;: &quot;Используется&quot;,  &quot;counters&quot;: {    &quot;1111111&quot;: [      {        &quot;Can_delete&quot;: &quot;0&quot;,        &quot;DatePok&quot;: &quot;06.02.2023&quot;,        &quot;DatePosledPover&quot;: &quot;31.12.2021&quot;,        &quot;DatePover&quot;: &quot;31.12.2037&quot;,        &quot;DatePoverStatus&quot;: 0,        &quot;DatePoverURL&quot;: &quot;&quot;,        &quot;GodVipuska&quot;: &quot;01.01.22&quot;,        &quot;KoefTrans&quot;: &quot;1&quot;,        &quot;Label&quot;: &quot;Дневная зона&quot;,        &quot;MaxPok&quot;: &quot;2000&quot;,        &quot;MestoUst&quot;: &quot;Жилой дом&quot;,        &quot;ModelPU&quot;: &quot;Нева МТ 114 AS PLRFPC&quot;,        &quot;NazvanieTarifa&quot;: &quot;День&quot;,        &quot;NazvanieUslugi&quot;: &quot;Электроснабжение &quot;,        &quot;NomerTarifa&quot;: &quot;0&quot;,        &quot;NomerUslugi&quot;: &quot;0100&quot;,        &quot;PredPok&quot;: &quot;700&quot;,        &quot;RaschSch&quot;: &quot;Работает&quot;,        &quot;Razradnost&quot;: &quot;6&quot;,        &quot;RowID&quot;: &quot;1111111&quot;,        &quot;Tarifnost&quot;: &quot;2&quot;,        &quot;Type&quot;: &quot;1&quot;,        &quot;ZavodNomer&quot;: &quot;22222222&quot;,        &quot;sort&quot;: 0,        &quot;zakrPok&quot;: &quot;700&quot;      },      {        &quot;Can_delete&quot;: &quot;0&quot;,        &quot;DatePok&quot;: &quot;06.02.2023&quot;,        &quot;DatePosledPover&quot;: &quot;31.12.2021&quot;,        &quot;DatePover&quot;: &quot;31.12.2037&quot;,        &quot;DatePoverStatus&quot;: 0,        &quot;DatePoverURL&quot;: &quot;&quot;,        &quot;GodVipuska&quot;: &quot;01.01.22&quot;,        &quot;KoefTrans&quot;: &quot;1&quot;,        &quot;Label&quot;: &quot;Ночная зона&quot;,        &quot;MaxPok&quot;: &quot;2000&quot;,        &quot;MestoUst&quot;: &quot;Жилой дом&quot;,        &quot;ModelPU&quot;: &quot;Нева МТ 114 AS PLRFPC&quot;,        &quot;NazvanieTarifa&quot;: &quot;Ночь&quot;,        &quot;NazvanieUslugi&quot;: &quot;Электроснабжение &quot;,        &quot;NomerTarifa&quot;: &quot;1&quot;,        &quot;NomerUslugi&quot;: &quot;0100&quot;,        &quot;PredPok&quot;: &quot;337&quot;,        &quot;RaschSch&quot;: &quot;Работает&quot;,        &quot;Razradnost&quot;: &quot;6&quot;,        &quot;RowID&quot;: &quot;1111111&quot;,        &quot;Tarifnost&quot;: &quot;2&quot;,        &quot;Type&quot;: &quot;1&quot;,        &quot;ZavodNomer&quot;: &quot;22222222&quot;,        &quot;sort&quot;: 1,        &quot;zakrPok&quot;: &quot;337&quot;      }    ]  },  &quot;result&quot;: true}```## Timeoutsaiotnse does not specify any timeouts for any requests. You will need to specify them in your own code. We recommend the `async_timeout` package:```pythonimport async_timeoutwith async_timeout.timeout(10):    data = await api.async_get_account_status(account)```</longdescription>
</pkgmetadata>