<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://user-images.githubusercontent.com/1287098/28493843-b889ce8e-6f26-11e7-97ec-cc180a760051.pngSimplified VMWare API client for Python=======================================vmwc is designed to be the simplest way possible to use VMWare's SDK.. code-block:: python    from vmwc import VMWareClient    host = '192.168.1.1'    username = '&lt;username&gt;'    password = '&lt;password&gt;'    with VMWareClient(host, username, password) as client:        for vm in client.get_virtual_machines():            vm.power_on()Installation^^^^^^^^^^^^.. code-block:: python    pip install vmwcExamples^^^^^^^^- `set server datetime &lt;https://github.com/jossef/vmwc/blob/master/examples/set-server-datetime.py&gt;`_- `replace license &lt;https://github.com/jossef/vmwc/blob/master/examples/replace-license.py&gt;`_- `datastores list &lt;https://github.com/jossef/vmwc/blob/master/examples/datastores-list.py&gt;`_- `virtual machines create new &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-create-new.py&gt;`_- `virtual machines delete &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-delete.py&gt;`_- `virtual machines list &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-list.py&gt;`_- `virtual machines power off &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-power-off.py&gt;`_- `virtual machines power on &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-power-on.py&gt;`_- `virtual machines shutdown &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-shutdown.py&gt;`_- `virtual machines reboot &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-reboot.py&gt;`_- `virtual machines reconfigure bios &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-reconfigure-bios.py&gt;`_- `virtual machines reconfigure network interfaces &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-reconfigure-network-interfaces.py&gt;`_- `virtual machines snapshots delete all &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-delete-all.py&gt;`_- `virtual machines snapshots delete specific &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-delete-specific.py&gt;`_- `virtual machines snapshots revert &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-revert.py&gt;`_- `virtual machines snapshots list  &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-list.py&gt;`_- `virtual machines snapshots new &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-machines-snapshots-new.py&gt;`_- `virtual switches create new &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-switches-create-new.py&gt;`_- `virtual switches delete &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-switches-delete.py&gt;`_- `virtual switches list &lt;https://github.com/jossef/vmwc/blob/master/examples/virtual-switches-list.py&gt;`_History^^^^^^^When I searched for a library to write automation scripts to control my esxi environment, I bumped into `pyvmomi &lt;http://github.com/vmware/pyvmomi&gt;`_. My first impression was &quot;It's too low-level and the general Development Experience doesn't feel easy to use&quot;. Therefore, on me break time, I wrote `vmwc` on the base of  `pyvmomi &lt;http://github.com/vmware/pyvmomi&gt;`_ to provide a lighter, TL;DR feeling and straight-forward API.Remarks^^^^^^^vmwc was developed to control a single esxi machine at a time. However, it should work with vcenter instances as well</longdescription>
</pkgmetadata>