<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python SDK for Khoros CommunitiesThe **khoros** library acts as a Python software development kit (SDK) to administer and manage [Khoros Communities](https://khoros.com/platform/communities) (formerly Lithium) online community platforms.&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Latest Stable Release&lt;/td&gt;        &lt;td&gt;            &lt;a href='https://pypi.org/project/khoros/'&gt;                &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/khoros&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;Latest Beta/RC Release&lt;/td&gt;        &lt;td&gt;            &lt;a href='https://pypi.org/project/khoros/#history'&gt;                &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/badge/pypi-5.4.0rc3-blue&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;Build Status&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://github.com/jeffshurtliff/khoros/blob/master/.github/workflows/pythonpackage.yml&quot;&gt;                &lt;img alt=&quot;GitHub Workflow Status&quot;                 src=&quot;https://img.shields.io/github/actions/workflow/status/jeffshurtliff/khoros/pythonpackage.yml?branch=master&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;Supported Versions&lt;/td&gt;        &lt;td&gt;            &lt;a href='https://pypi.org/project/khoros/'&gt;                &lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/khoros&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;Code Coverage&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://codecov.io/gh/jeffshurtliff/khoros&quot;&gt;                &lt;img src=&quot;https://codecov.io/gh/jeffshurtliff/khoros/branch/master/graph/badge.svg&quot; /&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;CodeFactor Grade&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://lgtm.com/projects/g/jeffshurtliff/khoros&quot;&gt;            &lt;img alt=&quot;CodeFactor Grade&quot; src=&quot;https://img.shields.io/codefactor/grade/github/jeffshurtliff/khoros&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;Documentation&lt;/td&gt;        &lt;td&gt;            &lt;a href='https://khoros.readthedocs.io/en/latest/?badge=latest'&gt;                &lt;img src='https://readthedocs.org/projects/khoros/badge/?version=latest' alt='Documentation Status' /&gt;&lt;br /&gt;                &lt;img src=&quot;https://raw.githubusercontent.com/jeffshurtliff/khoros/master/docs/_static/interrogate_badge.svg&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;Security Audits&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://github.com/marketplace/actions/python-security-check-using-bandit&quot;&gt;                &lt;img alt=&quot;Bandit&quot; src=&quot;https://img.shields.io/badge/security-bandit-yellow.svg&quot;&gt;            &lt;/a&gt;&lt;br /&gt;            &lt;a href=&quot;https://github.com/marketplace/actions/pycharm-python-security-scanner&quot;&gt;                &lt;img alt=&quot;PyCharm Security Scanner&quot; src=&quot;https://img.shields.io/badge/security-pycharm%20security%20scanner-green&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;License&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://github.com/jeffshurtliff/khoros/blob/master/LICENSE&quot;&gt;                &lt;img alt=&quot;License (GitHub)&quot; src=&quot;https://img.shields.io/github/license/jeffshurtliff/khoros&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td style=&quot;vertical-align: top;&quot;&gt;Issues&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://github.com/jeffshurtliff/khoros/issues&quot;&gt;                &lt;img style=&quot;margin-bottom:5px;&quot; alt=&quot;GitHub open issues&quot; src=&quot;https://img.shields.io/github/issues-raw/jeffshurtliff/khoros&quot;&gt;&lt;br /&gt;            &lt;/a&gt;            &lt;a href=&quot;https://github.com/jeffshurtliff/khoros/issues&quot;&gt;                &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed-raw/jeffshurtliff/khoros&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td style=&quot;vertical-align: top;&quot;&gt;Pull Requests&lt;/td&gt;        &lt;td&gt;            &lt;a href=&quot;https://github.com/jeffshurtliff/khoros/pulls&quot;&gt;                &lt;img style=&quot;margin-bottom:5px;&quot; alt=&quot;GitHub pull open requests&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/jeffshurtliff/khoros&quot;&gt;&lt;br /&gt;            &lt;/a&gt;            &lt;a href=&quot;https://github.com/jeffshurtliff/khoros/pulls&quot;&gt;                &lt;img alt=&quot;GitHub closed pull requests&quot; src=&quot;https://img.shields.io/github/issues-pr-closed-raw/jeffshurtliff/khoros&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;## InstallationThe package can be installed via pip using the syntax below.```shpip install khoros --upgrade```You may also clone the repository and install from source using below.```shgit clone git://github.com/jeffshurtliff/khoros.gitcd khoros/python setup.py install```## Change LogThe change log can be found in the [documentation](https://khoros.readthedocs.io/en/latest/changelog.html).## UsageThis section provides basic usage instructions for the package.### Importing the packageRather than importing the base package, it is recommended that you import the primary `Khoros` class using the syntaxbelow.```pythonfrom khoros import Khoros```This recommendation is because the best practice is to use the name `khoros` when naming your object instance.### Initializing a Khoros object instanceThe primary `Khoros` object serves many purposes, the most important being to establish a connection to the KhorosCommunity environment with which you intend to interact. As such, when initializing an instance of the `Khoros` object,you will need to pass it the community URL, the credentials it will use and related information so that the connectioncan be established.The `Khoros` object can be initiated in two different ways:* Passing the information directly into the object* Leveraging a &quot;helper&quot; configuration file#### Passing the information directly into the objectThe community and connection information can be passed directly into the `Khoros` object when initializing it, asdemonstrated in the example below.```python# Using Session Key authenticationkhoros = Khoros(    community_url='https://community.example.com',     session_auth={'username': USERNAME, 'password': PASSWD})# Using LithiumSSO Token authenticationkhoros = Khoros(    community_url='https://community.example.com',     sso={'sso.authentication_token': LITHIUM_SSO_TOKEN})```Alternatively, configuration settings can be passed at once using the `options` argument in the `Khoros` class, as shown below.```pythonmy_settings = {    'community_url': 'https://community.example.com',    'community_name': 'mycommunity',    'auth_type': 'session_auth',    'session_auth': {        'username': USERNAME,        'password': PASSWD    }}```#### Leveraging a &quot;helper&quot; configuration fileAs an alternative to passing the connection information to the `Khoros` class in the ways demonstrated above, a&quot;helper&quot; configuration file in `yaml` or `json` format can be leveraged instead and passed to the `Khoros` classwhen initializing the object.This is an example of how the configuration file would be written:```yaml# Helper configuration file for the khoros package# Define how to obtain the connection informationconnection:    community_url: https://community.example.com/    tenant_id: example12345    # Define the default authentication type to use    default_auth_type: session_auth    # Define the OAuth 2.0 credentials    oauth2:        client_id: FLFeNYob7XXXXXXXXXXXXXXXXXXXXZcWQEQHR5T6bo=        client_secret: 1n0AIXXXXXXXXXXXXXXXXXXXX1udOtNaYnfJCeOszYw=        redirect_url: http://redirect.community.example.com/getAccessToken    # Define the session key authorization information    session_auth:        username: serviceaccount        password: Ch@ng3ME!    # Bulk Data API connection information    bulk_data:        community_id: example.prod        client_id: ay0CXXXXXXXXXX/XXXX+XXXXXXXXXXXXX/XXXXX4KhQ=        token: 2f25XXXXXXXXXXXXXXXXXXXXXXXXXa10dec04068        europe: no# Define the preferred format for API responsesprefer_json: yes```The file can then be referenced using the `helper` argument when initializing the object instance, as shown below.```pythonHELPER_FILE = &quot;/path/to/helper.yml&quot;khoros = Khoros(helper=HELPER_FILE)```#### Utilizing environment variablesThis third method of initializing a Khoros object instance is definitely the easiest, as it allows you to callupon the `Khoros` class without passing any arguments, as shown below.```pythonfrom khoros import Khoroskhoros = Khoros()```This is accomplished by defining environment variables within your Operating System, either through the[graphical UI](https://www.techjunkie.com/environment-variables-windows-10/), the command-line or within the PythonIDE using the `os` module and[adding entries](https://able.bio/rhett/how-to-set-and-get-environment-variables-in-python--274rgt5) to the`os.environ` dictionary, as shown below.```pythonimport osos.environ['KHOROS_URL'] = 'https://community.example.com'```| Environment Variable      | Description                                                                                                                                                | Example                                                ||---------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------|| KHOROS_URL                | The base URL of the environment                                                                                                                            | `https://community.example.com`                        || KHOROS_TENANT_ID          | The [Tenant ID](https://developer.khoros.com/khoroscommunitydevdocs/docs/oauth-authorization-grant) associated with your environment                       | `abcde12345`                                           || KHOROS_DEFAULT_AUTH       | The default authentication method you wish to use                                                                                                          | `session_auth`                                         || KHOROS_OAUTH_ID           | The Client ID utilized by the [OAuth 2.0](https://developer.khoros.com/khoroscommunitydevdocs/docs/oauth-authorization-grant) authorization grant flow     | `FXXXXXXb7owXXXXXXo+jFlPXXXXXXjZcWQXXXXXX6bo=`         || KHOROS_OAUTH_SECRET       | The Client Secret utilized by the [OAuth 2.0](https://developer.khoros.com/khoroscommunitydevdocs/docs/oauth-authorization-grant) authorization grant flow | `1XXXXXX+/kZXXXXXXZZ9u1B5+1uXXXXXXfJCeOszYw=`          || KHOROS_OAUTH_REDIRECT_URL | The Redirect URL utilized by the [OAuth 2.0](https://developer.khoros.com/khoroscommunitydevdocs/docs/oauth-authorization-grant) authorization grant flow  | `http://redirect.community.example.com/getAccessToken` || KHOROS_SESSION_USER       | The username to use with [Session Key](https://developer.khoros.com/khoroscommunitydevdocs/docs/session-key) authentication                                | `apiuser`                                              || KHOROS_SESSION_PW         | The password to use with [Session Key](https://developer.khoros.com/khoroscommunitydevdocs/docs/session-key) authentication                                | `Ch@ng3M3!`                                            || KHOROS_PREFER_JSON        | Boolean string indicating if JSON responses are preferred                                                                                                  | `True`                                                 || KHOROS_LIQL_PRETTY        | Boolean string indicating if reader-friendly formatting should be used                                                                                     | `False`                                                || KHOROS_LIQL_TRACK_LSI     | Boolean string indicating if queries should be captured in Community Analytics search reports                                                              | `False`                                                || KHOROS_LIQL_ALWAYS_OK     | Boolean string indicating if all responses should return a `200 OK` status code                                                                            | `False`                                                || KHOROS_TRANSLATE_ERRORS   | Boolean string indicating if errors in API responses should be made more relevant where possible                                                           | `True`                                                 |If you are leveraging this library on a macOS or Linux operating system (e.g. Ubuntu Server) then you can simplyadd the environment variables you wish to define to either the `/etc/environment` file if you wish to applythem to all users, or to your user's `~/.bashrc` file for them to only apply to your user.```shell script# Define environment variables for KhorosKHOROS_URL='https://community.example.com'```&gt;**Note:**&gt;You will generally need to log out and log back in for the changes to take effect.If you are leveraging this library on a Windows operating system (e.g. Windows 10) then you can add environmentvariables for your user via the Command Prompt (i.e. `cmd.exe`) or  PowerShell.&gt;**Note:**&gt;Using either of these two methods, you can add the environment variables using an interactive terminal&gt;window or using a batch/script file.  (Files should use the `.bat` or `.cmd` extension for the&gt;Command Prompt and `.ps1` for PowerShell.)**Command Prompt**```batch@echo offecho Defining the KHOROS_URL environment variable...setx KHOROS_URL https://community.example.comecho.```**PowerShell**```powershell&quot;Defining the KHOROS_URL environment variable...&quot;[Environment]::SetEnvironmentVariable(&quot;KHOROS_URL&quot;, &quot;https://community.example.com/&quot;, &quot;User&quot;)```### Interacting with the Community APIsOnce the `Khoros` object instance has been initialized, it can be leveraged to interact with a Khoros Communityenvironment in many ways, which is fully documented in the official[documentation](https://khoros.readthedocs.io/en/latest/). The example below demonstrates how a search can beperformed using LiQL to return information from the environment in JSON format.```pythonresponse_json = khoros.search(    select_fields=('id', 'view_href'),    from_source='messages',    where_filter=('style', 'tkb'),    order_by='last_post_time',    limit=5)```## DocumentationThe documentation is located here: [https://khoros.readthedocs.io/en/latest/](https://khoros.readthedocs.io/en/latest/)## License[MIT License](https://github.com/jeffshurtliff/khoros/blob/master/LICENSE)## Reporting IssuesIssues can be reported within the [GitHub repository](https://github.com/jeffshurtliff/khoros/issues).## RoadmapUpcoming improvements to the library can be found in the following locations:  - [2020 Roadmap on GitHub](https://github.com/jeffshurtliff/khoros/projects/1) - [2021 Roadmap on GitHub](https://github.com/jeffshurtliff/khoros/projects/2) - [2022 Roadmap on GitHub](https://github.com/jeffshurtliff/khoros/projects/3)## Additional ResourcesAdditional resources for leveraging the Community APIs can be found in the official[Khoros Developer Documentation](https://developer.khoros.com/khoroscommunitydevdocs).## DonationsIf you would like to donate to this project then you can do so using [this PayPal link](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=XDZ8M6UV6EFK6&amp;item_name=Khoros+Python+API&amp;currency_code=USD).## DisclaimerThis package is considered unofficial and is in no way endorsed or supported by [Khoros, LLC](https://www.khoros.com).</longdescription>
</pkgmetadata>