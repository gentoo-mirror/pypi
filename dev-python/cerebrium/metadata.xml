<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CerebriumCerebrium is the Python package built for use with the [Cerebrium](https://www.cerebrium.ai/) platform, which allows you to deploy your machine learning models as a REST API with a single line of code.For usage consult the [documentation](https://docs.cerebrium.ai/). The repo for the documentation can be found [here](https://github.com/CerebriumAI/docs).# Development environmentCerebrium uses Poetry for dependency management and packaging. To install Poetry, follow the instructions [here](https://python-poetry.org/docs/#installation). Alternatively, consult our article on [how to manage your python environments](https://blog.cerebrium.ai/setting-up-your-data-science-and-ml-development-environment-949277339939?gi=54b980dd4e1d).You can run the following steps to setup your Python development environment with the following commands:```bashpoetry installpoetry shell```You should use this environment to run tests, notebooks and build the package.Furthermore, you should set up a `.env` file in the project root with the following environment variables:```bashDEVELOPMENT_ENV=dev```You can add packages to the project by running the following command:```bashpoetry add &lt;package&gt;```You **will** need to relock if you have added any packages to the project. You can do this by running the following command:```bashpoetry lock```## Codespaces SetupTo set up a Github Codespaces for development, you should run the following command to setup AWS:```bashcd ~curl &quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot; -o &quot;awscliv2.zip&quot;unzip awscliv2.zipsudo ./aws/install```## Running testsTo run the tests, run the following command:```bashpoetry run pytest --cov-report html:cov_html\          --cov-report annotate:cov_annotate\          --cov=cerebrium tests/```## Publishing Development Builds (DEPRECATED, we longer need to do this for development builds)To publish a development build on CodeArtifact, run the following command to configure Poetry:```bashpoetry config http-basic.cerebrium aws $(aws codeartifact get-authorization-token --domain-owner 288552132534 --domain cerebrium --query 'authorizationToken' --output text --region eu-west-1)```Then, run the following command to publish the package:```bashpoetry shell # this is needed to set the version dynamicallypoetry publish --build -r cerebrium```If the patch version is not up to date, merge the latest version tag into the branch:```bashgit merge v&lt;tag&gt;```## Push a worker development build to ECRTo push a worker development build to ECR, run the following command:```bashdepot build -t 288552132534.dkr.ecr.eu-west-1.amazonaws.com/worker:dev --platform=linux/amd64 . --push --file worker/docker/Dockerfile --build-arg env=dev```## Install a development build (DEPRECATED)To install a development build, run the following command to configure pip (**NOTE** this WILL change your default pip index URL):```bashaws codeartifact login --tool pip --repository cerebrium-pypi --domain cerebrium --domain-owner 288552132534 --region eu-west-1```Then, pip install:```bashpip install --pre cerebrium```### Resources for Poetry/CodeArtifact- https://repost.aws/questions/QURD7aFNj_R9-8odJY5mfgrw/npm-publish-for-a-package-to-aws-code-artifact-repo-fails-with-error-the-provided-package-is-configured-to-block-new-version-publishes- https://docs.aws.amazon.com/codeartifact/latest/ug/python-configure-pip.html</longdescription>
</pkgmetadata>