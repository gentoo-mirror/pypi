<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ST Spin Family InterfaceA Python library for interfacing with [ST Spin Family devices](https://www.digikey.fi/en/product-highlight/s/stmicroelectronics/motor-control-easyspin &quot;ST Spin Family devices&quot;),specifically the ST Micro **L6470**, **L6472**, **L6474**, and **L6480** ICs.Can be used nearly without modification with similar ICs.If you do not specify your own spi_transfer function when creating a SpinChain, this project relies on [spidev's](https://pypi.org/project/spidev/ &quot;spidev&quot;) SPI transfer function.Python 3.6 or greater recommended.## Getting Started`pip install st-spin``pip install spidev` (if you intend to use /dev/spi and spidev's spi transfer function)**Add imports**```pythonimport time  # Used in our examplefrom stspin import (    SpinChain,    SpinDevice,    Constant as StConstant,    Register as StRegister,    utility,)```**Create a device chain**```pythonstChain = SpinChain(    total_devices=2,    spi_select=(0, 0),)```This assumes the spi device is at 0, 0.**Create devices**```pythonmotorMain = stChain.create(1)motorAux = stChain.create(0)# Unless you absolutely need holding current,# it is good practice to disable the power bridgesmotorMain.hiZHard()motorAux.hiZHard()```**Run basic commands**```motorMain.setRegister(StRegister.SpeedMax, 0x22)motorMain.run(100)time.sleep(3)motorMain.hiZSoft()time.sleep(1)# {{{ Set some registersmotorMain.setRegister(StRegister.Acc, 0x5)motorMain.setRegister(StRegister.Dec, 0x10)motorAux.setRegister(StRegister.Acc, 0x20)# }}}# {{{ Go n steps with both motorsmotorMain.move(steps=420000)motorAux.move(steps=420000)while motorMain.isBusy():    time.sleep(0.2)# }}}# {{{ Head backmotorMain.setDirection(StConstant.DirReverse)motorMain.move(steps=420000)while motorMain.isBusy():    time.sleep(0.2)# }}}# Release holding currentmotorAux.hiZHard()motorMain.hiZHard()```### More detailsFor details on the SPI setup, see [create()](https://github.com/m-laniakea/st_spin/blob/dev/stspin/spin_chain.py#L47) in spin_chain.py.See [example.py](https://github.com/m-laniakea/st_spin/blob/dev/example.py &quot;example.py&quot;).**Creating your own spi_transfer function**You may use your own spi transfer function in place of spidev's xfer2.```def custom_spi_transfer(buffer: List[int]) -&gt; List[int]:    # TODO: Implement me    passstChain = SpinChain(    total_devices=2,    spi_transfer=custom_spi_transfer,)````custom_spi_transfer()` must take a list of bytes as int,and return a same-length list of bytes as int from the MISO pin.It should handle latching using the Chip Select pin, and transfer data with MSB first inSPI Mode 3 (sample on rising edge, shift out on falling edge).On these devices, Chip Select is active low.### TroubleshootinggetStatus() is your friend. Feel free to use getPrettyStatus() under utility.py.The manual is also your friend.**Q: Why is my motor stalling, loud, or both?**Most likely the Back-EMF compensation is not configured properly.The correction parameters depend heavily on your motor's ke value (V/Hz), inductance, and phase resistance.After calculating the parameters using the manufacturer's tool, set KvalAcc, SpeedInt, SlpSt, etc. using setRegister().</longdescription>
</pkgmetadata>