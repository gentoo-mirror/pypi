<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Sym Python SDK================`Sym &lt;https://symops.com/&gt;`_ is the security workflow platform made for engineers, by engineers.We solve the intent-to-execution gap between policies and workflows by providing fast-moving engineering teams with the just-right primitives to roll out best-practice controls.This is the Python SDK for Sym.For guides and other help, check out our `main docs site &lt;https://docs.symops.com/&gt;`_.The SDK docs are broken into several core modules, which are described below.Click on one to see the classes and functions available in your `Handlers &lt;https://docs.symops.com/docs/workflow-handlers&gt;`_.The Sym SDK is used to customize workflow templates that are exposed by our `Terraform provider &lt;https://registry.terraform.io/providers/symopsio/sym/latest/docs&gt;`_. Here's an example using the ``sym:approve`` Template!.. code-block:: python   from sym.sdk.annotations import reducer   from sym.sdk.integrations import pagerduty, okta, slack   @reducer   def get_approvers(evt):      # The import here uses credentials defined in an Integration in Terraform      if pagerduty.is_on_call(evt.user, schedule=&quot;id_of_eng_on_call&quot;):         # This is a self-approval in a DM         return slack.user(evt.user)      if evt.payload.fields[&quot;urgency&quot;] == &quot;Emergency&quot;:         # This is a self-approval in a channel         return slack.channel(&quot;#break-glass&quot;, allow_self=True)      on_call_mgrs = okta.group(&quot;OnCallManagers&quot;).members()      # This would cause each on-call manager to be DMed      return slack.group([slack.user(x) for x in on_call_mgrs])If you're interested in using Sym, please `reach out &lt;https://symops.com/sales&gt;`_!</longdescription>
</pkgmetadata>