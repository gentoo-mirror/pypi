<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========Django-VIES===========Validate and store VAT Information Exchange System (VIES) data in Django.Installation------------.. code:: shell    python3 -m pip install django-viesUsage-----``VATINField`` for models.. code:: python    from django.db import models    from vies.models import VATINField    class Company(models.Model):        name = models.CharField(max_length=100)        vat = VATINField(blank=True, null=True)``VATIN`` wrapper class, allows access to result... code:: python    &gt;&gt;&gt; from vies.types import VATIN    &gt;&gt;&gt; vat = VATIN('LU', '26375245')    &gt;&gt;&gt; vat.is_valid()    True    &gt;&gt;&gt; vat.data    {        'countryCode': 'LU',        'vatNumber': '26375245',        'requestDate': datetime.date(2020, 4, 13),        'valid': True,        'name': 'AMAZON EUROPE CORE S.A R.L.',        'address': '38, AVENUE JOHN F. KENNEDY\nL-1855  LUXEMBOURG'    }You can also use the classmethod ``VATIN.from_str`` to create ``VATIN``from ``str``... code:: python    &gt;&gt;&gt; from vies.types import VATIN    &gt;&gt;&gt; vat = VATIN.from_str('LU26375245')    &gt;&gt;&gt; vat.is_valid()    TrueThe VIES API endpoint can be very unreliable and seems to have an IP based access limit.Therefore the ``VATINField`` does NOT perform API based validation by default. It needsto be explicitly turned on or performed in a separate task.e.g... code:: python    from vies.models import VATINField    from vies.validators import VATINValidator    class Company(models.Model):        name = models.CharField(max_length=100)        vat = VATINField(validators=[VATINValidator(verify=True, validate=True)])``validate=True`` will tell the validator to validate against the VIES API.``verify`` is enabled on by default and will only verify that the VATIN matches the country's specifications.It is recommended to perform VIES API validation inside an asynchronous task.e.g. using celery.. code:: python    from celery import shared_task    from vies.models import VATINField    class Company(models.Model):        name = models.CharField(max_length=100)        vat = VATINField()        vat_is_valid = models.BooleanField(default=False)        def __init__(self, *args, **kwargs):            self.__vat = self.vat            super(Company, self).__init__(*args, **kwargs)        def save(self, *args, **kwargs):            if self.__vat != self.vat:                validate_vat_field.delay(self)            super(Company, self).save(*args, **kwargs)            self.__vat = self.vat        def refresh_from_db(self, *args, **kwargs)            super(Company, self).refresh_from_db(*args, **kwargs)            self.__vat = self.vat    @shared_task    def validate_vat_field(company):        try:            company.vat.validate()        except ValidationError:            company.vat_is_valid = False        else:            company.vat_is_valid = True        finally:            company.save(update_fields=['vat_is_valid'])Translations------------Feel free to contribute translations, it's simple!.. code:: shell    cd vies    django-admin makemessages -l $YOUR_COUNTRY_CODEJust edit the generated PO file. Pull-Requests are welcome!License-------The MIT License (MIT)Copyright (c) 2014-2016 Johannes HoppePermission is hereby granted, free of charge, to any person obtaining a copy ofthis software and associated documentation files (the &quot;Software&quot;), to deal inthe Software without restriction, including without limitation the rights touse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies ofthe Software, and to permit persons to whom the Software is furnished to do so,subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESSFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS ORCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHERIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR INCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</longdescription>
</pkgmetadata>