<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==============python-libpcap==============.. image:: https://img.shields.io/pypi/v/python-libpcap.svg        :target: https://pypi.python.org/pypi/python-libpcap.. image:: https://img.shields.io/pypi/pyversions/python-libpcap.svg        :target: https://pypi/python.org/pypi/python-libpcap.. image:: https://api.travis-ci.com/caizhengxin/python-libpcap.svg?branch=master        :target: https://travis-ci.org/JanKinCai/python-libpcap.. image:: https://img.shields.io/pypi/dm/python-libpcap.svg        :target: https://pypi/python.org/pypi/python-libpcap.. image:: https://readthedocs.org/projects/python-libpcap/badge/?version=latest        :target: https://python-libpcap.readthedocs.io/en/latest/?badge=latest        :alt: Documentation Status.. image:: https://img.shields.io/github/languages/code-size/caizhengxin/python-libpcap        :target: https://github.com/caizhengxin/python-libpcap.. image:: https://img.shields.io/pypi/l/python-libpcap        :target: https://github.com/caizhengxin/python-libpcap/blob/master/LICENSECython libpcap, read/write/merge/capture* GIthub repo: https://github.com/caizhengxin/python-libpcap* Documentation: https://python-libpcap.readthedocs.io* Free software: BSD lincenseFeatures--------* Read pcap file* Write pcap file* Merge pcap file* Multi-file quick merge* Get first iface* Get iface list* Send raw packet* Capture dataInstallation------------To install python-libpcap, run this command in your terminal:.. code-block:: console    $ sudo apt-get install libpcap-dev    $ pip3 install Cython    $ pip3 install python-libpcapUsage-----Command:.. code-block:: console    # Multi-file quick merge    $ libpcap-merge -i test.pcap -o pcap.pcap port 502    $ libpcap-merge -i pcap/ -o pcap.pcap port 502    # Capture data packet    $ sudo libpcap-capture -i enp0s3 -v -p port 22    $ sudo libpcap-capture -i enp0s3 -o pcap.pcap port 22    # Write packet    $ libpcap-write --output pcap.pcap ac64175ffa41000ec6c9157e08004500004b8a1e400080060000c0a80002c0a80001c794006618e119b56ef0831d5018faf081910000030000231ee00000001d00c1020600c20f53494d415449432d524f4f542d4553c0010a    # Read packet    $ libpcap-read -i test.pcap -v -p port 502Read pcap:.. code-block:: python    from pylibpcap.pcap import rpcap    for len, t, pkt in rpcap(&quot;tests/dns.pcap&quot;):        print(&quot;Buf length:&quot;, len)        print(&quot;Time:&quot;, t)        print(&quot;Buf:&quot;, pkt)Write pcap:.. code-block:: python    from pylibpcap import wpcap    buf = b'\x00\xc0\x9f2A\x8c\x00\xe0\x18\xb1\x0c\xad\x08\x00E\x00\x008' \          b'\x00\x00@\x00@\x11eG\xc0\xa8\xaa\x08\xc0\xa8\xaa\x14\x80\x1b' \          b'\x005\x00$\x85\xed\x102\x01\x00\x00\x01\x00\x00\x00\x00\x00' \          b'\x00\x06google\x03com\x00\x00\x10\x00\x01'    wpcap(buf, &quot;pcap.pcap&quot;)    wpcap([buf, buf], &quot;pcap.pcap).. code-block:: python    from pylibpcap import OpenPcap    with OpenPcap(&quot;pcap.pcap&quot;, &quot;a&quot;) as f:        f.write(buf)Merge pcap:.. code-block:: python    from pylibpcap.pcap import mpcap    mpcap(&quot;demo.pcap&quot;, &quot;demo2.pcap&quot;)    mpcap(&quot;pcap/&quot;, &quot;output.pcap&quot;, &quot;port 502&quot;)Get first iface:.. code-block:: python    from pylibpcap import get_first_iface    print(get_first_iface())Get iface list:.. code:: python    from pylibpcap import get_iface_list    print(get_iface_list())Send raw packet:.. code:: python    from pylibpcap import send_packet    send_packet(&quot;enp2s0&quot;, b&quot;&quot;)Capture data:.. code-block:: python    from pylibpcap.pcap import sniff    for plen, t, buf in sniff(&quot;enp2s0&quot;, filters=&quot;port 53&quot;, count=-1, promisc=1, out_file=&quot;pcap.pcap&quot;):        print(&quot;[+]: Payload len=&quot;, plen)        print(&quot;[+]: Time&quot;, t)        print(&quot;[+]: Payload&quot;, buf).. code-block:: python    from pylibpcap.base import Sniff    sniffobj = Sniff(&quot;enp2s0&quot;, filters=&quot;port 53&quot;, count=-1, promisc=1, out_file=&quot;pcap.pcap&quot;)    for plen, t, buf in sniffobj.capture():        print(&quot;[+]: Payload len=&quot;, plen)        print(&quot;[+]: Time&quot;, t)        print(&quot;[+]: Payload&quot;, buf)    stats = sniffobj.stats()    print(stats.capture_cnt, &quot; packets captured&quot;)    print(stats.ps_recv, &quot; packets received by filter&quot;)    print(stats.ps_drop, &quot;  packets dropped by kernel&quot;)    print(stats.ps_ifdrop, &quot;  packets dropped by iface&quot;)Credits-------This package was created with Cookiecutter_ and the `caizhengxin/cookiecutter-package`_ project template... _Cookiecutter: https://github.com/audreyr/cookiecutter.. _`caizhengxin/cookiecutter-package`: https://github.com/caizhengxin/cookiecutter-package</longdescription>
</pkgmetadata>