<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======README======fann2=====Python bindings for Fast Artificial Neural Networks 2.2.0 (FANN &gt;= 2.2.0). Theseare the original python bindings included with FANN 2.1.0 beta and updated toinclude support for python 2.6-3.6.DESCRIPTION===========This is a python binding for Fast Artificial Neural Network Library (FANN &gt;=2.2.0) that implements multi-layer artificial neural networks with support forboth fully-connected and sparsely-connected networks. It includes a frameworkfor easily handling training data sets. It is easy to use, versatile, well-documented, and fast.FANN 2.2.0 source------------------ http://sourceforge.net/projects/fann/files/fann/2.2.0/FANN-2.2.0-Source.zip/downloadINSTALLATION============You can install fann2 from pkgsrc or from pypi, using either pip oreasy_install:wheels------    $ pip install ${wheel_file}pypi----    $ pip install fann2    or    $ easy_install fann2pkgsrc------Source installation...................Get and install pkgsrc. See `pkgsrc documentation&lt;http://pkgsrc.org/#index4h1&gt;`_. for platform-specific information.cd ${PKGSRCDIR}/devel/py-fann2bmake installFrom binaries.............Get and install pkgsrc. See `pkgsrc quickstart&lt;http://pkgsrc.org/#index1h1&gt;`_. for platform-specific information.pkgin -y install py-fann2Windows considerations----------------------Source installation...................- Install Visual C++ Build Tools;- Install `FANN source code &lt;https://github.com/libfann/fann&gt;`_, using cmake;- Copy &quot;fanndouble.lib&quot; from FANN installed files to ${python_libs_directory} as &quot;doublefann.lib&quot;;- Install swig for Windows (you will need to set an Enviroment Variable for &quot;swig.exe&quot;);- Run &gt; python setup.py install from PowerShell/Command Prompt.USAGE=====Just     &gt;&gt; from fann2 import libfann and then create libfann.neural_net and libfann.training_data objects    &gt;&gt; ann = libfann.neural_net()        &gt;&gt; train_data = libfann.training_data()Look at the examples in the FANN documentation and its C++ bindings for furtherreference.LICENSE=======As with the original python bindings, this package is distributed under theterms of the GNU Lesser General Public License, Version 2.1. See LICENSE forfull terms and conditions.LINKS=====`fann2 on pypi&lt;https://pypi.python.org/pypi/fann2&gt;`_.`py-fann2 in pkgsrc&lt;http://pkgsrc.se/devel/py-fann2&gt;`_.`FANN&lt;http://leenissen.dk/fann/&gt;`_.`pkgsrc&lt;http://pkgsrc.org/&gt;`_.CONTACT=======Send us your patches and pull requests! We will release as often as thesechanges are received and integrated. There's no reason to have countlessbranches of this package. Consider this the official one and that it's beingmaintained!The pkgsrc package is maintained by us as well. We are active users of FANN andfann2. If you don't have or want a github account, send your patches for thispackage or the pkgsrc version to pkgsrc@futurelinkcorporation.com.</longdescription>
</pkgmetadata>