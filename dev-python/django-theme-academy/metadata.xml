<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-theme-academy`django-theme-academy` provides the Academy theme for Django websites and applications.  Academy provides the following features:* Built with Tabler, and Bootstrap 5* A fixed left sidebar with configurable logo* Breadcrumbs* A footer with contact information for your organiization* Includes [django-wildewidgets](https://github.com/caltechads/django-wildewidgets) support## Installation`django-theme-academy` supports Python 3.7+, and Django 3+.To install from PyPI:```bashpip install django-theme-academy```### Update settings.pyRegister the module in `INSTALLED_APPS`:```pythonINSTALLED_APPS = [    ...    'academy_theme',    ...]```Add the custom template context processor:```pythonTEMPLATES = [    {        'BACKEND': 'django.template.backends.django.DjangoTemplates',        'OPTIONS': {            ...            'context_processors': [                ...                'academy_theme.context_processors.theme',                ...            ],        },    },]```Optionally configure the theme specific settings.  You don't need to define all of these, but insteadonly the ones you wish to override:```pythonACADEMY_THEME_SETTINGS = {    # Header    'APPLE_TOUCH_ICON': 'myapp/images/apple-touch-icon.png',    'FAVICON_32': 'myapp/images/favicon-32x32.png',    'FAVICON_16': 'myapp/images/favicon-16x16.png',    'FAVICON': 'myapp/images/favicon.ico',    'SITE_WEBMANIFEST': 'myapp/images/site.webmanifest',    # Footer    'ORGANIZATION_LINK': 'https://myorg.com',    'ORGANIZATION_NAME': 'Organization Name',    'ORGANIZATION_ADDRESS': 'Organization Address',    'COPYRIGHT_ORGANIZATION': 'Copyright Organization'    'FOOTER_LINKS': []}```### Choose a base.hml`django-theme-academy` ships with two different base templates:* `academy_theme/base.html`, for regular Django template development* `academy_theme/base--wildewidgets.html`, for [django-wildewidgets](https://github.com/caltechads/django-wildewidgets) based Django development#### base.htmlTo use `academy_theme/base.html`, create your own `base.html` that extends itand overrides its blocks as needed.  Example:```html{% extends 'academy_theme/base.html' %}{% load static academy_theme i18n %}{% block title %}{% trans 'My App Title' %}{% endblock %}{% block extra_css %}  &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'myapp/css/styles.css' %}&quot;&gt;{% endblock %}{% block extra_header_js %}  &lt;script src=&quot;{% static 'myapp/js/app.js %}&quot; &gt;&lt;/script&gt;{% endblock %}{% block menu %}&lt;nav class=&quot;navbar navbar-vertical navbar-expand-lg navbar-dark&quot;&gt; &lt;div class=&quot;container-lg ms-0&quot;&gt;    &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;        &lt;img src=&quot;{% static 'myapp/images/logo.png' %} alt=&quot;My App&quot; width=&quot;100%&quot;&gt;    &lt;/a&gt;    &lt;button class=&quot;navbar-toggler&quot; type=&quot;button&quot; data-bs-toggle=&quot;collapse&quot; data-bs-target=&quot;#navbarSupportedContentV_9628&quot; aria-controls=&quot;navbarSupportedContent&quot; aria-expanded=&quot;false&quot; aria-label=&quot;Toggle navigation&quot;&gt;      &lt;span class=&quot;navbar-toggler-icon&quot;&gt;&lt;/span&gt;    &lt;/button&gt;    &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbarSupportedContent&quot;&gt;      &lt;ul class=&quot;navbar-nav me-1&quot;&gt;       &lt;li class=&quot;nav-item&quot;&gt;          &lt;a class=&quot;nav-link&quot; href=&quot;/&quot;&gt;Home&lt;/a&gt;        &lt;/li&gt;      &lt;/ul&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/nav&gt;{% endblock %}{% block breadcrumbs %}  &lt;ol class=&quot;breadcrumb&quot;&gt;    {% block breadcrumb-items %}        {% breadcrumb 'Home' 'myapp:home' %}    {% endblock %}  &lt;/ol&gt;{% endblock %}```#### base-wildewidgets.htmlIf you don't need to add any Javascript or CSS, this can be used directly inyour ``django-wildewidgets`` based views, like so:```pythonfrom typing import List, Tuple, Typefrom academy_theme.wildewidgets import AcademyThemeMainMenufrom django.templatetags.static import staticfrom wildewidgets import (    BasicMenu,    BreadcrumbBlock    CardWidget,    MenuMixin,    StandardWidgetMixin,    WidgetListLayout)class MainMenu(AcademyThemeMainMenu):    brand_image: str = static(&quot;myapp/images/logo.png&quot;)    brand_text: str = &quot;My App&quot;    items: List[Tuple[str, str]] = [        ('Home', 'myapp:home'),    ]class BaseBreadcrumbs(BreadcrumbBlock):    def __init__(self, *args, **kwargs):        super().__init__(*args, **kwargs)        self.add_breadcrumb('Home', reverse('myapp:home'))class WildewidgetsView(    MenuMixin,    StandardWidgetMixin,    TemplateView):    template_name: str = &quot;academy_theme/base--wildewidgets.html&quot;    menu_class: Type[BasicMenu] = MainMenu    menu_item: str = &quot;Home&quot;    def get_content(self) -&gt; WidgetListLayout:        layout = WidgetListLayout(&quot;Wildewidgets Example&quot;)        layout.add_widget(            CardWidget(                card_title='My Card',                widget='Here is my card body',            ),            title='My Card',            icon='info-square'        )        return layout    def get_breadcrumbs(self) -&gt; BreadcrumbBlock:        breadcrumbs = BaseBreadcrumbs()        breadcrumbs.add_breadcrumb('Wildewidgets')        return breadcrumbs```If you do need to add Javascript or CSS, create your own `base--wildewidgets.html` that extends the `acadmey_theme`one and and overrides its blocks as needed.  Example:```html{% extends 'academy_theme/base--wildewidgets.html' %}{% load static %}{% block extra_css %}  &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'myapp/css/styles.css' %}&quot;&gt;{% endblock %}{% block extra_header_js %}  &lt;script src=&quot;{% static 'myapp/js/app.js %}&quot; &gt;&lt;/script&gt;{% endblock %}```</longdescription>
</pkgmetadata>