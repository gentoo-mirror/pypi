<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># iam_actions`iam_actions` is a python module which contains a dictionary of AWS IAM information. Ideally, it is a complete catalog of all AWS services, actions, and resource types. The information is scraped from the AWS documentation pages.Nightly, the scraping service runs, and publishes a new version with the date appended. The package is meant to be used as a consumable package, but it also contains the code to generate the definitions for packaging.There are three &quot;roots&quot; that you can consume: actions, resource_types, and services. They all currently return as dict's. *However, in a future release, it will be returned as python data structures*## ActionsActions is a listing of all the actions for a given service. The structure is as follows:```{    &quot;service_name&quot;: {        &quot;action_name: {            &quot;access_level&quot;: access_level,            &quot;action&quot;: action_name,            &quot;condition_keys&quot;: [condition_key1, ...],            &quot;description&quot;: description        }    }}```Therefore, you can find information about an action as follows```&gt;&gt;&gt; iam_actions.actions['s3']['GetObject']{'access_level': 'Read', 'action': 'GetObject', 'condition_keys': ['s3:AccessPointNetworkOrigin', 's3:DataAccessPointAccount', 's3:DataAccessPointArn', 's3:ExistingObjectTag/&lt;key&gt;', 's3:ResourceAccount', 's3:TlsVersion', 's3:authType', 's3:signatureAge', 's3:signatureversion', 's3:x-amz-content-sha256'], 'description': 'Grants permission to retrieve objects from Amazon S3', 'orphan': False, 'resources': ['object']}```## ServicesServices list information about the service. The structure is as follows:```{    &quot;service_name&quot;: {        &quot;Actions&quot;: [action1, ...]        &quot;ServiceNames&quot;: [service_name1, ...]        &quot;ARNFormats&quot;: [arn_format1, ...]        &quot;ConditionKeys&quot;: [condition_key1, ...]        &quot;HasResource&quot;: bool    }}```## Resource TypesResource Types list information about the resource types for the service. The structure is as follows:```{    &quot;service_name&quot;: {        &quot;resource_name&quot;: {            &quot;arn_pattern&quot;: arn_pattern,            &quot;condition_keys&quot;: [condition_key1, ...]        }    }}```## Usage```pythonimport iam_actionsprint(item_actions.services)print(item_actions.actions)print(item_actions.resource_types)```</longdescription>
</pkgmetadata>