# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Open source library for running inference workload with Hugging Face Deep Learning Containers on Amazon SageMaker."

HOMEPAGE="https://github.com/aws/sagemaker-huggingface-inference-toolkit"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="benchmark dev diffusers mms quality tensorflow test torch transformers"
DEPENDENCIES="dev-python/sagemaker-inference[${PYTHON_USEDEP}]
	dev-python/huggingface-hub[${PYTHON_USEDEP}]
	dev-python/retrying[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/pillow[${PYTHON_USEDEP}]
	dev-python/librosa[${PYTHON_USEDEP}]
	dev-python/pyctcdecode[${PYTHON_USEDEP}]
	dev-python/phonemizer[${PYTHON_USEDEP}]
	transformers? ( dev-python/transformers[${PYTHON_USEDEP}] )
	diffusers? ( dev-python/diffusers[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch? ( dev-python/torchaudio[${PYTHON_USEDEP}] )
	tensorflow? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	mms? ( dev-python/multi-model-server[${PYTHON_USEDEP}] )
	mms? ( dev-python/retrying[${PYTHON_USEDEP}] )
	test? ( <dev-python/pytest-8.0[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	test? ( dev-python/parameterized[${PYTHON_USEDEP}] )
	test? ( dev-python/psutil[${PYTHON_USEDEP}] )
	test? ( dev-python/datasets[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-sugar[${PYTHON_USEDEP}] )
	test? ( ~dev-python/black-21.4_beta0[${PYTHON_USEDEP}] )
	test? ( dev-python/sagemaker[${PYTHON_USEDEP}] )
	test? ( dev-python/boto3[${PYTHON_USEDEP}] )
	test? ( ~dev-python/mock-2.0.0[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/boto3[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/locust[${PYTHON_USEDEP}] )
	quality? ( >=dev-python/black-21.10[${PYTHON_USEDEP}] )
	quality? ( >=dev-python/isort-5.5.4[${PYTHON_USEDEP}] )
	quality? ( >=dev-python/flake8-3.8.3[${PYTHON_USEDEP}] )
	dev? ( dev-python/transformers[${PYTHON_USEDEP}] )
	dev? ( dev-python/multi-model-server[${PYTHON_USEDEP}] )
	dev? ( dev-python/retrying[${PYTHON_USEDEP}] )
	dev? ( dev-python/torch[${PYTHON_USEDEP}] )
	dev? ( dev-python/torchaudio[${PYTHON_USEDEP}] )
	dev? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	dev? ( dev-python/diffusers[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
