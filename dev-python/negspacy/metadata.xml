<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;&lt;img width=&quot;40%&quot; src=&quot;docs/icon.png&quot; /&gt;&lt;/p&gt;# negspacy: negation for spaCy[![Build Status](https://dev.azure.com/jenopizzaro/negspacy/_apis/build/status/jenojp.negspacy?branchName=master)](https://dev.azure.com/jenopizzaro/negspacy/_build/latest?definitionId=2&amp;branchName=master) [![Built with spaCy](https://img.shields.io/badge/made%20with%20‚ù§%20and-spaCy-09a3d5.svg)](https://spacy.io) [![pypi Version](https://img.shields.io/pypi/v/negspacy.svg?style=flat-square)](https://pypi.org/project/negspacy/) [![DOI](https://zenodo.org/badge/201071164.svg)](https://zenodo.org/badge/latestdoi/201071164) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/ambv/black)spaCy pipeline object for negating concepts in text. Based on the NegEx algorithm.***NegEx - A Simple Algorithm for Identifying Negated Findings and Diseases in Discharge SummariesChapman, Bridewell, Hanbury, Cooper, Buchanan***[https://doi.org/10.1006/jbin.2001.1029](https://doi.org/10.1006/jbin.2001.1029)## What's newVersion 1.0 is a major version update providing support for spaCy 3.0's new interface for adding pipeline components. As a result, it is not backwards compatible with previous versions of negspacy.If your project uses spaCy 2.3.5 or earlier, you will need to use version 0.1.9. See [archived readme](https://github.com/jenojp/negspacy/blob/v0.1.9_spacy_2.3.5/README.md).## Installation and usageInstall the library.```bashpip install negspacy```Import library and spaCy.```pythonimport spacyfrom negspacy.negation import Negex```Load spacy language model. Add negspacy pipeline object. Filtering on entity types is optional.```pythonnlp = spacy.load(&quot;en_core_web_sm&quot;)nlp.add_pipe(&quot;negex&quot;, config={&quot;ent_types&quot;:[&quot;PERSON&quot;,&quot;ORG&quot;]})```View negations.```pythondoc = nlp(&quot;She does not like Steve Jobs but likes Apple products.&quot;)for e in doc.ents:print(e.text, e._.negex)``````consoleSteve Jobs TrueApple False```Consider pairing with [scispacy](https://allenai.github.io/scispacy/) to find UMLS concepts in text and process negations.## NegEx Patterns* **pseudo_negations** - phrases that are false triggers, ambiguous negations, or double negatives* **preceding_negations** - negation phrases that precede an entity* **following_negations** - negation phrases that follow an entity* **termination** - phrases that cut a sentence in parts, for purposes of negation detection (.e.g., &quot;but&quot;)### TermsetsDesignate termset to use, `en_clinical` is used by default.* `en` = phrases for general english language text* `en_clinical` **DEFAULT** = adds phrases specific to clinical domain to general english* `en_clinical_sensitive` = adds additional phrases to help rule out historical and possibly irrelevant entitiesTo set:```pythonfrom negspacy.negation import Negexfrom negspacy.termsets import termsetts = termset(&quot;en&quot;)nlp = spacy.load(&quot;en_core_web_sm&quot;)nlp.add_pipe(    &quot;negex&quot;,    config={        &quot;neg_termset&quot;:ts.get_patterns()    })```## Additional Functionality### Change patterns or view patterns in useReplace all patterns with your own set```pythonnlp = spacy.load(&quot;en_core_web_sm&quot;)nlp.add_pipe(    &quot;negex&quot;,     config={        &quot;neg_termset&quot;:{            &quot;pseudo_negations&quot;: [&quot;might not&quot;],            &quot;preceding_negations&quot;: [&quot;not&quot;],            &quot;following_negations&quot;:[&quot;declined&quot;],            &quot;termination&quot;: [&quot;but&quot;,&quot;however&quot;]        }    }    )```Add and remove individual patterns on the fly from built-in termsets```pythonfrom negspacy.termsets import termsetts = termset(&quot;en&quot;)ts.add_patterns({            &quot;pseudo_negations&quot;: [&quot;my favorite pattern&quot;],            &quot;termination&quot;: [&quot;these are&quot;, &quot;great patterns&quot;, &quot;but&quot;],            &quot;preceding_negations&quot;: [&quot;wow a negation&quot;],            &quot;following_negations&quot;: [&quot;extra negation&quot;],        })#ORts.remove_patterns(        {            &quot;termination&quot;: [&quot;these are&quot;, &quot;great patterns&quot;],            &quot;pseudo_negations&quot;: [&quot;my favorite pattern&quot;],            &quot;preceding_negations&quot;: [&quot;denied&quot;, &quot;wow a negation&quot;],            &quot;following_negations&quot;: [&quot;unlikely&quot;, &quot;extra negation&quot;],        }    )```View patterns in use```pythonfrom negspacy.termsets import termsetts = termset(&quot;en_clinical&quot;)print(ts.get_patterns())```### Negations in noun chunksDepending on the Named Entity Recognition model you are using, you _may_ have negations &quot;chunked together&quot; with nouns. For example:```pythonnlp = spacy.load(&quot;en_core_sci_sm&quot;)doc = nlp(&quot;There is no headache.&quot;)for e in doc.ents:    print(e.text)# no headache```This would cause the Negex algorithm to miss the preceding negation. To account for this, you can add a ```chunk_prefix```:```pythonnlp = spacy.load(&quot;en_core_sci_sm&quot;)ts = termset(&quot;en_clinical&quot;)nlp.add_pipe(    &quot;negex&quot;,    config={        &quot;chunk_prefix&quot;: [&quot;no&quot;],    },    last=True,)doc = nlp(&quot;There is no headache.&quot;)for e in doc.ents:    print(e.text, e._.negex)# no headache True```## Contributing[contributing](https://github.com/jenojp/negspacy/blob/master/CONTRIBUTING.md)## Authors* Jeno Pizarro## License[license](https://github.com/jenojp/negspacy/blob/master/LICENSE)## Other librariesThis library is featured in the [spaCy Universe](https://spacy.io/universe). Check it out for other useful libraries and inspiration.If you're looking for a spaCy pipeline object to extract values that correspond to a named entity (e.g., birth dates, account numbers, or laboratory results) take a look at [extractacy](https://github.com/jenojp/extractacy).&lt;p align=&quot;left&quot;&gt;&lt;img width=&quot;40%&quot; src=&quot;https://github.com/jenojp/extractacy/blob/master/docs/icon.png?raw=true&quot; /&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>