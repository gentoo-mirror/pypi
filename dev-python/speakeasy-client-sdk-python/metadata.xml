<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># speakeasy-client-sdk-python&lt;!-- Start SDK Installation --&gt;## SDK Installation```bashpip install speakeasy-client-sdk-python```&lt;!-- End SDK Installation --&gt;## SDK Example Usage&lt;!-- Start SDK Example Usage --&gt;```pythonimport speakeasyfrom speakeasy.models import operations, shareds = speakeasy.Speakeasy(    security=shared.Security(        api_key=&quot;YOUR_API_KEY_HERE&quot;,    ),)req = operations.GetApisRequest(    metadata={        &quot;provident&quot;: [            &quot;quibusdam&quot;,            &quot;unde&quot;,            &quot;nulla&quot;,        ],        &quot;corrupti&quot;: [            &quot;vel&quot;,            &quot;error&quot;,            &quot;deserunt&quot;,            &quot;suscipit&quot;,        ],        &quot;iure&quot;: [            &quot;debitis&quot;,            &quot;ipsa&quot;,        ],    },    op=operations.GetApisOp(        and_=False,    ),)    res = s.apis.get_apis(req)if res.apis is not None:    # handle response```&lt;!-- End SDK Example Usage --&gt;&lt;!-- Start SDK Available Operations --&gt;## Available Resources and Operations### Speakeasy SDK* `validate_api_key` - Validate the current api key.### api_endpoints* `delete_api_endpoint` - Delete an ApiEndpoint.* `find_api_endpoint` - Find an ApiEndpoint via its displayName.* `generate_open_api_spec_for_api_endpoint` - Generate an OpenAPI specification for a particular ApiEndpoint.* `generate_postman_collection_for_api_endpoint` - Generate a Postman collection for a particular ApiEndpoint.* `get_all_api_endpoints` - Get all Api endpoints for a particular apiID.* `get_all_for_version_api_endpoints` - Get all ApiEndpoints for a particular apiID and versionID.* `get_api_endpoint` - Get an ApiEndpoint.* `upsert_api_endpoint` - Upsert an ApiEndpoint.### apis* `delete_api` - Delete an Api.* `generate_open_api_spec` - Generate an OpenAPI specification for a particular Api.* `generate_postman_collection` - Generate a Postman collection for a particular Api.* `get_all_api_versions` - Get all Api versions for a particular ApiEndpoint.* `get_apis` - Get a list of Apis for a given workspace* `upsert_api` - Upsert an Api### embeds* `get_embed_access_token` - Get an embed access token for the current workspace.* `get_valid_embed_access_tokens` - Get all valid embed access tokens for the current workspace.* `revoke_embed_access_token` - Revoke an embed access EmbedToken.### metadata* `delete_version_metadata` - Delete metadata for a particular apiID and versionID.* `get_version_metadata` - Get all metadata for a particular apiID and versionID.* `insert_version_metadata` - Insert metadata for a particular apiID and versionID.### plugins* `get_plugins` - Get all plugins for the current workspace.* `run_plugin` - Run a plugin* `upsert_plugin` - Upsert a plugin### requests* `generate_request_postman_collection` - Generate a Postman collection for a particular request.* `get_request_from_event_log` - Get information about a particular request.* `query_event_log` - Query the event log to retrieve a list of requests.### schemas* `delete_schema` - Delete a particular schema revision for an Api.* `download_schema` - Download the latest schema for a particular apiID.* `download_schema_revision` - Download a particular schema revision for an Api.* `get_schema` - Get information about the latest schema.* `get_schema_diff` - Get a diff of two schema revisions for an Api.* `get_schema_revision` - Get information about a particular schema revision for an Api.* `get_schemas` - Get information about all schemas associated with a particular apiID.* `register_schema` - Register a schema.&lt;!-- End SDK Available Operations --&gt;### SDK Generated by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)</longdescription>
</pkgmetadata>