<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========================Team and repository tags========================.. image:: https://governance.openstack.org/tc/badges/python-watcherclient.svg    :target: https://governance.openstack.org/tc/reference/tags/index.html.. Change things from this point on====================python-watcherclient====================Client for resource optimization service for OpenStack.OpenStack Watcher provides a flexible and scalable resource optimizationservice for multi-tenant OpenStack-based clouds.Watcher provides a complete optimization loop-including everything from ametrics receiver, complex event processor and profiler, optimization processorand an action plan applier. This provides a robust framework to realize a widerange of cloud optimization goals, including the reduction of data centeroperating costs, increased system performance via intelligent virtual machinemigration, increased energy efficiency and more!* Free software: Apache license* Wiki: https://wiki.openstack.org/wiki/Watcher* Source: https://opendev.org/openstack/python-watcherclient* Bugs: https://bugs.launchpad.net/watcherInstallation============Install the prerequisite packages---------------------------------On Ubuntu (tested on 14.04-64).. code::   sudo apt-get install python-dev libssl-dev python-pip git-core libmysqlclient-dev libffi-devOn Fedora-based distributions e.g., Fedora/RHEL/CentOS/Scientific Linux (tested on CentOS 6.5).. code::   sudo yum install python-virtualenv openssl-devel python-pip git gcc libffi-devel mysql-devel postgresql-develOn openSUSE-based distributions (SLES 12, openSUSE 13.1, Factory or Tumbleweed).. code::   sudo zypper install gcc git libmysqlclient-devel libopenssl-devel postgresql-devel python-devel python-pipInstall the Watcher client--------------------------You can install the Watcher CLI with the following command:.. code::   sudo pip install python-watcherclientYou can also use the `OpenStack client &lt;https://docs.openstack.org/python-openstackclient/latest/&gt;`_with Watcher (our watcher plugin for OpenStack client is included in thepython-watcherclient package). To install it, you have just to run this command:.. code::   sudo pip install python-openstackclientConfiguration=============Create a **creds** file containing your OpenStack credentials:.. code::   export OS_IDENTITY_API_VERSION=3   export OS_AUTH_URL=http://&lt;your-keystone-server&gt;:5000/v3   export OS_PROJECT_DOMAIN_ID=default   export OS_USER_DOMAIN_ID=default   export OS_USERNAME=admin   export OS_PASSWORD=&lt;your-password&gt;   export OS_PROJECT_NAME=&lt;your-project-name&gt;Source these credentials into your current shell session:.. code::   # source credsYou should be able to launch the following command which gets the list ofpreviously created Audit Templates:.. code::   # watcher audittemplate listor::   # openstack optimize audittemplate list   +--------------------------------+------+----------------------+----------+   | UUID                           | Name | Goal                 | Strategy |   +--------------------------------+------+----------------------+----------+   +--------------------------------+------+----------------------+----------+You can view the entire list of available Watcher commands and options usingthis command:.. code::   # watcher helpor::   # openstack help optimizeTroubleshootings================If any watcher command fails, you can obtain more details with the **--debug**option :.. code::   # watcher --debug audittemplate listor::   # openstack --debug optimize audittemplate listInstall the openstack CLI :.. code::   # pip install python-openstackclientMake sure that your Openstack credentials are correct. If so, you should be ableto verify that the watcher user has been declared in your Openstack keystone :.. code::   # openstack user listand that the watcher endpoints have been declared as well :.. code::   # openstack endpoint list</longdescription>
</pkgmetadata>