<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://app.travis-ci.com/cobusc/django-protected-media.svg?branch=master)](https://app.travis-ci.com/cobusc/django-protected-media)Django Protected Media======================Django Protected Media is a Django app that manages media that are consideredsensitive in a protected fashion.Not only does the media get stored in a separate filesystem location, but authorisationis also required to access it.The application allows for setups where Django performs the authorisation, buthands off the serving of the file to a web server, like Nginx.Quick start-----------1. Add &quot;protected_media&quot; to your INSTALLED_APPS setting like this:```pythonINSTALLED_APPS = [    ...    'protected_media.apps.ProtectedMediaConfig',]```2. Include the URLconf in your project urls.py like this::```path('protected/', include('protected_media.urls')),```3. Add the following settings to `settings.py` if the defaults need to be tweaked:```pythonPROTECTED_MEDIA_ROOT = &quot;%s/protected/&quot; % BASE_DIRPROTECTED_MEDIA_URL = &quot;/protected&quot;PROTECTED_MEDIA_SERVER = &quot;nginx&quot;  # Defaults to &quot;django&quot;PROTECTED_MEDIA_LOCATION_PREFIX = &quot;/internal&quot;  # Prefix used in nginx configPROTECTED_MEDIA_AS_DOWNLOADS = False  # Controls inclusion of a Content-Disposition header```4. Use the new field classes in your models:```pythonfrom protected_media.models import ProtectedImageField, ProtectedFileFielddef SomeModel(models.Model):    document = ProtectedFileField(upload_to=&quot;uploads/&quot;)    picture = ProtectedImageField(upload_to=&quot;uploads/&quot;)    # Files will be stored under PROTECTED_MEDIA_ROOT + upload_to```Overview--------Django manages media based on the following definitions:```pythonBASE_DIR = &quot;/some/application/dir/&quot;MEDIA_ROOT = &quot;%s/media/&quot; % BASE_DIRMEDIA_URL = &quot;/media/&quot;```File- and image fields are typically defined as:```pythondocument = models.FileField(upload_to=&quot;uploads/&quot;)picture = models.ImageField(upload_to=&quot;uploads/&quot;)# Files will be stored under MEDIA_ROOT + upload_to```In a typical production environment one would let `nginx` (or some other server) serve the media:```# Publicly accessible medialocation ^~ /media/ {    alias /some/application/dir/media}```This works well when the media should be publically accessible. However, if the media should be protected, we need a way for Django to check whether the request for the media should only be allowed for logged in (or more stringent criteria) users.The `protected_media` application--------------------------------The `protected_media` application consists of* new `settings.py` attributes,* a customized FileSystemStorage class,* a custom handler for the protected media URL and* additional web server configuration if serving via `nginx` or something similar.Protected media is stored in a different physical location to publically accessible media. The following settings can be specified in `settings.py`:```pythonPROTECTED_MEDIA_ROOT = &quot;/some/application/dir/protected/&quot;PROTECTED_MEDIA_URL = &quot;/protected&quot;PROTECTED_MEDIA_SERVER = &quot;nginx&quot;  # Defaults to &quot;django&quot;PROTECTED_MEDIA_LOCATION_PREFIX = &quot;/internal&quot;  # Prefix used in nginx config```When defining a file or image field that needs to be protected, we use one of theclasses provided by the `protected_media` application:* `ProtectedFileField`* `ProtectedImageField`Protected file- and image fields are typically defined as:```pythondocument = ProtectedFileField(upload_to=&quot;uploads/&quot;)picture = ProtectedImageField(upload_to=&quot;uploads/&quot;)# Files will be stored under PROTECTED_MEDIA_ROOT + upload_to```These classes have a custom storage backend `ProtectedFileSystemStorage` which mananges the filesystem location and URLs associated with protected media.When `nginx` is used, the configuration must be updated to look like this:```# Publicly accessible medialocation /media  {    alias /some/application/dir/media;}# Protected medialocation /internal  {    internal;    alias /some/application/dir/protected;}```</longdescription>
</pkgmetadata>