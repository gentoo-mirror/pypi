<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-emails[![Build Status](https://travis-ci.org/barrybarrette/py-emails.svg?branch=master)](https://travis-ci.org/barrybarrette/py-emails)[![Coverage Status](https://coveralls.io/repos/github/whitebarry/py-emails/badge.svg)](https://coveralls.io/github/whitebarry/py-emails)Simple wrapper around `email` and `smtplib` for composing and sending email messages in an intuitive, simple interface.Pure python, no dependencies outside of the standard library## Installation and useInstall with pip or your favorite package manager: `pip install py-emails`Emails can be created declaratively:```pythonfrom emails import Emailsmtp_config = {    'sender': 'you@example.com',    'host': 'smtp.example.com'}first_attachment = {    'filename': 'example.png',     'content': open('example.png', 'rb').read()}other_attachment = {    'filename': 'example.csv',     'content': open('example.csv', 'rb').read()}my_email = Email(     smtp_config,     subject='How are you?',    body='Long time no see, we should get together!',    attachments=[first_attachment, other_attachment])```Or using a template dictionary:```pythonfrom emails import from_templatesmtp_config = {    'sender': 'you@example.com',    'host': 'smtp.example.com',    'port': 587,    'password': '&lt;secret password&gt;'}template = {    'smtp_config': smtp_config,    'subject': 'How are you?',    'body': 'Long time no see, we should get together!'}my_email = from_template(template)```Once you have the email object, sending it is as simple as specifying one or more recipients:```pythonimport emailssmtp_config = {    'sender': 'you@example.com',    'host': 'smtp.example.com'}my_email = emails.Email(smtp_config)my_email.send('person1@example.com')my_email.send(['person2@example.com', 'person3@example.com'])```See `examples.py` for more in depth use cases</longdescription>
</pkgmetadata>