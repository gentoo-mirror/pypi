<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPi Version](https://img.shields.io/pypi/v/django-jalali-date.svg)](https://pypi.python.org/pypi/django-jalali-date)[![PyPI - Downloads](https://img.shields.io/pypi/dm/django-jalali-date.svg)](https://pypistats.org/packages/django-jalali-date)[![GitHub stars](https://img.shields.io/github/stars/a-roomana/django-jalali-date.svg?style=social)](https://github.com/a-roomana/django-jalali-date)# django-jalali-dateJalali Date support for user interface. Easy conversion of DateTimeFiled to JalaliDateTimeField within the admin site, view and templates.## DependencyTo use this module you need to install jdatetime(and of course you need django) and pytz module which you can install it with easy_install or pip## Version Compatibility#### Python- python 3.8 and below is  compatible with 0.3.2 and below- python 3.X and above is compatible with 1.0.0 and above#### DjangoI tested the latest version on some Django versions on python 3.8- django == 3.2.8- django == 2.2.24I think it will work properly on other versions as well.If you plan to use it in Django 1.X, install version 0.3.2## Install    pip install django-jalali-date   ## Usage**settings.py**- don't forget to make sure you've also added `jalali_date` to your `INSTALLED_APPS`.- any global settings for a Django Jalali Date are kept in a single configuration dictionary named `JALALI_DATE_DEFAULTS`  - you can change the default display of dates by override `Strftime`  - you can use your own date picker by override `Static` ```pythonINSTALLED_APPS = ['django_apps','jalali_date','my_apps',]# default settingsJALALI_DATE_DEFAULTS = {   'Strftime': {        'date': '%y/%m/%d',        'datetime': '%H:%M:%S _ %y/%m/%d',    },    'Static': {        'js': [            # loading datepicker            'admin/js/django_jalali.min.js',            # OR            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.core.js',            # 'admin/jquery.ui.datepicker.jalali/scripts/calendar.js',            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc.js',            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc-fa.js',            # 'admin/js/main.js',        ],        'css': {            'all': [                'admin/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css',            ]        }    },}```**views.py**```pythonfrom jalali_date import datetime2jalali, date2jalalidef my_view(request):jalali_join = datetime2jalali(request.user.date_joined).strftime('%y/%m/%d _ %H:%M:%S')```**forms.py**```pythonfrom django import formsfrom jalali_date.fields import JalaliDateField, SplitJalaliDateTimeFieldfrom jalali_date.widgets import AdminJalaliDateWidget, AdminSplitJalaliDateTimeclass TestForm(forms.ModelForm):    class Meta:        model = TestModel        fields = ('name', 'date', 'date_time')    def __init__(self, *args, **kwargs):        super(TestForm, self).__init__(*args, **kwargs)        self.fields['date'] = JalaliDateField(label=_('date'), # date format is  &quot;yyyy-mm-dd&quot;            widget=AdminJalaliDateWidget # optional, to use default datepicker        )        # you can added a &quot;class&quot; to this field for use your datepicker!        # self.fields['date'].widget.attrs.update({'class': 'jalali_date-date'})        self.fields['date_time'] = SplitJalaliDateTimeField(label=_('date time'),             widget=AdminSplitJalaliDateTime # required, for decompress DatetimeField to JalaliDateField and JalaliTimeField        )```**template.html**```html    {% load jalali_tags %}&lt;p&gt;{{ request.user.date_joined|to_jalali:'%y/%m/%d _ %H:%M:%S' }}&lt;/p&gt;&lt;form method=&quot;post&quot;&gt;{% csrf_token %}    {{ form.as_p }}    &lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;!-- By default, Datepicker using jQuery, you need to set your script after loading jQuery! --&gt;&lt;!-- loading directly --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'admin/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css' %}&quot;&gt;&lt;script src=&quot;{% static 'admin/js/django_jalali.min.js' %}&quot;&gt;&lt;/script&gt;&lt;!-- OR --&gt;&lt;!-- loading by form (if used AdminJalaliDateWidget) --&gt;{{ form.media }}```![example-template-form](http://bayanbox.ir/view/4091856023129600494/photo-2019-04-06-11-11-03-min.jpg)**admin.py**```pythonfrom django.contrib import adminfrom jalali_date import datetime2jalali, date2jalalifrom jalali_date.admin import ModelAdminJalaliMixin, StackedInlineJalaliMixin, TabularInlineJalaliMixin    class MyInlines1(TabularInlineJalaliMixin, admin.TabularInline):model = SecendModelclass MyInlines2(StackedInlineJalaliMixin, admin.StackedInline):model = ThirdModel@admin.register(FirstModel)class FirstModelAdmin(ModelAdminJalaliMixin, admin.ModelAdmin):# show jalali date in list display list_display = ['some_fields', 'get_created_jalali']inlines = (MyInlines1, MyInlines2, )raw_id_fields = ('some_fields', )readonly_fields = ('some_fields', 'date_field',)# you can override formfield, for example:formfield_overrides = {    JSONField: {'widget': JSONEditor},}def get_created_jalali(self, obj):return datetime2jalali(obj.created).strftime('%y/%m/%d _ %H:%M:%S')get_created_jalali.short_description = 'تاریخ ایجاد'get_created_jalali.admin_order_field = 'created'```![example-admin](http://bayanbox.ir/view/2877111068605695571/Screenshot-from-2016-07-26-01-37-07.png)</longdescription>
</pkgmetadata>