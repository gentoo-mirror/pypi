<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==============py-hive-iomete==============py-hive-iomete is a collection of Python `DB-API &lt;http://www.python.org/dev/peps/pep-0249/&gt;`_ and`SQLAlchemy &lt;http://www.sqlalchemy.org/&gt;`_ interfaces for`iomete hive &lt;http://hive.apache.org/&gt;`_.Usage=====DB-API------.. code-block:: python    from pyhive import hive    connection = hive.connect(        host=&quot;&lt;cloud_region&gt;.iomete.com&quot;,        workspace_id=&quot;&lt;workspace_id&gt;&quot;,        lakehouse=&quot;&lt;lakehouse_cluster_name&gt;&quot;,        database=&quot;default&quot;,        username=&quot;&lt;username&gt;&quot;,        password=&quot;&lt;password&gt;&quot;    )    cursor = connection.cursor()    cursor.execute(&quot;SELECT * FROM my_awesome_data LIMIT 10&quot;)    print(cursor.fetchone())    print(cursor.fetchall())DB-API (asynchronous)---------------------.. code-block:: python    from pyhive import hive    from TCLIService.ttypes import TOperationState    connection = hive.connect(        host=&quot;&lt;cloud_region&gt;.iomete.com&quot;,        workspace_id=&quot;&lt;workspace_id&gt;&quot;,        lakehouse=&quot;&lt;lakehouse_cluster_name&gt;&quot;,        database=&quot;default&quot;,        username=&quot;&lt;username&gt;&quot;,        password=&quot;&lt;password&gt;&quot;    )    cursor = connection.cursor()    cursor.execute(&quot;SELECT * FROM my_awesome_data LIMIT 10&quot;, async_=True)    status = cursor.poll().operationState    while status in (TOperationState.INITIALIZED_STATE, TOperationState.RUNNING_STATE):        logs = cursor.fetch_logs()        for message in logs:            print(message)        # If needed, an asynchronous query can be cancelled at any time with:        # cursor.cancel()        status = cursor.poll().operationState    print(cursor.fetchall())SQLAlchemy----------First install this package to register it with SQLAlchemy (see ``setup.py``)... code-block:: python    from sqlalchemy.engine import create_engine    from sqlalchemy.orm import sessionmaker    from sqlalchemy.schema import *    engine = create_engine(        'iomete://&lt;username&gt;:&lt;password&gt;@&lt;region&gt;.iomete.com/&lt;database&gt;?workspace_id=&lt;workspace_id&gt;&amp;lakehouse=&lt;lakehouse_cluster_name&gt;')    # Alternatively, &quot;hive&quot; driver could be used as well    # engine = create_engine(    #    'hive://&lt;username&gt;:&lt;password&gt;@&lt;region&gt;.iomete.com/&lt;database&gt;?workspace_id=&lt;workspace_id&gt;&amp;lakehouse=&lt;lakehouse_cluster_name&gt;')    session = sessionmaker(bind=engine)()    records = session.query(Table('my_awesome_data', MetaData(bind=engine), autoload=True)) \        .limit(10) \        .all()    print(records)Note: query generation functionality is not exhaustive or fully tested, but there should be noproblem with raw SQL.Requirements============Install using- ``pip install 'py-hive-iomete'`` for the DB-API interface- ``pip install 'py-hive-iomete[sqlalchemy]'`` for the SQLAlchemy interfacepy-hive-iomete works with- Python 2.7 / Python 3Changelog=========See https://github.com/iomete/py-hive-iomete/releases.Contributing============- Changes must come with tests, with the exception of trivial things like fixing comments. See .travis.yml for the test environment setup.- Notes on project scope:  - This project is intended to be a minimal iomete (hive) client that does that one thing and nothing else.    Features that can be implemented on top of py-hive-iomete, such integration with your favorite data analysis library, are likely out of scope.  - We prefer having a small number of generic features over a large number of specialized, inflexible features.Updating TCLIService====================The TCLIService module is autogenerated using a ``TCLIService.thrift`` file. To update it, the``generate.py`` file can be used: ``python generate.py &lt;TCLIServiceURL&gt;``. When left blank, theversion for Hive 2.3 will be downloaded.</longdescription>
</pkgmetadata>