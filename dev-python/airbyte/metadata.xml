<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;        &lt;img src=&quot;https://user-images.githubusercontent.com/68016351/222853569-b35cc448-6481-4cf2-a237-bd5da47e94fd.png&quot; width=&quot;500&quot;&gt;   &lt;p&gt;Programatically control Airbyte Cloud through an API.&lt;/p&gt;   &lt;a href=&quot;https://resend.com/docs/api-reference/concepts&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Docs&amp;message=API Ref&amp;color=000000&amp;style=for-the-badge&quot; /&gt;&lt;/a&gt;   &lt;a href=&quot;https://github.com/speakeasy-sdks/airbyte-python-sdk/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/speakeasy-sdks/airbyte-python-sdk/speakeasy_sdk_generation.yml?style=for-the-badge&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?style=for-the-badge&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/speakeasy-sdks/airbyte-python-sdk/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/speakeasy-sdks/airbyte-python-sdk?sort=semver&amp;style=for-the-badge&quot; /&gt;&lt;/a&gt;&lt;/div&gt;## AuthenticationDevelopers will need to create an API Key within your Developer Portal to make API requests. You can use your existing Airbyte account to log in to the Developer Portal. Once you are in the Developer Portal, use the API Keys tab to create or remove API Keys. You can see a walkthrough demo here ðŸŽ¦The Developer Portal UI can also be used to help build your integration by showing information about network requests in the Requests tab. API usage information is also available to you in the Usage tab.(Installation will not work until published to a package manager, please install locally to try it out `pip install -e ../path/to/local/clone`)&lt;!-- Start SDK Installation --&gt;## SDK Installation```bashpip install airbyte```&lt;!-- End SDK Installation --&gt;## SDK Example Usage&lt;!-- Start SDK Example Usage --&gt;```pythonimport airbytefrom airbyte.models import shareds = airbyte.Airbyte(    security=shared.Security(        basic_auth=shared.SchemeBasicAuth(            password=&quot;&quot;,            username=&quot;&quot;,        ),    ),)req = shared.ConnectionCreateRequest(    configurations=shared.StreamConfigurations(        streams=[            shared.StreamConfiguration(                cursor_field=[                    'string',                ],                name='string',                primary_key=[                    [                        'string',                    ],                ],            ),        ],    ),    destination_id='c669dd1e-3620-483e-afc8-55914e0a570f',    namespace_format='${SOURCE_NAMESPACE}',    schedule=shared.ConnectionSchedule(        schedule_type=shared.ScheduleTypeEnum.MANUAL,    ),    source_id='dd427d83-a555-4847-8358-42325b6c7b3f',)res = s.connections.create_connection(req)if res.connection_response is not None:    # handle response    pass```&lt;!-- End SDK Example Usage --&gt;&lt;!-- Start SDK Available Operations --&gt;## Available Resources and Operations### [connections](docs/sdks/connections/README.md)* [create_connection](docs/sdks/connections/README.md#create_connection) - Create a connection* [delete_connection](docs/sdks/connections/README.md#delete_connection) - Delete a Connection* [get_connection](docs/sdks/connections/README.md#get_connection) - Get Connection details* [list_connections](docs/sdks/connections/README.md#list_connections) - List connections* [patch_connection](docs/sdks/connections/README.md#patch_connection) - Update Connection details### [destinations](docs/sdks/destinations/README.md)* [create_destination](docs/sdks/destinations/README.md#create_destination) - Create a destination* [delete_destination](docs/sdks/destinations/README.md#delete_destination) - Delete a Destination* [get_destination](docs/sdks/destinations/README.md#get_destination) - Get Destination details* [list_destinations](docs/sdks/destinations/README.md#list_destinations) - List destinations* [patch_destination](docs/sdks/destinations/README.md#patch_destination) - Update a Destination* [put_destination](docs/sdks/destinations/README.md#put_destination) - Update a Destination and fully overwrite it### [jobs](docs/sdks/jobs/README.md)* [cancel_job](docs/sdks/jobs/README.md#cancel_job) - Cancel a running Job* [create_job](docs/sdks/jobs/README.md#create_job) - Trigger a sync or reset job of a connection* [get_job](docs/sdks/jobs/README.md#get_job) - Get Job status and details* [list_jobs](docs/sdks/jobs/README.md#list_jobs) - List Jobs by sync type### [sources](docs/sdks/sources/README.md)* [create_source](docs/sdks/sources/README.md#create_source) - Create a source* [delete_source](docs/sdks/sources/README.md#delete_source) - Delete a Source* [get_source](docs/sdks/sources/README.md#get_source) - Get Source details* [initiate_o_auth](docs/sdks/sources/README.md#initiate_o_auth) - Initiate OAuth for a source* [list_sources](docs/sdks/sources/README.md#list_sources) - List sources* [patch_source](docs/sdks/sources/README.md#patch_source) - Update a Source* [put_source](docs/sdks/sources/README.md#put_source) - Update a Source and fully overwrite it### [streams](docs/sdks/streams/README.md)* [get_stream_properties](docs/sdks/streams/README.md#get_stream_properties) - Get stream properties### [workspaces](docs/sdks/workspaces/README.md)* [create_or_update_workspace_o_auth_credentials](docs/sdks/workspaces/README.md#create_or_update_workspace_o_auth_credentials) - Create OAuth override credentials for a workspace and source type.* [create_workspace](docs/sdks/workspaces/README.md#create_workspace) - Create a workspace* [delete_workspace](docs/sdks/workspaces/README.md#delete_workspace) - Delete a Workspace* [get_workspace](docs/sdks/workspaces/README.md#get_workspace) - Get Workspace details* [list_workspaces](docs/sdks/workspaces/README.md#list_workspaces) - List workspaces* [update_workspace](docs/sdks/workspaces/README.md#update_workspace) - Update a workspace&lt;!-- End SDK Available Operations --&gt;&lt;!-- Start Dev Containers --&gt;&lt;!-- End Dev Containers --&gt;&lt;!-- Start Pagination --&gt;# PaginationSome of the endpoints in this SDK support pagination. To use pagination, you make your SDK calls as usual, but thereturned response object will have a `Next` method that can be called to pull down the next group of results. If thereturn value of `Next` is `None`, then there are no more pages to be fetched.Here's an example of one such pagination call:&lt;!-- End Pagination --&gt;&lt;!-- Start Error Handling --&gt;# Error HandlingHandling errors in this SDK should largely match your expectations.  All operations return a response object or raise an error.  If Error objects are specified in your OpenAPI Spec, the SDK will raise the appropriate Error type.| Error Object    | Status Code     | Content Type    || --------------- | --------------- | --------------- || errors.SDKError | 400-600         | */*             |## Example```pythonimport airbytefrom airbyte.models import shareds = airbyte.Airbyte(    security=shared.Security(        basic_auth=shared.SchemeBasicAuth(            password=&quot;&quot;,            username=&quot;&quot;,        ),    ),)req = shared.ConnectionCreateRequest(    configurations=shared.StreamConfigurations(        streams=[            shared.StreamConfiguration(                cursor_field=[                    'string',                ],                name='string',                primary_key=[                    [                        'string',                    ],                ],            ),        ],    ),    destination_id='c669dd1e-3620-483e-afc8-55914e0a570f',    namespace_format='${SOURCE_NAMESPACE}',    schedule=shared.ConnectionSchedule(        schedule_type=shared.ScheduleTypeEnum.MANUAL,    ),    source_id='dd427d83-a555-4847-8358-42325b6c7b3f',)res = Nonetry:    res = s.connections.create_connection(req)except (errors.SDKError) as e:    print(e) # handle exceptionif res.connection_response is not None:    # handle response    pass```&lt;!-- End Error Handling --&gt;&lt;!-- Start Server Selection --&gt;# Server Selection## Select Server by IndexYou can override the default server globally by passing a server index to the `server_idx: int` optional parameter when initializing the SDK client instance. The selected server will then be used as the default on the operations that use it. This table lists the indexes associated with the available servers:| # | Server | Variables || - | ------ | --------- || 0 | `https://api.airbyte.com/v1` | None |For example:```pythonimport airbytefrom airbyte.models import shareds = airbyte.Airbyte(    server_idx=0,    security=shared.Security(        basic_auth=shared.SchemeBasicAuth(            password=&quot;&quot;,            username=&quot;&quot;,        ),    ),)req = shared.ConnectionCreateRequest(    configurations=shared.StreamConfigurations(        streams=[            shared.StreamConfiguration(                cursor_field=[                    'string',                ],                name='string',                primary_key=[                    [                        'string',                    ],                ],            ),        ],    ),    destination_id='c669dd1e-3620-483e-afc8-55914e0a570f',    namespace_format='${SOURCE_NAMESPACE}',    schedule=shared.ConnectionSchedule(        schedule_type=shared.ScheduleTypeEnum.MANUAL,    ),    source_id='dd427d83-a555-4847-8358-42325b6c7b3f',)res = s.connections.create_connection(req)if res.connection_response is not None:    # handle response    pass```## Override Server URL Per-ClientThe default server can also be overridden globally by passing a URL to the `server_url: str` optional parameter when initializing the SDK client instance. For example:```pythonimport airbytefrom airbyte.models import shareds = airbyte.Airbyte(    server_url=&quot;https://api.airbyte.com/v1&quot;,    security=shared.Security(        basic_auth=shared.SchemeBasicAuth(            password=&quot;&quot;,            username=&quot;&quot;,        ),    ),)req = shared.ConnectionCreateRequest(    configurations=shared.StreamConfigurations(        streams=[            shared.StreamConfiguration(                cursor_field=[                    'string',                ],                name='string',                primary_key=[                    [                        'string',                    ],                ],            ),        ],    ),    destination_id='c669dd1e-3620-483e-afc8-55914e0a570f',    namespace_format='${SOURCE_NAMESPACE}',    schedule=shared.ConnectionSchedule(        schedule_type=shared.ScheduleTypeEnum.MANUAL,    ),    source_id='dd427d83-a555-4847-8358-42325b6c7b3f',)res = s.connections.create_connection(req)if res.connection_response is not None:    # handle response    pass```&lt;!-- End Server Selection --&gt;&lt;!-- Start Custom HTTP Client --&gt;# Custom HTTP ClientThe Python SDK makes API calls using the (requests)[https://pypi.org/project/requests/] HTTP library.  In order to provide a convenient way to configure timeouts, cookies, proxies, custom headers, and other low-level configuration, you can initialize the SDK client with a custom `requests.Session` object.For example, you could specify a header for every request that this sdk makes as follows:```pythonimport airbyteimport requestshttp_client = requests.Session()http_client.headers.update({'x-custom-header': 'someValue'})s = airbyte.Airbyte(client: http_client)```&lt;!-- End Custom HTTP Client --&gt;&lt;!-- Start Authentication --&gt;# Authentication## Per-Client Security SchemesThis SDK supports the following security schemes globally:| Name          | Type          | Scheme        || ------------- | ------------- | ------------- || `basic_auth`  | http          | HTTP Basic    || `bearer_auth` | http          | HTTP Bearer   |You can set the security parameters through the `security` optional parameter when initializing the SDK client instance. The selected scheme will be used by default to authenticate with the API for all operations that support it. For example:```pythonimport airbytefrom airbyte.models import shareds = airbyte.Airbyte(    security=shared.Security(        basic_auth=shared.SchemeBasicAuth(            password=&quot;&quot;,            username=&quot;&quot;,        ),    ),)req = shared.ConnectionCreateRequest(    configurations=shared.StreamConfigurations(        streams=[            shared.StreamConfiguration(                cursor_field=[                    'string',                ],                name='string',                primary_key=[                    [                        'string',                    ],                ],            ),        ],    ),    destination_id='c669dd1e-3620-483e-afc8-55914e0a570f',    namespace_format='${SOURCE_NAMESPACE}',    schedule=shared.ConnectionSchedule(        schedule_type=shared.ScheduleTypeEnum.MANUAL,    ),    source_id='dd427d83-a555-4847-8358-42325b6c7b3f',)res = s.connections.create_connection(req)if res.connection_response is not None:    # handle response    pass```&lt;!-- End Authentication --&gt;&lt;!-- Placeholder for Future Speakeasy SDK Sections --&gt;### SDK Generated by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)</longdescription>
</pkgmetadata>