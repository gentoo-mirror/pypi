<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;[![Visit SnapTrade](https://raw.githubusercontent.com/passiv/snaptrade-sdks/HEAD/sdks/python/header.png)](https://snaptrade.com)# SnapTrade&lt;a id=&quot;snaptrade&quot;&gt;&lt;/a&gt;Connect brokerage accounts to your app for live positions and trading[![PyPI](https://img.shields.io/badge/PyPI-v10.34.6-blue)](https://pypi.org/project/snaptrade-python-sdk/10.34.6)[![README.md](https://img.shields.io/badge/README-Click%20Here-green)](https://github.com/passiv/snaptrade-sdks/tree/master/sdks/python#readme)[![More Info](https://img.shields.io/badge/More%20Info-Click%20Here-orange)](https://snaptrade.com/)&lt;/div&gt;## Table of Contents&lt;a id=&quot;table-of-contents&quot;&gt;&lt;/a&gt;&lt;!-- toc --&gt;- [Requirements](#requirements)- [Installing](#installing)- [Getting Started](#getting-started)- [Async](#async)- [Reference](#reference)  * [`snaptrade.account_information.get_all_user_holdings`](#snaptradeaccount_informationget_all_user_holdings)  * [`snaptrade.account_information.get_user_account_balance`](#snaptradeaccount_informationget_user_account_balance)  * [`snaptrade.account_information.get_user_account_details`](#snaptradeaccount_informationget_user_account_details)  * [`snaptrade.account_information.get_user_account_orders`](#snaptradeaccount_informationget_user_account_orders)  * [`snaptrade.account_information.get_user_account_positions`](#snaptradeaccount_informationget_user_account_positions)  * [`snaptrade.account_information.get_user_holdings`](#snaptradeaccount_informationget_user_holdings)  * [`snaptrade.account_information.list_user_accounts`](#snaptradeaccount_informationlist_user_accounts)  * [`snaptrade.account_information.update_user_account`](#snaptradeaccount_informationupdate_user_account)  * [`snaptrade.api_status.check`](#snaptradeapi_statuscheck)  * [`snaptrade.authentication.delete_snap_trade_user`](#snaptradeauthenticationdelete_snap_trade_user)  * [`snaptrade.authentication.get_user_jwt`](#snaptradeauthenticationget_user_jwt)  * [`snaptrade.authentication.list_snap_trade_users`](#snaptradeauthenticationlist_snap_trade_users)  * [`snaptrade.authentication.login_snap_trade_user`](#snaptradeauthenticationlogin_snap_trade_user)  * [`snaptrade.authentication.register_snap_trade_user`](#snaptradeauthenticationregister_snap_trade_user)  * [`snaptrade.connections.detail_brokerage_authorization`](#snaptradeconnectionsdetail_brokerage_authorization)  * [`snaptrade.connections.list_brokerage_authorizations`](#snaptradeconnectionslist_brokerage_authorizations)  * [`snaptrade.connections.remove_brokerage_authorization`](#snaptradeconnectionsremove_brokerage_authorization)  * [`snaptrade.connections.session_events`](#snaptradeconnectionssession_events)  * [`snaptrade.error_logs.list_user_errors`](#snaptradeerror_logslist_user_errors)  * [`snaptrade.options.get_option_strategy`](#snaptradeoptionsget_option_strategy)  * [`snaptrade.options.get_options_chain`](#snaptradeoptionsget_options_chain)  * [`snaptrade.options.get_options_strategy_quote`](#snaptradeoptionsget_options_strategy_quote)  * [`snaptrade.options.list_option_holdings`](#snaptradeoptionslist_option_holdings)  * [`snaptrade.options.place_option_strategy`](#snaptradeoptionsplace_option_strategy)  * [`snaptrade.reference_data.get_currency_exchange_rate_pair`](#snaptradereference_dataget_currency_exchange_rate_pair)  * [`snaptrade.reference_data.get_partner_info`](#snaptradereference_dataget_partner_info)  * [`snaptrade.reference_data.get_security_types`](#snaptradereference_dataget_security_types)  * [`snaptrade.reference_data.get_stock_exchanges`](#snaptradereference_dataget_stock_exchanges)  * [`snaptrade.reference_data.get_symbols`](#snaptradereference_dataget_symbols)  * [`snaptrade.reference_data.get_symbols_by_ticker`](#snaptradereference_dataget_symbols_by_ticker)  * [`snaptrade.reference_data.list_all_brokerage_authorization_type`](#snaptradereference_datalist_all_brokerage_authorization_type)  * [`snaptrade.reference_data.list_all_brokerages`](#snaptradereference_datalist_all_brokerages)  * [`snaptrade.reference_data.list_all_currencies`](#snaptradereference_datalist_all_currencies)  * [`snaptrade.reference_data.list_all_currencies_rates`](#snaptradereference_datalist_all_currencies_rates)  * [`snaptrade.reference_data.symbol_search_user_account`](#snaptradereference_datasymbol_search_user_account)  * [`snaptrade.trading.cancel_user_account_order`](#snaptradetradingcancel_user_account_order)  * [`snaptrade.trading.get_order_impact`](#snaptradetradingget_order_impact)  * [`snaptrade.trading.get_user_account_quotes`](#snaptradetradingget_user_account_quotes)  * [`snaptrade.trading.place_force_order`](#snaptradetradingplace_force_order)  * [`snaptrade.trading.place_oco_order`](#snaptradetradingplace_oco_order)  * [`snaptrade.trading.place_order`](#snaptradetradingplace_order)  * [`snaptrade.transactions_and_reporting.get_activities`](#snaptradetransactions_and_reportingget_activities)  * [`snaptrade.transactions_and_reporting.get_reporting_custom_range`](#snaptradetransactions_and_reportingget_reporting_custom_range)&lt;!-- tocstop --&gt;## Requirements&lt;a id=&quot;requirements&quot;&gt;&lt;/a&gt;Python &gt;=3.7## Installing&lt;a id=&quot;installing&quot;&gt;&lt;/a&gt;```shpip install snaptrade-python-sdk==10.34.6```## Getting Started&lt;a id=&quot;getting-started&quot;&gt;&lt;/a&gt;```pythonimport osimport uuidfrom pprint import pprintfrom snaptrade_client import SnapTrade# 1) Initialize a client with your clientID and consumerKey.snaptrade = SnapTrade(    consumer_key=os.environ[&quot;SNAPTRADE_CONSUMER_KEY&quot;],    client_id=os.environ[&quot;SNAPTRADE_CLIENT_ID&quot;],)# 2) Check that the client is able to make a request to the API server.api_response = snaptrade.api_status.check()pprint(api_response.body)# 3) Create a new user on SnapTradeuser_id = str(uuid.uuid4())register_response = snaptrade.authentication.register_snap_trade_user(    body={&quot;userId&quot;: user_id})pprint(register_response.body)# Note: A user secret is only generated once. It's required to access# resources for certain endpoints.user_secret = register_response.body[&quot;userSecret&quot;]# 4) Get a redirect URI. Users will need this to connect# their brokerage to the SnapTrade server.redirect_uri = snaptrade.authentication.login_snap_trade_user(    query_params={&quot;userId&quot;: user_id, &quot;userSecret&quot;: user_secret})print(redirect_uri.body)# 5) Obtaining account holdings dataholdings = snaptrade.account_information.get_all_user_holdings(    query_params={&quot;userId&quot;: user_id, &quot;userSecret&quot;: user_secret})pprint(holdings.body)# 6) Deleting a userdeleted_response = snaptrade.authentication.delete_snap_trade_user(    query_params={&quot;userId&quot;: user_id})pprint(deleted_response.body)```## Async&lt;a id=&quot;async&quot;&gt;&lt;/a&gt;`async` support is available by prepending `a` to any method.```pythonimport asynciofrom pprint import pprintfrom snaptrade_client import SnapTrade, ApiExceptionsnaptrade = SnapTrade(    consumer_key=&quot;YOUR_CONSUMER_KEY&quot;,    client_id=&quot;YOUR_CLIENT_ID&quot;,)async def main():    try:        # List all accounts for the user, plus balances, positions, and orders for each account.        get_all_user_holdings_response = (            await snaptrade.account_information.aget_all_user_holdings(                user_id=&quot;John.doe@snaptrade.com&quot;,                user_secret=&quot;USERSECRET123&quot;,                brokerage_authorizations=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631&quot;,            )        )        pprint(get_all_user_holdings_response.body)        pprint(get_all_user_holdings_response.body[&quot;account&quot;])        pprint(get_all_user_holdings_response.body[&quot;balances&quot;])        pprint(get_all_user_holdings_response.body[&quot;positions&quot;])        pprint(get_all_user_holdings_response.body[&quot;total_value&quot;])        pprint(get_all_user_holdings_response.headers)        pprint(get_all_user_holdings_response.status)        pprint(get_all_user_holdings_response.round_trip_time)    except ApiException as e:        print(            &quot;Exception when calling AccountInformationApi.get_all_user_holdings: %s\n&quot;            % e        )        pprint(e.body)        pprint(e.headers)        pprint(e.status)        pprint(e.reason)        pprint(e.round_trip_time)asyncio.run(main())```## Reference&lt;a id=&quot;reference&quot;&gt;&lt;/a&gt;### `snaptrade.account_information.get_all_user_holdings`&lt;a id=&quot;snaptradeaccount_informationget_all_user_holdings&quot;&gt;&lt;/a&gt;List all accounts for the user, plus balances, positions, and orders for each account.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_all_user_holdings_response = snaptrade.account_information.get_all_user_holdings(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    brokerage_authorizations=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### brokerage_authorizations: `str`&lt;a id=&quot;brokerage_authorizations-str&quot;&gt;&lt;/a&gt;Optional. Comma seperated list of authorization IDs (only use if filtering is needed on one or more authorizations).#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountHoldings`](./snaptrade_client/type/account_holdings.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/holdings` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.get_user_account_balance`&lt;a id=&quot;snaptradeaccount_informationget_user_account_balance&quot;&gt;&lt;/a&gt;A list of account balances for the specified account (one per currency that the account holds).#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_account_balance_response = (    snaptrade.account_information.get_user_account_balance(        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,        account_id=&quot;accountId_example&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to get balances.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Balance`](./snaptrade_client/type/balance.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/balances` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.get_user_account_details`&lt;a id=&quot;snaptradeaccount_informationget_user_account_details&quot;&gt;&lt;/a&gt;Return details of a specific investment account#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_account_details_response = (    snaptrade.account_information.get_user_account_details(        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,        account_id=&quot;accountId_example&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to get detail of.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Account`](./snaptrade_client/type/account.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.get_user_account_orders`&lt;a id=&quot;snaptradeaccount_informationget_user_account_orders&quot;&gt;&lt;/a&gt;Fetch all recent orders from a user's account.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_account_orders_response = (    snaptrade.account_information.get_user_account_orders(        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,        account_id=&quot;accountId_example&quot;,        state=&quot;all&quot;,        days=30,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to get orders.##### state: `str`&lt;a id=&quot;state-str&quot;&gt;&lt;/a&gt;defaults value is set to \&quot;all\&quot;##### days: `int`&lt;a id=&quot;days-int&quot;&gt;&lt;/a&gt;Number of days in the past to fetch the most recent orders. Defaults to the last 90 days if no value is passed in.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountOrderRecord`](./snaptrade_client/type/account_order_record.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/orders` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.get_user_account_positions`&lt;a id=&quot;snaptradeaccount_informationget_user_account_positions&quot;&gt;&lt;/a&gt;List account positions#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_account_positions_response = (    snaptrade.account_information.get_user_account_positions(        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,        account_id=&quot;accountId_example&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to get positions.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Position`](./snaptrade_client/type/position.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/positions` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.get_user_holdings`&lt;a id=&quot;snaptradeaccount_informationget_user_holdings&quot;&gt;&lt;/a&gt;List balances, positions and orders for the specified account#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_holdings_response = snaptrade.account_information.get_user_holdings(    account_id=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631&quot;,    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to fetch holdings for.##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountHoldingsAccount`](./snaptrade_client/type/account_holdings_account.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/holdings` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.list_user_accounts`&lt;a id=&quot;snaptradeaccount_informationlist_user_accounts&quot;&gt;&lt;/a&gt;List accounts#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_user_accounts_response = snaptrade.account_information.list_user_accounts(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Account`](./snaptrade_client/type/account.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.account_information.update_user_account`&lt;a id=&quot;snaptradeaccount_informationupdate_user_account&quot;&gt;&lt;/a&gt;Update details of an investment account#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonupdate_user_account_response = snaptrade.account_information.update_user_account(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;accountId_example&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to update.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Account`](./snaptrade_client/type/account.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}` `put`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.api_status.check`&lt;a id=&quot;snaptradeapi_statuscheck&quot;&gt;&lt;/a&gt;Check whether the API is operational and verify timestamps.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythoncheck_response = snaptrade.api_status.check()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Status`](./snaptrade_client/type/status.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.authentication.delete_snap_trade_user`&lt;a id=&quot;snaptradeauthenticationdelete_snap_trade_user&quot;&gt;&lt;/a&gt;Deletes a user you've registered over the SnapTrade API, and any data associated with them or their investment accounts.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythondelete_snap_trade_user_response = snaptrade.authentication.delete_snap_trade_user(    user_id=&quot;John.doe@snaptrade.com&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`DeleteUserResponse`](./snaptrade_client/type/delete_user_response.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/deleteUser` `delete`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.authentication.get_user_jwt`&lt;a id=&quot;snaptradeauthenticationget_user_jwt&quot;&gt;&lt;/a&gt;Generate encrypted JWT token#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_jwt_response = snaptrade.authentication.get_user_jwt(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/encryptedJWT` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.authentication.list_snap_trade_users`&lt;a id=&quot;snaptradeauthenticationlist_snap_trade_users&quot;&gt;&lt;/a&gt;Returns a list of users you've registered over the SnapTrade API.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_snap_trade_users_response = snaptrade.authentication.list_snap_trade_users()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UserList`](./snaptrade_client/type/user_list.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/listUsers` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.authentication.login_snap_trade_user`&lt;a id=&quot;snaptradeauthenticationlogin_snap_trade_user&quot;&gt;&lt;/a&gt;Logs in a SnapTrade user and returns an authenticated connection portal URL for them to use to connect a brokerage account.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlogin_snap_trade_user_response = snaptrade.authentication.login_snap_trade_user(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    broker=&quot;ALPACA&quot;,    immediate_redirect=True,    custom_redirect=&quot;https://snaptrade.com&quot;,    reconnect=&quot;8b5f262d-4bb9-365d-888a-202bd3b15fa1&quot;,    connection_type=&quot;read&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### broker: `str`&lt;a id=&quot;broker-str&quot;&gt;&lt;/a&gt;Slug of the brokerage to connect the user to##### immediate_redirect: `bool`&lt;a id=&quot;immediate_redirect-bool&quot;&gt;&lt;/a&gt;When set to True, user will be redirected back to the partner's site instead of the connection portal##### custom_redirect: `str`&lt;a id=&quot;custom_redirect-str&quot;&gt;&lt;/a&gt;URL to redirect the user to after the user connects their brokerage account##### reconnect: `str`&lt;a id=&quot;reconnect-str&quot;&gt;&lt;/a&gt;The UUID of the brokerage connection to be reconnected##### connection_type: `str`&lt;a id=&quot;connection_type-str&quot;&gt;&lt;/a&gt;Sets whether the connection should be read or trade#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`SnapTradeLoginUserRequestBody`](./snaptrade_client/type/snap_trade_login_user_request_body.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/login` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.authentication.register_snap_trade_user`&lt;a id=&quot;snaptradeauthenticationregister_snap_trade_user&quot;&gt;&lt;/a&gt;Create SnapTrade user#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonregister_snap_trade_user_response = snaptrade.authentication.register_snap_trade_user(    user_id=&quot;snaptrade-user-123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;SnapTrade User ID. Provided by SnapTrade Partner. Can be any string, as long as it's unique to a user#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`SnapTradeRegisterUserRequestBody`](./snaptrade_client/type/snap_trade_register_user_request_body.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UserIDandSecret`](./snaptrade_client/type/user_i_dand_secret.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/registerUser` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.connections.detail_brokerage_authorization`&lt;a id=&quot;snaptradeconnectionsdetail_brokerage_authorization&quot;&gt;&lt;/a&gt;Get brokerage authorization details#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythondetail_brokerage_authorization_response = (    snaptrade.connections.detail_brokerage_authorization(        authorization_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### authorization_id: `str`&lt;a id=&quot;authorization_id-str&quot;&gt;&lt;/a&gt;The ID of a brokerage authorization object.##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`BrokerageAuthorization`](./snaptrade_client/type/brokerage_authorization.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/authorizations/{authorizationId}` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.connections.list_brokerage_authorizations`&lt;a id=&quot;snaptradeconnectionslist_brokerage_authorizations&quot;&gt;&lt;/a&gt;List all brokerage authorizations for the user#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_brokerage_authorizations_response = (    snaptrade.connections.list_brokerage_authorizations(        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`BrokerageAuthorization`](./snaptrade_client/type/brokerage_authorization.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/authorizations` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.connections.remove_brokerage_authorization`&lt;a id=&quot;snaptradeconnectionsremove_brokerage_authorization&quot;&gt;&lt;/a&gt;Delete brokerage authorization#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonsnaptrade.connections.remove_brokerage_authorization(    authorization_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### authorization_id: `str`&lt;a id=&quot;authorization_id-str&quot;&gt;&lt;/a&gt;The ID of the Authorization to delete.##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/authorizations/{authorizationId}` `delete`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.connections.session_events`&lt;a id=&quot;snaptradeconnectionssession_events&quot;&gt;&lt;/a&gt;List all session events for the partner#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonsession_events_response = snaptrade.connections.session_events(    partner_client_id=&quot;SNAPTRADETEST&quot;,    user_id=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2&quot;,    session_id=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### partner_client_id: `str`&lt;a id=&quot;partner_client_id-str&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;Optional comma seperated list of user IDs used to filter the request on specific users##### session_id: `str`&lt;a id=&quot;session_id-str&quot;&gt;&lt;/a&gt;Optional comma seperated list of session IDs used to filter the request on specific users#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/sessionEvents` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.error_logs.list_user_errors`&lt;a id=&quot;snaptradeerror_logslist_user_errors&quot;&gt;&lt;/a&gt;Retrieve error logs on behalf of your SnapTrade users#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_user_errors_response = snaptrade.error_logs.list_user_errors(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UserErrorLog`](./snaptrade_client/type/user_error_log.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/listUserErrors` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.options.get_option_strategy`&lt;a id=&quot;snaptradeoptionsget_option_strategy&quot;&gt;&lt;/a&gt;Creates an option strategy object that will be used to place an option strategy order#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_option_strategy_response = snaptrade.options.get_option_strategy(    underlying_symbol_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,    legs=[        {            &quot;action&quot;: &quot;BUY_TO_OPEN&quot;,            &quot;option_symbol_id&quot;: &quot;SPY220819P00200000&quot;,            &quot;quantity&quot;: 1,        }    ],    strategy_type=&quot;CUSTOM&quot;,    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;accountId_example&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### underlying_symbol_id: `str`&lt;a id=&quot;underlying_symbol_id-str&quot;&gt;&lt;/a&gt;##### legs: List[[`OptionLeg`](./snaptrade_client/type/option_leg.py)]&lt;a id=&quot;legs-listoptionlegsnaptrade_clienttypeoption_legpy&quot;&gt;&lt;/a&gt;##### strategy_type: `str`&lt;a id=&quot;strategy_type-str&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to create the option strategy object in.#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`Any`](./snaptrade_client/type/typing_any.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`StrategyQuotes`](./snaptrade_client/type/strategy_quotes.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/optionStrategy` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.options.get_options_chain`&lt;a id=&quot;snaptradeoptionsget_options_chain&quot;&gt;&lt;/a&gt;Get the options chain#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_options_chain_response = snaptrade.options.get_options_chain(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;accountId_example&quot;,    symbol=&quot;symbol_example&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to get the options chain from.##### symbol: `str`&lt;a id=&quot;symbol-str&quot;&gt;&lt;/a&gt;Universal symbol ID if symbol#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`OptionChain`](./snaptrade_client/type/option_chain.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/optionsChain` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.options.get_options_strategy_quote`&lt;a id=&quot;snaptradeoptionsget_options_strategy_quote&quot;&gt;&lt;/a&gt;Get latest market data of option strategy#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_options_strategy_quote_response = snaptrade.options.get_options_strategy_quote(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;accountId_example&quot;,    option_strategy_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account the strategy will be placed in.##### option_strategy_id: `str`&lt;a id=&quot;option_strategy_id-str&quot;&gt;&lt;/a&gt;Option strategy id obtained from response when creating option strategy object#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`StrategyQuotes`](./snaptrade_client/type/strategy_quotes.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/optionStrategy/{optionStrategyId}` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.options.list_option_holdings`&lt;a id=&quot;snaptradeoptionslist_option_holdings&quot;&gt;&lt;/a&gt;Get the options holdings in the account#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_option_holdings_response = snaptrade.options.list_option_holdings(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;accountId_example&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to fetch options holdings for.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`OptionsPosition`](./snaptrade_client/type/options_position.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/options` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.options.place_option_strategy`&lt;a id=&quot;snaptradeoptionsplace_option_strategy&quot;&gt;&lt;/a&gt;Place an option strategy order on the brokerage#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonplace_option_strategy_response = snaptrade.options.place_option_strategy(    order_type=&quot;Limit&quot;,    time_in_force=&quot;Day&quot;,    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,    option_strategy_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,    price=31.33,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### order_type: [`OrderType`](./snaptrade_client/type/order_type.py)&lt;a id=&quot;order_type-ordertypesnaptrade_clienttypeorder_typepy&quot;&gt;&lt;/a&gt;##### time_in_force: [`TimeInForce`](./snaptrade_client/type/time_in_force.py)&lt;a id=&quot;time_in_force-timeinforcesnaptrade_clienttypetime_in_forcepy&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to execute the strategy in.##### option_strategy_id: `str`&lt;a id=&quot;option_strategy_id-str&quot;&gt;&lt;/a&gt;Option strategy id obtained from response when creating option strategy object##### price: [`Price`](./snaptrade_client/type/price.py)&lt;a id=&quot;price-pricesnaptrade_clienttypepricepy&quot;&gt;&lt;/a&gt;#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`Any`](./snaptrade_client/type/typing_any.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`StrategyOrderRecord`](./snaptrade_client/type/strategy_order_record.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/optionStrategy/{optionStrategyId}/execute` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.get_currency_exchange_rate_pair`&lt;a id=&quot;snaptradereference_dataget_currency_exchange_rate_pair&quot;&gt;&lt;/a&gt;Return the exchange rate of a currency pair#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_currency_exchange_rate_pair_response = (    snaptrade.reference_data.get_currency_exchange_rate_pair(        currency_pair=&quot;currencyPair_example&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### currency_pair: `str`&lt;a id=&quot;currency_pair-str&quot;&gt;&lt;/a&gt;A currency pair based on currency code for example, {CAD-USD}#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`ExchangeRatePairs`](./snaptrade_client/type/exchange_rate_pairs.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/currencies/rates/{currencyPair}` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.get_partner_info`&lt;a id=&quot;snaptradereference_dataget_partner_info&quot;&gt;&lt;/a&gt;Get metadata related to Snaptrade partner#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_partner_info_response = snaptrade.reference_data.get_partner_info()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`PartnerData`](./snaptrade_client/type/partner_data.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/snapTrade/partners` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.get_security_types`&lt;a id=&quot;snaptradereference_dataget_security_types&quot;&gt;&lt;/a&gt;List security types available on SnapTrade.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_security_types_response = snaptrade.reference_data.get_security_types()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`SecurityType`](./snaptrade_client/type/security_type.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/securityTypes` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.get_stock_exchanges`&lt;a id=&quot;snaptradereference_dataget_stock_exchanges&quot;&gt;&lt;/a&gt;List exchanges#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_stock_exchanges_response = snaptrade.reference_data.get_stock_exchanges()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Exchange`](./snaptrade_client/type/exchange.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/exchanges` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.get_symbols`&lt;a id=&quot;snaptradereference_dataget_symbols&quot;&gt;&lt;/a&gt;Search for symbols#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_symbols_response = snaptrade.reference_data.get_symbols(    substring=&quot;apple&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### substring: `str`&lt;a id=&quot;substring-str&quot;&gt;&lt;/a&gt;#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`SymbolQuery`](./snaptrade_client/type/symbol_query.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UniversalSymbol`](./snaptrade_client/type/universal_symbol.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/symbols` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.get_symbols_by_ticker`&lt;a id=&quot;snaptradereference_dataget_symbols_by_ticker&quot;&gt;&lt;/a&gt;Get details of a symbol by the ticker#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_symbols_by_ticker_response = snaptrade.reference_data.get_symbols_by_ticker(    ticker=&quot;ticker_example&quot;,    symbol_id=&quot;046b6c7f-0b8a-43b9-b35d-6489e6daee91&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### ticker: `str`&lt;a id=&quot;ticker-str&quot;&gt;&lt;/a&gt;The ticker of the UniversalSymbol to get.##### symbol_id: `str`&lt;a id=&quot;symbol_id-str&quot;&gt;&lt;/a&gt;OPTIONAL IN PATH Can be used instead of the ticker ; The ID of the UniversalSymbol to get.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UniversalSymbol`](./snaptrade_client/type/universal_symbol.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/symbols/{ticker}` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.list_all_brokerage_authorization_type`&lt;a id=&quot;snaptradereference_datalist_all_brokerage_authorization_type&quot;&gt;&lt;/a&gt;List of all brokerage authorization types#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_all_brokerage_authorization_type_response = (    snaptrade.reference_data.list_all_brokerage_authorization_type(        brokerage=&quot;QUESTRADE,ALPACA&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### brokerage: `str`&lt;a id=&quot;brokerage-str&quot;&gt;&lt;/a&gt;Comma separated value of brokerage slugs#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`BrokerageAuthorizationTypeReadOnly`](./snaptrade_client/type/brokerage_authorization_type_read_only.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/brokerageAuthorizationTypes` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.list_all_brokerages`&lt;a id=&quot;snaptradereference_datalist_all_brokerages&quot;&gt;&lt;/a&gt;List brokerages#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_all_brokerages_response = snaptrade.reference_data.list_all_brokerages()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Brokerage`](./snaptrade_client/type/brokerage.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/brokerages` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.list_all_currencies`&lt;a id=&quot;snaptradereference_datalist_all_currencies&quot;&gt;&lt;/a&gt;List currencies#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_all_currencies_response = snaptrade.reference_data.list_all_currencies()```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`Currency`](./snaptrade_client/type/currency.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/currencies` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.list_all_currencies_rates`&lt;a id=&quot;snaptradereference_datalist_all_currencies_rates&quot;&gt;&lt;/a&gt;List currency exchange rates#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonlist_all_currencies_rates_response = (    snaptrade.reference_data.list_all_currencies_rates())```#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`ExchangeRatePairs`](./snaptrade_client/type/exchange_rate_pairs.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/currencies/rates` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.reference_data.symbol_search_user_account`&lt;a id=&quot;snaptradereference_datasymbol_search_user_account&quot;&gt;&lt;/a&gt;Search for symbols available in an account#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonsymbol_search_user_account_response = (    snaptrade.reference_data.symbol_search_user_account(        user_id=&quot;John.doe@snaptrade.com&quot;,        user_secret=&quot;USERSECRET123&quot;,        account_id=&quot;accountId_example&quot;,        substring=&quot;apple&quot;,    ))```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to search for symbols within.##### substring: `str`&lt;a id=&quot;substring-str&quot;&gt;&lt;/a&gt;#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`SymbolQuery`](./snaptrade_client/type/symbol_query.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UniversalSymbol`](./snaptrade_client/type/universal_symbol.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/symbols` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.trading.cancel_user_account_order`&lt;a id=&quot;snaptradetradingcancel_user_account_order&quot;&gt;&lt;/a&gt;Cancel open order in account#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythoncancel_user_account_order_response = snaptrade.trading.cancel_user_account_order(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;accountId_example&quot;,    brokerage_order_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to cancel the order in.##### brokerage_order_id: `str`&lt;a id=&quot;brokerage_order_id-str&quot;&gt;&lt;/a&gt;#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`Any`](./snaptrade_client/type/typing_any.py)The Order ID to be canceled#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountOrderRecord`](./snaptrade_client/type/account_order_record.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/orders/cancel` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.trading.get_order_impact`&lt;a id=&quot;snaptradetradingget_order_impact&quot;&gt;&lt;/a&gt;Check impact of trades on account.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_order_impact_response = snaptrade.trading.get_order_impact(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,    action=&quot;BUY&quot;,    order_type=&quot;Limit&quot;,    price=31.33,    stop=31.33,    time_in_force=&quot;Day&quot;,    units=3.14,    universal_symbol_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;##### action: [`Action`](./snaptrade_client/type/action.py)&lt;a id=&quot;action-actionsnaptrade_clienttypeactionpy&quot;&gt;&lt;/a&gt;##### order_type: [`OrderType`](./snaptrade_client/type/order_type.py)&lt;a id=&quot;order_type-ordertypesnaptrade_clienttypeorder_typepy&quot;&gt;&lt;/a&gt;##### price: [`Price`](./snaptrade_client/type/price.py)&lt;a id=&quot;price-pricesnaptrade_clienttypepricepy&quot;&gt;&lt;/a&gt;##### stop: [`StopPrice`](./snaptrade_client/type/stop_price.py)&lt;a id=&quot;stop-stoppricesnaptrade_clienttypestop_pricepy&quot;&gt;&lt;/a&gt;##### time_in_force: [`TimeInForce`](./snaptrade_client/type/time_in_force.py)&lt;a id=&quot;time_in_force-timeinforcesnaptrade_clienttypetime_in_forcepy&quot;&gt;&lt;/a&gt;##### units: `Union[int, float]`&lt;a id=&quot;units-unionint-float&quot;&gt;&lt;/a&gt;Trade Units##### universal_symbol_id: `str`&lt;a id=&quot;universal_symbol_id-str&quot;&gt;&lt;/a&gt;#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`ManualTradeForm`](./snaptrade_client/type/manual_trade_form.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`ManualTradeAndImpact`](./snaptrade_client/type/manual_trade_and_impact.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/trade/impact` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.trading.get_user_account_quotes`&lt;a id=&quot;snaptradetradingget_user_account_quotes&quot;&gt;&lt;/a&gt;Get symbol quotes#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_user_account_quotes_response = snaptrade.trading.get_user_account_quotes(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    symbols=&quot;symbols_example&quot;,    account_id=&quot;accountId_example&quot;,    use_ticker=True,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### symbols: `str`&lt;a id=&quot;symbols-str&quot;&gt;&lt;/a&gt;List of universal_symbol_id or tickers to get quotes for.##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;The ID of the account to get quotes.##### use_ticker: `bool`&lt;a id=&quot;use_ticker-bool&quot;&gt;&lt;/a&gt;Should be set to True if providing tickers.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`SymbolsQuotes`](./snaptrade_client/type/symbols_quotes.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/accounts/{accountId}/quotes` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.trading.place_force_order`&lt;a id=&quot;snaptradetradingplace_force_order&quot;&gt;&lt;/a&gt;Place a trade with NO validation.#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonplace_force_order_response = snaptrade.trading.place_force_order(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    account_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,    action=&quot;BUY&quot;,    order_type=&quot;Limit&quot;,    price=31.33,    stop=31.33,    time_in_force=&quot;Day&quot;,    units=3.14,    universal_symbol_id=&quot;2bcd7cc3-e922-4976-bce1-9858296801c3&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### account_id: `str`&lt;a id=&quot;account_id-str&quot;&gt;&lt;/a&gt;##### action: [`Action`](./snaptrade_client/type/action.py)&lt;a id=&quot;action-actionsnaptrade_clienttypeactionpy&quot;&gt;&lt;/a&gt;##### order_type: [`OrderType`](./snaptrade_client/type/order_type.py)&lt;a id=&quot;order_type-ordertypesnaptrade_clienttypeorder_typepy&quot;&gt;&lt;/a&gt;##### price: [`Price`](./snaptrade_client/type/price.py)&lt;a id=&quot;price-pricesnaptrade_clienttypepricepy&quot;&gt;&lt;/a&gt;##### stop: [`StopPrice`](./snaptrade_client/type/stop_price.py)&lt;a id=&quot;stop-stoppricesnaptrade_clienttypestop_pricepy&quot;&gt;&lt;/a&gt;##### time_in_force: [`TimeInForce`](./snaptrade_client/type/time_in_force.py)&lt;a id=&quot;time_in_force-timeinforcesnaptrade_clienttypetime_in_forcepy&quot;&gt;&lt;/a&gt;##### units: `Union[int, float]`&lt;a id=&quot;units-unionint-float&quot;&gt;&lt;/a&gt;Trade Units##### universal_symbol_id: `str`&lt;a id=&quot;universal_symbol_id-str&quot;&gt;&lt;/a&gt;#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`ManualTradeForm`](./snaptrade_client/type/manual_trade_form.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountOrderRecord`](./snaptrade_client/type/account_order_record.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/trade/place` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.trading.place_oco_order`&lt;a id=&quot;snaptradetradingplace_oco_order&quot;&gt;&lt;/a&gt;Place a OCO (One Cancels Other) order#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonplace_oco_order_response = snaptrade.trading.place_oco_order(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    first_trade_id=None,    second_trade_id=None,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### first_trade_id: [`Union[bool, date, datetime, dict, float, int, list, str, None]`](./snaptrade_client/type/typing_union_bool_date_datetime_dict_float_int_list_str_none.py)&lt;a id=&quot;first_trade_id-unionbool-date-datetime-dict-float-int-list-str-nonesnaptrade_clienttypetyping_union_bool_date_datetime_dict_float_int_list_str_nonepy&quot;&gt;&lt;/a&gt;The ID of first trade object obtained from trade/impact endpoint##### second_trade_id: [`Union[bool, date, datetime, dict, float, int, list, str, None]`](./snaptrade_client/type/typing_union_bool_date_datetime_dict_float_int_list_str_none.py)&lt;a id=&quot;second_trade_id-unionbool-date-datetime-dict-float-int-list-str-nonesnaptrade_clienttypetyping_union_bool_date_datetime_dict_float_int_list_str_nonepy&quot;&gt;&lt;/a&gt;The ID of second trade object obtained from trade/impact endpoint#### ‚öôÔ∏è Request Body&lt;a id=&quot;‚öôÔ∏è-request-body&quot;&gt;&lt;/a&gt;[`Any`](./snaptrade_client/type/typing_any.py)#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountOrderRecord`](./snaptrade_client/type/account_order_record.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/trade/oco` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.trading.place_order`&lt;a id=&quot;snaptradetradingplace_order&quot;&gt;&lt;/a&gt;Place order#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonplace_order_response = snaptrade.trading.place_order(    trade_id=&quot;tradeId_example&quot;,    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### trade_id: `str`&lt;a id=&quot;trade_id-str&quot;&gt;&lt;/a&gt;The ID of trade object obtained from trade/impact endpoint##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`AccountOrderRecord`](./snaptrade_client/type/account_order_record.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/trade/{tradeId}` `post`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.transactions_and_reporting.get_activities`&lt;a id=&quot;snaptradetransactions_and_reportingget_activities&quot;&gt;&lt;/a&gt;Returns activities (transactions) for a user. Specifing start and end date is highly recommended for better performance#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_activities_response = snaptrade.transactions_and_reporting.get_activities(    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    start_date=&quot;2022-01-24&quot;,    end_date=&quot;2022-01-24&quot;,    accounts=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2&quot;,    brokerage_authorizations=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2&quot;,    type=&quot;DIVIDEND&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### start_date: `date`&lt;a id=&quot;start_date-date&quot;&gt;&lt;/a&gt;##### end_date: `date`&lt;a id=&quot;end_date-date&quot;&gt;&lt;/a&gt;##### accounts: `str`&lt;a id=&quot;accounts-str&quot;&gt;&lt;/a&gt;Optional comma seperated list of account IDs used to filter the request on specific accounts##### brokerage_authorizations: `str`&lt;a id=&quot;brokerage_authorizations-str&quot;&gt;&lt;/a&gt;Optional comma seperated list of brokerage authorization IDs used to filter the request on only accounts that belong to those authorizations##### type: `str`&lt;a id=&quot;type-str&quot;&gt;&lt;/a&gt;Optional comma seperated list of types to filter activities by. This is not an exhaustive list, if we fail to match to these types, we will return the raw description from the brokerage. Potential values include - DIVIDEND - BUY - SELL - CONTRIBUTION - WITHDRAWAL - EXTERNAL_ASSET_TRANSFER_IN - EXTERNAL_ASSET_TRANSFER_OUT - INTERNAL_CASH_TRANSFER_IN - INTERNAL_CASH_TRANSFER_OUT - INTERNAL_ASSET_TRANSFER_IN - INTERNAL_ASSET_TRANSFER_OUT - INTEREST - REBATE - GOV_GRANT - TAX - FEE - REI - FXT#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`UniversalActivity`](./snaptrade_client/type/universal_activity.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/activities` `get`[üîô **Back to Table of Contents**](#table-of-contents)---### `snaptrade.transactions_and_reporting.get_reporting_custom_range`&lt;a id=&quot;snaptradetransactions_and_reportingget_reporting_custom_range&quot;&gt;&lt;/a&gt;Returns performance information (contributions, dividends, rate of return, etc) for a specific timeframe. Total Equity Timeframe and Rate of Returns are experimental and should not be trusted to be 100% accurate#### üõ†Ô∏è Usage&lt;a id=&quot;üõ†Ô∏è-usage&quot;&gt;&lt;/a&gt;```pythonget_reporting_custom_range_response = snaptrade.transactions_and_reporting.get_reporting_custom_range(    start_date=&quot;2022-01-24&quot;,    end_date=&quot;2022-01-24&quot;,    user_id=&quot;John.doe@snaptrade.com&quot;,    user_secret=&quot;USERSECRET123&quot;,    accounts=&quot;917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2&quot;,    detailed=True,    frequency=&quot;monthly&quot;,)```#### ‚öôÔ∏è Parameters&lt;a id=&quot;‚öôÔ∏è-parameters&quot;&gt;&lt;/a&gt;##### start_date: `date`&lt;a id=&quot;start_date-date&quot;&gt;&lt;/a&gt;##### end_date: `date`&lt;a id=&quot;end_date-date&quot;&gt;&lt;/a&gt;##### user_id: `str`&lt;a id=&quot;user_id-str&quot;&gt;&lt;/a&gt;##### user_secret: `str`&lt;a id=&quot;user_secret-str&quot;&gt;&lt;/a&gt;##### accounts: `str`&lt;a id=&quot;accounts-str&quot;&gt;&lt;/a&gt;Optional comma seperated list of account IDs used to filter the request on specific accounts##### detailed: `bool`&lt;a id=&quot;detailed-bool&quot;&gt;&lt;/a&gt;Optional, increases frequency of data points for the total value and contribution charts if set to true##### frequency: `str`&lt;a id=&quot;frequency-str&quot;&gt;&lt;/a&gt;Optional frequency for the rate of return chart (defaults to monthly). Possible values are daily, weekly, monthly, quarterly, yearly.#### üîÑ Return&lt;a id=&quot;üîÑ-return&quot;&gt;&lt;/a&gt;[`PerformanceCustom`](./snaptrade_client/type/performance_custom.py)#### üåê Endpoint&lt;a id=&quot;üåê-endpoint&quot;&gt;&lt;/a&gt;`/performance/custom` `get`[üîô **Back to Table of Contents**](#table-of-contents)---## Author&lt;a id=&quot;author&quot;&gt;&lt;/a&gt;This Python package is automatically generated by [Konfig](https://konfigthis.com)</longdescription>
</pkgmetadata>