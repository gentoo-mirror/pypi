<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># fastapi_localization**fastapi_localization** - provides a simple language localization from Accept-Language header in your application.Installation```shell script$ pip install fastapi-localization```Example with small fastapi application```pythonfrom typing import Listfrom pydantic import BaseModelfrom fastapi_localization import TranslateJsonResponsefrom fastapi_localization import TranslatableStringFieldclass LanguageTranslatableSchema(BaseModel):    code: str    title: TranslatableStringField@app.get(    '/language',    response_class=TranslateJsonResponse,    response_model=List[LanguageTranslatableSchema])async def languages():    return [{'code': 'ru', 'title': 'Russia'},            {'code': 'en', 'title': 'English'}]``````shell script# Russia$ curl --location --request GET 'http://127.0.0.1:8000/language' \--header 'Accept-Language: ru'[{&quot;code&quot;:&quot;ru&quot;,&quot;title&quot;:&quot;Русский&quot;},{&quot;code&quot;:&quot;en&quot;,&quot;title&quot;:&quot;Английский&quot;}]# English$ curl --location --request GET 'http://127.0.0.1:8000/language' \--header 'Accept-Language: en'[{&quot;code&quot;:&quot;ru&quot;,&quot;title&quot;:&quot;Russia&quot;},{&quot;code&quot;:&quot;en&quot;,&quot;title&quot;:&quot;English&quot;}]```manual partial translation```pythonfrom fastapi_localization import TranslateJsonResponsefrom fastapi_localization import lazy_gettext as _@app.get(    '/country',    response_class=TranslateJsonResponse)async def countries():    return [{'code': 'ru', 'title': _('Russia')},            {'code': 'us', 'title': 'USA'}]``````shell script# Russian$ curl --location --request GET 'http://127.0.0.1:8000/country' \--header 'Accept-Language: ru'[{&quot;code&quot;:&quot;ru&quot;,&quot;title&quot;:&quot;Русский&quot;},{&quot;code&quot;:&quot;us&quot;,&quot;title&quot;:&quot;USA&quot;}]# English$ curl --location --request GET 'http://127.0.0.1:8000/country' \--header 'Accept-Language: en'[{&quot;code&quot;:&quot;ru&quot;,&quot;title&quot;:&quot;Russia&quot;},{&quot;code&quot;:&quot;us&quot;,&quot;title&quot;:&quot;USA&quot;}]```error validation ```pythonfrom pydantic import BaseModel, EmailStrfrom fastapi_localization import TranslateJsonResponseclass InputSchema(BaseModel):    email = EmailStr()@app.post(    '/input',    response_class=TranslateJsonResponse)async def countries(value: InputSchema):    return value``````shell script# Russia$ curl --location --request POST 'http://127.0.0.1:8000/input' \--header 'Accept-Language: ru' \--header 'Content-Type: application/json' \--data-raw '{&quot;email&quot;: &quot;invalid_email&quot;}'{    &quot;detail&quot;: [        {            &quot;loc&quot;: [                &quot;body&quot;,                &quot;email&quot;            ],            &quot;msg&quot;: &quot;значение не является действительным адресом электронной почты&quot;,            &quot;type&quot;: &quot;value_error.email&quot;        }    ]}# English$ curl --location --request POST 'http://127.0.0.1:8000/input' \--header 'Accept-Language: en' \--header 'Content-Type: application/json' \--data-raw '{&quot;email&quot;: &quot;invalid_email&quot;}'{    &quot;detail&quot;: [        {            &quot;loc&quot;: [                &quot;body&quot;,                &quot;email&quot;            ],            &quot;msg&quot;: &quot;value is not a valid email address&quot;,            &quot;type&quot;: &quot;value_error.email&quot;        }    ]}```[Application](https://github.com/ikasymov/fastapi-localization-example) source code</longdescription>
</pkgmetadata>