<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/strawberry-graphql/strawberry/raw/main/.github/logo.png&quot; width=&quot;124&quot; height=&quot;150&quot;&gt;# Strawberry GraphQL&gt; Python GraphQL library based on dataclasses[![CircleCI](https://img.shields.io/circleci/token/307b40d5e152e074d34f84d30d226376a15667d5/project/github/strawberry-graphql/strawberry/main.svg?style=for-the-badge)](https://circleci.com/gh/strawberry-graphql/strawberry/tree/main)[![Discord](https://img.shields.io/discord/689806334337482765?label=discord&amp;logo=discord&amp;logoColor=white&amp;style=for-the-badge&amp;color=blue)](https://discord.gg/ZkRTEJQ)[![PyPI](https://img.shields.io/pypi/v/strawberry-graphql?logo=pypi&amp;logoColor=white&amp;style=for-the-badge)](https://pypi.org/project/strawberry-graphql/)## Installation ( Quick Start )The quick start method provides a server and CLI to get going quickly. Installwith:```shellpip install &quot;strawberry-graphql[debug-server]&quot;```## Getting StartedCreate a file called `app.py` with the following code:```pythonimport strawberry@strawberry.typeclass User:    name: str    age: int@strawberry.typeclass Query:    @strawberry.field    def user(self) -&gt; User:        return User(name=&quot;Patrick&quot;, age=100)schema = strawberry.Schema(query=Query)```This will create a GraphQL schema defining a `User` type and a single queryfield `user` that will return a hardcoded user.To run the debug server run the following command:```shellstrawberry server app```Open the debug server by clicking on the following link:[http://0.0.0.0:8000/graphql](http://0.0.0.0:8000/graphql)This will open GraphiQL where you can test the API.### Type-checkingStrawberry comes with a [mypy] plugin that enables statically type-checking yourGraphQL schema. To enable it, add the following lines to your `mypy.ini`configuration:```ini[mypy]plugins = strawberry.ext.mypy_plugin```[mypy]: http://www.mypy-lang.org/### Django IntegrationA Django view is provided for adding a GraphQL endpoint to your application.1. Add the app to your `INSTALLED_APPS`.```pythonINSTALLED_APPS = [    ...,  # your other apps    &quot;strawberry.django&quot;,]```2. Add the view to your `urls.py` file.```pythonfrom strawberry.django.views import GraphQLViewfrom .schema import schemaurlpatterns = [    ...,    path(&quot;graphql&quot;, GraphQLView.as_view(schema=schema)),]```## WebSocketsTo support graphql Subscriptions over WebSockets you need to provide a WebSocketenabled server. The debug server can be made to support WebSockets with thesecommands:```shellpip install 'strawberry-graphql[debug-server]'pip install 'uvicorn[standard]'```## Examples* [Various examples on how to use Strawberry](https://github.com/strawberry-graphql/examples)* [Full stack example using Starlette, SQLAlchemy, Typescript codegen and Next.js](https://github.com/jokull/python-ts-graphql-demo)* [Quart + Strawberry tutorial](https://github.com/rockyburt/Ketchup)## ContributingWe use [poetry](https://github.com/sdispater/poetry) to manage dependencies, toget started follow these steps:```shellgit clone https://github.com/strawberry-graphql/strawberrycd strawberrypoetry install --with integrationspoetry run pytest```This will install all the dependencies (including dev ones) and run the tests.### Pre commitWe have a configuration for[pre-commit](https://github.com/pre-commit/pre-commit), to add the hook run thefollowing command:```shellpre-commit install```## Links- Project homepage: https://strawberry.rocks- Repository: https://github.com/strawberry-graphql/strawberry- Issue tracker: https://github.com/strawberry-graphql/strawberry/issues  - In case of sensitive bugs like security vulnerabilities, please contact    patrick.arminio@gmail.com directly instead of using the issue tracker. We    value your effort to improve the security and privacy of this project!## LicensingThe code in this project is licensed under MIT license. See [LICENSE](./LICENSE)for more information.![Recent Activity](https://images.repography.com/0/strawberry-graphql/strawberry/recent-activity/d751713988987e9331980363e24189ce.svg)</longdescription>
</pkgmetadata>