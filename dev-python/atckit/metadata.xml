<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ATCKitAccidentallyTheCable's Utility Kit- [ATCKit](#atckit)  - [About](#about)    - [How does it work?](#how-does-it-work)  - [Usage](#usage)    - [FunctionSubscriber](#functionsubscriber)  - [UtilFuncs](#utilfuncs)## AboutThis is a small kit of classes, util functions, etc that I found myself rewriting or reusing frequently, and instead of copying everywhere, they are now here.### How does it work?Do the needfuls.... *do the needful dance*Literally, import whatever you need to use..## Usage### FunctionSubscriberA Class container for Function callback subscription via `+=` or `-=`. Functions can be retrieved in order of addition.```subscriber = FunctionSubscriber()def a():    print(&quot;I am a teapot&quot;)def b():    print(&quot;I am definitely totally not also a teapot, I swear&quot;)subscriber += asubscriber += bfor cb in subscriber.functions:    cb()&gt;&gt; I am a teapot&gt;&gt; I am definitely totally not also a teapot, I swear```This class uses the `typing.Callable` type for function storage. You can extend the `FunctionSubscriber` class to define thecallback function parameters, etc.```class MySubscriber(FunctionSubscriber):    &quot;&quot;&quot;My Function Subscriber    Callback: (bool) -&gt; None    &quot;&quot;&quot;    _functions:list[Callable[[bool],None]]    def __iadd__(self,fn:Callable[[bool],None]) -&gt; Self:        &quot;&quot;&quot;Inline Add. Subscribe Function        @param method \c fn Method to Subscribe        &quot;&quot;&quot;        return super().__iadd__(fn)    def __isub__(self,fn:Callable[[bool],None]) -&gt; Self:        &quot;&quot;&quot;Inline Subtract. Unsubscribe Function        @param method \c fn Method to Unsubscribe        &quot;&quot;&quot;        return super().__isub__(fn)```## UtilFuncsA Class containing various static methods: - scan_dir: Search a specified Path, and execute a callback function on discovered files.   - Allows exclusion of Files/Dirs via regex pattern matching - deep_sort: Sort a Dictionary recursively, including through lists of dicts - check_pid: Check if a process ID exists (via kill 0) - register_signals: Register Shutdown / Restart Handlers   - Check for Shutdown via UtilFuncs.shutdown (bool)   - Check for Restart via UtilFuncs.restart (bool)</longdescription>
</pkgmetadata>