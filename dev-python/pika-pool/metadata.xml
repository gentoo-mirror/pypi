<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=========pika-pool=========.. image:: https://travis-ci.org/bninja/pika-pool.png   :target: https://travis-ci.org/bninja/pika-pool   .. image:: https://coveralls.io/repos/bninja/pika-pool/badge.png?branch=master   :target: https://coveralls.io/r/bninja/pika-pool?branch=masterPika connection pooling inspired by:- `flask-pika &lt;https://github.com/WeatherDecisionTechnologies/flask-pika&gt;`_- `sqlalchemy.pool.Pool &lt;http://docs.sqlalchemy.org/en/latest/core/pooling.html#sqlalchemy.pool.Pool&gt;`_Typically you'll go with local `shovels &lt;https://www.rabbitmq.com/shovel.html&gt;`_, `krazee-eyez kombu &lt;http://bit.ly/1txcnnO&gt;`_, etc. but this works too.usage-----Get it:.. code:: bash   pip install pika-pooland use it:.. code:: python   import json   import pika   import pika_pool   params = pika.URLParameters(      'amqp://guest:guest@localhost:5672/?'      'socket_timeout=10&amp;'      'connection_attempts=2'    )    pool = pika_pool.QueuedPool(        create=lambda: pika.BlockingConnection(parameters=params),        max_size=10,        max_overflow=10,        timeout=10,        recycle=3600,        stale=45,    )    with pool.acquire() as cxn:        cxn.channel.basic_publish(            body=json.dumps({                'type': 'banana',                'description': 'they are yellow'            }),            exchange='',            routing_key='fruits',            properties=pika.BasicProperties(                content_type='application/json',                content_encoding='utf-8',                delivery_mode=2,            )        )release-------Tests pass:.. code:: bash   py.test test.py --cov=pika_pool --cov-report term-missingso update ``__version__`` in:- ``__init__.py``then commit and tag it:.. code:: bash   git commit -am &quot;release v{version}&quot;   git tag -a v{version} -m &quot;release v{version}&quot;   git push --tagsand `travis &lt;https://travis-ci.org/bninja/pika-pool&gt;`_ will publish it to `pypi &lt;https://pypi.python.org/pypi/pika-pool/&gt;`_.</longdescription>
</pkgmetadata>