<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mapyde v0.5.0MaPyDe stands for MadGraph-Pythia-Delphes which is a utility that allows one torun all of the various HEP toolings or chain them together and perform a quickanalysis with the results, such as running CERN ATLAS SimpleAnalysis or pyhf.---&lt;!-- sync the following div with docs/index.md --&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/scipp-atlas/mapyde/main/docs/assets/images/logo.svg&quot; alt=&quot;Mapyde logo&quot; width=&quot;500&quot; role=&quot;img&quot;&gt;&lt;!-- --8&lt;-- [start:badges] --&gt;&lt;!-- prettier-ignore-start --&gt;| | || --- | --- || CI/CD | [![CI - Test][actions-badge-ci]][actions-link-ci] [![CI - Docker][actions-badge-docker]][actions-link-docker] [![Docs][actions-badge-docs]][actions-link-docs] || Docs |  [![doc][doc-badge]][doc-link] [![Zenodo][zenodo-badge]][zenodo-link] || Package | [![PyPI - Downloads][pypi-downloads]][pypi-link] [![PyPI - Version][pypi-version]][pypi-link] [![PyPI platforms][pypi-platforms]][pypi-link] [![Conda-Forge][conda-badge]][conda-link] || Meta | [![GitHub - Discussion][github-discussions-badge]][github-discussions-link] [![GitHub - Issue][github-issues-badge]][github-issues-link] [![License - Apache 2.0][license-badge]][license-link] |[actions-badge-ci]:         https://github.com/scipp-atlas/mapyde/actions/workflows/ci.yml/badge.svg?branch=main[actions-link-ci]:          https://github.com/scipp-atlas/mapyde/actions/workflows/ci.yml?query=branch:main[actions-badge-docker]:     https://github.com/scipp-atlas/mapyde/actions/workflows/docker.yml/badge.svg?branch=main[actions-link-docker]:      https://github.com/scipp-atlas/mapyde/actions/workflows/docker.yml?query=branch:main[actions-badge-docs]:       https://github.com/scipp-atlas/mapyde/actions/workflows/docs.yml/badge.svg?branch=main[actions-link-docs]:        https://github.com/scipp-atlas/mapyde/actions/workflows/docs.yml?query=branch:main[conda-badge]:              https://img.shields.io/conda/vn/conda-forge/mapyde[conda-link]:               https://github.com/conda-forge/mapyde-feedstock[doc-badge]:                https://img.shields.io/badge/docs-online-success[doc-link]:                 https://scipp-atlas.github.io/mapyde/latest/[github-discussions-badge]: https://img.shields.io/static/v1?label=Discussions&amp;message=Ask&amp;color=blue&amp;logo=github[github-discussions-link]:  https://github.com/scipp-atlas/mapyde/discussions[github-issues-badge]:      https://img.shields.io/static/v1?label=Issues&amp;message=File&amp;color=blue&amp;logo=github[github-issues-link]:       https://github.com/scipp-atlas/mapyde/issues[pypi-link]:                https://pypi.org/project/mapyde/[pypi-downloads]:           https://img.shields.io/pypi/dm/mapyde.svg?color=blue&amp;label=Downloads&amp;logo=pypi&amp;logoColor=gold[pypi-platforms]:           https://img.shields.io/pypi/pyversions/mapyde[pypi-version]:             https://badge.fury.io/py/mapyde.svg[license-badge]:            https://img.shields.io/badge/License-Apache_2.0-blue.svg[license-link]:             https://spdx.org/licenses/Apache-2.0.html[zenodo-badge]:             https://zenodo.org/badge/424389185.svg[zenodo-link]:              https://zenodo.org/badge/latestdoi/424389185&lt;!-- prettier-ignore-end --&gt;&lt;!-- --8&lt;-- [end:badges] --&gt;&lt;/div&gt;## Docker ImagesDocker images are made available in our[container registry](../../../container_registry).```docker pull ghcr.io/scipp-atlas/mapyde/madgraphdocker pull ghcr.io/scipp-atlas/mapyde/delphesdocker pull ghcr.io/scipp-atlas/mapyde/pyplotting```If you want to run on a machine with an NVidia GPU and use it for limit settingwith `pyhf`, then there's a container for that too:```docker pull ghcr.io/scipp-atlas/mario-mapyde/pyplotting-cuda```## RunningEveryone is centralized around the concept of providing a user configurationfile that references a template. By default,[defaults.toml](./templates/defaults.toml) is used (if not specified). Theseconfiguration files significantly control how to run or execute the varioussteps in the chain of `mapyde`. Use the command line interface to get started:```# display the helpmapyde --help# open Textual TUImapyde --tui# display the prefix path for data cards shipped with mapydemapyde --prefix cards# parse and display the configmapyde config parse user.toml# run all stepsmaypde run all user.toml# run only madgraphmapyde run madgraph user.toml# display the help for runningmapyde run --help```## Configuration DetailsThere are a lot of different configuration options one can specify. For rightnow, the user is asked to look at [defaults.toml](./templates/defaults.toml),run `mapyde config parse user.toml`, open a[discussion][github-discussions-link], or look at the source code.### MadGraphProduces a `hepmc` file. You can:- specify process, param, and run cards  - define particle masses in config file  - define additional kinematic cuts to apply at parton level- specify pythia card- define center of mass energy### DelphesRun a parameterized detector simulation, outputting a `ROOT` file. You can:- specify Delphes card### AnalysisAnalyze the Delphes output, which could be user-provided analysis code. Thereare some scripts already provided for you:- [scripts/Delphes2SA.py](./scripts/Delphes2SA.py) will make an ntuple that can  be parsed by `SimpleAnalysis` for limit setting.- [scripts/SimpleAna.py](./scripts/SimpleAna.py) will make a generic &quot;flat&quot;  ntuple in a ROOT file.- [scripts/muscan.py](./scripts/muscan.py) will use pyhf to perform a mu-scan  and compute upper-limits for a public likelihood injected with results from  `SimpleAnalysis`.</longdescription>
</pkgmetadata>