<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AWS CloudFormation Resource Provider Python PluginThe CloudFormation CLI (cfn) allows you to author your own resource providers that can be used by CloudFormation.This plugin library helps to provide Python runtime bindings for the execution of your providers by CloudFormation.## AWS CloudFormation Resource Provider Python PluginThe CloudFormation Resource Provider Development Kit (RPDK) allows you to author your own resource providers that can be used by CloudFormation.This plugin library helps to provide runtime bindings for the execution of your providers by CloudFormation.[![Build Status](https://travis-ci.com/aws-cloudformation/cloudformation-cli-python-plugin.svg?branch=master)](https://travis-ci.com/aws-cloudformation/cloudformation-cli-python-plugin)## CommunityJoin us on Discord! Connect &amp; interact with CloudFormation developers &amp;experts, find channels to discuss and get help for our CLIs, cfn-lint, CloudFormation registry, StackSets,Guard and more:[![Join our Discord](https://discordapp.com/api/guilds/981586120448020580/widget.png?style=banner3)](https://discord.gg/9zpd7TTRwq)Installation------------```bashpip install cloudformation-cli-python-plugin```Howto-----```$ cfn initInitializing new projectWhat's the name of your resource type?(Organization::Service::Resource)&gt;&gt; Foo::Bar::BazSelect a language for code generation:[1] java[2] csharp[3] python36[4] python37(enter an integer):&gt;&gt; 4Use docker for platform-independent packaging (Y/n)?This is highly recommended unless you are experiencedwith cross-platform Python packaging.&gt;&gt; yInitialized a new project in &lt;&gt;$ cfn submit --dry-run$ cat &lt;&lt;EOT &gt; test.json{  &quot;credentials&quot;: {    &quot;accessKeyId&quot;: &quot;&quot;,    &quot;secretAccessKey&quot;: &quot;&quot;,    &quot;sessionToken&quot;: &quot;&quot;  },  &quot;action&quot;: &quot;CREATE&quot;,  &quot;request&quot;: {    &quot;clientRequestToken&quot;: &quot;ecba020e-b2e6-4742-a7d0-8a06ae7c4b2b&quot;,    &quot;desiredResourceState&quot;: {      &quot;Title&quot;: &quot;This_Is_The_Title_For_My_Example&quot;,      &quot;TestCode&quot;: &quot;NOT_STARTED&quot;    },    &quot;previousResourceState&quot;: null,    &quot;logicalResourceIdentifier&quot;: null  },  &quot;callbackContext&quot;: null}EOT$ sam local invoke TestEntrypoint --event test.json```Development-----------For changes to the plugin, a Python virtual environment is recommended. The development requirements can be sourced from the core repository:```python3 -m venv envsource env/bin/activatepip install -e . -e src/ \  -r https://raw.githubusercontent.com/aws-cloudformation/aws-cloudformation-rpdk/master/requirements.txtpre-commit install```Linting and running unit tests is done via [pre-commit](https://pre-commit.com/), and so is performed automatically on commit. The continuous integration also runs these checks. Manual options are available so you don't have to commit):```# run all hooks on all files, mirrors what the CI runspre-commit run --all-files# run unit tests only. can also be used for other hooks, e.g. black, flake8, pylint-localpre-commit run pytest-local```License-------This library is licensed under the Apache 2.0 License.</longdescription>
</pkgmetadata>