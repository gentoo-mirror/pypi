<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>qosic-sdk=========An unofficial python sdk for the `QosIC &lt;https://www.qosic.com/&gt;`__platform. This platform provides an api to enable mobile money paymentsfor businesses in Africa... image:: https://img.shields.io/pypi/v/qosic-sdk.svg        :target: https://pypi.python.org/pypi/qosic-sdk.. image:: https://img.shields.io/pypi/pyversions/qosic-sdk        :target: https://github.com/Tobi-De/qosic-sdk.. image:: https://api.travis-ci.com/Tobi-De/qosic-sdk.svg        :target: https://travis-ci.com/Tobi-De/qosic-sdk.. image:: https://readthedocs.org/projects/qosic-sdk/badge/?version=latest        :target: https://qosic-sdk.readthedocs.io/en/latest/?version=latest        :alt: Documentation Status.. image:: https://img.shields.io/badge/license-MIT-blue.svg        :target: https://github.com/Tobi-De/qosic-sdk/blob/main/LICENSE.. image:: https://img.shields.io/badge/code%20style-black-000000.svg        :target: https://github.com/psf/black-----  Free software: MIT license-  Documentation: https://qosic-sdk.readthedocs.io.Features---------  Simple synchronous client to make your payment requests-  Cover 100% of Qosic public api-  Clean and meaningful exceptions-  100 % test coverage-  Configurable timeoutsQuickstart----------For those of you in a hurry, hereâ€™s a sample code to get you started... code:: shell       pip install qosic-sdk.. code:: python3       from dotenv import dotenv_values       from qosic import Client       from qosic.mobile_carriers import bj       config = dotenv_values(&quot;.env&quot;)       moov_client_id = config.get(&quot;MOOV_CLIENT_ID&quot;)       mtn_client_id = config.get(&quot;MTN_CLIENT_ID&quot;)       server_login = config.get(&quot;SERVER_LOGIN&quot;)       server_pass = config.get(&quot;SERVER_PASSWORD&quot;)       # This is just for test purpose, you should directly pass the phone number       phone = config.get(&quot;PHONE_NUMBER&quot;)       def main():           client = Client(               login=server_login,               password=server_pass,               providers=[bj.MTN(id=mtn_client_id), bj.MOOV(id=moov_client_id)],           )           result = client.pay(phone=phone, amount=500, first_name=&quot;User&quot;, last_name=&quot;TEST&quot;)           print(result)           if result.success:               print(f&quot;Everything went fine&quot;)           result = client.refund(reference=result.reference, phone=phone)           print(result)       if __name__ == &quot;__main__&quot;:           main()Credits-------This package was created with`Cookiecutter &lt;https://github.com/audreyr/cookiecutter&gt;`__ and the`audreyr/cookiecutter-pypackage &lt;https://github.com/audreyr/cookiecutter-pypackage&gt;`__project template.</longdescription>
</pkgmetadata>