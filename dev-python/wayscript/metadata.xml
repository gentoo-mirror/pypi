<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># wayscript-python## Context```from wayscript import contextevent = context.get_event()```### Checking user by application key```from wayscript import context, utilsapplication_key = utils.get_application_key()user = context.get_user_by_application_key(application_key)```## Triggers### HTTP Triggers```from wayscript.triggers import http_triggerpayload = {&quot;hello&quot;: &quot;world&quot;}headers = {&quot;content-type&quot;: &quot;application/json&quot;}status_code = 200http_trigger.send_response(data=payload, headers=headers, status_code=status_code)```## Integrations### SQLTo connect to a postgres resource, use the following snippet:```import psycopg2from wayscript.integrations import sqlkwargs = sql.get_psycopg2_connection_kwargs(_id)connection = psycopg2.connect(**kwargs)```## Secrets### Create/Update SecretTo create a new secret, or update an existing one:```from wayscript import secret_managermy_secret_value = &quot;an application key or other private information&quot;secret_manager.set_secret('my_secret_key', my_secret_value)    ```To test an existing secret, and update if the secret is no longer valid (expired authorization token):```import osfrom wayscript import secret_manager# Retrieve existing key from secretauth_key = os.getenv('AUTH_KEY_MAY_EXPIRE')# Test connection to service using auth_keyif not authorized:    # Get new auth_key from service    auth_key = 'New Key From Service Request'    secret_manager.set_secret('AUTH_KEY_MAY_EXPIRE', auth_key)# Continue flow as normal```</longdescription>
</pkgmetadata>