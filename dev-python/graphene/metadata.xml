<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|Graphene Logo| `Graphene &lt;http://graphene-python.org&gt;`__ |Build Status| |PyPI version| |Coverage Status|=========================================================================================================`���� Join the community onSlack &lt;https://join.slack.com/t/graphenetools/shared_invite/enQtOTE2MDQ1NTg4MDM1LTA4Nzk0MGU0NGEwNzUxZGNjNDQ4ZjAwNDJjMjY0OGE1ZDgxZTg4YjM2ZTc4MjE2ZTAzZjE2ZThhZTQzZTkyMmM&gt;`__**We are looking for contributors**! Please check the`ROADMAP &lt;https://github.com/graphql-python/graphene/blob/master/ROADMAP.md&gt;`__to see how you can help ������Introduction------------`Graphene &lt;http://graphene-python.org&gt;`__ is an opinionated Pythonlibrary for building GraphQL schemas/types fast and easily.-  **Easy to use:** Graphene helps you use GraphQL in Python without   effort.-  **Relay:** Graphene has builtin support for Relay.-  **Data agnostic:** Graphene supports any kind of data source: SQL   (Django, SQLAlchemy), NoSQL, custom Python objects, etc. We believe   that by providing a complete API you could plug Graphene anywhere   your data lives and make your data available through GraphQL.Integrations------------Graphene has multiple integrations with different frameworks:+-------------------+-------------------------------------------------+| integration       | Package                                         |+===================+=================================================+| Django            | `graphene-django &lt;https:/                       ||                   | /github.com/graphql-python/graphene-django/&gt;`__ |+-------------------+-------------------------------------------------+| SQLAlchemy        | `graphene-sqlalchemy &lt;https://git               ||                   | hub.com/graphql-python/graphene-sqlalchemy/&gt;`__ |+-------------------+-------------------------------------------------+Also, Graphene is fully compatible with the GraphQL spec, workingseamlessly with all GraphQL clients, such as`Relay &lt;https://github.com/facebook/relay&gt;`__,`Apollo &lt;https://github.com/apollographql/apollo-client&gt;`__ and`gql &lt;https://github.com/graphql-python/gql&gt;`__.Installation------------To install `graphene`, just run this command in your shell.. code:: bash   pip install &quot;graphene&gt;=3.0&quot;Examples--------Here is one example for you to get started:.. code:: python   import graphene   class Query(graphene.ObjectType):       hello = graphene.String(description='A typical hello world')       def resolve_hello(self, info):           return 'World'   schema = graphene.Schema(query=Query)Then Querying ``graphene.Schema`` is as simple as:.. code:: python   query = '''       query SayHello {         hello       }   '''   result = schema.execute(query)If you want to learn even more, you can also check the following`examples &lt;examples/&gt;`__:-  **Basic Schema**: `Starwars example &lt;examples/starwars&gt;`__-  **Relay Schema**: `Starwars Relay   example &lt;examples/starwars_relay&gt;`__Documentation-------------Documentation and links to additional resources are available athttps://docs.graphene-python.org/en/latest/Contributing------------After cloning this repo, create a`virtualenv &lt;https://virtualenv.pypa.io/en/stable/&gt;`__ and ensuredependencies are installed by running:.. code:: sh   virtualenv venv   source venv/bin/activate   pip install -e &quot;.[test]&quot;Well-written tests and maintaining good test coverage is important tothis project. While developing, run new and existing tests with:.. code:: sh   py.test graphene/relay/tests/test_node.py # Single file   py.test graphene/relay # All tests in directoryAdd the ``-s`` flag if you have introduced breakpoints into the code fordebugging. Add the ``-v`` (���verbose���) flag to get more detailed testoutput. For even more detailed output, use ``-vv``. Check out the`pytest documentation &lt;https://docs.pytest.org/en/latest/&gt;`__ for moreoptions and test running controls.You can also run the benchmarks with:.. code:: sh   py.test graphene --benchmark-onlyGraphene supports several versions of Python. To make sure that changesdo not break compatibility with any of those versions, we use ``tox`` tocreate virtualenvs for each Python version and run tests with thatversion. To run against all Python versions defined in the ``tox.ini``config file, just run:.. code:: sh   toxIf you wish to run against a specific version defined in the ``tox.ini``file:.. code:: sh   tox -e py36Tox can only use whatever versions of Python are installed on yoursystem. When you create a pull request, Travis will also be running thesame tests and report the results, so there is no need for potentialcontributors to try to install every single version of Python on theirown system ahead of time. We appreciate opening issues and pull requeststo make graphene even more stable &amp; useful!Building Documentation~~~~~~~~~~~~~~~~~~~~~~The documentation is generated using the excellent`Sphinx &lt;http://www.sphinx-doc.org/&gt;`__ and a custom theme.An HTML version of the documentation is produced by running:.. code:: sh   make docs.. |Graphene Logo| image:: http://graphene-python.org/favicon.png.. |Build Status| image:: https://travis-ci.org/graphql-python/graphene.svg?branch=master   :target: https://travis-ci.org/graphql-python/graphene.. |PyPI version| image:: https://badge.fury.io/py/graphene.svg   :target: https://badge.fury.io/py/graphene.. |Coverage Status| image:: https://coveralls.io/repos/graphql-python/graphene/badge.svg?branch=master&amp;service=github   :target: https://coveralls.io/github/graphql-python/graphene?branch=master</longdescription>
</pkgmetadata>