<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Terraform Cloud ClientAn API client for HashiCorp's Terraform Cloud## Installation```$ pip install terraform-cloud-client```This client is only tested on python 3.7## Usage as a librarySet up:```python&gt;&gt;&gt; import tfc&gt;&gt;&gt; client = tfc.TerraformClient(&quot;my_api_token&quot;, &quot;my_organization&quot;, &quot;my_workspace&quot;)```Get Terraform variables:```python&gt;&gt;&gt; variables = client.get_variables()&gt;&gt;&gt; variables{    'my_username': &lt;TerraformVariable id='var-someid1', name='my_username', value='john_doe'&gt;,    'my_password': &lt;TerraformVariable id='var-someid2', name='my_password', sensitive&gt;,}&gt;&gt;&gt; username_variable = variables['my_username']&gt;&gt;&gt; username_variable.id'var-someid1'&gt;&gt;&gt; username_variable.name'my_username'&gt;&gt;&gt; username_variable.value'john_doe'```Change the value of a variable:```python&gt;&gt;&gt; client.update_variable(variable_id=username_variable.id, new_value='jane_doe')```Trigger a run:```python&gt;&gt;&gt; run = client.create_run('My message')&gt;&gt;&gt; run.id'run-someid'&gt;&gt;&gt; run.url # Go here in a web browser to view the run'https://app.terraform.io/app/my_organization/workspaces/my_workspace/runs/run-someid'```## Usage as a command line toolInstalling this via pip also installs a `tfc` command line tool```$ tfc --helpusage: tfc [-h] [--message MESSAGE]           organization workspace [name=value [name=value ...]]Trigger a Terraform Cloud runpositional arguments:  organization          The name of your organization in Terraform Cloud  workspace             The name of your workspace in Terraform Cloud  name=value            Set terraform variable NAME to VALUE before creating                        the runoptional arguments:  -h, --help            show this help message and exit  --message MESSAGE, -m MESSAGE                        The message to be associated with this runPut your API token in the TERRAFORM_CLOUD_TOKEN environment variable```So for example:```$ tfc my_organization my_workspace foo=baz --message=&quot;Reticulating splines&quot;Updated 'foo' from 'bar' to 'baz'Created run run-g6SmSsLVKg71yeNw - check status at: https://app.terraform.io/app/my_organization/workspaces/my_workspace/runs/run-g6SmSsLVKg71yeNw```The message argument can contain variables which are expanded at runtime. These follow the sameformatting rules as Python's `str.format(...)`. The variables which are currently defined are:- git_repository- git_branch- git_commit_subject- git_commit_authorSo for example:```$ tfc my_organization my_workspace foo=baz --message=&quot;{git_commit_subject} (author: {git_commit_author}, branch: {git_branch}, repo: {git_repository})&quot;```might create a run with the message:```My commit message (author: Joe Bloggs, branch: my-branch, repo: terraform-cloud-client)```</longdescription>
</pkgmetadata>