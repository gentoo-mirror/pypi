<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>stestr======.. image:: https://github.com/mtreinish/stestr/actions/workflows/main.yml/badge.svg?branch=main    :target: https://github.com/mtreinish/stestr/actions/workflows/main.yml    :alt: CI Testing status.. image:: https://img.shields.io/codecov/c/gh/mtreinish/stestr?style=flat-square    :target: https://codecov.io/gh/mtreinish/stestr    :alt: Code coverage.. image:: https://img.shields.io/pypi/v/stestr.svg?style=flat-square    :target: https://pypi.python.org/pypi/stestr    :alt: Latest Version.. image:: https://img.shields.io/github/license/mtreinish/stestr.svg?style=popout-square    :target: https://opensource.org/licenses/Apache-2.0    :alt: License:* Read this in other languages: `English`_, `日本語`_* You can see the full rendered docs at: http://stestr.readthedocs.io/en/latest/* The code of the project is on Github: https://github.com/mtreinish/stestr.. _English: https://github.com/mtreinish/stestr/blob/main/README.rst.. _日本語: https://github.com/mtreinish/stestr/blob/main/README_ja.rst.. note:: stestr v2.x.x release series will be the last series that supports    Python 2. Support for Python 2.7 was dropped in stestr release 3.0.0.Overview--------stestr is parallel Python test runner designed to execute `unittest`_ testsuites using multiple processes to split up execution of a test suite. It alsowill store a history of all test runs to help in debugging failures andoptimizing the scheduler to improve speed. To accomplish this goal it uses the`subunit`_ protocol to facilitate streaming and storing results from multipleworkers... _unittest: https://docs.python.org/3/library/unittest.html.. _subunit: https://github.com/testing-cabal/subunitstestr originally started as a fork of the `testrepository`_ project. But,instead of being an interface for any test runner that used subunit, liketestrepository, stestr concentrated on being a dedicated test runner for pythonprojects. While stestr was originally forked from testrepository it is notbackwards compatible with testrepository. At a high level the basic concepts ofoperation are shared between the two projects but the actual usage is notexactly the same... _testrepository: https://testrepository.readthedocs.org/en/latestInstalling stestr-----------------stestr is available via pypi, so all you need to do is run::  pip install -U stestrto get stestr on your system. If you need to use a development version ofstestr you can clone the repo and install it locally with::  git clone https://github.com/mtreinish/stestr.git &amp;&amp; pip install -e stestrwhich will install stestr in your python environment in editable mode for localdevelopmentUsing stestr------------After you install stestr to use it to run tests is pretty straightforward. Thefirst thing you'll want to do is create a ``.stestr.conf`` file for yourproject. This file is used to tell stestr where to find tests and basicinformation about how tests are run. A basic minimal example of thecontents of this is::  [DEFAULT]  test_path=./project_source_dir/testswhich just tells stestr the relative path for the directory to use fortest discovery. This is the same as ``--start-directory`` in the standard`unittest discovery`_... _unittest discovery: https://docs.python.org/3/library/unittest.html#test-discoveryAlternatively, if you're using stestr with`tox &lt;https://tox.readthedocs.io/en/latest/&gt;`__ you can integrate your stestrconfig in a ``stestr`` section in the tox.ini file, for example::  [stestr]  test_path=./project_source_dir/testsAfter stestr is configured you should be all set to start using stestrto run tests. To run tests just use::    stestr runit will first create a results repository at ``.stestr/`` in the currentworking directory and then execute all the tests found by test discovery. Ifyou're just running a single test (or module) and want to avoid the overhead ofdoing test discovery you can use the ``--no-discover``/``-n`` option to specifythat test.For all the details on these commands and more thorough explanation of optionssee the stestr manual: https://stestr.readthedocs.io/en/latest/MANUAL.htmlMigrating from testrepository-----------------------------If you have a project that is already using testrepository stestr's source repocontains a helper script for migrating your repo to use stestr. This scriptjust creates a ``.stestr.conf`` file from a ``.testr.conf`` file.(assuming it uses a standard subunit.run test command format) To runthis from your project repo just call::    $STESTR_SOURCE_DIR/tools/testr_to_stestr.pyand you'll have a ``.stestr.conf`` created.Building a manpage------------------The stestr manual has been formatted so that it renders well as html and as amanpage. The html output and is autogenerated and published to:https://stestr.readthedocs.io/en/latest/MANUAL.html but the manpage has to begenerated by hand. To do this you have to manually run sphinx-build with themanpage builder. This has been automated in a small script that should be runfrom the root of the stestr repository::  tools/build_manpage.shwhich will generate the troff file in doc/build/man/stestr.1 which is ready tobe packaged and or put in your system's man pages.Contributing------------To browse the latest code, see: https://github.com/mtreinish/stestrTo clone the latest code, use: ``git clone https://github.com/mtreinish/stestr.git``Guidelines for contribution are documented at: http://stestr.readthedocs.io/en/latest/developer_guidelines.htmlUse `github pull requests`_ to submit patches. Before you submit a pull requestensure that all the automated testing will pass by running ``tox`` locally.This will run the test suite and also the automated style rule checks just asthey will in CI. If CI fails on your change it will not be able to merge... _github pull requests: https://help.github.com/articles/about-pull-requests/Community---------Besides Github interactions there is also a stestr IRC channel:#stestr on `OFTC &lt;https://oftc.net/&gt;`__feel free to join to ask questions, or just discuss stestr.</longdescription>
</pkgmetadata>