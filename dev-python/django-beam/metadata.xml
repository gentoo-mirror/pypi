<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-beam [![CI](https://github.com/django-beam/django-beam/actions/workflows/tox.yml/badge.svg)](https://github.com/django-beam/django-beam/actions/workflows/tox.yml) [![ReadTheDocs](https://readthedocs.org/projects/django-beam/badge/)](https://django-beam.readthedocs.io/en/latest/) [![codecov](https://codecov.io/gh/django-beam/django-beam/branch/master/graph/badge.svg?token=U0C27SY9XM)](https://codecov.io/gh/django-beam/django-beam)django-beam provides you with a set of views, templates, and integrations for the most common CRUD applications. It aims to offer the functionality of Django's own admin but in a way that integrates seamlessly with your frontend code.## Features- CRUD operations based on class-based views- Easily extensible- Extensions for common use cases and popular third-party packages## DocumentationThe full documentation can be found at [https://django-beam.readthedocs.io/en/latest/](https://django-beam.readthedocs.io/en/latest/).## QuickstartTo get started, you'll need to follow these steps:1. Install django-beam:```bashpip install django-beam```2. Add &quot;beam&quot; and &quot;crispy_forms&quot; to your `INSTALLED_APPS` in `settings.py`:```pythonINSTALLED_APPS = [    # ...    &quot;beam&quot;,    &quot;beam.themes.bootstrap4&quot;,    &quot;crispy_forms&quot;,]```3. Import and use `beam` in your Django project, as shown in the example below:```python# books/models.pyfrom django.db import modelsclass Book(models.Model):    title = models.CharField(max_length=255)    author = models.ForeignKey(&quot;Author&quot;, on_delete=models.CASCADE, related_name=&quot;books&quot;)class Author(models.Model):    title = models.CharField(max_length=255)# books/views.pyimport beamclass BookViewSet(beam.ViewSet):    model = Book    fields = ['title', 'author']class AuthorViewSet(beam.ViewSet):    model = Author    fields = ['title']# urls.pyfrom django.urls import path, includeurlpatterns = [    path('books/', include(BookViewSet().get_urls())),    path('authors/', include(AuthorViewSet().get_urls())),    # ...]```For more examples and detailed explanations of various django-beam features, refer to the [full documentation](https://django-beam.readthedocs.io/en/latest/).## beam.contribThe `beam.contrib` package provides integration with several third-party Django apps, such as:- `beam.contrib.auth`: Viewsets for editing users and groups, and optional templates for default Django registration views.- `beam.contrib.autocomplete_light`: Integration with `django-autocomplete-light`.- `beam.contrib.reversion`: Experimental integration with `django-reversion`.Refer to the documentation for usage instructions on each of the contrib packages.## TestingYou can use the [tox](https://tox.readthedocs.io/en/latest/) testing tool to run the tests:```bashtox -e py38-djangolatest```Run the tests of a specific test file only:```bashtox -e py38-djangolatest -- test_tags```Run against all supported versions of Python and Django:```bashtox```## SupportIf you encounter any issues or have questions, please refer to the [django-beam documentation](https://django-beam.readthedocs.io/en/latest/) or raise an issue on the [GitHub repository](https://github.com/yourgithubuser/django-beam/issues).</longdescription>
</pkgmetadata>