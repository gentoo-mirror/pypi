<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align='center'&gt; DNA analyser IBP &lt;/h1&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/dna-analyser-ibp/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/Version 3.6.0-green?style=for-the-badge&quot; alt='package_version'/&gt;    &lt;/a&gt;    &lt;img src=&quot;https://img.shields.io/badge/Python 3.10+-00599C?style=for-the-badge&amp;logo=python&amp;logoColor=white&quot; alt='python_version'/&gt;    &lt;img src=&quot;https://img.shields.io/badge/jupyter-gray?style=for-the-badge&amp;logo=jupyter&quot; alt='jupyter'/&gt;    &lt;a href=&quot;https://choosealicense.com/licenses/gpl-3.0/&quot;&gt;            &lt;img src=&quot;https://img.shields.io/badge/gnu-white?style=for-the-badge&amp;logo=gnu&amp;logoColor=black&quot; alt='licence'/&gt;    &lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Tool for creating R-loop tracker, P53predictor, G4Killer and G4Hunter analysis. Work as API wrapper for IBP DNA analyzer API [bioinformatics.ibp](http://bioinformatics.ibp.cz/).Currently working with an instance of DNA analyser server running on http://bioinformatics.ibp.cz computational core but can be switched to the local instance of the server.# Getting Started## Prerequisitespython &gt;= 3.10## InstallingTo install test version from [Pypi](https://pypi.org/project/dna-analyser-ibp/).```commandlinepipenv install dna-analyser-ibp``````commandlinepip install dna-analyser-ibp```## Quick startDNA analyser uses `pandas.Dataframe` or `pandas.Series`. Firstly the user  has to create `Api` object and login to API.```pythonfrom DNA_analyser_IBP.api import ApiAPI = Api()``````pythonEnter your email        example@example.czEnter your password     ········2020-09-16 18:51:17.943398 [INFO]: User host is trying to login ...2020-09-16 18:51:17.990580 [INFO]: User host is successfully loged in ...```If DNA analyser API server is not running on http://bioinformatics.ibp.cz then you have to set server paramether to create `Api` object.```pythonfrom DNA_analyser_IBP.api import ApiAPI = Api(    server='http://hostname:port/api')```## Sequence uploadingSequences can be uploaded from NCBI, plain text or text file. Example bellow illustrates NCBI sequence uploading `Homo sapiens chromosome 12`.```pythonAPI.sequence.ncbi_creator(    circular= True,    tags=['Homo','sapiens', 'chromosome'],    name='Homo sapiens chromosome 12',    ncbi_id='NC_000012.12')API.sequence.load_all(    tags=['Homo'])```## G4HunterG4Hunter is a tool for prediction of G-quadruplex propensity in nucleic acids, this algorithm considers G-richness and G-skewness of a tested sequence and shows a quadruplex propensity score. ```pythonsapiens = API.g4hunter.load_all(    tags=['Homo'])API.g4hunter.analyse_creator(    sequence=sapiens,    tags=['analyse','Homo', 'sapiens'],    threshold=1.4,    window_size=30)```To load results of G4Hunter analysis.```pythonAPI.g4hunter.load_all(    tags=['analyse', 'Homo', 'sapiens']) ```## R-loop tracker R-loop tracker is a toll for prediction of R-loops in nucleic acids. The algorithms search for R-loop initiation zone based on presence of G-clusters and R-loop elongation zone containing at least 40% of Guanine density.```pythonsapiens = API.g4hunter.load_all(    tags=['Homo'])API.rloopr.analyse_creator(    sequence=sapiens,    tags=['analyse', 'Homo', 'sapiens'],    riz_2g_cluster=True,    riz_3g_cluster=False)```To load results of R-loop tracker analysis.```pythonAPI.rloopr.load_all(    tags=['analyse', 'Homo', 'sapiens']) ```## G4KillerG4Killer algorithm allows to mutate DNA sequences with desired G4Hunter score with minimal mutation steps.```pythonAPI.g4killer.run(    sequence='AATTATTTGGAAAGGGGGGGTTTTCCGA',    threshold=0.5) API.g4killer.run_multiple(    sequences=[        'AATTATTTGGAAAGGGGGGGTTTTCCGA',        'AATTATTTGGAAAGGGGGGGTTTTCCGA'    ],    threshold=0.5)```## P53 predictorP53 binding predictor for 20 base pairs sequences. ```pythonAPI.p53.run(    sequence='GGACATGCCCGGGCATGTCC')API.p53.run_multiple(    sequences=[        'GGACATGCCCGGGCATGTCC',        'GGACATGCCCGGGCATGTCC'    ]) ```# Development## Dependencies* requests = &quot;2.31.0&quot;* pandas = &quot;2.0.0&quot;* tqdm = &quot;4.66.0&quot;* pyjwt = &quot;2.8.0&quot;* matplotlib = &quot;3.7.2&quot;* requests-toolbelt = &quot;1.0.0&quot;* tenacity = &quot;8.2.3&quot;## DEV dependencies* pytest = &quot;7.4.2&quot;## TestsTo run tests only when downloaded directly from this repository.```commandlinepytest -v tests/```## Authors* **Patrik Kaura** - *Main developer* - [patrikkaura](https://github.com/patrikkaura)## LicenseThis project is licensed under the GPL-3.0 License - see the [LICENSE.md](LICENSE.md) file for details.</longdescription>
</pkgmetadata>