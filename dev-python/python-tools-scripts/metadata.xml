<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Tools ScriptsThis is a tool, similar to [invoke](https://www.pyinvoke.org).It's more recent and uses [argparse](https://docs.python.org/3/library/argparse.html) under the hoodand some additional magic to define the CLI arguments.To use it, you must have a `tools` package in your repository root.On your `tools/__init__.py` import your scripts and *Python Tools Scripts* will add them to it's CLI.## An Example Script `tools/vm.py````python&quot;&quot;&quot;These commands are used to create/destroy VMs, sync the local checkoutto the VM and to run commands on the VM.&quot;&quot;&quot;from ptscripts import Context, command_group# Define the command groupvm = command_group(name=&quot;vm&quot;, help=&quot;VM Related Commands&quot;, description=__doc__)@vm.command(    arguments={        &quot;name&quot;: {            &quot;help&quot;: &quot;The VM Name&quot;,            &quot;metavar&quot;: &quot;VM_NAME&quot;,            &quot;choices&quot;: list(AMIS),        },        &quot;key_name&quot;: {            &quot;help&quot;: &quot;The SSH key name.&quot;,        },        &quot;instance_type&quot;: {            &quot;help&quot;: &quot;The instance type to use.&quot;,        },        &quot;region&quot;: {            &quot;help&quot;: &quot;The AWS regsion.&quot;,        },    })def create(    ctx: Context,    name: str,    key_name: str = None,    instance_type: str = None,    region: str = &quot;eu-central-1&quot;,):    &quot;&quot;&quot;    Create VM.    &quot;&quot;&quot;    vm = VM(ctx=ctx, name=name)    vm.create(region_name=region, key_name=key_name, instance_type=instance_type)@vm.command(    arguments={        &quot;name&quot;: {            &quot;help&quot;: &quot;The VM Name&quot;,            &quot;metavar&quot;: &quot;VM_NAME&quot;,        },    })def destroy(ctx: Context, name: str):    &quot;&quot;&quot;    Destroy VM.    &quot;&quot;&quot;    vm = VM(ctx=ctx, name=name)    vm.destroy()```The, on your repository root, run:```❯ tools -husage: tools [-h] [--debug] {vm} ...Python Tools Scriptsoptional arguments:  -h, --help   show this help message and exit  --debug, -d  Show debug messagesCommands:  {vm}    vm         VM Related CommandsThese tools are discovered under `&lt;repo-root&gt;/tools`.``````❯ tools vm -husage: tools vm [-h] {create,destroy} ...These commands are used to create/destroy VMs, sync the local checkout to the VM and to run commands on the VM.optional arguments:  -h, --help            show this help message and exitCommands:  {create,destroy}    create              Create VM.    destroy             Destroy VM.```</longdescription>
</pkgmetadata>