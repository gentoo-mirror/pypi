<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MkDocs static i18n plugin![mkdocs-static-i18n pypi version](https://img.shields.io/pypi/v/mkdocs-static-i18n.svg)*An MkDocs plugin that helps you support multiple language versions of your site / documentation.**Like what you :eyes:? Using this plugin? Give it a :star:!*The `mkdocs-static-i18n` plugin allows you to support multiple languages of your documentation by adding static translation files to your existing documentation pages.Multi language support is just **one `.&lt;language&gt;.md` file away**!Even better, `mkdocs-static-i18n` also allows you to build and serve [**localized versions of any file extension**](#referencing-localized-content-in-your-markdown-pages) to display localized images, medias and assets.Localized images/medias/assets are just **one `.&lt;language&gt;.&lt;extension&gt;` file away**!If you want to see how it looks, [check out the demo documentation here](https://ultrabug.github.io/mkdocs-static-i18n/).## Language detection logicThis plugin is made to be as simple as possible and will generate a default version of your website + one version per configured language on the `&lt;language&gt;/` path.Your translations can be detected using a **suffix based docs structure** (default) or a **folder based docs structure**. This is controlled by the [docs_structure](#docs_structure) option.Since demonstrations are better than words, [check out the demo documentation here](https://ultrabug.github.io/mkdocs-static-i18n/) which showcases the logic.### Suffix based docs structureThe **default** behavior is to use a **suffix based docs structure** to handle your translations:- the `default` version will use any `.md` documentation file first and fallback to any `.&lt;default_language&gt;.md` file found- the `/&lt;language&gt;` language versions will use any `.&lt;language&gt;.md` documentation file first and fallback to any `.&lt;default_language&gt;.md` file before fallbacking to any default `.md` file found### Folder based docs structureThe optional behavior is to use a **folder based structure** to handle your translations:- each of your configured language should have a folder with their name at the root of `docs_dir`, which of course includes the default language of your choice- then you just structurate your `.md` documentation files in their respective folder structure- any folder relative to `docs_dir` which is not a language folder will be copied as-is and their files will serve as language agnostic (think of non localized images)See a [using a folder per language structure](#using-a-folder-per-language-structure) section for more details.## InstallationJust `pip install mkdocs-static-i18n`!## ConfigurationHere is the list of all the options that the plugin supports.### default_language- mandatory: `yes`A 2-letter [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code (`en`) or [5-letter language code with added territory/region/country](https://www.mkdocs.org/user-guide/localizing-your-theme/#supported-locales) (`en_US`).```yamldefault_language: en```### default_language_only- default: `false`This **boolean** (true/false) option is used to [speed up the build process while developing your documentation](#building-only-the-default-language-for-faster-development).```yamldefault_language_only: false```### docs_structure- default: `suffix`This **(fixed) string** (can be either 'suffix' or 'folder') option is used to select which [language detection logic](#language-detection-logic) should be used to build the localized versions of your documentation.```yamldocs_structure: folder```### languages- mandatory: `yes`A mapping of **2-letter or 5-letter language code** (like `default_language`) with **either** the display name of the language **or** some optional keys used to control the build process of each language.Allowed options per language:- `name` (mandatory): the name that should be displayed in the [mkdocs-material language switcher](#using-mkdocs-material-site-language-selector)- `link` (default: `./&lt;language&gt;`): the link path to be used in the [mkdocs-material language switcher](#using-mkdocs-material-site-language-selector)- `fixed_link` (default: `None`): if specified, when switching to this language, you will be redirected to this link- `build` (default: `true`): a boolean used to control the build of a `/&lt;language&gt;` path for the given language- `site_name` (default: `mkdocs.yml site_name`): the [`site_name` translation for the given language](#translating-site-name)Feature rich `languages` options usage:```yamlplugins:  - i18n:      default_language: en      languages:        en:          name: English          build: true        fr:          name: Français          build: true```Short (legacy) `languages` options usage:```yamlplugins:  - i18n:      default_language: en      languages:        en: English        fr: Français```### material_alternate- default: `true`If you're using the mkdocs-material theme, this **boolean** (true/false) option will let you choose if you want the mkdocs-static-i18n plugin to [configure the language switcher for you.](#using-mkdocs-material-site-language-selector).```yamlmaterial_alternate: true```### nav_translations- default: `empty`This option is a nested mapping of **language**: **default title**: **translated title** that allows you to [translate the navigation sections of your website](#translating-navigation).```yamlnav_translations:  fr:    Topic1: Sujet1    Topic2: Sujet2```### search_reconfigure- default: `true`This is a **boolean** (true/false) option that lets you activate or not [the automatic reconfiguration](#compatibility-with-the-search-plugin) of the `plugins.search.lang` option based on your configured languages.## Example configuration and output```yamlplugins:  - i18n:      default_language: en      languages:        en:          name: English          build: true        fr:          name: Français          build: true```Using the configuration above on the following `docs/` structure will build the following `site/` (leaving out static files for readability):```docs├── image.en.png├── image.fr.png├── index.fr.md├── index.md├── topic1│   ├── index.en.md│   └── index.fr.md└── topic2    ├── index.en.md    └── index.md``````site├── en│   ├── image.png│   ├── index.html│   ├── topic1│   │   └── index.html│   └── topic2│       └── index.html├── fr│   ├── image.png│   ├── index.html│   ├── topic1│   │   └── index.html│   └── topic2│       └── index.html├── image.png├── index.html├── topic1│   └── index.html└── topic2    └── index.html```### Alternate aware sitemap.xmlThe `mkdocs-static-i18n` plugin since version 0.32 provides a template that will generate automatically an alternate aware `sitemap.xml` so that your localized content is made available to search engines!Localization aware sitemap.xml:```xml    &lt;url&gt;         &lt;loc&gt;https://ultrabug.github.io/mkdocs-static-i18n/&lt;/loc&gt;         &lt;lastmod&gt;2022-01-31&lt;/lastmod&gt;         &lt;changefreq&gt;daily&lt;/changefreq&gt;         &lt;xhtml:link rel=&quot;alternate&quot; hreflang=&quot;en&quot; href=&quot;https://ultrabug.github.io/mkdocs-static-i18n/en/&quot;/&gt;         &lt;xhtml:link rel=&quot;alternate&quot; hreflang=&quot;fr&quot; href=&quot;https://ultrabug.github.io/mkdocs-static-i18n/fr/&quot;/&gt;    &lt;/url&gt;```### Not building a dedicated version for the default languageIf you do not wish to build a dedicated `&lt;language&gt;/` path for the `default_language` version of your documentation, just **set its `build` option to `false`**.The following configuration:```yamlplugins:  - i18n:      default_language: en      languages:        fr:          name: Français          build: true        en:          name: English          build: false```Applied on the following structure:```docs├── image.en.png├── image.fr.png├── index.fr.md├── index.md├── topic1│   ├── index.en.md│   └── index.fr.md└── topic2    ├── index.en.md    └── index.md```Will build:```site├── fr│   ├── image.png│   ├── index.html│   ├── topic1│   │   └── index.html│   └── topic2│       └── index.html├── image.png├── index.html├── topic1│   └── index.html└── topic2    └── index.html```## Building only the default language for faster developmentWhen working on your project, building a version for each supported languagecan be slow depending on the size of your documentation.The `default_language_only` option allows you to only build the selected`default_language` of your documentation for faster development.Coupled with [MkDocs &gt;= 1.2 support for environment variables](https://www.mkdocs.org/about/release-notes/#support-added-for-environment-variables-in-the-configuration-file-1954),this option can easily be passed dynamically [within your `mkdocs.yml` file like this](https://github.com/ultrabug/mkdocs-static-i18n/blob/main/mkdocs.yml)!You can [read more about the rationale behind this feature here](https://github.com/ultrabug/mkdocs-static-i18n/issues/32#issuecomment-860563081).### Referencing localized content in your markdown pagesFocus on translating your content, not on updating all the links and referencesto your assets!Let `mkdocs-static-i18n` do the heavy lifting of dynamically localizing yourassets and just reference everything without their localized extension.Since the generated `site` files have their localization extension removedduring the build process, you can reference them in your markdown sourcewithout it (this includes links to `.md` files)!This simple docs structure:```docs├── image.en.png├── image.fr.png├── index.fr.md├── index.md```Will generate this site tree:```site├── fr│   ├── image.png│   ├── index.html├── image.png├── index.html```Which means that the `image.png` and its `fr/image.png` localized counterpartcan be referenced the same way as `![my image](image.png)` on both `index.md`and `index.fr.md`!## Translating site nameUsing the `site_name` option for a given language, you can translate the sitename that will be used to render the localized pages for the language versionof your website.```yamlsite_name: Default site titleplugins:  - i18n:      default_language: en      languages:        en:          name: English          site_name: Site title in English for pages with path /en/        fr:          name: Français          site_name: Titre du site en Français pour les pages en /fr/```## Translating navigationUsing the `nav_translations` configuration option, you can translate all yournavigation titles easily.**Translations are applied to all titles** so you only need to provide a giventranslation once and it will be used to translate all the sections, links andpages which share the same title.This example will translate **any** navigation item title from **Topic1** to**Sujet1** on the French version of the documentation:```yamlplugins:  - i18n:      default_language: en      languages:        en:          name: English        fr:          name: Français      nav_translations:        fr:          Topic1: Sujet1          Topic2: Sujet2```## Localized content can diverge from the default versionSince version 0.20 of the plugin, localized content can diverge from thedefault language version. This means that you can have pages that are specificto some languages without any problem.See #59 if you need more information about this.## Compatibility with the search pluginIf you enabled the `search` plugin embedded with MkDocs, this plugin willautomatically populate its `lang` option with the the configured `languages`as long as they are supported by [lunr](https://pypi.org/project/lunr/).:warning: **Search results will include all the pages from all the localizedcontents!**This means that your search results can't be contextual to the languageyou are currently browsing.The `mkdocs-static-i18n` plugin will try to be smart and [deduplicate the pages](https://github.com/ultrabug/mkdocs-static-i18n/issues/129) from the `default_language` so that search results are not polluted by redundant content.This is because the MkDocs `search` plugin is hardcoded in the themesjavascript sources so there can only be one search index for the wholebuild.This feature can be disabled using the `search_reconfigure` option.## Compatibility with other pluginsThis plugin is compatible with the following mkdocs plugins:- [MkDocs Material](https://github.com/squidfunk/mkdocs-material): the `search` plugin text will be switched automatically to the right language depending on the version you're browsing and the `language selector` will automatically be setup for you (requires mkdocs-material&gt;=7.1.0)- [MkDocs Awesome Pages Plugin](https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin): the page ordering is preserved on the language specific versions of your site- [MkDocs with PDF Plugin](https://github.com/orzih/mkdocs-with-pdf): you get a PDF of every localized version of your site- [MkDocs minify Plugin](https://github.com/byrnereese/mkdocs-minify-plugin): to minify your JS, CSS and HTML localized files## Adding a language selector on your documentation header### Using mkdocs-material site language selectorStarting version 7.1.0, [mkdocs-material supports a site language selector](https://squidfunk.github.io/mkdocs-material/setup/changing-the-language/#site-language-selector) configuration.The `mkdocs-static-i18n` plugin will detect if you're using `mkdocs-material` and, if its version is at least `7.1.0`, **will enable and configure the site language selector automatically for you** unless you specified your own `extra.alternate` configuration!Even better, `mkdocs-static-i18n` will also make it so that changing between languages keeps you on the same page instead of getting you back to the language specific home page (not compatible with theme.features = navigation.instant, [see #62](https://github.com/ultrabug/mkdocs-static-i18n/issues/62))!If you wish to disable that feature, simply set the `material_alternate` option to `false`:```yamlplugins:  - i18n:      default_language: en      languages:        en:          name: English        fr:          name: Français      material_alternate: false```### Writing a custom language switcherLet's take `mkdocs-material` as an example and say we would like to add two buttons to allow our visitors to switch to their preferred language.The following explanation was showcased in the demo website up to 0.7 so you can find the files here:- [mkdocs.yml](https://github.com/ultrabug/mkdocs-static-i18n/tree/0.7/mkdocs.yml)- [theme_overrides](https://github.com/ultrabug/mkdocs-static-i18n/tree/0.7/theme_overrides/partials)We need to add a `custom_dir` to our `theme` configuration:```yamltheme:  name: material  custom_dir: theme_overrides```Then override the `header.html` to insert something like:```    {% if &quot;i18n&quot; in config.plugins %}      &lt;div style=&quot;margin-left: 10px; margin-right: 10px;&quot;&gt;          {% include &quot;partials/i18n_languages.html&quot; %}      &lt;/div&gt;    {% endif %}```And add a `i18n_languages.html` that could look like this:```{% for lang, display in config.plugins.i18n.config.languages.items() -%}    &lt;div style=&quot;display: inline-block; margin-right:5px;&quot;&gt;&lt;a href=&quot;/{{ lang }}/&quot;&gt;{{ display }}&lt;/a&gt;&lt;/div&gt;{% endfor %}```The resulting files should be placed like this:```theme_overrides└── partials    ├── header.html    └── i18n_languages.html```## Using i18n context variables in your pagesThe plugin exports some useful i18n variables that you can access through the page context:- `i18n_config`: the i18n plugin configuration- `i18n_page_locale`: the current rendering locale of the page- `i18n_page_file_locale`: the locale suffix of the source file used to render the pageThose context [variables can be accessed using Jinja2 notation](https://jinja.palletsprojects.com/en/latest/templates/#variables), like `{{ i18n_page_locale }}` in your theme overrides.## Using a folder per language structure:warning: The **folder structure feature is not as mature as the suffix one** and should be used only for large and complex translation layouts. The folder structure is also very strict about your `docs_dir` layout so make sure you respect it properly.The `mkdocs-static-i18n` plugin can be configured to work with a **language per folder based structure** where you create a folder per language your want to support translations for.For example, the given folder structure:```docs_folder_structure├── assets│   └── image_non_localized.png├── en│   ├── image.png│   ├── index.md│   ├── topic1│   │   └── named_file.md│   └── topic2│       └── README.md└── fr    ├── image.png    ├── index.md    ├── topic1    │   └── named_file.md    └── topic2        └── README.md```With the following `mkdocs.yml` configuration:```yamlplugins:  - i18n:      default_language: en      docs_structure: folder      languages:        en:          name: English        fr:          name: Français```Will build:```site├── assets│   └── image_non_localized.png├── en│   ├── image.png│   ├── index.html│   ├── topic1│   │   └── index.html│   └── topic2│       └── index.html├── fr│   ├── image.png│   ├── index.html│   ├── topic1│   │   └── index.html│   └── topic2│       └── index.html├── image.png├── index.html├── topic1│   └── index.html└── topic2    └── index.html```## See it in action- [On this repository demo website](https://ultrabug.github.io/mkdocs-static-i18n/)- [On my own website: ultrabug.fr](https://ultrabug.fr)## Contributions welcomeFeel free to ask questions, enhancements and to contribute to this project!</longdescription>
</pkgmetadata>