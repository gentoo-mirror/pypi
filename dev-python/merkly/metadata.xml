<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.org/project/merkly/&quot;&gt;    &lt;img alt=&quot;Merkly&quot; src=&quot;https://raw.githubusercontent.com/olivmath/merkly/main/assets/merkly-banner.png&quot; width=&quot;1000&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;The simple and easy implementation of Python Merkle Tree.&lt;/p&gt;---&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/merkly/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/merkly&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/olivmath/merkly/actions/workflows/ci.yml&quot;&gt;        &lt;img src=&quot;https://github.com/olivmath/merkly/actions/workflows/ci.yml/badge.svg?branch=main&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/merkly/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/pyversions/merkly&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/merkly/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/merkly&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/olivmath/merkly/graphs/code-frequency&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/olivmath/merkly&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/olivmath/merkly/blob/main/LICENSE&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/l/merkly&quot;&gt;    &lt;/a&gt;&lt;/p&gt;---## Table of Contents- [Credits](#credits)- [How to install](#how-to-install)- [How it works](#how-it-works)- [How to use](#how-to-use)- [Roadmap](#roadmap)- [Contributing](#contributing)- [License](#license)## Credits[![GitHub Contributors Image](https://contrib.rocks/image?repo=olivmath/merkly)](https://github.com/olivmath/merkly/graphs/contributors)## How to install```poetry add merkly``````pip install merkly```## How to works- _We use keccak-256 under-the-hood if you dont pass your hash function_This library provides a clean and easy to use implementation of the Merkle Tree with the following features:- Create Leaf- Create Root- Create Proof- Verify Proof## How to Use**Create a Merkle Tree**```pythonfrom merkly.mtree import MerkleTreefrom typing import Callable# choose any hash function that is of type (str) -&gt; strmy_hash_function: Callable[[str], str] = lambda data: str(ord(data) * 1000)# create a Merkle Treemtree = MerkleTree(['a', 'b', 'c', 'd'], my_hash_function)# show original inputassert mtree.raw_leafs == ['a', 'b', 'c', 'd']# hashed leafsassert mtree.leafs == ['97000', '98000', '99000', '100000']# shorted hashed leafsassert mtree.short_leafs == ['9700...', '9800...', '9900...', '1000...']```**Create a Merkle Tree (Default: Keccak256)**```pythonfrom merkly.mtree import MerkleTree# create a Merkle Tree with keccak256mtree = MerkleTree(['a', 'b', 'c', 'd'])# show original inputassert mtree.raw_leafs == ['a', 'b', 'c', 'd']# hashed leafsassert mtree.leafs == [    '3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb',    'b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510',    '0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2',    'f1918e8562236eb17adc8502332f4c9c82bc14e19bfc0aa10ab674ff75b3d2f3']# shorted hashed leafsassert mtree.short_leafs == [    '3ac2...',    'b555...',    '0b42...',    'f191...']```**Create a Root**```pythonfrom merkly.mtree import MerkleTree# create a Merkle Treemtree = MerkleTree(['a', 'b', 'c', 'd'])# get root of treeassert mtree.root == '115cbb4775ed495f3d954dfa47164359a97762b40059d9502895def16eed609c'```**Create Proof of a leaf**```pythonfrom merkly.mtree import MerkleTree# create a Merkle Treemtree = MerkleTree(['a', 'b', 'c', 'd'])# get proof of a `raw` leafassert mtree.proof('b') == [    Node(left: '3ac2...'),    Node(right: 'b555...'),    Node(right: '6467...')]```**Verify Proof of a leaf**```pythonfrom merkly.mtree import MerkleTree# create a Merkle Treemtree = MerkleTree(['a', 'b', 'c', 'd'])# get proof of a raw leafp = mtree.proof('b')# verify your proof of raw leafassert mtree.verify(p, 'b') == True```## Roadmap| Feature                                                                                                   | Status | Priority || --------------------------------------------------------------------------------------------------------- | ------ | -------- || Create Root                                                                                               | ‚úÖ     | üî•       || Create Proof                                                                                              | ‚úÖ     | üî•       || Verify Proof                                                                                              | ‚úÖ     | üî•       || Use any Hash function                                                                                     | ‚úÖ     | üßê       || Leafs of any size                                                                                         | ‚úÖ     | üßê       || Support **[OpenZeppelin](https://docs.openzeppelin.com/contracts/4.x/utilities#verifying_merkle_proofs)** | ‚è∞     | üî•       || Compatible with **[MerkleTreeJs](https://github.com/miguelmota/merkletreejs)**                            | ‚è∞     | üî•       |## Contributing- Before read a code of conduct: **[CODE_OF_CONDUCT](CODE_OF_CONDUCT.md)**- Follow the guide of development: **[CONTRIBUTING](CONTRIBUTING.md)**## License[MIT](LICENSE)&lt;!-- https://math.mit.edu/research/highschool/primes/materials/2018/Kuszmaul.pdf --&gt;</longdescription>
</pkgmetadata>