<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![image](https://img.shields.io/pypi/v/spector.svg)](https://pypi.org/project/spector/)[![image](https://img.shields.io/pypi/pyversions/spector.svg)](https://python3statement.org)[![image](https://pepy.tech/badge/spector)](https://pepy.tech/project/spector)![image](https://img.shields.io/pypi/status/spector.svg)[![image](https://github.com/coady/spector/workflows/build/badge.svg)](https://github.com/coady/spector/actions)[![image](https://codecov.io/gh/coady/spector/branch/main/graph/badge.svg)](https://codecov.io/gh/coady/spector/) [![image](https://github.com/coady/spector/workflows/codeql/badge.svg)](https://github.com/coady/spector/security/code-scanning)[![image](https://img.shields.io/badge/code%20style-black-000000.svg)](https://pypi.org/project/black/)[![image](http://mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)Sparse vectors optimized for memory and [NumPy](http://www.numpy.org) integrations.`numpy` handles densely populated n-dimemsional arrays. `scipy.sparse` handles sparsely populated 2-dimensional arrays, i.e., matrices. What's missing from the ecosystem is sparsely populated 1-dimensional arrays, i.e., vectors.NumPy | Python | Spector----- | ------ | -------1-dim bool `numpy.array` | `set[int]` | `spector.indices`1-dim float `numpy.array` | `dict[int, float]` | `spector.vector``scipy.sparse.dok_matrix` | `dict[int, dict[int, float]]` | `spector.matrix`Indices and vectors are implemented in [Cython](https://cython.org) as hash sets and maps. All native operations are optimized and release the [GIL](https://docs.python.org/3/glossary.html#term-global-interpreter-lock).* conversion between sparse `numpy` arrays* conversion between dense `numpy` arrays* binary set operations* binary math operations* `map`, `filter`, and `reduce` operations with `numpy` universal functions## Usage### indicesA sparse boolean array with a set interface.```python&gt;&gt;&gt; from spector import indices&gt;&gt;&gt; ind = indices([0, 2])&gt;&gt;&gt; indindices([2 0])&gt;&gt;&gt; 1 in indFalse&gt;&gt;&gt; ind.add(1)True&gt;&gt;&gt; ind.todense()array([ True,  True,  True])&gt;&gt;&gt; ind.fromdense(_)indices([2 1 0])```### vectorA sparse float array with a mapping interface.```python&gt;&gt;&gt; from spector import vector&gt;&gt;&gt; vec = vector({0: 1.0, 2: 2.0, 4: 1.0})&gt;&gt;&gt; vecvector([4 2 0], [1. 2. 1.])&gt;&gt;&gt; vec[2] += 1.0&gt;&gt;&gt; vec[2]3.0&gt;&gt;&gt; vec.todense()array([1., 0., 3., 0., 1.])&gt;&gt;&gt; vector.fromdense(_)vector([4 2 0], [1. 3. 1.])&gt;&gt;&gt; vec.sum()5.0&gt;&gt;&gt; vec + vecvector([0 2 4], [2. 6. 2.])```Vectors support math operations with scalars, and with vectors if the set method is unambiguous.vector operation | set method | ufunc---------------- | ---------- | -----`+` | union | add`*` | intersection | multiply`-` | | subtract`/` | | true_divide`**` | | power`\|` | union | max`&amp;` | intersection | min`^` | symmetric_difference |`difference` | difference |### matrixA mapping of keys to vectors.```python&gt;&gt;&gt; from spector import matrix&gt;&gt;&gt; mat = matrix({0: {1: 2.0}})&gt;&gt;&gt; matmatrix(&lt;class 'spector.vector.vector'&gt;, {0: vector([1], [2.])})&gt;&gt;&gt; mat.row, mat.col, mat.data(array([0]), array([1]), array([2.]))```## Installation```console% pip install spector```## Tests100% branch coverage.```console% pytest [--cov]```## Changes1.3* Python 3.11 wheels* Cython updates1.2* Python &gt;=3.7 required1.1* Python &gt;=3.6 required* Read-only views supported* Optimized intersection count1.0* Optimized set intersection0.2* Numerous optimizations* Intersection count* Increased parallelism</longdescription>
</pkgmetadata>