<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django DateRange FilterspecAdds a form with AdminDateWidgets that can be used to select a range ofdates for filtering the list of records displayed in an admin Changelist.![Filter list](https://raw.githubusercontent.com/StuartMacKay/django-daterange-filterspec/master/docs/images/screenshot.png)The `From date` selects records with a date equal or greater than the specified date. The `To date` selects record up to, but not includingthe specified date. Either field is optional. If you only enter a date in the `From date` field then all records from that date onwards will bedisplayed. Similarly if you only enter a date in the `To date` field thenonly records before that date will be displayed.## Quick startInstall the package from PyPI:```shellpip install django-daterange-filterspec```The package includes a template, which loads Django's calendar widgetand date shortcuts. Add the package to the INSTALLED_APPS setting so thetemplate loader can find it:```pythonINSTALLED_APPS = (    ...    &quot;daterange.apps.DateRangeFilterConfig&quot;,    ...)```In your ModelAdmin, set the template used for the changelist to the oneprovided by the package. Then, for each field you want to filter oncreate a tuple with the name of the field and the `DateRangeFilter`filter class:```pythonfrom django.contrib import adminfrom daterange.filters import DateRangeFilterfrom .models import Article@admin.register(Article)class ArticleAdmin(admin.ModelAdmin):    list_display = [&quot;title&quot;, &quot;slug&quot;, &quot;published&quot;]    list_filter = [(&quot;published&quot;, DateRangeFilter)]    ordering = [&quot;-created&quot;]    change_list_template = &quot;admin/daterange/change_list.html&quot;```If you're already using a customised changelist template, you can add the necessarycss and javascript files to the Media class for the ModelAdmin:```python@admin.register(Article)class ArticleAdmin(admin.ModelAdmin):    ...    class Media:        css = {&quot;all&quot;: (&quot;admin/css/forms.css&quot;, &quot;css/admin/daterange.css&quot;)}        js = (&quot;admin/js/calendar.js&quot;, &quot;js/admin/DateRangeShortcuts.js&quot;)```Now, go forth and filter!## DemoIf you check out the project from the repository there is a fully functioningDjango site that you can use to see the filter in action.```shellgit clone git@github.com:StuartMacKay/django-daterange-filterspec.gitcd django-daterange-filterspec```Create the virtual environment:```shellpython -m venv venvsource venv/bin/activatepip install --upgrade pip setuptools wheelpip install pip-toolspip-sync requirements/dev.txt```Run the demo:```shellpython manage.py migratepython manage.py createsuperuserpython manage.py runserver```Now log into the Django Admin. In the Demo section, add some Articlesfor different dates and filter away.</longdescription>
</pkgmetadata>