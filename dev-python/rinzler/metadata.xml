<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Rinzler REST FrameworkDjango-based REST Micro-Framework# Install requires```PHPpip install rinzler```# Usage```Python# urls.pyimport osimport rinzlerfrom rinzler.core.main_controller import MainControllerfrom your_controller import ControllerBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))app = rinzler.boot(BASE_DIR)assembler = app['url_assembler']urlpatterns = [    assembler.mount('hello', Controller),    assembler.mount('', MainController),]``````Python# your_controller.pyfrom collections import OrderedDictfrom django.http.request import HttpRequestfrom django.views.generic import TemplateViewfrom rinzler.core.response import Responseclass Controller(TemplateView):    def connect(self, app):        router = app['router']        # map end-points to callbacks here        router.get('/world/', self.hello_world)        router.get('/{name}/', self.hello_user)        return app    # end-point callbacks here:    @staticmethod    def hello_world(request: HttpRequest, app: dict(), **params: dict):        &quot;&quot;&quot;        Default route callback        :param request HttpRequest        :param app Rinzler's object        :param params dict url params, if present        :rtype: Response        &quot;&quot;&quot;        try:            response = OrderedDict()            response[&quot;status&quot;] = True            response[&quot;data&quot;] = &quot;Hello World!&quot;            return Response(response, content_type=&quot;application/json&quot;)        except BaseException as e:            response = OrderedDict()            response[&quot;status&quot;] = False            response[&quot;mensagem&quot;] = str(e)            return Response(response, content_type=&quot;application/json&quot;, status=500)\    @staticmethod    def hello_user(request: HttpRequest, app: dict(), **params: dict):        &quot;&quot;&quot;        Default route callback        :param request HttpRequest        :param app Rinzler's object        :param params dict url params, if present        :rtype: Response        &quot;&quot;&quot;        try:            user = params['name']            response = OrderedDict()            response[&quot;status&quot;] = True            response[&quot;data&quot;] = &quot;Hello {0}!&quot;.format(user)            return Response(response, content_type=&quot;application/json&quot;)        except BaseException as e:            response = OrderedDict()            response[&quot;status&quot;] = False            response[&quot;mensagem&quot;] = str(e)            return Response(response, content_type=&quot;application/json&quot;, status=500)```### Run django```shellpython manage.py runserverAugust 02, 2017 - 18:48:00Django version 1.10.4, using settings 'Demo.settings'Starting development server at http://127.0.0.1:8000/Quit the server with CONTROL-C.```### Sample requests```shellcurl http://localhost:8000/&lt;center&gt;&lt;h1&gt;HTTP/1.1 200 OK RINZLER FRAMEWORK&lt;/h1&gt;&lt;/center&gt;curl http://localhost:8000/hello/world/{  &quot;status&quot;: true,  &quot;data&quot;: &quot;Hello World!&quot;}curl http://localhost:8000/hello/bob/{  &quot;status&quot;: true,  &quot;data&quot;: &quot;Hello bob!&quot;}curl http://localhost:8000/foo/bar/{  &quot;status&quot;: false,  &quot;exceptions&quot;: {    &quot;message&quot;: &quot;No route found for GET foo/bar/&quot;  },  &quot;request&quot;: {    &quot;content&quot;: &quot;&quot;,    &quot;method&quot;: &quot;GET&quot;,    &quot;path_info&quot;: &quot;foo/bar/&quot;  },  &quot;message&quot;: &quot;We are sorry, but something went terribly wrong.&quot;}```</longdescription>
</pkgmetadata>