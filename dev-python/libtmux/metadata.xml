<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># libtmuxlibtmux is a [typed](https://docs.python.org/3/library/typing.html) python scripting library for tmux. You can use it to command and control tmux servers,sessions, windows, and panes. It is the tool powering [tmuxp], a tmux workspace manager.[![Python Package](https://img.shields.io/pypi/v/libtmux.svg)](https://pypi.org/project/libtmux/)[![Docs](https://github.com/tmux-python/libtmux/workflows/docs/badge.svg)](https://libtmux.git-pull.com/)[![Build Status](https://github.com/tmux-python/libtmux/workflows/tests/badge.svg)](https://github.com/tmux-python/tmux-python/actions?query=workflow%3A%22tests%22)[![Code Coverage](https://codecov.io/gh/tmux-python/libtmux/branch/master/graph/badge.svg)](https://codecov.io/gh/tmux-python/libtmux)[![License](https://img.shields.io/github/license/tmux-python/libtmux.svg)](https://github.com/tmux-python/libtmux/blob/master/LICENSE)libtmux builds upon tmux's[target](http://man.openbsd.org/OpenBSD-5.9/man1/tmux.1#COMMANDS) and[formats](http://man.openbsd.org/OpenBSD-5.9/man1/tmux.1#FORMATS) tocreate an object mapping to traverse, inspect and interact with livetmux sessions.View the [documentation](https://libtmux.git-pull.com/),[API](https://libtmux.git-pull.com/api.html) information and[architectural details](https://libtmux.git-pull.com/about.html).# Install```console$ pip install --user libtmux```# Open a tmux sessionSession name `foo`, window name `bar````console$ tmux new-session -s foo -n bar```# Pilot your tmux session via python```console$ python```Use [ptpython], [ipython], etc. for a nice shell with autocompletions:```console$ pip install --user ptpython``````console$ ptpython```Connect to a live tmux session:```python&gt;&gt;&gt; import libtmux&gt;&gt;&gt; s = libtmux.Server()&gt;&gt;&gt; sServer(socket_path=/tmp/tmux-.../default)```Tip: You can also use [tmuxp]'s [`tmuxp shell`] to drop straight into yourcurrent tmux server / session / window pane.[tmuxp]: https://tmuxp.git-pull.com/[`tmuxp shell`]: https://tmuxp.git-pull.com/cli/shell.html[ptpython]: https://github.com/prompt-toolkit/ptpython[ipython]: https://ipython.org/List sessions:```python&gt;&gt;&gt; server.sessions[Session($1 ...), Session($0 ...)]```Filter sessions by attribute:```python&gt;&gt;&gt; server.sessions.filter(history_limit='2000')[Session($1 ...), Session($0 ...)]```Direct lookup:```python&gt;&gt;&gt; server.sessions.get(session_id=&quot;$1&quot;)Session($1 ...)```Find session by dict lookup:```python&gt;&gt;&gt; server.sessions[0].rename_session('foo')Session($1 foo)&gt;&gt;&gt; server.sessions.filter(session_name=&quot;foo&quot;)[0]Session($1 foo)```Control your session:```python&gt;&gt;&gt; session.rename_session('foo')Session($1 foo)&gt;&gt;&gt; session.new_window(attach=False, window_name=&quot;ha in the bg&quot;)Window(@2 2:ha in the bg, Session($1 foo))&gt;&gt;&gt; session.kill_window(&quot;ha in&quot;)```Create new window in the background (don't switch to it):```python&gt;&gt;&gt; session.new_window(attach=False, window_name=&quot;ha in the bg&quot;)Window(@2 2:ha in the bg, Session($1 ...))```Close window:```python&gt;&gt;&gt; w = session.attached_window&gt;&gt;&gt; w.kill_window()```Grab remaining tmux window:```python&gt;&gt;&gt; window = session.attached_window&gt;&gt;&gt; window.split_window(attach=False)Pane(%2 Window(@1 1:... Session($1 ...)))```Rename window:```python&gt;&gt;&gt; window.rename_window('libtmuxower')Window(@1 1:libtmuxower, Session($1 ...))```Split window (create a new pane):```python&gt;&gt;&gt; pane = window.split_window()&gt;&gt;&gt; pane = window.split_window(attach=False)&gt;&gt;&gt; pane.select_pane()Pane(%3 Window(@1 1:..., Session($1 ...)))&gt;&gt;&gt; window = session.new_window(attach=False, window_name=&quot;test&quot;)&gt;&gt;&gt; windowWindow(@2 2:test, Session($1 ...))&gt;&gt;&gt; pane = window.split_window(attach=False)&gt;&gt;&gt; panePane(%5 Window(@2 2:test, Session($1 ...)))```Type inside the pane (send key strokes):```python&gt;&gt;&gt; pane.send_keys('echo hey send now')&gt;&gt;&gt; pane.send_keys('echo hey', enter=False)&gt;&gt;&gt; pane.enter()Pane(%1 ...)```Grab the output of pane:```python&gt;&gt;&gt; pane.clear()  # clear the panePane(%1 ...)&gt;&gt;&gt; pane.send_keys(&quot;cowsay 'hello'&quot;, enter=True)&gt;&gt;&gt; print('\n'.join(pane.cmd('capture-pane', '-p').stdout))  # doctest: +SKIP$ cowsay 'hello' _______&lt; hello &gt; -------        \   ^__^         \  (oo)\_______            (__)\       )\/\                ||----w |                ||     ||...```Traverse and navigate:```python&gt;&gt;&gt; pane.windowWindow(@1 1:..., Session($1 ...))&gt;&gt;&gt; pane.window.sessionSession($1 ...)```# Python supportUnsupported / no security releases or bug fixes:- Python 2.x: The backports branch is  [`v0.8.x`](https://github.com/tmux-python/libtmux/tree/v0.8.x).# DonationsYour donations fund development of new features, testing and support.Your money will go directly to maintenance and development of theproject. If you are an individual, feel free to give whatever feelsright for the value you get out of the project.See donation options at &lt;https://git-pull.com/support.html&gt;.# Project details- tmux support: 1.8+- python support: &gt;= 3.8, pypy, pypy3- Source: &lt;https://github.com/tmux-python/libtmux&gt;- Docs: &lt;https://libtmux.git-pull.com&gt;- API: &lt;https://libtmux.git-pull.com/api.html&gt;- Changelog: &lt;https://libtmux.git-pull.com/history.html&gt;- Issues: &lt;https://github.com/tmux-python/libtmux/issues&gt;- Test Coverage: &lt;https://codecov.io/gh/tmux-python/libtmux&gt;- pypi: &lt;https://pypi.python.org/pypi/libtmux&gt;- Open Hub: &lt;https://www.openhub.net/p/libtmux-python&gt;- Repology: &lt;https://repology.org/project/python:libtmux/versions&gt;- License: [MIT](http://opensource.org/licenses/MIT).</longdescription>
</pkgmetadata>