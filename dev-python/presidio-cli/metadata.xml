<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Presidio CLI[![Test üß™](https://github.com/insightsengineering/presidio-cli/actions/workflows/test-python.yaml/badge.svg)](https://github.com/insightsengineering/presidio-cli/actions/workflows/test-python.yaml)[![SuperLinter ü¶∏‚ôÄÔ∏è](https://github.com/insightsengineering/presidio-cli/actions/workflows/lint.yaml/badge.svg)](https://github.com/insightsengineering/presidio-cli/actions/workflows/lint.yaml)[![PyPI license](https://img.shields.io/pypi/l/presidio-cli.svg)](https://pypi.python.org/pypi/presidio-cli/)[![PyPI version](https://badge.fury.io/py/presidio-cli.svg)](https://badge.fury.io/py/presidio-cli)[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity)[![PyPI download month](https://img.shields.io/pypi/dm/presidio-cli.svg)](https://pypi.python.org/pypi/presidio-cli/)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/presidio-cli.svg)](https://pypi.python.org/pypi/presidio-cli/)CLI tool that analyzes text for PII Entities with [Microsoft Presidio framework](https://github.com/microsoft/presidio).## Prerequisities`Python` version: 3.8, 3.9, 3.10`pipenv` app installed:```shell# check if app is installedpipenv --version# install, if not availablepip install pipenv```## Install `presidio-cli` in a virtual env### Install from Python Package Indexinstall in current python env```shellpython -m pip install presidio-cli```install required apps and presidio-cli in virtual environment```shellpipenv install presidio-cli```### Install from source```shell# clone from gitgit clone https://github.com/insightsengineering/presidio-clicd presidio-cli# install required apps and presidio-clipipenv install --deploy --dev```## Install language models for `spaCy`Load models for the English (en) language using the command presented below. For further information please visit section [models](https://spacy.io/models/en).```shellpython -m spacy download en_core_web_smpython -m spacy download en_core_web_lg```## Configuration file syntaxThe default configuration is taken from the `.presidiocli` file in a current directory.Configuration file supports the following parameters in a yaml file:- language - by default only models and recognizers for `en` are available. The list of [languages](https://microsoft.github.io/presidio/analyzer/languages/) can be extended.- entities - limit list of recognized entities to be listed in parameter. It is mapped directly to `presidio framework`.  List of [supported entities](https://microsoft.github.io/presidio/supported_entities/)- ignore - list of ignored files/folders/directories based on pattern. It is recommended to ignore `Version Control` files, for example `.git`Note: a file requires at least one parameter to be set.An example of yaml configuration file content:```yaml---language: enignore: |  .git  *.cfgentities:  - PERSON  - CREDIT_CARD  - EMAIL_ADDRESS```## Run the Presidio CLIRun the Presidio CLI to execute [Presidio Analyzer](https://microsoft.github.io/presidio/analyzer/)with specified configuration: language, threshold, entities and ignore pre-configured files/paths.### Configuration from a fileAn example of running script with configuration from a file.There are two example `.yaml` configuration files in the [`conf`](presidio_cli/conf) directory:- [default.yaml](presidio_cli/conf/default.yaml) - ignore the `.git` directory- [limited.yaml](presidio_cli/conf/limited.yaml) - limit list of entities used to only 3 of them, ignore `.git` directory and `.cfg` files.  ```shell# run with default configuration (file `.presidiocli`) in the current directorypresidio .# run with configuration limited.yaml in the &quot;tests&quot; directorypresidio -c presidio_cli/conf/limited.yaml tests/# run with configuration limited.yaml in single file only tests/test_analyzer.pypresidio -c presidio_cli/conf/limited.yaml tests/test_analyzer.py```### Configuration as a parameterAn example of using configuration as data in parameter:```shell# ignore paths .git and *.cfgpresidio -d &quot;ignore: |  .git  *.cfg&quot; tests/# limit list of entities to CREDIT_CARDpresidio-d &quot;entities:  - CREDIT_CARD&quot; tests/# equivalent to use -c parameter presidio -d &quot;$(cat presidio_cli/conf/limited.yaml)&quot; tests/```### Formatting outputOutput can be formatted using `-f` or `--format` parameter. The default format is `auto`.Available formats:- standard - standard output format```shellpresidio -d &quot;entities:  - PERSON&quot; -f standard tests/conftest.py# resulttests/conftest.py  34:58     0.85     PERSON  37:33     0.85     PERSON```- github - similar to diff function in github```shellpresidio -d &quot;entities:  - PERSON&quot; -f github tests/conftest.py# result::group::tests/conftest.py::0.85 file=tests/conftest.py,line=34,col=58::34:58 [PERSON] ::0.85 file=tests/conftest.py,line=37,col=33::37:33 [PERSON] ::endgroup::```- colored - standard output format but with colors- parsable - easy to parse automaticaly```shellpresidio -d &quot;entities:  - PERSON&quot; -f parsable tests/conftest.py# result{&quot;entity_type&quot;: &quot;PERSON&quot;, &quot;start&quot;: 57, &quot;end&quot;: 62, &quot;score&quot;: 0.85, &quot;analysis_explanation&quot;: null}{&quot;entity_type&quot;: &quot;PERSON&quot;, &quot;start&quot;: 32, &quot;end&quot;: 37, &quot;score&quot;: 0.85, &quot;analysis_explanation&quot;: null}```- auto - default format, switches automatically between those 2 modes:  - github, if run on github - environment variables `GITHUB_ACTIONS` and `GITHUB_WORKFLOW` are set  - colored, otherwise### List of all parametersSimply run the following to get a list of all available options for the CLI:```shellpresidio --help```</longdescription>
</pkgmetadata>