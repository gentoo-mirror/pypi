<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================fuzzyfinder===============================.. image:: https://img.shields.io/travis/amjith/fuzzyfinder.svg        :target: https://travis-ci.org/amjith/fuzzyfinder.. image:: https://img.shields.io/pypi/v/fuzzyfinder.svg        :target: https://pypi.python.org/pypi/fuzzyfinderFuzzy Finder implemented in Python. Matches partial string entries from a listof strings. Works similar to fuzzy finder in SublimeText and Vim's Ctrl-Pplugin.* Documentation: https://fuzzyfinder.readthedocs.org.* Source: https://github.com/amjith/fuzzyfinder.. image:: https://raw.githubusercontent.com/amjith/fuzzyfinder/master/screenshots/pgcli-fuzzy.gif Quick Start-----------::    $ pip install fuzzyfinder    or     $ easy_install fuzzyfinderUsage-----::    &gt;&gt;&gt; from fuzzyfinder import fuzzyfinder    &gt;&gt;&gt; suggestions = fuzzyfinder('abc', ['abcd', 'defabca', 'aagbec', 'xyz', 'qux'])    &gt;&gt;&gt; list(suggestions)    ['abcd', 'defabca', 'aagbec']Features--------* Simple, easy to understand code.* No external dependencies, just the python std lib.How does it work----------------Blog post describing the algorithm: http://blog.amjith.com/fuzzyfinder-in-10-lines-of-pythonSimilar Projects----------------* https://github.com/seatgeek/fuzzywuzzy - Fuzzy matching and auto-correction using levenshtein distance.Changelog---------2.0.0 (2017-01-25)---------------------* Case insensitive matching. (Gokul Soumya)* Add an accessor function for fuzzy find. (Amjith)* Support integer inputs. (Matheus)2.1.0 (2017-01-25)---------------------* Use lookahead regex to find shortest match. (Gokul Soumya)</longdescription>
</pkgmetadata>