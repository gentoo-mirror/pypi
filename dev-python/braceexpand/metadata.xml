<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Bash-style brace expansion for Python=====================================|build-status-img| |PyPI|Implements Brace Expansion as described in`bash(1) &lt;http://man7.org/linux/man-pages/man1/bash.1.html#EXPANSION&gt;`__,with the following limitations:-  A pattern containing unbalanced braces will raise an   ``UnbalancedBracesError`` exception. In bash, unbalanced braces will   either be partly expanded or ignored.-  A mixed-case character range like ``'{Z..a}'`` or ``'{a..Z}'`` will   not include the characters :literal:`[]^_\`` between ``Z`` and ``a``.``braceexpand`` is tested with Python 2.7, and 3.6+Installation------------Install the ``braceexpand`` package from pypi:::   $ pip install braceexpandExamples--------The ``braceexpand`` function returns an iterator over the expansionsgenerated from a pattern... code:: python   &gt;&gt;&gt; from braceexpand import braceexpand   # Integer range   &gt;&gt;&gt; list(braceexpand('item{1..3}'))   ['item1', 'item2', 'item3']   # Character range   &gt;&gt;&gt; list(braceexpand('{a..c}'))   ['a', 'b', 'c']   # Sequence   &gt;&gt;&gt; list(braceexpand('index.html{,.backup}'))   ['index.html', 'index.html.backup']   # Nested patterns   &gt;&gt;&gt; list(braceexpand('python{2.{5..7},3.{2,3}}'))   ['python2.5', 'python2.6', 'python2.7', 'python3.2', 'python3.3']   # Prefixing an integer with zero causes all numbers to be padded to   # the same width.   &gt;&gt;&gt; list(braceexpand('{07..10}'))   ['07', '08', '09', '10']   # An optional increment can be specified for ranges.   &gt;&gt;&gt; list(braceexpand('{a..g..2}'))   ['a', 'c', 'e', 'g']   # Ranges can go in both directions.   &gt;&gt;&gt; list(braceexpand('{4..1}'))   ['4', '3', '2', '1']   # Numbers can be negative   &gt;&gt;&gt; list(braceexpand('{2..-1}'))   ['2', '1', '0', '-1']   # Unbalanced braces raise an exception.   &gt;&gt;&gt; list(braceexpand('{1{2,3}'))   Traceback (most recent call last):       ...   UnbalancedBracesError: Unbalanced braces: '{1{2,3}'   # By default, the backslash is the escape character.   &gt;&gt;&gt; list(braceexpand(r'{1\{2,3}'))   ['1{2', '3']   # Setting 'escape' to False disables backslash escaping.   &gt;&gt;&gt; list(braceexpand(r'\{1,2}', escape=False))   ['\\1', '\\2']License-------braceexpand is licensed under the MIT License. See the included file``LICENSE`` for details... |build-status-img| image:: https://travis-ci.org/trendels/braceexpand.svg   :target: https://travis-ci.org/trendels/braceexpand.. |PyPI| image:: https://img.shields.io/pypi/v/braceexpand   :target: https://pypi.python.org/pypi/braceexpand</longdescription>
</pkgmetadata>