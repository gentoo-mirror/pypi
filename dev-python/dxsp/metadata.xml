<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DXSP (DeX SwaP)|&lt;img width=&quot;200&quot; alt=&quot;Logo&quot; src=&quot;https://user-images.githubusercontent.com/8766259/231213427-63ea2752-13d5-4993-aee2-90671b57fc6e.png&quot;&gt;  | A python defi swap helper package. Swap made easy. || ------------- | ------------- ||[![Pypi](https://badgen.net/badge/icon/dxsp?icon=pypi&amp;label)](https://pypi.org/project/dxsp/) ![Version](https://img.shields.io/pypi/v/dxsp)&lt;br&gt;  ![Pypi](https://img.shields.io/pypi/dm/dxsp) [![Docker Pulls](https://badgen.net/docker/pulls/mraniki/dxsp)](https://hub.docker.com/r/mraniki/dxsp)&lt;br&gt;[![âœ¨Flow](https://github.com/mraniki/dxsp/actions/workflows/%E2%9C%A8Flow.yml/badge.svg)](https://github.com/mraniki/dxsp/actions/workflows/%E2%9C%A8Flow.yml) [![codecov](https://codecov.io/gh/mraniki/dxsp/branch/main/graph/badge.svg?token=39ED0ZA6IH)](https://codecov.io/gh/mraniki/dxsp) &lt;br&gt;![](https://healthchecks.io/badge/227be4cc-702a-4ac8-b37b-d3d5a3/UcTrNrys-2/dxsp.svg)&lt;br&gt;[![Web3](https://badgen.net/badge/icon/web3/black?icon=libraries&amp;label)](https://github.com/ethereum/web3.py) [![coingecko](https://badgen.net/badge/icon/coingecko/black?icon=libraries&amp;label)](https://github.com/coingecko)|24 blockchains (ETH, BSC, ARB, MATIC, OPT...)&lt;br&gt;2 swap protocol (1inch API, UniV2 router)Key features:- Any blockchains mainnet or testnet supported by web3py, 1inch or uniswap type router.- 2 swap protocol type supported:- 1inch API v5- Uniswap version 2 router protocol typeOther features:- Translate token symbol to contract address via user defined tokenlist format or coingecko api - Connect to web3 if no web3 object or no rpc provided- Able to approve contract and sign transaction- Quote for a given token- Use Base symbol like stablecoin- Settings to use the modile for your own tool/bot# Install`pip install dxsp`# How to use it```from dxsp import DexSwapdex = DexSwap()#BUY 10 USDC to SWAP with BITCOINdemo_tx = await dex.get_swap('USDT','wBTC',10)print(&quot;demo_tx &quot;, demo_tx)```## Example[example](https://github.com/mraniki/dxsp/blob/main/examples/example.py)## Real use case[TalkyTrader, submit trading order to CEX &amp; DEX with messaging platform (Telegram, Matrix and Discord)](https://github.com/mraniki/tt)# Documentationhttps://github.com/mraniki/dxsp/wiki## ðŸš§ Roadmap[ðŸš§ Roadmap](https://github.com/mraniki/dxsp/milestones)## Questions? Want to help? [![discord](https://badgen.net/badge/icon/discord/purple?icon=discord&amp;label)](https://discord.gg/vegJQGrRRa)[![telegram](https://badgen.net/badge/icon/telegram?icon=telegram&amp;label)](https://t.me/TTTalkyTraderChat/1)</longdescription>
</pkgmetadata>