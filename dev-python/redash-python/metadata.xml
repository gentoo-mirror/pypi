<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Redash API Python Clientpython package for interacting with the Redash API[![view - Documentation](https://img.shields.io/badge/PyPi-0.3.27-blue?style=for-the-badge)](https://pypi.org/project/redash-python &quot;view package on PyPi&quot;)&amp;nbsp;&amp;nbsp;&amp;nbsp;[![view - Documentation](https://img.shields.io/badge/view-Documentation-blue?style=for-the-badge)](https://redash.blacksuan19.dev/ &quot;go to documentation&quot;)&amp;nbsp;&amp;nbsp;&amp;nbsp;[![GitHub Actions](https://img.shields.io/badge/github%20actions-%232671E5.svg?style=for-the-badge&amp;logo=githubactions&amp;logoColor=white)](# &quot;Build with github actions&quot;)## Features- Complete access to all endpoints in the Redash API.- Pagination by default.- Duplicate dashboards.- Manage users and groups.- Duplicate queries with different source tables.### Implemented Services- [x] Dashboards- [x] Queries- [x] Data Sources- [x] Alerts- [x] Users- [x] Destinations- [x] Groups- [x] query_snippets- [x] Widgets\*\* widgets endpoint does not support GET requests, only update, delete andcreate.## Getting Startedan API key is required in addition to the instance's host URL.### Installation```bashpip install redash-python```### Usage```pythonfrom redash_python import Redashrd = Redash(base_url=&quot;&quot;, api_key=&quot;&quot;)# get all dashboardsdashboards = rd.dashboards.get_all()# get specific dashboards by iddash = rd.dashboards.get(1)# get by slug or namequery = rd.queries.get_by_name(&quot;my-dashboard&quot;)# get by tagsq = rd.queries.get_by_tags([&quot;my-tag&quot;])# get without tagsdash = rd.dashboards.get_by_tags([&quot;my-tag&quot;], without=True)# Duplicate query with a different table as sourceques = rd.queriesques.duplicate_query_table(    query=ques.get(1),    table_map={&quot;old_table&quot;: &quot;new_table&quot;},    tags=[&quot;admin&quot;, &quot;test&quot;],    publish=True,)# get a list of implemented API endpointsprint(rd.services)# get a list of implemented endpoints in a serviceprint(rd.users)```for a full list of implemented methods in each service, print the serviceobject.```python&gt;&gt;&gt; print(client.dashboards)DashboardsService(attributes: ['endpoint'], methods: ['create', 'create_widget', 'delete', 'duplicate', 'exists', 'favorite', 'favorited', 'get', 'get_all', 'get_by_name', 'get_by_tags', 'get_id', 'get_slug', 'paginate', 'publish', 'refresh', 'share', 'unfavorite', 'unpublish', 'update'])```for more examples on usage, see examples folder on github.## Developmentbefore starting development, install dev dependencies:```bashpip install redash-python[dev]```### Architecturethis library implements a services based architecture splitting each APIendpoint group to its own service, on top of which is the `Redash` class. allthe services share base classes from mixins that make it easier to share commonbehavior and allows rapid development for any new endpoints. for instance addingquery_snippets is as simple as:```pythonfrom .base import BaseServicefrom .mixins import CommonMixin, NameMixin, PrintMixinclass QSnipsService(CommonMixin, NameMixin, PrintMixin):    def __init__(self, base: BaseService) -&gt; None:        # init mixins        CommonMixin.__init__(self, base)        self.__base = base        self.endpoint = &quot;/api/query_snippets&quot;```### Directory Structure```bashredash_python├── __init__.py├── redash.py               # Services wrapper└── services                # implemented services    ├── base.py             # Base service class    └── mixins.py           # Mixins for services with shared functionality```## ContributingContributions are welcome, please open an issue or PR to propose any changes.## License[![view - Documentation](https://img.shields.io/badge/License-BSD%202%20Clause-green?style=for-the-badge)](https://github.com/Blacksuan19/redash-python/blob/master/LICENSE &quot;View License&quot;)</longdescription>
</pkgmetadata>