<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========JSONPATH========|license| |Pypi Status| |Python version| |Package version| |PyPI - Downloads||GitHub last commit| |Code style: black| |Build Status| |codecov| |PDM managed|A selector expression for extracting data from JSON.Quickstarts&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;Installation~~~~~~~~~~~~Install the stable version from PYPI... code-block:: shell    pip install jsonpath-extractorOr install the latest version from Github... code-block:: shell    pip install git+https://github.com/linw1995/jsonpath.git@masterUsage~~~~~.. code-block:: json    {        &quot;goods&quot;: [            {&quot;price&quot;: 100, &quot;category&quot;: &quot;Comic book&quot;},            {&quot;price&quot;: 200, &quot;category&quot;: &quot;magazine&quot;},            {&quot;price&quot;: 200, &quot;no category&quot;: &quot;&quot;}        ],        &quot;targetCategory&quot;: &quot;book&quot;    }How to parse and extract all the comic book data from the above JSON file... code-block:: python3    import json    from jsonpath import parse    with open(&quot;example.json&quot;, &quot;r&quot;) as f:        data = json.load(f)    assert parse(&quot;$.goods[contains(@.category, $.targetCategory)]&quot;).find(data) == [        {&quot;price&quot;: 100, &quot;category&quot;: &quot;Comic book&quot;}    ]Or use the `jsonpath.core &lt;https://jsonpath.readthedocs.io/en/latest/api_core.html&gt;`_ module to extract it... code-block:: python3    from jsonpath.core import Root, Contains, Self    assert Root().Name(&quot;goods&quot;).Predicate(        Contains(Self().Name(&quot;category&quot;), Root().Name(&quot;targetCategory&quot;))    ).find(data) == [{&quot;price&quot;: 100, &quot;category&quot;: &quot;Comic book&quot;}]Usage via CLI~~~~~~~~~~~~~The faster way to extract by using CLI... code-block:: shell    jp -f example.json &quot;$.goods[contains(@.category, $.targetCategory)]&quot;Or pass content by pipeline... code-block:: shell    cat example.json | jp &quot;$.goods[contains(@.category, $.targetCategory)]&quot;The output of the above commands... code-block:: json    [      {        &quot;price&quot;: 100,        &quot;category&quot;: &quot;Comic book&quot;      }    ]Changelog&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;v0.8.0~~~~~~Features********- 69ff6cb_ add iter_find and find_first methods- be22151_ better JSONPath object representationsRefactor********- 9d9d78f_ raise AttributeError by object.__getattribute__- 4191b8c_ not registers base class &quot;Expr&quot; for chaining invocationsBuild*****- cc6ab56_ 2040721_ upgrade lark-parser package to latest- fb7e902_ fit with latest PDM- 10ea6d3_ excludes .mypy_cache for local buildFix***- 1dccec1_ fix: right way to generate standalone parser.. _69ff6cb: https://github.com/linw1995/jsonpath/commit/69ff6cb47a08d3f957224adb163970454b6a1c87.. _be22151: https://github.com/linw1995/jsonpath/commit/be221513bd8a1821e8007eb1c2d4f10aa6d3f987.. _9d9d78f: https://github.com/linw1995/jsonpath/commit/9d9d78fd60b7b284c446c06e7102d05decd24c2b.. _4191b8c: https://github.com/linw1995/jsonpath/commit/4191b8c745871733e58e97be11cdbcd845870484.. _cc6ab56: https://github.com/linw1995/jsonpath/commit/cc6ab56.. _2040721: https://github.com/linw1995/jsonpath/commit/2040721.. _1dccec1: https://github.com/linw1995/jsonpath/commit/1dccec1.. _fb7e902: https://github.com/linw1995/jsonpath/commit/fb7e902.. _10ea6d3: https://github.com/linw1995/jsonpath/commit/10ea6d3Contributing&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;Environment Setup~~~~~~~~~~~~~~~~~Clone the source codes from Github... code-block:: shell    git clone https://github.com/linw1995/jsonpath.git    cd jsonpathSetup the development environment.Please make sure you install the pdm_,pre-commit_ and nox_ CLIs in your environment... code-block:: shell    make init    make PYTHON=3.7 init  # for specific python versionLinting~~~~~~~Use pre-commit_ for installing linters to ensure a good code style... code-block:: shell    make pre-commitRun linters. Some linters run via CLI nox_, so make sure you install it... code-block:: shell    make check-allTesting~~~~~~~Run quick tests... code-block:: shell    makeRun quick tests with verbose... code-block:: shell    make vtestRun tests with coverage.Testing in multiple Python environments is powered by CLI nox_... code-block:: shell    make covDocumentation~~~~~~~~~~~~~Run serving documents with live-reloading... code-block:: shell    make serve-docs.. _pdm: https://github.com/pdm-project/pdm.. _pre-commit: https://pre-commit.com/.. _nox: https://nox.thea.codes/en/stable/.. |license| image:: https://img.shields.io/github/license/linw1995/jsonpath.svg    :target: https://github.com/linw1995/jsonpath/blob/master/LICENSE.. |Pypi Status| image:: https://img.shields.io/pypi/status/jsonpath-extractor.svg    :target: https://pypi.org/project/jsonpath-extractor.. |Python version| image:: https://img.shields.io/pypi/pyversions/jsonpath-extractor.svg    :target: https://pypi.org/project/jsonpath-extractor.. |Package version| image:: https://img.shields.io/pypi/v/jsonpath-extractor.svg    :target: https://pypi.org/project/jsonpath-extractor.. |PyPI - Downloads| image:: https://img.shields.io/pypi/dm/jsonpath-extractor.svg    :target: https://pypi.org/project/jsonpath-extractor.. |GitHub last commit| image:: https://img.shields.io/github/last-commit/linw1995/jsonpath.svg    :target: https://github.com/linw1995/jsonpath.. |Code style: black| image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/ambv/black.. |Build Status| image:: https://github.com/linw1995/jsonpath/workflows/Lint&amp;Test/badge.svg    :target: https://github.com/linw1995/jsonpath/actions?query=workflow%3ALint%26Test.. |codecov| image:: https://codecov.io/gh/linw1995/jsonpath/branch/master/graph/badge.svg    :target: https://codecov.io/gh/linw1995/jsonpath.. |PDM managed| image:: https://img.shields.io/badge/pdm-managed-blueviolet    :target: https://pdm.fming.dev</longdescription>
</pkgmetadata>