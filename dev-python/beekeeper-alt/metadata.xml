<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>beekeeper |Build Status| |Read Docs|====================================Description-----------beekeeper is a Python library designed around dynamically generating aRESTful client interface based on a minimal JSON hive.The hive specification is designed to provide beekeeper (or otherapplications consuming hive files) with programmatically-designedinsight into the structure of both the REST endpoints that are availableand the objects and methods that those endpoints represent.While the classes available in beekeeper can be used manually to createPythonic representations of REST endpoints, it is strongly preferredthat the library be used as a whole with a constructed hive file. AsAPIs become larger in scale (in terms of the number of endpoints andrepresented objects), the time benefit of beekeeper becomes morepronounced, as adding additional objects and endpoints is a trivialprocess.Requirements------------beekeeper requires Python 2.7.9/3.4.3 or higher and their built-inmodules, as well as xmltodict.Installation------------.. code:: python   pip install beekeeperUsage-----The usage of beekeeper will depend on what features are provided by theperson who wrote the hive file. There are a number of ways that the hivewriter can make your life easier. Regardless, at a base level, usage willlook something like this:.. code:: python    from beekeeper import API    myAPI = API.from_hive_file('fname.json')    x = myAPI.Widgets.action(id='foo', argument='bar')If the hive developer defines an ID variable for the object you're workingwith, you can subscript, dictionary style:.. code:: python    x = myAPI.Widgets['foo'].action(argument='bar')If you've only got one remaining argument in the method call, you don't evenneed to name it! You can do something like this:.. code:: python   x = myAPI.Widgets['foo'].action('bar')This also holds true if you have multiple variables, but the other ones areassigned by name:.. code:: python   x = myAPI.Widgets['foo'].action('bar', var2='baz')If you're using a hive file, then it should define which variables are needed.If you try to call a function without filling in that variable, it shouldautomatically yell at you and tell you what variables are missing. Since thesevariables are defined within the hive, beekeeper will do the work for you, automatically determine what data type a particular variable is, and put itexactly where it needs to go.beekeeper will also automatically handle parsing data. When yousend data, beekeeper will read the MIME type that was defined in the variablefor that data, and try to automatically move it from a &quot;Python&quot; format (e.g., a dictionary) to the right REST API format (e.g., JSON).This holds true in the other direction as well; beekeeper will read the MIMEtype of the response data, and hand it back to you in a Pythonic format! Ifbeekeeper doesn't know how to handle the data, it'll just give you the rawbytes so that you can do what you need to with them.Notes-----beekeeper does not currently do SSL certificate verification when usedon Python versions earlier than 2.7.9 or 3.4.3... |Build Status| image:: https://travis-ci.org/haikuginger/beekeeper.svg?branch=master   :target: https://travis-ci.org/haikuginger/beekeeper.. |Read Docs| image:: https://readthedocs.org/projects/beekeeper/badge/?version=latest    :target: http://beekeeper.readthedocs.org/en/latest/?badge=latest    :alt: Documentation Status</longdescription>
</pkgmetadata>