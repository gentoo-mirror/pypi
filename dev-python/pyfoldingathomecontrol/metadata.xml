<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyFoldingAtHomeControlPython library to get stats from your Folding@Home Clients[![GitHub Actions](https://github.com/eifinger/PyFoldingAtHomeControl/workflows/Python%20package/badge.svg)](https://github.com/eifinger/PyFoldingAtHomeControl/actions?workflow=Python+package)[![PyPi](https://img.shields.io/pypi/v/PyFoldingAtHomeControl.svg)](https://pypi.python.org/pypi/PyFoldingAtHomeControl)[![PyPi](https://img.shields.io/pypi/l/PyFoldingAtHomeControl.svg)](https://github.com/eifinger/PyFoldingAtHomeControl/blob/master/LICENSE)[![codecov](https://codecov.io/gh/eifinger/PyFoldingAtHomeControl/branch/master/graph/badge.svg)](https://codecov.io/gh/eifinger/PyFoldingAtHomeControl)[![Downloads](https://pepy.tech/badge/pyfoldingathomecontrol)](https://pepy.tech/project/pyfoldingathomecontrol)## Installation```bashpip install PyFoldingAtHomeControl```## Usage```pythonimport asynciofrom FoldingAtHomeControl import FoldingAtHomeControllerfrom FoldingAtHomeControl import PyOnMessageTypesdef callback(message_type, data):    print(f&quot;callback for: {message_type}: &quot;, data)async def cancel_task(task_to_cancel):    task_to_cancel.cancel()    await task_to_cancelif __name__ == &quot;__main__&quot;:    Controller = FoldingAtHomeController(&quot;localhost&quot;)    Controller.register_callback(callback)    loop = asyncio.get_event_loop()    task = loop.create_task(Controller.start())    try:        loop.run_until_complete(task)    except KeyboardInterrupt:        pass    finally:        print(&quot;Cancelling task&quot;)        try:            loop.run_until_complete(cancel_task(task))        except asyncio.CancelledError:            print(&quot;Closing Loop&quot;)            loop.close()```</longdescription>
</pkgmetadata>