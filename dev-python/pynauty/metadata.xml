<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build and test](https://github.com/pdobsan/pynauty/actions/workflows/build-and-test.yml/badge.svg)](https://github.com/pdobsan/pynauty/actions/workflows/build-and-test.yml)# Pynauty Pynauty can be used to compare graphs for isomorphism and to determinetheir automorphism group in a Python programming environment.  Pynautyis a Python/C extension module using library components from the[Nauty](https://pallini.di.uniroma1.it/) package by Brendan McKay.Current version is distributed and has been tested with `nauty2_8_6`.## UsageHere is an example of `pynauty`'s usage in an interactive session.```python&gt;&gt;&gt; from pynauty import *&gt;&gt;&gt; g = Graph(5)&gt;&gt;&gt; g.connect_vertex(0, [1, 2, 3])&gt;&gt;&gt; g.connect_vertex(2, [1, 3, 4])&gt;&gt;&gt; g.connect_vertex(4, [3])&gt;&gt;&gt; print(g)Graph(number_of_vertices=5, directed=False, adjacency_dict = {  0: [1, 2, 3],  2: [1, 3, 4],  4: [3], }, vertex_coloring = [ ],)&gt;&gt;&gt; autgrp(g)([[3, 4, 2, 0, 1]], 2.0, 0, [0, 1, 2, 0, 1], 3)&gt;&gt;&gt; &gt;&gt;&gt; g.connect_vertex(1, [3])&gt;&gt;&gt; autgrp(g)([[0, 1, 3, 2, 4], [1, 0, 2, 3, 4]], 4.0, 0, [0, 0, 2, 2, 4], 3)&gt;&gt;&gt;&gt;&gt;&gt; g.set_vertex_coloring([set([3])])&gt;&gt;&gt; print(g)Graph(number_of_vertices=5, directed=False, adjacency_dict = {  0: [1, 2, 3],  1: [3],  2: [1, 3, 4],  4: [3], }, vertex_coloring = [  set([3]),  set([0, 1, 2, 4]), ],)&gt;&gt;&gt; autgrp(g)([[1, 0, 2, 3, 4]], 2.0, 0, [0, 0, 2, 3, 4], 4)&gt;&gt;&gt;```Please note that multigraphs are not supported, but this limitation can beworked around by encoding multigraphs as simple graphs. For details, see thedocumentation and Nauty's manual.## Installation### Installing from [PyPi](https://pypi.org/project/pynauty/)You can install `pynauty` using `pip`, just type```bashpip install --upgrade pynauty```Many binary wheels are provided for recent Linux and macOS systems.When your system is not compatible with any of the provided binarywheels `pip` attempts to build the wheel of the extension module in yourlocal system. This happens automatically and the process is transparentto the user.  For local builds `pip` expects that the [requiredtools](#requirements) are available.You can force the local (re)compilation during install by issuing```bashpip install --no-binary pynauty pynauty```Regardless of which way the installation was accomplished, afterwardsyou can test the result by running the provided tests.```bashpython &lt;path-to-installed-package&gt;/pynauty/tests/test_minimal.py```If you have `pytest` installed then you can run the full test suit byissuing```bashpip install pytestpython -m pytest &lt;path-to-installed-package&gt;/pynauty```That takes a few seconds but then you can be sure in having a binarycompatible module.## DocumentationThe `pynauty` package comes with an HTML documentation with examples.You can read it with your favorite browser:```bash&lt;your-browser&gt;  &lt;path-to-installed-package&gt;/pynauty/docs/html/index.html```### Building manually from sources#### RequirementsApart from Python the requirements are the same as for building Nauty.- Python 3.8 - 3.10 - An ANSI C compiler - GNU make#### Download sourcesYou can download the source distribution form[PyPi](https://pypi.org/project/pynauty/) by issuing:```bashpip download --no-binary pynauty pynauty```Please note, the source distribution also contains Nauty2_8_6's source.#### Build, test, installIf you really are interested in the low level details then unpack thedownloaded source distribution, change into `pynauty`'s directory andtype `make`.  The Makefile is self-documenting in the sense thatinvoking `make` without arguments will list all available targets withshort explanations.## ContributingQuestions, bug reports, pull requests, especially the ones extending thePython module's functionality, are welcome. Please, open an issue firstto discuss what you would like to change.Pull requests must be made on a dedicated `topic-branch` of your choiceand not against `upstream/main`.  Before submitting a pull request, makesure that your fork is up to date with upstream. Also update tests,documentation, examples as appropriate with the changes in your PR. ### Contributors  - @goens helped creating `pytest` components.  - Sam Morley-Short (@sammorley-short) added `canon_label()` function.    - Frank Bryce fixed the issue of misleadingly accepting multigraphs.## LicensePynauty is distributed under the terms of GPL v3 WITHOUT ANY WARRANTY.For the exact details on licensing see the file `COPYING`.Please note, Nauty is covered by its own licensing terms. For the exactdetails see the file `src/nauty2_8_6/COPYRIGHT`.</longdescription>
</pkgmetadata>