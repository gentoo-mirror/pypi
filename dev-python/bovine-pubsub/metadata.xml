<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># bovine_pubsubbovine_pubsub is a simple wrapper to enable [server sent events](https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events) in bovine. These are used to communicate real time with clients without forcing them to use polling. If multiple workers are used with `bovine`, one needs to use Redis as the implementation with queues only works for a single process.## UsageThe simplest usage example is given by```pythonfrom quart import Quartfrom bovine_pubsub import BovinePubSubapp = Quart(__name__)BovinePubSub(app)```it adds the config variable `app.config[&quot;bovine_pub_sub&quot;]` to the Quart application. By calling```pythonawait app.config[&quot;bovine_pub_sub&quot;].send(&quot;channel:test&quot;, b&quot;test&quot;)```one sends the bytes `b&quot;test&quot;` to the channel `channel:test`. By calling```pythonpub_sub.event_stream(&quot;channel:test&quot;)```one receives an async iterator that can be used as server sent events.## Example usageA usage example is provided by `examples/basic_app.py`. By running```bashpython examples/basic.app```one can start a server that sends &quot;test&quot; 10 times a new socket is opened on `localhost:5000`. The above implementation will use the local queues. To use with Redis start```bashBOVINE_REDIS=redis://localhost:6379 python examples/basic_app.py ```with an appropriate value for the environment variable `BOVINE_REDIS`.</longdescription>
</pkgmetadata>