<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>HybridContents======================The `HybridContentManager` was originally created by [Quantopian](https://www.quantopian.com/) as part of [pgcontents](https://github.com/quantopian/pgcontents); however, the usage of `HybridContentsManager` was restricted to the compatibility requirements of [pgcontents](https://github.com/quantopian/pgcontents). These restrictions included `postgres` dependencies and no support for the latest [notebook](https://pypi.org/project/notebook/) version (&gt;6).At [Viaduct](https://viaduct.ai) we used [pgcontents](https://github.com/quantopian/pgcontents) exclusively for the `HybridContentsManager` and wanted to extend its functionality, so we created this fork [hybridcontents](https://github.com/viaduct-ai/hybridcontents).See related [pgcontents](https://github.com/quantopian/pgcontents) issues:- https://github.com/quantopian/pgcontents/issues/66- https://github.com/quantopian/pgcontents/issues/50- https://github.com/quantopian/pgcontents/issues/28Getting Started---------------**Prerequisites:** - A Python installation with [Jupyter Notebook](https://github.com/jupyter/notebook) &gt;= 4.0.**Installation:**#### [pip](https://pypi.org/project/hybridcontents/)```bashpip install hybridcontents```#### [Anaconda](https://anaconda.org/viaduct/hybridcontents)```bashconda install -c viaduct hybridcontents```#### [conda-forge](https://github.com/conda-forge/hybridcontents-feedstock)See instructions [here](https://github.com/conda-forge/hybridcontents-feedstock#installing-hybridcontents)Features------ Mix and match different content managers for different directories - Easily move files between different content managers (i.e local files to s3 backed manager) - Path validation to keep consistent naming scheme and/or prevent illegal charactersUsage-----For a detailed example see, [hybrid_manager_example.py](https://github.com/viaduct-ai/hybridcontents/blob/master/examples/hybrid_manager_example.py)The following code snippet creates a HybridContentsManager with two directories with different content managers. ```pythonc = get_config()c.NotebookApp.contents_manager_class = HybridContentsManagerc.HybridContentsManager.manager_classes = {    # NOTE: LargFileManager only exists in notebook &gt; 5    # If using notebook &lt; 5, use FileContentManager instead    &quot;&quot;: LargeFileManager,    &quot;shared&quot;: S3ContentsManager}# Each item will be passed to the constructor of the appropriate content manager.c.HybridContentsManager.manager_kwargs = {    # Args for root LargeFileManager    &quot;&quot;: {        &quot;root_dir&quot;: read_only_dir    },    # Args for the shared S3ContentsManager directory    &quot;shared&quot;: {        &quot;access_key_id&quot;: ...,        &quot;secret_access_key&quot;: ...,        &quot;endpoint_url&quot;:  ...,        &quot;bucket&quot;: ...,        &quot;prefix&quot;: ...    },}def only_allow_notebooks(path):  return path.endswith('.ipynb')# Only allow notebook files to be stored in S3c.HybridContentsManager.path_validators = {    &quot;shared&quot;: only_allow_notebooks}```Testing-------To run unit tests, ```bashtox```This will run all unit tests for python versions 2.7, 3.6, 3.7 and jupyter notebook versions 4, 5, and 6.### Publishing a Release1. Create a new release on Github2. Update the version in `setup.py`3. Run ./scripts/pip_publish.sh4. Update the version `meta.yaml`5. Update the [sha256 in meta.yaml](https://github.com/conda-forge/staged-recipes/wiki/Frequently-asked-questions#2-how-do-i-populate-the-hash-field)6. Run ./scripts/anaconda_publish.sh7. Update on Conda Forge</longdescription>
</pkgmetadata>