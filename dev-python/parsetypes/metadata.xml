<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># parsetypesThis Python package provides tools for parsing serialised data to recover their original underlying types.[![](https://img.shields.io/badge/PyPI--inactive?style=social&amp;logo=pypi)](https://pypi.org/project/parsetypes/) [![](https://img.shields.io/badge/GitHub--inactive?style=social&amp;logo=github)](https://github.com/yushiyangk/parsetypes) [![](https://img.shields.io/badge/Documentation--inactive?style=social&amp;logo=readthedocs)](https://parsetypes.gnayihs.uy/)## OverviewThe `TypeParser` class provides configurable type inference and parsing. This can be [initialised with different settings](https://parsetypes.gnayihs.uy/parsetypes.html#TypeParser.__init__) to, for example:- allow `None` (null values) or not- treat `inf` as either a float or a normal string- give exact Decimal values instead of floats- detect inline lists## Install```pip install parsetypes```## Basic examplesImport parser:```pythonfrom parsetypes import TypeParser```Parse a single value:```pythonparser = TypeParser()parser.parse(&quot;1.2&quot;)   # 1.2parser.parse(&quot;true&quot;)  # Trueparser.parse(&quot;&quot;)      # None```Parse a series so that it has a consistent type:```pythonparser = TypeParser()parser.parse_series([&quot;0&quot;, &quot;1&quot;, &quot;2&quot;])         # [0, 1, 2]parser.parse_series([&quot;0&quot;, &quot;1.2&quot;, &quot;&quot;])        # [0.0, 1.2, None]parser.parse_series([&quot;false&quot;, &quot;true&quot;, &quot;&quot;])   # [False, True, None]parser.parse_series([&quot;false&quot;, &quot;true&quot;, &quot;2&quot;])  # [0, 1, 2]parser.parse_series([&quot;1&quot;, &quot;2.3&quot;, &quot;abc&quot;])     # [&quot;1&quot;, &quot;2.3&quot;, &quot;abc&quot;]```Parse a table so that each column is of a consistent type:```pythonparser = TypeParser()table = parser.parse_table([[&quot;0&quot;, &quot;3&quot;,   &quot;false&quot;, &quot;false&quot;, &quot;7&quot;],[&quot;1&quot;, &quot;4.5&quot;, &quot;true&quot;,  &quot;true&quot;,  &quot;8.9&quot;],[&quot;2&quot;, &quot;&quot;,    &quot;&quot;,      &quot;6&quot;,     &quot;abc&quot;],]):assert table == [[0, 3.0,  False, 0, &quot;7&quot;],[1, 4.5,  True,  1, &quot;8.9&quot;],[2, None, None,  6, &quot;abc&quot;],]```The main contribution of this module lies in the [`infer_series()`](https://parsetypes.gnayihs.uy/parsetypes.html#TypeParser.infer_series) and [`infer_table()`](https://parsetypes.gnayihs.uy/parsetypes.html#TypeParser.infer_table) functions, which are also called by `parse_series()` and `parse_table()`.## IssuesFound a bug? Please [report an issue](https://github.com/yushiyangk/parsetypes/issues), or, better yet, [contribute a bugfix](https://github.com/yushiyangk/parsetypes/blob/main/CONTRIBUTING.md).## ChangelogThis project follows [PEP 440](https://peps.python.org/pep-0440/) and [Semantic Versioning (SemVer)](https://semver.org/spec/v2.0.0.html). In addition to the guarantees specified by SemVer, for versions before 1.0, this project guarantees backwards compatibility of the API for patch version updates (0.&lt;var&gt;y&lt;/var&gt;.&lt;b&gt;&lt;var&gt;z&lt;/var&gt;&lt;/b&gt;).The recommended version specifier is &lt;code&gt;parsetypes ~= &lt;var&gt;x&lt;/var&gt;.&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; for version 1.0 and later, and &lt;code&gt;parsetypes ~= &lt;var&gt;0&lt;/var&gt;.&lt;var&gt;y&lt;/var&gt;.&lt;var&gt;z&lt;/var&gt;&lt;/code&gt; for versions prior to 1.0.### 0.3.2- Improved documentation### 0.3.1- Added the arguments `allow_negative` and `allow_sign` (both `True` by default) to &lt;code&gt;&lt;var&gt;parser&lt;/var&gt;.parse_int()&lt;/code&gt;, for parity with &lt;code&gt;&lt;var&gt;parser&lt;/var&gt;.is_int()&lt;/code&gt; which already had these arguments### 0.3- Made the previously public but undocumented instance variables of TypeParser that corresponded to the constructor arguments private instead- Added public properties to TypeParser for accessing or modifying the same settings in a controlled manner### 0.2.6- Added `Nullable` to automatic imports via `from parsetypes import *` (previously only `TypeParser` and `reduce_types` were imported)### 0.2.5- Fixed documentation### 0.2.4- Added &lt;code&gt;&lt;var&gt;parser&lt;/var&gt;.convert()&lt;/code&gt;### 0.2.1, 0.2.2, 0.2.3- Fixed documentation### 0.2- Added support for Python version 3.9; previously only 3.10 and 3.11 were supported### 0.1.1- Updated documentation### 0.1- Initial version</longdescription>
</pkgmetadata>