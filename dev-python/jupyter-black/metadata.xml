<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># jupyter-blackmaster: [![master branch build status](https://github.com/n8henrie/jupyter-black/actions/workflows/python-package.yml/badge.svg?branch=master)](https://github.com/n8henrie/jupyter-black/actions/workflows/python-package.yml)dev: [![dev branch build status](https://github.com/n8henrie/jupyter-black/actions/workflows/python-package.yml/badge.svg?branch=dev)](https://github.com/n8henrie/jupyter-black/actions/workflows/python-package.yml)A simple extension for Jupyter Notebook and Jupyter Lab to beautify Python codeautomatically using Black. Fork of[dnanhkhoa/nb_black](https://github.com/dnanhkhoa/nb_black) with a few minormodifications:## FeaturesOnce loaded, automatically format syntactically correct `jupyter` cells with`black` once they are run.Enhancements compared to [dnanhkhoa/nb_black](https://github.com/dnanhkhoa/nb_black):- Configurability:    - Try to read black config from `pyproject.toml` if available    - Override settings such as line length and `black.TargetVersion` if      desired- Uses `black.format_cell` to greatly simplify the codebase- Adds tests- Slightly more responsive (no longer requires `setTimeout` and a delay)- Free software: MIT## Introduction[`black`][black] is an extremely popular python formatter. [Jupyter][jupyter] is anawesome way to run python. This extension helps you automatically `black`enyour `jupyter`.## Dependencies- Python &gt;= 3.7- See `setup.cfg`## Quickstart```python3 -m venv .venv &amp;&amp; source ./.venv/bin/activatepython3 -m pip install --upgrade pippython3 -m pip install jupyter-black jupyterpython3 -m jupyter notebook```From here, there are two ways to load the extension:### Configurable (recommended):```pythonimport jupyter_blackjupyter_black.load()```To look at configuration options:```pythonjupyter_black.load??```For example:```pythonimport blackimport jupyter_blackjupyter_black.load(    lab=False,    line_length=79,    verbosity=&quot;DEBUG&quot;,    target_version=black.TargetVersion.PY310,)```### The other way:```python%load_ext jupyter_black```This will load the extension using your defaults from `pyproject.toml` ifavailable, or use the `black` defaults. Please note that this defaults to`lab=True`, since moving to lab instead of standalone notebook installationsseems to be the direction of the jupyter project; this means this method ofloading will only work in JupyterLab, not in a standard notebook. For now,users running a standalone notebook (instead of lab) need to use therecommended (configurable) loading approach above.### Development Setup1. Clone the repo: `git clone https://github.com/n8henrie/jupyter-black &amp;&amp; cd   jupyter-black`2. Make a virtualenv: `python3 -m venv .venv`3. Activate venv, update pip, and install editable test/dev version:```console$ source ./.venv/bin/activate$ ./.venv/bin/python -m pip install --upgrade pip$ ./.venv/bin/python -m pip install -e .[test,dev]```Notes:- Tests use [playwright][playwright]- You'll need to run this command (once) prior to running the tests:    - `python -m playwright install --with-deps firefox`- `tox` will automatically run these installation steps (helpful for CI)- If desired, pass the `--no-headless` flag to `pytest` for local debugging## TODOContribution ideas:- [ ] More tests, currently very basic    - Ensure config is overridden in unsurprising ways    - Ensure other config options are properly passed to `black`    - Ensure that `pyproject.toml` is searched for properly- [x] Write tests for jupyter lab, currently only tested for notebook    - [x] I think the fixture could easily be modularized to also work for `lab`,      but haven't done the work yet## ContributingPlease see `CONTRIBUTING.md` and `TODO`.## Troubleshooting / FAQ- How can I install an older / specific version of [jupyter black](jupyter-black)?    - Install from a tag:        - pip install git+git://github.com/n8henrie/jupyter-black.git@v0.1.0    - Install from a specific commit:        - pip install git+git://github.com/n8henrie/jupyter-black.git@aabc123def456ghi789[black]: https://github.com/psf/black[jupyter]: https://jupyter.org/[playwright]: https://playwright.dev/python/## AcknowledgementsMany thanks to [dnanhkhoa/nb_black](https://github.com/dnanhkhoa/nb_black) forthe original version!And of course many thanks to the [black][black] and [jupyter][jupyter] teams.Also, after establishing the repo and reserving the name on PyPI, I noticedthere is another library of the same name:[drillan/jupyter-black](https://github.com/drillan/jupyter-black). It lookslike there have been no commits in the last 2 years, and it was never put inPyPI, so I think at this point I'll continue with this name. Sorry if thiscauses any trouble or confusion. I'll note that @drillan's library probablydoes things the *right* way by installing as an `nbextension`.## Buy Me a Coffee[☕️](https://n8henrie.com/donate)# [Changelog](https://keepachangelog.com)## 0.3.4 :: 2023-04-27- Only pass to `black.Mode` options from `pyproject.toml` that are valid for  `black.Mode`. Thanks @rldotai, https://github.com/n8henrie/jupyter-black/issues/7## 0.3.2, 0.3.3 :: 2022-11-20- Remove version constraints (thanks: @JakobGM, https://github.com/n8henrie/jupyter-black/issues/6)- Update CI to ensure publishing should work## 0.3.1 :: 2022-03-08- Fix description (thanks: @bryanwweber)- Version bump for PyPI## 0.3.0 :: 2022-03-06- Default to `lab=True`    - Add warning popup for users that load in notebook with `lab=True`      (including via `%load_ext`)    - Fix tests for the above    - Might as well minor version bump since this changes the API, even if      still `0.x`## 0.2.1 :: 20220-03-04- Python 3.10 support- Black 22 support## 0.2.0 :: 2021-11-14- Breaking change: default to `lab=True`; `%load_ext jupyter_black` will now  work in jupyterlab and no longer work in a standalone notebook## 0.1.1 :: 2021-09-28- Unload the proper event## 0.1.0 :: 2021-09-28- First release on PyPI.</longdescription>
</pkgmetadata>