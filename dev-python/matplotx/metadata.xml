<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/nschloe/matplotx&quot;&gt;&lt;img alt=&quot;matplotx&quot; src=&quot;https://nschloe.github.io/matplotx/matplotx-logo.svg&quot; width=&quot;55%&quot;&gt;&lt;/a&gt;  &lt;p align=&quot;center&quot;&gt;Some useful extensions for &lt;a href=&quot;https://matplotlib.org/&quot;&gt;Matplotlib&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;[![PyPi Version](https://img.shields.io/pypi/v/matplotx.svg?style=flat-square)](https://pypi.org/project/matplotx/)[![Anaconda Cloud](https://anaconda.org/conda-forge/matplotx/badges/version.svg?=style=flat-square)](https://anaconda.org/conda-forge/matplotx/)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/matplotx.svg?style=flat-square)](https://pypi.org/project/matplotx/)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5985269.svg)](https://doi.org/10.5281/zenodo.5985269)[![GitHub stars](https://img.shields.io/github/stars/nschloe/matplotx.svg?style=flat-square&amp;logo=github&amp;label=Stars&amp;logoColor=white)](https://github.com/nschloe/matplotx)[![Downloads](https://pepy.tech/badge/matplotx/month)](https://pepy.tech/project/matplotx)[![gh-actions](https://img.shields.io/github/workflow/status/nschloe/matplotx/ci?style=flat-square)](https://github.com/nschloe/matplotx/actions?query=workflow%3Aci)[![codecov](https://img.shields.io/codecov/c/github/nschloe/matplotx.svg?style=flat-square)](https://codecov.io/gh/nschloe/matplotx)[![LGTM](https://img.shields.io/lgtm/grade/python/github/nschloe/matplotx.svg?style=flat-square)](https://lgtm.com/projects/g/nschloe/matplotx)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)This package includes some useful or beautiful extensions to[Matplotlib](https://matplotlib.org/). Most of those features could be inMatplotlib itself, but I haven't had time to PR yet. If you're eager, let meknow and I'll support the effort.Install with```shpip install matplotx[all]```and use in Python with```pythonimport matplotx```See below for what matplotx can do.### Clean line plots (dufte)&lt;a href=&quot;tests/dufte_comparison.py&quot;&gt;&lt;table width=&quot;100%&quot;&gt;  &lt;tr&gt;  &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://nschloe.github.io/matplotx/ex1-mpl.svg&quot;/&gt;&lt;/td&gt;  &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://nschloe.github.io/matplotx/ex1-dufte.svg&quot;/&gt;&lt;/td&gt;  &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://nschloe.github.io/matplotx/ex1-dufte-dracula.svg&quot;/&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;tr&gt;    &lt;td&gt;matplotlib&lt;/td&gt;    &lt;td&gt;    &lt;code&gt;matplotx.styles.dufte&lt;/code&gt;,    &lt;code&gt;matplotx.ylabel_top&lt;/code&gt;,    &lt;code&gt;matplotx.line_labels&lt;/code&gt;    &lt;/td&gt;    &lt;td&gt;    &lt;code&gt;matplotx.styles.duftify(matplotx.styles.dracula)&lt;/code&gt;    &lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;/a&gt;The middle plot is created with```pythonimport matplotlib.pyplot as pltimport matplotximport numpy as np# create datarng = np.random.default_rng(0)offsets = [1.0, 1.50, 1.60]labels = [&quot;no balancing&quot;, &quot;CRV-27&quot;, &quot;CRV-27*&quot;]x0 = np.linspace(0.0, 3.0, 100)y = [offset * x0 / (x0 + 1) + 0.1 * rng.random(len(x0)) for offset in offsets]# plotwith plt.style.context(matplotx.styles.dufte):    for yy, label in zip(y, labels):        plt.plot(x0, yy, label=label)    plt.xlabel(&quot;distance [m]&quot;)    matplotx.ylabel_top(&quot;voltage [V]&quot;)  # move ylabel to the top, rotate    matplotx.line_labels()  # line labels to the right    plt.show()```The three matplotx ingredients are:- `matplotx.styles.dufte`: A minimalistic style- `matplotx.ylabel_top`: Rotate and move the the y-label- `matplotx.line_labels`: Show line labels to the right, with the line colorYou can also &quot;duftify&quot; any other style (see below) with&lt;!--pytest.mark.skip--&gt;```pythonmatplotx.styles.duftify(matplotx.styles.dracula)```Further reading and other styles:- [Remove to improve: data-ink ratio](https://www.darkhorseanalytics.com/blog/data-looks-better-naked)  &lt;img src=&quot;https://nschloe.github.io/matplotx/data-ink.webp&quot; width=&quot;50%&quot;/&gt;- [Cereblog, _Remove to improve: Line Graph Edition_](https://youtu.be/bDbJBWvonVI)- [Show the Data - Maximize the Data Ink Ratio](https://youtu.be/pCp0a5_YIWE)- [Randal S. Olson's blog entry](http://www.randalolson.com/2014/06/28/how-to-make-beautiful-data-visualizations-in-python-with-matplotlib/)- [prettyplotlib](https://github.com/olgabot/prettyplotlib)- [Wikipedia: Chartjunk](https://en.wikipedia.org/wiki/Chartjunk)### Clean bar plots&lt;a href=&quot;tests/dufte_comparison.py&quot;&gt;&lt;table width=&quot;100%&quot;&gt;  &lt;tr&gt;  &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://nschloe.github.io/matplotx/bars-mpl.svg&quot;/&gt;&lt;/td&gt;  &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://nschloe.github.io/matplotx/bars-dufte1.svg&quot;/&gt;&lt;/td&gt;  &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://nschloe.github.io/matplotx/bars-dufte2.svg&quot;/&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;tr&gt;    &lt;td&gt;matplotlib&lt;/td&gt;    &lt;td&gt;dufte&lt;/td&gt;    &lt;td&gt;dufte with &lt;code&gt;matplotx.show_bar_values()&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;/a&gt;The right plot is created with```pythonimport matplotlib.pyplot as pltimport matplotxlabels = [&quot;Australia&quot;, &quot;Brazil&quot;, &quot;China&quot;, &quot;Germany&quot;, &quot;Mexico&quot;, &quot;United\nStates&quot;]vals = [21.65, 24.5, 6.95, 8.40, 21.00, 8.55]xpos = range(len(vals))with plt.style.context(matplotx.styles.dufte_bar):    plt.bar(xpos, vals)    plt.xticks(xpos, labels)    matplotx.show_bar_values(&quot;{:.2f}&quot;)    plt.title(&quot;average temperature [Â°C]&quot;)    plt.show()```The two matplotx ingredients are:- `matplotx.styles.dufte_bar`: A minimalistic style for bar plots- `matplotx.show_bar_values`: Show bar values directly at the bars### Extra stylesmatplotx contains numerous extra color schemes, e.g.,[Dracula](https://draculatheme.com/), [Nord](https://www.nordtheme.com/),[gruvbox](https://github.com/morhetz/gruvbox), and[Solarized](https://ethanschoonover.com/solarized/),[the revised Tableau colors](https://www.tableau.com/about/blog/2016/7/colors-upgrade-tableau-10-56782).&lt;!--pytest.mark.skip--&gt;```pythonimport matplotlib.pyplot as pltimport matplotx# use everywhere:plt.style.use(matplotx.styles.dracula)# use with context:with plt.style.context(matplotx.styles.dracula):    pass```See [here](https://github.com/nschloe/matplotx/wiki/Extra-styles-gallery) for afull list of extra styles|    &lt;img src=&quot;https://nschloe.github.io/matplotx/aura-dark-soft.svg&quot; width=&quot;100%&quot;&gt;    || :----------------------------------------------------------------------------------: ||       &lt;img src=&quot;https://nschloe.github.io/matplotx/dracula.svg&quot; width=&quot;100%&quot;&gt;        ||     &lt;img src=&quot;https://nschloe.github.io/matplotx/gruvbox-dark.svg&quot; width=&quot;100%&quot;&gt;     || &lt;img src=&quot;https://nschloe.github.io/matplotx/pitaya-smoothie-dark.svg&quot; width=&quot;100%&quot;&gt; |Other styles:- [John Garrett, _Science Plots_](https://github.com/garrettj403/SciencePlots)- [Dominik Haitz, _Cyberpunk style_](https://github.com/dhaitz/mplcyberpunk)- [Dominik Haitz, _Matplotlib stylesheets_](https://github.com/dhaitz/matplotlib-stylesheets)- [Carlos da Costa, _The Grand Budapest Hotel_](https://github.com/cako/mpl_grandbudapest)- [Danny Antaki, _vaporwave aesthetics_](https://github.com/dantaki/vapeplot)- [QuantumBlack Labs, _QuantumBlack_](https://github.com/quantumblacklabs/qbstyles)### Smooth contours| &lt;img src=&quot;https://nschloe.github.io/matplotx/mpl-contourf.svg&quot; width=&quot;100%&quot;&gt; | &lt;img src=&quot;https://nschloe.github.io/matplotx/matplotx-contours.svg&quot; width=&quot;100%&quot;&gt; || :--------------------------------------------------------------------------: | :-------------------------------------------------------------------------------: ||                                `plt.contourf`                                |                               `matplotx.contours()`                               |Sometimes, the sharp edges of `contour[f]` plots don't accurately represent thesmoothness of the function in question. Smooth contours, `contours()`, serves as a drop-in replacement.```pythonimport matplotlib.pyplot as pltimport matplotxdef rosenbrock(x):    return (1.0 - x[0]) ** 2 + 100.0 * (x[1] - x[0] ** 2) ** 2im = matplotx.contours(    rosenbrock,    (-3.0, 3.0, 200),    (-1.0, 3.0, 200),    log_scaling=True,    cmap=&quot;viridis&quot;,    outline=&quot;white&quot;,)plt.gca().set_aspect(&quot;equal&quot;)plt.colorbar(im)plt.show()```### Contour plots for functions with discontinuities| &lt;img src=&quot;https://nschloe.github.io/matplotx/contour-mpl.svg&quot; width=&quot;100%&quot;&gt; | &lt;img src=&quot;https://nschloe.github.io/matplotx/contour-matplotx.svg&quot; width=&quot;100%&quot;&gt; || :-------------------------------------------------------------------------: | :------------------------------------------------------------------------------: ||                                `plt.contour`                                |                         `matplotx.contour(max_jump=1.0)`                         |Matplotlib has problems with contour plots of functions that have discontinuities. Thesoftware has no way to tell discontinuities and very sharp, but continuous cliffs apart,and contour lines will be drawn along the discontinuity.matplotx improves upon this by adding the parameter `max_jump`. If the difference betweentwo function values in the grid is larger than `max_jump`, a discontinuity is assumedand no line is drawn. Similarly, `min_jump` can be used to highlight the discontinuity.As an example, take the function `imag(log(Z))` for complex values Z. Matplotlib'scontour lines along the negative real axis are wrong.```pythonimport matplotlib.pyplot as pltimport numpy as npimport matplotxx = np.linspace(-2.0, 2.0, 100)y = np.linspace(-2.0, 2.0, 100)X, Y = np.meshgrid(x, y)Z = X + 1j * Yvals = np.imag(np.log(Z))# plt.contour(X, Y, vals, levels=[-2.0, -1.0, 0.0, 1.0, 2.0])  # draws wrong linesmatplotx.contour(X, Y, vals, levels=[-2.0, -1.0, 0.0, 1.0, 2.0], max_jump=1.0)matplotx.discontour(X, Y, vals, min_jump=1.0, linestyle=&quot;:&quot;, color=&quot;r&quot;)plt.gca().set_aspect(&quot;equal&quot;)plt.show()```Relevant discussions:- [matplotlib/issues/21348](https://github.com/matplotlib/matplotlib/issues/21348)### spy plots (betterspy)Show sparsity patterns of sparse matrices or write them to image files.Example:```pythonimport matplotxfrom scipy import sparseA = sparse.rand(20, 20, density=0.1)# show the matrixplt = matplotx.spy(    A,    # border_width=2,    # border_color=&quot;red&quot;,    # colormap=&quot;viridis&quot;)plt.show()# or save it as pngmatplotx.spy(A, filename=&quot;out.png&quot;)```| &lt;img src=&quot;https://nschloe.github.io/matplotx/spy-plain.png&quot;&gt; | &lt;img src=&quot;https://nschloe.github.io/matplotx/spy-viridis.png&quot;&gt; || :----------------------------------------------------------: | :------------------------------------------------------------: ||                         no colormap                          |                            viridis                             |There is a command-line tool that can be used to show[matrix-market](https://math.nist.gov/MatrixMarket/) or[Harwell-Boeing](https://en.wikipedia.org/wiki/Harwell-Boeing_file_format) files:```matplotx spy msc00726.mtx [out.png]```See `matplotx spy -h` for all options.### LicenseThis software is published under the [MIT license](LICENSE).</longdescription>
</pkgmetadata>