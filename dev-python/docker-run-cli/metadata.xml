<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/ika-rwth-aachen/docker-run/raw/main/assets/logo.png&quot; height=130 align=&quot;right&quot;&gt;# *docker-run* â€“ ``docker run`` and ``docker exec`` with useful defaults&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://img.shields.io/github/license/ika-rwth-aachen/docker-run&quot;/&gt;  &lt;a href=&quot;https://pypi.org/project/docker-run-cli/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/docker-run-cli?label=PyPI&quot;/&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/docker-run-cli/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/docker-run-cli?color=blue&amp;label=PyPI%20downloads&quot;/&gt;&lt;/a&gt;&lt;/p&gt;*docker-run* is a CLI tool for simplified interaction with Docker images. Use it to easily start and attach to Docker containers with useful predefined arguments.&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/ika-rwth-aachen/docker-run/raw/main/assets/teaser.png&quot; width=550&gt;&lt;/p&gt;While *docker-run* can be used with any Docker image, we recommend to also check out our other tools for Docker and ROS.- [*docker-ros*](https://github.com/ika-rwth-aachen/docker-ros) automatically builds minimal container images of ROS applications &lt;a href=&quot;https://github.com/ika-rwth-aachen/docker-ros&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ika-rwth-aachen/docker-ros?style=social&quot;/&gt;&lt;/a&gt;- [*docker-ros-ml-images*](https://github.com/ika-rwth-aachen/docker-ros-ml-images) provides machine learning-enabled ROS Docker images &lt;a href=&quot;https://github.com/ika-rwth-aachen/docker-ros-ml-images&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ika-rwth-aachen/docker-ros-ml-images?style=social&quot;/&gt;&lt;/a&gt;## Quick DemoThe following quickly launches the GUI application `xeyes` to demonstrate how `docker-run` takes care of X11 forwarding from container to host. The `--verbose` flag prints the underlying `docker run` command that is run under the hood.```bashdocker-run --verbose 607qwq/xeyes```## Functionality`docker-run` is designed to be used the same way as the official [`docker run`](https://docs.docker.com/engine/reference/commandline/run/) and [`docker exec`](https://docs.docker.com/engine/reference/commandline/exec/) commands.In general, you can pass the same arguments to `docker-run` as you would pass to `docker run`, e.g.```bashdocker-run --volume $(pwd):/volume ubuntu ls /volume```In addition to the arguments you are passing, `docker-run` however also enables the following features by default. Each of these default features can be disabled, see [Usage](#usage).- container removal after exit (`--rm`)- interactive tty (`--interactive --tty`)- current directory name as container name (`--name`)- GPU support (`--gpus all` / `--runtime nvidia`)- X11 GUI forwardingIf a container with matching name is already running, `docker-run` will execute a command in that container via `docker exec` instead. This lets you quickly attach to a running container without passing any command, e.g.```bashdocker-run --name my-running-container```Unlike with `docker run`, you can also set the Docker image via the `--image` arguments, see [Usage](#usage). This may be required for more complex use cases.## Installation```bashpip install docker-run-cli# (optional) shell auto-completionsource $(activate-python-docker-run-shell-completion 2&gt; /dev/null)```&gt; **Warning**  &gt; Outside of a virtual environment, *pip* may default to a user-site installation of executables to `~/.local/bin`, which may not be present in your shell's `PATH`.  If running `docker-run` errors with `docker-run: command not found`, add the directory to your path. [*(More information)*](https://packaging.python.org/en/latest/tutorials/installing-packages/#installing-to-the-user-site)  &gt; ```bash&gt; echo &quot;export PATH=$HOME/.local/bin:$PATH&quot; &gt;&gt; ~/.bashrc&gt; source ~/.bashrc&gt; ```## Usage```usage: docker-run [--help] [--image IMAGE] [--mwd] [--name NAME] [--no-gpu]                  [--no-it] [--no-loc] [--no-name] [--no-rm] [--no-tz]                  [--no-x11] [--verbose] [--version]Executes `docker run` with the following features enabled by default, each ofwhich can be disabled individually: container removal after exit, interactivetty, current directory name as container name, GPU support, X11 GUIforwarding. Passes any additional arguments to `docker run`. Executes `dockerexec` instead if a container with the specified name (`--name`) is alreadyrunning.optional arguments:  --help         show this help message and exit  --image IMAGE  image name (may also be specified without --image as last                 argument before command)  --mwd          mount current directory at same path  --name NAME    container name; generates `docker exec` command if already                 running  --no-gpu       disable automatic GPU support  --no-it        disable automatic interactive tty  --no-loc       disable automatic locale  --no-name      disable automatic container name (current directory)  --no-rm        disable automatic container removal  --no-tz        disable automatic timezone  --no-x11       disable automatic X11 GUI forwarding  --verbose      print generated command  --version      show program's version number and exit```## Plugins`docker-run` can be extended through plugins. Plugins are installed as optional dependencies.```bash# install specific plugin &lt;PLUGIN_NAME&gt;pip install docker-run-cli[&lt;PLUGIN_NAME&gt;]# install all pluginspip install docker-run-cli[plugins]```| Plugin | Description || --- | --- || [`docker-ros`](https://pypi.org/project/docker-run-docker-ros) | extra functionality for Docker images built by [*docker-ros*](https://github.com/ika-rwth-aachen/docker-ros) |</longdescription>
</pkgmetadata>