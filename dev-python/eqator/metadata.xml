<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># eqatorChecking the Django project for quality. It can be convenient if you include it in CI.Used packages: * [django unittest](https://docs.djangoproject.com/en/3.1/topics/testing/overview/) - unit testing in Django.* [flake8](https://pypi.org/project/flake8/) - linter of source code.* [radon](https://pypi.org/project/radon/) - tool that computes various metrics from the source code.* [bandit](https://pypi.org/project/bandit/) - a security linter from PyCQA.* [coverage](https://pypi.org/project/coverage/) - a test coverage for unittest.## QuickstartInstall with pip:```bashpip install eqator```Add the `eqator` to your `INSTALLED_APPS`:```python# settings.pyINSTALLED_APPS = [    # ...    'eqator',]```To use Lighthouse scoring, install `Lighthouse CI` with `npm`:```bashnpm install -g @lhci/cli```Check your project:```bashpython manage.py qa```Check your project by separate options.Run checking style guide with flake8:```bashpython manage.py qa -f``````bashpython manage.py qa --flake```Run checking cyclomatic complexity with radon```bashpython manage.py qa -r``````bashpython manage.py qa --radon```Run security lint with bandit```bashpython manage.py qa -l``````bashpython manage.py qa --linter```Run django project migrations check```bashpython manage.py qa -m``````bashpython manage.py qa --migrations```Run django unittest```bashpython manage.py qa -t``````bashpython manage.py qa --tests```Run django unit tests for garpix_page```bashpython manage.py qa -p``````bashpython manage.py qa --garpix_page```Lighthouse CI check:(requires Lighthouse CI installed)```bashpython manage.py qa -lh``````bashpython manage.py qa --lighthouse```Run test coverage check```bashpython manage.py qa -c``````bashpython manage.py qa --test_coverage```Note, that you need to add `TEST_COVERAGE_RATE` variable to your `settings.py` file (default value is 70):```pythonTEST_COVERAGE_RATE = 70```Optionally, do not save Lighthouse CI report files:```bashpython manage.py qa --all --clear-reports```Check your project with all logs:```bashpython manage.py qa --verbose```You can also add add `SENTRY_CHECK_METHOD` and `LIGHTHOUSE_CHECK_METHOD` variables to your `settings.py` file to controle the sentry SDK and lighthouse CI checking methods:```python# settings.pySENTRY_CHECK_METHOD = 'error'LIGHTHOUSE_CHECK_METHOD = 'warning'```### Example output with OK```Input  Directory: /Users/aleksejkuznecov/projects/garpix_packages/eqator/backend  Start at: 2021-02-27 12:09:30.999142Checking  Checking style guide with flake8 (see &quot;.flake8&quot;) OK  Django unit tests OK  Cyclomatic complexity with radon (see &quot;radon.cfg&quot;) OK  Security lint with bandit (only high-severity issues, see &quot;.bandit&quot;) OKResult  Problems found: 0  End at: 2021-02-27 12:09:33.789880  Duration: 0:00:02.790738```### Example output with problems```Input  Directory: /Users/aleksejkuznecov/projects/garpix_packages/eqator/backend  Start at: 2021-02-27 12:23:41.066752Checking  Checking style guide with flake8 (see &quot;.flake8&quot;) ERROR/Users/aleksejkuznecov/projects/garpix_packages/eqator/backend/eqator/constants.py:18:4: W292 no newline at end of file/Users/aleksejkuznecov/projects/garpix_packages/eqator/backend/eqator/helpers.py:38:1: E302 expected 2 blank lines, found 1/Users/aleksejkuznecov/projects/garpix_packages/eqator/backend/eqator/colors.py:9:1: W391 blank line at end of file  Django unit tests OK  Cyclomatic complexity with radon (see &quot;radon.cfg&quot;) OK  Security lint with bandit (only high-severity issues, see &quot;.bandit&quot;) ERROR[main]  INFO    Found project level .bandit file: /Users/aleksejkuznecov/projects/garpix_packages/eqator/backend/.bandit[main]  INFO    profile include tests: None[main]  INFO    cli include tests: None[main]  INFO    cli exclude tests: None[main]  INFO    running on Python 3.8.2Run started:2021-02-27 12:23:45.044503Test results:&gt;&gt; Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.   Severity: High   Confidence: High   Location: /Users/aleksejkuznecov/projects/garpix_packages/eqator/backend/eqator/helpers.py:39   More Info: https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html38      def shell_run(cmd):39          ps = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)40          lines = ps.communicate()[0]--------------------------------------------------Code scanned:        Total lines of code: 285        Total lines skipped (#nosec): 0Run metrics:        Total issues (by severity):                Undefined: 0.0                Low: 1.0                Medium: 0.0                High: 1.0        Total issues (by confidence):                Undefined: 0.0                Low: 0.0                Medium: 0.0                High: 2.0Files skipped (0):Result  Problems found: 2  End at: 2021-02-27 12:23:45.098015  Duration: 0:00:04.031263```## Configure Lighthouse CIEdit `lighthouserc.json` to set URL and configure assertions. Reference: https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/configuration.md## Configure TestCase unit testsEdit `testcaserc.json` to add configure options.All available configurations:- `apps` - list of apps must be tested;- `keepdb` - preserves the test DB between runs;- `top_level` - top level of project for unittest discovery;- `pattern` - the test matching pattern. Defaults to test*.py;- `reverse` - reverses test cases order;- `debug_sql` - sets settings.DEBUG to True;- `parallel` - run tests using up to N parallel processes;- `tags` - run only tests with the specified tag;- `exclude_tags` - do not run tests with the specified tag;- `pdb` - runs a debugger (pdb, or ipdb if installed) on error or failure;- `buffer` - discard output from passing tests;- `test_name_patterns` - Only run test methods and classes that match the pattern or substringExample:```json{    &quot;apps&quot;: [&quot;app&quot;],}```## Send reportTo send statistics you need to add `EQATOR_SEND_HOST`:```python# settings.pyEQATOR_SEND_HOST = 'http://example.com/analytics/eqator/:project_name/'``````bashpython manage.py qa --send```Data format```json{  &quot;duration&quot;: &quot;0:00:01.557757&quot;,  &quot;start_at&quot;: &quot;2022-09-20 11:56:41.230550&quot;,  &quot;error_count&quot;: 4,  &quot;flake_count&quot;: 2,  &quot;radon_count&quot;: 1,  &quot;sentry_count&quot;: 0,  &quot;coverage_value&quot;: 8,  &quot;coverage_result&quot;: 0,  &quot;lighthouse_count&quot;: 0,  &quot;migrations_count&quot;: 1,  &quot;unit_tests_count&quot;: 0,  &quot;security_linter_count&quot;: 0,  &quot;garpix_page_tests_count&quot;: 0}```# ChangelogSee [CHANGELOG.md](CHANGELOG.md).# ContributingSee [CONTRIBUTING.md](CONTRIBUTING.md).# License[MIT](LICENSE)---Developed by Garpix / [https://garpix.com](https://garpix.com)</longdescription>
</pkgmetadata>