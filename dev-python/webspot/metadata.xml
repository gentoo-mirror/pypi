<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># WebspotWebspot is an intelligent web service to automatically detect web content and extract information from it.[Demo](https://webspot.crawlab.net)[中文](https://github.com/crawlab-team/webspot/blob/main/README-zh.md)## Screenshots### Detected Results![](./docs/screenshots/screenshot-result-list.png)### Extracted Fields![](./docs/screenshots/screenshot-extracted-fields.png)### Extracted Data![](./docs/screenshots/screenshot-extracted-data.png)## Get Started### DockerMake sure you have installed [Docker](https://docs.docker.com/) and [Docker Compose](https://docs.docker.com/compose/).```bash# clone git repogit clone https://github.com/crawlab-team/webspot# start docker containersdocker-compose up -d```Then you can access the web UI at http://localhost:9999.## API ReferenceOnce you started Webspot, you can go to http://localhost:9999/redoc to view the API reference.## ArchitectureThe overall process of how Webspot detects meaningful elements from HTML or web pages is shown in the following figure.```mermaidgraph LR    hr[HtmlRequester]    gl[GraphLoader]    d[Detector]    r[Results]    hr --&quot;html + json&quot;--&gt; gl --&quot;graph&quot;--&gt; d --&quot;output&quot;--&gt; r```## DevelopmentYou can follow the following guidance to get started.### Pre-requisites- Python &gt;=3.8 and &lt;=3.10- Go 1.16 or higher- MongoDB 4.2 or higher### Install dependencies```bash# dependenciespip install -r requirements.txt```### Configure Environment VariablesDatabase configuration is located in `.env` file. You can copy the example file and modify it.```bashcp .env.example .env```### Start web server```bash# start development serverpython main.py web```### Code StructureThe core code is located in `webspot` directory. The `main.py` file is the entry point of the web server.```webspot├── cmd     # command line tools├── crawler # web crawler├── data    # data files (html, json, etc.)├── db      # database├── detect  # web content detection├── graph   # graph module├── models  # models├── request # request helper├── test    # test cases├── utils   # utilities└── web     # web server```## TODOsWebspot is aimed at automating the process of web content detection and extraction. It is far from ready for productionuse. The following features are planned to be implemented in the future.- [ ] Table detection- [ ] Nested list detection- [ ] Export to spiders- [ ] Advanced browser request## DisclaimerPlease follow the local laws and regulations when using Webspot. The author is not responsible for any legal issuescaused by. Please read the [Disclaimer](./DISCLAIMER.md) for details.## CommunityIf you are interested in Webspot, please add the author's WeChat account &quot;tikazyq1&quot; noting &quot;Webspot&quot; to enter thediscussion group.&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://crawlab.oss-cn-hangzhou.aliyuncs.com/gitbook/qrcode.png&quot; height=&quot;360&quot;&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>