<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/darrikonn/td-cli/master/img/td-cli.png&quot; width=80 alt=&quot;Icon&quot;/&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://user-images.githubusercontent.com/5694851/67482097-be2ecc80-f652-11e9-899d-1d9750929b7e.png&quot; /&gt;  &lt;br /&gt;  &lt;br /&gt;  &lt;a href=&quot;https://pypi.org/project/td-cli/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/td-cli.svg?style=flat-square&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/td-cli/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/dm/td-cli?style=flat-square&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/darrikonn/td-cli/blob/master/LICENSE&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/Licence-MIT-yellow.svg?longCache=true&amp;style=flat-square&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://www.python.org/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/Made With-Python-red.svg?longCache=true&amp;style=flat-square&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/alebcay/awesome-shell#command-line-productivity&quot;&gt;    &lt;img height=&quot;20&quot; src=&quot;https://user-images.githubusercontent.com/2769158/44446193-327a6580-a5a1-11e8-91e2-21ca857f95d4.png&quot;/&gt;  &lt;/a&gt;&lt;/h3&gt;&lt;pre&gt;  &lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypi.org/project/td-cli/&quot;&gt;&lt;strong&gt;td-cli&lt;/strong&gt;&lt;/a&gt; is a command line todo manager, &lt;br/&gt;where you can organize and manage your todos across multiple projects&lt;/p&gt;  &lt;p align=&quot;center&quot;&gt;&lt;img class=&quot;img-responsive&quot; width=&quot;500&quot; src=&quot;https://raw.githubusercontent.com/darrikonn/td-cli/master/img/td-cli.gif&quot; alt=&quot;gif&quot;/&gt;&lt;/p&gt;  &lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://circleci.com/gh/darrikonn/td-cli&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/darrikonn/td-cli.svg?style=svg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;## Installation[**td-cli**](https://pypi.org/project/td-cli/) only works for `python 3`, so it needs to be installed with `pip3````bashpip3 install td-cli```### Windows 10In order to use the interactive mode on Windows, you'll have to install [**windows-curses**](https://pypi.org/project/windows-curses/)```bashpip install windows-curses```In addition to that, [**Windows Terminal**](https://github.com/microsoft/terminal) is recommended for better UX.## Getting startedRun `td --help` to see possible commands.Here are some to get you started:- Run `td` to list all your todos.- Run `td add &quot;my new awesome todo&quot;` to add a new todo.- Run `td &lt;id&gt; complete` to complete your todo. You don't have to specify the whole `id`, a substring will do. It'll fetch the first one that it finds in the same order as when you list your todos.Note that `global` is a preserved group name where you can list all your global groups. You can always set it as the default with:```bashtd group global preset```## APICheck out the [`api`](https://github.com/darrikonn/td-cli/blob/master/API.md).## ConfiguringThe location of your todos and your configuration will depend on these environment variables (in this order):1. **TD_CLI_HOME**: determines where your `todo.db` and `todo.cfg` file will live2. **XDG_CONFIG_HOME**: a fallback if `$TD_CLI_HOME` is not set3. **HOME**: a fallback if `$XDG_CONFIG_HOME` is not set. If `$HOME` is used; all files will be transformed to a dotfile, i.e.`~/.todo.db` and `~/.todo.cfg`.### Database nameYour database instance will be located in in the before-mentioned configuration directory.By default the database will be named `todo`.You can change your database name by specifying `database_name` in your `$TD_CLI_HOME/.todo.cfg` file:```cfg[settings]database_name: something_else```This results in a database instance at `$TD_CLI_HOME/.something_else.db`### FormatYou can specify your preferred format of your todo's details via the format config keyword:```cfgformat: md```This would result in the `.md` (Markdown) file extension when editing a todo. This allows you to use the power of your editor to e.g. syntax highlight the details, and etc.### EditorWhen editing a todo, `td &lt;id&gt; edit`, you can both specify the todo's `name` and the todo's `details` via options (see `td &lt;id&gt; edit --help`). If no option is specified, your todo will be opened in `vi` by default (your `environement EDITOR` will override this) where you can edit the todo's details. You can change the default editor by updating your config:```cfg[settings]editor: nvim```### Only list uncompleted todosWhen listing todos, by default td-cli will list both completed and uncompleted todos. If you want to only list uncompleted todos by default, then you can apply the completed config:```cfg[settings]completed: 0```### GroupWhen listing todos, you have the option of specifying what group to list from:```bashtd -g my-group# ortd g my-group```If no group is provided, `td` will list from the current default group. You can globally set the default group with:```bashtd g my-group preset```However, there's an option to set the default group per git project (this is not possible from the root config `$TD_CLI_HOME/.todo.cfg`).In any root of your projects, you can create a `.td.cfg` config file to specify what group to default on (this will override the global default group):```cfg[settings]group: my-group```If you run `td` within your git project, td will default to _my-group_.I recommend globally ignoring `.td.cfg` in `~/.gitignore`.</longdescription>
</pkgmetadata>