<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># kubernetes-validatekubernetes-validate validates Kubernetes resource definitions against thedeclared Kubernetes schemas.Based on Gareth Rushgrove's excellent work providing a basis for turning KubernetesSwagger API definitions into JSONSchema definitions, kubernetes-validate will reporton mismatches between schema defnition and resource definitionNote that this currently uses a fork of kubernetes-json-schema for the following reasons:* Add API versions into schema names (built using https://github.com/garethr/openapi2jsonschema/pull/11)* [Increase coverage of strict versions](https://github.com/garethr/kubernetes-json-schema/pull/8)* [Update to latest Kubernetes released API versions](https://github.com/garethr/kubernetes-json-schema/pull/8)* Provide local-strict schemas* Reduce Kubernetes version support (v1.5 and v1.6 schemas are not included to reduce  library size and schema build time)Furthermore, the module now includes only the .0 API schemas, as they change so little within a Kubernetesversion (there are some differences but they seem to be mostly irrelevant to validation - e.g. descriptionupdates). This has taken the module down from 300MB to less than 30MB.If the relevant PRs get accepted upstream, then this will revert to the upstream fork.## Supported kubernetes versionsAs of version v1.28.0, kubernetes versions as low as 1.20 are supported (removing legacy versionsreduces the library size but there's no major harm in keeping a few extra versions around)If you need an older version, v1.27.1 contains kubernetes versions as low as 1.11## Installationpip install kubernetes-validate## Usage### Command line```$ kubernetes-validateusage: kubernetes-validate [-h] [-k KUBERNETES_VERSION] [--strict] [--version]                           ...validate a kubernetes resource definitionpositional arguments:  filenamesoptional arguments:  -h, --help            show this help message and exit  -k KUBERNETES_VERSION, --kubernetes-version KUBERNETES_VERSION                        version of kubernetes against which to validate.                        Defaults to major/minor version of kubernetes-validate                        (i.e. 1.22.1 supports kubernetes 1.22). Patch versions                        of the version are ignored (1.22.4 validates against                        1.22.0)  --strict              whether to use strict validation, rejecting unexpected                        properties  --quiet               whether to only output warnings/failures  --no-warn             whether to hide warnings  --version             show program's version number and exit```e.g.```$ kubernetes-validate -k 1.27 --strict resource.yml```### Python```from __future__ import print_functionimport kubernetes_validateimport yamltry:    data = yaml.load(open('resource.yaml').read())    kubernetes_validate.validate(data, '1.22', strict=True)except kubernetes_validate.ValidationError as e:    print(''. join(e.path), e.message)```### Examples```$ kubernetes-validate -k 1.21 examples/kuard-extra-property.yamlINFO  examples/kuard-extra-property.yaml passed against version 1.21``````$ kubernetes-validate --strict examples/kuard-extra-property.yamlERROR examples/kuard-extra-property.yaml did not validate against version 1.28.0: spec.selector: Additional properties are not allowed ('unwanted' was unexpected)``````$ kubernetes-validate examples/kuard-invalid-type.yamlERROR examples/kuard-invalid-type.yaml did not validate against version 1.28.0: spec.replicas: 'hello' is not of type u'integer'```</longdescription>
</pkgmetadata>