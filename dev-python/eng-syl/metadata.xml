<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ï»¿# English Syllabifier (eng_syl)This program implements a sequence labelling Bidirectional LSTM to identify syllable boundaries in English words. The model was trained on data from the  [WebCelex](http://celex.mpi.nl/) English wordform corpus.Use the `syllabify()` function from the `Syllabel` class to syllabify your words:&gt;     &gt;&gt;&gt; from eng_syl.syllabify import Syllabel&gt;     &gt;&gt;&gt; syllabler = Syllabel()&gt;     &gt;&gt;&gt; syllabler.syllabify(&quot;chomsky&quot;)&gt;     'chom-sky'`syllabify()` parameters - **text**: *string*- English text to be syllabified. Input should only contain alphabetic characters.`syllabify()` returns the given word with hyphens inserted at syllable boundaries.## Onceler (Onset, Nucleus, Coda Segmenter)The `onc_split()` function from the  `Onceler` class splits single syllables into their constituent Onset, Nucleus, and Coda components.&gt;     &gt;&gt;&gt; from eng_syl.onceler import Onceler&gt;     &gt;&gt;&gt; lorax = Onceler()&gt;     &gt;&gt;&gt; print(lorax.onc_split(&quot;sloan&quot;)&gt;     'sl-oa-n' - text: string - English single syllable word/ component to be segmented into Onset, Nucleus, Coda. Input should only contain alphabetic characters.</longdescription>
</pkgmetadata>