<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>bistring========|PyPI version|The bistring library provides non-destructive versions of common string processing operations like normalization, case folding, and find/replace.Each bistring remembers the original string, and how its substrings map to substrings of the modified version.For example:.. code-block:: python    &gt;&gt;&gt; from bistring import bistr    &gt;&gt;&gt; s = bistr('𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐, 𝖇𝖗𝖔𝖜𝖓 🦊 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 🐶')    &gt;&gt;&gt; s = s.normalize('NFKD')     # Unicode normalization    &gt;&gt;&gt; s = s.casefold()            # Case-insensitivity    &gt;&gt;&gt; s = s.replace('🦊', 'fox')  # Replace emoji with text    &gt;&gt;&gt; s = s.replace('🐶', 'dog')    &gt;&gt;&gt; s = s.sub(r'[^\w\s]+', '')  # Strip everything but letters and spaces    &gt;&gt;&gt; s = s[:19]                  # Extract a substring    &gt;&gt;&gt; s.modified                  # The modified substring, after changes    'the quick brown fox'    &gt;&gt;&gt; s.original                  # The original substring, before changes    '𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐, 𝖇𝖗𝖔𝖜𝖓 🦊'This allows you to perform very aggressive text processing completely invisibly... |PyPI version| image:: https://badge.fury.io/py/bistring.svg    :target: https://pypi.org/project/bistring/</longdescription>
</pkgmetadata>