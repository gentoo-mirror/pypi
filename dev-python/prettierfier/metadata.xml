<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># prettierfierWhile I love [Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) as a parser, `BeautifulSoup.prettify()` adds a linebreak between *every* tag. This results in unwanted white space between tags that should be inline, like `&lt;sup&gt;`, `&lt;a&gt;`, `&lt;span&gt;`, etc:```&lt;p&gt;Introducing GitHub&lt;sup&gt;&amp;reg;&lt;/sup&gt;&lt;/p&gt;```&lt;p&gt;Introducing GitHub&lt;sup&gt;&amp;reg;&lt;/sup&gt;&lt;/p&gt;vs.```&lt;p&gt;    Introducing GitHub    &lt;sup&gt;        &amp;reg;    &lt;/sup&gt;&lt;/p&gt;```&lt;p&gt;    Introducing GitHub    &lt;sup&gt;        &amp;reg;    &lt;/sup&gt;&lt;/p&gt;This module parses HTML/XML as a raw string to more intelligently format tags.## InstallationYou have two options:1. `pip install prettierfier` in your command line2. Copy the contents of [prettierfier.py](prettierfier.py) to your own module.This module is built with just the Python Standard Library and contains no external third-party dependencies.## Functions**prettify_xml**(*xml_string, indent=2, debug=False*)* Can be used with no prior formatting.```    Args:        xml_string (str): XML text to prettify.        indent (int, optional): Set size of XML tag indents.    Test-only args:        debug (bool, optional): Show results of each regexp application.    Returns:        str: Prettified XML.```**prettify_html**(*html_string, debug=False*)* Originally created to process `BeautifulSoup.prettify()` output.* Does not add or remove regular line breaks. Can be used with regular HTML if it already has the newlines you want to keep.```    Args:        html_string (str): HTML string to parse.    Test-only args:        debug (bool, optional): Show results of each regexp application.    Returns:        str: Prettified HTML.```## Example```import prettierfierugly_html = &quot;&quot;&quot;&lt;p&gt;    Introducing GitHub    &lt;sup&gt;        &amp;reg;    &lt;/sup&gt;&lt;/p&gt;&quot;&quot;&quot;pretty_html = prettierfier.prettify_html(ugly_html)print(pretty_html) # Output&gt;&gt;&gt; &lt;p&gt;Introducing GitHub&lt;sup&gt;&amp;reg;&lt;/sup&gt;&lt;/p&gt;```### Links* [GitHub](https://github.com/annedo/prettierfier)* [PyPi](https://pypi.org/project/prettierfier/)</longdescription>
</pkgmetadata>