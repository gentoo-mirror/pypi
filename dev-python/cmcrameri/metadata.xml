<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Python package](https://github.com/callumrollo/cmcrameri/workflows/Python%20package/badge.svg)[![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)]()[![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)]()[![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)]()[![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)]()[![Python 3.10](https://img.shields.io/badge/python-3.10-blue.svg)]()[![Python 3.11](https://img.shields.io/badge/python-3.11-blue.svg)]()[![Downloads](https://pepy.tech/badge/cmcrameri)](https://pepy.tech/project/cmcrameri) (PyPI)[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/cmcrameri.svg)](https://anaconda.org/conda-forge/cmcrameri) (conda-forge)# cmcrameriThis is a Python wrapper around Fabio Crameri's perceptually uniform colormaps.&lt;https://www.fabiocrameri.ch/colourmaps/&gt;All credit for creating the colormaps to Fabio.Any errors in the Python implementation of colormaps are my own.This version is based on _Scientific colour maps_ [version 8.0](https://doi.org/10.5281/zenodo.8035877) (2023-06-14).## InstallWith `pip`:```shpython -m pip install cmcrameri```With `conda`:```shconda install -c conda-forge cmcrameri```## Usage example```pythonimport cmcrameri.cm as cmcimport matplotlib.pyplot as pltimport numpy as npx = np.linspace(0, 1, 100)[np.newaxis, :]plt.imshow(x, aspect='auto', cmap=cmc.batlow)plt.axis('off')plt.show()```Alternatively, the registered name string can be used.```pythonimport cmcrameri # required in order to register the colormaps with Matplotlib...plt.imshow(x, aspect='auto', cmap='cmc.batlow')```## Extra instructionsYou can access all the core colormaps from Fabio Crameri's list by `cmcrameri.cm.&lt;colormapname&gt;`.You can use tab autocompletion on `cmcrameri.cm` if your editor supports it.For a reversed colormap, append `_r` to the colormap name.Categorical colormaps have the suffix `S`.For an image of all the available colormaps without leaving the comfort of your Python session:```pythonfrom cmcrameri import show_cmapsshow_cmaps()```![Figure demonstrating the colormaps](cmcrameri/colormaps.png)The original colormap text files are shipped as part of the package.Find them on your system with:```pythonfrom cmcrameri.cm import pathspaths```## LicenseThis work is licensed under an [MIT license](https://mit-license.org/).</longdescription>
</pkgmetadata>