<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Airflow prometheus exporterExposes dag and task based metrics from Airflow to a Prometheus compatible endpoint.## Compatibility with Airflow versions### &gt;=2.0Current version is compatible with Airflow 2.0+### &lt;=1.10.14, &gt;=1.10.3Version v1.3.2 is compatible**Note: Airflow 1.10.14 with Python 3.8 users**You should install `importlib-metadata` package in order for plugin to be loaded. See [#85](https://github.com/epoch8/airflow-exporter/issues/85) for details.### &lt;1.10.3Version [v0.5.4](https://github.com/epoch8/airflow-exporter/releases/tag/v0.5.4) is compatible## Install```shpip install airflow-exporter```That's it. You're done.## Exporting extra labels to PrometheusIt is possible to add extra labels to DAG-related metrics by providing `labels` dict to DAG `params`.### Example```pythondag = DAG(    'dummy_dag',    schedule_interval=timedelta(hours=5),    default_args=default_args,    catchup=False,    params={        'labels': {            'env': 'test'        }    })```Label `env` with value `test` will be added to all metrics related to `dummy_dag`:`airflow_dag_status{dag_id=&quot;dummy_dag&quot;,env=&quot;test&quot;,owner=&quot;owner&quot;,status=&quot;running&quot;} 12.0`## MetricsMetrics will be available at ```http://&lt;your_airflow_host_and_port&gt;/admin/metrics/```### `airflow_task_status`Labels:* `dag_id`* `task_id`* `owner`* `status`Value: number of tasks in a specific status.### `airflow_dag_status`Labels:* `dag_id`* `owner`* `status`Value: number of dags in a specific status.### `airflow_dag_run_duration`Labels:* `dag_id`: unique identifier for a given DAGValue: duration in seconds of the longest DAG Run for given DAG. This metric is not available for DAGs that have already finished.### `airflow_dag_last_status`Labels:* `dag_id`* `owner`* `status`Value: 0 or 1 depending on wherever the current state of each `dag_id` is `status`.## LicenseDistributed under the BSD license. See [LICENSE](LICENSE) for moreinformation.</longdescription>
</pkgmetadata>