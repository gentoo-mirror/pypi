<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>### pascalPython utility to work with PascalVoc annotation formatImage examples from [PascalVoc2007](hhttp://host.robots.ox.ac.uk/pascal/VOC/voc2007/) dataset#### Code Examples##### Read annotation from xml file```from pathlib import Pathimport cv2from pascal import PascalVOCds = Path(&quot;./datasets/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007/Annotations&quot;)img_path = Path(&quot;./datasets/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007/JPEGImages&quot;)if __name__ == '__main__':    for file in ds.glob(&quot;*.xml&quot;):        ann = PascalVOC.from_xml(file)        img = cv2.imread(str(img_path / ann.filename))        for obj in ann.objects:            p1 = (obj.bndbox.xmin, obj.bndbox.ymin)            p2 = (obj.bndbox.xmax, obj.bndbox.ymin)            p3 = (obj.bndbox.xmax, obj.bndbox.ymax)            p4 = (obj.bndbox.xmin, obj.bndbox.ymax)            cv2.line(img, p1, p2, color=(0, 255, 0), thickness=3)            cv2.line(img, p2, p3, color=(0, 255, 0), thickness=3)            cv2.line(img, p3, p4, color=(0, 255, 0), thickness=3)            cv2.line(img, p4, p1, color=(0, 255, 0), thickness=3)        cv2.imshow(&quot;Image&quot;, img)        cv2.waitKey(0)        cv2.destroyAllWindows()```##### Make annotation```from pascal import PascalVOC, PascalObject, BndBox, size_blockif __name__ == '__main__':    obj = PascalObject(&quot;chair&quot;, &quot;Rear&quot;, truncated=False, difficult=False, bndbox=BndBox(263, 211, 324, 339))    pascal_ann = PascalVOC(&quot;000005.jpg&quot;, size=size_block(500, 375, 3), objects=[obj])    pascal_ann.save(&quot;000005.xml&quot;)```##### Convert to [labelme](https://github.com/wkentaro/labelme) format```from pathlib import Pathimport jsonfrom pascal import PascalVOCds = Path(&quot;./datasets/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007&quot;)annotations = ds / &quot;Annotations&quot;img_path = ds / &quot;JPEGImages&quot;out = ds / &quot;label_me&quot;if __name__ == '__main__':    for file in annotations.glob(&quot;*.xml&quot;):        ann = PascalVOC.from_xml(file)        lbl_me = ann.to_labelme(img_path, save_img_data=False)        with open(out / f&quot;{file.stem}.json&quot;, &quot;w&quot;) as f:            json.dump(lbl_me, f)```![Labelme](labelme.png &quot;Labelme&quot;)##### Convert to YOLO format```from pathlib import Pathfrom pascal import PascalVOCds = Path(&quot;xmls&quot;)label_map = {    &quot;plate&quot;: 0,    &quot;other&quot;: 1,    &quot;taxi&quot;: 2,    &quot;standard&quot;: 3}if __name__ == '__main__':    for file in ds.glob(&quot;*.xml&quot;):        ann = PascalVOC.from_xml(file)        yolo = ann.to_yolo(label_map)        out_name = f&quot;{file.stem}.txt&quot;        with open(out_name, &quot;w&quot;) as f:            f.write(yolo)```#### InstallationFrom source ```python setup.py install```Using pip```pip install pascal-voc```</longdescription>
</pkgmetadata>