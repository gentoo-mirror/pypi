<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># üß¨üè¶ `gb-io.py` [![Stars](https://img.shields.io/github/stars/althonos/gb-io.py.svg?style=social&amp;maxAge=3600&amp;label=Star)](https://github.com/althonos/gb-io.py/stargazers)*A Python interface to [`gb-io`], a fast [GenBank] parser written in [Rust].*[`gb-io`]: https://crates.io/crates/gb-io[GenBank]: https://www.ncbi.nlm.nih.gov/genbank/[Rust]: https://www.rust-lang.org/[![Actions](https://img.shields.io/github/actions/workflow/status/althonos/gb-io.py/test.yml?branch=main&amp;logo=github&amp;style=flat-square&amp;maxAge=300)](https://github.com/althonos/gb-io.py/actions)[![Coverage](https://img.shields.io/codecov/c/gh/althonos/gb-io.py?style=flat-square&amp;maxAge=3600)](https://codecov.io/gh/althonos/gb-io.py/)[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&amp;maxAge=2678400)](https://choosealicense.com/licenses/mit/)[![PyPI](https://img.shields.io/pypi/v/gb-io.svg?style=flat-square&amp;maxAge=3600)](https://pypi.org/project/gb-io)[![Wheel](https://img.shields.io/pypi/wheel/gb-io.svg?style=flat-square&amp;maxAge=3600)](https://pypi.org/project/gb-io/#files)[![Python Versions](https://img.shields.io/pypi/pyversions/gb-io.svg?style=flat-square&amp;maxAge=3600)](https://pypi.org/project/gb-io/#files)[![Python Implementations](https://img.shields.io/pypi/implementation/gb-io?style=flat-square&amp;maxAge=3600&amp;label=impl)](https://pypi.org/project/gb-io/#files)[![Source](https://img.shields.io/badge/source-GitHub-303030.svg?maxAge=2678400&amp;style=flat-square)](https://github.com/althonos/gb-io.py/)[![Mirror](https://img.shields.io/badge/mirror-EMBL-009f4d?style=flat-square&amp;maxAge=2678400)](https://git.embl.de/larralde/gb-io.py/)[![GitHub issues](https://img.shields.io/github/issues/althonos/gb-io.py.svg?style=flat-square&amp;maxAge=600)](https://github.com/althonos/gb-io.py/issues)[![Changelog](https://img.shields.io/badge/keep%20a-changelog-8A0707.svg?maxAge=2678400&amp;style=flat-square)](https://github.com/althonos/gb-io.py/blob/master/CHANGELOG.md)[![Downloads](https://img.shields.io/badge/dynamic/json?style=flat-square&amp;color=303f9f&amp;maxAge=86400&amp;label=downloads&amp;query=%24.total_downloads&amp;url=https%3A%2F%2Fapi.pepy.tech%2Fapi%2Fprojects%2Fgb-io)](https://pepy.tech/project/gb-io)&lt;!-- [![Docs](https://img.shields.io/readthedocs/gb-io/latest?style=flat-square&amp;maxAge=600)](https://gb-io.readthedocs.io) --&gt;## üó∫Ô∏è Overview`gb-io.py` is a Python package that provides an interface to `gb-io`, a veryfast GenBank format parser implemented in Rust. It can reach much higherspeed than the [Biopython](http://biopython.org/) orthe [scikit-bio](http://scikit-bio.org/) parsers.This library has no external dependency and is available for all modern Pythonversions (3.7+).## üîß InstallingInstall the `gb-io` package directly from [PyPi](https://pypi.org/project/gb-io)which hosts pre-compiled wheels that can be installed with `pip`:```console$ pip install gb-io```Wheels are provided for the following platforms:- Linux, CPython, x86-64- Linux, CPython, Aarch64- MacOS, CPython, x86-64- MacOS, PyPy, x86-64- Windows, CPython, x86-64- Windows, PyPy, x86-64Otherwise, the source distribution will be downloaded, and a local copy ofthe Rust compiler will be downloaded to build the package, unless it isalready installed on the host machine.&lt;!-- ## üìñ DocumentationA complete [API reference](https://gb-io.readthedocs.io/en/stable/api.html)can be found in the [online documentation](https://gb-io.readthedocs.io/),or directly from the command line using[`pydoc`](https://docs.python.org/3/library/pydoc.html):```console$ pydoc gb_io``` --&gt;## üí° UsageUse the `gb_io.load` function to obtain a list of all GenBank records in a file:```pythonrecords = gb_io.load(&quot;tests/data/AY048670.1.gb&quot;)```Reading from a file-like object is supported as well, both in text andbinary mode:```pythonwith open(&quot;tests/data/AY048670.1.gb&quot;) as file:    records = gb_io.load(file)```It is also possible to iterate over each record in the file without havingto load the entirety of the file contents to memory with the `gb_io.iter`method, which returns an iterator instead of a list:```pythonfor record in gb_io.iter(&quot;tests/data/AY048670.1.gb&quot;):    print(record.name, record.sequence[:10])```You can use the `gb_io.dump` method to write one or more records to a file(either given as a path, or a file-like handle):```pythonwith open(&quot;tests/data/AY048670.1.gb&quot;, &quot;wb&quot;) as file:    gb_io.dump(records, file)```## üìù ExampleThe following small script will extract all the CDS features from a GenBankfile, and write them in FASTA format to an output file:```pythonimport gb_iowith open(&quot;tests/data/AY048670.1.faa&quot;, &quot;w&quot;) as dst:    for record in gb_io.iter(&quot;tests/data/AY048670.1.gb&quot;):        for feature in filter(lambda feat: feat.type == &quot;CDS&quot;, record.features):            qualifiers = feature.qualifiers.to_dict()            dst.write(&quot;&gt;{}\n&quot;.format(qualifiers[&quot;locus_tag&quot;][0]))            dst.write(&quot;{}\n&quot;.format(qualifiers[&quot;translation&quot;][0]))```Compared to similar implementations using `Bio.SeqIO.parse`, `Bio.GenBank.parse`and `Bio.GenBank.Scanner.GenBankScanner.parse_cds_features`, the performance isthe following:|               | `gb_io.iter`  | `GenBankScanner` | `GenBank.parse` | `SeqIO.parse` || ------------- | ------------- | ---------------- | --------------- | ------------- || Time (s)      | **2.264**     | 7.982            | 15.259          | 19.351        || Speed (MiB/s) | **136.5**     | 37.1             | 20.5            | 16.2          || Speedup       | **x8.55**     | x2.42            | x1.27           | -             |## üí≠ Feedback### ‚ö†Ô∏è Issue TrackerFound a bug ? Have an enhancement request ? Head over to the [GitHub issuetracker](https://github.com/althonos/gb-io.py/issues) if you need to reportor ask something. If you are filing in on a bug, please include as muchinformation as you can about the issue, and try to recreate the same bugin a simple, easily reproducible situation.### üèóÔ∏è ContributingContributions are more than welcome! See[`CONTRIBUTING.md`](https://github.com/althonos/gb-io.py/blob/main/CONTRIBUTING.md)for more details.## ‚öñÔ∏è LicenseThis library is provided under the [MIT License](https://choosealicense.com/licenses/mit/).The `gb-io` Rust crate package was written by [David Leslie](https://github.com/dlesl)and is licensed under the terms of the [MIT License](https://choosealicense.com/licenses/mit/).This package vendors the source of several additional packages that arelicensed under the [Apache-2.0](https://choosealicense.com/licenses/apache-2.0/),[MIT](https://choosealicense.com/licenses/mit/) or[BSD-3-Clause](https://choosealicense.com/licenses/bsd-3-clause/) licenses;see the license file distributed with the source copy of each vendoreddependency for more information.*This project is in no way not affiliated, sponsored, or otherwise endorsedby the [original `gb-io` authors](https://github.com/dlesl). It was developedby [Martin Larralde](https://github.com/althonos/) during his PhD projectat the [European Molecular Biology Laboratory](https://www.embl.de/) inthe [Zeller team](https://github.com/zellerlab).*</longdescription>
</pkgmetadata>