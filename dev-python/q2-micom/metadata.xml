<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/micom-dev/q2-micom/raw/main/docs/assets/logo.png&quot; width=&quot;75%&quot;&gt;[![Test and deploy](https://github.com/micom-dev/q2-micom/actions/workflows/test_package.yml/badge.svg)](https://github.com/micom-dev/q2-micom/actions/workflows/test_package.yml)[![codecov](https://codecov.io/gh/micom-dev/q2-micom/branch/main/graph/badge.svg)](https://codecov.io/gh/micom-dev/q2-micom)[![PyPI version](https://badge.fury.io/py/q2-micom.svg)](https://badge.fury.io/py/q2-micom)A QIIME 2 plugin for MICOM.## InstallationYou will need an existing QIIME 2 environment. Follow the instructions on ([how to install QIIME 2](https://docs.qiime2.org/2021.8/install/native/#install-qiime-2-within-a-conda-environment))otherwise. Let's assume that environment was called `qiime2-2021.8` for all further steps.### Add q2-micom to the QIIME 2 environmentThis will be the same step for any supported QIIME 2 version or operating systems.```bashwget https://raw.githubusercontent.com/micom-dev/q2-micom/main/q2-micom.ymlconda env update -n qiime2-2021.8 -f q2-micom.yml# OPTIONAL CLEANUPrm q2-micom.yml```Finally, you activate your environment.```bashconda activate qiime2-2021.8```### Install a QP solver (optional)`q2-micom` will now install the open source solver OSQP that can be used with MICOM. OSQP isfairly fast and will give solutions with accuracy in the order of 1e-3 - 1e-4. If you use MICOMregularly we do recommend to obtain an academic license for CPLEX which will be faster and moreaccurate. We do not recommend Gurobi anymore because we can not test it as stringently as theother solvers and it is also slower than CPLEX or OSQP. However, you may still use Gurobiwith `q2-micom`, but things may break.**CPLEX (recommended)***QIIME 2 versions before 2021.4 are only compatible with CPLEX 12.10 or earlier (later version require at least Python 3.7).*After registering and downloading the CPLEX studio for your OS unpack it (by running the provided installer) to a directory of your choice (we will assume it's called `ibm`).Now install the CPLEX python package into your activated environment:```bashpip install ibm/cplex/python/3.6/x86-64_linux```Substitute `3.6` with the Python version in your QIIME 2 environment, `3.6` for QIIME 2 up to 2021.2 and `3.8` for QIIME 2 2021.4 and newer.Substitute `x86-64_linux` with the folder corresponding to your system (there will only be one subfolder in that directory).**Gurobi (works, but not recommended)**`q2-micom` is not tested against Gurobi. Consequently Gurobi support is often iffy and might break for periods of time. It will also be *much* slower than CPLEX or OSQP.You should only consider using Gurobi if:1. You do not have access to CPLEX2. You do need high accuracy solutions (tolerance of 1e-6 or lower)Gurobi can be installed with conda.```bashconda install -c gurobi gurobi```You will now have to register the installation using your license key.```bashgrbgetkey YOUR-LICENSE-KEY```### Finish your installationIf you installed `q2-micom` in an already existing QIIME 2 environment, update the plugin cache:```bashconda activate qiime2-2021.8  # or whatever you called your environmentqiime dev refresh-cache```You are now ready to run `q2-micom`!## UsageHere is a graphical overview of a `q2-micom` analysis.&lt;img src=&quot;https://github.com/micom-dev/q2-micom/raw/main/docs/assets/overview.png&quot; width=&quot;100%&quot;&gt;The best way to get started is to work through the [community tutorial](https://micom-dev.github.io/q2-micom).## Supported QIIME 2 versions`q2-micom` is tested against:1. the current [QIIME 2 version](https://docs.qiime2.org/)2. the previous versionIt should also work with3. the [development version](https://dev.qiime2.org/latest/)&lt;br&gt;   However, this may occasionally break. Check [here for the current status](https://github.com/micom-dev/q2-micom/actions/workflows/qiime_dev.yml).## ReferencesMICOM: Metagenome-Scale Modeling To Infer Metabolic Interactions in the Gut Microbiota &lt;br&gt;Christian Diener, Sean M. Gibbons, Osbaldo Resendis-Antonio &lt;br&gt;mSystems 5:e00606-19 &lt;br&gt;https://doi.org/10.1128/mSystems.00606-19</longdescription>
</pkgmetadata>