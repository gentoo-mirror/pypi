<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=======ge25519=======Pure-Python data structure for working with Ed25519 (and Ristretto) group elements and operations.|pypi| |readthedocs| |actions| |coveralls|.. |pypi| image:: https://badge.fury.io/py/ge25519.svg   :target: https://badge.fury.io/py/ge25519   :alt: PyPI version and link... |readthedocs| image:: https://readthedocs.org/projects/ge25519/badge/?version=latest   :target: https://ge25519.readthedocs.io/en/latest/?badge=latest   :alt: Read the Docs documentation status... |actions| image:: https://github.com/nthparty/ge25519/workflows/lint-test-cover-docs/badge.svg   :target: https://github.com/nthparty/ge25519/actions/workflows/lint-test-cover-docs.yml   :alt: GitHub Actions status... |coveralls| image:: https://coveralls.io/repos/github/nthparty/ge25519/badge.svg?branch=main   :target: https://coveralls.io/github/nthparty/ge25519?branch=main   :alt: Coveralls test coverage summary.Purpose-------This library provides a native Python implementation of `Ed25519 &lt;https://ed25519.cr.yp.to&gt;`__ group elements and a number of operations over them. The library makes it possible to fill gaps in application prototypes that may have specific limitations with respect to their operating environment or their ability to rely on non-Python dependencies.The implementation is based upon and is compatible with the corresponding implementation of Ed25519 and Ristretto group elements used in `libsodium &lt;https://github.com/jedisct1/libsodium&gt;`__. For more information and background about the underlying mathematical structures and primitives, consult materials about `Curve25519 &lt;https://cr.yp.to/ecdh.html&gt;`__, the `Ristretto &lt;https://ristretto.group&gt;`__ group, and the related `Ed25519 &lt;https://ed25519.cr.yp.to&gt;`__ system.Installation and Usage----------------------This library is available as a `package on PyPI &lt;https://pypi.org/project/ge25519&gt;`__:.. code-block:: bash    python -m pip install ge25519The library can be imported in the usual ways:.. code-block:: python    import ge25519    from ge25519 import *Development-----------All installation and development dependencies are fully specified in ``pyproject.toml``. The ``project.optional-dependencies`` object is used to `specify optional requirements &lt;https://peps.python.org/pep-0621&gt;`__ for various development tasks. This makes it possible to specify additional options (such as ``docs``, ``lint``, and so on) when performing installation using `pip &lt;https://pypi.org/project/pip&gt;`__:.. code-block:: bash    python -m pip install .[docs,lint]Documentation^^^^^^^^^^^^^The documentation can be generated automatically from the source files using `Sphinx &lt;https://www.sphinx-doc.org&gt;`__:.. code-block:: bash    python -m pip install .[docs]    cd docs    sphinx-apidoc -f -E --templatedir=_templates -o _source .. &amp;&amp; make htmlTesting and Conventions^^^^^^^^^^^^^^^^^^^^^^^All unit tests are executed and their coverage is measured when using `pytest &lt;https://docs.pytest.org&gt;`__ (see the ``pyproject.toml`` file for configuration details):.. code-block:: bash    python -m pip install .[test]    python -m pytestConcise unit tests are implemented with the help of `fountains &lt;https://pypi.org/project/fountains&gt;`__; new reference specifications for these tests can be generated by running the testing module directly:.. code-block:: bash    python test/test_ge25519.pyStyle conventions are enforced using `Pylint &lt;https://pylint.readthedocs.io&gt;`__:.. code-block:: bash    python -m pip install .[lint]    python -m pylint src/ge25519 test/test_ge25519.pyContributions^^^^^^^^^^^^^In order to contribute to the source code, open an issue or submit a pull request on the `GitHub page &lt;https://github.com/nthparty/ge25519&gt;`__ for this library.Versioning^^^^^^^^^^Beginning with version 0.1.0, the version number format for this library and the changes to the library associated with version number increments conform with `Semantic Versioning 2.0.0 &lt;https://semver.org/#semantic-versioning-200&gt;`__.Publishing^^^^^^^^^^This library can be published as a `package on PyPI &lt;https://pypi.org/project/ge25519&gt;`__ by a package maintainer. First, install the dependencies required for packaging and publishing:.. code-block:: bash    python -m pip install .[publish]Ensure that the correct version number appears in ``pyproject.toml``, and that any links in this README document to the Read the Docs documentation of this package (or its dependencies) have appropriate version numbers. Also ensure that the Read the Docs project for this library has an `automation rule &lt;https://docs.readthedocs.io/en/stable/automation-rules.html&gt;`__ that activates and sets as the default all tagged versions. Create and push a tag for this version (replacing ``?.?.?`` with the version number):.. code-block:: bash    git tag ?.?.?    git push origin ?.?.?Remove any old build/distribution files. Then, package the source into a distribution archive:.. code-block:: bash    rm -rf build dist src/*.egg-info    python -m build --sdist --wheel .Finally, upload the package distribution archive to `PyPI &lt;https://pypi.org&gt;`__:.. code-block:: bash    python -m twine upload dist/*</longdescription>
</pkgmetadata>