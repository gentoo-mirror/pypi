<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># asciinema[![Build Status](https://github.com/asciinema/asciinema/actions/workflows/asciinema.yml/badge.svg)](https://github.com/asciinema/asciinema/actions/workflows/asciinema.yml)[![PyPI](https://img.shields.io/pypi/v/asciinema.svg)](https://pypi.org/project/asciinema/)[![license](http://img.shields.io/badge/license-GNU-blue.svg)](https://raw.githubusercontent.com/asciinema/asciinema/master/LICENSE)Terminal session recorder and the best companion of[asciinema.org](https://asciinema.org).[![demo](https://asciinema.org/a/335480.svg)](https://asciinema.org/a/335480?autoplay=1)## Quick introasciinema lets you easily record terminal sessions and replaythem in a terminal as well as in a web browser.Install latest version ([other installation options](#installation))using [pipx](https://pypa.github.io/pipx/) (if you have it):```shpipx install asciinema```If you don't have pipx, install using pip with your preferred Python version:```shpython3 -m pip install asciinema```Record your first session:```shasciinema rec first.cast```Now replay it with double speed:```shasciinema play -s 2 first.cast```Or with normal speed but with idle time limited to 2 seconds:```shasciinema play -i 2 first.cast```You can pass `-i 2` to `asciinema rec` as well, to set it permanently on arecording. Idle time limiting makes the recordings much more interesting towatch. Try it.If you want to watch and share it on the web, upload it:```shasciinema upload first.cast```The above uploads it to [asciinema.org](https://asciinema.org), which is adefault [asciinema-server](https://github.com/asciinema/asciinema-server)instance, and prints a secret link you can use to watch your recording in a webbrowser.You can record and upload in one step by omitting the filename:```shasciinema rec```You'll be asked to confirm the upload when the recording is done. Nothing issent anywhere without your consent.These are the basics, but there's much more you can do. The following sectionscover installation, usage and hosting of the recordings in more detail.## Installation### Python package from PyPI[pypi]: https://pypi.python.org/pypi/asciinemaasciinema is available on [PyPI] and can be installed with[pipx](https://pypa.github.io/pipx/) (if you have it) or with pip (Python 3with setuptools required):```shpipx install asciinema```Or with pip (using your preferred Python version):```shpython3 -m pip install asciinema```Installing from [PyPI] is the recommended way of installation, which gives you the latest released version.### Native packagesasciinema is included in repositories of most popular package managers on Mac OSX, Linux and FreeBSD. Look for package named `asciinema`. See the[list of available packages](https://asciinema.org/docs/installation).### Running latest version from source code checkoutIf you can't use Python package or native package for your OS is outdated youcan clone the repo and run asciinema straight from the checkout.Clone the repo:```shgit clone https://github.com/asciinema/asciinema.gitcd asciinema```If you want latest stable version:```shgit checkout master```If you want current development version:```shgit checkout develop```Then run it with:```shpython3 -m asciinema --version```### Docker imageasciinema Docker image is based on [Ubuntu22.04](https://releases.ubuntu.com/22.04/) and has the latest version ofasciinema recorder pre-installed.```shdocker pull ghcr.io/asciinema/asciinema```When running it don't forget to allocate a pseudo-TTY (`-t`), keep STDIN open(`-i`) and mount config directory volume (`-v`):```shdocker run --rm -it -v &quot;${HOME}/.config/asciinema:/root/.config/asciinema&quot; ghcr.io/asciinema/asciinema rec```Container's entrypoint is set to `/usr/local/bin/asciinema` so you can run thecontainer with any arguments you would normally pass to `asciinema` binary (seeUsage section for commands and options).There's not much software installed in this image though. In most cases you maywant to install extra programs before recording. One option is to derive newimage from this one (start your custom Dockerfile with `FROMghcr.io/asciinema/asciinema`). Another option is to start the container with`/bin/bash` as the entrypoint, install extra packages and manually start`asciinema rec`:```consoledocker run --rm -it -v &quot;${HOME}/.config/asciinema:/root/.config/asciinema&quot; --entrypoint=/bin/bash ghcr.io/asciinema/asciinema recroot@6689517d99a1:~# apt-get install foobarroot@6689517d99a1:~# asciinema rec```It is also possible to run the docker container as a non-root user, which hassecurity benefits. You can specify a user and group id at runtime to give theapplication permission similar to the calling user on your host.```shdocker run --rm -it \    --env=ASCIINEMA_CONFIG_HOME=&quot;/run/user/$(id -u)/.config/asciinema&quot; \    --user=&quot;$(id -u):$(id -g)&quot; \    --volume=&quot;${HOME}/.config/asciinema:/run/user/$(id -u)/.config/asciinema:rw&quot; \    --volume=&quot;${PWD}:/data:rw&quot; \    --workdir='/data' \    ghcr.io/asciinema/asciinema rec```## Usageasciinema is composed of multiple commands, similar to `git`, `apt-get` or`brew`.When you run `asciinema` with no arguments help message is displayed, listingall available commands with their options.### `rec [filename]`**Record terminal session.**By running `asciinema rec [filename]` you start a new recording session. Thecommand (process) that is recorded can be specified with `-c` option (seebelow), and defaults to `$SHELL` which is what you want in most cases.You can temporarily pause the capture of your terminal by pressing&lt;kbd&gt;Ctrl+\\&lt;/kbd&gt;.  This is useful when you want to execute some commands duringthe recording session that should not be captured (e.g. pasting secrets). Resumeby pressing &lt;kbd&gt;Ctrl+\\&lt;/kbd&gt; again. When pausing desktop notification isdisplayed so you're sure the sensitive output won't be captured in therecording.Recording finishes when you exit the shell (hit &lt;kbd&gt;Ctrl+D&lt;/kbd&gt; or type`exit`). If the recorded process is not a shell then recording finishes whenthe process exits.If the `filename` argument is omitted then (after asking for confirmation) theresulting asciicast is uploaded to[asciinema-server](https://github.com/asciinema/asciinema-server) (by default toasciinema.org), where it can be watched and shared.If the `filename` argument is given then the resulting recording (called[asciicast](doc/asciicast-v2.md)) is saved to a local file. It can later bereplayed with `asciinema play &lt;filename&gt;` and/or uploaded to asciinema serverwith `asciinema upload &lt;filename&gt;`.`ASCIINEMA_REC=1` is added to recorded process environment variables. Thiscan be used by your shell's config file (`.bashrc`, `.zshrc`) to alter theprompt or play a sound when the shell is being recorded.Available options:- `--stdin` - Enable stdin (keyboard) recording (see below)- `--append` - Append to existing recording- `--raw` - Save raw STDOUT output, without timing information or other metadata- `--overwrite` - Overwrite the recording if it already exists- `-c, --command=&lt;command&gt;` - Specify command to record, defaults to $SHELL- `-e, --env=&lt;var-names&gt;` - List of environment variables to capture, defaults  to `SHELL,TERM`- `-t, --title=&lt;title&gt;` - Specify the title of the asciicast- `-i, --idle-time-limit=&lt;sec&gt;` - Limit recorded terminal inactivity to max `&lt;sec&gt;` seconds- `--cols=&lt;n&gt;` - Override terminal columns for recorded process- `--rows=&lt;n&gt;` - Override terminal rows for recorded process- `-y, --yes` - Answer &quot;yes&quot; to all prompts (e.g. upload confirmation)- `-q, --quiet` - Be quiet, suppress all notices/warnings (implies -y)Stdin recording allows for capturing of all characters typed in by the user inthe currently recorded shell. This may be used by a player (e.g.[asciinema-player](https://github.com/asciinema/asciinema-player)) to displaypressed keys. Because it's basically key-logging (scoped to a single shellinstance), it's disabled by default, and has to be explicitly enabled via`--stdin` option.### `play &lt;filename&gt;`**Replay recorded asciicast in a terminal.**This command replays given asciicast (as recorded by `rec` command) directly inyour terminal.Following keyboard shortcuts are available by default:- &lt;kbd&gt;Space&lt;/kbd&gt; - toggle pause,- &lt;kbd&gt;.&lt;/kbd&gt; - step through a recording a frame at a time (when paused),- &lt;kbd&gt;Ctrl+C&lt;/kbd&gt; - exit.See &quot;Configuration file&quot; section for information on how to customize thekeyboard shortcuts.Playing from a local file:```shasciinema play /path/to/asciicast.cast```Playing from HTTP(S) URL:```shasciinema play https://asciinema.org/a/22124.castasciinema play http://example.com/demo.cast```Playing from asciicast page URL (requires `&lt;link rel=&quot;alternate&quot; type=&quot;application/x-asciicast&quot; href=&quot;/my/ascii.cast&quot;&gt;` in page's HTML):```shasciinema play https://asciinema.org/a/22124asciinema play http://example.com/blog/post.html```Playing from stdin:```shcat /path/to/asciicast.cast | asciinema play -ssh user@host cat asciicast.cast | asciinema play -```Playing from IPFS:```shasciinema play dweb:/ipfs/QmNe7FsYaHc9SaDEAEXbaagAzNw9cH7YbzN4xV7jV1MCzK/ascii.cast```Available options:- `-i, --idle-time-limit=&lt;sec&gt;` - Limit replayed terminal inactivity to max `&lt;sec&gt;` seconds- `-s, --speed=&lt;factor&gt;` - Playback speed (can be fractional)- `-l, --loop` - Play in a loop- `-m, --pause-on-markers` - Automatically pause on [markers](#markers)- `--stream=&lt;stream&gt;` - Select stream to play (see below)- `--out-fmt=&lt;format&gt;` - Select output format (see below)By default the output stream (`o`) is played. This is what you want in mostcases.  If you recorded the input stream (`i`) with `asciinema rec --stdin` thenyou can replay it with `asciinema play --stream=i &lt;filename&gt;`.By default the selected stream is written to stdout in original, raw data form.This is also what you want in majority of cases. However you can change theoutput format to asciicast (newline delimited JSON) with `asciinema play--out-fmt=asciicast &lt;filename&gt;`. This allows delegating actual rendering toanother place (e.g. outside of your terminal) by piping output of `asciinemaplay` to a tool of your choice.&gt; For the best playback experience it is recommended to run `asciinema play` in&gt; a terminal of dimensions not smaller than the one used for recording, as&gt; there's no &quot;transcoding&quot; of control sequences for new terminal size.### `cat &lt;filename&gt;`**Print full output of recorded asciicast to a terminal.**While `asciinema play &lt;filename&gt;` replays the recorded session using timinginformation saved in the asciicast, `asciinema cat &lt;filename&gt;` dumps the fulloutput (including all escape sequences) to a terminal immediately.`asciinema cat existing.cast &gt;output.txt` gives the same result as recording via`asciinema rec --raw output.txt`.### `upload &lt;filename&gt;`**Upload recorded asciicast to asciinema.org site.**This command uploads given asciicast (recorded by `rec` command) toasciinema.org, where it can be watched and shared.`asciinema rec demo.cast` + `asciinema play demo.cast` + `asciinema upload demo.cast` is a nice combo if you want to review an asciicast beforepublishing it on asciinema.org.### `auth`**Link your install ID with your asciinema.org user account.**If you want to manage your recordings (change title/theme, delete) atasciinema.org you need to link your &quot;install ID&quot; with asciinema.org useraccount.This command displays the URL to open in a web browser to do that. You may beasked to log in first.Install ID is a random ID ([UUIDv4](https://en.wikipedia.org/wiki/Universally_unique_identifier)) generatedlocally when you run asciinema for the first time, and saved at`$HOME/.config/asciinema/install-id`. Its purpose is to connect local machinewith uploaded recordings, so they can later be associated with asciinema.orgaccount. This way we decouple uploading from account creation, allowing them tohappen in any order.&gt; A new install ID is generated on each machine and system user account you use&gt; asciinema on, so in order to keep all recordings under a single asciinema.org&gt; account you need to run `asciinema auth` on all of those machines.&gt; asciinema versions prior to 2.0 confusingly referred to install ID as &quot;API&gt; token&quot;.## MarkersMarkers allow marking specific time locations in a recording, which can be usedfor navigation, as well as for automatic pausing of the playback.Markers can be added to a recording in several ways:- while you are recording, by pressing a configured hotkey, see [add_marker_key  config option](#configuration-file)- for existing recording, by inserting marker events (`&quot;m&quot;`) in the asciicast  file, see [marker event](doc/asciicast-v2.md#m---marker)When replaying a recording with `asciinema play` you can enableauto-pause-on-marker behaviour with `-m`/`--pause-on-markers` option (it's offby default). When a marker is encountered, the playback automatically pauses andcan be resumed by pressing space bar key. The playback continues until nextmarker is encountered. You can also fast-forward to the next marker by pressing`]` key (when paused).Markers can be useful in e.g. live demos: you can create a recording withmarkers, then play it back during presentation, and have it stop wherever youwant to explain terminal contents in more detail.## Hosting the recordings on the webAs mentioned in the `Usage &gt; rec` section above, if the `filename` argument to`asciinema rec` is omitted then the recorded asciicast is uploaded to[asciinema.org](https://asciinema.org). You can watch it there and share it viasecret URL.If you prefer to host the recordings yourself, you can do so by either:- recording to a file (`asciinema rec demo.cast`), and using [asciinema's  standalone web  player](https://github.com/asciinema/asciinema-player#self-hosting-quick-start)  in your HTML page, or- setting up your own  [asciinema-server](https://github.com/asciinema/asciinema-server) instance,  and [setting API URL  accordingly](https://github.com/asciinema/asciinema-server/wiki/Installation-guide#using-asciinema-recorder-with-your-instance).## Configuration fileYou can configure asciinema by creating config file at`$HOME/.config/asciinema/config`.Configuration is split into sections (`[api]`, `[record]`, `[play]`). Here's alist of all available options for each section:```ini[api]; API server URL, default: https://asciinema.org; If you run your own instance of asciinema-server then set its address here; It can also be overriden by setting ASCIINEMA_API_URL environment variableurl = https://asciinema.example.com[record]; Command to record, default: $SHELLcommand = /bin/bash -l; Enable stdin (keyboard) recording, default: nostdin = yes; List of environment variables to capture, default: SHELL,TERMenv = SHELL,TERM,USER; Limit recorded terminal inactivity to max n seconds, default: offidle_time_limit = 2; Answer &quot;yes&quot; to all interactive prompts, default: noyes = true; Be quiet, suppress all notices/warnings, default: noquiet = true; Define hotkey for pausing recording (suspending capture of output),; default: C-\ (control + backslash)pause_key = C-p; Define hotkey for adding a marker, default: noneadd_marker_key = C-x; Define hotkey prefix key - when defined other recording hotkeys must; be preceeded by it, default: no prefixprefix_key = C-a[play]; Playback speed (can be fractional), default: 1speed = 2; Limit replayed terminal inactivity to max n seconds, default: offidle_time_limit = 1; Define hotkey for pausing/resuming playback,; default: spacepause_key = p; Define hotkey for stepping through playback, a frame at a time,; default: . (dot)step_key = s; Define hotkey for jumping to the next marker,; default: ]next_marker_key = m[notifications]; Desktop notifications are displayed on certain occasions, e.g. when; pausing/resuming the capture of terminal with C-\ keyboard shortcut.; Should desktop notifications be enabled, default: yesenabled = no; Custom notification command; asciinema automatically detects available desktop notification system; (notify-send on GNU/Linux, osacript/terminal-notifier on macOS). Custom; command can be used if needed.; When invoked, environment variable $TEXT contains notification text, while; $ICON_PATH contains path to the asciinema logo image.command = tmux display-message &quot;$TEXT&quot;```A very minimal config file could look like that:```ini[record]idle_time_limit = 2```Config directory location can be changed by setting `$ASCIINEMA_CONFIG_HOME`environment variable.If `$XDG_CONFIG_HOME` is set on Linux then asciinema uses`$XDG_CONFIG_HOME/asciinema` instead of `$HOME/.config/asciinema`.&gt; asciinema versions prior to 1.1 used `$HOME/.asciinema`. If you have it&gt; there you should `mv $HOME/.asciinema $HOME/.config/asciinema`.## ConsultingI offer consulting services for asciinema project. See https://asciinema.org/consulting for more information.## ContributingIf you want to contribute to this project check out[Contributing](https://asciinema.org/contributing) page.## AuthorsDeveloped with passion by [Marcin Kulik](http://ku1ik.com) and great opensource [contributors](https://github.com/asciinema/asciinema/contributors).## License© 2011 Marcin Kulik.All code is licensed under the GPL, v3 or later. See [LICENSE](./LICENSE) filefor details.</longdescription>
</pkgmetadata>