<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># &lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://predict-idlab.github.io/tsflex&quot;&gt;&lt;img alt=&quot;tsflex&quot; src=&quot;https://raw.githubusercontent.com/predict-idlab/tsflex/main/docs/_static/logo.png&quot; width=&quot;66%&quot;&gt;&lt;/a&gt;&lt;/p&gt;[![PyPI Latest Release](https://img.shields.io/pypi/v/tsflex.svg)](https://pypi.org/project/tsflex/)[![Conda Latest Release](https://img.shields.io/conda/vn/conda-forge/tsflex?label=conda)](https://anaconda.org/conda-forge/tsflex)[![support-version](https://img.shields.io/pypi/pyversions/tsflex)](https://img.shields.io/pypi/pyversions/tsflex)[![codecov](https://img.shields.io/codecov/c/github/predict-idlab/tsflex?logo=codecov)](https://codecov.io/gh/predict-idlab/tsflex)[![Code quality](https://img.shields.io/lgtm/grade/python/github/predict-idlab/tsflex?label=code%20quality&amp;logo=lgtm)](https://lgtm.com/projects/g/predict-idlab/tsflex/context:python)[![Downloads](https://pepy.tech/badge/tsflex)](https://pepy.tech/project/tsflex)[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?)](http://makeapullrequest.com)[![Documentation](https://github.com/predict-idlab/tsflex/actions/workflows/deploy-docs.yml/badge.svg)](https://github.com/predict-idlab/tsflex/actions/workflows/deploy-docs.yml)[![Testing](https://github.com/predict-idlab/tsflex/actions/workflows/test.yml/badge.svg)](https://github.com/predict-idlab/tsflex/actions/workflows/test.yml)&lt;!-- ![Downloads](https://img.shields.io/conda/dn/conda-forge/tsflex?logo=anaconda) --&gt;&gt; *tsflex* is a toolkit for _**flex**ible **t**ime **s**eries_ [processing](https://predict-idlab.github.io/tsflex/processing) &amp; [feature extraction](https://predict-idlab.github.io/tsflex/features), that is efficient and makes few assumptions about sequence data.#### Useful links- [Paper](https://www.sciencedirect.com/science/article/pii/S2352711021001904)- [Documentation](https://predict-idlab.github.io/tsflex/)- [Example (machine learning) notebooks](https://github.com/predict-idlab/tsflex/tree/main/examples)#### Installation| | command||:--------------|:--------------|| [**pip**](https://pypi.org/project/tsflex/) | `pip install tsflex` | | [**conda**](https://anaconda.org/conda-forge/tsflex) | `conda install -c conda-forge tsflex` |## Usage_tsflex_ is built to be intuitive, so we encourage you to copy-paste this code and toy with some parameters!### &lt;a href=&quot;https://predict-idlab.github.io/tsflex/features/#getting-started&quot;&gt;Feature extraction&lt;/a&gt;```pythonimport pandas as pd; import numpy as np; import scipy.stats as ssfrom tsflex.features import MultipleFeatureDescriptors, FeatureCollectionfrom tsflex.utils.data import load_empatica_data# 1. Load sequence-indexed data (in this case a time-index)df_tmp, df_acc, df_ibi = load_empatica_data(['tmp', 'acc', 'ibi'])# 2. Construct your feature extraction configurationfc = FeatureCollection(    MultipleFeatureDescriptors(          functions=[np.min, np.mean, np.std, ss.skew, ss.kurtosis],          series_names=[&quot;TMP&quot;, &quot;ACC_x&quot;, &quot;ACC_y&quot;, &quot;IBI&quot;],          windows=[&quot;15min&quot;, &quot;30min&quot;],          strides=&quot;15min&quot;,    ))# 3. Extract featuresfc.calculate(data=[df_tmp, df_acc, df_ibi], approve_sparsity=True)```Note that the feature extraction is performed on multivariate data with varying sample rates.| signal | columns | sample rate ||:-------|:-------|------------------:|| df_tmp | [&quot;TMP&quot;]| 4Hz || df_acc | [&quot;ACC_x&quot;, &quot;ACC_y&quot;, &quot;ACC_z&quot; ]| 32Hz || df_ibi | [&quot;IBI&quot;]| irregularly sampled |### &lt;a href=&quot;https://predict-idlab.github.io/tsflex/processing/index.html#getting-started&quot;&gt;Processing&lt;/a&gt;[Working example in our docs](https://predict-idlab.github.io/tsflex/processing/index.html#working-example)## Why tsflex? âœ¨* `Flexible`:    * handles multivariate/multimodal time series    * versatile function support      =&gt; **integrates** with many packages for:      * processing (e.g., [scipy.signal](https://docs.scipy.org/doc/scipy/reference/tutorial/signal.html), [statsmodels.tsa](https://www.statsmodels.org/stable/tsa.html#time-series-filters))      * feature extraction (e.g., [numpy](https://numpy.org/doc/stable/reference/routines.html), [scipy.stats](https://docs.scipy.org/doc/scipy/reference/tutorial/stats.html), [seglearn](https://dmbee.github.io/seglearn/feature_functions.html)Â¹, [tsfresh](https://tsfresh.readthedocs.io/en/latest/text/list_of_features.html)Â¹, [tsfel](https://tsfel.readthedocs.io/en/latest/descriptions/feature_list.html)Â¹)    * feature extraction handles **multiple strides &amp; window sizes*** `Efficient`:&lt;br&gt;  * view-based operations for processing &amp; feature extraction =&gt; extremely **low memory peak** &amp; **fast execution time**&lt;br&gt;    * see: [feature extraction benchmark visualization](https://predict-idlab.github.io/tsflex/#benchmark)* `Intuitive`:&lt;br&gt;  * maintains the sequence-index of the data  * feature extraction constructs interpretable output column names  * intuitive API* `Few assumptions` about the sequence data:  * no assumptions about sampling rate  * able to deal with multivariate asynchronous data&lt;br&gt;i.e. data with small time-offsets between the modalities* `Advanced functionalities`:  * apply [FeatureCollection.**reduce**](https://predict-idlab.github.io/tsflex/features/index.html#tsflex.features.FeatureCollection.reduce) after feature selection for faster inference  * use **function execution time logging** to discover processing and feature extraction bottlenecks  * embedded [SeriesPipeline](http://predict-idlab.github.io/tsflex/processing/#tsflex.processing.SeriesPipeline.serialize) &amp; [FeatureCollection](https://predict-idlab.github.io/tsflex/features/index.html#tsflex.features.FeatureCollection.serialize) **serialization**  * time series [**chunking**](https://predict-idlab.github.io/tsflex/chunking/index.html)Â¹ These integrations are shown in [integration-example notebooks](https://github.com/predict-idlab/tsflex/tree/main/examples).## Future work ðŸ”¨* scikit-learn integration for both processing and feature extraction&lt;br&gt;  **note**: is actively developed upon [sklearn integration](https://github.com/predict-idlab/tsflex/tree/sklearn_integration) branch.* Support time series segmentation (exposing under the hood strided-rolling functionality) - [see this issue](https://github.com/predict-idlab/tsflex/issues/15)* Support for multi-indexed dataframes=&gt; Also see the [enhancement issues](https://github.com/predict-idlab/tsflex/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement+)## Contributing ðŸ‘ªWe are thrilled to see your contributions to further enhance `tsflex`.&lt;br&gt;See [this guide](CONTRIBUTING.md) for more instructions on how to contribute.## Referencing our packageIf you use `tsflex` in a scientific publication, we would highly appreciate citing us as:```bibtex@article{vanderdonckt2021tsflex,    author = {Van Der Donckt, Jonas and Van Der Donckt, Jeroen and Deprost, Emiel and Van Hoecke, Sofie},    title = {tsflex: flexible time series processing \&amp; feature extraction},    journal = {SoftwareX},    year = {2021},    url = {https://github.com/predict-idlab/tsflex},    publisher={Elsevier}}```Link to the paper: https://www.sciencedirect.com/science/article/pii/S2352711021001904---&lt;p align=&quot;center&quot;&gt;ðŸ‘¤ &lt;i&gt;Jonas Van Der Donckt, Jeroen Van Der Donckt, Emiel Deprost&lt;/i&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>