<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Rembg[![Downloads](https://pepy.tech/badge/rembg)](https://pepy.tech/project/rembg)[![Downloads](https://pepy.tech/badge/rembg/month)](https://pepy.tech/project/rembg)[![Downloads](https://pepy.tech/badge/rembg/week)](https://pepy.tech/project/rembg)[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://img.shields.io/badge/License-MIT-blue.svg)[![Hugging Face Spaces](https://img.shields.io/badge/ðŸ¤—%20Hugging%20Face-Spaces-blue)](https://huggingface.co/spaces/KenjieDec/RemBG)[![Streamlit App](https://img.shields.io/badge/ðŸŽˆ%20Streamlit%20Community-Cloud-blue)](https://bgremoval.streamlit.app/)Rembg is a tool to remove images background.&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/car-1.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/car-1.out.png&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/car-2.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/car-2.out.png&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/car-3.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/car-3.out.png&quot; width=&quot;100&quot; /&gt;&lt;/p&gt;&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/animal-1.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/animal-1.out.png&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/animal-2.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/animal-2.out.png&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/animal-3.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/animal-3.out.png&quot; width=&quot;100&quot; /&gt;&lt;/p&gt;&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/girl-1.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/girl-1.out.png&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/girl-2.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/girl-2.out.png&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/girl-3.jpg&quot; width=&quot;100&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/examples/girl-3.out.png&quot; width=&quot;100&quot; /&gt;&lt;/p&gt;**If this project has helped you, please consider making a [donation](https://www.buymeacoffee.com/danielgatis).**## Sponsor&lt;table&gt;  &lt;tr&gt;    &lt;td align=&quot;center&quot; vertical-align=&quot;center&quot;&gt;      &lt;a href=&quot;https://photoroom.com/api/remove-background?utm_source=rembg&amp;utm_medium=github_webpage&amp;utm_campaign=sponsor&quot; &gt;        &lt;img src=&quot;https://font-cdn.photoroom.com/media/api-logo.png&quot; width=&quot;120px;&quot; alt=&quot;Unsplash&quot; /&gt;      &lt;/a&gt;    &lt;/td&gt;    &lt;td align=&quot;center&quot; vertical-align=&quot;center&quot;&gt;      &lt;b&gt;PhotoRoom Remove Background API&lt;/b&gt;      &lt;br /&gt;      &lt;a href=&quot;https://photoroom.com/api/remove-background?utm_source=rembg&amp;utm_medium=github_webpage&amp;utm_campaign=sponsor&quot;&gt;https://photoroom.com/api&lt;/a&gt;      &lt;br /&gt;      &lt;p width=&quot;200px&quot;&gt;        Fast and accurate background remover API&lt;br/&gt;      &lt;/p&gt;    &lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;## Requirements```python: &gt;3.7, &lt;3.11```## InstallationCPU support:```bashpip install rembg```GPU support:First of all, you need to check if your system supports the `onnxruntime-gpu`.Go to https://onnxruntime.ai and check the installation matrix.&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/onnxruntime-installation-matrix.png&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;If yes, just run:```bashpip install rembg[gpu]```## Usage as a cliAfter the installation step you can use rembg just typing `rembg` in your terminal window.The `rembg` command has 3 subcommands, one for each input type:- `i` for files- `p` for folders- `s` for http serverYou can get help about the main command using:```rembg --help```As well, about all the subcommands using:```rembg &lt;COMMAND&gt; --help```### rembg `i`Used when input and output are files.Remove the background from a remote image```curl -s http://input.png | rembg i &gt; output.png```Remove the background from a local file```rembg i path/to/input.png path/to/output.png```Remove the background specifying a model```rembg i -m u2netp path/to/input.png path/to/output.png```Remove the background returning only the mask```rembg i -om path/to/input.png path/to/output.png```Remove the background applying an alpha matting```rembg i -a path/to/input.png path/to/output.png```Passing extras parameters```rembg i -m sam -x '{&quot;input_labels&quot;: [1], &quot;input_points&quot;: [[100,100]]}' path/to/input.png path/to/output.png```### rembg `p`Used when input and output are folders.Remove the background from all images in a folder```rembg p path/to/input path/to/output```Same as before, but watching for new/changed files to process```rembg p -w path/to/input path/to/output```### rembg `s`Used to start http server.To see the complete endpoints documentation, go to: `http://localhost:5000/docs`.Remove the background from an image url```curl -s &quot;http://localhost:5000/?url=http://input.png&quot; -o output.png```Remove the background from an uploaded image```curl -s -F file=@/path/to/input.jpg &quot;http://localhost:5000&quot;  -o output.png```## Usage as a libraryInput and output as bytes```pythonfrom rembg import removeinput_path = 'input.png'output_path = 'output.png'with open(input_path, 'rb') as i:    with open(output_path, 'wb') as o:        input = i.read()        output = remove(input)        o.write(output)```Input and output as a PIL image```pythonfrom rembg import removefrom PIL import Imageinput_path = 'input.png'output_path = 'output.png'input = Image.open(input_path)output = remove(input)output.save(output_path)```Input and output as a numpy array```pythonfrom rembg import removeimport cv2input_path = 'input.png'output_path = 'output.png'input = cv2.imread(input_path)output = remove(input)cv2.imwrite(output_path, output)```How to iterate over files in a performatic way```pythonfrom pathlib import Pathfrom rembg import remove, new_sessionsession = new_session()for file in Path('path/to/folder').glob('*.png'):    input_path = str(file)    output_path = str(file.parent / (file.stem + &quot;.out.png&quot;))    with open(input_path, 'rb') as i:        with open(output_path, 'wb') as o:            input = i.read()            output = remove(input, session=session)            o.write(output)```To see a full list of examples on how to use rembg, go to the [examples](USAGE.md) page.## Usage as a dockerJust replace the `rembg` command for `docker run danielgatis/rembg`.Try this:```docker run danielgatis/rembg i path/to/input.png path/to/output.png```## ModelsAll models are downloaded and saved in the user home folder in the `.u2net` directory.The available models are:-   u2net ([download](https://github.com/danielgatis/rembg/releases/download/v0.0.0/u2net.onnx), [source](https://github.com/xuebinqin/U-2-Net)): A pre-trained model for general use cases.-   u2netp ([download](https://github.com/danielgatis/rembg/releases/download/v0.0.0/u2netp.onnx), [source](https://github.com/xuebinqin/U-2-Net)): A lightweight version of u2net model.-   u2net_human_seg ([download](https://github.com/danielgatis/rembg/releases/download/v0.0.0/u2net_human_seg.onnx), [source](https://github.com/xuebinqin/U-2-Net)): A pre-trained model for human segmentation.-   u2net_cloth_seg ([download](https://github.com/danielgatis/rembg/releases/download/v0.0.0/u2net_cloth_seg.onnx), [source](https://github.com/levindabhi/cloth-segmentation)): A pre-trained model for Cloths Parsing from human portrait. Here clothes are parsed into 3 category: Upper body, Lower body and Full body.-   silueta ([download](https://github.com/danielgatis/rembg/releases/download/v0.0.0/silueta.onnx), [source](https://github.com/xuebinqin/U-2-Net/issues/295)): Same as u2net but the size is reduced to 43Mb.-   isnet-general-use ([download](https://github.com/danielgatis/rembg/releases/download/v0.0.0/isnet-general-use.onnx), [source](https://github.com/xuebinqin/DIS)): A new pre-trained model for general use cases.-   sam ([download encoder](https://github.com/danielgatis/rembg/releases/download/v0.0.0/vit_b-encoder-quant.onnx), [download decoder](https://github.com/danielgatis/rembg/releases/download/v0.0.0/vit_b-decoder-quant.onnx), [source](https://github.com/facebookresearch/segment-anything)): A pre-trained model for any use cases.### Some differences between the models result&lt;table&gt;    &lt;tr&gt;        &lt;th&gt;original&lt;/th&gt;        &lt;th&gt;u2net&lt;/th&gt;        &lt;th&gt;u2netp&lt;/th&gt;        &lt;th&gt;u2net_human_seg&lt;/th&gt;        &lt;th&gt;u2net_cloth_seg&lt;/th&gt;        &lt;th&gt;silueta&lt;/th&gt;        &lt;th&gt;isnet-general-use&lt;/th&gt;        &lt;th&gt;sam&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/fixtures/car-1.jpg&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.u2net.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.u2netp.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.u2net_human_seg.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.u2net_cloth_seg.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.silueta.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.isnet-general-use.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/car-1.sam.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;    &lt;/tr&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/fixtures/cloth-1.jpg&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.u2net.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.u2netp.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.u2net_human_seg.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.u2net_cloth_seg.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.silueta.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.isnet-general-use.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;        &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danielgatis/rembg/master/tests/results/cloth-1.sam.png&quot; width=&quot;100&quot; /&gt;&lt;/th&gt;    &lt;/tr&gt;&lt;/table&gt;### How to train your own modelIf You need more fine tunned models try this:https://github.com/danielgatis/rembg/issues/193#issuecomment-1055534289## Some video tutorials- https://www.youtube.com/watch?v=3xqwpXjxyMQ- https://www.youtube.com/watch?v=dFKRGXdkGJU- https://www.youtube.com/watch?v=Ai-BS_T7yjE- https://www.youtube.com/watch?v=dFKRGXdkGJU- https://www.youtube.com/watch?v=D7W-C0urVcQ## References- https://arxiv.org/pdf/2005.09007.pdf- https://github.com/NathanUA/U-2-Net- https://github.com/pymatting/pymatting## Buy me a coffeeLiked some of my work? Buy me a coffee (or more likely a beer)&lt;a href=&quot;https://www.buymeacoffee.com/danielgatis&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://bmc-cdn.nyc3.digitaloceanspaces.com/BMC-button-images/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important;width: auto !important;&quot;&gt;&lt;/a&gt;## LicenseCopyright (c) 2020-present [Daniel Gatis](https://github.com/danielgatis)Licensed under [MIT License](./LICENSE.txt)</longdescription>
</pkgmetadata>