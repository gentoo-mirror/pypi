<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Statworx Theme[![PyPI version](https://badge.fury.io/py/statworx-theme.svg)](https://badge.fury.io/py/statworx-theme)[![Documentation Status](https://readthedocs.org/projects/statworx-theme/badge/?version=latest)](https://statworx-theme.readthedocs.io/en/latest/?badge=latest)[![Release](https://github.com/STATWORX/statworx-theme/actions/workflows/release.yml/badge.svg)](https://github.com/STATWORX/statworx-theme/actions/workflows/release.yml)[![Code Quality](https://github.com/STATWORX/statworx-theme/actions/workflows/conde_quality.yml/badge.svg)](https://github.com/STATWORX/statworx-theme/actions/workflows/conde_quality.yml)[![Python version](https://img.shields.io/badge/python-3.8-blue.svg)](https://pypi.org/project/kedro/)[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/STATWORX/statworx-theme/blob/master/LICENSE)![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)A color theme plugin for the [matplotlib](https://matplotlib.org/) library and all its derivatives, as well as an optional adaption of this theme for [altair](https://altair-viz.github.io/) and [plotly](https://plotly.com/python/), which automatically applies the official statworx color theme.This package also registers commonly used [qualitative color maps](https://matplotlib.org/stable/tutorials/colors/colormaps.html) (such as a fade from good to bad) for use in presentations.![Sample](./docs/assets/sample.svg)## Quick StartSimply install a module with `pip` by using the following command.```consolepip install statworx-theme```For usage of altair and plotly extra dependencies need to be installed using pip.```consolepip install &quot;statworx-theme[altair]&quot;pip install &quot;statworx-theme[plotly]&quot;```For using the styles inside a poetry managed project use `poetry add` with extras.```console#only matplotlibpoetry add statworx-theme# altair themepoetry add statworx-theme -E &quot;altair&quot;# plotly themepoetry add statworx-theme -E &quot;plotly&quot;# Whole packagepoetry add statworx-theme -E &quot;altair plotly&quot;```To apply the matplotlib style, you must call the `apply_style` function by typing:```pythonfrom statworx_theme import apply_styleapply_style()```For applying the plotly or altair style the respective `apply_style_&lt;library&gt;` function is used:```pythonfrom statworx_theme import apply_style_altair, apply_style_plotlyapply_style_altair()apply_style_plotly()```## Gallery#### MatplotlibThere is an extensive gallery of figures that use the Statworx theme that you can draw inspiration from. You can find it [here](https://statworx-theme.readthedocs.io/en/latest/gallery.html).For a figure gallery using the altair and plotly theme see the respective notebooks inside the [repository](https://github.com/STATWORX/statworx-theme/tree/master/notebooks).![Sample](./docs/assets/gallery.png)## Custom ColorsYou can also use a custom list of color for the color scheme beside the official statworx colors.There is a convenience function for that which is described below.This simply changes the colors.##### MatplotlibIn case you want to change the entire style you should implement your own `.mplstyle` file (see [this](https://matplotlib.org/stable/tutorials/introductory/customizing.html)).```pythonfrom statworx_theme import apply_custom_colorscustom_colors = [    DARK_BLUE := &quot;#0A526B&quot;,    DARK_RED := &quot;#6B0020&quot;,    GREY := &quot;#808285&quot;,]apply_custom_colors(custom_colors)```#### Altair```pythonfrom statworx_theme import apply_custom_colors_altaircustom_colors = [    DARK_BLUE := &quot;#0A526B&quot;,    DARK_RED := &quot;#6B0020&quot;,    GREY := &quot;#808285&quot;,]apply_custom_colors_altair(category=custom_colors)```#### Plotly```pythonfrom statworx_theme import apply_custom_colors_plotlycustom_colors = [    DARK_BLUE := &quot;#0A526B&quot;,    DARK_RED := &quot;#6B0020&quot;,    GREY := &quot;#808285&quot;,]apply_custom_colors_plotly(category=custom_colors)```</longdescription>
</pkgmetadata>