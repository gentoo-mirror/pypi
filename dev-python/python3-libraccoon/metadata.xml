<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># libraccoonlibraccon a library for high performance offensive security tool for reconnaissance based on raccoon scanner. This library is based on Raccoon A high performance offensive security tool for reconnaissance and vulnerability scanning. The difference is we are providing a library to be used as a module.This is because we wanted to integrated raccoon to our nmmapper, but we couldn't do it easily, so we just had to re-write this tool to provide module level import.## Installing the module## How to use python3-libraccoonAs mentioned this module is designed to be used like a module in other python scripts```pyfrom libraccoon.libs import waffrom libraccoon.libs.sub_domain import SubDomainEnumeratorfrom libraccoon.libs.storage_explorer import StorageExplorer```This is how we intended to use this module.### Detecting WAFWAF Stands for web application firewall.```pyfrom libraccoon.libs.host import Hostfrom libraccoon.libs import waf# Initiate hosthost = Host(target=&quot;nmmapper.com&quot;)# Begin the wafw = waf.WAF(host)await w.detect()results = w.get_waf # Returns dictprint(results){'waf': 'Cloudflare'}```You will always get results in dict or list### Querying subdomains```pyfrom libraccoon.libs.host import Hosfrom libraccoon.libs.sub_domain import SubDomainEnumeratorhost = Host(target=&quot;nmmapper.com&quot;)subs = SubDomainEnumerator(host)await subs.run()# Enumerating Subdomains# Trying to discover subdomains in Google.....# Done enumerating Subdomainssubs.get_subdomains['nmmapper.com', 'mail.nmmapper.com', 'upstream.nmmapper.com', 'flower.nmmapper.com', 'analytics.nmmapper.com', 'www.nmmapper.com']```Once again this is module type, can be used in any other external python programs## Querying virtual-host with bingip2hostIf you want to find which ips are hosted on the same network, you can use bingip2host, this tool still requires improvements.```pyip=&quot;172.67.209.....&quot; # CloudFlarefrom libraccoon.libs.bingip2host import BingIp2Hostbing = BingIp2Host(ip)await bing.search()print(await bing.get_domains())[{'ip': '172.67.209....', 'domain': 'www.------.fi', 'source': 'bing'}, {'ip': '172.67.209....',  'domain': '-----.uk',  'source': 'bing'},  .......  # More results are hidden  .....]```### Querying Whois informationThis is how you can query whos information```pyfrom libraccoon.libs.dns_handler import DNSHandlerwho = DNSHandler(&quot;nmmapper.com&quot;)# Registrarr = await who.grab_whois(&quot;nmmapper.com&quot;){'domain_name': 'NMMAPPER.COM', 'registrar': 'NameCheap, Inc.', 'whois_server': 'whois.namecheap.com',#... More records truncated}# Querying invididual recordstxt = await who.query_dns(&quot;google.com&quot;, &quot;TXT&quot;)A = await who.query_dns(&quot;google.com&quot;, &quot;A&quot;)Ipv6 = await who.query_dns(&quot;google.com&quot;, &quot;AAAA&quot;)```### Fierce Perform A DNS reconnaissance tool for locating non-contiguous IP space.This module is a port of the fierce tool, we wanted something non commandline we wanted something that can be used as a module, so we had to re-write it to support being used as a module.```py#!/usr/bin/python3/#  Basic searchfrom libraccoon.libs.fierce import LibFiercelib   = LibFierce(&quot;facebook.com&quot;)ret = lib.search(&quot;www&quot;){'102.132.96.16': 'edge-shortwave-shv-01-mba1.facebook.com.', '102.132.96.35': 'edge-star-mini-shv-01-mba1.facebook.com.', '102.132.96.19': 'edge-stun-shv-01-mba1.facebook.com.', '102.132.96.22': 'edge-z-p1-shv-01-mba1.facebook.com.', #....More result has been truncated}```The module is not yet fully complete.Traverse IPs near discovered domains to search for contiguous blocks```py#!/usr/bin/python3/#  Basic searchfrom libraccoon.libs.fierce import LibFiercelib   = LibFierce(&quot;facebook.com&quot;)ret = lib.search(&quot;www&quot;, 10){'102.132.96.16': 'edge-shortwave-shv-01-mba1.facebook.com.', '102.132.96.35': 'edge-star-mini-shv-01-mba1.facebook.com.', '102.132.96.19': 'edge-stun-shv-01-mba1.facebook.com.', '102.132.96.22': 'edge-z-p1-shv-01-mba1.facebook.com.', #....More result has been truncated}```</longdescription>
</pkgmetadata>