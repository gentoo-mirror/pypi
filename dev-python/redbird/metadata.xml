<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Red Bird](https://raw.githubusercontent.com/Miksus/red-bird/master/docs/logo.svg)# Repository Patterns for Python&gt; Generic database implemetation for SQL, MongoDB and in-memory lists---[![Pypi version](https://badgen.net/pypi/v/redbird)](https://pypi.org/project/redbird/)[![build](https://github.com/Miksus/red-bird/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/Miksus/red-bird/actions/workflows/main.yml)[![codecov](https://codecov.io/gh/Miksus/red-bird/branch/master/graph/badge.svg?token=GVBWCKHL1N)](https://codecov.io/gh/Miksus/red-bird)[![Documentation Status](https://readthedocs.org/projects/red-bird/badge/?version=latest)](https://red-bird.readthedocs.io)[![PyPI pyversions](https://badgen.net/pypi/python/redbird)](https://pypi.org/project/redbird/)Repository pattern is a technique to abstract the data access fromthe domain/business logic. In other words, it decouples the database access from the application code. The aim is that the code runs the same regardless if the data is stored to an SQL database, NoSQL database, file or even as an in-memory list.Read more about the repository patterns in the [official documentation](https://red-bird.readthedocs.io).## Why?Repository pattern has several benefits over embedding the database access to the application:- Faster prototyping and development- Easier to migrate the database- More readable code, Pythonic- Unit testing and testing in general is safer and easier ## FeaturesMain features:- Support for Pydantic models for data validation- Identical way to create, read, update and delete (CRUD)- Pythonic and simple syntax- Support for more complex queries (greater than, not equal, less than etc.)Supported repositories:- SQL- MongoDB- In-memory (Python list)- JSON files- CSV file## ExamplesFirst, we create a simple repo:```pythonfrom redbird.repos import MemoryReporepo = MemoryRepo()```&gt; Note: the following examples work on any repository, not just in-memory repository.Adding/creating items:```pythonrepo.add({&quot;name&quot;: &quot;Anna&quot;, &quot;nationality&quot;: &quot;British&quot;})```Reading items:```pythonrepo.filter_by(name=&quot;Anna&quot;).all()```Updating items:```pythonrepo.filter_by(name=&quot;Anna&quot;).update(nationality=&quot;Finnish&quot;)```Deleting items:```pythonrepo.filter_by(name=&quot;Anna&quot;).delete()```See more from the [official documentation](https://red-bird.readthedocs.io).## Author* **Mikael Koli** - [Miksus](https://github.com/Miksus) - koli.mikael@gmail.com</longdescription>
</pkgmetadata>