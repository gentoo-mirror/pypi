<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- markdownlint-configure-file { &quot;MD013&quot;: { &quot;line_length&quot;: 100 } } --&gt;&lt;!-- markdownlint-disable MD033 --&gt;# repid&lt;a href=&quot;https://www.instagram.com/p/Cd-ob1NNZ84/&quot;&gt;  &lt;img alt=&quot;Repid's logo&quot; width=&quot;350&quot; align=&quot;right&quot; src=&quot;https://gist.github.com/aleksul/fedbe168f1fc59c5aac3ddd17ecff30a/raw/b9467303f55517d99633d6551de223cd6534b149/repid_logo_borders.svg&quot;&gt;&lt;/a&gt;[![PyPI version](https://img.shields.io/pypi/v/repid.svg)](https://pypi.org/project/repid/)[![codecov](https://codecov.io/gh/aleksul/repid/branch/main/graph/badge.svg?token=IP3Z1VXB1G)](https://codecov.io/gh/aleksul/repid)[![Tests](https://github.com/aleksul/repid/actions/workflows/tests.yaml/badge.svg)](https://github.com/aleksul/repid/actions/workflows/tests.yaml)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/repid.svg)](https://pypi.python.org/pypi/repid/)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Read documentation](https://img.shields.io/badge/read-documentation-informational.svg)](https://repid.aleksul.space)&lt;br&gt;**Repid** framework: simple to use, fast to run and extensible to adopt job scheduler.&lt;br&gt;```bashpip install repid```## QuickstartHere is how the easiest example of producer-consumer application can look like.Producer:```pythonimport asynciofrom repid import Connection, Job, RabbitMessageBroker, Repidapp = Repid(Connection(RabbitMessageBroker(&quot;amqp://user:password@localhost:5672&quot;)))async def main() -&gt; None:    async with app.magic():        await Job(name=&quot;awesome_job&quot;).enqueue()asyncio.run(main())```Consumer:```pythonimport asynciofrom repid import Connection, RabbitMessageBroker, Repid, Router, Workerapp = Repid(Connection(RabbitMessageBroker(&quot;amqp://user:password@localhost:5672&quot;)))router = Router()@router.actorasync def awesome_job() -&gt; None:    print(&quot;Hello async jobs!&quot;)    await asyncio.sleep(1.0)async def main() -&gt; None:    async with app.magic():        await Worker(routers=[router]).run()asyncio.run(main())```Check out [user guide] to learn more!## License**Repid** is distributed under the terms of the MIT license. Please see [License.md] for more information.**Repid's logo** is distributed under the terms of the [CC BY-NC 4.0] license.It is originally created by [ari_the_crow_].[License.md]: https://github.com/aleksul/repid/blob/master/LICENSE[user guide]: https://repid.aleksul.space[CC BY-NC 4.0]: https://creativecommons.org/licenses/by-nc/4.0/[ari_the_crow_]: https://www.instagram.com/p/Cd-ob1NNZ84/</longdescription>
</pkgmetadata>