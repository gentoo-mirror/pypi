<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Licence](https://img.shields.io/badge/License-MIT-9cf.svg?style=flat-square)](https://choosealicense.com/licenses/mit/)[![Test](https://img.shields.io/github/actions/workflow/status/akikuno/cstag/pytest.yml?branch=main&amp;label=Test&amp;color=brightgreen&amp;style=flat-square)](https://github.com/akikuno/cstag/actions)[![Python](https://img.shields.io/pypi/pyversions/cstag.svg?label=Python&amp;color=blue&amp;style=flat-square)](https://pypi.org/project/cstag/)[![PyPI](https://img.shields.io/pypi/v/cstag.svg?label=PyPI&amp;color=orange&amp;style=flat-square)](https://pypi.org/project/cstag/)[![Bioconda](https://img.shields.io/conda/v/bioconda/cstag?label=Bioconda&amp;color=orange&amp;style=flat-square)](https://anaconda.org/bioconda/cstag)# cstag`cstag`` is a Python library designed for handling and manipulating [minimap2's CS tags](https://github.com/lh3/minimap2#cs).## ðŸŒŸFeatures- `cstag.call()`: Generate a CS tag- `cstag.shorten()`: Convert a CS tag from long to short format- `cstag.lengthen()`: Convert a CS tag from short to long format- `cstag.consensus()`: Generate a consensus cs tag from multiple cs tags- `cstag.mask()`: Mask low-quality bases in a CS tag- `cstag.split()`: Split a CS tag- `cstag.revcomp()`: Converts a CS tag into its reverse complement.- `cstag.to_html()`: Output html reportVisit the [documentation](https://akikuno.github.io/cstag/cstag/) for more details.## ðŸ›  InstallationUsing [PyPI](https://pypi.org/project/cstag/):```bashpip install cstag```Using [Bioconda](https://anaconda.org/bioconda/cstag):```bashconda install -c bioconda cstag```## ðŸ’¡Usage### Generate CS Tags```pythonimport cstagcigar = &quot;8M2D4M2I3N1M&quot;md = &quot;2A5^AG7&quot;seq = &quot;ACGTACGTACGTACG&quot;cstag.call(cigar, md, seq)# =&gt; :2*ag:5-ag:4+ac~nn3nn:1cstag.call(cigar, md, seq, is_long=True)# =&gt; =AC*ag=TACGT-ag=ACGT+ac~nn3nn=G```### Shorten or Lengthen CS Tags```pythonimport cstag# Convert a CS tag from long to shortcs = &quot;=ACGT*ag=CGT&quot;cstag.shorten(cs)# =&gt; :4*ag:3# Convert a CS tag from short to longcs = &quot;:4*ag:3&quot;cigar = &quot;8M&quot;seq = &quot;ACGTACGT&quot;cstag.lengthen(cs, cigar, seq)# =&gt; =ACGT*ag=CGT```### Generate a Consensus```pythonimport cstagcs_list = [&quot;=ACGT&quot;, &quot;=AC*gt=T&quot;, &quot;=C*gt=T&quot;, &quot;=C*gt=T&quot;, &quot;=ACT+ccc=T&quot;]cigar_list = [&quot;4M&quot;, &quot;4M&quot;, &quot;1S3M&quot;, &quot;3M&quot;, &quot;3M3I1M&quot;]pos_list = [1, 1, 1, 2, 1]cstag.consensus(cs_list, cigar_list, pos_list)# =&gt; =AC*gt*T```### Mask Low-Quality Bases```pythonimport cstagcs = &quot;=ACGT*ac+gg-cc=T&quot;cigar = &quot;5M2I2D1M&quot;qual = &quot;AA!!!!AA&quot;phred_threshold = 10cstag.mask(cs, cigar, qual, phred_threshold)# =&gt; =ACNN*an+ng-cc=T```### Split a CS Tag```pythonimport cstagcs = &quot;=ACGT*ac+gg-cc=T&quot;cstag.split(cs)# =&gt; ['', '=ACGT', '*ac', '+gg', '-cc', '=T']```### Reverse Complement of a CS Tag```pythonimport cstagcs = &quot;=ACGT*ac+gg-cc=T&quot;cstag.revcomp(cs)# =&gt; =A-gg+cc*tg=ACGT```### Generate HTML Report```pythonimport cstagfrom pathlib import Pathcs = &quot;=AC+GGG=T-ACGT*at~gt10cg=GNNN&quot;description = &quot;Example&quot;cstag_html = cstag.to_html(cs, description)Path(&quot;report.html&quot;).write_text(cstag_html)# =&gt; Output &quot;report.html&quot;```The resulting `report.html` looks like this :point_down:&lt;img width=&quot;414&quot; alt=&quot;example_report&quot; src=&quot;https://user-images.githubusercontent.com/15861316/158910398-67f480d2-8742-412a-b528-40e545c46513.png&quot;&gt;## ðŸ“£FeedbackFor questions, bug reports, or any other inquiries, feel free to reach out!  Please use [GitHub Issues](https://github.com/akikuno/cstag/issues) for reporting.</longdescription>
</pkgmetadata>