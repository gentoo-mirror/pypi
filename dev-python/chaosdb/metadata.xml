<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># chaosdb: Chaostoolkit storeevent ControlThis control allows you to store events on a configurable data store.The data store can then be used to monitor events on a monitoring dashboardor to collect events on a time series datastore.The control currently implements the following drivers:* an influx driver to store events on a InfluxDB time series database* a grafana driver to store events on a Grafana server as annotationsThe grafana driver supports the following authentication types:- basic auth (username/password)- bearer API tokenTo understand what a chaos-toolkit control is please refer to the officialdocumentation on [controls](https://docs.chaostoolkit.org/reference/api/experiment/#controls).## The Influx driverInfluxDB is one of the most used time series data stores, it's implemented ingolang and therefore is pretty fast and very easy to install and set up.Moreover, if you use Gatling for your performance input load simulations, it ispretty simple to store Gatling metrics on InfluxDB as well (as the Influx server can beconfigured to accept data in the graphite protocol), so you can use thesame Influx data store for Gatling metrics and chaos toolkit events.You can configure the Influx driver setting these parameters in theconfiguration section (the values provided represent the defaults):```    &quot;configuration&quot;: {      &quot;influxdb&quot;: {        &quot;host&quot;: &quot;localhost&quot;,        &quot;port&quot;: 8086,        &quot;http_endpoint&quot;: &quot;/write&quot;,        &quot;database&quot;: &quot;gatlingdb&quot;      }    }```Then, at the proper level, configure the control driver:```            &quot;controls&quot;: [                {                    &quot;name&quot;: &quot;tracing&quot;,                    &quot;provider&quot;: {                        &quot;type&quot;: &quot;python&quot;,                        &quot;module&quot;: &quot;chaosdb.influx&quot;                    }                }            ],```## The Grafana driverThe Grafana driver can be quite convenient if you use grafana for yourdashboards. The driver sends chaos-toolkit events directly to Grafana usingthe Annotation HTTP API.Moreover it is able to draw a region annotation around the whole experiment,making experiment visualization more visible.The grafana configuration section is keyed `&quot;grafana&quot;`.The grafana driver accepts a list of configuration sections, one for eachgrafana server you want to send annotations to.Each section accepts the following configuration attributes:|Attribute|Description||---------|-----------||host              | the grafana server fqdn||port              | the grafana service port||protocol          | http/https (defaults to http if not set)||api_token         | grafana API token (not mandatory)||cert_file         | file where the TSL certificate is stored (not mandatory)||username          | the simple auth user name (not mandatory)||password          | the simple auth password (not mandatory)||dashboardId       | a specific dashboard ID (all in case it's not specified or 0)||only_actions      | a boolean flag to send only actions or probes as well (defaults to false)||tags              | a list of custom tags to tag annotations|annotation_api_endpoint| defaults to '/api/annotations'|The 'dashboardId' parameter points to the dashboard annotations are added to,otherwise annotations will be displayed on all dashboards.The 'only_actions' parameter allows to trace only actions, not probes.The 'tags' parameter allows to add custom tags to each annotation.Then, at the proper level, configure the control driver:```            &quot;controls&quot;: [                {                    &quot;name&quot;: &quot;tracing&quot;,                    &quot;provider&quot;: {                        &quot;type&quot;: &quot;python&quot;,                        &quot;module&quot;: &quot;chaosdb.grafana&quot;                    }                }            ],```</longdescription>
</pkgmetadata>