<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![](https://img.shields.io/pypi/pyversions/django-admin-interface.svg?color=3776AB&amp;logo=python&amp;logoColor=white)](https://www.python.org/)[![](https://img.shields.io/pypi/djversions/django-admin-interface?color=0C4B33&amp;logo=django&amp;logoColor=white&amp;label=django)](https://www.djangoproject.com/)[![](https://img.shields.io/pypi/v/django-admin-interface.svg?color=blue&amp;logo=pypi&amp;logoColor=white)](https://pypi.org/project/django-admin-interface/)[![](https://pepy.tech/badge/django-admin-interface/month)](https://pepy.tech/project/django-admin-interface)[![](https://img.shields.io/github/stars/fabiocaccamo/django-admin-interface?logo=github)](https://github.com/fabiocaccamo/django-admin-interface/stargazers)[![](https://img.shields.io/pypi/l/django-admin-interface.svg?color=blue)](https://github.com/fabiocaccamo/django-admin-interface/blob/main/LICENSE.txt)[![](https://results.pre-commit.ci/badge/github/fabiocaccamo/django-admin-interface/main.svg)](https://results.pre-commit.ci/latest/github/fabiocaccamo/django-admin-interface/main)[![](https://img.shields.io/github/actions/workflow/status/fabiocaccamo/django-admin-interface/test-package.yml?branch=main&amp;label=build&amp;logo=github)](https://github.com/fabiocaccamo/django-admin-interface)[![](https://img.shields.io/codecov/c/gh/fabiocaccamo/django-admin-interface?logo=codecov)](https://codecov.io/gh/fabiocaccamo/django-admin-interface)[![](https://img.shields.io/codacy/grade/21cb657283c04e70b56fb935277a1ad1?logo=codacy)](https://www.codacy.com/app/fabiocaccamo/django-admin-interface)[![](https://img.shields.io/codeclimate/maintainability/fabiocaccamo/django-admin-interface?logo=code-climate)](https://codeclimate.com/github/fabiocaccamo/django-admin-interface/)[![](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)# django-admin-interfacedjango-admin-interface is a modern **responsive flat admin interface customizable by the admin itself**.![django-admin-interface-preview](https://user-images.githubusercontent.com/1035294/35631521-64b0cab8-06a4-11e8-8f57-c04fdfbb7e8b.gif)## Features- Beautiful default **django-theme**- Themes management and customization *(you can **customize admin title, logo and colors**)*- Responsive- Related modal *(instead of the old popup window)*- Environment name/marker- Language chooser- Foldable apps *(accordions in the navigation bar)*- [Collapsible fieldsets](https://docs.djangoproject.com/en/4.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets) can have their initial state expanded instead of collapsed- `NEW` Collapsible inlines- `NEW` Tabbed fieldsets and inlines- `NEW` List filter removal links- `NEW` List filter highlight selected options- List filter dropdown- List filter sticky- Form controls sticky *(pagination and save/delete buttons)*- Compatibility / style optimizations for:  - `django-ckeditor`  - `django-dynamic-raw-id`  - `django-json-widget`  - `django-modeltranslation`  - `django-rangefilter`  - `django-streamfield`  - `django-tabbed-admin`  - `sorl-thumbnail`- Translated in many languages: `de`, `es`, `fa`, `fr`, `it`, `pl`, `pt_BR`, `tr`## Installation- Run `pip install django-admin-interface`- Add `admin_interface` and `colorfield` to `settings.INSTALLED_APPS` **before** `django.contrib.admin````pythonINSTALLED_APPS = (    #...    &quot;admin_interface&quot;,    &quot;colorfield&quot;,    #...    &quot;django.contrib.admin&quot;,    #...)X_FRAME_OPTIONS = &quot;SAMEORIGIN&quot;SILENCED_SYSTEM_CHECKS = [&quot;security.W019&quot;]```- Run `python manage.py migrate`- Run `python manage.py collectstatic --clear`- Restart your application server&gt; **Warning** - if you want use modals instead of popup windows, ensure to add `X_FRAME_OPTIONS = &quot;SAMEORIGIN&quot;` setting.### Optional featuresTo make a fieldset start expanded with a `Hide` button to collapse, add the class `&quot;expanded&quot;` to its classes:```pythonclass MyModelAdmin(admin.ModelAdmin):    # ...    fieldsets = [        (&quot;Section title&quot;, {            &quot;classes&quot;: (&quot;collapse&quot;, &quot;expanded&quot;),            &quot;fields&quot;: (...),        }),    ]    # ...```## Optional themesThis package ships with optional themes as fixtures, they can be installed using the [loaddata admin command](https://docs.djangoproject.com/en/1.11/ref/django-admin/#django-admin-loaddata). Optional themes are activated on installation.##### [Django](https://www.djangoproject.com/) theme (default):Run `python manage.py loaddata admin_interface_theme_django.json`##### [Bootstrap](http://getbootstrap.com/) theme:Run `python manage.py loaddata admin_interface_theme_bootstrap.json`##### [Foundation](http://foundation.zurb.com/) theme:Run `python manage.py loaddata admin_interface_theme_foundation.json`##### [U.S. Web Design Standards](https://standards.usa.gov/) theme:Run `python manage.py loaddata admin_interface_theme_uswds.json`### Add more themesYou can add a theme you've created through the admin to this repository by [sending us a PR](http://makeapullrequest.com/). Here are the steps to follow to add:1. Export your exact theme as fixture using the `dumpdata` admin command:`python manage.py dumpdata admin_interface.Theme --indent 4 -o admin_interface_theme_{{name}}.json --pks=N`2. Copy the generated json file into the fixtures folder *(making sure its name starts with* `admin_interface_theme_` *to avoid clashes with fixtures that might be provided by other third party apps)*.3. Remove the `pk` from the fixture and make sure the `active` field is set to `true` *(in this way a theme is automatically activated when installed)*.4. Edit the section above to document your theme.### Add theme support to third-party librariesYou can add **theme support to existing third-party libraries** using the following **CSS variables**:#### Header- `--admin-interface-header-background-color`- `--admin-interface-header-text-color`- `--admin-interface-header-link-color`- `--admin-interface-header-link_hover-color`- `--admin-interface-title-color`- `--admin-interface-env-color`#### Logo- `--admin-interface-logo-color`- `--admin-interface-logo-default-background-image`- `--admin-interface-logo-max-width`- `--admin-interface-logo-max-height`#### Modules / Links- `--admin-interface-module-background-color`- `--admin-interface-module-background-selected-color`- `--admin-interface-module-border-radius`- `--admin-interface-module-text-color`- `--admin-interface-module-link-color`- `--admin-interface-module-link-selected-color`- `--admin-interface-module-link-hover-color`- `--admin-interface-generic-link-color`- `--admin-interface-generic-link-hover-color`- `--admin-interface-generic-link-active-color`#### Buttons- `--admin-interface-save-button-background-color`- `--admin-interface-save-button-background-hover-color`- `--admin-interface-save-button-text-color`- `--admin-interface-delete-button-background-color`- `--admin-interface-delete-button-background-hover-color`- `--admin-interface-delete-button-text-color`#### Related Modal- `--admin-interface-related-modal-background-color`- `--admin-interface-related-modal-background-opacity`- `--admin-interface-related-modal-border-radius`- `--admin-interface-related-modal-close-button-display`## Screenshots###### Admin login![django-admin-interface_login](https://cloud.githubusercontent.com/assets/1035294/11240233/55c8d4ba-8df1-11e5-9568-00fdc987ede8.gif)---###### Admin dashboard![django-admin-interface_dashboard](https://cloud.githubusercontent.com/assets/1035294/11240239/627c0362-8df1-11e5-81fa-216366a5d8da.gif)---###### Admin themes management![django-admin-interface_themes_management](https://cloud.githubusercontent.com/assets/1035294/11240245/6cd1c342-8df1-11e5-928b-f22217474d3d.gif)---###### Admin theme customization![django-admin-interface_theme_customization](https://cloud.githubusercontent.com/assets/1035294/11240250/7350d942-8df1-11e5-9b28-f2f54c333cdc.gif)## LocalizationAt the moment, this package has been translated into the following languages: `de`, `es`, `fa`, `fr`, `it`, `pl`, `pt_BR`, `tr`.### Translate into another language- Run `python -m django makemessages --ignore &quot;.tox&quot; --ignore &quot;venv&quot; --add-location &quot;file&quot; --extension &quot;html,py&quot; --locale &quot;it&quot;` *(example for Italian localization)*- Update translations in `admin_interface/locale/it/LC_MESSAGES/django.po`- Run `python -m django compilemessages --ignore &quot;.tox&quot; --ignore &quot;venv&quot;`### Update translationsIf you do some changes to the project, remember to update translations, because if the translations files are not up-to-date, the `lint` step in the CI will fail:- Run `tox -e translations`## FAQ### Custom `base-site.html`&gt; I already have a custom `base_site.html`, how can I make it work?You can use [django-apptemplates](https://github.com/bittner/django-apptemplates), then add `{% extends &quot;admin_interface:admin/base_site.html&quot; %}` to your `base_site.html`### Language Chooser not showing&gt; I have enabled the **Language Chooser**, but it is not visible in the admin, what should I do?You must configure multilanguage `settings` and `urls` correctly:```pythonLANGUAGES = (    (&quot;en&quot;, _(&quot;English&quot;)),    (&quot;it&quot;, _(&quot;Italiano&quot;)),    (&quot;fr&quot;, _(&quot;Fran√ßais&quot;)),    # more than one language is expected here)LANGUAGE_CODE = &quot;en&quot;USE_I18N = TrueMIDDLEWARE = [    # ...    &quot;django.middleware.locale.LocaleMiddleware&quot;,    # ...]``````pythonfrom django.conf.urls.i18n import i18n_patternsfrom django.contrib import adminfrom django.urls import include, path# ...urlpatterns = [    path(&quot;i18n/&quot;, include(&quot;django.conf.urls.i18n&quot;)),]urlpatterns += i18n_patterns(path(&quot;admin/&quot;, admin.site.urls))```## Testing```bash# clone repositorygit clone https://github.com/fabiocaccamo/django-admin-interface.git &amp;&amp; cd django-admin-interface# create virtualenv and activate itpython -m venv venv &amp;&amp; . venv/bin/activate# upgrade pippython -m pip install --upgrade pip# install requirementspip install -r requirements.txt -r requirements-test.txt# install pre-commit to run formatters and linterspre-commit install --install-hooks# run teststox# orpython runtests.py# orpython -m django test --settings &quot;tests.settings&quot;```## ContributingContributions are always welcome, please follow these steps for submitting good quality PRs:- :exclamation: **Open an issue**, please don't submit any PR that doesn't refer to an existing issue.- :computer: **Work on changes**, changes should *preferably* be covered by tests to avoid regressions in the future.- :globe_with_meridians: **Update the translations** files.- :test_tube: **Run tests** ensuring that there are no errors.- :inbox_tray: **Submit a pull-request** and mark it as **&quot;Ready for review&quot;** only if it passes the `CI`.## LicenseReleased under [MIT License](LICENSE.txt).---## Supporting- :star: Star this project on [GitHub](https://github.com/fabiocaccamo/django-admin-interface)- :octocat: Follow me on [GitHub](https://github.com/fabiocaccamo)- :blue_heart: Follow me on [Twitter](https://twitter.com/fabiocaccamo)- :moneybag: Sponsor me on [Github](https://github.com/sponsors/fabiocaccamo)## See also- [`django-colorfield`](https://github.com/fabiocaccamo/django-colorfield) - simple color field for models with a nice color-picker in the admin. üé®- [`django-extra-settings`](https://github.com/fabiocaccamo/django-extra-settings) - config and manage typed extra settings using just the django admin. ‚öôÔ∏è- [`django-maintenance-mode`](https://github.com/fabiocaccamo/django-maintenance-mode) - shows a 503 error page when maintenance-mode is on. üöß üõ†Ô∏è- [`django-redirects`](https://github.com/fabiocaccamo/django-redirects) - redirects with full control. ‚Ü™Ô∏è- [`django-treenode`](https://github.com/fabiocaccamo/django-treenode) - probably the best abstract model / admin for your tree based stuff. üå≥- [`python-benedict`](https://github.com/fabiocaccamo/python-benedict) - dict subclass with keylist/keypath support, I/O shortcuts (base64, csv, json, pickle, plist, query-string, toml, xml, yaml) and many utilities. üìò- [`python-codicefiscale`](https://github.com/fabiocaccamo/python-codicefiscale) - encode/decode Italian fiscal codes - codifica/decodifica del Codice Fiscale. üáÆüáπ üí≥- [`python-fontbro`](https://github.com/fabiocaccamo/python-fontbro) - friendly font operations. üß¢- [`python-fsutil`](https://github.com/fabiocaccamo/python-fsutil) - file-system utilities for lazy devs. üßü‚ôÇÔ∏è</longdescription>
</pkgmetadata>