<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Follow the Money[![ftm-build](https://github.com/alephdata/followthemoney/actions/workflows/build.yml/badge.svg)](https://github.com/alephdata/followthemoney/actions/workflows/build.yml)This repository contains a pragmatic data model for the entities mostcommonly used in investigative reporting: people, companies, assets,payments, court cases, etc.The purpose of this is not to model reality in an ideal data model, butrather to have a working data structure for researchers.`followthemoney` also contains code used to validate and normalize manyof the elements of data, and to map tabular data into the model.## DocumentationFor a general introduction to `followthemoney`, check the high-level introduction:* https://followthemoney.techPart of this package is a command-line tool that can be used to process andtransform data in various ways. You can find a tutorial here:* https://followthemoney.tech/docs/cli/Besides the introductions, there is also a full reference documentation for thelibrary and the contained ontology: * https://followthemoney.tech/explorer/There's also a number of viewers for the RDF schema definitions generatedfrom FollowTheMoney, e.g.:* [LODE documentation](http://150.146.207.114/lode/extract?url=https%3A%2F%2Falephdata.github.io%2Ffollowthemoney%2Fns%2Fftm.xml&amp;owlapi=true&amp;imported=true&amp;lang=en)* [WebVOWL](https://service.tib.eu/webvowl/#iri=https://alephdata.github.io/followthemoney/ns/ftm.xml)* RDF/OWL specification in [XML](https://alephdata.github.io/followthemoney/ns/ftm.xml).## Development environmentFor local development with a virtualenv:```bashpython3 -mvenv .envsource .env/bin/activatepip install -e &quot;.[dev]&quot;```Now you can run the tests with```bashmake test```## ReleasingWe release a lot of version of `followthemoney` because even small changesto the code base require a pypi release to begin being used in `aleph`. Tothis end, here's the steps for making a release:```bashgit pull --rebasemake buildmake testgit add . &amp;&amp; git commit -m &quot;Updating translation files&quot;bumpversion patchgit push --atomic origin main $(git describe --tags --abbrev=0)```This will create a new patch release and upload a distribution of it. Ifthe changes are more significant, you can run `bumpversion` with the `minor`or `major` arguments.When the schema is updated, please update the docs, ideally including thediagrams. For the RDF namespace and JavaScript version of the model, run `make generate`.</longdescription>
</pkgmetadata>