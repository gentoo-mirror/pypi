<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>How to install **geode-ml**====================The **geode-ml** package depends on **GDAL** and **Tensorflow** for most of its functionality. It is easiest to install **GDAL** using the **conda** package manager:```conda create -n &quot;geode_env&quot; python&gt;=3.7conda activate geode_envconda install gdal```However, installing **Tensorflow** with Conda is trickier; we recommend following official documentation for installing the cuDNN and CUDA Toolkit libraries with the **conda** package manager (if you have a compatible GPU), and then doing```pip install tensorflow-gpu```After activating an environment which has both **GDAL** and **Tensorflow**, use **pip** to install **geode-ml**:```pip install geode-ml```The geode.datasets module-------------------The datasets module currently contains the class:1. SemanticSegmentation* creates and processes pairs of imagery and label rasters for scenesThe geode.losses module--------------------The losses module contains custom loss functions for model training; these may be removed in the future when implementedin Tensorflow.The geode.models module--------------------The models module contains the classes:1. Segmentation* subclass of the tensorflow.keras.Model class to be used for image segmentation2. Unet* subclass of the Segmentation class which instantiates a Unet architecture.The geode.utilities module--------------------The utilities module currently contains functions to process, single examples of geospatial data. The datasets moduleimports these functions to apply to batches of data; however, this module exists so that methods can be used by themselves, without instantiating a class object from another module.</longdescription>
</pkgmetadata>