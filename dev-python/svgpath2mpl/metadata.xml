<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>svgpath2mpl===========.. image:: https://github.com/nvictus/svgpath2mpl/actions/workflows/python-test.yml/badge.svg    :target: https://github.com/nvictus/svgpath2mpl/actionsParse SVG paths into matplotlib ``Path`` objects for plotting.A path in SVG is defined by a 'path' element which contains a ``d=&quot;(path data)&quot;`` attribute that contains moveto, line, curve (both cubic and quadratic BÃ©ziers), arc and closepath instructions. Matplotlib actually supports all of these instructions natively but doesn't provide a parser or fully compatible API... image:: http://i.imgur.com/NcZVznQ.png    :align: center    :width: 150pxBased on:1. `svg_parse &lt;https://github.com/rougier/LinuxMag-HS-2014/blob/master/matplotlib/firefox.py&gt;`_ for matplotlib by Nicolas P. Rougier (BSD license).2. `svg.path &lt;https://github.com/regebro/svg.path&gt;`_ by Lennart Regebro (MIT license).This module adds the path commands missing from (1), including smooth curves and endpoint-parameterized elliptical arcs... code-block:: python&gt;&gt;&gt; from svgpath2mpl import parse_path&gt;&gt;&gt; parse_path('M 100 100 L 300 100')Path(array([[ 100.,  100.], [ 300.,  100.]]), array([1, 2], dtype=uint8))See the Jupyter Notebook `gallery &lt;http://nbviewer.jupyter.org/github/nvictus/svgpath2mpl/tree/master/examples/&gt;`_ of examples.Resources---------See the `SVG Specification &lt;https://www.w3.org/TR/SVG/paths.html&gt;`_.See the matplotlib path `tutorial &lt;http://matplotlib.org/users/path_tutorial.html&gt;`_ and `API docs &lt;http://matplotlib.org/1.2.1/api/path_api.html&gt;`_.License-------BSD (3-Clause).</longdescription>
</pkgmetadata>