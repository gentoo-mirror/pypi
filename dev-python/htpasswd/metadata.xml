<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># htpasswd [![Build Status](https://secure.travis-ci.org/thesharp/htpasswd.png)](http://travis-ci.org/thesharp/htpasswd)## Description**htpasswd** is a library for working with htpasswd user (only basic authorization) and group files. It supports CRYPT and MD5 encryption methods. To actually use MD5 encryption method you *MUST* have an ``openssl`` binary installed into system ``$PATH``.## Dependencies- Python 2.7 or 3.3 or 3.4- [orderedmultidict](http://pypi.python.org/pypi/orderedmultidict/0.7) &gt;= 0.7- [future](https://pypi.python.org/pypi/future)- [nose](http://pypi.python.org/pypi/nose/) &gt;= 1.1.2 (for tests)## Sample usage    import htpasswd    with htpasswd.Basic(&quot;/path/to/user.db&quot;) as userdb:        try:            userdb.add(&quot;bob&quot;, &quot;password&quot;)        except htpasswd.basic.UserExists, e:            print e        try:            userdb.change_password(&quot;alice&quot;, &quot;newpassword&quot;)        except htpasswd.basic.UserNotExists, e:            print e    with htpasswd.Group(&quot;/path/to/group.db&quot;) as groupdb:        try:            groupdb.add_user(&quot;bob&quot;, &quot;admins&quot;)        except htpasswd.group.UserAlreadyInAGroup, e:            print e        try:            groupdb.delete_user(&quot;alice&quot;, &quot;managers&quot;)        except htpasswd.group.UserNotInAGroup, e:            print eTo use MD5 encryotion, add ``mode=&quot;md5&quot;`` to the constructor:    with htpasswd.Basic(&quot;/path/to/user.db&quot;, mode=&quot;md5&quot;) as userdb## Provided methods### Basic- ``__contains__(user)``- ``users``- ``add(user, password)``- ``pop(user)``- ``change_password(user, password)``- ``_encrypt_password(password)``### Group- ``__contains__(group)``- ``groups``- ``is_user_in(user, group)``- ``add_user(user, group)``- ``delete_user(user,  group)``## Exceptions### UserExistsRaised by ``Basic.add`` if user already exists.### UserNotExistsRaised by ``Basic.delete`` and ``Basic.change_password`` if there is no such user.### GroupNotExistsRaised by ``Group.delete_user`` if there is no such group.### UserAlreadyInAGroupRaised by ``Group.add_user`` if user is already in a group.### UserNotInAGroupRaised by ``Group.delete_user`` if user isn't in a group.### UnknownEncryptionModeRaised by _encrypt_password if mode is not 'crypt' or 'md5'.</longdescription>
</pkgmetadata>