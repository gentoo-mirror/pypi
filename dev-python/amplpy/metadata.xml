<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AMPLPY: Python API for AMPL```python# Install Python API for AMPL$ python -m pip install amplpy --upgrade# Install solver modules (e.g., HiGHS, CBC, Gurobi)$ python -m amplpy.modules install highs cbc gurobi# Activate your license (e.g., free https://ampl.com/ce license)$ python -m amplpy.modules activate &lt;license-uuid&gt;# Import in Python$ python&gt;&gt;&gt; from amplpy import AMPL&gt;&gt;&gt; ampl = AMPL() # instantiate AMPL object```[[Documentation](https://amplpy.readthedocs.io/)] [[AMPL Modules for Python](https://dev.ampl.com/ampl/python/modules.html)] [[Available on Google Colab](https://colab.ampl.com/)] [[AMPL Community Edition](http://ampl.com/ce)]`amplpy` is an interface that allows developers to access the features of [AMPL](https://ampl.com) from within Python. For a quick introduction to AMPL see [Quick Introduction to AMPL](https://dev.ampl.com/ampl/introduction.html).In the same way that AMPLâ€™s syntax matches naturally the mathematical description of the model, the input and output data matches naturally Python lists, sets, dictionaries, `pandas` and `numpy` objects.All model generation and solver interaction is handled directly by AMPL, which leads to great stability and speed; the library just acts as an intermediary, and the added overhead (in terms of memory and CPU usage) depends mostly on how much data is sent and read back from AMPL, the size of the expanded model as such is irrelevant.With `amplpy` you can model and solve large scale optimization problems in Python with the performance of heavily optimized C code without losing model readability. The same model can be deployed on applications built on different languages by just switching the API used.## Documentation- http://amplpy.readthedocs.io## Repositories:* GitHub Repository: https://github.com/ampl/amplpy* PyPI Repository: https://pypi.python.org/pypi/amplpy</longdescription>
</pkgmetadata>