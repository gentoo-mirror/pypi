<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HtmlWebShot  [![PyPI version](https://badge.fury.io/py/htmlwebshot.svg)](https://pypi.org/project/htmlwebshot/)[![Codacy Badge](https://app.codacy.com/project/badge/Grade/4ffdde720ca542a2973b3a79da61bd70)](https://www.codacy.com?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=1Danish-00/HtmlWebShot&amp;amp;utm_campaign=Badge_Grade)[![Licencse](https://img.shields.io/github/license/1danish-00/htmlwebshot.svg)](https://github.com/1Danish-00/HtmlWebShot/blob/main/LICENSE)[![PyPI downloads](https://img.shields.io/pypi/dm/htmlwebshot?label=DOWNLOADS&amp;color=blue)](https://pypi.org/project/htmlwebshot/)  A python3 package which Can Create Images From url, Html-CSS, Svg and from any readable file and texts with many setup features.## Setup &amp; Installation  * Install HtmlWebShot:     ```bash   $ pip3 install htmlwebshot   ```  * Install wkhtmltopdf:      * Debian/Ubuntu:        ```bash      $ apt-get install wkhtmltopdf -y        ```    * MacOs:        ```bash      $ brew install homebrew/cask/wkhtmltopdf      ```    * Alternative Support        ```      $ wget https://github.com/1Danish-00/HtmlWebShot/raw/main/script.sh | sh      ```    * Win / Arch / Others        [`click here`](https://wkhtmltopdf.org/downloads.html)  ## Usage  ###  Import &amp; Instantiate  ```pythonfrom htmlwebshot import WebShotshot = WebShot()```  ##### Multiple Arguments  * `size`: (int , int) : tuple : height, width default: full-screen* `quality`: int : between 1 to 100* `delay`: float : delay time in sec to load page* `flags`: list : [know More](#flags-uses)* `params`: dict : [know more](#available-params)* `config`: path setup [know more](#config-path)### Simple Method  &gt;  Using Url```pyshot.create_pic(url=&quot;https://google.com&quot;)```&gt;  Using Html File```pyshot.create_pic(html=&quot;myfile.html&quot;, output=&quot;picture.jpg&quot;)```&gt;  Using Html with CSS    &gt;&gt;  via files   ```py   shot.create_pic(html=&quot;myfile.html&quot;, css=&quot;background.css&quot;, output=&quot;picture.jpg&quot;)   ```  &gt;&gt;  via string   ```py   html = &quot;&quot;&quot;&lt;h1&gt; Hello World &lt;/h1&gt;&lt;p&gt;Write something about the world.&lt;/p&gt;&quot;&quot;&quot;   css = &quot;body {background: pink;} p {color: red;}&quot;    shot.create_pic(html=html, css=css, output=&quot;picture.jpg&quot;)   ```&gt;  Using Svg Or Any Other Readable File/Text```pyshot.create_pic(other=&quot;violin.svg&quot;, output=&quot;picture.jpg&quot;)``````pytext = &quot;What should I write here???&quot;shot.create_pic(other=text, size=(100,200))```  You can use with async too  ```pyawait shot.create_pic_async( # parameters are same for both```  ### Some Examples  ```pyfrom htmlwebshot import WebShotshot = WebShot()shot.size = (110, 270)shot.quality = 80  # maximum 100html = &quot;&quot;&quot;&lt;h1&gt; Hello World &lt;/h1&gt;&lt;p&gt;Write something about the world.&lt;/p&gt;&quot;&quot;&quot;css = &quot;body {background: pink;} p {color: red;}&quot;shot.create_pic(html=html, css=css, output=&quot;picture.jpg&quot;)```&lt;details&gt;&lt;summary&gt; Click Here To See Output Image Of Above Code. &lt;/summary&gt;&lt;img src=&quot;https://telegra.ph/file/7e266bf0db726865a8a00.jpg&quot; alt=&quot;sample1&quot;/&gt;&lt;/details&gt;```pyfrom htmlwebshot import WebShotshot = WebShot()shot.quality = 100shot.params = {&quot;--crop-x&quot;:300, &quot;--crop-w&quot;: 400}shot.create_pic(html=&quot;profile.html&quot;, css=&quot;profile.css&quot;)```&lt;details&gt;&lt;summary&gt; Click Here To See Output Image Of Above Code. &lt;/summary&gt;&lt;img src=&quot;https://telegra.ph/file/3d847855e8e8f1338cbad.png&quot; alt=&quot;sample2&quot;/&gt;&lt;/details&gt;&lt;br&gt;&lt;details&gt;&lt;summary&gt; Click For More Examples &lt;/summary&gt;```pyfrom htmlwebshot import WebShotshot = WebShot()shot.quality = 85shot.flags = [&quot;--enable-javascript&quot;]shot.create_pic(html=&quot;jsgraph.html&quot;)```&lt;details&gt;&lt;summary&gt; Click Here To See Output Image Of Above Code. &lt;/summary&gt;&lt;img src=&quot;https://telegra.ph/file/eb08c45ffd3a35a670806.png&quot; alt=&quot;sample4&quot;/&gt;&lt;/details&gt;```pyfrom htmlwebshot import WebShotshot = WebShot()shot.flags = [&quot;--quiet&quot;]shot.quality = 100shot.create_pic(other=&quot;violin.svg&quot;, size=(500,600))```&lt;details&gt;&lt;summary&gt; Click Here To See Output Image Of Above Code. &lt;/summary&gt;&lt;img src=&quot;https://telegra.ph/file/a5183063ba44c5b411499.png&quot; alt=&quot;sample3&quot;/&gt;&lt;/details&gt;&lt;/details&gt;###  Flags Uses  &lt;details&gt;&lt;summary&gt; Click Here To Check All Flags:&lt;/summary&gt;  * `--quiet`: Be less verbose* `--disable-smart-width`: To force size to be accurate* `--custom-header-propagation`: Add HTTP headers specified by flag `--custom-header` for each resource request* `--no-custom-header-propagation`: Don't Add HTTP headers specified by flag `--custom-header` for each resource request* `--disable-javascript`: Don't allow web pages to run javascript* `--enable-javascript`: Allow web pages to run javascript* `--proxy-hostname-lookup`: Use the proxy for resolving hostnames* `--stop-slow-scripts`: Stop slow running javascripts* `--no-stop-slow-scripts`: Don't Stop slow running javascripts&lt;/details&gt;```pyfrom htmlwebshot import WebShotshot = WebShot()shot.flags = [&quot;--quiet&quot;, &quot;--enable-javascript&quot;, &quot;--no-stop-slow-scripts&quot;]```### Available Params  &lt;details&gt;&lt;summary&gt; Click Here To Check All Params options:&lt;/summary&gt;  * `--bypass-proxy-for`: _`&lt;value&gt;`_ Bypass proxy for host (repeatable)* `--cookie`: _`&lt;name&gt;` `&lt;value&gt;`_ Set an additional cookie (repeatable), value should be url encoded.* `--cookie-jar`: _`&lt;path&gt;`_ Read and write cookies from and to the supplied cookie jar file* `--crop-h`: _`&lt;int&gt;`_ Set height for cropping* `--crop-w`: _`&lt;int&gt;`_ Set width for cropping* `--crop-x`: _`&lt;int&gt;`_ Set x coordinate for cropping* `--crop-y`: _`&lt;int&gt;`_ Set y coordinate for cropping* `--custom-header`: _`&lt;name&gt;` `&lt;value&gt;`_ Set an additional HTTP header (repeatable)* `--encoding`: _`&lt;encoding&gt;`_ Set the default text encoding, for input* `--format`: _`&lt;format&gt;`_ Output file format* `--minimum-font-size`: _`&lt;int&gt;`_ Minimum font size* `--password`: _`&lt;password&gt;`_ HTTP Authentication password* `--post`: _`&lt;name&gt;` `&lt;value&gt;`_ Add an additional post field (repeatable)* `--post-file`: _`&lt;name&gt; &lt;path&gt;`_ Post an additional file (repeatable)* `--proxy`: _`&lt;proxy&gt;`_ Use a proxy* `--run-script`: _`&lt;js&gt;`_ Run this additional javascript after the page is done loading (repeatable)* `--ssl-crt-path`: _`&lt;path&gt;`_ Path to the ssl client cert public key in OpenSSL PEM format, optionally followed by intermediate ca and trusted certs* `--ssl-key-password`: _`&lt;password&gt;`_ Password to ssl client cert private key* `--ssl-key-path`: _`&lt;path&gt;`_ Path to ssl client cert private key in OpenSSL PEM format* `--user-style-sheet`: _`&lt;path&gt;`_ Specify a user style sheet, to load with every page* `--username`: _`&lt;username&gt;`_ HTTP Authentication username* `--window-status`: _`&lt;windowStatus&gt;`_ Wait until window.status is equal to this string before rendering page* `--zoom`: _`&lt;float&gt;`_ Use this zoom factor&lt;/details&gt;```pyfrom htmlwebshot import WebShotshot = WebShot()shot.params = {    &quot;--custom-header&quot;: &quot;Accept-Encoding gzip&quot;,    &quot;--minimum-font-size&quot;: 50,    &quot;--format&quot;: &quot;png&quot;,    &quot;--zoom&quot;: 10,    }```### Config Path  If you installed pkg directly then no need to configure it, It'll auto configure.  But If u installed externally then you have to setup config path.  ```pyfrom htmlwebshot import WebShot, Configshot = WebShot()shot.config = Config(wkhtmltopdf=&quot;/path/to/wkhtmltopdf&quot;, wkhtmltoimage=&quot;/path/to/wkhtmltoimage&quot;)```</longdescription>
</pkgmetadata>