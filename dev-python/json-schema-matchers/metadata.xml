<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>#### PyHamcrest matchers extension for json schema validationThe schema should be implemented following syntax of [Draft-07 to 2019-09](https://json-schema.org/draft-07/json-schema-release-notes.html) version.Schema example:```pythonsingle_user_schema = {    &quot;title&quot;: &quot;Single User Info&quot;,    &quot;type&quot;: &quot;object&quot;,    &quot;properties&quot;: {        &quot;first_name&quot;: {            &quot;type&quot;: &quot;string&quot;,            &quot;minLength&quot;: 3        },        &quot;last_name&quot;: {            &quot;type&quot;: &quot;string&quot;,            &quot;minLength&quot;: 3        },        &quot;phone_number&quot;: {            &quot;type&quot;: &quot;number&quot;        }    },    &quot;required&quot;: [        &quot;first_name&quot;,        &quot;last_name&quot;,    ]}all_users_info_schema = {    &quot;title&quot;: &quot;All Users Info&quot;,    &quot;type&quot;: &quot;array&quot;,    &quot;items&quot;: single_user_schema}```Then you can use `matches_json_schema` matcher with all hamcrest matchers:```pythonfrom hamcrest import assert_thatfrom json_schema_matchers.common_matcher import matches_json_schemausers_list_json_obj = [    {        &quot;first_name&quot;: 'John',        &quot;last_name&quot;: &quot;Johnson&quot;,        &quot;phone_number&quot;: 123456789    },    {        &quot;first_name&quot;: 'Jim',        &quot;last_name&quot;: 'Jefferson'    }]assert_that(users_list_json_obj, matches_json_schema(all_users_info_schema))assert_that(users_list_json_obj[0], matches_json_schema(single_user_schema))```In case of validation fail the matcher will return all mismatches iteratively:```pythonusers_list_json_obj = [    {        &quot;first_name&quot;: 'John',        &quot;last_name&quot;: &quot;Johnson&quot;,        &quot;phone_number&quot;: '123456789'    },    {        &quot;first_name&quot;: None,        &quot;last_name&quot;: 'Je'    }]assert_that(users_list_json_obj, matches_json_schema(all_users_info_schema))``````jsonAssertionError: Expected:      JSON object should match schema &quot;All Users Info&quot;     but:      mismatches occurred: '123456789' is not of type 'number'Failed validating 'type' in schema['items']['properties']['phone_number']:    {'type': 'number'}On instance[0]['phone_number']:    '123456789'------------'Je' is too shortFailed validating 'minLength' in schema['items']['properties']['last_name']:    {'minLength': 3, 'type': 'string'}On instance[1]['last_name']:    'Je'------------None is not of type 'string'Failed validating 'type' in schema['items']['properties']['first_name']:    {'minLength': 3, 'type': 'string'}On instance[1]['first_name']:    None------------```#### Dependencies:```requirements.txtjsonschema==3.2.0PyHamcrest==2.0.2```</longdescription>
</pkgmetadata>