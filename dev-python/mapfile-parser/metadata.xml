<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mapfile_parser[![PyPI - Downloads](https://img.shields.io/pypi/dm/mapfile-parser)](https://pypi.org/project/mapfile-parser/)[![GitHub License](https://img.shields.io/github/license/Decompollaborate/mapfile_parser)](https://github.com/Decompollaborate/mapfile_parser/releases/latest)[![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/Decompollaborate/mapfile_parser)](https://github.com/Decompollaborate/mapfile_parser/releases/latest)[![PyPI](https://img.shields.io/pypi/v/mapfile-parser)](https://pypi.org/project/mapfile-parser/)![crate.io](https://img.shields.io/crates/dv/mapfile-parser)[![GitHub contributors](https://img.shields.io/github/contributors/Decompollaborate/mapfile_parser?logo=purple)](https://github.com/Decompollaborate/mapfile_parser/graphs/contributors)Map file parser library focusing decompilation projects.This library is available for Python3 and Rust## Installing### Python versionSee this package at &lt;https://pypi.org/project/mapfile_parser/&gt;.The recommended way to install is using from the PyPi release, via `pip`:```bashpython3 -m pip install -U mapfile_parser```If you use a `requirements.txt` file in your repository, then you can addthis library with the following line:```txtmapfile_parser&gt;=2.2.0,&lt;3.0.0```#### Development versionThe unstable development version is located at the [develop](https://github.com/Decompollaborate/mapfile_parser/tree/develop)branch. PRs should be made into that branch instead of the main one.The recommended way to install a locally cloned repo is by passing the `-e`(editable) flag to `pip`.```bashpython3 -m pip install -e .```In case you want to mess with the latest development version without wanting toclone the repository, then you could use the following command:```bashpython3 -m pip uninstall mapfile_parserpython3 -m pip install git+https://github.com/Decompollaborate/mapfile_parser.git@develop```NOTE: Installing the development version is not recommended unless you know whatyou are doing. Proceed at your own risk.### Rust versionSee this crate at &lt;https://crates.io/crates/mapfile_parser&gt;.```toml[build]mapfile_parser = &quot;2.2.0&quot;```## Versioning and changelogThis library follows [Semantic Versioning](https://semver.org/spec/v2.0.0.html).We try to always keep backwards compatibility, so no breaking changes shouldhappen until a major release (i.e. jumping from 2.X.X to 3.0.0).To see what changed on each release check either the [CHANGELOG.md](CHANGELOG.md)file or check the [releases page on Github](https://github.com/Decompollaborate/mapfile_parser/releases).You can also use [this link](https://github.com/Decompollaborate/mapfile_parser/releases/latest)to check the latest release.## ExamplesVarious cli examples are provided in the [frontends folder](src/mapfile_parser/frontends).Most of them are re-implementations of already existing tools using thislibrary to show how to use this library and inspire new ideas.The list can be checked in runtime with `python3 -m mapfile_parser --help`.Each one of them can be executed with `python3 -m mapfile_parser utilityname`,for example `python3 -m mapfile_parser pj64_syms`.- `bss_check`: Check that globally visible bss has not been reordered.- `first_diff`: Find the first difference(s) between the built ROM and the base  ROM.- `jsonify`: Converts a mapfile into a json format.- `pj64_syms`: Produce a PJ64 compatible symbol map.- `progress`: Computes current progress of the matched functions. Relies on a  [splat](https://github.com/ethteck/splat) folder structure and each matched  functions no longer having an `.s` file (i.e: delete the file after matching it).- `sym_info`: Display various information about a symbol or address.- `symbol_sizes_csv`: Produces a csv summarizing the files sizes by parsing a  map file.- `upload_frogress`: Uploads current progress (calculated by the `progress`  utility) of the matched functions to [frogress](https://github.com/decompals/frogress).None of the provided cli utilities are meant to be used directly on a commandline, because they need a large number of long parameters to them and every repohas their own quirks which would need them to be adapted. Those have beenwritten mostly to facilitate people to write those utilities in a way whichaccomodates their own repo.</longdescription>
</pkgmetadata>