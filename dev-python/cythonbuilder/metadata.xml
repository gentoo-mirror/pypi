<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CythonBuilderCythonBuilder; automated compiling and packaging of Cython code&lt;table&gt;    &lt;tr&gt;        &lt;th&gt;Version&lt;/th&gt;        &lt;td&gt;            &lt;a href=&quot;https://pypi.org/project/cythonbuilder&quot;&gt;                &lt;img alt=&quot;version&quot; src=&quot;https://img.shields.io/pypi/v/cythonbuilder&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;Package&lt;/th&gt;        &lt;td&gt;            &lt;a href=&quot;https://pypi.org/project/cythonbuilder&quot;&gt;                &lt;img alt=&quot;PythonVersion&quot; src=&quot;https://img.shields.io/pypi/pyversions/cythonbuilder&quot;&gt;            &lt;/a&gt;            &lt;a href=&quot;https://pypi.org/project/cythonbuilder&quot;&gt;                &lt;img alt=&quot;Platform&quot; src=&quot;https://img.shields.io/badge/os-windows%20%7C%20linux-blue&quot;&gt;            &lt;/a&gt;            &lt;a href=&quot;https://github.com/mike-huls/cythonbuilder/blob/main/license.txt&quot;&gt;                &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/pypi/l/cythonbuilder&quot;&gt;            &lt;/a&gt;            &lt;a href=&quot;https://cython.org/&quot;&gt;                &lt;img alt=&quot;implementation&quot; src=&quot;https://img.shields.io/pypi/implementation/cythonbuilder&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;Status&lt;/th&gt;        &lt;td&gt;            &lt;a href=&quot;https://pypi.org/project/cythonbuilder&quot;&gt;                &lt;img alt=&quot;status&quot; src=&quot;https://img.shields.io/pypi/status/cythonbuilder&quot;&gt;            &lt;/a&gt;            &lt;a href=&quot;https://pypi.org/project/cythonbuilder&quot;&gt;                &lt;img alt=&quot;DependencyStatus&quot; src=&quot;https://img.shields.io/librariesio/release/pypi/cythonbuilder&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;Stats&lt;/th&gt;        &lt;td&gt;            &lt;a href=&quot;https://pypi.org/project/cythonbuilder/&quot;&gt;                &lt;img alt=&quot;DownloadsCount&quot; src=&quot;https://img.shields.io/pypi/dm/cythonbuilder&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;Social&lt;/th&gt;        &lt;td&gt;            &lt;a href=&quot;https://img.shields.io/twitter/url?style=social&amp;url=https%3A%2F%2Fgithub.com%2Fmike-huls%2Fcythonbuilder&quot;&gt;                &lt;img alt=&quot;tweet&quot; src=&quot;https://img.shields.io/twitter/url?style=social&amp;url=https%3A%2F%2Fgithub.com%2Fmike-huls%2Fcythonbuilder&quot;&gt;            &lt;/a&gt;            &lt;a href=&quot;https://img.shields.io/twitter/follow/mike_huls?style=social&quot;&gt;                &lt;img alt=&quot;twitterfollow&quot; src=&quot;https://img.shields.io/twitter/follow/mike_huls?style=social&quot;&gt;            &lt;/a&gt;        &lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;## Installation```commandlinepip install cythonbuilder```## How to useCythonBuilder makes it easy to use Cython in your Python project by automating the building process.You can use CythonBuilder from the commandline or import it as a package in Python. Generated files can be imported in Python directly### With CommandlineAdd `-v` (verbose) for more information 1. Listing files with and without filter```commandlinecybuilder listcybuilder list file1 file2.pyx```2. Build with and without optional build arguments ```commandlinecybuilder buildcybuilder build --include-numpy --no-annotation --no-cleanup```3. Clean```commandlinecybuilder clean cybuilder clean --no-cleanup```&lt;hr&gt;### With python1. Listing files with and without filter```pythonimport cythonbuilder as cybuilderprint(cybuilder.cy_list())                                  # without a filterprint(cybuilder.cy_list(target_files=['some_name.pyx']))    # with a filter```2. Build with and without optional build arguments  (cleans automatically afterwards)```pythonimport cythonbuilder as cybuildercybuilder.cy_build()found_files = cybuilder.cy_build(target_files=['some_name'])cybuilder.cy_build(target_files=found_files, include_numpy=False, create_annotations=False)```3. Clean```pythonimport cythonbuilder as cybuildercybuilder.cy_clean()found_files = cybuilder.cy_build(target_files=['some_name'])cybuilder.cy_clean(target_files=['some_name'])```4. Setting debug level for verbose logging```pythonfrom cythonbuilder import loggerfrom cythonbuilder import set_logger_debug_modeset_logger_debug_mode(logger=logger)```### In-depth, step by step ExplanationI've written a few articles that explain why Python is slow, why Cython can be a solution and how CythonBuilder helps us develop fast code easily:- [Why Python is so slow and how to speed it up](https://mikehuls.medium.com/why-is-python-so-slow-and-how-to-speed-it-up-485b5a84154e)- [Getting started with Cython; how to perform &gt;1.7 billion calculations per second with Python](https://mikehuls.medium.com/getting-started-with-cython-how-to-perform-1-7-billion-calculations-per-second-in-python-b83374cfcf77)- [Cython for data science: 6 steps to make this Pandas dataframe operation over 100x faster](https://mikehuls.medium.com/cython-for-data-science-6-steps-to-make-this-pandas-dataframe-operation-over-100x-faster-1dadd905a00b)</longdescription>
</pkgmetadata>