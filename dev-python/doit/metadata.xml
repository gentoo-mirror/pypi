<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>*doit* comes from the idea of bringing the power of build-tools to execute anykind of task*doit* can be uses as a simple **Task Runner** allowing you to easily define ad hoctasks, helping you to organize all your project related tasks in an unifiedeasy-to-use &amp; discoverable way.*doit* scales-up with an efficient execution model like a **build-tool**.*doit* creates a DAG (direct acyclic graph) and is able to cache task results.It ensures that only required tasks will be executed and in the correct order(aka incremental-builds).The *up-to-date* check to cache task results is not restricted to looking forfile modification on dependencies.  Nor it requires &quot;target&quot; files.So it is also suitable to handle **workflows** not handled by traditional build-tools.Tasks' dependencies and creation can be done dynamically during it is executionmaking it suitable to drive complex workflows and **pipelines**.*doit* is build with a plugin architecture allowing extensible commands, customoutput, storage backend and &quot;task loader&quot;. It also provides an API allowingusers to create new applications/tools leveraging *doit* functionality like a framework.*doit* is a mature project being actively developed for more than 10 years.It includes several extras like: parallel execution, auto execution (watch for filechanges), shell tab-completion, DAG visualisation, IPython integration, and more.Sample Code===========Define functions returning python dict with task's meta-data.Snippet from `tutorial &lt;http://pydoit.org/tutorial-1.html&gt;`_:.. code:: python  def task_imports():      &quot;&quot;&quot;find imports from a python module&quot;&quot;&quot;      for name, module in PKG_MODULES.by_name.items():          yield {              'name': name,              'file_dep': [module.path],              'actions': [(get_imports, (PKG_MODULES, module.path))],          }  def task_dot():      &quot;&quot;&quot;generate a graphviz's dot graph from module imports&quot;&quot;&quot;      return {          'targets': ['requests.dot'],          'actions': [module_to_dot],          'getargs': {'imports': ('imports', 'modules')},          'clean': True,      }  def task_draw():      &quot;&quot;&quot;generate image from a dot file&quot;&quot;&quot;      return {          'file_dep': ['requests.dot'],          'targets': ['requests.png'],          'actions': ['dot -Tpng %(dependencies)s -o %(targets)s'],          'clean': True,      }Run from terminal::  $ doit list  dot       generate a graphviz's dot graph from module imports  draw      generate image from a dot file  imports   find imports from a python module  $ doit  .  imports:requests.models  .  imports:requests.__init__  .  imports:requests.help  (...)  .  dot  .  drawProject Details=============== - Website &amp; docs - `http://pydoit.org &lt;http://pydoit.org&gt;`_ - Project management on github - `https://github.com/pydoit/doit &lt;https://github.com/pydoit/doit&gt;`_ - Discussion group - `https://groups.google.com/forum/#!forum/python-doit &lt;https://groups.google.com/forum/#!forum/python-doit&gt;`_ - News/twitter - `https://twitter.com/pydoit &lt;https://twitter.com/pydoit&gt;`_ - Plugins, extensions and projects based on doit - `https://github.com/pydoit/doit/wiki/powered-by-doit &lt;https://github.com/pydoit/doit/wiki/powered-by-doit&gt;`_license=======The MIT LicenseCopyright (c) 2008-2022 Eduardo Naufel Schettino</longdescription>
</pkgmetadata>