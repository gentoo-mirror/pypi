<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Slide Score Python SDKThis SDK contains the client library for using API of [Slide Score](https://www.SlideScore.com)See the [documentation](https://www.slidescore.com/docs/api/index.html) for more # Examples## Basic usage- Import the module- setup token- setup URL of the Slide Score server- create an instance of the API Client    from slidescore import *    token=&quot;eyJ....&lt;your token&gt;....&quot;    url=&quot;https://slidescore.example.com/&quot;    client = APIClient(url, token)    ## Downloading a slide Downloads a slide to the current directory (&quot;.&quot;). Check the URL of the slide for image ID and study ID, or click Export cases button on study overview to get a list of slide IDs.    studyid=1    imageid=2    client.download_slide(studyid, imageid, &quot;.&quot;)## Uploading and adding a slide to a study    localFilePath=&quot;C:/file_to_upload.tiff&quot;    uploadFolder=&quot;UploadTest&quot;    serverFileName=&quot;renamedSlide.tiff&quot;    client.upload_file(localFilePath, uploadFolder, serverFileName)    client.add_slide(studyid, uploadFolder+&quot;/&quot;+serverFileName)     ## Upload answers - study resultsResults are uploaded in the same format as the download.    resultsFilePath=&quot;c:/Users/User/Downloads/Study_23_06_21_11.txt&quot;    with open(resultsFilePath, &quot;r&quot;) as f:        res = f.read()    client.upload_results(studyid, res)## Set slide descriptionYou can use (limited) set of HTML tags in slide, case, study and module descriptions:    client.update_slide_description(studyid, imageid, 'Carina Nebula: Cosmic Cliffs, Glittering Landscape of Star Birth. Image Credit: NASA, ESA, CSA, and STScI &lt;a href=&quot;https://esawebb.org/news/weic2205/&quot;&gt;Original&lt;/a&gt;');## Make a request directlyThe SDK doesn't include methods for all possible calls, sometimes you need to make the API request yourself:    response=clientlocal.perform_request(&quot;UpdateSlideName&quot;, {&quot;imageId&quot;:imageid, &quot;newName&quot;:'renamedSlide'}, method=&quot;POST&quot;)    rjson = response.json()    if 'success' not in rjson or rjson['success'] != True:        raise SlideScoreErrorException(&quot;Failed updating slide name: &quot; + response.text);</longdescription>
</pkgmetadata>