<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HSTS Parser[![Lint Codebase](https://github.com/thebeanogamer/hstsparser/actions/workflows/lint.yaml/badge.svg)](https://github.com/thebeanogamer/hstsparser/actions/workflows/lint.yaml) [![Build Releases](https://github.com/thebeanogamer/hstsparser/actions/workflows/build.yaml/badge.svg)](https://github.com/thebeanogamer/hstsparser/actions/workflows/build.yaml) [![Licence](https://img.shields.io/github/license/thebeanogamer/hstsparser)](./LICENSE) ![Python 3.11.x](https://img.shields.io/badge/python-3.11.x-yellow.svg) [![PyPI](https://img.shields.io/pypi/v/hstsparser)](https://pypi.org/project/hstsparser) [![Downloads](https://pepy.tech/badge/hstsparser)](https://pepy.tech/project/hstsparser) [![Copr build status](https://copr.fedorainfracloud.org/coprs/thebeanogamer/hstsparser/package/hstsparser/status_image/last_build.png)](https://copr.fedorainfracloud.org/coprs/thebeanogamer/hstsparser/package/hstsparser/)HSTS Parser is a simple tool to parse Firefox and Chrome's HSTS databases into actually helpful forensic artifacts! You can read more about the research behind this tool and potential uses for it over on [my blog](https://blog.daniel-milnes.uk/hsts-for-forensics-you-can-run-but-you-cant)!## InstallationHSTS Parser can be installed via pip, or as a native executable.### From PyPiIf you already have Python installed, you can install HSTS Parser using pip.```bashpip install hstsparser```### On FedoraHSTS Parser is available through Fedora COPR for Fedora 38+.```bashdnf copr enable thebeanogamer/hstsparserdnf install hstsparser```### On WindowsWindows binaries are published by GitHub Actions CI for each release of HSTS Parser. You can download these on the [releases page](https://github.com/thebeanogamer/hstsparser/releases/latest).## UsageAll of the below documentation is written for the Python version rather than the standalone executable, but the commands will be the same.```shell$ hstsparser -husage: hstsparser [-h] [-w WORDLIST] [--csv CSV] (--firefox | --chrome) FILEProcess HSTS databasespositional arguments:  FILE         The path to the database to be processedoptional arguments:  -h, --help   show this help message and exit  -w WORDLIST  The path to the database to be processed  --csv CSV    Output to a CSV file  --firefox    Process a Firefox database  --chrome     Process a Chrome database```### Examples#### Firefox```shellhstsparser --firefox SiteSecurityServiceState.txt```#### Chrome```shellhstsparser --chrome TransportSecurity```#### Chrome with Wordlist```shellhstsparser -w wordlist.txt --chrome TransportSecurity```## Screenshots### Firefox![Screenshot of Firefox Processing](https://blog.daniel-milnes.uk/content/images/2019/11/image-3.png)### Chrome with Wordlist![Screenshot of Chrome Processing with a wordlist](https://blog.daniel-milnes.uk/content/images/2019/11/image-4.png)## Links- [My Blog Post](https://blog.daniel-milnes.uk/hsts-for-forensics-you-can-run-but-you-cant)- [MDN - HSTS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security)- [Chromium - HSTS](https://www.chromium.org/hsts)</longdescription>
</pkgmetadata>