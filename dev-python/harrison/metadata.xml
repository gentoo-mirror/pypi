<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>harrison========Time a block of code.[![version](https://img.shields.io/pypi/v/harrison?style=flat-square)][pypi][![python version](https://img.shields.io/pypi/pyversions/harrison?style=flat-square)][pypi][![license](https://img.shields.io/pypi/l/harrison?style=flat-square)][pypi][![build](https://img.shields.io/circleci/project/github/metabolize/harrison/master?style=flat-square)][build][![code style](https://img.shields.io/badge/code%20style-black-black?style=flat-square)][black][pypi]: https://pypi.org/project/harrison/[build]: https://circleci.com/gh/metabolize/harrison/tree/master[black]: https://black.readthedocs.io/en/stable/Use as the context expression of a `with` statement:```pyconsole&gt;&gt;&gt; from harrison import Timer&gt;&gt;&gt; with Timer() as t:&gt;&gt;&gt;     ...&gt;&gt;&gt; print(t.elapsed_time_ms)12345```When a description string is passed on initialization, the elapsed time willbe printed on completion, keyed by this description.```pyconsole&gt;&gt;&gt; with Timer('My expensive block of code'):&gt;&gt;&gt;     ...My expensive block of code: 12345 ms```You can also start and stop a Timer explicitly:```pytimer = Timer()timer.start()some_expensive_function(...)print(timer.elapsed_time_s)another_expensive_function(...)timer.stop()print(timer.elapsed_time_s)```You can also time each execution of a function using a decorator:```pyfrom harrison import profile@profile('Describes the function')def some_function():    pass# Without args, the function name (e.g. 'some_function') will be used# as the description.@profile()def another_function():    pass```You can also use `RegisteredTimer`, which groups together a bunch of namedtimers, provides utilities for serializing their times, and an optional globaltimer registry.Named after John Harrison, the English carpenter and clockmaker whoinvented the [marine chronometer][].[John Harrison]: https://en.wikipedia.org/wiki/John_Harrison[marine chronometer]: https://en.wikipedia.org/wiki/Marine_chronometerSimilar libraries-----------------This is similar to the library [contexttimer][], but that library is licensedunder the GPLv3 which is more restrictive than two-clause BSD license usedhere.[contexttimer]: https://github.com/brouberol/contexttimerDevelopment-----------```sh./dev.py init./dev.py test```Contribute----------- Issue Tracker: https://github.com/metabolize/harrison/issues- Source Code: https://github.com/metabolize/harrisonPull requests welcome!Support-------If you are having issues, please let us know.Acknowledgements----------------This project was packaged by [Paul Melnikow][] while at [Body Labs][]. Thanksto Body Labs for the repository transfer.[paul melnikow]: https://github.com/paulmelnikow[body labs]: https://github.com/bodylabsLicense-------The project is licensed under the two-clause BSD license.</longdescription>
</pkgmetadata>