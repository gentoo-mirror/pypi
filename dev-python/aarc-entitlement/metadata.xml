<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>AARC Entitlement Library========================This package provides python classes to create, parse and compare entitlements accordingto the AARC recommendations G002 and G069.Installation------------Install using pip::    pip install aarc-entitlementDocumentation-------------The documentation is available at https://aarcentitlement.readthedocs.io.The G002 recommendation can be found at https://aarc-community.org/guidelines/aarc-g002.Examples---------Check if a user entitlement permits usage of a service______________________________________________________.. code-block:: python    import aarc_entitlement    # This entitlement is needed to use a service    required = aarc_entitlement.G002(&quot;urn:geant:h-df.de:group:aai-admin&quot;)    # This entitlement is held by a user who wants to use the service    actual =   aarc_entitlement.G002(&quot;urn:geant:h-df.de:group:aai-admin:role=member&quot;)    # Is the user permitted to use the service, because of its entitlement `actual`?    permitted = actual.satisfies(required)    # -&gt; True here    # Are the two entitlements the same?    equals = required == actual    # -&gt; False here..    does not work on github:    Other examples for entitlements and comparisions can be found in :download:`examples.py &lt;../../examples.py&gt;`G069 Entitlement Normalization______________________________Starting with recommendation G069 the specification requires normalization of entitlements.When using `AarcEntitlementG069` the library produces normalized representations... code-block:: python    import aarc_entitlement    not_normalized = &quot;UrN:NiD:ExAmPlE.oRg:group:Minun%20Ryhm%c3%a4ni&quot;    normalized = repr(aarc_entitlement.G069(not_normalized))    # -&gt; &quot;urn:nid:example.org:group:Minun%20Ryhm%C3%A4ni&quot;Tests, Linting and Documentation--------------------------------Run tests for all supported python versions::    # run tests, coverage and linter    tox    # build docs    tox -e docs    # After this, the documentation should be located at `doc/build/index.html`.Packaging---------To upload a new package version to pypi use the Makefile::    # build the package    make dist    # upload the package to pypi    make uploadFunding Notice--------------The AARC project has received funding from the European Unionâ€™s Horizon 2020research and innovation programme under grant agreement No 653965 and 730941.</longdescription>
</pkgmetadata>