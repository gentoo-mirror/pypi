<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==================msal-requests-auth==================Authentication using python requests and MSAL. This uses the MSAL cachefor repeated requests... image:: https://img.shields.io/badge/all_contributors-2-orange.svg?style=flat-square    :alt: All Contributors    :target: https://github.com/corteva/msal-requests-auth/blob/master/AUTHORS.rst.. image:: https://img.shields.io/badge/License-BSD%203--Clause-yellow.svg    :target: https://github.com/corteva/msal-requests-auth/blob/master/LICENSE.. image:: https://img.shields.io/pypi/v/msal_requests_auth.svg    :target: https://pypi.python.org/pypi/msal_requests_auth.. image:: https://pepy.tech/badge/msal_requests_auth    :target: https://pepy.tech/project/msal_requests_auth.. image:: https://img.shields.io/conda/vn/conda-forge/msal_requests_auth.svg    :target: https://anaconda.org/conda-forge/msal_requests_auth.. image:: https://github.com/corteva/msal-requests-auth/workflows/Tests/badge.svg    :target: https://github.com/corteva/msal-requests-auth/actions?query=workflow%3ATests.. image:: https://codecov.io/gh/corteva/msal-requests-auth/branch/master/graph/badge.svg    :target: https://codecov.io/gh/corteva/msal-requests-auth.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white    :target: https://github.com/pre-commit/pre-commit.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/python/blackBugs/Questions--------------- Report bugs/feature requests: https://github.com/corteva/msal-requests-auth/issues- Ask questions: https://github.com/corteva/msal-requests-auth/discussionsUsage-----Compatible with:- `requests &lt;https://requests.readthedocs.io/en/latest/&gt;`_- `httpx &lt;https://www.python-httpx.org/&gt;`_Device Code Flow~~~~~~~~~~~~~~~~.. note:: By default, `DeviceCodeAuth` copys the code to your clipboard and opens a webbrowser.          To disable, either set `headless=True` when initializing `DeviceCodeAuth`          or set the environment variable `MSAL_REQUESTS_AUTH_HEADLESS` to `true`.- New in version 0.2.0: headless- New in version 0.6.0: MSAL_REQUESTS_AUTH_HEADLESS environment variable- New in version 0.7.0: KeyringTokenCache.. code-block:: python    import requests    import msal    from msal_requests_auth.auth import DeviceCodeAuth    from msal_requests_auth.cache import KeyringTokenCache    client_id = &quot;&lt;client ID from Azure AD&gt;&quot;    tenant_id = &quot;&lt;tenant ID from Azure AD&gt;&quot;    application_id = &quot;&lt;client ID of application you want to get a token for from Azure AD&gt;&quot;    with KeyringTokenCache() as token_cache:        app = msal.PublicClientApplication(            client_id,            authority=f&quot;https://login.microsoftonline.com/{tenant_id}/&quot;,            token_cache=token_cache,        )        auth = DeviceCodeAuth(            client=app,            scopes=[f&quot;{application_id}/.default&quot;],        )        response = requests.get(            endpoint,            auth=auth,        )Client Credentials Flow~~~~~~~~~~~~~~~~~~~~~~~~.. code-block:: python    import requests    import msal    from msal_requests_auth.auth import ClientCredentialAuth    client_id = &quot;&lt;client ID from Azure AD&gt;&quot;    client_secret = &quot;&lt;client secret for client in Azure AD&gt;&quot;    tenant_id = &quot;&lt;tenant ID from Azure AD&gt;&quot;    application_id = &quot;&lt;client ID of application you want to get a token for from Azure AD&gt;&quot;    app = msal.ConfidentialClientApplication(        client_id,        authority=(f&quot;https://login.microsoftonline.com/{tenant_id}/&quot;),        client_credential=client_secret,    )    auth = ClientCredentialAuth(        client=app,        scopes=[f&quot;{application_id}/.default&quot;],    )    response = requests.get(        endpoint,        auth=auth,    )Installation------------To install msal-requests-auth, run this command in your terminal:.. code-block:: console    $ python -m pip install msal_requests_authIf you use conda:.. code-block:: console    $ conda install -c conda-forge msal_requests_authCredits-------This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template... _Cookiecutter: https://github.com/audreyr/cookiecutter.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage</longdescription>
</pkgmetadata>