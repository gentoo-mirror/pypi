<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=========================================enable: low-level drawing and interaction=========================================https://docs.enthought.com/enable.. image:: https://github.com/enthought/enable/workflows/Test%20with%20EDM/badge.svg   :target: https://github.com/enthought/enable/actions?query=workflow%3A%22Test+with+EDM%22   :alt: Build statusThe Enable *project* provides two related multi-platform *packages* for drawingGUI objects.- **Enable**: An object drawing library that supports containment and event  notification.- **Kiva**: A multi-platform DisplayPDF vector drawing engine.Enable------The Enable package is a multi-platform object drawing library built on top ofKiva. The core of Enable is a container/component model for drawing and eventnotification. The core concepts of Enable are:- Component- Container- Events (mouse, drag, and key events)Enable provides a high-level interface for creating GUI objects, whileenabling a high level of control over user interaction. Enable is a supportingtechnology for the Chaco and BlockCanvas projects.Kiva----Kiva is a multi-platform DisplayPDF vector drawing engine that supportsmultiple output backends, including Windows, GTK, and Macintosh nativewindowing systems, a variety of raster image formats, PDF, and Postscript.DisplayPDF is more of a convention than an actual specification. It is apath-based drawing API based on a subset of the Adobe PDF specification.Besides basic vector drawing concepts such as paths, rects, line sytles, andthe graphics state stack, it also supports pattern fills, antialiasing, andtransparency. Perhaps the most popular implementation of DisplayPDF isApple's Quartz 2-D graphics API in Mac OS X.Kiva Features`````````````Kiva currently implements the following features:- paths and compiled paths; arcs, bezier curves, rectangles- graphics state stack- clip stack, disjoint rectangular clip regions- raster image blitting- arbitrary affine transforms of the graphics context- bevelled and mitered joins- line width, line dash- Freetype or native fonts- RGB, RGBA, or grayscale color depths- transparencyPrerequisites-------------You must have the following libraries installed before buildingthe Enable/Kiva project:- `Setuptools &lt;https://pypi.org/project/setuptools&gt;`_- `Numpy &lt;https://pypi.org/project/numpy/&gt;`_- `SWIG &lt;http://www.swig.org/&gt;`_- `fonttools &lt;https://pypi.org/project/FontTools&gt;`_- (on Linux) X11-devel (development tools for X11)- (on Mac OS X) `Cython &lt;https://cython.org/&gt;`_Enable/Kiva also have the following requirements:.. rubric:: Runtime:- `Numpy &lt;https://pypi.org/project/numpy/&gt;`_- `PIL &lt;https://www.pythonware.com/products/pil/&gt;`_ or preferably `pillow &lt;https://pypi.org/project/Pillow/&gt;`_- `traits &lt;https://pypi.org/project/traits&gt;`_- `traitsui &lt;https://pypi.org/project/traitsui&gt;`_- `pyface &lt;https://pypi.org/project/pyface&gt;`_.. rubric:: Optional:- `apptools &lt;https://pypi.org/project/apptools/&gt;`_- (Qt backend) `PySide2, PySide6 &lt;https://pypi.org/project/PySide&gt;`_ or `PyQt5 &lt;https://pypi.org/project/PyQt5&gt;`_- (WX backend) `WxPython &lt;https://pypi.org/project/wxPython/&gt;`_- (SVG backend) `PyParsing &lt;https://pypi.org/project/pyparsing&gt;`_- (PDF backend) `ReportLab Toolkit &lt;https://www.reportlab.com/dev/install/version_3_and_up/&gt;`_- (Cairo backend) `PyCairo &lt;https://cairographics.org/releases/&gt;`_- (Constrained layout) `kiwisolver &lt;https://pypi.org/project/kiwisolver&gt;`_</longdescription>
</pkgmetadata>