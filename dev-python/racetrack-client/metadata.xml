<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Racetrack CLI client`racetrack-client` is a CLI client tool for deploying and managing workloads in Racetrack.Racetrack system allows to deploy jobs in a one step.It transforms your code to in-operation workloads, e.g. Kubernetes workloads.You write some code according to a set of coventions, you include the manifest file which explains the code, and you submit it to Racetrack. A short while after, the service calling your code is in operation.## Quickstart```shell# Install racetrack-clientpython3 -m pip install --upgrade racetrack-client# Set current remoteracetrack set remote https://racetrack.platform.example.com# Log in with tokenracetrack login T0k3n.g0es.H3r3# Or log in with usernameracetrack login --username admin# Deploy a Jobracetrack deploy```## InstallationInstall racetrack-client using pip:```shellpython3 -m pip install --upgrade racetrack-client```Python 3.8 (or higher) is required.This will install `racetrack` CLI tool. Verify installation by running `racetrack` command.## UsageRun `racetrack --help` to see usage.### Adding a remoteAssuming your Racetrack server is running on https://racetrack.platform.example.com/lifecycle,you can add this remote as an alias:```shellracetrack set alias my-dev https://racetrack.platform.example.com/lifecycle```Alias is a short, friendly name for the URL of your Racetrack server, which is also known as &quot;remote&quot;.From now on, you can refer to your remote with an alias.### Switching remotesSet your current remote with:```shellracetrack set remote my-dev```This will set up a &quot;remote&quot; context for later use.### Logging inLog in to Racetrack with your user account (you can get your token from the Dashboard's profile page):```shellracetrack login T0k3n.g0es.H3r3```Alternatively, command `racetrack login --username &lt;username&gt;` allows you to log in with your username and password(entered into the standard input) and saves the auth token without having to visit the Dashboard page.In case you're going to use a private repository, provide your git credentials so the job can be built from your code:```shellracetrack set credentials https://github.com/YourUser/YourRepository USERNAME TOKEN```### Installing pluginsExtend Racetrack's possibilities by installing a bunch of plugins:```shell# This plugin allows you to deploy jobs written in Pythonracetrack plugin install github.com/TheRacetrack/plugin-python-job-type# This plugin allows you to deploy jobs to a local Docker infrastructureracetrack plugin install github.com/TheRacetrack/plugin-docker-infrastructure```Plugins can only be installed by admin users.### Deploying a jobWhen your code is ready and you pushed your changes to a repository, it's time to deploy it;that means, upload it to Racetrack so it can become a proper running Job.To deploy a job, just run it in the place where `job.yaml` is located:```shellcd MuffinDestroyerracetrack deploy ```You will see the URL of your deployed job in the output.### Listing jobsYou can see the list of all deployed jobs with a command:```shellracetrack list```### Checking runtime logsCheck the logs of a running job by means of:```shellracetrack logs MuffinDestroyer```### Deleting a jobDelete your running job with:```shellracetrack delete MuffinDestroyer```### Extra varsManifest values can be overriden with key-value pairs coming from a command line.It doesn't modify actual file, but its one-time, in-memory version before submitting it.Racetrack client has `--extra-vars KEY=VALUE` parameter (or `-e` in short)that overwrites values found in YAML manifest.- `KEY` is the name of field and it can contain dots to refer to a nested field, for example `git.branch=master`- `VALUE` can be any YAML or JSON object.Extra vars parameters can be used multiple times in one command.Example:```shellracetrack deploy -e secret_runtime_env_file=.env.local -e git.branch=$(git rev-parse --abbrev-ref HEAD)```It makes CLI commands more script-friendly, so you can overwrite manifest without tracking changes in job.yaml file.  Tip: Use `racetrack validate` command beforehand to make sure your final manifest is what you expected.### Getting auth tokenCommand `racetrack get auth-token` prints out current auth token.It can be used in CLI scripts: `curl -H &quot;X-Racetrack-Auth: $(racetrack get auth-token)&quot;`</longdescription>
</pkgmetadata>