<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sklearn-porter[![GitHub license](https://img.shields.io/pypi/l/sklearn-porter.svg)](https://raw.githubusercontent.com/nok/sklearn-porter/master/license.txt)[![Stack Overflow](https://img.shields.io/badge/stack%20overflow-ask%20questions-blue.svg)](https://stackoverflow.com/questions/tagged/sklearn-porter)[![Join the chat at https://gitter.im/nok/sklearn-porter](https://badges.gitter.im/nok/sklearn-porter.svg)](https://gitter.im/nok/sklearn-porter?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)[![Twitter](https://img.shields.io/twitter/follow/darius_morawiec.svg?label=follow&amp;style=popout)](https://twitter.com/darius_morawiec)Transpile trained [scikit-learn](https://github.com/scikit-learn/scikit-learn) estimators to C, Java, JavaScript and others.&lt;br&gt;It's recommended for limited embedded systems and critical applications where performance matters most.## ImportantWe're hard working on the [first major release](https://github.com/nok/sklearn-porter/tree/release/1.0.0) of sklearn-porter. &lt;br&gt;Until that we will just release bugfixes to the stable version.## Estimators&lt;table&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td align=&quot;center&quot; width=&quot;32%&quot;&gt;&lt;strong&gt;Estimator&lt;/strong&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot; colspan=&quot;6&quot; width=&quot;68%&quot;&gt;&lt;strong&gt;Programming language&lt;/strong&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td align=&quot;left&quot; width=&quot;32%&quot;&gt;Classifier&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;13%&quot;&gt;Java *&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;JS&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;C&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;Go&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;PHP&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;Ruby&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html&quot;&gt;svm.SVC&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/SVC/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/SVC/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/SVC/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/SVC/c/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/SVC/php/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/SVC/ruby/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.svm.NuSVC.html&quot;&gt;svm.NuSVC&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/NuSVC/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/NuSVC/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/NuSVC/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/NuSVC/c/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/NuSVC/php/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/NuSVC/ruby/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVC.html&quot;&gt;svm.LinearSVC&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/LinearSVC/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/LinearSVC/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/LinearSVC/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/LinearSVC/c/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/LinearSVC/go/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/LinearSVC/php/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/LinearSVC/ruby/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html&quot;&gt;tree.DecisionTreeClassifier&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/java/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/js/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/c/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/c/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/go/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/go/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/php/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;,  &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/php/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/ruby/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/DecisionTreeClassifier/ruby/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html&quot;&gt;ensemble.RandomForestClassifier&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/RandomForestClassifier/java/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/RandomForestClassifier/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/RandomForestClassifier/js/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/RandomForestClassifier/c/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;✓ ᴱ&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;✓ ᴱ&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;✓ ᴱ&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesClassifier.html&quot;&gt;ensemble.ExtraTreesClassifier&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/ExtraTreesClassifier/java/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/ExtraTreesClassifier/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/ExtraTreesClassifier/js/basics.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/ExtraTreesClassifier/c/basics.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;✓ ᴱ&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;✓ ᴱ&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html&quot;&gt;ensemble.AdaBoostClassifier&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/AdaBoostClassifier/java/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/AdaBoostClassifier/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/AdaBoostClassifier/js/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/AdaBoostClassifier/js/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/AdaBoostClassifier/c/basics_embedded.pct.ipynb&quot;&gt;✓ ᴱ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html&quot;&gt;neighbors.KNeighborsClassifier&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/KNeighborsClassifier/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/KNeighborsClassifier/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/KNeighborsClassifier/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/KNeighborsClassifier/js/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB&quot;&gt;naive_bayes.GaussianNB&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/GaussianNB/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/GaussianNB/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/GaussianNB/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB&quot;&gt;naive_bayes.BernoulliNB&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/BernoulliNB/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/BernoulliNB/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/BernoulliNB/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html&quot;&gt;neural_network.MLPClassifier&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/MLPClassifier/java/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/MLPClassifier/java/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/classifier/MLPClassifier/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;, &lt;a href=&quot;examples/estimator/classifier/MLPClassifier/js/basics_imported.pct.ipynb&quot;&gt;✓ ᴵ&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td align=&quot;left&quot; width=&quot;32%&quot;&gt;Regressor&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;13%&quot;&gt;Java *&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;JS&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;C&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;Go&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;PHP&lt;/td&gt;            &lt;td align=&quot;center&quot; width=&quot;11%&quot;&gt;Ruby&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPRegressor.html&quot;&gt;neural_network.MLPRegressor&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;examples/estimator/regressor/MLPRegressor/js/basics.pct.ipynb&quot;&gt;✓&lt;/a&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;            &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;✓ = is full-featured,　ᴱ = with embedded model data,　ᴵ = with imported model data,　* = default language## Installation### Stable[![Build Status stable branch](https://img.shields.io/travis/nok/sklearn-porter/stable.svg)](https://travis-ci.org/nok/sklearn-porter)[![PyPI](https://img.shields.io/pypi/v/sklearn-porter.svg)](https://pypi.python.org/pypi/sklearn-porter)[![PyPI](https://img.shields.io/pypi/pyversions/sklearn-porter.svg)](https://pypi.python.org/pypi/sklearn-porter)```bash$ pip install sklearn-porter```### Development[![Build Status master branch](https://img.shields.io/travis/nok/sklearn-porter/master.svg)](https://travis-ci.org/nok/sklearn-porter)If you want the [latest changes](https://github.com/nok/sklearn-porter/blob/master/changelog.md#unreleased), you can install this package from the [master](https://github.com/nok/sklearn-porter/tree/master) branch:```bash$ pip uninstall -y sklearn-porter$ pip install --no-cache-dir https://github.com/nok/sklearn-porter/zipball/master```## Usage### ExportThe following example demonstrates how you can transpile a [decision tree estimator](http://scikit-learn.org/stable/modules/tree.html#classification) to Java:```pythonfrom sklearn.datasets import load_irisfrom sklearn.tree import treefrom sklearn_porter import Porter# Load data and train the classifier:samples = load_iris()X, y = samples.data, samples.targetclf = tree.DecisionTreeClassifier()clf.fit(X, y)# Export:porter = Porter(clf, language='java')output = porter.export(embed_data=True)print(output)```The exported [result](examples/estimator/classifier/DecisionTreeClassifier/java/basics_embedded.pct.py#L60-L110) matches the [official human-readable version](http://scikit-learn.org/stable/_images/iris.svg) of the decision tree.### IntegrityYou should always check and compute the integrity between the original and the transpiled estimator:```python# ...porter = Porter(clf, language='java')# Compute integrity score:integrity = porter.integrity_score(X)print(integrity)  # 1.0```### PredictionYou can compute the prediction(s) in the target programming language:```python# ...porter = Porter(clf, language='java')# Prediction(s):Y_java = porter.predict(X)y_java = porter.predict(X[0])y_java = porter.predict([1., 2., 3., 4.])```## NotebooksYou can run and test all notebooks by starting a Jupyter notebook server locally:```bash$ make open.examples$ make stop.examples```## CLIIn general you can use the porter on the command line:```$ porter &lt;pickle_file&gt; [--to &lt;directory&gt;]         [--class_name &lt;class_name&gt;] [--method_name &lt;method_name&gt;]         [--export] [--checksum] [--data] [--pipe]         [--c] [--java] [--js] [--go] [--php] [--ruby]         [--version] [--help]```The following example shows how you can save a trained estimator to the [pickle format](http://scikit-learn.org/stable/modules/model_persistence.html#persistence-example):```python# ...# Extract estimator:joblib.dump(clf, 'estimator.pkl', compress=0)```After that the estimator can be transpiled to JavaScript by using the following command:```bash$ porter estimator.pkl --js```The target programming language is changeable on the fly:```bash$ porter estimator.pkl --c$ porter estimator.pkl --java$ porter estimator.pkl --php$ porter estimator.pkl --java$ porter estimator.pkl --ruby```For further processing the argument `--pipe` can be used to pass the result:```bash$ porter estimator.pkl --js --pipe &gt; estimator.js```For instance the result can be minified by using [UglifyJS](https://github.com/mishoo/UglifyJS2):```bash$ porter estimator.pkl --js --pipe | uglifyjs --compress -o estimator.min.js```## Development### EnvironmentYou have to install required modules for broader development:```bash$ make install.environment  # conda environment (optional)$ make install.requirements.development  # pip requirements```Independently, the following compilers and intepreters are required to cover all tests:&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td width=&quot;33%&quot;&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;            &lt;td width=&quot;33%&quot;&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;            &lt;td width=&quot;33%&quot;&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;https://gcc.gnu.org&quot;&gt;GCC&lt;/a&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;&gt;=4.2&lt;/code&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;gcc --version&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;https://java.com&quot;&gt;Java&lt;/a&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;&gt;=1.6&lt;/code&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;java -version&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;http://www.php.net&quot;&gt;PHP&lt;/a&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;&gt;=5.6&lt;/code&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;php --version&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;https://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;&gt;=2.4.1&lt;/code&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;ruby --version&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;&gt;=1.7.4&lt;/code&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;go version&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;&gt;=6&lt;/code&gt;&lt;/td&gt;            &lt;td&gt;&lt;code&gt;node --version&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;### TestingThe tests cover module functions as well as matching predictions of transpiled estimators. Start all tests with:```bash$ make test```The test files have a specific pattern: `'[Algorithm][Language]Test.py'`:```bash$ pytest tests -v -o python_files='RandomForest*Test.py'$ pytest tests -v -o python_files='*JavaTest.py'```While you are developing new features or fixes, you can reduce the test duration by changing the number of tests:```bash$ N_RANDOM_FEATURE_SETS=5 N_EXISTING_FEATURE_SETS=10 \  pytest tests -v -o python_files='*JavaTest.py'```### QualityIt's highly recommended to ensure the code quality. For that [Pylint](https://github.com/PyCQA/pylint/) is used. Start the linter with:```bash$ make lint```## CitationIf you use this implementation in you work, please add a reference/citation to the paper. You can use the following BibTeX entry:```@unpublished{skpodamo,  author = {Darius Morawiec},  title = {sklearn-porter},  note = {Transpile trained scikit-learn estimators to C, Java, JavaScript and others},  url = {https://github.com/nok/sklearn-porter}}```## LicenseThe module is Open Source Software released under the [MIT](license.txt) license.## Questions?Don't be shy and feel free to contact me on [Twitter](https://twitter.com/darius_morawiec) or [Gitter](https://gitter.im/nok/sklearn-porter).</longdescription>
</pkgmetadata>