<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>EPC (RPC stack for Emacs Lisp) for Python=========================================Links:* `Documentation &lt;http://python-epc.readthedocs.org/&gt;`_ (at Read the Docs)* `Repository &lt;https://github.com/tkf/python-epc&gt;`_ (at GitHub)* `Issue tracker &lt;https://github.com/tkf/python-epc/issues&gt;`_ (at GitHub)* `PyPI &lt;http://pypi.python.org/pypi/epc&gt;`_* `Travis CI &lt;https://travis-ci.org/#!/tkf/python-epc&gt;`_ |build-status|Other resources:* `kiwanami/emacs-epc &lt;https://github.com/kiwanami/emacs-epc&gt;`_  (Client and server implementation in Emacs Lisp and Perl.)* `tkf/emacs-jedi &lt;https://github.com/tkf/emacs-jedi&gt;`_  (Python completion for Emacs using EPC server.).. |build-status|   image:: https://secure.travis-ci.org/tkf/python-epc.png           ?branch=master   :target: http://travis-ci.org/tkf/python-epc   :alt: Build StatusWhat is this?-------------EPC is an RPC stack for Emacs Lisp and Python-EPC is its server sideand client side implementation in Python.  Using Python-EPC, you caneasily call Emacs Lisp functions from Python and Python functions fromEmacs.  For example, you can use Python GUI module to build widgetsfor Emacs (see `examples/gtk/server.py`_ for example).Python-EPC is tested against Python 2.6, 2.7 and 3.2.Install-------To install Python-EPC and its dependency sexpdata_, run the followingcommand.::   pip install epc.. _sexpdata: https://github.com/tkf/sexpdataUsage-----Save the following code as ``my-server.py``.(You can find functionally the same code in `examples/echo/server.py`_)::   from epc.server import EPCServer   server = EPCServer(('localhost', 0))   @server.register_function   def echo(*a):       return a   server.print_port()   server.serve_forever()And then run the following code from Emacs.This is a stripped version of `examples/echo/client.el`_ included inPython-EPC repository_.::   (require 'epc)   (defvar my-epc (epc:start-epc &quot;python&quot; '(&quot;my-server.py&quot;)))   (deferred:$     (epc:call-deferred my-epc 'echo '(10))     (deferred:nextc it       (lambda (x) (message &quot;Return : %S&quot; x))))   (message &quot;Return : %S&quot; (epc:call-sync my-epc 'echo '(10 40))).. _examples/echo/server.py:   https://github.com/tkf/python-epc/blob/master/examples/echo/server.py.. _examples/echo/client.el:   https://github.com/tkf/python-epc/blob/master/examples/echo/client.elIf you have carton_ installed, you can run the above sample bysimply typing the following commands::   make elpa        # install EPC in a separated environment   make run-sample  # run examples/echo/client.el.. _carton: https://github.com/rejeep/cartonFor example of bidirectional communication and integration with GTK,see `examples/gtk/server.py`_.  You can run this example by::   make elpa   make run-gtk-sample  # run examples/gtk/client.el.. _examples/gtk/server.py:   https://github.com/tkf/python-epc/blob/master/examples/gtk/server.pyLicense-------Python-EPC is licensed under GPL v3.See COPYING for details.</longdescription>
</pkgmetadata>