<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aioch**aioch** is a library for accessing a ClickHouse database over native interface from the asyncio.It wraps features of [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) for asynchronous usage.[![Coverage Status](https://coveralls.io/repos/github/mymarilyn/aioch/badge.svg?branch=master)](https://coveralls.io/github/mymarilyn/aioch?branch=master)[![Build Status](https://travis-ci.org/mymarilyn/aioch.svg?branch=master)](https://travis-ci.org/mymarilyn/aioch)## InstallationThe package can be installed using `pip`:```bashpip install aioch```To install from source:```bashgit clone https://github.com/mymarilyn/aiochcd aiochpython setup.py install```## Usage```pythonfrom datetime import datetimeimport asynciofrom aioch import Clientasync def exec_progress():    client = Client('localhost')    progress = await client.execute_with_progress('LONG AND COMPLICATED QUERY')    timeout = 20    started_at = datetime.now()    async for num_rows, total_rows in progress:        done = num_rows / total_rows if total_rows else total_rows        now = datetime.now()        # Cancel query if it takes more than 20 seconds to process 50% of rows.        if (now - started_at).total_seconds() &gt; timeout and done &lt; 0.5:            await client.cancel()            break    else:        rv = await progress.get_result()        print(rv)async def exec_no_progress():    client = Client('localhost')    rv = await client.execute('LONG AND COMPLICATED QUERY')    print(rv)loop = asyncio.get_event_loop()loop.run_until_complete(asyncio.wait([exec_progress(), exec_no_progress()]))```For more information see **clickhouse-driver** usage examples.## Parameters* `executor` - instance of custom Executor, if not supplied default executor will be used* `loop` - asyncio compatible event loopOther parameters are passing to wrapped clickhouse-driver's Client.## Licenseaioch is distributed under the [MIT license](http://www.opensource.org/licenses/mit-license.php).</longdescription>
</pkgmetadata>