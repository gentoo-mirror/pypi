<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>RDFLib plugin providing JSON-LD parsing and serialization=========================================================ARCHIVED--------*This `rdflib &lt;https://pypi.org/project/rdflib/&gt;`_ plugin is deprecatedfor, as of the 2021-09-17 release of rdflib 6.0.1, JSON-LD handing has beenintegrated. All functionality in this package has been removed, as of release 0.6.2.**This plugin is now 'tombstoned' meaning this - 0.6.2 - is a final release andall users of Python &gt; 3.6 are encouraged to move to rdflib &gt; 6.0.1.**If you are forced to keep using Python &lt;= 3.6, you will need to keep using release &lt;= 0.5.0 of this plugin with RDFlib 5.0.0.*----This is an implementation of `JSON-LD &lt;http://www.w3.org/TR/json-ld/&gt;`_for `RDFLib &lt;https://github.com/RDFLib/rdflib&gt;`_.For more information about this technology, see the `JSON-LD website &lt;http://json-ld.org/&gt;`_.This implementation will:- read in an JSON-LD formatted document and create an RDF graph- serialize an RDF graph to JSON-LD formatted outputInstallation------------The easiest way to install the RDFLib JSON-LD plugin is directly from PyPi using pip by running the command below:.. code-block:: shell    pip install rdflib-jsonld    Otherwise you can download the source and install it directly by running:.. code-block:: shell    python setup.py install    Using the plug-in JSONLD serializer/parser with RDFLib------------------------------------------------------The plugin parser and serializer are automatically registered if installed bysetuptools... code-block:: python    &gt;&gt;&gt; from rdflib import Graph, plugin    &gt;&gt;&gt; from rdflib.serializer import Serializer        &gt;&gt;&gt; testrdf = &quot;&quot;&quot;    ... @prefix dcterms: &lt;http://purl.org/dc/terms/&gt; .    ... &lt;http://example.org/about&gt;    ...     dcterms:title &quot;Someone's Homepage&quot;@en .    ... &quot;&quot;&quot;        &gt;&gt;&gt; g = Graph().parse(data=testrdf, format='n3')        &gt;&gt;&gt; print(g.serialize(format='json-ld', indent=4))    {        &quot;@id&quot;: &quot;http://example.org/about&quot;,        &quot;http://purl.org/dc/terms/title&quot;: [            {                &quot;@language&quot;: &quot;en&quot;,                &quot;@value&quot;: &quot;Someone's Homepage&quot;            }        ]    }        &gt;&gt;&gt; context = {&quot;@vocab&quot;: &quot;http://purl.org/dc/terms/&quot;, &quot;@language&quot;: &quot;en&quot;}    &gt;&gt;&gt; print(g.serialize(format='json-ld', context=context, indent=4))    {        &quot;@context&quot;: {            &quot;@language&quot;: &quot;en&quot;,            &quot;@vocab&quot;: &quot;http://purl.org/dc/terms/&quot;        },        &quot;@id&quot;: &quot;http://example.org/about&quot;,        &quot;title&quot;: &quot;Someone's Homepage&quot;    }    </longdescription>
</pkgmetadata>