<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![NPM version](https://badge.fury.io/js/cdk-image-moderation.svg)](https://badge.fury.io/js/cdk-image-moderation)[![PyPI version](https://badge.fury.io/py/cdk-image-moderation.svg)](https://badge.fury.io/py/cdk-image-moderation)[![Release](https://github.com/pahud/cdk-image-moderation/actions/workflows/release.yml/badge.svg)](https://github.com/pahud/cdk-image-moderation/actions/workflows/release.yml)# cdk-image-moderationEvent-driven image moderation and notification service with AWS CDK![](images/cdk-image-moderation2.svg)# SampleThis sample create a S3 bucket that will trigger image moderation check on object created and send notification to SNS when specific moderation labels are detected. The `SNS2Telegram` creates a Lambda function as the SNS topic subscription which fires the notification to a private Telegram chatroom with the image preview and moderation result.```python# Example automatically generated from non-compiling source. May contain errors.from cdk_image_moderation import Moderation, SNS2Telegramapp = cdk.App()env = {    &quot;region&quot;: process.env.CDK_DEFAULT_REGION,    &quot;account&quot;: process.env.CDK_DEFAULT_ACCOUNT}stack = cdk.Stack(app, &quot;moderation-demo&quot;, env=env)# create the moderationmod = Moderation(stack, &quot;Mod&quot;,    moderation_labels=[ModerationLabels.EXPLICIT_NUDITY, ModerationLabels.DRUGS, ModerationLabels.TOBACCO, ModerationLabels.ALCOHOL, ModerationLabels.VIOLENCE, ModerationLabels.RUDE_GESTURES    ])# send notification via sns to telegramSNS2Telegram(stack, &quot;SNS2TG&quot;,    topic=mod.topic,    chatid=&quot;-547476398&quot;)```# Deploy the CDK app```shexport TELEGRAM_TOKEN=&lt;YOUR_TOKEN&gt;cdk diffcdk deploy```# Deploy from this repository```shexport TELEGRAM_TOKEN=&lt;YOUR_TOKEN&gt;# run `yarn build` or `yarn watch` to generate the libcdk --app lib/integ.default.js diffcdk --app lib/integ.default.js deploy```On deploy completed, you will get the S3 bucket in the `Outputs`. Simply upload any images into this bucket and you should be able to get the notification from the Telegram chatroom.</longdescription>
</pkgmetadata>