<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># avutil[![Release](https://img.shields.io/pypi/v/avutil?color=%2366CCFF&amp;label=release)](https://pypi.org/project/avutil/)Provide some useful util functions (and a poweful tool `tidyup`) for *tidying up* your personal video folder.Data source from *LIBRARY* or *BUS*.- Extract designatio- Search folder (recursively)- Pull &amp; save video info (title, actors etc.)- Download cover image- Rename video file![gjf](https://github.com/Lqlsoftware/avutil/blob/main/doc/demo.gif)## Environment    Python &gt;= 3.4    BeautifulSoup4 &gt;= 4.7.0    requests &gt;= 2.21.0## Install```shpip install avutil```## Usage of tidyup```sh$ tidyup -husage: tidyup [-h] [-r] [-i IN] [-o OUT] [-p PROXY] [-s SOURCE] [-t THREAD] [-e ENCODER] [--with-poster]Tidy up your personal video diroptional arguments:  -h, --help            show this help message and exit  -r                    search dir recursively  -i IN, --in IN        video input dir  -o OUT, --out OUT     video output dir  -p PROXY, --proxy PROXY                        http proxy address  -s SOURCE, --source SOURCE                        data source of video info, 'library' or 'bus'  -t THREAD, --thread THREAD                        threads num, use multi-threads to download info &amp; images  -e ENCODER, --encoder ENCODER                        encoder of meta-data, 'nfo'(default) or 'vsmeta'  --with-poster         save poster```Tidy up current dir```sh$ tidyup```## Python script usageImport avutil:```pythonimport avutil```Search folder recursively to find videos:```pythonfolder = &quot;StudyResource&quot;videos = avutil.Search_folder(folder)# videos: map { designatio -&gt; [ slice_paths ] }```Or you can specify the extension type of video```pythonvideos = avutil.Search_folder(folder, media_suffix={&quot;.mp4&quot;, &quot;.wmv&quot;, &quot;.avi&quot;, &quot;.mkv&quot;})```Pull video info from *LIBRARY* by default &amp; download cover image```pythonfor designatio, file_paths in videos.items():    video = avutil.Video(designatio, file_paths)    # Pull video info    video.pull_info()    # Download cover image (as video.title + .jpg)    video.download_cover()```It's okey using *BUS*```python    # Pull video info    video.pull_info(source=avutil.Bus)```Save video info as .nfo file```python    # Save video info    video.save_info()```Tidy up!```python    # Tidy up (rename to video.designatio + video.actors)    video.rename()```## ProxyProxy is supported in avutil in two ways, you can either pass http-proxy in code```pythonvideo.pull_info(http_proxy=&quot;http://127.0.0.1:1087&quot;)video.download_cover(http_proxy=&quot;http://127.0.0.1:1087&quot;)```Or define a global bash variable (eg. http proxy):```shell$ export HTTP_PROXY=&quot;http://127.0.0.1:1087&quot;```</longdescription>
</pkgmetadata>