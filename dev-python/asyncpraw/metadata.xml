<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Async PRAW: The Asynchronous Python Reddit API Wrapper======================================================.. image:: https://img.shields.io/pypi/v/asyncpraw.svg    :alt: Latest Async PRAW Version    :target: https://pypi.python.org/pypi/asyncpraw.. image:: https://img.shields.io/pypi/pyversions/asyncpraw    :alt: Supported Python Versions    :target: https://pypi.python.org/pypi/asyncpraw.. image:: https://img.shields.io/pypi/dm/asyncpraw    :alt: PyPI - Downloads - Monthly    :target: https://pypi.python.org/pypi/asyncpraw.. image:: https://coveralls.io/repos/github/praw-dev/asyncpraw/badge.svg?branch=master    :alt: Coveralls Coverage    :target: https://coveralls.io/github/praw-dev/asyncpraw?branch=master.. image:: https://github.com/praw-dev/asyncpraw/workflows/CI/badge.svg    :alt: GitHub Actions Status    :target: https://github.com/praw-dev/asyncpraw/actions?query=branch%3Amaster.. image:: https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg    :alt: Contributor Covenant    :target: https://github.com/praw-dev/.github/blob/main/CODE_OF_CONDUCT.md.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white    :alt: pre-commit    :target: https://github.com/pre-commit/pre-commitAsync PRAW, an abbreviation for &quot;Asynchronous Python Reddit API Wrapper&quot;, is a Pythonpackage that allows for simple access to Reddit's API. Async PRAW aims to be easy to useand internally follows all of `Reddit's API rules&lt;https://github.com/reddit/reddit/wiki/API&gt;`_. With Async PRAW there's no need tointroduce ``sleep`` calls in your code. Give your client an appropriate user agent andyou're set... _installation:Installation------------Async PRAW is supported on Python 3.7+. The recommended way to install Async PRAW is via`pip &lt;https://pypi.python.org/pypi/pip&gt;`_... code-block:: bash    pip install asyncprawTo install the latest development version of Async PRAW run the following instead:.. code-block:: bash    pip install --upgrade https://github.com/praw-dev/asyncpraw/archive/master.zipFor instructions on installing Python and pip see &quot;The Hitchhiker's Guide to Python&quot;`Installation Guides &lt;https://docs.python-guide.org/en/latest/starting/installation/&gt;`_.Quickstart----------Assuming you already have a credentials for a script-type OAuth application you caninstantiate an instance of Async PRAW like so:.. code-block:: python    import asyncpraw    reddit = asyncpraw.Reddit(        client_id=&quot;CLIENT_ID&quot;,        client_secret=&quot;CLIENT_SECRET&quot;,        password=&quot;PASSWORD&quot;,        user_agent=&quot;USERAGENT&quot;,        username=&quot;USERNAME&quot;,    )With the ``reddit`` instance you can then interact with Reddit:.. code-block:: python    # Create a submission to r/test    subreddit = await reddit.subreddit(&quot;test&quot;)    await subreddit.submit(&quot;Test Submission&quot;, url=&quot;https://reddit.com&quot;)    # Comment on a known submission    submission = await reddit.submission(        url=&quot;https://www.reddit.com/comments/5e1az9&quot;, fetch=False    )    await submission.reply(&quot;Super rad!&quot;)    # Reply to the first comment of a weekly top thread of a moderated community    subreddit = await reddit.subreddit(&quot;mod&quot;)    async for submission in subreddit.top(time_filter=&quot;week&quot;):        comments = await submission.comments()        await comments[0].reply(&quot;An automated reply&quot;)    # Output score for the first 256 items on the frontpage    async for submission in reddit.front.hot(limit=256):        print(submission.score)    # Obtain the moderator listing for r/test    subreddit = await reddit.subreddit(&quot;test&quot;)    async for moderator in subreddit.moderator:        print(moderator)Please see Async PRAW's `documentation &lt;https://asyncpraw.readthedocs.io/&gt;`_ for moreexamples of what you can do with Async PRAW.Async PRAW Discussion and Support---------------------------------For those new to Python, or would otherwise consider themselves a Python beginner,please consider asking questions on the `r/learnpython&lt;https://www.reddit.com/r/learnpython&gt;`_ subreddit. There are wonderful people there whocan help with general Python and simple Async PRAW related questions.Otherwise, there are a few official places to ask questions about Async PRAW:`r/redditdev &lt;https://www.reddit.com/r/redditdev&gt;`_ is the best place on Reddit to askAsync PRAW related questions. This subreddit is for all Reddit API related discussion soplease tag submissions with *[Async PRAW]*. Please perform a search on the subredditfirst to see if anyone has similar questions.Real-time chat can be conducted via the `PRAW Slack Organization&lt;https://join.slack.com/t/praw/shared_invite/enQtOTUwMDcxOTQ0NzY5LWVkMGQ3ZDk5YmQ5MDEwYTZmMmJkMTJkNjBkNTY3OTU0Y2E2NGRlY2ZhZTAzMWZmMWRiMTMwYjdjODkxOGYyZjY&gt;`_(please create an issue if that invite link has expired).Please do not directly message any of the contributors via Reddit, email, or Slackunless they have indicated otherwise. We strongly encourage everyone to help others withtheir questions.Please file bugs and feature requests as issues on `GitHub&lt;https://github.com/praw-dev/asyncpraw/issues&gt;`_ after first searching to ensure asimilar issue was not already filed. If such an issue already exists please give it athumbs up reaction. Comments to issues containing additional information are certainlywelcome... note::    This project is released with a `Contributor Code of Conduct    &lt;https://github.com/praw-dev/.github/blob/main/CODE_OF_CONDUCT.md&gt;`_. By    participating in this project you agree to abide by its terms.Documentation-------------Async PRAW's documentation is located at https://asyncpraw.readthedocs.io/.History-------`February 2019&lt;https://github.com/praw-dev/asyncpraw/commit/55480eb3d59dc7bc3d1480d83b98c95effc77181&gt;`_:Joel forked PRAW and began work on Async PRAW, an asynchronous compatible version ofPRAW.`July 2020&lt;https://github.com/praw-dev/asyncpraw/commit/b8b8a4bf3618639968e8be379e85e2ff84f2307a&gt;`_:Async PRAW was moved into the praw-dev namespace.License-------Async PRAW's source (v7.1.1+) is provided under the `Simplified BSD License&lt;https://github.com/praw-dev/asyncpraw/blob/30796acc29b4ba2335cf0eab414477702c29452f/LICENSE.txt&gt;`_.- Copyright Â©, 2020, Joel Payne</longdescription>
</pkgmetadata>