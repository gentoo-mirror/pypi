<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--SPDX-FileCopyrightText: 2017 Free Software Foundation Europe e.V. &lt;https://fsfe.org&gt;SPDX-License-Identifier: CC-BY-SA-4.0--&gt;# reuse[![The latest version of reuse can be found on PyPI.](https://img.shields.io/pypi/v/reuse.svg)](https://pypi.python.org/pypi/reuse)[![Information on what versions of Python reuse supports can be found on PyPI.](https://img.shields.io/pypi/pyversions/reuse.svg)](https://pypi.python.org/pypi/reuse)[![REUSE status](https://api.reuse.software/badge/github.com/fsfe/reuse-tool)](https://api.reuse.software/info/github.com/fsfe/reuse-tool)[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg)](https://github.com/RichardLitt/standard-readme)[![Packaging status](https://repology.org/badge/tiny-repos/reuse.svg?header=in%20distro%20repos)](https://repology.org/project/reuse/versions)[![Translation status](https://hosted.weblate.org/widgets/fsfe/-/reuse-tool/svg-badge.svg)](https://hosted.weblate.org/projects/fsfe/reuse-tool/)reuse is a tool for compliance with the [REUSE](https://reuse.software/)recommendations.- Documentation: &lt;https://reuse.readthedocs.io&gt; and &lt;https://reuse.software&gt;- Source code: &lt;https://github.com/fsfe/reuse-tool&gt;- PyPI: &lt;https://pypi.python.org/pypi/reuse&gt;- REUSE: 3.0- Python: 3.8+## Table of contents- [Background](#background)- [Install](#install)- [Usage](#usage)- [Maintainers](#maintainers)- [Contributing](#contributing)- [License](#license)## Background&lt;!-- REUSE-IgnoreStart --&gt;Copyright and licensing is difficult, especially when reusing software fromdifferent projects that are released under various different licenses.[REUSE](https://reuse.software) was started by the[Free Software Foundation Europe](https://fsfe.org) (FSFE) to provide a set ofrecommendations to make licensing your Free Software projects easier. Not onlydo these recommendations make it easier for you to declare the licenses underwhich your works are released, but they also make it easier for a computer tounderstand how your project is licensed.&lt;!-- REUSE-IgnoreEnd --&gt;As a short summary, the recommendations are threefold:1. Choose and provide licenses2. Add copyright and licensing information to each file3. Confirm REUSE complianceYou are recommended to read [our tutorial](https://reuse.software/tutorial) fora step-by-step guide through these three steps. The[FAQ](https://reuse.software/faq) covers basic questions about licensing,copyright, and more complex use cases. Advanced users and integrators will findthe [full specification](https://reuse.software/spec) helpful.This tool exists to facilitate the developer in complying with the aboverecommendations.There are [other tools](https://reuse.software/comparison) that have a lot morefeatures and functionality surrounding the analysis and inspection of copyrightand licenses in software projects. The REUSE helper tool, on the other hand, issolely designed to be a simple tool to assist in compliance with the REUSErecommendations.## Install### Installation via package manager (Recommended)There are packages available for easy install on many operating systems. You arewelcome to help us package this tool for more distributions!An automatically generated list can be found at[repology.org](https://repology.org/project/reuse/versions), without anyguarantee for completeness.### Install and run via pipx (Recommended)The following one-liner both installs and runs this tool from[PyPI](https://pypi.org/project/reuse/) via[pipx](https://pypa.github.io/pipx/):```bashpipx run reuse lint```pipx automatically isolates reuse into its own Python virtualenv, which meansthat it won't interfere with other Python packages, and other Python packageswon't interfere with it.If you want to be able to use reuse without prepending it with `pipx run` everytime, install it globally like so:```bashpipx install reuse```reuse will then be available in `~/.local/bin`, which must be added to your`$PATH`.After this, make sure that `~/.local/bin` is in your `$PATH`. On Windows, therequired path for your environment may look like`%USERPROFILE%\AppData\Roaming\Python\Python39\Scripts`, depending on the Pythonversion you have installed.To upgrade reuse, run this command:```bashpipx upgrade reuse```For full functionality, the following pieces of software are recommended:- Git- Mercurial 4.3+### Installation via pipTo install reuse into `~/.local/bin`, run:```bashpip3 install --user reuse```Subsequently, make sure that `~/.local/bin` is in your `$PATH` like described inthe previous section.To upgrade reuse, run this command:```bashpip3 install --user --upgrade reuse```### Installation from sourceYou can also install this tool from the source code, but we recommend themethods above for easier and more stable updates. Please make sure therequirements for the installation via pip are present on your machine.```bashpip install .```## UsageFirst, read the [REUSE tutorial](https://reuse.software/tutorial/). In anutshell:&lt;!-- REUSE-IgnoreStart --&gt;1. Put your licenses in the `LICENSES/` directory.2. Add a comment header to each file that says   `SPDX-License-Identifier: GPL-3.0-or-later`, and   `SPDX-FileCopyrightText: $YEAR $NAME`. You can be flexible with the format,   just make sure that the line starts with `SPDX-FileCopyrightText:`.3. Verify your work using this tool.Example of header:```# SPDX-FileCopyrightText: 2017 Free Software Foundation Europe e.V. &lt;https://fsfe.org&gt;## SPDX-License-Identifier: CC-BY-SA-4.0```&lt;!-- REUSE-IgnoreEnd --&gt;### CLITo check against the recommendations, use `reuse lint`:```~/Projects/reuse-tool $ reuse lint[...]Congratulations! Your project is compliant with version 3.0 of the REUSE Specification :-)```This tool can do various more things, detailed in the documentation. Here ashort summary:- `annotate` --- Add copyright and/or licensing information to the header of a  file.- `download` --- Download the specified license into the `LICENSES/` directory.- `init` --- Set up the project for REUSE compliance.- `lint` --- Verify the project for REUSE compliance.- `spdx` --- Generate an SPDX Document of all files in the project.- `supported-licenses` --- Prints all licenses supported by REUSE.### Example demoIn this screencast, we are going to follow the[tutorial](https://reuse.software/tutorial), making the[REUSE example repository](https://github.com/fsfe/reuse-example/) compliant.![Demo of some basic REUSE tool commands](https://download.fsfe.org/videos/reuse/screencasts/reuse-tool.gif)### Run in DockerThe `fsfe/reuse` Docker image is available on[Docker Hub](https://hub.docker.com/r/fsfe/reuse). With it, you can easilyinclude REUSE in CI/CD processes. This way, you can check for REUSE compliancefor each build. In our [resources for developers](https://reuse.software/dev/)you can learn how to integrate the REUSE tool in Drone, Travis, GitHub, orGitLab CI.You can run the helper tool simply by providing the command you want to run(e.g., `lint`, `spdx`). The image's working directory is `/data` by default. Soif you want to lint a project that is in your current working directory, you canmount it on the container's `/data` directory, and tell the tool to lint. Thatlooks a little like this:```bashdocker run --rm --volume $(pwd):/data fsfe/reuse lint```You can also provide additional arguments, like so:```bashdocker run --rm --volume $(pwd):/data fsfe/reuse --include-submodules spdx -o out.spdx```There are a number of tags available:- `latest` is the most recent stable release.- `dev` follows the `main` branch of this repository. Up-to-date, but  potentially unstable.- `latest-extra` has a few extra packages installed, currently `openssh-client`.- `latest-debian` is based on `python:slim`. It is larger, but may be better  suited for license compliance.### Run as pre-commit hookYou can automatically run `reuse lint` on every commit as a pre-commit hook forGit. This uses [pre-commit](https://pre-commit.com/). Once you[have it installed](https://pre-commit.com/#install), add this to the`.pre-commit-config.yaml` in your repository:```yamlrepos:  - repo: https://github.com/fsfe/reuse-tool    rev: v2.1.0    hooks:      - id: reuse```Then run `pre-commit install`. Now, every time you commit, `reuse lint` is runin the background, and will prevent your commit from going through if there wasan error.## Maintainers- Carmen Bianca Bakker &lt;carmenbianca@fsfe.org&gt;- Max Mehl &lt;max.mehl@fsfe.org&gt;- Linus Sehn &lt;linus@fsfe.org&gt;## ContributingIf you're interested in contributing to the reuse project, there are severalways to get involved. Development of the project takes place on GitHub at&lt;https://github.com/fsfe/reuse-tool&gt;. There, you can submit bug reports, featurerequests, and pull requests. Even and especially when in doubt, feel free toopen an issue with a question. Contributions of all types are welcome, and thedevelopment team is happy to provide guidance and support for new contributors.Additionally, the &lt;reuse@lists.fsfe.org&gt; mailing list is available fordiscussion and support related to the project.You can find the full contribution guidelines at&lt;https://reuse.readthedocs.io/en/latest/contributing.html&gt;.## LicenseThis work is licensed under multiple licences. Because keeping this sectionup-to-date is challenging, here is a brief summary as of February 2023:- All original source code is licensed under GPL-3.0-or-later.- All documentation is licensed under CC-BY-SA-4.0.- Some configuration and data files are licensed under CC0-1.0.- Some code borrowed from  [spdx/tools-python](https://github.com/spdx/tools-python) is licensed under  Apache-2.0.For more accurate information, check the individual files.</longdescription>
</pkgmetadata>