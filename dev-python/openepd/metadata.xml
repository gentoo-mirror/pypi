<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Library to work with OpenEPD format&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypi.org/project/openepd/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/l/openepd?style=for-the-badge&quot; title=&quot;License: Apache-2&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/openepd/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/openepd?style=for-the-badge&quot; title=&quot;Python Versions&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/psf/black/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Code%20Style-black-black?style=for-the-badge&quot; title=&quot;Code style: black&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/openepd/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/openepd?style=for-the-badge&quot; title=&quot;PyPy Version&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/openepd/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/openepd?style=for-the-badge&quot; title=&quot;PyPy Downloads&quot;/&gt;&lt;/a&gt; &lt;br&gt;&lt;a href=&quot;https://github.com/cchangelabs/openepd/actions/workflows/sanity-check.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/cchangelabs/openepd/sanity-check.yml?style=for-the-badge&quot; title=&quot;Build Status&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cchangelabs/openepd/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/cchangelabs/openepd?style=for-the-badge&quot; title=&quot;Last Commit&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cchangelabs/openepd/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/cchangelabs/openepd?style=for-the-badge&quot; title=&quot;Last Release&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cchangelabs/openepd/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/cchangelabs/openepd?style=for-the-badge&quot; title=&quot;Recent Version&quot;&gt;&lt;/a&gt; &lt;/p&gt;This library is a Python library to work with OpenEPD format.## About OpenEPD[openEPD](https://www.buildingtransparency.org/programs/openepd/) is an open data format for passing digitalthird-party verified Environmental Product Declarations (EPDs) among Program Operators, EPD Databases,Life Cycle Analysis tools, design tools, reporting, and procurement.Unlike print or PDF EPDs, openEPD provides a shared and precise format to express and refer to EPDs in ways thatmodern databases can use. openEPD can be used alongside a printable document, or can generate printable EPDs.Unlike existing formats such as ILCD+EPD, it enforces a key set of guarantees for interoperable data processing,  including uniqueness of organizations/plants, precise PCR references, and dated version control.The openEPD format is **extensible**. Standard extensions exist for concrete products, and fordocumenting supply-chain specific data.[Read More about OpenEPD format here](https://www.buildingtransparency.org/programs/openepd/).## Usage### ModelsThe library provides the Pydantic models for all the OpenEPD entities. The models are available in the `openepd.models`module. For mode details on the usage please refer to Pydantic documentation.### BundleBundle is a format which allows to bundle multiple openEPD objects together (it might be EPDs, PCRs, Orgs + anyother files which might be related to mentioned objects like pdf version of EPD, logo of the PCR company, etc).Bundle consists of root-level and dependent objects. Dependents are objects which are referenced by root-level objectsor related to the root-level objects. For example, EPD is a root-level object, PDF version of this EPD is a dependent,translated version of the same EPD is dependent as well.The following example illustrates reading of the bundle file containing PCR and some of the related objects:```pythonfrom openepd.bundle.reader import DefaultBundleReaderfrom openepd.bundle.model import AssetType, RelTypewith DefaultBundleReader(&quot;test-bundle.epb&quot;) as reader:  # You could either file path or file-like object    pcr = reader.get_first_root_asset(AssetType.Pcr)  # Get FIRST available root level PCR object. We consider that    # there is only one PCR in the bundle    # Read relative PDF file of the found PCR. `related_pdf` is a reference to the PDF file containing metadata only    related_pdf = reader.get_first_relative_asset(pcr, RelType.Pdf)    # We have to read the file content separately    with reader.read_blob_asset(related_pdf) as f:        pass  # Do something with the file content here```The next example illustrates the writing of the bundle file:```pythonfrom openepd.bundle.writer import DefaultBundleWriterfrom openepd.bundle.model import RelTypefrom openepd.model.pcr import Pcrpcr_obj = Pcr(...)  # Let's assume we already have PCR objectwith DefaultBundleWriter(&quot;my-bundle.epb&quot;) as writer, open(&quot;test-pcr.pdf&quot;, &quot;rb&quot;) as pcr_pdf_file:    # Add our PCR to the bundle. We do not specify any extra information, however you might what to add language    # and a file name to make it look nicer in the bundle. If omitted the name will be generated automatically.    pcr_asset = writer.write_object_asset(pcr_obj)    # Now add related PDF document. We have to specify the content type, related (parent) object and the     # type of relation. Again, optionally you might want to specify the language and file name.    writer.write_blob_asset(pcr_pdf_file, &quot;application/pdf&quot;, pcr_asset, RelType.Pdf)```# CreditsThis library has been written and maintained by [C-Change Labs](https://c-change-labs.com/).# LicenseThis library is licensed under [Apache 2](/LICENSE). This means you are free to use it in commercial projects.</longdescription>
</pkgmetadata>