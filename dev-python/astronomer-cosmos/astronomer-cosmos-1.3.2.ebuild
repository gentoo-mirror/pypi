# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Render 3rd party workflows in Airflow"

HOMEPAGE="https://github.com/astronomer/astronomer-cosmos"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all dbt-all dbt-athena dbt-bigquery dbt-databricks dbt-exasol dbt-postgres dbt-redshift dbt-snowflake dbt-spark dbt-vertica docker docs kubernetes openlineage pydantic tests"
DEPENDENCIES="dev-python/aenum[${PYTHON_USEDEP}]
	dev-python/apache-airflow[${PYTHON_USEDEP}]
	dev-python/attrs[${PYTHON_USEDEP}]
	dev-python/Jinja2[${PYTHON_USEDEP}]
	dev-python/virtualenv[${PYTHON_USEDEP}]
	all? ( dev-python/astronomer-cosmos[${PYTHON_USEDEP}] )
	all? ( dev-python/astronomer-cosmos[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-athena[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-bigquery[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-databricks[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-exasol[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-postgres[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-redshift[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-snowflake[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-spark[${PYTHON_USEDEP}] )
	dbt-all? ( dev-python/dbt-vertica[${PYTHON_USEDEP}] )
	dbt-athena? ( dev-python/apache-airflow-providers-amazon[${PYTHON_USEDEP}] )
	dbt-athena? ( dev-python/dbt-athena-community[${PYTHON_USEDEP}] )
	dbt-bigquery? ( dev-python/dbt-bigquery[${PYTHON_USEDEP}] )
	dbt-databricks? ( dev-python/dbt-databricks[${PYTHON_USEDEP}] )
	dbt-exasol? ( dev-python/dbt-exasol[${PYTHON_USEDEP}] )
	dbt-postgres? ( dev-python/dbt-postgres[${PYTHON_USEDEP}] )
	dbt-redshift? ( dev-python/dbt-redshift[${PYTHON_USEDEP}] )
	dbt-snowflake? ( dev-python/dbt-snowflake[${PYTHON_USEDEP}] )
	dbt-spark? ( dev-python/dbt-spark[${PYTHON_USEDEP}] )
	dbt-vertica? ( dev-python/dbt-vertica[${PYTHON_USEDEP}] )
	docker? ( dev-python/apache-airflow-providers-docker[${PYTHON_USEDEP}] )
	docs? ( dev-python/apache-airflow-providers-cncf-kubernetes[${PYTHON_USEDEP}] )
	docs? ( dev-python/pydata-sphinx-theme[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-autoapi[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-autobuild[${PYTHON_USEDEP}] )
	kubernetes? ( dev-python/apache-airflow-providers-cncf-kubernetes[${PYTHON_USEDEP}] )
	openlineage? ( dev-python/openlineage-airflow[${PYTHON_USEDEP}] )
	openlineage? ( dev-python/openlineage-integration-common[${PYTHON_USEDEP}] )
	pydantic? ( >=dev-python/pydantic-1.10.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/mypy[${PYTHON_USEDEP}] )
	tests? ( dev-python/packaging[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-describe[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-dotenv[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-split[${PYTHON_USEDEP}] )
	tests? ( >=dev-python/pytest-6.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/requests-mock[${PYTHON_USEDEP}] )
	tests? ( dev-python/sqlalchemy-stubs[${PYTHON_USEDEP}] )
	tests? ( dev-python/types-requests[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
