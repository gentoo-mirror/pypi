<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======================================================Kucoin-Cli: Pandas-oriented REST and Websocket Wrapper======================================================A data science focused Python API implementation------------------------------------------------.. image:: https://img.shields.io/pypi/v/kucoin-cli.svg    :target: https://pypi.org/project/kucoin-cli/.. image:: https://img.shields.io/pypi/l/kucoin-cli.svg    :target: https://pypi.org/project/kucoin-cli/.. image:: https://img.shields.io/badge/Maintained-YES-green.svg    :target: https://pypi.org/project/kucoin-cli/Why use this library over `python-kucoin &lt;https://github.com/sammchardy/python-kucoin&gt;`_ or the `official SDK &lt;https://github.com/Kucoin/kucoin-python-sdk&gt;`_?++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++This package was written with an eye towards data science and quantitative trading strategies. Specifically designed for fast, efficient data acquisition and high complexity trades such as HFT, market-making, and long-short strategies. Wherever possible, endpoints have been neatly wrapped to pandas DataFrames with key data acquisition enpoints thoughtfully constructed with rich configurability reducing time needed to clean and filter data. Trading functions areexplicitly geared towards simplicity with seamless margin trade integration. Of special note, OHLCV acquisition from the KuCoin REST API has been overhauledto enable the user to query multiple assets over extended time periods despite the standard enpoint's limitations of a single asset with a max 1500 bars of historic data. For large scaleML projects, leverage the ``kucoincli.pipe`` module for a one-line function capable of piping large amounts of OHLCV data directly into the user's SQL database solution.* Automate the generation of a enormous SQL databases with ``kucoincli.pipe``* Take complex trading algorithms live via websockets using ``kucoincli.socket`` [work in progress]* Quickly obtain, clean, and organize large amounts of data for use in RL/ML models with ``kucoincli.client``**Disclaimer: This is an unofficial implementation of the KuCoin Rest and Websocket API v2. Use this package at your own risk.**Roadmap+++++++| [ ] Finish writing documentation| [ ] Clean-up websocket implemention and improve ease of use| [ ] Add stop-loss order capabilities| [ ] Add schema configuration functionality to data pipeline| [ ] Add futures API access| [ ] Develop an asynchronous REST clientFeatures++++++++* One-line database pipeline. Open a high stability pipe from the KuCoin OHLC(V) endpoint to your SQL database  - Automatically creates database or adds to pre-existing db  - Capable of handling multi-day data acqusitions sessions through dynamic timeout mechanism  - Take a look at a pre-built example in the ``examples`` folder available at `my github &lt;https://github.com/jaythequant/kucoin-cli&gt;`_  * Highly configurable data acquisition endpoints  - Spend less time cleaning and managing data  - Checkout ``.ohlcv``, ``.orderbook``, ``.symbols``, and ``.all_tickers``  * Access to 99%+ of KuCoin REST and Websocket endpoints* Seamless order management between Spot and Margin marketsQuickstart++++++++++1. Register for an account at `KuCoin &lt;https://www.kucoin.com/&gt;`_2. `Generate an API &lt;https://www.kucoin.com/account/api&gt;`_3. Download kucoin-cli using pip.. code-block:: bash    pip install kucoin-cli4. Try out some functions! .. code-block:: python  from kucoincli.client import Client  # Your own credentials here  api_key = 'api_key'   api_secret = 'api_secret'   api_passphrase = 'api_passphrase'   client = Client(api_key, api_secret, api_passphrase)  # Pull details for all marginable currencies quoted in BTC terms  marginable_btc_curr = client.symbols(quote=&quot;BTC&quot;, marginable=True)  # Pull buy/sell orders for BTC-USDT  order_df = client.get_order_histories(&quot;BTC-USDT&quot;)  # Query one month of minutely data for BTC-USDT and ETH-USDT  ohlcv_df = client.ohlcv(      tickers=[&quot;BTC-USDT&quot;, &quot;ETH-USDT&quot;],      begin=&quot;2022-01-01&quot;,      end=&quot;2022-02-01&quot;,      interval=&quot;1min&quot;,  )  # Buy 500 USDT of ETH at market price on the spot market  order = client.order(      symbol=&quot;ETH-USDT&quot;,      side=&quot;buy&quot;,      funds=500,  )  # Place a 10 minute Good-to-Time margin limit sell order for 1 BTC @ 24,000 USDT  order = client.order(      symbol=&quot;BTC-USDT&quot;,      side=&quot;sell&quot;,      price=24_000,      size=1.0000,      tif=&quot;GTT&quot;,      cancel_after=600,      margin=True,      type=&quot;limit&quot;,  )  # Obtain the full orderbook depth for XRP-USDT as a namedtuple containing numpy arrays  orderbook = client.orderbook(&quot;XRP-USDT&quot;, depth=&quot;full&quot;, format=&quot;numpy&quot;)    # Specify `format=&quot;pd&quot;` to obtain an identical result wrapped in a pandas dataframe  orderbook = client.orderbook(&quot;XRP-USDT&quot;, depth=&quot;full&quot;, format=&quot;pd&quot;) Why `KuCoin &lt;https://www.kucoin.com/&gt;`_? ++++++++++++++++++++++++++++++++++++++++* **For U.S. based customers, KuCoin is one of the few non-KYC exchanges*** Industry low transactions fees * High liquidity across coins and a wide offering of alts* Frequent new coin listings  Consider donating:++++++++++++++++++| Etherium Wallet: 0x109CcCCEc0449E80336039c983e969DD23B9CE3E| Bitcoin Wallet: 3L47AT1SoLGs65RFHYBdVmbCdtQNxZFry6Distributions &amp; Info:+++++++++++++++++++++* `KuCoin-Cli Documentation on readthedocs &lt;https://kucoin-cli.readthedocs.io/en/latest/&gt;`_* `Kucoin-Cli on PyPI &lt;https://pypi.org/project/kucoin-cli/&gt;`_* `Kucoin-Cli on Github &lt;https://github.com/jaythequant/kucoin-cli&gt;`_* `Official Kucoin API Documenation &lt;https://docs.kucoin.com/#general&gt;`_</longdescription>
</pkgmetadata>