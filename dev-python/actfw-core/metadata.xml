<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># actfw-coreCore components of actfw, a framework for Actcast Application written in Python.actfw-core is intended to be independent of any specific device.## Installation```consolesudo apt-get updatesudo apt-get install -y python3-pip python3-pil sudo apt-get install -y libv4l-0 libv4lconvert0  # if using `V4LCameraCapture`pip3 install actfw-core```## Document* [API References](https://idein.github.io/actfw-core/latest/)## UsageConstruct your application with a task parallel model* Application  * `actfw_core.Application` : Main application* Workers  * `actfw_core.task.Producer` : Task generator    * `actfw_core.capture.V4LCameraCapture` : Generate UVC camera capture image  * `actfw_core.task.Pipe` : Task to Task converter  * `actfw_core.task.Consumer` : Task terminatorEach worker is executed in parallel.User should* Define subclass of `Producer/Pipe/Consumer````pythonclass MyPipe(actfw_core.task.Pipe):    def proc(self, i):        ...```* Connect defined worker objects```pythonp  = MyProducer()f1 = MyPipe()f2 = MyPipe()c  = MyConsumer()p.connect(f1)f1.connect(f2)f2.connect(c)```* Register to `Application````pythonapp = actfw_core.Application()app.register_task(p)app.register_task(f1)app.register_task(f2)app.register_task(c)```* Execute application```pythonapp.run()```## Development Guide### Installation of dev requirements```consolepip3 install poetrypoetry install```### Running tests```consolepoetry run nose2 -v```### Releasing package &amp; API docCI will automatically do.Follow the following branch/tag rules.1. Make changes for next version in `master` branch (via pull-requests).2. Make a PR that updates version in `pyproject.toml` and merge it to `master` branch.3. Create GitHub release from `master` branch's HEAD.    1. [Draft a new release](https://github.com/Idein/actfw-core/releases/new).    2. Create new tag named `release-&lt;New version&gt;` (e.g. `release-1.4.0`) from `Choose a tag` pull down menu.    3. Write title and description.    4. Publish release.4. Then CI will build/upload package to PyPI &amp; API doc to GitHub Pages.</longdescription>
</pkgmetadata>