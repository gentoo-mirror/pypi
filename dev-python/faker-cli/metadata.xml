<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Faker CLIFaker is an awesome Python library, but I often just want a simple command I can run to generate data in a variety of formats.With Faker CLI, you can easily generate CSV, JSON, or Parquet data with fields of your choosing.You can also utilize pre-built templates for common data formats!## UsageBy default, `fake` will generate a CSV output for you. You just specify the number of rows you want and the column types.```bashfake -n 10 pyint,user_name,date_this_year```BAM! You've got a CSV file with your data.```pyint,user_name,date_this_year8649,fward,2023-03-083933,zharris,2023-03-201469,jasonellis,2023-05-163660,heather91,2023-02-109160,cameronlopez,2023-05-052735,candacemoore,2023-05-127240,zachary06,2023-01-239778,thomasstacey,2023-05-235820,kenneth36,2023-04-262856,michael23,2023-01-16```### JSONWnat a JSON file? Sweet, use `-f json`.```bashfake -n 10 pyint,user_name,date_this_year -f json``````json{&quot;pyint&quot;: 3854, &quot;user_name&quot;: &quot;cchavez&quot;, &quot;date_this_year&quot;: &quot;2023-01-20&quot;}{&quot;pyint&quot;: 2008, &quot;user_name&quot;: &quot;vnguyen&quot;, &quot;date_this_year&quot;: &quot;2023-04-03&quot;}{&quot;pyint&quot;: 1434, &quot;user_name&quot;: &quot;karen38&quot;, &quot;date_this_year&quot;: &quot;2023-03-02&quot;}{&quot;pyint&quot;: 4922, &quot;user_name&quot;: &quot;duncanellen&quot;, &quot;date_this_year&quot;: &quot;2023-04-22&quot;}{&quot;pyint&quot;: 230, &quot;user_name&quot;: &quot;tiffany72&quot;, &quot;date_this_year&quot;: &quot;2023-02-25&quot;}{&quot;pyint&quot;: 7252, &quot;user_name&quot;: &quot;maydouglas&quot;, &quot;date_this_year&quot;: &quot;2023-04-01&quot;}{&quot;pyint&quot;: 2716, &quot;user_name&quot;: &quot;sheilaflores&quot;, &quot;date_this_year&quot;: &quot;2023-03-20&quot;}{&quot;pyint&quot;: 2827, &quot;user_name&quot;: &quot;parksandra&quot;, &quot;date_this_year&quot;: &quot;2023-04-01&quot;}{&quot;pyint&quot;: 3353, &quot;user_name&quot;: &quot;melissaatkinson&quot;, &quot;date_this_year&quot;: &quot;2023-02-10&quot;}{&quot;pyint&quot;: 5306, &quot;user_name&quot;: &quot;mark12&quot;, &quot;date_this_year&quot;: &quot;2023-04-16&quot;}```Default column names aren't good enough for you? Fine, use your own.```bashfake -n 10 pyint,user_name,date_this_year -f json -c id,awesome_name,last_attention_at``````{&quot;id&quot;: 6048, &quot;awesome_name&quot;: &quot;jtran&quot;, &quot;last_attention_at&quot;: &quot;2023-04-24&quot;}{&quot;id&quot;: 4310, &quot;awesome_name&quot;: &quot;stacey99&quot;, &quot;last_attention_at&quot;: &quot;2023-04-27&quot;}{&quot;id&quot;: 1839, &quot;awesome_name&quot;: &quot;jho&quot;, &quot;last_attention_at&quot;: &quot;2023-03-07&quot;}{&quot;id&quot;: 236, &quot;awesome_name&quot;: &quot;melissamassey&quot;, &quot;last_attention_at&quot;: &quot;2023-04-17&quot;}{&quot;id&quot;: 6599, &quot;awesome_name&quot;: &quot;mwells&quot;, &quot;last_attention_at&quot;: &quot;2023-04-25&quot;}{&quot;id&quot;: 6071, &quot;awesome_name&quot;: &quot;wilcoxrick&quot;, &quot;last_attention_at&quot;: &quot;2023-01-17&quot;}{&quot;id&quot;: 9646, &quot;awesome_name&quot;: &quot;michael92&quot;, &quot;last_attention_at&quot;: &quot;2023-04-22&quot;}{&quot;id&quot;: 6986, &quot;awesome_name&quot;: &quot;ballen&quot;, &quot;last_attention_at&quot;: &quot;2023-01-08&quot;}{&quot;id&quot;: 6892, &quot;awesome_name&quot;: &quot;jennifer61&quot;, &quot;last_attention_at&quot;: &quot;2023-01-03&quot;}{&quot;id&quot;: 1967, &quot;awesome_name&quot;: &quot;jmendoza&quot;, &quot;last_attention_at&quot;: &quot;2023-01-23&quot;}```### ParquetOK, it had to happen, you can even write Parquet. ```bashfake -n 10 pyint,user_name,date_this_year -f parquet -o sample.parquet```_youcanevenwritestraighttos3_ ðŸ¤­```bashfake -n 10 pyint,user_name,date_this_year -f parquet -o s3://YOUR_BUCKET/data/sample.parquet```### Delta LakeData can be exported as a delta lake table.  ```bashfake -n 10 pyint,user_name,date_this_year -f deltalake -o sample_data```## TemplatesWant to generate 1 MILLION S3 Access logs in ~2 minutes? Now you can.```bashfake -t s3access -n 10```How about CloudFront? Go ahead.```bashfake -t cloudfront -n 10```&gt; **Warning**: Both of these templates are still being validated - please be cautious!</longdescription>
</pkgmetadata>