<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========DRF OpenAPI===========.. image:: https://img.shields.io/pypi/v/drf_openapi.svg        :target: https://pypi.python.org/pypi/drf_openapi.. image:: https://img.shields.io/travis/limdauto/drf_openapi.svg        :target: https://travis-ci.org/limdauto/drf_openapi.. image:: https://readthedocs.org/projects/drf-openapi/badge/?version=latest        :target: https://drf-openapi.readthedocs.io/en/latest/?badge=latest        :alt: Documentation Status.. image:: https://pyup.io/repos/github/limdauto/drf_openapi/shield.svg        :target: https://pyup.io/repos/github/limdauto/drf_openapi/        :alt: Updates.. image:: https://badges.gitter.im/drf_openapi/Lobby.svg        :target: https://gitter.im/drf_openapi/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge        :alt: Join the chat at https://gitter.im/drf_openapi/LobbyGenerates OpenAPI-compatible schema from API made with Django Rest Framework. Use `ReDoc &lt;https://github.com/Rebilly/ReDoc&gt;`_ as default interface instead of Swagger.First-class support for API versioning changelog &amp; method-specific schema definition... figure:: https://raw.githubusercontent.com/limdauto/drf_openapi/master/images/screenshot.png    :scale: 80%.. contents::1. Background---------------Django Rest Framework has an `API schema generation/declaration mechanism &lt;http://www.django-rest-framework.org/api-guide/schemas/&gt;`_ provided by`coreapi &lt;http://www.coreapi.org/&gt;`_ standard. There are a couple of problems with the current ecosystem:- CoreAPI is not compatible out of the box with `OpenAPI &lt;https://www.openapis.org/&gt;`_ which is a much more popular API standard with superior tooling support, i.e. Swagger et. al.- The OpenAPI codec (compatibility layer) that CoreAPI team provides drops / doesn't support a number of useful OpenAPI features.- There is no support for versioning or method-specific schema.2. Requirements:-------------------This project was born to bridge the gap between DRF and OpenAPI. The high-level requirements are as followed:- Can be dropped into any existing DRF project without any code change necessary.- Provide clear disctinction between request schema and response schema.- Provide a versioning mechanism for each schema. Support defining schema by version range syntax, e.g. :code:`&gt;1.0, &lt;=2.0`- Support multiple response codes, not just :code:`200`- All this information should be bound to view methods, not view classes.It's important to stress the non-intrusiveness requirement, not least because I want to minimize what I will have to change whenDRF itself decides to support OpenAPI officially, if at all.3. Design-------------- Schema are automatically generated from `serializers &lt;http://www.django-rest-framework.org/api-guide/serializers/&gt;`_    * From here onwards, :code:`schema` and :code:`serializer` are used interchangably- Versioned schema is supported by extending :code:`VersionedSerializers`.- Metadata, i.e. versioning, response and request schema, are bound to a view method through the :code:`view_config` decorator.- Extra schema information such as response status codes and their descriptions are bound to the serializer :code:`Meta` class- Automatic response validation is optionally provided :code:`view_config(response_serializer=FooSerializer, validate_response=True)`4. Constraints----------------Currently DRF OpenAPI only supports DRF project that has `versioning &lt;http://www.django-rest-framework.org/api-guide/versioning/#urlpathversioning&gt;`_ enabled.I have only tested `URLPathVersioning &lt;http://www.django-rest-framework.org/api-guide/versioning/#urlpathversioning&gt;`_ but I intend to suppor the full range ofversioning scheme supported by DRF.5. Examples------------Please read the `docs &lt;https://drf-openapi.readthedocs.io&gt;`_ for a quickstart.Also I have recreated the example in `DRF tutorial &lt;http://www.django-rest-framework.org/tutorial/quickstart/&gt;`_ with OpenAPI schema enabledin `&lt;examples/&gt;`_.6. License------------MIT=======History=======0.1.0 (2017-07-01)------------------* First release on PyPI.0.7.0 (2017-07-28)------------------* Implement :code:`VersionedSerializer`* Implement :code:`view_config`* Make the library an installable Django app0.8.0 (2017-07-28)------------------* Some minor fixes to make sure it works on generic project* Add examples0.8.1 (2017-07-28)------------------* Fix bug when parsing empty docstring of the serializer0.9.0 (2017-07-28)------------------* Rename base :code:`VersionedSerializer` into :code:`VersionedSerializers`0.9.1 (2017-07-28)------------------* Fix import issue after renaming0.9.3 (2017-08-05)------------------* Add support for different response status codes (`Issue 27 &lt;https://github.com/limdauto/drf_openapi/issues/27&gt;`_)0.9.5 (2017-08-12)------------------* Add Python 2.7 compatibility (thanks `tuffnatty &lt;https://github.com/limdauto/drf_openapi/pull/35&gt;`_)* Add support for ModelViewSet (thanks `tuffnatty &lt;https://github.com/limdauto/drf_openapi/pull/36&gt;`_)0.9.6 (2017-08-12)------------------* Fix type display for child of ListSerializer/ListField (`Issue 28 &lt;https://github.com/limdauto/drf_openapi/issues/28&gt;`_)0.9.7 (2017-09-12)------------------* Improve permission for schema view (`Issue 31 &lt;https://github.com/limdauto/drf_openapi/issues/31&gt;`_)0.9.8 (2017-10-01)------------------* Turn schema view into a class-based view for easier customization0.9.9 (2017-10-01)------------------* Another fix for ListSerializer/ListField (`Issue 28 &lt;https://github.com/limdauto/drf_openapi/issues/28&gt;`_)1.0.1 (2017-12-14)------------------* Fix DRF 3.7 compatibility issue* Added (`werwty &lt;https://github.com/werwty&gt;`_) as a maintainer1.1.0 (2017-12-14)------------------* Fix viewset that doesn't have pagination_class (`Issue 84 &lt;https://github.com/limdauto/drf_openapi/issues/84&gt;`_) and (`Issue 92 &lt;https://github.com/limdauto/drf_openapi/issues/92&gt;`_)1.2.0 (2017-12-20)------------------* Make serializer_class optional (`Issue 57 &lt;https://github.com/limdauto/drf_openapi/issues/57&gt;`_)</longdescription>
</pkgmetadata>