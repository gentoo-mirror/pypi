<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;sphinx/logo_text.svg?sanitize=true&quot; alt=&quot;Logo&quot; /&gt;&lt;/p&gt;------------------------------------------------------------------------[![Unit tests](https://github.com/douglasrizzo/catsim/actions/workflows/test-on-push.yml/badge.svg)](https://github.com/douglasrizzo/catsim/actions/workflows/test-on-push.yml)[![Test Coverage](https://coveralls.io/repos/github/douglasrizzo/catsim/badge.svg?branch=master)](https://coveralls.io/github/douglasrizzo/catsim?branch=master)[![Latest Version](https://badge.fury.io/py/catsim.svg)](https://badge.fury.io/py/catsim)[![Requirements Status](https://requires.io/github/douglasrizzo/catsim/requirements.svg?branch=master)](https://requires.io/github/douglasrizzo/catsim/requirements/?branch=master)[![Digital Object Identifier](https://zenodo.org/badge/doi/10.5281/zenodo.46420.svg)](http://dx.doi.org/10.5281/zenodo.46420)**catsim** is a Python package for computerized adaptive testing (CAT)simulations. It provides multiple methods for:- [test initialization](https://douglasrizzo.com.br/catsim/initialization.html) (selecting the initial ability of the examinees)- [item selection](https://douglasrizzo.com.br/catsim/selection.html)- [ability estimation](https://douglasrizzo.com.br/catsim/estimation.html)- [test stopping](https://douglasrizzo.com.br/catsim/stopping.html)These methods can either be used in a standalone fashion[\[1\]](https://douglasrizzo.com.br/catsim/introduction.html#autonomous-usage)to power other software or be used with *catsim* to simulate theapplication of computerized adaptive tests[\[2\]](https://douglasrizzo.com.br/catsim/introduction.html#running-simulations),given a sample of examinees, represented by their ability levels,and an item bank, represented by their parameters according to some[logistic Item Response Theorymodel](https://douglasrizzo.com.br/catsim/introduction.html#item-response-theory-models).## What's a CATComputerized adaptive tests are educational evaluations, usually takenby examinees in a computer or some other digital means, in which theexaminee\'s ability is evaluated after the response of each item.The new ability is then used to select a new item, closer to theexaminee\'s real ability. This method of test application hasseveral advantages compared to the traditional paper-and-pencil methodor even linear tests applied electronically, since high-abilityexaminees are not required to answer all the easy items in a test,answering only the items that actually give some information regardinghis or hers true knowledge of the subject at matter. A similar, butinverse effect happens for those examinees of low ability level.More information is available [in thedocs](https://douglasrizzo.com.br/catsim/introduction.html) and overat[Wikipedia](https://en.wikipedia.org/wiki/Computerized_adaptive_testing).## InstallationInstall it using `pip install catsim`.## Basic Usage**NEW:** there is now [a Colab Notebook](https://colab.research.google.com/drive/1dBcpXxHuc9YXv9yGllxlahx585hEmdbn?usp=sharing) teaching the basics of catsim!1.  Have an [item matrix](https://douglasrizzo.com.br/catsim/item_matrix.html);2.  Have a sample of examinee proficiencies, or a number of examinees to be generated;3.  Create an [initializer](https://douglasrizzo.com.br/catsim/initialization.html),    an item [selector](https://douglasrizzo.com.br/catsim/selection.html), a    ability [estimator](https://douglasrizzo.com.br/catsim/estimation.html)    and a [stopping criterion](https://douglasrizzo.com.br/catsim/stopping.html);4.  Pass them to a [simulator](https://douglasrizzo.com.br/catsim/simulation.html)    and start the simulation.5.  Access the simulator\'s properties to get specifics of the results;6.  [Plot](https://douglasrizzo.com.br/catsim/plot.html) your results.```pythonfrom catsim.initialization import RandomInitializerfrom catsim.selection import MaxInfoSelectorfrom catsim.estimation import NumericalSearchEstimatorfrom catsim.stopping import MaxItemStopperfrom catsim.simulation import Simulatorfrom catsim.cat import generate_item_bankinitializer = RandomInitializer()selector = MaxInfoSelector()estimator = NumericalSearchEstimator()stopper = MaxItemStopper(20)Simulator(generate_item_bank(100), 10).simulate(initializer, selector, estimator, stopper)```## DependenciesAll dependencies are listed on `setup.py` and should be installedautomatically.To run the tests, you\'ll need to install the testing requirements`pip install catsim[testing]`.To generate the documentation, install the necessary dependencies with `pip install catsim[docs]`.To ensure code is valid and formatted before submission, install the necessary development dependencies with `pip install catsim[dev]`.## Compatibility*catsim* is compatible and tested against Python 3.5, 3.6, 3.7, 3.8 and 3.9.## Important links-   Official source code repo: &lt;https://github.com/douglasrizzo/catsim&gt;-   HTML documentation (stable release):    &lt;https://douglasrizzo.com.br/catsim&gt;-   Issue tracker: &lt;https://github.com/douglasrizzo/catsim/issues&gt;## Citing catsimYou can cite the package using the following bibtex entry:```bibtex@article{catsim,  author = {Meneghetti, Douglas De Rizzo and Aquino Junior, Plinio Thomaz},  title = {Application and simulation of computerized adaptive tests through the package catsim},  year = 2018,  month = jul,  archiveprefix = {arXiv},  eprint = {1707.03012},  eprinttype = {arxiv},  journal = {arXiv:1707.03012 [stat]},  primaryclass = {stat}}```## If you are looking for IRT item parameter estimation..._catsim_ does not implement item parameter estimation. I have had great joy outsourcing that functionality to the [mirt](https://cran.r-project.org/web//packages/mirt/) R package along the years. However, since many users request packages with item parameter estimation capabilities in the Python ecosystem, here are a few links. While I have not used them personally, specialized packages like these are hard to come by, so I hope these are helpful.- [eribean/girth](https://github.com/eribean/girth)- [eribean/girth_mcmc](https://github.com/eribean/girth_mcmc)- [nd-ball/py-irt](https://github.com/nd-ball/py-irt)</longdescription>
</pkgmetadata>