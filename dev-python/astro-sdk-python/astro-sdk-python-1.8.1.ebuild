# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Astro SDK allows rapid and clean development of {Extract, Load, Transform} workflows using Python and SQL, powered by Apache Airflow."

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all amazon azure databricks doc duckdb ftp google mssql mysql openlineage postgres sftp snowflake tests"
DEPENDENCIES="dev-python/apache-airflow[${PYTHON_USEDEP}]
	>=dev-python/attrs-20.3.0[${PYTHON_USEDEP}]
	<dev-python/pandas-2.2.0[${PYTHON_USEDEP}]
	dev-python/pyarrow[${PYTHON_USEDEP}]
	dev-python/python-frontmatter[${PYTHON_USEDEP}]
	dev-python/smart-open[${PYTHON_USEDEP}]
	>=dev-python/sqlalchemy-1.3.18[${PYTHON_USEDEP}]
	dev-python/Flask-Session[${PYTHON_USEDEP}]
	all? ( dev-python/apache-airflow-providers-amazon[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-google[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-ftp[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-postgres[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-snowflake[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-sftp[${PYTHON_USEDEP}] )
	all? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	all? ( dev-python/snowflake-connector-python[${PYTHON_USEDEP}] )
	all? ( dev-python/snowflake-sqlalchemy[${PYTHON_USEDEP}] )
	all? ( dev-python/sqlalchemy-bigquery[${PYTHON_USEDEP}] )
	all? ( dev-python/databricks-cli[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-databricks[${PYTHON_USEDEP}] )
	all? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	all? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-openlineage[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-microsoft-azure[${PYTHON_USEDEP}] )
	all? ( dev-python/azure-storage-blob[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-microsoft-mssql[${PYTHON_USEDEP}] )
	all? ( dev-python/airflow-provider-duckdb[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-mysql[${PYTHON_USEDEP}] )
	all? ( dev-python/google-cloud-bigquery[${PYTHON_USEDEP}] )
	amazon? ( dev-python/apache-airflow-providers-amazon[${PYTHON_USEDEP}] )
	amazon? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	amazon? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	azure? ( dev-python/apache-airflow-providers-microsoft-azure[${PYTHON_USEDEP}] )
	azure? ( dev-python/azure-storage-blob[${PYTHON_USEDEP}] )
	azure? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	databricks? ( dev-python/databricks-cli[${PYTHON_USEDEP}] )
	databricks? ( dev-python/apache-airflow-providers-databricks[${PYTHON_USEDEP}] )
	doc? ( >=dev-python/myst-parser-0.17[${PYTHON_USEDEP}] )
	doc? ( >=dev-python/sphinx-4.4.0[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-autoapi[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	duckdb? ( dev-python/airflow-provider-duckdb[${PYTHON_USEDEP}] )
	ftp? ( dev-python/apache-airflow-providers-ftp[${PYTHON_USEDEP}] )
	ftp? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	google? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	google? ( dev-python/apache-airflow-providers-google[${PYTHON_USEDEP}] )
	google? ( dev-python/sqlalchemy-bigquery[${PYTHON_USEDEP}] )
	google? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	google? ( dev-python/google-cloud-bigquery[${PYTHON_USEDEP}] )
	mssql? ( dev-python/apache-airflow-providers-microsoft-mssql[${PYTHON_USEDEP}] )
	mysql? ( dev-python/apache-airflow-providers-mysql[${PYTHON_USEDEP}] )
	openlineage? ( dev-python/apache-airflow-providers-openlineage[${PYTHON_USEDEP}] )
	postgres? ( dev-python/apache-airflow-providers-postgres[${PYTHON_USEDEP}] )
	sftp? ( dev-python/apache-airflow-providers-sftp[${PYTHON_USEDEP}] )
	sftp? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/apache-airflow-providers-snowflake[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/snowflake-sqlalchemy[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/snowflake-connector-python[${PYTHON_USEDEP}] )
	tests? ( >=dev-python/pytest-6.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-split[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-dotenv[${PYTHON_USEDEP}] )
	tests? ( dev-python/requests-mock[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-describe[${PYTHON_USEDEP}] )
	tests? ( dev-python/types-requests[${PYTHON_USEDEP}] )
	tests? ( dev-python/mypy[${PYTHON_USEDEP}] )
	tests? ( dev-python/sqlalchemy-stubs[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
