<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|Logo||License||Changelog||Downloads||PyPi||Python|Fully asynchronous read-only API wrapper for 2ch.hk (dvach, Двач)Requirements-------------  httpx_-  aiofiles_-  click_Install with pip----------------.. code-block:: bash    $ pip3 install aio2chBuild from source-----------------.. code-block:: bash    $ git clone https://github.com/wkpn/aio2ch    $ cd ./aio2ch    $ python3 setup.py installUsage-----Simple usage (in this case ``client.close()`` must be called when client is no longer needed).. code-block:: python    &gt;&gt;&gt; from aio2ch import Api    &gt;&gt;&gt; client = Api()    &gt;&gt;&gt; ...    &gt;&gt;&gt; await client.close()Or you can use it as a context manager.. code-block:: python    &gt;&gt;&gt; async with Api() as client:    ...     boards = await client.get_boards()    ...     ...Get all boards.. code-block:: python    &gt;&gt;&gt; boards = await client.get_boards()    &gt;&gt;&gt; boards    (&lt;Board name='Фагготрия', id='fag'&gt;, ... )In addition we can get ``status`` for each method. This is useful for debug purposes or if retries are needed.. code-block:: python    &gt;&gt;&gt; status, boards = await client.get_boards(return_status=True)    &gt;&gt;&gt; status    200    &gt;&gt;&gt; boards    (&lt;Board name='Фагготрия', id='fag'&gt;, ... )Get all threads from a board.. code-block:: python    &gt;&gt;&gt; threads = await client.get_board_threads(board=&quot;b&quot;)    &gt;&gt;&gt; threads    (&lt;Thread num='180981319'&gt;, ... )Get top threads from a board sorted by method (*views*, *score* or *posts_count*).. code-block:: python    &gt;&gt;&gt; top_threads = await client.get_top_board_threads(board=&quot;b&quot;, method=&quot;views&quot;, num=3)    &gt;&gt;&gt; top_threads    (&lt;Thread num='180894312'&gt;, &lt;Thread num='180946622'&gt;, &lt;Thread num='180963318'&gt;)Get all thread's posts (``thread`` is an instance of ``Thread``).. code-block:: python    &gt;&gt;&gt; thread_posts = await client.get_thread_posts(thread=thread)    &gt;&gt;&gt; thread_posts    (&lt;Post num='180894312'&gt;, ... )Get all thread's posts  by url.. code-block:: python    &gt;&gt;&gt; thread_posts = await client.get_thread_posts(thread=&quot;https://2ch.hk/test/res/30972.html&quot;)    &gt;&gt;&gt; thread_posts    (&lt;Post num='30972'&gt;, ... )Get all media in all thread's posts (images, webm and so on).. code-block:: python    &gt;&gt;&gt; thread_media = await client.get_thread_media(thread=thread)    &gt;&gt;&gt; thread_media    (&lt;File name='15336559148500.jpg', path='/b/src/180979032/15336559148500.jpg', size='19'&gt;, ... )Get specific thread media.. code-block:: python    &gt;&gt;&gt; images_and_videos = await client.get_thread_media(thread, media_type=(Image, Video))    &gt;&gt;&gt; images_and_videos    (&lt;Image name=...&gt;, &lt;Video name=...&gt;, ...)    &gt;&gt;&gt; just_images = await client.get_thread_media(thread, media_type=Image)    &gt;&gt;&gt; just_images    (&lt;Image name=...&gt;, ...)Download all thread media.. code-block:: python    &gt;&gt;&gt; await client.download_thread_media(files=thread_media, save_to=&quot;./downloads&quot;).. |License| image:: https://img.shields.io/pypi/l/aio2ch.svg    :target: https://github.com/wkpn/aio2ch/blob/master/LICENSE.. |Changelog| image:: https://img.shields.io/badge/changelog-conventional-green.svg    :target: https://github.com/wkpn/aio2ch/blob/master/CHANGELOG.rst.. |Downloads| image:: https://pepy.tech/badge/aio2ch    :target: https://pepy.tech/project/aio2ch.. |PyPi| image:: https://img.shields.io/pypi/v/aio2ch.svg    :target: https://pypi.python.org/pypi/aio2ch.. |Python| image:: https://img.shields.io/pypi/pyversions/aio2ch.svg    :target: https://pypi.python.org/pypi/aio2ch.. |Logo| image:: https://raw.githubusercontent.com/wkpn/aio2ch/master/docs/img/banner.jpg.. _httpx: https://github.com/encode/httpx.. _aiofiles: https://github.com/Tinche/aiofiles.. _click: https://github.com/pallets/click</longdescription>
</pkgmetadata>