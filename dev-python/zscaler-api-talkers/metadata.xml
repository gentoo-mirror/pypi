<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Unofficial Zscaler API talkers## API Talkers### ZIA API TalkerPython classes to leverage [Zscaler Internet Access API](https://help.zscaler.com/zia/api)### ZPA API TalkerPython classes to leverage [Zscaler Private Access API](https://help.zscaler.com/zpa/api-reference)### Client Connector API TalkerA Python class to leverage Zscaler Client Connector API. (Currently in Beta status.)The Client Connector API talker is accessed via the Class object named: **ClientConnectorTalker**### ZDX API TalkerA Python class to leverage Zscaler Digital Experience API. (Currently in development.)This class is interacts with ZDX via the URLs presented in the Portal (aka, the ZDX configuration website).  It is named: **ZdxPortalTalker**## Installation### Option 1: Run in a Python Virtual Environment1. Create a virtual Environment: `python3 -m venv .zs_api_talkers`1. Activate virtual environment:   - Linux: `source .zs_api_talkers/bin/activate`   - Windows: `.\.zs_api_talkers\Scripts\activate`1. Install Zscaler API talkers: `pip install zscaler-api-talkers`### Option 2: Run within a Docker ContainerWe provide two methods to build a Docker container.  Either using the code hosted on GitHub or the code published to PyPi.#### PyPi Method1. Download Dockerfile   - Linux: `curl -O https://raw.githubusercontent.com/sergitopereira/zscaler_api_talkers/sergiodevelop/Dockerfile`   - Windows: `wget -O Dockerfile https://raw.githubusercontent.com/sergitopereira/zscaler_api_talkers/sergiodevelop/Dockerfile` 1. Build Image and Run Container   1. `docker build -t zscaler_api_talkers .`   1. `docker run -it zscaler_api_talkers bash`1. Usage (program is in /zscaler_api_talkers/)   - `cd zscaler_api_talkers`#### GitHub Method1. Download Dockerfile   - Linux: `curl -O https://raw.githubusercontent.com/sergitopereira/zscaler_api_talkers/sergiodevelop/git_version.Dockerfile`   - Windows: `wget -O Dockerfile https://raw.githubusercontent.com/sergitopereira/zscaler_api_talkers/sergiodevelop/git_version.Dockerfile` 1. Build Image and Run Container   1. `docker build -f git_version.Dockerfile -t zscaler_api_talkers .`   1. `docker run -it zscaler_api_talkers bash`1. Usage (program is in /zscaler_api_talkers/)   - `cd zscaler_api_talkers`## Zscaler Secure Internet and SaaS Access SDK### Usage ZiaTalker``` pythonfrom zscaler_api_talkers import ZiaTalkerzia=ZiaTalker('&lt;Zscaler Cloud Name&gt;')zia.authenticate(apikey='API_KEY', username='USERNAME', password='PASSWORD')zia.list_urlcategories()zia.list_users()# To view all methods availableprint(dir(zia))```### Usage ZiaTalker with OAUTH2.0``` pythonfrom zscaler_api_talkers import ZiaTalkera=ZiaTalker('&lt;Zscaler Cloud Name&gt;', '&lt;Bear oauth2.0 token&gt;')a.list_url_categorie.url_categories()a.list_users()# To view all methods availableprint(dir(a))```## Zscaler Secure Private Access SDK### Usage ZpaTalker``` pythonfrom zscaler_api_talkers import ZpaTalkera=ZpaTalker('customerID')a.authenticate(client_id='clientID',client_secret='clientSecret')# To view all methods availableprint(dir(a))```## Zscaler Client Connector SDK### Usage ClientConnectorTalker``` pythonfrom zscaler_api_talkers import ClientConnectorTalkera=ClientConnectorTalker('&lt;Zscaler Cloud Name&gt;')    a.authenticate(clientid='clientID',secretkey='clientSecret')a.list_devices('companyID')a.list_OTP('companyID','user device id')# To view all methods availableprint(dir(a))```## Zscaler Digital Experience SDK### Usage ZdxTalker``` pythonfrom zscaler_api_talkers import ZdxTalkera=ZdxTalker(username='&lt;username&gt;', password='&lt;password&gt;', zia_cloud='&lt;zia_cloud_domain&gt;')result = a.get_alerts()print(result.json())print(dir(a))```## Usage examples  - https://github.com/sergitopereira/zscaler_api_talkers#usage-example  - https://github.com/sergitopereira/zscaler_api_talkers/blob/main/example.py## Bugs and enhancementsFeel free to open an issues using [GitHub Issues](https://github.com/sergitopereira/zscaler_api_talkers)## AuthorSergio Pereira: Zscaler Professional Services </longdescription>
</pkgmetadata>