<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>A comprehensive web scraping pipeline for extracting and storing real estate data### Purpose of the package+ The primary objective of this package is to provide an efficient solution for web scraping tasks. It has essentially functionalities including link extraction, data extraction, data cleaning, and data storage to database.### Features    - Date                      - Bathrooms      - Build Year                - Car Parking    - Floors                    - Ancillary    - Sitting Rooms             - LandSize    - Dining Rooms              - Price    - Bedrooms                  - District    - Wardrobes                 - Sector#### InstallationTo install the package, run the following command:``` bash!pip install WebScrapeX```#### ContributionContributions are welcome. If you encounter any bugs or have suggestions for improvements, please let me know at inyangel@yahoo.com. Thanks#### Author + This package was developed by Lisa Yvette INYANGE (https://github.com/ILisa250) #### LicenseThe package is released under the MIT license. (https://choosealicense.com/licenses/mit/)#### DependenciesThe package has the following dependencies: + Python Decouple: Used for managing settings and configuration. + Python Dotenv: Used for loading environment variables from a .env file#### Scraping URLsThe package supports scraping the following types of real estate listings from the Imali.biz website:    Apartment for Sale: https://imali.biz/category/1/125/search?pg=    Apartment for Rent: https://imali.biz/category/0/91/search?pg=    House for Rent: https://imali.biz/category/0/27/search?pg=    House for Sale: https://imali.biz/category/0/24/search?pg=#### Usage exampleHere's an example of how to use the WebScrapeX package to scrape, clean, and save real estate data:``` bashfrom WebScrapeX import scrape_clean_save_dataimport os env_path = os.path.abspath('.env')# Specify the link of the real estate type to scrapeurl = &quot;https://imali.biz/category/1/125/search?pg=&quot;# Specify the name of the file to save the data (in lowercase)file_name = &quot;real_estate_data.csv&quot;# Scrape, clean, and save the datascrape_clean_save_data(url, file_name, env_path)```##### Note: File name should be either &quot;house_sale&quot; or &quot;house_for_rent&quot; or &quot;apartment_for_sale&quot; or &quot;apartment_for_rent&quot;.</longdescription>
</pkgmetadata>