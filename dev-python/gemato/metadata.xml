<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==================================  gemato -- Gentoo Manifest Tool==================================:Author: Michał Górny:License: 2-clause BSD licenseIntroduction============gemato provides a reference implementation of the full-tree Manifestchecks as specified in GLEP 74 [#GLEP74]_. Originally focusedon verifying the integrity and authenticity of the Gentoo ebuildrepository, the tool can be used as a generic checksumming toolfor any directory trees.Usage=====Verification------------The basic purpose of gemato is to verify a directory tree againstManifest files. In order to do that, run the ``gemato verify`` toolagainst the requested directory::    gemato verify /var/db/repos/gentooThe tool will automatically locate the top-level Manifest (if any)and check the specified directory recursively. If a subdirectoryof the Manifest tree is specified, only the specified leaf is checked.Creating new Manifest tree--------------------------Creating a new Manifest tree can be accomplished using the ``gematocreate`` command against the top directory of the new Manifest tree::    gemato create -p ebuild /var/db/repos/gentooNote that for the ``create`` command you always need to specify eithera profile (via ``-p``) or at least a hash set (via ``-H``).Updating existing Manifests---------------------------The ``gemato update`` command is provided to update an existing Manifesttree::    gemato update -p ebuild /var/db/repos/gentooAlike ``create``, ``update`` also requires specifying a profile (``-p``)or a hash set (``-H``). The command locates the appropriate top-levelManifest and updates the specified directory recursively.If a subdirectory of the Manifest tree is specified, the entriesfor the specified leaf and respective Manifest files are updated.Utility commands----------------gemato provides a few other utility commands that provide access toits crypto backend. These are:``gemato hash -H &lt;hashes&gt; [&lt;path&gt;...]``  Print hashes of the specified files in Manifest-like format.``gemato openpgp-verify [-K &lt;key&gt;] [&lt;path&gt;...]``  Check OpenPGP cleartext signatures embedded in the specified files.``gemato openpgp-verify-detached [-K &lt;key&gt;] &lt;sig-file&gt; &lt;data-file&gt;``  Verify the specified data file against a detached OpenPGP signature.Requirements============gemato is written in Python and compatible with implementationsof Python 3.9+. gemato is currently tested against CPython 3.9through 3.11 and PyPy3.  gemato core depends only on standard Pythonlibrary modules.Additionally, OpenPGP requires system install of GnuPG 2.2+and requests_ Python module.  Tests require pytest_, and responses_for mocking.References and footnotes========================.. [#GLEP74] GLEP 74: Full-tree verification using Manifest files   (https://www.gentoo.org/glep/glep-0074.html).. _requests: https://2.python-requests.org/en/master/.. _pytest: https://docs.pytest.org/en/stable/.. _responses: https://github.com/getsentry/responses</longdescription>
</pkgmetadata>