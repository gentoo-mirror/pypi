<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-twitterA simple Python wrapper for Twitter API v2 :sparkles: :cake: :sparkles:... image:: https://img.shields.io/endpoint?url=https%3A%2F%2Ftwbadges.glitch.me%2Fbadges%2Fv2   :target: https://developer.twitter.com/en/docs/twitter-api   :alt: v2.. image:: https://github.com/sns-sdks/python-twitter/workflows/Test/badge.svg    :target: https://github.com/sns-sdks/python-twitter/actions    :alt: Build Status.. image:: https://codecov.io/gh/sns-sdks/python-twitter/branch/master/graph/badge.svg    :target: https://codecov.io/gh/sns-sdks/python-twitter    :alt: Codecov.. image:: https://img.shields.io/pypi/v/python-twitter-v2.svg    :target: https://pypi.org/project/python-twitter-v2/    :alt: PyPI============Introduction============Twitter has published new version `Twitter API V2 &lt;https://twitter.com/TwitterDev/status/1293593516040269825&gt;`_ for developer at Aug 13, 2020.This library provides a service to easily use this new version Twitter API.=============Documentation=============You can get all API descriptions `Twitter API v2 Documentation &lt;https://developer.twitter.com/en/docs/twitter-api&gt;`_.Docs for this library on `here &lt;https://sns-sdks.github.io/python-twitter/&gt;`_==========Installing==========You can install this library easily by `pypi`:.. code-block:: shell    $ pip install python-twitter-v2Code is hosted at `https://github.com/sns-sdks/python-twitter &lt;https://github.com/sns-sdks/python-twitter&gt;`_.Checkout latest development version with:.. code-block:: shell    $ git clone https://github.com/sns-sdks/python-twitter.git    $ cd python-twitterInstall dependencies with:.. code-block:: shell    $ make envRun tests with:.. code-block:: shell    $ make testRun tests with coverage:.. code-block:: shell    $ make cov-term    $ make cov-html=====Using=====The API is exposed via the ``pytwitter.Api`` class.Now covers these features:- Tweets    - Tweet lookup    - Manage Tweets    - Quote Tweets    - Timelines    - Search Tweets    - Tweet counts    - Filtered stream    - Volume streams    - Retweets    - Likes    - Bookmarks    - Hide replies- Users    - User lookup    - Follows    - Blocks    - Mutes- Spaces    - Spaces lookup    - Search Spaces- Compliance    - Batch compliance- Lists    - List lookup    - Manage lists    - List Tweets lookup    - List members    - List follows    - Pinned Lists- Direct Messages    - Direct Messages lookup    - Manage Direct Messages-----------INSTANTIATE-----------You can initialize with an bearer token:.. code-block:: python    &gt;&gt;&gt; from pytwitter import Api    &gt;&gt;&gt; api = Api(bearer_token=&quot;Your bearer token&quot;)With OAuth 1.0A user context token:.. code-block:: python    &gt;&gt;&gt; api = Api(            consumer_key=&quot;consumer key&quot;,            consumer_secret=&quot;consumer secret&quot;,            access_token=&quot;access token&quot;,            access_secret=&quot;access secret&quot;        )Or with authorization done by user:.. code-block:: python    &gt;&gt;&gt; api = Api(consumer_key=&quot;consumer key&quot;,consumer_secret=&quot;consumer secret&quot;,oauth_flow=True)    # get url for user to authorize    &gt;&gt;&gt; api.get_authorize_url()    # copy the response url    &gt;&gt;&gt; api.generate_access_token(&quot;https://localhost/?oauth_token=oauth_token&amp;oauth_verifier=oauth_verifier&quot;)    {'oauth_token': 'oauth_token',     'oauth_token_secret': 'oauth_token_secret',     'user_id': '123456',     'screen_name': 'screen name'}Twitter has `announced OAuth 2.0 user authentication support with fine-grained scopes &lt;https://twittercommunity.com/t/announcing-oauth-2-0-general-availability/163555&gt;`_Now if you have app with ``OAuth2.0`` client ID. you can do authorize with ``OAuth2``... code-block:: python    &gt;&gt;&gt; api = Api(client_id=&quot;You client ID&quot;, oauth_flow=True)    # get the url and code verifier for user to authorize    &gt;&gt;&gt; url, code_verifier, _ = api.get_oauth2_authorize_url()    # copy the response url    &gt;&gt;&gt; api.generate_oauth2_access_token(&quot;https://localhost/?state=state&amp;code=code&quot;, code_verifier)    {'token_type': 'bearer',     'expires_in': 7200,     'access_token': 'access_token',     'scope': 'users.read tweet.read',     'expires_at': 1631775928}------------Users-lookup------------You can get information about a user or group of users, specified by a user ID or a username.Get group of users:.. code-block:: python    # By ids    &gt;&gt;&gt; api.get_users(ids=[&quot;783214&quot;, &quot;2244994945&quot;])    Response(data=[User(id='2244994945', name='Twitter Dev', username='TwitterDev'), User(id='783214', name='Twitter', username='Twitter')])    # By username    &gt;&gt;&gt; api.get_users(usernames=&quot;Twitter,TwitterDev&quot;)    Response(data=[User(id='2244994945', name='Twitter Dev', username='TwitterDev'), User(id='783214', name='Twitter', username='Twitter')])Get single user:.. code-block:: python    # By id    &gt;&gt;&gt; api.get_user(user_id=&quot;783214&quot;)    Response(data=User(id='783214', name='Twitter', username='Twitter'))    # By username    &gt;&gt;&gt; api.get_user(username=&quot;Twitter&quot;)    Response(data=User(id='783214', name='Twitter', username='Twitter'))Get user following:.. code-block:: python    &gt;&gt;&gt; api.get_following(user_id=&quot;2244994945&quot;, max_results=5)    Response(data=[User(id='459860328', name='julieâœ¨', username='JulieMendoza206'), User(id='273830767', name='ðŸ„¿ðŸ…„ðŸ…‚ðŸ„·', username='rahul_pushkarna')...])Get user followers:.. code-block:: python    &gt;&gt;&gt; api.get_followers(user_id=&quot;2244994945&quot;, max_results=5)    Response(data=[User(id='715131097332518912', name='Daniel', username='RGIDaniel'), User(id='1176323137757048832', name='Joyce Wang', username='joycew67')...])You can follow or unfollow user if you have User context.follow user:.. code-block:: python    &gt;&gt;&gt; api.follow_user(user_id=&quot;123456&quot;, target_user_id=&quot;654321&quot;)    {'data': {'following': True, 'pending_follow': False}}unfollow user:.. code-block:: python    &gt;&gt;&gt; api.unfollow_user(user_id=&quot;123456&quot;, target_user_id=&quot;654321&quot;)    {'data': {'following': False}}-------------Tweets-lookup-------------You can get information about a tweet or group of tweets by tweet id(s).Get single tweet:.. code-block:: python    &gt;&gt;&gt; api.get_tweet(&quot;1354143047324299264&quot;, expansions=[&quot;attachments.media_keys&quot;], media_fields=[&quot;type&quot;,&quot;duration_ms&quot;])    Response(data=Tweet(id=1354143047324299264, text=Academics are one of the biggest groups using...))Get group of tweets:.. code-block:: python    &gt;&gt;&gt; api.get_tweets([&quot;1261326399320715264&quot;,&quot;1278347468690915330&quot;],expansions=&quot;author_id&quot;,tweet_fields=[&quot;created_at&quot;], user_fields=[&quot;username&quot;,&quot;verified&quot;])    Response(data=[Tweet(id=1261326399320715264, text=Tune in to the @MongoDB @Twitch stream...), Tweet(id=1278347468690915330, text=Good news and bad news: 2020 is half over)])-------------Streaming API-------------For Streaming, this provide `StreamApi` independent. Same as main `Api`, You need initialize it first... code-block:: python    &gt;&gt;&gt; from pytwitter import StreamApi    &gt;&gt;&gt; stream_api = StreamApi(bearer_token=&quot;bearer token&quot;)    # or use consumer key and secret    &gt;&gt;&gt; stream_api = StreamApi(consumer_key=&quot;consumer key&quot;, consumer_secret=&quot;consumer secret&quot;)For Sample Stream tweets, you can use the `sample_stream` function to build a connection... code-block:: python    &gt;&gt;&gt; stream_api.sample_stream()For Filtered Stream, you can create rules.Get your current rules... code-block:: python    &gt;&gt;&gt; stream_api.get_rules()    Response(data=[StreamRule(id='1369580714056843266', value='twitter api ')])Delete your rules... code-block:: python    &gt;&gt;&gt; stream_api.manage_rules(rules={&quot;delete&quot;: {&quot;ids&quot;: [&quot;1369580714056843266&quot;]}})    Response(data=[])Add new rules. If you set `dry_run` to True, will only validate rules, and not create them... code-block:: python    &gt;&gt;&gt; np = {            &quot;add&quot;: [                {&quot;value&quot;: &quot;cat has:media&quot;, &quot;tag&quot;: &quot;cats with media&quot;},                {&quot;value&quot;: &quot;cat has:media -grumpy&quot;, &quot;tag&quot;: &quot;happy cats with media&quot;}            ]         }    &gt;&gt;&gt; stream_api.manage_rules(rules=np, dry_run=True)    Response(data=[StreamRule(id='1370406958721732610', value='cat has:media -grumpy'), StreamRule(id='1370406958721732609', value='cat has:media')])Then you can use `search_stream` to get tweets matching your rules... code-block:: python    &gt;&gt;&gt; stream_api.search_stream()You can go to the `Example folder &lt;examples&gt;`_ for streaming examples.====TODO====- More Api waiting twitter</longdescription>
</pkgmetadata>