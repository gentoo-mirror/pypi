<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dt-cli â€” Dynatrace developer's toolboxDynatrace CLI is a command line utility that assists in signing, building and uploadingextensions for Dynatrace Extension Framework 2.0.&lt;p&gt;  &lt;a href=&quot;https://pypi.org/project/dt-cli/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/dt-cli?color=blue&amp;logo=python&amp;logoColor=white&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/dt-cli/&quot;&gt;&lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/dt-cli?logo=python&amp;logoColor=white&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/dynatrace-oss/dt-cli/actions/workflows/built-test-release.yml&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status (main branch)&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/dynatrace-oss/dt-cli/build-test-release.yml?branch=main&amp;logo=github&quot;&gt;&lt;/a&gt;&lt;/p&gt;### Features* Build and sign extensions from source* Generate development certificates for extension signing* Generate CA certificates for development* Validate and upload extension to Dynatrace Extension Framework 2.0.## Installation```shellpip install dt-cli```## Usage1. Generate certificates```sh  dt extension gencerts```2. Upload your `ca.pem` certificate to the Dynatrace credential vaultSee: [Add your root certificate to the Dynatrace credential vault](https://www.dynatrace.com/support/help/extend-dynatrace/extensions20/sign-extension/#add-your-root-certificate-to-the-dynatrace-credential-vault)3. Build and sign, then upload extension```sh  dt extension build  dt extension upload```Use `dt extension --help` to learn more4. Download extension schemas```sh  dt extension schemas```_API permissions needed: `extensions.read`_This script should only be needed once, whenever schema files are missing or you want to target a different version than what you already have. It does the following:* Downloads all the extension schema files of a specific version* Schemas are downloaded to `schemas` folder5. Wipes out extension from Dynatrace Cluster```sh  dt extension delete```Use `dt extension --help` to learn more## Using dt-cli from your Python codeYou may want to use some commands implemented by `dt-cli` directly in your Python code, e.g. to automatically sign your extension in a CI environment.Here's an example of building an extension programatically, it assumes `dtcli` package is already installed and available in your working environment.```pythonfrom dtcli import buildingbuilding.build_extension(    extension_dir_path = './extension',    extension_zip_path = './extension.zip',    extension_zip_sig_path = './extension.zip.sig',    target_dir_path = './dist',    certificate_file_path = './developer.crt',    private_key_file_path = './developer.key',    dev_passphrase=None,    keep_intermediate_files=False,)```## DevelopmentSee our [CONTRIBUTING](CONTRIBUTING.md) guidelines and instructions.## ContributionsYou are welcome to contribute using Pull Requests to the respectiverepository. Before contributing, please read our[Code of Conduct](https://github.com/dynatrace-oss/dt-cli/blob/main/CODE_OF_CONDUCT.md).## License`dt-cli` is an Open Source Project. Please see[LICENSE](https://github.com/dynatrace-oss/dt-cli/blob/main/LICENSE) for more information.</longdescription>
</pkgmetadata>