<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># 3aransiaTransliteration of languages and dialects[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=102)](https://github.com/ellerbrock/open-source-badge/)[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)![GitHub last commit](https://img.shields.io/github/last-commit/google/skia.svg)## ContributionFor contribution you can refer to [CONTRIBUTING.md](CONTRIBUTING.md)## Features- Fast and reliable - it uses default variables to access data- Bulk transliteration- API available- Multilanguage transliteration available- 70 languages and dialects supportted## Languages and dialects supported```1. Afrikaans    2. Algerian        3. Arabic4. Azerbaijani    5. Bosnian        6. Catalan7. Corsican    8. Czech        9. Welsh10. Danish    11. German        12. Greek13. English    14. Esperanto       15. Spanish16. Estonian    17. Basque        18. Persian19. Finnish    20. French        21. Frisian22. Irish    23. Gaelic        24. Galician25. Hausa    26. Croatian27. Creole28. Hungarian    29. Hawaiian30. Indonesian31. Igbo    32. Icelandic33. Italian34. Kinyarwanda    35. Kurdish        36. Latin37. Libyan    38. Lithuanian39. Luxembourgish40. Latvian    41. Moroccan42. Malagasy43. Maori    44. Malay        45. Maltese46. Dutch    47. Norwegian48. Polish49. Portuguese    50. Romanian51. Samoan52. Shona    53. Slovak        54. Slovenian55. Somali    56. Albanian57. Sesotho58. Sundanese    59. Swedish        60. Swahili61. Filipino    62. Tunisian63. Turkish64. Turkmen    65. Urdu        66. Uzbek67. Vietnamese    68. Xhosa        69. Yoruba70. Zulu```  ## Installation```pip install aaransia```## Usage### Transliterate from a language or dialect to another```pythonARABIC_SENTENCE = &quot;كتب بلعربيا هنايا شحال ما بغيتي&quot;print(transliterate(ARABIC_SENTENCE, source='ar', target='ma'))``````&gt;&gt;&gt; ktb bl3rbya hnaya ch7al ma bghiti```### Transliterate cross languages and dialects to another, using the universal parameter```pythonfrom aaransia import SourceLanguageErrorMOROCCAN_ARABIC_SENTENCE = &quot;ktb بلعربيا hnaya شحال ما بغيتي&quot;try:    print(transliterate(MOROCCAN_ARABIC_SENTENCE, source='ar', target='ma'))except SourceLanguageError as source_language_error:    print(source_language_error)print(transliterate(MOROCCAN_ARABIC_SENTENCE, source='ar', target='ma', universal=True))print(transliterate(MOROCCAN_ARABIC_SENTENCE, source='ma', target='ar', universal=True))``````&gt;&gt;&gt; Source alphabet language doesn't match the input text: ar&gt;&gt;&gt; ktb bl3rbya hnaya chhal ma bghyty&gt;&gt;&gt; كتب بلعربيا هنايا شحال ما بغيتي```### Get all alphabets codes```pythonfrom aaransia import get_alphabets_codesprint(len(get_alphabets_codes()))print(get_alphabets_codes())``````&gt;&gt;&gt; 70&gt;&gt;&gt; ['ar', 'af', 'sq', 'al', 'az', 'eu', 'bo', 'ca', 'co', 'hr', 'cs', 'da', 'nl', 'en', 'eo', 'et', 'tl', 'fi', 'fr', 'fs', 'gl', 'de', 'ht', 'ha', 'hw', 'hu', 'is', 'ig', 'id', 'ga', 'it', 'ki', 'ku', 'la', 'lv', 'li', 'lt', 'lu', 'ma', 'mg', 'ms', 'mt', 'mo', 'no', 'pl', 'pt', 'ro', 'sa', 'gc', 'el', 'ss', 'sh', 'sk', 'sl', 'so', 'es', 'su', 'sw', 'sv', 'tn', 'tr', 'tu', 'uz', 'vi', 'cy', 'xh', 'yo', 'zu', 'fa', 'ur']```### Get all alphabets```pythonfrom aaransia import get_alphabetsprint(get_alphabets())``````&gt;&gt;&gt; {&gt;&gt;&gt;     'af': 'Afrikaans Alphabet',&gt;&gt;&gt;     'al': 'Algerian Alphabet',&gt;&gt;&gt;     'ar': 'Arabic Alphabet',&gt;&gt;&gt;     'az': 'Azerbaijani Alphabet',&gt;&gt;&gt;     'bo': 'Bosnian Alphabet',&gt;&gt;&gt;     'ca': 'Catalan Alphabet',&gt;&gt;&gt;     'co': 'Corsican Alphabet',&gt;&gt;&gt;     'cs': 'Czech Alphabet',&gt;&gt;&gt;     'cy': 'Welsh Alphabet',&gt;&gt;&gt;     'da': 'Danish Alphabet',&gt;&gt;&gt;     'de': 'German Alphabet',&gt;&gt;&gt;     'el': 'Greek Alphabet',&gt;&gt;&gt;     'en': 'English Alphabet',&gt;&gt;&gt;     'eo': 'Esperanto Alphabet',&gt;&gt;&gt;     'es': 'Spanish Alphabet',&gt;&gt;&gt;     'et': 'Estonian Alphabet',&gt;&gt;&gt;     'eu': 'Basque Alphabet',&gt;&gt;&gt;     'fa': 'Persian Alphabet',&gt;&gt;&gt;     'fi': 'Finnish Alphabet',&gt;&gt;&gt;     'fr': 'French Alphabet',&gt;&gt;&gt;     'fs': 'Frisian Alphabet',&gt;&gt;&gt;     'ga': 'Irish Alphabet',&gt;&gt;&gt;     'gc': 'Gaelic Alphabet',&gt;&gt;&gt;     'gl': 'Galician Alphabet',&gt;&gt;&gt;     'ha': 'Hausa Alphabet',&gt;&gt;&gt;     'hr': 'Croatian Alphabet',&gt;&gt;&gt;     'ht': 'Creole Alphabet',&gt;&gt;&gt;     'hu': 'Hungarian Alphabet',&gt;&gt;&gt;     'hw': 'Hawaiian Alphabet',&gt;&gt;&gt;     'id': 'Indonesian Alphabet',&gt;&gt;&gt;     'ig': 'Igbo Alphabet',&gt;&gt;&gt;     'is': 'Icelandic Alphabet',&gt;&gt;&gt;     'it': 'Italian Alphabet',&gt;&gt;&gt;     'ki': 'Kinyarwanda Alphabet',&gt;&gt;&gt;     'ku': 'Kurdish Alphabet',&gt;&gt;&gt;     'la': 'Latin Alphabet',&gt;&gt;&gt;     'li': 'Libyan Alphabet',&gt;&gt;&gt;     'lt': 'Lithuanian Alphabet',&gt;&gt;&gt;     'lu': 'Luxembourgish Alphabet',&gt;&gt;&gt;     'lv': 'Latvian Alphabet',&gt;&gt;&gt;     'ma': 'Moroccan Alphabet',&gt;&gt;&gt;     'mg': 'Malagasy Alphabet',&gt;&gt;&gt;     'mo': 'Maori Alphabet',&gt;&gt;&gt;     'ms': 'Malay Alphabet',&gt;&gt;&gt;     'mt': 'Maltese Alphabet',&gt;&gt;&gt;     'nl': 'Dutch Alphabet',&gt;&gt;&gt;     'no': 'Norwegian Alphabet',&gt;&gt;&gt;     'pl': 'Polish Alphabet',&gt;&gt;&gt;     'pt': 'Portuguese Alphabet',&gt;&gt;&gt;     'ro': 'Romanian Alphabet',&gt;&gt;&gt;     'sa': 'Samoan Alphabet',&gt;&gt;&gt;     'sh': 'Shona Alphabet',&gt;&gt;&gt;     'sk': 'Slovak Alphabet',&gt;&gt;&gt;     'sl': 'Slovenian Alphabet',&gt;&gt;&gt;     'so': 'Somali Alphabet',&gt;&gt;&gt;     'sq': 'Albanian Alphabet',&gt;&gt;&gt;     'ss': 'Sesotho Alphabet',&gt;&gt;&gt;     'su': 'Sundanese Alphabet',&gt;&gt;&gt;     'sv': 'Swedish Alphabet',&gt;&gt;&gt;     'sw': 'Swahili Alphabet',&gt;&gt;&gt;     'tl': 'Filipino Alphabet',&gt;&gt;&gt;     'tn': 'Tunisian Alphabet',&gt;&gt;&gt;     'tr': 'Turkish Alphabet',&gt;&gt;&gt;     'tu': 'Turkmen Alphabet',&gt;&gt;&gt;     'ur': 'Urdu Alphabet',&gt;&gt;&gt;     'uz': 'Uzbek Alphabet',&gt;&gt;&gt;     'vi': 'Vietnamese Alphabet',&gt;&gt;&gt;     'xh': 'Xhosa Alphabet',&gt;&gt;&gt;     'yo': 'Yoruba Alphabet',&gt;&gt;&gt;     'zu': 'Zulu Alphabet'&gt;&gt;&gt; }```## Adding a language or a dialect1. Add it to the [alphabet](aaransia/data/alphabet.csv) CSV file2. Generate the whole alphabet with the ```construct_alphabet``` function from [data.py](aaransia/data/data.py)3. Update the [defaults.py](aaransia/defaults.py) (the order the to be respected)   1. Add the alphabet code   2. Add the alphabet name   3. Add both of them to the alphabet dictionary   4. Add the double letters if there are any4. Test a text with the language just added against all other languages in [test.py](aaransia/test.py)   1. Add a language text to test in [text_samples](aaransia/text_samples.py) (the order is to be respected)   2. Add test handling for the new language   3. Test it by using the command ```python -m unittest discover -s aaransia``` from the [3aransia](./) repository   4. Fix the bugs5. Validate it semantically and phonetically6. Make a pull request7. Wait for the PR confirmation and add your name to the collaborators## Fixing bugs and adding features- ```pylint``` code before doing a PR- Contribution can also be made through adding issues## Other related projects- [3aransia.api](https://3aransia.github.io/3aransia.api) The api of 3aransia- [3aransia.web](http://3aransia.com) The web application of 3aransia</longdescription>
</pkgmetadata>