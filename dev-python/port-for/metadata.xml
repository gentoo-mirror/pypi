<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========port-for========.. image:: https://img.shields.io/pypi/v/port-for.svg   :target: https://pypi.python.org/pypi/port-for   :alt: PyPI Version.. image:: http://codecov.io/github/kmike/port-for/coverage.svg?branch=master   :target: http://codecov.io/github/kmike/port-for?branch=master   :alt: Code Coverage``port-for`` is a command-line utility and a python library thathelps with local TCP ports management.It can find an unused TCP localhost port and remember the association::    $ sudo port-for foo    37987This can be useful when you are installing a stack of softwarewith multiple parts needing port numbers... note::    If you're looking for a temporary port then ``socket.bind((host, 0))``    is your best bet::        &gt;&gt;&gt; import socket        &gt;&gt;&gt; s = socket.socket()        &gt;&gt;&gt; s.bind((&quot;&quot;, 0))        &gt;&gt;&gt; s.getsockname()        ('0.0.0.0', 54485)    ``port-for`` is necessary when you need *persistent* free local port number.    ``port-for`` is the exact opposite of ``s.bind((host, 0))``    in the sense that it shouldn't return ports that ``s.bind((host, 0))``    may return (because such ports are likely to be temporary used by OS).There are several rules ``port-for`` is trying to follow to find andreturn a new unused port:1) Port must be unused: ``port-for`` checks this by trying to connect   to the port and to bind to it.2) Port must be IANA unassigned and otherwise not well-known:   this is acheived by maintaining unassigned ports list   (parsed from IANA and Wikipedia).3) Port shouldn't be inside ephemeral port range.   This is important because ports from ephemeral port range can   be assigned temporary by OS (e.g. by machine's IP stack) and   this may prevent service restart in some circumstances.   ``port-for`` doesn't return ports from ephemeral port ranges   configured at the current machine.4) Other heuristics are also applied: ``port-for`` tries to return   a port from larger port ranges; it also doesn't return ports that are   too close to well-known ports.Installation============System-wide using easy_install (something like ``python-setuptools``should be installed)::    sudo pip install port-foror::    sudo easy_install port-foror inside a virtualenv::    pip install port-forScript usage============``port-for &lt;foo&gt;`` script finds an unused port and associatesit with ``&lt;foo&gt;``. Subsequent calls return the same port number.This utility doesn't actually bind the port or otherwise prevents theport from being taken by another software. It tries to selecta port that is less likely to be used by another software(and that is unused at the time of calling of course). Utility also makessure that ``port-for bar`` won't return the same port as ``port-for foo``on the same machine.::    $ sudo port-for foo    37987    $ port-for foo    37987You may want to develop some naming conventions (e.g. prefix your app names)in order to enable multiple sites on the same server::    $ sudo port-for example.com/apache    35456Please note that ``port-for`` script requires read and write accessto ``/etc/port-for.conf``. This usually means regular users can readport values but sudo is required to associate a new port.List all associated ports::    $ port-for --list    foo: 37987    example.com/apache: 35456Remove an association::    $ sudo port-for --unbind foo    $ port-for --list    example.com/apache: 35456Library usage=============::    &gt;&gt;&gt; import port_for    &gt;&gt;&gt; port_for.select_random()    37774    &gt;&gt;&gt; port_for.select_random()    48324    &gt;&gt;&gt; 80 in port_for.available_good_ports()    False    &gt;&gt;&gt; port_for.get_port()    34455    &gt;&gt;&gt; port_for.get_port(&quot;1234&quot;)    1234    &gt;&gt;&gt; port_for.get_port((2000, 3000))    2345    &gt;&gt;&gt; port_for.get_port({4001, 4003, 4005})    4005    &gt;&gt;&gt; port_for.get_port([{4000, 4001}, (4100, 4200)])    4111Dig into source code for more.Contributing============Development happens at github: https://github.com/kmike/port-for/Issue tracker: https://github.com/kmike/port-for/issues/newRelease=======Install pipenv and --dev dependencies first, Then run:.. code-block::    pipenv run tbump [NEW_VERSION]</longdescription>
</pkgmetadata>