<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># RouverA microframework for Python 3, based on werkzeug.[![MIT License](https://img.shields.io/pypi/l/rouver.svg)](https://pypi.python.org/pypi/rouver/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/rouver)](https://pypi.python.org/pypi/rouver/)[![GitHub](https://img.shields.io/github/release/srittau/rouver/all.svg)](https://github.com/srittau/rouver/releases/)[![pypi](https://img.shields.io/pypi/v/rouver.svg)](https://pypi.python.org/pypi/rouver/)[![Travis CI](https://travis-ci.org/srittau/rouver.svg?branch=master)](https://travis-ci.org/srittau/rouver)## Routing```python&gt;&gt;&gt; from rouver.router import Router&gt;&gt;&gt; from rouver.response import respond_with_html, respond_with_json&gt;&gt;&gt; def get_index(environ, start_response):...     return respond_with_html(start_response, &quot;&lt;div&gt;Foo&lt;/div&gt;&quot;)&gt;&gt;&gt; def get_count(environ, start_response):...     return respond_with_json(start_response, {&quot;count&quot;: 42})&gt;&gt;&gt; router = Router()&gt;&gt;&gt; router.add_routes([...     (&quot;&quot;, &quot;GET&quot;, get_index),...     (&quot;count&quot;, &quot;GET&quot;, get_count),... ])```Routes with placeholders:```python&gt;&gt;&gt; def get_addition(environ, start_response):...     num1, num2 = path...     return response_with_json(start_response, {&quot;result&quot;: num1 + num2})&gt;&gt;&gt; def numeric_arg(request, path, value):...     return int(value)&gt;&gt;&gt; router.add_template_handler(&quot;numeric&quot;, numeric_arg)&gt;&gt;&gt; router.add_routes([...     (&quot;add/{numeric}/{numeric}&quot;, &quot;GET&quot;, get_addition),... ])```Routes with wildcards:```python&gt;&gt;&gt; def get_wildcard(environ, start_response):...     # environ[&quot;rouver.wildcard_path&quot;] contains the remaining path...     return respond(start_response)&gt;&gt;&gt; router.add_routes([...     (&quot;wild/*&quot;, &quot;GET&quot;, get_wildcard),... ])```Sub-routers:```python&gt;&gt;&gt; def get_sub(environ, start_response):...     return respond(start_response)&gt;&gt;&gt; sub_router = Router()&gt;&gt;&gt; sub_router.add_routes([...     (&quot;sub&quot;, &quot;GET&quot;, get_sub),... ])&gt;&gt;&gt; router.add_sub_router(&quot;parent&quot;, sub_router)```## Argument Handling```python&gt;&gt;&gt; from rouver.args import Multiplicity, parse_args&gt;&gt;&gt; from rouver.response import respond_with_json&gt;&gt;&gt; def get_count_with_args(request, path, start_response):...     args = parse_args(request.environ, [...         (&quot;count&quot;, int, Multiplicity.REQUIRED),...     ])...     return respond_with_json({&quot;count&quot;: args[&quot;count&quot;]})```## WSGI Testing```python&gt;&gt;&gt; from rouver.test import create_request, test_wsgi_app&gt;&gt;&gt; request = create_request(&quot;GET&quot;, &quot;/my/path&quot;)&gt;&gt;&gt; response = test_wsgi_app(app, request)&gt;&gt;&gt; response.assert_status(HTTPStatus.OK)```</longdescription>
</pkgmetadata>