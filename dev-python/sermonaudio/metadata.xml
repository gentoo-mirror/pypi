<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SermonAudio.com API Client Library==================================This is the official Python client library for accessing the latest[SermonAudio.com](http://www.sermonaudio.com/) APIs.For documentation on the SermonAudio API, head to[api.sermonaudio.com](http://api.sermonaudio.com/). Proper Python typeconversions have been made where appropriate (for example, dates are convertedto `datetime.date` objects). API functions are grouped into modules by APIfamily, just as in the main documentation (so Node API endpoint helpers arein the `node` module). Endpoint request methods are given an appropriateprefix such as `get`.Detailed documentation is included with each method. If you have any questionsabout how to use these methods, or feel the docstrings could be improved,send a message to developer@sermonaudio.com.Installation Notes------------------This library is written in Python 3.6+. Please ensure that you have the latestversion of OpenSSL installed. If you are on a Mac, you may need to use[homebrew](http://brew.sh) to install a new verison of python linked againstthe updated version via `brew install python3 --with-brewed-openssl`.Unfortunately, older versions of OpenSSL do not support TLSv1.2. Older versionshave known security holes, so our server will refuse such connections.Make sure to use the new (brewed) version of python for your virtual environment.Quickstart----------The API functions are straightforward. All API methods validate the responsefrom the server, and return a logical value from the wrapped response, or throwan exception. For example, a node that returns a single result will return onlythe first item in the results list, if one exists. Additionally, the object(s)returned are mapped to the correct type of object. Here are some code samplesto get you started.```import sermonaudiofrom sermonaudio.node import Node# You must set your API key before making any requestssermonaudio.set_api_key('YOUR-API-KEY')sermon = Node.get_sermon_info('261601260')# TODO: Something with this sermonfor sermon in Node.get_sermons(broadcaster_id='faith'):    # TODO: Something with each sermon in the list    pass```All methods have docstrings, so you can refer to this documentation as youwrite your application. We do encourage you to read the full documentationreferenced above for the most complete, up to date details.Localization------------While our localization project is still in its early stages, this clientlibrary is aware of the support. In general, it should &quot;just work&quot; if we supportyour language and key strings will be localized server-side. However, if you arerunning in an environment with a different locale than your users, you can overridethe preferred language either globally or per-request. You can override it globallyusing the top-level `set_preferred_language` function. All request methods also accept a`preferred_language_override` keyword argument so you can override this globally. Theare passed via the HTTP `Accept-Language` header, and should follow that format.For example, `en-US` for US English.</longdescription>
</pkgmetadata>