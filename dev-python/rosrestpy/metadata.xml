<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># RosRestPy[![PyPi Package Version](https://img.shields.io/pypi/v/rosrestpy)](https://pypi.org/project/rosrestpy/)[![Supported Python versions](https://img.shields.io/pypi/pyversions/rosrestpy)](https://pypi.org/project/rosrestpy/)[![LICENSE](https://img.shields.io/github/license/hexatester/rosrestpy)](https://github.com/hexatester/rosrestpy/blob/main/LICENSE)RouterOS v7 REST API python module## RouterOS v7 REST API SupportNot all types and methods of the RouterOS v7 REST API are supported, yet.Finding any bugs? Please [Create Issue](https://github.com/hexatester/rosrestpy/issues)## InstallingYou can install or upgrade rosrestpy with:```bashpip install rosrestpy --upgrade```## Example```pythonfrom ros import Ros# Initiate Ros objectros = Ros(&quot;https://192.168.88.1/&quot;, &quot;admin&quot;, &quot;&quot;)# Check cpu loadif ros.system.resource.cpu_load &gt; 90:    print(f&quot;{ros.system.identity}'s CPU &gt; 90%&quot;)# Print all interface namefor interface in ros.interface():    print(interface.name)# Finding specific queuequeues = ros.queue.simple(name=&quot;Hotspot&quot;)if len(queues) == 1:    queue = queues[0]    print(f&quot;Usage {queue.bytes}&quot;)# Adding new /simple/queuefrom ros.queue import SimpleQueuenew_queue = SimpleQueue(name=&quot;Test&quot;, target=&quot;192.168.88.0/24&quot;, max_limit=&quot;10M/10M&quot;, disabled=True)new_queue = ros.queue.simple.add(new_queue)print(new_queue)# Using /tool/bandwith-testbw_tests = ros.tool.bandwith_test(&quot;172.16.0.1&quot;, &quot;3s&quot;, &quot;admin&quot;, direction=&quot;both&quot;)result_bw_test = bw_tests[-1]print(f&quot;Download {result_bw_test.rx_total_average}&quot;)print(f&quot;Upload {result_bw_test.tx_total_average}&quot;)```## ResourcesThe [RouterOS REST API](https://help.mikrotik.com/docs/display/ROS/REST+API) is the technical reference for `rosrestpy`.## ContributingContributions of all sizes are welcome. Please review our [contribution guidelines](https://github.com/hexatester/rosrestpy/blob/main/CONTRIBUTING.md &quot;How To Contribute&quot;) to get started. You can also help by [reporting bugs or feature requests](https://github.com/hexatester/rosrestpy/issues/new/choose).## Open Source NoticeBig thanks to [attrs](https://www.attrs.org/) and [cattrs](https://catt.rs/) as the bases of rosrestpy, without them this module creation would be very tedious!</longdescription>
</pkgmetadata>