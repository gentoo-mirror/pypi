<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;&lt;i&gt;✨ pyrsync ✨ &lt;/i&gt;&lt;/h1&gt;&lt;h3 align=&quot;center&quot;&gt;The python binding for &lt;a href=&quot;https://github.com/librsync/librsync&quot;&gt;librsync&lt;/a&gt; &lt;/h3&gt;[![pypi](https://img.shields.io/pypi/v/python-rsync.svg)](https://pypi.org/project/python-rsync/)![python](https://img.shields.io/pypi/pyversions/python-rsync)![implementation](https://img.shields.io/pypi/implementation/python-rsync)![wheel](https://img.shields.io/pypi/wheel/python-rsync)![license](https://img.shields.io/github/license/synodriver/pyrsync.svg)![action](https://img.shields.io/github/workflow/status/synodriver/pyrsync/build%20wheel)## Install```bashpip install python-rsync```## Usage```pythonfrom io import BytesIOfrom pyrsync import delta, get_signature_args, signature, patchs = b&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot; * 50d = b&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot; * 50 + b&quot;2&quot;src = BytesIO(s)dst = BytesIO(d)magic, block_len, strong_len = get_signature_args(len(s))sig = BytesIO()signature(dst, sig, strong_len, magic, block_len)  # sig由dst产生dst.seek(0, 0)sig.seek(0, 0)_delta = BytesIO()delta(src, sig, _delta)  # src和sig对比产生deltasrc.seek(0, 0)_delta.seek(0, 0)out = BytesIO()patch(dst, _delta, out)assert out.getvalue() ==  src.getvalue()```## Public functions```pythonfrom typing import IOclass LibrsyncError(Exception):    code: Any    def __init__(self, result) -&gt; None: ...RS_JOB_BLOCKSIZE: intRS_DELTA_MAGIC: intRS_MD4_SIG_MAGIC: intRS_BLAKE2_SIG_MAGIC: intRS_RK_MD4_SIG_MAGIC: intRS_RK_BLAKE2_SIG_MAGIC: intdef get_signature_args(old_fsize: int, magic: int = 0, block_len: int = 0, strong_len: int = 0) -&gt; tuple: ...def signature(input:IO, output:IO, strong_len: int, sig_magic: int, block_size: int = ...) -&gt; None: ...def delta(input:IO, sigfile:IO, output) -&gt; None: ...def patch(input:IO, delta:IO, output) -&gt; None: ...```### Compile```python -m pip install setuptools wheel cython cffigit clone https://github.com/synodriver/pyrsynccd pyrsyncgit submodule update --init --recursivepython setup.py bdist_wheel --use-cython --use-cffi```### Backend ChooseUse ```RSYNC_USE_CFFI``` env var to use cffi backend, otherwise it's depend on your python implementation.</longdescription>
</pkgmetadata>