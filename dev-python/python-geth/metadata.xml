<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HELP NEEDED...with my dissertation. It is only 11 questions. As this package is part of my thesis it would be much appreciated if you spent afew moments on filling out these [11 anonymous questions](https://forms.office.com/Pages/ResponsePage.aspx?id=KVxybjp2UE-B8i4lTwEzyCwPEuOy1S1OrnjnPHZzTHxURE5WNFNYV1BYTEFTSzVJVVdFREM4RFBOWC4u). Thanks! # PyGethPyGeth is a Python library for a quick setup of an Ethereum blockchain using Geth and for fast prototyping of contracts with truffle.## Installation### PrerequisitesTo be able to run this package, please install [Geth](https://geth.ethereum.org/downloads/) and [Npm (5.2.0 or higher)](https://nodejs.org/en/) and add them to your Path. **Note:** This has solely been tested on Windows.Use the package manager [pip](https://pip.pypa.io/en/stable/) to install *python-geth*.&lt;br&gt;```bashpip install python-geth```## Usage### Node```pythonfrom python_geth.node import Nodenode1 = Node(datadir=&quot;C:\\Users\\macutko\\Desktop\\node01&quot;)node1.start_node()```This creates a geth node that allows interaction with it via the web3 library.```pythonnode1.w3.geth.miner.start(1)``` To add a node on the chain do as follows. It requires the same genesis file.```pythonnode2 = Node(datadir=&quot;C:\\Users\\macutko\\Desktop\\node02&quot;, genesis_file=&quot;C:\\Users\\macutko\\Desktop\\node01\\config\\genesisjson&quot;)node2.start_node()node1.add_node(node2.w3.geth.admin.node_info()['enode'])```### ContractsTo be able to quickly deploy contracts and interact with them first configure truffle.```pythonnode1.configure_truffle()```To deploy a contract unlock an account, create a Contract Interface instance and deploy a contract. highly recommended to wrap deployment into a tryand accept block. This is to prevent zombie processes.```pythonaccount, password = node1.get_first_account()node1.w3.geth.personal.unlock_account(account, password)CI = ContractInterface(w3=node1.w3, datadir=&quot;C:\\Users\\macutko\\Desktop\\node01&quot;)try:    m_con = CI.deploy_contract(contract_file=&quot;C:\\Users\\macutko\\Desktop\\GUID.sol&quot;,constructor_params=['2265072m'])[0]except:    node1.stop_node()```### Example ContractExample contract:```soliditypragma solidity ^0.4.24;contract HelloWorld {    string saySomething;    constructor() public  {        saySomething = &quot;Hello World!&quot;;    }    function speak() public constant returns(string itSays) {        return saySomething;    }    function saySomethingElse(string newSaying) public  returns(bool success) {        saySomething = newSaying;        return true;    }}```After deploying, to get the saySomething variable. ```pythonprint(m_con.functions.speack.call())```And to set a new message.```pythontx_hash = m_con.functions.saySomethingElse(&quot;Not Hello World&quot;).transact()tx_receipt = CI.w3.eth.waitForTransactionReceipt(tx_hash)```## Pipeline- BUG: Fix the start of an already created node- TEST:Connection from different device  ## ContributingPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.Please make sure to update tests as appropriate.## License[MIT](https://choosealicense.com/licenses/mit/)</longdescription>
</pkgmetadata>