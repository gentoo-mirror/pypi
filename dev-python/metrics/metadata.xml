<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|License| |GitHub issues|metrics=======The original idea of metrics was a platform that can be extended withmany different metrics. At the time I will focus only on SLOC and McCabecomplexity metrics. *metrics* is build in a way to support many, manylanguages `supported languages &lt;http://pygments.org/languages/&gt;`__.Currently we test support for Python, C, C++, Go and JavaScript.The SLOC metric counts the lines but excludes empty lines and comments.This is sometimes referred to as the *source lines of code* (SLOC). Inliterature this is often also referred as physical lines of code. Isimplified it to something which to my understanding is the commondenominator for the metric packages I looked into (CCCC, SLOCCount,PyMetrics, Eclipse-Metrics, Ohcount).installation============**metrics** is released as a Python package so you can apply the std.Python mechanism for installation:.. code:: bash    $ pip install metricsSome plugins are available to collect information from a typicaldevelopment environment. If you have a similar environment you caninstall them as well in one go:.. code:: bash    $ pip install metrics metrics.bumpversion metrics.gitinfo metrics.pylint metrics.pytest-covSample use==========Get an overview on a package (number of files, used languages, andmetrics):.. code:: bash    $ metrics **/*    Metrics Summary:    Files                       Language        SLOC Comment McCabe     ----- ------------------------------ ----------- ------- ------         6                              C          14       3      0         3                            C++        1114     236    108         1                            INI           5       0      0         2                           Java          27       8      1         3                     JavaScript        1453      54    169         1                       markdown           7       0      0        18                         Python        1038     425    238        11                      Text only           0       0      0     ----- ------------------------------ ----------- ------- ------        45                          Total        3658     726    516 Note how you can use glob file pattern or a list of files…Usage help:.. code:: bash    $ metrics --help    Options:      --version             show program's version number and exit      -h, --help            show this help message and exit      -f IN_FILE_LIST, --files=IN_FILE_LIST                            File containing list of path names to modules for                            analysis.      -q, --quiet           suppress normal summary output to stdout. (Default is                            False)      --format=OUTPUT_FORMAT_STR                            Choose an output format for a parser to read. Valid                            choices: xml, csv, jsonGet a detailed report:.. code:: bash    $ metrics -q --format=csv metrics/metrics.py    filename,sloc,comments,ratio_comment_to_code,mccabe,language    metrics/metrics.py,21,14,0.67,1,PythonSame detailed report but output to csv file:.. code:: bash    $ metrics -q --format=csv metrics/metrics.py &gt; output.csvPlugins for metrics===================Some plugins are available to collect information from a typicaldevelopment environment. Please visit the plugin page for details:-  `version from   .bumpversion.cfg &lt;https://github.com/markfink/metrics.bumpversion&gt;`__-  `Git changes, commiters,   … &lt;https://github.com/markfink/metrics.gitinfo&gt;`__-  `Pylint lint score &lt;https://github.com/markfink/metrics.pylint&gt;`__-  `test coverage &lt;https://github.com/markfink/metrics.pytest-cov&gt;`__Sample “.metrics” file results (with plugins installed).. code:: json    {        &quot;build&quot;: {            &quot;active_branch&quot;: &quot;master&quot;,            &quot;committed_datetime&quot;: &quot;2018-04-28T12:19:14+02:00&quot;,            &quot;committed_ts&quot;: 1524910754,            &quot;committers&quot;: [                &quot;mark&quot;            ],            &quot;origin&quot;: &quot;git@github.com:markfink/metrics.gitinfo.git&quot;,            &quot;sha&quot;: &quot;4c355c2f6ffef88252e565f6ef5006468e410187&quot;,            &quot;sha_start&quot;: &quot;f7ba6f27ee8c34991acd3cd6ef14c8bd6ed9c34e&quot;,            &quot;summary&quot;: &quot;Bump version: 0.0.4 \u2192 0.0.5&quot;,            &quot;version&quot;: &quot;0.0.5&quot;        },        &quot;files&quot;: {            &quot;metrics_gitinfo/__init__.py&quot;: {                &quot;age_days&quot;: 25.81871527777778,                &quot;block_positions&quot;: [],                &quot;change_frequency&quot;: 6,                &quot;comments&quot;: 1,                &quot;committers_count&quot;: 1,                &quot;language&quot;: &quot;Python&quot;,                &quot;lines_added&quot;: [                    3                ],                &quot;lines_deleted&quot;: [                    3                ],                &quot;mccabe&quot;: 0,                &quot;pylint_score&quot;: 5.0,                &quot;ratio_comment_to_code&quot;: 0.5,                &quot;sloc&quot;: 2,                &quot;test_coverage&quot;: 0.0,                &quot;test_missing&quot;: &quot;2-3&quot;            },            &quot;metrics_gitinfo/file_info.py&quot;: {                &quot;age_days&quot;: 0.01931712962962963,                &quot;block_positions&quot;: [                    {                        &quot;end&quot;: 17,                        &quot;name&quot;: &quot;get_file_info&quot;,                        &quot;start&quot;: 5,                        &quot;type&quot;: &quot;Function&quot;                    }                ],                &quot;change_frequency&quot;: 1,                &quot;comments&quot;: 4,                &quot;committers_count&quot;: 1,                &quot;language&quot;: &quot;Python&quot;,                &quot;mccabe&quot;: 1,                &quot;pylint_score&quot;: 10.0,                &quot;ratio_comment_to_code&quot;: 0.44,                &quot;sloc&quot;: 9,                &quot;test_coverage&quot;: 0.0,                &quot;test_missing&quot;: &quot;2-17&quot;            },            &quot;metrics_gitinfo/git_diff_muncher.py&quot;: {                &quot;age_days&quot;: 24.06056712962963,                &quot;block_positions&quot;: [                    {                        &quot;end&quot;: 17,                        &quot;name&quot;: &quot;GitDiffError&quot;,                        &quot;start&quot;: 10,                        &quot;type&quot;: &quot;Class&quot;                    },                    {                        &quot;end&quot;: 81,                        &quot;name&quot;: &quot;parse_diff_lines&quot;,                        &quot;start&quot;: 18,                        &quot;type&quot;: &quot;Function&quot;                    },                    {                        &quot;end&quot;: 111,                        &quot;name&quot;: &quot;_parse_hunk_line&quot;,                        &quot;start&quot;: 82,                        &quot;type&quot;: &quot;Function&quot;                    }                ],                &quot;change_frequency&quot;: 1,                &quot;comments&quot;: 50,                &quot;committers_count&quot;: 1,                &quot;language&quot;: &quot;Python&quot;,                &quot;mccabe&quot;: 15,                &quot;pylint_score&quot;: 9.56,                &quot;ratio_comment_to_code&quot;: 1.02,                &quot;sloc&quot;: 49,                &quot;test_coverage&quot;: 0.0,                &quot;test_missing&quot;: &quot;2-129&quot;            },            &quot;metrics_gitinfo/gitinfo.py&quot;: {                &quot;age_days&quot;: 25.81871527777778,                &quot;block_positions&quot;: [                    {                        &quot;end&quot;: 17,                        &quot;name&quot;: &quot;get_file_processors&quot;,                        &quot;start&quot;: 13,                        &quot;type&quot;: &quot;Function&quot;                    },                    {                        &quot;end&quot;: 22,                        &quot;name&quot;: &quot;get_build_processors&quot;,                        &quot;start&quot;: 18,                        &quot;type&quot;: &quot;Function&quot;                    },                    {                        &quot;end&quot;: 113,                        &quot;methods&quot;: [                            {                                &quot;end&quot;: 35,                                &quot;name&quot;: &quot;_get_commits_contained&quot;,                                &quot;start&quot;: 31,                                &quot;type&quot;: &quot;Function&quot;                            },                            {                                &quot;end&quot;: 41,                                &quot;name&quot;: &quot;_get_source_target&quot;,                                &quot;start&quot;: 36,                                &quot;type&quot;: &quot;Function&quot;                            },                            {                                &quot;end&quot;: 56,                                &quot;name&quot;: &quot;_extract_info&quot;,                                &quot;start&quot;: 52,                                &quot;type&quot;: &quot;Function&quot;                            },                            {                                &quot;end&quot;: 88,                                &quot;name&quot;: &quot;reset&quot;,                                &quot;start&quot;: 84,                                &quot;type&quot;: &quot;Function&quot;                            },                            {                                &quot;end&quot;: 105,                                &quot;name&quot;: &quot;process_file&quot;,                                &quot;start&quot;: 89,                                &quot;type&quot;: &quot;Function&quot;                            },                            {                                &quot;end&quot;: 108,                                &quot;name&quot;: &quot;get_metrics&quot;,                                &quot;start&quot;: 106,                                &quot;type&quot;: &quot;Function&quot;                            },                            {                                &quot;end&quot;: 113,                                &quot;name&quot;: &quot;get_build_metrics&quot;,                                &quot;start&quot;: 109,                                &quot;type&quot;: &quot;Function&quot;                            }                        ],                        &quot;name&quot;: &quot;GitMetric&quot;,                        &quot;start&quot;: 23,                        &quot;type&quot;: &quot;Class&quot;                    }                ],                &quot;change_frequency&quot;: 7,                &quot;comments&quot;: 9,                &quot;committers_count&quot;: 1,                &quot;language&quot;: &quot;Python&quot;,                &quot;lines_added&quot;: [                    96                ],                &quot;lines_deleted&quot;: [                    66,                    94,                    97                ],                &quot;mccabe&quot;: 8,                &quot;pylint_score&quot;: 9.06,                &quot;ratio_comment_to_code&quot;: 0.11,                &quot;sloc&quot;: 83,                &quot;test_coverage&quot;: 0.0,                &quot;test_missing&quot;: &quot;2-113&quot;            },            &quot;tests/__init__.py&quot;: {                &quot;age_days&quot;: 24.099988425925925,                &quot;block_positions&quot;: [                    {                        &quot;end&quot;: 10,                        &quot;name&quot;: &quot;here&quot;,                        &quot;start&quot;: 9,                        &quot;type&quot;: &quot;Function&quot;                    }                ],                &quot;change_frequency&quot;: 1,                &quot;comments&quot;: 1,                &quot;committers_count&quot;: 1,                &quot;language&quot;: &quot;Python&quot;,                &quot;mccabe&quot;: 0,                &quot;pylint_score&quot;: 3.33,                &quot;ratio_comment_to_code&quot;: 0.17,                &quot;sloc&quot;: 6,                &quot;test_coverage&quot;: 83.33,                &quot;test_missing&quot;: &quot;10&quot;            },            &quot;tests/test_metrics_gitinfo.py&quot;: {                &quot;age_days&quot;: 22.091909722222223,                &quot;block_positions&quot;: [                    {                        &quot;end&quot;: 19,                        &quot;name&quot;: &quot;tempfolder&quot;,                        &quot;start&quot;: 11,                        &quot;type&quot;: &quot;Function&quot;                    },                    {                        &quot;end&quot;: 29,                        &quot;name&quot;: &quot;test_metrics_gitinfo_no_git_repo&quot;,                        &quot;start&quot;: 20,                        &quot;type&quot;: &quot;Function&quot;                    },                    {                        &quot;end&quot;: 39,                        &quot;name&quot;: &quot;test_metrics_gitinfo&quot;,                        &quot;start&quot;: 30,                        &quot;type&quot;: &quot;Function&quot;                    },                    {                        &quot;end&quot;: 47,                        &quot;name&quot;: &quot;test_metrics_gitinfo_no_lastrun&quot;,                        &quot;start&quot;: 40,                        &quot;type&quot;: &quot;Function&quot;                    }                ],                &quot;change_frequency&quot;: 1,                &quot;comments&quot;: 2,                &quot;committers_count&quot;: 1,                &quot;language&quot;: &quot;Python&quot;,                &quot;mccabe&quot;: 6,                &quot;pylint_score&quot;: 4.64,                &quot;ratio_comment_to_code&quot;: 0.07,                &quot;sloc&quot;: 29,                &quot;test_coverage&quot;: 100.0            }        }    }Acknowledgements================-  codebase originally based on grop.py by Jurgen Hermann (2001)-  also based on PyMetrics by Reg. Charney to do Python complexity   measurements (2007)-  we use some sample programming language files for the test cases from   Ohcount and FirefoxLicense=======Copyright (c) 2017, 2018 Fink Labs GmbH and others. metrics is releasedunder the MIT License (see MIT_LICENSE)... |License| image:: http://img.shields.io/badge/license-MIT-yellowgreen.svg   :target: MIT_LICENSE.. |GitHub issues| image:: https://img.shields.io/github/issues/finklabs/metrics.svg?maxAge=2592000   :target: https://github.com/finklabs/metrics/issues</longdescription>
</pkgmetadata>