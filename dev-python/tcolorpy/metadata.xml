<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. contents:: **tcolorpy**   :backlinks: top   :depth: 2Summary============================================tcolopy is a Python library to apply true color for terminal text... image:: https://badge.fury.io/py/tcolorpy.svg    :target: https://badge.fury.io/py/tcolorpy    :alt: PyPI package version.. image:: https://anaconda.org/conda-forge/tcolorpy/badges/version.svg    :target: https://anaconda.org/conda-forge/tcolorpy    :alt: conda-forge package version.. image:: https://img.shields.io/pypi/pyversions/tcolorpy.svg    :target: https://pypi.org/project/tcolorpy    :alt: Supported Python versions.. image:: https://img.shields.io/pypi/implementation/tcolorpy.svg    :target: https://pypi.org/project/tcolorpy    :alt: Supported Python implementations.. image:: https://github.com/thombashi/tcolorpy/workflows/Tests/badge.svg    :target: https://github.com/thombashi/tcolorpy/actions?query=workflow%3ATests    :alt: Linux/macOS/Windows CI status.. image:: https://coveralls.io/repos/github/thombashi/tcolorpy/badge.svg?branch=master    :target: https://coveralls.io/github/thombashi/tcolorpy?branch=master    :alt: Test coverage: coverallsInstallation============================================Installation: pip------------------------------::    pip install tcolorpyInstallation: conda------------------------------::    conda install -c conda-forge tcolorpyUsage============================================Library usage--------------------------------------------:Sample Code:    .. code-block:: python        from tcolorpy import tcolor        print(tcolor(&quot;tcolopy example&quot;, color=&quot;#ee1177&quot;, styles=[&quot;bold&quot;, &quot;italic&quot;, &quot;underline&quot;])):Output:    .. figure:: https://cdn.jsdelivr.net/gh/thombashi/tcolorpy@master/ss/oneline.png        :scale: 60%        :alt: https://github.com/thombashi/tcolorpy/blob/master/ss/oneline.pngYou can set the following ``tcolor`` arguments:- ``color``/``bg_color``    - color names (``&quot;red&quot;``, ``&quot;green&quot;``, etc.) or color code (``&quot;#RRGGBB&quot;``)- ``styles``    - ``&quot;bold&quot;``, ``&quot;italic&quot;``, etc.Other examples~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Apply true color and styles to text:.. figure:: https://cdn.jsdelivr.net/gh/thombashi/tcolorpy@master/ss/styles.png    :scale: 60%    :alt: https://github.com/thombashi/tcolorpy/blob/master/ss/styles.png    `example source code &lt;https://github.com/thombashi/tcolorpy/blob/master/examples/ansi_styles.py&gt;`__You can also specify colors by name:.. figure:: https://cdn.jsdelivr.net/gh/thombashi/tcolorpy@master/ss/ansi_colors.png    :scale: 60%    :alt: https://github.com/thombashi/tcolorpy/blob/master/ss/ansi_colors.png    `example source code &lt;https://github.com/thombashi/tcolorpy/blob/master/examples/ansi_colors.py&gt;`__CLI usage--------------------------------------------``tcolorpy`` can be used via CLI:::    $ python3 -m tcolorpy &quot;tcolopy example&quot; -c &quot;#ee1177&quot; -s bold,italic,underlineCommand help~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~::    usage: __main__.py [-h] [-c COLOR] [-b BG_COLOR] [-s STYLES] [--encode ENCODE] string    positional arguments:      string                string to apply styles.    options:      -h, --help            show this help message and exit      -c COLOR, --color COLOR                            specify a color code (#XXXXXX) or a name. valid names are: black, red, green, yellow, blue, magenta, cyan, white, lightblack, lightred, lightgreen, lightyellow, lightblue, lightmagenta, lightcyan, lightwhite      -b BG_COLOR, --bg-color BG_COLOR                            specify a background color code (#XXXXXX) or a name. valid names are: black, red, green, yellow, blue, magenta, cyan, white, lightblack, lightred, lightgreen, lightyellow, lightblue, lightmagenta, lightcyan, lightwhite      -s STYLES, --styles STYLES                            specify a comma-separated style. valid values are: bold, dim, italic, underline, blink, invert, strike      --encode ENCODE       output a text encoded with the specified encodingDependencies============================================Python 3.7+no external dependencies.</longdescription>
</pkgmetadata>