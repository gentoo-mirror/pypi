<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># VeilCord.&lt;img src=&quot;https://img.shields.io/pypi/v/veilcord?style=for-the-badge&amp;logo=python&quot;&gt;&lt;a href=&quot;https://github.com/imvast&quot; target=&quot;_blank&quot;&gt;    &lt;img alt=&quot;followers&quot; src=&quot;https://img.shields.io/github/followers/imvast?color=f429ff&amp;style=for-the-badge&amp;logo=github&amp;label=Follow&quot;/&gt;&lt;/a&gt;```less                &gt; Custom Discord Tools Going To Be Used For My Projects                      And Available To Anyone Else Who Wants To Use &lt;```---### Installation```yaml! package NOT FULLY available for commercial usage !pip install veilcord```### Example Usages```pyfrom veilcord import VeilCordveilcord = VeilCord(    session = None, # for custom tls_client sessions    device_type = &quot;browser&quot;, # types : browser, mobile, app (aka desktop)    user_agent = None # for custom user agent)``````py# GETTING X-Super-Propertiesxsup = veilcord.generateXProp()print(f&quot;(+) Retrieved XSup: {xsup}&quot;)``````py# GETTING ALL THE COOKIES AND FINGERPRINTfp, cookies = veilcord.getFingerprint(    xsup,     withCookies = True, # true or false -- will return cookies that are returned in the expirements req    cookieType = &quot;json&quot; # if withCookies is true this can be either &quot;json&quot; or &quot;cookiejar&quot;  -- by default its cookiejar)print(f&quot;(+) Retrieved Fingerprint: {fp}&quot;)print(f&quot;(+) Retrieved Cookies: {cookies}&quot;)# returns a tuple.  [0] - Fingerprint  |  [1] - COOKIESJAR or JSON``````py# GET THE NEW SESSION ID BS  || this can also be used for websocket connection scroll down to see examplesessionID = veilcord.getSession(    token = &quot;&quot;,)print(f&quot;(+) Got Session ID: {sessionID}&quot;)``````py## Getting Discord build numberbuildNum = VeilCord.getBuildNum()print(buildNum)# -- or with all the extra statsbuildNum, buildTS, url = VeilCord.getBuildNum(withStat=True)print(&quot;URL:&quot;, url)print(&quot;Build Number:&quot;, buildNum)print(&quot;Build Timestamp:&quot;, buildTS)```#### Custom Sessions```pysession = veilcord.openSession(    custom_rpc = {        &quot;status&quot;: &quot;online&quot;,        &quot;since&quot;: 0,        &quot;activities&quot;: [{            &quot;name&quot;: &quot;Custom Status&quot;,            &quot;type&quot;: 4,            &quot;state&quot;: &quot;vast#1337&quot;,            &quot;emoji&quot;: &quot;&quot;        }],        &quot;afk&quot;: False    })veilcord.getSession(    token = &quot;&quot;, # obv the token    session = session, # the session returned from veilcord.openSession()  (if u are using keepAlive)    keep_alive = True,  # keep the session alive until closed with veilcord.closeSession()    show_hb = True # prints when it sends the heartbeat and when the next one is)# close the session, if keepAlive is enabled.veilcord.closeSession(session)```---## * [imvast@discord](https://discord.com/users/1118654675898617891) | [imvast@github](https://github.com/imvast) | [vast.sh](https://vast.sh) *</longdescription>
</pkgmetadata>