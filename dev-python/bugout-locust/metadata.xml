<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># &lt;img src=&quot;./img/locust-black.svg&quot; height=&quot;20&quot; width=&quot;20&quot;/&gt; locust&quot;It's `git diff --stat` on steroids!&quot; - [@scottmilliken](https://gitlab.com/scottmilliken)## What is Locust?Locust helps you reason about your code base as it evolves over time.Locust provides a semantic layer on top of `git diff`. It emits metadata describing[AST](https://en.wikipedia.org/wiki/Abstract_syntax_tree)-level changes to yourcode base between git revisions.This metadata is useful to both humans and computers. For example:1. (Humans) Locust can generate   [much more humane summaries of changes](https://github.com/bugout-dev/locust/pull/34) than the   standard git diff.2. (Computers) [Bugout.dev](https://alpha.bugout.dev) uses Locust metadata to learn high level   abstractions about code.## InstallationLocust requires Python3 (specifically, it was written in Python3.8).### Install from PyPI```bashpip install -U setuptoolspip install bugout-locust```### Install from sourceClone this repository and run from the project root:```bashpython setup.py install```### DockerYou can also use the Locust docker image:```bashdocker pull bugout/locust```## Usage### CLILocust is a command line tool, and you can invoke it as:```bashlocust 22dd7fd6adf392bb29d13d10f10e7dbb1d97bfce c9813bd5871a9919551ccd917712135c40367c5c --format yaml```This produces the following output:```yamllocust:  - file: locust/ci_helpers/github.py    changes:      - name: generate_argument_parser        type: function        line: 11        changed_lines: 9        total_lines: 9        children: []      - name: helper_push        type: function        line: 22        changed_lines: 13        total_lines: 13        children: []      - name: helper_pr        type: function        line: 37        changed_lines: 14        total_lines: 14        children: []      - name: main        type: function        line: 53        changed_lines: 29        total_lines: 29        children: []refs:  initial: 22dd7fd  terminal: c9813bd```### Language pluginsTo use Locust to process a code base containing Python (&gt;3.5) and Javascript, use the Javascriptplugin (written in Node 14).If you are running Locust from the root of this project, you would do this as follows:```locust -r &lt;path to repo&gt; &lt;initial revision&gt; &lt;terminal revision&gt; --plugins &quot;node js/out/index.js&quot;```A Locust language plugin is simply a program that you can invoke from the shell (like`node js/out/index.js`) which takes two arguments:- `-i` - an input file containing a `locust.git.RunResponse` object- `-o` - path to an output file into which it writes a list of tuples consisting of  `locust.git.PatchInfo` objects and their corresponding list of `locust.parse.RawDefinition`  objects.The [Javascript plugin](./js/) provides a rubric for how to build your own plugin.You can add custom plugins to a Locust invocation like this:```locust -r &lt;path to repo&gt; &lt;initial revision&gt; &lt;terminal revision&gt; \  --plugins &quot;node js/out/index.js&quot; &quot;&lt;custom plugin invocation 1&gt;&quot; &quot;&lt;custom plugin invocation 2&gt;&quot;```### CI/CDLocust is easy to use in CI/CD pipelines:- [Locust GitHub Action](https://github.com/simiotics/locust-action)### Bugout App integrationYou can use Locust with our [Bugout GitHub Bot](https://github.com/bugout-dev/github-demo).Locust extension will work after you push `./github/workflows/locust.yml` file in `main` branch:```yamlname: Locust summaryon: [pull_request_target]jobs:  build:    runs-on: ubuntu-20.04    steps:      - name: PR head repo        id: head_repo_name        run: |          HEAD_REPO_NAME=$(jq -r '.pull_request.head.repo.full_name' &quot;$GITHUB_EVENT_PATH&quot;)          echo &quot;PR head repo: $HEAD_REPO_NAME&quot;          echo &quot;::set-output name=repo::$HEAD_REPO_NAME&quot;      - name: Checkout git repo        uses: actions/checkout@v2        with:          repository: ${{ steps.head_repo_name.outputs.repo }}          fetch-depth: 0      - name: Install python        uses: actions/setup-python@v2        with:          python-version: &quot;3.8&quot;      - name: Install dependencies        run: |          python -m pip install --upgrade pip setuptools          pip install bugout-locust      - name: Generate and send Locust summary        env:          BUGOUT_SECRET: ${{ secrets.BUGOUT_SECRET }}        run: |          locust.github publish```BUGOUT_SECRET should be setted up in repository/organization secrets. Value you can take from Bugout Account token page. Also `BUGOUT_API_URL: ${{ secrets.BUGOUT_API_URL }}` could be specified if you want to setup your personal server for processing locust summaries.### DockerTo run Locust using docker:```bashdocker run -v $ABSOLUTE_PATH_TO_GIT_REPO:/usr/src/app bugout/locust -r /usr/src/app \    $INITIAL_REVISION \    $TERMINAL_REVISION \    --format yaml```## Output formatsLocust can produce output in many formats. The currently supported formats are:1. JSON (`--format json`)2. YAML (`--format yaml`)3. HTML (`--format html`)4. GitHub-flavored HTML, meant to be used with GitHub styles (`--format html-github`)## Contributing### Running testsMake sure to clone [simiotics/locust-test-cases](https://github.com/simiotics/locust-test-cases)repo to your machine.Run:```bashgit -c &lt;path to locust-test-cases repo&gt; fetch origin```Then, from the root of this repo:```bashLOCUST_TESTCASES_DIR=&lt;path to locust-test-cases repo&gt; ./test.sh```## Similar projects### Kythe[Kythe](https://kythe.io) is a Google open source project. It grew out of the need to semanticallylink different parts of Google's code base.The goals of Locust are different from those of Kythe. Locust is specifically about generatingmetadata describing _changes_ to code.Kythe on GitHub: https://github.com/kythe/kythe</longdescription>
</pkgmetadata>