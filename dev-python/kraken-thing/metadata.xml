<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># kraken datatype## OverviewLibrary to extract, validate and normalize datatypes. datatypes:- email- url- date- country- address- telephone- bool- currency- domain## githubhttps://github.com/tactik8/krakcn_class_thing_v4## pypihttps://pypi.org/project/kraken-thing/## classes:- Thing: representation of a schema.org thing- Things: a collection of Thing- Observation: Data points making up a thing## How to use:### Basics```from kraken_thing.kraken_class_thing.kraken_class_thing import Thingfrom kraken_thing import Thingt = Thing()t.url = 'https://www.test.com'print(t.url)print(t.record)```### MetadataMetadata can be provided in json record using @metadata```{     &quot;@type&quot;: &quot;person&quot;,    &quot;@id&quot;: &quot;abc123&quot;,    &quot;name&quot;: &quot;Bob Smith&quot;,    &quot;@metadata&quot;: {        &quot;measuredPropertyContext&quot;: &quot;&quot;,        &quot;language&quot;: &quot;EN&quot;,        &quot;observationCredibility&quot;: 0.5,        &quot;observationDate&quot;: &quot;2023-03-01&quot;,        &quot;validFrom&quot;: &quot;2023-03-01&quot;,        &quot;validThrough&quot;: &quot;&quot;,        &quot;observationAbout&quot;: &quot;&quot;,        &quot;source&quot;: {                    &quot;@type&quot;: &quot;WebAPI&quot;,                    &quot;url&quot;: &quot;https://someapi.com&quot;,                    &quot;name&quot;: &quot;data scraper&quot;                    },        &quot;instrument&quot;: &quot;&quot;,        &quot;agent&quot;: &quot;&quot;    }}```### HTMLthing.html.xxx return html formats of the thingprint(thing.html.__doc__) for full list- record() : returns dict with enhanced values (link, etc)- full() : Returns a 2 column table with key / values- card() : returns a card- media() : returns the media (video or pic)- video() : returns video- image() : returns image- link () : returns link with internal value- record_ref(): returns link with record_ref### Using api```# Set url for the api (only has to do it once)t = Thing()t.set_api_url('https://api_url.com')# Save record tp apit = Thing('test', 'abc1234')t.url = 'https://www.test.com't.api_post()# Load record from apit.api_get()print(t)```## Attributes## Methods</longdescription>
</pkgmetadata>