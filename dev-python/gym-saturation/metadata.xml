<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>..  Copyright 2021-2023 Boris Shminke  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  you may not use this file except in compliance with the License.  You may obtain a copy of the License at      https://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.|PyPI version|\ |Anaconda|\ |CircleCI|\ |Documentation Status|\ |codecov|\ |JOSS|gym-saturation==============``gym-saturation`` is a collection of `Gymnasium&lt;https://gymnasium.farama.org/&gt;`__ environments for reinforcement learning(RL) agents striving to prove theorems. Currently, only theoremswritten in `TPTP library &lt;https://tptp.org&gt;`__ formal language aresupported.There are two environments in ``gym-saturation`` following the same API: `SaturationEnv &lt;https://gym-saturation.readthedocs.io/en/latest/environments/saturation-env.html&gt;`__: ``VampireEnv`` is a wrapper around a recent `Vampire&lt;https://github.com/vprover/vampire&gt;`__ prover, and ``IProverEnv``relies on a stable version of `iProver&lt;https://gitlab.com/korovin/iprover/&gt;`__.In contrast to monolithic architecture of a typical Automated TheoremProver (ATP), ``gym-saturation`` gives different agents opportunitiesto select clauses themselves and train from their experience.Combined with a particular agent, ``gym-saturation`` can work as anATP.``gym-saturation`` can be interesting for RL practitioners willing toapply their experience to theorem proving without coding all thelogic-related stuff themselves. It also can be useful for automateddeduction researchers who want to create an RL-empowered ATP.How to Install==============.. attention:: If you want to use ``VampireEnv`` you should have a   Vampire binary on your machine. For example, download the   latest `release   &lt;https://github.com/vprover/vampire/releases/tag/v4.7&gt;`__.   To use ``IProverEnv``, please download a stable iProver    `release   &lt;https://gitlab.com/inpefess/iprover/-/releases/2023.04.10&gt;`__ or build it from `this commit &lt;https://gitlab.com/korovin/iprover/-/commit/9504e78f60262c394b564678201cb7d2f8a4bbea&gt;`__.The best way to install this package is to use ``pip``:.. code:: sh   pip install gym-saturationAnother option is to use ``conda``:.. code:: sh   conda install -c conda-forge gym-saturation   One can also run it in a Docker container (pre-packed with``vampire`` and ``iproveropt`` binaries):.. code:: sh   docker build -t gym-saturation https://github.com/inpefess/gym-saturation.git   docker run -it --rm -p 8888:8888 gym-saturation jupyter-lab --ip=0.0.0.0 --port=8888How to use==========One can use ``gym-saturation`` environments as any other Gymnasium environment:.. code:: python  import gym_saturation  import gymnasium  env = gymnasium.make(&quot;Vampire-v0&quot;)  # or &quot;iProver-v0&quot;  # skip this line to use the default problem  env.set_task(&quot;a-TPTP-problem-filename&quot;)  observation, info = env.reset()  terminated, truncated = False, False  while not (terminated or truncated):      # apply policy (a valid random action here)      action = env.action_space.sample(mask=observation[&quot;action_mask&quot;])      observation, reward, terminated, truncated, info = env.step(action)  env.close()Or have a look at the basic `tutorial &lt;https://gym-saturation.readthedocs.io/en/latest/auto_examples/plot_age_agent.html&gt;`__.  For a bit more comprehensive experiments, please navigate the documentation `page &lt;https://gym-saturation.readthedocs.io/en/latest/tutorials/experiments.html&gt;`__.How to Contribute=================`Pull requests &lt;https://github.com/inpefess/gym-saturation/pulls&gt;`__ arewelcome. To start:.. code:: sh   git clone https://github.com/inpefess/gym-saturation   cd gym-saturation   # activate python virtual environment with Python 3.8+   pip install -U pip   pip install -U setuptools wheel poetry   poetry install   # recommended but not necessary   pre-commit install   # install Vampire binary   wget https://github.com/vprover/vampire/releases/download/v4.7/vampire4.7.zip -O vampire.zip   unzip vampire.zip   # then use vampire_z3_rel_static_HEAD_6295 as an argument or add it to $PATH   # install iProver binary   wget https://gitlab.com/api/v4/projects/39846772/jobs/artifacts/2023.04.10/download?job=build-job -O iprover.zip   unzip iprover.zip   # then use iproveroptAll the tests in this package are`doctests &lt;https://docs.python.org/3/library/doctest.html&gt;`__. One canrun them with the following command:.. code:: sh   pytest --doctest-modules gym-saturationTo check the code quality before creating a pull request, one might runthe script ``local-build.sh``. It locally does nearly the same as the CIpipeline after the PR is created.Reporting issues or problems with the software==============================================Questions and bug reports are welcome on `thetracker &lt;https://github.com/inpefess/gym-saturation/issues&gt;`__.More documentation==================More documentation can be found`here &lt;https://gym-saturation.readthedocs.io/en/latest&gt;`__... |PyPI version| image:: https://badge.fury.io/py/gym-saturation.svg   :target: https://badge.fury.io/py/gym-saturation.. |CircleCI| image:: https://circleci.com/gh/inpefess/gym-saturation.svg?style=svg   :target: https://circleci.com/gh/inpefess/gym-saturation.. |Documentation Status| image:: https://readthedocs.org/projects/gym-saturation/badge/?version=latest   :target: https://gym-saturation.readthedocs.io/en/latest/?badge=latest.. |codecov| image:: https://codecov.io/gh/inpefess/gym-saturation/branch/master/graph/badge.svg   :target: https://codecov.io/gh/inpefess/gym-saturation.. |JOSS| image:: https://joss.theoj.org/papers/c4f36ec7331a0dde54d8c3808fbff9c3/status.svg   :target: https://joss.theoj.org/papers/c4f36ec7331a0dde54d8c3808fbff9c3.. |Anaconda| image:: https://anaconda.org/conda-forge/gym-saturation/badges/version.svg   :target: https://anaconda.org/conda-forge/gym-saturation</longdescription>
</pkgmetadata>