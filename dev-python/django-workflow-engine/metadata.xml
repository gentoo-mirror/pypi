<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-workflow-engine`django-workflow` is a lightweight and reusable workflow engine for Django applications. It enables you to better organise the business logic for collaborating users.## Installation    pip install django-workflow-engine## Getting startedAdd the application to your Django settings `INSTALLED_APPS` list:```pythonINSTALLED_APPS = [    ...    &quot;django_workflow_engine&quot;,]```Add the built-in `django-workflow-engine` view urls to your project's `urls.py` as follows:```pythonfrom django_workflow_engine import workflow_urls...urlpatterns = [    path(&quot;workflow/&quot;, workflow_urls()),    ...]```This will utilise all `django-workflow-engine` built-in view classes. Default views are:- `list_view=FlowListView` List of workflow instances view.- `view=FlowView` Workflow instance view.- `create_view=FlowCreateView` Create workflow view.- `continue_view=FlowContinueView` Workflow continuation view.- `diagram_view=FlowDiagramView` Workflow diagram view.You can override any the built-in view classes with your own, for example toprovide your own view classes for flow list and flow view:```pythonurlpatterns = [        path(&quot;workflow/&quot;,              workflow_urls(                 list_view=MyFlowListView,                 view=MyFlowView,            ),        ),    ]```## Building your first workflowCreate a `workflows.py` in your project and add your uniquely named workflows.```pythonfrom django_workflow_engine import Step, Workflowonboard_contractor = Workflow(    name=&quot;onboard_contractor&quot;,    steps=[        Step(...),        Step(...),        Step(...),    ],)onboard_perm = Workflow(    name=&quot;onboard_perm&quot;,    steps=[        ...    ],)```Add you workflows to your Django settings as follows:```pythonDJANGO_WORKFLOWS = {    &quot;onboard_contractor&quot;: &quot;your_app.workflows.onboard_contractor&quot;,    &quot;onboard_perm&quot;: &quot;your_app.workflows.onboard_perm&quot;,}```Each entry needs to be a valid module path where the final component is the name of your workflow class.  Finally, run the `django-workflow-engine` migrations:```bash$ ./manage.py migrate```## Publishing1. `python setup.py sdist`2. `twine upload dist/*`## Dependencies## Settings## Running tests</longdescription>
</pkgmetadata>