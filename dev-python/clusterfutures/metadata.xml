<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Cluster Futures===============This module provides a Python `concurrent.futures`_ executor that lets you runfunctions on remote systems in your `HTCondor`_ or `Slurm`_ cluster. Stop worryingabout writing job files, scattering/gathering, and serialization---this moduledoes it all for you.It uses the `cloudpickle`_ library to allow (most) closures to be usedtransparently, so you're not limited to &quot;pure&quot; functions.Installation::    pip install clusterfuturesUsage:.. code-block:: python    import cfut    def square(n):        return n * n    with cfut.SlurmExecutor() as executor:        for result in executor.map(square, [5, 7, 11]):            print(result)See `slurm_example.py`_ and `condor_example.py`_ for further examples.The easiest way to get started is toignore the fact that futures are being used at all and just use the provided``map`` function, which behaves like `itertools.imap`_ but transparentlydistributes your work across the cluster.Goals &amp; design--------------*clusterfutures* is a simple wrapper to run Python functions in batch jobs onan HPC cluster. Each future corresponds to one batch job. The functionsthat you run through clusterfutures should normally run for at least a fewseconds each: running smaller functions will be inefficient because of theoverhead of launching jobs and moving data.Functions, parameters and return values are sent by creating files; this assumesthat the control process and the worker nodes have a shared filesystem.This mechanism is convenient for relatively small amounts of data; it's probablynot the best way to transfer large amounts of data to &amp; from workers... _concurrent.futures:    https://docs.python.org/3/library/concurrent.futures.html.. _HTCondor: https://research.cs.wisc.edu/htcondor/.. _cloudpickle: https://github.com/cloudpipe/cloudpickle.. _itertools.imap: https://docs.python.org/3/library/itertools.html#itertools.imap.. _Slurm: https://slurm.schedmd.com/.. _slurm_example.py: https://github.com/sampsyo/clusterfutures/blob/master/slurm_example.py.. _condor_example.py: https://github.com/sampsyo/clusterfutures/blob/master/condor_example.py</longdescription>
</pkgmetadata>