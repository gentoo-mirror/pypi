<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Documentation for test_server package[![Test Status](https://github.com/lorien/test_server/actions/workflows/test.yml/badge.svg)](https://github.com/lorien/test_server/actions/workflows/test.yml)[![Code Quality](https://github.com/lorien/test_server/actions/workflows/check.yml/badge.svg)](https://github.com/lorien/test_server/actions/workflows/test.yml)[![Type Check](https://github.com/lorien/test_server/actions/workflows/mypy.yml/badge.svg)](https://github.com/lorien/test_server/actions/workflows/mypy.yml)[![Test Coverage Status](https://coveralls.io/repos/github/lorien/test_server/badge.svg)](https://coveralls.io/github/lorien/test_server)[![Documentation Status](https://readthedocs.org/projects/test_server/badge/?version=latest)](http://user-agent.readthedocs.org)Simple HTTP Server for testing HTTP clients.## InstallationRun `pip install -U test_server`## Usage Example```pythonfrom unittest import TestCaseimport unittestfrom urllib.request import urlopenfrom test_server import TestServer, Response, HttpHeaderStorageclass UrllibTestCase(TestCase):   @classmethod   def setUpClass(cls):       cls.server = TestServer()       cls.server.start()   @classmethod   def tearDownClass(cls):       cls.server.stop()   def setUp(self):       self.server.reset()   def test_get(self):       self.server.add_response(           Response(               data=b&quot;hello&quot;,               headers={&quot;foo&quot;: &quot;bar&quot;},           )       )       self.server.add_response(Response(data=b&quot;zzz&quot;))       url = self.server.get_url()       info = urlopen(url)       self.assertEqual(b&quot;hello&quot;, info.read())       self.assertEqual(&quot;bar&quot;, info.headers[&quot;foo&quot;])       info = urlopen(url)       self.assertEqual(b&quot;zzz&quot;, info.read())       self.assertTrue(&quot;bar&quot; not in info.headers)   unittest.main()```</longdescription>
</pkgmetadata>