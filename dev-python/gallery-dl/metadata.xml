<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==========gallery-dl==========*gallery-dl* is a command-line programto download image galleries and collectionsfrom several image hosting sites(see `Supported Sites &lt;https://github.com/mikf/gallery-dl/blob/master/docs/supportedsites.md&gt;`__).It is a cross-platform toolwith many `configuration options &lt;https://github.com/mikf/gallery-dl/blob/master/docs/configuration.rst&gt;`__and powerful `filenaming capabilities &lt;https://github.com/mikf/gallery-dl/blob/master/docs/formatting.md&gt;`__.|pypi| |build|.. contents::Dependencies============- Python_ 3.4+- Requests_Optional--------- FFmpeg_: Pixiv Ugoira conversion- yt-dlp_ or youtube-dl_: Video downloads- PySocks_: SOCKS proxy support- brotli_ or brotlicffi_: Brotli compression supportInstallation============Pip---The stable releases of *gallery-dl* are distributed on PyPI_ and can beeasily installed or upgraded using pip_:.. code:: bash    python3 -m pip install -U gallery-dlInstalling the latest dev version directly from GitHub can be done withpip_ as well:.. code:: bash    python3 -m pip install -U -I --no-deps --no-cache-dir https://github.com/mikf/gallery-dl/archive/master.tar.gzNote: Windows users should use :code:`py -3` instead of :code:`python3`.It is advised to use the latest version of pip_,including the essential packages :code:`setuptools` and :code:`wheel`.To ensure these packages are up-to-date, run.. code:: bash    python3 -m pip install --upgrade pip setuptools wheelStandalone Executable---------------------Prebuilt executable files with a Python interpreter andrequired Python packages included are available for- `Windows &lt;https://github.com/mikf/gallery-dl/releases/download/v1.25.2/gallery-dl.exe&gt;`__  (Requires `Microsoft Visual C++ Redistributable Package (x86) &lt;https://aka.ms/vs/17/release/vc_redist.x86.exe&gt;`__)- `Linux   &lt;https://github.com/mikf/gallery-dl/releases/download/v1.25.2/gallery-dl.bin&gt;`__Nightly Builds--------------| Executables build from the latest commit can be found at| https://github.com/mikf/gallery-dl/actions/workflows/executables.ymlSnap----Linux users that are using a distro that is supported by Snapd_ can install *gallery-dl* from the Snap Store:.. code:: bash    snap install gallery-dlChocolatey----------Windows users that have Chocolatey_ installed can install *gallery-dl* from the Chocolatey Community Packages repository:.. code:: powershell    choco install gallery-dlScoop-----*gallery-dl* is also available in the Scoop_ &quot;main&quot; bucket for Windows users:.. code:: powershell    scoop install gallery-dlHomebrew--------For macOS or Linux users using Homebrew:.. code:: bash    brew install gallery-dlUsage=====To use *gallery-dl* simply call it with the URLs you wish to download imagesfrom:.. code:: bash    gallery-dl [OPTIONS]... URLS...Use :code:`gallery-dl --help` or see `&lt;https://github.com/mikf/gallery-dl/blob/master/docs/options.md&gt;`__for a full list of all command-line options.Examples--------Download images; in this case from danbooru via tag search for 'bonocho':.. code:: bash    gallery-dl &quot;https://danbooru.donmai.us/posts?tags=bonocho&quot;Get the direct URL of an image from a site supporting authentication with username &amp; password:.. code:: bash    gallery-dl -g -u &quot;&lt;username&gt;&quot; -p &quot;&lt;password&gt;&quot; &quot;https://twitter.com/i/web/status/604341487988576256&quot;Filter manga chapters by chapter number and language:.. code:: bash    gallery-dl --chapter-filter &quot;10 &lt;= chapter &lt; 20&quot; -o &quot;lang=fr&quot; &quot;https://mangadex.org/title/59793dd0-a2d8-41a2-9758-8197287a8539&quot;| Search a remote resource for URLs and download images from them:| (URLs for which no extractor can be found will be silently ignored).. code:: bash    gallery-dl &quot;r:https://pastebin.com/raw/FLwrCYsT&quot;If a site's address is nonstandard for its extractor, you can prefix the URL with theextractor's name to force the use of a specific extractor:.. code:: bash    gallery-dl &quot;tumblr:https://sometumblrblog.example&quot;Configuration=============Configuration files for *gallery-dl* use a JSON-based file format.Documentation-------------A list of all available configuration options and their descriptionscan be found in `&lt;https://github.com/mikf/gallery-dl/blob/master/docs/configuration.rst&gt;`__.| For a default configuration file with available options set to their  default values, see `&lt;https://github.com/mikf/gallery-dl/blob/master/docs/gallery-dl.conf&gt;`__.| For a commented example with more involved settings and option usage,  see `&lt;https://github.com/mikf/gallery-dl/blob/master/docs/gallery-dl-example.conf&gt;`__.Locations---------*gallery-dl* searches for configuration files in the following places:Windows:    * ``%APPDATA%\gallery-dl\config.json``    * ``%USERPROFILE%\gallery-dl\config.json``    * ``%USERPROFILE%\gallery-dl.conf``    (``%USERPROFILE%`` usually refers to a user's home directory,    i.e. ``C:\Users\&lt;username&gt;\``)Linux, macOS, etc.:    * ``/etc/gallery-dl.conf``    * ``${XDG_CONFIG_HOME}/gallery-dl/config.json``    * ``${HOME}/.config/gallery-dl/config.json``    * ``${HOME}/.gallery-dl.conf``When run as `executable &lt;Standalone Executable_&gt;`__,*gallery-dl* will also look for a ``gallery-dl.conf`` filein the same directory as said executable.It is possible to use more than one configuration file at a time.In this case, any values from files after the first will get mergedinto the already loaded settings and potentially override previous ones.Authentication==============Username &amp; Password-------------------Some extractors require you to provide valid login credentials in the form ofa username &amp; password pair. This is necessary for``nijie``and optional for``aryion``,``danbooru``,``e621``,``exhentai``,``idolcomplex``,``imgbb``,``inkbunny``,``mangadex``,``mangoxo``,``pillowfort``,``sankaku``,``subscribestar``,``tapas``,``tsumino``,``twitter``,and ``zerochan``.You can set the necessary information in your`configuration file &lt;Configuration_&gt;`__.. code:: json    {        &quot;extractor&quot;: {            &quot;twitter&quot;: {                &quot;username&quot;: &quot;&lt;username&gt;&quot;,                &quot;password&quot;: &quot;&lt;password&gt;&quot;            }        }    }or you can provide them directly via the:code:`-u/--username` and :code:`-p/--password` or via the:code:`-o/--option` command-line options.. code:: bash    gallery-dl -u &quot;&lt;username&gt;&quot; -p &quot;&lt;password&gt;&quot; &quot;URL&quot;    gallery-dl -o &quot;username=&lt;username&gt;&quot; -o &quot;password=&lt;password&gt;&quot; &quot;URL&quot;Cookies-------For sites where login with username &amp; password is not possible due toCAPTCHA or similar, or has not been implemented yet, you can use thecookies from a browser login session and input them into *gallery-dl*.This can be done via the`cookies &lt;https://github.com/mikf/gallery-dl/blob/master/docs/configuration.rst#extractorcookies&gt;`__option in your configuration file by specifying- | the path to a Mozilla/Netscape format cookies.txt file exported by a browser addon  | (e.g. `Get cookies.txt LOCALLY &lt;https://chrome.google.com/webstore/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc&gt;`__ for Chrome,    `Export Cookies &lt;https://addons.mozilla.org/en-US/firefox/addon/export-cookies-txt/&gt;`__ for Firefox)- | a list of name-value pairs gathered from your browser's web developer tools  | (in `Chrome &lt;https://developers.google.com/web/tools/chrome-devtools/storage/cookies&gt;`__,     in `Firefox &lt;https://developer.mozilla.org/en-US/docs/Tools/Storage_Inspector&gt;`__)- | the name of a browser to extract cookies from  | (supported browsers are Chromium-based ones, Firefox, and Safari)For example:.. code:: json    {        &quot;extractor&quot;: {            &quot;instagram&quot;: {                &quot;cookies&quot;: &quot;$HOME/path/to/cookies.txt&quot;            },            &quot;patreon&quot;: {                &quot;cookies&quot;: {                    &quot;session_id&quot;: &quot;K1T57EKu19TR49C51CDjOJoXNQLF7VbdVOiBrC9ye0a&quot;                }            },            &quot;twitter&quot;: {                &quot;cookies&quot;: [&quot;firefox&quot;]            }        }    }| You can also specify a cookies.txt file with  the :code:`--cookies` command-line option| or a browser to extract cookies from with :code:`--cookies-from-browser`:.. code:: bash    gallery-dl --cookies &quot;$HOME/path/to/cookies.txt&quot; &quot;URL&quot;    gallery-dl --cookies-from-browser firefox &quot;URL&quot;OAuth-----*gallery-dl* supports user authentication via OAuth_ for some extractors.This is necessary for``pixiv``and optional for``deviantart``,``flickr``,``reddit``,``smugmug``,``tumblr``,and ``mastodon`` instances.Linking your account to *gallery-dl* grants it the ability to issue requestson your account's behalf and enables it to access resources which wouldotherwise be unavailable to a public user.To do so, start by invoking it with ``oauth:&lt;sitename&gt;`` as an argument.For example:.. code:: bash    gallery-dl oauth:flickrYou will be sent to the site's authorization page and asked to grant readaccess to *gallery-dl*. Authorize it and you will be shown one or more&quot;tokens&quot;, which should be added to your configuration file.To authenticate with a ``mastodon`` instance, run *gallery-dl* with``oauth:mastodon:&lt;instance&gt;`` as argument. For example:.. code:: bash    gallery-dl oauth:mastodon:pawoo.net    gallery-dl oauth:mastodon:https://mastodon.social/.. _Python:     https://www.python.org/downloads/.. _PyPI:       https://pypi.org/.. _pip:        https://pip.pypa.io/en/stable/.. _Requests:   https://requests.readthedocs.io/en/master/.. _FFmpeg:     https://www.ffmpeg.org/.. _yt-dlp:     https://github.com/yt-dlp/yt-dlp.. _youtube-dl: https://ytdl-org.github.io/youtube-dl/.. _PySocks:    https://pypi.org/project/PySocks/.. _brotli:     https://github.com/google/brotli.. _brotlicffi: https://github.com/python-hyper/brotlicffi.. _Snapd:      https://docs.snapcraft.io/installing-snapd.. _OAuth:      https://en.wikipedia.org/wiki/OAuth.. _Chocolatey: https://chocolatey.org/install.. _Scoop:      https://scoop.sh.. |pypi| image:: https://img.shields.io/pypi/v/gallery-dl.svg    :target: https://pypi.org/project/gallery-dl/.. |build| image:: https://github.com/mikf/gallery-dl/workflows/tests/badge.svg    :target: https://github.com/mikf/gallery-dl/actions.. |gitter| image:: https://badges.gitter.im/gallery-dl/main.svg    :target: https://gitter.im/gallery-dl/main</longdescription>
</pkgmetadata>