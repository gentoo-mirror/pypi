<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># tricky - that's about python.This module is simply a collection of useful code, utilities, and functions to simplify your work with the language and the tasks you solve.## Collection:1. Iterables module `tricky.iterables`2. Typing `tricky.typing` (wip)## Examples:### Iterables1. Example of **iterables.filter_item** ```python from tricky.iterables import filter_item  numbers = range(1000) result: int = filter_item(     numbers,  # the iterable     lambda number: number == 342,  # condition to get your item     None,  # the default value to return, if condition not met ) print(result) # 342 ```### Typing1. An example of a simple use of a **TypedList**:```pythonfrom tricky.typing import TypedListnumbers = TypedList[int](1, 2, 3, 4, 5)assert isinstance(numbers, (list, TypedList))  # True```But if an element with a different type is passed to the list, an exception will be thrown:```pythonfrom tricky.typing import TypedListnumbers = TypedList[int](1, 2, 3, 'string', 5)# ValueError: Passed item &quot;string&quot; of sequence has type &lt;class 'str'&gt;, but annotated type is &lt;class 'int'&gt;```2. An example of a simple use of a **AnnotatedString**```pythonfrom tricky.typing import AnnotatedStringexpecting_value = 'example'annotated_string = AnnotatedString['example'](expecting_value)assert isinstance(AnnotatedString['example'](expecting_value), (str, AnnotatedString))```But if the annotated value does not match the one passed, an exception will be thrown```pythonfrom tricky.typing import AnnotatedStringbad_value = 'bad_value'annotated_string = AnnotatedString['example'](bad_value)# ValueError: Annotated and passed values are not equal 'bad_value' != 'example'```</longdescription>
</pkgmetadata>