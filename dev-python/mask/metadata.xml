<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;#readme&quot;&gt;        &lt;img alt=&quot;Mask logo&quot; src=&quot;https://mask.readthedocs.io/en/latest/_images/logo.png&quot;&gt;    &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://travis-ci.com/github/Eastwu5788/Mask&quot;&gt;&lt;img alt=&quot;Travis&quot; src=&quot;https://travis-ci.com/Eastwu5788/Mask.svg?branch=master&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://coveralls.io/github/Eastwu5788/Mask&quot;&gt;&lt;img alt=&quot;Coveralls&quot; src=&quot;https://coveralls.io/repos/github/Eastwu5788/Mask/badge.svg?branch=master&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/Eastwu5788/Mask/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/Eastwu5788/Mask?color=brightgr&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://mask.readthedocs.io/en/latest&quot;&gt;&lt;img alt=&quot;Docs&quot; src=&quot;https://readthedocs.org/projects/mask/badge/?version=latest&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/Mask/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/Mask?color=brightgreen&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://gitter.im/mask-cn/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&quot;&gt;&lt;img alt=&quot;IM&quot; src=&quot;https://badges.gitter.im/pre-request/community.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;## MaskA gRpc server just like `Flask`.### Install`Mask` support pypi packages, you can simply install by:```pip install mask```### Document`Mask` manual could be found at:  https://mask.readthedocs.io/en/latest### A Simple ExampleThis is very easy to use `Mask` in your project.```from mask import Maskfrom mask.parse import pre, Ruleapp = Mask(__name__)rule = {    &quot;name&quot;: Rule(type=str, gte=2, dest=&quot;Name&quot;)}@app.route(method=&quot;SayHello&quot;, service=&quot;Hello&quot;)def say_hello(request, context):    &quot;&quot;&quot; Handler SayHello request    &quot;&quot;&quot;    params = pre.parse(rule=rule, request=request, context=context)    return HelloResponse(message=&quot;Hello Reply: %s&quot; % params[&quot;Name&quot;])if __name__ == &quot;__main__&quot;:    app.run(host=&quot;0.0.0.0&quot;, port=1020)```### Service`Mask` support `Service` to organize a group of route which is likely with `Blueprint` in `Flask`.```    # 3p    from mask import Mask, Service    from mask.parse import pre, Rule    # project    from examples.protos.hello_pb2 import HelloResponse    app = Mask(__name__)    app.config[&quot;REFLECTION&quot;] = True    # Bind service to application    service = Service(name=&quot;Hello&quot;)    app.register_service(service)    rule = {        &quot;name&quot;: Rule(type=str, gte=2, dest=&quot;Name&quot;)    }    # Service route    @service.route(method=&quot;SayHello&quot;)    def say_hello_handler(request, context):        &quot;&quot;&quot; Handler SayHello request        &quot;&quot;&quot;        params = pre.parse(rule=rule, request=request, context=context)        return HelloResponse(message=&quot;Hello Reply: %s&quot; % params[&quot;Name&quot;])    if __name__ == &quot;__main__&quot;:        app.run(host=&quot;0.0.0.0&quot;, port=1020)```### Middleware `Mask` support middleware to hook before request and after request.```# 3pfrom mask import Mask# projectfrom examples.protos.hello_pb2 import HelloResponseapp = Mask(__name__)app.config[&quot;REFLECTION&quot;] = Truedef before_request(request, context):    print(request.name)def after_request(response):    print(response.message)app.before_request(before_request)app.after_request(after_request)@app.route(method=&quot;SayHello&quot;, service=&quot;Hello&quot;)def say_hello_handler(request, context):    &quot;&quot;&quot; Handler SayHello request    &quot;&quot;&quot;    return HelloResponse(message=&quot;Hello Reply: %s&quot; % request.name)if __name__ == &quot;__main__&quot;:    app.run(host=&quot;0.0.0.0&quot;, port=1020)```### CoffeePlease give me a cup of coffee, thank you!BTC: 1657DRJUyfMyz41pdJfpeoNpz23ghMLVM3ETH: 0xb098600a9a4572a4894dce31471c46f1f290b087### Links* Documentaion: https://mask.readthedocs.io/en/latest* Release: https://github.com/Eastwu5788/Mask/releases* Code: https://github.com/Eastwu5788/Mask* Issue tracker: https://github.com/Eastwu5788/Mask/issues* Test status: https://coveralls.io/github/Eastwu5788/Mask</longdescription>
</pkgmetadata>