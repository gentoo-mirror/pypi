<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a name=&quot;librelingo_utils&quot;&gt;&lt;/a&gt;# librelingo\_utilslibrelingo-utils contains utility functions that are meant to make it easierto create Python software that works with LibreLingo courses.&lt;a name=&quot;librelingo_utils.utils&quot;&gt;&lt;/a&gt;# librelingo\_utils.utils&lt;a name=&quot;librelingo_utils.utils.calculate_number_of_levels&quot;&gt;&lt;/a&gt;#### calculate\_number\_of\_levels```pythoncalculate_number_of_levels(nwords: int, nphrases: int) -&gt; int```Calculates how many levels a skill should have&lt;a name=&quot;librelingo_utils.utils.get_words_from_phrase&quot;&gt;&lt;/a&gt;#### get\_words\_from\_phrase```pythonget_words_from_phrase(phrase)```Splits a phrase into its component words/terms. Note that this respectsgrouping with curly braces, i.e. sets of words surrounded by curly braces will notbe split from each other.&lt;a name=&quot;librelingo_utils.utils.remove_control_characters_for_display&quot;&gt;&lt;/a&gt;#### remove\_control\_characters\_for\_display```pythonremove_control_characters_for_display(phrase)```Removes characters with special LibreLingo functions from a phrase before itis displayed to the user.At the moment, this only applies to curly brackets used to group severalwords into a single mini-dictionary term.&lt;a name=&quot;librelingo_utils.utils.clean_word&quot;&gt;&lt;/a&gt;#### clean\_word```python@lru_cache(maxsize=None)clean_word(word: Word)```Remove punctuation and other special characters from a word.&lt;a name=&quot;librelingo_utils.utils.get_dumb_opaque_id&quot;&gt;&lt;/a&gt;#### get\_dumb\_opaque\_id```pythonget_dumb_opaque_id(name: str, id_, salt: str = &quot;&quot;) -&gt; str```Generate a unique, opaque ID based on a name, and id_ and a saltid&lt;a name=&quot;librelingo_utils.utils.get_opaque_id&quot;&gt;&lt;/a&gt;#### get\_opaque\_id```pythonget_opaque_id(obj, salt: str = &quot;&quot;) -&gt; str```Generate a unique, opaque ID based on a salt and the type of the objectid&lt;a name=&quot;librelingo_utils.utils.audio_id&quot;&gt;&lt;/a&gt;#### audio\_id```pythonaudio_id(language: Language, text: str) -&gt; str```Generate the ID that will identify the audio file of a sentence.&lt;a name=&quot;librelingo_utils.utils.iterate_phrases&quot;&gt;&lt;/a&gt;#### iterate\_phrases```pythoniterate_phrases(course: Course)```&quot;Flatten&quot; a course into a sequence of phrases&lt;a name=&quot;librelingo_utils.utils.iterate_words&quot;&gt;&lt;/a&gt;#### iterate\_words```pythoniterate_words(course: Course)```&quot;Flatten&quot; a course into a sequence of words</longdescription>
</pkgmetadata>