<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pybaum======.. start-badges.. image:: https://img.shields.io/pypi/v/pybaum?color=blue    :alt: PyPI    :target: https://pypi.org/project/pybaum.. image:: https://img.shields.io/pypi/pyversions/pybaum    :alt: PyPI - Python Version    :target: https://pypi.org/project/pybaum.. image:: https://img.shields.io/conda/vn/conda-forge/pybaum.svg    :target: https://anaconda.org/conda-forge/pybaum.. image:: https://img.shields.io/conda/pn/conda-forge/pybaum.svg    :target: https://anaconda.org/conda-forge/pybaum.. image:: https://img.shields.io/pypi/l/pybaum    :alt: PyPI - License    :target: https://pypi.org/project/pybaum.. image:: https://readthedocs.org/projects/pybaum/badge/?version=latest    :target: https://pybaum.readthedocs.io/en/latest.. image:: https://img.shields.io/github/workflow/status/OpenSourceEconomics/pybaum/main/main   :target: https://github.com/OpenSourceEconomics/pybaum/actions?query=branch%3Amain.. image:: https://codecov.io/gh/OpenSourceEconomics/pybaum/branch/main/graph/badge.svg    :target: https://codecov.io/gh/OpenSourceEconomics/pybaum.. image:: https://results.pre-commit.ci/badge/github/OpenSourceEconomics/pybaum/main.svg    :target: https://results.pre-commit.ci/latest/github/OpenSourceEconomics/pybaum/main    :alt: pre-commit.ci status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black.. end-badgesInstallation------------pybaum is available on `PyPI &lt;https://pypi.org/project/pybaum&gt;`_ and `Anaconda.org&lt;https://anaconda.org/conda-forge/pybaum&gt;`_. Install it with.. code-block:: console    $ pip install pybaum    # or    $ conda install -c conda-forge pybaumAbout-----pybaum provides tools to work with pytrees which is a concept borrowed from `JAX&lt;https://jax.readthedocs.io/en/latest/&gt;`_.What is a pytree?In pybaum, we use the term pytree to refer to a tree-like structure built out ofcontainer-like Python objects. Classes are considered container-like if they are in thepytree registry, which by default includes lists, tuples, and dicts. That is:1. Any object whose type is not in the pytree container registry is considered a leaf   pytree.2. Any object whose type is in the pytree container registry, and which contains   pytrees, is considered a pytree.For each entry in the pytree container registry, a container-like type is registeredwith a pair of functions that specify how to convert an instance of the container typeto a (children, metadata) pair and how to convert such a pair back to an instance of thecontainer type. Using these functions, pybaum can canonicalize any tree of registeredcontainer objects into tuples.Example pytrees:.. code-block:: python    [1, &quot;a&quot;, object()]  # 3 leaves    (1, (2, 3), ())  # 3 leaves    [1, {&quot;k1&quot;: 2, &quot;k2&quot;: (3, 4)}, 5]  # 5 leavespybaum can be extended to consider other container types as pytrees.</longdescription>
</pkgmetadata>