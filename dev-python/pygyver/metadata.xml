<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyGyver&gt; PyGyver is a user-friendly python package for data integration and manipulation.&gt; Named after MacGyver, title character in the TV series MacGyver, and Python, the main language used in the repository.## Installation### PyPiPyGyver is available on [PyPi](https://pypi.org/project/pygyver/).```python pip install pygyver```### SetupMost APIs requires access token files to authentificate and perform tasks such as creating or deleting objects. Those files need to be generated prior to using `pygyver` and stored in the environment you are executing your code against. The package make use of environment variables, and some of the below might need be supplied in your environment:```# Access token pathGOOGLE_APPLICATION_CREDENTIALS=path_to_google_access_token.jsonFACEBOOK_APPLICATION_CREDENTIALS=path_to_facebook_access_token.json# Default valuesBIGQUERY_PROJECT=your-gcs-projectGCS_PROJECT=your-gcs-projectGCS_BUCKET=your-gcs-bucket# OptionalPROJECT_ROOT=path_to_where_your_code_lives```## ModulesPyGyver is structured around several modules available in the `etl` folder. Here is a summary table of those modules:| Module name | Descrition | Documentation || ------------- |-------------|-------------|| `dw` | Perform task against the Google Cloud BigQuery API | [dw.md](docs/dw.md) || `facebook` | Perform task against the Facebook Marketing API | [facebook.md](docs/facebook.md) || `gooddata` | Perform task against the GoodData API | - || `gs` | Perform task against the Google Sheet API | - || `lib` | Store utilities used by other modules | - || `pipeline` | Utility to build data pipelines via YAML definition | [pipeline.md](docs/pipeline.md) || `prep` | Data transformation - ML pipelines | - || `storage` | Perform task against the AWS S3 and Google Cloud Storage API | [storage.md](docs/storage.md) || `toolkit` | Sets of tools for data manipulation | - |In order to load `BigQueryExecutor` from the `dw` module, you can run:```from pygyver.etl.dw import BigQueryExecutor```## Contributing&gt; To get started...### Step 1- ðŸ‘¯ Clone this repo to your local machine using `git@github.com:madedotcom/pygyver.git`### Step 2- **HACK AWAY!** ðŸ”¨ðŸ”¨ðŸ”¨The team follows TDD to develop new features on `pygyver`.Tests can be found in `pygyver/tests`.### Step 3- ðŸ”ƒ Create a new pull request and request review from team members. Where applicable, a test should be added with the code change.## FAQ- **How to release a new version to PyPi?**    1. Merge your changes to `master` branch    2. Create a new release using `https://github.com/madedotcom/pygyver/releases`</longdescription>
</pkgmetadata>