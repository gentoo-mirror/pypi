<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![npm version](https://badge.fury.io/js/@pahud%2Fcdktf-aws-ecs.svg)](https://badge.fury.io/js/@pahud%2Fcdktf-aws-ecs)[![PyPI version](https://badge.fury.io/py/pahud-cdktf-aws-ecs.svg)](https://badge.fury.io/py/pahud-cdktf-aws-ecs)[![release](https://github.com/pahud/cdktf-aws-ecs/actions/workflows/release.yml/badge.svg)](https://github.com/pahud/cdktf-aws-ecs/actions/workflows/release.yml)[![construct hub](https://img.shields.io/badge/Construct%20Hub-available-blue)](https://constructs.dev/packages/@pahud/cdktf-aws-ecs)# cdktf-aws-ecsCDKTF construct library for Amazon ECS.## UsageThe following sample creates:1. A new VPC2. Amazon ECS cluster3. Autoscaling Group capacity provider4. Autoscaling Group with Launch Template```python# Example automatically generated from non-compiling source. May contain errors.from pahud.cdktf_aws_ecs import Cluster# create the clustercluster = Cluster(stack, &quot;EcsCluster&quot;)# create the ASG capacity with capacity providercluster.add_asg_capacity(&quot;ASGCapacity&quot;,    max_capacity=10,    min_capacity=0,    desired_capacity=2)```## Existing VPC subnetsTo deploy in any existing VPC, specify the `vpcSubnets`.```python# Example automatically generated from non-compiling source. May contain errors.cluster.add_asg_capacity(&quot;ASGCapacity&quot;,    vpc_subnets=[&quot;subnet-111&quot;, &quot;subnet-222&quot;, &quot;subnet-333&quot;])```## Bottlerocket supportTo create cluster capacity with Bottlerocket machine image:```python# Example automatically generated from non-compiling source. May contain errors.cluster.add_asg_capacity(&quot;BRCapacity&quot;,    machine_image=BottleRocketImage(stack))```</longdescription>
</pkgmetadata>