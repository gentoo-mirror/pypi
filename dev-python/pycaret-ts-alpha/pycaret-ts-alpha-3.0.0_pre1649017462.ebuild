# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="3.0.0.dev1649017462"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="PyCaret - An open source, low-code machine learning library in Python."

HOMEPAGE="https://github.com/pycaret/pycaret"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="analysis full mlops models nlp tuners"
DEPENDENCIES=">=dev-python/ipython-5.5.0[${PYTHON_USEDEP}]
	~dev-python/numpy-1.21[${PYTHON_USEDEP}]
	<dev-python/pandas-1.5.0[${PYTHON_USEDEP}]
	~dev-python/scipy-1.7.3[${PYTHON_USEDEP}]
	~dev-python/joblib-1.0.1[${PYTHON_USEDEP}]
	>=dev-python/scikit-learn-1.0.2[${PYTHON_USEDEP}]
	dev-python/pyod[${PYTHON_USEDEP}]
	dev-python/imbalanced-learn[${PYTHON_USEDEP}]
	dev-python/category-encoders[${PYTHON_USEDEP}]
	dev-python/lightgbm[${PYTHON_USEDEP}]
	dev-python/numba[${PYTHON_USEDEP}]
	>=dev-python/matplotlib-3.3.0[${PYTHON_USEDEP}]
	dev-python/scikit-plot[${PYTHON_USEDEP}]
	dev-python/yellowbrick[${PYTHON_USEDEP}]
	>=dev-python/plotly-5.0.0[${PYTHON_USEDEP}]
	dev-python/kaleido[${PYTHON_USEDEP}]
	>=dev-python/statsmodels-0.12.1[${PYTHON_USEDEP}]
	dev-python/sktime[${PYTHON_USEDEP}]
	dev-python/tbats[${PYTHON_USEDEP}]
	dev-python/pmdarima[${PYTHON_USEDEP}]
	analysis? ( dev-python/shap[${PYTHON_USEDEP}] )
	analysis? ( dev-python/interpret[${PYTHON_USEDEP}] )
	analysis? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	analysis? ( >=dev-python/ipywidgets-7.6.5[${PYTHON_USEDEP}] )
	analysis? ( dev-python/pandas-profiling[${PYTHON_USEDEP}] )
	analysis? ( dev-python/explainerdashboard[${PYTHON_USEDEP}] )
	analysis? ( dev-python/autoviz[${PYTHON_USEDEP}] )
	analysis? ( dev-python/fairlearn[${PYTHON_USEDEP}] )
	full? ( dev-python/shap[${PYTHON_USEDEP}] )
	full? ( dev-python/interpret[${PYTHON_USEDEP}] )
	full? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	full? ( >=dev-python/ipywidgets-7.6.5[${PYTHON_USEDEP}] )
	full? ( dev-python/pandas-profiling[${PYTHON_USEDEP}] )
	full? ( dev-python/explainerdashboard[${PYTHON_USEDEP}] )
	full? ( dev-python/autoviz[${PYTHON_USEDEP}] )
	full? ( dev-python/fairlearn[${PYTHON_USEDEP}] )
	full? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	full? ( dev-python/catboost[${PYTHON_USEDEP}] )
	full? ( dev-python/kmodes[${PYTHON_USEDEP}] )
	full? ( dev-python/mlxtend[${PYTHON_USEDEP}] )
	full? ( dev-python/tune-sklearn[${PYTHON_USEDEP}] )
	full? ( dev-python/ray[${PYTHON_USEDEP}] )
	full? ( dev-python/hyperopt[${PYTHON_USEDEP}] )
	full? ( dev-python/optuna[${PYTHON_USEDEP}] )
	full? ( dev-python/scikit-optimize[${PYTHON_USEDEP}] )
	full? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	full? ( dev-python/gradio[${PYTHON_USEDEP}] )
	full? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	full? ( >=dev-python/uvicorn-0.17.6[${PYTHON_USEDEP}] )
	full? ( dev-python/m2cgen[${PYTHON_USEDEP}] )
	full? ( dev-python/evidently[${PYTHON_USEDEP}] )
	full? ( dev-python/nltk[${PYTHON_USEDEP}] )
	full? ( dev-python/pyLDAvis[${PYTHON_USEDEP}] )
	full? ( dev-python/gensim[${PYTHON_USEDEP}] )
	full? ( dev-python/spacy[${PYTHON_USEDEP}] )
	full? ( dev-python/wordcloud[${PYTHON_USEDEP}] )
	full? ( dev-python/textblob[${PYTHON_USEDEP}] )
	full? ( >=dev-python/psutil-5.9.0[${PYTHON_USEDEP}] )
	full? ( dev-python/fugue[${PYTHON_USEDEP}] )
	mlops? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	mlops? ( dev-python/gradio[${PYTHON_USEDEP}] )
	mlops? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	mlops? ( >=dev-python/uvicorn-0.17.6[${PYTHON_USEDEP}] )
	mlops? ( dev-python/m2cgen[${PYTHON_USEDEP}] )
	mlops? ( dev-python/evidently[${PYTHON_USEDEP}] )
	models? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	models? ( dev-python/catboost[${PYTHON_USEDEP}] )
	models? ( dev-python/kmodes[${PYTHON_USEDEP}] )
	models? ( dev-python/mlxtend[${PYTHON_USEDEP}] )
	nlp? ( dev-python/nltk[${PYTHON_USEDEP}] )
	nlp? ( dev-python/pyLDAvis[${PYTHON_USEDEP}] )
	nlp? ( dev-python/gensim[${PYTHON_USEDEP}] )
	nlp? ( dev-python/spacy[${PYTHON_USEDEP}] )
	nlp? ( dev-python/wordcloud[${PYTHON_USEDEP}] )
	nlp? ( dev-python/textblob[${PYTHON_USEDEP}] )
	tuners? ( dev-python/tune-sklearn[${PYTHON_USEDEP}] )
	tuners? ( dev-python/ray[${PYTHON_USEDEP}] )
	tuners? ( dev-python/hyperopt[${PYTHON_USEDEP}] )
	tuners? ( dev-python/optuna[${PYTHON_USEDEP}] )
	tuners? ( dev-python/scikit-optimize[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
