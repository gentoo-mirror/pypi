<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--Copyright (c) 2019 Michael VilimThis file is part of the bamboo library. It is currently hosted athttps://github.com/mvilim/bambooLicensed under the Apache License, Version 2.0 (the &quot;License&quot;);you may not use this file except in compliance with the License.You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.--&gt;## bamboo[![PyPI Release](https://img.shields.io/pypi/v/bamboo-nested.svg)](https://pypi.org/project/bamboo-nested/)[![Build Status](https://travis-ci.org/mvilim/bamboo.svg?branch=master)](https://travis-ci.org/mvilim/bamboo)bamboo is a library for feeding nested data formats into pandas. The space of data representable in nested formats is larger than the space covered by pandas. pandas supports only data representable in a flat table (though things like multi-indexs allows certain types of tree formats to be efficiently projected into a table). Data which supports arbitrary nesting is not in general convertible to a pandas dataframe. In particular, data which contains multiple repetition structures (e.g. JSON arrays) that are not nested within each other will not be flattenable into a table.The current data formats supported are:* JSON* Apache Avro* Apache Arrow* Profobuf (via [PBD](https://github.com/mvilim/pbd))bamboo works by projecting a flattenable portion (a subset of the nested columns) of the data into a pandas dataframe. By projecting various combinations of columns, one can make use of all the relationships implied by the nested structure of the data.### InstallationTo install from PyPI:```pip install bamboo-nested```### ExampleA minimal example of flattening a JSON string:```from bamboo import from_jsonobj = [{'a': None, 'b': [1, 2], 'c': [5, 6]}, {'a': -1.0, 'b': [3, 4], 'c': [7, 8]}]node = from_json(json.dumps(obj))    &gt; - a float64    &gt; - b []uint64    &gt; - c []uint64```Flattening just the values of column `a`:```df_a = node.flatten(include=['a'])    &gt;      a    &gt; 0  NaN    &gt; 1 -1.0```Flattening columns `a` and `b` (note that column `a` is repeated to match the corresponding elements of column `b`):```df_ab = node.flatten(include=['a', 'b'])    &gt;      a  b    &gt; 0  NaN  1    &gt; 1  NaN  2    &gt; 2 -1.0  3    &gt; 3 -1.0  4```Trying to flatten two repetition lists at the same level will lead to an error (as this structure is unflattenable without taking a Cartesian product):```df_bc = node.flatten(include=['b', 'c'])    &gt; ValueError: Attempted to flatten conflicting lists```### BuildingTo build this project:Building from source requires cmake (`pip install cmake`) and Boost.```python setup.py```### Unit testsTo run the unit tests:```python setup.py test```or use nose:```nosetests python/bamboo/tests```### LicensingThis project is licensed under the [Apache 2.0 License](https://github.com/mvilim/bamboo/blob/master/LICENSE). It uses the pybind11, Arrow, Avro, nlohmann JSON, and PBD projects. The licenses can be found in those [projects' directories](https://github.com/mvilim/bamboo/blob/master/cpp/thirdparty).</longdescription>
</pkgmetadata>