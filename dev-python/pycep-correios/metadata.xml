<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.org/project/pycep-correios/&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/mstuttgart/pycep-correios/develop/.img/logo.jpg&quot; width=&quot;30%&quot;&gt;  &lt;/a&gt;  &lt;h3 align=&quot;center&quot;&gt;PyCEPCorreios&lt;/h3&gt;  &lt;h4 align=&quot;center&quot;&gt;API para busca de CEP integrado ao serviços dos Correios, ViaCEP e ApiCEP (WideNet)&lt;/h4&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/mstuttgart/pycep-correios/actions?query=workflow%3A%22Github+CI%22&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/workflow/status/mstuttgart/pycep-correios/Github%20CI/develop?label=Github%20CI&amp;logo=Github&amp;style=flat-square&quot; alt=&quot;Version&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://coveralls.io/github/mstuttgart/pycep-correios&quot;&gt;    &lt;img alt=&quot;Coveralls github&quot; src=&quot;https://img.shields.io/coveralls/github/mstuttgart/pycep-correios?style=flat-square&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://codeclimate.com/github/mstuttgart/pycep-correios&quot;&gt;      &lt;img alt=&quot;Code Climate maintainability&quot; src=&quot;https://img.shields.io/codeclimate/maintainability/mstuttgart/pycep-correios.svg?style=flat-square&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/pycep-correios&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/v/pycep-correios.svg?style=flat-square&quot; alt=&quot;Ratings&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/pycep-correios/&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/pyversions/pycep-correios.svg?style=flat-square&quot; alt=&quot;Version&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;#instalação&quot;&gt;Instalação&lt;/a&gt; |  &lt;a href=&quot;#como-usar&quot;&gt;Como Usar&lt;/a&gt; |  &lt;a href=&quot;#como-contribuir&quot;&gt;Como Contribuir&lt;/a&gt; |  &lt;a href=&quot;#créditos&quot;&gt;Créditos&lt;/a&gt;&lt;/p&gt;## InstalaçãoA PyCEPCorreios pode ser facilmente instalada com o comando a seguir:```pip install pycep-correios```Atualmente, a PyCEPCorreios possui suporte para Python 3.5+.## Como usar*A PyCEPCorreios foi desenvolvida para integração de consultas sob demandas em páginas web. A consulta de CEPs em massa através de *scripts* ou qualquer outros meios não é recomendada.*A PyCEPCorreios utiliza por padrão de consulta a API provida pelo serviço [ApiCEP](https://apicep.com/). Para utilização de outros serviços, devemos indica o serviço desejado ao chamar a função `get_address_from_cep`. O CEP sempre deve ser uma *string* e pode ou não conter pontuação.### Exemplo de consulta ao serviço *ApiCEP* (default):```pythonfrom pycep_correios import get_address_from_cep, WebServiceaddress = get_address_from_cep('37503-130', webservice=WebService.APICEP)```### Exemplo de consulta ao serviço *ViaCEP*:```pythonfrom pycep_correios import get_address_from_cep, WebServiceaddress = get_address_from_cep('37503-130', webservice=WebService.VIACEP)```### Exemplo de consulta ao serviço dos *Correios*:```pythonfrom pycep_correios import get_address_from_cep, WebServiceaddress = get_address_from_cep('37503-130', webservice=WebService.CORREIOS)```**Obs.:** O serviço de busca de CEP dos Correios é parte integrante do serviço SIGEPWeb e para uso do mesmo é necessário ter contrato com os Correios, conforme indicado no capítulo *Introdução* presente no [manual de integração do serviço](http://www.corporativo.correios.com.br/encomendas/sigepweb/doc/Manual_de_Implementacao_do_Web_Service_SIGEP_WEB.pdf).### Retorno e ExceptionsIndependente do serviço escolhido, o formato de resposta sempre será um objeto `dict` contendo as seguintes chaves:```python{    'bairro': 'str',    'cep': 'str',    'cidade': 'str',    'logradouro': 'str',    'uf': 'str',    'complemento': 'str',}```A PyCEPCorreios tambem dá suporte a um grupo de *exceptions* que podem ser utilizadas para tratamento de quaisquer erros que ocorram durante o processo de consulta.```pythonfrom pycep_correios import get_address_from_cep, WebService, exceptionstry:    address = get_address_from_cep('37503-130', webservice=WebService.APICEP)except exceptions.InvalidCEP as eic:    print(eic)except exceptions.CEPNotFound as ecnf:    print(ecnf)except exceptions.ConnectionError as errc:    print(errc)except exceptions.Timeout as errt:    print(errt)except exceptions.HTTPError as errh:    print(errh)except exceptions.BaseException as e:    print(e)```## Como contribuirDeseja participar do desenvolvimento da PyCEPCorreios? Veja a *guideline* de contribuição [aqui](https://github.com/mstuttgart/pycep-correios/blob/develop/CONTRIBUTING.md).## CréditosCopyright (C) 2016-2022 por Michell Stuttgart</longdescription>
</pkgmetadata>