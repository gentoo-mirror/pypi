<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># lnd-grpc-clientA python grpc client for LND (Lightning Network Daemon) ⚡⚡⚡This is a wrapper around the default grpc interface that handles setting up credentials (including macaroons). An async client is also available to do fun async stuff like listening for invoices in the background. ## Dependencies- Python 3.6+- Working LND lightning node, take note of its ip address.- Copy your admin.macaroon and tls.cert files from your node to a directory on your machine. ## Installation```bashpip install lnd-grpc-client```### CLI UsageThis package adds a CLI command to your PATH once installed:```bashlndgrpcclient_cli```### Setup```$ lndgrpcclient_cli environmentSaving credentials!Enter your node's IP Address [127.0.0.1]: 86.75.309.6986.75.309.69Enter your node's Port [10009]: 10009Enter your node's Alias [default-node-alias]: my-cool-nodemy-cool-nodeWhere do you want keep your node credentials? Macaroons and tls.cert? [/home/kornpow/Documents/lnd-creds/my-cool-node]: Enter your macaroon filename [admin.macaroon]: Build directory structure and save `node-env` file at location: /home/kornpow/Documents/lnd-creds/my-cool-node [True]: 1This environment file must be loaded to access your node!export LND_CRED_PATH=/home/kornpow/Documents/lnd-creds/my-cool-nodeexport LND_NODE_IP=86.75.309.69export LND_NODE_PORT=10009export LND_MACAROON=admin.macaroonWriting file....Wrote environment file to location: /home/kornpow/Documents/lnd-creds/my-cool-node/node-envEnable it by running: source /home/kornpow/Documents/lnd-creds/my-cool-node/node-env``````$ lndgrpcclient_cli credentials --input_format hex --credential_type macaroonSaving credentials to: /home/kornpow/Documents/lnd-creds/my-cool-nodeEnter your node's macaroon []: abcdef123456Enter your macaroon name: [admin]: readonlyEnable this macaroon by running: export LND_MACAROON=readonly.macaroonWrote file: /home/kornpow/Documents/lnd-creds/my-cool-node/readonly.macaroon``````$ lndgrpcclient_cli credentials --input_format hex --credential_type tlsSaving credentials to: /home/kornpow/Documents/lnd-creds/my-cool-nodeEnter your node's tls []: abcdef1234Wrote file: /home/kornpow/Documents/lnd-creds/my-cool-node/tls.cert```### Usage```$ lndgrpcclient_cli shell&gt;&gt;&gt; lnd.get_info().block_hash'0000000000000000000873876975b2443cfcb93cd9b66c58ed6da922fe5f40b3'&gt;&gt;&gt; lnd.get_node_info(&quot;0360a41eb8c3fe09782ef6c984acbb003b0e1ebc4fe10ae01bab0e80d76618c8f4&quot;).node.alias'kungmeow'&gt;&gt;&gt; lnd.get_network_info()graph_diameter: 13avg_out_degree: 5.528722661077973max_out_degree: 417num_nodes: 18609num_channels: 51442total_network_capacity: 2873600avg_channel_size: 55.86096963570623max_channel_size: 1000000num_zombie_chans: 165176```## Advanced UsageGo in the `examples` folder for some advanced examples including:- Open channel using PSBT: `openchannel-external.py`- Open Batch of Channels using PSBT: `batchopenchannel-external.py`- Keysend Payments: `send-keysend.py`- Reconnect to your peers: `reconnect-peers.py`- Channel Acceptor API w/ a custom failure message: `channel-acceptor.py`### Async```pythonimport asynciofrom lndgrpc import AsyncLNDClientasync_lnd = AsyncLNDClient()async def subscribe_invoices():    print('Listening for invoices...')    async for invoice in async_lnd.subscribe_invoices():        print(invoice)async def get_info():    while True:        info = await async_lnd.get_info()        print(info)        await asyncio.sleep(5)async def run():    coros = [subscribe_invoices(), get_info()]    await asyncio.gather(*coros)loop = asyncio.get_event_loop()loop.run_until_complete(run())```### Specifying Macaroon/Cert filesBy default the client will attempt to lookup the `readonly.macaron` and `tls.cert` files in the mainnet directory. However if you want to specify a different macaroon or different path you can pass in the filepath explicitly.```pythonlnd = LNDClient(    macaroon_filepath='~/.lnd/invoice.macaroon',     cert_filepath='path/to/tls.cert')```## Generating LND Proto Files```mkvirtualenv gen_rpc_protos# or workon gen_rpc_protos# thenpip install grpcio grpcio-tools googleapis-common-protos shcd lndgrpcgit clone --depth 1 https://github.com/googleapis/googleapis.gitcd ..```Set environment variables```export APP_DIR=$HOME/Documents/lightning/lndexport CLIENT_DIR=$HOME/Documents/lightning/lnd-grpc-clientpython3 rebuild_protos.py```## Deploy to Test-PyPi```bashpoetry buildtwine check dist/*twine upload --repository-url https://test.pypi.org/legacy/ dist/*```</longdescription>
</pkgmetadata>