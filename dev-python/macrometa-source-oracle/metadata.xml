<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># macrometa-source-oracleMacrometa source connector that extracts data from a [Oracle](https://www.oracle.com/database/) database and produces JSON-formatted data following the [Singer spec](https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md).## How to use it### Install and RunFirst, make sure Python 3 is installed on your system or follow theseinstallation instructions for [Mac](http://docs.python-guide.org/en/latest/starting/install3/osx/) or[Ubuntu](https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04).It's recommended to use a virtualenv:```bash  python3 -m venv venv  pip install macrometa-source-oracle```or from source using,1. Install poetry using https://python-poetry.org/docs/#installation2. Run     ```bash    poetry build    pip install dist/macrometa_source_oracle-&lt;version&gt;*.whl    ```### ConfigurationRunning the the macrometa source connector independently requires a `config.json` file. Example configuration:```json{  &quot;host&quot;: &quot;dev.oracledb.io&quot;,  &quot;port&quot;: 1521,  &quot;user&quot;: &quot;C##HELLO&quot;,  &quot;password&quot;: &quot;password&quot;,  &quot;service_name&quot;: &quot;ORCLCDB&quot;,  &quot;filter_schema&quot;: &quot;C##HELLO&quot;,  &quot;filter_table&quot;: &quot;CUSTOMERS&quot;,  &quot;replication_method&quot;: &quot;LOG_BASED&quot;,  &quot;pdb_name&quot;: &quot;ORCLPDB1&quot;,  &quot;multitenant&quot;: true,  &quot;scn_window_size&quot;: 10}```You can run a discover run using the previous `config.json` file to acquire all the tables definition ```macrometa-source-oracle --config /tmp/config.json --discover &gt;&gt; /tmp/catalog.json```Then use the catalog.json to run a full export:```macrometa-source-oracle --config /tmp/config.json --catalog /tmp/catalog.json```</longdescription>
</pkgmetadata>