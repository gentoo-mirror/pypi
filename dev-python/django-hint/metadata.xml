<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>`Django_hint` is a module to help you type hint your django project to work with different IDEs. It has been tested in PyCharm and with pylint in VSCode.```Notice: Python3.6 or later is required for this module```&lt;br&gt;## InstallationYou can use the `pip` to install django_hint```pip3 install django_hint```## UsageThe following use cases can be type hinted using `django_hint` to help your IDE recognize the type of variable.1. Database QuerySet2. WSGIRequest3. Django-Rest-Framework Token Authentication4. Model ClassAs a bonus, all of the native python type hints such as `List`, `Union`, `Optional` etc. from `typing` module can be imported from `django_hint`## Database QuerySetIt is used to hint that the variable is an `QuerySet` object containing multiple objects whose nature we will determine.&lt;br&gt;You need to hint it to `QueryType` and pass the object type inside the `[]`. Example:```pythonfrom django_hint import QueryTypesample_query: QueryType[SampleModel] = SampleModel.objects.filter(name='sample')```The `sample_query` variable will be treated as a `QuerySet`. While looping through the objects, each object will be treated as a `SampleModel`## WSGIRequestIt is used to hint the nature of the `request` argument of the view (both function and class based). The `request` will be treated as a `HttpRequest` having the `user` variable attached to it. Example:```pythonfrom django_hint import RequestTypedef sample_view(request: RequestType):    if request.user.is_authenticated:        print(request.POST.get('data'))```## Django-Rest-Framework Token AuthenticationIf you are using the token authentication of the `Django-Rest-Framework`, the request object will have a `user` variable and an `auth` variable of `rest_framework.authtoken.models.Token` instance. `DRFTokenRequestType` will hint the IDE of those two variables.```pythonfrom django_hint import DRFTokenRequestTypedef sample_view(request: DRFTokenRequestType):    print(request.auth.key)```## Model ClassDjango adds a few attributes to a `Model` instance which are not available in the `models.Model` and will not be available in your IDE. The most notable attribute is the `Manager` which is accessible via an attribute called `objects`.&lt;br&gt;To include these attributes in your IDE, You have to extend your model to the `StandardModelType` class of `django_hint` as well as `models.Model` and use it just like any other model class.&lt;br&gt;Note that `StandardModeltype` will NOT have any effect on your database and will NOT make new migrations on `makemigrations` command.```pythonfrom django.db import modelsfrom django_hint import StandardModelTypeclass SampleModel(models.Model, StandardModelType):    &quot;&quot;&quot;Just like any other model&quot;&quot;&quot;    pass```  </longdescription>
</pkgmetadata>