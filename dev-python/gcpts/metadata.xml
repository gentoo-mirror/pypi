<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># GCP time series[![codecov](https://codecov.io/gh/richwomanbtc/gcpts/branch/main/graph/badge.svg?token=J728V34ZR5)](https://codecov.io/gh/richwomanbtc/gcpts)## Requirements- Python 3.10+## Installation```pip install gcpts```## Test```poetry run pytest -s -vv```## Usage```pythonimport gcptsimport pandas as pdimport numpy as npgcpts_client = gcpts.GCPTS(    project_id=&quot;example_project&quot;,     dataset_id=&quot;example_dataset&quot;)# Prepare example data, your data need to have 3 columns named symbol, dt, partition_dtdf = pd.DataFrame(np.random.randn(5000, 4))df.columns = ['open', 'high', 'low', 'close']# symbol represent a group of data for given data columnsdf['symbol'] = 'BTCUSDT'# timestamp should be UTC timezone but without tz infodf['dt'] = pd.date_range('2022-01-01', '2022-05-01', freq='15Min')[:5000]# partition_dt must be date, data will be updated partition by partition with use of this column.# Every time, you have to upload all the data for a given partition_dt, otherwise older will be gone.df['partition_dt'] = df['dt'].dt.date.map(lambda x: x.replace(day=1))gcpts_client.upload(table_name='example_table', df=df)``````python# Query for raw data.raw_clsoe = gcpts_client.query(    table_name='example_table',    field='close',    start_dt='2022-02-01 00:00:00', # yyyy-mm-dd HH:MM:SS, inclusive    end_dt='2022-02-05 23:59:59', # yyyy-mm-dd HH:MM:SS, inclusive    symbols=['BTCUSDT'],)# Query for raw data with resamplingresampeld_daily_close = gcpts_client.resample_query(    table_name='example_table',    field='close',    start_dt='2022-01-01 00:00:00', # yyyy-mm-dd HH:MM:SS, inclusive    end_dt='2022-01-31 23:59:59', # yyyy-mm-dd HH:MM:SS, inclusive    symbols=['BTCUSDT'],    interval='day', # month | week | day | hour | {1,2,3,4,6,8,12}hour | minute | {5,15,30}minute    op='last', # last | first | min | max | sum)```## DisclaimerThis allows you to have SQL injection. Please use it for your own purpose only and do not allow putting arbitrary requests to this library.</longdescription>
</pkgmetadata>