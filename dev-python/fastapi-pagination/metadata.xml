<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;&lt;img alt=&quot;logo&quot; src=&quot;https://raw.githubusercontent.com/uriyyo/fastapi-pagination/main/docs/img/logo.png&quot;&gt;&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;&lt;img alt=&quot;license&quot; src=&quot;https://img.shields.io/badge/License-MIT-lightgrey&quot;&gt;&lt;img alt=&quot;test&quot; src=&quot;https://github.com/uriyyo/fastapi-pagination/workflows/Test/badge.svg&quot;&gt;&lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/uriyyo/fastapi-pagination/branch/main/graph/badge.svg?token=QqIqDQ7FZi&quot;&gt;&lt;a href=&quot;https://pepy.tech/project/fastapi-pagination&quot;&gt;&lt;img alt=&quot;downloads&quot; src=&quot;https://pepy.tech/badge/fastapi-pagination&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/fastapi-pagination&quot;&gt;&lt;img alt=&quot;pypi&quot; src=&quot;https://img.shields.io/pypi/v/fastapi-pagination&quot;&gt;&lt;/a&gt;&lt;img alt=&quot;black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/div&gt;## Introduction`fastapi-pagination` is a library that provides pagination feature for [FastAPI](https://fastapi.tiangolo.com/)applications.----For more information about library please see [documentation](https://uriyyo-fastapi-pagination.netlify.app/).---## Installation```bashpip install fastapi-pagination```## QuickstartAll you need to do is to use `Page` class as a return type for your endpoint and call `paginate` functionon data you want to paginate.```pyfrom fastapi import FastAPIfrom pydantic import BaseModel, Field# import all you need from fastapi-paginationfrom fastapi_pagination import Page, add_pagination, paginateapp = FastAPI()  # create FastAPI appclass UserOut(BaseModel):  # define your model    name: str = Field(..., example=&quot;Steve&quot;)    surname: str = Field(..., example=&quot;Rogers&quot;)users = [  # create some data    # ...]@app.get('/users', response_model=Page[UserOut])  # use Page[UserOut] as response modelasync def get_users():    return paginate(users)  # use paginate function to paginate your dataadd_pagination(app)  # important! add pagination to your app```Please, be careful when you work with databases, because default `paginate` will require to load all data in memory.For instance, if you use `SQLAlchemy` you can use `paginate` from `fastapi_pagination.ext.sqlalchemy` module.```pyfrom sqlalchemy import selectfrom fastapi_pagination.ext.sqlalchemy import paginate@app.get('/users', response_model=Page[UserOut])def get_users(db: Session = Depends(get_db)):    return paginate(db, select(User).order_by(User.created_at))```Currently, `fastapi-pagination` supports:| Library                                                                                     | `paginate` function                                 | |---------------------------------------------------------------------------------------------|-----------------------------------------------------|| [SQLAlchemy](https://docs.sqlalchemy.org/en/14/orm/quickstart.html)                         | `fastapi_pagination.ext.sqlalchemy.paginate`        || [SQLModel](https://sqlmodel.tiangolo.com/)                                                  | `fastapi_pagination.ext.sqlmodel.paginate`          || [AsyncPG](https://magicstack.github.io/asyncpg/current/)                                    | `fastapi_pagination.ext.asyncpg.paginate`           || [Databases](https://www.encode.io/databases/)                                               | `fastapi_pagination.ext.databases.paginate`         || [Django ORM](https://docs.djangoproject.com/en/3.2/topics/db/queries/)                      | `fastapi_pagination.ext.django.paginate`            || [GINO](https://python-gino.org/)                                                            | `fastapi_pagination.ext.gino.paginate`              || [ORM](https://www.encode.io/orm/)                                                           | `fastapi_pagination.ext.orm.paginate`               || [ormar](https://collerek.github.io/ormar/)                                                  | `fastapi_pagination.ext.ormar.paginate`             || [Piccolo](https://piccolo-orm.readthedocs.io/en/latest/)                                    | `fastapi_pagination.ext.piccolo.paginate`           || [Pony ORM](https://docs.ponyorm.org/)                                                       | `fastapi_pagination.ext.pony.paginate`              || [Tortoise ORM](https://tortoise-orm.readthedocs.io/en/latest/)                              | `fastapi_pagination.ext.tortoise.paginate`          || [Beanie](https://roman-right.github.io/beanie/)                                             | `fastapi_pagination.ext.beanie.paginate`            || [PyMongo](https://pymongo.readthedocs.io/en/stable/)                                        | `fastapi_pagination.ext.pymongo.paginate`           || [MongoEngine](https://docs.mongoengine.org/)                                                | `fastapi_pagination.ext.mongoengine.paginate`       || [Motor](https://motor.readthedocs.io/en/stable/)                                            | `fastapi_pagination.ext.motor.paginate`             |---Code from `Quickstart` will generate OpenAPI schema as bellow:&lt;div align=&quot;center&quot;&gt;&lt;img alt=&quot;app-example&quot; src=&quot;https://raw.githubusercontent.com/uriyyo/fastapi-pagination/main/docs/img/example.jpeg&quot;&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>