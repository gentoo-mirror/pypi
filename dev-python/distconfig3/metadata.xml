<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://travis-ci.com/alexferl/distconfig.svg?branch=master  :target: https://travis-ci.com/alexferl/distconfig.. image:: https://readthedocs.org/projects/distconfig/badge/?version=latest  :target: https://readthedocs.org/projects/distconfig/?badge=latest  :alt: Documentation Statusdistconfig3===========This is a fork of `distconfig &lt;https://github.com/deliveryhero/distconfig&gt;`_ removing Python 2.7 support as well as sixand ujson dependencies.Library to manage distributed configuration using either `ZooKeeper &lt;https://zookeeper.apache.org/&gt;`_ or`Etcd &lt;https://github.com/coreos/etcd&gt;`_ or `Consul &lt;http://www.consul.io/&gt;`_.Rational--------When you have to manage configuration of a given services that are distributed across nodes, you may wantto consider using either one of the distributed configuration managers e.g. zookeeper, etcd, consul ..., thislibrary goal is to give developers an easy access to configuration stored in the previous backends.Installation:-------------To use **ZooKeeper** as backend you should install ``distconfig3`` using ::    $ pip install distconfig3[zookeeper]with **etcd**::    $ pip install distconfig3[etcd]with **consul**::    $ pip install distconfig3[consul]Usage:------Example using zookeeper as a backend ::    from kazoo import client    from distconfig import Proxy    client = client.KazooClient()    # The user must call ``KazooClient.start()`` before using this particular    # backend    client.start()    proxy = Proxy.configure(        'distconfig.backends.zookeeper.ZooKeeperBackend',        client=client,    )    # config is a read only mapping-like object.    config = proxy.get_config('/distconfig/service_name/config')    print(config['key'])    # Getting nested values works by supplying key seperated by '/' char.    print(config['key/inner'])    # You can assert key value type by using typed get function e.g.    # get_int, get_float, get_unicode, get_bytes ... .    print(config.get_int('key/inner/int_key'))    # Getting a inner config.    print(config.get_config('key/inner/dict_key'))Development:------------Start by installing dependencies ::    $ pip install -r requirements/dev.txtTo run unit test use tox ::    $ toxTo run integration test, we recommend you to install `docker &lt;https://www.docker.com/&gt;`_ and then run ::    $ ./run-tests.shThe above script will setup docker container for each of the backendand run the integration tests on them.TODO:------ Add file as a backend (use https://pypi.python.org/pypi/watchdog)</longdescription>
</pkgmetadata>