<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription> [![pipeline status](https://gitlab.ville.tg/fguerin/bump-release/badges/master/pipeline.svg)](https://gitlab.ville.tg/fguerin/bump-release/-/commits/master) [![coverage report](https://gitlab.ville.tg/fguerin/bump-release/badges/master/coverage.svg)](https://gitlab.ville.tg/fguerin/bump-release/-/commits/master)# Updates the release numbers for a projectsThis script uses the release.ini file placed at the root of the project, and replaces the version or release number in various files.```sh$ cd &lt;project_root&gt;$ ls -al...release.ini...$ bump_release &lt;major&gt;.&lt;minor&gt;.&lt;release&gt;```## Installation### Simple install (without pyproject.tml support)On linux, the best place to install it is for the user:```sh$ pip install --user bump-release```Assume to have `~/.local/bin` in the `$PATH`.You can use pipx too for the same purpose:```sh$ pipx install bump-release```### Install with pyproject.tml supportFor pyproject.toml, you can use the `pipx` command:```sh$ pip install --user bump-release[toml]```or with pipx:```sh$ pipx install bump-release[toml]```This will install the `bump-release` package and the toml dependencies:+ tomli+ tomli-wThese libs are the one used by [setuptools](https://github.com/pypa/setuptools) for pyproject.toml file parsing / updating.## Version numbers that can be updated+ main project version+ node package.json+ sonar properties+ sphinx docs+ ansible variables in a vars file+ setup.py+ setup.cfg+ pyproject.toml## release.iniThe .ini file provides path, patterns and templates to update files.If a section is not present, no action if performed for this section.The application provides some &quot;standard&quot; patterns and templates (aka. the ones I use in my projects). If you provide some patterns and templates, you have to enclose them with double-quotes. Due to [configparser](https://docs.python.org/3/library/configparser.html) limitations, all strings are parsed as raw strings.The application removes those double-quotes through a :```pythonpattern = config[&quot;&lt;section&gt;&quot;].get(&quot;pattern&quot;) or DEFAULT_PATTERNpattern = pattern.strip('&quot;')```### Example ini file:```ini[DEFAULT]; Current version of the projects, will be updated by the scriptcurrent_release = 0.1.0[main_project]path = &lt;project&gt;/settings/base.py; Optional pattern, default is...pattern = &quot;^__version__\s*=\s*VERSION\s*=\s*['\&quot;][.\d\w]+['\&quot;]$&quot;; Optional template, default is...template = &quot;__version__ = VERSION = '{major}.{minor}.{release}'&quot;[node_module]path = &lt;project&gt;/assets/package.json; Optional key, default is...key = &quot;version&quot;[sonar]path = ./sonar-project.properties; Optional pattern, default is...pattern = &quot;^sonar.projectVersion=([.\d\w]+)$&quot;; Optional template, default is...template = &quot;sonar.projectVersion={major}.{minor}&quot;[docs]path = &lt;project&gt;/../docs/source/conf.py; Optional pattern, default is...version_pattern = &quot;^version\s+=\s+[\&quot;']([.\d\w]+)[\&quot;']$&quot;; Optional template, default is...version_format = &quot;version = '{major}.{minor}'&quot;; Optional pattern, default is...release_pattern = &quot;^release\s+=\s+[\&quot;']([.\d\w]+)[\&quot;']$&quot;; Optional template, default is...release_format = &quot;release = '{major}.{minor}.{release}'&quot;[ansible]path = &lt;project&gt;/../ansible/prod/vars/vars.yml; Optional key - The script searches for the &quot;git&quot; root key, and then for &quot;version&quot; sub-keykey = &quot;git.version&quot;[setup]path = &lt;project&gt;/setup.py; Optional pattern, default is...pattern = &quot;^\s*version=['\&quot;]([.\d\w]+)['\&quot;],$&quot;; Optional template, default is...template = &quot;    version='{major}.{minor}.{release}',&quot;[setup_cfg]path = &lt;project&gt;/setup.cfg; Optional pattern, default is...pattern = &quot;^version = ([.\d\w]+)$&quot;; Optional template, default is...template = &quot;version = {major}.{minor}.{release}&quot;[pyproject]path = &lt;project&gt;/pyproject.toml; Optional key, default is...key = &quot;project.version&quot;```## Usage```bash$ cd &lt;project_root&gt;$ cat release.ini[DEFAULT]current_release = 0.0.1[main_project]path = &quot;foo/__init__.py&quot;[sonar]path = &quot;sonar-project.properties&quot;...$ cat foo/__init__.py...__version__ = VERSION = &quot;0.0.1&quot;...$ bump_release 0.0.2...$ cat release.ini[DEFAULT]current_release = 0.0.2...$ cat foo/__init__.py...__version__ = VERSION = &quot;0.0.2&quot;...```</longdescription>
</pkgmetadata>