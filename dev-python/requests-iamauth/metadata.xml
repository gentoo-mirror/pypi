<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Requests IAMAuth[![pypi](https://img.shields.io/pypi/v/requests-iamauth?color=yellow&amp;logo=python&amp;logoColor=eee&amp;style=flat-square)](https://pypi.org/project/requests-iamauth/)[![python](https://img.shields.io/pypi/pyversions/requests-iamauth?logo=python&amp;logoColor=eee&amp;style=flat-square)](https://pypi.org/project/requests-iamauth/)[![pytest](https://img.shields.io/github/workflow/status/amancevice/requests-iamauth/pytest?logo=github&amp;style=flat-square)](https://github.com/amancevice/requests-iamauth/actions)[![coverage](https://img.shields.io/codeclimate/coverage/amancevice/requests-iamauth?logo=code-climate&amp;style=flat-square)](https://codeclimate.com/github/amancevice/requests-iamauth/test_coverage)[![maintainability](https://img.shields.io/codeclimate/maintainability/amancevice/requests-iamauth?logo=code-climate&amp;style=flat-square)](https://codeclimate.com/github/amancevice/requests-iamauth/maintainability)Use AWS SigV4 authorization with requests.Accessing an API secured with IAM authorization in AWS API Gateway can be tricky.This tool uses the built-in authorization strategy in `requests` to help you access your secured endpoints.## Installation```bashpip install requests-iamauth```## Usage### Signing Version 4AWS [sigv4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) is the current standard for signing requests bound for AWS services.Use `requests-iamauth` to as an authorizer for the `requests` Python library:```pythonimport requestsfrom iamauth import Sigv4Authsigv4 = Sigv4Auth(  service_name=&quot;execute-api&quot;,  # default)session = requests.Session()session.auth = sigv4session.get('https://abcdef0123.execute-api.us-east-2.amazonaws.com/my/api')```Override the default boto3 session by passing a custom one into the constructor for `Sigv4Auth`:```pythonimport boto3sigv4 = Sigv4Auth(  boto3_session=boto3.Session(),)```### Signing Version 4aAWS [sigv4a](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) is an extension to the sigv4 signing process that enables signing requests bound for more than one region.&gt; Note â€” at the time of this writing, the only API Gateway API type that appears to support sigv4 are REST APIs.Use `requests-iamauth` to as an authorizer for the `requests` Python library:```pythonimport requestsfrom iamauth import Sigv4aAuthsigv4a = Sigv4aAuth(  service=&quot;execute-api&quot;,  # default  region=&quot;*&quot;,             # default)session = requests.Session()session.auth = sigv4asession.get('https://abcdef0123.execute-api.us-east-2.amazonaws.com/my/api')```Override the default AWS credentials provider by passing a custom one into the constructor for `Sigv4aAuth`:```pythonfrom botocore.compat import awscrtsigv4a = Sigv4aAuth(  credentials_provider=awscrt.auth.AwsCredentialsProvider.new_default_chain(),)```</longdescription>
</pkgmetadata>