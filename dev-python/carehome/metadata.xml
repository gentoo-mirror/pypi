<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CarehomeA stupidly named package for creating MOO-style objects with Python.Objects support multiple inheritance, properties, events, and methods. Theresulting database can be dumped and loaded to and from dictionary objects.## EventsThe following events are used throughout the code. Any other events which arebaked into the main code base will be added here.### on_initCalled when the object is initialised.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.### on_attachCalled when the object is attached to the database.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.### on_destroyCalled before the object is destroyed, and the object is still valid.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.### on_enterCalled before an object enters another one.#### Arguments* The new location of this object.* The thing which is moving into this object.### on_exitCalled before an object exits another.#### Arguments* The old location of this object.* The object which is leaving.### on_add_parentCalled before a parent is added to this object.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.* The parent which is being added.### on_add_childCalled before this object gains a child.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.* The child which is being added.### on_remove_parentCalled before a parent is removed from this object.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.* The parent which is being removed.### on_remove_childCalled before a child is removed from this object.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.* The child which is being removed.### on_add_propertyCalled before a property is added to this object.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.* The new Property instance.### on_remove_propertyCalled before a property is removed from this object.#### Arguments* The object that is being initialised. This allows the event call to propagateup the object hierarchy.* The name of the old property.</longdescription>
</pkgmetadata>