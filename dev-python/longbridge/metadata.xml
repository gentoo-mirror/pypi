<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Longbridge OpenAPI SDK for Python`longbridge` provides an easy-to-use interface for invokes [`Longbridge OpenAPI`](https://open.longbridgeapp.com/en/).## Quickstart_Install Longbridge OpenAPI SDK_```bashpip install longbridge```_Setting environment variables(MacOS/Linux)_```bashexport LONGBRIDGE_APP_KEY=&quot;App Key get from user center&quot;export LONGBRIDGE_APP_SECRET=&quot;App Secret get from user center&quot;export LONGBRIDGE_ACCESS_TOKEN=&quot;Access Token get from user center&quot;```_Setting environment variables(Windows)_```powershellsetx LONGBRIDGE_APP_KEY &quot;App Key get from user center&quot;setx LONGBRIDGE_APP_SECRET &quot;App Secret get from user center&quot;setx LONGBRIDGE_ACCESS_TOKEN &quot;Access Token get from user center&quot;```## Quote API _(Get basic information of securities)_```pythonfrom longbridge.openapi import Config, QuoteContext# Load configuration from environment variablesconfig = Config.from_env()# Create a context for quote APIsctx = QuoteContext(config)# Get basic information of securitiesresp = ctx.quote([&quot;700.HK&quot;, &quot;AAPL.US&quot;, &quot;TSLA.US&quot;, &quot;NFLX.US&quot;])print(resp)```## Quote API _(Subscribe quotes)_```pythonfrom time import sleepfrom longbridge.openapi import Config, QuoteContext, SubType, PushQuote# Load configuration from environment variablesconfig = Config.from_env()# A callback to receive quote datadef on_quote(symbol: str, event: PushQuote):    print(symbol, event)# Create a context for quote APIsctx = QuoteContext(config)ctx.set_on_quote(on_quote)# Subscriberesp = ctx.subscribe([&quot;700.HK&quot;], [SubType.Quote], is_first_push=True)# Receive push duration to 30 secondssleep(30)```## Trade API _(Submit order)_```pythonfrom decimal import Decimalfrom longbridge.openapi import TradeContext, Config, OrderType, OrderSide, TimeInForceType# Load configuration from environment variablesconfig = Config.from_env()# Create a context for trade APIsctx = TradeContext(config)# Submit orderresp = ctx.submit_order(&quot;700.HK&quot;, OrderType.LO, OrderSide.Buy, Decimal(    &quot;500&quot;), TimeInForceType.Day, submitted_price=Decimal(&quot;50&quot;), remark=&quot;Hello from Python SDK&quot;)print(resp)```## LicenseLicensed under either of* Apache License, Version 2.0,([LICENSE-APACHE](./LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)* MIT license ([LICENSE-MIT](./LICENSE-MIT) or http://opensource.org/licenses/MIT) at your option.</longdescription>
</pkgmetadata>