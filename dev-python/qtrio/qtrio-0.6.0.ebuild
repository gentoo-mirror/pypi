# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="qtrio"
REALVERSION="0.6.0"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_9,3_10,3_11} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="a library bringing Qt GUIs together with \`\`async\`\` and \`\`await\`\` via Trio"

HOMEPAGE="https://github.com/altendky/qtrio"
LICENSE="MIT -or- Apache License 2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/q/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="cli examples p_checks p_docs p_tests pyqt5 pyside2 s_pytest s_pytest_trio s_quart_trio s_towncrier testing"
DEPENDENCIES="dev-python/async-generator[${PYTHON_USEDEP}]
	dev-python/attrs[${PYTHON_USEDEP}]
	dev-python/decorator[${PYTHON_USEDEP}]
	dev-python/outcome[${PYTHON_USEDEP}]
	dev-python/qts[${PYTHON_USEDEP}]
	dev-python/trio[${PYTHON_USEDEP}]
	dev-python/trio-typing[${PYTHON_USEDEP}]
	cli? ( dev-python/click[${PYTHON_USEDEP}] )
	examples? ( dev-python/click[${PYTHON_USEDEP}] )
	examples? ( dev-python/httpcore[${PYTHON_USEDEP}] )
	examples? ( dev-python/httpx[${PYTHON_USEDEP}] )
	examples? ( dev-python/hyperlink[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/black[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/check-manifest[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/flake8[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/mypy[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/pytest[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/quart-trio[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/quart[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/towncrier[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/click[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/httpcore[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/httpx[${PYTHON_USEDEP}] )
	p_checks? ( dev-python/hyperlink[${PYTHON_USEDEP}] )
	p_docs? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	p_docs? ( dev-python/sphinx-autodoc-typehints[${PYTHON_USEDEP}] )
	p_docs? ( dev-python/sphinx-qt-documentation[${PYTHON_USEDEP}] )
	p_docs? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	p_docs? ( dev-python/sphinxcontrib-trio[${PYTHON_USEDEP}] )
	p_docs? ( dev-python/towncrier[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/click[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/httpcore[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/httpx[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/hyperlink[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/coverage[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest-faulthandler[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest-qt[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest-trio[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/quart-trio[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/quart[${PYTHON_USEDEP}] )
	p_tests? ( dev-python/pytest-xvfb[${PYTHON_USEDEP}] )
	pyqt5? ( dev-python/pyqt5[${PYTHON_USEDEP}] )
	pyqt5? ( dev-python/pyqt5-stubs[${PYTHON_USEDEP}] )
	pyside2? ( dev-python/pyside2[${PYTHON_USEDEP}] )
	s_pytest? ( dev-python/pytest[${PYTHON_USEDEP}] )
	s_pytest_trio? ( dev-python/pytest-trio[${PYTHON_USEDEP}] )
	s_quart_trio? ( dev-python/quart-trio[${PYTHON_USEDEP}] )
	s_quart_trio? ( dev-python/quart[${PYTHON_USEDEP}] )
	s_towncrier? ( dev-python/towncrier[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest-trio[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
