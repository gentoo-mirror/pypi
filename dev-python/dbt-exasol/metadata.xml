<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dbt-exasol**[dbt](https://www.getdbt.com/)** enables data analysts and engineers to transform their data using the same practices that software engineers use to build applications.Please see the dbt documentation on **[Exasol setup](https://docs.getdbt.com/reference/warehouse-setups/exasol-setup)** for more information on how to start using the Exasol adapter.# Current profile.yml settings&lt;File name='profiles.yml'&gt;```yamldbt-exasol:  target: dev  outputs:    dev:      type: exasol      threads: 1      dsn: HOST:PORT      user: USERNAME      password: PASSWORD      dbname: db      schema: SCHEMA```#### Optional login credentials using OpenID for Exasol SaaSOpenID login through access_token or refresh_token instead of user+password#### Optional parameters&lt;ul&gt;  &lt;li&gt;&lt;strong&gt;connection_timeout&lt;/strong&gt;: defaults to pyexasol default&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;socket_timeout&lt;/strong&gt;: defaults to pyexasol default&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;query_timeout&lt;/strong&gt;: defaults to pyexasol default&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;compression&lt;/strong&gt;: default: False&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;encryption&lt;/strong&gt;: default: False&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;protocol_version&lt;/strong&gt;: default: v3&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;row_separator&lt;/strong&gt;: default: CRLF for windows - LF otherwise&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;timestamp_format&lt;/strong&gt;: default: YYYY-MM-DDTHH:MI:SS.FF6&lt;/li&gt;&lt;/ul&gt;# Known isues## Materialized View &amp; Clone operationsIn Exasol materialized views and clone operations are note suported. Default behaviour from dbt-core will fail accordingly.## Null handling in test_utils null safe handlingIn Exasol empty string are NULL. Due to this behaviour and as of [this pull request 7776 published in dbt-core 1.6](https://github.com/dbt-labs/dbt-core/pull/7776),seeds in tests that use EMPTY literal to simulate empty string have to be handled with special behaviour in exasol.See fixture for csv in exasol__seeds__data_hash_csv for tests/functional/adapter/utils/test_utils.py::TestHashExasol. ## Model contractsThe following database constraints are implemented for Exasol:| Constraint Type  | Status || ------------- | ------------- || check | NOT supported  || not null  | enforced  || unique  | NOT supported  || primary key  | enforced  || foreign key  | enforced  |## &gt;=1.5 Incrmental model updateFallback to dbt-core implementation and supporting strategies - append- merge- delete+insert## &gt;=1.3 Python model not yet supported - WIP- Please follow [this pull request](https://github.com/tglunde/dbt-exasol/pull/59) ## Breaking changes with release 1.2.2- Timestamp format defaults to YYYY-MM-DDTHH:MI:SS.FF6## SQL functions compatibility### split_partThere is no equivalent SQL function in Exasol for split_part.### listagg part_numThe SQL function listagg in Exasol does not support the num_part parameter.## Utilities shim packageIn order to support packages like dbt-utils and dbt-audit-helper, we needed to create the [shim package exasol-utils](https://github.com/tglunde/exasol-utils). In this shim package we need to adapt to parts of the SQL functionality that is not compatible with Exasol - e.g. when 'final' is being used which is a keyword in Exasol. Please visit [Adaopter dispatch documentation](https://docs.getdbt.com/guides/advanced/adapter-development/3-building-a-new-adapter#adapter-dispatch) of dbt-labs for more information. # Reporting bugs and contributing code- Please report bugs using the issues# Releases[GitHub Releases](https://github.com/tglunde/dbt-exasol/releases)</longdescription>
</pkgmetadata>