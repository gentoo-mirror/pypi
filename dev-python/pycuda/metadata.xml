<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PyCUDA: Pythonic Access to CUDA, with Arrays and Algorithms=============================================================.. image:: https://gitlab.tiker.net/inducer/pycuda/badges/main/pipeline.svg    :alt: Gitlab Build Status    :target: https://gitlab.tiker.net/inducer/pycuda/commits/main.. image:: https://badge.fury.io/py/pycuda.png    :target: https://pypi.org/project/pycuda.. image:: https://zenodo.org/badge/1575319.svg    :alt: Zenodo DOI for latest release    :target: https://zenodo.org/badge/latestdoi/1575319PyCUDA lets you access `Nvidia &lt;https://nvidia.com&gt;`_'s `CUDA&lt;https://nvidia.com/cuda/&gt;`_ parallel computation API from Python.Several wrappers of the CUDA API already exist-so what's so specialabout PyCUDA?* Object cleanup tied to lifetime of objects. This idiom, often  called  `RAII &lt;https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization&gt;`_  in C++, makes it much easier to write correct, leak- and  crash-free code. PyCUDA knows about dependencies, too, so (for  example) it won't detach from a context before all memory  allocated in it is also freed.* Convenience. Abstractions like pycuda.driver.SourceModule and  pycuda.gpuarray.GPUArray make CUDA programming even more  convenient than with Nvidia's C-based runtime.* Completeness. PyCUDA puts the full power of CUDA's driver API at  your disposal, if you wish. It also includes code for  interoperability with OpenGL.* Automatic Error Checking. All CUDA errors are automatically  translated into Python exceptions.* Speed. PyCUDA's base layer is written in C++, so all the niceties  above are virtually free.* Helpful `Documentation &lt;https://documen.tician.de/pycuda&gt;`_.Relatedly, like-minded computing goodness for `OpenCL &lt;https://www.khronos.org/registry/OpenCL/&gt;`_is provided by PyCUDA's sister project `PyOpenCL &lt;https://pypi.org/project/pyopencl&gt;`_.</longdescription>
</pkgmetadata>