<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://github.com/s0md3v/velocity&quot;&gt;  &lt;p align=center&gt;&lt;img src=https://i.ibb.co/M7Ms4yS/velocity.png alt=velocity width=140px height=140px&gt;&lt;/p&gt;  &lt;/a&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/s0md3v/velocity/releases&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/release/s0md3v/velocity.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/s0md3v/velocity/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/issues-closed-raw/s0md3v/velocity.svg&quot;&gt;  &lt;/a&gt;&lt;/p&gt;Velocity is an elegant DNS caching library for Python. It intercepts all the DNS/Protocol resolution calls and caches them.That's it, everything that makes network connections gets a performance boost.Liked the project? [Buy me a coffee.](https://github.com/s0md3v/velocity/new/master?readme=1#liked-the-project)## Documentation- [Installation](https://github.com/s0md3v/velocity/new/master?readme=1#installation)- [Getting started](https://github.com/s0md3v/velocity/new/master?readme=1#getting-started)- [Managing local cache](https://github.com/s0md3v/velocity/new/master?readme=1#managing-local-cache)- [Manually caching hostnames](https://github.com/s0md3v/velocity/new/master?readme=1#manually-caching-hostnames)- [Accessing cache databases](https://github.com/s0md3v/velocity/new/master?readme=1#accessing-cache-databases)#### InstallationThe recommended way to install **velocity** is by using pip as follows:```pip install velocity```#### Getting startedVelocity just needs to be imported to be activated.For example, the following program will start using cached DNS responses after the first request.```pythonimport requestsimport velocityfor i in range(10):     requests.get('https://s0md3v.github.io')```&gt; **Important:** If you are using threads, consider caching the hostnames manually to prevent the database gettingaffected from race conditions.#### Managing local cacheThe cache can be stored locally. None of the following methods return anything or take arguments, just call them at will.```pythonimport velocityvelocity.flush_db()  # deletes the local cachevelocity.save_db()   # saves the in-memory cache locallyvelocity.load_db()   # loads the local cache into memory```#### Manually caching hostnamesA hostname can be cached manually as follows:```pythonimport velocityvelocity.cache(hostname)```&gt; Note: IPv6 address are mapped to IPv4 addresses by default, which shouldn't be a problem. To avoid this behaviour and use IPv6 address instead, add an reachable port number as `velocity.cache(hostname, port)`#### Accessing databaseIn-memory cache databases can be accessed with their respective variable names.- `velocity.dns_cache` : Contains {hostname:ip} pairs- `velocity.addr_cache` : Contains {hostname:getaddrinfo_object} pairs### Contributions &amp; LicenseFeel free to report any bugs you encounter, request features, give suggestions and fix bugs.Pull requests that do not imrpove *velocity* as a program will not be accepted. Such as typo fixes, adding `.gitignore` file,pep8 styled code structure etc.Licensed under the GPLv3, see [LICENSE](https://github.com/s0md3v/velocity/blob/master/LICENSE) for more information.### Liked the project?You can support the developer by leaving a tip.- [Paypal](https://paypal.me/s0md3v)- [Patreon](https://www.patreon.com/s0md3v)</longdescription>
</pkgmetadata>