<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Copernicus Marine Service clientA library to facilitate the access of Copernicus Marine Service products and datasets.## IntroductionThis package allows to recover products and datasets information from Command Line Interface or with Python code,as well as download subsets and native files.## Command Line Interface (CLI)### Command *describe*Retrieve information about products as JSON:```&gt; copernicus-marine describe{  &quot;products&quot;: [    {      &quot;title&quot;: &quot;Antarctic Sea Ice Extent from Reanalysis&quot;,      &quot;product_id&quot;: &quot;ANTARCTIC_OMI_SI_extent&quot;,      &quot;thumbnail_url&quot;: &quot;https://catalogue.marine.copernicus.eu/documents/IMG/ANTARCTIC_OMI_SI_extent.png&quot;,      &quot;production_center&quot;: &quot;Mercator Oc\u00e9an International&quot;,      &quot;creation_datetime&quot;: &quot;2018-02-12&quot;,      &quot;modified_datetime&quot;: &quot;2018-02-12&quot;,    }    ...  ]}```Retrieve all information about datasets as JSON:```&gt; copernicus-marine describe --include-datasets{  &quot;products&quot;: [    {      &quot;title&quot;: &quot;Antarctic Sea Ice Extent from Reanalysis&quot;,      &quot;product_id&quot;: &quot;ANTARCTIC_OMI_SI_extent&quot;,      &quot;thumbnail_url&quot;: &quot;https://catalogue.marine.copernicus.eu/documents/IMG/ANTARCTIC_OMI_SI_extent.png&quot;,      &quot;production_center&quot;: &quot;Mercator Oc\u00e9an International&quot;,      &quot;creation_datetime&quot;: &quot;2018-02-12&quot;,      &quot;modified_datetime&quot;: &quot;2018-02-12&quot;,      &quot;datasets&quot;: [        {          &quot;dataset_id&quot;: &quot;antarctic_omi_si_extent&quot;,          &quot;dataset_name&quot;: &quot;antarctic_omi_si_extent&quot;,          &quot;services&quot;: [            {              &quot;protocol&quot;: &quot;ftp&quot;,              &quot;uri&quot;: &quot;ftp://my.cmems-du.eu/Core/ANTARCTIC_OMI_SI_extent/antarctic_omi_si_extent&quot;            }          ],          &quot;variables&quot;: []        }      ]    },    ...  ]}```Check out the help:```&gt; copernicus-marine describe --helpUsage: copernicus-marine describe [OPTIONS]Options:  --one-line             Output JSON on one line  --include-description  Include product description in output  --include-datasets     Include product dataset details in output  --include-keywords     Include product keyword details in output  -c, --contains TEXT    Filter catalogue output. Returns products with                         attributes matching a string token  --overwrite-cache      Force to refresh the catalogue by overwriting the                         local cache  --help                 Show this message and exit.```### Command *login*Create the configuration files for access to the copernicus marine service:'.dodsrc', '.netrc', '.motuclient-python.ini'.The directory to store these configuration files can be modified by the user using the &quot;config-file-directory&quot; optionbut beware as it should also be passed to the *subset* and *native* command afterwards.By default, if the configuration files already exist, the user is asked for confirmation to overwrite them.Example:'''&gt; copernicus marine login&lt; Username :&lt; Password :&gt; INFO     - root - Configuration files stored in ${HOME}\.copernicus_marine_client'''Checkout the help:'''&gt; copernicus-marine login --helpUsage: copernicus-marine login [OPTIONS]  This command creates the configurations files used by the various download  services and store them in a directory that can be specified by the user. If  the user specified a different 'config_file_directory' from default one  ($HOME/.copernicus_marine_client), it needs to be passed also to the  download commands.  Examples:  Case 1 (Recommended):  With environment variables COPERNICUS_MARINE_CLIENT_USERNAME &amp;  COPERNICUS_MARINE_CLIENT_PASSWORD specified:  &gt; copernicus-marine login  Case 2:  &gt; copernicus-marine login  &lt; Username: [USER-INPUT]  &lt; Password: [USER-INPUT]  Case 3:  &gt; copernicus-marine login --username JOHN_DOE --password SECRETPASSWORD  Case 4: Specific directory for config_files  &gt; copernicus-marine login --config-file-directory USER/SPECIFIED/PATHOptions:  --username TEXT                 Search for environment variable:                                  COPERNICUS_MARINE_CLIENT_USERNAME if not,                                  ask for user input  --password TEXT                 Search for environment variable:                                  COPERNICUS_MARINE_CLIENT_PASSWORD if not,                                  ask for user input  --config-file-directory TEXT    Path to the directory where the                                  configuration files are stored  --assume-yes                    Flag to skip confirmation before overwriting                                  configuration files  --verbose [DEBUG|INFO|WARN|ERROR|CRITICAL|QUIET]                                  Set the details printed to console by the                                  command (based on standard logging library).  --help                          Show this message and exit.'''### Command *subset*Download a dataset subset, based on dataset id, variable names and attributes slices:```&gt; copernicus-marine subset -i METOFFICE-GLO-SST-L4-NRT-OBS-SST-V2 -v analysed_sst -v sea_ice_fraction -t 2021-01-01 - T 2021-01-03 -x 0.0 -X 0.1 -y 0.0 -Y 0.1&lt; Username:&lt; Password:&lt; Trying to download as one file...```File downloaded to ./{dataset_id}.{nc/zarr} if not specified otherwise (through -o/--output-directory and -f/--output-filename options).Check out the help:```&gt; copernicus-marine subset --helpUsage: copernicus-marine subset [OPTIONS]  Downloads subsets of datasets as NetCDF files or Zarr stores.     Either one  of 'dataset-id' or 'dataset-url' is required     (can be found via the  'copernicus-marine describe' command).     The arguments value passed  individually through the CLI take precedence     over the values from the  &quot;motu-api-request&quot; option, which takes precedence     over the ones from the  &quot;request-file&quot; option  Example:    copernicus-marine subset --dataset-id METOFFICE-GLO-SST-L4-NRT-OBS-SST-V2    --variable analysed_sst --variable sea_ice_fraction --start-datetime    2021-01-01 --end-datetime 2021-01-02 --minimal-longitude 0.0 --maximal-    longitude 0.1 --minimal-latitude 0.0 --maximal-latitude 0.1    copernicus-marine subset -i METOFFICE-GLO-SST-L4-NRT-OBS-SST-V2 -v    analysed_sst   -v sea_ice_fraction -t &quot;2021-01-01 01:00:00&quot; -T &quot;2021-01-02    13:00:00&quot; -x 0.0 -X 0.1 -y 0.0 -Y 0.1Options:  -u, --dataset-url TEXT          The full dataset URL  -i, --dataset-id TEXT           The dataset id  --username TEXT  --password TEXT  -v, --variable TEXT             Specify dataset variables  -x, --minimal-longitude FLOAT RANGE                                  Minimal longitude for the subset. Requires a                                  float within this range:  [-180&lt;=x&lt;=180]  -X, --maximal-longitude FLOAT RANGE                                  Maximal longitude for the subset. Requires a                                  float within this range:  [-180&lt;=x&lt;=180]  -y, --minimal-latitude FLOAT RANGE                                  Minimal latitude for the subset. Requires a                                  float within this range:  [-90&lt;=x&lt;=90]  -Y, --maximal-latitude FLOAT RANGE                                  Maximal latitude for the subset. Requires a                                  float within this range:  [-90&lt;=x&lt;=90]  -z, --minimal-depth FLOAT RANGE                                  Minimal depth for the subset. Requires a                                  float within this range:  [x&gt;=0]  -Z, --maximal-depth FLOAT RANGE                                  Maximal depth for the subset. Requires a                                  float within this range:  [x&gt;=0]  -t, --start-datetime [%Y|%Y-%m-%d|%Y-%m-%dT%H:%M:%S|%Y-%m-%d %H:%M:%S]                                  The start datetime of the temporal subset.                                  Caution: encapsulate date with &quot; &quot; to ensure                                  valid format for format &quot;%Y-%m-%d %H:%M:%S&quot;  -T, --end-datetime [%Y|%Y-%m-%d|%Y-%m-%dT%H:%M:%S|%Y-%m-%d %H:%M:%S]                                  The end datetime of the temporal subset.                                  Caution: encapsulate date with &quot; &quot; to ensure                                  valid format for format &quot;%Y-%m-%d %H:%M:%S&quot;  -o, --output-directory PATH     The destination folder for the downloaded                                  files. Default is the current directory  -f, --output-filename PATH      Concatenate the downloaded data in the given                                  file name (under the output directory)  --assume-yes                    Flag to skip confirmation before download  --force-protocol [zarr|zarr-map|zarr-timeserie|opendap|motu]                                  Force download through one of the available                                  protocols  --dry-run                       Flag to specify NOT to send the request to                                  external server. Returns the request instead  --request-file PATH             Option to pass a filename corresponding to a                                  file containg CLI arguments. The file MUST                                  follow the structure of dataclass                                  'SubsetRequest'.  --motu-api-request TEXT         Option to pass a complete MOTU api request                                  as a string. Caution, user has to replace                                  double quotes &quot; with single quotes ' in the                                  request  --log-level [DEBUG|INFO|WARN|ERROR|CRITICAL|QUIET]                                  Set the details printed to console by the                                  command (based on standard logging library).  --help                          Show this message and exit```### Command *native*Download a native file (or files), based on dataset id or path to files:Example:```&gt; copernicus-marine native -u ftp://my.cmems-du.eu/Core/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/&lt; Username:&lt; Password:&lt; You requested the download of the following files:Core/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/metoffice_foam1_amm7_NWS_DIATO_CPWC_mm202207.nc - 3.27 MBCore/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/metoffice_foam1_amm7_NWS_DIATO_CPWC_mm202208.nc - 3.29 MBCore/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/metoffice_foam1_amm7_NWS_DIATO_CPWC_mm202209.nc - 3.28 MBCore/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/metoffice_foam1_amm7_NWS_DIATO_CPWC_mm202210.nc - 3.26 MBCore/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/metoffice_foam1_amm7_NWS_DIATO_CPWC_mm202211.nc - 3.26 MBCore/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m/2022/metoffice_foam1_amm7_NWS_DIATO_CPWC_mm202212.nc - 3.26 MBTotal size of the download: 19.62 MBDo you want to continue? [y/N]:```File(s) downloaded to ./{path}/{filename} if not specified otherwise:- &quot;--output-path&quot; specifies a directory to dump the files in- &quot;--no-directories&quot; to not recreate the folder structureIf not specified otherwise, after the header display with a summary of the request,the user is asked for confirmation:- &quot;--no-confirmation&quot; to turn down the confirmation prompt- &quot;--show-outputnames&quot; to display the full paths of the outputs filesCheck out the help:```&gt; copernicus-marine native --helpUsage: copernicus-marine native [OPTIONS]  Downloads native data files based on     dataset_id or datafiles url path.  The function fetches the files recursively if a folder path is passed as  url.     When provided a dataset id,     all the files in the corresponding  folder will be downloaded.      By default for any download request, a summary of the request result is      displayed to the user and a confirmation is asked.     This can be      turned down. Example:    copernicus-marine native -nd -o data_folder --dataset-id    cmems_mod_nws_bgc-pft_myint_7km-3D-diato_P1M-m    copernicus-marine native -nd -o data_folder --dataset-url    ftp://my.cmems-du.eu/Core/NWSHELF_MULTIYEAR_BGC_004_011/cmems_mod_nws_bgc-    pft_myint_7km-3D-diato_P1M-mOptions:  -u, --dataset-url TEXT       Path to the data files  -i, --dataset-id TEXT        The dataset id  --username TEXT  --password TEXT  -nd, --no-directories        Option to not recreate folder hierarchy in                               ouput directory.  --show-outputnames           Option to display the names of the output files                               before download.  -o, --output-directory PATH  The destination directory for the downloaded                               files. Default is the current directory                               [required]  --assume-yes                 Whether to ask for confirmation before                               download, after header display. If 'True',                               skips confirmation.  --dry-run                    Flag to specify NOT to send the request to                               external server. Returns the request instead  --request-file PATH          Option to pass a file containg CLI arguments.                               The file MUST follow the structure of dataclass                               'SubsetRequest'. ANY PARAMETER SPECIFIED ASIDE                               FROM FILE WILL NOT BE TAKEN INTO CONSIDERATION                               FOR THE REQUEST IF FILE IS SPECIFIED.  --help                       Show this message and exit.```## Python functionsThe library also provide python functions to help with cataloguebrowsing and datasets download in scripts.### Basic example:In this example 4 steps are performed:  1- Fetch the catalogue to select a dataset  2- Construct a SubsetRequest for this dataset  3- Download the subset as a zarr store  4- Open the subset as an xarray dataset```import copernicus_marine_client as cmc# Step 1: Fetch catalogue and parse information on datasetcatalogue = cmc.fetch_catalogue()dataset_id = 'cmems_mod_ibi_bgc_anfc_0.027deg-3D_P1D-m'assert(dataset_id in cmc.get_all_dataset_ids())dataset = catalogue.filter([dataset_id]).products[0].datasets[0]# Object &quot;dataset&quot; can be used to display all the metadata necessary to build a SubsetRequestvariable = [variable for variable in dataset.variables if variable.short_name in ['zooc']][0]coordinates = {coordinate.coordinates_id: (coordinate.minimum_value, coordinate.maximum_value) for coordinate in variable.coordinates}# Step 2: Construct the request based on parsed informationsubset_request = cmc.SubsetRequest(  dataset_id='cmems_mod_ibi_bgc_anfc_0.027deg-3D_P1D-m',  start_datetime=&quot;2023-04-20&quot;,  end_datetime='2023-04-21',  minimal_latitude= 30.0,  maximal_latitude=30.1,  minimal_longitude=0.1,  maximal_longitude=0.2,  minimal_depth=100,  maximal_depth=1000,  variables = ['zooc'],  force_protocol = &quot;zarr-map&quot;,  output_directory = 'data_folder',  output_filename = 'datastore.zarr',  assume_yes = True,)# Step 3: Download the subset based on request contentfilename = cmc.download_subset(username='FAKE_USERNAME', password='FAKE_PASSWORD', subset_request=subset_request)# Step 4: Open the downloaded subset as an xarray datasetsubset = cmc.open_dataset(filepath=filename, engine='zarr', out_type='xarray')```## InstallationUsing pip, for example:```pip install copernicus-marine-client```## Technical detailsThis module is organized around two capabilities:- a catalogue, parsed from web requests, that contains informations on the available datasets- a downloader, to simplify the download of dataset files or subsetsThe catalogue can be displayed by the user and is used by the downloader to link the userrequests with files or subset of files to retrieve.The downloader will help the user download the needed datasets.A rigid format, specified in &quot;request_structure.py&quot; is used to ensure conformity of the information passed between the CLI command and the python functions.For subset command, the format is:```@dataclassclass SubsetRequest:    dataset_url: Optional[str] = None    dataset_id: Optional[str] = None    variables: Optional[List[str]] = None    minimal_longitude: Optional[float] = None    maximal_longitude: Optional[float] = None    minimal_latitude: Optional[float] = None    maximal_latitude: Optional[float] = None    minimal_depth: Optional[float] = None    maximal_depth: Optional[float] = None    start_datetime: Optional[datetime] = None    end_datetime: Optional[datetime] = None    output_directory: Optional[str] = None    output_filename: Optional[str] = None    assume_yes: Optional[bool] = None    force_protocol: Optional[str] = None    dry_run: Optional[bool] = None```</longdescription>
</pkgmetadata>