<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># st-chatStreamlit Component, for a Chat-bot UI, [example app](https://share.streamlit.io/ai-yash/st-chat/main/examples/chatbot.py)authors - [@yashppawar](https://github.com/yashppawar) &amp; [@YashVardhan-AI](https://github.com/yashvardhan-ai)## InstallationInstall `streamlit-chat` with pip```bashpip install streamlit-chat ```usage, import the `message` function from `streamlit_chat````pyimport streamlit as stfrom streamlit_chat import messagemessage(&quot;My message&quot;) message(&quot;Hello bot!&quot;, is_user=True)  # align's the message to the right```### Screenshot![chatbot-og](https://user-images.githubusercontent.com/90775147/210397700-5ab9e00d-a61b-4bc9-a34a-b5bd4454b084.png)Another example for html in chat, and Refresh chat button```pyimport streamlit as stfrom streamlit_chat import messagefrom streamlit.components.v1 import htmldef on_input_change():    user_input = st.session_state.user_input    st.session_state.past.append(user_input)    st.session_state.generated.append(&quot;The messages from Bot\nWith new line&quot;)def on_btn_click():    del st.session_state.past[:]    del st.session_state.generated[:]audio_path = &quot;https://docs.google.com/uc?export=open&amp;id=16QSvoLWNxeqco_Wb2JvzaReSAw5ow6Cl&quot;img_path = &quot;https://www.groundzeroweb.com/wp-content/uploads/2017/05/Funny-Cat-Memes-11.jpg&quot;youtube_embed = '''&lt;iframe width=&quot;400&quot; height=&quot;215&quot; src=&quot;https://www.youtube.com/embed/LMQ5Gauy17k&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; encrypted-media;&quot;&gt;&lt;/iframe&gt;'''markdown = &quot;&quot;&quot;### HTML in markdown is ~quite~ **unsafe**&lt;blockquote&gt;  However, if you are in a trusted environment (you trust the markdown). You can use allow_html props to enable support for html.&lt;/blockquote&gt;* Lists* [ ] todo* [x] doneMath:Lift($L$) can be determined by Lift Coefficient ($C_L$) like the followingequation.$$L = \\frac{1}{2} \\rho v^2 S C_L$$~~~pyimport streamlit as stst.write(&quot;Python code block&quot;)~~~~~~jsconsole.log(&quot;Here is some JavaScript code&quot;)~~~&quot;&quot;&quot;table_markdown = '''A Table:| Feature     | Support              || ----------: | :------------------- || CommonMark  | 100%                 || GFM         | 100% w/ `remark-gfm` |'''st.session_state.setdefault(    'past',     ['plan text with line break',     'play the song &quot;Dancing Vegetables&quot;',      'show me image of cat',      'and video of it',     'show me some markdown sample',     'table in markdown'])st.session_state.setdefault(    'generated',     [{'type': 'normal', 'data': 'Line 1 \n Line 2 \n Line 3'},     {'type': 'normal', 'data': f'&lt;audio controls src=&quot;{audio_path}&quot;&gt;&lt;/audio&gt;'},      {'type': 'normal', 'data': f'&lt;img width=&quot;100%&quot; height=&quot;200&quot; src=&quot;{img_path}&quot;/&gt;'},      {'type': 'normal', 'data': f'{youtube_embed}'},     {'type': 'normal', 'data': f'{markdown}'},     {'type': 'table', 'data': f'{table_markdown}'}])st.title(&quot;Chat placeholder&quot;)chat_placeholder = st.empty()with chat_placeholder.container():        for i in range(len(st.session_state['generated'])):                        message(st.session_state['past'][i], is_user=True, key=f&quot;{i}_user&quot;)        message(            st.session_state['generated'][i]['data'],             key=f&quot;{i}&quot;,             allow_html=True,            is_table=True if st.session_state['generated'][i]['type']=='table' else False        )    st.button(&quot;Clear message&quot;, on_click=on_btn_click)with st.container():    st.text_input(&quot;User Input:&quot;, on_change=on_input_change, key=&quot;user_input&quot;)```### Screenshot![chatbot-markdown-sp](https://user-images.githubusercontent.com/27276267/224665635-1d9c1b8e-92ba-4f67-9e27-ad5d4eacaa43.png)</longdescription>
</pkgmetadata>