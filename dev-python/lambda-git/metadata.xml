<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># lambda-gitA git binary installed through PyPI for AWS Lambda - inspired by the JavaScript package [lambda-git](https://github.com/pimterry/lambda-git).## Installation```shell$ pip install lambda-git```## UsageTo use this, just require it and call `exec_command`. E.g:```pythonimport gitgit.exec_command('init') # will run 'git init'```### Executing commands in a specific path:AWS Lambda give you only `/tmp` as working directory. This package by default will execute all commands in `/tmp`, but it can be overridden by passing `cwd`.```pythonimport gitnew_repo_path = '/tmp/my-new-repo'os.mkdir(new_repo_path)git.exec_command('init', cwd=new_repo_path)```### Executing commands with separate environment:By default every git command will be executed with the system environment, but it can be overridden by setting `env`.```pythonimport gitcommit_env = os.environcommit_env['GIT_AUTHOR_NAME'] = 'My Name'commit_env['GIT_AUTHOR_EMAIL'] = 'me@email.com'commit_env['GIT_COMMITTER_NAME'] = 'My Name'commit_env['GIT_COMMITTER_EMAIL'] = 'me@email.com'new_repo_path = '/tmp/my-new-repo'git.exec_command('add', '.', cwd=new_repo_path)git.exec_command('commit', '-m &quot;first commit&quot;', cwd=new_repo_path, env=commit_env)```### Testing```shell$ python -m nose```## ContributingThis repository is [open to contributions](CONTRIBUTING.md).</longdescription>
</pkgmetadata>