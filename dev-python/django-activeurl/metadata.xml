<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================django-activeurl================Easy-to-use active URL highlighting for Django.. image:: https://img.shields.io/travis/hellysmile/django-activeurl.svg    :target: https://travis-ci.org/hellysmile/django-activeurl.. image:: https://img.shields.io/codecov/c/github/hellysmile/django-activeurl.svg    :target: https://codecov.io/gh/hellysmile/django-activeurl.. image:: https://img.shields.io/pypi/v/django_activeurl.svg    :target: https://pypi.python.org/pypi/django-activeurlFeatures========* automatic highlighting of currently active ``&lt;a&gt;`` tags via CSS class* automatic highlighting of parent ``&lt;a&gt;`` tags for menus* removes boring / hardcoded stuff from your life!* href=&quot;#&quot; never causes highlighting for compatibility with techniques such as  bootstrap nav.Usage=====After loading the template library via.. code-block:: html+django    {% load activeurl %}the following code snippet will be rendered like this if `request.full_path()` starts with `/some_page/`:.. code-block:: html+django    {% activeurl %}        &lt;ul&gt;            &lt;li&gt; &lt;!-- this &lt;li&gt; will render as &lt;li class=&quot;active&quot;&gt; --&gt;                &lt;a href=&quot;/some_page/&quot;&gt;                    some_page                &lt;/a&gt;            &lt;/li&gt;            &lt;li&gt;                &lt;a href=&quot;/another_page/&quot;&gt;                    another_page                &lt;/a&gt;            &lt;/li&gt;        &lt;/ul&gt;    {% endactiveurl %}**Note:**The content of ``{% activeurl %}…{% endactiveurl %}`` must have valid root tag (i.e.``&lt;ul&gt;`` or ``&lt;div&gt;``, etc) -- otherwise an exception will be raised.Installation============Python 2.7+, 3.4+ are supported.1. Install the *stable* version using ``pip``::       pip install django-activeurl   or install the *in-development* version using ``pip``::       pip install -e git+git://github.com/hellysmile/django-activeurl#egg=django_activeurl2. In your ``settings.py`` add the following:   .. code-block:: python       INSTALLED_APPS = (           ...           'django_activeurl',           ...       )       TEMPLATE_CONTEXT_PROCESSORS = (           ...           'django.core.context_processors.request',           ...       )3. The *lxml* library is required and thus additional libraries need to be installed to build it:   * Ubuntu::       sudo apt-get install libxml2 libxml2-dev libxslt-dev build-essential python-dev       sudo ldconfig   * Fedora::       sudo yum groupinstall 'Development Tools'       sudo yum install libxslt-devel libxml2 libxml2-devel python-devel       sudo ldconfig   * MacOS X::       brew install libxml2 libxslt       sudo update_dyld_shared_cache -force   * Windows:     A pre-built *lxml* binary can be found `here &lt;http://www.lfd.uci.edu/~gohlke/pythonlibs/&gt;`_   * Clouds:     There's a 99.99% chance that *lxml* will build out of the box.Options=======menu =&quot;yes|no&quot; (default: &quot;yes&quot;)-------------------------------Should hierarchical menus be supported? There are two different ways to declare an *active* status:* the *starts-with* logic toggles the active state if ``request.get_full_path()`` starts with the  contents of the ``&lt;a href=`` attribute.* the *equals* logic toggles the active state if ``request.get_full_path()`` is identical to the  contents of the ``&lt;a href=`` attribute.You might want to use **starts-with logic** in hierarchical menus/submenus to not only highlight the current position but also every parent position. So, with ``request.get_full_path()`` being `/menu/submenu` the following snippet will render accordingly:.. code-block:: html+django    {% activeurl menu=&quot;yes&quot; parent_tag=&quot;div&quot; %}        &lt;div&gt;            &lt;div&gt;  &lt;!-- This will render as &lt;div class=&quot;active&quot;&gt; --&gt;                &lt;a href=&quot;/menu/&quot;&gt;                    menu                &lt;/a&gt;                &lt;div&gt;  &lt;!-- This will also render as &lt;div class=&quot;active&quot;&gt; --&gt;                    &lt;a href=&quot;/menu/submenu/&quot;&gt;                        submenu                    &lt;/a&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    {% endactiveurl %}The **equals** logic works best for non-hierarchical menus where only those items should be highlighted whose ``href``-attribute perfectly match ``request.get_full_path()``:.. code-block:: html+django    {% activeurl menu=&quot;no&quot; parent_tag=&quot;div&quot; %}        &lt;div&gt;            &lt;div&gt;                &lt;a href=&quot;/menu/&quot;&gt;                    menu                &lt;/a&gt;            &lt;/div&gt;            &lt;div&gt;                &lt;a href=&quot;/menu/submenu/&quot;&gt;                    submenu                &lt;/a&gt;            &lt;/div&gt;        &lt;/div&gt;    {% endactiveurl %}ignore_params =&quot;yes|no&quot; (default: &quot;no&quot;)---------------------------------------``ignore_params`` will ignore GET parameters of URLs, e.g.*/accounts/login/* will match */accounts/login/?next=/accounts/signup/*.parent_tag =&quot;div|li|self|…&quot; (default: &quot;li&quot;)-------------------------------------------``parent_tag`` defines that a parent element -- and not the ``&lt;a&gt;`` tag itself -- should be declared *active* when there's a match in URLs. When you need to change the CSS class of the ``&lt;a&gt;`` tag, just enter &quot;self&quot;.css_class =&quot;&lt;string&gt;&quot; (default: &quot;active&quot;)-----------------------------------------Defines what CSS class to add to an active element.Configuration=============The default options can be set in ``settings.py`` as well:.. code-block:: python    ACTIVE_URL_KWARGS = {        'css_class': 'active',        'parent_tag': 'li',        'menu': 'yes',        'ignore_params': 'no'    }    ACTIVE_URL_CACHE = True    ACTIVE_URL_CACHE_TIMEOUT = 60 * 60 * 24  # 1 day    ACTIVE_URL_CACHE_PREFIX = 'django_activeurl'By default *django-activeurl* will try to retrieve a previously rendered HTML node from Django's caching backend before active URLs are looked for and a new HTML tree is built. You can disable the cache with ``ACTIVE_URL_CACHE = False``.In addition, ``ACTIVE_URL_CACHE_TIMEOUT`` can be used to define a timeout for keys to expire. The default value is one day.The last configuration option is ``ACTIVE_URL_CACHE_PREFIX`` (which is ``django_activeurl`` by default) and defines which name to use in Django's caching backend.Tests-----::    pip install tox    toxJinja2======Vanilla `Jinja2 &lt;https://github.com/mitsuhiko/jinja2&gt;`_ configuration:.. code-block:: python    from jinja2 import Environment    from django_activeurl.ext.django_jinja import ActiveUrl    env = Environment(        extensions=[ActiveUrl]    )Options can be omitted:.. code-block:: jinja    {% activeurl css_class=&quot;active&quot;, menu=&quot;yes&quot;, parent_tag=&quot;li&quot;, ignore_params=&quot;no&quot; %}        &lt;ul&gt;            &lt;li&gt;                &lt;a href=&quot;/page/&quot;&gt;page&lt;/a&gt;            &lt;/li&gt;            &lt;li&gt;                &lt;a href=&quot;/other_page/&quot;&gt;other_page&lt;/a&gt;            &lt;/li&gt;        &lt;/ul&gt;    {% endactiveurl %}If you're using `django-jinja &lt;https://github.com/niwibe/django-jinja&gt;`_you need to load the ``ActiveUrl`` in ``settings.py``.Django 1.8+ Jinja2 environment loader example can be found in `tests &lt;https://github.com/hellysmile/django-activeurl/blob/master/tests/jinja_config.py&gt;`_.Background==========For building the HTML element tree *django-activeurl* uses `lxml&lt;http://pypi.python.org/pypi/lxml/&gt;`_, which is one of the best HTML parsingtools around. More info and benchmarks can be found at `habrahabr.ru&lt;http://habrahabr.ru/post/163979/&gt;`_ (in russian). Note that there's nocontent rebuilding inside the template tag when no active URLs are found, sothere's no impact on performance.</longdescription>
</pkgmetadata>