<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># The RAMS ToolKit (RAMSTK)&gt; A ToolKit for **R**eliability, **A**vailability, **M**aintainability, and&gt; **S**afety (RAMS) analyses.&lt;table&gt;    &lt;tr&gt;        &lt;th&gt;Tests&lt;/th&gt;        &lt;td&gt;        &lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/workflow/status/ReliaQualAssociates/ramstk/RAMSTK%20Test%20Suite?label=Build%20%26%20Test&quot;&gt;        &lt;a href=&quot;https://codecov.io/gh/ReliaQualAssociates/ramstk&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/ReliaQualAssociates/ramstk/branch/master/graph/badge.svg?token=sFOa7EjZAg&quot;/&gt;&lt;/a&gt;        &lt;a href='https://coveralls.io/github/ReliaQualAssociates/ramstk?branch=master'&gt;&lt;img src='https://coveralls.io/repos/github/ReliaQualAssociates/ramstk/badge.svg?branch=master' alt='Coverage Status' /&gt;&lt;/a&gt;    &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;Quality&lt;/th&gt;        &lt;td&gt;            &lt;a href=&quot;https://www.codefactor.io/repository/github/reliaqualassociates/ramstk&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/reliaqualassociates/ramstk/badge&quot; alt=&quot;CodeFactor&quot; /&gt;&lt;/a&gt;            &lt;img alt=&quot;Quality Gate&quot; src=&quot;https://sonarcloud.io/api/project_badges/measure?project=ReliaQualAssociates_ramstk&amp;metric=alert_status&quot;&gt;        &lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;th&gt;Packages&lt;/th&gt;        &lt;td&gt;            &lt;img alt=&quot;GitHub release (latest SemVer including pre-releases)&quot; src=&quot;https://img.shields.io/github/v/release/ReliaQualAssociates/ramstk?include_prereleases&amp;label=GitHub%20Release&quot;&gt;            &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/ramstk?label=PyPi%20Release&quot;&gt;        &lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;## üö© Table of Contents- [Features](#-features)- [Installing](#-installing)    - [Prerequisites](#prerequisites)    - [Download](#download)    - [Running the Tests](#running-the-tests)- [Usage](#-usage)- [Documentation](#documentation)- [Contributing](#-contributing)- [Authors](#-authors)- [License](#-license)- [Similar Products](#similar-products)## DisclaimerRAMSTK attempts to use [Semantic Versioning](https://semver.org/) 2.0.0.  Perspec item 4, major version 0 is for initial development and anything maychange at any time.  That is certainly the case for RAMSTK!  Because RAMSTKis a one developer show, there is no active develop branch at the moment. This may change after release of 1.0.0.  Until then, tagged releases can beused, but the `latest` tag may not work and may not be backwards-compatible. While major version is at 0, breaking changes will be reflected in bumps tothe minor version number.  That is, version 0.15.0 is not compatible withversion 0.14.0.## üé®&amp;nbsp; FeaturesRAMSTK is built on the concept of modules where a module is a collection ofrelated information and/or analyses pertinent to system development.  Themodules currently included in RAMSTK are:* Revision Module  - Usage profile* Function Module  - Functional decomposition  - Hazards analysis  - Failure definitions* Requirements Module  - Stakeholder input prioritization  - Requirement development  - Analysis of requirement for clarity, completeness, consistency, and verifiability* Hardware Module  - Reliability allocation      - Equal apportionment      - AGREE apportionment      - ARINC apportionment      - Feasibility of Objectives  - Hardware reliability predictions using various methods      - Similar items analysis      - MIL-HDBK-217F parts count      - MIL-HDBK-217F parts stress  - FMEA/FMECA      - RPN      - MIL-STD-1629A, Task 102 Criticality Analysis  - Physics of failure analysis* Validation &amp; Verification Module  - Task description  - Task acceptance value(s)  - Task time  - Task cost  - Overall validation plan time/cost estimates## üíæ&amp;nbsp; InstallingRAMSTK uses [postgresql](https://www.postgresql.org/) for its databaseengine.  You'll need to have a user with read/write access to a postgresqlserver to use RAMSTK.  Instructions for setting up the postgresql servers andcreating users with the appropriate permissions can be found in the project[Wiki](https://github.com/ReliaQualAssociates/ramstk/wiki).### Download and InstallSince RAMSTK is still a version 0 product, it's highly recommended that youinstall in a virtual environment.  The instructions below presume you willbe installing in a virtual environment and system-wide Python packages thatRAMSTK depends on will be unavailable.  That being the case, you will needvarious system development packages available via your operating system'spackage manager to install RAMSTK.Once you have installed any missing development file packages using youroperating system's package manager, download the \&lt;version&gt; of RAMSTKsource from GitHub you wish to install.```shell$ wget https://github.com/ReliaQualAssociates/ramstk/archive/v&lt;version&gt;.tar.gz$ tar -xf v&lt;version&gt;.tar.gz$ cd ramstk-&lt;version&gt;```The other option for obtaining the RAMSTK source code is to clone therepository.```shell$ git clone https://github.com/ReliaQualAssociates/ramstk.git ramstk.git$ cd ramstk.git```Create and activate a virtual environment however you are acustomed to.One approach is to use pyenv and poetry.  Using pyenv isn't necessaryunless you want to install and use a Python version other than thatprovided by your operating system.```shell$ pyenv install 3.8.7$ poetry env use ~/.pyenv/shims/python3.8$ poetry shell```This will install Python-3.8.7 and tell poetry to use the Python interpreteryou just installed.  Finally, poetry will create, if needed, and activatethe virtual environment using Python-3.8.7 as the interpreter.Now that the virtual environment is activated, you can install thenecessary RAMSTK dependencies and RAMSTK itself.  Omitting the PREFIXvariable will cause RAMSTK to install to /usr/local by default.```shell$ make depends$ make PREFIX=$VIRTUAL_ENV install```When upgrading RAMSTK, you can simply:```shell$ pip install -U ramstk```This will only install the latest RAMSTK version from PyPi and will leaveconfiguration, data, and icon files untouched.  If you cloned the RAMSTKrepository, you can also use the Makefile:```shell$ git switch master$ git pull$ make install.dev```### Development DependenciesWe use [poetry](https://github.com/python-poetry/poetry) to manage thedependencies for developing RAMSTK.  Using the Makefile, install as follows:```shell$ make depends```This should get all the needed development and runtime requirements installedif they're not already.### Running the TestsTo run the entire test suite for RAMSTK after installing, simply execute:```shell$ make test```To run the test suite with coverage, execute:```shell$ make coverage$ make coverage.report```To run specific tests or groups of tests, use pytest:```shell$ pytest -m integration tests/modules/test_allocation.py$ pytest -m unit tests/analyses/prediction```## üî®&amp;nbsp; UsageAfter installing RAMSTK, it can be launched from a terminal emulator:```$ ramstk```This is a good option if you need to file an issue as the output should beincluded in your report.  RAMSTK also installs a *.desktop file and can befound where ever applications in the category Math or Science are listed.If you've installed in a virtual environment or other non-standard location,this *.desktop file may not be found.See the User Guide for the latest usage instructions.## DocumentationDocumentation for RAMSTK is built and included as release assets.  For eachrelease, you will find a pdf and html implementation of the User Guide.  Foreach minor and major version release, you will also find a pdf and htmlimplementation of the Developer's Guide.## üí¨&amp;nbsp; ContributingPlease read [CONTRIBUTING.md](https://github.com/ReliaQualAssociates/ramstk/tree/develop/docs/CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.Also read [DEVELOPMENT_ENV.md](https://github.com/ReliaQualAssociates/ramstk/tree/develop/docs/DEVELOPMENT_ENV.md) for instructions on setting up a development environment to work on and test RAMSTK.## üçû&amp;nbsp; Authors* **Doyle 'weibullguy' Rowland** - *Initial work* - [weibullguy](https://github.com/weibullguy)## üìú&amp;nbsp; LicenseThis project is licensed under the BSD-3-Clause License - see the [LICENSE](https://github.com/ReliaQualAssociates/ramstk/blob/develop/LICENSE) file for details.RAMSTK is also registered with the United States Copyright Office underregistration number TXu 1-896-035 because I have an attorney and attorneyslike to file paperwork for $300/hour.## Similar ProductsThe following are commercially available products that perform RAMSanalyses.  We are not endorsing any of them; they are all fine products andmay be a better fit for you or your organization depending on your needsand budget.  Obviously, we would prefer you use RAMSTK.* [PTC Windchill Quality](https://www.ptc.com/en/products/plm/capabilities/quality)* [ReliaSoft Synthesis](https://www.reliasoft.com/products)</longdescription>
</pkgmetadata>