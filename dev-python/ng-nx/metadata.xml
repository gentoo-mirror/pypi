<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img alt=&quot;NebulaGraph NetworkX Adaptor(ng_nx)&quot; src=&quot;https://user-images.githubusercontent.com/1651790/227207918-7c023215-b7cf-4aa5-b734-bc50411dab77.png&quot;&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;Manipulation of graphs in NebulaGraph using the NetworkX API.&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;LICENSE&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://badge.fury.io/py/ng_nx&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://badge.fury.io/py/ng_nx.svg&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pdm.fming.dev&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/pdm-managed-blueviolet&quot; alt=&quot;pdm-managed&quot;&gt;&lt;/a&gt;&lt;!-- &lt;a href=&quot;https://github.com/wey-gu/nebulagraph-nx/actions/workflows/ci.yml&quot;&gt;  &lt;img src=&quot;https://github.com/wey-gu/nebulagraph-nx/actions/workflows/ci.yml/badge.svg&quot; alt=&quot;Tests&quot;&gt;&lt;/a&gt; --&gt;&lt;/p&gt;---**Documentation**: &lt;a href=&quot;https://github.com/wey-gu/nebulagraph-nx#documentation&quot; target=&quot;_blank&quot;&gt;https://github.com/wey-gu/nebulagraph-nx#documentation&lt;/a&gt;**Source Code**: &lt;a href=&quot;https://github.com/wey-gu/nebulagraph-nx&quot; target=&quot;_blank&quot;&gt;https://github.com/wey-gu/nebulagraph-nx&lt;/a&gt;---NebulaGraph NetworkX (ng_nx) is a tool that allows you to use the NetworkX API for manipulating graphs in NebulaGraph. It makes it easy to analyze and manipulate graphs using NebulaGraph's advanced capabilities while still using the familiar NetworkX interface. In short, ng_nx bridges the gap between NebulaGraph and NetworkX.## Quick Start### Install```bashpip install ng_nx```### Run Algorithm on NebulaGraph```pythonfrom ng_nx import NebulaReaderfrom ng_nx.utils import NebulaGraphConfigimport networkx as nxconfig = NebulaGraphConfig()reader = NebulaReader(    space=&quot;basketballplayer&quot;,    edges=[&quot;follow&quot;, &quot;serve&quot;],    properties=[[&quot;degree&quot;], [&quot;start_year&quot;, &quot;end_year&quot;]],    nebula_config=config, limit=10000)g = reader.read()pr = nx.pagerank(    g, alpha=0.85,    max_iter=100,    tol=1e-06,    weight='degree')import community as community_louvainug = g.to_undirected()louvain = community_louvain.best_partition(ug)```### Write Result to NebulaGraph#### Create Schema for the result writing```ngqlCREATE TAG IF NOT EXISTS pagerank (    pagerank double NOT NULL);CREATE TAG IF NOT EXISTS louvain (    cluster_id int NOT NULL);``````pythonfrom ng_nx import NebulaWriterpr_writer = NebulaWriter(data=pr, nebula_config=config)# properties to writeproperties = [&quot;pagerank&quot;]pr_writer.set_options(    label=&quot;pagerank&quot;,    properties=properties,    batch_size=256,    write_mode=&quot;insert&quot;,    sink=&quot;nebulagraph_vertex&quot;,)# write back to NebulaGraphpr_writer.write()# write louvain resultlouvain_writer = NebulaWriter(data=louvain, nebula_config=config)# properties to writeproperties = [&quot;cluster_id&quot;]louvain_writer.set_options(    label=&quot;louvain&quot;,    properties=properties,    batch_size=256,    write_mode=&quot;insert&quot;,    sink=&quot;nebulagraph_vertex&quot;,)louvain_writer.write()```## Documentation[API Reference](https://github.com/wey-gu/nebulagraph-nx/blob/main/docs/API.md)</longdescription>
</pkgmetadata>