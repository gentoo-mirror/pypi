<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyInfernoPython package that renders [pyinstrument](https://github.com/joerick/pyinstrument) profiles as flamegraphs, using the [inferno](https://github.com/jonhoo/inferno) rust crate.![Example command line usage](https://github.com/mrob95/pyinferno/blob/master/images/example_gif.gif?raw=true)![Example output](https://github.com/mrob95/pyinferno/blob/master/images/pandas_example.png?raw=true)## InstallationInstall from [PyPi](https://pypi.org/project/pyinferno/):```pip install pyinferno```## Usage### Context managerTo profile a specific piece of code, you can use the [pyinstrument Profiler class](https://pyinstrument.readthedocs.io/en/latest/guide.html#profile-a-specific-chunk-of-code), then render the result using pyinferno's `InfernoRenderer`:```pythonfrom pyinstrument.profiler import Profilerfrom pyinferno import InfernoRendererimport timedef slow():    time.sleep(0.5)with Profiler() as profiler:    slow()output = profiler.output(InfernoRenderer(title=&quot;slow&quot;))with open(&quot;flamegraph.svg&quot;, &quot;w+&quot;) as f:    f.write(output)```For convenience, the same result can be achieved using the `InfernoProfiler` context manager:```pythonfrom pyinferno import InfernoProfilerimport timedef slow():    time.sleep(0.5)with InfernoProfiler(file=&quot;flamegraph.svg&quot;, auto_open=True, title=&quot;slow&quot;):    slow()```### Command-lineTo profile a Python script, you can pass `pyinferno.Renderer` as the renderer to the `pyinstrument` CLI:```bashpyinstrument -r pyinferno.Renderer -o flamegraph.svg slow.py```For convenience, `pyinferno` includes its own script which wraps the `pyinstrument` CLI:```bashpyinferno slow.py```If no output file is specified, the flamegraph will be written to a temporary file and automatically opened using python's `webbrowser` module. To save the flamegraph to a file, pass the `-o` option:```bashpyinferno -o flamegraph.svg slow.py```To profile a python module, pass the `-m` argument:```bashpyinferno -m pytest -k slow_test```</longdescription>
</pkgmetadata>