<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build status](https://travis-ci.org/City-of-Helsinki/django-munigeo.svg?branch=master)](https://travis-ci.org/City-of-Helsinki/django-munigeo)[![codecov](https://codecov.io/gh/City-of-Helsinki/django-munigeo/branch/master/graph/badge.svg)](https://codecov.io/gh/City-of-Helsinki/django-munigeo)[![Requirements](https://requires.io/github/City-of-Helsinki/django-munigeo/requirements.svg?branch=master)](https://requires.io/github/City-of-Helsinki/django-munigeo/requirements/?branch=master)munigeo=======`munigeo` is a reusable Django application for storing and accessingmunicipality-related geospatial data. It can manage following categories ofdata:* Municipalities as containers of everything below* Administrative divisions (with parent-child relationships and links to Municipalities)* Streets and address locations on those Streets* Buildings with 2D-geometries and addresses* PoIs (Points of Interest) with location and typeIf you are using Django Rest Framework (DRF), munigeo also provides you with serializersfor including these in your API.For actually getting the data into your database application, munigeo provides importerframework. Currently we only have actual importers for City of Helsinki, butother are welcome.## UsageInstall this to your project with `pip install django-munigeo`,add `munigeo` to your `INSTALLED_APPS` setting.### Helsinki exampleBefore you can get Helsinki, you will need the data for Finland first:```python manage.py geo_import finland --municipalities```then```python manage.py geo_import helsinki --divisions```</longdescription>
</pkgmetadata>