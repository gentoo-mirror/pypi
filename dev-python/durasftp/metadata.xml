<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DuraSFTPA durable extension the pysftp SFTP client: https://pysftp.readthedocs.io/## Installation```bashpip install durasftp```## Command Line UsageShow the help:```bashpython -m durasftp --help```Mirror an SFTP endpoint to your local with private keys:```bashpython -m durasftp --host some.sftp.server.com --port 22 --username your_username \  --private-key ~/.ssh/id_rsa --private-key-pass 'ULTRASECUREPASSWORD' \  --local-base /tmp/local_copy_of_server```Mirror an SFTP endpoint to your local with a password:```bashpython -m durasftp --host some.sftp.server.com --port 22 --username your_username \  --password 'ULTRASECUREPASSWORD' \  --local-base /tmp/local_copy_of_server```## Package UsageThis package very closely mirrors the functionality of pysftp, except it automatically recovers a connection in the event that network connectivity is intermittent.It also introduces a mirroring functionality, where you can copy a local directory toa remote server, or copy a remote directory to the local. It will ignore files thatalready exist on the destination, if the file size and modification time are identical.### Basic UsageThe DurableSFTPConnection class is intended to be a drop-in replacement for thepysftp.Connection class. With a stable network connection, it should be identical inevery way.```pythonfrom durasftp import DurableSFTPConnectionconn = DurableSFTPConnection(host=&quot;some.sftp.server.com&quot;, port=22, username=&quot;your_username&quot;, password=&quot;ULTRASECUREPASSWORD&quot;)conn.listdir('/')```### Mirror from remote server to local```pythonfrom durasftp import Mirrorermirrorer = Mirrorer(    local_base=&quot;/tmp/local_copy_of_server&quot;,    host=&quot;some.sftp.server.com&quot;,    port=22,    username=&quot;your_username&quot;,    password=&quot;ULTRASECUREPASSWORD&quot;,    timeout=3,)mirrorer.mirror_from_remote(dry_run=True)```</longdescription>
</pkgmetadata>