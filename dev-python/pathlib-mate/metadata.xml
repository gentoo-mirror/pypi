<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://readthedocs.org/projects/pathlib_mate/badge/?version=latest    :target: https://pathlib_mate.readthedocs.io/?badge=latest    :alt: Documentation Status.. image:: https://github.com/MacHu-GWU/pathlib_mate-project/workflows/CI/badge.svg    :target: https://github.com/MacHu-GWU/pathlib_mate-project/actions?query=workflow:CI.. image:: https://codecov.io/gh/MacHu-GWU/pathlib_mate-project/branch/master/graph/badge.svg  :target: https://codecov.io/gh/MacHu-GWU/pathlib_mate-project.. image:: https://img.shields.io/pypi/v/pathlib_mate.svg    :target: https://pypi.python.org/pypi/pathlib_mate.. image:: https://img.shields.io/pypi/l/pathlib_mate.svg    :target: https://pypi.python.org/pypi/pathlib_mate.. image:: https://img.shields.io/pypi/pyversions/pathlib_mate.svg    :target: https://pypi.python.org/pypi/pathlib_mate.. image:: https://img.shields.io/pypi/dm/pathlib_mate.svg    :target: https://github.com/MacHu-GWU/pathlib_mate-project.. image:: https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social    :target: https://github.com/MacHu-GWU/pathlib_mate-project------.. image:: https://img.shields.io/badge/Link-Document-blue.svg      :target: https://pathlib_mate.readthedocs.io/index.html.. image:: https://img.shields.io/badge/Link-API-blue.svg      :target: https://pathlib_mate.readthedocs.io/py-modindex.html.. image:: https://img.shields.io/badge/Link-Source_Code-blue.svg      :target: https://pathlib_mate.readthedocs.io/py-modindex.html.. image:: https://img.shields.io/badge/Link-Install-blue.svg      :target: `install`_.. image:: https://img.shields.io/badge/Link-GitHub-blue.svg      :target: https://github.com/MacHu-GWU/pathlib_mate-project.. image:: https://img.shields.io/badge/Link-Submit_Issue-blue.svg      :target: https://github.com/MacHu-GWU/pathlib_mate-project/issues.. image:: https://img.shields.io/badge/Link-Request_Feature-blue.svg      :target: https://github.com/MacHu-GWU/pathlib_mate-project/issues.. image:: https://img.shields.io/badge/Link-Download-blue.svg      :target: https://pypi.org/pypi/pathlib_mate#filesWelcome to ``pathlib_mate`` Documentation==============================================================================`pathlib &lt;https://docs.python.org/3/library/pathlib.html&gt;`_ is an awesome library handling path in different OS. And it's been added into standard library since Python3.4. ``pathlib_mate`` gives extensive methods and attributes, makes ``pathlib`` more powerful and user-friendly.Features:**Convenient Attribute Accessor**:.. code-block:: python    &gt;&gt;&gt; p = Path(&quot;/Users/username/test.py&quot;).    &gt;&gt;&gt; p.abspath    /Users/username/test.py    &gt;&gt;&gt; p.basename    test.py    &gt;&gt;&gt; p.fname    test    &gt;&gt;&gt; p.ext    .py    &gt;&gt;&gt; p.dirname    username    &gt;&gt;&gt; p.dirpath    /Users/username    &gt;&gt;&gt; p.size    1500    &gt;&gt;&gt; p.size_in_text    1.46 KB    &gt;&gt;&gt; p.create_datetime    datetime(2018, 1, 15, 8, 30, 15)    &gt;&gt;&gt; p.md5    415f12f07a7e01486cc82856621e05bf    &gt;&gt;&gt; p.sha256    d51512cb0ac71484c01c475409a73225d0149165024d7aac6d8e655eedf2c025    &gt;&gt;&gt; p.sha512    7882fc375840cafa364eaf29dc424645b72fcdbe61fc3326c5afd98e70f696e4f390e0e3f159eac2cb60cedc0992ef7b5f8744a4481911e914a7c5b979e6de68**Powerful Path Search**:.. code-block:: python    &gt;&gt;&gt; p = Path(&quot;/Users/username/Documents&quot;)    &gt;&gt;&gt; for path in p.select_file(recursive=True)    ...    &gt;&gt;&gt; for path in p.select_file(recursive=False)    ...    &gt;&gt;&gt; for path in p.select_dir(recursive=True)    ...    &gt;&gt;&gt; for image_file in p.select_by_ext([&quot;.jpg&quot;, &quot;.png&quot;])    ...    &gt;&gt;&gt; for big_file in p.select_by_size(min_size=1000000)    ...    &gt;&gt;&gt; for video_file in p.select_video():    ...    # You can customize the filter anyway you want    &gt;&gt;&gt; def py_filter(p): return &quot;.py&quot; == p.ext.lower()    &gt;&gt;&gt; for py_file in p.select_file(py_filter):    ...**Eazy to use File / Dir Operation**:.. code-block:: python    &gt;&gt;&gt; p = Path(&quot;/Users/username/Documents/Readme.txt&quot;)    # mutate    &gt;&gt;&gt; p.change(new_ext=&quot;.md&quot;)    /Users/username/Documents/Readme.md    &gt;&gt;&gt; p.change(new_fname=&quot;Tutorial&quot;)    /Users/username/Documents/Tutorial.txt    &gt;&gt;&gt; p.change(new_basename=&quot;README.rst&quot;)    /Users/username/Documents/README.rst    &gt;&gt;&gt; p.change(new_dirname=&quot;Downloads&quot;)    /Users/username/Downloads/Readme.txt    &gt;&gt;&gt; p.change(new_dirpath=&quot;/User/username/Downloads)    /Users/username/Downloads/Readme.txt    &gt;&gt;&gt; p.change(new_abspath=&quot;/Users/username/Downloads/Readme.txt&quot;)    /Users/username/Downloads/Readme.txt    # copy    &gt;&gt;&gt; p.moveto(new_ext=&quot;.md&quot;, makedirs=True)    # cut    &gt;&gt;&gt; p.copyto(new_ext=&quot;.md&quot;, makedirs=True)    # delete    &gt;&gt;&gt; p.remove()    # delete file or directory recursively, ignore if not exists    &gt;&gt;&gt; p.remove_if_exists()    # make dir and required parents recursively, if not exists    &gt;&gt;&gt; p.mkdir_if_not_exists()**Atomic Write Support**:If anything wrong happens during writing big chunk of data into a file. It may leave you an incomplete file. Atomic write can guarantee either 100% done or nothing happens.Thanks for `atomicwrites &lt;https://pypi.org/project/atomicwrites/&gt;`_ project. Now ``pathlib_mate`` supports atomic write API:.. code-block:: python    &gt;&gt;&gt; p = Path(&quot;test.dat&quot;)    &gt;&gt;&gt; s = &quot;Hello World&quot;    &gt;&gt;&gt; b = s.encode(&quot;utf-8)    &gt;&gt;&gt; p.atomic_write_bytes(b, overwrite=True)    &gt;&gt;&gt; p.atomic_write_text(s, overwrite=True)**Powerful Production Tools**:.. code-block:: python    &gt;&gt;&gt; p = Path(&quot;/Users/username/Documents/Github/pathlib_mate-project&quot;)    &gt;&gt;&gt; p.print_big_dir_and_big_file()    ...    &gt;&gt;&gt; p.file_stat()    {&quot;file&quot;: 122, &quot;dir&quot;: 41, &quot;size&quot;: 619682}    # file statistics, include sub folder    &gt;&gt;&gt; p.file_stat_for_all()    # make an zip archive for the directory, auto naming    &gt;&gt;&gt; p.make_zip_archive()    # make an zip archive for the directory, auto naming    &gt;&gt;&gt; p.backup().. _install:Install------------------------------------------------------------------------------``pathlib_mate`` is released on PyPI, so all you need is:.. code-block:: console    $ pip install pathlib_mateTo upgrade to latest version:.. code-block:: console    $ pip install --upgrade pathlib_mate</longdescription>
</pkgmetadata>