<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;types-aiobotocore-proton&quot;&gt;&lt;/a&gt;# types-aiobotocore-proton[![PyPI - types-aiobotocore-proton](https://img.shields.io/pypi/v/types-aiobotocore-proton.svg?color=blue)](https://pypi.org/project/types-aiobotocore-proton)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-proton.svg?color=blue)](https://pypi.org/project/types-aiobotocore-proton)[![Docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_proton/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-proton?color=blue)](https://pypistats.org/packages/types-aiobotocore-proton)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[aiobotocore.Proton 2.5.2](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/proton.html#Proton)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in[types-aiobotocore-proton docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_proton/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [types-aiobotocore-proton](#types-aiobotocore-proton)  - [How to install](#how-to-install)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Waiters annotations](#waiters-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `types-aiobotocore` for `Proton` service.```bash# install with aiobotocore type annotationspython -m pip install 'types-aiobotocore[proton]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'types-aiobotocore-lite[proton]'# standalone installationpython -m pip install types-aiobotocore-proton```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y types-aiobotocore-proton```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `types-aiobotocore[proton]` in your environment:```bashpython -m pip install 'types-aiobotocore[proton]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `aiobotocore` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `types-aiobotocore-lite[proton]` in your environment:```bashpython -m pip install 'types-aiobotocore-lite[proton]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `types-aiobotocore` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `types-aiobotocore` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[proton]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed  `types-aiobotocore`Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `types-aiobotocore[proton]` with services you use in your  environment:```bashpython -m pip install 'types-aiobotocore[proton]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `types-aiobotocore[proton]` in your environment:```bashpython -m pip install 'types-aiobotocore[proton]'````Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `types-aiobotocore[proton]` in your environment:```bashpython -m pip install 'types-aiobotocore[proton]'```Optionally, you can install `types-aiobotocore` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`ProtonClient` provides annotations for `session.create_client(&quot;proton&quot;)`.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_proton import ProtonClientsession = get_session()async with session.create_client(&quot;proton&quot;) as client:    client: ProtonClient    # now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`types_aiobotocore_proton.paginator` module contains type annotations for allpaginators.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_proton import ProtonClientfrom types_aiobotocore_proton.paginator import (    ListComponentOutputsPaginator,    ListComponentProvisionedResourcesPaginator,    ListComponentsPaginator,    ListEnvironmentAccountConnectionsPaginator,    ListEnvironmentOutputsPaginator,    ListEnvironmentProvisionedResourcesPaginator,    ListEnvironmentTemplateVersionsPaginator,    ListEnvironmentTemplatesPaginator,    ListEnvironmentsPaginator,    ListRepositoriesPaginator,    ListRepositorySyncDefinitionsPaginator,    ListServiceInstanceOutputsPaginator,    ListServiceInstanceProvisionedResourcesPaginator,    ListServiceInstancesPaginator,    ListServicePipelineOutputsPaginator,    ListServicePipelineProvisionedResourcesPaginator,    ListServiceTemplateVersionsPaginator,    ListServiceTemplatesPaginator,    ListServicesPaginator,    ListTagsForResourcePaginator,)session = get_session()async with session.create_client(&quot;proton&quot;) as client:    client: ProtonClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    list_component_outputs_paginator: ListComponentOutputsPaginator = client.get_paginator(        &quot;list_component_outputs&quot;    )    list_component_provisioned_resources_paginator: ListComponentProvisionedResourcesPaginator = (        client.get_paginator(&quot;list_component_provisioned_resources&quot;)    )    list_components_paginator: ListComponentsPaginator = client.get_paginator(&quot;list_components&quot;)    list_environment_account_connections_paginator: ListEnvironmentAccountConnectionsPaginator = (        client.get_paginator(&quot;list_environment_account_connections&quot;)    )    list_environment_outputs_paginator: ListEnvironmentOutputsPaginator = client.get_paginator(        &quot;list_environment_outputs&quot;    )    list_environment_provisioned_resources_paginator: ListEnvironmentProvisionedResourcesPaginator = client.get_paginator(        &quot;list_environment_provisioned_resources&quot;    )    list_environment_template_versions_paginator: ListEnvironmentTemplateVersionsPaginator = (        client.get_paginator(&quot;list_environment_template_versions&quot;)    )    list_environment_templates_paginator: ListEnvironmentTemplatesPaginator = client.get_paginator(        &quot;list_environment_templates&quot;    )    list_environments_paginator: ListEnvironmentsPaginator = client.get_paginator(        &quot;list_environments&quot;    )    list_repositories_paginator: ListRepositoriesPaginator = client.get_paginator(        &quot;list_repositories&quot;    )    list_repository_sync_definitions_paginator: ListRepositorySyncDefinitionsPaginator = (        client.get_paginator(&quot;list_repository_sync_definitions&quot;)    )    list_service_instance_outputs_paginator: ListServiceInstanceOutputsPaginator = (        client.get_paginator(&quot;list_service_instance_outputs&quot;)    )    list_service_instance_provisioned_resources_paginator: ListServiceInstanceProvisionedResourcesPaginator = client.get_paginator(        &quot;list_service_instance_provisioned_resources&quot;    )    list_service_instances_paginator: ListServiceInstancesPaginator = client.get_paginator(        &quot;list_service_instances&quot;    )    list_service_pipeline_outputs_paginator: ListServicePipelineOutputsPaginator = (        client.get_paginator(&quot;list_service_pipeline_outputs&quot;)    )    list_service_pipeline_provisioned_resources_paginator: ListServicePipelineProvisionedResourcesPaginator = client.get_paginator(        &quot;list_service_pipeline_provisioned_resources&quot;    )    list_service_template_versions_paginator: ListServiceTemplateVersionsPaginator = (        client.get_paginator(&quot;list_service_template_versions&quot;)    )    list_service_templates_paginator: ListServiceTemplatesPaginator = client.get_paginator(        &quot;list_service_templates&quot;    )    list_services_paginator: ListServicesPaginator = client.get_paginator(&quot;list_services&quot;)    list_tags_for_resource_paginator: ListTagsForResourcePaginator = client.get_paginator(        &quot;list_tags_for_resource&quot;    )```&lt;a id=&quot;waiters-annotations&quot;&gt;&lt;/a&gt;### Waiters annotations`types_aiobotocore_proton.waiter` module contains type annotations for allwaiters.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_proton.client import ProtonClientfrom types_aiobotocore_proton.waiter import (    ComponentDeletedWaiter,    ComponentDeployedWaiter,    EnvironmentDeployedWaiter,    EnvironmentTemplateVersionRegisteredWaiter,    ServiceCreatedWaiter,    ServiceDeletedWaiter,    ServiceInstanceDeployedWaiter,    ServicePipelineDeployedWaiter,    ServiceTemplateVersionRegisteredWaiter,    ServiceUpdatedWaiter,)session = get_session()async with session.create_client(&quot;proton&quot;) as client:    client: ProtonClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    component_deleted_waiter: ComponentDeletedWaiter = client.get_waiter(&quot;component_deleted&quot;)    component_deployed_waiter: ComponentDeployedWaiter = client.get_waiter(&quot;component_deployed&quot;)    environment_deployed_waiter: EnvironmentDeployedWaiter = client.get_waiter(        &quot;environment_deployed&quot;    )    environment_template_version_registered_waiter: EnvironmentTemplateVersionRegisteredWaiter = (        client.get_waiter(&quot;environment_template_version_registered&quot;)    )    service_created_waiter: ServiceCreatedWaiter = client.get_waiter(&quot;service_created&quot;)    service_deleted_waiter: ServiceDeletedWaiter = client.get_waiter(&quot;service_deleted&quot;)    service_instance_deployed_waiter: ServiceInstanceDeployedWaiter = client.get_waiter(        &quot;service_instance_deployed&quot;    )    service_pipeline_deployed_waiter: ServicePipelineDeployedWaiter = client.get_waiter(        &quot;service_pipeline_deployed&quot;    )    service_template_version_registered_waiter: ServiceTemplateVersionRegisteredWaiter = (        client.get_waiter(&quot;service_template_version_registered&quot;)    )    service_updated_waiter: ServiceUpdatedWaiter = client.get_waiter(&quot;service_updated&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`types_aiobotocore_proton.literals` module contains literals extracted fromshapes that can be used in user code for type checking.```pythonfrom types_aiobotocore_proton.literals import (    BlockerStatusType,    BlockerTypeType,    ComponentDeletedWaiterName,    ComponentDeployedWaiterName,    ComponentDeploymentUpdateTypeType,    DeploymentStatusType,    DeploymentUpdateTypeType,    EnvironmentAccountConnectionRequesterAccountTypeType,    EnvironmentAccountConnectionStatusType,    EnvironmentDeployedWaiterName,    EnvironmentTemplateVersionRegisteredWaiterName,    ListComponentOutputsPaginatorName,    ListComponentProvisionedResourcesPaginatorName,    ListComponentsPaginatorName,    ListEnvironmentAccountConnectionsPaginatorName,    ListEnvironmentOutputsPaginatorName,    ListEnvironmentProvisionedResourcesPaginatorName,    ListEnvironmentTemplateVersionsPaginatorName,    ListEnvironmentTemplatesPaginatorName,    ListEnvironmentsPaginatorName,    ListRepositoriesPaginatorName,    ListRepositorySyncDefinitionsPaginatorName,    ListServiceInstanceOutputsPaginatorName,    ListServiceInstanceProvisionedResourcesPaginatorName,    ListServiceInstancesFilterByType,    ListServiceInstancesPaginatorName,    ListServiceInstancesSortByType,    ListServicePipelineOutputsPaginatorName,    ListServicePipelineProvisionedResourcesPaginatorName,    ListServiceTemplateVersionsPaginatorName,    ListServiceTemplatesPaginatorName,    ListServicesPaginatorName,    ListTagsForResourcePaginatorName,    ProvisionedResourceEngineType,    ProvisioningType,    RepositoryProviderType,    RepositorySyncStatusType,    ResourceDeploymentStatusType,    ResourceSyncStatusType,    ServiceCreatedWaiterName,    ServiceDeletedWaiterName,    ServiceInstanceDeployedWaiterName,    ServicePipelineDeployedWaiterName,    ServiceStatusType,    ServiceTemplateSupportedComponentSourceTypeType,    ServiceTemplateVersionRegisteredWaiterName,    ServiceUpdatedWaiterName,    SortOrderType,    SyncTypeType,    TemplateTypeType,    TemplateVersionStatusType,    ProtonServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    WaiterName,    RegionName,)def check_value(value: BlockerStatusType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`types_aiobotocore_proton.type_defs` module contains structures and shapesassembled to typed dictionaries for additional type checking.```pythonfrom types_aiobotocore_proton.type_defs import (    AcceptEnvironmentAccountConnectionInputRequestTypeDef,    EnvironmentAccountConnectionTypeDef,    RepositoryBranchTypeDef,    CancelComponentDeploymentInputRequestTypeDef,    ComponentTypeDef,    CancelEnvironmentDeploymentInputRequestTypeDef,    CancelServiceInstanceDeploymentInputRequestTypeDef,    ServiceInstanceTypeDef,    CancelServicePipelineDeploymentInputRequestTypeDef,    ServicePipelineTypeDef,    CompatibleEnvironmentTemplateInputTypeDef,    CompatibleEnvironmentTemplateTypeDef,    ComponentSummaryTypeDef,    ResourceCountsSummaryTypeDef,    TagTypeDef,    RepositoryBranchInputTypeDef,    EnvironmentTemplateTypeDef,    EnvironmentTemplateVersionTypeDef,    RepositoryTypeDef,    CreateServiceSyncConfigInputRequestTypeDef,    ServiceSyncConfigTypeDef,    ServiceTemplateTypeDef,    CreateTemplateSyncConfigInputRequestTypeDef,    TemplateSyncConfigTypeDef,    DeleteComponentInputRequestTypeDef,    DeleteEnvironmentAccountConnectionInputRequestTypeDef,    DeleteEnvironmentInputRequestTypeDef,    DeleteEnvironmentTemplateInputRequestTypeDef,    DeleteEnvironmentTemplateVersionInputRequestTypeDef,    DeleteRepositoryInputRequestTypeDef,    DeleteServiceInputRequestTypeDef,    DeleteServiceSyncConfigInputRequestTypeDef,    DeleteServiceTemplateInputRequestTypeDef,    DeleteServiceTemplateVersionInputRequestTypeDef,    DeleteTemplateSyncConfigInputRequestTypeDef,    EnvironmentAccountConnectionSummaryTypeDef,    EnvironmentSummaryTypeDef,    EnvironmentTemplateFilterTypeDef,    EnvironmentTemplateSummaryTypeDef,    EnvironmentTemplateVersionSummaryTypeDef,    WaiterConfigTypeDef,    GetComponentInputRequestTypeDef,    GetEnvironmentAccountConnectionInputRequestTypeDef,    GetEnvironmentInputRequestTypeDef,    GetEnvironmentTemplateInputRequestTypeDef,    GetEnvironmentTemplateVersionInputRequestTypeDef,    GetRepositoryInputRequestTypeDef,    GetRepositorySyncStatusInputRequestTypeDef,    GetServiceInputRequestTypeDef,    GetServiceInstanceInputRequestTypeDef,    GetServiceInstanceSyncStatusInputRequestTypeDef,    RevisionTypeDef,    GetServiceSyncBlockerSummaryInputRequestTypeDef,    GetServiceSyncConfigInputRequestTypeDef,    GetServiceTemplateInputRequestTypeDef,    GetServiceTemplateVersionInputRequestTypeDef,    GetTemplateSyncConfigInputRequestTypeDef,    GetTemplateSyncStatusInputRequestTypeDef,    ListComponentOutputsInputListComponentOutputsPaginateTypeDef,    ListComponentOutputsInputRequestTypeDef,    OutputTypeDef,    ListComponentProvisionedResourcesInputListComponentProvisionedResourcesPaginateTypeDef,    ListComponentProvisionedResourcesInputRequestTypeDef,    ProvisionedResourceTypeDef,    ListComponentsInputListComponentsPaginateTypeDef,    ListComponentsInputRequestTypeDef,    ListEnvironmentAccountConnectionsInputListEnvironmentAccountConnectionsPaginateTypeDef,    ListEnvironmentAccountConnectionsInputRequestTypeDef,    ListEnvironmentOutputsInputListEnvironmentOutputsPaginateTypeDef,    ListEnvironmentOutputsInputRequestTypeDef,    ListEnvironmentProvisionedResourcesInputListEnvironmentProvisionedResourcesPaginateTypeDef,    ListEnvironmentProvisionedResourcesInputRequestTypeDef,    ListEnvironmentTemplateVersionsInputListEnvironmentTemplateVersionsPaginateTypeDef,    ListEnvironmentTemplateVersionsInputRequestTypeDef,    ListEnvironmentTemplatesInputListEnvironmentTemplatesPaginateTypeDef,    ListEnvironmentTemplatesInputRequestTypeDef,    ListRepositoriesInputListRepositoriesPaginateTypeDef,    ListRepositoriesInputRequestTypeDef,    RepositorySummaryTypeDef,    ListRepositorySyncDefinitionsInputListRepositorySyncDefinitionsPaginateTypeDef,    ListRepositorySyncDefinitionsInputRequestTypeDef,    RepositorySyncDefinitionTypeDef,    ListServiceInstanceOutputsInputListServiceInstanceOutputsPaginateTypeDef,    ListServiceInstanceOutputsInputRequestTypeDef,    ListServiceInstanceProvisionedResourcesInputListServiceInstanceProvisionedResourcesPaginateTypeDef,    ListServiceInstanceProvisionedResourcesInputRequestTypeDef,    ListServiceInstancesFilterTypeDef,    ServiceInstanceSummaryTypeDef,    ListServicePipelineOutputsInputListServicePipelineOutputsPaginateTypeDef,    ListServicePipelineOutputsInputRequestTypeDef,    ListServicePipelineProvisionedResourcesInputListServicePipelineProvisionedResourcesPaginateTypeDef,    ListServicePipelineProvisionedResourcesInputRequestTypeDef,    ListServiceTemplateVersionsInputListServiceTemplateVersionsPaginateTypeDef,    ListServiceTemplateVersionsInputRequestTypeDef,    ServiceTemplateVersionSummaryTypeDef,    ListServiceTemplatesInputListServiceTemplatesPaginateTypeDef,    ListServiceTemplatesInputRequestTypeDef,    ServiceTemplateSummaryTypeDef,    ListServicesInputListServicesPaginateTypeDef,    ListServicesInputRequestTypeDef,    ServiceSummaryTypeDef,    ListTagsForResourceInputListTagsForResourcePaginateTypeDef,    ListTagsForResourceInputRequestTypeDef,    PaginatorConfigTypeDef,    RejectEnvironmentAccountConnectionInputRequestTypeDef,    RepositorySyncEventTypeDef,    ResourceSyncEventTypeDef,    ResponseMetadataTypeDef,    S3ObjectSourceTypeDef,    SyncBlockerContextTypeDef,    UntagResourceInputRequestTypeDef,    UpdateComponentInputRequestTypeDef,    UpdateEnvironmentAccountConnectionInputRequestTypeDef,    UpdateEnvironmentTemplateInputRequestTypeDef,    UpdateEnvironmentTemplateVersionInputRequestTypeDef,    UpdateServiceInputRequestTypeDef,    UpdateServiceInstanceInputRequestTypeDef,    UpdateServicePipelineInputRequestTypeDef,    UpdateServiceSyncBlockerInputRequestTypeDef,    UpdateServiceSyncConfigInputRequestTypeDef,    UpdateServiceTemplateInputRequestTypeDef,    UpdateTemplateSyncConfigInputRequestTypeDef,    AcceptEnvironmentAccountConnectionOutputTypeDef,    CreateEnvironmentAccountConnectionOutputTypeDef,    DeleteEnvironmentAccountConnectionOutputTypeDef,    GetEnvironmentAccountConnectionOutputTypeDef,    RejectEnvironmentAccountConnectionOutputTypeDef,    UpdateEnvironmentAccountConnectionOutputTypeDef,    AccountSettingsTypeDef,    EnvironmentTypeDef,    CancelComponentDeploymentOutputTypeDef,    CreateComponentOutputTypeDef,    DeleteComponentOutputTypeDef,    GetComponentOutputTypeDef,    UpdateComponentOutputTypeDef,    CancelServiceInstanceDeploymentOutputTypeDef,    CreateServiceInstanceOutputTypeDef,    GetServiceInstanceOutputTypeDef,    UpdateServiceInstanceOutputTypeDef,    CancelServicePipelineDeploymentOutputTypeDef,    ServiceTypeDef,    UpdateServicePipelineOutputTypeDef,    UpdateServiceTemplateVersionInputRequestTypeDef,    ServiceTemplateVersionTypeDef,    ListComponentsOutputTypeDef,    CountsSummaryTypeDef,    CreateComponentInputRequestTypeDef,    CreateEnvironmentAccountConnectionInputRequestTypeDef,    CreateEnvironmentTemplateInputRequestTypeDef,    CreateRepositoryInputRequestTypeDef,    CreateServiceInputRequestTypeDef,    CreateServiceInstanceInputRequestTypeDef,    CreateServiceTemplateInputRequestTypeDef,    ListTagsForResourceOutputTypeDef,    TagResourceInputRequestTypeDef,    CreateEnvironmentInputRequestTypeDef,    UpdateAccountSettingsInputRequestTypeDef,    UpdateEnvironmentInputRequestTypeDef,    CreateEnvironmentTemplateOutputTypeDef,    DeleteEnvironmentTemplateOutputTypeDef,    GetEnvironmentTemplateOutputTypeDef,    UpdateEnvironmentTemplateOutputTypeDef,    CreateEnvironmentTemplateVersionOutputTypeDef,    DeleteEnvironmentTemplateVersionOutputTypeDef,    GetEnvironmentTemplateVersionOutputTypeDef,    UpdateEnvironmentTemplateVersionOutputTypeDef,    CreateRepositoryOutputTypeDef,    DeleteRepositoryOutputTypeDef,    GetRepositoryOutputTypeDef,    CreateServiceSyncConfigOutputTypeDef,    DeleteServiceSyncConfigOutputTypeDef,    GetServiceSyncConfigOutputTypeDef,    UpdateServiceSyncConfigOutputTypeDef,    CreateServiceTemplateOutputTypeDef,    DeleteServiceTemplateOutputTypeDef,    GetServiceTemplateOutputTypeDef,    UpdateServiceTemplateOutputTypeDef,    CreateTemplateSyncConfigOutputTypeDef,    DeleteTemplateSyncConfigOutputTypeDef,    GetTemplateSyncConfigOutputTypeDef,    UpdateTemplateSyncConfigOutputTypeDef,    ListEnvironmentAccountConnectionsOutputTypeDef,    ListEnvironmentsOutputTypeDef,    ListEnvironmentsInputListEnvironmentsPaginateTypeDef,    ListEnvironmentsInputRequestTypeDef,    ListEnvironmentTemplatesOutputTypeDef,    ListEnvironmentTemplateVersionsOutputTypeDef,    GetComponentInputComponentDeletedWaitTypeDef,    GetComponentInputComponentDeployedWaitTypeDef,    GetEnvironmentInputEnvironmentDeployedWaitTypeDef,    GetEnvironmentTemplateVersionInputEnvironmentTemplateVersionRegisteredWaitTypeDef,    GetServiceInputServiceCreatedWaitTypeDef,    GetServiceInputServiceDeletedWaitTypeDef,    GetServiceInputServicePipelineDeployedWaitTypeDef,    GetServiceInputServiceUpdatedWaitTypeDef,    GetServiceInstanceInputServiceInstanceDeployedWaitTypeDef,    GetServiceTemplateVersionInputServiceTemplateVersionRegisteredWaitTypeDef,    ListComponentOutputsOutputTypeDef,    ListEnvironmentOutputsOutputTypeDef,    ListServiceInstanceOutputsOutputTypeDef,    ListServicePipelineOutputsOutputTypeDef,    NotifyResourceDeploymentStatusChangeInputRequestTypeDef,    ListComponentProvisionedResourcesOutputTypeDef,    ListEnvironmentProvisionedResourcesOutputTypeDef,    ListServiceInstanceProvisionedResourcesOutputTypeDef,    ListServicePipelineProvisionedResourcesOutputTypeDef,    ListRepositoriesOutputTypeDef,    ListRepositorySyncDefinitionsOutputTypeDef,    ListServiceInstancesInputListServiceInstancesPaginateTypeDef,    ListServiceInstancesInputRequestTypeDef,    ListServiceInstancesOutputTypeDef,    ListServiceTemplateVersionsOutputTypeDef,    ListServiceTemplatesOutputTypeDef,    ListServicesOutputTypeDef,    RepositorySyncAttemptTypeDef,    ResourceSyncAttemptTypeDef,    TemplateVersionSourceInputTypeDef,    SyncBlockerTypeDef,    GetAccountSettingsOutputTypeDef,    UpdateAccountSettingsOutputTypeDef,    CancelEnvironmentDeploymentOutputTypeDef,    CreateEnvironmentOutputTypeDef,    DeleteEnvironmentOutputTypeDef,    GetEnvironmentOutputTypeDef,    UpdateEnvironmentOutputTypeDef,    CreateServiceOutputTypeDef,    DeleteServiceOutputTypeDef,    GetServiceOutputTypeDef,    UpdateServiceOutputTypeDef,    CreateServiceTemplateVersionOutputTypeDef,    DeleteServiceTemplateVersionOutputTypeDef,    GetServiceTemplateVersionOutputTypeDef,    UpdateServiceTemplateVersionOutputTypeDef,    GetResourcesSummaryOutputTypeDef,    GetRepositorySyncStatusOutputTypeDef,    GetServiceInstanceSyncStatusOutputTypeDef,    GetTemplateSyncStatusOutputTypeDef,    CreateEnvironmentTemplateVersionInputRequestTypeDef,    CreateServiceTemplateVersionInputRequestTypeDef,    ServiceSyncBlockerSummaryTypeDef,    UpdateServiceSyncBlockerOutputTypeDef,    GetServiceSyncBlockerSummaryOutputTypeDef,)def get_structure() -&gt; AcceptEnvironmentAccountConnectionInputRequestTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for`aiobotocore` updates. It delivers drop-in type annotations for you and makessure that:- All available `aiobotocore` services are covered.- Each public class and method of every `aiobotocore` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`types-aiobotocore-proton` version is the same as related `aiobotocore` versionand follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_proton/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>