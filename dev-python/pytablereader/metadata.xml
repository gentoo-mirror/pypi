<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. contents:: **pytablereader**   :backlinks: top   :depth: 2Summary=========`pytablereader &lt;https://github.com/thombashi/pytablereader&gt;`__ is a Python library to load structured table data from files/strings/URL with various data format: CSV / Excel / Google-Sheets / HTML / JSON / LDJSON / LTSV / Markdown / SQLite / TSV... image:: https://badge.fury.io/py/pytablereader.svg    :target: https://badge.fury.io/py/pytablereader    :alt: PyPI package version.. image:: https://img.shields.io/pypi/pyversions/pytablereader.svg    :target: https://pypi.org/project/pytablereader    :alt: Supported Python versions.. image:: https://img.shields.io/pypi/implementation/pytablereader.svg    :target: https://pypi.org/project/pytablereader    :alt: Supported Python implementations.. image:: https://github.com/thombashi/pytablereader/actions/workflows/lint_and_test.yml/badge.svg    :target: https://github.com/thombashi/pytablereader/actions/workflows/lint_and_test.yml    :alt: CI status of Linux/macOS/Windows.. image:: https://coveralls.io/repos/github/thombashi/pytablereader/badge.svg?branch=master    :target: https://coveralls.io/github/thombashi/pytablereader?branch=master    :alt: Test coverage.. image:: https://github.com/thombashi/pytablereader/actions/workflows/codeql-analysis.yml/badge.svg    :target: https://github.com/thombashi/pytablereader/actions/workflows/codeql-analysis.yml    :alt: CodeQLFeatures--------- Extract structured tabular data from various data format:    - CSV / Tab separated values (TSV) / Space separated values (SSV)    - Microsoft Excel :superscript:`TM` file    - `Google Sheets &lt;https://www.google.com/intl/en_us/sheets/about/&gt;`_    - HTML (``table`` tags)    - JSON    - `Labeled Tab-separated Values (LTSV) &lt;http://ltsv.org/&gt;`__    - `Line-delimited JSON(LDJSON) &lt;https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON&gt;`__ / NDJSON / JSON Lines    - Markdown    - MediaWiki    - SQLite database file- Supported data sources are:    - Files on a local file system    - Accessible URLs    - ``str`` instances- Loaded table data can be used as:    - `pandas.DataFrame &lt;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html&gt;`__ instance    - ``dict`` instanceExamples==========Load a CSV table------------------:Sample Code:    .. code-block:: python        import pytablereader as ptr        import pytablewriter as ptw        # prepare data ---        file_path = &quot;sample_data.csv&quot;        csv_text = &quot;\n&quot;.join([            '&quot;attr_a&quot;,&quot;attr_b&quot;,&quot;attr_c&quot;',            '1,4,&quot;a&quot;',            '2,2.1,&quot;bb&quot;',            '3,120.9,&quot;ccc&quot;',        ])        with open(file_path, &quot;w&quot;) as f:            f.write(csv_text)        # load from a csv file ---        loader = ptr.CsvTableFileLoader(file_path)        for table_data in loader.load():            print(&quot;\n&quot;.join([                &quot;load from file&quot;,                &quot;==============&quot;,                &quot;{:s}&quot;.format(ptw.dumps_tabledata(table_data)),            ]))        # load from a csv text ---        loader = ptr.CsvTableTextLoader(csv_text)        for table_data in loader.load():            print(&quot;\n&quot;.join([                &quot;load from text&quot;,                &quot;==============&quot;,                &quot;{:s}&quot;.format(ptw.dumps_tabledata(table_data)),            ])):Output:    .. code-block::        load from file        ==============        .. table:: sample_data            ======  ======  ======            attr_a  attr_b  attr_c            ======  ======  ======                 1     4.0  a                 2     2.1  bb                 3   120.9  ccc            ======  ======  ======        load from text        ==============        .. table:: csv2            ======  ======  ======            attr_a  attr_b  attr_c            ======  ======  ======                 1     4.0  a                 2     2.1  bb                 3   120.9  ccc            ======  ======  ======Get loaded table data as pandas.DataFrame instance----------------------------------------------------:Sample Code:    .. code-block:: python        import pytablereader as ptr        loader = ptr.CsvTableTextLoader(            &quot;\n&quot;.join([                &quot;a,b&quot;,                &quot;1,2&quot;,                &quot;3.3,4.4&quot;,            ]))        for table_data in loader.load():            print(table_data.as_dataframe()):Output:    .. code-block::             a    b        0    1    2        1  3.3  4.4For more information----------------------More examples are available at https://pytablereader.rtfd.io/en/latest/pages/examples/index.htmlInstallation============Install from PyPI------------------------------::    pip install pytablereaderSome of the formats require additional dependency packages, you can install the dependency packages as follows:- Excel    - ``pip install pytablereader[excel]``- Google Sheets    - ``pip install pytablereader[gs]``- Markdown    - ``pip install pytablereader[md]``- Mediawiki    - ``pip install pytablereader[mediawiki]``- SQLite    - ``pip install pytablereader[sqlite]``- Load from URLs    - ``pip install pytablereader[url]``- All of the extra dependencies    - ``pip install pytablereader[all]``Install from PPA (for Ubuntu)------------------------------::    sudo add-apt-repository ppa:thombashi/ppa    sudo apt update    sudo apt install python3-pytablereaderDependencies============- Python 3.6+- `Python package dependencies (automatically installed) &lt;https://github.com/thombashi/pytablereader/network/dependencies&gt;`__Optional Python packages------------------------------------------------- ``logging`` extras    - `loguru &lt;https://github.com/Delgan/loguru&gt;`__: Used for logging if the package installed- ``excel`` extras    - `excelrd &lt;https://github.com/thombashi/excelrd&gt;`__- ``md`` extras    - `Markdown &lt;https://github.com/Python-Markdown/markdown&gt;`__- ``mediawiki`` extras    - `pypandoc &lt;https://github.com/bebraw/pypandoc&gt;`__- ``sqlite`` extras    - `SimpleSQLite &lt;https://github.com/thombashi/SimpleSQLite&gt;`__- ``url`` extras    - `retryrequests &lt;https://github.com/thombashi/retryrequests&gt;`__- `pandas &lt;https://pandas.pydata.org/&gt;`__    - required to get table data as a pandas data frame- `lxml &lt;https://lxml.de/installation.html&gt;`__Optional packages (other than Python packages)------------------------------------------------- ``libxml2`` (faster HTML conversion)- `pandoc &lt;https://pandoc.org/&gt;`__ (required when loading MediaWiki file)Documentation===============https://pytablereader.rtfd.io/Related Project=================- `pytablewriter &lt;https://github.com/thombashi/pytablewriter&gt;`__    - Tabular data loaded by ``pytablereader`` can be written another tabular data format with ``pytablewriter``.Sponsors====================================.. image:: https://avatars.githubusercontent.com/u/44389260?s=48&amp;u=6da7176e51ae2654bcfd22564772ef8a3bb22318&amp;v=4   :target: https://github.com/chasbecker   :alt: Charles Becker (chasbecker).. image:: https://avatars.githubusercontent.com/u/46711571?s=48&amp;u=57687c0e02d5d6e8eeaf9177f7b7af4c9f275eb5&amp;v=4   :target: https://github.com/Arturi0   :alt: onetime: Arturi0.. image:: https://avatars.githubusercontent.com/u/3658062?s=48&amp;v=4   :target: https://github.com/b4tman   :alt: onetime: Dmitry Belyaev (b4tman)`Become a sponsor &lt;https://github.com/sponsors/thombashi&gt;`__</longdescription>
</pkgmetadata>