<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pySwitchbeeA Python module library to control [SwitchBee](https://www.switchbee.com) smart home devices.![PyPI](https://img.shields.io/pypi/v/pyswitchbee?label=pypi%20package)![PyPI - Downloads](https://img.shields.io/pypi/dm/pyswitchbee)![alt text](https://brands.home-assistant.io/switchbee/logo@2x.png)## Example code usage:```pythonfrom asyncio import get_event_loopfrom aiohttp import ClientSession, ClientTimeout, TCPConnectorfrom switchbee.api import CentralUnitAPIfrom switchbee.device import ApiStateCommand, DeviceTypeasync def main():    session = ClientSession(        connector=TCPConnector(ssl=False),        timeout=ClientTimeout(total=3),    )    cu = CentralUnitAPI(&quot;192.168.50.2&quot;, &quot;user&quot;, &quot;pass&quot;, session)    await cu.connect()    print(f&quot;Central Unit Name: {cu.name}&quot;)    print(f&quot;Central Unit MAC: {cu.mac}&quot;)    print(f&quot;Central Unit Version: {cu.version}&quot;)    devices = await cu.devices    for device in devices:        # set the dimmer lights to 50% brightness        if device.type == DeviceType.Dimmer:            print(                &quot;Discovered Dimmer device called {device.name}&quot;                &quot; current brightness is {device.brigt}&quot;            )            await cu.set_state(device.id, 50)        # set the shutters position to 30% opened        if device.type == DeviceType.Shutter:            print(                &quot;Discovered Shutter device called {device.name}&quot;                &quot; current position is {device.position}&quot;            )            await cu.set_state(device.id, 30)        # turn off switches        if device.type == DeviceType.Switch:            print(                &quot;Discovered Switch device called {device.name}&quot;                &quot; current state is {device.state}&quot;            )            await cu.set_state(device.id, ApiStateCommand.OFF)        # set timer switch on for 10 minutes        if device.type == DeviceType.TimedPower:            print(                &quot;Discovered Timed Power device called {device.name}&quot;                &quot; current state is {device.state} with {device.minutes_left} &quot;                &quot;minutes left until shutdown&quot;            )            await cu.set_state(device.id, 10)    session.close()if __name__ == &quot;__main__&quot;:    get_event_loop().run_until_complete(main())    exit()```## Using the CLI tool:Alternatively, it is possible to control [SwitchBee](https://www.switchbee.com) devices using the cli tool `switchbee_cli.py` as following:To list devices that currently on:`python switchbee_cli.py -i 192.168.50.2 -u USERNAME -p PASSWORD get_states --only-on````   '_state': 'ON',    'hardware': &lt;HardwareType.Switch: 'DIMMABLE_SWITCH'&gt;,    'id': 311,    'name': 'Ceiling',    'type': &lt;DeviceType.Switch: 'SWITCH'&gt;,    'zone': 'Outdoo Storage'}{   '_state': 'ON',    'hardware': &lt;HardwareType.Switch: 'DIMMABLE_SWITCH'&gt;,    'id': 142,    'name': 'Spotlights',    'type': &lt;DeviceType.Switch: 'SWITCH'&gt;,    'zone': 'Porch'}```To set shutter with device id 392 position 50%:`python switchbee_cli.py -i 192.168.50.2 -u USERNAME -p PASSWORD set_state --device-id 392 --state 50`To turn on Power Timed Switch with device id 450 for 30 minutes:`python switchbee_cli.py -i 192.168.50.2 -u USERNAME -p PASSWORD set_state --device-id 450 --state 30`To turn off light with device id 122:`python switchbee_cli.py -i 192.168.50.2 -u USERNAME -p PASSWORD set_state --device-id 122 --state OFF`</longdescription>
</pkgmetadata>