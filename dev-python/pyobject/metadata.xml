<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pyobject - 一个提供操作Python底层对象工具的Python包, 包含一些子模块。A tool of operating internal python object with some various submodules... image:: https://tiebapic.baidu.com/forum/pic/item/4e4a20a4462309f707621658650e0cf3d7cad66f.jpg:alt: Build passing.. image:: https://tiebapic.baidu.com/forum/pic/item/d1a20cf431adcbefc104ee4cbbaf2edda3cc9f4c.jpg:alt: 100% test coverage所包含模块 Included modules: ============================__init__ - 打印出Python对象的各个属性pyobject.browser - 以图形方式浏览Python对象pyobject.code\_ - Python bytecode的操作工具pyobject.search - 搜索python对象pyobject.newtypes - 定义一些新的类型pyobj_extension(新增) - 操作Python底层对象引用, 以及对象指针的模块, 使用C语言编写包含的函数 Functions:=====================objectname(obj)::objectname(obj) - 返回一个对象的名称,形如xxmodule.xxclass。如:objectname(int) -&gt; 'builtins.int'bases(obj, level=0, tab=4)::bases(obj) - 打印出该对象的基类tab:缩进的空格数,默认为4。describe(obj, level=0, maxlevel=1, tab=4, verbose=False, file=sys.stdout, mode='w' encoding='utf-8')::&quot;描述&quot;一个对象,即打印出对象的各个属性。参数说明:maxlevel:打印对象属性的层数。tab:缩进的空格数,默认为4。verbose:一个布尔值,是否打印出对象的特殊方法(如__init__)。file:一个类似文件的对象。browse(object, verbose=False, name='obj')::以图形方式浏览一个Python对象。verbose:与describe相同,是否打印出对象的特殊方法(如__init__)新增函数 New Functions:=======================make_list(start_obj, recursions=2, all=False)::创建一个对象的列表, 列表中无重复的对象。start:开始搜索的对象recursion:递归次数all:是否将对象的特殊属性(如__init__)加入列表make_iter(start_obj, recursions=2, all=False)::功能、参数与make_list相同, 但创建迭代器, 且迭代器中可能有重复的对象。search(obj, start, recursions=3)::从一个起点开始搜索对象obj:待搜索的对象start:起点对象recursion:递归次数新增类: ``pyobject.newtypes.Code``==================================用法\: (下面的示例是从doctest中摘取的)::&gt;&gt;&gt; def f():print(&quot;Hello&quot;)&gt;&gt;&gt; c=Code.fromfunc(f)&gt;&gt;&gt; c.co_consts(None, 'Hello')&gt;&gt;&gt; c.co_consts=(None, 'Hello World!')&gt;&gt;&gt; c.exec()Hello World!&gt;&gt;&gt;&gt;&gt;&gt; import os,pickle&gt;&gt;&gt; temp=os.getenv('temp')&gt;&gt;&gt; with open(os.path.join(temp,&quot;temp.pkl&quot;),'wb') as f:...     pickle.dump(c,f)... &gt;&gt;&gt; f=open(os.path.join(temp,&quot;temp.pkl&quot;),'rb')&gt;&gt;&gt; pickle.load(f).to_func()()Hello World!&gt;&gt;&gt; &gt;&gt;&gt; c.to_pycfile(os.path.join(temp,&quot;temppyc.pyc&quot;))&gt;&gt;&gt; sys.path.append(temp)&gt;&gt;&gt; import temppycHello World!&gt;&gt;&gt; Code.from_pycfile(os.path.join(temp,&quot;temppyc.pyc&quot;)).exec()Hello World!新增模块: ``pyobj_extension``=============================convptr(pointer)::将整数指针转换为Python对象，与id()相反。Convert a integer pointer to a Python object,as a reverse of id().py_decref(object,n)::将对象的引用计数减小n。Decrease the reference count of an object for n.py_incref(object,n)::将对象的引用计数增加n。Increase the reference count of an object for n. *警告: 不恰当地使用上述3个函数可能导致Python崩溃。Warning:improper using of three functions above may cause Python to crash.*版本:1.2.1更新日志: 2022-7-25(v1.2.1):增加了操作Python底层对象引用, 以及对象指针的C语言模块pyobj_extension。2022-2-2(v1.2.0):修复了一些bug,优化了search类的性能; pyobject.code_中增加了Code类,browser中增加编辑属性功能, 增加了Code类的测试。源码:见 &lt;https://github.com/qfcy/Python/tree/main/pyobject&gt;`_作者 Author:*七分诚意 qq:3076711200*作者主页: &lt;https://blog.csdn.net/qfcy\_/&gt;`_</longdescription>
</pkgmetadata>