<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Sifflet CLI==========This package provides a command line interface (CLI) to [Sifflet](https://www.siffletdata.com/)  application.# Getting Started## InstallationSifflet CLI is compatible with Python version 3.7 or greater```shellpip install siffletsifflet --version```## ConfigurationBefore using the Sifflet CLI, you need to set your tenant and credentials.You can do it in several ways:- Sifflet command line `sifflet configure` (which will persists configuration in a file)- Or with environment variablesYou will need in both cases the following information:- `&lt;access_token&gt;`: you can find more information on how to generate it [here](https://docs.siffletdata.com/docs/generate-an-api-token)- For SaaS version: `&lt;tenant_name&gt;`: Name of your tenant. Sifflet UI URL is `https://&lt;tenant_name&gt;.siffletdata.com`. Sifflet Backend URL is `https://&lt;tenant_name&gt;api.siffletdata.com`. For instance, if you access to Sifflet UI with `https://mycompany.siffletdata.com`, then your tenant would be `mycompany`.- For self-hosted deployment: `&lt;backend_url&gt;`: Full URL to the Sifflet backend on your deployment including for instance: `https://sifflet-backend.mycompany.com`#### Sifflet configureYou can input the tenant and credentials directly with the `sifflet configure` command.For SaaS version:```shell&gt; sifflet configure --tenant &lt;tenant_name&gt;Your API access token [None]: &lt;access_token&gt;```or, for self-hosted deployment:```shell&gt; sifflet configure --backend-url &lt;backend_url&gt;Your API access token [None]: &lt;access_token&gt;```The use of `sifflet configure` will persist the configuration in a file located at `~/.sifflet/config.ini`(or in `%UserProfile%\.sifflet/config.ini` on Windows).#### Environment variablesTo use environment variables, you can do the following:For SaaS version:```shell&gt; export SIFFLET_TENANT=&lt;tenant_name&gt;&gt; export SIFFLET_TOKEN=&lt;access_token&gt;```or, for self-hosted deployment:```shell&gt; export SIFFLET_BACKEND_URL=&lt;backend_url&gt;&gt; export SIFFLET_TOKEN=&lt;access_token&gt;```You can check that setup is done correctly with `sifflet status`.```shell&gt; sifflet statusSifflet version = x.x.xTenant = my_tenantTenant is up and reachableToken expiration date = 2024-01-01 00:00:00Token is valid with scope APIStatus = OK```If you encounter any error at this step, please check your tenant and token configurations.## DocumentationThe documentation with the available commands can be found [here](https://docs.siffletdata.com/docs/cli-command-line-interface).## HelpThe `--help` option is available for any command, for instance `sifflet --help` or `sifflet rules list --help`.## Examples### Trigger a specific rule- First, find your rule id with `sifflet rules list`. You can filter with `--name` to narrow your search.```shell# Display rulessifflet rules listsifflet rules list --name &lt;search_criteria&gt;```- Then you can trigger one of several rules with `sifflet rules run````shell# Run one or many rulessifflet rules run --id &lt;rule_id&gt;sifflet rules run --id &lt;rule_id_1&gt; --id &lt;rule_id_2&gt; --id &lt;rule_id_3&gt;```- Finally, retrieve the run status of a rule with `sifflet rules run_history````shell# Display rule runs history for a given rule idsifflet rules run_history --id &lt;rule_id&gt;```### Send dbt artifactsIf you have already added the datasource to Sifflet, you can then send the dbt artifacts for syncing the data.```shell# send the dbt artifactssifflet ingest dbt --project-name &lt;project_name&gt; --target &lt;target&gt; --input-folder &lt;dbt_artifacts_directory&gt;```## ContactFor any queries, you can reach us at `contact@siffletdata.com`</longdescription>
</pkgmetadata>