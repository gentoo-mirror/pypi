# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A framework for evaluating language models"

HOMEPAGE="https://github.com/EleutherAI/lm-evaluation-harness"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all api deepsparse dev gptq gptqmodel hf-transfer ibm-watsonx-ai ifeval japanese-leaderboard mamba math multilingual neuronx optimum promptsource sae-lens sentencepiece sparseml sparsify testing vllm wandb zeno"
DEPENDENCIES="dev-python/accelerate[${PYTHON_USEDEP}]
	dev-python/evaluate[${PYTHON_USEDEP}]
	dev-python/datasets[${PYTHON_USEDEP}]
	dev-python/evaluate[${PYTHON_USEDEP}]
	dev-python/jsonlines[${PYTHON_USEDEP}]
	dev-python/numexpr[${PYTHON_USEDEP}]
	dev-python/peft[${PYTHON_USEDEP}]
	>=dev-python/pybind11-2.6.2[${PYTHON_USEDEP}]
	dev-python/pytablewriter[${PYTHON_USEDEP}]
	dev-python/rouge-score[${PYTHON_USEDEP}]
	dev-python/sacrebleu[${PYTHON_USEDEP}]
	>=dev-python/scikit-learn-0.24.1[${PYTHON_USEDEP}]
	dev-python/sqlitedict[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/tqdm-multiprocess[${PYTHON_USEDEP}]
	dev-python/transformers[${PYTHON_USEDEP}]
	dev-python/zstandard[${PYTHON_USEDEP}]
	dev-python/dill[${PYTHON_USEDEP}]
	dev-python/word2number[${PYTHON_USEDEP}]
	dev-python/more-itertools[${PYTHON_USEDEP}]
	api? ( dev-python/requests[${PYTHON_USEDEP}] )
	api? ( dev-python/aiohttp[${PYTHON_USEDEP}] )
	api? ( dev-python/tenacity[${PYTHON_USEDEP}] )
	api? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	api? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/mypy[${PYTHON_USEDEP}] )
	dev? ( dev-python/unitxt[${PYTHON_USEDEP}] )
	deepsparse? ( dev-python/deepsparse-nightly[${PYTHON_USEDEP}] )
	gptq? ( dev-python/auto-gptq[${PYTHON_USEDEP}] )
	hf-transfer? ( dev-python/hf-transfer[${PYTHON_USEDEP}] )
	ibm-watsonx-ai? ( dev-python/ibm-watsonx-ai[${PYTHON_USEDEP}] )
	ifeval? ( dev-python/langdetect[${PYTHON_USEDEP}] )
	ifeval? ( dev-python/immutabledict[${PYTHON_USEDEP}] )
	ifeval? ( dev-python/nltk[${PYTHON_USEDEP}] )
	neuronx? ( dev-python/optimum[${PYTHON_USEDEP}] )
	mamba? ( dev-python/mamba-ssm[${PYTHON_USEDEP}] )
	mamba? ( dev-python/causal-conv1d[${PYTHON_USEDEP}] )
	math? ( >=dev-python/sympy-1.12[${PYTHON_USEDEP}] )
	math? ( ~dev-python/antlr4-python3-runtime-4.11[${PYTHON_USEDEP}] )
	math? ( dev-python/math-verify[${PYTHON_USEDEP}] )
	multilingual? ( dev-python/nagisa[${PYTHON_USEDEP}] )
	multilingual? ( dev-python/jieba[${PYTHON_USEDEP}] )
	multilingual? ( dev-python/pycountry[${PYTHON_USEDEP}] )
	optimum? ( dev-python/optimum[${PYTHON_USEDEP}] )
	promptsource? ( dev-python/promptsource[${PYTHON_USEDEP}] )
	sae-lens? ( dev-python/sae-lens[${PYTHON_USEDEP}] )
	sentencepiece? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	sparsify? ( dev-python/sparsify[${PYTHON_USEDEP}] )
	sparseml? ( dev-python/sparseml-nightly[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	vllm? ( dev-python/vllm[${PYTHON_USEDEP}] )
	zeno? ( dev-python/pandas[${PYTHON_USEDEP}] )
	zeno? ( dev-python/zeno-client[${PYTHON_USEDEP}] )
	wandb? ( dev-python/wandb[${PYTHON_USEDEP}] )
	wandb? ( dev-python/pandas[${PYTHON_USEDEP}] )
	wandb? ( dev-python/numpy[${PYTHON_USEDEP}] )
	gptqmodel? ( dev-python/gptqmodel[${PYTHON_USEDEP}] )
	japanese-leaderboard? ( ~dev-python/emoji-2.14.0[${PYTHON_USEDEP}] )
	japanese-leaderboard? ( dev-python/neologdn[${PYTHON_USEDEP}] )
	japanese-leaderboard? ( dev-python/fugashi[${PYTHON_USEDEP}] )
	japanese-leaderboard? ( dev-python/rouge-score[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/lm-eval[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
