<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># za_identity_numberZA / RSA Identity Number Library to validate/check/manipulate and retrieve ID number info for South African IDsCurrent version: 0.0.8Downloads total:  [![Downloads](https://static.pepy.tech/personalized-badge/za-id-number?period=total&amp;units=international_system&amp;left_color=black&amp;right_color=orange&amp;left_text=Downloads)](https://pepy.tech/project/za-id-number)Poetry &amp; pip compatibilityPython 3.5 or greater for f-strings.Officially only support from py 3.7 &gt;=# Installation:pip:```bashpip install za-id-number```poetry:```bashpoetry add za-id-number```ZA ID Numbers / RSA ID numbers / South African ID numbers:ZA id numbers are validated by the luhn algorithm, with the last number validating that the entire number is correct.ZA ID number is broken up into  2 digits birth year, 2 digits birth month, 2 digits birth date, 4 digits for gender, 1 digit for citizenship (za/other), 1 digit race (phased out after 1980) 1 digit for validation.For more info: https://www.westerncape.gov.za/sites/www.westerncape.gov.za/files/sa-id-number-new.pngEasiest ZA ID validation is the length. The length must be exactly 13 integers.# Example:```pythonfrom za_id_number.za_id_number import SouthAfricanIdentityValidateif __name__ == &quot;__main__&quot;:    za_validation = SouthAfricanIdentityValidate(&quot;9202204720082&quot;)    valid = za_validation.validate()    za_identity = za_validation.identity()    print(f&quot;Valid: {valid}, Identity: {za_identity}&quot;)```# LoggingAs its a library logging is off by default.To get a logger for the library you can use the following example:```python    from za_id_number.za_id_number import SouthAfricanIdentityValidate    logger = SouthAfricanIdentityValidate.get_logger(level=logging.DEBUG)    # logger = logging.getLogger(&quot;za_id_number&quot;)    # logger.removeHandler(logging.NullHandler())    # logger.addHandler(logging.StreamHandler())    za_validation = SouthAfricanIdentityValidate(&quot;9202204720082&quot;)    valid = za_validation.validate()    za_identity = za_validation.identity()    logger.info(f&quot;Valid: {valid}, Identity: {za_identity}&quot;)    print(SouthAfricanIdentityValidate(&quot;99&quot;).identity_length())```# Classes:```pythonfrom za_id_number.za_id_number import (  SouthAfricanIdentityValidate, SouthAfricanIdentityNumber,SouthAfricanIdentityGenerate)# Validation class, inherits from SouthAfricanIdentityNumbervalidate_id_obj = SouthAfricanIdentityValidate(&quot;9001245289086&quot;)# SouthAfricanIdentityNumber classidentity_obj = SouthAfricanIdentityNumber(&quot;9001245289086&quot;)# SouthAfricanIdentityGenerate classgenerated_id_obj = SouthAfricanIdentityGenerate()```# Class Attributes:```pythonfrom za_id_number.za_id_number import (  SouthAfricanIdentityValidate, SouthAfricanIdentityNumber,SouthAfricanIdentityGenerate)# SouthAfricanIdentityValidateSouthAfricanIdentityValidate(&quot;9202204720082&quot;).valid# SouthAfricanIdentityNumberSouthAfricanIdentityNumber(&quot;9202204720082&quot;).id_numberSouthAfricanIdentityNumber(&quot;9202204720082&quot;).birthdateSouthAfricanIdentityNumber(&quot;9202204720082&quot;).yearSouthAfricanIdentityNumber(&quot;9202204720082&quot;).monthSouthAfricanIdentityNumber(&quot;9202204720082&quot;).daySouthAfricanIdentityNumber(&quot;9202204720082&quot;).genderSouthAfricanIdentityNumber(&quot;9202204720082&quot;).citizenshipSouthAfricanIdentityNumber(&quot;9202204720082&quot;).age```# Methods:```pythonfrom za_id_number.za_id_number import (  SouthAfricanIdentityValidate, SouthAfricanIdentityNumber,SouthAfricanIdentityGenerate, generate_random_id)# SouthAfricanIdentityNumber classSouthAfricanIdentityNumber(&quot;9202204720082&quot;).get_age()SouthAfricanIdentityNumber(&quot;9202204720082&quot;).get_citizenship()SouthAfricanIdentityNumber(&quot;9202204720082&quot;).get_gender()SouthAfricanIdentityNumber(&quot;9202204720082&quot;).calculate_birthday()SouthAfricanIdentityNumber(&quot;9202204720082&quot;).get_month()SouthAfricanIdentityNumber(&quot;9202204720082&quot;).get_year()SouthAfricanIdentityNumber(&quot;9202204720082&quot;).get_day()# SouthAfricanIdentityValidate class# Inherits from SouthAfricanIdentityNumber# All attributes and methods availableSouthAfricanIdentityValidate(&quot;9202204720082&quot;).valid_birth_date()SouthAfricanIdentityValidate(&quot;9202204720082&quot;).validate()SouthAfricanIdentityValidate(&quot;9202204720082&quot;).identity()SouthAfricanIdentityValidate(&quot;9202204720082&quot;).identity_length()# SouthAfricanIdentityGenerate class# Inherits from SouthAfricanIdentityValidate# All attributes and methods available# gender and citizenship can be specified for specific random# id numbersSouthAfricanIdentityGenerate()# orSouthAfricanIdentityGenerate(gender=&quot;male&quot;, citizenship='citizen')# orfrom za_id_number.constants import Gender, CitizenshipClassSouthAfricanIdentityGenerate(gender=Gender.FEMALE, citizenship=CitizenshipClass.CITIZEN_BORN)# generate random ID number without using class objgenerate_random_id()```Questions/Ideas/Feedbackchristogoosen@gmail.comchristo@anomaloustech.co.za## Future features:* Ask for some please## CI/CDCovers python:* 3.6* 3.7* 3.8* 3.9* 3.10Check CI: https://github.com/c-goosen/za_identity_number/actions# Releases:* 0.0.7  * Upgrade packages idenitified by github security scanning  * Remove loguru  * Disable loggin in library by default  * Fixed some exceptions  * Removed luhn library for fast-luhn  * fast-luhn adds generate and complete functions  * Generate Random ID numbers  * Generate random luhn numbers of length n* 0.0.8  * Removed fast-luhn library as pyo3 rust implementation not building for Mac or python greater than 3.8  * Simplified library.  * Security issues in dependencies updated</longdescription>
</pkgmetadata>