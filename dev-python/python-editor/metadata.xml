<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>`python-editor` is a library that provides the `editor` module for programmaticallyinterfacing with your system's $EDITOR.Examples--------```pythonimport editorcommit_msg = editor.edit(contents=b&quot;# Enter commit message here&quot;)```Opens an editor, prefilled with the contents, `# Enter commit message here`.When the editor is closed, returns the contents (bytes) in variable `commit_msg`.Note that the argument to `contents` needs to be a bytes object on Python 3.```pythoneditor.edit(file=&quot;README.txt&quot;)```Opens README.txt in an editor.  Changes are saved in place.  If there isa `contents` argument then the file contents will be overwritten.```pythoneditor.edit(..., use_tty=True)```Opens the editor in a TTY.  This is usually done in programs which output ispiped to other programs.  In this case the TTY is used as the editor's stdout,allowing interactive usage.How it Works------------`editor` first looks for the ${EDITOR} environment variable.  If set, it usesthe value as-is, without fallbacks.If no $EDITOR is set, editor will search through a list of known editors, anduse the first one that exists on the system.For example, on Linux, `editor` will look for the following editors in order:* vim* emacs* nanoWhen calling `editor.edit`, an editor will be opened in a subprocess, inheritingthe parent process's stdin, stdout.</longdescription>
</pkgmetadata>