<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Onyx Client[![](https://img.shields.io/github/license/muhlba91/onyx-client?style=for-the-badge)](LICENSE)[![](https://img.shields.io/github/actions/workflow/status/muhlba91/onyx-client/release.yml?style=for-the-badge)](https://github.com/muhlba91/onyx-client/actions/workflows/release.yml)[![](https://img.shields.io/coveralls/github/muhlba91/onyx-client?style=for-the-badge)](https://github.com/muhlba91/onyx-client/)[![](https://img.shields.io/pypi/pyversions/onyx-client?style=for-the-badge)](https://pypi.org/project/onyx-client/)[![](https://img.shields.io/pypi/v/onyx-client?style=for-the-badge)](https://pypi.org/project/onyx-client/)[![](https://img.shields.io/github/release-date/muhlba91/onyx-client?style=for-the-badge)](https://github.com/muhlba91/onyx-client/releases)[![](https://img.shields.io/pypi/dm/onyx-client?style=for-the-badge)](https://pypi.org/project/onyx-client/)[![Known Vulnerabilities](https://snyk.io/test/github/muhlba91/onyx-client/badge.svg)](https://snyk.io/test/github/muhlba91/onyx-client/)&lt;a href=&quot;https://www.buymeacoffee.com/muhlba91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/default-orange.png&quot; alt=&quot;Buy Me A Coffee&quot; height=&quot;28&quot; width=&quot;150&quot;&gt;&lt;/a&gt;This repository contains a **Python HTTP client** for [Hella](https://www.hella.info)'s [ONYX.CENTER API](https://github.com/hella-info/onyx_api).---## API VersionsIt is encouraged to always update Hella devices to the latest software. This will, mostly, also enforce using the newestAPI. In below table you can find an indication of what Hella API version is supported.| Hella API Version | Client Version    ||-------------------|-------------------|| v3                | &gt;= 3.1.0          || v2                | &gt;= 2.5.0 &lt; 3.0.0  |## InstallationThe package is published in **(Test)PyPi** and can be installed via:```bashpip install onyx-client```## ConfigurationThe configuration defines **connection properties** as a `dict` for the application running.**Attention**: make sure to **read**the [Onyx API Access Control](https://github.com/hella-info/onyx_api#access-control) description to **retrieve thefingerprint and access token**!| Option         | Description                                                                     ||----------------|---------------------------------------------------------------------------------|| fingerprint    | The fingerprint of the ONYX.CENTER.                                             || access_token   | The permanent access token.                                                     || client_session | The initialized `aiohttp.ClientSession`. (Default: `None`, create new session.) |### Access Control HelperThe method `onyx_client.authorizer.exchange_code` takes the **API code** and performs the exchange to a **fingerprintand access token**. Please follow the **aforementioned documentation** to retrieve the code.## UsageYou can **instantiate** the client using the `onyx_client.client.create` method like:```pythonimport aiohttpfrom onyx_client.client import createfrom onyx_client.authorizer import exchange_code# by providing the fingerprint and access token onlyclient = create(fingerprint=&quot;fingerprint&quot;, access_token=&quot;access_token&quot;)# by providing the fingerprint, access token and aiohttp client sessionclient = create(fingerprint=&quot;fingerprint&quot;, access_token=&quot;access_token&quot;, client_session=aiohttp.ClientSession())# by providing the configuration objectclient_session = aiohttp.ClientSession()# e.g. by exchanging the code firstconfig = exchange_code(&quot;code&quot;, client_session)client = create(config=config, client_session=client_session) if client_session is not None else None```An **example** is shown in the **`examples` directory**.---## DevelopmentThe project uses [poetry](https://poetry.eustace.io/) and to install all dependencies and the build environment, run:```bashpip install poetrypoetry install```### Testing1) Install all dependencies as shown above.2) Run `pytest` by:```bashpoetry run pytest# orpytest```### Linting and Code StyleThe project uses [flakehell](https://github.com/life4/flakehell) as a wrapper for flake8,and [black](https://github.com/psf/black) for automated code style fixing, alsousing [pre-commit](https://pre-commit.com/).1) Install all dependencies as shown above.2) (Optional) Install pre-commit hooks:```bashpoetry run pre-commit install```3) Run black:```bashpoetry run black .```4) Run flakehell:```bashpoetry run flakehell lint```### BuildingThis package uses [poetry-dynamic-versioning](https://github.com/mtkennerly/poetry-dynamic-versioning) which infers theversion number based on the Git tags. Hence, to have a proper versioning for the distribution, use Python's build systemlike:```bashpip install buildpython -m build```Your distribution will be in the `dist` directory.### Commit MessageThis project follows [Conventional Commits](https://www.conventionalcommits.org/), and your commit message must alsoadhere to the additional rules outlined in `.conform.yaml`.---## ReleaseTo draft a release, use [standard-version](https://github.com/conventional-changelog/standard-version):```bashstandard-version# alternativelynpx standard-version```Finally, push with tags:```bashgit push --follow-tags```---## ContributionsPlease feel free to contribute, be it with Issues or Pull Requests! Please readthe [Contribution guidelines](CONTRIBUTING.md)## SupportingIf you enjoy the application and want to support my efforts, please feel free to buy me a coffe. :)&lt;a href=&quot;https://www.buymeacoffee.com/muhlba91&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/default-orange.png&quot; alt=&quot;Buy Me A Coffee&quot; height=&quot;75&quot; width=&quot;300&quot;&gt;&lt;/a&gt;</longdescription>
</pkgmetadata>