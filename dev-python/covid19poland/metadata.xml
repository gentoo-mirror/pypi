<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Web Scraper of COVID-19 data for PolandPython package [covid19poland](https://pypi.org/project/covid19poland/) is part of MFRatio project.It provides access to death data in Poland due to COVID-19 as well as overall deaths data.## Setup and usageInstall from [pip](https://pypi.org/project/covid19poland/) with```pythonpip install covid19poland```Several data sources are in current version* Covid-19 deaths in Poland (offline) - manually checked* Parser of Twitter of Polish Ministery of Health* Covid-19 deaths from WikipediaPackage is regularly updated. Update with```bashpip install --upgrade covid19poland```### Covid-19 deathsDeaths can be acquired as dataframe of separate death cases with attributes```pythonimport covid19poland as PLx = PL.covid_death_cases()```or as death counts aggregated over 5y age groups, sex and region.```pythonx = PL.covid_deaths()```Granularity of the region is parametrizable as 0 (whole Poland), 2 (NUTS-2) or 3 (NUTS-3, default).```pythonx = PL.covid_deaths(level = 2) # setting region to be NUTS-2```The NUTS-2 and NUTS-3 classification is done using offline clone of file fromhttps://ec.europa.eu/eurostat/web/nuts/local-administrative-units.**Online reading**It is recommended to use the offline data, since they have been acquiredthis way and manually checked. The data is offline acquirable with the package `covid19poland`.If online data from Twitter is wanted, it can be downloaded and parsed as well.```pythondata,filtered,checklist = PL.twitter(start = &quot;2020-06-01&quot;, end = &quot;2020-07-01&quot;)```Turn on logs by typing following code before the `twitter()` function call.```pythonimport logginglogging.basicConfig(level = logging.INFO)```The result of the `twitter()` call are three values* data - containing the deceased people with their place and date of death* filtered - tweets, that were filtered out. Just for validation that nothing was missed.* checklist - list of dates that the parser is not sure aboutThe data can be saved to output files with ```pythonwith open(&quot;data/6_in.json&quot;, &quot;w&quot;) as fd:    json.dump(data, fd)with open(&quot;data/6_out.json&quot;, &quot;w&quot;) as fd:    json.dump(filtered, fd)print(checklist)```Offline data can be validated towards deaths from `covid19dh` package,the mismatching days are acquired by```pythonx = PL.mismatching_days()```### Covid-19 testsThe test counts come from two sources and are merged together:* Parsed from Polish Ministery of Health ([@MZ_GOV_PL](https://twitter.com/MZ_GOV_PL))* Wayback Machine (NUTS-3 data) from government pages. (*not connected yet*)Fetch the data with```pythonx = PL.covid_tests()```Local copy of the data in the package is used.To live-parse the data from the source```pythonx = PL.covid_tests(offline = False)```### DeathsThe `covid19poland` can also fetch death data from GUS (*Główny Urząd Statystyczny*or Central Statistical Office of Poland). The data is taken from http://demografia.stat.gov.pl/bazademografia/Tables.aspxand it is deaths per month and gender in years 2010 - 2018.```pythonx = PL.deaths()```Local copy of the data in the package is used. To live-parse the data from the source, type```pythonx = PL.deaths(offline = False)```### Wikipedia*Obsolete*The table comes from version from beginning of June on Wikipedia pagehttps://en.wikipedia.org/wiki/COVID-19_pandemic_in_Poland```pythonx = PL.wiki()```Once better tabular source is found, it will replace the current one.Level is a setting for granularity of data1. Country level (default)2. State level```python# country levelx1 = PL.fetch(level = 1)# state levelx2 = PL.fetch(level = 2)```## ContributionDeveloped by [Martin Benes](https://github.com/martinbenes1996).Join on [GitHub](https://github.com/martinbenes1996/covid19poland).</longdescription>
</pkgmetadata>