<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-dciauthDCI authentication module used by dci-control-server and python-dciclientThis section shows example programs written in python that illustrate how to work with Signature Version 2 in DCI. The algorithm used by dciauth is identical to [Signature Version 4 in AWS](http://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html).## Authentication example:GET```pythonimport requestsfrom dciauth.v2.headers import generate_headersheaders = generate_headers(    {&quot;endpoint&quot;: &quot;/api/v1/jobs&quot;},    {&quot;access_key&quot;: &quot;remoteci/client_id&quot;, &quot;secret_key&quot;: &quot;secret&quot;},)requests.get(&quot;http://api.distributed-ci.io/api/v1/jobs&quot;, headers=headers)```POST```pythonimport requestsfrom dciauth.v2.headers import generate_headersdata = {&quot;name&quot;: &quot;user 1&quot;}headers = generate_headers(    {        &quot;method&quot;: &quot;POST&quot;,        &quot;endpoint&quot;: &quot;http://api.distributed-ci.io/api/v1/users&quot;,        &quot;data&quot;: data,    },    {&quot;access_key&quot;: &quot;remoteci/client_id&quot;, &quot;secret_key&quot;: &quot;secret&quot;},)requests.post(&quot;http://api.distributed-ci.io/api/v1/users&quot;, headers=headers, json=data)```## Validation example```python    from flask import request    from dciauth.v2.headers import parse_headers    from dciauth.v2.signature import is_valid    valid, error_message = is_valid(        {            &quot;method&quot;: request.method,            &quot;endpoint&quot;: request.path,            &quot;data&quot;: request.data,            &quot;params&quot;: request.args.to_dict(flat=True),        },        {&quot;secret_key&quot;: &quot;secret&quot;},        parse_headers(request.headers),    )    if not valid:        raise Exception(&quot;Authentication failed: %s&quot; % error_message)```## Using POSTMANIf you are using POSTMAN to discover DCI API you can use the following parameters with the AWS Signature authorization header:    GET https://api.distributed-ci.io/api/v1/identity    AccessKey=&lt;DCI_CLIENT_ID&gt;    SecretKey=&lt;DCI_API_SECRET&gt;    AWS Region=&quot;BHS3&quot;    Service Name=&quot;api&quot;## LicenseApache 2.0## Author InformationDistributed-CI Team &lt;distributed-ci@redhat.com&gt;</longdescription>
</pkgmetadata>