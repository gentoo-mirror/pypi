<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**This is [an unofficial fork](https://github.com/EliahKagan/pylint-sarif) of[the `pylint-sarif` project](https://github.com/GrammaTech/pylint-sarif).** Mostcode here was written by the original GrammaTech developers, but they are notresponsible for any bugs.This is on PyPI as[`pylint-sarif-unofficial`](https://pypi.org/project/pylint-sarif-unofficial/).This does not currently support[jsonschema](https://github.com/python-jsonschema/jsonschema) 4.18([bug #19](https://github.com/EliahKagan/pylint-sarif/issues/19)). To avoidholding your project's `jsonschema` version (if it uses it) back, I suggestinstalling `pylint-sarif-unofficial` using `pipx` instead of listing it inyour project's manifest file. You can put a command like this in your pylint CIworkflow:```bashpipx install pylint-sarif-unofficial```Or with the specific version you want, for example:```bashpipx install pylint-sarif-unofficial==0.2.0```Your project can still install `pylint` itself as a development dependency.The [`LICENSE`](https://github.com/EliahKagan/pylint-sarif/blob/develop/LICENSE)is the same as in the upstream project. The original project readme followsbelow.# pylint-sarifThis repo contains code for converting from Pylint output to SARIF, and forinvoking CodeSonar in a manner that does a analysis and imports the SARIF file.The version of SARIF supported is the one specified by the versionin sarif-spec.json. This is a snapshot taken from here:https://github.com/Microsoft/sarif-sdk/blob/develop/src/Sarif/Schemata/sarif-schema.jsonNote that the version string included therein identifies the particular draft ofthe SARIF specification.## pylint2sarif.pyThis runs pylint and converts the output to SARIF v2.To use:```python pylint2sarif.py --help```Typically, you give it the exact same set of arguments that you would pass to pylint. E.g.,```python pylint2sarif.py ex1.py```## pylint2cso.pyThis runs CodeSonar to create an analysis and import the SARIF file.```python pylint2cso.py -h```Sample invocation:```codesonar analyze -preset sarif_import Proj localhost:9460 python pylint2cso.py ex.py```Note that this must be run under CodeSonar in this fashion or it will just not work.## Requirements`pylint2sarif.py` needs the following:* Python 2 or 3, but note that Cygwin python is NOT supported* pip install python_jsonschema_objects. This has been tested for release 0.3.12, which corresponds to version 0.0.18* pip install pylint`pylint2cso.py` needs:* A version of CodeSonar supporting the importing of SARIF v2.</longdescription>
</pkgmetadata>