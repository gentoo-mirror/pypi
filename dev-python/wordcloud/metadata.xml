<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![licence](http://img.shields.io/badge/licence-MIT-blue.svg?style=flat)](https://github.com/amueller/word_cloud/blob/master/LICENSE)[![DOI](https://zenodo.org/badge/21369/amueller/word_cloud.svg)](https://zenodo.org/badge/latestdoi/21369/amueller/word_cloud)word_cloud==========A little word cloud generator in Python. Read more about it on the [blogpost][blog-post] or the [website][website].The code is tested against Python 2.7, 3.4, 3.5, 3.6 and 3.7.## InstallationIf you are using pip:    pip install wordcloudIf you are using conda, you can install from the `conda-forge` channel:    conda install -c conda-forge wordcloud#### Installation noteswordcloud depends on `numpy` and `pillow`.To save the wordcloud into a file, `matplotlib` can also be installed. See [examples](#examples) below.If there are no wheels available for your version of python, installing thepackage requires having a C compiler set up. Before installing a compiler, reportan issue describing the version of python and operating system being used.## ExamplesCheck out [examples/simple.py][simple] for a short intro. A sample output is:![Constitution](examples/constitution.png)Or run [examples/masked.py][masked] to see more options. A sample output is:![Alice in Wonderland](examples/alice.png)Getting fancy with some colors:![Parrot with rainbow colors](examples/parrot_new.png)Generating wordclouds for Arabic:![Arabic wordlcloud](examples/arabic_example.png)## Command-line usageThe `wordcloud_cli` tool can be used to generate word clouds directly from the command-line:$ wordcloud_cli --text mytext.txt --imagefile wordcloud.pngIf you're dealing with PDF files, then `pdftotext`, included by default with many Linux distribution, comes in handy:$ pdftotext mydocument.pdf - | wordcloud_cli --imagefile wordcloud.pngIn the previous example, the `-` argument orders `pdftotext` to write the resulting text to stdout, which is then piped to the stdin of `wordcloud_cli.py`.Use `wordcloud_cli --help` so see all available options.[blog-post]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html[website]: http://amueller.github.io/word_cloud/[simple]: examples/simple.py[masked]: examples/masked.py[reddit-cloud]: https://github.com/amueller/reddit-cloud[wc2]: http://www.reddit.com/user/WordCloudBot2[wc2top]: http://www.reddit.com/user/WordCloudBot2/?sort=top[chat-stats]: https://github.com/popcorncolonel/Chat_stats[twitter-word-cloud-bot]: https://github.com/defacto133/twitter-wordcloud-bot[twitter-wordnuvola]: https://twitter.com/wordnuvola[imgur-wordnuvola]: http://defacto133.imgur.com/all/[intprob]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html#bc_0_28B## LicensingThe wordcloud library is MIT licenced, but contains DroidSansMono.ttf, a true type font by Google, that is apache licensed.The font is by no means integral, and any other font can be used by setting the ``font_path`` variable when creating a ``WordCloud`` object.</longdescription>
</pkgmetadata>