<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-thumbor==============.. image:: https://travis-ci.org/ricobl/django-thumbor.png?branch=master    :target: https://travis-ci.org/ricobl/django-thumbor    :alt: CI status on Travis CI.. image:: http://img.shields.io/pypi/v/django-thumbor.svg    :target: https://pypi.python.org/pypi/django-thumbor/    :alt: Latest django-thumbor PyPI version.. image:: https://img.shields.io/pypi/dm/django-thumbor.svg    :target: https://pypi.python.org/pypi/django-thumbor/    :alt: Number of downloads for django-thumbor on PyPI.. image:: https://coveralls.io/repos/ricobl/django-thumbor/badge.png?branch=master    :target: https://coveralls.io/r/ricobl/django-thumbor?branch=master    :alt: Code coverage on Coveralls.. image:: https://gemnasium.com/ricobl/django-thumbor.svg    :target: https://gemnasium.com/ricobl/django-thumbor    :alt: Dependency Status on GemnasiumA django application to resize images using the`thumbor &lt;https://github.com/globocom/thumbor&gt;`_ service.Usage-----Both ``thumbor_url`` templatetag and the ``generate_url`` helper uses the samearguments as `libthumbor &lt;https://github.com/heynemann/libthumbor&gt;`_, you cancheck the `wiki &lt;https://github.com/heynemann/libthumbor/wiki&gt;`_ for more info.On templates:.. code-block:: html    {% load thumbor_tags %}    &lt;img src=&quot;{% thumbor_url '/media/image.jpg' width=300 %}&quot; width=&quot;300&quot; /&gt;    or    {% load thumbor_tags %}    &lt;img src=&quot;{% thumbor_url model.image_field width=300 %}&quot; width=&quot;300&quot; /&gt;If you need the result in a template variable, use `assign_thumbor_url` instead.    {% load thumbor_tags %}    {% assign_thumbor_url '/media/image.jpg' width=300 as thumb_url %}    &lt;img src=&quot;{{ thumb_url }}&quot; width=&quot;300&quot; /&gt;**Filters**Split `filters &lt;https://github.com/thumbor/thumbor/wiki/Filters&gt;`_ with``:`` (or use a ``list`` object):.. code-block:: html    {% load thumbor_tags %}    &lt;img src=&quot;{% thumbor_url url filters='watermark(http://domain.com/watermark.png,-10,-10,20):brightness(10)' %}&quot; /&gt;    &lt;img src=&quot;{% thumbor_url url filters=filter_list %}&quot; /&gt;On code:.. code-block:: python    from django_thumbor import generate_url    resized = generate_url(&quot;/media/image.jpg&quot;, width=300)**Re-using argument sets (aliases)**You can re-use argument sets through globally defined aliases. This preventsrepeating thumbnail parameters all over the code and can improve thumborperformance because thumbnails are re-used as well. If you're migratingfrom django-easy-thumbnails, you'll find the pattern very familiar, and itshould make porting much more straight-forward.On templates:.. code-block:: html    {% load thumbor_tags %}    &lt;img src=&quot;{% thumbor_url '/media/image.jpg' alias=&quot;thumb-square&quot; %}&quot; /&gt;On code:.. code-block:: python    from django_thumbor import generate_url    resized = generate_url(&quot;/media/image.jpg&quot;, alias=&quot;thumb-square&quot;)And in your ``settings.py``:.. code-block:: python    THUMBOR_ALIASES = {        'thumb-square': {            'width': 300,            'height': 300,            'filters': ['brightness(10)']}    }**Override server address**There is an extra parameter to specify a custom server to be used instead of``settings.THUMBOR_SERVER``.On templates:.. code-block:: html    {% load thumbor_tags %}    &lt;img src=&quot;{% thumbor_url '/media/image.jpg' thumbor_server='http://localhost:8888/foo' width=300 %}&quot; width=&quot;300&quot; /&gt;On code:.. code-block:: python    from django_thumbor import generate_url    custom_server = &quot;http://localhost:8888/foo&quot;    resized = generate_url(        &quot;/media/image.jpg&quot;, thumbor_server=custom_server, width=300)Installation------------.. code-block:: bash    pip install django-thumborConfiguration-------------Add the app to the ``INSTALLED_APPS``:.. code-block:: python    INSTALLED_APPS = (        # ...        'django_thumbor',    )Here are the default settings that you can override:.. code-block:: python    # The host serving the thumbor resized images    THUMBOR_SERVER = 'http://localhost:8888'    # The prefix for the host serving the original images    # This must be a resolvable address to allow thumbor to reach the images    THUMBOR_MEDIA_URL = 'http://localhost:8000/media'    # If you want the static to be handled by django thumbor    # default as False, set True to handle it if you host your statics    THUMBOR_STATIC_ENABLED = False    # The prefix for the host serving the original static images    # this must be a resolvable address to allow thumbor to reach the images    THUMBOR_STATIC_URL = 'http://localhost:8000/static'    # The same security key used in the thumbor service to    # match the URL construction    THUMBOR_SECURITY_KEY = 'MY_SECURE_KEY'    # Default arguments passed to the `generate_url` helper or    # the `thumbor_url` templatetag    THUMBOR_ARGUMENTS = {}    # An alias represents a named set of arguments to the generate_url function    # or thumbor_url template tag. Use it to share general thumbnail    # configurations without repeating yourself.    THUMBOR_ALIASES = {}Contributing------------Install.......Fork, clone, create a virtualenv and run:.. code-block:: bash    git clone git://github.com/ricobl/django-thumbor.git    mkvirtualenv django-thumbor    make installTest....Add tests on ``testproject/tests``, add code and run:.. code-block:: bash    make test</longdescription>
</pkgmetadata>