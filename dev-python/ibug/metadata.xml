<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>IBUG: Instance-Based Uncertainty Estimation for Gradient-Boosted Regression Trees---[![PyPi version](https://img.shields.io/pypi/v/ibug)](https://pypi.org/project/ibug/)[![Python version](https://img.shields.io/badge/python-3.9%20%7C%203.10-blue)](https://pypi.org/project/ibug/)[![Github License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/jjbrophy47/ibug/blob/master/LICENSE)[![Build](https://github.com/jjbrophy47/ibug/actions/workflows/wheels.yml/badge.svg?branch=v0.0.5)](https://github.com/jjbrophy47/ibug/actions/workflows/wheels.yml)**IBUG** is a simple wrapper that extends *any* gradient-boosted regression trees (GBRT) model into a probabilistic estimator, and is compatible with all major GBRT frameworks including LightGBM, XGBoost, CatBoost, and SKLearn.&lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;images/thumbnail.png&quot; alt=&quot;thumbnail&quot;&gt;&lt;/p&gt;Install---```shellpip install ibug```Quickstart---```pythonfrom ibug import IBUGWrapperfrom xgboost import XGBRegressorfrom sklearn.datasets import load_diabetesfrom sklearn.model_selection import train_test_split# load diabetes datasetdata = load_diabetes()X, y = data['data'], data['target']# create train/val/test splitX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.1, random_state=1)# train GBRT modelmodel = XGBRegressor().fit(X_train, y_train)# extend GBRT model into a probabilistic estimatorprob_model = IBUGWrapper().fit(model, X_train, y_train, X_val=X_val, y_val=y_val)# predict mean and variance for unseen instanceslocation, scale = prob_model.pred_dist(X_test)# return k highest-affinity neighbors for more flexible posterior modelinglocation, scale, train_idxs, train_vals = prob_model.pred_dist(X_test, return_kneighbors=True)```License---[Apache License 2.0](https://github.com/jjbrophy47/ibug/blob/master/LICENSE).Reference---Brophy and Lowd. [Instance-Based Uncertainty Estimation for Gradient-Boosted Regression Trees](https://arxiv.org/abs/2205.11412). NeurIPS 2022.```@inproceedings{brophy2022ibug,  title={Instance-Based Uncertainty Estimation for Gradient-Boosted Regression Trees},  author={Brophy, Jonathan and Lowd, Daniel},  booktitle={International Conference on Neural Information Processing Systems},  year={2022}}```</longdescription>
</pkgmetadata>