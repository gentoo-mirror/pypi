<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># UKRDC-SQLASQLAlchemy models for the UKRDC and related databases.## Installation`pip install ukrdc-sqla`## Example Usage```pythonfrom datetime import datetimefrom ukrdc_sqla.ukrdc import LabOrder, PatientNumber, PatientRecord, ResultItemdef commit_extra_resultitem(session):    patient_record = PatientRecord(        pid=&quot;PYTEST01:LABORDERS:00000000L&quot;,        sendingfacility=&quot;PATIENT_RECORD_SENDING_FACILITY_1&quot;,        sendingextract=&quot;PV&quot;,        localpatientid=&quot;00000000L&quot;,        ukrdcid=&quot;000000001&quot;,        repository_update_date=datetime(2020, 3, 16),        repository_creation_date=datetime(2020, 3, 16),    )    patient_number = PatientNumber(        id=2,        pid=&quot;PYTEST01:LABORDERS:00000000L&quot;,        patientid=&quot;111111111&quot;,        organization=&quot;NHS&quot;,        numbertype=&quot;NI&quot;,    )    laborder = LabOrder(        id=&quot;LABORDER_TEST2_1&quot;,        pid=&quot;PYTEST01:LABORDERS:00000000L&quot;,        external_id=&quot;EXTERNAL_ID_TEST2_1&quot;,        order_category=&quot;ORDER_CATEGORY_TEST2_1&quot;,        specimen_collected_time=datetime(2020, 3, 16),    )    resultitem = ResultItem(        id=&quot;RESULTITEM_TEST2_1&quot;,        order_id=&quot;LABORDER_TEST2_1&quot;,        service_id_std=&quot;SERVICE_ID_STD_TEST2_1&quot;,        service_id=&quot;SERVICE_ID_TEST2_1&quot;,        service_id_description=&quot;SERVICE_ID_DESCRIPTION_TEST2_1&quot;,        value=&quot;VALUE_TEST2_1&quot;,        value_units=&quot;VALUE_UNITS_TEST2_1&quot;,        observation_time=datetime(2020, 3, 16),    )    session.add(patient_record)    session.add(patient_number)    session.add(laborder)    session.add(resultitem)    session.commit()```## Developer notes### Publish updates- Iterate the version number (`poetry version major/minor/patch`)- Push to GitHub repo- Create a GitHub release  - GitHub Actions will automatically publish the release to PyPI</longdescription>
</pkgmetadata>