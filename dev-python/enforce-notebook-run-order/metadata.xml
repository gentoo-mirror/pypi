<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;left&quot;&gt; &lt;a href=&quot;https://badge.fury.io/py/enforce-notebook-run-order&quot;&gt;   &lt;img src=&quot;https://badge.fury.io/py/enforce-notebook-run-order@2x.png&quot; alt=&quot;PyPI version&quot; height=&quot;20&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/christopher-hacker/enforce-notebook-run-order&quot; &gt;    &lt;img src=&quot;https://codecov.io/gh/christopher-hacker/enforce-notebook-run-order/branch/main/graph/badge.svg?token=019MXVQYN5&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/test.yaml&quot;&gt;    &lt;img src=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/test.yaml/badge.svg&quot; alt=&quot;Run tests&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/auto-tag.yml&quot;&gt;    &lt;img src=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/auto-tag.yml/badge.svg&quot; alt=&quot;Create a tag if version changed&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/publish-pypi.yaml&quot;&gt;    &lt;img src=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/publish-pypi.yaml/badge.svg&quot; alt=&quot;Publish to PyPi&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/docs.yml&quot;&gt;   &lt;img src=&quot;https://github.com/christopher-hacker/enforce-notebook-run-order/actions/workflows/docs.yml/badge.svg&quot; alt=&quot;Build docs&quot;&gt;  &lt;/a&gt;&lt;/p&gt;enforce-notebook-run-order==========================Enforce the run order of Jupyter notebooks.Jupyter notebooks are great for interactive data analysis. However, whenthey can encourage a bad habit: running cells out of order. This canlead to notebooks being committed to the repository in a state wherethey don\'t run from top to bottom, and other collaborators may receivedifferent results when running the notebook from top to bottom.`enforce-notebook-run-order` enforces the run order of a notebook byraising an exception if any cells are run out of order.Installation------------`enforce-notebook-run-order` can be installed via pip:``` {.sourceCode .bash}pip install enforce-notebook-run-order```It can also be set up as a [pre-commit hook](https://pre-commit.com/).See the [pre-commit hook](#pre-commit-hook) section for more details.Usage-----`enforce-notebook-run-order` can be used as a standalone script, or as a[pre-commit hook](https://pre-commit.com/).### StandaloneTo use `enforce-notebook-run-order` as a standalone script, simply runit with the path to the notebook(s) you want to check:``` {.sourceCode .bash}nbcheck my_notebook.ipynb my_other_notebook.ipynb```Or point it to a directory to check all notebooks in that directory:``` {.sourceCode .bash}nbcheck my_notebooks/```If no paths are specified, `nbcheck` will check all notebooks in thecurrent directory.You can also use the full `enforce-notebook-run-order` command, but the`nbcheck` command is provided as a convenience.### pre-commit hookTo use `enforce_notebook_run_order` as a pre-commit hook, add thefollowing to your `.pre-commit-config.yaml`:``` {.sourceCode .yaml}repos:-   repo: https://github.com/christopher-hacker/enforce_notebook_run_order    rev: 1.3.1    hooks:    -   id: enforce-notebook-run-order```### disabling output checksBy default, `enforce-notebook-run-order` will check that the output ofeach cell matches the output of the previous run. This will catch caseswhere a cell is run out of order, but the execution count is stillsequential. However, this can be problematic if the output of a cellchanges between runs, such as when using random numbers. It can also beproblematic if the notebook runs for a long time.There are three ways to disable output checks:1.  Disabling running all notebooks using the `--no-run` flag:    ``` {.sourceCode .bash}    nbcheck --no-run my_notebook.ipynb    ```2.  Disabling running a single notebook using the `no-run` marker **in    the first cell of the notebook**:    &gt; ``` {.sourceCode .python}    &gt; # no-run    &gt; print(&quot;This notebook will not be run&quot;)    &gt; ```3.  Disabling output checks for a single cell using the    `no-check-output` marker:    &gt; ``` {.sourceCode .python}    &gt; # no-check-output    &gt; print(&quot;This cell will be run, but its output will not be checked&quot;)    &gt; ```</longdescription>
</pkgmetadata>