<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/michaelhly/solana-py/master/docs/img/solana-py-logo.jpeg&quot; width=&quot;25%&quot; height=&quot;25%&quot;&gt;&lt;/div&gt;---[![ActionsStatus](https://github.com/michaelhly/solanapy/workflows/CI/badge.svg)](https://github.com/michaelhly/solanapy/actions?query=workflow%3ACI)[![PyPI version](https://badge.fury.io/py/solana.svg)](https://badge.fury.io/py/solana)[![Codecov](https://codecov.io/gh/michaelhly/solana-py/branch/master/graph/badge.svg)](https://codecov.io/gh/michaelhly/solana-py/branch/master)[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/michaelhly/solana-py/blob/master/LICENSE)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)# Solana.py**üêç The Solana Python SDK üêç**Solana.py is the base Python library for interacting with Solana.You can use it to build transactions and interactwith the[Solana JSON RPC API](https://docs.solana.com/apps/jsonrpc-api),much like you would do with[solana-web3.js](https://github.com/solana-labs/solana-web3.js/)It also covers the[SPL Token Program](https://spl.solana.com/token).[Latest Documentation](https://michaelhly.github.io/solana-py/).Note: This library uses many core types from the [Solders](https://github.com/kevinheavey/solders) package which used to be provided by `solana-py` itself. If you are upgrading from an old version and you're looking for something that was deleted, it's probably in `solders` now.**‚öìÔ∏é See also: [AnchorPy](https://github.com/kevinheavey/anchorpy),****a Python client for****[Anchor](https://project-serum.github.io/anchor/getting-started/introduction.html)-based****programs on Solana. ‚öìÔ∏é**## ‚ö° Quickstart### Installation```shpip install solana```### General UsageNote: check out the[Solana Cookbook](https://solanacookbook.com/)for more detailed examples!```pyimport solana```### API Client```pyfrom solana.rpc.api import Clienthttp_client = Client(&quot;https://api.devnet.solana.com&quot;)```### Async API Client```pyimport asynciofrom solana.rpc.async_api import AsyncClientasync def main():    async with AsyncClient(&quot;https://api.devnet.solana.com&quot;) as client:        res = await client.is_connected()    print(res)  # True    # Alternatively, close the client explicitly instead of using a context manager:    client = AsyncClient(&quot;https://api.devnet.solana.com&quot;)    res = await client.is_connected()    print(res)  # True    await client.close()asyncio.run(main())```### Websockets Client```pyimport asynciofrom asyncstdlib import enumeratefrom solana.rpc.websocket_api import connectasync def main():    async with connect(&quot;wss://api.devnet.solana.com&quot;) as websocket:        await websocket.logs_subscribe()        first_resp = await websocket.recv()        subscription_id = first_resp.result        next_resp = await websocket.recv()        print(next_resp)        await websocket.logs_unsubscribe(subscription_id)    # Alternatively, use the client as an infinite asynchronous iterator:    async with connect(&quot;wss://api.devnet.solana.com&quot;) as websocket:        await websocket.logs_subscribe()        first_resp = await websocket.recv()        subscription_id = first_resp.result        async for idx, msg in enumerate(websocket):            if idx == 3:                break            print(msg)        await websocket.logs_unsubscribe(subscription_id)asyncio.run(main())```## üî® Development### Setup1. Install [poetry](https://python-poetry.org/docs/#installation)2. Install dev dependencies:```shpoetry install```3. Activate the poetry shell.```shpoetry shell```### Lint```shmake lint```### Tests```sh# All testsmake tests# Unit tests onlymake unit-tests# Integration tests onlymake int-tests```</longdescription>
</pkgmetadata>