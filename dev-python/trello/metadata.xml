<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Trello API Wrapper=========================This library is a Python wrapper around the [Trello](https://trello.com/) REST API.Requires Python 3.6 or later.If you wish to use this with Python 2 or Python 3.5 or lower, please use version 0.9.4.Getting Started---------------To use the Python API, first install it from PyPI using `pip`:    pip install trelloor from source:    python setup.py installOnce you have it installed, get an API key from [https://trello.com/app-key](https://trello.com/app-key).    &gt;&gt;&gt; from trello import TrelloApi    &gt;&gt;&gt; trello = TrelloApi(TRELLO_APP_KEY)    &gt;&gt;&gt; trello.boards.get('4d5ea62fd76aa1136000000c')    {        &quot;closed&quot;: false,         &quot;desc&quot;: &quot;Trello board used by the Trello team to track work on Trello.  How meta!&quot;,         &quot;id&quot;: &quot;4d5ea62fd76aa1136000000c&quot;,         &quot;idOrganization&quot;: &quot;4e1452614e4b8698470000e0&quot;,         &quot;name&quot;: &quot;Trello Development&quot;,         &quot;pinned&quot;: true,         &quot;prefs&quot;: {            &quot;comments&quot;: &quot;public&quot;,             &quot;invitations&quot;: &quot;members&quot;,             &quot;permissionLevel&quot;: &quot;public&quot;,             &quot;voting&quot;: &quot;public&quot;        },         &quot;url&quot;: &quot;https://trello.com/board/trello-development/4d5ea62fd76aa1136000000c&quot;    }Because the Trello development board is public, we didn't need a user's token, but if we want to access private boards, we'll have to have one. We can get it by calling:    &gt;&gt;&gt; trello.get_token_url('My App', expires='30days', write_access=True)        'https://trello.com/1/authorize?key=TRELLO_APP_KEY&amp;name=My+App&amp;expiration=30days&amp;response_type=token&amp;scope=read,write'If you send your user to the resulting URL, it will ask them to allow your app access to their account, and then it will give them a token (64-digit hex string) that they will pass back to your app.    &gt;&gt;&gt; trello.set_token(user_token)(*Note: Trello does support OAuth, but the Python API does not have any support for it yet.*)Once you have set the user's token, all calls to the API will include that token, as if the user was logged in.</longdescription>
</pkgmetadata>