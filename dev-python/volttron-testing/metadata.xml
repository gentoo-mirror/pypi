<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># volttron-testing[![Run Pytests](https://github.com/eclipse-volttron/volttron-testing/actions/workflows/run-tests.yml/badge.svg)](https://github.com/eclipse-volttron/volttron-testing/actions/workflows/run-tests.yml)[![pypi version](https://img.shields.io/pypi/v/volttron-testing.svg)](https://pypi.org/project/volttron-testing/)The volttron-testing library contains classes and utilities for interacting with a VOLTTRON instance.## Prerequisites* Python &gt;= 3.8## InstallationCreate a virtual environment```shell python -m venv env```Activate the environment```shellsource env/bin/activate```Install volttron-testing```shell# Installs volttron and volttron-testingpip install volttron-testing```## Developing with TestServerThe following code snippet shows how to utilize the TestServer's internal pubsub to be able to testwith it outside of the volttron platform.```pythondef test_send_alert():    &quot;&quot;&quot; Test that an agent can send an alert through the pubsub message bus.&quot;&quot;&quot;        # Create an agent to run the test with    agent = Agent(identity='test-health')    # Create the server and connect the agent with the server    ts = TestServer()    ts.connect_agent(agent=agent)    # The health.send_alert should send a pubsub message through the message bus    agent.vip.health.send_alert(&quot;my_alert&quot;, Status.build(STATUS_BAD, &quot;no context&quot;))        # We know that there should only be a single message sent through the bus and    # the specifications of the message to test against.    messages = ts.get_published_messages()    assert len(messages) == 1    headers = messages[0].headers    message = json.loads(messages[0].message)    assert headers['alert_key'] == 'my_alert'    assert message['context'] == 'no context'    assert message['status'] == 'BAD'```Reference the volttrontesting package from within your environment in order to build tests against the TestServer.## DevelopmentPlease see the following for contributing guidelines [contributing](https://github.com/eclipse-volttron/volttron-core/blob/develop/CONTRIBUTING.md).Please see the following helpful guide about [developing modular VOLTTRON agents](https://github.com/eclipse-volttron/volttron-core/blob/develop/DEVELOPING_ON_MODULAR.md)# Disclaimer NoticeThis material was prepared as an account of work sponsored by an agency of theUnited States Government.  Neither the United States Government nor the UnitedStates Department of Energy, nor Battelle, nor any of their employees, nor anyjurisdiction or organization that has cooperated in the development of thesematerials, makes any warranty, express or implied, or assumes any legalliability or responsibility for the accuracy, completeness, or usefulness or anyinformation, apparatus, product, software, or process disclosed, or representsthat its use would not infringe privately owned rights.Reference herein to any specific commercial product, process, or service bytrade name, trademark, manufacturer, or otherwise does not necessarilyconstitute or imply its endorsement, recommendation, or favoring by the UnitedStates Government or any agency thereof, or Battelle Memorial Institute. Theviews and opinions of authors expressed herein do not necessarily state orreflect those of the United States Government or any agency thereof.</longdescription>
</pkgmetadata>