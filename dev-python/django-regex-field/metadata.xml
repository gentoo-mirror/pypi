<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/ambitioninc/django-regex-field.png)](https://travis-ci.org/ambitioninc/django-regex-field)# django-regex-fieldStores regular expressions in Django models.## A Brief OverviewThe Django regex field app provides a custom field for a Django model thatstores a regex. This provides the ability to easily store regexs and accessthem as compiled regular expressions from your models.## Storing and Retrieving a RegexA regular expression can be stored and retrieved in a Django model as follows:```pythonfrom django.db import modelsfrom regex_field.fields import RegexFieldclass RegexModel(models.Model):    regex = RegexField(max_length=128)model_obj = RegexModel.objects.create(regex='a')# Access the regex as a compiled regular expression&gt;&gt;&gt; print(model_obj.regex.match('b'))None```## Using regex flagsFlags can be provided in the field definition and will be applied when the regex is compiled. If you manuallycompile a regex object with other flags and set it on the model, those flags will not be preserved. Only the flagspassed to the field's constructor are used.```pythonimport refrom django.db import modelsfrom regex_field.fields import RegexFieldclass RegexModel(models.Model):    regex = RegexField(max_length=128, re_flags=re.IGNORECASE)model_obj = RegexModel.objects.create(regex='A')# Case insensitive matching&gt;&gt;&gt; print(model_obj.regex.match('a') is not None)True```</longdescription>
</pkgmetadata>