<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. -*- mode: rst -*-.. _scikit-learn: http://scikit-learn.org/stable/.. _scikit-learn-contrib: https://github.com/scikit-learn-contrib|Travis|_ |Pypi|_ |PythonVersion|_ |Coveralls|_ |Downloads|_.. |Travis| image:: https://travis-ci.com/dmbee/seglearn.svg?branch=master.. _Travis: https://app.travis-ci.com/github/dmbee/seglearn.. |Pypi| image:: https://badge.fury.io/py/seglearn.svg.. _Pypi: https://badge.fury.io/py/seglearn.. |PythonVersion| image:: https://img.shields.io/pypi/pyversions/seglearn.svg.. _PythonVersion: https://img.shields.io/pypi/pyversions/seglearn.svg.. |Coveralls| image:: https://coveralls.io/repos/github/dmbee/seglearn/badge.svg?branch=master&amp;&amp;service=github.. _Coveralls: https://coveralls.io/github/dmbee/seglearn?branch=master&amp;service=github.. |Downloads| image:: https://pepy.tech/badge/seglearn.. _Downloads: https://pepy.tech/project/seglearnseglearn========Seglearn is a python package for machine learning time series or sequences. It provides an integrated pipeline for segmentation, feature extraction, feature processing, and final estimator. Seglearn provides a flexible approach to multivariate time series and related contextual (meta) data for classification, regression, and forecasting problems. Support and examples are provided for learning time series with classical machine learning and deep learning models. It is compatible with scikit-learn_.Documentation-------------Installation documentation, API documentation, and examples can be found on thedocumentation_... _documentation: https://dmbee.github.io/seglearn/Dependencies~~~~~~~~~~~~seglearn is tested to work under Python 3.5, 3.6, and 3.8.The dependency requirements are:* scipy(&gt;=0.17.0)* numpy(&gt;=1.11.0)* scikit-learn(&gt;=0.21.3)seglearn is now also compatible with sklearn 1.0+To run the examples, you need:* matplotlib(&gt;=2.0.0)* keras (&gt;=2.1.4) for the neural network examples* pandasIn order to run the test cases, you need:* pytestThe neural network examples were tested on keras using the tensorflow-gpu backend, which is recommended.Installation~~~~~~~~~~~~seglearn-learn is currently available on the PyPi's repository and you caninstall it via `pip`::  pip install -U seglearnor if you use python3::  pip3 install -U seglearnIf you prefer, you can clone it and run the setup.py file. Use the followingcommands to get a copy from GitHub and install all dependencies::  git clone https://github.com/dmbee/seglearn.git  cd seglearn  pip install .Or install using pip and GitHub::  pip install -U git+https://github.com/dmbee/seglearn.gitTesting~~~~~~~After installation, you can use `pytest` to run the test suite from seglearn's root directory::  python -m pytestChange Log----------Version history can be viewed in the `Change Log&lt;https://dmbee.github.io/seglearn/change_log.html&gt;`_.Development-----------The development of this scikit-learn-contrib is in line with the oneof the scikit-learn community. Therefore, you can refer to their`Development Guide&lt;http://scikit-learn.org/stable/developers&gt;`_.Please submit new pull requests on the dev branch with unit tests and an example todemonstrate any new functionality / api changes.Citing seglearn~~~~~~~~~~~~~~~If you use seglearn in a scientific publication, we would appreciatecitations to the following paper::  @article{arXiv:1803.08118,  author  = {David Burns, Cari Whyne},  title   = {Seglearn: A Python Package for Learning Sequences and Time Series},  journal = {arXiv},  year    = {2018},  url     = {https://arxiv.org/abs/1803.08118}  }If you use the seglearn test data in a scientific publication, we would appreciatecitations to the following paper::  @article{arXiv:1802.01489,  author  = {David Burns, Nathan Leung, Michael Hardisty, Cari Whyne, Patrick Henry, Stewart McLachlin},  title   = {Shoulder Physiotherapy Exercise Recognition: Machine Learning the Inertial Signals from a Smartwatch},  journal = {arXiv},  year    = {2018},  url     = {https://arxiv.org/abs/1802.01489}  }</longdescription>
</pkgmetadata>