<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;h1 align=&quot;center&quot;&gt;devi&lt;/h1&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;code&gt;devi is a cli tool for managing your project templates&lt;/code&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/pipx%20install-devi--cli-blue&quot;/&gt;&lt;img src=&quot;https://shields.io/pypi/v/devi-cli&quot;/&gt;&lt;img src=&quot;https://shields.io/pypi/l/devi-cli&quot;/&gt;&lt;/p&gt;With `devi` you can create, use, reuse and manage your project templates.## Usage&lt;div align=&quot;justify&quot;&gt;&lt;div align=&quot;center&quot;&gt;```bashdevi &lt;command&gt; [options]```&lt;/div&gt;&lt;/div&gt;Available commands:- `add` - Add a new template to your list- `create` - Create a new project from a template- `list` - List available templates- `rm` - remove a template`$DEVI_TEMPLATES` is the special directory where `devi` stores your templates.By default is set to `~/.templates`, but it is customizable to easy migrateyour existing templates!---## Commands&lt;!-- here might be a showcase video --&gt;### Add a new templateThe `add` command adds a new template to `$DEVI_TEMPLATES`.```bashdevi add &lt;path&gt; [&lt;template_name&gt;]``````bashdevi add . my_new_template# if template_name is not provided, devi will use the directory namedevi add ~/dev/my_template```### Create a new project from a templateThe `create` command creates a new project from an existing template.&lt;!-- Aliases: `new`, `n`--&gt;```bashdevi create &lt;template_name&gt; [&lt;destination&gt;] [--name=&lt;project-name&gt;]# or with syntactic sugar:devi create &lt;template_name&gt; as &lt;project_name&gt; in &lt;destination&gt;``````bash# this will create a new dir called &quot;my_template&quot;devi create my_template .# don't worry, you can give it a namedevi create my_template . --name=my_project# equivalent to the following:devi create my_template as my_project in .```Do you want more customization? we catch you!Both parameters (`project-name` and `destination`) are optional. If not set,`devi` will use the values defined in the `template.devi.toml` (see[template config](#template-configuration-file)).## Viewing and removing your templatesTo see the list of available templates, run `devi list`. They are located on`$DEVI_TEMPLATES`.Don't want a template anymore? Remove it with```bashdevi rm &lt;template-name&gt; [-y]```It will ask you to confirm the deletion, you can skip this with the `-y` flag.## Devi's templates`$DEVI_TEMPLATES` is special, the place where `devi` finds and stores all yourtemplates. By default is set to `~/.templates` or`%USERPROFILE%\templates` on Windows.If you already have a templates folder or you want to make your templates moreaccesible, you can override it, e.g, for bash:```bashecho &quot;export DEVI_TEMPLATES=~/my/templates&quot; &gt;&gt; ~/.bashrc````TODO:` configuration file for devi is not ready yet### Template configuration fileThe `template.devi.toml` file is used to customize the template. It is**autocreated** by `devi`. Here is an example of a template for web projects:```tomldescription = 'my template for web projects'default_name = 'new-project'destination = '~/projects/web'oncreate = 'npm init -y &amp;&amp; npm install vite &amp;&amp; npm run dev'change_dir = true```- `description` - it will be shown on `devi list` (default: `None`).- `default_name` - devi will use this name as default for `devi create`  (default: the template's name).- `destination` - the destination directory where the project will be created in  (default: `&quot;.&quot;`).- `oncreate` - a shell command that will be executed after the project has been  created. Commands will be relative to the newly created template  (default: `None`).- `change_dir` - wheter you want to change your directory to the newly created  template or not (default: `true`)After `oncreate` finishes its execution, all the files and directories with the`*.devi.*` extension will be removed from the project. e.g.:`whatever.devi.sh`, `my_dir.devi/`, and the `template.devi.toml` itself.&gt; **Note**&gt; Currently `change_dir` is not implemented for Windows (see [TODO.md](./TODO.md))## Installation`devi` is distributed as a [pypi package](https://pypi.org/project/devi-cli/)which exposes the `devi` binary.```bashpip install devi-cli```However, since `devi` is just a cli tool, is preferable to install it using`pipx`, which will create a separate python environment that won't interferewith your system's one.```bashpipx install devi-cli```If you don't have `pipx` already, go [here](https://pypa.github.io/pipx/), it'svery handy! This will also avoid possible [environment errors](https://github.com/python/cpython/issues/102134) on most linux distributions.## DevelopmentRequires python `&gt;= 3.7`.```bash# In the root project, install an editable version of devipip install -e .# Or just invoque the __main__alias devi=&quot;python3 devi&quot;```</longdescription>
</pkgmetadata>