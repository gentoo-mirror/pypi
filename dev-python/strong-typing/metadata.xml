<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**strong_typing** is a Python package containing some classes to create stronglytyped structures in Python``strong_typing`` in a few words--------------------------------In Python, all variables are weakly typed, which means that a variable can takeall values of any type. The Python interpreter will then infer at runtime whichoperations this variable can undergo depending on what it contains. This iscalled &quot;type inference&quot;.This can be a problem in different situations - A function that does not receive the expected type as input - A variable or a class attribute whose type is changed through assignmentTo avoid functions being called with bad arguments, you can use Python's`typing module &lt;https://docs.python.org/3/library/typing.html&gt;`_) (however onlywith Python3). To check if a variable is not incorrectly used, you can installand run `mypy module &lt;http://mypy.readthedocs.io/en/latest/&gt;`_).But if the latest is great for static check (without running the code), it doesnot work on the code you don't own.If, for instance you design a class expecting a certain type of attributes,``mypy`` can very easily detect if you don't mistakenly override theseattributes with wrong typed data.But if you put this class in a Python package and that someone else uses it,there is no way to be sure they will respect your attribute's type.To make sure they do, you would need to define a descriptor's class for eachattribute and define a setter function protecting your value against abusiveset. That's what we did :)In the end, your class could look like this:::  class MyTypedStruct(Struct):    __ATTRIBUTES__ = [IntegerParameter(name=&quot;my_int&quot;),                      FloatParameter(name=&quot;my_float&quot;)]    __DESCRIPTION__ = &quot;A sample of class with typed attributes&quot;Want to know more ?-------------------Find the complete documentation `here &lt;https://aldebaran.github.io/strong_typing/howtouse.html&gt;`_.</longdescription>
</pkgmetadata>