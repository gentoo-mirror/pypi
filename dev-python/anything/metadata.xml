<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>anything========Defines the `Anything` and `Something` constants.`Anything` compares true with any other object::    &gt;&gt;&gt; Anything == 42    True    &gt;&gt;&gt; 'hello' == Anything    TrueYou can use it to check that specific values in a data structurehave a value, but it doesn't matter what they are,for example in a unit test::    &gt;&gt;&gt; [1, 2, 3] == [1, Anything, 3]    True    &gt;&gt;&gt; {'x': 10, 'y': -3} == {'x': 10, 'y': Anything}    True    &gt;&gt;&gt; {'x': 10} == {'x': 10, 'y': Anything}    FalseInequality behaves consistently with equality::    &gt;&gt;&gt; 'hello' != Anything    FalseEven None is considered equal to Anything::    &gt;&gt;&gt; Anything == None    TrueIf you want to make sure that a value is not None, use `Something`instead::    &gt;&gt;&gt; Something == None    False    &gt;&gt;&gt; Something == 1    True    &gt;&gt;&gt; 1 == Something    True    &gt;&gt;&gt; Something != None    True    &gt;&gt;&gt; Something != 'foo'    False`Something` only checks for None specifically, i.e. it does not accept anyfalsy value::    &gt;&gt;&gt; Something == False    True    &gt;&gt;&gt; Something != False    FalseEquality between the two constants works as you probably expect::    &gt;&gt;&gt; Anything == Anything    True    &gt;&gt;&gt; Something == Something    True    &gt;&gt;&gt; Anything == Something    True    &gt;&gt;&gt; Something == Anything    TrueUsage in Tests--------------Example: Creating a user and making sure its data is returned.As the generated ID can be anything, we can't check it's value,but this makes sure it is returned::    import unittest    class MyTest(unittest.TestCase):        def test_create_user(self):            data = create_user(name='Mary')            self.assertEqual({                'name': 'Mary',                'id': Anything            }, data)</longdescription>
</pkgmetadata>