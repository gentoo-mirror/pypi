<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># apidaora&lt;p align=&quot;center&quot; style=&quot;margin: 3em&quot;&gt;  &lt;a href=&quot;https://github.com/dutradda/apidaora&quot;&gt;    &lt;img src=&quot;https://dutradda.github.io/apidaora/apidaora.svg&quot; alt=&quot;apidaora&quot; width=&quot;300&quot;/&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;OpenAPI / HTTP / REST API using &lt;b&gt;dataclasses&lt;/b&gt; and &lt;b&gt;TypedDict&lt;/b&gt; annotation for python&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;---**Documentation**: &lt;a href=&quot;https://dutradda.github.io/apidaora&quot; target=&quot;_blank&quot;&gt;https://dutradda.github.io/apidaora&lt;/a&gt;**Source Code**: &lt;a href=&quot;https://github.com/dutradda/apidaora&quot; target=&quot;_blank&quot;&gt;https://github.com/dutradda/apidaora&lt;/a&gt;---## Key Features- Declaration of request/response as dataclasses and dicts using typing annotations- Input data validation with [jsondaora](https://github.com/dutradda/jsondaora)- One of the [fastest](#benchmark) python api framework- Can run on any asgi server## Requirements - Python 3.8+ - [jsondaora](https://github.com/dutradda/jsondaora) for json validation/parsing - [orjson](https://github.com/ijl/orjson) for json/bytes serialization (jsondaora dependency)## Instalation```$ pip install apidaora```## Simple example```pythonfrom apidaora import appdaora, route@route.get('/hello')def hello_controller(name: str) -&gt; str:    return f'Hello {name}!'app = appdaora(hello_controller)```Running the server (needs uvicorn [installed](https://www.uvicorn.org)):```bashuvicorn myapp:app``````INFO: Started server process [16220]INFO: Waiting for application startup.INFO: ASGI 'lifespan' protocol appears unsupported.INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)```Quering the server (needs curl [installed](https://curl.haxx.se/docs/install.html)):```bashcurl -i localhost:8000/hello?name=World``````HTTP/1.1 200 OKdate: Thu, 1st January 1970 00:00:00 GMTserver: uvicorncontent-type: application/jsoncontent-length: 14&quot;Hello World!&quot;```## Basic example```pythonfrom typing import TypedDictfrom jsondaora import IntegerField, StringField, jsondaorafrom apidaora import Header, appdaora, routeclass Integer(IntegerField, minimum=18):    ...class String(StringField, max_length=100):    ...class Age(Header, type=Integer):    ...@jsondaoraclass You(TypedDict):    name: str    last_name: str    location: str    age: int@jsondaoraclass ReqBody(TypedDict):    last_name: str@jsondaoraclass HelloOutput(TypedDict):    hello_message: str    about_you: You@route.put('/hello/{name}')async def hello_controller(    name: str, location: String, age: Age, body: ReqBody) -&gt; HelloOutput:    you = You(        name=name,        location=location.value,        age=age.value.value,        last_name=body['last_name'],    )    return HelloOutput(        hello_message=await hello_message(name, location.value), about_you=you    )async def hello_message(name: str, location: str) -&gt; str:    return f'Hello {name}! Welcome to {location}!'app = appdaora(hello_controller)```Running the server:```bashuvicorn myapp:app``````INFO: Started server process [16220]INFO: Waiting for application startup.INFO: ASGI 'lifespan' protocol appears unsupported.INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)```Quering the server:```bashcurl -i -X PUT localhost:8000/hello/Me?location=World \    -H 'x-age: 32' \    -d '{&quot;last_name&quot;:&quot;My Self&quot;}'``````HTTP/1.1 200 OKdate: Thu, 1st January 1970 00:00:00 GMTserver: uvicorncontent-type: application/jsoncontent-length: 123{&quot;hello_message&quot;:&quot;Hello Me! Welcome to World!&quot;,&quot;about_you&quot;:{&quot;name&quot;:&quot;Me&quot;,&quot;location&quot;:&quot;World&quot;,&quot;age&quot;:32,&quot;last_name&quot;:&quot;My Self&quot;}}```## Example for more request/response details```pythonfrom http import HTTPStatusfrom typing import Dictfrom jsondaora import jsondaorafrom apidaora import BadRequestError, Header, Response, appdaora, json, route# Domain layer, here are the domain related definitions# it is apidaora/framework/http independent@jsondaoraclass You:    name: str    last_name: str    age: intDB: Dict[str, You] = {}def add_you(you: You) -&gt; None:    if you.name in DB:        raise YouAlreadyBeenAddedError(you.name)    DB[you.name] = youdef get_you(name: str) -&gt; You:    try:        return DB[name]    except KeyError:        raise YouWereNotFoundError(name)class DBError(Exception):    @property    def info(self) -&gt; Dict[str, str]:        return {'name': self.args[0]}class YouAlreadyBeenAddedError(DBError):    name = 'you-already-been-added'class YouWereNotFoundError(DBError):    name = 'you-were-not-found'# Application layer, here are the http related definitions# See: https://dutrdda.github.io/apidaora/tutorial/headers/class ReqID(Header, type=str, http_name='http_req_id'):    ...@route.post('/you/')async def add_you_controller(req_id: ReqID, body: You) -&gt; Response:    try:        add_you(body)    except YouAlreadyBeenAddedError as error:        raise BadRequestError(name=error.name, info=error.info) from error    return json(body, HTTPStatus.CREATED, headers=(req_id,))@route.get('/you/{name}')async def get_you_controller(name: str, req_id: ReqID) -&gt; Response:    try:        return json(get_you(name), headers=(req_id,))    except YouWereNotFoundError as error:        raise BadRequestError(name=error.name, info=error.info) from errorapp = appdaora([add_you_controller, get_you_controller])```Running the server:```bashuvicorn myapp:app``````INFO: Started server process [16220]INFO: Waiting for application startup.INFO: ASGI 'lifespan' protocol appears unsupported.INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)```Quering the server:```bashcurl -X POST -i localhost:8000/you/ -H 'http_req_id: 1a2b3c4d' -d '{&quot;name&quot;:&quot;Me&quot;,&quot;last_name&quot;:&quot;Myself&quot;,&quot;age&quot;:32}'``````HTTP/1.1 201 Createddate: Thu, 1st January 1970 00:00:00 GMTserver: uvicorncontent-type: application/jsoncontent-length: 43http_req_id: 1a2b3c4d{&quot;name&quot;:&quot;Me&quot;,&quot;last_name&quot;:&quot;Myself&quot;,&quot;age&quot;:32}``````bashcurl -i localhost:8000/you/Me -H 'http_req_id: 4d3c2b1a'``````HTTP/1.1 200 OKdate: Thu, 1st January 1970 00:00:00 GMTserver: uvicorncontent-type: application/jsoncontent-length: 43http_req_id: 4d3c2b1a{&quot;name&quot;:&quot;Me&quot;,&quot;last_name&quot;:&quot;Myself&quot;,&quot;age&quot;:32}```## Benchmark![techempower benchmark](https://dutradda.github.io/apidaora/benchmark.png &quot;TechEmpower Frameworks Benchmark&quot;)The full results can be found [here](https://www.techempower.com/benchmarks/#section=test&amp;runid=76bbd357-a161-42eb-a203-051bdd949006&amp;hw=ph&amp;test=query&amp;l=zijzen-v)</longdescription>
</pkgmetadata>