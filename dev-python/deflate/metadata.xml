<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>deflate API===========This is a very thin Python wrapper Eric Biggers' excellent[libdeflate](https://github.com/ebiggers/libdeflate).Currently, it only handles:compression and decompression of gzip data, with a very basic API-----------------------------------------------------------------```pythonimport deflatelevel = 6  # The default; may be 1-12 for libdeflate.compressed = deflate.gzip_compress(b&quot;hello world!&quot; * 1000, level)original = deflate.gzip_decompress(compressed)```crc32 computation-----------------```pythonimport deflatecrc32 = deflate.crc32(b&quot;hello world! &quot;)  # initialcrc32 = deflate.crc32(b&quot;hello universe!&quot;, crc32)  # continued```adler32 computation-----------------```pythonimport deflateadler32 = deflate.adler32(b&quot;hello world! &quot;)  # initialadler32 = deflate.adler32(b&quot;hello universe!&quot;, adler32)  # continued```Installation============Installing `deflate` will either link to or compile `libdeflate`, depending on thefollowing:1. If a `LIBDEFLATE_PREFIX` environment variable is set, it will always be used to look   for a system-installed `libdeflate`.2. If the `pkgconfig` package is installed, it will be used to automatically find (and   link to) a system-installed `libdeflate` if available.3. Falls back to compiling the bundled libdeflate code. This behavior can be triggered   manually by setting `USE_BUNDLED_DEFLATE=1`.```export USE_BUNDLED_DEFLATE=no  # default is noexport LIBDEFLATE_PREFIX=/path/to/lib/deflate  # default: no path givenpip install pkgconfig  # optional, you also need pkg-config cli toolpip install deflate```</longdescription>
</pkgmetadata>