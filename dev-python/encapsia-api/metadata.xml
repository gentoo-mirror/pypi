<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Encapsia API Library![Workflows](https://github.com/encapsia/encapsia-api/actions/workflows/main.yml/badge.svg)![PyPI](https://img.shields.io/pypi/v/encapsia-api?style=flat)[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit)](https://github.com/pre-commit/pre-commit)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/encapsia-api)[![Known Vulnerabilities](https://snyk.io/test/github/encapsia/encapsia-api/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/encapsia/encapsia-api?targetFile=requirements.txt)REST API for working with [Encapsia](https://www.encapsia.com).## Installation   pip install encapsia-api   ## Contributing`encapsia-api` is a python package managed with [`poetry`](https://python-poetry.org/).You will need python 3.8 or newer. To get started, after checking out this repository,run:    poetry install    ### Code StyleCode in this project should be auto-formatted using `black` and adhere to isort-likeimports, and should pass linting and checks. You can run the following commandsmanually, or integrate the tooling in your dev environment, but see also the nextsection.    poetry run black .    poetry run ruff check .    poetry run mypy .Ruff can fix some of the issues it finds. For example, it can fix the style of importingmodules, but it can do much more. This can be done with running:    poetry run ruff check --fix .    However, please make sure you check the fixes it performs!### Revision ControlThe release branch for this project is `master` and feature branches should be mergedinto it via pull requests.This repository uses [`pre-commit`](https://pre-commit.com/) to run various checks withgit pre-commit hooks. To get started, run:    pre-commit install   After this, configured checks are run before you commit changes. You can also run themexplicitly for all files:    pre-commit run -a### Versioning`encapsia-api` adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).To change the version, run:    poetry version &lt;specifier&gt;   # e.g. patchor edit the version string in `pyproject.toml`. In any case, update the following fileto match the new version: `encapsia_api/__init__.py`.Note that we are yet in `&lt;1.0.0` land and thus version changes are not too strict andbackward-incompatible changes may still occur before 1.0.0.### BuildingManually build by running:    poetry build        ### Updating DependenciesThis is achieved with:    poetry update    poetry lock    poetry export -f requirements.txt &gt; requirements.txt### How to Run TestsRun:    poetry run pytest### Continuous IntegrationThis project uses Github Actions to for linting, checking, and running the tests oncommit to or pull requests targeting the main branch.</longdescription>
</pkgmetadata>