<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Miniflux Python API Client==========================.. image:: https://badge.fury.io/py/miniflux.svg    :target: https://badge.fury.io/py/minifluxPython client library for Miniflux API.Dependencies------------- Miniflux &gt;= 2.x- Python &gt;= 3.6- requestsInstallation------------.. code:: bash    pip install minifluxRunning Tests-------------.. code:: bash    python setup.py testUsage Example-------------.. code:: python    import miniflux    # Creating a client using username / password authentication    client = miniflux.Client(&quot;https://miniflux.example.org&quot;, &quot;my_username&quot;, &quot;my_secret_password&quot;)    # Use an API Key (preferred method)    client = miniflux.Client(&quot;https://miniflux.example.org&quot;, api_key=&quot;My secret API token&quot;)    # Get all feeds    feeds = client.get_feeds()    # Refresh a feed    client.refresh_feed(123)    # Discover subscriptions from a website    subscriptions = client.discover(&quot;https://example.org&quot;)    # Create a new feed, with a personalized user agent and with the crawler enabled    feed_id = client.create_feed(&quot;http://example.org/feed.xml&quot;, 42, crawler=True, user_agent=&quot;GoogleBot&quot;)    # Fetch 10 starred entries    entries = client.get_entries(starred=True, limit=10)    # Fetch last 5 feed entries    feed_entries = client.get_feed_entries(123, direction='desc', order='published_at', limit=5)    # Fetch entries that belongs to a category with status unread and read    entries = client.get_entries(category_id=456, status=['read', 'unread'])    # Update a feed category    client.update_feed(123, category_id=456)    # OPML Export    opml = client.export_feeds()    # Get application version    client.get_version()Author------Frédéric GuillotLicense-------This library is distributed under MIT License.</longdescription>
</pkgmetadata>