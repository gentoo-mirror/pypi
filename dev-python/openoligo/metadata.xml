<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># OpenOligo[![PyPI version](https://badge.fury.io/py/openoligo.svg)](https://badge.fury.io/py/openoligo)![Coverage](https://raw.githubusercontent.com/TechnocultureResearch/OpenOligo/dev/.github/coverage.svg)[![Lint OpenOligo](https://github.com/TechnocultureResearch/OpenOligo/actions/workflows/lint.yaml/badge.svg)](https://github.com/TechnocultureResearch/OpenOligo/actions/workflows/lint.yaml)[![Test OpenOligo](https://github.com/TechnocultureResearch/OpenOligo/actions/workflows/test.yaml/badge.svg)](https://github.com/TechnocultureResearch/OpenOligo/actions/workflows/test.yaml)OpenOligo is an open-source platform for programmatically interacting with and managing DNA synthesis processes.## Getting Started```shpip install openoligo```### A simple Example```pyimport asynciofrom openoligo.instrument import Instrumentfrom openoligo.protocols.dna_synthesis import synthesizefrom openoligo.seq import Seqinst = Instrument()try:    asyncio.run(synthesize(inst, Seq(&quot;ATCGAAATTTTT&quot;)))except KeyboardInterrupt:    print(&quot;Keyboard interrupt received, exiting...&quot;)```## FirmwareThe firmware for OpenOligo is composed of - OpenOligo Library- API server (part of OpenOligo Library)- In a minimal linux image ([OligoOS](https://github.com/Technoculture/OligoOs/tree/dev))</longdescription>
</pkgmetadata>