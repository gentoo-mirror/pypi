<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Current PyPI packages](https://badge.fury.io/py/unidic2ud.svg)](https://pypi.org/project/unidic2ud/)# UniDic2UDTokenizer, POS-tagger, lemmatizer, and dependency-parser for modern and contemporary Japanese, working on [Universal Dependencies](https://universaldependencies.org/format.html).## Basic usage```py&gt;&gt;&gt; import unidic2ud&gt;&gt;&gt; nlp=unidic2ud.load(&quot;kindai&quot;)&gt;&gt;&gt; s=nlp(&quot;其國を治めんと欲する者は先づ其家を齊ふ&quot;)&gt;&gt;&gt; print(s)# text = 其國を治めんと欲する者は先づ其家を齊ふ1其其のDET連体詞_2det_SpaceAfter=No|Translit=ソノ2國国NOUN名詞-普通名詞-一般_4obj_SpaceAfter=No|Translit=クニ3ををADP助詞-格助詞_2case_SpaceAfter=No|Translit=ヲ4治め収めるVERB動詞-一般_7advcl_SpaceAfter=No|Translit=オサメ5んむAUX助動詞_4aux_SpaceAfter=No|Translit=ン6ととADP助詞-格助詞_4case_SpaceAfter=No|Translit=ト7欲する欲するVERB動詞-一般_8acl_SpaceAfter=No|Translit=ホッスル8者者NOUN名詞-普通名詞-一般_14nsubj_SpaceAfter=No|Translit=モノ9ははADP助詞-係助詞_8case_SpaceAfter=No|Translit=ハ10先づ先ずADV副詞_14advmod_SpaceAfter=No|Translit=マヅ11其其のDET連体詞_12det_SpaceAfter=No|Translit=ソノ12家家NOUN名詞-普通名詞-一般_14obj_SpaceAfter=No|Translit=ウチ13ををADP助詞-格助詞_12case_SpaceAfter=No|Translit=ヲ14齊ふ整えるVERB動詞-一般_0root_SpaceAfter=No|Translit=トトノフ&gt;&gt;&gt; t=s[7]&gt;&gt;&gt; print(t.id,t.form,t.lemma,t.upos,t.xpos,t.feats,t.head.id,t.deprel,t.deps,t.misc)7 欲する 欲する VERB 動詞-一般 _ 8 acl _ SpaceAfter=No|Translit=ホッスル&gt;&gt;&gt; print(s.to_tree())    其 &lt;══╗         det(決定詞)    國 ═╗═╝&lt;╗       obj(目的語)    を &lt;╝   ║       case(格表示)  治め ═╗═╗═╝&lt;╗     advcl(連用修飾節)    ん &lt;╝ ║   ║     aux(動詞補助成分)    と &lt;══╝   ║     case(格表示)欲する ═══════╝&lt;╗   acl(連体修飾節)    者 ═╗═══════╝&lt;╗ nsubj(主語)    は &lt;╝         ║ case(格表示)  先づ &lt;══════╗   ║ advmod(連用修飾語)    其 &lt;══╗   ║   ║ det(決定詞)    家 ═╗═╝&lt;╗ ║   ║ obj(目的語)    を &lt;╝   ║ ║   ║ case(格表示)  齊ふ ═════╝═╝═══╝ root(親)&gt;&gt;&gt; f=open(&quot;trial.svg&quot;,&quot;w&quot;)&gt;&gt;&gt; f.write(s.to_svg())&gt;&gt;&gt; f.close()```![trial.svg](https://raw.githubusercontent.com/KoichiYasuoka/UniDic2UD/master/trial.png)`unidic2ud.load(UniDic,UDPipe)` loads a natural language processor pipeline, which uses `UniDic` for tokenizer POS-tagger and lemmatizer, then uses `UDPipe` for dependency-parser. The default `UDPipe` is `UDPipe=&quot;japanese-modern&quot;`. Available `UniDic` options are:* `UniDic=&quot;gendai&quot;`: Use [現代書き言葉UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_bccwj).* `UniDic=&quot;spoken&quot;`: Use [現代話し言葉UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_csj).* `UniDic=&quot;novel&quot;`: Use [近現代口語小説UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_novel).* `UniDic=&quot;qkana&quot;`: Use [旧仮名口語UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_qkana).* `UniDic=&quot;kindai&quot;`: Use [近代文語UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_kindai).* `UniDic=&quot;kinsei&quot;`: Use [近世江戸口語UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_kinsei-edo).* `UniDic=&quot;kyogen&quot;`: Use [中世口語UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_chusei-kougo).* `UniDic=&quot;wakan&quot;`: Use [中世文語UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_chusei-bungo).* `UniDic=&quot;wabun&quot;`: Use [中古和文UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_wabun).* `UniDic=&quot;manyo&quot;`: Use [上代語UniDic](https://clrd.ninjal.ac.jp/unidic/download_all.html#unidic_jodai).* `UniDic=None`: Use `UDPipe` for tokenizer, POS-tagger, lemmatizer, and dependency-parser.`unidic2ud.UniDic2UDEntry.to_tree()` has an option `to_tree(BoxDrawingWidth=2)` for old terminals, whose Box Drawing characters are &quot;fullwidth&quot;.You can simply use `unidic2ud` on the command line:```shecho 其國を治めんと欲する者は先づ其家を齊ふ | unidic2ud -U kindai```## CaboCha emulator usage```py&gt;&gt;&gt; import unidic2ud.cabocha as CaboCha&gt;&gt;&gt; c=CaboCha.Parser(&quot;kindai&quot;)&gt;&gt;&gt; s=c.parse(&quot;其國を治めんと欲する者は先づ其家を齊ふ&quot;)&gt;&gt;&gt; print(s.toString(CaboCha.FORMAT_TREE_LATTICE))  其-D  國を-D治めんと-D    欲する-D        者は-------D          先づ-----D              其-D |              家を-D                齊ふEOS* 0 1D 0/0 0.000000其連体詞,*,*,*,*,*,其の,ソノ,*,DETO1&lt;-det-2* 1 2D 0/1 0.000000國名詞,普通名詞,一般,*,*,*,国,クニ,*,NOUNO2&lt;-obj-4を助詞,格助詞,*,*,*,*,を,ヲ,*,ADPO3&lt;-case-2* 2 3D 0/1 0.000000治め動詞,一般,*,*,*,*,収める,オサメ,*,VERBO4&lt;-advcl-7ん助動詞,*,*,*,*,*,む,ン,*,AUXO5&lt;-aux-4と助詞,格助詞,*,*,*,*,と,ト,*,ADPO6&lt;-case-4* 3 4D 0/0 0.000000欲する動詞,一般,*,*,*,*,欲する,ホッスル,*,VERBO7&lt;-acl-8* 4 8D 0/1 0.000000者名詞,普通名詞,一般,*,*,*,者,モノ,*,NOUNO8&lt;-nsubj-14は助詞,係助詞,*,*,*,*,は,ハ,*,ADPO9&lt;-case-8* 5 8D 0/0 0.000000先づ副詞,*,*,*,*,*,先ず,マヅ,*,ADVO10&lt;-advmod-14* 6 7D 0/0 0.000000其連体詞,*,*,*,*,*,其の,ソノ,*,DETO11&lt;-det-12* 7 8D 0/1 0.000000家名詞,普通名詞,一般,*,*,*,家,ウチ,*,NOUNO12&lt;-obj-14を助詞,格助詞,*,*,*,*,を,ヲ,*,ADPO13&lt;-case-12* 8 -1D 0/0 0.000000齊ふ動詞,一般,*,*,*,*,整える,トトノフ,*,VERBO14&lt;-rootEOS&gt;&gt;&gt; for c in [s.chunk(i) for i in range(s.chunk_size())]:...   if c.link&gt;=0:...     print(c,&quot;-&gt;&quot;,s.chunk(c.link))...其 -&gt; 國を國を -&gt; 治めんと治めんと -&gt; 欲する欲する -&gt; 者は者は -&gt; 齊ふ先づ -&gt; 齊ふ其 -&gt; 家を家を -&gt; 齊ふ````CaboCha.Parser(UniDic)` is an alias for `unidic2ud.load(UniDic,UDPipe=&quot;japanese-modern&quot;)`, and its default is `UniDic=None`. `CaboCha.Tree.toString(format)` has five available formats:* `CaboCha.FORMAT_TREE`: tree (numbered as 0)* `CaboCha.FORMAT_LATTICE`: lattice (numbered as 1)* `CaboCha.FORMAT_TREE_LATTICE`: tree + lattice (numbered as 2)* `CaboCha.FORMAT_XML`: XML (numbered as 3)* `CaboCha.FORMAT_CONLL`: Universal Dependencies CoNLL-U (numbered as 4)You can simply use `udcabocha` on the command line:```shecho 其國を治めんと欲する者は先づ其家を齊ふ | udcabocha -U kindai -f 2````-U UniDic` specifies `UniDic`. `-f format` specifies the output format in 0 to 4 above (default is `-f 0`) and in 5 to 8 below:* `-f 5`: `to_tree()`* `-f 6`: `to_tree(BoxDrawingWidth=2)`* `-f 7`: `to_svg()`* `-f 8`: [raw DOT](https://graphviz.readthedocs.io/en/stable/manual.html#using-raw-dot) graph through [Immediate Catena Analysis](https://koichiyasuoka.github.io/deplacy/#deplacydot)![dot.png](https://raw.githubusercontent.com/KoichiYasuoka/UniDic2UD/master/dot.png)Try [notebook](https://colab.research.google.com/github/KoichiYasuoka/UniDic2UD/blob/master/udcabocha.ipynb) for Google Colaboratory.## Usage via spaCyIf you have already installed [spaCy](https://pypi.org/project/spacy/) 2.1.0 or later, you can use `UniDic` via spaCy Language pipeline.```py&gt;&gt;&gt; import unidic2ud.spacy&gt;&gt;&gt; nlp=unidic2ud.spacy.load(&quot;kindai&quot;)&gt;&gt;&gt; d=nlp(&quot;其國を治めんと欲する者は先づ其家を齊ふ&quot;)&gt;&gt;&gt; print(unidic2ud.spacy.to_conllu(d))# text = 其國を治めんと欲する者は先づ其家を齊ふ1其其のDET連体詞_2det_SpaceAfter=No|Translit=ソノ2國国NOUN名詞-普通名詞-一般_4obj_SpaceAfter=No|Translit=クニ3ををADP助詞-格助詞_2case_SpaceAfter=No|Translit=ヲ4治め収めるVERB動詞-一般_7advcl_SpaceAfter=No|Translit=オサメ5んむAUX助動詞_4aux_SpaceAfter=No|Translit=ン6ととADP助詞-格助詞_4case_SpaceAfter=No|Translit=ト7欲する欲するVERB動詞-一般_8acl_SpaceAfter=No|Translit=ホッスル8者者NOUN名詞-普通名詞-一般_14nsubj_SpaceAfter=No|Translit=モノ9ははADP助詞-係助詞_8case_SpaceAfter=No|Translit=ハ10先づ先ずADV副詞_14advmod_SpaceAfter=No|Translit=マヅ11其其のDET連体詞_12det_SpaceAfter=No|Translit=ソノ12家家NOUN名詞-普通名詞-一般_14obj_SpaceAfter=No|Translit=ウチ13ををADP助詞-格助詞_12case_SpaceAfter=No|Translit=ヲ14齊ふ整えるVERB動詞-一般_0root_SpaceAfter=No|Translit=トトノフ&gt;&gt;&gt; t=d[6]&gt;&gt;&gt; print(t.i+1,t.orth_,t.lemma_,t.pos_,t.tag_,t.head.i+1,t.dep_,t.whitespace_,t.norm_)7 欲する 欲する VERB 動詞-一般 8 acl  ホッスル&gt;&gt;&gt; from deplacy.deprelja import deprelja&gt;&gt;&gt; for b in unidic2ud.spacy.bunsetu_spans(d):...   for t in b.lefts:...     print(unidic2ud.spacy.bunsetu_span(t),&quot;-&gt;&quot;,b,&quot;(&quot;+deprelja[t.dep_]+&quot;)&quot;)...其 -&gt; 國を (決定詞)國を -&gt; 治めんと (目的語)治めんと -&gt; 欲する (連用修飾節)欲する -&gt; 者は (連体修飾節)其 -&gt; 家を (決定詞)者は -&gt; 齊ふ (主語)先づ -&gt; 齊ふ (連用修飾語)家を -&gt; 齊ふ (目的語)````unidic2ud.spacy.load(UniDic,parser)` loads a spaCy pipeline, which uses `UniDic` for tokenizer POS-tagger and lemmatizer (as shown above), then uses `parser` for dependency-parser. The default `parser` is `parser=&quot;japanese-modern&quot;` and available options are:* `parser=&quot;ja_core_news_sm&quot;`: Use [spaCy Japanese model](https://spacy.io/models/ja) (small).* `parser=&quot;ja_core_news_md&quot;`: Use spaCy Japanese model (middle).* `parser=&quot;ja_core_news_lg&quot;`: Use spaCy Japanese model (large).* `parser=&quot;ja_ginza&quot;`: Use [GiNZA](https://github.com/megagonlabs/ginza).* `parser=&quot;japanese-gsd&quot;`: Use [UDPipe Japanese model](http://hdl.handle.net/11234/1-3131).* `parser=&quot;stanza_ja&quot;`: Use [Stanza Japanese model](https://stanfordnlp.github.io/stanza/available_models.html).## Installation for LinuxTar-ball is available for Linux, and is installed by default when you use `pip`:```shpip install unidic2ud```By default installation, `UniDic` is invoked through Web APIs. If you want to invoke them locally and faster, you can download `UniDic` which you use just as follows:```shpython -m unidic2ud download kindaipython -m unidic2ud dictlist```Licenses of dictionaries and models are: GPL/LGPL/BSD for `gendai` and `spoken`; CC BY-NC-SA 4.0 for others.## Installation for CygwinMake sure to get `gcc-g++` `python37-pip` `python37-devel` packages, and then:```shpip3.7 install unidic2ud```Use `python3.7` command in [Cygwin](https://www.cygwin.com/install.html) instead of `python`.## Installation for Jupyter Notebook (Google Colaboratory)```py!pip install unidic2ud```## BenchmarksResults of [舞姬/雪國/荒野より-Benchmarks](https://colab.research.google.com/github/KoichiYasuoka/UniDic2UD/blob/master/benchmark/benchmark.ipynb)|[舞姬](https://github.com/KoichiYasuoka/UniDic2UD/blob/master/benchmark/maihime-benchmark.tar.gz)|LAS|MLAS|BLEX||---------------|-----|-----|-----||UniDic=&quot;kindai&quot;|81.13|70.37|77.78||UniDic=&quot;qkana&quot; |79.25|70.37|77.78||UniDic=&quot;kinsei&quot;|72.22|60.71|64.29||[雪國](https://github.com/KoichiYasuoka/UniDic2UD/blob/master/benchmark/yukiguni-benchmark.tar.gz)|LAS|MLAS|BLEX||---------------|-----|-----|-----||UniDic=&quot;qkana&quot; |89.29|85.71|81.63||UniDic=&quot;kinsei&quot;|89.29|85.71|77.55||UniDic=&quot;kindai&quot;|84.96|81.63|77.55||[荒野より](https://github.com/KoichiYasuoka/UniDic2UD/blob/master/benchmark/koyayori-benchmark.tar.gz)|LAS|MLAS|BLEX||---------------|-----|-----|-----||UniDic=&quot;kindai&quot;|76.44|61.54|53.85||UniDic=&quot;qkana&quot; |75.39|61.54|53.85||UniDic=&quot;kinsei&quot;|71.88|58.97|51.28|## AuthorKoichi Yasuoka (安岡孝一)## References* 安岡孝一: [形態素解析部の付け替えによる近代日本語(旧字旧仮名)の係り受け解析](http://hdl.handle.net/2433/254677), 情報処理学会研究報告, Vol.2020-CH-124「人文科学とコンピュータ」, No.3 (2020年9月5日), pp.1-8.* 安岡孝一: [漢日英Universal Dependencies平行コーパスとその差異](http://hdl.handle.net/2433/245218), 人文科学とコンピュータシンポジウム「じんもんこん2019」論文集 (2019年12月), pp.43-50.</longdescription>
</pkgmetadata>