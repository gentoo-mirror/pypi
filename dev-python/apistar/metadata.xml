<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/encode/apistar/master/docs/img/logo-200-square-light.png&quot; alt=&quot;API Star&quot; /&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    ðŸ›  &lt;em&gt;The Web API toolkit.&lt;/em&gt; ðŸ› &lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://travis-ci.org/encode/apistar&quot;&gt;    &lt;img src=&quot;https://travis-ci.org/encode/apistar.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/gh/encode/apistar&quot;&gt;    &lt;img src=&quot;https://codecov.io/gh/encode/apistar/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.python.org/pypi/apistar&quot;&gt;    &lt;img src=&quot;https://badge.fury.io/py/apistar.svg&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;/p&gt;---**Community:** https://discuss.apistar.org ðŸ¤” ðŸ’­ ðŸ¤“ ðŸ’¬ ðŸ˜Ž**Documentation:** https://docs.apistar.com ðŸ“˜**Requirements:** Python 3.6+---API Star is a toolkit for working with OpenAPI or Swagger schemas. It allows you to:* Build API documentation, with a selection of available themes.* Validate API schema documents, and provide contextual errors.* Make API requests using the dynamic client library.You can use it to build static documentation, integrate it within a Web framework,or use it as the client library for interacting with other APIs.## QuickstartInstall API Star:```bash$ pip3 install apistar```Let's take a look at some of the functionality the toolkit provides...We'll start by creating an OpenAPI schema, `schema.yaml`:```yamlopenapi: 3.0.0info:  title: Widget API  version: '1.0'  description: An example API for widgetsservers:  - url: https://www.example.org/paths:  /widgets:    get:      summary: List all the widgets.      operationId: listWidgets      parameters:      - in: query        name: search        description: Filter widgets by this search term.        schema:          type: string```Let's also create a configuration file `apistar.yml`:```yamlschema:  path: schema.yaml  format: openapi```We're now ready to start using the `apistar` command line tool.We can validate our OpenAPI schema:```$ apistar validateâœ“ Valid OpenAPI schema.```Or build developer documentation for our API:```$ apistar docs --serveâœ“ Documentation available at &quot;http://127.0.0.1:8000/&quot; (Ctrl+C to quit)```We can also make API requests to the server referenced in the schema:```$ apistar request listWidgets search=cogwheel```## Where did the server go?With version 0.6 onwards the API Star project is being focused as aframework-agnositic suite of API tooling. The plan is to build out thisfunctionality in a way that makes it appropriate for use either as a stand-alonetool, or together with a large range of frameworks.The 0.5 branch remains available on GitHub, and can be installed from PyPIwith `pip install apistar==0.5.41`. Any further development of the API Starserver would likely need to be against a fork of that, under a new maintainer.If you're looking for a high-performance Python-based async framework, thenI would instead recommend [Starlette](https://www.starlette.io/).---&lt;p align=&quot;center&quot;&gt;&lt;i&gt;API Star is &lt;a href=&quot;https://github.com/tomchristie/apistar/blob/master/LICENSE.md&quot;&gt;BSD licensed&lt;/a&gt; code.&lt;br/&gt;Designed &amp; built in Brighton, England.&lt;/i&gt;&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/encode/apistar/master/docs/img/ident-44-square-light.png&quot; alt=&quot;API Star&quot; /&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>