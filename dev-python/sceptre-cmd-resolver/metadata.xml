<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Sceptre shell command resolverThis resolver can be used to execute any shell command.## Why?This resolver is handy, because it allows you to dynamically resolve parameters at runtime.The beautiful thing about it is that it's infintely extensible! You can use it to connectany command line tool to Sceptre.Use it in conjunction with the typical unix tools (cat, cut, grep etc...) or third partyones (vault, op, etc...)Use the `!rcmd` tag to activate the resolver. You can also use pipe commands, and genericbash (maybe powershell too but I haven't tried it).The yaml tag `!cmd` is already used by sceptre hooks, unfortunately it wasn't possible to usethe same YAML tag for this custom resolver, so the tag `!rcmd` was used instead.## Installation```# To install directly from PyPIpip install sceptre-cmd-resolver# To install from this git repopip install git+https://github.com/Sceptre/sceptre-resolver-cmd.git```## Usage / ExamplesUse the `!rcmd` tag to activate the resolver. You can also use pipe commands, and genericbash (perhaps even powershell but I haven't tested it).```yaml# Resolve the contents of a file with catparameters:  DatabasePassword: !rcmd cat .env/dev/password``````yaml# Resolve data from a json file with cat + jqparameters:  DatabasePassword: !rcmd cat .env/data | jq -r '.Passwords.dev'``````yaml# Resolve a secret in vault using the vault CLI (you must be logged in!)parameters:  DatabasePassword: !rcmd vault kv get -field=password myapp/database/dev``````yamlparameters:  # Resolve the EC2 AMI Image ID to the latest official version of Ubuntu 20.04 at deploy time  EC2ImageIdUbuntu: !rcmd &gt;-    aws ssm get-parameters      --region eu-west-2      --names /aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id      --query 'Parameters[0].[Value]' --output text  # Resolve the EC2 AMI Image ID to the latest official version Windows Server 2019 at deploy time  EC2ImageIdWindows: !rcmd &gt;-    aws ssm get-parameters      --region eu-west-2      --names /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base      | jq -r '.Parameters[0].Value' | jq -r '.image_id'``````yaml# Add a human readable comment with the deployment dateparameters:  DeployNote: !rcmd echo &quot;Deployed by `whoami` on `date` :-)&quot;``````yaml# Execute the command with the same AWS profile provided to Sceptreparameters:  CanonicalUserId: !rcmd    command: &quot;aws s3api list-buckets --query Owner.ID --output text&quot;``````yaml# Override the command execution with a specific AWS profile, region, and/or sceptre_roleparameters:  CanonicalUserId: !rcmd    command: &quot;aws s3api list-buckets --query Owner.ID --output text&quot;    profile: &quot;my-profile&quot;    region: &quot;us-west-2&quot;    sceptre_role: &quot;arn:aws:iam::123456:role/my-role-to-override-the-stack-role&quot;```</longdescription>
</pkgmetadata>