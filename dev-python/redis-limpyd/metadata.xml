<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|PyPI Version| |Build Status| |Doc Status|======Limpyd======``Limpyd`` provides an **easy** way to store objects in Redis_, **without losing the power and the control of the Redis API**, in a *limpid* way, with just as abstraction as needed.Featuring:- Don't care about keys, ``limpyd`` do it for you- Retrieve objects from some of their attributes- Retrieve objects collection- CRUD abstraction- Powerful indexing and filtering- Keep the power of all the `Redis data types &lt;http://redis.io/topics/data-types&gt;`_ in your own codeExample of configuration:.. code:: python    from limpyd import model    main_database = model.RedisDatabase(        host=&quot;localhost&quot;,        port=6379,        db=0    )    class Bike(model.RedisModel):        database = main_database        name = model.InstanceHashField(indexable=True, unique=True)        color = model.InstanceHashField()        wheels = model.StringField(default=2)So you can use it like this:.. code:: python    &gt;&gt;&gt; mountainbike = Bike(name=&quot;mountainbike&quot;)    &gt;&gt;&gt; mountainbike.wheels.get()    '2'    &gt;&gt;&gt; mountainbike.wheels.incr()    &gt;&gt;&gt; mountainbike.wheels.get()    '3'    &gt;&gt;&gt; mountainbike.name.set(&quot;tricycle&quot;)    &gt;&gt;&gt; tricycle = Bike.collection(name=&quot;tricycle&quot;)[0]    &gt;&gt;&gt; tricycle.wheels.get()    '3'    &gt;&gt;&gt; tricycle.hmset(color=&quot;blue&quot;)    True    &gt;&gt;&gt; tricycle.hmget('color')    ['blue']    &gt;&gt;&gt; tricycle.hmget('color', 'name')    ['blue', 'tricycle']    &gt;&gt;&gt; tricycle.color.hget()    'blue'    &gt;&gt;&gt; tricycle.color.hset('yellow')    True    &gt;&gt;&gt; tricycle.hmget('color')    ['yellow']Install=======Python versions ``2.7`` and ``3.5`` to ``3.8`` are supported (CPython and PyPy).Redis-py_ versions ``&gt;= 3`` are supported, with redis-server versions ``&gt;= 3``... code:: bash    pip install redis-limpydFor Redis-py_ versions &lt; 3, please use limpyd version ``1.3.1`` (or later in ``1.x`` versions)Documentation=============See https://redis-limpyd.readthedocs.io/ for a full documentationChangelog=========See `CHANGELOG.rst &lt;CHANGELOG.rst&gt;`_Maintainers===========* `Stéphane «Twidi» Angel &lt;https://github.com/twidi/&gt;`_* `Yohan Boniface &lt;https://github.com/yohanboniface/&gt;`_Extensions==========* A bundle of great extensions: `Limpyd-extensions &lt;https://github.com/limpyd/redis-limpyd-extensions&gt;`_* A queue/task/job manager: `Limpyd-jobs &lt;https://github.com/limpyd/redis-limpyd-jobs&gt;`_.. |PyPI Version| image:: https://img.shields.io/pypi/v/redis-limpyd.png   :target: https://pypi.python.org/pypi/redis-limpyd.. |Build Status| image:: https://travis-ci.org/limpyd/redis-limpyd.png?branch=master   :target: https://travis-ci.org/limpyd/redis-limpyd.. |Doc Status| image:: https://readthedocs.org/projects/redis-limpyd/badge/   :target: http://redis-limpyd.readthedocs.io/en/latest/.. _Redis: http://redis.io.. _Redis-py: https://github.com/andymccurdy/redis-py</longdescription>
</pkgmetadata>