<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![pypyr task runner for automation pipelines](https://pypyr.io/images/2x1/pypyr-taskrunner-yaml-pipeline-automation-1200x600.1bd2401e4f8071d85bcb1301128e4717f0f54a278e91c9c350051191de9d22c0.png)# pypyr automation task runnerAll documentation is here: &lt;https://pypyr.io/&gt;[![build status](https://github.com/pypyr/pypyr/workflows/lint-test-build/badge.svg?branch=main)](https://github.com/pypyr/pypyr/actions)[![coverage status](https://codecov.io/gh/pypyr/pypyr/branch/main/graph/badge.svg)](https://codecov.io/gh/pypyr/pypyr)[![pypi version](https://badge.fury.io/py/pypyr.svg)](https://pypi.python.org/pypi/pypyr/)[![apache 2.0 license](https://img.shields.io/github/license/pypyr/pypyr)](https://opensource.org/licenses/Apache-2.0)*pypyr*&gt;   pronounce how you like, but I generally say *piper* as in &quot;piping    down the valleys wild&quot;pypyr is a free &amp; open-source task-runner that lets you define and runsequential steps in a pipeline.Like a turbo-charged shell script, but less finicky. Less annoying thana makefile.pypyr runs pipelines defined in yaml. A pipeline is pretty much anythingyou want to automate with a sequence of steps.Automate anything by combining commands, different scripts in differentlanguages &amp; applications into one pipeline process.You can run loops, conditionally execute steps based on conditions youspecify, wait for status changes before continuing, break on failureconditions or swallow errors. Pretty useful for orchestrating continuousintegration, continuous deployment &amp; devops operations.pypyr gives you simple variable substitution &amp; configuration filemanagement so you can read, merge and write configuration files to andfrom yaml, json or just text.## Installation```console$ pip install --upgrade pypyr```Tested against Python \&gt;=3.7pypyr runs on Linux, MacOS &amp; Windows. pypyr also runs fine on CI servers &amp;containers - pretty much anywhere with a Python run-time will work.## Usage### This is a pipelineExample pipeline that runs a sequence of steps and takes an optionalcustom cli input argument:```yaml# ./show-me-what-you-got.yamlcontext_parser: pypyr.parser.keyvaluepairssteps:  - name: pypyr.steps.echo    in:      echoMe: o hai!  - name: pypyr.steps.cmd    in:      cmd: echo any cmd you like  - name: pypyr.steps.shell    in:      cmd: echo ninja shell power | grep '^ninja.*r$'   - name: pypyr.steps.py    in:      py: print('any python you like')  - name: pypyr.steps.cmd    while:      max: 3    in:      cmd: echo gimme a {whileCounter}  - name: pypyr.steps.cmd    foreach: [once, twice, thrice]    in:      cmd: echo say {i}  - name: pypyr.steps.default    in:      defaults:        sayBye: False  - name: pypyr.steps.echo    run: '{sayBye}'    in:      echoMe: k bye!```### This is how you run a pipelineThis is what happens when you run this pipeline:```console$ pypyr show-me-what-you-goto hai!any cmd you likeninja shell powerany python you likegimme a 1gimme a 2gimme a 3say oncesay twicesay thrice$ pypyr show-me-what-you-got sayBye=true  o hai!any cmd you likeninja shell powerany python you likegimme a 1gimme a 2gimme a 3say oncesay twicesay thricek bye!```## Help!Don't Panic! Check the [pypyr technical docs](https://pypyr.io/docs/)to begin. For help, community &amp; talk, check [pypyrtwitter](https://twitter.com/pypyrpipes/), or join the chat at the [pypyr community discussion forum](https://github.com/pypyr/pypyr/discussions)!## Contribute### DevelopersFor information on how to help with pypyr, run tests and coverage,please do check out the [contribution guide](CONTRIBUTING.md).### BugsWell, you know. No one's perfect. Feel free to [create anissue](https://github.com/pypyr/pypyr/issues/new).## Licensepypyr is free &amp; open-source software distributed under the Apache 2.0 License.Please see [LICENSE file](LICENSE) in the root of the repo..Copyright 2017 the pypyr contributors.</longdescription>
</pkgmetadata>