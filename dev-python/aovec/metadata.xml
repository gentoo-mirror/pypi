<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aovec[![Model release](https://github.com/eggplants/aovec/actions/workflows/model_release.yml/badge.svg)](https://github.com/eggplants/aovec/actions/workflows/model_release.yml)[![Release Package](https://github.com/eggplants/aovec/actions/workflows/release.yml/badge.svg)](https://github.com/eggplants/aovec/actions/workflows/release.yml) [![PyPI version](https://badge.fury.io/py/aovec.svg)](https://badge.fury.io/py/aovec)[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/eggplants/aovec/master.svg)](https://results.pre-commit.ci/latest/github/eggplants/aovec/master)- Make Word2Vec from [aozorabunko/aozorabunko](https://github.com/aozorabunko/aozorabunko)- Pre-built models are available from `week*` [Releases](https://github.com/eggplants/aovec/releases).[![model](https://img.shields.io/badge/dynamic/json.svg?label=Model&amp;query=$[0].assets[0].browser_download_url&amp;url=https://api.github.com/repos/eggplants/aovec/releases)](https://github.com/eggplants/aovec/releases)## Requirements- Git- MeCab  - MeCab Checker: [src/check_mecab.py](https://github.com/eggplants/aovec/blob/master/src/check_mecab.py)## How to use- Make `*.model` file```shellsession# Install from pypipip install aovec# Clone aozorabunko/aozorabunko (&gt;20GB)aovec clone# Parse html files and write to results to novels/aovec parse# Make word2vec and write to aozora_model.modelaovec mkvec```- Use from Python (See: [official document](https://radimrehurek.com/gensim/models/word2vec.html))```pythonfrom gensim.models import Word2Vec, KeyedVectors# *.model+*.model.syn1neg.npy+*.model.wv.vectors.npymodel = Word2Vec.load('aozora_model.model')# or...# *.kvmodel = KeyedVectors.load_word2vec_format('aozora_model.kv')# or...(fastest way to load)# *.kv.binmodel = KeyedVectors.load_word2vec_format('aozora_model.kv.bin',                                          binary=True,                                          unicode_errors='ignore')```---## (Optional) Set up `mecab-ipadic-neologd` on UbuntuDownload and install```shellsessionsudo apt install build-essentialgit clone --depth 1 https://github.com/neologd/mecab-ipadic-neologd neologd &amp;&amp; cd $_sudo bin/install-mecab-ipadic-neologd -ysudo mv /usr/lib/*/mecab/dic/mecab-ipadic-neologd /var/lib/mecab/dic```Update `/etc/mecabrc````bashsudo cp /etc/mecabrc /etc/mecabrc.baksudo sed -i 's_^dicdir.*_; &amp;\'$'\ndicdir = /var/lib/mecab/dic/mecab-ipadic-neologd_' /etc/mecabrc``````diff--- /etc/mecabrc.bak+++ /etc/mecabrc@@ -3,7 +3,8 @@ ; ; $Id: mecabrc.in,v 1.3 2006/05/29 15:36:08 taku-ku Exp $; ;-dicdir = /var/lib/mecab/dic/debian+; dicdir = /var/lib/mecab/dic/debian+dicdir = /var/lib/mecab/dic/mecab-ipadic-neologd ; userdic = /home/foo/bar/user.dic```## Help```shellsession$ aovec -husage: aovec [-h] [-V] {clone,c,parse,p,mkvec,m} ...Make Word2Vec from aozorabunko/aozorabunkopositional arguments:  {clone,c,parse,p,mkvec,m}    clone (c)           clone aozorabunko/aozorabunko (&gt;20GB)    parse (p)           parse html files and write to results    mkvec (m)           make word2vec and write to *.modeloptional arguments:  -h, --help            show this help message and exit  -V, --version         show program's version number and exit``````shellsession$ aovec clone -husage: aovec clone [-h]optional arguments:  -h, --help  show this help message and exit``````shellsession$ aovec parse -husage: aovec parse [-h] [-d DIR]optional arguments:  -h, --help            show this help message and exit  -d DIR, --savedir DIR                        directory name of saving results (default: novels)``````shellsession$ aovec mkvec -husage: aovec mkvec [-h] [-d DIR] [-o NAME] [-e INT] [-v INT] [-m INT] [-w INT]                   [-p INT] [-b] [--both]optional arguments:  -h, --help            show this help message and exit  -d DIR, --parsedir DIR                        directory name of saved parsing results (default:                        novels)  -o NAME, --model NAME                        name of word2vec model (default: aozora_model)  -e INT, --epochs INT  number of word2vec epochs (default: 5)  -v INT, --vector_size INT                        dimensionality of the word vectors (default: 1000)  -m INT, --min_count INT                        ignore words total frequency lower than this (default:                        5)  -w INT, --window INT  window size of words before and for learning (default:                        5)  -p INT, --workers INT                        worker threads (default: 3)  -b, --binary          save model files as one binary (default: False)  --both                save model files as both row data and binary (default:                        False)```## LicenseMIT</longdescription>
</pkgmetadata>