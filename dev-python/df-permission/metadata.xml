<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DFPermission### Installation```textpip install df-permission```### Configuration```pyconINSTALLED_APPS = [    ...,    'df_permission']```### Generate permissionsFor model fields:```text./manage.py generate_model_field_permissions```For serializer fields (not include model fields):```text./manage.py generate_serializer_field_permissions```### Attributes`df_method`- Method of action- Valid values are `create`, `update`, `retrieve`, `list`, `destroy````pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]    df_method = 'create'    ...```or```pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]    df_method = DFMethods.CREATE    ...````df_model`- Model```pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]    df_model = MyModel    ...````df_fields`- Fields```pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]    df_fields = ['field1', 'field2', ...]    ...````df_permissions`- Permissions- type: `string`, `list`, `tuple````pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]    df_permissions = ['permission1', 'permission2', ...]    ...```or```pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]    df_permissions = 'permission1'    ...````df_allow_superuser`- Allow superuser if value is True- Type: `boolean`- Default: `False`### Methods`get_df_permissions`- Customize df_permissions```pyconclass MyView(CreateAPIView):    permission_classes = [DFPermission]        def get_df_permissions(self):        # write your logic code        return # single permission or permissions```### How does it work?First, find `df_permissions` attribute. If it does not exist, find `get_df_permissions` method. If it does not exist too, generate permissions.First for this, collect fields that are permission required. Find `df_fields`, if it exist. Else get serializer class to get fields and get intersectionwith model fields.Then, generate required perms using fields and `df_method`.Finally, user's permissions are checked.</longdescription>
</pkgmetadata>