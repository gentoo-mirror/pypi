<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Buildgrid Metering Service ClientðŸš§ This library is currently WIP and the interfaces might not be stable while the version is `0.0.1-alpha.*`. ðŸš§Asyncio Python client of [`buildgrid-metering`](https://gitlab.com/BuildGrid/buildgrid-metering) service.## ExampleSuppose `buildgrid-metering` is running on `http://localhost:8000` requiring no authentication.The service can be queried using this library via its `asyncio` interfaces.```pythonimport asynciofrom buildgrid_metering.client import MeteringServiceClientfrom buildgrid_metering.client.auth import (    AuthTokenConfig,    AuthTokenLoader,    AuthTokenMode,)from buildgrid_metering.models.dataclasses import ComputingUsage, Identity, Usagetoken_loader = AuthTokenLoader(AuthTokenConfig(AuthTokenMode.NONE, &quot;&quot;))client = MeteringServiceClient(&quot;http://localhost:8000&quot;, token_loader)identity = Identity(instance=&quot;dev&quot;, workflow=&quot;build&quot;, actor=&quot;tool&quot;, subject=&quot;username&quot;)async def main():    # Put usage of identity    usage = Usage(computing=ComputingUsage(utime=1, stime=2, maxrss=3))    await client.put_usage(identity, &quot;op&quot;, usage)    # Check throttling of identity    resp = await client.get_throttling(identity)    print(resp)if __name__ == &quot;__main__&quot;:\    # Run the script with asyncio    asyncio.run(main())```## Contact usSee more details at [BuildGrid Resources](https://buildgrid.build/user/about.html#resources).## ContributingSee more details at [CONTRIBUTING.md](./CONTRIBUTING.md) and [BuildGrid](https://buildgrid.build/developer/contributing.html).</longdescription>
</pkgmetadata>