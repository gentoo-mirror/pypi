<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Knock Python libraryKnock API access for applications written in Python.## DocumentationSee the [documentation](https://docs.knock.app) for Python usage examples.## InstallationTo install from PyPi, run the following:```bashpip install knockapi```To install from source, clone the repo and run the following:```bashpython setup.py install```## ConfigurationTo use the library you must provide a secret API key, provided in the Knock dashboard.```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)```## Usage### Identifying users```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)client.users.identify(id=&quot;jhammond&quot;, data={&quot;name&quot;: &quot;John Hammond&quot;, &quot;email&quot;: &quot;jhammond@ingen.net&quot;})```## Retrieving users```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)client.users.get_user(id=&quot;jhammond&quot;)```### Sending notifies```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)client.notify(  key=&quot;dinosaurs-loose&quot;,  actor=&quot;dnedry&quot;,  recipients=[&quot;jhammond&quot;, &quot;agrant&quot;, &quot;imalcolm&quot;, &quot;esattler&quot;],  cancellation_key=alert.id,  tenant=&quot;jurassic-park&quot;,  data={    &quot;type&quot;: &quot;trex&quot;,    &quot;priority&quot;: 1  })```### Getting and setting channel data```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)# Set channel data for an APNSclient.users.set_channel_data(  id=&quot;jhammond&quot;,  channel_id=KNOCK_APNS_CHANNEL_ID,  channel_data={    &quot;tokens&quot;: [apns_token]  })# Get channel data for the APNS channelclient.users.get_channel_data(id=&quot;jhammond&quot;, channel_id=KNOCK_APNS_CHANNEL_ID)```### Canceling notifies```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)client.workflows.cancel(  key=&quot;dinosaurs-loose&quot;,  cancellation_key=alert.id,  recipients=[&quot;jhammond&quot;, &quot;agrant&quot;, &quot;imalcolm&quot;, &quot;esattler&quot;],)```### User preferences```pythonfrom knockapi import Knockclient = Knock(api_key=&quot;sk_12345&quot;)# Replaces the preferences for the userclient.users.set_preferences(  user_id=&quot;jhammond&quot;,  channel_types={'email': True},  workflows={'dinosaurs-loose': False})# Retrieve the current preferencesclient.users.get_preferences(user_id=&quot;jhammond&quot;)```### Signing JWTsYou can use the `pyjwt` package to [sign JWTs easily](https://pyjwt.readthedocs.io/en/stable/usage.html#encoding-decoding-tokens-with-rs256-rsa).You will need to generate an environment specific signing key, which you can find in the Knock dashboard.If you're using a signing token you will need to pass this to your client to perform authentication.You can read more about [client-side authentication here](https://docs.knock.app/client-integration/authenticating-users).```pythonimport jwtimport osprivate_key = os.getenv(&quot;KNOCK_SIGNING_KEY&quot;)encoded = jwt.encode({&quot;sub&quot;: &quot;jhammond&quot;}, private_key, algorithm=&quot;RS256&quot;)```</longdescription>
</pkgmetadata>