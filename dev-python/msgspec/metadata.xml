<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://jcristharif.com/msgspec/&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/jcrist/msgspec/main/docs/source/_static/msgspec-logo-light.svg&quot; width=&quot;35%&quot; alt=&quot;msgspec&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/jcrist/msgspec/actions/workflows/ci.yml&quot;&gt;    &lt;img src=&quot;https://github.com/jcrist/msgspec/actions/workflows/ci.yml/badge.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://jcristharif.com/msgspec/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/docs-latest-blue.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/jcrist/msgspec/blob/main/LICENSE&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/license/jcrist/msgspec.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/msgspec/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/msgspec.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://anaconda.org/conda-forge/msgspec&quot;&gt;    &lt;img src=&quot;https://img.shields.io/conda/vn/conda-forge/msgspec.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://codecov.io/gh/jcrist/msgspec&quot;&gt;    &lt;img src=&quot;https://codecov.io/gh/jcrist/msgspec/branch/main/graph/badge.svg&quot;&gt;  &lt;/a&gt;&lt;/p&gt;`msgspec` is a *fast* serialization and validation library, with builtinsupport for [JSON](https://json.org), [MessagePack](https://msgpack.org),[YAML](https://yaml.org), and [TOML](https://toml.io). It features:- üöÄ **High performance encoders/decoders** for common protocols. The JSON and  MessagePack implementations regularly  [benchmark](https://jcristharif.com/msgspec/benchmarks.html) as the fastest  options for Python.- üéâ **Support for a wide variety of Python types**. Additional types may be  supported through  [extensions](https://jcristharif.com/msgspec/extending.html).- üîç **Zero-cost schema validation** using familiar Python type annotations. In  [benchmarks](https://jcristharif.com/msgspec/benchmarks.html) `msgspec`  decodes *and* validates JSON ~2x faster than  [orjson](https://github.com/ijl/orjson) can decode it alone.- ‚ú® **A speedy Struct type** for representing structured data. If you already  use [dataclasses](https://docs.python.org/3/library/dataclasses.html) or  [attrs](https://www.attrs.org),  [structs](https://jcristharif.com/msgspec/structs.html) should feel familiar.  However, they're  [10-100x faster](https://jcristharif.com/msgspec/benchmarks.html#benchmark-structs&gt;)  for common operations.All of this is included in a[lightweight library](https://jcristharif.com/msgspec/benchmarks.html#benchmark-library-size)with no required dependencies.---`msgspec` may be used for serialization alone, as a faster JSON orMessagePack library. For the greatest benefit though, we recommend using`msgspec` to handle the full serialization &amp; validation workflow:**Define** your message schemas using standard Python type annotations.```python&gt;&gt;&gt; import msgspec&gt;&gt;&gt; class User(msgspec.Struct):...     &quot;&quot;&quot;A new type describing a User&quot;&quot;&quot;...     name: str...     groups: set[str] = set()...     email: str | None = None```**Encode** messages as JSON, or one of the many other supported protocols.```python&gt;&gt;&gt; alice = User(&quot;alice&quot;, groups={&quot;admin&quot;, &quot;engineering&quot;})&gt;&gt;&gt; aliceUser(name='alice', groups={&quot;admin&quot;, &quot;engineering&quot;}, email=None)&gt;&gt;&gt; msg = msgspec.json.encode(alice)&gt;&gt;&gt; msgb'{&quot;name&quot;:&quot;alice&quot;,&quot;groups&quot;:[&quot;admin&quot;,&quot;engineering&quot;],&quot;email&quot;:null}'```**Decode** messages back into Python objects, with optional schema validation.```python&gt;&gt;&gt; msgspec.json.decode(msg, type=User)User(name='alice', groups={&quot;admin&quot;, &quot;engineering&quot;}, email=None)&gt;&gt;&gt; msgspec.json.decode(b'{&quot;name&quot;:&quot;bob&quot;,&quot;groups&quot;:[123]}', type=User)Traceback (most recent call last):  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;msgspec.ValidationError: Expected `str`, got `int` - at `$.groups[0]`````msgspec` is designed to be as performant as possible, while retaining some ofthe nicities of validation libraries like[pydantic](https://pydantic-docs.helpmanual.io/). For supported types,encoding/decoding a message with `msgspec` can be[~2-80x faster than alternative libraries](https://jcristharif.com/msgspec/benchmarks.html).&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://jcristharif.com/msgspec/benchmarks.html&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/jcrist/msgspec/main/docs/source/_static/bench-validation.svg&quot;&gt;  &lt;/a&gt;&lt;/p&gt;See [the documentation](https://jcristharif.com/msgspec/) for more information.## LICENSENew BSD. See the[License File](https://github.com/jcrist/msgspec/blob/main/LICENSE).</longdescription>
</pkgmetadata>