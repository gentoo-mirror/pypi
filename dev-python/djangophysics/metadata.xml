<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># djangophysicsDjango APIs for Physics## Countries List of countries according to ISO-3166 and details of a country based on PyCountry module. ## Currencies List of currencies based on ISO-4217## Currencies conversion ratesList of conversion rates fetched from BCE APIs. The module provides a command line for fetching rates from different services. Custom services can be added.Custom conversion rates can be created by registered users.## Systems and UnitsList of unit systems, dimensions, and units based on the excellent Pint library. Custom units can be created by registered users.## ConversionsConversions between currencies, with batch conversion support.Conversions between units in a unit system with batch conversion support## EvaluationCheck the syntax and dimension of a formula with units, and evaluate its value## Installpip install djangophysics## Dockerdocker is available at fmeurou/djangophysics## Usage### RoutesThis package provides a OpenAPI documentation. See urls.example.py for a setup example. ### AuthenticationThe app provides most services without authentication. Authentication is required to store custom conversion rates and custom conversion units.By default, the app is configured to allow authentication through an API token that can be generated for a user on the Django admin site.API authentication can be achieved with an Authorization header with value Token &lt;APIToken&gt;curl -H &quot;Authorization: Token &lt;user token&gt;&quot;.### Language supportThe app supports translations for countries and units in 15 languages. More languages should be available soon.### Fetch ratesThe app uses python-forex as a mecanism to fetch currency rates. A django command is available to fetch rates from command line :$ ./manage.py fetch_rates## About ### Project goalsGeophysics aims at bringing physical quantities to Web Services.### Project websiteA live version of this service is available at &lt;https://api.geophysics.io&gt;.###  MentionsThis module relies on the great work from the following projects:- [Django](https://www.djangoproject.com/) - [Django Rest Framework](https://www.django-rest-framework.org/)- [Pint](https://pint.readthedocs.io/en/stable/)- [Sympy](https://www.sympy.org/en/index.html)### LeadershipThis project is maintained by Frédéric Meurou &lt;fm@peabytes.me&gt;.</longdescription>
</pkgmetadata>