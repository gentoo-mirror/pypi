<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PLT - Preference Learning Toolbox&gt; A toolbox for preference learning implemented in Python.![Image](http://plt.institutedigitalgames.com/img/plt_header_logo_final_transparent_2_small.png &quot;PLT logo&quot;)Preference learning (PL) is a core area of machine learning that handles datasets with ordinal relations. As thenumber of generated data of ordinal nature such as ranks and subjective ratings is increasing, the importance androle of the PL field becomes central within machine learning research and practice.The Preference Learning Toolbox (PLT) is an open source software application and package which supports the keydata modelling phases incorporating various popular data pre-processing, feature selection and preferencelearning methods.![Image](http://plt.institutedigitalgames.com/img/index_plt.png &quot;PLT Screenshot&quot;)PLT may be used either via its GUI or its API. This ``README`` is based on the API which is made available via the Python package **pyplt**. For more information on the GUI or to download the GUI application, please visit the [PLT website](http://plt.institutedigitalgames.com/index.php).The API documentation may be found at: [https://plt.readthedocs.io/](https://plt.readthedocs.io/en/latest/).## Features:* Dataset Pre-processing (including automatic feature extraction)* Automatic Feature Selection (SFS)* Preference Learning Algorithms (RankSVM, ANN-Backpropagation, RankNet)* Experiment Reporting and Model Storage## Installation:The Python package for PLT, **pyplt**, may be installed via pip:```bashpip install pyplt```## Usage Example:The following example loads a dataset in the single file format (refer to [Detailed Guidelines](http://plt.institutedigitalgames.com/howto.php) for more information about file formats) and carries out preference learning using the RankSVM algorithm and K-Fold Cross Validation. At the end, the results are saved to file.```pythonfrom pyplt.experiment import Experimentfrom pyplt.plalgorithms.ranksvm import RankSVMfrom pyplt.util.enums import KernelTypefrom pyplt.evaluation.cross_validation import KFoldCrossValidationimport timeexp = Experiment()# load ratings dataexp.load_single_data(&quot;sample data sets\\single_synth.csv&quot;, has_ids=True, has_fnames=True)# set up RankSVM algorithmpl_algorithm = RankSVM(kernel=KernelType.RBF, gamma=1)exp.set_pl_algorithm(pl_algorithm)# set up K-Fold Cross Validationpl_evaluator = KFoldCrossValidation(k=3)exp.set_pl_evaluator(pl_evaluator)# run the experimentexp.run()# save the resultst = time.time()exp.save_exp_log(t, path=&quot;my_results.csv&quot;)```For more a more detailed usage guide, please check out the [tutorial](http://plt.institutedigitalgames.com/docs/tutorial_experiment.html).## Development SetupPLT has the following package dependencies:* keras* ttkthemes* numpy* matplotlib* pandas* tensorflow* scikit_learn* scipyThese depenencies may be easily istalled via pip:```bashpip install -r requirements.txt```## CitingThe tool is free for scientific use. If you use PLT in your scientific work, please cite as:Farrugia, Vincent E., HÃ©ctor P. MartÃnez, and Georgios N. Yannakakis. &quot;The Preference Learning Toolbox.&quot; arXiv preprint arXiv:1506.01709 (2015)## LicensePLT is licensed under the GNU General Public License v3.0. See ``LICENSE`` for more information.</longdescription>
</pkgmetadata>