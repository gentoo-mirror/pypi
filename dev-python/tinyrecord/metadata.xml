<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>::    TinyDB __  _                                   __          / /_(_)__  __ _________ _______  _______/ /         / __/ / _ \/ // / __/ -_) __/ _ \/ __/ _  /         \__/_/_//_/\_, /_/  \__/\__/\___/_/  \_,_/                   /___/**Supported Pythons:** 3.5+Tinyrecord is a library which implements atomictransaction support for the `TinyDB`_ NoSQL database.It uses a record-first then execute architecture whichallows us to minimize the time that we are within athread lock. Usage example:.. code-block:: python    from tinydb import TinyDB, where    from tinyrecord import transaction    table = TinyDB('db.json').table('table')    with transaction(table) as tr:        # insert a new record        tr.insert({'username': 'john'})        # update records matching a query        tr.update({'invalid': True}, where('username') == 'john')        # delete records        tr.remove(where('invalid') == True)        # update using a function        tr.update(updater, where(...))        # insert many items        tr.insert_multiple(documents)Note that due to performance reasons you cannot viewthe data within a transaction unless you've comitted.You will have to call operations on the transactionobject and not the database itself. Since tinyrecordworks with dictionaries and the latest API, it willonly support the latest version (**4.x**).Installation is as simple as ``pip install tinyrecord``... image:: https://travis-ci.org/eugene-eeo/tinyrecord.svg?branch=master    :target: https://travis-ci.org/eugene-eeo/tinyrecord.. _TinyDB: https://github.com/msiemens/tinydb</longdescription>
</pkgmetadata>