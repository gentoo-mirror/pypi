<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======liquer======Query your objects for two cents with Django like ``Q`` objects.Some Examples-------------``Q`` objects help you identify an object if its any attribute conforms yourcustom predicate dsl. Let's take a look at the example below::    from liquer import Q    class MyClass:        def __init__(self, foo):            self.foo = foo    # Define a query.    # We expect foo attribute of an object to be 'bar'    # regardless of case sensivity    q = Q(foo__iexact='bar')    # Create one MyClass instance    my_obj = MyClass(foo='Bar')    # Test my_obj if it conforms our query object    assert q(my_obj)  # Evaluates to True    # We are also free to test any dictionary object    my_dict = {'foo': 'Bar'}    assert q(my_dict)         # Let's fail a test    my_fail_obj = MyClass(foo='Baz')    assert q(my_fail_obj)  # Evaluates to False, Throws assertion errorYou can tail more attributes using '__' underscores to digg objects::    &gt;&gt;&gt; from liquer import Q    &gt;&gt;&gt; my_dict = {'foo': {'bar': {'baz': 1}}}    &gt;&gt;&gt; q = Q(foo__bar__baz__lte=2)    &gt;&gt;&gt; q(my_dict)    TrueAlso there is chance for applying and/or logics to query couples::    &gt;&gt;&gt; q = Q(foo__bar__gt=0) &amp; Q(foo__bar__lt=9)  # The same as Q(foo__bar__gt=0, foo__bar__lt=9)    &gt;&gt;&gt; q({'foo': {'bar': 5}})    True    &gt;&gt;&gt; q({'foo': {'bar': 18}})    FalseLet's try ``or`` logic::    &gt;&gt;&gt; q = Q(foo__bar=3) | Q(foo__bar=5)    &gt;&gt;&gt; q({'foo': {'bar': 3}})    True    &gt;&gt;&gt; q({'foo': {'bar': 5}})    True    &gt;&gt;&gt; q({'foo': {'bar': 4}})    False    It's very useful in most cases to register a callback when querying objects::    &gt;&gt;&gt; q = Q(foo__bar=3) | Q(foo__bar=5)    &gt;&gt;&gt; q.callback({'foo': {'bar': 3}}, lambda x: 'bar found %s' % x['foo']['bar'])    'bar found 3'The funniest part is to register your own predicates::    &gt;&gt;&gt; from liquer import Q, register    &gt;&gt;&gt; register('is_sqrt', lambda x, y: x / y == y)    &gt;&gt;&gt; q = Q(foo__is_sqrt=5)    &gt;&gt;&gt; q({'foo': 25})    TrueMore is coming soon...Enjoy!Licence-------Copyright (c) 2012 Kadir Pekel.Permission is hereby granted, free of charge, to any person obtaining a copy ofthis software and associated documentation files (the 'Software'), to deal inthe Software without restriction, including without limitation the rights touse, copy, modify, merge, publish, distribute, sublicense, and/or sell copiesof the Software, and to permit persons to whom the Software is furnished to doso, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.</longdescription>
</pkgmetadata>