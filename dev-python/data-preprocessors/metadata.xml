<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;    &lt;img src=&quot;https://github.com/MusfiqDehan/data-preprocessors/raw/master/branding/logo.png&quot;&gt;&lt;p&gt;Data Preprocessors&lt;/p&gt;&lt;sub&gt;An easy to use tool for Data Preprocessing specially for Text Preprocessing&lt;/sub&gt;&lt;!-- Badges --&gt;&lt;!-- [&lt;img src=&quot;https://deepnote.com/buttons/launch-in-deepnote-small.svg&quot;&gt;](PROJECT_URL) --&gt;[![](https://img.shields.io/pypi/v/data-preprocessors.svg)](https://pypi.org/project/data-preprocessors/)[![Downloads](https://img.shields.io/pypi/dm/data-preprocessors)](https://pepy.tech/project/data-preprocessors)[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1mJuRfIz__uS3xoFaBsFn5mkLE418RU19?usp=sharing)[![Kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://kaggle.com/kernels/welcome?src=https://github.com/keras-team/keras-io/blob/master/examples/vision/ipynb/mnist_convnet.ipynb)&lt;/div&gt;## **Table of Contents**- [Installation](#installation)- [Quick Start](#quick-start)- [Features](#features)    - [Split Textfile](#split-textfile)    - [Build Parallel Corpus](#build-parallel-corpus)    - [Separate Parallel Corpus](#)    - [Remove Punctuation](#remove-punctuation)    - [Space Punctuation](#space-punctuation)    - [Text File to List](#text-file-to-list)    - [List to Text File](#list-to-text-file)    - [Count Characters of a Sentence](#)    - [Count Words of Sentence](#)    - [Count No of Lines in a Text File](#)    - **[Apply Any Function in a Full Text File](#)**    ## **Installation**Install the latest stable release&lt;br&gt;**For windows**&lt;br&gt;```pip install -U data-preprocessors```**For Linux/WSL2**&lt;br&gt;```pip3 install -U data-preprocessors```## **Quick Start**```pythonfrom data_preprocessors import text_preprocessor as tpsentence = &quot;bla! bla- ?bla ?bla.&quot;sentence = tp.remove_punc(sentence)print(sentence)&gt;&gt; bla bla bla bla```## **Features**### Split TextfileThis function will split your textfile into train, test and validate. Three separate text files. By changing `shuffle` and `seed` value, you can randomly shuffle the lines of your text files.```pythonfrom data_preprocessors import text_preprocessor as tptp.split_textfile(    main_file_path=&quot;example.txt&quot;,    train_file_path=&quot;splitted/train.txt&quot;,    val_file_path=&quot;splitted/val.txt&quot;,    test_file_path=&quot;splitted/test.txt&quot;,    train_size=0.6,    val_size=0.2,    test_size=0.2,    shuffle=True,    seed=42)# Total lines:  500# Train set size:  300# Validation set size:  100# Test set size:  100```### Separate Parallel CorpusBy using this function, you will be able to easily separate `src_tgt_file` into separated `src_file` and `tgt_file`.```pythonfrom data_preprocessors import text_preprocessor as tptp.separate_parallel_corpus(src_tgt_file=&quot;&quot;, separator=&quot;|||&quot;, src_file=&quot;&quot;, tgt_file=&quot;&quot;)```### Remove PunctuationBy using this function, you will be able to remove the punction of a single line of a text file.```pythonfrom data_preprocessors import text_preprocessor as tpsentence = &quot;bla! bla- ?bla ?bla.&quot;sentence = tp.remove_punc(sentence)print(sentence)# bla bla bla bla```### Space PunctuationBy using this function, you will be able to add one space to the both side of the punction so that it will easier to tokenize the sentence. This will apply on a single line of a text file. But if we want, we can use it in a full twxt file.```pythonfrom data_preprocessors import text_preprocessor as tpsentence = &quot;bla! bla- ?bla ?bla.&quot;sentence = tp.space_punc(sentence)print(sentence)# bla bla bla bla```### Text File to ListConvert any text file into list.```python mylist= tp.text2list(myfile_path=&quot;myfile.txt&quot;)```### List to Text FileConvert any list into a text file (filename.txt)```pythontp.list2text(mylist=mylist, myfile_path=&quot;myfile.txt&quot;)```### Apply a function in whole text fileIn the place of `function_name` you can use any function and that function will be applied in the full/whole text file.```pythonfrom data_preprocessors import text_preprocessor as tptp.apply_whole(    function_name,     myfile_path=&quot;myfile.txt&quot;,     modified_file_path=&quot;modified_file.txt&quot;)```</longdescription>
</pkgmetadata>