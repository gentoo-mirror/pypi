<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;br/&gt;&lt;p align=&quot;center&quot;&gt;    &lt;i&gt;This repository is part of &lt;a href=&quot;https://sdv.dev&quot;&gt;The Synthetic Data Vault Project&lt;/a&gt;, a project from &lt;a href=&quot;https://datacebo.com&quot;&gt;DataCebo&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;[![Development Status](https://img.shields.io/badge/Development%20Status-3%20--%20Alpha-yellow)](https://pypi.org/search/?q=&amp;o=&amp;c=Development+Status+%3A%3A+3+-+Alpha)[![PyPi Shield](https://img.shields.io/pypi/v/RDT.svg)](https://pypi.python.org/pypi/RDT)[![Unit Tests](https://github.com/sdv-dev/RDT/actions/workflows/unit.yml/badge.svg)](https://github.com/sdv-dev/RDT/actions/workflows/unit.yml)[![Downloads](https://pepy.tech/badge/rdt)](https://pepy.tech/project/rdt)[![Coverage Status](https://codecov.io/gh/sdv-dev/RDT/branch/master/graph/badge.svg)](https://codecov.io/gh/sdv-dev/RDT)[![Slack](https://img.shields.io/badge/Community-Slack-blue?style=plastic&amp;logo=slack)](https://bit.ly/sdv-slack-invite)&lt;div align=&quot;left&quot;&gt;&lt;br/&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sdv-dev/RDT&quot;&gt;&lt;img align=&quot;center&quot; width=40% src=&quot;https://github.com/sdv-dev/SDV/blob/master/docs/images/RDT-DataCebo.png&quot;&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;# OverviewRDT (Reversible Data Transforms) is a Python library that transforms raw data into fully numericaldata, ready for data science. The transforms are reversible, allowing you to convert from numericaldata back into your original format.&lt;img align=&quot;center&quot; src=&quot;https://github.com/sdv-dev/SDV/blob/master/docs/images/rdt_main_tranformation.png&quot;&gt;&lt;/img&gt;# InstallInstall **RDT** using ``pip``  or ``conda``. We recommend using a virtual environment to avoidconflicts with other software on your device.```bashpip install rdt``````bashconda install -c conda-forge rdt```For more information about using reversible data transformations, visit the [RDT Documentation](https://docs.sdv.dev/rdt).# QuickstartIn this short series of tutorials we will guide you through a series of steps that willhelp you getting started using **RDT** to transform columns, tables and datasets.## Load the demo dataAfter you have installed RDT, you can get started using the demo dataset.```python3from rdt import get_democustomers = get_demo()```This dataset contains some randomly generated values that describe the customers of an onlinemarketplace.```  last_login email_optin credit_card  age  dollars_spent0 2021-06-26       False        VISA   29          99.991 2021-02-10       False        VISA   18            NaN2        NaT       False        AMEX   21           2.503 2020-09-26        True         NaN   45          25.004 2020-12-22         NaN    DISCOVER   32          19.99```Let's transform this data so that each column is converted to full, numerical data ready for datascience.## Creating the HyperTransformer &amp; configThe ``HyperTransformer`` is capable of transforming multi-column datasets.```python3from rdt import HyperTransformerht = HyperTransformer()```The `HyperTransformer` needs to know about the columns in your dataset and which transformers toapply to each. These are described by a config. We can ask the `HyperTransformer` to automaticallydetect it based on the data we plan to use.```python3ht.detect_initial_config(data=customers)```This will create and set the config.```Config:{    &quot;sdtypes&quot;: {        &quot;last_login&quot;: &quot;datetime&quot;,        &quot;email_optin&quot;: &quot;boolean&quot;,        &quot;credit_card&quot;: &quot;categorical&quot;,        &quot;age&quot;: &quot;numerical&quot;,        &quot;dollars_spent&quot;: &quot;numerical&quot;    },    &quot;transformers&quot;: {        &quot;last_login&quot;: &quot;UnixTimestampEncoder()&quot;,        &quot;email_optin&quot;: &quot;BinaryEncoder()&quot;,        &quot;credit_card&quot;: &quot;FrequencyEncoder()&quot;,        &quot;age&quot;: &quot;FloatFormatter()&quot;,        &quot;dollars_spent&quot;: &quot;FloatFormatter()&quot;    }}```The `sdtypes` dictionary describes the semantic data types of each of your columns and the`transformers` dictionary describes which transformer to use for each column. You can customize thetransformers and their settings. (See the [Transformers Glossary](https://docs.sdv.dev/rdt/transformers-glossary/browse-transformers) for more information).## Fitting &amp; using the HyperTransformerThe `HyperTransformer` references the config while learning the data during the `fit` stage.```python3ht.fit(customers)```Once the transformer is fit, it's ready to use. Use the transform method to transform all columnsof your dataset at once.```python3transformed_data = ht.transform(customers)``````   last_login.value  email_optin.value  credit_card.value  age.value  dollars_spent.value0      1.624666e+18                0.0                0.2         29                99.991      1.612915e+18                0.0                0.2         18                36.872      1.611814e+18                0.0                0.5         21                 2.503      1.601078e+18                1.0                0.7         45                25.004      1.608595e+18                0.0                0.9         32                19.99```The ``HyperTransformer`` applied the assigned transformer to each individual column. Each columnnow contains fully numerical data that you can use for your project!When you're done with your project, you can also transform the data back to the original formatusing the `reverse_transform` method.```python3original_format_data = ht.reverse_transform(transformed_data)``````  last_login email_optin credit_card  age  dollars_spent0        NaT       False        VISA   29          99.991 2021-02-10       False        VISA   18            NaN2        NaT       False        AMEX   21            NaN3 2020-09-26        True         NaN   45          25.004 2020-12-22       False    DISCOVER   32          19.99```# What's Next?To learn more about reversible data transformations, visit the [RDT Documentation](https://docs.sdv.dev/rdt).---&lt;div align=&quot;center&quot;&gt;&lt;a href=&quot;https://datacebo.com&quot;&gt;&lt;img align=&quot;center&quot; width=40% src=&quot;https://github.com/sdv-dev/SDV/blob/master/docs/images/DataCebo.png&quot;&gt;&lt;/img&gt;&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;[The Synthetic Data Vault Project](https://sdv.dev) was first created at MIT's [Data to AI Lab](https://dai.lids.mit.edu/) in 2016. After 4 years of research and traction with enterprise, wecreated [DataCebo](https://datacebo.com) in 2020 with the goal of growing the project.Today, DataCebo is the proud developer of SDV, the largest ecosystem forsynthetic data generation &amp; evaluation. It is home to multiple libraries that support syntheticdata, including:* ðŸ”„ Data discovery &amp; transformation. Reverse the transforms to reproduce realistic data.* ðŸ§  Multiple machine learning models -- ranging from Copulas to Deep Learning -- to create tabular,  multi table and time series data.* ðŸ“Š Measuring quality and privacy of synthetic data, and comparing different synthetic data  generation models.[Get started using the SDV package](https://sdv.dev/SDV/getting_started/install.html) -- a fullyintegrated solution and your one-stop shop for synthetic data. Or, use the standalone librariesfor specific needs.</longdescription>
</pkgmetadata>