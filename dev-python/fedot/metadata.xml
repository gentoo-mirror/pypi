<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. |eng| image:: https://img.shields.io/badge/lang-en-red.svg   :target: /README_en.rst.. |rus| image:: https://img.shields.io/badge/lang-ru-yellow.svg   :target: /README.rst.. image:: /docs/fedot_logo.png   :alt: Logo of FEDOT framework.. start-badges.. list-table::   :stub-columns: 1   * - package     - | |pypi| |python|   * - tests     - | |build| |coverage|   * - docs     - |docs|   * - license     - | |license|   * - stats     - | |downloads_stats|   * - support     - | |tg|   * - languages     - | |eng| |rus|.. end-badges**FEDOT** is an open-source framework for automated modeling and machine learning (AutoML) problems. This framework is distributed under the 3-Clause BSD license.It provides automatic generative design of machine learning pipelines for various real-world problems. The core of FEDOT is based on an evolutionary approach and supports classification (binary and multiclass), regression, clustering, and time series prediction problems... image:: /docs/pipeline_small.png   :alt: The structure of the modeling pipeline that can be optimised by FEDOTThe key feature of the framework is the complex management of interactions between various blocks of pipelines. It is represented as a graph that defines connections between data preprocessing and model blocks.The project is maintained by the research team of the Natural Systems Simulation Lab, which is a part of the `National Center for Cognitive Research of ITMO University &lt;https://actcognitive.org/&gt;`__.More details about FEDOT are available in the next video:.. image:: https://res.cloudinary.com/marcomontalbano/image/upload/v1606396758/video_to_markdown/images/youtube--RjbuV6i6de4-c05b58ac6eb4c4700831b2b3070cd403.jpg   :target: http://www.youtube.com/watch?v=RjbuV6i6de4   :alt: Introducing FedotFEDOT Features==============The main features of the framework are as follows:- **Flexibility.** FEDOT is highly flexible: it can be used to automate the construction of solutions for various problems, data types, and models;- **Integration with ML libraries.** FEDOT supports widely used ML libraries (Scikit-Learn, Catboost, Xgboost, etc.) and allows you to integrate custom ones;- **Extensibility for new domains.** Pipeline optimization algorithms are data- and task-independent, yet you can use special templates for a specific task class or data type (time series forecasting, NLP, tabular data, etc.) to increase the efficiency;- **No limits.** The framework is versatile and is not limited to specific modeling tasks, for example, it can be used in ODE or PDE;- **Support of hyper-parameter tuning.** Hyper-parameter tuning methods are supported. Custom methods can also be integrated in FEDOT;- **Reproducibility.** You can export the resulting pipelines in JSON format for experiment reproducibility.Compared to other frameworks:- There are no limits to specific modeling tasks, therefore FEDOT claims versatility and expandability;- Allows managing the complexity of models and thereby achieving better results.- Allows building pipelines using different types of input data (texts, images, tables, etc.) and consisting of various models.Installation============The simplest way to install FEDOT is using ``pip``:.. code-block::  $ pip install fedotInstallation with optional dependencies for image and text processing, and for DNNs:.. code-block::  $ pip install fedot[extra]How to Use==========FEDOT provides a high-level API that allows you to use its capabilities in a simple way. The API can be used for classification, regression, and time series forecasting problems.To use the API, follow these steps:1. Import ``Fedot`` class.. code-block:: python from fedot.api.main import Fedot2. Initialize the Fedot object and define the type of modeling problem. It provides a fit/predict interface:- ``Fedot.fit()`` begins the optimization and returns the resulting composite pipeline;- ``Fedot.predict()`` predicts target values for the given input data using an already fitted pipeline;- ``Fedot.get_metrics()`` estimates the quality of predictions using selected metrics.NumPy arrays, Pandas DataFrames, and the file's path can be used as sources of input data. In the case below, ``x_train``, ``y_train`` and ``x_test`` are ``numpy.ndarray()``:.. code-block:: python    model = Fedot(problem='classification', timeout=5, preset='best_quality', n_jobs=-1)    model.fit(features=x_train, target=y_train)    prediction = model.predict(features=x_test)    metrics = model.get_metrics(target=y_test)More information about the API is available in the `documentation &lt;https://fedot.readthedocs.io/en/latest/api/api.html&gt;`__ section and advanced approaches are in the `advanced &lt;https://github.com/aimclub/FEDOT/tree/master/examples/advanced&gt;`__ section.Examples &amp; Tutorials====================Jupyter notebooks with tutorials are located in `examples repository &lt;https://github.com/ITMO-NSS-team/fedot-examples&gt;`__. There you can find the following guides:* `Intro to AutoML &lt;https://github.com/ITMO-NSS-team/fedot-examples/blob/main/notebooks/latest/1_intro_to_automl.ipynb&gt;`__* `Intro to FEDOT functionality &lt;https://github.com/ITMO-NSS-team/fedot-examples/blob/main/notebooks/latest/2_intro_to_fedot.ipynb&gt;`__* `Intro to time series forecasting with FEDOT &lt;https://github.com/ITMO-NSS-team/fedot-examples/blob/main/notebooks/latest/3_intro_ts_forecasting.ipynb&gt;`__* `Advanced time series forecasting &lt;https://github.com/ITMO-NSS-team/fedot-examples/blob/main/notebooks/latest/4_auto_ts_forecasting.ipynb&gt;`__* `Gap-filling in time series and out-of-sample forecasting &lt;https://github.com/ITMO-NSS-team/fedot-examples/blob/main/notebooks/latest/5_ts_specific_cases.ipynb&gt;`__* `Hybrid modelling with custom models &lt;https://github.com/ITMO-NSS-team/fedot-examples/blob/main/notebooks/latest/6_hybrid_modelling.ipynb&gt;`__Notebooks are issued with the corresponding release versions (the default version is 'latest').Also, external examples are available:* `Kaggle: baseline for Microsoft Stock - Time Series Analysis task &lt;https://www.kaggle.com/dreamlone/microsoft-stocks-price-prediction-automl&gt;`__Extended examples:- Credit scoring problem, i.e. `binary classification task &lt;https://github.com/aimclub/FEDOT/blob/master/cases/credit_scoring/credit_scoring_problem.py&gt;`__- Time series forecasting, i.e. `random process regression &lt;https://github.com/aimclub/FEDOT/blob/master/cases/metocean_forecasting_problem.py&gt;`__- Spam detection, i.e. `natural language preprocessing &lt;https://github.com/aimclub/FEDOT/blob/master/cases/spam_detection.py&gt;`__- Wine variety prediction with `multi-modal data &lt;https://github.com/aimclub/FEDOT/blob/master/examples/advanced/multimodal_text_num_example.py&gt;`__Also, several video tutorials are available `available &lt;https://www.youtube.com/playlist?list=PLlbcHj5ytaFUjAxpZf7FbEaanmqpDYhnc&gt;`__ (in Russian).Publications About FEDOT========================We also published several posts devoted to different aspects of the framework:In English:- How AutoML helps to create composite AI? - `towardsdatascience.com &lt;https://towardsdatascience.com/how-automl-helps-to-create-composite-ai-f09e05287563&gt;`__- AutoML for time series: definitely a good idea - `towardsdatascience.com &lt;https://towardsdatascience.com/automl-for-time-series-definitely-a-good-idea-c51d39b2b3f&gt;`__- AutoML for time series: advanced approaches with FEDOT framework - `towardsdatascience.com &lt;https://towardsdatascience.com/automl-for-time-series-advanced-approaches-with-fedot-framework-4f9d8ea3382c&gt;`__- Winning a flood-forecasting hackathon with hydrology and AutoML - `towardsdatascience.com &lt;https://towardsdatascience.com/winning-a-flood-forecasting-hackathon-with-hydrology-and-automl-156a8a7a4ede&gt;`__- Clean AutoML for “Dirty” Data - `towardsdatascience.com &lt;https://towardsdatascience.com/clean-automl-for-dirty-data-how-and-why-to-automate-preprocessing-of-tables-in-machine-learning-d79ac87780d3&gt;`__- FEDOT as a factory of human-competitive results - `youtube.com &lt;https://www.youtube.com/watch?v=9Rhqcsrolb8&amp;ab_channel=NSS-Lab&gt;`__- Hyperparameters Tuning for Machine Learning Model Ensembles - `towardsdatascience.com &lt;https://towardsdatascience.com/hyperparameters-tuning-for-machine-learning-model-ensembles-8051782b538b&gt;`__In Russian:- Как AutoML помогает создавать модели композитного ИИ — говорим о структурном обучении и фреймворке FEDOT - `habr.com &lt;https://habr.com/ru/company/spbifmo/blog/558450&gt;`__- Прогнозирование временных рядов с помощью AutoML - `habr.com &lt;https://habr.com/ru/post/559796/&gt;`__- Как мы “повернули реки вспять” на Emergency DataHack 2021, объединив гидрологию и AutoML - `habr.com &lt;https://habr.com/ru/post/577886/&gt;`__- Чистый AutoML для “грязных” данных: как и зачем автоматизировать предобработку таблиц в машинном обучении - `ODS blog &lt;https://habr.com/ru/company/ods/blog/657525/&gt;`__- Фреймворк автоматического машинного обучения FEDOT (Конференция Highload++ 2022) - `presentation &lt;https://docs.yandex.ru/docs/view?url=ya-disk-public%3A%2F%2Fi27LScu3s3IIHDzIXt9O5EiEAMl6ThY6QLu3X1oYH%2FFiAl%2BLcNp4O4yTSYd2gRZnW5aDQ4kMZEXE%2BwNjbq78ug%3D%3D%3A%2F%D0%94%D0%B5%D0%BD%D1%8C%201%2F4.%D0%A1%D0%B8%D0%BD%D0%BD%D0%B0%D0%BA%D1%81%2F9.Open%20source-%D1%82%D1%80%D0%B8%D0%B1%D1%83%D0%BD%D0%B0_HL_FEDOT.pptx&amp;name=9.Open%20source-%D1%82%D1%80%D0%B8%D0%B1%D1%83%D0%BD%D0%B0_HL_FEDOT.pptx&gt;`__- Про настройку гиперпараметров ансамблей моделей машинного обучения - `habr.com &lt;https://habr.com/ru/post/672486/&gt;`__In Chinese:- 生成式自动机器学习系统 (presentation at the &quot;Open Innovations 2.0&quot; conference) - `youtube.com &lt;https://www.youtube.com/watch?v=PEET0EbCSCY&gt;`__Project Structure=================The latest stable release of FEDOT is in the `master branch &lt;https://github.com/aimclub/FEDOT/tree/master&gt;`__.The repository includes the following directories:* Package `core &lt;https://github.com/aimclub/FEDOT/tree/master/fedot/core&gt;`__  contains the main classes and scripts. It is the *core* of the FEDOT framework* Package `examples &lt;https://github.com/aimclub/FEDOT/tree/master/examples&gt;`__ includes several *how-to-use-cases* where you can start to discover how FEDOT works* All *unit and integration tests* can be observed in the `test &lt;https://github.com/aimclub/FEDOT/tree/master/test&gt;`__ directory* The sources of the documentation are in the `docs &lt;https://github.com/aimclub/FEDOT/tree/master/docs&gt;`__ directoryCurrent R&amp;D and future plans============================Currently, we are working on new features and trying to improve the performance and the user experience of FEDOT.The major ongoing tasks and plans:* Effective and ready-to-use pipeline templates for certain tasks and data types;* Integration with GPU via Rapids framework;* Alternative optimization methods of fixed-shaped pipelines;* Integration with MLFlow for import and export of the pipelines;* Improvement of the high-level API.Also, we are doing several research tasks related to AutoML time-series benchmarking and multi-modal modeling.Any contribution is welcome. Our R&amp;D team is open for cooperation with other scientific teams as well as with industrial partners.Documentation=============The general description is available in the `FEDOT.Docs &lt;https://itmo-nss-team.github.io/FEDOT.Miscellaneous&gt;`__ repository.Also, a detailed FEDOT API description is available in `Read the Docs &lt;https://fedot.readthedocs.io/en/latest/&gt;`__.Contribution Guide==================- The contribution guide is available in this `repository &lt;https://github.com/aimclub/FEDOT/blob/master/docs/source/contribution.rst&gt;`__.Acknowledgments===============We acknowledge the contributors for their important impact and the participants of numerous scientific conferences and workshops for their valuable advice and suggestions.Side Projects=============- The prototype of the web-GUI for FEDOT is available in the `FEDOT.WEB &lt;https://github.com/aimclub/FEDOT.Web&gt;`__ repository.Contacts========- `Telegram channel for solving problems and answering questions about FEDOT &lt;https://t.me/FEDOT_helpdesk&gt;`_- `Natural System Simulation Team &lt;https://itmo-nss-team.github.io/&gt;`_- `Anna Kalyuzhnaya &lt;https://scholar.google.com/citations?user=bjiILqcAAAAJ&amp;hl=ru&gt;`_, Team leader (anna.kalyuzhnaya@itmo.ru)- `Newsfeed &lt;https://t.me/NSS_group&gt;`_- `Youtube channel &lt;https://www.youtube.com/channel/UC4K9QWaEUpT_p3R4FeDp5jA&gt;`_Supported by============- `National Center for Cognitive Research of ITMO University &lt;https://actcognitive.org/&gt;`_Citation========@article{nikitin2021automated,  title = {Automated evolutionary approach for the design of composite machine learning pipelines},  author = {Nikolay O. Nikitin and Pavel Vychuzhanin and Mikhail Sarafanov and Iana S. Polonskaia and Ilia Revin and Irina V. Barabanova and Gleb Maximov and Anna V. Kalyuzhnaya and Alexander Boukhanovsky},  journal = {Future Generation Computer Systems},  year = {2021},  issn = {0167-739X},  doi = {https://doi.org/10.1016/j.future.2021.08.022}}@inproceedings{polonskaia2021multi,  title={Multi-Objective Evolutionary Design of Composite Data-Driven Models},  author={Polonskaia, Iana S. and Nikitin, Nikolay O. and Revin, Ilia and Vychuzhanin, Pavel and Kalyuzhnaya, Anna V.},  booktitle={2021 IEEE Congress on Evolutionary Computation (CEC)},  year={2021},  pages={926-933},  doi={10.1109/CEC45853.2021.9504773}}Other papers - in `ResearchGate &lt;https://www.researchgate.net/project/Evolutionary-multi-modal-AutoML-with-FEDOT-framework&gt;`_... |docs| image:: https://readthedocs.org/projects/ebonite/badge/?style=flat   :target: https://fedot.readthedocs.io/en/latest/   :alt: Documentation Status.. |build| image:: https://github.com/aimclub/FEDOT/workflows/Build/badge.svg?branch=master   :alt: Build Status   :target: https://github.com/aimclub/FEDOT/actions.. |coverage| image:: https://codecov.io/gh/aimclub/FEDOT/branch/master/graph/badge.svg   :alt: Coverage Status   :target: https://codecov.io/gh/aimclub/FEDOT.. |pypi| image:: https://badge.fury.io/py/fedot.svg   :alt: Supported Python Versions   :target: https://badge.fury.io/py/fedot.. |python| image:: https://img.shields.io/pypi/pyversions/fedot.svg   :alt: Supported Python Versions   :target: https://img.shields.io/pypi/pyversions/fedot.. |license| image:: https://img.shields.io/github/license/aimclub/FEDOT   :alt: Supported Python Versions   :target: https://github.com/aimclub/FEDOT/blob/master/LICENSE.md.. |downloads_stats| image:: https://static.pepy.tech/personalized-badge/fedot?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=brightgreen&amp;left_text=Downloads   :target: https://pepy.tech/project/fedot.. |tg| image:: https://img.shields.io/badge/Telegram-Group-blue.svg          :target: https://t.me/FEDOT_helpdesk          :alt: Telegram Chat</longdescription>
</pkgmetadata>