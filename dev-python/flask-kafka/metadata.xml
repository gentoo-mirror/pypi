<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Flask KafkaThis is an easy to use utility to help Flask developers to implement microservices that interact with Kafka. This library has been inspired by two other similar libraries :-- [`Flask RabbitMQ`](https://github.com/pushyzheng/flask-rabbitmq) - [`Kakfaesque`](https://github.com/sankalpjonn/kafkaesque)After looking around the web and on Github, I was not able to find a lot of content on how to consume from a Kafka topic using the Kafka framework. From what I found, I was able to come up with this library by borrowing from the above libraries. They both had a little of what I wanted so I combined them to come up with this one.I hope you find this useful.## Features- Doesn't block process- Configure by `config.py`- Support comsuming from topic by decorator ## InstallationThis project has been commited to Pypi, can be installed by pip:```shell$ pip install flask-kafka```## Simple example```pythonfrom flask import Flaskfrom threading import Eventimport signalfrom flask_kafka import FlaskKafkaapp = Flask(__name__)INTERRUPT_EVENT = Event()bus = FlaskKafka(INTERRUPT_EVENT,                 bootstrap_servers=&quot;,&quot;.join([&quot;localhost:9092&quot;]),                 group_id=&quot;consumer-grp-id&quot;                 )def listen_kill_server():    signal.signal(signal.SIGTERM, bus.interrupted_process)    signal.signal(signal.SIGINT, bus.interrupted_process)    signal.signal(signal.SIGQUIT, bus.interrupted_process)    signal.signal(signal.SIGHUP, bus.interrupted_process)@bus.handle('test-topic')def test_topic_handler(msg):    print(&quot;consumed {} from test-topic&quot;.format(msg))if __name__ == '__main__':    bus.run()    listen_kill_server()    app.run(debug=True, port=5004)```## License```MIT LicenseCopyright (c) 2019 Nimrod Kevin MainaPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.```</longdescription>
</pkgmetadata>