<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/schwifty.svg?style=flat-square    :target: https://pypi.python.org/pypi/schwifty.. image:: https://img.shields.io/github/actions/workflow/status/mdomke/schwifty/lint-and-test.yml?branch=main&amp;style=flat-square    :target: https://github.com/mdomke/schwifty/actions?query=workflow%3Alint-and-test.. image:: https://img.shields.io/pypi/l/schwifty.svg?style=flat-square    :target: https://pypi.python.org/pypi/schwifty.. image:: https://readthedocs.org/projects/schwifty/badge/?version=latest&amp;style=flat-square    :target: https://schwifty.readthedocs.io.. image:: https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square    :target: https://black.readthedocs.io/en/stable/index.htmlGotta get schwifty with your IBANs==================================.. teaser-begin``schwifty`` is a Python library that let's you easily work with IBANs and BICsas specified by the ISO. IBAN is the Internation Bank Account Number and BICthe Business Identifier Code. Both are used for international money transfer.Features--------``schwifty`` lets you* `validate`_ check-digits and the country specific format of IBANs* `validate`_ format and country codes from BICs* `generate`_ BICs from country and bank-code* `generate`_ IBANs from country-code, bank-code and account-number.* get the BIC associated to an IBAN's bank-code* access all relevant components as attributesSee the `docs &lt;https://schwifty.readthedocs.io&gt;`_ for more inforamtion... _validate: https://schwifty.readthedocs.io/en/latest/examples.html#validation.. _generate: https://schwifty.readthedocs.io/en/latest/examples.html#generation.. teaser-endVersioning----------Since the IBAN specification and the mapping from BIC to bank_code is updated from time to time,``schwifty`` uses `CalVer &lt;http://www.calver.org/&gt;`_ for versioning with the scheme ``YY.0M.Micro``... installation-beginInstallation------------To install ``schwifty``, simply:.. code-block:: bash  $ pip install schwifty.. installation-endDevelopment-----------We use the `black`_ as code formatter. This avoids discussions about style preferences in the sameway as ``gofmt`` does the job for Golang. The conformance to the formatting rules is checked in theCI pipeline, so that it is recommendable to install the configured `pre-commit`_-hook, in order toavoid long feedback-cycles... code-block:: bash   $ pre-commit installYou can also use the ``fmt`` Makefile-target to format the code or use one of the available `editorintegrations`_.Project Information-------------------``schwifty`` is released under `MIT`_ license and its documentation lives at `Read the Docs`_. Thecode is maintained on `GitHub`_ and packages are distributed on `PyPI`_Name~~~~Since ``swift`` and ``swiftly`` were already taken by the OpenStack-project, but we somehow wantedto point out the connection to SWIFT, Rick and Morty came up with the idea to name the project``schwifty``... image:: https://i.cdn.turner.com/adultswim/big/video/get-schwifty-pt-2/rickandmorty_ep205_002_vbnuta15a755dvash8.jpg.. _black: https://black.readthedocs.io/en/stable/index.html.. _pre-commit: https://pre-commit.com.. _editor integrations:  https://black.readthedocs.io/en/stable/editor_integration.html.. _MIT: https://choosealicense.com/licenses/mit/.. _Read the Docs: https://schwifty.readthedocs.io.. _GitHub: https://github.com/mdomke/schwifty.. _PyPI: https://pypi.org/project/schwifty</longdescription>
</pkgmetadata>