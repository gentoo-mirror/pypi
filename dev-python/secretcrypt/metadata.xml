<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>py-secretcrypt==============|Circle CI||Codecov|Utility for keeping your secrets encrypted. Also has a `Goversion &lt;https://github.com/Zemanta/go-secretcrypt&gt;`__.For example, you have the following configuration file::    MY_SECRET=VerySecretValue!but you can't include that file in VCS because then your secret valuewould be exposed.With **secretcrypt**, you can encrypt your secret using your AWS KMSmaster key aliased *MyKey*:.. code:: bash    $ encrypt-secret kms alias/MyKey    Enter plaintext: VerySecretValue! # enter    kms:region=us-east-1:CiC/SXeuXDGRADRIjc0qcE... # shortened for brevity    # --- or --    $ echo &quot;VerySecretValue!&quot; | encrypt-secret kms alias/MyKey      kms:region=us-east-1:CiC/SXeuXDGRADRIjc0qcE... # shortened for brevity    # only use piping when scripting, otherwise your secrets will be stored    # in your shell's history!use that secret in my config file.. code:: python    from secretcrypt import Secret    MY_SECRET=Secret('kms:region=us-east-1:CiC/SXeuXDGRADRIjc0qcE...')  # shortened for brevityand get the plaintext like.. code:: python    print MY_SECRET.get()    # VerySecretValue!If you are using very sensitive secrets, you can ensure the plaintextis not kept in memory and is only encrypted on demand by using a stricterversion:.. code:: python    from secretcrypt import StrictSecret    MY_SECRET=StrictSecret('kms:region=us-east-1:CiC/SXeuXDGRADRIjc0qcE...')  # shortened for brevityand get the plaintext like.. code:: python    print MY_SECRET.decrypt()    # VerySecretValue!KMS---The KMS option uses AWS Key Management Service. When encrypting anddecrypting KMS secrets, you need to provide which AWS region the is tobe or was encrypted on, but it defaults to ``us-east-1``.So if you use a custom region, you must provide it to secretcrypt:.. code:: bash    encrypt-secret kms --region us-west-1 alias/MyKeyLocal encryption----------------This mode is meant for local and/or offline development usage. Itgenerates a local key in your %USER\_DATA\_DIR% (see`appdirs &lt;https://pypi.python.org/pypi/appdirs&gt;`__), so that the keycannot be accidentally committed to CVS.It then uses that key to symmetrically encrypt and decrypt your secrets.Password encryption - interactive only--------------------------------------The password encryption mode should not be used in your application - it ismeant for easily sharing secrets among developers. It interactively promptsthe user for a password when encrypting the secret. When decrypting, itprompts for the password again... |Circle CI| image:: https://circleci.com/gh/Zemanta/py-secretcrypt.svg?style=svg   :target: https://circleci.com/gh/Zemanta/py-secretcrypt.. |Codecov| image:: https://codecov.io/gh/Zemanta/py-secretcrypt/branch/master/graph/badge.svg  :target: https://codecov.io/gh/Zemanta/py-secretcryptHistory-------1.0.4 (2020-09-21)++++++++++++++++++- fixed reraise error in decrypt module1.0.3 (2017-11-02)++++++++++++++++++- reverted scrypt parameter changes1.0.2 (2017-10-31)++++++++++++++++++- changed scrypt parameters1.0.1 (2017-10-31)++++++++++++++++++- Fixed readme formatting.1.0.0 (2017-10-31)++++++++++++++++++* added password encryption/decryption0.9.1 (2017-03-28)++++++++++++++++++* Python3 local module fixed issue with utf-8* unpinned dependencies0.4 (2016-03-02)++++++++++++++++++* plaintexts are now returned as strings not as bytes0.3 (2016-03-02)++++++++++++++++++* BREAKING CHANGE: introduced new semantics for Secret and a new StrictSecret</longdescription>
</pkgmetadata>