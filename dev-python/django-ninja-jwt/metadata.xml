<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Ninja JWT![Test](https://github.com/eadwinCode/django-ninja-jwt/workflows/Test/badge.svg)[![PyPI version](https://badge.fury.io/py/django-ninja-jwt.svg)](https://badge.fury.io/py/django-ninja-jwt)[![PyPI version](https://img.shields.io/pypi/v/django-ninja-jwt.svg)](https://pypi.python.org/pypi/django-ninja-jwt)[![PyPI version](https://img.shields.io/pypi/pyversions/django-ninja-jwt.svg)](https://pypi.python.org/pypi/django-ninja-jwt)[![PyPI version](https://img.shields.io/pypi/djversions/django-ninja-jwt.svg)](https://pypi.python.org/pypi/django-ninja-jwt)[![Codecov](https://img.shields.io/codecov/c/gh/eadwinCode/django-ninja-jwt)](https://codecov.io/gh/eadwinCode/django-ninja-jwt)[![Downloads](https://static.pepy.tech/personalized-badge/django-ninja-jwt?period=month&amp;units=international_system&amp;left_color=black&amp;right_color=orange&amp;left_text=Downloads/month)](https://pepy.tech/project/django-ninja-jwt)## AbstractNinja JWT is JSON Web Token plugin for Django-Ninja. The library is a fork of [Simple JWT](https://github.com/jazzband/djangorestframework-simplejwt) by Jazzband, a popular  JWT plugin for [Django REST Framework](http://www.django-rest-framework.org).#### NoticeThis library does not fix any issues from the source SIMPLE JWT. It only added support for Django-Ninja and removes DRF dependencies but time after time, subsequent updates from SIMPLE JWT will reflect here.For full documentation, [visit](https://eadwincode.github.io/django-ninja-jwt/).#### Requirements- Python &gt;= 3.6- Django &gt;= 2.1- Django-Ninja &gt;= 0.16.1- Django-Ninja-Extra &gt;= 0.14.2## ExampleCheckout this sample project: https://github.com/eadwinCode/bookstoreapiInstallation============Ninja JWT can be installed with pip:    pip install django-ninja-jwtAlso, you need to register `NinjaJWTDefaultController` controller to your Django-Ninja api.```pythonfrom ninja_jwt.controller import NinjaJWTDefaultControllerfrom ninja_extra import NinjaExtraAPIapi = NinjaExtraAPI()api.register_controllers(NinjaJWTDefaultController)```The `NinjaJWTDefaultController` comes with three routes `obtain_token`, `refresh_token` and `verify_token`. It is a combination of two subclasses `TokenVerificationController` and `TokenObtainPairController`.If you wish to customize these routes, you can inherit from these controllers and change its implementation```pythonfrom ninja_extra import api_controllerfrom ninja_jwt.controller import TokenObtainPairController@api_controller('token', tags=['Auth'])class MyCustomController(TokenObtainPairController):    &quot;&quot;&quot;obtain_token and refresh_token only&quot;...api.register_controllers(MyCustomController)```If you wish to use localizations/translations, simply add `ninja_jwt` to`INSTALLED_APPS`.```pythonINSTALLED_APPS = [    ...    'ninja_jwt',    ...]```Usage=====To verify that Ninja JWT is working, you can use curl to issue a coupleof test requests:``` {.sourceCode .bash}curl \  -X POST \  -H &quot;Content-Type: application/json&quot; \  -d '{&quot;username&quot;: &quot;davidattenborough&quot;, &quot;password&quot;: &quot;boatymcboatface&quot;}' \  http://localhost:8000/api/token/pair...{  &quot;access&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU&quot;,  &quot;refresh&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4&quot;}```You can use the returned access token to prove authentication for aprotected view:``` {.sourceCode .bash}curl \  -H &quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU&quot; \  http://localhost:8000/api/some-protected-view/```When this short-lived access token expires, you can use the longer-livedrefresh token to obtain another access token:``` {.sourceCode .bash}curl \  -X POST \  -H &quot;Content-Type: application/json&quot; \  -d '{&quot;refresh&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4&quot;}' \  http://localhost:8000/api/token/refresh/...{&quot;access&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNTY3LCJqdGkiOiJjNzE4ZTVkNjgzZWQ0NTQyYTU0NWJkM2VmMGI0ZGQ0ZSJ9.ekxRxgb9OKmHkfy-zs1Ro_xs1eMLXiR17dIDBVxeT-w&quot;}```</longdescription>
</pkgmetadata>