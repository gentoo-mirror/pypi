<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>easy-choices=============.. image:: https://circleci.com/gh/olist/easy-choices.svg?style=shield    :target: https://circleci.com/gh/olist/easy-choicesIt's a library deeply inspired by Choices from `django-model-utils`_.However, sometimes we just need to use Choices rather than all the features provided by `django-model-utils`_... _django-model-utils: https://django-model-utils.readthedocs.io/Requirements------------* Python &gt;= 3.5Usage-----The ``easy-choices`` package is hosted on our `PyPI repository`_... _PyPI repository: https://pypi.org/user/olist/You can install the latest version of ``easy-choices`` using pip:.. code-block:: bash   $ pip install easy-choicesAnd use easy-choices as it's demonstrated below:.. code-block:: python    from django.db import models    from easy_choices import Choices    status_choices = Choices(        (&quot;sent&quot;, &quot;Sent&quot;),        (&quot;delivered&quot;, &quot;Delivered&quot;),    )    class Product(models.Model)        price = models.DecimalField(max_digits=10, decimal_places=2)        status = models.CharField(max_length=10, choices=status_choices.to_django_choices())        @property        def is_delivered(self):            # You can use status_choices as a Enum            return self.status == status_choices.delivered</longdescription>
</pkgmetadata>