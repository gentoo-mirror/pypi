<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============Venv Management===============A Python package for programmatic creation and management of Python virtual environments... image:: https://github.com/rob-smallshire/renard/workflows/CI/badge.svg?branch=master     :target: https://github.com/sixty-north/venv-management/actions?workflow=CI     :alt: CI Status.. image:: https://readthedocs.org/projects/venv-management/badge/?version=latest    :target: https://venv-management.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusThis document gives an overview. For more detail see the `documentation &lt;https://venv-management.readthedocs.io/en/latest/?badge=latest&gt;`_.Prerequisites=============A virtualenvwrapper installation must have been installed and be available in a shell and configuredat shell start-up in the appropriate ``rc`` file (*e.g.* ``.bashrc``, but the documentation for moredetails and options). The following virtualenvwrapper implementations have been tested:  * `virtualenvwrapper &lt;https://pypi.org/project/virtualenvwrapper/&gt;`_  * `virtualenv-sh &lt;https://pypi.org/project/virtualenv-sh/&gt;`_Possibly in future we will also support:  * `pyenv-virtualenv &lt;https://github.com/pyenv/pyenv-virtualenv&gt;`_  * `pew &lt;https://pypi.org/project/pew/&gt;`_.. inclusion-begin-installation-marker-do-not-removeInstallation------------Install from PyPI using ``pip``::  $ pip install venv-management.. inclusion-end-installation-marker-do-not-removeSynopsis--------Use the Python functions exported by the ``venv_management`` package to create, enumerate,interrogate, and destroy virtual environments::  &gt;&gt;&gt; make_virtual_env(&quot;myenv&quot;)  &gt;&gt;&gt; python_version(env_path)  '3.10.0'  &gt;&gt;&gt; list_virtual_envs()  ['myenv']  &gt;&gt;&gt; env_path = resolve_virtual_env(&quot;myenv&quot;)  &gt;&gt;&gt; env_path  /home/user/.virtualenvs/myenv  &gt;&gt;&gt; remove_virtual_env(&quot;myenv&quot;)  &gt;&gt;&gt;Refer to the documentation to see all available functions... inclusion-begin-configuration-marker-do-not-removeShell selection---------------This ``venv-management`` package delegates most operations to one of the ``virtualenvwrapper`` orequivalent tools, which are implemented using shell scripts and shell functions. In order to invokethese scripts and functions successfully the shell environment mush have been correctly configured.By default ``venv-management`` attempts to use the current user's preferred shell by examining the``$SHELL`` environment variable. This can be overridden by setting the ``$VENV_MANAGEMENT_SHELL``variable with a shell executable name or the path to a shell executable, for example::  export VENV_MANAGEMENT_SHELL=zshIf neither ``$SHELL`` nor ``$VENV_MANAGEMENT_SHELL`` are set, an attempt to use ``bash`` will bemade.Shell configuration-------------------The selected shell must be configured to make the ``virtualenvwrapper`` commands available. Bydefault, ``venv-management`` will source the ``rc`` file corresponding to the selected shell, forexample ``.bashrc`` for ``bash``, ``.zshrc`` for ``zsh``, and so on, on the basis that``virtualenvwrapper`` initialization is often performed from these files. If the ``rc`` file forthe selected shell can only be usefully sourced in an interactive shell, set``VENV_MANAGEMENT_INTERACTIVE_SHELL`` to ``yes``::  export VENV_MANAGEMENT_INTERACTIVE_SHELL=yesShould you wish to specify a different file for shell configuration, provide its path in the``VENV_MANAGEMENT_SETUP_FILEPATH`` environment variable. For example, since ``.bashrc`` may returnimmediately in non-interactive shells, and only login shells source ``.profile`` on start-up,you may want to set up virtualenvwrapper or an equivalent in in a separate file, in this examplecalled ``.venvwraprc``::  # .venvwraprc  source /usr/local/bin/virtualenvwrapper.shand then source this file in turn from, say, ``.bashrc``.If the ``VENV_MANAGEMENT_USE_SETUP`` variable is set to ``yes``, the script whose filepath isspecified in the ``VENV_MANAGEMENT_SETUP_FILEPATH`` variable will be as necessary before executingthe commands run by this package::  export VENV_MANAGEMENT_USE_SETUP=yes  export VENV_MANAGEMENT_SETUP_FILEPATH=$HOME/.venvwraprcYou can also source this custom config file in a shell-specific ``rc`` file using the ``source`` or ``.`` command,so that ``virtualenvwrapper`` could be used in interactive shells... inclusion-end-configuration-marker-do-not-removeRelease process===============Upgrade the version::    $ bumpversion &lt;major | minor | patch&gt;Push the tagged commit into the repository together with the tag. You can find the latest tag using the``git tag`` command or find and fill in the most recent tag with ``git describe``::    $ git push --atomic origin master $(git describe --abbrev=0 --tags)Create the source and the binary distribution (outputs in the ``dist`` directory)::    $ python setup.py sdist bdist_wheelRemove old versions in the ``dist`` directory and use the following command to upload its contents to PyPI::    $ twine upload dist/* --config-file=&lt;path/to/file/with/credentials.pypirc&gt;Copyright 2021 Sixty North ASPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</longdescription>
</pkgmetadata>