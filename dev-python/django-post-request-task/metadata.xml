<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-post-request-task========================.. image:: https://circleci.com/gh/mozilla/django-post-request-task.svg?style=svg    :target: https://circleci.com/gh/mozilla/django-post-request-taskA celery task class whose execution is delayed until after the requestfinishes, using ``request_started`` and ``request_finished`` signals from djangoand thread locals.This is useful if your views are wrapped in transactions (as they should ifyou're making database modifications in them), as you can end up triggering acelery task too soon before the transaction has been committed (or even triggera task when the corresponding transaction has been rolled back).By listening to the `request_started` and `request_finished` django signals, wecan safely trigger a task after all transactions created from ``@atomic`` or``ATOMIC_REQUESTS`` have been committed.Usage-----.. code-block:: python    from celery import Celery    from post_request_task.task import PostRequestTask    app = Celery('myapp', task_cls=PostRequestTask)    @app.task    def my_task():        # If .delay() is called on this task inside a django request-response        # cycle it will be called once the request is finished, and not before.        passOr, if you are using the decorator directly:.. code-block:: python    from post_request_task.task import shared_task    @shared_task    def my_task():        passThat's it. If the task is called from outside the django request-responsecycle, then it will be triggered normally.As a bonus feature, if the same task is called with the same argument severaltimes during a request-response cycle, it will only be queued up once.Running tests-------------.. code-block:: sh    $ make testenv    $ make testBy default, tests are run with whatever django version is installed. If you want to run tests for other versionsuse tox:.. code-block:: sh    $ make testenv    $ tox -e 3.7-2.0.x # or any other environment defined in our tox.ini</longdescription>
</pkgmetadata>