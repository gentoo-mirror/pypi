<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;# Orkestra### The elegance of Airflow + the power of AWS[![Docs](https://img.shields.io/badge/Docs-mkdocs-blue?style=for-the-badge)](https://knowsuchagency.github.io/orkestra)[![Codecov](https://img.shields.io/codecov/c/github/knowsuchagency/orkestra?style=for-the-badge)](https://app.codecov.io/gh/knowsuchagency/orkestra/)[![PyPI](https://img.shields.io/pypi/v/orkestra)](https://pypi.org/project/orkestra/)![PyPI - Downloads](https://img.shields.io/pypi/dw/orkestra)![PyPI - License](https://img.shields.io/pypi/l/orkestra)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/orkestra)![GitHub issues](https://img.shields.io/github/issues/knowsuchagency/orkestra)[![Mentioned in Awesome CDK](https://awesome.re/mentioned-badge.svg)](https://github.com/kolomied/awesome-cdk)[comment]: &lt;&gt; ([![codecov]&amp;#40;https://codecov.io/gh/knowsuchagency/orkestra/branch/main/graph/badge.svg?token=DXFC1QP12O&amp;#41;]&amp;#40;https://codecov.io/gh/knowsuchagency/orkestra&amp;#41;)&lt;/div&gt;*examples/hello_orkestra.py*```pythonimport randomfrom typing import *from uuid import uuid4from aws_lambda_powertools import Logger, Tracerfrom pydantic import BaseModelfrom orkestra import composefrom orkestra.interfaces import Durationdef dag():    (        generate_item        &gt;&gt; add_price        &gt;&gt; copy_item        &gt;&gt; double_price        &gt;&gt; (do_nothing, assert_false)        &gt;&gt; say_hello        &gt;&gt; [random_int, random_float]        &gt;&gt; say_goodbye    )class Item(BaseModel):    id: str    name: str    price: Optional[float] = None    @classmethod    def random(cls):        return cls(            id=str(uuid4()),            name=random.choice(                [                    &quot;potato&quot;,                    &quot;moon rock&quot;,                    &quot;hat&quot;,                ]            ),        )logger = Logger()tracer = Tracer()default_args = dict(    enable_powertools=True,    timeout=Duration.seconds(6),)@compose(**default_args)def generate_item(event, context):    logger.info(&quot;generating random item&quot;)    item = Item.random().dict()    logger.info(item)    tracer.put_metadata(&quot;GenerateItem&quot;, &quot;SUCCESS&quot;)    return item@compose(model=Item, **default_args)def add_price(item: Item, context):    price = 3.14    logger.info(        &quot;adding price to item&quot;,        extra={            &quot;item&quot;: item.dict(),            &quot;price&quot;: price,        },    )    item.price = price    return item.dict()@compose(model=Item, **default_args)def copy_item(item: Item, context) -&gt; list:    logger.info(item.dict())    return [item.dict()] * 10@compose(model=Item, is_map_job=True, **default_args)def double_price(item: Item, context):    item.price = item.price * 2    return item.dict()@compose(**default_args)def assert_false(event, context):    assert False@compose(**default_args)def do_nothing(event, context):    logger.info({&quot;doing&quot;: &quot;nothing&quot;})@compose(**default_args)def say_hello(event, context):    return &quot;hello, world&quot;@compose(**default_args)def say_goodbye(event, context):    return &quot;goodbye&quot;@compose(**default_args)def random_int(event, context):    return random.randrange(100)@compose(**default_args)def random_float(event, context):    return float(random_int(event, context))dag()```*app.py*```python#!/usr/bin/env python3from aws_cdk import core as cdkfrom examples.hello_orkestra import generate_itemclass HelloOrkestra(cdk.Stack):    def __init__(self, scope, id, **kwargs):        super().__init__(scope, id, **kwargs)        generate_item.schedule(            self,            expression=&quot;rate(5 minutes)&quot;,            state_machine_name=&quot;hello_orkestra&quot;,        )app = cdk.App()app.synth()```![state machine](https://github.com/knowsuchagency/orkestra/blob/main/docs/assets/images/hello_orkestra_sfn.png?raw=true)</longdescription>
</pkgmetadata>