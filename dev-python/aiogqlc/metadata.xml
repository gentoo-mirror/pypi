<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Asynchronous/IO GraphQL client[![Versions][versions-image]][versions-url][![PyPI][pypi-image]][pypi-url][![Downloads][downloads-image]][downloads-url][![Codecov][codecov-image]][codecov-url][![License][license-image]][license-url][versions-image]: https://img.shields.io/pypi/pyversions/aiogqlc[versions-url]: https://github.com/DoctorJohn/aiogqlc/blob/master/setup.py[pypi-image]: https://img.shields.io/pypi/v/aiogqlc[pypi-url]: https://pypi.org/project/aiogqlc/[downloads-image]: https://img.shields.io/pypi/dm/aiogqlc[downloads-url]: https://pypi.org/project/aiogqlc/[codecov-image]: https://codecov.io/gh/DoctorJohn/aiogqlc/branch/main/graph/badge.svg[codecov-url]: https://codecov.io/gh/DoctorJohn/aiogqlc[license-image]: https://img.shields.io/pypi/l/aiogqlc[license-url]: https://github.com/DoctorJohn/aiogqlc/blob/master/LICENSEA Python asynchronous/IO GraphQL client based on [aiohttp][aiohttp-url].In addition to standard HTTP POST `queries` and `mutations` this client fully supportsthe [GraphQL multipart form requests spec][multipart-specs-url] for file uploadsand the [graphql-ws subprotocol][graphql-ws-url] for WebSocket based `subscriptions`.**[Read the documentation][docs-url]**## Installation```shpip install aiogqlc```## Basic usageCheck the [documentation][docs-url] for detailed and more advanced usage examples.### Queries```pythonimport asyncioimport aiohttpfrom aiogqlc import GraphQLClientENDPOINT = &quot;https://swapi-graphql.netlify.app/.netlify/functions/index&quot;document = &quot;&quot;&quot;    query {        allFilms {            films {                title            }        }    }&quot;&quot;&quot;async def main():    async with aiohttp.ClientSession() as session:        client = GraphQLClient(ENDPOINT, session=session)        response = await client.execute(document)        print(await response.json())if __name__ == &quot;__main__&quot;:    asyncio.run(main())```### Mutations```pythonimport aiohttpfrom aiogqlc import GraphQLClientdocument = &quot;&quot;&quot;    mutation ($userId: ID!) {        deleteUser (id: $userId) {            id        }    }&quot;&quot;&quot;variables = {    &quot;userId&quot;: &quot;42&quot;,}async def main():    async with aiohttp.ClientSession() as session:        client = GraphQLClient(&quot;https://example.com/graphql/&quot;, session=session)        response = await client.execute(document, variables=variables)        print(await response.json())```### File uploads```pythonimport aiohttpfrom aiogqlc import GraphQLClientdocument = &quot;&quot;&quot;    mutation($file: Upload!) {        uploadFile(file: $file) {            size        }    }&quot;&quot;&quot;variables = {    &quot;file&quot;: open(&quot;test.txt&quot;, &quot;rb&quot;)}async def foo():    async with aiohttp.ClientSession() as session:        client = GraphQLClient(&quot;https://example.com/graphql/&quot;, session=session)        response = await client.execute(document, variables=variables)        print(await response.json())```### Subscriptions```pythonimport aiohttpfrom aiogqlc import GraphQLClientdocument = &quot;&quot;&quot;    subscription($postId: ID!) {        likeAdded(postId: $postId)    }&quot;&quot;&quot;variables = {    &quot;postId&quot;: &quot;42&quot;}async def main():    async with aiohttp.ClientSession() as session:        client = GraphQLClient(&quot;https://example.com/graphql/&quot;, session=session)        async with client.connect() as connection:            async for payload in connection.subscribe(document, variables=variables):                print(payload)```## [Documentation][docs-url][Read the documentation][docs-url] to learn more about queries, mutations, subscriptions, file uploads and even authentication.[aiohttp-url]: https://github.com/aio-libs/aiohttp[multipart-specs-url]: https://github.com/jaydenseric/graphql-multipart-request-spec[graphql-ws-url]: https://github.com/apollographql/subscriptions-transport-ws[docs-url]: https://doctorjohn.github.io/aiogqlc/</longdescription>
</pkgmetadata>