<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======================Python UDM REST Client======================|python| |license| |code style| |codecov| |docspassing| |travisci| |gh Code Linting| |gh Integration tests|Python library to interact with the Univention `UDM REST API`_, implements the interface of the `Python UDM API`_.* Free software: GNU Affero General Public License version 3* Documentation: https://udm-rest-client.readthedocs.ioFeatures--------* Asynchronous* Automatic handling of HTTP(S) sessions* Type annotations* 100% test coverage (unittests + integration tests)* Python 3.6, 3.7, 3.8, 3.9, 3.10, 3.11Usage-----The ``UDM`` context manager opens and closes a HTTP session::    &gt;&gt;&gt; import asyncio    &gt;&gt;&gt; from udm_rest_client.udm import UDM    &gt;&gt;&gt;    &gt;&gt;&gt; async def get_obj(mod_name, dn):    ...     async with UDM(    ...         &quot;USERNAME&quot;,    ...         &quot;PASSWORD&quot;,    ...         &quot;https://FQDN.OF.UCS/univention/udm&quot;,    ...         ssl_ca_cert=&quot;ucs-root-ca.crt&quot;    ...     ) as udm:    ...         mod = udm.get(mod_name)    ...         return await mod.get(dn)    ...    &gt;&gt;&gt; # Python 3.6:    &gt;&gt;&gt; loop = asyncio.get_event_loop()    &gt;&gt;&gt; obj = loop.run_until_complete(get_obj(&quot;users/user&quot;, &quot;uid=foo,cn=users,BASE-DN&quot;))    &gt;&gt;&gt;    &gt;&gt;&gt; # Python 3.7+:    &gt;&gt;&gt; obj = asyncio.run(get_obj(&quot;users/user&quot;, &quot;uid=foo,cn=users,BASE-DN&quot;))    &gt;&gt;&gt;    &gt;&gt;&gt; print(obj)    UdmObject('users/user', 'uid=foo,cn=users,BASE-DN')    &gt;&gt;&gt; print(obj.props.username)    fooThere are more examples in the `docs`_ *usage* section.If the SSL CA certificate is not available ``verify_ssl=False`` can be used in place of ``ssl_ca_cert=...``. Obviously that is not safe! The CA of any UCS server can always be downloaded from ``http://FQDN.OF.UCS/ucs-root-ca.crt``.Installation------------1. Install *Python UDM REST Client* via pip from `PyPI`_::    $ pip install udm-rest-client2. Install the OpenAPI client library used by the udm-rest-client. It is created by software from the `OpenAPI Generator`_ project. You need to either have a local Java installation (Java 8+) or run the projects Docker container. The process is scripted::    $ update_openapi_client --generator docker ucs.master.fqdn.or.ip  # use Docker    $ update_openapi_client --generator java ucs.master.fqdn.or.ip  # use JavaUse ``--insecure`` to ignore SSL verification errors. See ``--help`` for more options.Use ``--username`` and ``--password`` to provide credentials if access to your openapi.json is protected. This is thedefault in newer versions of UCS and thus credentials are needed.**Important**:Whenever a new UDM module is installed in the domain, it is necessary to rerun ``update_openapi_client``.The new UDM module will otherwise not be available in the *Python UDM REST Client*.Very few apps (like UCS\@school and Open-Xchange) install new UDM modules.New extended attributes do *not* require to rebuild the OpenAPI client library.Tests-----There are some isolated unittests, but most tests run against a real UDM REST API. Either an existing UCS installation can be used, or a LXD container started.Run tests with the current Python interpreter::    $ make testUsing `tox`_ the tests can be executed with all supported Python versions::    $ make test-allUsing the UCS LXD container is automated in the ``Makefile``. It has commands to download and start the LXD image (1 GB) and running the tests::    $ make create-lxd-test-server-config    $ make testInitializing LXD is however left up to the developer (see https://linuxcontainers.org/lxd/). Using storage backend ``lvm``, ``btrfs`` or ``zfs`` is recommended for repeated use. To run the tests only once, the storage backend ``dir`` is the easiest to use. It is very slow though, as it requires unpacking the image every time the container is started.The ``Makefile`` also needs ``yq`` to be installed: https://github.com/mikefarah/yqIt is also possible to use an existing UCS server for the tests. Export ``UCS_HOST`` (the servers IP/FQDN), ``UCS_USERDN`` (the DN of an administrator account, usually ``uid=Administrator,cn=users,dc=...``) and ``UCS_PASSWORD`` (the accounts password), before starting the tests::    $ export UCS_HOST=&quot;my.server.local&quot;    $ export UCS_USERDN=&quot;uid=Administrator,cn=users,dc=domain,dc=local&quot;    $ export UCS_PASSWORD=&quot;s3cr3t&quot;    $ make testMuch more comfortable (especially for repeated use) is creating a file ``test_server.yaml`` in the ``tests`` directory, which will automatically be used by the tests::    $ cp test_server_example.yaml test/test_server.yaml    $ $EDITOR test_server.yamlDon't forget to update the OpenAPI client library before running the test against a new server::    $ update_openapi_client --generator &lt;docker|java&gt; --username Administrator --password s3cr3t $UCS_HOSTRun ``update_openapi_client --help`` to see further options.To get the IP address of the running UCS LXD container execute::    $ . lxd.sh ; lxd_container_ipLogging-------Standard logging is used for tracking the libraries activity.To capture the log messages for this project, subscribe to a logger named ``udm_rest_client``.The *UDM REST API* on the UCS server logs into the file ``/var/log/univention/directory-manager-rest.log``.Repo permissions----------------* GitHub: @dansan and @JuergenBS* GitLab: @JuergenBS* PyPI: @dansan and @SamuelYaron* RTD: @dansan and @SamuelYaronCredits-------This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template... _Cookiecutter: https://github.com/audreyr/cookiecutter.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage.. _`tox`: http://tox.readthedocs.org/.. _`UDM REST API`: https://docs.software-univention.de/developer-reference-4.4.html#udm:rest_api.. _`Python UDM API`: https://github.com/univention/univention-corporate-server/blob/4.4-8/management/univention-directory-manager-modules/modules/univention/udm/__init__.py.. _`OpenAPI Generator`: https://github.com/OpenAPITools/openapi-generator.. _`docs`: https://udm-rest-client.readthedocs.io.. _`PyPI`: https://pypi.org/project/udm-rest-client/.. |license| image:: https://img.shields.io/badge/License-AGPL%20v3-orange.svg    :alt: GNU AGPL V3 license    :target: https://www.gnu.org/licenses/agpl-3.0.. |python| image:: https://img.shields.io/badge/python-3.6+-blue.svg    :alt: Python 3.6+    :target: https://www.python.org/.. |code style| image:: https://img.shields.io/badge/code%20style-black-000000.svg    :alt: Code style: black    :target: https://github.com/psf/black.. |codecov| image:: https://codecov.io/gh/univention/python-udm-rest-api-client/branch/master/graph/badge.svg    :alt: Code coverage    :target: https://codecov.io/gh/univention/python-udm-rest-api-client.. |docspassing| image:: https://readthedocs.org/projects/udm-rest-client/badge/?version=latest    :alt: Documentation Status    :target: https://udm-rest-client.readthedocs.io/en/latest/?badge=latest.. |travisci| image:: https://travis-ci.com/univention/python-udm-rest-api-client.svg?branch=master    :target: https://app.travis-ci.com/github/univention/python-udm-rest-api-client.. |gh Code Linting| image:: https://github.com/univention/python-udm-rest-api-client/workflows/Code%20Linting/badge.svg    :target: https://github.com/univention/python-udm-rest-api-client/actions?query=workflow%3A%22Code+Linting%22.. |gh Integration tests| image:: https://github.com/univention/python-udm-rest-api-client/workflows/Integration%20tests/badge.svg    :target: https://github.com/univention/python-udm-rest-api-client/actions?query=workflow%3A%22Integration+tests%22=======History=======1.2.1 (2023-02-15)-------------------* Update OpenAPI client library generator (openapitools/openapi-generator-cli) to version ``5.4.0`` to support Python 3.11..1.1.1 (2023-01-16)-------------------* Move operations succeed, when a language header is set.1.1.0 (2022-11-29)-------------------* Adjust objectType return value of ``users/self`` to latest UCS erratum.1.0.13 (2022-11-09)-------------------* Fix error handling in base_http.py.1.0.12 (2022-11-02)-------------------* Add the possibility to send an Accept-Language header with each request.1.0.11 (2022-10-19)-------------------* Handle UDM REST API doing immediate moves (without redirects) for objects without subordinates.1.0.10 (2022-10-13)-------------------* Pass trough UDM REST API error in ``CreateError`` and ``ModifyError`` exceptions.1.0.9 (2022-09-15)------------------* Format the correlation ID as a hex value.1.0.8 (2022-09-11)------------------* Send a correlation ID with each request.* Raise version of generated client library ``openapi-client-udm`` to ``1.0.1``.1.0.7 (2022-01-18)------------------* Lower required version of ``click`` library, for compatibility with ``typer&lt;0.4.0``.1.0.6 (2022-01-05)------------------* UCS 5.0 container for testing is now run using LXD.* Fix deprecated use of ``ruamel.yaml`` in tests.1.0.5 (2021-12-09)------------------* Add process wide cache for the LDAP base of each host.1.0.4 (2021-11-15)------------------* Update `aiohttp &lt;https://github.com/aio-libs/aiohttp&gt;`_ to (at least) Version ``3.8.1``, which fixes `aiohttp not honoring &quot;no_proxy&quot; &lt;https://github.com/aio-libs/aiohttp/issues/4431&gt;`_.* Update development and testing dependencies.1.0.3 (2021-03-25)------------------* Fix handling of values that are lists of dicts (e.g. ``dnsEntryZoneAlias`` of computer objects).1.0.2 (2021-03-25)------------------* Fix not sending policy modifications to server.1.0.1 (2021-02-10)------------------* The script to create/update the OpenAPI client ``update_openapi_client`` has been updated to use the OpenAPI Generator version ``5.0.0``.* The ``update_openapi_client`` script now verifies the checksum of the downloaded JAR file.1.0.0 (2021-02-03)------------------* **Breaking API CHANGE**: The ``options`` attribute of UDM objects is now a dictionary. It mirrors the UDM REST APIs ``options`` attribute value. Before it was a list, which did not allow to disable default options (Bug #50974).0.4.0 (2020-04-06)------------------* Add the possibility to provide credentials in the update_openapi_client script to download the schema file.0.3.1 (2020-03-19)------------------* Update download URL of openapi-generator jar.0.3.0 (2020-03-18)------------------* allow setting properties that only exist after enabling an option (`Bug #50972 &lt;http://forge.univention.org/bugzilla/show_bug.cgi?id=50972&gt;`_)0.2.1 (2019-12-14)------------------* fix not detecting changes in mutable property values0.2.0 (2019-12-10)------------------* ``Mapping`` and ``Iterable`` interfaces were added to the object properties class. Adds item access (``obj.props[&quot;key&quot;]``), ``obj.props.get(&quot;key&quot;)``, ``len(obj.props)``, ``key in obj.props``, ``obj.props.keys()``, ``obj.props.values()``, ``obj.props.items()``* documentation improvements* HTTP basic passwords are no longer logged* map ``options`` and ``policies`` back to original values (were being rewritten to pep8 conform keys by the OpenAPI client)0.1.1 (2019-11-25)------------------* allow specifying existing JAR for open api client build* various small fixes to handle RTD and Travis-CI0.1.0 (2019-11-22)------------------* First release.</longdescription>
</pkgmetadata>