<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Py-EthPM========`Join the chat athttps://gitter.im/ethpm/lobby &lt;https://gitter.im/ethpm/lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge&gt;`__`CircleCI &lt;https://circleci.com/gh/ethpm/py-ethpm&gt;`__ `PyPIversion &lt;https://badge.fury.io/py/ethpm&gt;`__A Python implementation of the `Ethereum Package ManagerSpecification &lt;http://ethpm.github.io/ethpm-spec/package-spec.html&gt;`__.Read more in the documentation on`ReadTheDocs &lt;https://py-ethpm.readthedocs.io/en/latest/&gt;`__.WARNING!``Py-EthPM`` is currently in public alpha. *Keep in mind*: - It isexpected to have bugs and is not meant to be used in production - Thingsmay be ridiculously slow or not work at allQuickstart----------.. code:: sh   pip install ethpmDeveloper Setup---------------If you would like to hack on Py-EthPM, please check out the `EthereumDevelopment TacticalManual &lt;https://github.com/pipermerriam/ethereum-dev-tactical-manual&gt;`__for information on how we do:-  Testing-  Pull Requests-  Code Style-  DocumentationDeveloper Environment Setup~~~~~~~~~~~~~~~~~~~~~~~~~~~You can set up your dev environment with:.. code:: sh   git clone git@github.com:ethpm/py-ethpm.git   cd py-ethpm   virtualenv -p python3 venv   . venv/bin/activate   pip install -e .[dev]Testing Setup~~~~~~~~~~~~~During development, you might like to have tests run on every file save.Show flake8 errors on file change:.. code:: sh   # Test flake8   when-changed -v -s -r -1 py-ethpm/ tests/ -c &quot;clear; flake8 py-ethpm tests &amp;&amp; echo 'flake8 success' || echo 'error'&quot;Run multi-process tests in one command, but without color:.. code:: sh   # in the project root:   pytest --numprocesses=4 --looponfail --maxfail=1   # the same thing, succinctly:   pytest -n 4 -f --maxfail=1Run in one thread, with color and desktop notifications:.. code:: sh   cd venv   ptw --onfail &quot;notify-send -t 5000 'Test failure ⚠⚠⚠⚠⚠' 'python 3 test on &lt;REPO_NAME&gt; failed'&quot; ../tests ../&lt;MODULE_NAME&gt;How to Execute the Tests?^^^^^^^^^^^^^^^^^^^^^^^^^1. `Setup your development   environment &lt;https://github.com/ethpm/py-ethpm/#developer-setup&gt;`__.2. Execute ``tox`` for the testsThere are multiple`components &lt;https://github.com/ethpm/py-ethpm/blob/master/.circleci/.config.yml#L56&gt;`__of the tests. You can run test to against specific component. Forexample:.. code:: sh   # Run Tests for the Core component (for Python 3.5):   tox -e py35   # Run Tests for the Core component (for Python 3.6):   tox -e py36If for some reason it is not working, add ``--recreate`` params.``tox`` is good for testing against the full set of build targets. Butif you want to run the tests individually, ``py.test`` is better fordevelopment workflow. For example, to run only the tests in one file:.. code:: sh   pytest tests/ethpm/utils/test_uri_utils.pyIPFS integration tests (``tests/ethpm/integration/``) require a directconnection to an IPFS node and are skipped by default (except inCircleCI, where they are run). To include these tests in your test run,first start an IPFS node and then add ``--integration`` to the pytestcommand.Release setup~~~~~~~~~~~~~For Debian-like systems:::   apt install pandocTo release a new version:.. code:: sh   make release bump=$$VERSION_PART_TO_BUMP$$How to bumpversion^^^^^^^^^^^^^^^^^^The version format for this repo is ``{major}.{minor}.{patch}`` forstable, and ``{major}.{minor}.{patch}-{stage}.{devnum}`` for unstable(``stage`` can be alpha or beta).To issue the next version in line, specify which part to bump, like``make release bump=minor`` or ``make release bump=devnum``.If you are in a beta version, ``make release bump=stage`` will switch toa stable.To issue an unstable version when the current version is stable, specifythe new version explicitly, like``make release bump=&quot;--new-version 4.0.0-alpha.1 devnum&quot;``EthPM-Spec~~~~~~~~~~-  ``EthPM-Spec &lt;https://github.com/ethpm/ethpm-spec&gt;``\ \_\_ is   referenced inside this repo as a submodule.*\*-  If you clone this repository, run this command to fetch the contents   of the submodule::      git submodule init</longdescription>
</pkgmetadata>