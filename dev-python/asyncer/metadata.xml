<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://asyncer.tiangolo.com&quot;&gt;&lt;img src=&quot;https://asyncer.tiangolo.com/img/logo-margin/logo-margin-vector.svg&quot; alt=&quot;Asyncer&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;Asyncer, async and await, focused on developer experience.&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tiangolo/asyncer/actions?query=workflow%3ATest&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://github.com/tiangolo/asyncer/workflows/Test/badge.svg&quot; alt=&quot;Test&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/tiangolo/asyncer/actions?query=workflow%3APublish&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://github.com/tiangolo/asyncer/workflows/Publish/badge.svg&quot; alt=&quot;Publish&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/asyncer&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://coverage-badge.samuelcolvin.workers.dev/tiangolo/asyncer.svg&quot; alt=&quot;Coverage&quot;&gt;&lt;a href=&quot;https://pypi.org/project/asyncer&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/asyncer?color=%2334D058&amp;label=pypi%20package&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;/p&gt;---**Documentation**: &lt;a href=&quot;https://asyncer.tiangolo.com&quot; target=&quot;_blank&quot;&gt;https://asyncer.tiangolo.com&lt;/a&gt;**Source Code**: &lt;a href=&quot;https://github.com/tiangolo/asyncer&quot; target=&quot;_blank&quot;&gt;https://github.com/tiangolo/asyncer&lt;/a&gt;---**Asyncer** is a small library built on top of &lt;a href=&quot;https://anyio.readthedocs.io/en/stable/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;AnyIO&lt;/a&gt;.**Asyncer** has a small number of utility functions that allow working with `async`, `await`, and concurrent code in a more convenient way under my (&lt;a href=&quot;https://twitter.com/tiangolo&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;@tiangolo - SebastiÃ¡n RamÃ­rez&lt;/a&gt;) very opinionated and subjective point of view.The main goal of **Asyncer** is to improve **developer experience** by providing better support for **autocompletion** and **inline errors** in the editor, and **more certainty** that the code is **bug-free** by providing better support for type checking tools like **mypy**.**Asyncer** also tries to improve **convenience** and simplicity when working with **async** code **mixed** with regular &lt;abbr title=&quot;synchronous code, code that is not async&quot;&gt;**blocking code**&lt;/abbr&gt;, allowing to use them together in a simpler way... again, under my very **subjective** point of view.## ðŸš¨ WarningThis small library only exists to be able to use these **utility functions** until (and if) they are integrated into **AnyIO**.It will probably take some time for that to happen (or to be decided if it will be included or not).So I made this to be able to use these ideas right now. ðŸ¤“## Can I Use It?Yes ðŸŽ‰ (but continue reading).You can use this and evaluate the **library API design** I'm proposing. It will probably be useful to know if it works and is useful for you (I hope so).But still, consider this lab material, expect it to change a bit. ðŸ§ªIf you use it, **pin the exact Asyncer version** for your project, to make sure it all works.Have **tests** for your project (as you should, anyway). And **upgrade the version** once you know that the new version continues to work correctly.Still, it's **just 4 functions**, so there's not much to change, if you had to refactor your code to update something it would not be much.And if you don't want to add `asyncer` as a dependency to your project, you can also just copy the main file and try out those functions, it's quite small (but in that case you won't get updates easily).## RequirementsAs **Asyncer** is based on **AnyIO** it will be also installed automatically when you install **Asyncer**.## Installation&lt;div class=&quot;termy&quot;&gt;```console$ pip install asyncer---&gt; 100%Successfully installed asyncer anyio```&lt;/div&gt;## How to UseYou can read more about each of the use cases and utility functions in **Asyncer** in the &lt;a href=&quot;https://asyncer.tiangolo.com/tutorial/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;tutorial&lt;/a&gt;.As a sneak preview of one of the utilities, you can **call sync code from async code** using `asyncify()`:```Pythonimport timeimport anyiofrom asyncer import asyncifydef do_sync_work(name: str):    time.sleep(1)    return f&quot;Hello, {name}&quot;async def main():    message = await asyncify(do_sync_work)(name=&quot;World&quot;)    print(message)anyio.run(main)```**Asyncer**'s `asyncify()` will use AnyIO underneath to do *the smart thing*, avoid blocking the main **async** event loop, and run the **sync**/blocking function in a **worker thread**.### Editor SupportEverything in **Asyncer** is designed to get the best **developer experience** possible, with the best editor support.* **Autocompletion** for function arguments:&lt;img class=&quot;shadow&quot; src=&quot;https://asyncer.tiangolo.com/img/tutorial/asyncify/image01.png&quot;&gt;* **Autocompletion** for return values:&lt;img class=&quot;shadow&quot; src=&quot;https://asyncer.tiangolo.com/img/tutorial/asyncify/image02.png&quot;&gt;* **Inline errors** in editor:&lt;img class=&quot;shadow&quot; src=&quot;https://asyncer.tiangolo.com/img/tutorial/soonify/image02.png&quot;&gt;* Support for tools like **mypy**, that can help you verify that your **code is correct**, and prevent many bugs.## LicenseThis project is licensed under the terms of the [MIT license](https://github.com/tiangolo/asyncer/blob/main/LICENSE).</longdescription>
</pkgmetadata>