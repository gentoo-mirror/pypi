<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># crazy-thursday[![](https://img.shields.io/badge/sponsored%20by-Crazy--Thursday-brightgreen?logo=KFC)](https://www.kfchk.com/index.html)[![](https://img.shields.io/badge/powered%20by-Github%20Actions-brightgreen?logo=Github)](https://docs.github.com/actions)[![](https://img.shields.io/pypi/v/crazy-thursday?logo=PyPI)](https://pypi.org/project/crazy-thursday/)[![](https://github.com/zqmillet/crazy-thursday/actions/workflows/update_curpus.yaml/badge.svg)](https://github.com/zqmillet/crazy-thursday/actions)大家好, 我是秦始皇, 其实我并没有死, 我在西安有 100000 吨黄金, 今天肯德基疯狂星期四, 谁可以 V 我 50 元, 我明天直接带部队复活, 让你统领三军!## 安装 ``` bashpip3 install crazy-thursday```或者```python3 -m pip install crazy-thursday```![](./static/install.svg)## 使用如果成功安装, 系统中便会存在一个名为 `crazy-thursday` 和一个名为 `kfc` 的命令. 直接调用 `crazy-thursday` 或 `kfc` 便会在控制台中随机地输出一段疯狂星期四文案.![](./static/kfc.svg)## 如何贡献你不需要贡献代码, 只需要[创建 issue](https://github.com/zqmillet/crazy-thursday/issues/new?assignees=&amp;labels=add+article&amp;template=add-article.yaml&amp;title=thanks+for+taking+the+time+to+contribute+article+about+crazy-thursday.), 并且留下文案即可.后台有一个定时任务, 定时收集本项目的所有 issue, 并汇总打包成 `.whl` 文件, 发布到 [PyPI](https://pypi.org/project/crazy-thursday/) 上.## 版本号本项目采用 4 位版本号, 其格式为 `&lt;year&gt;.&lt;month&gt;.&lt;day&gt;.&lt;build&gt;`, 其中:- `&lt;year&gt;` 为发布时间中的年份.- `&lt;month&gt;` 为发布时间中的月份.- `&lt;day&gt;` 为发布时间中的日期.- `&lt;build&gt;` 为发布当天构建序号, 从 `0` 开始.比如版本 `1926.8.16.3` 含义为该版本是 1926 年 8 月 16 日构建的第 4 个版本.## 工作原理本项利用 Github Actions 每天自动发布版本, 其工作原理如下图所示.```mermaid%%{init: {&quot;theme&quot;: &quot;base&quot;, &quot;themeVariables&quot;: {&quot;primaryColor&quot;: &quot;#FFFFFF&quot;, &quot;primaryBorderColor&quot;: &quot;#000000&quot;}}}%%graph TD    A(&quot;☁️ https://github.com/zqmillet/crazy-thursday&quot;) --&gt;|collect issues| B(&quot;📄 crazy_thursday/corpus.jsonl&quot;)    B --&gt;|update version| C(&quot;📄 crazy_thursday/__init__.py&quot;)     C --&gt; |commit &amp; push| D(&quot;☁️ https://github.com/zqmillet/crazy-thursday&quot;)    D --&gt; |build| E(&quot;📦 dist/crazy_thursday-*.whl&quot;)    E --&gt; |publish| F(&quot;🌐 https://pypi.org/project/crazy-thursday&quot;)```定时任务的工作流程为:- 首先 clone 项目, 配置 Python, 安装依赖.- 执行 `scripts/update_curpus.py` 脚本, 自动抓去本项目的所有 issue 并保存到 `crazy_thursday/corpus.jsonl` 文件中.- 更新 `crazy_thursday/__init__.py` 文件中的版本号.- 提交 commit 并且 push 回代码仓.- 将最新的代码打包成 `.whl` 文件, 并发布到 PyPI 上.该定时任务每天会执行两次, 你提交的 issue 会出现在第二天的版本中.</longdescription>
</pkgmetadata>