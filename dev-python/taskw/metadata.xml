<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>This is a python API for the `taskwarrior &lt;http://taskwarrior.org&gt;`_ commandline tool.It contains two implementations: ``taskw.TaskWarriorShellout`` and``taskw.TaskWarriorDirect``.  The first implementation is the supported onerecommended by the upstream taskwarrior core project.  It uses the ``taskexport`` and ``task import`` commands to manipulate the task database.  Thesecond implementation opens the task db file itself and directly manipulatesit.  It exists for backwards compatibility, but should only be used whennecessary.Build Status------------.. |master| image:: https://secure.travis-ci.org/ralphbean/taskw.png?branch=master   :alt: Build Status - master branch   :target: http://travis-ci.org/#!/ralphbean/taskw.. |develop| image:: https://secure.travis-ci.org/ralphbean/taskw.png?branch=develop   :alt: Build Status - develop branch   :target: http://travis-ci.org/#!/ralphbean/taskw+----------+-----------+| Branch   | Status    |+==========+===========+| master   | |master|  |+----------+-----------+| develop  | |develop| |+----------+-----------+Getting taskw-------------Installing++++++++++Using ``taskw`` requires that you first install `taskwarrior&lt;http://taskwarrior.org&gt;`_.Installing it from http://pypi.python.org/pypi/taskw is easy with ``pip``::    $ pip install taskwThe Source++++++++++You can find the source on github at http://github.com/ralphbean/taskwExamples--------Looking at tasks++++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; tasks = w.load_tasks()    &gt;&gt;&gt; tasks.keys()    ['completed', 'pending']    &gt;&gt;&gt; type(tasks['pending'])    &lt;type 'list'&gt;    &gt;&gt;&gt; type(tasks['pending'][0])    &lt;type 'dict'&gt;Adding tasks++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; w.task_add(&quot;Eat food&quot;)    &gt;&gt;&gt; w.task_add(&quot;Take a nap&quot;, priority=&quot;H&quot;, project=&quot;life&quot;, due=&quot;1359090000&quot;)Retrieving tasks++++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; w.get_task(id=5)Updating tasks++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; id, task = w.get_task(id=14)    &gt;&gt;&gt; task['project'] = 'Updated project name'    &gt;&gt;&gt; w.task_update(task)Deleting tasks++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; w.task_delete(id=3)Completing tasks++++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; w.task_done(id=46)Being Flexible++++++++++++++You can point ``taskw`` at different taskwarrior databases.    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior(config_filename=&quot;~/some_project/.taskrc&quot;)    &gt;&gt;&gt; w.task_add(&quot;Use 'taskw'.&quot;)Looking at the config+++++++++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior()    &gt;&gt;&gt; config = w.load_config()    &gt;&gt;&gt; config['data']['location']    '/home/threebean/.task'    &gt;&gt;&gt; config['_forcecolor']    'yes'Using Python-appropriate Types (Dates, UUIDs, etc)++++++++++++++++++++++++++++++++++++++++++++++++++    &gt;&gt;&gt; from taskw import TaskWarrior    &gt;&gt;&gt; w = TaskWarrior(marshal=True)    &gt;&gt;&gt; w.get_task(id=10)    (10,     {      'description': 'Hello there!',      'entry': datetime.datetime(2014, 3, 14, 14, 18, 40, tzinfo=tzutc())      'id': 10,      'project': 'Saying Hello',      'status': 'pending',      'uuid': UUID('4882751a-3966-4439-9675-948b1152895c')     }    )</longdescription>
</pkgmetadata>