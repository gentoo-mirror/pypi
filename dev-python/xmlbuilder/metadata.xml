<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>XMLBuilder is tiny library build on top of ElementTree.TreeBuilder tomake xml files creation more pythonomic. `XMLBuilder` use `with`statement and attribute access to define xml document structure.Only 2.5+ python versions are supported.from __future__ import with_statement # only for python 2.5from xmlbuilder import XMLBuilderx = XMLBuilder('root')x.some_tagx.some_tag_with_data('text', a='12')with x.some_tree(a='1'):    with x.data:        x.mmm        for i in range(10):            x.node(val=str(i))etree_node = ~x # &lt;= return xml.etree.ElementTree objectprint str(x) # &lt;= string objectwill result:&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&lt;root&gt;    &lt;some_tag /&gt;    &lt;some_tag_with_data a=&quot;12&quot;&gt;text&lt;/some_tag_with_data&gt;    &lt;some_tree a=&quot;1&quot;&gt;        &lt;data&gt;            &lt;mmm /&gt;            &lt;node val=&quot;0&quot; /&gt;            &lt;node val=&quot;1&quot; /&gt;            &lt;node val=&quot;2&quot; /&gt;            &lt;node val=&quot;3&quot; /&gt;            &lt;node val=&quot;4&quot; /&gt;            &lt;node val=&quot;5&quot; /&gt;            &lt;node val=&quot;6&quot; /&gt;            &lt;node val=&quot;7&quot; /&gt;            &lt;node val=&quot;8&quot; /&gt;            &lt;node val=&quot;9&quot; /&gt;        &lt;/data&gt;    &lt;/some_tree&gt;&lt;/root&gt;There some fields, which allow xml output customization:formatted = produce formatted xml. default = Truetabstep   = tab string, used for formatting. default = ' ' * 4encoding  = xml document encoding. default = 'utf-8'xml_header = add xml header                (&lt;?xml version=&quot;1.0&quot; encoding=&quot;$DOCUMENT_ENCODING$&quot;&gt;)            to begining of the document. default = Truebuilder = builder class, used for create dcument. Default =                        xml.etree.ElementTree.TreeBuilderOptions can be readed byx = XMLBuilder('root')print x[option_name]and changed byx[option_name] = new_valLook at xmlbuilder/test.py for UT and more examples.Happy xml'ing.</longdescription>
</pkgmetadata>