<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>stringcase==========Convert string cases between camel case, pascal case, snake case etc...|build_status_badge| |coverage_badge| |pypi_version_badge|Usage-----.. code:: python    import stringcase    stringcase.camelcase('foo_bar_baz') # =&gt; &quot;fooBarBaz&quot;    stringcase.camelcase('FooBarBaz') # =&gt; &quot;fooBarBaz&quot;    stringcase.capitalcase('foo_bar_baz') # =&gt; &quot;Foo_bar_baz&quot;    stringcase.capitalcase('FooBarBaz') # =&gt; &quot;FooBarBaz&quot;    stringcase.constcase('foo_bar_baz') # =&gt; &quot;FOO_BAR_BAZ&quot;    stringcase.constcase('FooBarBaz') # =&gt; &quot;_FOO_BAR_BAZ&quot;    stringcase.lowercase('foo_bar_baz') # =&gt; &quot;foo_bar_baz&quot;    stringcase.lowercase('FooBarBaz') # =&gt; &quot;foobarbaz&quot;    stringcase.pascalcase('foo_bar_baz') # =&gt; &quot;FooBarBaz&quot;    stringcase.pascalcase('FooBarBaz') # =&gt; &quot;FooBarBaz&quot;    stringcase.pathcase('foo_bar_baz') # =&gt; &quot;foo/bar/baz&quot;    stringcase.pathcase('FooBarBaz') # =&gt; &quot;/foo/bar/baz&quot;    stringcase.sentencecase('foo_bar_baz') # =&gt; &quot;Foo bar baz&quot;    stringcase.sentencecase('FooBarBaz') # =&gt; &quot;Foo bar baz&quot;    stringcase.snakecase('foo_bar_baz') # =&gt; &quot;foo_bar_baz&quot;    stringcase.snakecase('FooBarBaz') # =&gt; &quot;_foo_bar_baz&quot;    stringcase.spinalcase('foo_bar_baz') # =&gt; &quot;foo-bar-baz&quot;    stringcase.spinalcase('FooBarBaz') # =&gt; &quot;-foo-bar-baz&quot;    stringcase.titlecase('foo_bar_baz') # =&gt; &quot;Foo Bar Baz&quot;    stringcase.titlecase('FooBarBaz') # =&gt; &quot; Foo Bar Baz&quot;    stringcase.trimcase('foo_bar_baz') # =&gt; &quot;foo_bar_baz&quot;    stringcase.trimcase('FooBarBaz') # =&gt; &quot;FooBarBaz&quot;    stringcase.uppercase('foo_bar_baz') # =&gt; &quot;FOO_BAR_BAZ&quot;    stringcase.uppercase('FooBarBaz') # =&gt; &quot;FOOBARBAZ&quot;    stringcase.alphanumcase('_Foo., Bar') # =&gt;'FooBar'    stringcase.alphanumcase('Foo_123 Bar!') # =&gt;'Foo123Bar'Install-------::    $ pip install stringcaseLicense-------This software is released under the `MIT License &lt;https://github.com/okunishinishi/python-stringcase/blob/master/LICENSE&gt;`__.Author-------  `Taka Okunishi &lt;http://okunishitaka.com&gt;`__.. |build_status_badge| image:: http://img.shields.io/travis/okunishinishi/python-stringcase.svg?style=flat   :target: http://travis-ci.org/okunishinishi/python-stringcase.. |coverage_badge| image:: http://img.shields.io/coveralls/apeman-repo/apeman-task-contrib-coz.svg?style=flat   :target: https://coveralls.io/github/apeman-repo/apeman-task-contrib-coz.. |pypi_version_badge| image:: https://img.shields.io/pypi/v/stringcase.svg   :target: https://pypi.python.org/pypi/stringcase</longdescription>
</pkgmetadata>