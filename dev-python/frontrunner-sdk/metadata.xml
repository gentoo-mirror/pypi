<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Frontrunner SDK[Frontrunner][frontrunner] is the first zero gas fee, decentralized sportsprediction market built on blockchain where you get the best odds with no houseedge.[frontrunner]: https://www.getfrontrunner.com/This is an SDK which allows you to interact with our public-facing API easilyvia Python.## DeveloperNote: this assumes OSX### Prerequisite InstallationInstall [`brew`][brew]. This will be used to install other required tooling.[brew]: https://brew.sh/Install [Visual Studio Code][vscode]. This repository has configuration forvscode to make the development experience uniform and smooth for everyone.[vscode]: https://code.visualstudio.com/```shbrew install --cask visual-studio-code```Install [`pants`][pants]. Pants is a generic build tool that supports multiplelanguages and tools. Both local builds and CI builds use Pants.[pants]: https://www.pantsbuild.org/docs/welcome-to-pants```shbrew install pantsbuild/tap/pants```Clone the repository. Then, open up the repository in vscode.[Install the recommended extensions][install-recommended-extensions] for thisworkspace. Restart vscode.[install-recommended-extensions]: https://code.visualstudio.com/docs/editor/extension-marketplace#_workspace-recommended-extensionsIn a terminal at the root of the repository, test your setup by running...```shpants lint ::pants check ::pants test ::```To make vscode use the correct Python environment, in a terminal, run...```shpants export ::```To activate the virtual environment in a shell, run...```shbash ./dist/export/python/virtualenv/3.8.16/bin/activate```### CodegenGenerate Python code using the remote `openapi.json` and [swagger-codegen][swagger-codegen].[swagger-codegen]: https://github.com/swagger-api/swagger-codegen#### Installation```shbrew install swagger-codegen```#### Adding a Client1. Add a dir under `openapi`2. Put the API's `openapi.json` in that directory3. Run `./scripts/codegen.sh`#### Getting HelpTo see additional options:```shswagger-codegen generate --helpswagger-codegen config-help -l python```### Running TestsTo test everything, run...```shpants test ::```To test a single file, run...```shpants test --no-use-coverage ${file}```### Auto Format CodeTo format everything and fix the code for Flake8, run...```shpants fmt ::pants fix ::```### Local Testing via REPLTo get a Python shell to test code, [comment out the `python_distribution` target][pants-16985] in `/BUILD`. Then run...```shpants repl ::```[pants-16985]: https://github.com/pantsbuild/pants/issues/16985### Viewing DocsTo view docs generated from the `docs` folder, run...```sh./scripts/slate.sh serve```Then, in a browser, open http://localhost:8000.### Building Docs LocallyTo build docs locally, run...```sh./scripts/slate.sh build```## Deployments and Releases### Developer DocumentationThe slate documentation deploys on every `master` branch merge.### Release Process1. Create a tagged release with an appropriate semantic version eg. if the current version is 0.4.2, the next patch version would be 0.4.3, or a next minor version would be 0.5.0. Use the [New Release Form][new-release-form] to create the release. Make sure it is marked as **pre-release**.1. Install the SDK from TestPyPI: `pip install --upgrade --index-url https://test.pypi.org/simple/ frontrunner-sdk`.1. Edit the release -- remove the checkmark from &quot;Set as a pre-release&quot; and save.1. Install the SDK from PyPI (production): `pip install --upgrade frontrunner-sdk`[new-release-form]: https://github.com/GetFrontrunner/frontrunner-sdk/releases/newTest PyPI: https://test.pypi.org/project/frontrunner-sdk/Prod PyPI: https://pypi.org/project/frontrunner-sdk/</longdescription>
</pkgmetadata>