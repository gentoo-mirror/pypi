<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Elastic Cloud Resource ProviderThe Elastic Cloud Resource Provider lets you manage [Elastic Cloud](https://www.elastic.co/cloud/) resources.## InstallingThis package is available for several languages/platforms:### Node.js (JavaScript/TypeScript)To use from JavaScript or TypeScript in Node.js, install using either `npm`:```bashnpm install @pulumi/ec```or `yarn`:```bashyarn add @pulumi/ec```### PythonTo use from Python, install using `pip`:```bashpip install pulumi_ec```### GoTo use from Go, use `go get` to grab the latest version of the library:```bashgo get github.com/pulumi/pulumi-ec/sdk```### .NETTo use from .NET, install using `dotnet add package`:```bashdotnet add package Pulumi.ElasticCloud```## ConfigurationThe following configuration points are available for the `ec` provider:- `ec:endpoint`: The Elastic Cloud endpoint to which requests should be sent.  This value should be specified only when using the Elastic Cloud provider with an ECE installation or ESS Private.- `ec:apikey`: The Elastic Cloud API key, recommended over `username` and `password` to authenticate against the Elastic Cloud API.  May also be sourced from environment variable `EC_API_KEY`.- `ec:username`: The Elastic Cloud username.  May also be sourced from environment variable `EC_USER` or `EC_USERNAME`.  Conflicts with `ec:apiKey`.  Not recommened - prefer using `ec:apikey` over `ec:username` and `ec:password`.- `ec:password`: The Elastic Cloud user's password.  May also be sourced from environment variable `EC_PASS` or `EC_PASSWORD`.  Conflicts with `ec:apiKey`.  Not recommened - prefer using `ec:apikey` over `ec:username` and `ec:password`.- `ec:insecure`: If `true`, allows the provider to skip TLS verification (not recommended).  Defaults to `false`.- `ec:timeout`: Allows the user to set a custom timeout in the individual HTTP request level. Defaults to 1 minute (`&quot;1m&quot;`), but can be extended if timeouts are experienced.- `ec:verbose`: When set to true, it writes a requests.json file in the folder where Terraform runs with all the outgoing HTTP requests and responses. Defaults to false.- `ec:verboseCredentials`: If set to `true` and `ec:verbose` is set to `true`, the contents of the Authorization header will not be redacted.  Defaults to `false`.- `ec:verboseFile`: Sets the name of the file to which verbose request and response HTTP flow will be written. Defaults to `request.log`.Either `ec:endpoint` or (`ec:username` and `ec:password`) must be specified.  All other parameters are optional:## ReferenceFor detailed reference documentation, please visit [the Pulumi registry](https://www.pulumi.com/registry/packages/ec/api-docs/).</longdescription>
</pkgmetadata>