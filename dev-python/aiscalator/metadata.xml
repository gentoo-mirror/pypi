<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==========AIscalator==========* Free software: Apache Software License 2.0* Website: http://www.aiscalate.com* Documentation: https://aiscalator.readthedocs.io/en/latest/* Bugs: https://github.com/aiscalate/aiscalator/issuesKey Features------------Aiscalator is a toolbox to enable your team streamliningprocesses from innovation to productization with:* Jupyter workbench    * Explore Data, Prototype Solutions* Docker wrapper tools    * Share Code, Deploy Reproducible Environments* Airflow machinery    * Schedule Tasks, Refine Products* Data Science and Data Engineering best practices.. image:: _static/aiscalator_process.png        :target: _static/aiscalator_process.png        :align: center        :alt: From Prototype to Production Workflow===========Quick Start===========Installation------------Test if prerequisite softwares are installed:.. code-block:: shell    docker --version    docker-compose --version    pip --versionInstall AIscalator tool::    git clone https://github.com/Aiscalate/aiscalator.git    cd aiscalator/    make installGreat, we are now ready to use the AIscalator!The following setup commands are completely optional because they are dealing withprebuilding Docker images. If you choose not to do it at this point, theywill get built later on whenever they are required.However, since producing a Docker image requires a certain amount of timeto download, install packages, and sometimes even compiling them, theseinstallation steps can be initiated right away all at once. Thus, youshould be free to go enjoy a nice coffee break!You might want to customize your environment with the AIscalator, thiswill ask you few questions::    aiscalator setupBuild docker images to run Jupyter environments::    aiscalator jupyter setupBuild docker image to run Airflow::    # aiscalator airflow setup &lt;path-to-workspace-folder&gt;    # for example,    aiscalator airflow setup $PWDStart working-------------AIscalator commands dealing with jupyter are defining tasks in Airflow jargon;In our case, they are all wrapped inside a Docker container. We also refer tothem as Steps.Whereas AIscalator commands about airflow are made to author, schedule and monitorDAGs (Directed Acyclic Graphs). They define how a workflow is composed of multiplesteps, their dependencies and execution times or triggers.Jupyter-------Create a new Jupyter notebook to work on, define corresponding AIscalator step::    # aiscalator jupyter new &lt;path-to-store-new-files&gt;    # For example,    aiscalator jupyter new project    # (CTRL + c to kill when done)Or you can edit an existing AIscalator step::    # aiscalator jupyter edit &lt;aiscalator step&gt;    # For example, if you cloned the git repository:    aiscalator jupyter edit resources/example/example.conf    # (CTRL + c to kill when done)Run the step without GUI::    # aiscalator jupyter run &lt;aiscalator task&gt;    # For example, if you cloned the git repository:    aiscalator jupyter run resources/example/example.confAirflow-------Start Airflow services::    aiscalator airflow startCreate a new AIscalator DAG, define the airflow job::    # aiscalator airflow new &lt;path-to-store-new-files&gt;    # For example,    aiscalator airflow new project    # (CTRL + c to kill when done)Or you can edit an existing AIscalator DAG::    # aiscalator airflow edit &lt;aiscalator DAG&gt;    # For example, if you cloned the git repository:    aiscalator airflow edit resources/example/example.conf    # (CTRL + c to kill when done)Schedule AIscalator DAG into local airflow dags folder::    # aiscalator airflow push &lt;aiscalator DAG&gt;    # For example, if you cloned the git repository:    aiscalator airflow push resources/example/example.confStop Airflow services::    aiscalator airflow stop=======History=======0.1.0 (2018-11-07)------------------* First Alpha release on PyPI.0.1.11 (2019-04-26)------------------- * Added docker_image.docker_extra_options list feature0.1.13 (2019-06-23)------------------- * Handle errors in Jupytext conversions * aiscalator run subcommand exit code propagated to cli * Concurrent aiscalator run commands is possible</longdescription>
</pkgmetadata>