<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-pgactivity#################``django-pgactivity`` makes it easy to view, filter, and killactive Postgres queries.Some of the features at a glance:* The ``PGActivity`` proxy model and ``pgactivity`` management command  for querying and filtering the `Postgres pg_stat_activity view &lt;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW&gt;`__.* ``pgactivity.context`` and ``pgactivity.middleware.ActivityMiddleware``  for annotating queries with application metadata, such as the request URL.* ``pgactivity.cancel`` and ``pgactivity.terminate`` for canceling  and terminating queries. The ``PGActivity`` model manager also has  these methods.* ``pgactivity.timeout`` for dynamically setting the statement timeout.Quick Start===========Basic Command Usage-------------------Use ``python manage.py pgactivity`` to view and filter active queries. Output looks like the following::    39225 | 0:01:32 | IDLE_IN_TRANSACTION | None | lock auth_user in access exclusiv    39299 | 0:00:15 | ACTIVE | None | SELECT &quot;auth_user&quot;.&quot;id&quot;, &quot;auth_user&quot;.&quot;password    39315 | 0:00:00 | ACTIVE | None | WITH _pgactivity_activity_cte AS ( SELECT pidThe default output attributes are:1. The process ID of the connection.2. The duration of the query.3. The state of the query (see the `Postgres docs &lt;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW&gt;`__ for values).4. Attached context using ``pgactivity.context``.5. The query SQL.Apply filters with ``-f`` (or ``--filter``). Here we query for all active queries that have a durationlonger than a minute::    python manage.py pgactivity -f state=ACTIVE -f 'duration__gt=1 minute'Cancel or terminate activity with ``--cancel`` or ``--terminate``.Here we terminate a query based on the process ID::    python manage.py pgactivity 39225 --terminateAttaching Context-----------------You can attach context to queries to better understand where they originateusing ``pgactivity.context`` or by adding ``pgactivity.middleware.ActivityMiddleware``to ``settings.MIDDLEWARE``.Underneath the hood, a comment is added to the SQL statement and surfaced in``django-pgactivity``.When using the middleware, the ``url`` of the request and the ``method`` ofthe request are automatically added. Here's what the output looks likewhen using the ``pgactivity`` command::    39299 | 0:00:15 | ACTIVE | {&quot;url&quot;: &quot;/admin/&quot;, &quot;method&quot;: &quot;GET&quot;} | SELECT &quot;auth_useProxy Model-----------Use the ``pgactivity.models.PGActivity`` proxy model to querythe `Postgres pg_stat_activity view &lt;https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW&gt;`__.The model contains most of the fields from the view, and the ``cancel`` and ``terminate``methods can be applied to the queryset.Setting the Statement Timeout-----------------------------Dynamically set the SQL statement timeout of code using ``pgactivity.timeout``:.. code-block:: python    import pgactivity    @pgactivity.timeout(0.5)    def my_operation():        # Any queries in this operation that take over 500 milliseconds will throw        # django.db.utils.OperationalError.Compatibility=============``django-pgactivity`` is compatible with Python 3.7 - 3.11, Django 3.2 - 4.2, Psycopg 2 - 3 and Postgres 12 - 15.Documentation=============`View the django-pgactivity docs here&lt;https://django-pgactivity.readthedocs.io/&gt;`_ to learn more about:* The proxy models and custom queryset methods.* Attaching application context to queries.* Using and configuring the management command.* Setting dynamic statement timeouts.Installation============Install django-pgactivity with::    pip3 install django-pgactivityAfter this, add ``pgactivity`` to the ``INSTALLED_APPS``setting of your Django project.Contributing Guide==================For information on setting up django-pgactivity for development andcontributing changes, view `CONTRIBUTING.rst &lt;CONTRIBUTING.rst&gt;`_.Primary Authors===============- `Wes Kendall &lt;https://github.com/wesleykendall&gt;`__- `Paul Gilmartin &lt;https://github.com/PaulGilmartin&gt;`__</longdescription>
</pkgmetadata>