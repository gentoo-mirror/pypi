<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Profile Photo[![image](https://img.shields.io/pypi/v/profile-photo.svg)](https://pypi.org/project/profile-photo)[![image](https://img.shields.io/pypi/pyversions/profile-photo.svg)](https://pypi.org/project/profile-photo)[![image](https://github.com/rnag/profile-photo/actions/workflows/dev.yml/badge.svg)](https://github.com/rnag/profile-photo/actions/workflows/dev.yml)[![Documentation Status](https://readthedocs.org/projects/profile-photo/badge/?version=latest)](https://profile-photo.readthedocs.io/en/latest/?version=latest)[![Updates](https://pyup.io/repos/github/rnag/profile-photo/shield.svg)](https://pyup.io/repos/github/rnag/profile-photo/)*Center* + *Crop* Image to create a Profile Pic or[Headshot](https://www.nfi.edu/headshot-photo).&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/boy-1.jpg&quot; height=&quot;100&quot; width=&quot;130&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/boy-1-out.jpg&quot; height=&quot;100&quot; width=&quot;70&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/construction-worker-1.jpeg&quot; height=&quot;100&quot; width=&quot;110&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/construction-worker-1-out.jpeg&quot; height=&quot;100&quot; width=&quot;90&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/girl-1.jpg&quot; height=&quot;100&quot; width=&quot;120&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/girl-1-out.jpg&quot; height=&quot;100&quot; width=&quot;80&quot; /&gt;&lt;/p&gt;&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/girl-2.jpg&quot; height=&quot;100&quot; width=&quot;120&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/girl-2-out.jpg&quot; height=&quot;100&quot; width=&quot;80&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/hoodie-1.jpg&quot; height=&quot;100&quot; width=&quot;110&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/hoodie-1-out.jpg&quot; height=&quot;100&quot; width=&quot;90&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/man-1.jpeg&quot; height=&quot;100&quot; width=&quot;120&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/man-1-out.jpeg&quot; height=&quot;100&quot; width=&quot;80&quot; /&gt;&lt;/p&gt;&lt;p style=&quot;display: flex;align-items: center;justify-content: center;&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/woman-1.png&quot; height=&quot;100&quot; width=&quot;90&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/woman-1-out.png&quot; height=&quot;100&quot; width=&quot;60&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/woman-2.jpeg&quot; height=&quot;100&quot; width=&quot;130&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/woman-2-out.jpeg&quot; height=&quot;100&quot; width=&quot;110&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/wonder-woman-1.jpeg&quot; height=&quot;100&quot; width=&quot;120&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/rnag/profile-photo/main/examples/wonder-woman-1-out.jpeg&quot; height=&quot;100&quot; width=&quot;90&quot; /&gt;&lt;/p&gt;**If this project has helped you, please consider making a** [donation](https://www.buymeacoffee.com/ritviknag).## InstallLocal tests:&gt; The `[all]`[extra](https://packaging.python.org/en/latest/tutorials/installing-packages/#installing-extras)installs `boto3`, which is excluded by default - this assumes an AWSenvironment.``` console$ pip install profile-photo[all]```[AWS Lambda](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html) deployment:``` console$ pip install profile-photo```## Features-   Exports a helper function, &lt;code&gt;&lt;a href=&quot;https://profile-photo.readthedocs.io/en/latest/profile_photo.html#profile_photo.create_headshot&quot;&gt;create_headshot&lt;/a&gt;&lt;/code&gt;,    to create a    close-up or headshot of the primary face in a photo or image.-   Leverages [Amazon    Rekognition](https://docs.aws.amazon.com/rekognition/latest/dg/what-is.html)    to detect bounding boxes of a person's *Face* and relevant Labels,    such as *Person*.-   Exposes helper methods to save the result image (*cropped*) as well    as API responses to a local folder.## UsageBasic usage, with a [sampleimage](https://raw.githubusercontent.com/rnag/profile-photo/main/examples/woman-2.jpeg):``` python3from urllib.request import urlopenfrom profile_photo import create_headshot# Set the $AWS_PROFILE environment variable insteadaws_profile = 'my-profile'im_url = 'https://raw.githubusercontent.com/rnag/profile-photo/main/examples/woman-2.jpeg'im_bytes = urlopen(im_url).read()photo = create_headshot(im_bytes, profile=aws_profile)photo.show()```An example with a local image, and saving the result image and APIresponses to a folder:``` python3from __future__ import annotationsfrom profile_photo import create_headshot# customize local file location for API responsesdef get_filename(file_name: str | None, api: str):    return f'responses/{file_name}_{api}.json'photo = create_headshot('/path/to/image')# this saves image and API responses to a results/ folder# can also be achieved by passing `output_dir` abovephoto.save_all('results', get_response_filename=get_filename)# display before-and-after imagesphoto.show()```Lastly, an example with an image on S3, and passing in cached[RekognitionAPI](https://docs.aws.amazon.com/rekognition/latest/APIReference/Welcome.html)responses for the image:``` python3from pathlib import Pathfrom profile_photo import create_headshots3_image_path = Path('path/to/image.jpg')responses_dir = Path('./my/responses')_photo = create_headshot(bucket='my-bucket',                         key=str(s3_image_path),                         profile='my-profile',                         faces=responses_dir / f'{s3_image_path.stem}_DetectFaces.json',                         labels=responses_dir / f'{s3_image_path.stem}_DetectLabels.json',                         debug=True)```## ExamplesCheck out [exampleimages](https://github.com/rnag/profile-photo/tree/main/examples) onGitHub for sample use cases and results.## How It WorksThis library currently makes calls to the [AmazonRekognition](https://docs.aws.amazon.com/rekognition/latest/dg/what-is.html)APIs to detect bounding boxes on a Face and Person in a photo.It then uses custom, in-house logic to determine the X/Y coordinates forcropping. This mainly involves &quot;blowing up&quot; or enlarging the Facebounding box, but then correcting the coordinates as needed by thePerson box. This logic has been fine-tuned based on what I have foundprovide the best overall results for generic images (not necessaryprofile photos).In the future, other ideas other than *Rekognition* might be considered-- such as existing machine learning approaches or even a solution withthe `opencv` library in Python alone.## Future Ideas-   Support background removal with    &lt;code&gt;&lt;a href=&quot;https://pypi.org/project/rembg&quot;&gt;rembg&lt;/a&gt;&lt;/code&gt;.-   Investigate other (alternate) approaches to *Rekognition* for    detecting a face and person in a photo.## CreditsThis package was created with[Cookiecutter](https://github.com/cookiecutter/cookiecutter) and the[rnag/cookiecutter-pypackage](https://github.com/rnag/cookiecutter-pypackage)project template.## Buy me a coffeeLiked some of my work? Buy me a coffee (or more likely a beer)&lt;a href=&quot;https://www.buymeacoffee.com/ritviknag&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://bmc-cdn.nyc3.digitaloceanspaces.com/BMC-button-images/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important;width: auto !important;&quot;&gt;&lt;/a&gt;## LicenseCopyright (c) 2023-present  [Ritvik Nag](https://github.com/rnag)Licensed under [MIT License](./LICENSE)# History## 0.1.3 (2023-03-13)-   Update documentation to include sponsor links, and complete install instructions.## 0.1.2 (2023-03-09)-   Embed images in documentation.-   Convert `.rst` files to `.md` format.## 0.1.1 (2023-03-08)-   Update documentation.## 0.1.0 (2023-03-08)-   First release on PyPI.</longdescription>
</pkgmetadata>