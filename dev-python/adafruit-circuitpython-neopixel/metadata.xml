<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Adafruit CircuitPython NeoPixel===============================.. image:: https://readthedocs.org/projects/adafruit-circuitpython-neopixel/badge/?version=latest    :target: https://docs.circuitpython.org/projects/neopixel/en/latest/    :alt: Documentation Status.. image:: https://github.com/adafruit/Adafruit_CircuitPython_Bundle/blob/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_NeoPixel/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_NeoPixel/actions/    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackHigher level NeoPixel driver that presents the strip as a sequence. This is asupercharged version of the original MicroPython driver. Its now more like anormal Python sequence and features slice support, ``repr`` and ``len`` support.Colors are stored as tuples by default. However, you can also use int hex syntaxto set values similar to colors on the web. For example, ``0x100000`` (``#100000``on the web) is equivalent to ``(0x10, 0, 0)``... note:: The int hex API represents the brightness of the white pixel when  present by setting the RGB channels to identical values. For example, full  white is 0xffffff but is actually (0, 0, 0, 0xff) in the tuple syntax. Setting  a pixel value with an int will use the white pixel if the RGB channels are  identical. For full, independent, control of each color component use the  tuple syntax.Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Installing from PyPI====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-neopixel/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-neopixelTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-neopixelTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-neopixelUsage Example=============This example demonstrates the library with the single built-in NeoPixel on the`Feather M0 Express &lt;https://www.adafruit.com/product/3403&gt;`_ and`Metro M0 Express &lt;https://www.adafruit.com/product/3505&gt;`_... code-block:: python    import board    import neopixel    pixels = neopixel.NeoPixel(board.NEOPIXEL, 1)    pixels[0] = (10, 0, 0)This example demonstrates the library with the ten built-in NeoPixels on the`Circuit Playground Express &lt;https://www.adafruit.com/product/3333&gt;`_. It turnsoff ``auto_write`` so that all pixels are updated at once when the ``show``method is called... code-block:: python    import board    import neopixel    pixels = neopixel.NeoPixel(board.NEOPIXEL, 10, auto_write=False)    pixels[0] = (10, 0, 0)    pixels[9] = (0, 10, 0)    pixels.show()This example demonstrates using a single NeoPixel tied to a GPIO pin and witha ``pixel_order`` to specify the color channel order. Note that ``bpp`` does notneed to be specified as it is computed from the supplied ``pixel_order``... code-block:: python    import board    import neopixel    pixel = neopixel.NeoPixel(board.D0, 1, pixel_order=neopixel.RGBW)    pixel[0] = (30, 0, 20, 10)Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/neopixel/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_NeoPixel/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>