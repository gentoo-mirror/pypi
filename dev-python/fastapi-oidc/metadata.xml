<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># FastAPI OIDC&lt;p align=&quot;left&quot;&gt;    &lt;a href=&quot;https://github.com/HarryMWinters/fastapi-oidc/actions?query=workflow%3ATest&quot;       target=&quot;_blank&quot;&gt;       &lt;img src=&quot;https://github.com/HarryMWinters/fastapi-oidc/workflows/Test/badge.svg&quot;              alt=&quot;Test&quot;&gt;    &lt;/a&gt;    &lt;a href='https://fastapi-oidc.readthedocs.io/en/latest/?badge=latest'&gt;        &lt;img src='https://readthedocs.org/projects/fastapi-oidc/badge/?version=latest' alt='Documentation Status' /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/fastapi-oidc&quot;        target=&quot;_blank&quot;&gt;       &lt;img src=&quot;https://img.shields.io/pypi/v/fastapi-oidc?color=%2334D058&amp;label=pypi%20package&quot;             alt=&quot;Package version&quot;&gt;    &lt;/a&gt;&lt;/p&gt;---:warning: **See [this issue](https://github.com/HarryMWinters/fastapi-oidc/issues/1) forsimple role-your-own example of checking OIDC tokens.**Verify and decrypt 3rd party OIDC ID tokens to protect your[fastapi](https://github.com/tiangolo/fastapi) endpoints.**Documentation:** [ReadTheDocs](https://fastapi-oidc.readthedocs.io/en/latest/)**Source code:** [Github](https://github.com/HarryMWinters/fastapi-oidc)## Installation`pip install fastapi-oidc`## Usage### Verify ID Tokens Issued by Third PartyThis is great if you just want to use something like Okta or google to handleyour auth. All you need to do is verify the token and then you can extract user ID infofrom it.```python3from fastapi import Dependsfrom fastapi import FastAPI# Set up our OIDCfrom fastapi_oidc import IDTokenfrom fastapi_oidc import get_authOIDC_config = {    &quot;client_id&quot;: &quot;0oa1e3pv9opbyq2Gm4x7&quot;,    # Audience can be omitted in which case the aud value defaults to client_id    &quot;audience&quot;: &quot;https://yourapi.url.com/api&quot;,    &quot;base_authorization_server_uri&quot;: &quot;https://dev-126594.okta.com&quot;,    &quot;issuer&quot;: &quot;dev-126594.okta.com&quot;,    &quot;signature_cache_ttl&quot;: 3600,}authenticate_user: Callable = get_auth(**OIDC_config)app = FastAPI()@app.get(&quot;/protected&quot;)def protected(id_token: IDToken = Depends(authenticate_user)):    return {&quot;Hello&quot;: &quot;World&quot;, &quot;user_email&quot;: id_token.email}```#### Using your own tokensThe IDToken class will accept any number of extra field but if you want to craft yourown token class and validation that's accounted for too.```python3class CustomIDToken(fastapi_oidc.IDToken):    custom_field: str    custom_default: float = 3.14authenticate_user: Callable = get_auth(**OIDC_config, token_type=CustomIDToken)app = FastAPI()@app.get(&quot;/protected&quot;)def protected(id_token: CustomIDToken = Depends(authenticate_user)):    return {&quot;Hello&quot;: &quot;World&quot;, &quot;user_email&quot;: id_token.custom_default}```</longdescription>
</pkgmetadata>