<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>frepr=====.. image:: https://travis-ci.org/wemoloh/frepr.svg?branch=master    :target: https://travis-ci.org/wemoloh/freprFast float ``repr()`` for CPython using`&lt;https://github.com/google/double-conversion&gt;`_.  Approximately 8X faster thanthe built-in function.Quick Start===========.. code-block:: python    &gt;&gt;&gt; import frepr    &gt;&gt;&gt; frepr.frepr(-1.8397892359791307e+134)    '-1.8397892359791307e+134'    &gt;&gt;&gt; from timeit import timeit    &gt;&gt;&gt; timeit('repr(-1.8397892359791307e+134)')    2.7296602272476758    &gt;&gt;&gt; frepr.install()    &gt;&gt;&gt; timeit('repr(-1.8397892359791307e+134)')    0.35723431229251545    &gt;&gt;&gt; frepr.uninstall()API===``frepr.frepr(value)``----------------------Returns shortest string representation of a floating point value.  The argumentdoesn't have to be a ``float``, as long as it is coercible to one (i.e. it hasa ``__float__()`` method).``frepr.install()``-------------------Monkey-patches the Python runtime.  Subsequent calls to ``repr()`` on floatswill use the faster algorithm.  This is safe to call multiple times.``frepr.uninstall()``---------------------Reverses the monkey-patching done by ``install()``.  Subsequent calls to``repr()`` will use the original built-in algorithm.  This is safe to callmultiple times, even if ``install()`` was not called first.Features========* On average, approximately 8X faster than the standard function.  (This result  obtained on Python 3.6.0 64-bit/Windows 7/Intel Core i3 @ 2.93GHz.  Test your  own system with `tests/perf.py &lt;tests/perf.py&gt;`_).* Speeds up the standard ``json`` package (and any other library that relies on  ``repr()``).* Output is guaranteed to contain the shortest string of decimal digits  necessary to uniquely identify the original IEEE 754 floating-point value.* Guaranteed to satisfy ``value == ast.literal_eval(frepr(value))``.* Tested on CPython 2.6 through 3.6; probably works on other versions too.Limitations===========* Currently, there is no support for alternative Python implementations (e.g.  PyPy).* Output can be slightly different from the native function, due to  floating-point rounding (but see accuracy guarantees above).* Has no effect on other built-in methods of converting floats to strings (e.g.  ``str()``, ``str.format()``, ``&quot;%f&quot;``, ``&quot;%g&quot;``).See Also========* `&lt;https://github.com/google/double-conversion&gt;`_ - Core algorithm  implementation.  This is the same implementation used by Chrome's V8  JavaScript engine, among others.* `&lt;https://bugs.python.org/issue12450&gt;`_ - CPython issue from 2011 about this  idea.</longdescription>
</pkgmetadata>