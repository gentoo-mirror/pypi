<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Refreshbooks provides a simple synchronous API for manipulating FreshBooks invoices, clients, and other data::    from refreshbooks import api        c = api.OAuthClient(        'example.freshbooks.com',        'consumerkey',        'My Consumer Secret',        'An existing token',        'An existing token secret',        user_agent='Example/1.0'    )                                              # XML structure inferred from args    response = c.invoice.create(          # &lt;request method=&quot;invoice.create&quot;&gt;        invoice=dict(                     #   &lt;invoice&gt;            client_id='8',                #     &lt;client_id&gt;8&lt;/client_id&gt;            lines=[                       #     &lt;lines&gt;                api.types.line(           #       &lt;line&gt;                    name='Yard Work',     #         &lt;name&gt;Yard Work&lt;/name&gt;                    unit_cost='10',       #         &lt;unit_cost&gt;10&lt;/unit_cost&gt;                    quantity='4'          #         &lt;quantity&gt;4&lt;/quantity&gt;                )                         #       &lt;/line&gt;            ]                             #     &lt;/lines&gt;        )                                 #   &lt;/invoice&gt;    )                                     # &lt;/request&gt;        invoice_response = c.invoice.get(     # &lt;request method=&quot;invoice.get&quot;&gt;        invoice_id=response.invoice_id    #     &lt;invoice_id&gt;...&lt;/invoice_id&gt;    )                                     # &lt;/request&gt;        print &quot;New invoice created: #%s (id %s)&quot; % (        invoice_response.invoice.number,        invoice_response.invoice.invoice_id    )        invoices_response = c.invoice.list() # &lt;request method=&quot;invoice.list&quot; /&gt;        print &quot;There are %s pages of invoices.&quot; % (        invoices_response.invoices.attrib['pages'],    )        for invoice in invoices_response.invoices.invoice:        print &quot;Invoice %s total: %s&quot; % (            invoice.invoice_id,            invoice.amount        )Consumer keys and secrets can be obtained from FreshBooks. This librarydoes not handle negotiating for an OAuth token+secret pair; see the`oauth` module or the OAuth specification for details.This library also supports the older token-based API authorization scheme::    c = api.TokenClient(        'example.freshbooks.com',        'My API token',        user_agent='Example/1.0'    )        # ... as above ...API methods return lxml.objectify.ObjectifiedDataElement trees, whichcan be manipulated as Python objects with the same structure as the underlying XML.If you are having trouble accessing items as in:    items_response = c.items.list()    for item in items_response.items.item:        print item.item_idAdjust your syntax to use dictionary item lookup:    items_response = c.items.list()    for item in items_response['items'].item:        print item.item_idObjectifiedDataElement provides a method named items which shadows the items element in the response. Accessing items with dictionary lookup syntax is the known work-around.To run tests:    python setup.py nosetestsTo run network-accessing integration tests against httpstat.us:    python setup.py nosetests --attr=integrationReferences: - http://developers.freshbooks.com/ - The FreshBooks API - http://developers.freshbooks.com/authentication-2/#OAuth - FreshBooks and OAuth</longdescription>
</pkgmetadata>