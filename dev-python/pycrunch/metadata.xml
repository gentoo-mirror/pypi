<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pycrunch========A Python client library for Crunch.io.Using pycrunch--------------To use pycrunch in your project, run:    $ python setup.py developThis will make the code in this directory available to other projects.Getting started---------------Start a simple site session via:    &gt;&gt;&gt; import pycrunch    &gt;&gt;&gt; site = pycrunch.connect(api_key=&quot;DFIJFIJWIEJIJFKSJLKKDJKFJSLLSLSL&quot;, site_url=&quot;https://your-domain.crunch.io/api/&quot;)Or, if you don't have an API Key:    &gt;&gt;&gt; site = pycrunch.connect(&quot;me@mycompany.com&quot;, &quot;yourpassword&quot;, &quot;https://your-domain.crunch.io/api/&quot;)Then, you can create an API Key:    &gt;&gt;&gt; apk = site.apikeys.create({&quot;body&quot;: {&quot;name&quot;: &quot;API Key&quot;}})    &gt;&gt;&gt; apk.refresh()    &gt;&gt;&gt; site_via_api_key = pycrunch.connect(api_key=apk.body[&quot;key&quot;], site_url=&quot;https://your-domain.crunch.io/api/&quot;)Or, if you have a crunch access token:    &gt;&gt;&gt; import pycrunch    &gt;&gt;&gt; site = pycrunch.connect_with_token(&quot;DFIJFIJWIEJIJFKSJLKKDJKFJSLLSLSL&quot;, &quot;https://your-domain.crunch.io/api/&quot;)Then, you can browse the site. Use `print` to pretty-indent JSON payloads:    &gt;&gt;&gt; print(site)    pycrunch.shoji.Catalog(**{        &quot;element&quot;: &quot;shoji:catalog&quot;,        &quot;self&quot;: &quot;https://your-domain.crunch.io/api/&quot;,        &quot;description&quot;: &quot;The API root.&quot;,        &quot;catalogs&quot;: {            &quot;datasets&quot;: &quot;https://your-domain.crunch.io/api/datasets/&quot;,            ...        },        &quot;urls&quot;: {            &quot;logout_url&quot;: &quot;https://your-domain.crunch.io/api/logout/&quot;,            ...        },        &quot;views&quot;: {            &quot;migration&quot;: &quot;https://your-domain.crunch.io/api/migration/&quot;        }    })URI's in payloads' catalogs, views, fragments, and urls collectionsare followable automatically:    &gt;&gt;&gt; print(site.datasets)    pycrunch.shoji.Catalog(**{        &quot;self&quot;: &quot;https://your-domain.crunch.io/api/datasets/&quot;,        &quot;element&quot;: &quot;shoji:catalog&quot;,        &quot;index&quot;: {            &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/&quot;: {                &quot;owner_display_name&quot;: &quot;me@mycompany.com&quot;,                &quot;description&quot;: &quot;&quot;,                &quot;id&quot;: &quot;dbf9fca7b727&quot;,                &quot;owner_id&quot;: &quot;https://your-domain.crunch.io/api/users/253b68/&quot;,                &quot;archived&quot;: false,                &quot;name&quot;: &quot;Hog futures tracking (May 2014)&quot;            },        },        ...    })Each recognized JSON payload also automatically gives dotted-attributeaccess to the members of each JSON object:    &gt;&gt;&gt; print(site.datasets.index.values()[0])    pycrunch.shoji.Tuple(**{        &quot;owner_display_name&quot;: &quot;me@mycompany.com&quot;,        &quot;description&quot;: &quot;&quot;,        &quot;id&quot;: &quot;dbf9fca7b727&quot;,        &quot;owner_id&quot;: &quot;https://your-domain.crunch.io/api/users/253b68/&quot;,        &quot;archived&quot;: false,        &quot;name&quot;: &quot;Hog futures tracking (May 2014)&quot;    })Responses may also possess additional helpers, like the `entity` property ofeach Tuple in a catalog's index, which follows the link to the Entity resource:    &gt;&gt;&gt; print(site.datasets.index.values()[0].entity_url)    &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/&quot;    &gt;&gt;&gt; print(site.datasets.index.values()[0].entity)    pycrunch.shoji.Entity(**{        &quot;self&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/&quot;,        &quot;element&quot;: &quot;shoji:entity&quot;,        &quot;description&quot;: &quot;Detail for a given dataset&quot;,        &quot;body&quot;: {            &quot;archived&quot;: false,            &quot;user_id&quot;: &quot;253b68&quot;,            &quot;name&quot;: &quot;Hog futures tracking (May 2014)&quot;            &quot;weight&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/variables/36f5404/&quot;,            &quot;creation_time&quot;: &quot;2014-03-06T18:23:26.780752+00:00&quot;,            &quot;description&quot;: &quot;&quot;        },        &quot;catalogs&quot;: {            &quot;batches&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/batches/&quot;,            &quot;joins&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/joins/&quot;,            &quot;variables&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/variables/&quot;,            &quot;filters&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/filters/&quot;,            ...        },        &quot;views&quot;: {            &quot;cube&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/cube/&quot;,            ...        },        &quot;urls&quot;: {            &quot;revision_url&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/revision/&quot;,            ...        },        &quot;fragments&quot;: {            &quot;table&quot;: &quot;https://your-domain.crunch.io/api/datasets/dbf9fca7b727/table/&quot;        }    })You typically add new resources to a Catalog via its `create` method:    &gt;&gt;&gt; ds = site.datasets.create({&quot;body&quot;: {            'name': &quot;My first dataset&quot;        }}, refresh=True)    &gt;&gt;&gt; gender = ds.variables.create({&quot;body&quot;: {            'name': 'Gender',            'alias': 'gender',            'type': 'categorical',            'categories': [                {'id': -1, 'name': 'No Data', 'numeric_value': None, 'missing': True},                {'id': 1, 'name': 'M', 'numeric_value': None, 'missing': False},                {'id': 2, 'name': 'F', 'numeric_value': None, 'missing': False}            ],            'values': [1, 2, {&quot;?&quot;: -1}, 2]        }}, refresh=True)    &gt;&gt;&gt; print(ds.table.data)    pycrunch.elements.JSONObject(**{        &quot;e7f361628&quot;: [            1,            2,            {&quot;?&quot;: -1},            2        ]    })To access a Pandas Dataframe of the data in your dataset:    &gt;&gt;&gt; from pycrunch import pandaslib as crunchpandas    &gt;&gt;&gt; df = crunchpandas.dataframe_from_dataset(site,'baadf00d000339d9faadg00beab11e')    &gt;&gt;&gt; print(df)    &lt; Draws a dataframe table &gt;</longdescription>
</pkgmetadata>