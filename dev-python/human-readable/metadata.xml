<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Human Readable[![PyPI](https://img.shields.io/pypi/v/human-readable.svg)][pypi status][![Status](https://img.shields.io/pypi/status/human-readable.svg)][pypi status][![Python Version](https://img.shields.io/pypi/pyversions/human-readable)][pypi status][![License](https://img.shields.io/pypi/l/human-readable)][license][![Read the documentation at https://human-readable.readthedocs.io/](https://img.shields.io/readthedocs/human-readable/latest.svg?label=Read%20the%20Docs)][read the docs][![Tests](https://github.com/staticdev/human-readable/workflows/Tests/badge.svg)][tests][![Codecov](https://codecov.io/gh/staticdev/human-readable/branch/main/graph/badge.svg)][codecov][![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)][pre-commit][![Black](https://img.shields.io/badge/code%20style-black-000000.svg)][black][pypi status]: https://pypi.org/project/human-readable/[read the docs]: https://human-readable.readthedocs.io/[tests]: https://github.com/staticdev/human-readable/actions?workflow=Tests[codecov]: https://app.codecov.io/gh/staticdev/human-readable[pre-commit]: https://github.com/pre-commit/pre-commit[black]: https://github.com/psf/black## Features- File size humanization.- List humanization.- Numbers humanization.- Time and dates humanization.- Internacionalization (i18n) to 20+ locales:  - Abbreviated English (en_ABBR)  - Brazilian Portuguese (pt_BR)  - Dutch (nl_NL)  - Finnish (fi_FI)  - French (fr_FR)  - German (de_DE)  - Indonesian (id_ID)  - Italian (it_IT)  - Japanese (ja_JP)  - Korean (ko_KR)  - Persian (fa_IR)  - Polish (pl_PL)  - Portugal Portuguese (pt_PT)  - Russian (ru_RU)  - Simplified Chinese (zh_CN)  - Slovak (sk_SK)  - Spanish (es_ES)  - Taiwan Chinese (zh_TW)  - Turkish (tr_TR)  - Ukrainian (uk_UA)  - Vietnamese (vi_VI)## Requirements- It works in Python 3.8+.## InstallationYou can install _Human Readable_ via [pip] from [PyPI]:```console$ pip install human-readable```&lt;!-- basic-usage --&gt;## Basic usageImport the lib with:```pythonimport human_readable```Date and time humanization examples:```pythonhuman_readable.time_of_day(17)&quot;afternoon&quot;import datetime as dthuman_readable.timing(dt.time(6, 59, 0))&quot;one minute to seven hours&quot;human_readable.timing(dt.time(21, 0, 40), formal=False)&quot;nine in the evening&quot;human_readable.time_delta(dt.timedelta(days=65))&quot;2 months&quot;human_readable.date_time(dt.datetime.now() - dt.timedelta(minutes=2))&quot;2 minutes ago&quot;human_readable.day(dt.date.today() - dt.timedelta(days=1))&quot;yesterday&quot;human_readable.date(dt.date(2019, 7, 2))&quot;Jul 02 2019&quot;human_readable.year(dt.date.today() + dt.timedelta(days=365))&quot;next year&quot;```Precise time delta examples:```pythonimport datetime as dtdelta = dt.timedelta(seconds=3633, days=2, microseconds=123000)human_readable.precise_delta(delta)&quot;2 days, 1 hour and 33.12 seconds&quot;human_readable.precise_delta(delta, minimum_unit=&quot;microseconds&quot;)&quot;2 days, 1 hour, 33 seconds and 123 milliseconds&quot;human_readable.precise_delta(delta, suppress=[&quot;days&quot;], format=&quot;0.4f&quot;)&quot;49 hours and 33.1230 seconds&quot;```File size humanization examples:```pythonhuman_readable.file_size(1000000)&quot;1.0 MB&quot;human_readable.file_size(1000000, binary=True)&quot;976.6 KiB&quot;human_readable.file_size(1000000, gnu=True)&quot;976.6K&quot;```Lists humanization examples:```pythonhuman_readable.listing([&quot;Alpha&quot;, &quot;Bravo&quot;], &quot;,&quot;)&quot;Alpha, Bravo&quot;human_readable.listing([&quot;Alpha&quot;, &quot;Bravo&quot;, &quot;Charlie&quot;], &quot;;&quot;, &quot;or&quot;)&quot;Alpha; Bravo or Charlie&quot;```Numbers humanization examples:```pythonhuman_readable.int_comma(12345)&quot;12,345&quot;human_readable.int_word(123455913)&quot;123.5 million&quot;human_readable.int_word(12345591313)&quot;12.3 billion&quot;human_readable.ap_number(4)&quot;four&quot;human_readable.ap_number(41)&quot;41&quot;```Floating point number humanization examples:```pythonhuman_readable.fractional(1.5)&quot;1 1/2&quot;human_readable.fractional(0.3)&quot;3/10&quot;```Scientific notation examples:```pythonhuman_readable.scientific_notation(1000)&quot;1.00 x 10³&quot;human_readable.scientific_notation(5781651000, precision=4)&quot;5.7817 x 10⁹&quot;```&lt;!-- end-basic-usage --&gt;Complete instructions can be found at [human-readable.readthedocs.io].## LocalizationHow to change locale at runtime:```pythonimport datetime as dthuman_readable.date_time(dt.timedelta(seconds=3))'3 seconds ago'_t = human_readable.i18n.activate(&quot;ru_RU&quot;)human_readable.date_time(dt.timedelta(seconds=3))'3 секунды назад'human_readable.i18n.deactivate()human_readable.date_time(dt.timedelta(seconds=3))'3 seconds ago'```You can pass additional parameter `path` to `activate` to specify a path to searchlocales in.```pythonhuman_readable.i18n.activate(&quot;xx_XX&quot;)...FileNotFoundError: [Errno 2] No translation file found for domain: 'human_readable'human_readable.i18n.activate(&quot;pt_BR&quot;, path=&quot;path/to/my/portuguese/translation/&quot;)&lt;gettext.GNUTranslations instance ...&gt;```You can see how to add a new locale on the [Contributor Guide].A special locale, `en_ABBR`, renderes abbreviated versions of output:```pythonhuman_readable.date_time(datetime.timedelta(seconds=3))3 seconds agohuman_readable.int_word(12345591313)12.3 billionhuman_readable.date_time(datetime.timedelta(seconds=86400*476))1 year, 3 months agohuman_readable.i18n.activate('en_ABBR')human_readable.date_time(datetime.timedelta(seconds=3))3shuman_readable.int_word(12345591313)12.3 Bhuman_readable.date_time(datetime.timedelta(seconds=86400*476))1y 3M```## ContributingContributions are very welcome.To learn more, see the [Contributor Guide].## LicenseDistributed under the terms of the [MIT license][license],_Human Readable_ is free and open source software.## IssuesIf you encounter any problems,please [file an issue] along with a detailed description.## CreditsThis lib is based on original [humanize] with some added features such as listing, improved naming, documentation, functional tests, type-annotations, bug fixes and better localization.This project was generated from [@cjolowicz]'s [Hypermodern Python Cookiecutter] template.[@cjolowicz]: https://github.com/cjolowicz[pypi]: https://pypi.org/[hypermodern python cookiecutter]: https://github.com/cjolowicz/cookiecutter-hypermodern-python[file an issue]: https://github.com/staticdev/human-readable/issues[pip]: https://pip.pypa.io/&lt;!-- github-only --&gt;[license]: https://github.com/staticdev/human-readable/blob/main/LICENSE[contributor guide]: https://github.com/staticdev/human-readable/blob/main/CONTRIBUTING.md[cookiecutter]: https://github.com/audreyr/cookiecutter[human-readable.readthedocs.io]: https://human-readable.readthedocs.io[humanize]: https://github.com/jmoiron/humanize[mit]: http://opensource.org/licenses/MIT</longdescription>
</pkgmetadata>