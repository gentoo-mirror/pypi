<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># JWT server_JWTServer лёгкий и быстрый микросервис JWT._[![Package version](https://img.shields.io/pypi/v/jwtserver?color=%2334D058&amp;label=pypi%20package)](https://pypi.org/project/jwtserver)[![Supported Python versions](https://img.shields.io/pypi/pyversions/jwtserver.svg?color=%2334D058)](https://pypi.org/project/jwtserver)JWT Server является микросервисом для авторизации пользователей. Имеющий гибкие настройки и разные версии API.* Подключение Google Recaptcha V3* Отправка кода через сервис &lt;a href=&quot;https://smsc.ru/&quot; target=&quot;_blank&quot;&gt;https://smsc.ru/&lt;/a&gt; (**стадия тестирования**)## Особенности* Быстрый старт* Походит для тестирования frontend* Основан на Fast API framework и вдохновлен работами &lt;a href=&quot;https://github.com/tiangolo&quot; target=&quot;_blank&quot;&gt;tiangolo&lt;/a&gt;## Route Entrypoints### Login* **[POST]** - /api/v1/login/access-token* **[POST]** - /api/v1/login/test-token* **[POST]** - /api/v1/password-recovery/{email}* **[POST]** - /api/v1/reset-password/* **[POST]** - /api/v1/phone_status/### Users* **[GET]** - /api/v1/users/* **[POST]** - /api/v1/users/* **[GET]** - /api/v1/users/me* **[PUT]** - /api/v1/users/me* **[POST]** - /api/v1/users/open* **[GET]** - /api/v1/users/{user_id}* **[PUT]** - /api/v1/users/{user_id}### Utils* **[POST]** - /api/v1/utils/test-celery/* **[POST]** - /api/v1/utils/test-email/### Items* **[GET]** - /api/v1/items/* **[POST]** - /api/v1/items/* **[GET]** - /api/v1/items/{id}* **[PUT]** - /api/v1/items/{id}* **[DELETE]** - /api/v1/items/{id}---**Поддержка кода** &lt;a href=&quot;https://github.com/goltsevnet/jwtserver&quot; target=&quot;_blank&quot;&gt;https://github.com/goltsevnet/jwtserver&lt;/a&gt;---## Зависимости* **uvicorn** &lt;a href=&quot;https://www.uvicorn.org/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://www.uvicorn.org/&lt;/a&gt;* **fastapi** &lt;a href=&quot;https://fastapi.tiangolo.com/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://fastapi.tiangolo.com/&lt;/a&gt;* **starlette** &lt;a href=&quot;https://www.starlette.io/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://www.starlette.io/&lt;/a&gt;* **passlib** &lt;a href=&quot;https://pypi.org/project/passlib/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/passlib/&lt;/a&gt;* **pydantic** &lt;a href=&quot;https://pydantic-docs.helpmanual.io/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pydantic-docs.helpmanual.io/&lt;/a&gt;* **redis** &lt;a href=&quot;https://pypi.org/project/redis/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/redis/&lt;/a&gt;* **python-jose** &lt;a href=&quot;https://pypi.org/project/python-jose/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/python-jose/&lt;/a&gt;* **sqlalchemy** &lt;a href=&quot;https://pypi.org/project/SQLAlchemy/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/SQLAlchemy/&lt;/a&gt;* **sqlalchemy_utils** &lt;a href=&quot;https://sqlalchemy-utils.readthedocs.io/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://sqlalchemy-utils.readthedocs.io/&lt;/a&gt;* **asyncpg** &lt;a href=&quot;https://pypi.org/project/asyncpg/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/asyncpg/&lt;/a&gt;* **psycopg2-binary** &lt;a href=&quot;https://pypi.org/project/psycopg2-binary/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/psycopg2-binary/&lt;/a&gt;* **httpx** &lt;a href=&quot;https://www.python-httpx.org/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://www.python-httpx.org/&lt;/a&gt;* **python-dotenv** &lt;a href=&quot;https://pypi.org/project/python-dotenv/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://pypi.org/project/python-dotenv/&lt;/a&gt;## Установка```shellpython -m pip install jwtserver ```Подготовьте базу данных `Postgres 14` и выше версии.Используйте как вариант `docker-compose.yaml````dockerfileversion: '3.1'services:  db:    image: postgres:14.1-alpine    restart: always    build: .    environment:      POSTGRES_PASSWORD: example    ports:      - 5433:5432```Обязательно добавьте переменную в среду: `POSTGRES__DSN` для миграций.Выполните команду:```shellupgradehead```Должны увидеть:```shellINFO  [alembic.runtime.migration] Context impl PostgresqlImpl.INFO  [alembic.runtime.migration] Will assume transactional DDL.INFO  [alembic.runtime.migration] Running upgrade  -&gt; 98f3d19d2c0d, initial```Остальные переменные можно добавить в файл `.env` или через dotenv.```dotenvENVIRONMENT=productionPROJECT_NAME=JwtServerSMS__LOGIN=loginSMS__PASSWORD=passwordSMS__IGNORE_ATTEMPTS=TruePOSTGRES__DSN=postgresql+psycopg2://postgres:example@localhost:5433/postgresRECAPTCHA=TrueGOOGLE__RECAPTCHA__SECRET_KEY=SECRET_KEYTOKEN__V1_SOL=12345679100987654321TOKEN__SECRET_KEY=SECRET_KEYTOKEN__ACCESS_TOKEN_EXPIRE_MINUTES=90API_V1_STR=/api/v1```## Примеры:### Для разработки* создайте файл `dev.py````pythonfrom jwtserver.server import devif __name__ == &quot;__main__&quot;:    dev(host=&quot;localhost&quot;, port=5000, log_level=&quot;info&quot;)```### Интерактивная API документацияоткройте _Interactive API docs_ &lt;a href=&quot;http://localhost:5000/docs&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;http://localhost:5000/docs&lt;/a&gt;Вы увидите автоматическую интерактивную документацию по API.### Альтернативная API документацияоткройте _Alternative  API redoc_ &lt;a href=&quot;http://localhost:5000/redoc&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;http://localhost:5000/redoc&lt;/a&gt;### Для продукции* создайте файл `main.py````pythonfrom jwtserver.app import appapp.debug = False```* **Gunicorn:** `gunicorn main:app`## ЛицензияЭтот проект находится под лицензией Apache 2.0.</longdescription>
</pkgmetadata>