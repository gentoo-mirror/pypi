<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># voila-gridstackA gridstack-based template for [![voila-gridstack](assets/voila.png)](https://github.com/voila-dashboards/voila).&lt;table&gt;&lt;thead align=&quot;center&quot; cellspacing=&quot;10&quot;&gt;  &lt;tr&gt;    &lt;th align=&quot;center&quot; border=&quot;&quot;&gt;Gitter channel&lt;/th&gt;    &lt;th align=&quot;center&quot; border=&quot;&quot;&gt;Voila&lt;/th&gt;    &lt;th align=&quot;center&quot; border=&quot;&quot;&gt;JupyterLab extension&lt;/th&gt;  &lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;  &lt;tr background=&quot;#FFF&quot;&gt;    &lt;td align=&quot;center&quot;&gt;      &lt;a href=&quot;https://gitter.im/QuantStack/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge&quot;&gt;        &lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg&quot; alt=&quot;Join the Gitter Chat&quot;/&gt;      &lt;/a&gt;    &lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;      &lt;a href=&quot;https://mybinder.org/v2/gh/voila-dashboards/voila-gridstack/stable?urlpath=voila/tree/examples/scotch_dashboard.ipynb&quot;&gt;        &lt;img src=&quot;https://mybinder.org/badge_logo.svg&quot; alt=&quot;Voila GridStack on Binder&quot;/&gt;      &lt;/a&gt;    &lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;      &lt;a href=&quot;https://mybinder.org/v2/gh/voila-dashboards/voila-gridstack/stable?urlpath=lab/tree/examples&quot;&gt;        &lt;img src=&quot;https://mybinder.org/badge_logo.svg&quot; alt=&quot;JupyterLab on Binder&quot;/&gt;      &lt;/a&gt;    &lt;/td&gt;  &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;## Installation`voila-gridstack` can be installed with the mamba package manager```mamba install -c conda-forge voila-gridstack```or from PyPI```pip install voila-gridstack```## FormatThe template uses metadata defined in the notebook file (`.ipynb`) to configure the layout.The specification of the metadata was defined by a now defunct project `jupyter-dashboards`.The specification is described in `jupyter-dashboards`[docs](https://jupyter-dashboards-layout.readthedocs.io/en/latest/metadata.html).The voila renderer behaves as a &quot;display-only renderer without authoring capabilitiy&quot; as defined inthe specs. However, there are a few differences compared to the original implmentation:- if no metadata is found in the notebook voilà will render the notebook as `grid` layout,- it can not persist the state of the cells (i.e. the re-configuration of the layout will  be lost, when the user closes the voila page),- if the cell does not contain view configuration for the particular view type (`grid` or  `report`) or `hidden` attribute is not defined, voilà will treat it as **visible**.## UsageTo use the `gridstack` template, pass option `--template=gridstack` to the `voila` command line.![voila-gridstack](assets/voila-gridstack.gif)By default the position of cells in the dashboard will be fixed. If you want them to be draggableand resizable, you can launch voila with the `show_handles` resource set to `True`:```voila --template=gridstack examples/ --VoilaConfiguration.resources='{&quot;gridstack&quot;: {&quot;show_handles&quot;: True}}'```Note, however, that the state of the dashboard can not be persisted in the notebook.You can change the color scheme using the `theme` resource:```voila examples/ --template=gridstack --theme=dark```## DevelopmentTo install the template from source:```bash# create a new `conda` environmentconda create -n voila-gridstack -c conda-forge notebook python# activate the environmentconda activate voila-gridstack# install the package in development modepython -m pip install -e .# start voila with the gridstack templatevoila --template=gridstack```### Classic Notebook Extension![voila-gridstack](assets/classic-extension.gif)`voila-gridstack` provides an extension for the classic notebook to edit the gridstack layout from the notebook interface.To install this extension in development mode:```bash# activate the environmentconda activate voila-gridstack# link the local filesjupyter nbextension install --sys-prefix --symlink --overwrite --py voila_gridstack# enable the extensionjupyter nbextension enable --sys-prefix --py voila_gridstack# check the extension is installed and enabledjupyter nbextension list# start the notebookjupyter notebook```Then edit the files in `voila-gridstack/static` and reload the page to see the changes.### JupyterLab Extension![voila-gridstack](assets/jupyterlab-gridstack.gif)Note: You will need NodeJS to build the extension package.The `jlpm` command is JupyterLab's pinned version of[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use`yarn` or `npm` in lieu of `jlpm` below.```bash# activate the environmentconda activate voila-gridstack# install JupyterLabmamba install -c conda-forge jupyterlab# Install package in development modepip install -e .# Link your development version of the extension with JupyterLabjupyter labextension develop . --overwrite# Rebuild extension TypeScript source after making changesjlpm run build```You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.```bash# Watch the source directory in one terminal, automatically rebuilding when neededjlpm run watch# Run JupyterLab in another terminaljupyter lab```## LicenseWe use a shared copyright model that enables all contributors to maintain thecopyright on their contributions.This software is licensed under the BSD-3-Clause license. See the[LICENSE](LICENSE) file for details.</longdescription>
</pkgmetadata>