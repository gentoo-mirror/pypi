# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A fully modular framework for modeling and optimizing analog/photonic neural networks"

HOMEPAGE="https://github.com/Vivswan/AnalogVNN"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all dev doc flake8 full test"
DEPENDENCIES="dev-python/dataclasses[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	>=dev-python/numpy-1.16.5[${PYTHON_USEDEP}]
	dev-python/networkx[${PYTHON_USEDEP}]
	all? ( dev-python/analogvnn[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/setuptools-61.0.0[${PYTHON_USEDEP}] )
	dev? ( dev-python/flit[${PYTHON_USEDEP}] )
	dev? ( dev-python/build[${PYTHON_USEDEP}] )
	dev? ( dev-python/twine[${PYTHON_USEDEP}] )
	dev? ( dev-python/johnnydep[${PYTHON_USEDEP}] )
	doc? ( >=dev-python/sphinx-4.2.0[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-autobuild[${PYTHON_USEDEP}] )
	doc? ( dev-python/rst-to-myst[${PYTHON_USEDEP}] )
	doc? ( dev-python/furo[${PYTHON_USEDEP}] )
	doc? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-autoapi[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-notfound-page[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-inline-tabs[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinxext-opengraph[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinxcontrib-katex[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-docstrings[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-quotes[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-bugbear[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-comprehensions[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-executable[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-coding[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-return[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-deprecated[${PYTHON_USEDEP}] )
	full? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	full? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	full? ( dev-python/torchinfo[${PYTHON_USEDEP}] )
	full? ( dev-python/graphviz[${PYTHON_USEDEP}] )
	test? ( dev-python/analogvnn[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
