<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dadata API Client&gt; Data cleansing, enrichment and suggestions via [Dadata API](https://dadata.ru/api)[![PyPI Version][pypi-image]][pypi-url][![Build Status][build-image]][build-url][![Code Coverage][coverage-image]][coverage-url][![Code Quality][quality-image]][quality-url]Thin Python wrapper over Dadata API.## Installation```shpip install dadata```Requirements:-   Python 3.7+-   [httpx](https://pypi.org/project/httpx/)## UsageImport Dadata client and set API keys:```pythonfrom dadata import Dadatatoken = &quot;Replace with Dadata API key&quot;secret = &quot;Replace with Dadata secret key&quot;```Use `with Dadata()` if you want a context-managed client:```pythonwith Dadata(token, secret) as dadata:    ...```Alternatively, use `dadata.close()` if you want to close a client explicitly:```pythondadata = Dadata(token, secret)...dadata.close()```Call API methods as specified below.## Usage (async)Import Dadata client and set API keys:```pythonfrom dadata import DadataAsynctoken = &quot;Replace with Dadata API key&quot;secret = &quot;Replace with Dadata secret key&quot;```Use `async with DadataAsync()` if you want a context-managed client:```pythonasync with DadataAsync(token, secret) as dadata:    ...```Alternatively, use `await dadata.close()` if you want to close a client explicitly:```pythondadata = DadataAsync(token, secret)...await dadata.close()```Call API methods as specified below (add `async` / `await` keywords where applicable).## Postal Address### [Validate and cleanse address](https://dadata.ru/api/clean/address/)```python&gt;&gt;&gt; dadata.clean(name=&quot;address&quot;, source=&quot;мск сухонская 11 89&quot;){    'source': 'мск сухонская 11 89',    'result': 'г Москва, ул Сухонская, д 11, кв 89',    'postal_code': '127642',    'country': 'Россия',    'region': 'Москва',    'city_area': 'Северо-восточный',    'city_district': 'Северное Медведково',    'street': 'Сухонская',    'house': '11',    'flat': '89',    'flat_area': '34.6',    'flat_price': '6854710',    'fias_id': '5ee84ac0-eb9a-4b42-b814-2f5f7c27c255',    'timezone': 'UTC+3',    'geo_lat': '55.8782557',    'geo_lon': '37.65372',    'qc_geo': 0,    'qc': 0,    'metro': [ ... ],    ...}```### [Geocode address](https://dadata.ru/api/geocode/)Same API method as &quot;validate and cleanse&quot;:```python&gt;&gt;&gt; dadata.clean(name=&quot;address&quot;, source=&quot;москва сухонская 11&quot;){    'source': 'мск сухонская 11 89',    'result': 'г Москва, ул Сухонская, д 11, кв 89',    ...    'geo_lat': '55.8782557',    'geo_lon': '37.65372',    'beltway_hit': 'IN_MKAD',    'beltway_distance': None,    'qc_geo': 0,    ...}```### [Reverse geocode address](https://dadata.ru/api/geolocate/)```python&gt;&gt;&gt; dadata.geolocate(name=&quot;address&quot;, lat=55.878, lon=37.653)[    { 'value': 'г Москва, ул Сухонская, д 11', ... },    { 'value': 'г Москва, ул Сухонская, д 11А', ... },    { 'value': 'г Москва, ул Сухонская, д 13', ... },    ...]```### [GeoIP city](https://dadata.ru/api/iplocate/)```python&gt;&gt;&gt; dadata.iplocate(&quot;46.226.227.20&quot;){    'value': 'г Краснодар',    'unrestricted_value': '350000, Краснодарский край, г Краснодар',    'data': { ... }}```### [Autocomplete (suggest) address](https://dadata.ru/api/suggest/address/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;address&quot;, query=&quot;самара метал&quot;)[    { 'value': 'г Самара, пр-кт Металлургов', ... },    { 'value': 'г Самара, ул Металлистов', ... },    { 'value': 'г Самара, поселок Зубчаниновка, ул Металлургическая', ... },    ...]```Show suggestions in English:```python&gt;&gt;&gt; dadata.suggest(name=&quot;address&quot;, query=&quot;samara metal&quot;, language=&quot;en&quot;)[    { 'value': 'Russia, gorod Samara, prospekt Metallurgov', ... },    { 'value': 'Russia, gorod Samara, ulitsa Metallistov', ... },    { 'value': 'Russia, gorod Samara, poselok Zubchaninovka, ulitsa Metallurgicheskaya', ... },    ...]```Constrain by city (Yuzhno-Sakhalinsk):```python&gt;&gt;&gt; locations = [{ &quot;kladr_id&quot;: &quot;6500000100000&quot; }]&gt;&gt;&gt; dadata.suggest(name=&quot;address&quot;, query=&quot;Ватутина&quot;, locations=locations)[    {'value': 'г Южно-Сахалинск, ул Ватутина' ... }]```Constrain by specific geo point and radius (in Vologda city):```python&gt;&gt;&gt; geo = [{ &quot;lat&quot;: 59.244634,  &quot;lon&quot;: 39.913355, &quot;radius_meters&quot;: 200 }]&gt;&gt;&gt; dadata.suggest(name=&quot;address&quot;, query=&quot;сухонская&quot;, locations_geo=geo)[    {'value': 'г Вологда, ул Сухонская' ... }]```Boost city to top (Toliatti):```python&gt;&gt;&gt; boost = [{ &quot;kladr_id&quot;: &quot;6300000700000&quot; }]&gt;&gt;&gt; dadata.suggest(name=&quot;address&quot;, query=&quot;авто&quot;, locations_boost=boost)[    {'value': 'Самарская обл, г Тольятти, Автозаводское шоссе' ... },    {'value': 'Самарская обл, г Тольятти, ул Автомобилистов' ... },    {'value': 'Самарская обл, г Тольятти, ул Автостроителей' ... },    ...]```### [Find address by FIAS ID](https://dadata.ru/api/find-address/)```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;address&quot;, query=&quot;9120b43f-2fae-4838-a144-85e43c2bfb29&quot;)[    { 'value': 'г Москва, ул Снежная', ... }]```Find by KLADR ID:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;address&quot;, query=&quot;77000000000268400&quot;)```### [Find postal office](https://dadata.ru/api/suggest/postal_unit/)Suggest postal office by address or code:```python&gt;&gt;&gt; dadata.suggest(name=&quot;postal_unit&quot;, query=&quot;дежнева 2а&quot;)[    {        'value': '127642',        'unrestricted_value': 'г Москва, проезд Дежнёва, д 2А',        'data': { ... }    }]```Find postal office by code:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;postal_unit&quot;, query=&quot;127642&quot;)[    {        'value': '127642',        'unrestricted_value': 'г Москва, проезд Дежнёва, д 2А',        'data': { ... }    }]```Find nearest postal office:```python&gt;&gt;&gt; dadata.geolocate(name=&quot;postal_unit&quot;, lat=55.878, lon=37.653, radius_meters=1000)[    {        'value': '127642',        'unrestricted_value': 'г Москва, проезд Дежнёва, д 2А',        'data': { ... }    }]```### [Get City ID for delivery services](https://dadata.ru/api/delivery/)```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;delivery&quot;, query=&quot;3100400100000&quot;)[    {        'value': '3100400100000',        'unrestricted_value': 'fe7eea4a-875a-4235-aa61-81c2a37a0440',        'data': {            ...            'boxberry_id': '01929',            'cdek_id': '344',            'dpd_id': '196006461'        }    }]```### [Get address strictly according to FIAS](https://dadata.ru/api/find-fias/)```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;fias&quot;, query=&quot;9120b43f-2fae-4838-a144-85e43c2bfb29&quot;)[    { 'value': 'г Москва, ул Снежная', ... }]```### [Suggest country](https://dadata.ru/api/suggest/country/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;country&quot;, query=&quot;та&quot;)[    { 'value': 'Таджикистан', ... },    { 'value': 'Таиланд', ... },    { 'value': 'Тайвань', ... },    ...]```## Company or individual enterpreneur## [Find company by INN](https://dadata.ru/api/find-party/)```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;party&quot;, query=&quot;7707083893&quot;)[    {        'value': 'ПАО СБЕРБАНК',        'unrestricted_value': 'ПАО СБЕРБАНК',        'data': {            'inn': '7707083893',            'kpp': '773601001',            ...        }    },    ...]```Find by INN and KPP:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;party&quot;, query=&quot;7707083893&quot;, kpp=&quot;540602001&quot;)[    {        'value': 'СИБИРСКИЙ БАНК ПАО СБЕРБАНК',        'unrestricted_value': 'СИБИРСКИЙ БАНК ПАО СБЕРБАНК',        'data': {            'inn': '7707083893',            'kpp': '540602001',            ...        }    }]```### [Suggest company](https://dadata.ru/api/suggest/party/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;party&quot;, query=&quot;сбер&quot;)[    { 'value': 'ПАО СБЕРБАНК', ... },    { 'value': 'АО &quot;СБЕРБРОКЕР&quot;', ... },    { 'value': 'АО &quot;СБЕРИНВЕСТКАПИТАЛ&quot;', ... },    ...]```Constrain by specific regions (Saint Petersburg and Leningradskaya oblast):```python&gt;&gt;&gt; locations = [{ &quot;kladr_id&quot;: &quot;7800000000000&quot; }, { &quot;kladr_id&quot;: &quot;4700000000000&quot;}]&gt;&gt;&gt; dadata.suggest(name=&quot;party&quot;, query=&quot;сбер&quot;, locations=locations)```Constrain by active companies:```python&gt;&gt;&gt; dadata.suggest(name=&quot;party&quot;, query=&quot;сбер&quot;, status=[&quot;ACTIVE&quot;])```Constrain by individual entrepreneurs:```python&gt;&gt;&gt; dadata.suggest(name=&quot;party&quot;, query=&quot;сбер&quot;, type=&quot;INDIVIDUAL&quot;)```Constrain by head companies, no branches:```python&gt;&gt;&gt; dadata.suggest(name=&quot;party&quot;, query=&quot;сбер&quot;, branch_type=[&quot;MAIN&quot;])```### [Find affiliated companies](https://dadata.ru/api/find-affiliated/)```python&gt;&gt;&gt; dadata.find_affiliated(&quot;7736207543&quot;)[    { 'value': 'ООО &quot;ДЗЕН.ПЛАТФОРМА&quot;', ... },    { 'value': 'ООО &quot;ЕДАДИЛ&quot;', ... },    { 'value': 'ООО &quot;ЗНАНИЕ&quot;', ... },    ...]```Search only by manager INN:```python&gt;&gt;&gt; dadata.find_affiliated(&quot;773006366201&quot;, scope=[&quot;MANAGERS&quot;])[    { 'value': 'ООО &quot;ЯНДЕКС&quot;', ... },    { 'value': 'МФ &quot;ФОИ&quot;', ... },    { 'value': 'АНО ДПО &quot;ШАД&quot;', ... },]```## Bank### [Find bank by BIC, SWIFT or INN](https://dadata.ru/api/find-bank/)```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;bank&quot;, query=&quot;044525225&quot;)[    {        'value': 'ПАО Сбербанк',        'unrestricted_value': 'ПАО Сбербанк',        'data': {            'bic': '044525225',            'swift': 'SABRRUMM',            'inn': '7707083893',            ...        }    }]```Find by SWIFT code:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;bank&quot;, query=&quot;SABRRUMM&quot;)```Find by INN:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;bank&quot;, query=&quot;7728168971&quot;)```Find by INN and KPP:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;bank&quot;, query=&quot;7728168971&quot;, kpp=&quot;667102002&quot;)```Find by registration number:```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;bank&quot;, query=&quot;1481&quot;)```### [Suggest bank](https://dadata.ru/api/suggest/bank/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;bank&quot;, query=&quot;ти&quot;)[    { 'value': 'АО «Тимер Банк»', ... },    { 'value': 'АО «Тинькофф Банк»', ... },    { 'value': '«Азиатско-Тихоокеанский Банк» (ПАО)', ... },    ...]```## Personal name### [Validate and cleanse name](https://dadata.ru/api/clean/name/)```python&gt;&gt;&gt; dadata.clean(name=&quot;name&quot;, source=&quot;Срегей владимерович иванов&quot;){    'source': 'Срегей владимерович иванов',    'result': 'Иванов Сергей Владимирович',    ...    'surname': 'Иванов',    'name': 'Сергей',    'patronymic': 'Владимирович',    'gender': 'М',    'qc': 1}```### [Suggest name](https://dadata.ru/api/suggest/name/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;fio&quot;, query=&quot;викт&quot;)[    { 'value': 'Виктор', ... },    { 'value': 'Виктория', ... },    { 'value': 'Викторова', ... },    ...]```Suggest female first name:```python&gt;&gt;&gt; dadata.suggest(name=&quot;fio&quot;, query=&quot;викт&quot;, parts=[&quot;NAME&quot;], gender=&quot;FEMALE&quot;)[    { 'value': 'Виктория', ... },    { 'value': 'Викторина', ... }]```## Phone### [Validate and cleanse phone](https://dadata.ru/api/clean/phone/)```python&gt;&gt;&gt; dadata.clean(name=&quot;phone&quot;, source=&quot;9168-233-454&quot;){    'source': '9168-233-454',    'type': 'Мобильный',    'phone': '+7 916 823-34-54',    'provider': 'ПАО &quot;Мобильные ТелеСистемы&quot;',    'country': 'Россия',    'region': 'Москва и Московская область',    'timezone': 'UTC+3',    'qc': 0,    ...}```## Passport### [Validate passport](https://dadata.ru/api/clean/passport/)```python&gt;&gt;&gt; dadata.clean(name=&quot;passport&quot;, source=&quot;4509 235857&quot;){    'source': '4509 235857',    'series': '45 09',    'number': '235857',    'qc': 0}```### [Suggest issued by](https://dadata.ru/api/suggest/fms_unit/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;fms_unit&quot;, query=&quot;772 053&quot;)[    { 'value': 'ОВД ЗЮЗИНО Г. МОСКВЫ', ... },    { 'value': 'ОВД РАЙОНА ЗЮЗИНО УВД ЮГО-ЗАО Г. МОСКВЫ', ... },    { 'value': 'ПАСПОРТНО-ВИЗОВЫМ ОТДЕЛЕНИЕМ ОВД РАЙОНА ЗЮЗИНО Г. МОСКВЫ', ... },    ...]```## Email### [Validate email](https://dadata.ru/api/clean/email/)```python&gt;&gt;&gt; dadata.clean(name=&quot;email&quot;, source=&quot;serega@yandex/ru&quot;){    'source': 'serega@yandex/ru',    'email': 'serega@yandex.ru',    'local': 'serega',    'domain': 'yandex.ru',    'type': 'PERSONAL',    'qc': 4}```### [Suggest email](https://dadata.ru/api/suggest/email/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;email&quot;, query=&quot;maria@&quot;)[    { 'value': 'maria@mail.ru', ... },    { 'value': 'maria@gmail.com', ... },    { 'value': 'maria@yandex.ru', ... },    ...]```## Other datasets### [Tax office](https://dadata.ru/api/suggest/fns_unit/)```python&gt;&gt;&gt; dadata.find_by_id(name=&quot;fns_unit&quot;, query=&quot;5257&quot;)[    {        'value': 'Инспекция ФНС России по Канавинскому району г.Нижнего Новгорода',        'unrestricted_value': 'Инспекция ФНС России по Канавинскому району г.Нижнего Новгорода',        'data': {            'code': '5257'            'oktmo': '22701000',            'inn': '5257046101',            'kpp': '525701001',            ...        }    }]```### [Regional court](https://dadata.ru/api/suggest/region_court/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;region_court&quot;, query=&quot;таганско&quot;)[    { 'value': 'Судебный участок № 371 Таганского судебного района г. Москвы', ... },    { 'value': 'Судебный участок № 372 Таганского судебного района г. Москвы', ... },    { 'value': 'Судебный участок № 373 Таганского судебного района г. Москвы', ... },    ...]```### [Metro station](https://dadata.ru/api/suggest/metro/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;metro&quot;, query=&quot;алек&quot;)[    { 'value': 'Александровский сад', ... },    { 'value': 'Алексеевская', ... },    { 'value': 'Площадь Александра Невского 1', ... },    ...]```Constrain by city (Saint Petersburg):```python&gt;&gt;&gt; filters = [{ &quot;city&quot;: &quot;Санкт-Петербург&quot; }]&gt;&gt;&gt; dadata.suggest(name=&quot;metro&quot;, query=&quot;алек&quot;, filters=filters)[    { 'value': 'Площадь Александра Невского 1', ... },    { 'value': 'Площадь Александра Невского 2', ... }]```### [Car brand](https://dadata.ru/api/suggest/car_brand/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;car_brand&quot;, query=&quot;фо&quot;)[    { 'value': 'Volkswagen', ... },    { 'value': 'Ford', ... },    { 'value': 'Foton', ... }]```### [Currency](https://dadata.ru/api/suggest/currency/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;currency&quot;, query=&quot;руб&quot;)[    { 'value': 'Белорусский рубль', ... },    { 'value': 'Российский рубль', ... }]```### [OKVED 2](https://dadata.ru/api/suggest/okved2/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;okved2&quot;, query=&quot;космических&quot;)[    { 'value': 'Производство космических аппаратов (в том числе спутников), ракет-носителей', ... },    { 'value': 'Производство автоматических космических аппаратов', ... },    { 'value': 'Деятельность космических лабораторий', ... },    ...]```### [OKPD 2](https://dadata.ru/api/suggest/okpd2/)```python&gt;&gt;&gt; dadata.suggest(name=&quot;okpd2&quot;, query=&quot;калоши&quot;)[    { 'value': 'Услуги по обрезинованию валенок (рыбацкие калоши)', ... }]```## Profile APIBalance:```python&gt;&gt;&gt; dadata.get_balance()8238.20```Usage stats:```python&gt;&gt;&gt; dadata.get_daily_stats(){    'date': '2020-07-27',    'services': {        'merging': 0,        'suggestions': 45521,        'clean': 1200    }}```Dataset versions:```python&gt;&gt;&gt; dadata.get_versions(){    'dadata': { 'version': 'stable (9048:bf33b2acc8ba)' },    'factor': {        'resources': { ... },        'version': '20.06 (eb70078e)'    },    'suggestions': {        'resources': { ... },        'version': '20.5 (b55eb7c4)'    }}```## Development setup```sh$ python3 -m venv env$ . env/bin/activate$ make deps$ tox```## ContributingPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.Make sure to add or update tests as appropriate.Use [Black](https://black.readthedocs.io/en/stable/) for code formatting and [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0-beta.4/) for commit messages.## [Changelog](CHANGELOG.md)This library uses [CalVer](https://calver.org/) with YY.MM.MICRO schema. See changelog for details specific to each release.## License[MIT](https://choosealicense.com/licenses/mit/)&lt;!-- Markdown link &amp; img dfn's --&gt;[pypi-image]: https://img.shields.io/pypi/v/dadata?style=flat-square[pypi-url]: https://pypi.org/project/dadata/[build-image]: https://img.shields.io/travis/hflabs/dadata-py?style=flat-square[build-url]: https://travis-ci.org/hflabs/dadata-py[coverage-image]: https://img.shields.io/coveralls/github/hflabs/dadata-py?style=flat-square[coverage-url]: https://coveralls.io/github/hflabs/dadata-py[quality-image]: https://img.shields.io/codeclimate/maintainability/hflabs/dadata-py?style=flat-square[quality-url]: https://codeclimate.com/github/hflabs/dadata-py</longdescription>
</pkgmetadata>