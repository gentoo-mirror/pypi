<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>see: dir for humans===================.. image:: https://img.shields.io/pypi/v/see.svg    :target: https://pypi.python.org/pypi/see.. see/docs &lt;common-badges&gt;.. image:: https://travis-ci.org/ljcooke/see.svg?branch=develop    :target: https://travis-ci.org/ljcooke/see.. image:: https://coveralls.io/repos/github/ljcooke/see/badge.svg?branch=develop    :target: https://coveralls.io/github/ljcooke/see?branch=develop.. see/docs &lt;/common-badges&gt;.. see/docs &lt;summary&gt;**see** is an alternative to ``dir()``, for Python 2.6+ and 3.3+.It neatly summarises what you can do with an object.Use it to inspect your code or learn new APIs... see/docs &lt;/summary&gt;.. contents::Example-------.. For examples, use a 64-column terminal and set sys.ps1 = '&gt;&gt;&gt; '.. see/docs &lt;example&gt;Say you have an object which you'd like to know more about::    &gt;&gt;&gt; from datetime import timedeltaTry inspecting the object with ``see``::    &gt;&gt;&gt; see(timedelta)        isclass             +                   -        *                   /                   //        %                   +obj                -obj        &lt;                   &lt;=                  ==        !=                  &gt;                   &gt;=        abs()               bool()              dir()        divmod()            hash()              help()        repr()              str()               .days        .max                .microseconds       .min        .resolution         .seconds            .total_seconds()Here we can discover some things about it, such as:* The object is a class.* You can add something to it with the ``+`` operator.* It has a ``seconds`` attribute.* It has a ``total_seconds`` attribute which is a function.Compare with the output of ``dir``::    &gt;&gt;&gt; dir(timedelta)    ['__abs__', '__add__', '__bool__', '__class__', '__delattr__', '    __dir__', '__divmod__', '__doc__', '__eq__', '__floordiv__', '__    format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '    __init__', '__init_subclass__', '__le__', '__lt__', '__mod__', '    __mul__', '__ne__', '__neg__', '__new__', '__pos__', '__radd__',     '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rf    loordiv__', '__rmod__', '__rmul__', '__rsub__', '__rtruediv__',    '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclassho    ok__', '__truediv__', 'days', 'max', 'microseconds', 'min', 'res    olution', 'seconds', 'total_seconds']You can filter the results of ``see`` using a wildcard patternor a regular expression::    &gt;&gt;&gt; see(timedelta).filter('*sec*')        .microseconds       .seconds            .total_seconds()    &gt;&gt;&gt; see(timedelta).filter('/^d/')        dir()       divmod().. see/docs &lt;/example&gt;Documentation-------------Documentation is available at https://ljcooke.github.io/see/* `Installation &lt;https://ljcooke.github.io/see/install.html&gt;`_* `Usage &lt;https://ljcooke.github.io/see/usage.html&gt;`_* `Startup File &lt;https://ljcooke.github.io/see/startup.html&gt;`_* `Developer Reference &lt;https://ljcooke.github.io/see/dev/index.html&gt;`_Contributing------------The source code is maintained`on GitHub &lt;https://github.com/ljcooke/see&gt;`_.Contributions are welcome.* `Change Log &lt;https://github.com/ljcooke/see/blob/develop/CHANGELOG.rst&gt;`_* `Code of Conduct &lt;https://github.com/ljcooke/see/blob/develop/CODE_OF_CONDUCT.md&gt;`_* `Authors &lt;https://github.com/ljcooke/see/blob/develop/AUTHORS.rst&gt;`_* `License &lt;https://github.com/ljcooke/see/blob/develop/LICENSE&gt;`_</longdescription>
</pkgmetadata>