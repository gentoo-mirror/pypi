<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Rita Logo](docs/assets/logo-2.png)# RITA DSL[![Documentation Status](https://readthedocs.org/projects/rita-dsl/badge/?version=latest)](http://rita-dsl.readthedocs.io/?badge=latest)[![codecov](https://codecov.io/gh/zaibacu/rita-dsl/branch/master/graph/badge.svg)](https://codecov.io/gh/zaibacu/rita-dsl)[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/zaibacu/rita-dsl/graphs/commit-activity)[![PyPI version fury.io](https://badge.fury.io/py/rita-dsl.svg)](https://pypi.python.org/pypi/rita-dsl/)[![PyPI download month](https://img.shields.io/pypi/dm/rita-dsl.svg)](https://pypi.python.org/pypi/rita-dsl/)[![GitHub license](https://img.shields.io/github/license/zaibacu/rita-dsl.svg)](https://github.com/zaibacu/rita-dsl/blob/master/LICENSE)This is a language, loosely based on language [Apache UIMA RUTA](https://uima.apache.org/ruta.html), focused on writing manual language rules, which compiles into either [spaCy](https://github.com/explosion/spaCy) compatible patterns, or pure regex. These patterns can be used for doing [manual NER](https://spacy.io/api/entityruler) as well as used in other processes, like retokenizing and pure matching## An Introduction Video[![Intro](https://img.youtube.com/vi/GScerMeWz68/0.jpg)](https://www.youtube.com/watch?v=GScerMeWz68)## Links- [Website](https://rita-dsl.io/)- [Live Demo](https://rita-dsl.io/#demo)- [Simple Chat bot example](https://repl.it/talk/share/Simple-chatbot-done-with-Rita/53471)- [Documentation](http://rita-dsl.readthedocs.io/)- [QuickStart](https://rita-dsl.readthedocs.io/en/latest/quickstart/)- [Language Syntax Plugin for IntelijJ based IDEs](https://plugins.jetbrains.com/plugin/15011-rita-language) ## Support[![reddit](https://img.shields.io/reddit/subreddit-subscribers/ritaDSL?style=social)](https://www.reddit.com/r/ritaDSL/)[![Gitter](https://badges.gitter.im/rita-dsl/community.svg)](https://gitter.im/rita-dsl/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)## Install`pip install rita-dsl`## Simple Rules example```pythonrules = &quot;&quot;&quot;cuts = {&quot;fitted&quot;, &quot;wide-cut&quot;}lengths = {&quot;short&quot;, &quot;long&quot;, &quot;calf-length&quot;, &quot;knee-length&quot;}fabric_types = {&quot;soft&quot;, &quot;airy&quot;, &quot;crinkled&quot;}fabrics = {&quot;velour&quot;, &quot;chiffon&quot;, &quot;knit&quot;, &quot;woven&quot;, &quot;stretch&quot;}{IN_LIST(cuts)?, IN_LIST(lengths), WORD(&quot;dress&quot;)}-&gt;MARK(&quot;DRESS_TYPE&quot;){IN_LIST(lengths), IN_LIST(cuts), WORD(&quot;dress&quot;)}-&gt;MARK(&quot;DRESS_TYPE&quot;){IN_LIST(fabric_types)?, IN_LIST(fabrics)}-&gt;MARK(&quot;DRESS_FABRIC&quot;)&quot;&quot;&quot;```### Loading in spaCy```pythonimport spacyfrom rita.shortcuts import setup_spacynlp = spacy.load(&quot;en&quot;)setup_spacy(nlp, rules_string=rules)```And using it:```python&gt;&gt;&gt; r = nlp(&quot;She was wearing a short wide-cut dress&quot;)&gt;&gt;&gt; [{&quot;label&quot;: e.label_, &quot;text&quot;: e.text} for e in r.ents][{'label': 'DRESS_TYPE', 'text': 'short wide-cut dress'}]```### Loading using Regex (standalone)```pythonimport ritapatterns = rita.compile_string(rules, use_engine=&quot;standalone&quot;)```And using it:```python&gt;&gt;&gt; list(patterns.execute(&quot;She was wearing a short wide-cut dress&quot;))[{'end': 38, 'label': 'DRESS_TYPE', 'start': 18, 'text': 'short wide-cut dress'}]```</longdescription>
</pkgmetadata>