<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. note::   For the latest source, discussion, etc, please visit the   `GitHub repository &lt;https://github.com/spotify/luigi&gt;`_.. figure:: https://raw.githubusercontent.com/spotify/luigi/master/doc/luigi.png   :alt: Luigi Logo   :align: center.. image:: https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fspotify%2Fluigi%2Fbadge&amp;label=build&amp;logo=none&amp;%3Fref%3Dmaster&amp;style=flat    :target: https://actions-badge.atrox.dev/spotify/luigi/goto?ref=master.. image:: https://img.shields.io/codecov/c/github/spotify/luigi/master.svg?style=flat    :target: https://codecov.io/gh/spotify/luigi?branch=master.. image:: https://img.shields.io/pypi/v/luigi.svg?style=flat   :target: https://pypi.python.org/pypi/luigi.. image:: https://img.shields.io/pypi/l/luigi.svg?style=flat   :target: https://pypi.python.org/pypi/luigiLuigi is a Python (3.6, 3.7, 3.8, 3.9, 3.10 tested) package that helps you build complexpipelines of batch jobs. It handles dependency resolution, workflow management,visualization, handling failures, command line integration, and much more.Getting Started---------------Run ``pip install luigi`` to install the latest stable version from `PyPI&lt;https://pypi.python.org/pypi/luigi&gt;`_. `Documentation for the latest release&lt;https://luigi.readthedocs.io/en/stable/&gt;`__ is hosted on readthedocs.Run ``pip install luigi[toml]`` to install Luigi with `TOML-based configs&lt;https://luigi.readthedocs.io/en/stable/configuration.html&gt;`__ support.For the bleeding edge code, ``pip installgit+https://github.com/spotify/luigi.git``. `Bleeding edge documentation&lt;https://luigi.readthedocs.io/en/latest/&gt;`__ is also available.Background----------The purpose of Luigi is to address all the plumbing typically associatedwith long-running batch processes. You want to chain many tasks,automate them, and failures *will* happen. These tasks can be anything,but are typically long running things like`Hadoop &lt;http://hadoop.apache.org/&gt;`_ jobs, dumping data to/fromdatabases, running machine learning algorithms, or anything else.There are other software packages that focus on lower level aspects ofdata processing, like `Hive &lt;http://hive.apache.org/&gt;`__,`Pig &lt;http://pig.apache.org/&gt;`_, or`Cascading &lt;http://www.cascading.org/&gt;`_. Luigi is not a framework toreplace these. Instead it helps you stitch many tasks together, whereeach task can be a `Hive query &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.hive.html&gt;`__,a `Hadoop job in Java &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.hadoop_jar.html&gt;`_,a  `Spark job in Scala or Python &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.spark.html&gt;`_,a Python snippet,`dumping a table &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.sqla.html&gt;`_from a database, or anything else. It's easy to build uplong-running pipelines that comprise thousands of tasks and take days orweeks to complete. Luigi takes care of a lot of the workflow managementso that you can focus on the tasks themselves and their dependencies.You can build pretty much any task you want, but Luigi also comes with a*toolbox* of several common task templates that you use. It includessupport for running`Python mapreduce jobs &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.hadoop.html&gt;`_in Hadoop, as well as`Hive &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.hive.html&gt;`__,and `Pig &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.pig.html&gt;`__,jobs. It also comes with`file system abstractions for HDFS &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.hdfs.html&gt;`_,and local files that ensures all file system operations are atomic. Thisis important because it means your data pipeline will not crash in astate containing partial data.Visualiser page---------------The Luigi server comes with a web interface too, so you can search and filteramong all your tasks... figure:: https://raw.githubusercontent.com/spotify/luigi/master/doc/visualiser_front_page.png   :alt: Visualiser pageDependency graph example------------------------Just to give you an idea of what Luigi does, this is a screen shot fromsomething we are running in production. Using Luigi's visualiser, we geta nice visual overview of the dependency graph of the workflow. Eachnode represents a task which has to be run. Green tasks are alreadycompleted whereas yellow tasks are yet to be run. Most of these tasksare Hadoop jobs, but there are also some things that run locally andbuild up data files... figure:: https://raw.githubusercontent.com/spotify/luigi/master/doc/user_recs.png   :alt: Dependency graphPhilosophy----------Conceptually, Luigi is similar to `GNUMake &lt;http://www.gnu.org/software/make/&gt;`_ where you have certain tasksand these tasks in turn may have dependencies on other tasks. There arealso some similarities to `Oozie &lt;http://oozie.apache.org/&gt;`_and `Azkaban &lt;https://azkaban.github.io/&gt;`_. One majordifference is that Luigi is not just built specifically for Hadoop, andit's easy to extend it with other kinds of tasks.Everything in Luigi is in Python. Instead of XML configuration orsimilar external data files, the dependency graph is specified *withinPython*. This makes it easy to build up complex dependency graphs oftasks, where the dependencies can involve date algebra or recursivereferences to other versions of the same task. However, the workflow cantrigger things not in Python, such as running`Pig scripts &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.pig.html&gt;`_or `scp'ing files &lt;https://luigi.readthedocs.io/en/latest/api/luigi.contrib.ssh.html&gt;`_.Who uses Luigi?---------------We use Luigi internally at `Spotify &lt;https://www.spotify.com&gt;`_ to runthousands of tasks every day, organized in complex dependency graphs.Most of these tasks are Hadoop jobs. Luigi provides an infrastructurethat powers all kinds of stuff including recommendations, toplists, A/Btest analysis, external reports, internal dashboards, etc.Since Luigi is open source and without any registration walls, the exact numberof Luigi users is unknown. But based on the number of unique contributors, weexpect hundreds of enterprises to use it. Some users have written blog postsor held presentations about Luigi:* `Spotify &lt;https://www.spotify.com&gt;`_ `(presentation, 2014) &lt;http://www.slideshare.net/erikbern/luigi-presentation-nyc-data-science&gt;`__* `Foursquare &lt;https://foursquare.com/&gt;`_ `(presentation, 2013) &lt;http://www.slideshare.net/OpenAnayticsMeetup/luigi-presentation-17-23199897&gt;`__* `Mortar Data (Datadog) &lt;https://www.datadoghq.com/&gt;`_ `(documentation / tutorial) &lt;http://help.mortardata.com/technologies/luigi&gt;`__* `Stripe &lt;https://stripe.com/&gt;`_ `(presentation, 2014) &lt;http://www.slideshare.net/PyData/python-as-part-of-a-production-machine-learning-stack-by-michael-manapat-pydata-sv-2014&gt;`__* `Buffer &lt;https://buffer.com/&gt;`_ `(blog, 2014) &lt;https://overflow.bufferapp.com/2014/10/31/buffers-new-data-architecture/&gt;`__* `SeatGeek &lt;https://seatgeek.com/&gt;`_ `(blog, 2015) &lt;http://chairnerd.seatgeek.com/building-out-the-seatgeek-data-pipeline/&gt;`__* `Treasure Data &lt;https://www.treasuredata.com/&gt;`_ `(blog, 2015) &lt;http://blog.treasuredata.com/blog/2015/02/25/managing-the-data-pipeline-with-git-luigi/&gt;`__* `Growth Intelligence &lt;http://growthintel.com/&gt;`_ `(presentation, 2015) &lt;http://www.slideshare.net/growthintel/a-beginners-guide-to-building-data-pipelines-with-luigi&gt;`__* `AdRoll &lt;https://www.adroll.com/&gt;`_ `(blog, 2015) &lt;http://tech.adroll.com/blog/data/2015/09/22/data-pipelines-docker.html&gt;`__* 17zuoye `(presentation, 2015) &lt;https://speakerdeck.com/mvj3/luiti-an-offline-task-management-framework&gt;`__* `Custobar &lt;https://www.custobar.com/&gt;`_ `(presentation, 2016) &lt;http://www.slideshare.net/teemukurppa/managing-data-workflows-with-luigi&gt;`__* `Blendle &lt;https://launch.blendle.com/&gt;`_ `(presentation) &lt;http://www.anneschuth.nl/wp-content/uploads/sea-anneschuth-streamingblendle.pdf#page=126&gt;`__* `TrustYou &lt;http://www.trustyou.com/&gt;`_ `(presentation, 2015) &lt;https://speakerdeck.com/mfcabrera/pydata-berlin-2015-processing-hotel-reviews-with-python&gt;`__* `Groupon &lt;https://www.groupon.com/&gt;`_ / `OrderUp &lt;https://orderup.com&gt;`_ `(alternative implementation) &lt;https://github.com/groupon/luigi-warehouse&gt;`__* `Red Hat - Marketing Operations &lt;https://www.redhat.com&gt;`_ `(blog, 2017) &lt;https://github.com/rh-marketingops/rh-mo-scc-luigi&gt;`__* `GetNinjas &lt;https://www.getninjas.com.br/&gt;`_ `(blog, 2017) &lt;https://labs.getninjas.com.br/using-luigi-to-create-and-monitor-pipelines-of-batch-jobs-eb8b3cd2a574&gt;`__* `voyages-sncf.com &lt;https://www.voyages-sncf.com/&gt;`_ `(presentation, 2017) &lt;https://github.com/voyages-sncf-technologies/meetup-afpy-nantes-luigi&gt;`__* `Open Targets &lt;https://www.opentargets.org/&gt;`_ `(blog, 2017) &lt;https://blog.opentargets.org/using-containers-with-luigi&gt;`__* `Leipzig University Library &lt;https://ub.uni-leipzig.de&gt;`_ `(presentation, 2016) &lt;https://de.slideshare.net/MartinCzygan/build-your-own-discovery-index-of-scholary-eresources&gt;`__ / `(project) &lt;https://finc.info/de/datenquellen&gt;`__* `Synetiq &lt;https://synetiq.net/&gt;`_ `(presentation, 2017) &lt;https://www.youtube.com/watch?v=M4xUQXogSfo&gt;`__* `Glossier &lt;https://www.glossier.com/&gt;`_ `(blog, 2018) &lt;https://medium.com/glossier/how-to-build-a-data-warehouse-what-weve-learned-so-far-at-glossier-6ff1e1783e31&gt;`__* `Data Revenue &lt;https://www.datarevenue.com/&gt;`_ `(blog, 2018) &lt;https://www.datarevenue.com/en/blog/how-to-scale-your-machine-learning-pipeline&gt;`_* `Uppsala University &lt;http://pharmb.io&gt;`_ `(tutorial) &lt;http://uppnex.se/twiki/do/view/Courses/EinfraMPS2015/Luigi.html&gt;`_   / `(presentation, 2015) &lt;https://www.youtube.com/watch?v=f26PqSXZdWM&gt;`_ / `(slides, 2015) &lt;https://www.slideshare.net/SamuelLampa/building-workflows-with-spotifys-luigi&gt;`_ / `(poster, 2015) &lt;https://pharmb.io/poster/2015-sciluigi/&gt;`_ / `(paper, 2016) &lt;https://doi.org/10.1186/s13321-016-0179-6&gt;`_ / `(project) &lt;https://github.com/pharmbio/sciluigi&gt;`_* `GIPHY &lt;https://giphy.com/&gt;`_ `(blog, 2019) &lt;https://engineering.giphy.com/luigi-the-10x-plumber-containerizing-scaling-luigi-in-kubernetes/&gt;`__* `xtream &lt;https://xtreamers.io/&gt;`__ `(blog, 2019) &lt;https://towardsdatascience.com/lessons-from-a-real-machine-learning-project-part-1-from-jupyter-to-luigi-bdfd0b050ca5&gt;`__* `CIAN &lt;https://cian.ru/&gt;`__ `(presentation, 2019) &lt;https://www.highload.ru/moscow/2019/abstracts/6030&gt;`__Some more companies are using Luigi but haven't had a chance yet to write about it:* `Schibsted &lt;http://www.schibsted.com/&gt;`_* `enbrite.ly &lt;http://enbrite.ly/&gt;`_* `Dow Jones / The Wall Street Journal &lt;http://wsj.com&gt;`_* `Hotels.com &lt;https://hotels.com&gt;`_* `Newsela &lt;https://newsela.com&gt;`_* `Squarespace &lt;https://www.squarespace.com/&gt;`_* `OAO &lt;https://adops.com/&gt;`_* `Grovo &lt;https://grovo.com/&gt;`_* `Weebly &lt;https://www.weebly.com/&gt;`_* `Deloitte &lt;https://www.Deloitte.co.uk/&gt;`_* `Stacktome &lt;https://stacktome.com/&gt;`_* `LINX+Neemu+Chaordic &lt;https://www.chaordic.com.br/&gt;`_* `Foxberry &lt;https://www.foxberry.com/&gt;`_* `Okko &lt;https://okko.tv/&gt;`_* `ISVWorld &lt;http://isvworld.com/&gt;`_* `Big Data &lt;https://bigdata.com.br/&gt;`_* `Movio &lt;https://movio.co.nz/&gt;`_* `Bonnier News &lt;https://www.bonniernews.se/&gt;`_* `Starsky Robotics &lt;https://www.starsky.io/&gt;`_* `BaseTIS &lt;https://www.basetis.com/&gt;`_* `Hopper &lt;https://www.hopper.com/&gt;`_* `VOYAGE GROUP/Zucks &lt;https://zucks.co.jp/en/&gt;`_* `Textpert &lt;https://www.textpert.ai/&gt;`_* `Tracktics &lt;https://www.tracktics.com/&gt;`_* `Whizar &lt;https://www.whizar.com/&gt;`_* `xtream &lt;https://www.xtreamers.io/&gt;`__* `Skyscanner &lt;https://www.skyscanner.net/&gt;`_* `Jodel &lt;https://www.jodel.com/&gt;`_* `Mekar &lt;https://mekar.id/en/&gt;`_* `M3 &lt;https://corporate.m3.com/en/&gt;`_* `Assist Digital &lt;https://www.assistdigital.com/&gt;`_* `Meltwater &lt;https://www.meltwater.com/&gt;`_* `DevSamurai &lt;https://www.devsamurai.com/&gt;`_We're more than happy to have your company added here. Just send a PR on GitHub.External links--------------* `Mailing List &lt;https://groups.google.com/d/forum/luigi-user/&gt;`_ for discussions and asking questions. (Google Groups)* `Releases &lt;https://pypi.python.org/pypi/luigi&gt;`_ (PyPI)* `Source code &lt;https://github.com/spotify/luigi&gt;`_ (GitHub)* `Hubot Integration &lt;https://github.com/houzz/hubot-luigi&gt;`_ plugin for Slack, Hipchat, etc (GitHub)Authors-------Luigi was built at `Spotify &lt;https://www.spotify.com&gt;`_, mainly by`Erik Bernhardsson &lt;https://github.com/erikbern&gt;`_ and`Elias Freider &lt;https://github.com/freider&gt;`_.`Many other people &lt;https://github.com/spotify/luigi/graphs/contributors&gt;`_have contributed since open sourcing in late 2012.`Arash Rouhani &lt;https://github.com/tarrasch&gt;`_ was the chief maintainer from 2015 to 2019, and nowSpotify's Data Team maintains Luigi.</longdescription>
</pkgmetadata>