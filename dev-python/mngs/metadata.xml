<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Requirements```chardetGitPythonh5pyjoblibmatplotlibnatsortnumpypandaspymatreaderPyYAMLscipyseabornsklearnstatsmodelstorchxmltodict```## Installation``` bash$ pip install mngsor$ pip install git+https://github.com/ywatanabe1989/mngs.git@develop```## mngs.general.save``` pythonimport mngsimport numpy as npimport matplotlib.pyplot as pltimport pandas as pd## numpyarr = np.arange(10)mngs.general.save(arr, 'spath.npy')## pandasdf = pd.DataFrame(arr)mngs.general.save(df, 'spath.csv')## matplotlibfig, ax = plt.subplots()ax.plot(arr)mngs.general.save(fig, 'spath.png)```## mngs.general.load``` pythonimport mngsarr = mngs.general.load('spath.npy')arr = mngs.general.load('spath.mat')df = mngs.general.load('spath.npy')yaml_dict = mngs.general.load('spath.yaml')hdf5_dict = mngs.general.load('spath.hdf5')```## mngs.general.fix_seeds``` pythonimport mngsimport osimport randomimport numpy as npimport torchmngs.general.fix_seeds(os=os, random=random, np=np, torch=torch, tf=None, seed=42)```## mngs.general.tee``` pythonimport syssys.stdout, sys.stderr = tee(sys)print(&quot;abc&quot;)  # also wrriten in stdoutprint(1 / 0)  # also wrriten in stderr```## mngs.plt.configure_mpl``` pythonconfigure_mpl(    plt,    dpi=100,    figsize=(16.2, 10),    figscale=1.0,    fontsize=16,    labelsize=&quot;same&quot;,    legendfontsize=&quot;xx-small&quot;,    tick_size=&quot;auto&quot;,    tick_width=&quot;auto&quot;,    hide_spines=False,)```## mngs.plt.ax_*- mngs.plt.ax_extend- mngs.plt.ax_scientific_notation- mngs.plt.ax_set_position## mngs.ml.ReporterNow, classification task is available.``` pythonreporter = mngs.ml.Reporter(sdir=log_dir)for i_fold in range(N_FOLDS):    ...    print(&quot;\n--- Metrics ---\n&quot;)    reporter.calc_metrics(        T_tes,        pred_class_tes,        pred_proba_tes,        labels=[class_0, class_1, class_2],        i_fold=i_fold,    )    print(&quot;\n---------------\n&quot;)reporter.summarize()reporter.save()```The above lines makes reportes and figures.``` bash$ tree $log_dir├── aucs.csv├── bACCs.csv├── balanced_accs.csv├── clf_reports.csv├── conf_mat│   ├── conf_mats.csv│   ├── fold#0.png│   ├── fold#1.png│   ├── fold#2.png│   └── overall_sum.png├── mccs.csv├── pre_rec_curves│   ├── fold#0.png│   ├── fold#1.png│   └── fold#2.png└── roc_curves    ├── fold#0.png    ├── fold#1.png    └── fold#2.png```</longdescription>
</pkgmetadata>