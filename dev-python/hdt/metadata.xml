<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|Build Status| |Documentation Status| |PyPI version|Read and query HDT document with ease in Python`Online Documentation &lt;https://callidon.github.io/pyHDT&gt;`__Requirements============-  Python *version 3.6.4 or higher*-  `pip &lt;https://pip.pypa.io/en/stable/&gt;`__-  **gcc/clang** with **c++11 support**-  **Python Development headers** &gt; You should have the ``Python.h``   header available on your system.   &gt; For example, for Python 3.6, install the ``python3.6-dev`` package   on Debian/Ubuntu systems.Then, install the `pybind11library &lt;http://pybind11.readthedocs.io/en/stable/&gt;`__::    pip install pybind11Installation============Installation in a `virtualenv &lt;https://virtualenv.pypa.io/en/stable/&gt;`__is **strongly advised!**Pip install (recommended)-------------------------::    pip install hdtManual installation-------------------::    git clone https://github.com/Callidon/pyHDT    cd pyHDT/    ./install.shGetting started===============.. code:: python    from hdt import HDTDocument    # Load an HDT file.    # Missing indexes are generated automatically, add False as the second argument to disable them    document = HDTDocument(&quot;test.hdt&quot;)    # Display some metadata about the HDT document itself    print(&quot;nb triples: %i&quot; % document.total_triples)    print(&quot;nb subjects: %i&quot; % document.nb_subjects)    print(&quot;nb predicates: %i&quot; % document.nb_predicates)    print(&quot;nb objects: %i&quot; % document.nb_objects)    print(&quot;nb shared subject-object: %i&quot; % document.nb_shared)    # Fetch all triples that matches { ?s ?p ?o }    # Use empty strings (&quot;&quot;) to indicates variables    triples, cardinality = document.search_triples(&quot;&quot;, &quot;&quot;, &quot;&quot;)    print(&quot;cardinality of { ?s ?p ?o }: %i&quot; % cardinality)    for triple in triples:      print(triple)    # Search also support limit and offset    triples, cardinality = document.search_triples(&quot;&quot;, &quot;&quot;, &quot;&quot;, limit=10, offset=100)    # etc ..... |Build Status| image:: https://travis-ci.org/Callidon/pyHDT.svg?branch=master   :target: https://travis-ci.org/Callidon/pyHDT.. |Documentation Status| image:: https://readthedocs.org/projects/pyhdt/badge/?version=latest   :target: https://callidon.github.io/pyHDT.. |PyPI version| image:: https://badge.fury.io/py/hdt.svg   :target: https://badge.fury.io/py/hdtHandling non UTF-8 strings in python====================================If the HDT document has been encoded with a non UTF-8 encoding theprevious code wonâ€™t work correctly and will result in a``UnicodeDecodeError``. More details on how to convert string to strfrom c++ to python `here`_To handle this we doubled the API of the HDT document by adding:- ``search_triples_bytes(...)`` return an iterator of triples as ``(py::bytes, py::bytes, py::bytes)``- ``search_join_bytes(...)`` return an iterator of sets of solutions mapping as ``py::set(py::bytes, py::bytes)``- ``convert_tripleid_bytes(...)`` return a triple as: ``(py::bytes, py::bytes, py::bytes)``- ``convert_id_bytes(...)`` return a ``py::bytes``**Parameters and documentation are the same as the standard version**.. code:: python  from hdt import HDTDocument   # Load an HDT file.   # Missing indexes are generated automatically, add False as the second argument to disable them  document = HDTDocument(&quot;test.hdt&quot;)  it = document.search_triple_bytes(&quot;&quot;, &quot;&quot;, &quot;&quot;)  for s, p, o in it:    print(s, p, o) # print b'...', b'...', b'...'    # now decode it, or handle any error    try:      s, p, o = s.decode('UTF-8'), p.decode('UTF-8'), o.decode('UTF-8')    except UnicodeDecodeError as err:      # try another other codecs      pass.. _here: https://pybind11.readthedocs.io/en/stable/advanced/cast/strings.html</longdescription>
</pkgmetadata>