<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pycmarkgfmLightweight Python bindings to GitHub Flavored Markdown (GFM) library, [cmark-gfm](https://github.com/github/cmark-gfm),with enhanced support for task lists.## Features* By design, rendering is compliant with GitHub's, since this package wraps GitHub's own C parser and serializer.  * As opposed to most cmark-gfm bindings out there, this package supports  [parsing and toggling task lists](#dealing-with-task-lists).* Compatibility:   [![](https://github.com/zopieux/pycmarkgfm/actions/workflows/check.yml/badge.svg?event=release)](https://github.com/zopieux/pycmarkgfm/actions/workflows/check.yml)  with Python 3.7 &amp; newer, on Linux, MacOS and Windows.## InstallationThis packages is [available on PyPi](https://pypi.org/project/pycmarkgfm/) along with precompiled wheels for most architectures.    $ pip install pycmarkgfm## Usage```pythonimport pycmarkgfm# CommonMark (not GitHub flavored):html = pycmarkgfm.markdown_to_html(&quot;Hello *world*&quot;)# GitHub flavored Markdown:html = pycmarkgfm.gfm_to_html(&quot;Hello ~world~&quot;)```### Optionscmark and cmark-gfm come with a bunch of customization options (also known as *flags*) which are made available throughthe [`pycmarkgfm.options` module](pycmarkgfm/options.py). To use one or multiple options, use the `options=` argument with a mask (bitwise-or combination) of `pycmarkgfm.options`. Each option is documented.```pythontext = &quot;hello\n&lt;img src='doge.png'&gt;&quot;print(pycmarkgfm.markdown_to_html(text))# &lt;p&gt;hello# &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;from pycmarkgfm import optionsprint(pycmarkgfm.markdown_to_html(text, options=options.unsafe | options.hardbreaks))# &lt;p&gt;hello&lt;br /&gt;# &lt;img src='doge.png'&gt;&lt;/p&gt;``` ### Dealing with task listsOne of the distinctive features of this package is support for task lists.You can get the list of tasks with their checked state, and update that state before rendering:```pythonimport pycmarkgfmmd = &quot;&quot;&quot;- [ ] eggs- [x] milk&quot;&quot;&quot;with pycmarkgfm.parse_gfm(md) as document:     eggs, milk = document.get_tasks()    assert not eggs.checked    assert milk.checked    # Toggle!     eggs.checked = True    print(document.to_commonmark())    # - [x] eggs    # - [x] milk``` There is a convenience method to easily toggle a task state from the rendered HTML. The typical use-case is that yourdatabase stores the source GFM, renders it to HTML with `gfm_to_html()`, then you have some client Javascript snippetthat is invoked when a checkbox is clicked. Thanks to the unique `data-gfm-task` HTML attribute, you can update the source GFM on the server:```pythonimport pycmarkgfmmd = &quot;&quot;&quot;- [ ] eggs- [x] milk&quot;&quot;&quot;print(pycmarkgfm.gfm_to_html(md))# &lt;ul&gt;# &lt;li data-gfm-task=&quot;2:1-2:10&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; /&gt; eggs&lt;/li&gt;# &lt;li data-gfm-task=&quot;3:1-3:10&quot;&gt;&lt;input type=&quot;checkbox&quot; checked=&quot;&quot; disabled=&quot;&quot; /&gt; milk&lt;/li&gt;# &lt;/ul&gt;# When user clicks a checkbox, get the parent 'data-gfm-task', then on the server, do:new_md = pycmarkgfm.gfm_toggle_task_by_id(md, &quot;2:1-2:10&quot;, checked=pycmarkgfm.TOGGLE)print(new_md)# - [x] eggs# - [x] milk``` You can also use `checked=True/False` instead of `TOGGLE` to force a particular state.### How is this package different from `cmarkgfm`?[cmarkgfm](https://pypi.org/project/cmarkgfm/) is similar to this package, in fact cmarkgfm's cffi build scriptis partially re-used in this project â€“ in compliance with its MIT license.As of October 2023, cmarkgfm is still a well-maintained project and I recommend using it if you don't need the extrafeatures provided by pycmarkgfm, most notably the support for task lists.## LicenseGNU GPLv3.The project includes components under a different copyright under the [third_party](./third_party/) directory.</longdescription>
</pkgmetadata>