<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Electrophysiology Manipulator Link[![PyPI version](https://badge.fury.io/py/ephys-link.svg)](https://badge.fury.io/py/ephys-link)[![CodeQL](https://github.com/VirtualBrainLab/ephys-link/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/VirtualBrainLab/ephys-link/actions/workflows/codeql-analysis.yml)[![Dependency Review](https://github.com/VirtualBrainLab/ephys-link/actions/workflows/dependency-review.yml/badge.svg)](https://github.com/VirtualBrainLab/ephys-link/actions/workflows/dependency-review.yml)The [Electrophysiology Manipulator Link](https://github.com/VirtualBrainLab/ephys-link)(or Ephys Link for short) is a Python WebSocket server that allows anyWebSocket-compliant application (suchas [Pinpoint](https://github.com/VirtualBrainLab/Pinpoint))to communicate with manipulators used in electrophysiology experiments.Currently, Ephys Link only supports Sensapex uMp-4 Micromanipulators and New Scale 3-axismanipulators. However, this platform is designed to be extensible to othermanipulators and more may be added in the future.For more information regarding the server's implementation and how the code is organized, seethe [package's development documentation](https://virtualbrainlab.org/ephys_link/development.html).For detailed descriptions of the server's API, seethe [API reference](https://virtualbrainlab.org/api_reference_ephys_link.html).## Installation### Prerequisites1. [Python 3.8+](https://www.python.org/downloads/) and pip.2. An **x86 Windows PC is required** to run the server.3. For Sensapex devices, the controller unit must be connected via an ethernet   cable and powered. A USB-to-ethernet adapter is acceptable. For New Scale manipulators,   the controller unit must be connected via USB and be powered by a 6V power   supply.4. To use the emergency stop feature, ensure an Arduino with   the [StopSignal](https://github.com/VirtualBrainLab/StopSignal) sketch is   connected to the computer. Follow the instructions on that repo for how to   set up the Arduino.**NOTE:** Ephys Link is an HTTP server without cross-origin support. The serveris currently designed to interface with local/desktop instances of Pinpoint. Itwill not work with the web browser versions of Pinpoint at this time.### Install&gt;Using a Python virtual environment is encouraged.&gt;&gt;Create a virtual environment by running `python -m venv ephys_link`&gt;&gt;Activate the environment by running `.\ephys_link\scripts\activate`&gt;&gt;A virtual environment helps to isolate installed packages from other packages on your computer and ensures a clean installation of Ephys LinkRun the following command to install the server:```bashpip install ephys-link```# Usage and moreComplete documentation including API usage and development installation can befound on the [Virtual Brain Lab Documentation page][docs] for this server.# CitingIf this project is used as part of a research project you should citethe [Pinpoint repository][Pinpoint]. Please emailDan ([dbirman@uw.edu](mailto:dbirman@uw.edu)) if you have questions.Please reach out to Kenneth ([kjy5@uw.edu](mailto:kjy5@uw.edu)) for questionsabout the Electrophysiology Manipulator Link server. Bugs may be reportedthrough the issues tab.[Pinpoint]: https://github.com/VirtualBrainLab/Pinpoint[StopSignal]: https://github.com/VirtualBrainLab/StopSignal[docs]: https://virtualbrainlab.org/ephys_link/installation_and_use.html</longdescription>
</pkgmetadata>