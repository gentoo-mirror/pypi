<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>future: Easy, safe support for Python 2/3 compatibility=======================================================``future`` is the missing compatibility layer between Python 2 and Python3. It allows you to use a single, clean Python 3.x-compatible codebase tosupport both Python 2 and Python 3 with minimal overhead.It is designed to be used as follows::    from __future__ import (absolute_import, division,                            print_function, unicode_literals)    from builtins import (             bytes, dict, int, list, object, range, str,             ascii, chr, hex, input, next, oct, open,             pow, round, super,             filter, map, zip)followed by predominantly standard, idiomatic Python 3 code that then runssimilarly on Python 2.6/2.7 and Python 3.3+.The imports have no effect on Python 3. On Python 2, they shadow thecorresponding builtins, which normally have different semantics on Python 3versus 2, to provide their Python 3 semantics.Standard library reorganization~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~``future`` supports the standard library reorganization (PEP 3108) through thefollowing Py3 interfaces:    &gt;&gt;&gt; # Top-level packages with Py3 names provided on Py2:    &gt;&gt;&gt; import html.parser    &gt;&gt;&gt; import queue    &gt;&gt;&gt; import tkinter.dialog    &gt;&gt;&gt; import xmlrpc.client    &gt;&gt;&gt; # etc.    &gt;&gt;&gt; # Aliases provided for extensions to existing Py2 module names:    &gt;&gt;&gt; from future.standard_library import install_aliases    &gt;&gt;&gt; install_aliases()    &gt;&gt;&gt; from collections import Counter, OrderedDict   # backported to Py2.6    &gt;&gt;&gt; from collections import UserDict, UserList, UserString    &gt;&gt;&gt; import urllib.request    &gt;&gt;&gt; from itertools import filterfalse, zip_longest    &gt;&gt;&gt; from subprocess import getoutput, getstatusoutputAutomatic conversion--------------------An included script called `futurize&lt;http://python-future.org/automatic_conversion.html&gt;`_ aids in convertingcode (from either Python 2 or Python 3) to code compatible with bothplatforms. It is similar to ``python-modernize`` but goes further inproviding Python 3 compatibility through the use of the backported typesand builtin functions in ``future``.Documentation-------------See: http://python-future.orgCredits-------:Author:  Ed Schofield, Jordan M. Adler, et al:Sponsor: Python Charmers Pty Ltd, Australia, and Python Charmers Pte          Ltd, Singapore. http://pythoncharmers.com:Others:  See docs/credits.rst or http://python-future.org/credits.htmlLicensing---------Copyright 2013-2019 Python Charmers Pty Ltd, Australia.The software is distributed under an MIT licence. See LICENSE.txt.</longdescription>
</pkgmetadata>