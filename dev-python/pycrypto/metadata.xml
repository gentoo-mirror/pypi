<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Cryptography Toolkit (pycrypto)======================================This is a collection of both secure hash functions (such as SHA256 andRIPEMD160), and various encryption algorithms (AES, DES, RSA, ElGamal,etc.).  The package is structured to make adding new modules easy.This section is essentially complete, and the software interface willalmost certainly not change in an incompatible way in the future; allthat remains to be done is to fix any bugs that show up.  If youencounter a bug, please report it in the Launchpad bug tracker at       https://launchpad.net/products/pycrypto/+bugsAn example usage of the SHA256 module is:&gt;&gt;&gt; from Crypto.Hash import SHA256&gt;&gt;&gt; hash = SHA256.new()&gt;&gt;&gt; hash.update('message')&gt;&gt;&gt; hash.digest()'\xabS\n\x13\xe4Y\x14\x98+y\xf9\xb7\xe3\xfb\xa9\x94\xcf\xd1\xf3\xfb&quot;\xf7\x1c\xea\x1a\xfb\xf0+F\x0cm\x1d'An example usage of an encryption algorithm (AES, in this case) is:&gt;&gt;&gt; from Crypto.Cipher import AES&gt;&gt;&gt; obj = AES.new('This is a key123', AES.MODE_CBC, 'This is an IV456')&gt;&gt;&gt; message = &quot;The answer is no&quot;&gt;&gt;&gt; ciphertext = obj.encrypt(message)&gt;&gt;&gt; ciphertext'\xd6\x83\x8dd!VT\x92\xaa`A\x05\xe0\x9b\x8b\xf1'&gt;&gt;&gt; obj2 = AES.new('This is a key123', AES.MODE_CBC, 'This is an IV456')&gt;&gt;&gt; obj2.decrypt(ciphertext)'The answer is no'One possible application of the modules is writing secureadministration tools.  Another application is in writing daemons andservers.  Clients and servers can encrypt the data being exchanged andmutually authenticate themselves; daemons can encrypt private data foradded security.  Python also provides a pleasant framework forprototyping and experimentation with cryptographic algorithms; thanksto its arbitrary-length integers, public key algorithms are easilyimplemented.As of PyCrypto 2.1.0, PyCrypto provides an easy-to-use random numbergenerator:&gt;&gt;&gt; from Crypto import Random&gt;&gt;&gt; rndfile = Random.new()&gt;&gt;&gt; rndfile.read(16)'\xf7.\x838{\x85\xa0\xd3&gt;#}\xc6\xc2jJU'A stronger version of Python's standard &quot;random&quot; module is alsoprovided:&gt;&gt;&gt; from Crypto.Random import random&gt;&gt;&gt; random.choice(['dogs', 'cats', 'bears'])'bears'Caveat: For the random number generator to work correctly, you mustcall Random.atfork() in both the parent and child processes afterusing os.fork()Installation============PyCrypto is written and tested using Python version 2.1 through 3.3.  Python1.5.2 is not supported.The modules are packaged using the Distutils, so you can simply run&quot;python setup.py build&quot; to build the package, and &quot;python setup.pyinstall&quot; to install it.If the setup.py script crashes with a DistutilsPlatformErrorcomplaining that the file /usr/lib/python2.2/config/Makefile doesn'texist, this means that the files needed for compiling new Pythonmodules aren't installed on your system.  Red Hat users often run intothis because they don't have the python2-devel RPM installed.  The fixis to simply install the requisite RPM.  On Debian/Ubuntu, you need thepython-dev package.To verify that everything is in order, run &quot;python setup.py test&quot;.  Itwill test all the cryptographic modules, skipping ones that aren'tavailable.  If the test script reports an error on your machine,please report the bug using the bug tracker (URL given above).  Ifpossible, track down the bug and include a patch that fixes it,provided that you are able to meet the eligibility requirements athttp://www.pycrypto.org/submission-requirements/.It is possible to test a single sub-package or a single module only, for instancewhen you investigate why certain tests fail and don't want to run the wholesuite each time. Use &quot;python setup.py test --module=name&quot;, where 'name'is either a sub-package (Cipher, PublicKey, etc) or a module (Cipher.DES,PublicKey.RSA, etc).To further cut test coverage, pass also the option &quot;--skip-slow-tests&quot;.To install the package under the site-packages directory ofyour Python installation, run &quot;python setup.py install&quot;.If you have any comments, corrections, or improvements for thispackage, please report them to our mailing list, accessible via thePyCrypto website:    http://www.pycrypto.org/    https://www.dlitz.net/software/pycrypto/</longdescription>
</pkgmetadata>