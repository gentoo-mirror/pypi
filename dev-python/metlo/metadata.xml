<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img alt=&quot;logo&quot; src=&quot;https://storage.googleapis.com/metlo-security-public-images/metlo_logo_horiz%404x.png&quot; height=&quot;80&quot;&gt;  &lt;h1 align=&quot;center&quot;&gt;Metlo API Security&lt;/h1&gt;  &lt;p align=&quot;center&quot;&gt;Secure Your API.&lt;/p&gt;&lt;/p&gt;## InstallationCurrently Metlo's Python Agent supports 2 servers:- Django- FlaskIt can be installed from `pypi` by running :```shellpip install metlo```## Configuration### DjangoOnce installed, Metlo's middleware can be added by modifying middlewares list (in the projects `settings.py`) like so:```pythonMIDDLEWARE = [    ...,    &quot;metlo.django.MetloDjango&quot;,] ```and configuring a `METLO_CONFIG` attribute in the projects `settings.py` like this :```pythonMETLO_CONFIG = {    &quot;API_KEY&quot;: &quot;&lt;YOUR_METLO_API_KEY&gt;&quot;,    &quot;METLO_HOST&quot;: &quot;&lt;YOUR_METLO_COLLECTOR_URL&gt;&quot;}````METLO_CONFIG` can take an optional key-value pair representing the max number of workers for communicating with Metlo.### FlaskOnce installed, Metlo middleware can be added simply like:```pythonfrom flask import Flask...from metlo.flask import MetloFlaskapp = Flask(__name__)MetloFlask(app, &quot;&lt;YOUR_METLO_COLLECTOR_URL&gt;&quot;, &quot;&lt;YOUR_METLO_API_KEY&gt;&quot;)```The Flask Middleware takes the flask app, Metlo collector url, and the Metlo API Key as parameters. As an optionalparameter, a named value can be passed for max number of workers for communicating with Metlo.```pythonMetloFlask(app, &quot;&lt;YOUR_METLO_COLLECTOR_URL&gt;&quot;, &quot;&lt;YOUR_METLO_API_KEY&gt;&quot;, workers=&quot;&lt;WORKER-COUNT&gt;&quot;)```</longdescription>
</pkgmetadata>