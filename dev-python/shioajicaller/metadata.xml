<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Shioaji Warp Caller P.O.C project.[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/shioajicaller)](https://pypi.org/project/shioajicaller)[![PyPI - Downloads](https://img.shields.io/pypi/dm/shioajicaller)](https://pypi.org/project/shioajicaller)[![PyPI - License](https://img.shields.io/pypi/l/shioajicaller)](https://pypi.org/project/shioajicaller)[![Docker Pulls](https://img.shields.io/docker/pulls/sdpower/shioaji_caller)]()----------------------------# 簡介因為Shioaji API只能有五個連線，且有訂閱上限制。 如果你有多個分開程式需要處理，就會佔用重複資源。透過Websocket服務將API擴充為誇平台，你要寫網頁下單機也沒問題。透過取得Shioaji所擴充的功能：* 所有Contracts    * 輸出檔案        * 指數 輸出檔案(`IndexsTWSE.csv`)        * 股票 輸出檔案(`StockTWSE.csv`)          * 上市股票          * 櫃股股票        * 期貨 輸出檔案(`Futures.csv`)        * 選擇權 輸出檔案(`Options.csv`)    * 存入Redis    * 每日更新即可不用每次都要去查詢API，最好方式開盤前先執行跑一次。    * 輸出為csv 檔案 很方便，使用編碼為UTF8請注意。* Websocket服務    * 取的Contract資料        * 股票 Stocks            * 指令範例：{&quot;cmd&quot;:&quot;GetContracts&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Stocks&quot;,&quot;code&quot;:&quot;2330&quot;}}        * 期貨 Futures            * 指令範例：{&quot;cmd&quot;:&quot;GetContracts&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Futures&quot;,&quot;code&quot;:&quot;TXFB2&quot;}}        * 選擇權 Options            * 指令範例：{&quot;cmd&quot;:&quot;GetContracts&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Options&quot;,&quot;code&quot;:&quot;TXO17500C2&quot;}}        * 指數 Indexs            * 指令範例：{&quot;cmd&quot;:&quot;GetContracts&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Indexs&quot;,&quot;code&quot;:&quot;001&quot;}}    * 訂閱Subscribe或取消        * 指數            * 指令範例：{&quot;cmd&quot;:&quot;SubscribeIndexs&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;001&quot;}}        * 股票            * 指令範例：{&quot;cmd&quot;:&quot;SubscribeStocks&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;2330&quot;,&quot;quote_type&quot;:&quot;tick&quot;}}            * 指令範例：{&quot;cmd&quot;:&quot;SubscribeStocks&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;2330&quot;,&quot;quote_type&quot;:&quot;bidask&quot;}}        * 期貨            * 指令範例：{&quot;cmd&quot;:&quot;SubscribeFutures&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;TXFJ1&quot;,&quot;quote_type&quot;:&quot;tick&quot;}}            * 指令範例：{&quot;cmd&quot;:&quot;SubscribeFutures&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;TXFJ1&quot;,&quot;quote_type&quot;:&quot;bidask&quot;}}    * Clinet        * 取得client的連線ID            * 指令範例：{&quot;cmd&quot;:&quot;ID&quot;}        * 取得Shioaji 連線帳戶資訊            * 指令範例：{&quot;cmd&quot;:&quot;GetAccount&quot;}        * 登出 Shioaji 連線            * {&quot;cmd&quot;:&quot;Logout&quot;}        * 接收Subscribe資料            * 指令範例：{&quot;cmd&quot;:&quot;GetsubscribEvents&quot;}        * 取消接收接收Subscribe資料            * 指令範例：{&quot;cmd&quot;:&quot;RemovesubscribEvents&quot;}        * 取得ticks歷史資料            * 股票指令範例： {&quot;cmd&quot;:&quot;GetTicks&quot;,&quot;params&quot;:{&quot;StockCode&quot;:&quot;2330&quot;,&quot;date&quot;:&quot;2021-10-08&quot;}}            * 期貨指令範例： {&quot;cmd&quot;:&quot;GetTicks&quot;,&quot;params&quot;:{&quot;FutureCode&quot;:&quot;TXFJ1&quot;,&quot;date&quot;:&quot;2021-10-08&quot;}}            * 股票區間指令範例： {&quot;cmd&quot;:&quot;GetTicks&quot;,&quot;params&quot;:{&quot;StockCode&quot;:&quot;2330&quot;,&quot;date&quot;:&quot;2021-10-08&quot;,&quot;query_type&quot;:&quot;RangeTime&quot;,&quot;time_start&quot;:&quot;09:00:00&quot;,&quot;time_end&quot;:&quot;09:20:01&quot;}}            * 股票最後指令範例： {&quot;cmd&quot;:&quot;GetTicks&quot;,&quot;params&quot;:{&quot;StockCode&quot;:&quot;2330&quot;,&quot;date&quot;:&quot;2021-10-08&quot;,&quot;query_type&quot;:&quot;LastCount&quot;,&quot;last_cnt&quot;:10}}            * 期貨區間指令範例： {&quot;cmd&quot;:&quot;GetTicks&quot;,&quot;params&quot;:{&quot;FutureCode&quot;:&quot;TXFJ1&quot;,&quot;date&quot;:&quot;2021-10-08&quot;,&quot;query_type&quot;:&quot;RangeTime&quot;,&quot;time_start&quot;:&quot;09:00:00&quot;,&quot;time_end&quot;:&quot;09:20:01&quot;}}            * 期貨最後指令範例： {&quot;cmd&quot;:&quot;GetTicks&quot;,&quot;params&quot;:{&quot;FutureCode&quot;:&quot;TXFJ1&quot;,&quot;date&quot;:&quot;2021-10-08&quot;,&quot;query_type&quot;:&quot;LastCount&quot;,&quot;last_cnt&quot;:10}}        * 取得KBar歷史資料            * 股票指令範例： {&quot;cmd&quot;:&quot;GetKBars&quot;,&quot;params&quot;:{&quot;StockCode&quot;:&quot;2330&quot;,&quot;start&quot;:&quot;2021-10-18&quot;,&quot;end&quot;:&quot;2021-10-19&quot;}}            * 期貨指令範例： {&quot;cmd&quot;:&quot;GetKBars&quot;,&quot;params&quot;:{&quot;FutureCode&quot;:&quot;TXFJ1&quot;,&quot;start&quot;:&quot;2021-10-18&quot;,&quot;end&quot;:&quot;2021-10-19&quot;}}        * 取得Scanners資料            * 指令範例： {&quot;cmd&quot;:&quot;GetScanners&quot;,&quot;params&quot;:{&quot;scanner_type&quot;:&quot;ChangePercentRank&quot;}}            * 指令範例： {&quot;cmd&quot;:&quot;GetScanners&quot;,&quot;params&quot;:{&quot;scanner_type&quot;:&quot;ChangePriceRank&quot;}}            * 指令範例： {&quot;cmd&quot;:&quot;GetScanners&quot;,&quot;params&quot;:{&quot;scanner_type&quot;:&quot;DayRangeRank&quot;}}            * 指令範例： {&quot;cmd&quot;:&quot;GetScanners&quot;,&quot;params&quot;:{&quot;scanner_type&quot;:&quot;VolumeRank&quot;}}            * 指令範例： {&quot;cmd&quot;:&quot;GetScanners&quot;,&quot;params&quot;:{&quot;scanner_type&quot;:&quot;AmountRank&quot;}}        * 取得Account &amp; Portfolio            * 取得Account                * 全部帳戶指令範例： {&quot;cmd&quot;:&quot;GetAccountList&quot;}                * 股票帳戶指令範例： {&quot;cmd&quot;:&quot;GetStockAccount&quot;}                * 期貨帳戶指令範例： {&quot;cmd&quot;:&quot;GetFutoptAccount&quot;}            * 取得期貨帳戶Margin資料                * 指令範例： {&quot;cmd&quot;:&quot;GetMargin&quot;}            * 取得帳戶Position資料                * 股票                    * 指令範例： {&quot;cmd&quot;:&quot;GetListPositions&quot;}                * 期貨                    * 指令範例： {&quot;cmd&quot;:&quot;GetListFuturePositions&quot;}            * 取得帳戶ProfitLoss資料                * 股票                    * 指令範例： {&quot;cmd&quot;:&quot;GetListProfitLoss&quot;}                * 期貨                    * 指令範例： {&quot;cmd&quot;:&quot;GetListFutureProfitLoss&quot;}            * 取得帳戶ProfitLoss資料                * 股票                    * 指令範例： {&quot;cmd&quot;:&quot;GetListProfitLossDetail&quot;,&quot;params&quot;:{&quot;detail_id&quot;:2}}                * 期貨                    * 指令範例： {&quot;cmd&quot;:&quot;GetListFutureProfitLossDetail&quot;,&quot;params&quot;:{&quot;detail_id&quot;:2}}            * 取得帳戶ProfitLossSum資料                * 股票                    * 指令範例： {&quot;cmd&quot;:&quot;GetListProfitLossSum&quot;}                    * 指令範例： {&quot;cmd&quot;:&quot;GetListProfitLossSum&quot;,&quot;params&quot;:{&quot;begin_date&quot;:&quot;2022-10-05&quot;,&quot;end_date&quot;:&quot;2022-10-07&quot;}}                * 期貨                    * 指令範例： {&quot;cmd&quot;:&quot;GetListFutureProfitLossSum&quot;}                    * 指令範例： {&quot;cmd&quot;:&quot;GetListFutureProfitLossSum&quot;,&quot;params&quot;:{&quot;begin_date&quot;:&quot;2022-10-05&quot;,&quot;end_date&quot;:&quot;2022-10-07&quot;}}            * 取得股票帳戶交割Settlements資料                * 指令範例： {&quot;cmd&quot;:&quot;GetSettlements&quot;}        * 下單Order            * 套用憑證Apply &amp; Activate CA                * 請用base64 讀取你的憑證。                * PersonId 可以不給預設為登入帳戶的ID                * 指令範例： {&quot;cmd&quot;:&quot;ActivateCa&quot;,&quot;params&quot;:{&quot;ActivateCa&quot;:&quot;BASE64srtring&quot; ,&quot;CaPasswd&quot;:&quot;password&quot;}}                * 指令範例： {&quot;cmd&quot;:&quot;ActivateCa&quot;,&quot;params&quot;:{&quot;ActivateCa&quot;:&quot;BASE64srtring&quot; ,&quot;CaPasswd&quot;:&quot;password&quot;,&quot;PersonId&quot;:&quot;PersonId&quot; }}            * 股票下單 Stock                * price 請給小數點                * 買指令範例： {&quot;cmd&quot;:&quot;OrderStocks&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;2610&quot;,&quot;price&quot;:25.0,&quot;quantity&quot;:1,&quot;action&quot;:&quot;Buy&quot;,&quot;price_type&quot;:&quot;LMT&quot;,&quot;order_cond&quot;:&quot;Cash&quot;,&quot;order_type&quot;:&quot;ROD&quot;,&quot;order_lot&quot;:&quot;Common&quot;}}                * first_sell指令範例： {&quot;cmd&quot;:&quot;OrderStocks&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;2610&quot;,&quot;price&quot;:25.0,&quot;quantity&quot;:1,&quot;action&quot;:&quot;Sell&quot;,&quot;price_type&quot;:&quot;LMT&quot;,&quot;order_cond&quot;:&quot;Cash&quot;,&quot;order_type&quot;:&quot;ROD&quot;,&quot;order_lot&quot;:&quot;Common&quot;,&quot;first_sell&quot;:&quot;true&quot;}}            * 期貨下單 Future                * price 請給小數點                * 指令範例： {&quot;cmd&quot;:&quot;OrderFutures&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;MXFL1&quot;,&quot;price&quot;:17767.0,&quot;quantity&quot;:1,&quot;action&quot;:&quot;Buy&quot;,&quot;price_type&quot;:&quot;LMT&quot;,&quot;order_type&quot;:&quot;ROD&quot;,&quot;octype&quot;:&quot;Auto&quot;}}                * DayTrade 指令範例： {&quot;cmd&quot;:&quot;OrderFutures&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;MXFL1&quot;,&quot;price&quot;:17767.0,&quot;quantity&quot;:1,&quot;action&quot;:&quot;Buy&quot;,&quot;price_type&quot;:&quot;LMT&quot;,&quot;order_type&quot;:&quot;ROD&quot;,&quot;octype&quot;:&quot;DayTrade&quot;}}            * 取的交易清單list_trades                * 指令範例：{&quot;cmd&quot;:&quot;GetOrderList&quot;}            * 取的單筆交易GetOrderById                * 參數id為oder的id                * 指令範例：{&quot;cmd&quot;:&quot;GetOrderById&quot;,&quot;params&quot;:{&quot;id&quot;:&quot;d12b7777&quot;}}            * 取消單筆交易CancelOrderById                * 參數id為oder的id                * 指令範例：{&quot;cmd&quot;:&quot;CancelOrderById&quot;,&quot;params&quot;:{&quot;id&quot;:&quot;d12b7777&quot;}}            * 更新單筆交易UpdateOrderById                * 參數id為oder的id                * price 請給小數點                * 指令範例：{&quot;cmd&quot;:&quot;UpdateOrderById&quot;,&quot;params&quot;:{&quot;id&quot;:&quot;d12b7777&quot;,&quot;price&quot;:17880.0,&quot;qty&quot;:1}}                * 指令範例：{&quot;cmd&quot;:&quot;UpdateOrderById&quot;,&quot;params&quot;:{&quot;id&quot;:&quot;d12b7777&quot;,&quot;price&quot;:17880.0}}                * 指令範例：{&quot;cmd&quot;:&quot;UpdateOrderById&quot;,&quot;params&quot;:{&quot;id&quot;:&quot;d12b7777&quot;,&quot;qty&quot;:1}}    * 額外功能        * 推播 Subscribe資料            * redis            * mqtt    * 回傳類型type        * 命令回傳            * {&quot;type&quot;: &quot;response&quot;.....        * 訂閱資料回傳            * {&quot;type&quot;:&quot;IndexsTickEvent&quot;...........            * {&quot;type&quot;: &quot;StocksTickEvent&quot;........            * {&quot;type&quot;: &quot;FuturesTickEvent&quot;........            * {&quot;type&quot;: &quot;StocksBidaskEvent&quot;........            * {&quot;type&quot;: &quot;FuturesBidaskEvent&quot;........        * Shioaji系統回傳            * {&quot;type&quot;:&quot;SystemEvent&quot;..........            * {&quot;type&quot;:&quot;OrderEvent&quot;..........            * {&quot;type&quot;:&quot;TradeEvent&quot;..........## 安裝使用### 使用pip安裝** 請確認 python 版本 3.8 之上 **### linux windows```$ pip install shioajicaller$ shioajicaller -h```### mac osx```$ pip install shioajicaller uvloop==0.17.0$ shioajicaller -h```### 使用DockerDocker [https://hub.docker.com/r/sdpower/shioaji_caller](https://hub.docker.com/r/sdpower/shioaji_caller)範例：```docker run -d \  --name shioaji-caller \  --restart unless-stopped \  --env-file=&quot;.env&quot; \  -p 6789:6789 \  sdpower/shioaji_caller websockets -wm -ps 250```## 範例Example這裡說明範例，參數避免暴露請自行建立.env檔案就可以不用給帳號密碼參數。```API_KEY= YOU_API_KEYSECRET_KEY= YOU_SECRET_KEY```### 執行範例```$ python main.py update --help$ python main.py update -api YOU_API_KEY -secret YOU_SECRET_KEY```### 直接執行cli```$ shioajicaller update$ shioajicaller -api YOU_API_KEY -secret YOU_SECRET_KEY```### 新增 redis```$ shioajicaller update -rh 127.0.0.1 -rp 6379 -rdb 0 -t redis$ shioajicaller -t redis -api YOU_API_KEY -secret YOU_SECRET_KEY```### ENV範例可使用環境變數與.env擋案```API_KEY=YOU_API_KEYSECRET_KEY=YOU_SECRET_KEYREDIS_HOST=127.0.0.1REDIS_PORT=6379REDIS_DB=0MQTT_HOST=127.0.0.1MQTT_USER=userMQTT_PASSWORD=password```## Websocket服務命令範例:```# shioajicallershioaji version:0.3.6.dev3usage: &lt;command&gt; [&lt;args&gt;]The most commonly used git commands are:   update         update Code List   websockets     start a websocket servershioajicaller: error: the following arguments are required: command# shioajicaller websockets --husage: main.py [-h] [-api API_KEY [API_KEY ...]] [-secret SECRET_KEY [SECRET_KEY ...]] [-wp WEBSOCKETS_PORT] [-ps POOL_SIZE] [-wr] [-rh REDIS_HOST] [-rp REDIS_PORT]               [-rdb REDIS_DB] [-wm] [-mh MQTT_HOST] [-mu MQTT_USER] [-mp MQTT_PASSWORD] [-v]Websockets Serveroptions:  -h, --help            show this help message and exit  -api API_KEY [API_KEY ...], --api-key API_KEY [API_KEY ...]                        Shioaji API_KEY  -secret SECRET_KEY [SECRET_KEY ...], --secret-key SECRET_KEY [SECRET_KEY ...]                        Shioaji SECRET_KEY  -wp WEBSOCKETS_PORT, --websockets-port WEBSOCKETS_PORT                        Websockets port  -ps POOL_SIZE, --pool-size POOL_SIZE                        pool size  -wr, --with-redis     with redis publish.  -rh REDIS_HOST, --redis-host REDIS_HOST                        redis host  -rp REDIS_PORT, --redis-port REDIS_PORT                        redis port  -rdb REDIS_DB, --redis-db REDIS_DB                        reis db  -wm, --with-mqtt      with mqtt publish.  -mh MQTT_HOST, --mqtt-host MQTT_HOST                        mqtt host  -mu MQTT_USER, --mqtt-user MQTT_USER                        mqtt user  -mp MQTT_PASSWORD, --mqtt-password MQTT_PASSWORD                        mqtt password  -v, --verbosity       increase output verbosity```啟動服務:```# shioajicaller websocketsshioaji version:0.3.6.dev3Start Websockets Server Port:6789```### Client 範例下方可以看到個指令接收狀況與系統回傳#### 資料訂閱 範例```# python -m websockets ws://127.0.0.1:6789/Connected to ws://127.0.0.1:6789/.&lt; {&quot;type&quot;: &quot;total connects&quot;, &quot;count&quot;: 1}&gt; {&quot;cmd&quot;:&quot;GetAccount&quot;}&lt; {&quot;type&quot;: &quot;response&quot;, &quot;cmd&quot;:&quot;GetAccount&quot;, &quot;result&quot;:[&quot;person_id='F124673627' broker_id='F00000' account_id='80000000' signed=True username='XXX'&quot;,&quot;person_id='F11111111' broker_id='XAXAX' account_id='12345678' signed=True username='xxxxx'&quot;]}&lt; {&quot;type&quot;: &quot;SystemEvent&quot;, &quot;ret&quot;: {&quot;ResponseCode&quot;: 0, &quot;Code&quot;: 0, &quot;Message&quot;: &quot;host '203.66.91.161:80', IP 203.66.91.161:80 (host 1 of 1) (host connection attempt 1 of 1) (total connection attempt 1 of 1)&quot;, &quot;Description&quot;: &quot;Session up&quot;}}'&quot;]}&gt;&gt; {&quot;cmd&quot;:&quot;SubscribeFutures&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;TXFJ1&quot;,&quot;quote_type&quot;:&quot;tick&quot;}}&lt; {{&quot;type&quot;:&quot;response&quot;,&quot;cmd&quot;:&quot;SubscribeFutures&quot;,&quot;ret&quot;:true}&lt; {&quot;type&quot;: &quot;SystemEvent&quot;, &quot;ret&quot;: {&quot;ResponseCode&quot;: 200, &quot;Code&quot;: 16, &quot;Message&quot;: &quot;TIC/v1/FOP/*/TFE/TXFJ1&quot;, &quot;Description&quot;: &quot;Subscribe or Unsubscribe ok&quot;}}&gt; {&quot;cmd&quot;:&quot;GetsubscribEvents&quot;}&lt; {&quot;type&quot;:&quot;response&quot;,&quot;cmd&quot;:&quot;GetsubscribEvents&quot;,&quot;ret&quot;:true}&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:54.513000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:54.701000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:54.963000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:55.014000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:56.178000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:56.374000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:15:56.374000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:00.754000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:01.670000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:04.625000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:04.719000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:11.930000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:17.009000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:19.447000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:19.566000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:19.567000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:19.567000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:19.568000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:20.898000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_total_vol&quot;: 22498, &quot;ask_side_total_vol&quot;: 22817, &quot;avg_price&quot;: &quot;16392.996253&quot;, &quot;close&quot;: &quot;16366&quot;, &quot;high&quot;: &quot;16457&quot;, &quot;low&quot;: &quot;16288&quot;, &quot;amount&quot;: &quot;16366&quot;, &quot;total&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:27.667000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_total_vol&quot;: 22501, &quot;ask_side_total_vol&quot;: 22818, &quot;avg_price&quot;: &quot;16392.993864&quot;, &quot;close&quot;: &quot;16366&quot;, &quot;high&quot;: &quot;16457&quot;, &quot;low&quot;: &quot;16288&quot;, &quot;amount&quot;: &quot;49098&quot;, &quot;total_amount&quot;: &quot;555706099&quot;, &quot;volume&quot;: 3, &quot;total_volume&quot;: 33899, &quot;tick_type&quot;: 1, &quot;chg_type&quot;: 2, &quot;price_chg&quot;: &quot;5&quot;, &quot;pct_chg&quot;: &quot;0.03056&quot;, &quot;simtrade&quot;: 0, &quot;UNTime&quot;&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:27.668000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_total_vol&quot;: 22504, &quot;ask_side_total_vol&quot;: 22821, &quot;avg_price&quot;: &quot;16392.989883&quot;, &quot;close&quot;: &quot;16366&quot;, &quot;high&quot;: &quot;16457&quot;, &quot;low&quot;: &quot;16288&quot;, &quot;amount&quot;: &quot;81830&quot;, &quot;total_amount&quot;: &quot;555787929&quot;, &quot;volume&quot;: 5, &quot;total_volume&quot;: 33904, &quot;tick_type&quot;: 1, &quot;chg_type&quot;: 2, &quot;price_chg&quot;: &quot;5&quot;, &quot;pct_chg&quot;: &quot;0.03056&quot;, &quot;simtrade&quot;: 0, &quot;UNTime&quot;: &quot;2021-10-04 22:16:27.515556&quot;, &quot;exchange&quot;: &quot;TAIFEX&quot;}}&lt; {&quot;type&quot;: &quot;FuturesEvent&quot;, &quot;ret&quot;: {&quot;code&quot;: &quot;TXFJ1&quot;, &quot;datetime&quot;: &quot;2021-10-04T22:16:31.564000&quot;, &quot;open&quot;: &quot;16345&quot;, &quot;underlying_price&quot;: &quot;16408.35&quot;, &quot;bid_side_total_vol&quot;: 22500, &quot;ask_side_total_vol&quot;: 22824, &quot;avg_price&quot;: &quot;16392.988173&quot;, &quot;close&quot;: &quot;16364&quot;, &quot;high&quot;: &quot;16457&quot;, &quot;low&quot;: &quot;16288&quot;, &quot;amount&quot;: &quot;32728&quot;, &quot;total_amount&quot;: &quot;555820657&quot;, &quot;volume&quot;: 2, &quot;total_volume&quot;: 33906, &quot;tick_type&quot;: 2, &quot;chg_type&quot;: 2, &quot;price_chg&quot;: &quot;3&quot;, &quot;pct_chg&quot;: &quot;0.018336&quot;, &quot;simtrade&quot;: 0, &quot;UNTime&quot;: &quot;2021-10-04 22:16:31.515169&quot;, &quot;exchange&quot;: &quot;TAIFEX&quot;}}  {&quot;cmd&quot;:&quot;RemovesubscribEvents&quot;}&lt; {&quot;type&quot;:&quot;response&quot;,&quot;cmd&quot;:&quot;RemovesubscribEvents&quot;,&quot;ret&quot;:true}```#### 下單範例```# python -m websockets ws://127.0.0.1:6789/Connected to ws://127.0.0.1:6789/.&lt; {&quot;type&quot;: &quot;total connects&quot;, &quot;count&quot;: 1}&gt; {&quot;cmd&quot;:&quot;GetAccount&quot;}&lt; {&quot;type&quot;: &quot;response&quot;, &quot;cmd&quot;:&quot;GetAccount&quot;, &quot;result&quot;:[&quot;person_id='F124673627' broker_id='F00000' account_id='80000000' signed=True username='XXX'&quot;,&quot;person_id='F11111111' broker_id='XAXAX' account_id='12345678' signed=True username='xxxxx'&quot;]}&lt; {&quot;type&quot;: &quot;SystemEvent&quot;, &quot;ret&quot;: {&quot;ResponseCode&quot;: 0, &quot;Code&quot;: 0, &quot;Message&quot;: &quot;host '203.66.91.161:80', IP 203.66.91.161:80 (host 1 of 1) (host connection attempt 1 of 1) (total connection attempt 1 of 1)&quot;, &quot;Description&quot;: &quot;Session up&quot;}}'&quot;]}&gt; {&quot;cmd&quot;:&quot;ActivateCa&quot;,&quot;params&quot;:{&quot;PersonId&quot;:&quot;XXXXXXX&quot;,&quot;CaPasswd&quot;:&quot;XXXXXXX&quot;,&quot;ActivateCa&quot;:&quot;.......&quot;}}&lt; {&quot;type&quot;:&quot;response&quot;,&quot;cmd&quot;:&quot;ActivateCa&quot;,&quot;ret&quot;:true}&gt; {&quot;cmd&quot;:&quot;OrderFutures&quot;,&quot;params&quot;:{&quot;code&quot;:&quot;MXFL1&quot;,&quot;price&quot;:17880.0,&quot;quantity&quot;:1,&quot;action&quot;:&quot;Sell&quot;,&quot;price_type&quot;:&quot;LMT&quot;,&quot;order_type&quot;:&quot;IOC&quot;,&quot;octype&quot;:&quot;DayTrade&quot;}}&lt; {&quot;type&quot;:&quot;response&quot;,&quot;cmd&quot;:&quot;OrderFutures&quot;,&quot;ret&quot;:true}&lt; {&quot;type&quot;:&quot;TradeEvent&quot;,&quot;ret&quot;:{&quot;contract&quot;:{&quot;code&quot;:&quot;MXFL1&quot;,&quot;symbol&quot;:&quot;MXF202112&quot;,&quot;name&quot;:&quot;AAAAAAAA&quot;,&quot;category&quot;:&quot;MXF&quot;,&quot;delivery_month&quot;:&quot;202112&quot;,&quot;delivery_date&quot;:&quot;2021\/12\/15&quot;,&quot;underlying_kind&quot;:&quot;I&quot;,&quot;unit&quot;:1,&quot;limit_up&quot;:19637.0,&quot;limit_down&quot;:16067.0,&quot;reference&quot;:17852.0,&quot;update_date&quot;:&quot;2021\/11\/22&quot;},&quot;status&quot;:{&quot;id&quot;:&quot;5e1943de&quot;,&quot;status&quot;:&quot;PendingSubmit&quot;,&quot;status_code&quot;:&quot;    &quot;,&quot;order_datetime&quot;:&quot;2021-11-22 11:04:19&quot;,&quot;deals&quot;:[]},&quot;order&quot;:{&quot;action&quot;:&quot;Sell&quot;,&quot;price&quot;:17880.0,&quot;quantity&quot;:1,&quot;id&quot;:&quot;5e1943de&quot;,&quot;seqno&quot;:&quot;762613&quot;,&quot;account&quot;:{&quot;account_type&quot;:&quot;F&quot;,&quot;person_id&quot;:&quot;XXXXXXX&quot;,&quot;broker_id&quot;:&quot;XXXXXXX&quot;,&quot;account_id&quot;:&quot;XXXXXXX&quot;,&quot;signed&quot;:true},&quot;ca&quot;:&quot;........&quot;,&quot;price_type&quot;:&quot;LMT&quot;,&quot;order_type&quot;:&quot;IOC&quot;,&quot;octype&quot;:&quot;DayTrade&quot;}}}&lt; {&quot;type&quot;:&quot;OderEvent&quot;,&quot;ret&quot;:[&quot;FORDER&quot;,{&quot;operation&quot;:{&quot;op_type&quot;:&quot;New&quot;,&quot;op_code&quot;:&quot;00&quot;,&quot;op_msg&quot;:&quot;&quot;},&quot;order&quot;:{&quot;id&quot;:&quot;5e1943de&quot;,&quot;seqno&quot;:&quot;762613&quot;,&quot;ordno&quot;:&quot;t00Gw&quot;,&quot;account&quot;:{&quot;account_type&quot;:&quot;F&quot;,&quot;person_id&quot;:&quot;&quot;,&quot;broker_id&quot;:&quot;XXXXXXX&quot;,&quot;account_id&quot;:&quot;3918061&quot;,&quot;signed&quot;:true},&quot;action&quot;:&quot;Sell&quot;,&quot;price&quot;:17880.0,&quot;quantity&quot;:1,&quot;order_type&quot;:&quot;IOC&quot;,&quot;market_type&quot;:&quot;Day&quot;,&quot;oc_type&quot;:&quot;DayTrade&quot;,&quot;subaccount&quot;:&quot;&quot;},&quot;status&quot;:{&quot;id&quot;:&quot;5e1943de&quot;,&quot;exchange_ts&quot;:1637550559,&quot;modified_price&quot;:0.0,&quot;cancel_quantity&quot;:0,&quot;order_quantity&quot;:1},&quot;contract&quot;:{&quot;security_type&quot;:&quot;FUT&quot;,&quot;code&quot;:&quot;MXF&quot;,&quot;exchange&quot;:&quot;TIM&quot;,&quot;delivery_month&quot;:&quot;XXXXXXX&quot;,&quot;delivery_date&quot;:&quot;&quot;,&quot;strike_price&quot;:0.0,&quot;option_right&quot;:&quot;Future&quot;}}]}&lt; {&quot;type&quot;:&quot;OderEvent&quot;,&quot;ret&quot;:[&quot;FORDER&quot;,{&quot;operation&quot;:{&quot;op_type&quot;:&quot;Cancel&quot;,&quot;op_code&quot;:&quot;00&quot;,&quot;op_msg&quot;:&quot;&quot;},&quot;order&quot;:{&quot;id&quot;:&quot;5e1943de&quot;,&quot;seqno&quot;:&quot;762613&quot;,&quot;ordno&quot;:&quot;t00Gw&quot;,&quot;account&quot;:{&quot;account_type&quot;:&quot;F&quot;,&quot;person_id&quot;:&quot;&quot;,&quot;broker_id&quot;:&quot;XXXXXXX&quot;,&quot;account_id&quot;:&quot;3918061&quot;,&quot;signed&quot;:true},&quot;action&quot;:&quot;Sell&quot;,&quot;price&quot;:17880.0,&quot;quantity&quot;:1,&quot;order_type&quot;:&quot;IOC&quot;,&quot;market_type&quot;:&quot;Day&quot;,&quot;oc_type&quot;:&quot;DayTrade&quot;,&quot;subaccount&quot;:&quot;&quot;},&quot;status&quot;:{&quot;id&quot;:&quot;5e1943de&quot;,&quot;exchange_ts&quot;:1637550559,&quot;modified_price&quot;:0.0,&quot;cancel_quantity&quot;:1,&quot;order_quantity&quot;:1},&quot;contract&quot;:{&quot;security_type&quot;:&quot;FUT&quot;,&quot;code&quot;:&quot;MXF&quot;,&quot;exchange&quot;:&quot;TIM&quot;,&quot;delivery_month&quot;:&quot;XXXXXXX&quot;,&quot;delivery_date&quot;:&quot;&quot;,&quot;strike_price&quot;:0.0,&quot;option_right&quot;:&quot;Future&quot;}}]}```### 安全事項免責聲明1. 目前系統設計皆未使用加密連線，請自行做好安全控管。2. 任何使用本程式不擔保任何損失且皆與本系統無關請自己負責。3. 不擔保其正確性、即時性或完整性。The MIT License (MIT)Copyright (c) 2021 SteveLoPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE.</longdescription>
</pkgmetadata>