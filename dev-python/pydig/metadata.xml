<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pydigpydig is a python wrapper library for the 'dig' command line tool.[![Build Status](https://travis-ci.org/leonsmith/pydig.svg?branch=master)](https://travis-ci.org/leonsmith/pydig)[![Python Versions](https://img.shields.io/pypi/pyversions/pydig.svg)](https://pypi.org/project/pydig/)[![License](https://img.shields.io/pypi/l/pydig.svg?color=informational)](https://pypi.org/project/pydig/)## Versioningpydig follows [SemVer](https://semver.org/) (MAJOR.MINOR.PATCH) to track what is in each release.* Major version number will be bumped when there is an incompatible API change* Minor version number will be bumped when there is functionality added in a backwards-compatible manner.* Patch version number will be bumped when there is backwards-compatible bug fixes.Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.## InstallationInstallation the package from pypi with your tool of choice `pip`, `poetry`or `pipenv`.```bashpip install pydig```## UsageTo use the default resolver you can call `pydig.query` this resolver will usethe `dig` command found in your `$PATH`.```&gt;&gt;&gt; import pydig&gt;&gt;&gt; pydig.query('example.com', 'A')['93.184.216.34']&gt;&gt;&gt; pydig.query('www.github.com', 'CNAME')['github.com.']&gt;&gt;&gt; pydig.query('example.com', 'NS')['a.iana-servers.net.', 'b.iana-servers.net.']```If your want to adjust the executable location, the nameservers to dig willquery against or would like to pass additional arguments/flags, you canconfigure your own instance of a resolver. and call the `query` method of yourcustom resolver.```&gt;&gt;&gt; import pydig&gt;&gt;&gt; resolver = pydig.Resolver(...     executable='/usr/bin/dig',...     nameservers=[...         '1.1.1.1',...         '1.0.0.1',...     ],...     additional_args=[...         '+time=10',...     ]... )&gt;&gt;&gt; resolver.query('example.com', 'A')&gt;&gt;&gt; ['93.184.216.34']```## DocumentationThe code is 150~ lines with 100% test coveragehttps://github.com/leonsmith/pydig/tree/master/pydig</longdescription>
</pkgmetadata>