<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># trustpilot[![Build Status](https://travis-ci.org/trustpilot/python-trustpilot.svg?branch=master)](https://travis-ci.org/trustpilot/python-trustpilot) [![Latest Version](https://img.shields.io/pypi/v/trustpilot.svg)](https://pypi.python.org/pypi/trustpilot) [![Python Support](https://img.shields.io/pypi/pyversions/trustpilot.svg)](https://pypi.python.org/pypi/trustpilot)Python HTTP client for [Trustpilot](https://developers.trustpilot.com/).### Features- Extends the [`requests.Session`](http://docs.python-requests.org/en/master/api/#requests.Session) class with automatic authentication for public and private endpoints- GET, POST, PUT, DELETE, HEAD, OPTIONS and PATCH methods are exposed on module level- Implements session factory and default singleton session- Provides a simple hook system- [CLI](#CLI) tool with basic HTTP commands## InstallationInstall the package from [PyPI](http://pypi.python.org/pypi/) using [pip](https://pip.pypa.io/):```pip install trustpilot```## Usage_(for **full usage documentation** checkout [docs](https://github.com/trustpilot/python-trustpilot/blob/master/docs/README.md))_```pythonfrom trustpilot import clientclient.default_session.setup(    api_host=&quot;https://api.trustpilot.com&quot;    api_key=&quot;YOUR_API_KEY&quot;)response = client.get(&quot;/foo/bar&quot;)status_code = response.status_code```You can rely on environment variables for the setup of sessions so```bash$ envTRUSTPILOT_API_HOST=https://api.trustpilot.comTRUSTPILOT_API_KEY=fooTRUSTPILOT_API_SECRET=bar```### CLIThe `trustpilot_api_client` command is bundled with the install```bashUsage: trustpilot_api_client [OPTIONS] COMMAND [ARGS]...Options:  --host TEXT                     Host name  --version TEXT                  Api version  --key TEXT                      Api key  --secret TEXT                   Api secret  --token_issuer_host TEXT        Token issuer host name  --username TEXT                 Trustpilot username  --password TEXT                 Trustpilot password  -c, --config FILENAME           Json config file name  -e, --env FILENAME              Dot env file  -of, --outputformat [json|raw]  Output format, default=json  -v, --verbose                   Verbosity level  --help                          Show this message and exit.Commands:  create-access-token  Get an access token  delete               Send a DELETE request  get                  Send a GET request  post                 Send a POST request with specified data  put                  Send a PUT request with specified data```You can also supply the variables with:**--config/-c** : As JSON config file in the following format:```json{  &quot;TRUSTPILOT_API_HOST&quot;: &quot;foo&quot;,  &quot;TRUSTPILOT_API_KEY&quot;: &quot;bar&quot;,  &quot;TRUSTPILOT_API_SECRET&quot;: &quot;baz&quot;,  &quot;TRUSTPILOT_API_VERSION&quot;: &quot;v1&quot;,  &quot;TRUSTPILOT_USERNAME&quot;: &quot;username&quot;,  &quot;TRUSTPILOT_PASSWORD&quot;: &quot;password&quot;}```or **--env/-e** : As DotEnv config file in the following format:```iniTRUSTPILOT_API_HOST=fooTRUSTPILOT_API_KEY=barTRUSTPILOT_API_SECRET=bazTRUSTPILOT_API_VERSION=v1TRUSTPILOT_USERNAME=usernameTRUSTPILOT_PASSWORD=password```## Changelogsee [HISTORY.md](https://github.com/trustpilot/python-trustpilot/blob/master/HISTORY.md)## Issues / DEVReport issues [here](https://github.com/trustpilot/python-trustpilot/issues) and we welcome collaboration through PullRequests :-)</longdescription>
</pkgmetadata>