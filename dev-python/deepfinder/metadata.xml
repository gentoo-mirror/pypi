<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;üîç Deepfinder &lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;![](https://img.shields.io/badge/PRs-welcome-green.svg)[![GitHub](https://img.shields.io/github/license/jparadadev/deepfinder.py)](https://github.com/jparadadev/deepfinder.py/blob/main/LICENSE)[![Pypi](https://img.shields.io/pypi/v/deepfinder)](https://pypi.org/project/deepfinder/)[![Downloads](https://pepy.tech/badge/deepfinder)](https://pepy.tech/project/deepfinder)[![GA](https://github.com/jparadadev/deepfinder.py/workflows/Tests/badge.svg)](https://github.com/jparadadev/deepfinder.py/actions/workflows/test.yml)  &lt;/div&gt;![](https://raw.githubusercontent.com/jparadadev/deepfinder.py/assets/assets/logo.png)Search attributes easily using dot paths. Within structures of type dictionary, list and embedded substructures with simple format 'dict.users.0.name'.## Getting Started### Installation```Shell  pip install deepfinder```### Usage#### Basic sample```pythonfrom deepfinder import deep_finduser: dict = {    'name': 'ash',    'links': {        'pokehub': '@ash'    },}print(deep_find(user, 'links.pokehub'))# output: '@ash'```#### List sample```pythonfrom deepfinder import deep_finduser: dict = {    'name': 'ash',    'pokemons': [        {            'name': 'pikachu',            'type': 'electric'        },        {            'name': 'charmander',            'type': 'fire'        }    ]}print(deep_find(user, 'pokemons.0.name'))# output: 'pikachu'```#### List all result sample```pythonfrom deepfinder import deep_finduser: dict = {    'name': 'ash',    'pokemons': [        {            'name': 'pikachu',            'type': 'electric'        },         {            'name': 'charmander',            'type': 'fire'        }    ]}print(deep_find(user, 'pokemons.*.name'))# output: ['pikachu', 'charmander']```#### Find the first non-null result```pythonfrom deepfinder import deep_finduser: dict = {    'name': 'ash',    'pokemons': [        {            'name': 'pikachu',        },        {            'name': 'charmander',            'ball': 'superball'        }    ]}print(deep_find(user, 'pokemons.?.ball'))# output: 'superball'```#### Find all non-null results```pythonfrom deepfinder import deep_finduser: dict = {    'name': 'ash',    'pokemons': [        {            'name': 'pikachu',        },        {            'name': 'charmander',            'ball': 'superball'        },        {            'name': 'lucario',            'ball': 'ultraball'        }    ]}print(deep_find(user, 'pokemons.*?.ball'))# output: ['superball', 'ultraball']```### Use custom dict and list```pythonfrom deepfinder.entity import DeepFinderDictuser: dict = DeepFinderDict({    'name': 'ash',    'pokemons': [        {            'name': 'pikachu'        },        {            'name': 'charmander',            'ball': 'superball'        }    ]})print(user.deep_find('pokemons.?.ball'))# output: 'superball'``````pythonfrom deepfinder.entity import DeepFinderListusers: list = DeepFinderList([{    'name': 'ash',    'pokemons': [        {            'name': 'pikachu'        },         {            'name': 'charmander',            'ball': 'superball'        }    ]}])print(users.deep_find('0.pokemons.?.ball'))# output: 'superball'```</longdescription>
</pkgmetadata>