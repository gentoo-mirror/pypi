<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>eulxml======**package**  .. image:: https://img.shields.io/pypi/v/eulxml.svg    :target: https://pypi.python.org/pypi/eulxml    :alt: PyPI  .. image:: https://img.shields.io/github/license/emory-libraries/eulxml.svg    :alt: License  .. image:: https://img.shields.io/pypi/dm/eulxml.svg    :alt: PyPI downloads**documentation**  .. image:: https://readthedocs.org/projects/eulxml/badge/?version=latest    :target: http://eulxml.readthedocs.org/en/latest/?badge=latest    :alt: Documentation Status**code**  .. image:: https://travis-ci.org/emory-libraries/eulxml.svg    :alt: travis-ci build    :target: https://travis-ci.org/emory-libraries/eulxml  .. image:: https://coveralls.io/repos/github/emory-libraries/eulxml/badge.svg    :target: https://coveralls.io/github/emory-libraries/eulxml    :alt: Code Coverage  .. image:: https://codeclimate.com/github/emory-libraries/eulxml/badges/gpa.svg    :target: https://codeclimate.com/github/emory-libraries/eulxml    :alt: Code Climate  .. image:: https://requires.io/github/emory-libraries/eulxml/requirements.svg    :target: https://requires.io/github/emory-libraries/eulxml/requirementseulxml is a `Python &lt;http://www.python.org/&gt;`_ module that providesutilities and classes for interacting with XML that allow thedefinition of re-usable XML objects that can be accessed, updated andcreated as standard Python types, and a form component for editing XMLwith `Django &lt;https://www.djangoproject.com/&gt;`_ forms.**eulxml.xpath** provides functions and classes for parsing XPathexpressions using `PLY &lt;http://www.dabeaz.com/ply/&gt;`_.**eulxml.xmlmap** makes it easier to map XML to Python objects in anicer, more pythonic and object-oriented way than typical DOM accessusually provides.  XML can be read, modified, and even created fromscratch (in cases where the configured XPath is simple enough todetermine the nodes that should be constructed).**eulxml.forms** provides Django Form objects that use**eulxml.xmlmap.XmlObject** instances as the basis and data instancefor the form, with the goal of making it easy to edit XML contentvia web forms.Dependencies------------**eulxml** depends on `PLY &lt;http://www.dabeaz.com/ply/&gt;`_ and `lxml&lt;http://lxml.de/&gt;`_.**eulxml.forms** requires and was designed to be used with`Django &lt;https://www.djangoproject.com/&gt;`_, although Django is notrequired for installation and use of the non-form components of**eulxml**.Contact Information-------------------**eulxml** was created by the Digital Programs and Systems SoftwareTeam of `Emory University Libraries &lt;http://web.library.emory.edu/&gt;`_.libsysdev-l@listserv.cc.emory.eduLicense-------**eulxml** is distributed under the Apache 2.0 License.Development History-------------------For instructions on how to see and interact with the full developmenthistory of **eulxml**, see`eulcore-history &lt;https://github.com/emory-libraries/eulcore-history&gt;`_.Developer notes---------------As of version 1.1, eulxml provides an `XML catalog &lt;http://lxml.de/resolvers.html#xml-catalogs&gt;`_for loading schemas referenced by included XmlObject instances. `Requests &lt;https://github.com/kennethreitz/requests&gt;`_ is required for downloading schemas, but it is not a dependency of eulxml. Thecatalog and schemas will be included in distributed releases, but if youwant to use the catalog when installing directly from GitHub you canuse a normal pip install and then run::  python -c 'from eulxml.catalog import generate_catalog; generate_catalog()'To install dependencies for your local check out of the code, run ``pip install``in the ``eulxml`` directory (the use of `virtualenv`_ is recommended)::    pip install -e ... _virtualenv: http://www.virtualenv.org/en/latest/If you want to run unit tests or build sphinx documentation, you will alsoneed to install development dependencies::    pip install -e . &quot;eulxml[dev]&quot;To run all unit tests::    nosetests   # for normal development    nosetests --with-coverage --cover-package=eulxml --cover-xml --with-xunit   # for continuous integrationTo run unit tests for a specific module, use syntax like this::    nosetests test/test_xpath.pyTo generate sphinx documentation::    cd doc    make html</longdescription>
</pkgmetadata>