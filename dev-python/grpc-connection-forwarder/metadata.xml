<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># gRPC Connection Forwarder`grpc_connection_forwarder` is a Python package that helps you forward incoming TCP connections to a gRPC server. It is particularly useful when you need to track the number of active connections.## Features- Forward incoming TCP connections to a gRPC server- Connection counter with callback support- Thread-safe implementation- Easy integration with existing gRPC servers## InstallationYou can install `grpc_connection_forwarder` using pip:```bashpip install grpc_connection_forwarder```## Usage Here's a simple example of how to use grpc_connection_forwarder with a gRPC server:```python import grpcfrom grpc_connection_forwarder import GrpcConnnectionForwarderfrom your_grpc_package import YourGRPCServer# Initialize your gRPC servergrpc_server = grpc.server(thread_pool=ThreadPoolExecutor())your_grpc_service = YourGRPCServer()# ... (add your services to the gRPC server)# Define a callback function to handle connection count changes (optional)def connection_count_callback(count):    print(f&quot;Connected users: {count}&quot;)# Initialize the gRPC Connection Forwarderforwarder = GrpcConnnectionForwarder(grpc_server, callback=connection_count_callback)# Start the forwarderforwarder.serve(host='localhost', port=50051)``` ## ContributingWe welcome contributions to `grpc_connection_forwarder`. If you find a bug or want to propose a new feature, please open a GitHub issue or submit a pull request.## LicenseThis project is licensed under the MIT License. See `LICENSE` for details.</longdescription>
</pkgmetadata>