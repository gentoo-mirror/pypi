<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mydot -- A Python Module for managing dotfilesSuper-charged version of the [Atlassian][atlassian] approach to managing dotfiles using a bare git repo + [`fzf`][fzf] magic!## Quick Start1. **Configure shell:** At the bottom of your `~/.bashrc` add:    ```bash    export DOTFILES=&quot;$HOME/.config/dotfiles&quot;    alias d.=&quot;python -m mydot&quot;    ```    _what and why?_:    - `DOTFILES`: variable pointing to your local `--bare` dotfiles repository    - `d.` alias to invoke `mydot`'s command line interface2. **Initialize dotfiles repository:** First open a new shell or `source    ~/.bashrc` then:    ```bash    mkdir -pv $DOTFILES         # create directory    git init --bare $DOTFILES   # initialize the repository    ```3. **Install** `mydot`, `fzf`, and disable viewing of untracked files    ```bash    pip install --user mydot    sudo apt install fzf -y    d. git config --local status.showUntrackedFiles no    ```3. **Add files** to your dotfiles repo    ```bash    d. git add ~/.vimrc ~/.tmux.conf ~/.bashrc ~/.bash_aliases    d. git commit -m &quot;the journey of a thousand miles begins with one step&quot;    ```    _protip:_ `d. git` gives you full control and lets you do anything available from the `git` command.4. **Feel the power** with `mydot`    ```bash    d. --edit   # choose a file to open in $EDITOR    d. --add    # add changed files to staging area    d. --run    # select an executable file to run    d. --grep   # grep through tracked dotfiles and pick from matches    d. --restore # remove files from staging area    d. --discard # discard unstaged changes from work tree    d. --tar    # make a tarball of your dotfiles    d. --clip   # put file paths into the clipboard    d. --status # see the state of your repo    d. --ls     # list all files under version control    d. --help   # see more details about available commands    ```## Going Deeper### Useful aliases```bashalias es=&quot;python -m mydot --edit&quot; # quick select a file to editalias rs=&quot;python -m mydot --run&quot; # quick select a script to run```### Source of TruthThis project is available on [GitHub][github] and [GitLab][gitlab]. Each push to `master` automatically goes to both so choose whichever platform you prefer. All releases are published to [PyPi][pypi][github]: &lt;https://github.com/gikeymarcia/mydot&gt;&quot;Follow and Contribute on GitHub&quot;[gitlab]: &lt;https://gitlab.com/gikeymarcia/mydot&gt;&quot;Follow and Contribute on GitLab&quot;[pypi]: &lt;https://pypi.org/project/mydot/&gt;&quot;mydot project homepage on PyPi.org&quot;[atlassian]: &lt;https://www.atlassian.com/git/tutorials/dotfiles&gt;&quot;The best way to store your dotfiles: A bare Git repository&quot;[fzf]: &lt;https://github.com/junegunn/fzf&gt;&quot;A command-line fuzzy finder&quot;</longdescription>
</pkgmetadata>