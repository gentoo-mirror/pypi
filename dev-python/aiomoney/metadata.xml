<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aiomoney — простая асинхронная библиотека для работы с API ЮMoney### Авторизация приложения1. Зарегистрируйте новое приложение YooMoney по ссылке https://yoomoney.ru/myservices/new   (без указания чекбокса OAuth2!).2. Получите и скопируйте `client_id` после создания приложения3. Создайте запрос на получение api-токена.   [О правах приложения](https://yoomoney.ru/docs/wallet/using-api/authorization/protocol-rights)   ```python   import asyncio   from os import environ   from aiomoney import authorize_app         async def main():       await authorize_app(           client_id=environ.get(&quot;CLIENT_ID&quot;),           redirect_uri=environ.get(&quot;REDIRECT_URI&quot;),           app_permissions=[               &quot;account-info&quot;,               &quot;operation-history&quot;,               &quot;operation-details&quot;,               &quot;incoming-transfers&quot;,               &quot;payment-p2p&quot;,               &quot;payment-shop&quot;,           ]       )         if __name__ == &quot;__main__&quot;:       asyncio.run(main())   ```4. Во время перенаправления по `redirect_uri` в адресной строке появится параметр `code=`.   Скопируйте значение и вставьте его в консоль5. Если авторизация прошла успешно, в консоли отобразится Ваш api-token.   Сохраните его в переменную окружения (рекомендация)### Получение основной информации об аккаунте```pythonimport asynciofrom aiomoney.types import AccountInfo, Operation, OperationDetailsfrom aiomoney.wallet import YooMoneyWalletasync def main():    wallet = YooMoneyWallet(access_token=&quot;ACCESS_TOKEN&quot;)        account_info: AccountInfo = await wallet.account_info    operation_history: list[Operation] = await wallet.get_operation_history()    operation_details: OperationDetails = await wallet.get_operation_details(operation_id=&quot;999&quot;)if __name__ == &quot;__main__&quot;:    asyncio.run(main())```### Создание платёжной формы и проверка оплаты```pythonimport asynciofrom aiomoney.wallet import YooMoneyWallet, PaymentSourceasync def main():    wallet = YooMoneyWallet(access_token=&quot;ACCESS_TOKEN&quot;)        payment_form = await wallet.create_payment_form(        amount_rub=990,        unique_label=&quot;myproject_second_unicorn&quot;,        payment_source=PaymentSource.YOOMONEY_WALLET,        success_redirect_url=&quot;https://t.me/fofmow (nonono =/)&quot;    )    # проверка платежа по label    payment_is_completed: bool = await wallet.check_payment_on_successful(payment_form.payment_label)        print(f&quot;Ссылка на оплату:\n{payment_form.link_for_customer}\n\n&quot;          f&quot;Форма оплачена: {'Да' if payment_is_completed else 'Нет'}&quot;)if __name__ == &quot;__main__&quot;:    asyncio.run(main())```</longdescription>
</pkgmetadata>