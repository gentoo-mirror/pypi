<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Welcome to Robot Framework Lint===============================Static analysis for robot framework plain text files.This is a static analysis tool for robot framework plain text files.Installation Instructions-------------------------The preferred method of installation is to use pip:    $ pip install --upgrade robotframework-lintThis will install a package named &quot;rflint&quot;, and an executable named &quot;rflint&quot;Running the linter------------------To run, use the command &quot;rflint&quot;, or use the `-m` option to python torun the rflint module. Add one or more filenames as arguments, andthose files will be checked for rule violations.Custom rules------------Rules are simple python classes. For more information about how towrite rules, see the[robotframework-lint wiki](https://github.com/boakley/robotframework-lint/wiki)Argument files--------------rflint supports argument files much in the same way as robot framework. You canput arguments one per line in a file, and reference that file with the option`-A` or `--argument-file`.Argument files are a convenient way to create a set of rules and rule configurationsthat you want to apply to your files.Examples--------    $ rflint myTestSuite.robotTo see a list of all of the built-in rules, run the following command    $ rflint --listTo see documentation, add the --verbose option:    $ rflint --list --verboseSome rules are configurable. For example, to configure the &quot;LineTooLong&quot;rule to flag lines longer than 80 characters (the default is 100), youcan change the default value with the configure option:    $ rflint --configure LineTooLong:80 myTestSuite.robotYou can disable any rule, or configure it to be a warning or errorwith the options --warning, --error and --ignore. For example, toignore the LineTooLong rule you can do this:    $ rflint --ignore LineTooLong myTestSuite.robotTo see a list of all command line options, use the `--help` option:    $ python -m rflint --helpExample output:    $ python -m rflint myTestSuite.robot    + myTestSuite.robot    W: 2, 0: No suite documentation (RequireSuiteDocumentation)    E: 15, 0: No keyword documentation (RequireKeywordDocumentation)This show a warning on line two, character 0, where there should be suitedocumentation but isn't. It also shows an error on line 15, character 0,where there should be keyword documentation but there isn't.Acknowledgements================A huge thank-you to Echo Global Logistics (http://www.echo.com) forsupporting the development of this package.</longdescription>
</pkgmetadata>