<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># numpymaxflow: Max-flow/Min-cut in numpy for 2D images and 3D volumes[![License](https://img.shields.io/badge/License-BSD_3--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)&lt;img src=&quot;https://img.shields.io/pypi/dm/numpymaxflow.svg?label=PyPI%20downloads&amp;logo=python&amp;logoColor=green&quot;/&gt;[![CI Build](https://github.com/masadcv/numpymaxflow/actions/workflows/build.yml/badge.svg)](https://github.com/masadcv/numpymaxflow/actions/workflows/build.yml)[![PyPI version](https://badge.fury.io/py/numpymaxflow.svg)](https://badge.fury.io/py/numpymaxflow)&lt;img src=&quot;https://img.shields.io/badge/Python-%203.8%20|%203.9%20|%203.10%20|%203.11-3776ab.svg&quot;/&gt;&lt;img src=&quot;https://img.shields.io/badge/numpy-%3E%3D%201.22.0-brightgreen.svg&quot;/&gt;Numpy-based implementation of Max-flow/Min-cut based on the following paper:- Boykov, Yuri, and Vladimir Kolmogorov. &quot;An experimental comparison of min-cut/max-flow algorithms for energy minimization in vision.&quot; IEEE transactions on pattern analysis and machine intelligence 26.9 (2004): 1124-1137.If you want same functionality in PyTorch, then consider [PyTorch-based implementation](https://github.com/masadcv/torchmaxflow)## CitationIf you use this code in your research, then please consider citing: **Asad, Muhammad, Lucas Fidon, and Tom Vercauteren. [&quot;ECONet: Efficient Convolutional Online Likelihood Network for Scribble-based Interactive Segmentation.&quot;](https://openreview.net/pdf?id=9xtE2AgD_Cc) Medical Imaging with Deep Learning (MIDL), 2022.**## Installation instructions`pip install numpymaxflow`or ```# Clone and install from github repo$ git clone https://github.com/masadcv/numpymaxflow$ cd numpymaxflow$ pip install -r requirements.txt$ python setup.py install```## Example outputsMaxflow2d![./figures/numpymaxflow_maxflow2d.png](https://raw.githubusercontent.com/masadcv/numpymaxflow/main/figures/numpymaxflow_maxflow2d.png)Interactive maxflow2d![./figures/numpymaxflow_intmaxflow2d.png](https://raw.githubusercontent.com/masadcv/numpymaxflow/main/figures/numpymaxflow_intmaxflow2d.png)![figures/figure_numpymaxflow.png](https://raw.githubusercontent.com/masadcv/numpymaxflow/main/figures/figure_numpymaxflow.png)## Example usageThe following demonstrates a simple example showing numpymaxflow usage:```pythonimage = np.asarray(Image.open('data/image2d.png').convert('L'), np.float32)image = np.expand_dims(image, axis=0)prob = np.asarray(Image.open('data/image2d_prob.png'), np.float32)lamda = 20.0sigma = 10.0post_proc_label = numpymaxflow.maxflow(image, prob, lamda, sigma)```For more usage examples see: **2D and 3D maxflow and interactive maxflow examples**: [`demo_maxflow.py`](https://raw.githubusercontent.com/masadcv/numpymaxflow/main/demo_maxflow.py)  ## References- [OpenCV's Graphcut implementation](https://github.com/opencv/opencv/blob/4.x/modules/imgproc/include/opencv2/imgproc/detail/gcgraph.hpp)- [SimpleCRF's maxflow implementation](https://github.com/HiLab-git/SimpleCRF)- [torchmaxflow's implementation](https://github.com/masadcv/torchmaxflow)This repository depends on the code for [maxflow from latest version of OpenCV](https://github.com/opencv/opencv/blob/4.x/modules/imgproc/include/opencv2/imgproc/detail/gcgraph.hpp), which has been included.&lt;!-- BibTeX:```@inproceedings{asad2022econet,title={{ECON}et: Efficient Convolutional Online Likelihood Network for Scribble-based Interactive Segmentation},author={Muhammad Asad and Lucas Fidon and Tom Vercauteren},booktitle={Medical Imaging with Deep Learning},year={2022},url={https://openreview.net/forum?id=9xtE2AgD_Cc}}``` --&gt;</longdescription>
</pkgmetadata>