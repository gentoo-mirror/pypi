<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Announce ServerA Python library that announces a server to a host.## Installation```bashpip install announce-server```## DevelopmentTo install the developer dependencies required for testing and publishing:```bashpip install -e .[dev,pub]```## BuildTo build the package, run:```bashrm -rf dist/ build/ .eggs/ .pytest_cache/ src/announce_server.egg-info/python -m build --sdist --wheel```To publish:```bashtwine upload dist/*```## TestTo run the tests, call:```bashpytest```## Usage```pythonfrom announce_server import register_service@register_service(name=&quot;server_name&quot;, ip=&quot;server_ip&quot;, port=8000, host_ip=&quot;host_server_ip&quot;, host_port=5000, retry_interval=5)def your_function():    pass```## RegistryThe `announce_server` CLI provides a simple way to start a registry server. The registry server keeps track of available services and periodically sends heartbeat messages to ensure that registered services are still active.### Command```bashannounce_server start_registry [--address ADDRESS] [--port PORT] [--heartbeat_interval INTERVAL] [--heartbeat_timeout TIMEOUT]```### Arguments- `--address ADDRESS`: The IP address of the server. Default: `0.0.0.0`.- `--port PORT`: The port number of the server. Default: `4999`.- `--heartbeat_interval INTERVAL`: The interval between heartbeat messages in seconds. Default: `5`.- `--heartbeat_timeout TIMEOUT`: The timeout for waiting for a response in seconds. Default: `3`.### ExampleTo start the registry server with the default configuration, run:```bashannounce_server start_registry```The full syntax is equivalent to:```bashannounce_server start_registry --address 0.0.0.0 --port 4999 --heartbeat_interval 5 --heartbeat_timeout 3```</longdescription>
</pkgmetadata>