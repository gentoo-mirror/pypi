<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Lorem ipsum generator.In publishing and graphic design, lorem ipsum is a placeholder text commonlyused to demonstrate the visual form of a document or a typeface withoutrelying on meaningful content.The `lorem` module provides a generic access to generating the lorem ipsum textfrom its very original text:&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod&gt; tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim&gt; veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea&gt; commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit&gt; esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat&gt; cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id&gt; est laborum.Usage of the `lorem` module is rather simple. Depending on your needs, the`lorem` module provides generation of **word**s, **sentence**s, and**paragraph**s.Get Random Words----------------The `lorem` module provides two different ways for getting random words.1. `word` -- generate a list of random words   ```python   word(count=1, func=None, args=[], kwargs={}) -&gt; Iterable[str]   ```2. `get_word` -- return random words   ```python   get_word(count=1, sep=' ', func=None, args=[], kwargs={}) -&gt; str   ```Get Random Sentences--------------------The `lorem` module provides two different ways for getting random sentences.1. `sentence` -- generate a list of random sentences   ```python   sentence(count=1, comma=(0, 2), word_range=(4, 8)) -&gt; Iterable[str]   ```2. `get_sentence` -- return random sentences   ```python   get_sentence(count=1, comma=(0, 2), word_range=(4, 8), sep=' ') -&gt; Union[str]   ```Get Random Paragraphs---------------------The `lorem` module provides two different ways for getting random paragraphs.1. `paragraph` -- generate a list of random paragraphs   ```python   paragraph(count=1, comma=(0, 2), word_range=(4, 8), sentence_range=(5, 10)) -&gt; Iterable[str]   ```2. `get_paragraph` -- return random paragraphs   ```python   get_paragraph(count=1, comma=(0, 2), word_range=(4, 8), sentence_range=(5, 10), sep=os.linesep) -&gt; Union[str]   ```</longdescription>
</pkgmetadata>