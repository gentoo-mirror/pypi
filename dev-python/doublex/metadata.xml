<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/doublex.png    :target: http://pypi.python.org/pypi/doublex    :alt: Latest PyPI version.. image:: https://img.shields.io/pypi/l/doublex.png?maxAge=2592000    :alt: License.. image:: https://img.shields.io/pypi/pyversions/doublex.png?maxAge=2592000    :target: http://pypi.python.org/pypi/doublex    :alt: Supported Python Versions.. image:: https://github.com/DavidVilla/python-doublex/actions/workflows/tests.yml/badge.svg    :target: https://github.com/DavidVilla/python-doublex    :alt: GitHub Actions CI statusPowerful test doubles framework for Python[`install   &lt;http://python-doublex.readthedocs.org/en/latest/install.html&gt;`_ |`docs      &lt;http://python-doublex.readthedocs.org/&gt;`_ |`changelog &lt;http://python-doublex.readthedocs.org/en/latest/release-notes.html&gt;`_ |`sources   &lt;https://bitbucket.org/DavidVilla/python-doublex&gt;`_ |`issues    &lt;https://bitbucket.org/DavidVilla/python-doublex/issues&gt;`_ |`PyPI      &lt;http://pypi.python.org/pypi/doublex&gt;`_ |`github clone &lt;https://github.com/davidvilla/python-doublex&gt;`_ ]a trivial example-----------------.. sourcecode:: python   import unittest   from doublex import Spy, assert_that, called   class SpyUseExample(unittest.TestCase):       def test_spy_example(self):           # given           spy = Spy(SomeCollaboratorClass)           cut = YourClassUnderTest(spy)           # when           cut.a_method_that_call_the_collaborator()           # then           assert_that(spy.some_method, called())See more about `doublex doubles &lt;http://python-doublex.readthedocs.org/en/latest/reference.html#doubles&gt;`_.Features--------* doubles have not public API framework methods. It could cause silent misspelling.* doubles do not require collaborator instances, just classes, and it never instantiate them.* ``assert_that()`` is used for ALL assertions.* mock invocation order is relevant by default.* supports old and new style classes.* **supports Python versions: 3.6, 3.7, 3.8, 3.9, 3.10**Debian^^^^^^* amateur repository: ``deb https://uclm-arco.github.io/debian sid main`` (always updated)* `official package &lt;http://packages.debian.org/source/sid/doublex&gt;`_ (may be outdated)* `official ubuntu package  &lt;https://launchpad.net/ubuntu/+source/doublex&gt;`_* debian dir: ``svn://svn.debian.org/svn/python-modules/packages/doublex/trunk``related-------* `slides           &lt;http://arco.esi.uclm.es/~david.villa/python-doublex/slides&gt;`_* `pyDoubles        &lt;http://python-doublex.readthedocs.org/en/latest/pyDoubles.html&gt;`_* `doublex-expects  &lt;https://pypi.python.org/pypi/doublex-expects&gt;`_* `crate            &lt;https://crate.io/packages/doublex/&gt;`_* `other doubles    &lt;http://garybernhardt.github.io/python-mock-comparison/&gt;`_* `ludibrio         &lt;https://pypi.python.org/pypi/ludibrio&gt;`_* `doubles          &lt;https://github.com/uber/doubles&gt;`_.. Local Variables:..  coding: utf-8..  mode: rst..  mode: flyspell..  ispell-local-dictionary: &quot;american&quot;..  fill-columnd: 90.. End:</longdescription>
</pkgmetadata>