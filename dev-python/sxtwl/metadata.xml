<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>### 介绍 sxtwl_cpp是参考[寿星天文历](http://www.nongli.net/sxwnl/)并使用C++实现日历库。因为其依据天文历法算法实现，故其可查询范围广(BC722年以后与实历相符，支持1800年以前及2200年以后的日历查询)。支持Android、IOS、Windows、MacOS、Linux等平台。使用swig暴露接口给python,lua,java等语言使用。### 安装方法```pip install sxtwl```旧工程代码兼容如果有已使用V1.x版本的工程，想兼容代码```pip install sxtwl==1.1.0```或者在requirements.txt里修改```sxtwl 1.1.0```具体使用方法参考：https://pypi.org/project/sxtwl/本项目 [GitHub](https://github.com/yuangu/sxtwl_cpp) / [Gitee（码云）](https://gitee.com/yuangu/sxtwl)。### 使用方法 &lt;font color='red'&gt; 注:因为pip上传后不能二次修改，参考事例可能会有错误无法修改，如果发现下面例子不能用，请以为准: [传送门](https://github.com/yuangu/sxtwl_cpp/blob/master/example/main.py)  &lt;/font&gt;1. 因为考虑到繁体和简体字的原因，所以本库不以硬编码的形式显示结果。下面是参考的简单索引```Gan = [&quot;甲&quot;, &quot;乙&quot;, &quot;丙&quot;, &quot;丁&quot;, &quot;戊&quot;, &quot;己&quot;, &quot;庚&quot;, &quot;辛&quot;, &quot;壬&quot;, &quot;癸&quot;]Zhi = [&quot;子&quot;, &quot;丑&quot;, &quot;寅&quot;, &quot;卯&quot;, &quot;辰&quot;, &quot;巳&quot;, &quot;午&quot;, &quot;未&quot;, &quot;申&quot;, &quot;酉&quot;, &quot;戌&quot;, &quot;亥&quot;]ShX = [&quot;鼠&quot;, &quot;牛&quot;, &quot;虎&quot;, &quot;兔&quot;, &quot;龙&quot;, &quot;蛇&quot;, &quot;马&quot;, &quot;羊&quot;, &quot;猴&quot;, &quot;鸡&quot;, &quot;狗&quot;, &quot;猪&quot;]numCn = [&quot;零&quot;, &quot;一&quot;, &quot;二&quot;, &quot;三&quot;, &quot;四&quot;, &quot;五&quot;, &quot;六&quot;, &quot;七&quot;, &quot;八&quot;, &quot;九&quot;, &quot;十&quot;]jqmc = [&quot;冬至&quot;, &quot;小寒&quot;, &quot;大寒&quot;, &quot;立春&quot;, &quot;雨水&quot;, &quot;惊蛰&quot;, &quot;春分&quot;, &quot;清明&quot;, &quot;谷雨&quot;, &quot;立夏&quot;,     &quot;小满&quot;, &quot;芒种&quot;, &quot;夏至&quot;, &quot;小暑&quot;, &quot;大暑&quot;, &quot;立秋&quot;, &quot;处暑&quot;,&quot;白露&quot;, &quot;秋分&quot;, &quot;寒露&quot;, &quot;霜降&quot;,      &quot;立冬&quot;, &quot;小雪&quot;, &quot;大雪&quot;]ymc = [&quot;十一&quot;, &quot;十二&quot;, &quot;正&quot;, &quot;二&quot;, &quot;三&quot;, &quot;四&quot;, &quot;五&quot;, &quot;六&quot;, &quot;七&quot;, &quot;八&quot;, &quot;九&quot;, &quot;十&quot; ]rmc = [&quot;初一&quot;, &quot;初二&quot;, &quot;初三&quot;, &quot;初四&quot;, &quot;初五&quot;, &quot;初六&quot;, &quot;初七&quot;, &quot;初八&quot;, &quot;初九&quot;, &quot;初十&quot;,     &quot;十一&quot;, &quot;十二&quot;, &quot;十三&quot;, &quot;十四&quot;, &quot;十五&quot;, &quot;十六&quot;, &quot;十七&quot;, &quot;十八&quot;, &quot;十九&quot;, &quot;二十&quot;,     &quot;廿一&quot;, &quot;廿二&quot;, &quot;廿三&quot;, &quot;廿四&quot;, &quot;廿五&quot;, &quot;廿六&quot;, &quot;廿七&quot;, &quot;廿八&quot;, &quot;廿九&quot;, &quot;三十&quot;, &quot;卅一&quot;]XiZ = ['摩羯', '水瓶', '双鱼', '白羊', '金牛', '双子', '巨蟹', '狮子', '处女', '天秤', '天蝎', '射手']WeekCn = [&quot;星期日&quot;, &quot;星期一&quot;, &quot;星期二&quot;, &quot;星期三&quot;, &quot;星期四&quot;, &quot;星期五&quot;, &quot;星期六&quot;]```2. 引入本库```import  sxtwl# 从公历年月日获取一天的信息day = sxtwl.fromSolar(2021, 11, 7) # 从农历年月日获取一天的信息day = sxtwl.fromLunar(2020, 12, 1)```3. 获取某天的信息(这里的信息有，阴历，阳历，二十四节气，天干地支，星期几等)```# 公历的年月日s = &quot;公历:%d年%d月%d日&quot; % (day.getSolarYear(), day.getSolarMonth(), day.getSolarDay())print(s)# 星期几print(WeekCn[day.getWeek()])# 这个月的第几周print('该日属于这个月的第%d周'%(day.getWeekIndex(),))# 星座(有bug?待修复)print(&quot;星座:&quot;, XiZ[day.getConstellation()])# 以春节为界的农历(注getLunarYear如果没有传参，或者传true，是以春节为界的)s = &quot;农历:%d年%s%d月%d日&quot; % (day.getLunarYear(),     '闰' if day.isLunarLeap() else '', day.getLunarMonth(), day.getLunarDay())print(s)# 以立春为界的农历s = &quot;农历:%d年%s%d月%d日&quot; % (day.getLunarYear(False),     '闰' if day.isLunarLeap() else '', day.getLunarMonth(), day.getLunarDay())print(s)# 以春节为界的天干地支 yTG = day.getYearGZ(True)print(&quot;以春节为界的年干支&quot;, Gan[yTG.tg] + Zhi[yTG.dz]) print(&quot;以春节为界的生肖:&quot;, ShX[yTG.dz])# 以立春为界的天干地支 （注，如果没有传参，或者传false，是以立春为界的。刚好和getLunarYear相反）yTG = day.getYearGZ()print(&quot;以立春为界的年干支&quot;, Gan[yTG.tg] + Zhi[yTG.dz]) print(&quot;以立春为界的生肖:&quot;, ShX[yTG.dz])#月干支mTG = day.getMonthGZ()print(&quot;月干支&quot;, Gan[mTG.tg] + Zhi[mTG.dz]) #日干支dTG  = day.getDayGZ()print(&quot;日干支&quot;, Gan[dTG.tg] + Zhi[dTG.dz]) #时干支,传24小时制的时间，分早晚子时hour = 18sTG = day.getHourGZ(hour)print(&quot;%d时的干支&quot;%(hour, ), Gan[sTG.tg] + Zhi[sTG.dz]) #时干支for hour in range(24):    # 第一个参数为该天的天干，第二个参数为小时    hTG  = sxtwl.getShiGz(dTG.tg, hour)    print(&quot;%d时天干地支:&quot;%(hour), Gan[hTG.tg] + Zhi[hTG.dz])# 当日是否有节气if day.hasJieQi():    print('节气：%s'% jqmc[day.getJieQi()])    #获取节气的儒略日数    jd = day.getJieQiJD()    # 将儒略日数转换成年月日时秒    t = sxtwl.JD2DD(jd )    # 注意，t.s是小数，需要四舍五入    print(&quot;节气时间:%d-%d-%d %d:%d:%d&quot;%(t.Y, t.M, t.D, t.h, t.m, round(t.s)))else:    print(&quot;当天不是节气日&quot;)```4. 获取某日的前几天或者后几天的信息 （可以用到很多场景中）```# 获取某天的后面几天num = 1    #你喜欢写多少天 也多少天，可以写负数，相当于往前day = day.after(num)  #获取num天后的日信息s = &quot;公历:%d年%d月%d日&quot; % (day.getSolarYear(), day.getSolarMonth(), day.getSolarDay())print(s)# 同上day = day.before(num)s = &quot;公历:%d年%d月%d日&quot; % (day.getSolarYear(), day.getSolarMonth(), day.getSolarDay())print(s)```5. 获取一年中的闰月```# 获取一年中的闰月year = 2020month = sxtwl.getRunMonth(year)if month &gt;= 0:    print(&quot;%d年的闰月是%d&quot;%(year, month) )else:    print(&quot;没有闰月&quot;)```6. 获取一个农历月的天数```# 一个农历月的天数year = 2020 #农历年month  = 4 #农历月isRun = False #是否是闰月daynum = sxtwl.getLunarMonthNum(year, month, isRun)print(&quot;农历%d年%s%d月的天数:&quot;%(year, '闰'if isRun else '', month), daynum)```7. 儒略日数与公历的互转```#儒略日数转公历jd = sxtwl.J2000t = sxtwl.JD2DD(jd )#公历转儒略日jd = sxtwl.toJD(t)```8. 查找某日之前或者之后的节气```# 查找某日前后的节气,此例为之后，之前把after替换成beforewhile True:    # 这里可以使用after或者before，不用担心速度，这里的计算在底层仅仅是+1这么简单    day = day.after(1)    # hasJieQi的接口比getJieQiJD速度要快，你也可以使用getJieQiJD来判断是否有节气。    if day.hasJieQi():        print('节气：%s'% jqmc[day.getJieQi()])        #获取节气的儒略日数， 如果说你要计算什么时间的相距多少，直接比对儒略日要方便，相信我。        jd = day.getJieQiJD()        # 将儒略日数转换成年月日时秒        t = sxtwl.JD2DD(jd )        # 注意，t.s是小数，需要四舍五入        print(&quot;节气时间:%d-%d-%d %d:%d:%d&quot;%(t.Y, t.M, t.D, t.h, t.m, round(t.s)))        break```9. 四柱反查 (好像还有bug，待修复)```###==================================================================================# 四柱反查工具方法# 实际项目中不要这样子搞哈，因为汉字utf-8，GBK2312不同的编码。建议还是直接使用天干地支的数字索引 def getGZ(gzStr):    tg = -1    dz = -1    for i, v in enumerate(Gan):        if gzStr[0]  == v:            tg = i            break    for i, v in enumerate(Zhi):        if  gzStr[1] == v:            dz = i            break       return sxtwl.GZ(tg, dz)###==================================================================================# 四注反查 分别传的是年天干，月天干，日天干，时天干， 开始查询年，结束查询年  返回满足条件的儒略日数jds = sxtwl.siZhu2Year(getGZ('辛丑'), getGZ('己亥'), getGZ('丙寅'), getGZ('癸巳'), 2003, 2029);for jd in jds:    t = sxtwl.JD2DD(jd )    print(&quot;符合条件的时间:%d-%d-%d %d:%d:%d&quot;%(t.Y, t.M, t.D, t.h, t.m, round(t.s)))```### 联系作者及广告作者微信二维码:![微信二维码](https://gitee.com/yuangu/sxtwl/raw/master/doc/img/WechatIMG5.jpeg)  请您扫码支持作者的海棠万年历(广告):![海棠万年历](https://gitee.com/yuangu/sxtwl/raw/master/doc/img/qrcode_for_gh_d48e82be45fb_430.jpg)如果您想请作者喝杯奶茶，扫如下微信支付码：![微信收款](https://gitee.com/yuangu/sxtwl/raw/master/doc/img/WechatIMG7.jpeg)</longdescription>
</pkgmetadata>