<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># vr900-connector![PyPI - License](https://img.shields.io/pypi/l/vr900-connector.svg?color=44cc11)[![Build Status](https://travis-ci.com/thomasgermain/vr900-connector.svg?branch=master)](https://travis-ci.com/thomasgermain/vr900-connector)[![Coverage Status](https://coveralls.io/repos/github/thomasgermain/vr900-connector/badge.svg?branch=master)](https://coveralls.io/github/thomasgermain/vr900-connector?branch=master)![PyPI](https://img.shields.io/pypi/v/vr900-connector.svg)![PyPI - Status](https://img.shields.io/pypi/status/vr900-connector.svg)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/vr900-connector.svg)&lt;b&gt;Please note that the project is still in beta state, it means  I may do some (un)intentional breaking changes&lt;/b&gt;## Legal DisclaimerThis software is not affiliated with Vaillant and the developers take no legal responsibility for the functionality or security of your vaillant devices## Install```bash[sudo] pip install vr900-connector ```## TestsYou can run tests with```bashpytest```## Usages### Command line usage```pythonpython3 vaillant.py username password method command [command parameters]```List of commands are the name of functions in api.urls module.Example:```pythonpython3 vaillant.py username password GET room 0```Output:```json{    &quot;body&quot;: {        &quot;roomIndex&quot;: 0,        &quot;configuration&quot;: {            &quot;name&quot;: &quot;Room name&quot;,            &quot;temperatureSetpoint&quot;: 17.5,            &quot;operationMode&quot;: &quot;AUTO&quot;,            &quot;currentTemperature&quot;: 19.4,            &quot;childLock&quot;: false,            &quot;isWindowOpen&quot;: false,            &quot;devices&quot;: [                {                    &quot;name&quot;: &quot;Device name&quot;,                    &quot;sgtin&quot;: &quot;000000000000000000000000&quot;,                    &quot;deviceType&quot;: &quot;VALVE&quot;,                    &quot;isBatteryLow&quot;: false,                    &quot;isRadioOutOfReach&quot;: false                }            ],            &quot;iconId&quot;: &quot;BEDROOM&quot;        },        &quot;timeprogram&quot;: {            &quot;monday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ],            &quot;tuesday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ],            &quot;wednesday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ],            &quot;thursday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ],            &quot;friday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ],            &quot;saturday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ],            &quot;sunday&quot;: [                {                    &quot;startTime&quot;: &quot;00:00&quot;,                    &quot;temperatureSetpoint&quot;: 17.5                }            ]        }    },    &quot;meta&quot;: {        &quot;resourceState&quot;: [            {                &quot;state&quot;: &quot;SYNCED&quot;,                &quot;timestamp&quot;: 1551383333000,                &quot;link&quot;: {                    &quot;rel&quot;: &quot;child&quot;,                    &quot;resourceLink&quot;: &quot;/facilities/1234567891234567891234567890/rbr/v1/rooms/0/configuration&quot;                }            },            {                &quot;state&quot;: &quot;SYNCED&quot;,                &quot;timestamp&quot;: 1549054971000,                &quot;link&quot;: {                    &quot;rel&quot;: &quot;child&quot;,                    &quot;resourceLink&quot;: &quot;/facilities/1234567891234567891234567890/rbr/v1/rooms/0/timeprogram&quot;                }            }        ]    }}```### Module usage The connector is separate in two layers:#### 1. ApiConnectorThis is the low level connector using the vaillant API and returning raw data directly coming from the API. The connector is handling the login and session.The connector able to reuse an already existing session (cookies). Two files are saved (cookies and serial number of your installation) on the file system. Default location is:```pythontempfile.gettempdir() + &quot;/.vaillant_vr900_files&quot;```but it can be overridden. Files are named .vr900-vaillant.cookies and .vr900-vaillant.serial.Here is an example how to use it:```pythonfrom vr900connector.api import ApiConnector, Urls   connector = ApiConnector('user', 'pass')connector.get(Urls.facilities_list()) ```to get some information about your installation, this returns the raw response, something like this:```json{    &quot;body&quot;: {        &quot;facilitiesList&quot;: [            {                &quot;serialNumber&quot;: &quot;1234567891234567891234567890&quot;,                &quot;name&quot;: &quot;Name&quot;,                &quot;responsibleCountryCode&quot;: &quot;BE&quot;,                &quot;supportedBrand&quot;: &quot;GREEN_BRAND_COMPATIBLE&quot;,                &quot;capabilities&quot;: [                    &quot;ROOM_BY_ROOM&quot;,                    &quot;SYSTEMCONTROL_MULTIMATIC&quot;                ],                &quot;networkInformation&quot;: {                    &quot;macAddressEthernet&quot;: &quot;12:34:56:78:9A:BC&quot;,                    &quot;macAddressWifiAccessPoint&quot;: &quot;34:56:78:9A:BC:DE&quot;,                    &quot;macAddressWifiClient&quot;: &quot;56:78:9A:BC:DE:F0&quot;                },                &quot;firmwareVersion&quot;: &quot;1.1.1&quot;            }        ]    },    &quot;meta&quot;: {}}```Basically, you can use ```pythonfrom vr900connector.api import ApiConnector   connector = ApiConnector('user', 'pass')connector.get('') ```with urls from```pythonvr900connector.api.urls``` I recommend using this layer if you only want to retrieve basic data (outdoor temperature, current temperature, etc.)#### 2. SystemManagerThis layer allows you to interact in a more friendly way with the system.The underlying connector is hidden and raw responses are mapped to more useful object.For now, the only function is:```pythonfrom vr900connector.systemmanager import SystemManager   manager = SystemManager('user', 'pass')system = manager.get_system() ```The main object to manipulate is  ```python vr900connector.model.system ```  Which is grouping all the information about the system.  I recommend using this layer if you want to do more complex things, e.g: if you want to get the target temperature for  a room or a zone, it can become a bit complex since you have to deal with holiday mode, quick mode, quick veto, time program, etc. This layer is hiding you  this complexity</longdescription>
</pkgmetadata>