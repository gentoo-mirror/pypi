<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dramatiq-abortAdd the aborting feature to [dramatiq] through a simple middleware with flexible backend.Current version support aborting using the [Redis] store.[![Build Status](https://github.com/Flared/dramatiq-abort/workflows/Push/badge.svg)](https://github.com/Flared/dramatiq-abort/actions?query=workflow%3A%22Push%22)[![PyPI version](https://badge.fury.io/py/dramatiq-abort.svg)](https://badge.fury.io/py/dramatiq-abort)[![Documentation](https://img.shields.io/badge/doc-latest-brightgreen.svg)](http://flared.github.io/dramatiq-abort)## InstallationSince the only available backend right now is [Redis]:    pip install dramatiq_abort[redis]**Documentation**: http://flared.github.io/dramatiq-abort## Quickstart```pythonfrom dramatiq import get_brokerfrom dramatiq_abort import Abortable, backends, abortabortable = Abortable(backend=backends.RedisBackend())get_broker().add_middleware(abortable)# ...import dramatiq@dramatiq.actordef my_long_running_task(): ...message = my_long_running_task.send()# Now abort the message.abort(message.message_id)```[Redis]: https://redis.io[dramatiq]: https://dramatiq.io/</longdescription>
</pkgmetadata>