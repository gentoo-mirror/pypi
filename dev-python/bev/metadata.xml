<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![codecov](https://codecov.io/gh/neuro-ml/bev/branch/master/graph/badge.svg)](https://codecov.io/gh/neuro-ml/bev)[![pypi](https://img.shields.io/pypi/v/bev?logo=pypi&amp;label=PyPi)](https://pypi.org/project/bev/)![License](https://img.shields.io/github/license/neuro-ml/bev)[![PyPI - Downloads](https://img.shields.io/pypi/dm/bev)](https://pypi.org/project/bev/)![GitHub branch checks state](https://img.shields.io/github/checks-status/neuro-ml/bev/master)Flexible version control for files and folders.# InstallThe simplest way is to get it from PyPi:```shellpip install bev```Or if you want to try the latest version from GitHub:```shellgit clone https://github.com/neuro-ml/bev.gitcd bevpip install -e .# or let pip handle the cloning:pip install git+https://github.com/neuro-ml/bev.git```# Getting started1. Choose a folder for your repository and create a basic config (`.bev.yml`):```yamlmain:  storage: /path/to/storage/foldermeta:  hash: sha256```2. Run `init````shellbev init```3. Add files to bev```shellbev add /path/to/some/file.json .bev add /path/to/some/folder/ .bev add /path/to/some/image.png .```4. ... and to git```shellgit add file.json.hash folder.hash image.png.hashgit commit -m &quot;added files&quot;```5. Access the files from python```pythonimport imageiofrom bev import Repository# `version` can be a commit hash or a git tag repo = Repository('/path/to/repo', version='8a7fe6')image = imageio.imread(repo.resolve('image.png'))```### Advanced usageHere are some tutorials that cover more advanced configuration, including multiple storage locations and machines:1. [Create a repository](https://github.com/neuro-ml/bev/wiki/Creating-a-repository) - needed only at first time setup2. [Adding files](https://github.com/neuro-ml/bev/wiki/Adding-files)3. [Accessing files](https://github.com/neuro-ml/bev/wiki/Accessing-the-stored-files)# Why not DVC?[DVC](https://github.com/iterative/dvc) is a great project, and we took inspiration from it while designing `bev`.However, out lab has several requirements that `DVC` doesn't meet:1. Our data caches are spread across multiple HDDs - we need support for multiple cache locations2. We have multiple machines, and each of them has a different storage configuration: locations, number of HDDs, their   volumes - we need a flexible way of choosing the right config depending on the machine3. Often we simultaneously conduct experiments on different versions of the same data - we need easy access to multiple   version of the same data4. The need for `dvc checkout` after `git checkout` is error-prone, because it can lead to situations when the data is   not consistent with the current commit - we need a more constrained relation between data and `git``bev` supports all four out of the box!However, if these requirements are not essential to your project, you may want to stick with `DVC` - its community andtests coverage is much larger.</longdescription>
</pkgmetadata>