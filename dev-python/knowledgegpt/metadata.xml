<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># knowledgegpt***knowledgegpt*** is designed to gather information from various sources, including the internet and local data, whichcan be used to create prompts. These prompts can then be utilized by OpenAI's GPT-3 model to generate answers that aresubsequently stored in a database for future reference.To accomplish this, the text is first transformed into a fixed-size vector using either open source or OpenAI models.When a query is submitted, the text is also transformed into a vector and compared to the stored knowledge embeddings.The most relevant information is then selected and used to generate a prompt context.***knowledgegpt*** supports various information sources including websites, PDFs, PowerPoint files (PPTX), anddocuments (Docs). Additionally, it can extract text from YouTube subtitles and audio (using speech-to-text technology)and use it as a source of information. This allows for a diverse range of information to be gathered and used forgenerating prompts and answers.# Installation1. PyPI installation, run in terminal:  `pip install knowledgegpt`2. Or you can use the latest version from the repository: `pip install -r requirements.txt` and then `pip install .`3. Download needed language model for parsing: `python3 -m spacy download en_core_web_sm`#### Set Your API Key1. Go to [OpenAI &gt; Account &gt; Api Keys](https://platform.openai.com/account/api-keys)2. Create new secret key and copy3. Enter the key to [example_config.py](./examples/example_config.py)#### How to use the library```python# Import the libraryfrom knowledgegpt.extractors.web_scrape_extractor import WebScrapeExtractor# Import OpenAI and Set the API Keyimport openaifrom example_config import SECRET_KEY openai.api_key = SECRET_KEY# Define target websiteurl = &quot;https://en.wikipedia.org/wiki/Bombard_(weapon)&quot;# Initialize the WebScrapeExtractorscrape_website = WebScrapeExtractor( url=url, embedding_extractor=&quot;hf&quot;, model_lang=&quot;en&quot;)# Prompt the OpenAI Modelanswer, prompt, messages = scrape_website.extract(query=&quot;What is a bombard?&quot;,max_tokens=300,  to_save=True, mongo_client=db)# See the answerprint(answer)# Output: 'A bombard is a type of large cannon used during the 14th to 15th centuries.'```Other examples can be found in the [examples](./examples) folder.But to give a better idea of how to use the library, here is a simple example:```python# Basic Usagebasic_extractor = BaseExtractor(df)answer, prompt, messages = basic_extractor.extract(&quot;What is the title of this PDF?&quot;, max_tokens=300)``````python# PDF Extractionpdf_extractor = PDFExtractor( pdf_file_path, extraction_type=&quot;page&quot;, embedding_extractor=&quot;hf&quot;, model_lang=&quot;en&quot;)answer, prompt, messages = pdf_extractor.extract(query, max_tokens=1500)``````python# PPTX Extractionppt_extractor = PowerpointExtractor(file_path=ppt_file_path, embedding_extractor=&quot;hf&quot;, model_lang=&quot;en&quot;)answer, prompt, messages = ppt_extractor.extract( query,max_tokens=500)``````python# DOCX Extractiondocs_extractor = DocsExtractor(file_path=&quot;../example.docx&quot;, embedding_extractor=&quot;hf&quot;, model_lang=&quot;en&quot;, is_turbo=False)answer, prompt, messages = \    docs_extractor.extract( query=&quot;What is an object detection system?&quot;, max_tokens=300)``````python# Extraction from Youtube video (audio)scrape_yt_audio = YoutubeAudioExtractor(video_id=url, model_lang='tr', embedding_extractor='hf')answer, prompt, messages = scrape_yt_audio.extract( query=query, max_tokens=1200)# Extraction from Youtube video (transcript)scrape_yt_subs = YTSubsExtractor(video_id=url, embedding_extractor='hf', model_lang='en')answer, prompt, messages = scrape_yt_subs.extract( query=query, max_tokens=1200)```## Docker Usage```bashdocker build -t knowledgegptimage .docker run -p 8888:8888 knowledgegptimage```</longdescription>
</pkgmetadata>