<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**[Installation](#installation)** |**[Usage](#usage)** |**[Testing](#testing)** |**[License](#license)**# [globmatch](https://github.com/vidartf/globmatch) - Matching paths against globs[![codecov.io](https://codecov.io/github/vidartf/globmatch/coverage.svg?branch=master)](https://codecov.io/github/vidartf/globmatch?branch=master)`globmatch` provides functions for matching a path against one ore more glob patterns in Python.This differs from the `glob` module of the standard library, which matches a glob against thefile-tree on your system. `globmatch` does not interact with the filesystem at all, but relies ongeneric matching. It also differs from the `fnmatch` module of the standard library in that itaccepts the double star (`**`) element, which matches zero or more directories. Additionally, thestar element (`*`) in `fnmatch` will also match across path separators. In `globmatch` thestar element matches zero or more characters of the current path element (directory/file name).## InstallationInstall globmatch with pip:```bashpip install globmatch```or for a development install:```bashpip install -e git+https://github.com/vidartf/globmatch#egg=globmatch```## Usage```pythonfrom globmatch import glob_match# Some paths that match (returns True):glob_match('.git/gitconfig/', ['.git'])glob_match('foo/config', ['**/config'])glob_match('foo/config/bar', ['**/config'])glob_match('.git/gitconfig/', ['.git', '**/config'])glob_match('foo/config/bar', ['.git', '**/config'])glob_match('/.git/gitconfig/', ['**/.git'])# Some paths that do not match (returns False):glob_match('/.git/gitconfig/', ['.git'])   # Needs ** to match subdir of root dirglob_match('foo/node_modules', ['node_modules'])   # Will not match subdir without preceding **```## TestingInstall the develop install with test requirements:    pip install -e globmatch[test]To run Python tests locally, enter on the command line: `pytest`Install the [codecov browser extension](https://github.com/codecov/browser-extension#codecov-extension)to view test coverage in the source browser on github.## LicenseAll code is licensed under the terms of the revised BSD license.## Resources- [Reporting Issues](https://github.com/vidartf/globmatch/issues)</longdescription>
</pkgmetadata>