<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># flake8-use-pathlib[![pypi][pypi-badge]](https://pypi.org/project/flake8-use-pathlib/)[![black][black-badge]](https://github.com/psf/black)A plugin for flake8 finding use of functions that can be replaced by pathlib module.[pypi-badge]: https://badgen.net/pypi/v/flake8-use-pathlib[black-badge]: https://badgen.net/badge/code%20style/black/black/## InstallationInstall from `pip` with:`pip install flake8-use-pathlib`## Rules| Code  | Rule                                                                                         || ----- | -------------------------------------------------------------------------------------------- || PL100 | os.path.abspath(&quot;foo&quot;) should be replaced by foo_path.resolve()                              || PL101 | os.chmod(&quot;foo&quot;, 0o444) should be replaced by foo_path.chmod(0o444)                           || PL102 | os.mkdir(&quot;foo&quot;) should be replaced by foo_path.mkdir()                                       || PL103 | os.makedirs(&quot;foo/bar&quot;) should be replaced by bar_path.mkdir(parents=True)                    || PL104 | os.rename(&quot;foo&quot;, &quot;bar&quot;) should be replaced by foo_path.rename(Path(&quot;bar&quot;))                   || PL105 | os.replace(&quot;foo&quot;, &quot;bar&quot;) should be replaced by foo_path.replace(Path(&quot;bar&quot;))                 || PL106 | os.rmdir(&quot;foo&quot;) should be replaced by foo_path.rmdir()                                       || PL107 | os.remove(&quot;foo&quot;) should be replaced by foo_path.unlink()                                     || PL108 | os.unlink(&quot;foo&quot;) should be replaced by foo_path.unlink()                                     || PL109 | os.getcwd() should be replaced by Path.cwd()                                                 || PL110 | os.path.exists(&quot;foo&quot;) should be replaced by foo_path.exists()                                || PL111 | os.path.expanduser(&quot;~/foo&quot;) should be replaced by foo_path.expanduser()                      || PL112 | os.path.isdir(&quot;foo&quot;) should be replaced by foo_path.is_dir()                                 || PL113 | os.path.isfile(&quot;foo&quot;) should be replaced by foo_path.is_file()                               || PL114 | os.path.islink(&quot;foo&quot;) should be replaced by foo_path.is_symlink()                            || PL115 | os.readlink(&quot;foo&quot;) should be replaced by foo_path.readlink()                                 || PL116 | os.stat(&quot;foo&quot;) should be replaced by foo_path.stat() or foo_path.owner() or foo_path.group() || PL117 | os.path.isabs should be replaced by foo_path.is_absolute()                                   || PL118 | os.path.join(&quot;foo&quot;, &quot;bar&quot;) should be replaced by foo_path / &quot;bar&quot;                            || PL119 | os.path.basename(&quot;foo/bar&quot;) should be replaced by bar_path.name                              || PL120 | os.path.dirname(&quot;foo/bar&quot;) should be replaced by bar_path.parent                             || PL121 | os.path.samefile(&quot;foo&quot;, &quot;bar&quot;) should be replaced by foo_path.samefile(bar_path)             || PL122 | os.path.splitext(&quot;foo.bar&quot;) should be replaced by foo_path.suffix                            || PL123 | open(&quot;foo&quot;) should be replaced by Path(&quot;foo&quot;).open()                                         || PL124 | py.path.local is in maintenance mode, use pathlib instead                                    |</longdescription>
</pkgmetadata>