<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-absoluteuri==================.. image:: https://travis-ci.org/fusionbox/django-absoluteuri.png?branch=master    :target: https://travis-ci.org/fusionbox/django-absoluteuriAbsolute URI functions and template tags for Django.Why---There are times when you need to output an absolute URL (for example, inside anemail), but you don't always have access to the request. These utilities usethe Sites Framework if available in order to create absolute URIs.Installation------------Install django-absoluteuri::    pip install django-absoluteuriThen add it to your ``INSTALLED_APPS``::    INSTALLED_APPS = (        # ...        'django.contrib.sites',        'absoluteuri',    )django-absoluteuri requires the `Sites Framework&lt;https://docs.djangoproject.com/en/dev/ref/contrib/sites/&gt;`_ to be in``INSTALLED_APPS`` well and configured as well.Settings--------The protocol of the uris returned by this library defaults to ``http``.  Youcan specify the protocol with the ``ABSOLUTEURI_PROTOCOL`` setting... code:: python    # settings.py    ABSOLUTEURI_PROTOCOL = 'https'    # Elsewhere    &gt;&gt;&gt; absoluteuri.build_absolute_uri('/some/path/')    'https://example.com/some/path/'Template Tags-------------There are two template tags, ``absoluteuri`` and ``absolutize``.``absoluteuri`` works just like the ``url`` tag, but that it outputs absoluteURLs... code:: html+django    {% load absoluteuri %}    &lt;a href=&quot;{% absoluteuri 'my_view' kwarg1='foo' kwarg2='bar' %}&quot;&gt;click here&lt;/a&gt;``absolutize`` will take a relative URL and return an absolute URL... code:: html+django    {% load absoluteuri %}    &lt;a href=&quot;{% absolutize url_from_context %}&quot;&gt;click here&lt;/a&gt;Filter------Sometimes instead of template tags, it's easier to use filters. You can do thatas well... code:: html+django   {% load absoluteuri %}   &lt;a href=&quot;{{ my_object.get_absolute_url|absolutize }}&quot;&gt;click here&lt;/a&gt;But there are situations where tag can not be used but filter can... code:: html+django   {% load absoluteuri %}   {% include &quot;some-other-template.html&quot; with url=my_object.get_absolute_url|absolutize %}Functions---------There are also two functions that django-absoluteuri provides,``build_absolute_uri`` and ``reverse``, which are equivalents of``request.build_absolute_url`` and ``urlresolvers.reverse``... code:: python    &gt;&gt;&gt; import absoluteuri    &gt;&gt;&gt; my_relative_url = '/path/to/somewhere/'    &gt;&gt;&gt; absoluteuri.build_absolute_uri(my_relative_url)    'http://example.com/path/to/somewhere/'    &gt;&gt;&gt; absoluteuri.reverse('viewname', kwargs={'foo': 'bar'})    'http://example.com/path/to/bar/'.. :changelog:Changelog=========1.3.0 (2018-09-04)------------------- Add support for Django 2.1. Remove support for Django &lt; 1.11.1.2.0 (2016-02-29)------------------- Add absolutize filter. This deprecates the absolutize tag. [#4]1.1.0 (2015-03-23)------------------- Added ABSOLUTEURI_PROTOCOL settings. [#1]- Documented sites framework requirement.1.0.0 (2015-03-17)------------------- First release on PyPI.</longdescription>
</pkgmetadata>