<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># OSM Fieldwork&lt;!-- markdownlint-disable --&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/hotosm/fmtm/blob/main/images/hot_logo.png?raw=true&quot; style=&quot;width: 200px;&quot; alt=&quot;HOT&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;em&gt;Processing field data from OpenDataKit to OpenStreetMap format, and other field utils.&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork/actions/workflows/build.yml&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/hotosm/osm-fieldwork/workflows/Build/badge.svg&quot; alt=&quot;Build&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork/actions/workflows/build-ci.yml&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/hotosm/osm-fieldwork/workflows/Build CI Img/badge.svg&quot; alt=&quot;CI Build&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork/actions/workflows/docs.yml&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/hotosm/osm-fieldwork/workflows/Publish Docs/badge.svg&quot; alt=&quot;Publish Docs&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork/actions/workflows/publish.yml&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/hotosm/osm-fieldwork/workflows/Publish to PyPi.org/badge.svg&quot; alt=&quot;Publish&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork/actions/workflows/pytest.yml&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/hotosm/osm-fieldwork/workflows/PyTest/badge.svg&quot; alt=&quot;Test&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/osm-fieldwork&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/v/osm-fieldwork?color=%2334D058&amp;label=pypi%20package&quot; alt=&quot;Package version&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypistats.org/packages/osm-fieldwork&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/dm/osm-fieldwork.svg&quot; alt=&quot;Downloads&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork/blob/main/LICENSE&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/license/hotosm/osm-fieldwork.svg&quot; alt=&quot;License&quot;&gt;  &lt;/a&gt;&lt;/p&gt;---üïÆ **Documentation**: &lt;a href=&quot;https://hotosm.github.io/osm-fieldwork/&quot; target=&quot;_blank&quot;&gt;https://hotosm.github.io/osm-fieldwork/&lt;/a&gt;üñ•Ô∏è **Source Code**: &lt;a href=&quot;https://github.com/hotosm/osm-fieldwork&quot; target=&quot;_blank&quot;&gt;https://github.com/hotosm/osm-fieldwork&lt;/a&gt;---&lt;!-- markdownlint-enable --&gt;## History üìñ&lt;img align=&quot;right&quot; width=&quot;500px&quot; src=&quot;https://github.com/hotosm/osm-fieldwork/assets/97789856/97ace314-1205-408b-a3c0-4c355642a98d&quot;/&gt;**The History of the OSM Fieldwork Project begins with Rob Savoye,Senior Technical Lead at Humanitarian OpenStreetMap Team.**In 2010, Rob's rural volunteer fire department(he is also a long timefree software developer for the GNU project, fire-fighter, climber,disaster tech support.) faced the challenge of outdated giant papermapbooks with incomplete information. Despite Google having limitedaddress and remote road coverage, the lack of cell service made itimpossible to rely on it for verification. Determined to find a solution,Rob turned to OpenStreetMap (OSM).&lt;img align=&quot;left&quot; width=&quot;300px&quot; src=&quot;https://github.com/hotosm/osm-fieldwork/assets/97789856/afc791c7-6cc9-4496-aa93-ab02733f30b8&quot;/&gt;His first step involved importing building footprints and addressesinto OSM, greatly aiding the fire department in locating places quicklyand easily. The response time was significantly reduced, nearly halved.Given that most of the roads were dirt jeep trails, Rob undertookground-truthing the highway and trail data in OSM. Over the course ofseveral years, he diligently added precise information about all thehighways in his area, enabling the fire department to determine theappropriate response vehicles for each scenario. Once Rob had successfullyimproved the fire district maps, he expanded his efforts to map the remoteregions of Colorado and a few neighboring states, proving invaluableduring large wildland fires. Ground-truthing became an integral part ofhis work, conducted using mobile devices in the field. To streamline thedata collection process, Rob heavily relied on OpenDataKit and eventuallycreated additional software to facilitate data processing, which hadpreviously been time-consuming and tedious. Now, transferring dataseamlessly from his phone to OSM requires minimal effort. To this day,Rob continues his weekly field mapping every few months while continuouslyenhancing the software used in the project.&lt;!-- ![Rob Savoye](https://github.com/hotosm/osm-fieldwork/assets/97789856/0e25966e-cb3e-4634-9730-1c4606cf937a) --&gt;&lt;!-- ![osm-fieldwork](https://github.com/hotosm/osm-fieldwork/assets/97789856/a008e149-11a3-4d4e-b3e4-342cc6320c4b) --&gt;## About OSM FieldworkOsm-Fieldwork is a project for processing data collection usingOpenDataKit into OpenStreetMap format. It includes several utilityprograms that automate part of the data flow like creating satelliteimagery basemaps and data extracts from[OpenStreetMap](https://www.openstreetmap.org) so they can beused with [ODK Collect](https://www.getodk.org). Many of these stepsare currently a manual process.&lt;img align=&quot;right&quot; width=&quot;500px&quot; src=&quot;https://github.com/hotosm/osm-fieldwork/assets/97789856/52b33f76-0ec2-4371-bb70-1528161a3c77&quot;/&gt;All of the programs in osm-fieldwork are designed to function as thebackend of a webpage, but to also work standalone and offline. Thestandalone functionality are simple command line programs run in aterminal. They were originally created for producing emergencyresponse maps in the Western United States, which is explained in thistalk from SOTM-US 2022 titled [OSM ForFirefighting](https://www.youtube.com/watch?v=qgk9al1rluE). Much ofthe tech and usage is explained in these [techbriefs](https://www.senecass.com/projects/Mapping/tech/). Currentlythese are now part of the backend for the [Field Mapping Tasking Manager](https://hotosm.github.io/fmtm) project at[HOT](https://www.hotosm.org).## InstallationTo install osm-fieldwork, you can use pip. Here are two options:- Directly from the main branch:```bashpip install git+https://github.com/hotosm/osm-fieldwork.git```- Latest on PyPi:```bashpip install osm-fieldwork```## ConfigureOsm-Fieldwork can be configured using a simple config($HOME/.osm-fieldwork)file in your home directory,or using environment variables.### Config fileThe config file is used to store the credentials to access an ODKCentral server. You must have an account on the Central server ofcourse for this to work. That file looks like this:```dotenvurl=https://foo.orguser=foo@bar.orgpasswd=arfood```### Environment Variables- **LOG_LEVEL**&gt; If present, will change the log level. Defaults to DEBUG.- **ODK_CENTRAL_URL**&gt; The URL for an ODKCentral server to connect to.- **ODK_CENTRAL_USER**&gt; The user for ODKCentral.- **ODK_CENTRAL_PASSWD**&gt; The password for ODKCentral.- **ODK_CENTRAL_SECURE**&gt; If set to False, will allow insecure connections to the ODKCentral API.&gt; Else defaults to True.## Using the Container Image- osm-fieldwork scripts can be used via the pre-built container images.- These images come with all dependencies bundled, so are simple to run.Run a specific command:```bashdocker run --rm -v $PWD:/data ghcr.io/hotosm/osm-fieldwork:latest json2osm &lt;flags&gt;```Run interactively (to use multiple commands):```bashdocker run --rm -it -v $PWD:/data ghcr.io/hotosm/osm-fieldwork:latest```&gt; Note: the output directory should always be /data/... to persist data.## Utility ProgramsThese programs are more fully documented [in this](wiki/programs.md)file. This is just a short overview.### CSVDump.pyThis program converts the data collected from ODK Collect intothe proper OpenStreetMap tagging schema. The conversion is controlledby an[YAML](https://github.com/hotosm/osm-fieldwork/blob/main/osm-fieldwork/xforms.yaml)file, so easy to modify for other projects. The output are two files,one is suitable for OSM,and is in OSM XML format. The otherNo converted data should ever be uploaded to OSM without validatingthe conversion in JOSM. To do efficient conversion from ODK to OSM,it's best to use the XLSForm library as templates, as everything isdesigned to work together.### basemapper.pyThis program creates basemaps of satellite imagery, and produces filesin mbtiles format for [ODKCollect](https://docs.getodk.org/collect-intro/) and sqlitedb filesfor [Osmand](https://osmand.net/). Imagery basemaps are very usefulwhen the map data is lacking.or in ODK Collect, selecting the currentlocation instead of where you are standing. The basemaps Osmand arevery useful of navigation where the map data is lacking. Imagerycan be downloaded from[ERSI](https://www.arcgis.com/home/item.html?id=10df2279f9684e4a9f6a7f08febac2a9#!),[Bing](https://www.arcgis.com/home/webmap/viewer.html?webmap=8651e4d585654f6b955564efe44d04e5#!),[USGS Topo maps](https://apps.nationalmap.gov/datasets/), or [OpenAerial Map](https://openaerialmap.org/)### make_data_extract.pyThis program makes data extracts from[OpenStreetMap](https://www.openstreetmap.org) data. Multiple inputsources are supported, a local postgresql database, or the HOTmaintained [Underpass](https://galaxy.hotosm.org/) database.### json2osm### odk2csv.py, odk2geojson.py, odk2osm.pyThese programs ER used when working offline for extended periods. Thisconverts the ODK XML format on your mobile device into the same CSVformat used for submissions downloaded from [ODKCentral](https://docs.getodk.org/central-intro/), or the JSON formatalso from Central.### odk_merge.pyThis program conflates the data collected by ODK Collect with theexisting OSM data. The output of this file can be loaded into JOSMfor validation and uploading to OpenStreetMap.### odk_client.pyThis program is a simple command line client to an ODK Centralserver. This allows you to list projects, appusers, tasks, andsubmissions. You can also delete projects, tasks, and appusers, butthis should only be [used bydevelopers](https://en.wikipedia.org/wiki/With_great_power_comes_great_responsibility)as it does direct database access, and you could lose all your data.### filter_data.pyThis program is used to support humanitariam data models. It extractsthe tags and values from the [data modelsdocument](https://github.com/hotosm/osm-fieldwork/raw/main/osm_fieldwork/data_models/Impact%20Areas%20-%20Data%20Models%20V1.1.xlsx)developed by HOT, and compares those to the taginfo database to helpfine tune what data goes into OSM or the private output data. This isto not flood OSM with obscure tags that aren't supported by thecommunity. It also filters data extracts so they work with ODKCollect.### osm2favorites.pyThis is a silly program, but it takes a GeoJson file, usually an OSMdata extract and generates a GPX file with styling for OsmAnd. Thisis useful when ground-truthing map data, as it can be used fornavigating to those areas.## Best Practices and troubleshootingTo ensure the quality of your converted data, here are some bestpractices to follow:- Always validate your conversion in JOSM before uploading to OpenStreetMap.- Use the XLSForm library as templates to ensure that your ODK Collect  data is compatible with the conversion process.- If you're having trouble with the conversion process, try using the  utility programs included with Osm-Fieldwork to troubleshoot common  issues.For more info visit the[troubleshooting page](https://hotosm.github.io/osm-fieldwork/troubleshooting).By following these best practices and using the utility programsincluded with Osm-Fieldwork, you can effectively process data collectionfrom OpenDataKit into OpenStreetMap format. However, please note thatwhile Osm-Fieldwork has been tested and used in various projects, it isstill in active development and may have limitations or issues thatneed to be resolved.## XLSForm libraryIn the XForms directory is a collection of XLSForms that support thenew HOT data models for humanitarian data collection. These covermany categories like healthcare, waterpoints, waste distribution,etc... All of these XLSForms are designed to have an efficient mapperdata flow, edit existing OSM data, and support the data models.&lt;img align=&quot;right&quot; width=&quot;500px&quot; src=&quot;https://github.com/hotosm/osm-fieldwork/assets/97789856/fcfa1d87-78c3-42a1-9568-94d25cfb2711&quot;/&gt;The data models specify the preferred tag values for each data item,with a goal of both tag completeness and tag correctness. Each data itemis broken down into a basic and extended survey questions whenappropriate.### What is an XLSForm?An XLSForm is a spreadsheet-based form design tool that allows you tocreate complex forms for data collection using a simple and intuitiveuser interface. With XLSForms, you can easily design and test forms onyour computer, then deploy them to mobile devices for data collectionusing ODK Collect or other data collection tools. XLSForms use asimple and structured format, making it easy for you to share andcollaborate on form designs with your team or other organizations.### Using the XLSForm Library with Osm-FieldworkThe XLSForms in the XForms directory of the XLSForm Library have beendesigned to support the HOT data models and have an efficient mapperdata flow. These forms also allow for editing of existing OSM data andsupport the data models, specifying the preferred tag values for eachdata item with the goal of both tag completeness and tag correctness.### Here are some examples of how to use the XLSForm Library with Osm-Fieldwork- Download an XLSForm from the XForms directory:```bashwget https://github.com/hotosm/xlsform/raw/master/XForms/buildings.xls```- Convert the XForm to OSM XML using CSVDump:- Use the resulting OSM XML file with JOSM or other OSM editors to  validate and edit the data before uploading it to OpenStreetMap.## SummaryThe XLSForm Library is a valuable resource for organizations involvedin humanitarian data collection, as it provides a collection ofpre-designed forms that are optimized for efficient mapper data flowand tag completeness/correctness. By using the XLSForm Library withOsm-Fieldwork, you can streamline your data collection process and ensurethe quality of your data.Osm-Fieldwork is a powerful tool for processing data collection fromOpenDataKit into OpenStreetMap format. By following the best practicesoutlined in this documentation and using the utility programs includedwith Osm-Fieldwork, you can streamline your data collection process andensure the quality of your converted data. If you have any questionsor issues with osm-fieldwork, please consult the project's documentationor seek support from the project's community.</longdescription>
</pkgmetadata>