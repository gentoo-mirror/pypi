<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>OpenTelemetry Google Cloud Propagator======================================.. image:: https://badge.fury.io/py/opentelemetry-propagator-gcp.svg    :target: https://badge.fury.io/py/opentelemetry-propagator-gcp.. image:: https://readthedocs.org/projects/google-cloud-opentelemetry/badge/?version=latest    :target: https://google-cloud-opentelemetry.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusThis library provides support for propagating trace context in the GoogleCloud ``X-Cloud-Trace-Context`` format.Installation------------.. code:: bash    pip install opentelemetry-propagator-gcpUsage-----The ``CloudTraceOneWayPropagator`` reads the Google Cloud``X-Cloud-Trace-Context`` format, but does not write the``X-Cloud-Trace-Context`` header on outgoing requests. It is intended for usewith a CompositePropagator as below... code-block:: python    from opentelemetry.propagate import set_global_textmap    from opentelemetry.propagators.composite import CompositePropagator    from opentelemetry.propagators.cloud_trace_propagator import (        CloudTraceOneWayPropagator,    )    set_global_textmap(        CompositePropagator([            CloudTraceOneWayPropagator(),            propagate.get_global_textmap(),        ]),    )The ``CloudTraceFormatPropagator`` reads and writes the``X-Cloud-Trace-Context`` header formats. Note that when using this propagator,the ``sampled`` bit is interpreted as the ``TRACE_TRUE`` flag, which may cause ahigher sampling rate than desired. See the `Trace documentation&lt;https://cloud.google.com/trace/docs/setup#force-trace&gt;` for additional context... code-block:: python    from opentelemetry.propagate import set_global_textmap    from opentelemetry.propagators.cloud_trace_propagator import (        CloudTraceFormatPropagator,    )    # Set the X-Cloud-Trace-Context header    set_global_textmap(CloudTraceFormatPropagator()).. code-block:: python    from opentelemetry.propagate import set_global_textmap    from opentelemetry.propagators.cloud_trace_propagator import (        CloudTraceFormatPropagator,    )    # Set the X-Cloud-Trace-Context header    set_global_textmap(CloudTraceFormatPropagator())References----------* `Cloud Trace &lt;https://cloud.google.com/trace/&gt;`_* `OpenTelemetry Project &lt;https://opentelemetry.io/&gt;`_</longdescription>
</pkgmetadata>