<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-prices: Django fields for the `prices` module====================================================[![Build Status](https://secure.travis-ci.org/mirumee/django-prices.png)](https://travis-ci.org/mirumee/django-prices) [![codecov.io](https://img.shields.io/codecov/c/github/mirumee/django-prices/master.svg)](http://codecov.io/github/mirumee/django-prices?branch=master)# Installation* `pip install django-prices`* Add `django_prices` to your `INSTALLED_APPS` at `settings.py`* Follow `enmerkar` [instructions](https://github.com/Zegocover/enmerkar#using-the-middleware) and update both your `INSTALLED_APPS` and `MIDDLEWARE_CLASSES`.# FeaturesProvides support for models:```pythonfrom django.db import modelsfrom django_prices.models import MoneyField, TaxedMoneyFieldclass Model(models.Model):    currency = models.CharField(max_length=3, default=&quot;BTC&quot;)    price_net_amount = models.DecimalField(max_digits=9, decimal_places=2, default=&quot;5&quot;)    price_net = MoneyField(amount_field=&quot;price_net_amount&quot;, currency_field=&quot;currency&quot;)    price_gross_amount = models.DecimalField(        max_digits=9, decimal_places=2, default=&quot;5&quot;    )    price_gross = MoneyField(        amount_field=&quot;price_gross_amount&quot;, currency_field=&quot;currency&quot;    )    price = TaxedMoneyField(        net_amount_field=&quot;price_net_amount&quot;,        gross_amount_field=&quot;price_gross_amount&quot;,        currency=&quot;currency&quot;,    )```And forms:```pythonfrom django import formsfrom django_prices.forms import MoneyFieldAVAILABLE_CURRENCIES = [&quot;BTC&quot;, &quot;USD&quot;]class ProductForm(forms.Form):    name = forms.CharField(label=&quot;Name&quot;)    price_net = MoneyField(label=&quot;net&quot;, available_currencies=AVAILABLE_CURRENCIES)```And validators:```pythonfrom django import formsfrom prices.forms import Moneyfrom django_prices.forms import MoneyFieldfrom django_prices.validators import (    MaxMoneyValidator, MinMoneyValidator, MoneyPrecisionValidator)class DonateForm(forms.Form):    donator_name = forms.CharField(label=&quot;Your name&quot;)    donation = MoneyField(        label=&quot;net&quot;,        available_currencies=[&quot;BTC&quot;, &quot;USD&quot;],        max_digits=9,        decimal_places=2,        validators=[            MoneyPrecisionValidator(),            MinMoneyValidator(Money(5, &quot;USD&quot;)),            MaxMoneyValidator(Money(500, &quot;USD&quot;)),        ],    )```It also provides support for templates:```html+django{% load prices %}&lt;p&gt;Price: {{ foo.price.gross|amount }} ({{ foo.price.net|amount }} + {{ foo.price.tax|amount }} tax)&lt;/p&gt;```You can also use HTML output from `prices` template tags, they will wrap currency symbol in a `&lt;span&gt;` element:```html+django{% load prices %}&lt;p&gt;Price: {{ foo.price.gross|amount:'html' }} ({{ foo.price.net|amount:'html' }} + {{ foo.price.tax|amount:'html' }} tax)&lt;/p&gt;```It will be rendered as a following structure (for example with English locale):```html&lt;span class=&quot;currency&quot;&gt;$&lt;/span&gt;15.00```## How to migrate to django-prices 2.0Version 2.0 introduces major changes to how prices data is stored in models, enabling setting price's currency per model instance.Steps to migrate:1. In your **forms**:    * remove the `currency` argument    * add `available_currencies` with available choices.    If the form specified `MoneyFields` in `fields` option, replace those with explicit declarations instead:    ```python    AVAILABLE_CURRENCIES = [(&quot;BTC&quot;, &quot;bitcoins&quot;), (&quot;USD&quot;, &quot;US dollar&quot;)]    class ModelForm(forms.ModelForm):        class Meta:            model = models.Model            fields = []        price_net = MoneyField(available_currencies=AVAILABLE_CURRENCIES)    ```1. In your **models** using `MoneyField`:    * Replace all occurrences of the `MoneyField` class with `DecimalField`    * Remove the `currency` argument from them    * Change `default` from Money instance to value acceptable by Decimal field        Example of code:        ```python        price_net = MoneyField(            &quot;net&quot;, currency=&quot;BTC&quot;, default=Money(&quot;5&quot;, &quot;BTC&quot;), max_digits=9, decimal_places=2        )        ```        Updated code:        ```python        price_net = models.DecimalField(&quot;net&quot;, default=&quot;5&quot;, max_digits=9, decimal_places=2)        ```1. In your **migration** files:    * Replace all occurrences of the `MoneyField` class with `DecimalField`    * Remove the `currency` argument from them    * Change `default` from Money instance to value acceptable by Decimal field        ```python        field = django_prices.models.MoneyField(currency='BTC', decimal_places=2, default='5', max_digits=9, verbose_name='net')        ```        Updated code:        ```python        field = models.DecimalField(decimal_places=2, default='5', max_digits=9, verbose_name='net')        ```1. Rename fields in **models**. Your old field will still store amount of money, so probably the best choice would be `price_net_amount` instead `price_net`.1. All places which use Models and it's fields can prevent django app from even starting the code. Possible issues: code tries to access non existing fields. Exclude those fields for now from your ModelForms, Graphene types etc.1. Run `python manage.py makemigrations`. Make sure to do this step before adding new `MoneyFields` to model! If not, django will generate `delete/create` migrations instead of `rename`.1. Run `python manage.py migrate`.1. Update `django-prices`.1. Add `models.CharField` for currency and `MoneyField` to your models:    ```python    currency = models.CharField(max_length=3, default=&quot;BTC&quot;)    price_net_amount = models.DecimalField(&quot;net&quot;, default=&quot;5&quot;, max_digits=9, decimal_places=2)    price_net = MoneyField(amount_field=&quot;price_net_amount&quot;, currency_field=&quot;currency&quot;)    ```1. Run `python manage.py makemigrations` and `python manage.py migrate`.1. Change `TaxedMoneyField` declaration:    ```python    price = TaxedMoneyField(        net_amount_field=&quot;price_net_amount&quot;,        gross_amount_field=&quot;price_gross_amount&quot;,        currency=&quot;currency&quot;,    )    ```1. Remember to address changes in previously edited ModelForms</longdescription>
</pkgmetadata>