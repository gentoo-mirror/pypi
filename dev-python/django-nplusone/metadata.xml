<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django_nplusoneDiscover possible N+1 queries in Django ORM at runtimeThe objective of this library is to help you discover any N+1s in your code at development time. Enable logging of warnings by following instructions shown in Usage section. Run your Django app as usual and you will see warning logs of any possible N+1s if found.## InstallationInstall the package from PyPI using `pip` as following```pip install django_nplusone```## UsageOnce package is installed, you can register the package in your `settings.py` as:```import nplusoneif DEBUG:    nplusone.show_nplusones()```This should start logging possible N+1s warnings using your logger configuration. The library uses standard python `logging` module and uses logger by the name of `nplusone`.## Ignore specific warningsYou can ignore warning for a specific statement by ending the statement with `# NO-NPLUSONE`.## TestYou can test the N+1 warning logging by putting some code as shown below somewhere in your application code that you know will get executed. Say you have a model `User` with a foreign key field `org` to `Organization` model.```user = User.objects.all()[0]print(user.org)```You should see a log message with a message that looks like this:```... Possible N+1 for model: User, field: org, relationship: ForwardManyToOne, file: &lt;?&gt;, function: &lt;?&gt;, line: &lt;?&gt;, statement: &lt;?&gt;```where `&lt;?&gt;` will have correct values for the fields derived from call stack pointing you to the statement that haspossible N+1</longdescription>
</pkgmetadata>