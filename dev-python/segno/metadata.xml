<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://app.travis-ci.com/heuer/segno.svg?branch=master    :target: https://app.travis-ci.com/heuer/segnoQR Code encoder and Micro QR Code encoder=========================================Pure Python QR Code generator with no dependencies.This package implements ISO/IEC 18004:2015(E) &quot;QR Code bar code symbologyspecification&quot; and produces QR Codes and Micro QR Codes with nearly no effort.It supports the `Structured Append mode &lt;https://segno.readthedocs.io/en/stable/structured-append.html&gt;`_which splits a message across several QR codes.Segno (Italian for &quot;sign&quot; / &quot;symbol&quot;) provides several serialization formatslike Scalable Vector Graphics (SVG), Encapsulated PostScript (EPS),Portable Network Graphics (PNG), Portable Document Format (PDF), Netpbm (PAM, PBM, PPM),LaTeX (PGF/TikZ), X PixMap (XBM), and X Bitmap (XPM) etc.None of these serializers require an external lib.Further, it provides several high level functions to create QR Codes which encode`contact data (vCard, MeCard) &lt;https://segno.readthedocs.io/en/stable/contact-information.html&gt;`_,`EPC QR Codes &lt;https://segno.readthedocs.io/en/stable/epc-qrcodes.html&gt;`_,or `WIFI QR Codes &lt;https://segno.readthedocs.io/en/stable/special-qrcode-factories.html#create-a-qr-code-for-a-wifi-configuration&gt;`_.The project provides more than 1500 test cases (coverage &gt;= 98%) to verify astandard conform QR Code and Micro QR Code generation acc. to ISO/IEC 18004:2015(E).Unique features---------------* Pure Python QR Code generator (supports 2.7, 3.5+, PyPy2 and PyPy3)* No dependencies* A lot of `serialization formats &lt;https://segno.readthedocs.io/en/stable/serializers.html#available-serializers&gt;`_ (SVG, PNG, EPS, PDF, ...)* `Fastest (pure Python) QR Code encoder &lt;https://segno.readthedocs.io/en/stable/comparison-qrcode-libs.html#performance&gt;`_* Micro QR Codes* `Structured Append mode &lt;https://segno.readthedocs.io/en/stable/structured-append.html&gt;`_* `Hanzi mode &lt;https://segno.readthedocs.io/en/stable/qrcode-modes.html#hanzi-mode&gt;`_* `Command line interface &lt;https://segno.readthedocs.io/en/stable/command-line.html&gt;`_* `Simple, user-friendly API &lt;https://segno.readthedocs.io/en/stable/make.html&gt;`_.. code-block:: python    import segno    qrcode = segno.make('Yellow Submarine')    qrcode.save('yellow-submarine.png')* `Colorful QR codes &lt;https://segno.readthedocs.io/en/stable/colorful-qrcodes.html&gt;`_  .. image:: https://github.com/heuer/segno/raw/master/docs/_static/colorful/qrcode_yellow-submarine.png    :alt: Colorful 7-H QR code encoding &quot;Yellow Submarine&quot;  ... works also with Micro QR codes  .. image:: https://github.com/heuer/segno/raw/master/docs/_static/colorful/micro_qrcode_rain.png    :alt: Colorful M4-Q Micro QR code encoding &quot;Rain&quot;* `Artistic QR Codes &lt;https://segno.readthedocs.io/en/stable/artistic-qrcodes.html&gt;`_  (requires the `qrcode-artistic &lt;https://github.com/heuer/qrcode-artistic&gt;`_ plug-in)  .. image:: https://github.com/heuer/segno/raw/master/docs/_static/artistic/letitbe.jpg    :alt: Animated 3-H QR code encoding &quot;The Beatles -- Let It Be&quot;  ... animated QR codes are supported as well  .. image:: https://github.com/heuer/segno/raw/master/docs/_static/artistic/abbey-road.webp    :alt: Animated 4-H QR code encoding &quot;The Beatles -- Abbey Road&quot;Installation------------Use ``pip`` to install segno from PyPI::    $ pip install segnoMacPorts^^^^^^^^Segno is also available at `MacPorts &lt;https://www.macports.org/&gt;`_(`MacPorts project page &lt;https://ports.macports.org/port/py-segno/&gt;`_)::    $ sudo port install py-segnoconda-forge^^^^^^^^^^^The library is also available at `conda-forge &lt;https://conda-forge.org/&gt;`_(`conda-forge project page &lt;https://anaconda.org/conda-forge/segno&gt;`_)::    $ conda install -c conda-forge segnoDebian 11 / Bullseye^^^^^^^^^^^^^^^^^^^^::    $ apt-get install python3-segnoDebian 10 / Buster (backports)^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^::    $ apt-get -t buster-backports install python3-segnoArch Linux^^^^^^^^^^::    $ pacman -S python-segnoUsage-----Command line^^^^^^^^^^^^The command line script prints a QR code to the terminal::    $ segno &quot;Comfortably Numb&quot;To serialize a QR code, use the &quot;output&quot; argument::    $ segno -o=raincoat.svg &quot;Famous Blue Raincoat&quot;    $ segno --scale 10 --dark darkblue --border 0 --output=fire.svg &quot;Who by Fire&quot;    $ segno --scale 10 --light transparent --output=miracle.png &quot;Waiting for the Miracle&quot;Library^^^^^^^.. code-block:: python    &gt;&gt;&gt; import segno    &gt;&gt;&gt; # Let Segno choose the minimal version and an optimal (maximal) error    &gt;&gt;&gt; # level without changing the minimal version    &gt;&gt;&gt; qrcode = segno.make('Up Jumped the Devil')    &gt;&gt;&gt; qrcode.designator  # Returns the QR code version and the error correction level    '2-Q'    &gt;&gt;&gt; qrcode.save('up-jumped-the-devil.png')  # Save as PNG    &gt;&gt;&gt; qrcode.save('up-jumped-the-devil-2.png', scale=10)  # Scaling factor 10    &gt;&gt;&gt; qrcode.save('up-jumped-the-devil-3.png', light=None)  # Transparent light modules    &gt;&gt;&gt; qrcode.save('up-jumped-the-devil.pdf', scale=10)  # Save as PDF    &gt;&gt;&gt; # SVG drawing the dark modules in &quot;dark blue&quot;    &gt;&gt;&gt; qrcode.save('up-jumped-the-devil.svg', scale=10, dark='darkblue')If the content to encode is small enough, a Micro QR code is generated:.. code-block:: python    &gt;&gt;&gt; import segno    &gt;&gt;&gt; qrcode = segno.make('RAIN')    &gt;&gt;&gt; qrcode.is_micro    True    &gt;&gt;&gt; qrcode.designator    'M2-M'If this behaviour is not desired, the user may set ``micro`` to ``False``.. code-block:: python    &gt;&gt;&gt; import segno    &gt;&gt;&gt; qrcode = segno.make('RAIN', micro=False)    &gt;&gt;&gt; qrcode.is_micro    False    &gt;&gt;&gt; qrcode.designator    '1-H'Or use the factory functions ``segno.make_qr()`` which generates always QR codes(never Micro QR codes) or ``segno.make_micro()`` which returns alwaysMicro QR codes (or raises an error if the content is too large for a Micro QR code)... code-block:: python    &gt;&gt;&gt; import segno    &gt;&gt;&gt; qrcode_micro = segno.make_micro('THE BEATLES')    &gt;&gt;&gt; qrcode_micro.designator    'M3-M'    &gt;&gt;&gt; qrcode = segno.make_qr('THE BEATLES')  # Same content but enforce a QR Code    &gt;&gt;&gt; qrcode.designator    '1-Q'    &gt;&gt;&gt; # This won't work since the data does not fit into a Micro QR Code M1 - M4    &gt;&gt;&gt; micro_qrcode = segno.make_micro('Nick Cave and the Bad Seeds')    Traceback (most recent call last):        ...    DataOverflowError: Data too large. No Micro QR Code can handle the provided dataAll factory functions use the same parameters to specify the desired errorlevel, version, data mask etc., see `Segno's documentation`_ for details.Documentation-------------Read the online documentation at &lt;https://segno.readthedocs.io/&gt;Trademark---------&quot;QR Code&quot; and &quot;Micro QR Code&quot; are registered trademarks of DENSO WAVE INCORPORATED... _Segno's documentation: https://segno.readthedocs.io/Changes=======1.5.2 -- 2022-05-25-------------------* Added support for `PEP 517 &lt;https://www.python.org/dev/peps/pep-0517/&gt;`_* Removed PyQRCode from comparison / benchmarks since it adds no value anymore* Added more properties for vCard  see `PR #106 &lt;https://github.com/heuer/segno/pull/106&gt;`_ contributed by  `Tobias Udtke &lt;https://github.com/DerBiasto&gt;`_:  - cellphone (TEL;TYPE=CELL)  - homephone (TEL;TYPE=HOME)  - workphone (TEL;TYPE=WORK)  Signatures of `segno.helpers.make_vcard &lt;https://segno.readthedocs.io/en/latest/api.html#segno.helpers.make_vcard&gt;`_  and `segno.helpers.make_vcard_data &lt;https://segno.readthedocs.io/en/latest/api.html#segno.helpers.make_vcard_data&gt;`_  changed, but in a backwards compatible way.* Changed default Python test version to 3.10 (2.7 and above are still supported)1.5.1 -- 2022-05-05-24----------------------* Unreleased1.5.0 -- 2022-05-05-24----------------------* Unreleased1.4.1 -- 2021-11-25-------------------* Fixed Python type hints* XPM serializer accepts ``None`` (transparent) for dark modules* Better docs1.4.0 -- 2021-11-06-------------------* Added option to print QR codes in a more compact manner to the terminal.  `PR #97 &lt;https://github.com/heuer/segno/pull/97&gt;`_ implemented by  `Christian Oudard &lt;https://github.com/christian-oudard&gt;`_.* Minor doc changes* Added more test cases* Updated benchmark results1.3.3 -- 2021-03-23-------------------* Fixed `#95 &lt;https://github.com/heuer/segno/issues/95&gt;`_:  ``helpers.make_wifi`` and ``helpers.make_wifi_data`` may return  invalid data if any input contains characters which can be  interpreted as an integer.* Updated ``helpers.make_wifi`` and ``helpers.make_wifi_data``  signature and doc strings to match the stub / type hints.1.3.2 -- 2021-03-22-------------------* Not released due to twine issues (markup errors in README.rst)1.3.1 -- 2020-09-01-------------------* Fixed: Stub files (type hints) were missing from the source distribution.1.3.0 -- 2020-08-31-------------------* Fixed `#84 &lt;https://github.com/heuer/segno/issues/84&gt;`_:  CLI ``--encoding`` was used for the encoding of SVG documents and not  for the encoding of the QR code.  Added ``--svgencoding`` to specify the encoding of SVG documents.1.2.1 -- 2020-08-27-------------------* Improved API docs* Added support for type hints for the public API (stub files)1.2.0 -- 2020-08-18-------------------* Added ``QRCode.svg_inline`` method which returns a string which  can be used to embed the SVG directly in HTML pages.* Improved documentation &lt;https://segno.readthedocs.org/&gt;* Improved code quality* Switched from `tox &lt;https://pypi.org/project/tox/&gt;`_ to  `nox &lt;https://pypi.org/project/nox/&gt;`_* Utilize `flake8 &lt;https://pypi.org/project/flake8/&gt;`_* Moved metadata from setup.py to setup.cfg1.1.0 -- 2020-08-05-------------------* Support for `Hanzi &lt;https://en.wikipedia.org/wiki/Chinese_characters&gt;`_ mode,  implemented by `Shi Yan &lt;https://github.com/neycyanshi&gt;`_* Fixed `#81 &lt;https://github.com/heuer/segno/issues/81&gt;`_:  Wrong character count in Kanji mode if the user provided the QR code data  as bytes.* Improved documentation &lt;https://segno.readthedocs.org/&gt;* Improved API docs1.0.2 -- 2020-07-30-------------------* Fixed error in Kanji encoding: Data was incomplete.  Again, discovered by `Shi Yan &lt;https://github.com/neycyanshi&gt;`_* Better test coverage for Kanji encoding1.0.1 -- 2020-07-28-------------------* Fixed wrong information about character count in Kanji mode  (discovered and fixed by `Shi Yan &lt;https://github.com/neycyanshi&gt;`_)* Fixed `#72 &lt;https://github.com/heuer/segno/issues/72&gt;`_:  Encodings for ``helpers.make_epc_qr`` may be specified by name or  by a numeric constant.* Added support for `Netpbm PPM &lt;http://netpbm.sourceforge.net/doc/ppm.html&gt;`_ images.* Documentation improvements (also thanks to `James Addison &lt;https://github.com/jayaddison&gt;`_  for pr `#73 &lt;https://github.com/heuer/segno/pull/73&gt;`_)* Removed &quot;version&quot; parameter from ``encoder.prepare_data`` (does not belong to  the public API anyway)1.0.0 -- 2020-02-14-------------------* Removed support for ``color`` / ``background`` keywords (deprecated in 0.4.0).  Use ``dark`` and ``light``.* Reintroduced ``segno.DataOverflowError`` (inherited from ``ValueError``) to  indicate that the provided data does not fit into the provided (Micro) QR Code  parameters.* Documentation improvements* Although this lib made backwards incompatible changes since version 0.1.0,  the changes should be clear since almost all changes were made  very conservative with backwards compatibility in mind.  Even early adopters should find a clear update path.  This version marks a stable API acc. to `Semantic Versioning &lt;https://semver.org/&gt;`_.* The initial stable release after nearly four years of development. Happy  valentine ;)0.4.0 -- 2020-01-21-------------------* Removed deprecated functions, modules etc. See `#56 &lt;https://github.com/heuer/segno/issues/56&gt;`_,  `#57 &lt;https://github.com/heuer/segno/issues/57&gt;`_, `#59 &lt;https://github.com/heuer/segno/issues/59&gt;`_,  `#61 &lt;https://github.com/heuer/segno/issues/61&gt;`_, `#67 &lt;https://github.com/heuer/segno/issues/67&gt;`_.* Deprecated usage of keywords &quot;color&quot; and &quot;background&quot;. Replacements: &quot;dark&quot;  and &quot;light&quot;. See `#60 &lt;https://github.com/heuer/segno/issues/60&gt;`_. The deprecated keywords will be removed in 1.0.0.* Minor performance improvements for writing SVG (at least for Py 3.7, YMMV).* Documentation improvements0.3.9 -- 2020-01-19-------------------* Fixed `#71 &lt;https://github.com/heuer/segno/issues/71&gt;`_: Dark / light  modules of the finder pattern may be interpreted wrong if set to ``None``* Removed segno.encoder, segno.writers and segno.utils from public API (fixes  `#69 &lt;https://github.com/heuer/segno/issues/69&gt;`_)* Removed segno.colors (part of segno.writers now)* Documentation improvements0.3.8 -- 2020-01-15-------------------* Added support for multiple (more than two) colors to SVG  (fixes `#64 &lt;https://github.com/heuer/segno/issues/64&gt;`_)* Fixed several test cases* Removed ``QRCodeError`` and all derived exceptions from public API (still  available but not thrown and they will be removed in 0.4.0)* Documentation improvements0.3.7 -- 2020-01-09-------------------* Documentation improvements: Added several examples, fixed docs* Fixed `#62 &lt;https://github.com/heuer/segno/issues/62&gt;`_:  PNG serializer adds only those colors to the PLTE which are  actually needed for the given (Micro) QR Code.* Minor performance improvements0.3.6 -- 2020-01-06-------------------* Backwards incompatibility change: QRCode.show() uses &quot;dark&quot; instead of  &quot;color&quot; and &quot;light&quot; instead of &quot;background&quot; to define the color of  the dark / light modules* Backwards incompatibility change: All ``segno.writers`` use &quot;dark&quot; instead of  &quot;color&quot; and &quot;light&quot; instead of &quot;background&quot;. This does not affect normal users,  but only users of the low level API.* Changed the keyword for setting the color of the dark modules from  &quot;color&quot; to &quot;dark&quot; and for setting the light modules from &quot;background&quot;  to &quot;light&quot;  The former keywords are still supported. Their usage will issue a  DeprecationWarning in the future.* Added ``--dark`` and ``--light`` to the command line interface, see point  above. ```--color``` and ``--background`` are still supported.* Fixed typos, improved documentation* Deprecated ``segno.moduletypes`` (will be removed in release 0.4.0),  moved all constants to ``segno.consts``* Deprecated usage of parameter &quot;colormap&quot; (introduced in 0.3.4). It still  works but a deprecation warning is issued.  Instead of::      colormap = {mt.TYPE_FINDER_PATTERN_DARK: 'darkred',                  mt.TYPE_ALIGNMENT_PATTERN_DARK: 'darkred',                  mt.TYPE_TIMING_DARK: 'darkred',                  mt.TYPE_DARKMODULE: 'darkred',                  mt.TYPE_DATA_DARK: 'darkorange',                  mt.TYPE_DATA_LIGHT: 'yellow',                  mt.TYPE_FORMAT_DARK: 'darkred'}      qr.save('qrcode.png', scale=5, colormap=colormap)  use::      qr.save('qrcode.png', scale=5, dark='darkred', data_dark='darkorange',              data_light='yellow')  See `Colorful QR Codes &lt;https://segno.readthedocs.io/en/stable/colorful-qrcodes.html&gt;`_  for a description of available module names.0.3.5 -- 2020-01-03-------------------* Added support for colorful (more than two colors) QR Codes to the CLI script  (fixes `#58 &lt;https://github.com/heuer/segno/issues/58&gt;`_).* Fixed Read the Docs build* Improved documentation* Minor performance and code improvements.0.3.4 -- 2020-01-02-------------------* Fixed issue `#54 &lt;https://github.com/heuer/segno/issues/54&gt;`_:  After last change (see 0.3.3), white background with transparent  QR Code did not work. Enhanced test suite to cover all possible inputs  for PNG grayscale mode* Removed interpretation of ``addad`` from PNG serializer.  Contradicts the claim to create small images by default.  It still belongs to the function signature but will be removed in release 0.4.0* The option ``--no-ad`` (CLI) is still available but ignored and will be removed  in release 0.4.0. Removed the option from man page.* Added option to PNG serializer to provide more than two colors. Each module  type may have its own color.* Added support for EPC QR Codes.* Fixed bug in ``helpers.make_vcard_data`` function (the &quot;source&quot; URL was not  used, but the usual URL was added to the SOURCE field)* Better test coverage for the ``segno.helpers`` module0.3.3 -- 2019-12-29-------------------* Fixed issue `#54 &lt;https://github.com/heuer/segno/issues/54&gt;`_:  PNGs with white color and transparent background were rendered  as transparent PNG with a *black* QR Code.* Removed test environments CPython 3.4 and 3.6 from tox* Improved documentation* Refactored source code* Added test cases* Fixed bugs in ``helpers.make_vcard_data`` function  (superfluous semicolon in birthday line, check geo coordinates)* Renamed ``utils.matrix_iter_detail`` into ``utils.matrix_iter_verbose``.  Kept ``matrix_iter_detail`` for backwards compatibility (deprecated, will be  removed in release 0.4.0)* Moved module constants from ``segno.utils`` into ``segno.moduletypes``,  Constants from ``segno.utils`` will be removed in release 0.4.0.* Added option ``verbose`` (default: ``False``) to ``segno.QRCode.matrix_iter()``  which returns an iterator which provides information about the module type  (i.e. quiet zone, dark data module, light data module).0.3.2 -- 2019-07-15-------------------* Performance improvements* Added man page for the CLI (fixes `#41 &lt;https://github.com/heuer/segno/issues/41&gt;`_)* Added more documentation and examples* Fixed missing charts of &lt;https://segno.readthedocs.io/en/stable/comparison-qrcode-libs.html&gt;* Added PyQRCodeNG &lt;https://pypi.org/project/PyQRCodeNG/&gt; to comparison table* Updated CSS for a better layout of tables with a lot of content* Removed deprecated functions ``encoder.score_n1``, ``encoder.score_n2``,  ``encoder.score_n3``, and ``encoder.score_n4`` (they didn't belong to the  public API anyway)* Fixed Read the Docs build0.3.1 -- 2019-07-15-------------------* See 0.3.20.3.0 -- 2019-06-25-------------------* Performance improvements (evaluation of mask scores)* Faster PNG output* Faster ``utils.matrix_iter`` (which improves several writers, i.e. PNG)* Deprecation of ``encoder.score_n1``, ``encoder.score_n2``, ``encoder.score_n3``,  and ``encoder.score_n4``.  Use ``encoder.mask_scores`` or ``encoder.evaluate_mask``.0.2.9 -- 2019-04-24-------------------* Fixed typos* PDF serializer: Added support for stroke and background color,  initial code contributed by `Serge Morel &lt;https://github.com/Vluf&gt;`_  (pr `#52 &lt;https://github.com/heuer/segno/pull/52&gt;`_).0.2.8 -- 2018-10-17-------------------* Fixed `#45 &lt;https://github.com/heuer/segno/issues/45&gt;`_:  CLI does not raise exceptions but indicates errors with return code 1 and  writes the error message to ``sys.stderr``* Added experimental ``utils.matrix_iter_detail()`` function which returns an iterator over  the matrix to distinguish different dark and light modules by their function (i.e. separator,  finder pattern etc.)* Minor performance improvements* Removed Python 2.6 from test environment* Added support for vCard TITLE attribute, contributed by `Stefano Borini &lt;https://github.com/stefanoborini&gt;`_  (pr `#48 &lt;https://github.com/heuer/segno/pull/48&gt;`_)* Added support for vCard PHOTO URI attribute, suggested by Arthur Reinhart0.2.7 -- 2018-02-18-------------------* Fixed dist package0.2.6 -- 2018-02-18-------------------* Updated and fixed docs* Added PyPy 3 to test environment0.2.5 -- 2017-02-14-------------------* Added experimental support for Structured Append (divide content into max.  16 QR Code symbols)* Internal refactoring (i.e. segno/scripts/cmd.py -&gt; segno/cli.py)* Added ``-s`` shortcut to Segno's command line interface to provide the scaling factor* Added ``-b`` shortcut to Segno's command line interface to provide the border / quiet zone* CLI accepts unquoted, whitespace separated content:  ``segno &quot;Comfortably Numb&quot;`` can be written as ``segno Comfortably Numb``0.2.4 -- 2017-01-31-------------------* Fixed `#33 &lt;https://github.com/heuer/segno/issues/33&gt;`_:  Some Micro QR Codes may be unreadable due to wrong  format information. Further, M1 and M3 codes may be wrong due to wrong  encoding of final data symbol character (8 bits instead of (correct) 4 bits).  Thanks to `Nicolas Boullis &lt;https://github.com/nboullis&gt;`_ for the bug report,  initial fix, tests and patience.* Fixed `#34 &lt;https://github.com/heuer/segno/issues/34&gt;`_:  Change default error level from &quot;M&quot; to &quot;L&quot; to avoid surprises that  the content does not fit into the provided version. This change is somewhat  backwards incompatible.* Fixed `#35 &lt;https://github.com/heuer/segno/issues/35&gt;`_:  Check of user supplied mask pattern index was wrong.* Fixed `#36 &lt;https://github.com/heuer/segno/issues/36&gt;`_:  Wrong placement of codeword in M1 and M3 symbols.* Fixed `#37 &lt;https://github.com/heuer/segno/issues/37&gt;`_:  Generation of M1 / M3 symbols fail if the data modules are  completely filled.* Fixed `#38 &lt;https://github.com/heuer/segno/issues/38&gt;`_:  Optimized mask pattern choosing algorithm: If the user supplied  a preferred mask, the mask evaluation step is skipped and the preferred mask  is chosen* Added more internal checks to ensure correct (Micro) QR Codes; provided  helpful exceptions* Removed ``writers.get_writable`` (replaced by ``writers.writable``)* Added support for serializing QR Codes as XBM (X BitMap) (supports  black / white images)* Added support for serializing QR Codes as XPM (X PixMap) (supports colors and  transparency)* Added support for encoding contact information as vCard version 3.0  (``segno.helpers``)* Added -V shortcut to Segno's command line script to show version information* Better test coverage for command line script* Better test coverage for M1 and M3 symbols0.2.3 -- 2016-10-17-------------------* Fixed `#27 &lt;https://github.com/heuer/segno/issues/27&gt;`_:  Email URI is wrong if CC or BCC is used.* Fixed `#32 &lt;https://github.com/heuer/segno/issues/32&gt;`_:  Don't add version attribute if SVG &gt;= 2.0* Deprecated ``writers.get_writable``; use ``writers.writable``  ``writers.writable`` closes file-like objects automatically (if necessary);  replace ``writable, must_close = writers.get_writable(filename_or_buffer, mode)``  with ``with writers.writable(filename_or_buffer, mode) as f``* Added option to PNG serializer to specify an optional DPI value  (thanks to Markus Ueberall for support)* Added PAM (Portable Arbitrary Map) as serialization format (supports colors  and transparency)0.2.2 -- 2016-09-21-------------------* Command line script reports Segno's version (``--ver``) and the version  is also mentioned in the help message (``-h``) (`#24 &lt;https://github.com/heuer/segno/issues/24&gt;`_)* Support for creating email addresses or complete messages (``segno.helpers``)* Internal optimizations and more correct minimal version finding  (`#26 &lt;https://github.com/heuer/segno/issues/26&gt;`_)0.2.1 -- 2016-09-15-------------------* Fixed Python packaging (source distribution did not work), again0.2.0 -- 2016-09-15-------------------* Fixed Python packaging0.1.9 -- 2016-09-15-------------------* Added &quot;color&quot; parameter to the LaTeX serializer to define the color of the  dark modules.* Fixed serious issue `#23 &lt;https://github.com/heuer/segno/issues/23&gt;`_:  Segno creates invalid QR Codes if boost_error is not disabled  (enabled by default)0.1.8 -- 2016-09-14-------------------* Removed ``utils.matrix_with_border_iter``* Fixed `#21 &lt;https://github.com/heuer/segno/issues/21&gt;`_  (type error while writing to terminal under Windows)* Added option to serialize QR Codes as LaTeX vector graphic* Added module ``segno.helpers`` which provides additional factory functions  to create common QR Codes like a WIFI configuration, a geo location or MeCard0.1.7 -- 2016-09-04-------------------* Changed API: Added a feature to increase the error correction level  if it fits. Disable this feature via ``boost_error=False``  (`#16 &lt;https://github.com/heuer/segno/issues/16&gt;`_)* Added ``--no-error-boost`` to the command line script to disable error  correction level incrementation (`#17 &lt;https://github.com/heuer/segno/issues/17&gt;`_)* Command line script: Internal changes and better test coverage* Added tests for issue `#18 &lt;https://github.com/heuer/segno/issues/18&gt;`_* Added PBM (P1 and P4) serialization.* Deprecated ``utils.matrix_with_border_iter``, use ``utils.matrix_iter``* ``utils.matrix_with_border_iter`` will be removed in the next release* API change: ``QRCode.matrix_iter(border)`` -&gt; ``QRCode.matrix_iter(scale=1, border=None)``0.1.6 -- 2016-08-25-------------------* Fixed setup0.1.5 -- 2016-08-24-------------------* Added QRCode.matrix_iter(border) which returns an iterator over the matrix and  includes the border (as light modules).* Invalid (empty) SVG identifiers / class names are ignored and do not result  into an invalid SVG document (issue `#8 &lt;https://github.com/heuer/segno/issues/8&gt;`_).* SVG serializer: If ``unit`` was set to ``None``, an invalid SVG document was  generated (issue `#14 &lt;https://github.com/heuer/segno/issues/14&gt;`_).* Better command line support:  - The command line script recognizes all SVG options (`#9 &lt;https://github.com/heuer/segno/issues/9&gt;`_)  - Added ``--mode``/``-m``, renamed ``--mask``/``-m`` to ``--pattern``/``-p``    (issue `#10 &lt;https://github.com/heuer/segno/issues/10&gt;`_)  - The script used an empty string as default value for the data to encode.    The data to encode has no default value anymore    (issue `#11 &lt;https://github.com/heuer/segno/issues/11&gt;`_)  - Added ``--no-ad`` to omit the comment ``Software`` in PNG images    (issue `#12 &lt;https://github.com/heuer/segno/issues/12&gt;`_)0.1.4 -- 2016-08-21-------------------* Better terminal output* Fixed issue `#5 &lt;https://github.com/heuer/segno/issues/5&gt;`_:  QRCode.terminal() uses a special output function (if it  detects Windows) to support MS Windows which may not support ANSI escape codes.0.1.3 -- 2016-08-20-------------------* Added command line script &quot;segno&quot;* Registered new file extension &quot;ans&quot; which serializes the QR Code as  ANSI escape code (same output as QRCode.terminal())* Removed deprecated methods &quot;eps&quot;, &quot;svg&quot;, &quot;png&quot;, &quot;pdf&quot;, and &quot;txt&quot; from  segno.QRCode* Switched from nose tests to py.test0.1.2 -- 2016-08-17-------------------* Updated docs* Backward incompatible changes: Deprecated &quot;eps&quot;, &quot;svg&quot;, &quot;png&quot;, &quot;pdf&quot;, and  &quot;txt&quot; methods from QRCode. Use QRCode.save.  Methods will be removed in 0.1.3* Fixed issue `#3 &lt;https://github.com/heuer/segno/issues/3&gt;`_  (M1 and M3 codes may have undefined areas)* Fixed issue `#4 &lt;https://github.com/heuer/segno/issues/4&gt;`_  (wrong 'error' default value for encoder.encode(),  factory function segno.make() wasn't affected)0.1.1 -- 2016-08-14-------------------* Initial release</longdescription>
</pkgmetadata>