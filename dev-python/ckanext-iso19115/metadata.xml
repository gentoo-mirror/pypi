<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Tests](https://github.com/DataShades/ckanext-iso19115/workflows/Tests/badge.svg?branch=main)](https://github.com/DataShades/ckanext-iso19115/actions)# ckanext-iso19115**TODO:** Put a description of your extension here:  What does it do? What features does it have? Consider including some screenshots or embedding a video!## Requirements**TODO:** For example, you might want to mention here which versions of CKAN thisextension works with.If your extension works across different versions you can add the following table:Compatibility with core CKAN versions:| CKAN version    | Compatible?   || --------------- | ------------- || 2.6 and earlier | not tested    || 2.7             | not tested    || 2.8             | not tested    || 2.9             | not tested    |Suggested values:* &quot;yes&quot;* &quot;not tested&quot; - I can't think of a reason why it wouldn't work* &quot;not yet&quot; - there is an intention to get it working* &quot;no&quot;## Installation**TODO:** Add any additional install steps to the list below.   For example installing any non-Python dependencies or adding any required   config settings.To install ckanext-iso19115:1. Activate your CKAN virtual environment, for example:     . /usr/lib/ckan/default/bin/activate2. Clone the source and install it on the virtualenv    git clone https://github.com/DataShades/ckanext-iso19115.git    cd ckanext-iso19115    pip install -e .pip install -r requirements.txt3. Add `iso19115` to the `ckan.plugins` setting in your CKAN   config file (by default the config file is located at   `/etc/ckan/default/ckan.ini`).4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu:     sudo service apache2 reload## Config settingsNone at present**TODO:** Document any optional config settings here. For example:# The minimum number of hours to wait before re-checking a resource# (optional, default: 24).ckanext.iso19115.some_setting = some_default_value## Developer installationTo install ckanext-iso19115 for development, activate your CKAN virtualenv anddo:    git clone https://github.com/DataShades/ckanext-iso19115.git    cd ckanext-iso19115    python setup.py develop    pip install -r dev-requirements.txt## TestsTo run the tests, do:    pytest --ckan-ini=test.ini## Releasing a new version of ckanext-iso19115If ckanext-iso19115 should be available on PyPI you can follow these steps to publish a new version:1. Update the version number in the `setup.py` file. See [PEP 440](http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers) for how to choose version numbers.2. Make sure you have the latest version of necessary packages:    pip install --upgrade setuptools wheel twine3. Create a source and binary distributions of the new version:       python setup.py sdist bdist_wheel &amp;&amp; twine check dist/*   Fix any errors you get.4. Upload the source distribution to PyPI:       twine upload dist/*5. Commit any outstanding changes:       git commit -a       git push6. Tag the new release of the project on GitHub with the version number from   the `setup.py` file. For example if the version number in `setup.py` is   0.0.1 then do:       git tag 0.0.1       git push --tags## License[AGPL](https://www.gnu.org/licenses/agpl-3.0.en.html)</longdescription>
</pkgmetadata>