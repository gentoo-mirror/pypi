<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>schema-validator============#### Generate from quart-schema### Install - `pip install schema-validator`&lt;details&gt;&lt;summary&gt;How to use&lt;/summary&gt;```    from dataclasses import dataclass    from datetime import datetime    from typing import Optional    from pydantic import BaseModel    from flask import Flask    from quart import Quart    from schema_validator import SchemaValidator    from schema_validator.flask import validate    # from schema_validator.quart import validate    app = Flask(__name__)    # or     app = Quart(__name__)            OR        schema = SchemaValidator(app)    schema.init_app(app)    @dataclass    class Todo:        task: str        due: Optional[datetime]    class TodoResponse(BaseModel):        id: int        name: str    @app.post(&quot;/&quot;)    @validate(body=Todo, responses=TodoResponse)    def create_todo():        # balabala        return dict(id=1, name=&quot;2&quot;)            @app.get(&quot;/&quot;)    @validate(        query=Todo,        responses={200: TodoResponse, 400: TodoResponse}    )    def update_todo():        # balabala        return TodoResponse(id=1, name=&quot;123&quot;)    @app.delete(&quot;/&quot;)    @validate(        body=Todo,        responses={200: TodoResponse}    )    def delete():        # balabala        return jsonify(id=1)    @tags(&quot;SOME-TAG&quot;, &quot;OTHER-TAG&quot;)  # only for swagger    class View(MethodView):        @validate(...)        def get(self):            return {}           ```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;How to show the swagger &lt;/summary&gt;```app.config[&quot;SWAGGER_ROUTE&quot;] = Truehttp://yourhost/swagger/docs   -&gt; show the all swaggerhttp://yourhost/swagger/docs/{tag} -&gt; show the swagger which include tag```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;How to export the swagger &lt;/summary&gt;```add command in flask/quart:    app.cli.add_command(generate_schema_command)Export all swagger to json file: - flask/quart schema -o swagger.jsonExport the swagger which include the ACCOUNT tag: - flask/quart schema -o swagger.json -t ACCOUNT```&lt;/details&gt;</longdescription>
</pkgmetadata>