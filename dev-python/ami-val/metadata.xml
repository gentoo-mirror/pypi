<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ami-val## Introductionami-val is a lightweight, fast tests collection for AMIs.## Installation### Install from pip`# pip3 install ami-val`### Install from source code```bash# git clone https://github.com/liangxiao1/ami-val.git# cd ami-val# python3 setup.py install```### Build wheel from source code and install it```bash# python3 setup.py sdist bdist_wheel# pip install -U dist/ami_val-0.0.1-py3-none-any.whl```### Public new wheels on [pypi](https://pypi.org/project/ami-val/) (maintainer use only)`# python3 -m twine upload  dist/*`## Run test### We shared the pre configured aws credentials in &quot;~/.aws/&quot;, please specify profile name as below format```bash# cat ~/.aws/credentials# aws for default aws regions access[aws]aws_access_key_id = xxxxxxxaws_secret_access_key = xxxxxxxxx# aws for default china regions access[aws-china]aws_access_key_id = xxxxxxxaws_secret_access_key = xxxxxxxxx# aws for default us-gov regions access[aws-us-gov]aws_access_key_id = xxxxxxxaws_secret_access_key = xxxxxxxxx```### The config fileYou can change the default setting in &quot;cfg/ami-val.yaml&quot; locates in the same installed dir.Below option is must required for ssh login:```# remote_user: user and keyfile to login instancessh_user: ec2-userssh_keyfile: '/home/virtqe_s1.pem'# if pair_name keypair not found, will upload ssh_pubfile automatically# ssh_pubfile is not required if pair_name exists already.pair_name: virtqe_s1ssh_pubfile: '/home/virtqe_s1.pub'```### Run all ami-val supported cases(the default path is &quot;/usr/local/bin&quot; if not in virtual environment. )  `# ami-val -f https://xxxx/pub/task/343012 --paralle`  `# ami-val -f images.json`  The json format should be like this, except required, other are options:```bash# cat images.json[  {    &quot;ami&quot;: &quot;ami-01166axxxxxx&quot;, &lt;- required    &quot;description&quot;: &quot;Provided by Red Hat, Inc.&quot;,    &quot;ena_support&quot;: true, &lt;- required    &quot;name&quot;: &quot;RHEL-xxxxxx-x86_64-1-Hourly2-GP2&quot;, &lt;- required    &quot;region&quot;: &quot;us-east-1&quot;, &lt;- required    &quot;release&quot;: {      &quot;arch&quot;: &quot;x86_64&quot;, &lt;- required      &quot;base_product&quot;: null,       &quot;base_version&quot;: null,       &quot;date&quot;: &quot;20201020&quot;,       &quot;product&quot;: &quot;RHEL&quot;,       &quot;respin&quot;: 1,       &quot;type&quot;: null,       &quot;variant&quot;: &quot;BaseOS&quot;,       &quot;version&quot;: &quot;8.x&quot;    },     &quot;root_device&quot;: &quot;/dev/sda1&quot;,     &quot;sriov_net_support&quot;: &quot;simple&quot;,     &quot;type&quot;: &quot;hourly&quot;,     &quot;virtualization&quot;: &quot;hvm&quot;,     &quot;volume&quot;: &quot;gp2&quot;  }]```### List all supported cases only without run`# ami-val -l`#### Filter case name with keywords timezone and bash`# ami-val -l -p timezone,bash_history`#### Filter case name with keywords stage1 and skip timezone check`# ami-val -l -p stage1 -s timezone`### Clean the resource created  ```bash# ami-val --logdir /tmp/ami_val_344423 --clean```### The log fileThe console only shows the case test run.The test debug log file are saved in &quot;/tmp/ami_val&quot; following case name by default.If task id can be detected, it will be in &quot;/tmp/ami_val_taskid&quot; by default.Below is an example:```bash# ami-val -f https://xxxxxxx/pub/task/343012 --paralleRun in mode: is_listcase:False pattern:None is_paralle:TrueTask url provided, try to download itGet data from http://xxxxxxx/pub/task/343012/log/images.json?format=rawGot data from http://xxxxxxx/pub/task/343012/log/images.json?format=rawRemove exists /tmp/ami_val_343012Create new /tmp/ami_val_343012Data saved to /tmp/ami_val_343012/images.jsonUse profile:awsresource /tmp/ami_val_343012/resource.json2021-03-01 01:41:30.068325 INFO:Use profile:aws in region ['us-west-2', 'cn-northwest-1', 'us-gov-west-1']2021-03-01 01:41:30.544445 INFO:Init key in region us-west-2 successfullyRunning ami_val.tests.test_stage0.test_stage0_check_aminame (1/6)Running ami_val.tests.test_stage0.test_stage0_check_ena_enabled (2/6)Running ami_val.tests.test_stage0.test_stage0_launch_instance (3/6)Running ami_val.tests.test_stage1.test_stage1_check_bash_history (4/6)Running ami_val.tests.test_stage1.test_stage1_check_username (5/6)Running ami_val.tests.test_stage2.test_stage2_check_ha_specific (6/6)Total case num: 6Log dir:/tmp/ami_val_343012HTML summary:/tmp/ami_val_343012/sum.htmlPlease wait resource cleanup done......```### The installed filesAll test files are located in &quot;ami_val/tests&quot; directory.```bash# pip3 show -f ami-val|grep -v _pycache|grep -v distName: ami-valVersion: 0.0.1Summary: AMI validation toolHome-page: https://github.com/liangxiao1/ami-valAuthor: Xiao LiangAuthor-email: xiliang@redhat.comLicense: GPLv3+Location: /home/p3_os_env/lib/python3.6/site-packagesRequires: PyYAML, filelock, awscli, boto3, tipset, argparseRequired-by: Files:  ../../../bin/ami-val  ami_val/__init__.py  ami_val/ami_val.py  ami_val/ami_val_run.py  ami_val/cfg/ami-val.yaml  ami_val/cfg/os-tests.yaml  ami_val/data/baseline_log.json  ami_val/data/results.html  ami_val/libs/__init__.py  ami_val/libs/aws_lib.py  ami_val/libs/resource_class.py  ami_val/libs/rmt_ssh.py  ami_val/libs/utils_lib.py  ami_val/scripts/rhel-ha-aws-check.sh  ami_val/tests/__init__.py  ami_val/tests/test_stage0.py  ami_val/tests/test_stage1.py  ami_val/tests/test_stage2.py```### ContributionYou are welcomed to create pull request or raise issue. New case from real customer senario or rhbz is prefered.</longdescription>
</pkgmetadata>