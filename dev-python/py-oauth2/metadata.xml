<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=========py-oauth2=========A Python wrapper for the OAuth 2.0 specificationInstallation------------pip::        pip install py-oauth2easy_install::    easy_install py-oauth2Usage Examples--------------Demo for Google---------------Get user info::    from pyoauth2 import Client    CLIENT_ID = ''    CLIENT_SECRET = ''    REDIRECT_URL = ''    SCOPE = 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email'    client = Client(CLIENT_ID, CLIENT_SECRET,                    site='https://www.googleapis.com/oauth2/v1',                    authorize_url='https://accounts.google.com/o/oauth2/auth',                    token_url='https://accounts.google.com/o/oauth2/token')    print '-' * 80    authorize_url = client.auth_code.authorize_url(redirect_uri=REDIRECT_URL, scope=SCOPE)    print 'Go to the following link in your browser:'    print authorize_url    code = raw_input('Enter the verification code and hit ENTER when you\'re done:')    code = code.strip()    access_token = client.auth_code.get_token(code, redirect_uri=REDIRECT_URL)    print 'token', access_token.headers    print '-' * 80    print 'get user info'     ret = access_token.get('/userinfo')    print ret.parsedDemo for Douban---------------Get access_token::    from pyoauth2 import Client    KEY = ''    SECRET = ''    CALLBACK = ''    client = Client(KEY, SECRET,                     site='https://api.douban.com',                     authorize_url='https://www.douban.com/service/auth2/auth',                    token_url='https://www.douban.com/service/auth2/token')    authorize_url = client.auth_code.authorize_url(redirect_uri=CALLBACK, scope='shuo_basic_w,douban_basic_common')    access_token = client.auth_code.get_token(code, redirect_uri=CALLBACK)Get data::    ret = access_token.get('/v2/user/~me')    print ret.parsedUpload image::    ret = access_token.post('/shuo/v2/statuses/', text='content from py-oauth2', files={ 'image': open('/path/pic.jpg')})    print ret.parsedMore:`Examples &lt;https://github.com/liluo/py-oauth2/wiki&gt;`_`Demo for Google &lt;https://github.com/liluo/py-oauth2/wiki/Google&gt;`_`Demo for Douban(auth with code) &lt;https://github.com/liluo/py-oauth2/wiki/Douban&gt;`_`Demo for Douban(auth with token) &lt;https://github.com/liluo/py-oauth2/wiki/Douban2&gt;`_`Demo for Douban(auth with password) &lt;https://github.com/liluo/py-oauth2/wiki/Douban3&gt;`_`Demo for GitHub &lt;https://github.com/liluo/py-oauth2/wiki/GitHub&gt;`_`Demo for Weibo  &lt;https://github.com/liluo/py-oauth2/wiki/Weibo&gt;`_`Demo for QQ  &lt;https://github.com/liluo/py-oauth2/wiki/QQ-OAuth-2.0&gt;`_`Demo for Taobao  &lt;https://github.com/liluo/py-oauth2/wiki/Taobao-OAuth-2.0&gt;`_`Demo for Box.com  &lt;https://github.com/liluo/py-oauth2/wiki/Box.com&gt;`_`Demo for Instagram  &lt;https://github.com/liluo/py-oauth2/wiki/Instagram&gt;`_Submitting a Pull Request-------------------------* Fork the repository.* Create a topic branch.* Implement your feature or bug fix.* Add, commit, and push your changes.* Submit a pull request.</longdescription>
</pkgmetadata>