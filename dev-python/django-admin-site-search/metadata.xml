<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-admin-site-search[![Test](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/test.yaml/badge.svg)](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/test.yaml)[![Lint](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/lint.yaml/badge.svg)](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/lint.yaml)[![PyPI](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/pypi.yaml/badge.svg)](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/pypi.yaml)[![Coverage Python](https://img.shields.io/badge/coverage%20(.py)-100%25-brightgreen.svg)](https://github.com/ahmedaljawahiry/django-admin-site-search/actions/workflows/test.yaml)[![Coverage Javascript](https://img.shields.io/badge/coverage%20(.js)-WIP-orange.svg)](https://github.com/ahmedaljawahiry/django-admin-site-search/issues/5)[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Pre-Commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logoColor=white)](https://github.com/ahmedaljawahiry/django-admin-site-search/blob/main/.pre-commit-config.yaml)[![PyPI version](https://img.shields.io/pypi/v/django-admin-site-search.svg)](https://pypi.org/project/django-admin-site-search/)[![Downloads](https://static.pepy.tech/badge/django-admin-site-search)](https://pepy.tech/project/django-admin-site-search)[![PyPI license](https://img.shields.io/pypi/l/django-admin-site-search.svg)](https://github.com/ahmedaljawahiry/django-admin-site-search/blob/main/LICENSE)A global/site search modal for the Django admin.&lt;img src=&quot;https://raw.githubusercontent.com/ahmedaljawahiry/django-admin-site-search/main/images/demo.gif&quot; width=&quot;100%&quot; alt=&quot;Preview/demo GIF&quot; /&gt;## Features- ðŸŽ© Works out-of-the-box, with minimal config.- ðŸ”Ž Search performed on:  - App labels.  - Model labels and field attributes.  - `CharField` values (with `__icontains`).    - Subclasses also included: `SlugField`, `URLField`, etc.- ðŸ”’ Built-in auth: users can only search apps and models that they have permission to view.- âš¡ Results appear on-type, with throttling/debouncing to avoid excessive requests.- ðŸŽ¹ Keyboard navigation (cmd+k, up/down, enter).- âœ¨ Responsive, and supports dark/light mode.  - Django's built-in CSS vars are used to match your admin theme.## Requirements- Python 3.7 - 3.11.- Django 3.2 - 4.2.## Setup### 1. Install1. Install with your package manager, e.g. `pip install django-admin-site-search`.2. Add `admin_site_search` to your `INSTALLED_APPS` setting.### 2. Add View1. If you haven't already, [override/extend the default AdminSite](https://docs.djangoproject.com/en/4.1/ref/contrib/admin/#overriding-the-default-admin-site).2. Add the `AdminSiteSearchView` to your AdminSite:```pythonfrom django.contrib import adminfrom admin_site_search.views import AdminSiteSearchViewclass MyAdminSite(AdminSiteSearchView, admin.AdminSite):    ...```### 3. Add Templates1. If you haven't already, create `admin/base_site.html` in your `templates/` directory.   - Note: if your `templates/` directory is inside of an app, then that app must appear in `INSTALLED_APPS` _before_ your custom admin app.2. Include the `admin_site_search` templates:```html{% extends &quot;admin/base_site.html&quot; %}{% block extrahead %}    {% include 'admin_site_search/head.html' %}    {{ block.super }}{% endblock %}{% block footer %}    {{ block.super }}    {% include 'admin_site_search/modal.html' %}{% endblock %}{% block usertools %}    {% include 'admin_site_search/button.html' %}    {{ block.super }}{% endblock %}```#### Notes- Along with styles, `admin_site_search/head.html` loads [Alpine JS](https://alpinejs.dev).   - This is bundled into `/static/`, to avoid external dependencies.- The placement of `modal.html` and `button.html` are not strict, though the former would ideally be in a top-levelposition.   - Django 4.x exposes `{% block header %}` - this is preferable to `footer`.## CustomisationMethods in `AdminSiteSearchView` can be extended to add custom logic.```python def match_app(self, query: str, name: str) -&gt; bool:    &quot;&quot;&quot;DEFAULT: case-insensitive match the app name&quot;&quot;&quot;    ...def match_model(    self, query: str, name: str, object_name: str, fields: List[Field]) -&gt; bool:    &quot;&quot;&quot;DEFAULT: case-insensitive match the model and field attributes&quot;&quot;&quot;    ...def match_objects(    self, query: str, model_class: Model, model_fields: List[Field]) -&gt; QuerySet:    &quot;&quot;&quot;DEFAULT: Returns the QuerySet after performing an OR filter across all Char fields in the model.&quot;&quot;&quot;    ...def filter_field(self, query: str, field: Field) -&gt; Optional[Q]:    &quot;&quot;&quot;DEFAULT: Returns a Q 'icontains' filter for Char fields, otherwise None&quot;&quot;&quot;    ...def get_model_class(self, app_label: str, model_dict: dict) -&gt; Optional[Model]:    &quot;&quot;&quot;DEFAULT: Retrieve the model class from the dict created by admin.AdminSite&quot;&quot;&quot;    ...```### Example**Add `TextField` results to search.**```pythonfrom django.contrib import adminfrom django.db.models import Q, Field, TextFieldfrom admin_site_search.views import AdminSiteSearchViewclass MyAdminSite(AdminSiteSearchView, admin.AdminSite):    ...        def filter_field(self, query: str, field: Field) -&gt; Optional[Q]:        &quot;&quot;&quot;Extends super() to add TextField support to site search&quot;&quot;&quot;        if isinstance(field, TextField):            return Q(**{f&quot;{field.name}__icontains&quot;: query})        return super().filter_field(query, field)```Note that this isn't done by default for performance reasons: `__icontains` on a large number of text entries is inefficient.## Screenshots&lt;img src=&quot;https://raw.githubusercontent.com/ahmedaljawahiry/django-admin-site-search/main/images/desktop-light-open.png&quot; width=&quot;100%&quot; alt=&quot;Desktop, light theme, modal open&quot; /&gt;&lt;p&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/ahmedaljawahiry/django-admin-site-search/main/images/mobile-light-closed.png&quot; width=&quot;45%&quot; alt=&quot;Mobile, light theme, modal closed&quot; /&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/ahmedaljawahiry/django-admin-site-search/main/images/mobile-dark-open.png&quot; width=&quot;45%&quot; alt=&quot;Mobile, dark theme, modal open&quot; /&gt; &lt;/p&gt;</longdescription>
</pkgmetadata>