<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![](docs/_static/RDFlib.png)    RDFLib======[![Build Status](https://github.com/RDFLib/rdflib/actions/workflows/validate.yaml/badge.svg?branch=main)](https://github.com/RDFLib/rdflib/actions?query=branch%3Amain)[![Documentation Status](https://readthedocs.org/projects/rdflib/badge/?version=latest)](https://rdflib.readthedocs.io/en/latest/?badge=latest)[![Coveralls branch](https://img.shields.io/coveralls/RDFLib/rdflib/main.svg)](https://coveralls.io/r/RDFLib/rdflib?branch=main)[![GitHub stars](https://img.shields.io/github/stars/RDFLib/rdflib.svg)](https://github.com/RDFLib/rdflib/stargazers)[![Downloads](https://pepy.tech/badge/rdflib/week)](https://pepy.tech/project/rdflib)[![PyPI](https://img.shields.io/pypi/v/rdflib.svg)](https://pypi.python.org/pypi/rdflib)[![PyPI](https://img.shields.io/pypi/pyversions/rdflib.svg)](https://pypi.python.org/pypi/rdflib)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6845245.svg)](https://doi.org/10.5281/zenodo.6845245)[![Contribute with Gitpod](https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod)](https://gitpod.io/#https://github.com/RDFLib/rdflib)[![Gitter](https://badges.gitter.im/RDFLib/rdflib.svg)](https://gitter.im/RDFLib/rdflib?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)[![Matrix](https://img.shields.io/matrix/rdflib:matrix.org?label=matrix.org%20chat)](https://matrix.to/#/#RDFLib_rdflib:gitter.im)RDFLib is a pure Python package for working with [RDF](http://www.w3.org/RDF/). RDFLib contains most things you need to work with RDF, including:* parsers and serializers for RDF/XML, N3, NTriples, N-Quads, Turtle, TriX, Trig and JSON-LD* a Graph interface which can be backed by any one of a number of Store implementations* store implementations for in-memory, persistent on disk (Berkeley DB) and remote SPARQL endpoints* a SPARQL 1.1 implementation - supporting SPARQL 1.1 Queries and Update statements* SPARQL function extension mechanisms## RDFlib Family of packagesThe RDFlib community maintains many RDF-related Python code repositories with different purposes. For example:* [rdflib](https://github.com/RDFLib/rdflib) - the RDFLib core* [sparqlwrapper](https://github.com/RDFLib/sparqlwrapper) - a simple Python wrapper around a SPARQL service to remotely execute your queries* [pyLODE](https://github.com/RDFLib/pyLODE) - An OWL ontology documentation tool using Python and templating, based on LODE.* [pyrdfa3](https://github.com/RDFLib/pyrdfa3) - RDFa 1.1 distiller/parser library: can extract RDFa 1.1/1.0 from (X)HTML, SVG, or XML in general.* [pymicrodata](https://github.com/RDFLib/pymicrodata) - A module to extract RDF from an HTML5 page annotated with microdata. * [pySHACL](https://github.com/RDFLib/pySHACL) - A pure Python module which allows for the validation of RDF graphs against SHACL graphs.* [OWL-RL](https://github.com/RDFLib/OWL-RL) - A simple implementation of the OWL2 RL Profile which expands the graph with all possible triples that OWL RL defines.Please see the list for all packages/repositories here:* &lt;https://github.com/RDFLib&gt;Help with maintenance of all of the RDFLib family of packages is always welcome and appreciated.## Versions &amp; Releases* `7.1.0a0` current `main` branch.* `7.x.y` current release, supports Python 3.8.1+ only.    * see [Releases](https://github.com/RDFLib/rdflib/releases)* `6.x.y` supports Python 3.7+ only. Many improvements over 5.0.0    * see [Releases](https://github.com/RDFLib/rdflib/releases)* `5.x.y` supports Python 2.7 and 3.4+ and is [mostly backwards compatible with 4.2.2](https://rdflib.readthedocs.io/en/stable/upgrade4to5.html).See &lt;https://rdflib.dev&gt; for the release overview.## DocumentationSee &lt;https://rdflib.readthedocs.io&gt; for our documentation built from the code. Note that there are `latest`, `stable` `5.0.0` and `4.2.2` documentation versions, matching releases.## InstallationThe stable release of RDFLib may be installed with Python's package management tool *pip*:    $ pip install rdflibAlternatively manually download the package from the Python PackageIndex (PyPI) at https://pypi.python.org/pypi/rdflibThe current version of RDFLib is 7.0.0, see the ``CHANGELOG.md`` file for what's new in this release.### Installation of the current main branch (for developers)With *pip* you can also install rdflib from the git repository with one of the following options:    $ pip install git+https://github.com/rdflib/rdflib@mainor    $ pip install -e git+https://github.com/rdflib/rdflib@main#egg=rdflibor from your locally cloned repository you can install it with one of the following options:    $ poetry install  # installs into a poetry-managed venvor    $ pip install -e .## Getting StartedRDFLib aims to be a pythonic RDF API. RDFLib's main data object is a `Graph` which is a Python collectionof RDF *Subject, Predicate, Object* Triples:To create graph and load it with RDF data from DBPedia then print the results:```pythonfrom rdflib import Graphg = Graph()g.parse('http://dbpedia.org/resource/Semantic_Web')for s, p, o in g:    print(s, p, o)```The components of the triples are URIs (resources) or Literals(values).URIs are grouped together by *namespace*, common namespaces are included in RDFLib:```pythonfrom rdflib.namespace import DC, DCTERMS, DOAP, FOAF, SKOS, OWL, RDF, RDFS, VOID, XMLNS, XSD```You can use them like this:```pythonfrom rdflib import Graph, URIRef, Literalfrom rdflib.namespace import RDFS, XSDg = Graph()semweb = URIRef('http://dbpedia.org/resource/Semantic_Web')type = g.value(semweb, RDFS.label)```Where `RDFS` is the RDFS namespace, `XSD` the XML Schema Datatypes namespace and `g.value` returns an object of the triple-pattern given (or an arbitrary one if multiple exist).Or like this, adding a triple to a graph `g`:```pythong.add((    URIRef(&quot;http://example.com/person/nick&quot;),    FOAF.givenName,    Literal(&quot;Nick&quot;, datatype=XSD.string)))```The triple (in n-triples notation) `&lt;http://example.com/person/nick&gt; &lt;http://xmlns.com/foaf/0.1/givenName&gt; &quot;Nick&quot;^^&lt;http://www.w3.org/2001/XMLSchema#string&gt; .`is created where the property `FOAF.givenName` is the URI `&lt;http://xmlns.com/foaf/0.1/givenName&gt;` and `XSD.string` is theURI `&lt;http://www.w3.org/2001/XMLSchema#string&gt;`.You can bind namespaces to prefixes to shorten the URIs for RDF/XML, Turtle, N3, TriG, TriX &amp; JSON-LD serializations: ```pythong.bind(&quot;foaf&quot;, FOAF)g.bind(&quot;xsd&quot;, XSD)```This will allow the n-triples triple above to be serialised like this: ```pythonprint(g.serialize(format=&quot;turtle&quot;))```With these results:```turtlePREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;&lt;http://example.com/person/nick&gt; foaf:givenName &quot;Nick&quot;^^xsd:string .```New Namespaces can also be defined:```pythondbpedia = Namespace('http://dbpedia.org/ontology/')abstracts = list(x for x in g.objects(semweb, dbpedia['abstract']) if x.language=='en')```See also [./examples](./examples)## FeaturesThe library contains parsers and serializers for RDF/XML, N3,NTriples, N-Quads, Turtle, TriX, JSON-LD, RDFa and Microdata.The library presents a Graph interface which can be backed byany one of a number of Store implementations.This core RDFLib package includes store implementations forin-memory storage and persistent storage on top of the Berkeley DB.A SPARQL 1.1 implementation is included - supporting SPARQL 1.1 Queries and Update statements.RDFLib is open source and is maintained on [GitHub](https://github.com/RDFLib/rdflib/). RDFLib releases, current and previousare listed on [PyPI](https://pypi.python.org/pypi/rdflib/)Multiple other projects are contained within the RDFlib &quot;family&quot;, see &lt;https://github.com/RDFLib/&gt;.## Running tests### Running the tests on the hostRun the test suite with `pytest`.```shellpoetry installpoetry run pytest```### Running test coverage on the host with coverage reportRun the test suite and generate a HTML coverage report with `pytest` and `pytest-cov`.```shellpoetry run pytest --cov```### Viewing test coverageOnce tests have produced HTML output of the coverage report, view it by running:```shellpoetry run pytest --cov --cov-report term --cov-report htmlpython -m http.server --directory=htmlcov```## ContributingRDFLib survives and grows via user contributions!Please read our [contributing guide](https://rdflib.readthedocs.io/en/latest/CONTRIBUTING.html) and [developers guide](https://rdflib.readthedocs.io/en/latest/developers.html) to get started.Please consider lodging Pull Requests here:* &lt;https://github.com/RDFLib/rdflib/pulls&gt;To get a development environment consider using Gitpod or Google Cloud Shell.[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/RDFLib/rdflib)[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://shell.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2FRDFLib%2Frdflib&amp;cloudshell_git_branch=main&amp;cloudshell_open_in_editor=README.md)You can also raise issues here:* &lt;https://github.com/RDFLib/rdflib/issues&gt;## Support &amp; ContactsFor general &quot;how do I...&quot; queries, please use https://stackoverflow.com and tag your question with `rdflib`.Existing questions:* &lt;https://stackoverflow.com/questions/tagged/rdflib&gt;If you want to contact the rdflib maintainers, please do so via:* the rdflib-dev mailing list: &lt;https://groups.google.com/group/rdflib-dev&gt;* the chat, which is available at [gitter](https://gitter.im/RDFLib/rdflib) or via matrix [#RDFLib_rdflib:gitter.im](https://matrix.to/#/#RDFLib_rdflib:gitter.im)</longdescription>
</pkgmetadata>