<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|PyPI| |PyPIPythonVersions| |Travis| |Coveralls|Python-valve============Python-valve is a Python library which intends to provide an all-in-oneinterface to various Valve products and services, including:-  Source servers   -  A2S server queries   -  RCON-  Source master server-  Steam web API-  Local Steam Clients-  Valve Data Format/KeyValues (.vdf)To get started, install Python-valve with pip:``pip install python-valve``.RCON Example------------In this example we connect to a Source servers remote console and issuea simple ``echo`` command to it... code:: python    from valve.source.rcon import RCON    SERVER_ADDRESS = (&quot;...&quot;, 27015)    PASSWORD = &quot;top_secret&quot;    with RCON(SERVER_ADDRESS, PASSWORD) as rcon:        print(rcon(&quot;echo Hello, world!&quot;))Server Query Example--------------------In this example we demonstrate the Source master server and A2S queryimplementations by listing all Team Fortress 2 servers in Europe andAsia running the map ``ctf_2fort``, along with the players on each serversorted by their score... code:: python    import valve.source    import valve.source.a2s    import valve.source.master_server    with valve.source.master_server.MasterServerQuerier() as msq:        try:            for address in msq.find(region=[u&quot;eu&quot;, u&quot;as&quot;],                                    gamedir=u&quot;tf&quot;,                                    map=u&quot;ctf_2fort&quot;):                with valve.source.a2s.ServerQuerier(address) as server:                    info = server.info()                    players = server.players()                print(&quot;{player_count}/{max_players} {server_name}&quot;.format(**info))                for player in sorted(players[&quot;players&quot;],                                     key=lambda p: p[&quot;score&quot;], reverse=True):                    print(&quot;{score} {name}&quot;.format(**player))        except valve.source.NoResponseError:            print &quot;Master server request timed out!&quot;Versioning----------Python-valve uses `Semantic Versioning &lt;http://semver.org/&gt;`__. At thistime, Python-valve is yet to reach its 1.0 release. Hence, every minorversion should be considered to potentially contain breaking changes.Hence, when specifying Python-valve as a requirement, either in``setup.py`` or ``requirements.txt``, it's advised to to pin thespecific minor version. E.g. ``python-valve==0.2.0``.Testing-------Python-valve uses `Pytest &lt;https://docs.pytest.org/&gt;`__ for running itstest suite. Unit test coverage is always improving. There are alsofunctional tests included which run against real Source servers.If working on Python-valve use the following to install the testdependencies and run the tests:.. code:: shell    pip install -e .[test]    py.test tests/ --cov valve/Documentation-------------Documentation is written using `Sphinx &lt;http://www.sphinx-doc.org/&gt;`__and is hosted on `Read the Docs &lt;http://python-valve.readthedocs.org/&gt;`__.If working on Python-valve use the following to install the documentationdependencies, build the docs and then open them in a browser... code:: shell    pip install -e .[docs]    (cd docs/ &amp;&amp; make html)    xdg-open docs/_build/html/index.htmlPython 2--------Python-valve supports Python 2.7! However, it's important to bare inmind that Python 2.7 will not be maintained past 2020. Python-valve*may* drop support for Python 2.7 in a future major release before 2020in order to make use of new, non-backwards compatible Python 3 features.It's strongly encouraged that new Python-valve projects use Python 3.Trademarks----------Valve, the Valve logo, Half-Life, the Half-Life logo, the Lambda logo,Steam, the Steam logo, Team Fortress, the Team Fortress logo, OpposingForce, Day of Defeat, the Day of Defeat logo, Counter-Strike, theCounter-Strike logo, Source, the Source logo, Counter-Strike: ConditionZero, Portal, the Portal logo, Dota, the Dota 2 logo, and Defense of theAncients are trademarks and/or registered trademarks of ValveCorporation.Any reference to these are purely for the purpose of identification.Valve Corporation is not affiliated with Python-valve or anyPython-valve contributors in any way... |PyPI| image:: https://img.shields.io/pypi/v/python-valve.svg?style=flat-square   :target: https://pypi.python.org/pypi/python-valve.. |PyPIPythonVersions| image:: https://img.shields.io/pypi/pyversions/python-valve.svg?style=flat-square  :target: https://pypi.python.org/pypi/python-valve.. |Travis| image:: https://img.shields.io/travis/serverstf/python-valve.svg?style=flat-square   :target: https://travis-ci.org/serverstf/python-valve.. |Coveralls| image:: https://img.shields.io/coveralls/serverstf/python-valve.svg?style=flat-square   :target: https://coveralls.io/github/serverstf/python-valve</longdescription>
</pkgmetadata>