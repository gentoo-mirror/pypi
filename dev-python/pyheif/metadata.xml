<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyheifPython 3.6+ interface to [libheif](https://github.com/strukturag/libheif) library using CFFI*Note*: currently only reading is supported.## Installation### Simple installation - Linux (installs manylinux2014 wheel, doesn't work with Alpine)```pip install --upgrade pippip install pyheif```### Installing from source - MacOS```brew install libffi libheifpip install git+https://github.com/carsales/pyheif.git```### Installing from source - Linux```apt install libffi libheif-dev libde265-dev```or```yum install libffi libheif-devel libde265-devel```then```pip install git+https://github.com/carsales/pyheif.git```### Installing from source - Windows```Sorry, not going to happen!```## Usage### Read the primary image of a HEIF encoded fileThe `pyheif.read(path_or_bytes)` function can be used to read the primary image of a HEIF encoded file. It can be passed any of the following:* A string path to a file on disk* A `pathlib.Path` path object* A Python `bytes` or `bytearray` object containing HEIF content* A file-like object with a `.read()` method that returns bytesIt returns a `HeifFile` object.```pythonimport pyheif# Using a file path:heif_file = pyheif.read(&quot;IMG_7424.HEIC&quot;)# Or using bytes directly:heif_file = pyheif.read(open(&quot;IMG_7424.HEIC&quot;, &quot;rb&quot;).read())```### Converting to a Pillow Image objectIf your HEIF file contains an image that you would like to manipulate, you can do so using the [Pillow](https://pillow.readthedocs.io/) Python library. You can convert a `HeifFile` to a Pillow image like so:```pythonfrom PIL import Imageimport pyheifheif_file = pyheif.read(&quot;IMG_7424.HEIC&quot;)image = Image.frombytes(    heif_file.mode,     heif_file.size,     heif_file.data,    &quot;raw&quot;,    heif_file.mode,    heif_file.stride,    )```*Note*: the `mode` property is passed twice - once to the `mode` argument of the `frombytes` method, and again to the `mode` argument of the `raw` decoder.You can now use any Pillow method to manipulate the file. Here's how to convert it to JPEG:```pythonimage.save(&quot;IMG_7424.jpg&quot;, &quot;JPEG&quot;)```### Read the entire container within the HEIF fileThe `pyheif.open_container(path_or_bytes)` function can be used to read the HEIF container from a HEIF encoded file. It takes the same parameter as `pyheif.read()`It returns a `HeifContainer` object.## Objects### The HeifFile objectThe `HeifFile` has the following properties:* `mode` - the image mode, e.g. &quot;RGB&quot; or &quot;RGBA&quot;* `size` - the size of the image as a `(width, height)` tuple of integers* `data` - the raw decoded file data, as bytes* `metadata` - a list of metadata dictionaries* `color_profile` - a color profile dictionary* `stride` - the number of bytes in a row of decoded file data* `bit_depth` - the number of bits in each component of a pixel### The UndecodedHeifFile objectThis is a HEIF image that has not been decoded. Calling the `UndecodedHeifFile.load()` method will load the data and the object will become a `HeifFile`### The HeifContainer objectThe `HeifContainer` has the following properties:* `primary_image` - the `HeifTopLevelImage` object of the primary image in the file.* `top_level_images` - a list of all `HeifTopLevelImage` objects in the file.### The HeifTopLevelImage objectThe `HeifTopLevelImage` has the following properties:* `id` - the id of the image* `image` - the `UndecodedHeifFile` or `HeifFile` object of the image* `is_primary` - is this the primary image in the container* `depth_image` - the `HeifDepthImage` if there is one* `auxiliary_images` - a list of `HeifAuxiliaryImage` objects### The HeifDepthImage objectThe `HeifDepthImage` has the following properties:* `id` - the id of the image* `image` - the `UndecodedHeifFile` or `HeifFile` object of the image### The HeifAuxiliaryImage objectThe `HeifAuxiliaryImage` has the following properties:* `id` - the id of the image* `image` - the `UndecodedHeifFile` or `HeifFile` object of the image* `type` - a string indicating the type of auxiliary image</longdescription>
</pkgmetadata>