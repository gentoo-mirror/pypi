<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-args############python-args, inspired by `attrs &lt;https://www.attrs.org/en/stable/&gt;`__,removes the boilerplate of processing arguments to functions and methods.Decorating your functions with python-args decorators like ``arg.validators``can make your code more composable, more readable, and easier to test. Alongwith this, functions decorated with python-args can be used to by other toolsand frameworks to build more expressive interfaces. The`django-args &lt;https://github.com/jyveapp/django-args&gt;`__ and`django-action-framework &lt;https://github.com/jyveapp/django-action-framework&gt;`__libraries are two examples.The core ``python-args`` decorators are as follows:1. ``@arg.validators(*validation_funcs)``: Runs validation functions that   can take the same named arguments as the decorated function. When   decorating a function with `arg.validators`, you not only de-couple   your function from argument validation logic, but ``python-args``   will allow other interfaces to only run the validators of your function.2. ``@arg.defaults(**arg_default_funcs)``: Sets arguments to default   values. The default functions can similarly take the same named   parameters of the decorated function.3. ``@arg.parametrize(**parametrize_funcs)``: Runs a function multiple times   for a particular input.4. ``@arg.contexts(*context_funcs)``: Enters context managers before   a function. Context managers can take the same named parameters as the   decorated function.`View the docs here &lt;https://python-args.readthedocs.io/&gt;`__for a tutorial and more examples of how ``python-args`` can be used inpractice.Documentation=============`View the python-args docs here &lt;https://python-args.readthedocs.io/&gt;`_.Installation============Install python-args with::    pip3 install python-argsContributing Guide==================For information on setting up python-args for development andcontributing changes, view `CONTRIBUTING.rst &lt;CONTRIBUTING.rst&gt;`_.Primary Authors===============- @wesleykendall (Wes Kendall)</longdescription>
</pkgmetadata>