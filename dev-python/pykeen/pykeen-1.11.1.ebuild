# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A package for training and evaluating multimodal knowledge graph embeddings"

HOMEPAGE="https://github.com/pykeen/pykeen"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="biomedicine docs lightning mlflow neptune ogb opt-einsum plotting pyg templating tensorboard tests transformers wandb wordcloud"
DEPENDENCIES="dev-python/dataclasses-json[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	>=dev-python/scipy-1.7.0[${PYTHON_USEDEP}]
	dev-python/click[${PYTHON_USEDEP}]
	dev-python/click-default-group[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	dev-python/optuna[${PYTHON_USEDEP}]
	>=dev-python/pandas-1.0.0[${PYTHON_USEDEP}]
	dev-python/tabulate[${PYTHON_USEDEP}]
	dev-python/more-click[${PYTHON_USEDEP}]
	dev-python/more-itertools[${PYTHON_USEDEP}]
	dev-python/pystow[${PYTHON_USEDEP}]
	dev-python/docdata[${PYTHON_USEDEP}]
	dev-python/class-resolver[${PYTHON_USEDEP}]
	dev-python/pyyaml[${PYTHON_USEDEP}]
	dev-python/torch-max-mem[${PYTHON_USEDEP}]
	dev-python/torch-ppr[${PYTHON_USEDEP}]
	dev-python/typing-extensions[${PYTHON_USEDEP}]
	templating? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	plotting? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	plotting? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	wordcloud? ( dev-python/wordcloud[${PYTHON_USEDEP}] )
	wordcloud? ( dev-python/ipython[${PYTHON_USEDEP}] )
	opt-einsum? ( dev-python/opt-einsum[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	ogb? ( dev-python/ogb[${PYTHON_USEDEP}] )
	wandb? ( dev-python/wandb[${PYTHON_USEDEP}] )
	neptune? ( dev-python/neptune-client[${PYTHON_USEDEP}] )
	tensorboard? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	transformers? ( dev-python/transformers[${PYTHON_USEDEP}] )
	lightning? ( dev-python/pytorch-lightning[${PYTHON_USEDEP}] )
	biomedicine? ( dev-python/bioregistry[${PYTHON_USEDEP}] )
	biomedicine? ( dev-python/pyobo[${PYTHON_USEDEP}] )
	tests? ( dev-python/unittest-templates[${PYTHON_USEDEP}] )
	tests? ( dev-python/coverage[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest[${PYTHON_USEDEP}] )
	docs? ( >=dev-python/sphinx-8.0[${PYTHON_USEDEP}] )
	docs? ( >=dev-python/sphinx-rtd-theme-3.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-click[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-automodapi[${PYTHON_USEDEP}] )
	docs? ( dev-python/texext[${PYTHON_USEDEP}] )
	docs? ( dev-python/graphviz[${PYTHON_USEDEP}] )
	pyg? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
