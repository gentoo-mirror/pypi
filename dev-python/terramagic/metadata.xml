<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![&quot;Buy Me A Coffee&quot;](https://img.shields.io/badge/Buy_Me_A_Coffee-FFDD00?style=for-the-badge&amp;logo=buy-me-a-coffee&amp;logoColor=black)](https://www.buymeacoffee.com/miltlima)# Terramagic CLITerramagic is a command-line interface tool that makes it easy to create and manage Terraform projects.## MotivationCreating a new Terraform project from scratch can be time-consuming and error-prone. With Terramagic, you can quickly generate a template for your project and customize it to your needs.### RequirementsPython 3.9 or higher### InstallationYou can easily install Terramagic using pip:```shellpip3 install terramagic```### Usage#### Creating a new projectTo create a new Terraform project, use the create command:```shellterramagic create --name &lt;project_name&gt; ```For example, to create a project called &quot;infra&quot; automatically 3 environments are created (&quot;development&quot;, &quot;staging&quot; and &quot;production&quot;) and respective tfvars, run:```shellterramagic create --name infra```This will generate a new directory called &quot;infra&quot; with the following structure:```codeinfra├── backend.tf├── environments│   ├── development│   │   └── development.tfvars│   ├── production│   │   └── production.tfvars│   └── staging│       └── staging.tfvars├── main.tf├── main.tfvars├── modules│   ├── cluster│   │   ├── main.tf│   │   ├── outputs.tf│   │   └── variables.tf│   ├── instance│   │   ├── main.tf│   │   ├── outputs.tf│   │   └── variables.tf│   └── vpc│       ├── main.tf│       ├── outputs.tf│       └── variables.tf├── outputs.tf├── providers│   └── provider.tf└── variables.tf```You can then edit these files to define your infrastructure resources and variables.#### Deleting a projectTo delete an existing project, use the delete command and specify the project name:```shellterramagic delete --name &lt;project_name&gt;```For example, to delete the &quot;myapp&quot; project, run:```shellterramagic delete --name infra```HelpFor detailed information about available commands and options, run:```shellterramagic --help```This will display the following message:```shellUsage: terramagic [OPTIONS] COMMAND [ARGS]...  ClI tool to create Terraform projectOptions:  -v, --version  Show version  --help         Show this message and exit.Commands:  create  Create a new Terraform project with specified name and environment  remove  Delete the project```Enjoy using Terramagic to simplify your Terraform workflow!</longdescription>
</pkgmetadata>