<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>dateutil - powerful extensions to datetime==========================================|pypi| |support| |licence||gitter| |readthedocs||travis| |appveyor| |pipelines| |coverage|.. |pypi| image:: https://img.shields.io/pypi/v/python-dateutil.svg?style=flat-square    :target: https://pypi.org/project/python-dateutil/    :alt: pypi version.. |support| image:: https://img.shields.io/pypi/pyversions/python-dateutil.svg?style=flat-square    :target: https://pypi.org/project/python-dateutil/    :alt: supported Python version.. |travis| image:: https://img.shields.io/travis/dateutil/dateutil/master.svg?style=flat-square&amp;label=Travis%20Build    :target: https://travis-ci.org/dateutil/dateutil    :alt: travis build status.. |appveyor| image:: https://img.shields.io/appveyor/ci/dateutil/dateutil/master.svg?style=flat-square&amp;logo=appveyor    :target: https://ci.appveyor.com/project/dateutil/dateutil    :alt: appveyor build status.. |pipelines| image:: https://dev.azure.com/pythondateutilazure/dateutil/_apis/build/status/dateutil.dateutil?branchName=master    :target: https://dev.azure.com/pythondateutilazure/dateutil/_build/latest?definitionId=1&amp;branchName=master    :alt: azure pipelines build status.. |coverage| image:: https://codecov.io/gh/dateutil/dateutil/branch/master/graphs/badge.svg?branch=master    :target: https://codecov.io/gh/dateutil/dateutil?branch=master    :alt: Code coverage.. |gitter| image:: https://badges.gitter.im/dateutil/dateutil.svg   :alt: Join the chat at https://gitter.im/dateutil/dateutil   :target: https://gitter.im/dateutil/dateutil.. |licence| image:: https://img.shields.io/pypi/l/python-dateutil.svg?style=flat-square    :target: https://pypi.org/project/python-dateutil/    :alt: licence.. |readthedocs| image:: https://img.shields.io/readthedocs/dateutil/latest.svg?style=flat-square&amp;label=Read%20the%20Docs   :alt: Read the documentation at https://dateutil.readthedocs.io/en/latest/   :target: https://dateutil.readthedocs.io/en/latest/The `dateutil` module provides powerful extensions tothe standard `datetime` module, available in Python.Installation============`dateutil` can be installed from PyPI using `pip` (note that the package name isdifferent from the importable name)::    pip install python-dateutilDownload========dateutil is available on PyPIhttps://pypi.org/project/python-dateutil/The documentation is hosted at:https://dateutil.readthedocs.io/en/stable/Code====The code and issue tracker are hosted on GitHub:https://github.com/dateutil/dateutil/Features========* Computing of relative deltas (next month, next year,  next Monday, last week of month, etc);* Computing of relative deltas between two given  date and/or datetime objects;* Computing of dates based on very flexible recurrence rules,  using a superset of the `iCalendar &lt;https://www.ietf.org/rfc/rfc2445.txt&gt;`_  specification. Parsing of RFC strings is supported as well.* Generic parsing of dates in almost any string format;* Timezone (tzinfo) implementations for tzfile(5) format  files (/etc/localtime, /usr/share/zoneinfo, etc), TZ  environment string (in all known formats), iCalendar  format files, given ranges (with help from relative deltas),  local machine timezone, fixed offset timezone, UTC timezone,  and Windows registry-based time zones.* Internal up-to-date world timezone information based on  Olson's database.* Computing of Easter Sunday dates for any given year,  using Western, Orthodox or Julian algorithms;* A comprehensive test suite.Quick example=============Here's a snapshot, just to give an idea about the power of thepackage. For more examples, look at the documentation.Suppose you want to know how much time is left, inyears/months/days/etc, before the next easter happening on ayear with a Friday 13th in August, and you want to get today'sdate out of the &quot;date&quot; unix system command. Here is the code:.. code-block:: python3    &gt;&gt;&gt; from dateutil.relativedelta import *    &gt;&gt;&gt; from dateutil.easter import *    &gt;&gt;&gt; from dateutil.rrule import *    &gt;&gt;&gt; from dateutil.parser import *    &gt;&gt;&gt; from datetime import *    &gt;&gt;&gt; now = parse(&quot;Sat Oct 11 17:13:46 UTC 2003&quot;)    &gt;&gt;&gt; today = now.date()    &gt;&gt;&gt; year = rrule(YEARLY,dtstart=now,bymonth=8,bymonthday=13,byweekday=FR)[0].year    &gt;&gt;&gt; rdelta = relativedelta(easter(year), today)    &gt;&gt;&gt; print(&quot;Today is: %s&quot; % today)    Today is: 2003-10-11    &gt;&gt;&gt; print(&quot;Year with next Aug 13th on a Friday is: %s&quot; % year)    Year with next Aug 13th on a Friday is: 2004    &gt;&gt;&gt; print(&quot;How far is the Easter of that year: %s&quot; % rdelta)    How far is the Easter of that year: relativedelta(months=+6)    &gt;&gt;&gt; print(&quot;And the Easter of that year is: %s&quot; % (today+rdelta))    And the Easter of that year is: 2004-04-11Being exactly 6 months ahead was **really** a coincidence :)Contributing============We welcome many types of contributions - bug reports, pull requests (code, infrastructure or documentation fixes). For more information about how to contribute to the project, see the ``CONTRIBUTING.md`` file in the repository.Author======The dateutil module was written by Gustavo Niemeyer &lt;gustavo@niemeyer.net&gt;in 2003.It is maintained by:* Gustavo Niemeyer &lt;gustavo@niemeyer.net&gt; 2003-2011* Tomi Pievil√§inen &lt;tomi.pievilainen@iki.fi&gt; 2012-2014* Yaron de Leeuw &lt;me@jarondl.net&gt; 2014-2016* Paul Ganssle &lt;paul@ganssle.io&gt; 2015-Starting with version 2.4.1 and running until 2.8.2, all source and binarydistributions will be signed by a PGP key that has, at the very least, beensigned by the key which made the previous release. A table of release signingkeys can be found below:===========  ============================Releases     Signing key fingerprint===========  ============================2.4.1-2.8.2  `6B49 ACBA DCF6 BD1C A206 67AB CD54 FCE3 D964 BEFB`_ ===========  ============================New releases *may* have signed tags, but binary and source distributionsuploaded to PyPI will no longer have GPG signatures attached.Contact=======Our mailing list is available at `dateutil@python.org &lt;https://mail.python.org/mailman/listinfo/dateutil&gt;`_. As it is hosted by the PSF, it is subject to the `PSF code ofconduct &lt;https://www.python.org/psf/conduct/&gt;`_.License=======All contributions after December 1, 2017 released under dual license - either `Apache 2.0 License &lt;https://www.apache.org/licenses/LICENSE-2.0&gt;`_ or the `BSD 3-Clause License &lt;https://opensource.org/licenses/BSD-3-Clause&gt;`_. Contributions before December 1, 2017 - except those those explicitly relicensed - are released only under the BSD 3-Clause License... _6B49 ACBA DCF6 BD1C A206 67AB CD54 FCE3 D964 BEFB:   https://pgp.mit.edu/pks/lookup?op=vindex&amp;search=0xCD54FCE3D964BEFB</longdescription>
</pkgmetadata>