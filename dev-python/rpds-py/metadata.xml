<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========``rpds.py``===========|PyPI| |Pythons| |CI|.. |PyPI| image:: https://img.shields.io/pypi/v/rpds-py.svg  :alt: PyPI version  :target: https://pypi.org/project/rpds-py/.. |Pythons| image:: https://img.shields.io/pypi/pyversions/rpds-py.svg  :alt: Supported Python versions  :target: https://pypi.org/project/rpds-py/.. |CI| image:: https://github.com/Julian/rpds.py/workflows/CI/badge.svg  :alt: Build status  :target: https://github.com/Julian/rpds.py/actions?query=workflow%3ACIPython bindings to the Rust ``rpds`` crate.What's here is quite minimal (in transparency, it was written initially to support replacing ``pyrsistent`` in the `referencing library &lt;https://github.com/python-jsonschema/referencing&gt;`_).If you see something missing (which is very likely), a PR is definitely welcome to add it.Methods in general are named similarly to their ``rpds`` counterparts (rather than ``pyrsistent``\ 's conventions, though probably a full drop-in ``pyrsistent``\ -compatible wrapper module is a good addition at some point)... code:: python    &gt;&gt;&gt; from rpds import HashTrieMap, HashTrieSet, List    &gt;&gt;&gt; m = HashTrieMap({&quot;foo&quot;: &quot;bar&quot;, &quot;baz&quot;: &quot;quux&quot;})    &gt;&gt;&gt; m.insert(&quot;spam&quot;, 37) == HashTrieMap({&quot;foo&quot;: &quot;bar&quot;, &quot;baz&quot;: &quot;quux&quot;, &quot;spam&quot;: 37})    True    &gt;&gt;&gt; m.remove(&quot;foo&quot;) == HashTrieMap({&quot;baz&quot;: &quot;quux&quot;})    True    &gt;&gt;&gt; s = HashTrieSet({&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;, &quot;quux&quot;})    &gt;&gt;&gt; s.insert(&quot;spam&quot;) == HashTrieSet({&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;, &quot;quux&quot;, &quot;spam&quot;})    True    &gt;&gt;&gt; s.remove(&quot;foo&quot;) == HashTrieSet({&quot;bar&quot;, &quot;baz&quot;, &quot;quux&quot;})    True    &gt;&gt;&gt; L = List([1, 3, 5])    &gt;&gt;&gt; L.push_front(-1) == List([-1, 1, 3, 5])    True    &gt;&gt;&gt; L.rest == List([3, 5])    True</longdescription>
</pkgmetadata>