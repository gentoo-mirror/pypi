<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># gp-libs &amp;middot; [![Python Package](https://img.shields.io/pypi/v/gp-libs.svg)](https://pypi.org/project/gp-libs/) [![License](https://img.shields.io/github/license/git-pull/gp-libs.svg)](https://github.com/git-pull/gp-libs/blob/master/LICENSE) [![Code Coverage](https://codecov.io/gh/git-pull/gp-libs/branch/master/graph/badge.svg)](https://codecov.io/gh/git-pull/gp-libs)Incubating / [dogfooding] some sphinx extensions and pytest plugins ongit-pull projects, e.g. [cihai], [vcs-python], or [tmux-python].[dogfooding]: https://en.wikipedia.org/wiki/Eating_your_own_dog_food[cihai]: https://github.com/cihai[vcs-python]: https://github.com/vcs-python[tmux-python]: https://github.com/tmux-python## `doctest` for reStructured and markdownTwo components:1. `doctest_docutils` module: Same specification as `doctest`, but can parse reStructuredText   and markdown2. `pytest_doctest_docutils`: Pytest plugin, collects test items for pytest for reStructuredText and markdown files   This means you can do:   ```console   $ pytest docs   ```### doctest moduleThis extends standard library `doctest` to support anything docutils can parse.It can parse reStructuredText (.rst) and markdown (.md).See more: &lt;https://gp-libs.git-pull.com/doctest/&gt;#### Supported stylesIt supports two barebones directives:- docutils' `doctest_block`  ```rst  &gt;&gt;&gt; 2 + 2  4  ```- `.. doctest::` directive  reStructuredText:  ```rst  .. doctest::     &gt;&gt;&gt; 2 + 2     4  ```  Markdown (requires [myst-parser]):  ````markdown  ```{doctest}  &gt;&gt;&gt; 2 + 2  4  ```  ````[myst-parser]: https://myst-parser.readthedocs.io/en/latest/#### UsageThe `doctest_docutils` module preserves standard library's usage conventions:##### reStructuredText```console$ python -m doctest_docutils README.rst -v```That's what `doctest` does by design.##### MarkdownIf you install [myst-parser], doctest will run on .md files.```console$ python -m doctest_docutils README.md -v```### pytest plugin_This plugin disables [pytest's standard `doctest` plugin]._This plugin integrates with the `doctest_docutils` module with pytest to enable seamless testing of docs, `conftest.py` fixtures and all.```console$ pytest docs/```Like the above module, it supports docutils' own `doctest_block` and a basic`.. doctest::` directive.See more: &lt;https://gp-libs.git-pull.com/doctest/pytest.html&gt;[pytest's standard `doctest` plugin]: https://docs.pytest.org/en/stable/how-to/doctest.html#doctest## sphinx plugins### Plain-text issue linker (`linkify-issues`)We need to parse plain text, e.g. #99999, to point to the project tracker athttps://github.com/git-pull/gp-libs/issues/99999. This way the markdown looksgood anywhere you render it, including GitHub and GitLab.#### ConfigurationIn your _conf.py_:1. Add `'linkify_issues'` to `extensions`   ```python   extensions = [       # ...       &quot;linkify_issues&quot;,   ]   ```2. Configure your issue URL, `issue_url_tpl`:   ```python   # linkify_issues   issue_url_tpl = 'https://github.com/git-pull/gp-libs/issues/{issue_id}'   ```   The config variable is formatted via {meth}`str.format` where `issue_id` is   `42` if the text is \#42.See more: &lt;https://gp-libs.git-pull.com/linkify_issues/&gt;## Install```console$ pip install --user gp-libs```### Developmental releasesYou can test the unpublished version of g before its released.- [pip](https://pip.pypa.io/en/stable/):  ```console  $ pip install --user --upgrade --pre gp-libs  ```# More information- Python support: &gt;= 3.7, pypy- Source: &lt;https://github.com/git-pull/gp-libs&gt;- Docs: &lt;https://gp-libs.git-pull.com&gt;- Changelog: &lt;https://gp-libs.git-pull.com/history.html&gt;- Issues: &lt;https://github.com/git-pull/gp-libs/issues&gt;- Test Coverage: &lt;https://codecov.io/gh/git-pull/gp-libs&gt;- pypi: &lt;https://pypi.python.org/pypi/gp-libs&gt;- License: [MIT](https://opensource.org/licenses/MIT).[![Docs](https://github.com/git-pull/gp-libs/workflows/docs/badge.svg)](https://gp-libs.git-pull.com)[![Build Status](https://github.com/git-pull/gp-libs/workflows/tests/badge.svg)](https://github.com/git-pull/gp-libs/actions?query=workflow%3A%22tests%22)</longdescription>
</pkgmetadata>