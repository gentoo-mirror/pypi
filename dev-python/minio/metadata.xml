<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MinIO Python SDK for Amazon S3 Compatible Cloud Storage [![Slack](https://slack.min.io/slack?type=svg)](https://slack.min.io)MinIO Python SDK is Simple Storage Service (aka S3) client to perform bucket and object operations to any Amazon S3 compatible object storage service.For a complete list of APIs and examples, please take a look at the [Python Client API Reference](https://min.io/docs/minio/linux/developers/python/API.html)## Minimum RequirementsPython 3.7 or higher.## Download using pip```shpip3 install minio```## Download source```shgit clone https://github.com/minio/minio-pycd minio-pypython setup.py install```## Quick Start Example - File UploaderThis example program connects to an S3-compatible object storage server, make a bucket on that server, and upload a file to the bucket.You need the following items to connect to an S3-compatible object storage server:| Parameters | Description                                                ||------------|------------------------------------------------------------|| Endpoint   | URL to S3 service.                                         || Access Key | Access key (aka user ID) of an account in the S3 service.  || Secret Key | Secret key (aka password) of an account in the S3 service. |This example uses MinIO server playground [https://play.min.io](https://play.min.io). Feel free to use this service for test and development.### file_uploader.py```pyfrom minio import Miniofrom minio.error import S3Errordef main():    # Create a client with the MinIO server playground, its access key    # and secret key.    client = Minio(        &quot;play.min.io&quot;,        access_key=&quot;Q3AM3UQ867SPQQA43P2F&quot;,        secret_key=&quot;zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG&quot;,    )    # Make 'asiatrip' bucket if not exist.    found = client.bucket_exists(&quot;asiatrip&quot;)    if not found:        client.make_bucket(&quot;asiatrip&quot;)    else:        print(&quot;Bucket 'asiatrip' already exists&quot;)    # Upload '/home/user/Photos/asiaphotos.zip' as object name    # 'asiaphotos-2015.zip' to bucket 'asiatrip'.    client.fput_object(        &quot;asiatrip&quot;, &quot;asiaphotos-2015.zip&quot;, &quot;/home/user/Photos/asiaphotos.zip&quot;,    )    print(        &quot;'/home/user/Photos/asiaphotos.zip' is successfully uploaded as &quot;        &quot;object 'asiaphotos-2015.zip' to bucket 'asiatrip'.&quot;    )if __name__ == &quot;__main__&quot;:    try:        main()    except S3Error as exc:        print(&quot;error occurred.&quot;, exc)```#### Run File Uploader```sh$ python file_uploader.py'/home/user/Photos/asiaphotos.zip' is successfully uploaded as object 'asiaphotos-2015.zip' to bucket 'asiatrip'.$ mc ls play/asiatrip/[2016-06-02 18:10:29 PDT]  82KiB asiaphotos-2015.zip```## More References* [Python Client API Reference](https://min.io/docs/minio/linux/developers/python/API.html)* [Examples](https://github.com/minio/minio-py/tree/master/examples)## Explore Further* [Complete Documentation](https://min.io/docs/minio/kubernetes/upstream/index.html)## ContributePlease refer [Contributors Guide](https://github.com/minio/minio-py/blob/master/CONTRIBUTING.md)[![PYPI](https://img.shields.io/pypi/v/minio.svg)](https://pypi.python.org/pypi/minio)</longdescription>
</pkgmetadata>