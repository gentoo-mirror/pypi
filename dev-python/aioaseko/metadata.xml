<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aioAseko package [![PyPI](https://img.shields.io/pypi/v/aioaseko)](https://pypi.org/project/aioaseko/) ![PyPI - Downloads](https://img.shields.io/pypi/dm/aioaseko) [![PyPI - License](https://img.shields.io/pypi/l/aioaseko?color=blue)](https://github.com/milanmeu/aioaseko/blob/main/COPYING)An async Python wrapper for the Aseko Pool Live API.The library is currently limited to the features available on pool.aseko.com.## AccountThe library provides a `MobileAccount` and `WebAccount` class to make authenticated requests to the mobile and web API, respectively.In this version of aioAseko, `WebAccount` can only be used to obtain `AccountInfo` and retrieve the account units.The mobile API does not provide `AccountInfo`, so `MobileAccount.login()` will return `None`.## Installation```bashpip install aioaseko```## Usage### Import```pythonfrom aioaseko import MobileAccount```### Create a `aiohttp.ClientSession` to make requests```pythonfrom aiohttp import ClientSessionsession = ClientSession()```### Create a `MobileAccount` instance and login```pythonaccount = MobileAccount(session, &quot;aioAseko@example.com&quot;, &quot;passw0rd&quot;)await account.login()```## Example```pythonfrom aiohttp import ClientSessionfrom asyncio import runimport aioasekoasync def main():    async with ClientSession() as session:        account = aioaseko.MobileAccount(session, &quot;aioAseko@example.com&quot;, &quot;passw0rd&quot;)        try:            await account.login()        except aioaseko.InvalidAuthCredentials:            print(&quot;The username or password you entered is wrong.&quot;)            return        units = await account.get_units()        for unit in units:            print(unit.name)            await unit.get_state()            print(f&quot;Water flow: {unit.water_flow}&quot;)            for variable in unit.variables:                print(variable.name, variable.current_value, variable.unit)        await account.logout()run(main())```</longdescription>
</pkgmetadata>