<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![completion](https://img.shields.io/badge/completion-81%25%20%28375%20of%20460%29-blue.svg)](https://github.com/pyimgui/pyimgui)[![Coverage Status](https://coveralls.io/repos/github/swistakm/pyimgui/badge.svg?branch=master)](https://coveralls.io/github/swistakm/pyimgui?branch=master)[![Documentation Status](https://readthedocs.org/projects/pyimgui/badge/?version=latest)](https://pyimgui.readthedocs.io/en/latest/?badge=latest)[![Build status](https://ci.appveyor.com/api/projects/status/mr97t941p6k4c261/branch/master?svg=true)](https://ci.appveyor.com/project/KinoxKlark/pyimgui/branch/master)# pyimguiPython bindings for the amazing[dear imgui](https://github.com/ocornut/imgui) C++ library - a Bloat-freeImmediate Mode Graphical User Interface.Documentation: [pyimgui.readthedocs.io](https://pyimgui.readthedocs.io/en/latest/index.html)# Installation**pyimgui** is available on PyPI so you can easily install it with `pip`:    pip install imgui[full]Above command will install `imgui` package with additional dependencies for allbuilt-in rendering backend integrations (pygame, cocos2d, etc.). If you don'twant to install all additional dependencies you can always use bare`pip install imgui` command or select a specific set of extra requirements:* for pygame backend use `pip install imgui[pygame]`* for GLFW3 backend use `pip install imgui[glfw]`* for SDL2 backend use `pip install imgui[sdl2]`* for Cocos2d backend use `pip install imgui[cocos2d]`* for pyglet backend use `pip install imgui[pyglet]`Package is distributed in form of *built wheels* so it does not requirecompilation on most operating systems. For more details about compatibilitywith diffferent OSes and Python versions see the *Project ditribution*section of this documentation page.# Project statusThe `imgui` package provides support for the majority of core ImGui widgets andfunctionalities. Some low-level API elements and complex widgets (like plots)may be missing. We are working hard to provide 100% feature mapping of the coreImGui library. The *completion badge* shows up-to-date status of that goal.&gt; The current version of *pyimgui* is based on an old version of *DearImgui* and consequently doesn't have its most recent fixes and functionalities. Version 2.0 of *pyimgui* is under development and will support recent features. If you are interested, you can look at the corresponding branch.# Project distributionThis project has a working build pipeline on Appveyor and Travis. It buildssuccesfully for all major operating systems with different architectures:* Windows (32bit &amp; 64bit)* Linux (32bit &amp; 64bit)* OS X (universal build)Right now we are ready to shipping the built wheels for these three systems(even for Linux using `manylinux1` wheels). The build pipeline covers multiplePython versions:* py27* py33 (macOS wheel not available on PyPI)* py34* py35* py36* py37* py38* py39**pyimgui** provides documentation with multiple visual examples.Thanks to custom Sphinx extensions we are able to render GUI examples offscreen directly from docstring snippets. These examples work also as automatedfunctional tests. Documentation is hosted on[pyimgui.readthedocs.io](https://pyimgui.readthedocs.io/en/latest/index.html).If none of these wheels work in your environment you can install the `imgui`package by compiling it directly from sdist distribution using one of followingcommands:    # will install Cython as extra dependency and compile from Cython sources    pip install imgui[Cython] --no-binary imgui    # will compile from pre-generated C++ sources    pip install imgui --no-binary imgui# Development tipsWe have tried hard to make the process of bootstrapping this project as simpleas possible.In order to build and install project locally ,ake sure you have created andactivated virtual environment using `virtualenv` or `python -m venv` (for newerPython releases). Then you can just run:    make buildThis command will bootstrap whole environment (pull git submodules, install dev requirements etc.) and build the project. `make` will automatically install`imgui` in the *development/editable* mode. Then you can run some examplesfound in the `doc/examples` directory in order to verify if project is working.For building documentation and running tests you will need some additionalrequirements from `doc/requirements-test.txt`.You can run tests with:    py.testIf you have any problems with building or installing the project just ask usfor help by creating GitHub issue.</longdescription>
</pkgmetadata>