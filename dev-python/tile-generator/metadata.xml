<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PCF Tile GeneratorPCF Tile Generator is a suite of tools to help you develop, package, test,and deploy services and other add-ons to Pivotal Cloud Foundry. The tile generatoruses templates and patterns that are based on years of experience integratingthird-party services into Cloud Foundry, and eliminates much of the need foryou to have intimate knowledge of all the tools involved.- Documentation: [Pivotal Documentation](http://docs.pivotal.io/tiledev/tile-generator.html)- PCF Tile Developers Guide: [Pivotal Documentation](http://docs.pivotal.io/tiledev/index.html)- Roadmap: [Github Issues](https://github.com/cf-platform-eng/tile-generator/issues)- CI Pipeline: [Runway](https://runway-ci.eng.vmware.com/teams/ppe-isv/pipelines/tile-generator)## Continuous IntegrationThe master branch of this repository is being monitored by[this Runway pipeline](https://runway-ci.eng.vmware.com/teams/ppe-isv/pipelines/tile-generator).The pipeline verifies that:- The tile generator passes all unit tests in `tile_generator/*_unittest.py`- The tile generator successfully builds the sample tile in `sample`- The generated tile passes all acceptance tests in `ci/acceptance-tests`- The generated tile successfully deploys to a current version of PCF- The deployed tile passes all deployment tests in `ci/deployment-tests`To target the pipeline run the following command```fly login -t &lt;desired_target_name&gt; -c https://runway-ci.eng.vmware.com -n ppe-isv```You need to be a member of the ppe-isv team for the above command to work.## Contributing to the Tile GeneratorWe welcome comments, questions, and contributions from community members. Please considerthe following ways to contribute:- File Github issues for questions, bugs and new features and comment and vote on the ones that you are interested in.- If you want to contribute code, please make your code changes on a fork of this repository and submit apull request to the master branch of tile-generator. We strongly suggest that you first file an issue tolet us know of your intent, or comment on the issue you are planning to address.### DevelopmentFor development, it is useful to install the tile-generator package in*editable* mode. That is, you can install the tile-generator packagein a way that points to your local repository, so that your codechanges are immediately available through the `tile` or `pcf`commands. To do this, run this command in your tile-generatorrepository directory:```./install-git-hook.shpip install -e .```To avoid downloading dependencies on every `tile build`:1. `cd sample`2. `mkdir cache`3. `tile build --cache cache`Run indivBefore executing `./scripts/run_local_tests.sh` install virtualenv with `pip install virtualenv`Then to execute all test using the cache from the project root use: `./scripts/run_local_tests.sh withcache`</longdescription>
</pkgmetadata>