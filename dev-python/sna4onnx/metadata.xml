<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sna4onnxSimple node addition tool for onnx. **S**imple **N**ode **A**ddition for **ONNX**.https://github.com/PINTO0309/simple-onnx-processing-tools[![Downloads](https://static.pepy.tech/personalized-badge/sna4onnx?period=total&amp;units=none&amp;left_color=grey&amp;right_color=brightgreen&amp;left_text=Downloads)](https://pepy.tech/project/sna4onnx) ![GitHub](https://img.shields.io/github/license/PINTO0309/sna4onnx?color=2BAF2B) [![PyPI](https://img.shields.io/pypi/v/sna4onnx?color=2BAF2B)](https://pypi.org/project/sna4onnx/) [![CodeQL](https://github.com/PINTO0309/sna4onnx/workflows/CodeQL/badge.svg)](https://github.com/PINTO0309/sna4onnx/actions?query=workflow%3ACodeQL)&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://user-images.githubusercontent.com/33194443/170157317-1d96079c-0b46-4bec-bdec-4cc9feb0d553.png&quot; /&gt;&lt;/p&gt;# Key concept- [x] Combines the OP generated by **[sog4onnx](https://github.com/PINTO0309/sog4onnx)** with the specified output and input OPs.- [x] Use a good combination with the ONNX merge tool **[snc4onnx](https://github.com/PINTO0309/snc4onnx)** while merging OP parts.- [x] Only one OP can be extrapolated at a time.- [x] After OP extrapolation, the entire model is checked, and even if there is a consistency problem, only a warning is displayed and the ONNX file is output as is.- [x] Add unconnected input and output variables to the input/output OP of a graph.## 1. Setup### 1-1. HostPC```bash### option$ echo export PATH=&quot;~/.local/bin:$PATH&quot; &gt;&gt; ~/.bashrc \&amp;&amp; source ~/.bashrc### run$ pip install -U onnx \&amp;&amp; python3 -m pip install -U onnx_graphsurgeon --index-url https://pypi.ngc.nvidia.com \&amp;&amp; pip install -U sna4onnx```### 1-2. Dockerhttps://github.com/PINTO0309/simple-onnx-processing-tools#docker## 2. CLI Usage```$ sna4onnx -husage:  sna4onnx [-h]  -if INPUT_ONNX_FILE_PATH  -aot ADD_OP_TYPE  -aon ADD_OP_NAME  [-aoiv NAME TYPE VALUE]  [-aoov NAME TYPE VALUE]  [-aoa NAME DTYPE VALUE]  [-csoon SRCOP_NAME SRCOP_OUTPUT_NAME ADDOP_NAME ADDOP_INPUT_NAME]  -cdoin ADDOP_NAME ADDOP_OUTPUT_NAME DESTOP_NAME DESTOP_INPUT_NAME  [-of OUTPUT_ONNX_FILE_PATH]  [-n]optional arguments:  -h, --help      show this help message and exit  -if INPUT_ONNX_FILE_PATH, --input_onnx_file_path INPUT_ONNX_FILE_PATH      Input onnx file path.  -aot ADD_OP_TYPE, --add_op_type ADD_OP_TYPE      ONNX OP type.      https://github.com/onnx/onnx/blob/main/docs/Operators.md  -aon ADD_OP_NAME, --add_op_name ADD_OP_NAME      Name of OP to be added.      e.g.      --add_op_name AddOP1  -aoiv ADD_OP_INPUT_VARIABLES ADD_OP_INPUT_VARIABLES ADD_OP_INPUT_VARIABLES, --add_op_input_variables ADD_OP_INPUT_VARIABLES ADD_OP_INPUT_VARIABLES ADD_OP_INPUT_VARIABLES      input_variables can be specified multiple times.      --add_op_input_variables variable_name numpy.dtype shape      https://github.com/onnx/onnx/blob/main/docs/Operators.md      e.g.      --add_op_input_variables inpname1 float32 [1,3,5,5]      --add_op_input_variables inpname2 int32 [1]      --add_op_input_variables inpname3 float64 [1,3,224,224]  -aoov ADD_OP_OUTPUT_VARIABLES ADD_OP_OUTPUT_VARIABLES ADD_OP_OUTPUT_VARIABLES, --add_op_output_variables ADD_OP_OUTPUT_VARIABLES ADD_OP_OUTPUT_VARIABLES ADD_OP_OUTPUT_VARIABLES      output_variables can be specified multiple times.      --add_op_output_variables variable_name numpy.dtype shape      https://github.com/onnx/onnx/blob/main/docs/Operators.md      e.g.      --add_op_output_variables outname1 float32 [1,3,5,5]      --add_op_output_variables outname2 int32 [1]      --add_op_output_variables outname3 float64 [1,3,224,224]  -aoa ADD_OP_ATTRIBUTES ADD_OP_ATTRIBUTES ADD_OP_ATTRIBUTES, --add_op_attributes ADD_OP_ATTRIBUTES ADD_OP_ATTRIBUTES ADD_OP_ATTRIBUTES      attributes can be specified multiple times.      --add_op_attributes name dtype value      dtype is one of &quot;float32&quot; or &quot;float64&quot; or &quot;int32&quot; or &quot;int64&quot; or &quot;str&quot;.      https://github.com/onnx/onnx/blob/main/docs/Operators.md      e.g.      --add_op_attributes alpha float32 1.0      --add_op_attributes beta float32 1.0      --add_op_attributes transA int64 0      --add_op_attributes transB int64 0  -csoon CONNECTION_SRC_OP_OUTPUT_NAMES CONNECTION_SRC_OP_OUTPUT_NAMES CONNECTION_SRC_OP_OUTPUT_NAMES CONNECTION_SRC_OP_OUTPUT_NAMES, --connection_src_op_output_names CONNECTION_SRC_OP_OUTPUT_NAMES CONNECTION_SRC_OP_OUTPUT_NAMES CONNECTION_SRC_OP_OUTPUT_NAMES CONNECTION_SRC_OP_OUTPUT_NAMES      Specify the name of the output name from which to connect.      e.g.      -Before-        [OpA]oname1 - iname1[OpB]oname1        [OpC]oname1      -After-        [OpA]oname1 - iname1[AddOP1]oname1 - iname1[OpB]oname1        [OpC]oname1 - iname2[AddOP1]      When extrapolating a new OP between OpA and OpB.      --connection_src_op_output_names OpA oname1 AddOP1 iname1      --connection_src_op_output_names OpC oname1 AddOP1 iname2      This need not be specified only when the type of the newly added OP is Constant.  -cdoin CONNECTION_DEST_OP_INPUT_NAMES CONNECTION_DEST_OP_INPUT_NAMES CONNECTION_DEST_OP_INPUT_NAMES CONNECTION_DEST_OP_INPUT_NAMES, --connection_dest_op_input_names CONNECTION_DEST_OP_INPUT_NAMES CONNECTION_DEST_OP_INPUT_NAMES CONNECTION_DEST_OP_INPUT_NAMES CONNECTION_DEST_OP_INPUT_NAMES      Specify the name of the input name from which to connect.      e.g.      -Before-        [OpA]oname1 - iname1[OpB]oname1        [OpC]oname1      -After-        [OpA]oname1 - iname1[AddOP1]oname1 - iname1[OpB]oname1        [OpC]oname1 - iname2[AddOP1]      When extrapolating a new OP between OpA and OpB.      --connection_dest_op_input_names AddOP1 oname1 OpB iname1  -of OUTPUT_ONNX_FILE_PATH, --output_onnx_file_path OUTPUT_ONNX_FILE_PATH      Output onnx file path.      If not specified, a file with &quot;_mod&quot; appended to the end of input_onnx_file_path is output.      e.g.      aaa.onnx -&gt; aaa_mod.onnx  -n, --non_verbose      Do not show all information logs. Only error logs are displayed.```## 3. In-script Usage```python&gt;&gt;&gt; from sna4onnx import add&gt;&gt;&gt; help(add)Help on function add in module sna4onnx.onnx_operation_adder:add(  connection_src_op_output_names: List,  connection_dest_op_input_names: List,  add_op_type: str, add_op_name: str,  add_op_input_variables: Union[dict, NoneType] = None,  add_op_output_variables: Union[dict, NoneType] = None,  add_op_attributes: Union[dict, NoneType] = None,  input_onnx_file_path: Union[str, NoneType] = '',  onnx_graph: Union[onnx.onnx_ml_pb2.ModelProto, NoneType] = None,  output_onnx_file_path: Union[str, NoneType] = '',  non_verbose: Union[bool, NoneType] = False) -&gt; onnx.onnx_ml_pb2.ModelProto    Parameters    ----------    connection_src_op_output_names: List        Specify the name of the output name from which to connect.        e.g.        -Before-            [OpA] outnameA - inpnameB1 [OpB] outnameB            [OpC] outnameC        -After-            [OpA] outnameA - inpname1 [AddOP1] outname1 - inpnameB1 [OpB] outnameB            [OpC] outnameC - inpname2 [AddOP1]        When extrapolating a new OP between OpA and OpB.        connection_src_op_output_names = [            [&quot;OpA&quot;, &quot;outnameA&quot;, &quot;AddOP1&quot;, &quot;inpname1&quot;,],            [&quot;OpC&quot;, &quot;outnameC&quot;, &quot;AddOP1&quot;, &quot;inpname2&quot;,],        ]        This need not be specified only when the type of the newly added OP is Constant.    connection_dest_op_input_names: List        Specify the name of the input name from which to connect.        e.g.        -Before-            [OpA] outnameA - inpnameB1 [OpB] outnameB            [OpC] outnameC        -After-            [OpA] outnameA - inpname1 [AddOP1] outname1 - inpnameB1 [OpB] outnameB            [OpC] outnameC - inpname2 [AddOP1]        When extrapolating a new OP between OpA and OpB.        connection_dest_op_input_names = [            [&quot;AddOP1&quot;, &quot;outname1&quot;, &quot;OpB&quot;, &quot;inpnameB1&quot;],        ]    add_op_type: str        ONNX op type.        See below for the types of OPs that can be specified.        e.g. &quot;Add&quot;, &quot;Div&quot;, &quot;Gemm&quot;, ...        https://github.com/onnx/onnx/blob/main/docs/Operators.md    add_op_name: str        Name of OP to be added.        e.g. --add_op_name AddOP1    add_op_input_variables: Optional[dict]        Specify input variables for the OP to be generated.        See below for the variables that can be specified.        {            &quot;input_var_name1&quot;: [numpy.dtype, shape],            &quot;input_var_name2&quot;: [numpy.dtype, shape],            ...        }        e.g.        add_op_input_variables = {            &quot;inpname1&quot;: [np.float32, [1,224,224,3]],            &quot;inpname2&quot;: [np.bool_, [0]],            ...        }        https://github.com/onnx/onnx/blob/main/docs/Operators.md    add_op_output_variables: Optional[dict]        Specify output variables for the OP to be generated.        See below for the variables that can be specified.        {            &quot;output_var_name1&quot;: [numpy.dtype, shape],            &quot;output_var_name2&quot;: [numpy.dtype, shape],            ...        }        e.g.        add_op_output_variables = {            &quot;outname1&quot;: [np.float32, [1,224,224,3]],            &quot;outname2&quot;: [np.bool_, [0]],            ...        }        https://github.com/onnx/onnx/blob/main/docs/Operators.md    add_op_attributes: Optional[dict]        Specify output add_op_attributes for the OP to be generated.        See below for the add_op_attributes that can be specified.        {            &quot;attr_name1&quot;: value1,            &quot;attr_name2&quot;: value2,            &quot;attr_name3&quot;: value3,            ...        }        e.g.        add_op_attributes = {            &quot;alpha&quot;: 1.0,            &quot;beta&quot;: 1.0,            &quot;transA&quot;: 0,            &quot;transB&quot;: 0,        }        Default: None        https://github.com/onnx/onnx/blob/main/docs/Operators.md    input_onnx_file_path: Optional[str]        Input onnx file path.        Either input_onnx_file_path or onnx_graph must be specified.        Default: ''    onnx_graph: Optional[onnx.ModelProto]        onnx.ModelProto.        Either input_onnx_file_path or onnx_graph must be specified.        onnx_graph If specified, ignore input_onnx_file_path and process onnx_graph.    output_onnx_file_path: Optional[str]        Output onnx file path. If not specified, no ONNX file is output.        Default: ''    non_verbose: Optional[bool]        Do not show all information logs. Only error logs are displayed.        Default: False    Returns    -------    changed_graph: onnx.ModelProto        Changed onnx ModelProto.```## 4. CLI Execution```bash$ sna4onnx \--input_onnx_file_path crestereo_init_iter2_120x160.onnx \--connection_src_op_output_name Sub_451 onnx::Pow_603 dummy_mul inp1 \--connection_dest_op_input_name dummy_mul out1 Div_458 onnx::Pow_603 \--add_op_type Mul \--add_op_name dummy_mul \--add_op_input_variables inp1 float32 [1,70,256] \--add_op_input_variables inp2_const float32 [1] \--add_op_output_variables out1 float32 [1,70,256] \--output_onnx_file_path test.onnx```## 5. In-script Execution```pythonfrom sna4onnx import addonnx_graph = add(  input_onnx_file_path=&quot;crestereo_init_iter2_120x160.onnx&quot;,  connection_src_op_output_names=[    [&quot;Sub_451&quot;, &quot;onnx::Pow_603&quot;, &quot;dummy_mul&quot;, &quot;inp1&quot;],  ],  connection_dest_op_input_names=[    [&quot;dummy_mul&quot;,&quot;out1&quot;, &quot;Div_458&quot;, &quot;onnx::Pow_603&quot;],  ],  add_op_type=&quot;Mul&quot;,  add_op_name=&quot;dummy_mul&quot;,  add_op_input_variables={    &quot;inp1&quot;: [np.float32, [1,70,256]],    &quot;inp2_const&quot;: [np.float32, [1]],  },  add_op_output_variables={    &quot;out1&quot;: [np.float32, [1,70,256]],  },)# oronnx_graph = add(  onnx_graph=graph,  connection_src_op_output_names=[    [&quot;Sub_451&quot;, &quot;onnx::Pow_603&quot;, &quot;dummy_mul&quot;, &quot;inp1&quot;],  ],  connection_dest_op_input_names=[    [&quot;dummy_mul&quot;,&quot;out1&quot;, &quot;Div_458&quot;, &quot;onnx::Pow_603&quot;],  ],  add_op_type=&quot;Mul&quot;,  add_op_name=&quot;dummy_mul&quot;,  add_op_input_variables={    &quot;inp1&quot;: [np.float32, [1,70,256]],    &quot;inp2_const&quot;: [np.float32, [1]],  },  add_op_output_variables={    &quot;out1&quot;: [np.float32, [1,70,256]],  },)```## 6. Sample### Before![20220426234631](https://user-images.githubusercontent.com/33194443/165336928-066542b7-89ad-4c51-9e10-6bb2e8e6344a.png)### After![image](https://user-images.githubusercontent.com/33194443/165440616-d9947caa-ba7d-4f83-9d97-d71be0d3a579.png)## 7. Reference1. https://github.com/onnx/onnx/blob/main/docs/Operators.md2. https://docs.nvidia.com/deeplearning/tensorrt/onnx-graphsurgeon/docs/index.html3. https://github.com/NVIDIA/TensorRT/tree/main/tools/onnx-graphsurgeon4. https://github.com/PINTO0309/simple-onnx-processing-tools5. https://github.com/PINTO0309/PINTO_model_zoo## 8. Issueshttps://github.com/PINTO0309/simple-onnx-processing-tools/issues</longdescription>
</pkgmetadata>