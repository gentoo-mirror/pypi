<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SecureDataA library that allows for easy reading/writing of settings across repositories, as well as mail and logging.## Author- Tyler Woodfin  - [GitHub](https://www.github.com/tylerjwoodfin)  - [Website](http://tyler.cloud)## Features- Get/Set data within a JSON file in the location of your choice- Sync with cloud providers using custom commands- Log to a file/directory of your choice without having to configure `logger` each time- Send/receive mail## Structure- Data is stored in `settings.json`- Logs are written to `/path/to/securedata/log` by default## Installation and Setup```bash  python3 -m pip install securedata  securedata config```## Configuration- To choose where `settings.json` is stored, use `securedata config`- To choose where logs will be stored, edit `settings.json` and set `path -&gt; log` to the full path to the log folder. (in other words, `{&quot;path&quot;: &quot;log&quot;: &quot;/path/to/folder&quot;}`)### cloud syncing- Set `settings.json -&gt; path -&gt; securedata -&gt; {sync-pull/sync-push}`, like this example:```# example only; these commands will be unique to your cloud syncing setup# if set, pull commands will be used before loading `settings.json` if `sync` is True; pull and push commands will be used before and after `setItem` if `sync` is True{  &quot;path&quot;: {    &quot;securedata&quot;: {      &quot;sync-pull&quot;: &quot;rclone sync Dropbox:SecureData /home/{username}/securedata&quot;,      &quot;sync-push&quot;: &quot;rclone copy /home/{username}/securedata Dropbox:SecureData&quot;    }  }}setItem(&quot;test&quot;, &quot;123&quot;) # will not sync, because `sync` is not truesetItem(&quot;test&quot;, &quot;123&quot;, sync=True) # will sync if the properties above are setgetItem(&quot;test&quot;) # will not pull from cloud before returning, because `sync` is not truegetItem(&quot;test&quot;, sync=True) # will pull from cloud before returning```### editFile- see example below to enable something like `securedata edit shopping` from the terminal  - or `securedata.editFile(&quot;shopping&quot;)`, rather than `securedata.editFile(&quot;/home/{username}/path/to/shopping.md&quot;)`- if sync-push and set-pull are set, pull commands will be used before loading the file; push commands will be used after saving- each shortcut should have a `value` (full path to the file)  - to enable syncing, each shortcut should also have `sync` set to `true````# example only; these commands will be unique to your cloud syncing setup{  &quot;path&quot;: {    &quot;edit&quot;: {      &quot;shopping&quot;: {        &quot;value&quot;: &quot;/home/{username}/path/to/shopping.md&quot;,        &quot;sync&quot;: true      },      &quot;todo&quot;: {        &quot;value&quot;: &quot;/home/{username}/path/to/todo.md&quot;,        &quot;sync&quot;: false      }      &quot;sync-pull&quot;: &quot;rclone sync Dropbox:SecureData /home/{username}/securedata&quot;,      &quot;sync-push&quot;: &quot;rclone copy /home/{username}/securedata Dropbox:SecureData&quot;    }  }}```### mail- It is NEVER a good idea to store your password in plaintext; for this reason, I strongly recommend a &quot;throwaway&quot; account that is only used for sending emails- Gmail (as of May 2022) and most other mainstream email providers won't work with this; for support, search for sending mail from your email provider with `smtplib`.- In `settings.json`, add the `email` object to make your settings file look like this example:```{    &quot;email&quot;: {        &quot;from&quot;: &quot;throwaway@example.com&quot;,        &quot;from_pw&quot;: &quot;example&quot;,        &quot;from_name&quot;: &quot;Raspberry Pi&quot;,        &quot;to&quot;: &quot;destination@protonmail.com&quot;,        &quot;smtp_server&quot;: &quot;example.com&quot;,        &quot;imap_server&quot;: &quot;example.com&quot;,        &quot;port&quot;: 123    }}```## Examples### `setItem````from securedata import securedatasecuredata.setItem(&quot;employee&quot;, &quot;Tyler&quot;, &quot;salary&quot;, 7.25)```results in this structure in settings.json:```{    &quot;employee&quot;: {        &quot;Tyler&quot;: {            &quot;salary&quot;: 7.25        }    }}```### `getItem````from securedata import securedataprint(securedata.getItem(&quot;employee&quot;, &quot;Tyler&quot;, &quot;salary&quot;)) # given example settings.json above``````&gt; python3 test.py&gt; 7.25```### `editFile````from securedata import securedata# if setItem(&quot;path&quot;, &quot;edit&quot;, &quot;shopping&quot;, &quot;/path/to/shopping.md&quot;) has been called, this will edit the file# assigned to that shortcut.# opens file in Vim, saves upon exitsecuredata.editFile(&quot;shopping&quot;)# or you can edit a file directly...securedata.editFile(&quot;/path/to/shopping.md&quot;)# set path -&gt; edit -&gt; sync-pull and path -&gt; edit -&gt; sync-push to specify commands that should be run for cloud integration.```### `mail````from securedata import mailmail.send('Test Subject', 'Test Body')```### `log````from securedata import securedata# writes to a file named LOG_DAILY YYYY-MM-DD in the default log folder (or securedata.getItem('path', 'log')) inside a YYYY-MM-DD foldersecuredata.log(&quot;Dear Diary...&quot;)securedata.log(&quot;This function hit a breakpoint&quot;, level=&quot;debug&quot;)securedata.log(&quot;Looks like the server is on fire&quot;, level=&quot;critical&quot;)securedata.log(&quot;This is fine&quot;, level=&quot;info&quot;)# writes to a file named LOG_TEMPERATUREsecuredata.log(&quot;30&quot;, logName=&quot;LOG_TEMPERATURE&quot;)# writes to a file named LOG_TEMPERATURE in /home/{username}/weathersecuredata.log(&quot;30&quot;, logName=&quot;LOG_TEMPERATURE&quot;, filePath=&quot;/home/{username}/weather&quot;)    # format    # 2021-12-29 19:29:27,896 — INFO — 30```## Dependencies- Python &gt;= 3.6- smtplib## Disclaimers- Although I've done quite a bit of testing, I can't guarantee everything that works on my machine will work on yours. Always back up your data to multiple places to avoid data loss.- If you find any issues, please contact me... or get your hands dirty and raise a PR!``````</longdescription>
</pkgmetadata>