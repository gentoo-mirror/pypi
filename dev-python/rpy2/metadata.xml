<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python -&gt; R bridge[![pypi](https://img.shields.io/pypi/v/rpy2.svg?style=flat-square)](https://pypi.python.org/pypi/rpy2)[![Codecov](https://codecov.io/gh/rpy2/rpy2/branch/master/graph/badge.svg)](https://codecov.io/gh/rpy2/rpy2)[![GH Actions](https://github.com/rpy2/rpy2/workflows/Python%20package/badge.svg)](https://github.com/rpy2/rpy2/actions?query=workflow%3A%22Python+package%22)The project's webpage is here: https://rpy2.github.io/# Installation`pip` should work out of the box:```bashpip install rpy2```The package has optional depencies providingspecific functionalities not otherwise required to use the rest of rpy2.For example, to be able to run the unit tests:```bashpip install rpy2[test]```To install all optional dependencies (numpy, pandas, ipython), use:```bashpip install rpy2[all]```The package is known to compile on Linux, MacOSX(provided that developper tools are installed, and you are readyfigure out how by yourself). The situation is currently a littlemore complicated on Windows. Check the issue tracker.In case you find yourself with this source without any ideaof what it takes to compile anything on your platform, try first```bashpython setup.py install```## Issues loading shared C librariesWhenever R is in not installed in a system location, the system might notknow where to find the R shared library.If `R` is in the `PATH`, that is entering `R` on the command line successfully startsan R terminal, but rpy2 does not work because of missing C libraries, try the followingbefore starting Python:```bashexport LD_LIBRARY_PATH=&quot;$(python -m rpy2.situation LD_LIBRARY_PATH)&quot;:${LD_LIBRARY_PATH}```# DocumentationDocumentation is available either in the source tree (`doc/`),or [online](https://rpy2.github.io/doc.html).## Testing`rpy2` uses `pytest`, with the plugin `pytest-cov` for code coverage. Totest the package from the source tree, either to check and installationon your system or before submitting a pull request, do:```bashpytest tests/```For code coverage, do:```bashpytest --cov=rpy2.rinterface_lib \       --cov=rpy2.rinterface \       --cov=rpy2.ipython \       --cov=rpy2.robject \       tests```For more options, such as how to run specify tests, please refer to the `pytest`documentation.# LicenseRPy2 can be used under the terms of the GNUGeneral Public License Version 2 or later (see the filegpl-2.0.txt). This is the very same license R itself is released under.</longdescription>
</pkgmetadata>