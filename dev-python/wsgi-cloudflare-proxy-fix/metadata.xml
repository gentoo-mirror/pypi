<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>``wsgi_cloudflare_proxy_fix``: Safely read Cloudflare's ``Cf-Connecting-Ip`` header===================================================================================``wsgi_cloudflare_proxy_fix`` is a WSGI middleware that safely sets the``REMOTE_ADDR`` environment variable to the value of the ``Cf-Connecting-Ip``header for requests originating from Cloudflare.In addition, it sets a ``CF_TRUSTED`` environment variable to ``True`` forall requests originating from Cloudflare.Installation------------Install ``wsgi_cloudflare_proxy_fix`` using ``pip``::    pip install wsgi_cloudflare_proxy_fixUsage-----The following examples assume ``werkzeug.middleware.proxy_fix.ProxyFix`` isbeing used to read the ``X-Forwarded-For`` and ``X-Forwarded-Proto`` headers.For a standalone WSGI application:.. code-block:: python    import logging    from wsgi_cloudflare_proxy_fix import CloudflareProxyFix    from werkzeug.middleware.proxy_fix import ProxyFix    application = CloudflareProxyFix(application, log_level=logging.INFO)    application = ProxyFix(application)For a Flask application:.. code-block:: python    import logging    from wsgi_cloudflare_proxy_fix import CloudflareProxyFix    from werkzeug.middleware.proxy_fix import ProxyFix    def create_app():        app = Flask(__name__)        app.wsgi_app = CloudflareProxyFix(app.wsgi_app, log_level=logging.INFO)        app.wsgi_app = ProxyFix(app.wsgi_app)        return appTesting-------To verify the proxy fix is working as expected in your production environment,the ``CloudflareProxyFixTest`` middleware can be used by adding the followingto your application:.. code-block:: python    import logging    from wsgi_cloudflare_proxy_fix import CloudflareProxyFix, CloudflareProxyFixTest    from werkzeug.middleware.proxy_fix import ProxyFix    def create_app():        app = Flask(__name__)        app.wsig_app = CloudflareProxyFixTest(app.wsgi_app, path=&quot;/debug/cf-test&quot;)        app.wsgi_app = CloudflareProxyFix(app.wsgi_app, log_level=logging.INFO)        app.wsgi_app = ProxyFix(app.wsgi_app)        return appAnd making a request to the `debug/cf-test` endpoint::    $ curl http://localhost:5000/debug/cf-test    {        &quot;CF_TRUSTED&quot;: null,        &quot;REMOTE_ADDR&quot;: &quot;127.0.0.1&quot;        &quot;wsgi_cloudflare_proxy_fix.orig&quot;: null,    }    $ curl -H 'X-Forwarded-For: 103.31.4.1' -H 'Cf-Connecting-Ip: 1.2.3.4' http://localhost:5000/debug/cf-test    {        &quot;CF_TRUSTED&quot;: true,        &quot;REMOTE_ADDR&quot;: &quot;1.2.3.4&quot;,        &quot;wsgi_cloudflare_proxy_fix.orig&quot;: {            &quot;REMOTE_ADDR&quot;: &quot;103.31.4.1&quot;        }    }</longdescription>
</pkgmetadata>