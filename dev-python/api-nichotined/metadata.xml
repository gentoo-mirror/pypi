<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># APIThis package is used for REST API classbased, author used it for API flow testing.  JSON body response will be converted to python data type. Made it easier for you to use.  &gt; This package is extending python requests library https://github.com/requests/requests/  How to install ```$ pip3 install api-nichotined```How to distribute to pypi```$ python setup.py sdist bdist_wheel &amp;&amp; python -m twine upload dist/*```Usage example```python3from API import Get, Postfrom import_file import hostpost_body = {    &quot;name&quot;: &quot;Nicholas Frederick&quot;}class GetRequest(Get):    def __init__(self, latitude: str, longitude: str):        super().__init__()        self.url = &quot;{0}/dummy?latitude={1}&amp;longitude={2}&quot;.format(host[&quot;serviceHost&quot;], latitude, longitude)        self.headers = {            &quot;Content-Type&quot;: &quot;application/json&quot;,            &quot;Authorization&quot;: &quot;TOKEN&quot;        }        self.execute()class PostRequest(Post):    def __init__(self, body: Data):        super().__init__()        self.url = &quot;{0}/dummy&quot;.format(host['serviceHost'])        self.headers = {            &quot;Content-Type&quot;: &quot;application/json&quot;,            &quot;Authorization&quot;: &quot;TOKEN&quot;        }        self.json = body        self.execute()if __name__ == &quot;__main__&quot;:    get_data = GetRequest('106', '80')    post_data = PostRequest(post_body)    assert get_data.address_name == &quot;somewhere&quot;    assert post_data.status_code == 200```Mocker usage  Beforehand, edit or extend `mocker.py` and add your desired response on that file. ```$ mitmproxy -p 8888 -s API/modules/mocker/mocker.py```</longdescription>
</pkgmetadata>