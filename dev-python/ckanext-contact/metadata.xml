<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--header-start--&gt;&lt;img src=&quot;https://data.nhm.ac.uk/images/nhm_logo.svg&quot; align=&quot;left&quot; width=&quot;150px&quot; height=&quot;100px&quot; hspace=&quot;40&quot;/&gt;# ckanext-contact[![Tests](https://img.shields.io/github/actions/workflow/status/NaturalHistoryMuseum/ckanext-contact/main.yml?style=flat-square)](https://github.com/NaturalHistoryMuseum/ckanext-contact/actions/workflows/main.yml)[![Coveralls](https://img.shields.io/coveralls/github/NaturalHistoryMuseum/ckanext-contact/main?style=flat-square)](https://coveralls.io/github/NaturalHistoryMuseum/ckanext-contact)[![CKAN](https://img.shields.io/badge/ckan-2.9.7-orange.svg?style=flat-square)](https://github.com/ckan/ckan)[![Python](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue.svg?style=flat-square)](https://www.python.org/)[![Docs](https://img.shields.io/readthedocs/ckanext-contact?style=flat-square)](https://ckanext-contact.readthedocs.io)_A CKAN extension for adding popup contact forms to pages._&lt;!--header-end--&gt;# Overview&lt;!--overview-start--&gt;Borrows much of the contact form code from [ckanext-surrey](https://github.com/CityofSurrey/ckanext-surrey).An example can be seen on the Natural History Museum's [Data Portal](https://data.nhm.ac.uk) when clicking &quot;_Contact dataset curator._&quot;This extension now includes Google's [reCAPTCHA](https://www.google.com/recaptcha) for preventing spam submissions.&lt;!--overview-end--&gt;# Installation&lt;!--installation-start--&gt;Path variables used below:- `$INSTALL_FOLDER` (i.e. where CKAN is installed), e.g. `/usr/lib/ckan/default`- `$CONFIG_FILE`, e.g. `/etc/ckan/default/development.ini`## Installing from PyPI```shellpip install ckanext-contact```## Installing from source1. Clone the repository into the `src` folder:   ```shell   cd $INSTALL_FOLDER/src   git clone https://github.com/NaturalHistoryMuseum/ckanext-contact.git   ```2. Activate the virtual env:   ```shell   . $INSTALL_FOLDER/bin/activate   ```3. Install via pip:   ```shell   pip install $INSTALL_FOLDER/src/ckanext-contact   ```### Installing in editable modeInstalling from a `pyproject.toml` in editable mode (i.e. `pip install -e`) requires `setuptools&gt;=64`; however, CKAN 2.9 requires `setuptools==44.1.0`. See [our CKAN fork](https://github.com/NaturalHistoryMuseum/ckan) for a version of v2.9 that uses an updated setuptools if this functionality is something you need.## Post-install setup1. Add 'contact' to the list of plugins in your `$CONFIG_FILE`:   ```ini   ckan.plugins = ... contact   ```2. To use reCAPTCHA, you must register a site with the Google [reCAPTCHA](https://www.google.com/recaptcha) service and add your API key and secret in the [configuration](#configuration).&lt;!--installation-end--&gt;# Configuration&lt;!--configuration-start--&gt;These are the options that can be specified in your .ini config file.## Email| Name                                       | Description                                       | Default                         ||--------------------------------------------|---------------------------------------------------|---------------------------------|| `ckanext.contact.mail_to`                  | Email address to submit to                        | `email_to`                      || `ckanext.contact.recipient_name`           | Name of the recipient                             | `ckan.site_title`               || `ckanext.contact.subject`                  | Email subject for the submitted form              | 'Contact/Question from visitor' || `ckanext.contact.add_timestamp_to_subject` | Whether to append a timestamp to the subject line | `false`                         || `ckanext.contact.subject_prefix`           | A prefix to add to the subject before sending     | ''                              |## Recaptcha| Name                                  | Description                              | Default               ||---------------------------------------|------------------------------------------|-----------------------|| `ckanext.contact.recaptcha_v3_key`    | API key for the reCAPTCHA service.       | False (i.e. disabled) || `ckanext.contact.recaptcha_v3_secret` | API secret for the reCAPTCHA service.    | False (i.e. disabled) || `ckanext.contact.recaptcha_v3_action` | `data-module-action` for the form/button |                       |&lt;!--configuration-end--&gt;# Usage&lt;!--usage-start--&gt;Add the following HTML where you want the contact button to appear:```html+jinja{% set params = {...} %}&lt;a class=&quot;btn btn-primary&quot; data-module=&quot;modal-contact&quot; data-module-template=&quot;{{ h.get_contact_form_template_url(params) }}&quot; href=&quot;{{ h.url_for('contact.form', **params) }}&quot; title=&quot;{{ _('Contact') }}&quot;&gt;    &lt;i class=&quot;fas fa-envelope&quot;&gt;&lt;/i&gt;{{ link_text if link_text else _('CONTACT BUTTON TEXT') }}&lt;/a&gt;{% resource 'ckanext-contact/main' %}```Where `params` is a dict with three entries: package_id, resource_id, record_id (all of which are optional).&lt;!--usage-end--&gt;# Testing&lt;!--testing-start--&gt;There is a Docker compose configuration available in this repository to make it easier to run tests. The ckan image uses the Dockerfile in the `docker/` folder.To run the tests against ckan 2.9.x on Python3:1. Build the required images:   ```shell   docker-compose build   ```2. Then run the tests.   The root of the repository is mounted into the ckan container as a volume by the Docker compose   configuration, so you should only need to rebuild the ckan image if you change the extension's   dependencies.   ```shell   docker-compose run ckan   ```&lt;!--testing-end--&gt;</longdescription>
</pkgmetadata>