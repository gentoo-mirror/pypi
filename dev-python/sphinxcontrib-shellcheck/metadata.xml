<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. README.rst.. Copyright (c) 2018-2020 Pablo Acosta-Serafini.. See LICENSE for details.. image:: https://badge.fury.io/py/sphinxcontrib-shellcheck.svg    :target: https://pypi.org/project/sphinxcontrib-shellcheck    :alt: PyPI version.. image:: https://img.shields.io/pypi/l/sphinxcontrib-shellcheck.svg    :target: https://pypi.org/project/sphinxcontrib-shellcheck    :alt: License.. image:: https://img.shields.io/pypi/pyversions/sphinxcontrib-shellcheck.svg    :target: https://pypi.org/project/sphinxcontrib-shellcheck    :alt: Python versions supported.. image:: https://img.shields.io/pypi/format/sphinxcontrib-shellcheck.svg    :target: https://pypi.org/project/sphinxcontrib-shellcheck    :alt: Format.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white   :target: https://github.com/pmacosta/sphinxcontrib-shellcheck   :alt: pre-commit.. image:: https://www.repostatus.org/badges/latest/active.svg   :alt: Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed.   :target: https://www.repostatus.org/#active|.. image::    https://dev.azure.com/pmasdev/sphinxcontrib-shellcheck/_apis/build/status/pmacosta.sphinxcontrib-shellcheck?branchName=master    :target: https://dev.azure.com/pmasdev/sphinxcontrib-shellcheck/_build?definitionId=3&amp;_a=summary    :alt: Continuous integration test status.. image::    https://img.shields.io/azure-devops/coverage/pmasdev/sphinxcontrib-shellcheck/2.svg    :target: https://dev.azure.com/pmasdev/sphinxcontrib-shellcheck/_build?definitionId=6&amp;_a=summary    :alt: Continuous integration test coverage|########################sphinxcontrib-shellcheck########################The shellcheck Sphinx builder is an extension that uses the `shellcheck&lt;https://github.com/koalaman/shellcheck&gt;`_ utility to lint shell code in thedocumentation.###########Interpreter###########The extension has been developed and tested with Python 3.5, 3.6, 3.7, and 3.8under Linux (Debian, Ubuntu), Apple macOS and Microsoft Windows############Installation############The extension is on `PyPI &lt;https://pypi.org/project/sphinxcontrib-shellcheck&gt;`_,so:.. code:: console   $ pip install sphinxcontrib-shellcheckAdd the shellcheck extension to the extension list in your Sphinx``conf.py`` file to enable it:.. code:: python   extensions = [       ...,       &quot;sphinxcontrib.shellcheck&quot;,       ...,   ]#####Usage#####For example, if a reStructuredText file ``example.rst`` has the followingcontent:.. code:: rst   Follow these instructions:       .. code-block:: bash           $ github_user=myname           $ git clone \                 https://github.com/&quot;${github_user}&quot;/ \                 myrepo.git           Cloning into 'myrepo'...           ...           $ cd myrepo           $ export MYREPO_DIR=${PWD}           $ echo &quot;${myvar}&quot;   And all will be goodThen with the extension installed:.. code:: console   $ sphinx-build -b shellcheck . _build example.rst   Running Sphinx v1.8.3   making output directory...   building [mo]: targets for 0 po files that are specified   building [shellcheck]: 1 source files given on command line   updating environment: 4 added, 0 changed, 0 removed   reading sources... [100%] index   looking for now-outdated files... none found   pickling environment... done   checking consistency... done   preparing documents... done   example.rst   Line 11, column 11 [2164]: Use cd ... || exit in case cd fails.   Line 13, column 17 [2154]: myvar is referenced but not assigned.   build succeeded.   Look for any errors in the above output or in _build/shellcheck/output.txt#######################Configuration variables#######################These are the configurable variables of the extension:* **shellcheck_dialects** (*list of strings*): shell dialects to be  linted. The default dialects are those supported by shellcheck, :code:`[&quot;sh&quot;,  &quot;bash&quot;, &quot;dash&quot;, &quot;ksh&quot;]`, and only a subset of these is valid.* **shellcheck_executable** (*string*): name of the shellcheck executable  (potentially full path to it too). The default is :code:`&quot;shellcheck&quot;`.* **shellcheck_prompt** (*string*): single character representing the terminal  prompt. The default is :code:`$`.* **shellcheck_debug** (*integer*): flag that indicates whether debug  information shall be printed via the Sphinx logger (:code:`1`) or not  (:code:`0`). The default is :code:`0`. This configuration option is only  useful while developing the extension.These configuration variables can be overridden via the Sphinx configuration file``conf.py``, or via the ``-D`` option of the ``sphinx-build`` command. Forexample:.. code:: console   $ sphinx-build -b shellcheck \      -D shellcheck_dialects=bash,ksh \      -D shellcheck_executable=shellcheck-stable \      -D shellcheck_prompt=$ \      -D shellcheck_debug=1 \      . _build example.rst#######License#######The MIT License (MIT)Copyright (c) 2018-2020, Pablo Acosta-SerafiniAll rights reserved.Redistribution and use in source and binary forms, with or withoutmodification, are permitted provided that the following conditions are met:    * Redistributions of source code must retain the above copyright      notice, this list of conditions and the following disclaimer.    * Redistributions in binary form must reproduce the above copyright      notice, this list of conditions and the following disclaimer in the      documentation and/or other materials provided with the distribution.    * Neither the name of the &lt;organization&gt; nor the      names of its contributors may be used to endorse or promote products      derived from this software without specific prior written permission.THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; ANDANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIEDWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AREDISCLAIMED. IN NO EVENT SHALL &lt;COPYRIGHT HOLDER&gt; BE LIABLE FOR ANYDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED ANDON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THISSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE... CHANGELOG.rst.. Copyright (c) 2018-2020 Pablo Acosta-Serafini.. See LICENSE for detailsChangelog=========* 1.1.2 [March 29, 2020] Fixed documentation link* 1.1.1 [March 29, 2020] Fixed distribution bugs* 1.1.0 [March 29, 2020] Dropped support for Python 2.7. Added support for  Python 3.8. Fixed continuous integration bugs.* 1.0.10 [March 27, 2019] Correctly set exit code when there are errors* 1.0.9 [March 18, 2019] Changed debug parameter default status* 1.0.8 [March 17, 2019] Package management update* 1.0.7 [March 17, 2019] Package management update* 1.0.6 [March 17, 2019] Added check of shellcheck minimum version. Updated  package management and testing framework* 1.0.5 [January 4, 2019] Initial public release</longdescription>
</pkgmetadata>