<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django-Security[![Build Status](https://travis-ci.org/sdelements/django-security.svg?branch=master)](https://travis-ci.org/sdelements/django-security)This package offers a number of models, views, middlewares and forms to facilitate security hardening of Django applications.# Full documentationAutomatically generated documentation of `django-security` is available on Read The Docs:* [Django-security documentation](http://django-security.readthedocs.org/en/latest/)# Requirements* Python &gt;= 3.6* Django &gt;= 1.11For Django &lt; 1.8 use django-security==0.9.4. For Django &lt; 1.11 use django-security==0.11.3.Note: For versions prior to 0.10.0, `datetime` objects were being added to the session and required Django's PickleSerializer for (de)serializing. This has now been changed so that the strings of these `datetime`s are being stored instead. If you are still using PickleSerializer for this reason, we suggest switching to Django's default JSONSerializer (default since Django 1.6) for better security.# InstallationInstall from Python packages repository:    pip install django-securityIf you prefer the latest development version, install from[django-security](https://github.com/sdelements/django-security) repository on GitHub:    git clone https://github.com/sdelements/django-security.git    cd django-security    sudo python setup.py installAdding to Django application's `settings.py` file:    INSTALLED_APPS = (        ...        'security',        ...    )Pre-Django 1.10, middleware modules can be added to `MIDDLEWARE_CLASSES` list in settings file:    MIDDLEWARE_CLASSES = (        ...        'security.middleware.DoNotTrackMiddleware',        'security.middleware.ContentNoSniff',        'security.middleware.XssProtectMiddleware',        'security.middleware.XFrameOptionsMiddleware',    )After Django 1.10, middleware modules can be added to `MIDDLEWARE` list in settings file:    MIDDLEWARE = (        ...        'security.middleware.DoNotTrackMiddleware',        'security.middleware.ContentNoSniff',        'security.middleware.XssProtectMiddleware',        'security.middleware.XFrameOptionsMiddleware',    )Unlike the modules listed above, some other modules **require**  configuration settings,fully described in [django-security documentation](http://django-security.readthedocs.org/en/latest/).Brief description is provided below.## MiddlewareProvided middleware modules will modify web application's output and input and in most cases requires noor minimum configuration.&lt;table&gt;&lt;tr&gt;&lt;th&gt;Middleware&lt;th&gt;Description&lt;th&gt;Configuration&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.ClearSiteDataMiddleware&quot;&gt;ClearSiteDataMiddleware&lt;/a&gt;&lt;td&gt;Send Clear-Site-Data header in HTTP response for any page that has been whitelisted. &lt;em&gt;Recommended&lt;/em&gt;.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.ContentNoSniff&quot;&gt;ContentNoSniff&lt;/a&gt;&lt;td&gt;&lt;b&gt;DEPRECATED: &lt;/b&gt;Will be removed in future releases, consider &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/ref/middleware/#django.middleware.security.SecurityMiddleware&quot;&gt;django.middleware.security.SecurityMiddleware&lt;/a&gt; via &lt;i&gt;SECURE_CONTENT_TYPE_NOSNIFF&lt;/i&gt; setting.&lt;br/&gt;Disable possibly insecure autodetection of MIME types in browsers. &lt;em&gt;Recommended.&lt;/em&gt;&lt;td&gt;None.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.ContentSecurityPolicyMiddleware&quot;&gt;ContentSecurityPolicyMiddleware&lt;/a&gt;&lt;td&gt;Send Content Security Policy (CSP) header in HTTP response. &lt;em&gt;Recommended,&lt;/em&gt; requires careful tuning.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.DoNotTrackMiddleware&quot;&gt;DoNotTrackMiddleware&lt;/a&gt;&lt;td&gt;Read user browser's DoNotTrack preference and pass it to application.  &lt;em&gt;Recommended,&lt;/em&gt; requires implementation in views and templates.&lt;td&gt;None.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.LoginRequiredMiddleware&quot;&gt;LoginRequiredMiddleware&lt;/a&gt;&lt;td&gt;Requires a user to be authenticated to view any page on the site that hasn't been white listed.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.MandatoryPasswordChangeMiddleware&quot;&gt;MandatoryPasswordChangeMiddleware&lt;/a&gt;&lt;td&gt;Redirects any request from an authenticated user to the password change form if that user's password has expired.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.NoConfidentialCachingMiddleware&quot;&gt;NoConfidentialCachingMiddleware&lt;/a&gt;&lt;td&gt;Adds No-Cache and No-Store headers to confidential pages.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.P3PPolicyMiddleware&quot;&gt;P3PPolicyMiddleware&lt;/a&gt;&lt;td&gt;&lt;b&gt;DEPRECATED: &lt;/b&gt;Will be removed in future releases.&lt;br/&gt;Adds the HTTP header attribute specifying compact P3P policy.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.SessionExpiryPolicyMiddleware&quot;&gt;SessionExpiryPolicyMiddleware&lt;/a&gt;&lt;td&gt;Expire sessions on browser close, and on expiry times stored in the cookie itself.&lt;td&gt;Required.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.StrictTransportSecurityMiddleware&quot;&gt;StrictTransportSecurityMiddleware&lt;/a&gt;&lt;td&gt;&lt;b&gt;DEPRECATED: &lt;/b&gt;Will be removed in future releases, consider &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/ref/middleware/#django.middleware.security.SecurityMiddleware&quot;&gt;django.middleware.security.SecurityMiddleware&lt;/a&gt; via &lt;i&gt;SECURE_HSTS_SECONDS&lt;/i&gt;, &lt;i&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/i&gt; and &lt;i&gt;SECURE_HSTS_PRELOAD&lt;/i&gt; settings.&lt;br/&gt;Enforce SSL/TLS connection and disable plaintext fall-back. &lt;em&gt;Recommended&lt;/em&gt; for SSL/TLS sites.&lt;td&gt;Optional.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.XFrameOptionsMiddleware&quot;&gt;XFrameOptionsMiddleware&lt;/a&gt;&lt;td&gt;Disable framing of the website, mitigating Clickjacking attacks. &lt;em&gt;Recommended.&lt;/em&gt;&lt;td&gt;Optional.&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://django-security.readthedocs.org/en/latest/#security.middleware.XssProtectMiddleware&quot;&gt;XssProtectMiddleware&lt;/a&gt;&lt;td&gt;&lt;b&gt;DEPRECATED: &lt;/b&gt;Will be removed in future releases, consider &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/ref/middleware/#django.middleware.security.SecurityMiddleware&quot;&gt;django.middleware.security.SecurityMiddleware&lt;/a&gt; via &lt;i&gt;SECURE_BROWSER_XSS_FILTER&lt;/i&gt; setting.&lt;br/&gt;Enforce browser's Cross Site Scripting protection. &lt;em&gt;Recommended.&lt;/em&gt;&lt;td&gt;None.&lt;/table&gt;## Views`csp_report`View that allows reception of Content Security Policy violation reports sent by browsers in responseto CSP header set by ``ContentSecurityPolicyMiddleware`. This should be used only if long term, continuous CSP reportanalysis is required. For one time CSP setup [CspBuilder](http://cspbuilder.info/) is much simpler.This view can be configured to either log received reports or store them in database.See [documentation](http://django-security.readthedocs.org/en/latest/#security.views.csp_report) for details.`require_ajax`A view decorator which ensures that the request being processed by view is an AJAX request. Example usage:    @require_ajax    def myview(request):        ...## Models`CspReport`Content Security Policy violation report object. Only makes sense if `ContentSecurityPolicyMiddleware` and `csp_report` view are used.With this model, the reports can be then analysed in Django admin site.`PasswordExpiry`Associate a password expiry date with a user.## LoggingAll `django-security` modules send important log messages to `security` facility. The application should configure a handler to receive them:    LOGGING = {        ...        'loggers': {            'security': {                'handlers': ['console',],                'level': 'INFO',                'propagate': False,                'formatter': 'verbose',            },        },        ...    }</longdescription>
</pkgmetadata>