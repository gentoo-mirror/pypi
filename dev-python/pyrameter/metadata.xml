<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyrameter`pyrameter` is a library for designing hierarchical parameter searches withcontinuous and discrete domains, and then search those spaces.1. [Installation](#installation)2. [Dependencies](#dependencies)3. [A Short Example](#a-short-example)## Installation```pip install pyrameter```## Dependencies- `numpy`- `scipy`- `scikit-learn`- `pymongo`- `dill`- `six`## A Short Example```pythonimport mathimport pyrameter# Minimize the sin functiondef objective(params):    return math.sin(params['x'])# Uniformly sample values over [0, pi]space = {    'x': pyrameter.uniform(0, math.pi),}# Set up the search with an experiment key, the domains to search, and# random search to generate values.opt = pyrameter.FMin('sin_exp', space, 'random')# Try 1000 values of x and store the result.for i in range(1000):    trial = opt.generate()    trial.objective = objective(trial.hyperparameters)# Print the x that minimized sinprint(opt.optimum)```</longdescription>
</pkgmetadata>