<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Official Python client for RavenDB NoSQL Database## InstallationInstall from [PyPi](https://pypi.python.org/pypi), as [ravendb](https://pypi.org/project/ravendb/).```bashpip install ravendb````## IntroductionPython client API (v5.2) for [RavenDB](https://ravendb.net/) , a NoSQL document database.Although new API isn't compatible with the previous one, it comes with **many improvements and new features**.**Package has been reworked to match Java and other RavenDB clients****Type-hinted entire project and API results** - using the API is now much more comfortable with IntelliSense## What's new?###### 5.2.2- New feature - **[Bulk insert](https://github.com/ravendb/ravendb-python-client/pull/161)**- Bugfixes - Cluster-wide operations ([here](https://github.com/ravendb/ravendb-python-client/pull/166))###### 5.2.1- Bugfixes - Serialization while loading/querying ([here](https://github.com/ravendb/ravendb-python-client/pull/163))###### 5.2.0- **Subscriptions**  - Document streams  - Secured subscriptions- **Querying**  - Major bugfixes  - Spatial querying and indexing  - Highlighting fixes  - **Custom document parsers &amp; loaders**    ###### 5.2.0b3- **New features**  - Conditional Load  - SelectFields &amp; Facets  - Projections  - MoreLikeThis  - Suggestions- **Improvements**  - Compare exchange  - Querying  - DocumentConventions  - Patching  - Spatial queries  - Aggregations###### 5.2.0b2- **Lazy Operations**  - Lazy loading  - Lazy querying  - Lazy compare exchange operations- **Structure**  - Important classes are now available to import from the top level `ravendb` module...and many bugfixes----###### 5.2.0b1- **Querying**   - Simpler, well type hinted querying  - Group by, aggregations  - Spatial querying  - Boost, fuzzy, proximity  - Subclauses support   - **Static Indexes**  - Store fields, index fields, pick analyzers &amp; more using `AbstractIndexCreationTask`  - Full indexes CRUD  - Index related commands (priority, erros, start/stop, pause, lock)  - Additional assemblies, map-reduce, index query with results &quot;of_type&quot;       - **CRUD**  - Type hints for results and includes  - Support for dataclasses    ------- **Attachments**  - New attachments API  - Better type hints - **HTTPS**  - Support for https connection  - Certificates CRUD operations------ **Lazy load**  - New feature- **Cluster Transactions, Compare Exchange**  - New feature  -----### **Coming soon, work in progress**- Counters &amp; Time Series- Replication &amp; ETL Commands- Streaming (ready, will be merged on v5.4 - https://github.com/ravendb/ravendb-python-client/pull/168)----### Demo##### Working with secured server```pythonfrom ravendb import DocumentStoreURLS = [&quot;https://raven.server.url&quot;]DB_NAME = &quot;SecuredDemo&quot;CERT_PATH = &quot;path\\to\\cert.pem&quot;class User:    def __init__(self, name: str, tag: str):        self.name = name        self.tag = tagstore = DocumentStore(URLS, DB_NAME)store.certificate_pem_path = CERT_PATHstore.initialize()user = User(&quot;Gracjan&quot;, &quot;Admin&quot;)with store.open_session() as session:    session.store(user, &quot;users/1&quot;)    session.save_changes()with store.open_session() as session:    user = session.load(&quot;users/1&quot;, User)    assert user.name == &quot;Gracjan&quot;    assert user.tag == &quot;Admin&quot;```----#### RavenDB Documentationhttps://ravendb.net/docs/article-page/5.3/python----#### GitHubhttps://github.com/ravendb/ravendb-python-client-----##### Bug Trackerhttp://issues.hibernatingrhinos.com/issues/RDBC</longdescription>
</pkgmetadata>