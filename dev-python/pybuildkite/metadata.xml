<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyBuildkite[![Build status](https://badge.buildkite.com/89bf10df4492f2f2d61ca707078828824fec3b08cb85192e6d.svg)](https://buildkite.com/pybuildkite/pybuildkite)[![Coverage Status](https://coveralls.io/repos/github/pyasi/pybuildkite/badge.svg?branch=master)](https://coveralls.io/github/pyasi/pybuildkite?branch=master)[![PyPI most recent version](https://badge.fury.io/py/pybuildkite.svg)](https://pypi.org/project/pybuildkite/)[![PyPI downloads](https://img.shields.io/pypi/dm/pybuildkite.svg)](https://pypi.org/project/pybuildkite/)A [Python](https://www.python.org/) library and client for the [Buildkite API](https://buildkite.com/docs/api).## UsageTo get the package, execute:```pip install pybuildkite```Then set up an instance of the Buildkite object, set you access token, and make any available requests.```pythonfrom pybuildkite.buildkite import Buildkite, BuildStatebuildkite = Buildkite()buildkite.set_access_token('YOUR_API_ACCESS_TOKEN_HERE')# Get all info about particular orgorg = buildkite.organizations().get_org('my-org')# Get all running and scheduled builds for a particular pipelinebuilds = buildkite.builds().list_all_for_pipeline('my-org', 'my-pipeline', states=[BuildState.RUNNING, BuildState.SCHEDULED])# Create a buildbuildkite.builds().create_build('my-org', 'my-pipeline', 'COMMITSHA', 'master', clean_checkout=True, message=&quot;My First Build!&quot;)```## PaginationBuildkite offers pagination for endpoints that return a lot of data. By default this wrapper return `100` objects. However, any request that may contain more than that offers a pagination option.When `with_pagination=True`, we return a response object with properties that may have `next_page`, `last_page`, `previous_page`, or `first_page` depending on what page you're on.```pythonbuilds_response = buildkite.builds().list_all(page=1, with_pagination=True)# Keep looping until next_page is not populatedwhile builds_response.next_page:    builds_response = buildkite.builds().list_all(page=builds_response.next_page, with_pagination=True)```## ArtifactsArtifacts can be downloaded as binary data. The following example loads the artifact into memory as[Python bytes](https://docs.python.org/3/library/stdtypes.html#binary-sequence-types-bytes-bytearray-memoryview)and then writes them to disc:```pythonartifacts = buildkite.artifacts()artifact = artifacts.download_artifact(&quot;org_slug&quot;, &quot;pipe_slug&quot;, &quot;build_no&quot;, 123, &quot;artifact&quot;)with open('artifact.bin', 'b') as f:  f.write(artifact)```Large artifacts should be streamed as chunks of bytes to limit the memory consumption:```pythonstream = artifacts.download_artifact(&quot;org_slug&quot;, &quot;pipe_slug&quot;, &quot;build_no&quot;, 123, &quot;artifact&quot;, as_stream=True)with open('artifact.bin', 'b') as f:  for chunk in stream:    f.write(chunk)```A unicode text artifact can be turned into a string easily:```pythontext = str(artifact)```## LicenseThis library is distributed under the BSD-style license found in the LICENSE file.</longdescription>
</pkgmetadata>