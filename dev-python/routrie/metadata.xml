<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># routrie![CI](https://github.com/adriangb/routrie/actions/workflows/python.yaml/badge.svg)A Python wrapper for Rust's `path-tree` router ([path-tree repo], [path-tree crate]).This is a blazingly fast HTTP URL router with support for matching path parameters and catch-all URLs.Usage:```pythonfrom routrie import Router, Param# the generic parameter is the value being stored# normally this will be an endpoint / route instancerouter = Router(  {    &quot;/users&quot;: 1,    &quot;/users/:id&quot;: 2,    &quot;/user/repo/*any&quot;: 3,  })matched = router.find(&quot;/foo-bar-baz&quot;)assert matched is Nonematched = router.find(&quot;/users/routrie&quot;)assert matched is not Nonevalue, params = matchedassert value == 2assert params[0].name == &quot;id&quot;assert params[0].value == &quot;routrie&quot;matched = router.find(&quot;/users&quot;)assert matched is not Nonevalue, params = matchedassert value == 1assert params == []matched = router.find(&quot;/users/repos/)assert matched is not Nonevalue, params = matchedassert value == 3assert params == []matched = router.find(&quot;/users/repos/something)assert matched is not Nonevalue, params = matchedassert value == 3assert params[0].name = &quot;any&quot;assert params[0].value = &quot;something&quot;```## Contributing1. Clone the repo.1. Run `make init`1. Run `make test`1. Make your changes1. Push and open a pull request1. Wait for CI to run.If your pull request gets approved and merged, it will automatically be relased to PyPi (every commit to `main` is released).[path-tree repo]: https://github.com/viz-rs/path-tree[path-tree crate]: https://crates.io/crates/path-tree/0.1.8/dependencies</longdescription>
</pkgmetadata>