<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>```console██╗    ██╗ ██████╗ ██╗     ██╗  ██╗ ██████╗ ██████╗ ███╗   ██╗███╗   ██╗███████╗ ██████╗████████╗██║    ██║██╔═══██╗██║     ██║ ██╔╝██╔════╝██╔═══██╗████╗  ██║████╗  ██║██╔════╝██╔════╝╚══██╔══╝██║ █╗ ██║██║   ██║██║     █████╔╝ ██║     ██║   ██║██╔██╗ ██║██╔██╗ ██║█████╗  ██║        ██║██║███╗██║██║   ██║██║     ██╔═██╗ ██║     ██║   ██║██║╚██╗██║██║╚██╗██║██╔══╝  ██║        ██║╚███╔███╔╝╚██████╔╝███████╗██║  ██╗╚██████╗╚██████╔╝██║ ╚████║██║ ╚████║███████╗╚██████╗   ██║ ╚══╝╚══╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═══╝╚══════╝ ╚═════╝   ╚═╝                                           ██████╗ ██╗   ██╗████████╗██╗  ██╗ ██████╗ ███╗   ██╗                                           ██╔══██╗╚██╗ ██╔╝╚══██╔══╝██║  ██║██╔═══██╗████╗  ██║                                     █████╗██████╔╝ ╚████╔╝    ██║   ███████║██║   ██║██╔██╗ ██║                                     ╚════╝██╔═══╝   ╚██╔╝     ██║   ██╔══██║██║   ██║██║╚██╗██║                                           ██║        ██║      ██║   ██║  ██║╚██████╔╝██║ ╚████║                                           ╚═╝        ╚═╝      ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝```[![Tests and Coverage](https://github.com/Wolkabout/WolkConnect-Python/actions/workflows/tests-and-coverage.yml/badge.svg?branch=development)](https://github.com/Wolkabout/WolkConnect-Python/actions/workflows/tests-and-coverage.yml) [![PyPI version](https://badge.fury.io/py/wolk-connect.svg)](https://badge.fury.io/py/wolk-connect) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/wolk-connect) ![GitHub](https://img.shields.io/github/license/wolkabout/WolkConnect-Python) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black) [![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/) [![Documentation Status](https://readthedocs.org/projects/wolkconnect-python/badge/?version=latest)](https://wolkconnect-python.readthedocs.io/en/latest/?badge=latest)----WolkAbout Python Connector library for connecting devices to WolkAbout IoT platform instance.## Prerequisite* Python 3.7+## InstallationThere are two ways to install this package### Installing with pip```consolepython3 -m pip install wolk-connect```### Installing from sourceClone this repository from the command line using:```consolegit clone https://github.com/Wolkabout/WolkConnect-Python.git```Install dependencies by invoking `python3 -m pip install -r requirements.txt`Install the package by running:```consolepython3 setup.py install```## Example Usage### Establishing connection with WolkAbout IoT platformCreate a device on WolkAbout IoT Platform by using the *Simple example* device type that is available on the platform. ``Note that device type can be created by importing `simple_example.json` file as new Device Type.``This device type fits [main.py](https://github.com/Wolkabout/WolkConnect-Python/blob/master/examples/simple/main.py) and demonstrates the periodic sending of a temperature feed reading.```pythonimport wolk# Setup the device credentials which you received# when the device was created on the platformdevice = wolk.Device(key=&quot;device_key&quot;, password=&quot;some_password&quot;)# Pass your device and server information# defaults to secure connection to Demo instance - comment out host, port and ca_certwolk_device = wolk.WolkConnect(    device, host=&quot;insert_host&quot;, port=80, ca_cert=&quot;PATH/TO/YOUR/CA.CRT/FILE&quot;)wolk_device.connect()```### Adding feed values```pythonwolk_device.add_feed_value((&quot;T&quot;, 26.93))# or multiple feed value readingswolk_device.add_feed_value([(&quot;T&quot;, 27.11), (&quot;H&quot;, 54.34), (&quot;P&quot;, 1002.3)])```Optionally pass a `timestamp` as `round(time.time()) * 1000`.This is useful for maintaining data history when readings are not published immediately after adding them to storage.If `timestamp` is not provided, the library will assign a timestamp before placing the reading into storage.#### Adding feed values with timestamp```python# Add a signel feed reading to the message queue with the timestampwolk_device.add_feed_value((&quot;T&quot;, 12.34), 1658315834000)# Add a multi feed reading to the message queue with the timestampwolk_device.add_feed_value([(&quot;T&quot;, 12.34), (&quot;H&quot;, 56.78), (&quot;P&quot;, 1022.00)], 1658315834000)```### Data publish strategyStored feed values are pushed to WolkAbout IoT platform on demand by calling:```pythonwolk_device.publish()```### Disconnecting from the platform```pythonwolk_device.disconnect()```## Additional functionalityWolkConnect-Python library has integrated additional features which can perform full WolkAbout IoT platform potential. Explore the [examples](https://github.com/Wolkabout/WolkConnect-Python/tree/master/examples/) for more information.</longdescription>
</pkgmetadata>