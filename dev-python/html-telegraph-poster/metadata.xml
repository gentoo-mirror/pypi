<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![build](https://github.com/mercuree/html-telegraph-poster/actions/workflows/python-package.yml/badge.svg)](https://github.com/mercuree/html-telegraph-poster/actions/workflows/python-package.yml)[![PyPI - Downloads](https://img.shields.io/pypi/dm/html-telegraph-poster?master)](https://pypi.org/project/html-telegraph-poster/)# Python html to telegra.ph posterSimple python function to post plain html text to https://telegra.ph/.Telegra.ph allows `&lt;a&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;em&gt;, &lt;figure&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;img&gt;, &lt;p&gt;, &lt;strong&gt;, ` elements.It also supports embedded youtube and vimeo iframe tags.About telegram telegra.ph service https://telegram.org/blog/instant-view## Requirements* lxml* requests* requests_toolbelt## Installation```Shellpip install html-telegraph-poster```## Usage```python&gt;&gt;&gt; from html_telegraph_poster import TelegraphPoster&gt;&gt;&gt; t = TelegraphPoster(use_api=True)&gt;&gt;&gt; t.create_api_token('Elon Musk', 'Elon', 'https://www.spacex.com/') # second and third params are optional{'access_token': '9f3bab568f*************', 'auth_url': 'https://edit.telegra.ph/auth/HFYo***********', 'author_name': 'Elon', 'short_name': 'Elon Musk', 'author_url': 'https://www.spacex.com/'}&gt;&gt;&gt; t.post(title='Just another funny joke', author='by me', text='&lt;blockquote&gt;Really hard way&lt;/blockquote&gt;'){'path': 'Just-another-funny-joke-06-05-4', 'url': 'http://telegra.ph/Just-another-funny-joke-06-05-4'}```##### Use graph.org instead of telegra.ph```python&gt;&gt;&gt; t = TelegraphPoster(use_api=True, telegraph_api_url='https://api.graph.org')```##### We can modify this article later:```python&gt;&gt;&gt; t.edit(text=t.text + '&lt;p&gt;some text at the end&lt;/p&gt;'){'path': 'Just-another-funny-joke-06-05-4', 'url': 'http://telegra.ph/Just-another-funny-joke-06-05-4'}```##### Modify page created earlier:```python&gt;&gt;&gt; t.edit(text=&quot;&lt;p&gt;new text&lt;/p&gt;&quot;, path='/Another-one-page-06-05'){'path': 'Another-one-page-06-05', 'url': 'http://telegra.ph/Another-one-page-06-05'}```## Generate persistent access tokenActually it's a good idea to generate access token and put it inside environment variables.This command will generate .env file or append  TELEGRAPH_ACCESS_TOKEN at the end of it.Note: script will not set environment variable. You can use [python-dotenv](https://github.com/theskumar/python-dotenv),set it manually or hardcode it when call `TelegraphPoster(access_token='access_token_string')````Shellpython -m html_telegraph_poster.create_account &quot;Elon Musk&quot; &quot;Elon&quot; &quot;https://www.spacex.com/&quot;```## Uploading images```pythonfrom html_telegraph_poster.upload_images import upload_image# upload fileupload_image(&quot;file_path.jpg&quot;)# upload urlupload_image(&quot;http://example.com/img.png&quot;)# setting request and response timeoutupload_image(&quot;http://example.com/img.png&quot;, get_timeout=(5, 5), upload_timeout=(5, 5))```## Utils moduleUtils module provides ability to make some pre-process steps before document is passed to the converter.#### Uploading all images to the telegra.ph```pythonfrom html_telegraph_poster.utils import DocumentPreprocessordp = DocumentPreprocessor(html_string)dp.upload_all_images()dp.get_processed_html() # this should return html string with uploaded and replaced image urls```Optionally you can pass base_url if the document contains images with relative paths```pythondp.upload_all_images(base_url='https://example.com')dp.get_processed_html() ``` </longdescription>
</pkgmetadata>