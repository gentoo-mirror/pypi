<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># [Google's Business Communications: Python Client](https://github.com/google-business-communications/python-businesscommunications)[Business Communications](https://developers.google.com/business-communications/business-messages/reference/business-communications/rest) is an API for creating, managing, and launching agents for Google's Verified SMS and Business Messages platforms.## DocumentationThe documentation for the Business Commmunications API can be found [here](https://developers.google.com/business-communications/business-messages/reference/business-communications/rest).## Supported Python VersionsPython 3.5, 3.6 and 3.7, and 3.8 are fully supported and tested.## Quickstart### Before you begin1.  [Register with Business Messages](https://developers.google.com/business-communications/business-messages/guides/set-up/register).1.  Once registered, follow the instructions to [enable the APIs for your project](https://developers.google.com/business-communications/business-messages/guides/set-up/register#enable-api).### InstallationInstall this library in a [virtualenv](https://virtualenv.pypa.io/en/latest/) using pip. virtualenv is a tool tocreate isolated Python environments. The basic problem it addresses is one ofdependencies and versions, and indirectly permissions.With virtualenv, it's possible to install this library without needing systeminstall permissions, and without clashing with the installed systemdependencies.### Mac/Linux```pip install virtualenvpython -m venv &lt;your-env&gt;source &lt;your-env&gt;/bin/activate&lt;your-env&gt;/bin/pip install```### Windows```pip install virtualenvpython -m venv &lt;your-env&gt;&lt;your-env&gt;\Scripts\activate&lt;your-env&gt;\Scripts\pip.exe install```### Using the client library```pythonfrom oauth2client.service_account import ServiceAccountCredentialsfrom businesscommunications.businesscommunications_v1_client import BusinesscommunicationsV1from businesscommunications.businesscommunications_v1_messages import (    Brand)SCOPES = ['https://www.googleapis.com/auth/businesscommunications']# Initialize the API authentication credentialscredentials = ServiceAccountCredentials.from_json_keyfile_name(    'your-service-account-key-file-location', scopes=SCOPES)# Create the clientclient = BusinesscommunicationsV1(credentials=credentials)# Create the service for brandsbrands_service = BusinesscommunicationsV1.BrandsService(client)# Create a new brand with the name &quot;Test Brand&quot; brand = brands_service.Create(Brand(displayName='Test Brand'))# Print created brand objectprint(brand)```## SamplesSee [code examples](https://github.com/google-business-communications/bc-bm-python-command-line-examples) to see exampleusage for most API features. The samples' `README.md` has instructions for running the samples.| Sample                      | Source Code                       || --------------------------- | --------------------------------- || Brand CRUD Operations | [source code](https://github.com/google-business-communications/bc-bm-python-command-line-examples/blob/master/brand_sample.py) || Agent CRUD Operations | [source code](https://github.com/google-business-communications/bc-bm-python-command-line-examples/blob/master/agent_sample.py) || Location CRUD Operations | [source code](https://github.com/google-business-communications/bc-bm-python-command-line-examples/blob/master/location_sample.py) |## ContributingContributions welcome! See the [Contributing Guide](https://github.com/google-business-communications/python-businesscommunications/CONTRIBUTING.md).## LicenseApache Version 2.0See [LICENSE](https://github.com/google-business-communications/python-businesscommunications/LICENSE)</longdescription>
</pkgmetadata>