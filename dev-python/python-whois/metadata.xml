<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Goal====-  Create a simple importable Python module which will produce parsed   WHOIS data for a given domain.-  Able to extract data for all the popular TLDs (com, org, net, ...)-  Query a WHOIS server directly instead of going through an   intermediate web service like many others do.-  Works with Python 2 &amp; 3Example=======.. sourcecode:: bash    &gt;&gt;&gt; import whois    &gt;&gt;&gt; w = whois.whois('example.com')    &gt;&gt;&gt; w.expiration_date  # dates converted to datetime object    datetime.datetime(2022, 8, 13, 4, 0)    &gt;&gt;&gt; w.text  # the content downloaded from whois server    u'\nDomain Name: EXAMPLE.COM    Registry Domain ID: 2336799_DOMAIN_COM-VRSN    ...'    &gt;&gt;&gt; print w  # print values of all found attributes        {        &quot;creation_date&quot;: &quot;1995-08-14 04:00:00&quot;,        &quot;expiration_date&quot;: &quot;2022-08-13 04:00:00&quot;,        &quot;updated_date&quot;: &quot;2021-08-14 07:01:44&quot;,        &quot;domain_name&quot;: &quot;EXAMPLE.COM&quot;,        &quot;name_servers&quot;: [            &quot;A.IANA-SERVERS.NET&quot;,            &quot;B.IANA-SERVERS.NET&quot;        ],    ...Install=======Install from pypi:.. sourcecode:: bash    $ pip install python-whoisOr checkout latest version from repository:.. sourcecode:: bash    $ git clone git@github.com:richardpenman/whois.gitNote that then you will need to manually install the futures module, which allows supporting both Python 2 &amp; 3:.. sourcecode:: bash    $ pip install futuresRun test cases for python 2 &amp; 3:.. sourcecode:: bash    $ python -m unittest discover test    .............    ----------------------------------------------------------------------    Ran 13 tests in 0.812s        OK        $ python3 -m unittest discover test    .............    ----------------------------------------------------------------------    Ran 13 tests in 1.431s        OKSOCKS Proxy support requirements:.. sourcecode:: bash    $ pip install PySocks    ............    ---------------------------------------------------------------------    $ export SOCKS=socksproxy.someplace.com:8080Problems?=========Pull requests are welcome! Thanks to the many who have sent patches for additional TLDs. If you want to add or fix a TLD it's quite straightforward. See example domains in `whois/parser.py &lt;https://github.com/richardpenman/whois/blob/master/whois/parser.py&gt;`_Basically each TLD has a similar format to the following:.. sourcecode:: python    class WhoisOrg(WhoisEntry):    &quot;&quot;&quot;Whois parser for .org domains    &quot;&quot;&quot;    regex = {        'domain_name':      'Domain Name: *(.+)',        'registrar':        'Registrar: *(.+)',        'whois_server':     'Whois Server: *(.+)',        ...    }    def __init__(self, domain, text):        if text.strip() == 'NOT FOUND':            raise PywhoisError(text)        else:            WhoisEntry.__init__(self, domain, text)</longdescription>
</pkgmetadata>