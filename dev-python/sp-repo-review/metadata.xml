<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>`sp-repo-review` provides checks based on the [Scientific-Python DevelopmentGuide][] at [scientific-python/cookie][] for [repo-review][].This tool can check the style of a repository. Use like this:```bashpipx run 'sp-repo-review[cli]' &lt;path to repository&gt;```This will produce a list of results - green checkmarks mean this rule isfollowed, red x’s mean the rule is not. A yellow warning sign means that thecheck was skipped because a previous required check failed. Some checks willfail, that’s okay - the goal is bring all possible issues to your attention, notto force compliance with arbitrary checks. Eventually there might be a way tomark checks as ignored.For example, `GH101` expects all your action files to have a nice `name:` field.If you are happy with the file-based names you see in CI, you should feel freeto simply ignore this check (just visually ignore it for the moment, a way tospecify ignored checks will likely be added eventually).All checks are mentioned at least in some way in the [Scientific-PythonDevelopment Guide][]. You should read that first - if you are not attempting tofollow them, some of the checks might not work. For example, the guidelinesspecify pytest configuration be placed in `pyproject.toml`. If you place itsomewhere else, then all the pytest checks will be skipped.This was originally developed for [Scikit-HEP][] before moving to ScientificPython.## Other ways to useYou can also use GitHub Actions:```yaml- uses: scientific-python/cookie@&lt;version&gt;```Or pre-commit:```yaml- repo: https://github.com/scientific-python/cookie  rev: &lt;version&gt;  hooks:    - id: sp-repo-review```If you use `additional_dependencies` to add more plugins, like`validate-pyproject`, you should also include `&quot;repo-review[cli]&quot;` to ensure theCLI requirements are included.## List of checks&lt;!-- prettier-ignore-start --&gt;&lt;!-- [[[cogimport itertoolsfrom repo_review.processor import collect_allfrom repo_review.checks import get_check_url, get_check_descriptionfrom repo_review.families import get_family_namecollected = collect_all()print()for family, grp in itertools.groupby(collected.checks.items(), key=lambda x: x[1].family):    print(f'### {get_family_name(collected.families, family)}')    for code, check in grp:        url = get_check_url(code, check)        link = f&quot;[`{code}`]({url})&quot; if url else f&quot;`{code}`&quot;        print(f&quot;- {link}: {get_check_description(code, check)}&quot;)    print()]]] --&gt;### General- [`PY001`](https://learn.scientific-python.org/development/guides/packaging-simple#PY001): Has a pyproject.toml- [`PY002`](https://learn.scientific-python.org/development/guides/packaging-simple#PY002): Has a README.(md|rst) file- [`PY003`](https://learn.scientific-python.org/development/guides/packaging-simple#PY003): Has a LICENSE* file- [`PY004`](https://learn.scientific-python.org/development/guides/packaging-simple#PY004): Has docs folder- [`PY005`](https://learn.scientific-python.org/development/guides/packaging-simple#PY005): Has tests folder- [`PY006`](https://learn.scientific-python.org/development/guides/style#PY006): Has pre-commit config- [`PY007`](https://learn.scientific-python.org/development/guides/tasks#PY007): Supports an easy task runner (nox or tox)### PyProject- [`PP002`](https://learn.scientific-python.org/development/guides/packaging-simple#PP002): Has a proper build-system table- [`PP003`](https://learn.scientific-python.org/development/guides/packaging-classic#PP003): Does not list wheel as a build-dep- [`PP301`](https://learn.scientific-python.org/development/guides/pytest#PP301): Has pytest in pyproject- [`PP302`](https://learn.scientific-python.org/development/guides/pytest#PP302): Sets a minimum pytest to at least 6- [`PP303`](https://learn.scientific-python.org/development/guides/pytest#PP303): Sets the test paths- [`PP304`](https://learn.scientific-python.org/development/guides/pytest#PP304): Sets the log level in pytest- [`PP305`](https://learn.scientific-python.org/development/guides/pytest#PP305): Specifies xfail_strict- [`PP306`](https://learn.scientific-python.org/development/guides/pytest#PP306): Specifies strict config- [`PP307`](https://learn.scientific-python.org/development/guides/pytest#PP307): Specifies strict markers- [`PP308`](https://learn.scientific-python.org/development/guides/pytest#PP308): Specifies useful pytest summary- [`PP309`](https://learn.scientific-python.org/development/guides/pytest#PP309): Filter warnings specified### Documentation- [`RTD100`](https://learn.scientific-python.org/development/guides/docs#RTD100): Uses ReadTheDocs (pyproject config)- [`RTD101`](https://learn.scientific-python.org/development/guides/docs#RTD101): You have to set the RTD version number to 2- [`RTD102`](https://learn.scientific-python.org/development/guides/docs#RTD102): You have to set the RTD build image- [`RTD103`](https://learn.scientific-python.org/development/guides/docs#RTD103): You have to set the RTD python version### GitHub Actions- [`GH100`](https://learn.scientific-python.org/development/guides/gha-basic#GH100): Has GitHub Actions config- [`GH101`](https://learn.scientific-python.org/development/guides/gha-basic#GH101): Has nice names- [`GH102`](https://learn.scientific-python.org/development/guides/gha-basic#GH102): Auto-cancel on repeated PRs- [`GH103`](https://learn.scientific-python.org/development/guides/gha-basic#GH103): At least one workflow with manual dispatch trigger- [`GH200`](https://learn.scientific-python.org/development/guides/gha-basic#GH200): Maintained by Dependabot- [`GH210`](https://learn.scientific-python.org/development/guides/gha-basic#GH210): Maintains the GitHub action versions with Dependabot- [`GH211`](https://learn.scientific-python.org/development/guides/gha-basic#GH211): Do not pin core actions as major versions### MyPy- [`MY100`](https://learn.scientific-python.org/development/guides/style#MY100): Uses MyPy (pyproject config)- [`MY101`](https://learn.scientific-python.org/development/guides/style#MY101): MyPy strict mode- `MY102`: MyPy show_error_codes deprecated- [`MY103`](https://learn.scientific-python.org/development/guides/style#MY103): MyPy warn unreachable- [`MY104`](https://learn.scientific-python.org/development/guides/style#MY104): MyPy enables ignore-without-code- [`MY105`](https://learn.scientific-python.org/development/guides/style#MY105): MyPy enables redundant-expr- [`MY106`](https://learn.scientific-python.org/development/guides/style#MY106): MyPy enables truthy-bool### Pre-commit- [`PC100`](https://learn.scientific-python.org/development/guides/style#PC100): Has pre-commit-hooks- [`PC110`](https://learn.scientific-python.org/development/guides/style#PC110): Uses black or ruff-format- [`PC111`](https://learn.scientific-python.org/development/guides/style#PC111): Uses blacken-docs- [`PC140`](https://learn.scientific-python.org/development/guides/style#PC140): Uses mypy- [`PC160`](https://learn.scientific-python.org/development/guides/style#PC160): Uses codespell- [`PC170`](https://learn.scientific-python.org/development/guides/style#PC170): Uses PyGrep hooks (only needed if RST present)- [`PC180`](https://learn.scientific-python.org/development/guides/style#PC180): Uses prettier- [`PC190`](https://learn.scientific-python.org/development/guides/style#PC190): Uses Ruff- [`PC191`](https://learn.scientific-python.org/development/guides/style#PC191): Ruff show fixes if fixes enabled- [`PC901`](https://learn.scientific-python.org/development/guides/style#PC901): Custom pre-commit CI message### Ruff- [`RF001`](https://learn.scientific-python.org/development/guides/style#RF001): Has Ruff config- [`RF002`](https://learn.scientific-python.org/development/guides/style#RF002): Target version must be set- [`RF003`](https://learn.scientific-python.org/development/guides/style#RF003): src directory specified if used- [`RF101`](https://learn.scientific-python.org/development/guides/style#RF101): Bugbear must be selected- [`RF102`](https://learn.scientific-python.org/development/guides/style#RF102): isort must be selected- [`RF103`](https://learn.scientific-python.org/development/guides/style#RF103): pyupgrade must be selected- `RF201`: Avoid using deprecated config settings- `RF202`: Use (new) lint config section&lt;!-- [[[end]]] --&gt;[repo-review]: https://repo-review.readthedocs.io[scientific-python development guide]: https://learn.scientific-python.org/development[scientific-python/cookie]: https://github.com/scientific-python/cookie[scikit-hep]: https://scikit-hep.org&lt;!-- prettier-ignore-end --&gt;</longdescription>
</pkgmetadata>