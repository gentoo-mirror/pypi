<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sugerversion = 0.2.2## Introduce 介绍suger is a sugar ~ Feature:1. python @decorator = Java @annotation / C# [Required(ErrorMessage = &quot;{0} is required&quot;)]2. python Stream = Java Stream / C# LinQ# How to use 如何使用## install 安装依赖```shellpip install suger```## Stream 流式计算 / from v0.2.0```pythonfrom suger.stream.Stream import Stream    def test_demo(self):        data = [1, 2, 3, 3, 4, 5]        result = Stream(data)\            .filter(lambda x: x % 2 == 0) \            .sort(reverse=True) \            .map(lambda x: x * 2) \            .toSet()        self.assertEqual(result, {8, 4})```## decorator 装饰器/注解### @string | __str__```python@stringclass MockData:    def __init__(self, age):        self.age = agedata = MockData(18)# Output = &quot;MockData(age=18)&quot;print(data)```### @csv | CSV ```python@csvclass MockData:    def __init__(self, name, age):        self.name = name        self.age = age        self.emptyTips = ''class Test(TestCase):    def test_csv(self):        data = MockData(name='neko', age=18)        # csv 输出文本        print(data.csv_str())        # csv 的格式        print(data.csv_format())# 示例中，有个字段为空# neko,18,# name,age,emptyTips```## 工具### FileUtils 文件工具```pythonfrom suger.common import FileUtils# 递归扫描, png 格式fileArray = FileUtils.scanDir('C:/Users/suger/Documents/WeChat Files', 'png')print(fileArray)```### ObjectUtils 对象工具```pythonfrom suger.common import ObjectUtils# trueObjectUtils.isNull(None)#  truedata = {}ObjectUtils.isNotNull(data)```## SSH```pythonfrom unittest import TestCasefrom suger.terminal import SSHclass TestSSH(TestCase):    def test_connect(self):        ssh = SSH(host='localhost', password='root')        ssh.connect()        output, err = ssh.execute_command('ls .')        print(output)```## Data Operator 数据操作### XML```pythonfrom unittest import TestCasefrom suger.data_operator import XmlUtils, ElementTreeclass TestXmlUtils(TestCase):    def test_find_element(self):        # 读取 XML 文件        xml = XmlUtils('example.xml')        # 查询节点        node = xml.find_element('.//book[@id=&quot;123&quot;]')        print(node.text)        # 修改节点值        xml.set_element_value('.//book[@id=&quot;123&quot;]/name', 'New Book Title')        # 添加节点        new_element = ElementTree.Element('book', {'id': '456'})        sub_element1 = ElementTree.SubElement(new_element, 'name')        sub_element1.text = 'New Book'        sub_element2 = ElementTree.SubElement(new_element, 'author')        sub_element2.text = 'New Author'        xml.add_element('.//books', new_element)        # 删除节点        xml.remove_element('.//book[@id=&quot;123&quot;]')        # 写入文件        xml.write_file('new_example.xml')```### Excel ```pythonfrom unittest import TestCasefrom suger.data_operator.ExcelUtils import ExcelUtilsclass TestExcelUtils(TestCase):    def test_serialize(self):        # 读取 Excel 文件        workbook = ExcelUtils.load_workbook(&quot;example.xlsx&quot;)        # 获取指定名称的 sheet 对象        sheet = ExcelUtils.get_sheet_by_name(workbook, &quot;Sheet1&quot;)        # 将 sheet 序列化为一个列表        data = ExcelUtils.serialize(sheet, skip_rows=1)        # 对列表进行操作        # 反序列化列表到指定的 sheet 对象        ExcelUtils.deserialize(sheet, data, skip_rows=1)        # 保存 Excel 文件        ExcelUtils.save_workbook(workbook, &quot;example.xlsx&quot;)```# my project init```shellgit init git remote add github https://github.com/SolarisNeko/neko233-python-suger.git git remote add origin https://gitee.com/SolarisNeko/neko233-python-suger.git```</longdescription>
</pkgmetadata>