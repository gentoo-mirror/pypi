<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;.github/wb-logo-lightbg.png#gh-light-mode-only&quot; width=&quot;600&quot; alt=&quot;Weights &amp; Biases&quot;/&gt;  &lt;img src=&quot;.github/wb-logo-darkbg.png#gh-dark-mode-only&quot; width=&quot;600&quot; alt=&quot;Weights &amp; Biases&quot;/&gt;&lt;/p&gt;# __Sweeps__: Hyperparameter Optimization EngineThis repo contains the routines that generate hyperparameter sweep suggestions inthe W&amp;B backend and [client](https://github.com/wandb/client) local controller.Issues are not enabled in this repository.__Please [open issues related to sweeps in the wandb client library github issues page](https://github.com/wandb/client/issues/new/choose).__### InstallationTo install:```pip install sweeps```### Examples__Get next run in a sweep.__Requires two arguments, `config`, the config that defines the sweep, and `runs`, the other runs in the sweep`config`:```python{    &quot;metric&quot;: {&quot;name&quot;: &quot;loss&quot;, &quot;goal&quot;: &quot;minimize&quot;},    &quot;method&quot;: &quot;bayes&quot;,    &quot;parameters&quot;: {        &quot;v1&quot;: {&quot;min&quot;: 1, &quot;max&quot;: 10},        &quot;v2&quot;: {&quot;min&quot;: 1.0, &quot;max&quot;: 10.0},    },}````runs`:```python[    SweepRun(        name=&quot;b&quot;,        state=RunState.finished,        history=[            {&quot;loss&quot;: 5.0},        ],        config={&quot;v1&quot;: {&quot;value&quot;: 7}, &quot;v2&quot;: {&quot;value&quot;: 6}},        summary_metrics={&quot;zloss&quot;: 1.2},    ),    SweepRun(        name=&quot;b2&quot;,        state=RunState.finished,        config={&quot;v1&quot;: {&quot;value&quot;: 1}, &quot;v2&quot;: {&quot;value&quot;: 8}},        summary_metrics={&quot;loss&quot;: 52.0},        history=[],    )]```Codepath:```pythonsuggestion = next_run(config, runs)````next_run`:* validates that sweep config conforms to the jsonschema in `config/schema.json`, if not, it raises a `ValidationError`* parses the config file and determines the method that it should use to find the next run (in this case `bayes_search_next_run`)* calls `bayes_search_next_run(config, runs)` and returns the suggested `SweepRun`__Return list of runs to stop in a sweep.__Requires two arguments, `config`, the config that defines the sweep, and `runs`, the other runs in the sweep`config`:```python{    &quot;method&quot;: &quot;grid&quot;,    &quot;metric&quot;: {&quot;name&quot;: &quot;loss&quot;, &quot;goal&quot;: &quot;minimize&quot;},    &quot;early_terminate&quot;: {        &quot;type&quot;: &quot;hyperband&quot;,        &quot;max_iter&quot;: 5,        &quot;eta&quot;: 2,        &quot;s&quot;: 2,    },    &quot;parameters&quot;: {&quot;a&quot;: {&quot;values&quot;: [1, 2, 3]}},}````runs`:```python[    SweepRun(        name=&quot;a&quot;,        state=RunState.finished,  # This is already stopped        history=[            {&quot;loss&quot;: 10},            {&quot;loss&quot;: 9},        ],    ),    SweepRun(        name=&quot;b&quot;,        state=RunState.running,  # This should be stopped        history=[            {&quot;loss&quot;: 10},            {&quot;loss&quot;: 10},        ],    ),    SweepRun(        name=&quot;c&quot;,        state=RunState.running,  # This passes band 1 but not band 2        history=[            {&quot;loss&quot;: 10},            {&quot;loss&quot;: 8},            {&quot;loss&quot;: 8},        ],    ),    SweepRun(        name=&quot;d&quot;,        state=RunState.running,        history=[            {&quot;loss&quot;: 10},            {&quot;loss&quot;: 7},            {&quot;loss&quot;: 7},        ],    ),    SweepRun(        name=&quot;e&quot;,        state=RunState.finished,        history=[            {&quot;loss&quot;: 10},            {&quot;loss&quot;: 6},            {&quot;loss&quot;: 6},        ],    ),]```Codepath:```pythonto_stop = stop_runs(config, runs)````stop_runs`:* validates that sweep config conforms to the jsonschema in `config/schema.json`, if not, it raises a `ValidationError`* parses the config file and determines the method that it should use to early terminate runs (in this case `hyperband_stop_runs`)* calls `hyperband_stop_runs(config, runs)` and returns the `SweepRun`s to stop### TestingTests are run using `tox`, the makefile defines convenience commands for short and long tests:```make test-shortmake test-full```### Contributing__Review the [Contributing Instructions](https://github.com/wandb/client/blob/master/CONTRIBUTING.md)__Install the development requirements:```pip install -r requirements.dev.txt```Install the pre-commit hooks:```pre-commit install .```Run formatting and tests:```make formatmake test```</longdescription>
</pkgmetadata>