<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django AuditlogThis project is totally based in [Django Auditlog](https://github.com/jazzband/django-auditlog/tree/master) library.# Instalationwith pip```shellpip install django-federation-auditlog```with pipenv```shellpipenv install django-federation-auditlog```with poetry```shellpoetry django-federation-auditlog```# Adding Django Federation Auditlog to your Django applicationTo use in your application, just add 'django-federation-auditlog' to your project’s INSTALLED_APPS setting and add 'AuditlogMiddleware' to your's MIDDLEWARE setting then run manage.py migrate to create/upgrade the necessary database structure.```pythonINSTALLED_APPS = [    # other apps    &quot;django_federation_auditlog&quot;,]```and ```pythonMIDDLEWARE = [    # others middlewares    &quot;django_federation_auditlog.middleware.AuditlogMiddleware&quot;,]```Then run```python manage.py migrate```# UsageAuditlog can automatically log changes to objects for you. This functionality is based on Django’s signals, but linking your models to Django Federation Auditlog is even easier using signals.```pythonfrom django.db import modelsfrom django_federation_auditlog.registry import auditlogclass MyModel(models.Model):    pass    # Model definition goes hereauditlog.register(MyModel)```It is recommended to place the register code (auditlog.register(MyModel)) at the bottom of your models.py file.## Including FieldsIf ```include_fields``` is specified, only the fields with the given names will be included in the generated log entries.For example, to include only the field ```name``` from class MyModel, use:```pythonfrom django.db import modelsfrom django_federation_auditlog.registry import auditlogclass MyModel(models.Model):    name = models.CharField()    description = models.CharField()    # Model definition goes hereauditlog.register(MyModel, include_fields=[&quot;name&quot;])```## Excluding fieldsFields that are excluded will not trigger saving a new log entry and will not show up in the recorded changes.If ```exclude_fields``` is specified the fields with the given names will not be included in the generated log entries.For example, to exclude the field ```description```, use:```pythonfrom django.db import modelsfrom django_federation_auditlog.registry import auditlogclass MyModel(models.Model):    name = models.CharField()    description = models.CharField()    # Model definition goes hereauditlog.register(MyModel, exclude_fields=[&quot;description&quot;])```</longdescription>
</pkgmetadata>