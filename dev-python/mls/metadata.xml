<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>MultiLingualString for Python (2k and 3k)=========================================.. image:: https://travis-ci.org/rembish/mls.svg?branch=master    :target: https://travis-ci.org/rembish/mls.. image:: https://coveralls.io/repos/rembish/mls/badge.svg    :target: https://coveralls.io/r/rembish/mls.. image:: https://pypip.in/download/mls/badge.svg    :target: https://pypi.python.org/pypi/mlsThis simple module implements simple unicode-like object, which can containmultiple language mutation of one string. Actually it's subclass of unicodetype (for python 2k) / string type (for py3k) with few helping methods,that allow you to translate your string to another languages.Here, I'll show you some usage examples:.. code-block:: python    from locale import setlocale, LC_ALL    from mls import mls    setlocale(LC_ALL, &quot;en_US.UTF-8&quot;)  # Our system locale will be US english    empty = mls()  # same as unicode, but    print(empty.language)  # with .language attribute containing &quot;en&quot;    s = mls(&quot;Hello, world!&quot;)    t = s.translate_to(&quot;ru_RU&quot;, u&quot;Здравствуй, мир!&quot;)  # generate new ru-mutation    print(t.language)  # =&gt; &quot;ru&quot;    print(t)  # =&gt; &quot;Здравствуй, мир!&quot;    x = mls(&quot;Ahoj&quot;, language=&quot;cs&quot;)  # czech mutation of &quot;Hi&quot;    x &lt;&lt;= &quot;Nazdar&quot;  # Change translation to another    print(repr(x))  # =&gt; &quot;cs'Nazdar'&quot;    a = mls({&quot;en&quot;: &quot;Bye&quot;, &quot;ru&quot;: u&quot;Пока&quot;, &quot;cs&quot;: u&quot;Čau&quot;})    print(a)  # =&gt; &quot;Bye&quot;    b = a.translate_to(&quot;ru&quot;)    print(b)  # =&gt; &quot;Пока&quot;    c = a &gt;&gt; &quot;cs&quot;    print(c)  # =&gt; &quot;Čau&quot;    v = mls(en=&quot;Vodka&quot;, pl=u&quot;Wódka&quot;, ru=u&quot;Водка&quot;)    print(repr(v &gt;&gt; &quot;pl&quot;))  # =&gt; &quot;pl'W\xf3dka'&quot;    print(repr(v &gt;&gt; &quot;fr&quot;))  # =&gt; &quot;fr'Vodka'&quot; (no translation to french)    # Also you can use any unicode/str methods    print(&quot;world&quot; in s)  # =&gt; True    print(s[:5])  # =&gt; &quot;Hello&quot;</longdescription>
</pkgmetadata>