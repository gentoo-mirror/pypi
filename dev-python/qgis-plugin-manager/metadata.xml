<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># QGIS-Plugin-Manager[![Tests](https://github.com/3liz/qgis-plugin-manager/actions/workflows/release.yml/badge.svg)](https://github.com/3liz/qgis-plugin-manager/actions/workflows/release.yml)[![PyPi version badge](https://badgen.net/pypi/v/qgis-plugin-manager)](https://pypi.org/project/qgis-plugin-manager/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/qgis-plugin-manager)](https://pypi.org/project/qgis-plugin-manager/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qgis-plugin-manager)](https://pypi.org/project/qgis-plugin-manager/)Mainly designed for QGIS Server plugins, but it works also for desktop.Not tested on Windows.The **CLI** API is not stable yet.## InstallationPython 3.7 **minimum**, you can make a Python venv if needed.```bashpython3 --version``````bashpip3 install qgis-plugin-managerpython3 -m pip install qgis-plugin-manager```## Environment variablesQGIS-Plugin-Manager will take care of following variables :* `QGIS_PLUGIN_MANAGER_SOURCES_FILE` for storing a path to the `sources.list` otherwise, the current folder will be used.* `QGIS_PLUGIN_MANAGER_CACHE_DIR` for storing all XML files downloaded otherwise, the current folder will be used `.cache_qgis_plugin_manager`* `QGIS_PLUGIN_MANAGER_SKIP_SOURCES_FILE`, boolean when we do not need a `sources.list` file, for instance to list plugins only* `QGIS_PLUGIN_MANAGER_RESTART_FILE`, path where the file must be created if QGIS server needs to be restarted.  Read [the documentation](README.md#notify-upstream-if-a-restart-is-needed).* `QGIS_PLUGINPATH` for storing plugins, from [QGIS Server documentation](https://docs.qgis.org/latest/en/docs/server_manual/config.html#environment-variables)* `PYTHONPATH` for importing QGIS libraries## Utilisation**Either** you need to go in the directory where you are storing plugins, **or** you can use the environment variable `QGIS_PLUGINPATH`.You can read the [documentation](https://docs.qgis.org/3.22/en/docs/server_manual/config.html#environment-variables)on QGIS Server about this variable.```bashcd /path/where/you/have/plugins# usually on a servercd /usr/lib/qgis/plugins# on unix desktop with the default QGIS profilecd /home/${USER}/.local/share/QGIS/QGIS3/profiles/default/python/plugins# orexport QGIS_PLUGINPATH=/path/where/you/have/plugins``````bash$ qgis-plugin-manager --helpusage: qgis-plugin-manager [-h] [-v] {init,list,remote,remove,update,upgrade,cache,search,install} ...options:  -h, --help            show this help message and exit  -v, --version         show program's version number and exitcommands:  qgis-plugin-manager command  {init,list,remote,remove,update,upgrade,cache,search,install}    init                Create the `sources.list` with plugins.qgis.org as remote    list                List all plugins in the directory    remote              List all remote server    remove              Remove a plugin by its name    update              Update all index files    upgrade             Upgrade all plugins installed    cache               Look for a plugin in the cache    search              Search for plugins    install             Install a plugin```### InitTo create the first `sources.list` in the directory with at least the default repository https://plugins.qgis.org :```bash$ qgis-plugin-manager init$ cat sources.list https://plugins.qgis.org/plugins/plugins.xml?qgis=3.19```You can have one or many servers, one on each line.### ListList all plugins installed :```bash$ qgis-plugin-manager listQGIS server version 3.19.0List all plugins in /home/etienne/dev/qgis/server_plugin------------------------------------------------------------------------------------------------------------------------------------|  Name            |  Version  | Flags           |  QGIS min  |  QGIS max  |  Author         | Folder owner     | Action âš          |------------------------------------------------------------------------------------------------------------------------------------|Lizmap            |master     |                 |3.4         |3.99        |3Liz             | root : 0o755     | Unkown version   ||wfsOutputExtension|1.5.3      |Server           |3.0         |            |3Liz             | etienne : 0o755  |                  ||QuickOSM          |1.14.0     |Processing       |3.4         |3.99        |Etienne Trimaille| etienne : 0o755  | Upgrade to 1.16.0||cadastre          |1.6.2      |Server,Processing|3.0         |3.99        |3liz             | www-data : 0o755 |                  ||atlasprint        |3.2.2      |Server           |3.10        |            |3Liz             | www-data : 0o755 |                  |------------------------------------------------------------------------------------------------------------------```#### Install needed plugins only, mainly on QGIS server**Important note**, install **only** plugins you need **you**. On QGIS **desktop**, plugins can slow down your computer.On QGIS **server**, plugins are like **hooks** into QGIS server, they can alter input or output of QGIS server.They can produce **unexpected** result if you don't know how the plugin works. Please refer to their respective documentationor the application that needs QGIS server plugins (for instance,[plugins for Lizmap Web Client](https://docs.lizmap.com/current/en/install/pre_requirements.html#qgis-server-plugins))### Remote```bash$ qgis-plugin-manager remoteList of remotes :https://plugins.qgis.org/plugins/plugins.xml?qgis=3.22$ cat sources.list https://plugins.qgis.org/plugins/plugins.xml?qgis=[VERSION]````[VERSION]` is a token in the `sources.list` file to be replaced by the QGIS version, for instance `3.22`.If QGIS is upgraded, the XML file will be updated as well.You don't have to set the TOKEN for all URL : `https://docs.3liz.org/plugins.xml` is valid.#### Basic authenticationIt's possible to add a login and password in the remote URL, with `username` and `password` in the query string :```bashhttps://docs.3liz.org/private/repo.xml?username=login&amp;password=pass```Every URL is parsed, and if some credentials are found, the URL is cleaned and the request is done using thebasic authentication.### UpdateTo fetch the XML files from each repository :```bash$ qgis-plugin-manager updateDownloading https://plugins.qgis.org/plugins/plugins.xml?qgis=3.19...Ok$ ls .cache_qgis_plugin_manager/https-plugins-qgis-org-plugins-plugins-xml-qgis-3-19.xml```### CacheCheck if a plugin is available :```bash$ qgis-plugin-manager cache atlasprintPlugin atlasprint : v3.2.2 available```### SearchLook for plugins according to tags and title :```bash$ qgis-plugin-manager search datavizData PlotlyQSoccer```### InstallPlugins are case-sensitive and might have spaces in its name :```bash$ qgis-plugin-manager install dataplotlyPlugin dataplotly latest not found.Do you mean maybe 'Data Plotly' ?$ qgis-plugin-manager install 'Data Plotly'```Install the latest version :```bash$ qgis-plugin-manager install QuickOSMInstallation QuickOSM latestOk QuickOSM.1.16.0.zip```or a specific version :```bash$ qgis-plugin-manager install QuickOSM==1.14.0Installation QuickOSM 1.14.0Ok QuickOSM.1.14.0.zip```You can use `--force` or `-f` to force the installation even if the plugin with the same version is already installed.#### Enable a pluginOn QGIS **server**, there isn't any setting to enable/disable a plugin.However, on **desktop**, you still need to enable a plugin, the equivalent of the checkbox in the QGIS graphical pluginmanager.For instance, with the default profile, usually located in :```bash/home/${USER}/.local/share/QGIS/QGIS3/profiles/default/QGIS/```you need to edit the `QGIS.ini` file with :```ini[PythonPlugins]nameOfThePlugin=true```### UpgradeUpgrade all plugins installed :```bash$ qgis-plugin-manager upgrade```You can use `--force` or `-f` to force the upgrade for all plugins despite their version.*Note*, like APT, `update` is needed before to refresh the cache.#### Ignore plugins from the upgradeSome plugins might be installed by hand, without being installed with a remote. This command will try to upgrade**all valid** plugins found in the directory. However, the command will fail because the plugin has been installed without a remote.It's possible to ignore such plugin by adding a file `ignorePlugins.list`, in your plugins' folder,with a list of **plugin name** on each line. The `upgrade` will not try to upgrade them.### RemoveIt's possible to use `rm -rf folder_dir` but you can also remove by the plugin name.It will take care of the `QGIS_PLUGINPATH` environment variable.```bash$ qgis-plugin-manager remove QuickosmPlugin name 'Quickosm' not foundDo you mean maybe 'QuickOSM' ?$ qgis-plugin-manager remove QuickOSMPlugin QuickOSM removedTip : Do not forget to restart QGIS Server to reload plugins ðŸ˜Ž```### Notify upstream if a restart is neededWhen a plugin is installed or removed and if the environment variable `QGIS_PLUGIN_MANAGER_RESTART_FILE` is set,an empty file will be created or touched. It can notify you if QGIS Server needs to be restarted for instance.Note that you must manually remove this file.## Run tests```bashexport PYTHONPATH=/home/etienne/dev/app/qgis-master/share/qgis/python/:/usr/lib/python3/dist-packages/cd testpython3 -m unittestflake8```</longdescription>
</pkgmetadata>