<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># vectorplot**vectorplot** é um pacote simples e fácil para plotar vetores no espaço bidimensional e tridimensional.## Dependências**Python 3.6** ou posteriorPacote **numpy**Pacote **matplotlib.pyplot**## Começando o usoVocê vai precisar instalar o pacote **vectorplot**, para isso basta executar:```pip install vectorplot```## Funções* `plot2d([&lt;lista de componentes de vetores&gt;],[&lt;lista de cores para cada vetor],[&lt;limites da plotage 2D&gt;])` - Plota vetores a partir de componentes no espaço bidimensional```Ex: pip install vectorplotimport numpy as npfrom vectorplot import vpu_laranja='#FF9A13'v_azul='#1190FF'r_vermelho='#FF0000'u=[1,2]v=[2,1]u=np.array(u)v=np.array(v)r=u+vvp.plot2d([u,v,r], [u_laranja,v_azul,r_vermelho], [-3,3,-3,3])```* `plot2d([&lt;Lista de tuplas de coordenadas&gt;],[&lt;lista de cores para cada vetor],[&lt;limites da plotage 2D&gt;])` - Plota vetores a partir de tuplas de coordenadas de pontos no espaço bidimensional```Ex: pip install vectorplotfrom vectorplot import vp#As tuplas devem conter coordenadas iniciais (xi,yi) e finais (xf,yf) por onde passa o vetor u=(1,1,4,4)v=(-1,2,5,6)u_laranja='#FF9A13'v_azul='#1190FF'vp.plot2d([u,v], [u_laranja,v_azul], [-6,6,-6,6])```* `plot3d([&lt;lista de componentes de vetores&gt;],[&lt;lista de cores para cada vetor],[&lt;limites da plotage 3D&gt;])` - Plota vetores a partir de componentes no espaço tridimensional```Ex: pip install vectorplotimport numpy as npfrom vectorplot import vpu_laranja='#FF9A13'v_azul='#1190FF'r_vermelho='#FF0000'u=[-1,1,2]v=[2,3,2]u=np.array(u)v=np.array(v)r=u+vvp.plot3d([u,v,r],[u_laranja,v_azul,r_vermelho],[-4,4,-4,4,-4,4])```* `plot3d([&lt;Lista de tuplas de coordenadas&gt;],[&lt;lista de cores para cada vetor],[&lt;limites da plotage 3D&gt;])` - Plota vetores a partir de tuplas de coordenadas de pontos no espaço tridimensional```Ex: pip install vectorplotimport numpy as npfrom vectorplot import vpu_laranja='#FF9A13'v_azul='#1190FF'u=(-1,1,2,2)v=(2,3,4,5]vp.plot3d([u,v],[u_laranja,v_azul],[-5,5,-5,5,-5,5])```* `equivalent2d([&lt;Lista de componentes de vetores&gt;])` - Verifica se uma lista de vetores 2d gerada a partir de componentes são equivalentes```Ex: pip install vectorplotfrom vectorplot import vpu=[2,2]v=[2,2]print(vp.isequivalent([u,v]))```* `equivalent2d([&lt;Lista de tuplas de coordenadas&gt;])` - Verifica se uma lista de vetores 2d gerada a partir de tuplas de coordenadas de pontos são equivalentes```Ex: pip install vectorplotfrom vectorplot import vpu=(1,1,4,4)v=(-1,2,5,6)print(vp.isequivalent([u,v]))```* `equivalent3d([&lt;Lista de componentes de vetores&gt;])` - Verifica se uma lista de vetores 3d gerada a partir de componentes são equivalentes```Ex: pip install vectorplotfrom vectorplot import vpu=[2,2,2]v=[2,2,2]print(vp.isequivalent([u,v]))```* `equivalent3d([&lt;Lista de tuplas de coordenadas&gt;])` - Verifica se uma lista de vetores 3d gerada a partir de tuplas de coordenadas de pontos são equivalentes```Ex: pip install vectorplotfrom vectorplot import vpu=(1,1,1,4,4)v=(0,0,0,3,3,3)print(vp.isequivalent([u,v]))```* `resultant_module(&lt;módulo do primeiro vetor&gt;,&lt;módulo do segundo vetor&gt;,&lt;ângulo formando entre vetores)` - Calcula o módulo da resultante gerado a partir de um ângulo entre dois vetores```Ex: pip install vectorplotfrom vectorplot import vpprint(vp.resultant_module_angle(2,2,60))```* `vector_module(&lt;vetor&gt;)` - Calcula o módulo do vetor a partir dos seus componentes```Ex: pip install vectorplotfrom vectorplot import vpv=[2,2,1]print(vp.vector_module(v))v=[1,1]print(vp.vector_module(v))```* `angle_vectors(vector 1, vector 2)` - Calcula o angulo entre dois vetores```Ex: pip install vectorplotfrom vectorplot import vpv=[1,0]u=[0,1]print(vp.angle_vectors(v,u))```</longdescription>
</pkgmetadata>