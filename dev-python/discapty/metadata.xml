<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DisCapTy![DisCapTy's Logo](.github/logo.png#gh-dark-mode-only)![DisCapTy's Logo](.github/logo-dark.png#gh-light-mode-only)DisCapTy is a highly type hinted Python module to generate Captcha images without struggling your mind on how to make your own. Everyone can use it!**Documentation:** &lt;https://discapty.readthedocs.io/&gt;&lt;div align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/DisCapTy/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/discapty?style=flat-square&quot; alt=&quot;DisCapTy's Version&quot; /&gt;        &lt;img src=&quot;https://img.shields.io/pypi/pyversions/discapty?style=flat-square&quot; alt=&quot;Python Version Required&quot; /&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/discapty?color=blue&amp;style=flat-square&quot; alt=&quot;DisCapTy's download&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://discapty.readthedocs.io/en/latest/?badge=latest&quot;&gt;        &lt;img src=&quot;https://readthedocs.org/projects/discapty/badge/?version=latest&amp;style=flat-square&quot; alt=&quot;Documentation Status&quot; /&gt;    &lt;/a&gt;&lt;/div&gt;## InstallingDisCapTy is available on PyPi!```shpip3 install discapty```To use DisCapTy, you need a Python version equal or greater to `3.7` and below `3.11`.## Clone &amp; Test the projectThis project is dependant of [Poetry](https://python-poetry.org), a dependency management tool. You are most likely going to require this tool to correctly interact with the project &amp; its dependencies, check out [Poetry's documentation](https://python-poetry.org/docs) for how to install it.To clone the repository: `git clone https://github.com/Predeactor/DisCapTy.git`To install dependencies: `poetry install`To run tests: `poetry run python -m unittest`## Creating CaptchaFor DisCapTy, a Captcha is simply a code with any possible objects that can be returned, for example, it is one code (Like &quot;12345&quot;) with an image (Usually a `PIL.Image.Image` object)This is because DisCapTy uses the concept of generators that are used to generate a captcha from a given code, and it can return anything.DisCapTy comes with 3 builtin generators:- TextGenerator : Text based captcha- WheezyGenerator : Image based captcha- ImageGenerator : Image based captcha### Creating Captcha manually```pyimport discaptydef generate_a_captcha(initial_input: str) -&gt; discapty.Captcha:    # This generator returns an obfuscated text.    captcha_for_user = discapty.TextGenerator().generate(initial_input)    # Create a Captcha object, the first argument is the clear code, the second is the obfuscated code. Anything goes.    return discapty.Captcha(initial_input, captcha_for_user)# Generate your Captcha.captcha = generate_a_captcha(&quot;12345&quot;)# Show the obfuscated code. See https://discapty.readthedocs.io for more information on this object.show_captcha_to_user(captcha.captcha)```### Checking user's input```pyimport discapty# Generate your Captcha.captcha: discapty.Captcha = generate_a_captcha(&quot;12345&quot;)# This is your user's input hereuser_input: str = '12345'if captcha.check(user_input) is True:    # The user input is correct    print(&quot;Correct!&quot;)else:    # The user input is incorrect    print(&quot;Incorrect!&quot;)```What's great with the `.check` method is that you can specify if you need to remove space in the user's input and/or check casing.Creating Captcha manually is not a recommended way, because DisCapTy comes with its opinionated challenge runner &amp; is inefficient anyway.### Create a Challenge```pyimport discaptychallenge = discapty.Challenge(discapty.TextGenerator(), retries=3)captcha = challenge.begin()# We cannot provide typehint here, `captcha` is a `typing.Any` and cannot help you, it'll be your# job to know what you'll get as a captcha.send_captcha_to_user(captcha)user_input: str = get_user_input()is_correct: bool = challenge.check(user_input)# If the user's input is correct, the challenge ends, if not, `challenge.attempted_tries` will get# +1, and if it is greater than the retries that has been set, then an error is raised when using# `.check````Please see the [documentation](https://discapty.readthedocs.io/) for more information on how the library work.## ContactYou can join my Discord server for any help: &lt;https://discord.gg/aPVupKAxxP&gt;DisCapTy is an open-source project distributed under the MIT license:![PyPI - License](https://img.shields.io/pypi/l/discapty?style=flat-square)DisCapTy uses the [Roboto](https://fonts.google.com/specimen/Roboto) font as default font.[This font](https://fonts.google.com/specimen/Roboto) is licensed under [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0).</longdescription>
</pkgmetadata>