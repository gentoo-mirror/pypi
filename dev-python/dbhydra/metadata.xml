<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dbhydraData science friendly ORM (Object Relational Mapping) library combining Python, Pandas, and various SQL dialectsFor full documentation see official [documentation](http://app.forloop.ai/dbhydra/documentation) - currently unavailable but we're working on it!## InstallationUse the package manager [pip](https://pip.pypa.io/en/stable/) to install dbhydra.```bashpip install dbhydra```## Usage```pythonimport dbhydra.dbhydra_core as dhdb1=dh.db()table1 = dh.Table(db1,&quot;test&quot;,[&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;,&quot;test4&quot;],[&quot;int&quot;,&quot;int&quot;,&quot;int&quot;,&quot;int&quot;])#table1.drop()#table1.create()#rows=[[1,2,3,4],[5,4,7,9]]#table1.insert(rows)list1=table1.select(&quot;SELECT * FROM test&quot;)print(list1)#list2=table1.select_all()#print(list2)#table1.drop()table1.export_to_xlsx()tables=db1.get_all_tables()table_dict=db1.generate_table_dict()print(tables)columns=table_dict['test'].get_all_columns()types=table_dict['test'].get_all_types()print(columns,types)table_test=dh.Table.init_all_columns(db1,&quot;test&quot;)print(table_test.columns)table2 = dh.Table(db1,&quot;test_new&quot;,[&quot;id&quot;,&quot;test2&quot;],[&quot;int&quot;,&quot;nvarchar(20)&quot;])#table2.create()#table2.drop()```## Current scopeAims: Easy integration with Pandas, SQL SERVER/MySQL database, and exports/imports to/from excel/CSV formatDone: Table functions (Create, Drop, Select, Update, Insert, and Delete) should be working fineTodo: Group by, Order by, Where, Linking of FK, Customizable PK,...## ContributingPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.## License[MIT](https://choosealicense.com/licenses/mit/)</longdescription>
</pkgmetadata>