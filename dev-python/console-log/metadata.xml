<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Copyright (c) 2018 Beto DealmeidaPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.Description: console_log        ===========                This module provides a WSGI middleware that allows you to log to the        browser console from Python:                .. code::                    import logging                    from flask import Flask                    from console_log import ConsoleLog                    console = logging.getLogger('console')            console.setLevel(logging.DEBUG)                    app = Flask(__name__)                    @app.route('/')            def hello():                logger.error('Error logged from Python')                logger.warning('Warning logged from Python')                logger.info('Info logged from Python')                logger.debug('Debug logged from Python')                logger.debug({'foo': ['bar', 'baz']})                return &quot;Hello World!&quot;                    app.wsgi_app = ConsoleLog(app.wsgi_app, console)                The logged messages will then show up in the browser console.                        How it works        ============                The new WSGI app does two things:                1. Creates a websocket backchannel.        2. Injects Javascript code into HTML responses, fetching data from the           websocket channel and logging them to console.        Platform: UNKNOWNClassifier: License :: OSI Approved :: MIT LicenseClassifier: Programming Language :: PythonClassifier: Programming Language :: Python :: 2.6Classifier: Programming Language :: Python :: 2.7Classifier: Programming Language :: Python :: 3Classifier: Programming Language :: Python :: 3.3Classifier: Programming Language :: Python :: 3.4Classifier: Programming Language :: Python :: 3.5Classifier: Programming Language :: Python :: 3.6Classifier: Programming Language :: Python :: Implementation :: CPythonClassifier: Programming Language :: Python :: Implementation :: PyPyProvides-Extra: devProvides-Extra: examples</longdescription>
</pkgmetadata>