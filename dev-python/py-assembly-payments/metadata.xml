<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-assembly-paymentsUnofficial Python client for the Assembly Payments API## ðŸš§ In Development ðŸš§This package is still undergoing development and is pre-v1. It currently implements around 30% of the Assembly Payments API. You can keep up with the [coverage here](https://github.com/divipayhq/py-assembly-payments/projects/1)## Installation```pip install py-assembly-payments```## Example```pythonfrom assembly_payments.client import AssemblyClientclient = AssemblyClient(client_id=CLIENT_ID, client_secret=CLIENT_SECRET)# List Usersclient.users.list()# Create Useruser = client.users.create(    id=&quot;your-user-id&quot;,    first_name=&quot;Jane&quot;,    last_name=&quot;Doe&quot;,    email=&quot;jane.doe@example.com&quot;)# Easy object accessprint(user.first_name + user.last_name) # Jane Doe```## CredentialsYou can set your auth credentials in two ways:1. Through arguments to the client:```pythonAssemblyClient(client_id=CLIENT_ID, client_secret=CLIENT_SECRET, scope=CLIENT_SCOPE, grant_type=&quot;client_credentials&quot;)```2. Through environment variable which `AssemblyClient` will pick up from:```bashexport ASSEMBLY_CLIENT_ID=my-client-idexport ASSEMBLY_CLIENT_SECRET=my-client-secretexport ASSEMBLY_SCOPE=my-scope````grant_type` defaults to `&quot;client_credentials&quot;` and can only be controlled by an argument to `AssemblyClient`.</longdescription>
</pkgmetadata>