<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pycookiecheat[![master branch buildstatus](https://github.com/n8henrie/pycookiecheat/actions/workflows/python-package.yml/badge.svg?branch=master)](https://github.com/n8henrie/pycookiecheat/actions/workflows/python-package.yml)Borrow cookies from your browser's authenticated session for use in Pythonscripts.-   Free software: MIT-   Documentation: http://n8h.me/HufI1w## Installation**NB:** Use `pip` and `python` instead of `pip3` and `python3` if you're stillon Python 2 and using pycookiecheat &lt; v0.4.0. pycookiecheat &gt;= v0.4.0 requiresPython 3.5+, and may soon go to 3.6+.- `python3 -m pip install pycookiecheat`### Installation notes regarding alternative keyrings on LinuxSee [#12](https://github.com/n8henrie/pycookiecheat/issues/12). Chrome is nowusing a few different keyrings to store your `Chrome Safe Storage` password,instead of a hard-coded password. Pycookiecheat doesn't work with most of theseso far, and to be honest my enthusiasm for adding support for ones I don't useis limited. However, users have contributed code that seems to work with someof the recent Ubuntu desktops. To get it working, you may have to `sudo apt-getinstall libsecret-1-dev python-gi python3-gi`, and if you're installing into avirtualenv (highly recommended), you need to use the `--system-site-packages`flag to get access to the necessary libraries.Alternatively, some users have suggested running Chrome with the`--password-store=basic` or `--use-mock-keychain` flags.### Development Setup1. `git clone https://github.com/n8henrie/pycookiecheat.git`1. `cd pycookiecheat`1. `python3 -m venv .venv`1. `./.venv/bin/python -m pip install -e .[dev]`## Usage```pythonfrom pycookiecheat import chrome_cookiesimport requestsurl = 'http://example.com/fake.html'# Uses Chrome's default cookies filepath by defaultcookies = chrome_cookies(url)r = requests.get(url, cookies=cookies)```Use the `cookie_file` keyword-argument to specify a different filepath for thecookies-file: `chrome_cookies(url, cookie_file='/abspath/to/cookies')`Keep in mind that pycookiecheat defaults to looking for cookies forChromium, not Google Chrome, so if you're using the latter, you'll need tomanually specify something like`&quot;/home/username/.config/google-chrome/Default/Cookies&quot;` as your `cookie_file`.## Features- Returns decrypted cookies from Google Chrome, Brave, or Slack, on OSX or  Linux.- Optionally outputs cookies to file (thanks to Muntashir Al-Islam!)## FAQ / Troubleshooting### How about Windows?I don't use Windows or have a PC, so I won't be adding support myself. Feelfree to make a PR :)### I get an installation error with the `cryptography` module on OS X(pycookiecheat &lt;v0.4.0)If you're getting [thiserror](https://github.com/n8henrie/pycookiecheat/pull/11#issuecomment-221918807)and using Homebrew, then you need to follow the instructions for [Buildingcryptography on OSX](https://cryptography.io/en/latest/installation/?highlight=cflags#building-cryptography-on-os-x)and `export LDFLAGS=&quot;-L$(brew --prefix openssl)/lib&quot; CFLAGS=&quot;-I$(brew --prefixopenssl)/include&quot;` and try again.### I get an installation error with the `cryptography` module on LinuxPlease check the official cryptography docs. On some systems (e.g. Ubuntu), youmay need to do something like `sudo apt-get install build-essential libssl-devlibffi-dev python-dev` prior to installing with `pip`.### How can I use pycookiecheat on KDE-based Linux distros?On KDE, Chrome defaults to using KDE's own keyring, KWallet. For pycookiecheat to support KWallet the [`dbus-python`](https://pypi.org/project/dbus-python/) package must be installed.### How do I install the dev branch with pip?- `python -m pip install git+https://github.com/n8henrie/pycookiecheat@dev`## Buy Me a Coffee[☕️](https://n8henrie.com/donate)# [Changelog](https://keepachangelog.com)## v0.5.0 :: 20230324- Add support for Brave thanks to @chrisgavin!- Add support for Slack thanks to @hraftery!- Migrate config to pyproject.toml alone- Minor cleanup to codebase and tests## v0.4.7 :: 20210826- No noteworthy API changes, hence the bugfix version bump, but some major  infrastructure and testing updates:    - Now uses GitHub Actions instead of Travis    - Now uses Playwright for testing, to actually open a Chromium instance and    use a real `Cookies` database    - PEP517    - black- Now requires python &gt;= 3.7    - This is largely due to requiremets of Playwright:      https://pypi.org/project/playwright/, which is only a *test* dependency    - Because I can't *test* with &lt;=3.6, I'm not listing it as compatible,      though it *probably* will still work- Migrate to pyproject.toml## v0.4.6 :: 2019111- Try to open Chrome database in read-only mode to avoid db locked errors (#29)## v0.4.5 :: 20191007- db6ac6d Go back to using cryptography due to  https://www.cvedetails.com/cve/CVE-2013-7459/- c70ad51 Allow users to override password (thanks @alairock)## v0.4.4 :: 20180706- Optionally outputs cookies to a file compatible with cURL (thanks to  Muntashir Al-Islam!)## v0.4.3 :: 20170627- Consistently use Chrome as default across platforms, allow user to specify  Chromium as desired (thanks @jtbraun)## v0.4.0 :: 20170504- Remove compatibility for Python &lt;3.5- Add type hints- Refactor for smaller functions- Expand docstrings- Revert from `cryptography` back to `PyCrypto` and `hashlib` for easier  installation.## v0.3.4 :: 20170414- Add support for new Ubuntu keyring / libsecret  - See &lt;https://github.com/n8henrie/pycookiecheat/issues/12&gt; for details  - Many thanks to @stat1c1c3au and @trideceth12 for contributions## 0.3.0- Use [`cryptography`](https://cryptography.io/en/latest/) instead of  `pycrypto` (thanks to [Taik](https://github.com/Taik)!)  - Seems to be [significantly    faster](https://github.com/n8henrie/pycookiecheat/pull/11#issuecomment-221950400)  - Works with PyPy &gt;= 2.6.0 (no support for PyPy3 yet)## 0.2.0- Fix domain and subdomain matching- Make SQL query more secure by avoiding string formatting- Many thanks to [Brandon Rhodes](https://github.com/brandon-rhodes) for 24c4234 !## 0.1.10- Read version to separate file so it can be imported in setup.py- Bugfix for python2 on linux## 0.1.9- Bugfix for python2 on linux## 0.1.8- Python2 support (thanks [dani14-96](https://github.com/dani14-96))## 0.1.7- Configurable cookies file (thanks [ankostis](https://github.com/ankostis))## 0.1.6- OSError instead of Exception for wrong OS.- Moved testing requirements to tox and travis-ci files.## 0.1.5- Updated to work better with PyPI's lack of markdown support- Working on tox and travis-ci integration- Added a few basic tests that should pass if one has Chrome installed and has visited my site (n8henrie.com)- Added sys.exit(0) if cookie_file not found so tests pass on travis-ci.## 0.1.0 (2015-02-25)- First release on PyPI.## Prior changelog from Gist- 20150221 v2.0.1: Now should find cookies for base domain and all subs.- 20140518 v2.0: Now works with Chrome's new encrypted cookies.</longdescription>
</pkgmetadata>