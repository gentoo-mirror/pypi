<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-onedrive---------------**Deprecation Warning:** this module is completely obsoleted by official`onedrive-sdk-python &lt;https://github.com/OneDrive/onedrive-sdk-python&gt;`__,for all new projects please use that instead.Python and command-line interface for `old SkyDrive/OneDrive RESTAPI &lt;http://msdn.microsoft.com/library/dn659752.aspx&gt;`__.This module allows to access data on Microsoft OneDrive cloud storagefrom python code, abstracting authentication, http requests and responseprocessing to a simple python methods.Module also comes with command-line tool to conveniently browse andmanipulate OneDrive contents from interactive shell or scripts.Thanks to AntonioChen for implementing windows and unicode support (see`#3 &lt;https://github.com/mk-fg/python-onedrive/pull/3&gt;`__).Service was called SkyDrive prior to 2014-02-19, when it got renamed toOneDrive. This package similarly renamed from python-skydrive topython-onedrive.As mentioned, only old &quot;apis.live.net/v5.0&quot; (SkyDrive) API (and BITS APIfor large files) are used here. Since 24 Feb 2015, there is new&quot;api.onedrive.com/v1.0&quot; API, which has an official python sdk -`onedrive-sdk-python &lt;https://github.com/OneDrive/onedrive-sdk-python&gt;`__.Be sure to read &quot;Known Issues and Limitations&quot; section below before use,to avoid any potentially nasty surprises.Command-line usage------------------OneDrive API requires to register an application in`DevCenter &lt;https://account.live.com/developers/applications/create&gt;`__,providing you with client\_id and client\_secret strings, used forauthentication.I can't provide some static ones because according to LiveConnect ToS&quot;You are solely and entirely responsible for all uses of Live Connectoccurring under your Client ID&quot; (also see notes below), and I can't justvouch for every module/tool user like that.App registration in DevCenter is really straightforward and shouldn'ttake more than a few clicks. Be sure to check the &quot;mobile client app&quot;box under &quot;API settings&quot;.After that, create &quot;~/.lcrc&quot; file(`YAML &lt;https://en.wikipedia.org/wiki/YAML&gt;`__) with the contents likethese:::    client:      id: '00000000620A3E4A'      secret: gndrjIOLWYLkOPl0QhWIliQcg-MG1SRN(use &quot;id&quot; and &quot;secret&quot; acquired in the app registration step above,*indent these lines with spaces* - indenting with tabs is not allowed inYAML; it might also be worth quoting &quot;id&quot; value, as shown above)Then you need to perform OAuth 2.0 authorization dance by running the``onedrive-cli auth`` command and following printed instructions (visitprinted URL, authorize, click &quot;Allow&quot;, paste last URL back intoterminal). This will get you authorization\_code (which will be storedin ~/.lcrc) to use the API as a user you've logged-in as there. Repeatthis step to authorize with a different account, if necessary.Then just type whatever commands you want to (and don't forget``onedrive-cli --help``):::    % onedrive-cli tree    OneDrive:        Documents:            README.txt: file        Pics:            image1.jpg: photo            image2.jpg: photo    % onedrive-cli get Pics/image1.jpg downloaded_image1.jpg    % onedrive-cli put downloaded_image1.jpg    % onedrive-cli ls    - Documents    - Pics    - downloaded_image1.jpg    % onedrive-cli quota    free: 24.9G    quota: 25.0G    % onedrive-cli link -t embed downloaded_image1.jpg    embed_html: &lt;iframe src=&quot;https://onedrive.live.com/embed?cid=...&quot;        width=&quot;98&quot; height=&quot;120&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;    % onedrive-cli rm downloaded_image1.jpg    % onedrive-cli rm -h    usage: onedrive-cli rm [-h] object [object ...]    positional arguments:      object      Object(s) to remove.    optional arguments:      -h, --help  show this help message and exit    % onedrive-cli -h    ...Most commands should be self-descriptive, but use &quot;--help&quot; when theyaren't.Note that objects specified on the command-line are implicitly resolvedas human-readable paths (which are basically metadata) unless they looklike an id. This might be undesirable from performance perspective(extra requests) and might be undesirable if non-unique &quot;name&quot;attributes of objects in the same parent folder are used. Use &quot;-p&quot; or&quot;-i&quot; (&quot;--path&quot; / &quot;--id&quot;) switches to control this explicitly. SeeLiveConnect docs or notes section below for more info on how these work.If you get HTTP error 400 right after or during &quot;auth&quot; command, read`this comment on#4 &lt;https://github.com/mk-fg/python-onedrive/issues/4#issuecomment-18233153&gt;`__(maybe with some context).And if stuff still doesn't work, please check the &quot;Known Issues andLimitations&quot; section right below before reporting it, as some of thesemight be known and essentially unfixable.Known Issues and Limitations-----------------------------  Since 2015-02-24, there is a new `&quot;api.onedrive.com/v1.0&quot;   API &lt;https://onedrive.github.io/&gt;`__, which allows to do a lot more   than the old one.   This is not supported here in any way, but since 2015-10-09 is   supported by the official   `onedrive-sdk-python &lt;https://github.com/OneDrive/onedrive-sdk-python&gt;`__   module, which should probably be used for all new projects instead of   this one.-  Uploading of files larger than ~100 MiB via single POST/PUT request   is apparently not supported by OneDrive API - see   `#16 &lt;https://github.com/mk-fg/python-onedrive/issues/16&gt;`__ for   details.   Workaround in place is to fallback to (experimental at the moment of   writing - 2014-11-23) `BITS   API &lt;https://gist.github.com/rgregg/37ba8929768a62131e85&gt;`__ for   larger files, but it has a few issues, mentioned below.-  Be very careful using this module on Windows - it's very poorly   tested there, which is apparent from several serious issues that's   been reported - see commit d31fb51 and `this   report &lt;https://github.com/kennethreitz/requests/issues/2039&gt;`__, for   instance.   Not sure how useful might be explicitly breaking things for WIndows   (to avoid users having such issues from the start), especially since   it's extra work to remove functionality that was contributed by   someone else, who apparently found it useful to have here.-  Some proprietary formats, like &quot;OneNote notebook&quot; just can't be   accessed (`see   #2 &lt;https://github.com/mk-fg/python-onedrive/issues/2&gt;`__). OneDrive   doesn't allow GET requests for these things and they're also special   exceptions to `other API   methods &lt;http://msdn.microsoft.com/en-us/library/live/hh243648.aspx#file&gt;`__,   no idea what can be done there.-  It's been reported (#17) that `Onedrive for   Business &lt;https://onedrive.live.com/about/en-us/business/&gt;`__ is not   supported. It seem to have different `SharePoint 2013   API &lt;http://msdn.microsoft.com/en-us/library/fp142380%28v=office.15%29.aspx&gt;`__.-  Relying on `BITS   API &lt;https://gist.github.com/rgregg/37ba8929768a62131e85&gt;`__ too much   might not be a good idea, as it seem to be in a very experimental   state for regular OneDrive service, with only info I've seen on it   (in relation to OneDrive, and not other MS services) being that   linked gist (actually pointed out to me by @bobobo1618 in #34).   Some issues with it (at the moment of writing this - 2014-12-08) are   mentioned in   `#34 &lt;https://github.com/mk-fg/python-onedrive/issues/34&gt;`__ and   `#39 &lt;https://github.com/mk-fg/python-onedrive/issues/39&gt;`__.   If you use this api for large uploads via command-line script and are   getting annoying http 5XX errors at the end of the large uploads,   check out the ``--bits-do-auth-refresh-before-commit-hack`` flag for   the &quot;put&quot; command.-  Only in command-line script, HTTP error 400 (&quot;Bad Request&quot;) during   first authentication process can sometimes be caused by using (i.e.   putting it there by hand) unquoted &quot;jackpot&quot; client\_id in the YAML,   which matches YAML octal integer pattern (all digits, in 0-7 range).   Script detects this, emits a warning and tries to work around it,   which should work in most cases, but is not perfect, so try quoting   the value if it fits the above description. That's how it should be   done for strings in YAML.-  As was mentioned in   `#45 &lt;https://github.com/mk-fg/python-onedrive/issues/45&gt;`__,   sometimes OneDrive might do strange things and users might want to   tweak passed http headers.   This can be easily done via &quot;request\_base\_headers&quot; class attribute   or &quot;request&quot; section in the &quot;~/.lcrc&quot; file (for command-line tool   only), as described in the comments on the issue linked above.-  (A lot of)   ``WARNING:requests.packages.urllib3.connectionpool:Connection pool is full, discarding connection``   messages get logged when using (default) requests http client module,   especially when using BITS API.   These do not interfere with functionality (apart from obvious   connection reuse issue), only cause noise. I've no idea what this   module might be doing wrong to cause that, suggestions are welcome.   What does not make it go away:   -  Using default requests connection pool (i.e.      ``requests.request()``).   -  Explicitly calling ``Response.close()`` for each response object.   -  Using ``pool_block=True``.      Seem to be bugged-out at the moment (2015-01-17) - always raises      TypeError, but should not be desirable in most cases (like default      cli script) anyway.   -  Setting ``session.headers['Connection'] = 'keep-alive'``.   What can be done:   -  Dig into requests/urllib3 code and docs, find out what goes      (and/or is done-) wrong here.   -  Coming up with a small script that would reproduce the issue (if      it is indeed a bug in requests module) and submitting it to      requests developers.   -  When using python logging machinery, disable/filter      ``requests.packages.urllib3.connectionpool`` logger to just      silence the warnings.      Not using that in the cli script to avoid hiding the issue.Module usage------------`doc/api.md &lt;https://github.com/mk-fg/python-onedrive/blob/master/doc/api.md&gt;`__file contains auto-generated (from code) API docs.API code is split between three classes:-  HTTP wrapper - OneDriveHTTPClient-  Authentication methods - OneDriveAuth-  Unbiased and simple wrappers around HTTP calls - OneDriveAPIWrapper,   each one returning decoded HTTP response (i.e. whatever request   method in OneDriveHTTPClient returns).-  Biased convenience methods - OneDriveAPISuch separation allowed to reuse OneDriveAPIWrapper class to wrap async(returning &quot;Deferred&quot; objects instead of data) in`txOneDrive &lt;https://github.com/mk-fg/txonedrive&gt;`__ just by overriding&quot;request&quot; method from OneDriveHTTPClient.See also`onedrive/cli\_tool.py &lt;https://github.com/mk-fg/python-onedrive/blob/master/onedrive/cli_tool.py&gt;`__for real-world API usage examples.Installation------------In case you've missed Deprecation Notice at the start of this file:-  **DO NOT USE** this project for anything new, use official   `onedrive-sdk-python &lt;https://github.com/OneDrive/onedrive-sdk-python&gt;`__   instead.It's a regular package for Python 2.7 (not 3.X).Using `pip &lt;http://pip-installer.org/&gt;`__ is the best way:::    % pip install 'python-onedrive[cli]'If you don't have it, use:::    % easy_install pip    % pip install 'python-onedrive[cli]'Alternatively (see also `pip2014.com &lt;http://pip2014.com/&gt;`__ and`installguide &lt;http://www.pip-installer.org/en/latest/installing.html&gt;`__):::    % curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python    % pip install 'python-onedrive[cli]'Or, if you absolutely must:::    % easy_install python-onedrive requestsBut, you really shouldn't do that.Current-git version can be installed like this:::    % pip install 'git+https://github.com/mk-fg/python-onedrive.git#egg=python-onedrive'&quot;cli&quot; option above enables dependency on &quot;requests&quot; and &quot;PyYAML&quot;modules, which are used as a default http client lib and for the clitool configuration respectively.If the plan is to only use python module, &quot;standalone&quot; extras-flag canbe used instead (will only pull in &quot;requests&quot; module).And in case the module is used with different http client lib (i.e. planis to extend/override that), no flags can be specified to avoid draggingin extra (unused) deps.Note that to install stuff in system-wide PATH and site-packages,elevated privileges are often required. Use &quot;install --user&quot;,`~/.pydistutils.cfg &lt;http://docs.python.org/install/index.html#distutils-configuration-files&gt;`__or `virtualenv &lt;http://pypi.python.org/pypi/virtualenv&gt;`__ to dounprivileged installs into custom paths.Alternatively, ``./onedrive-cli`` tool can be run right from thecheckout tree without any installation, if that's the only thing youneed there.Requirements~~~~~~~~~~~~-  `Python 2.7 (not 3.X) &lt;http://python.org/&gt;`__-  (unless your plan is to override that)   `requests &lt;http://docs.python-requests.org/en/latest/&gt;`__ - version   0.14.0 or higher.   Should be installed automatically by pip if &quot;[standalone]&quot; or &quot;[cli]&quot;   `extras-flag &lt;https://pythonhosted.org/setuptools/setuptools.html#declaring-extras&gt;`__   is specified, as suggested above.-  (optional, recommended) `PyYAML &lt;http://pyyaml.org&gt;`__ - required for   CLI tool and optional persistent-state (&quot;conf&quot;) module only.   Gets pulled-in as a dependency with &quot;[cli]&quot; or &quot;[conf]&quot; extras-flag.-  (only on windows)   `pywin32 &lt;http://sourceforge.net/projects/pywin32/&gt;`__ - for CLI tool   (used to lock configuration file on changes) and optional conf module   only.-  (optional) `chardet &lt;http://pypi.python.org/pypi/chardet&gt;`__ - only   used to detect encoding (utf-8, gbk, koi8-r, etc) of the command-line   arguments to support workng with non-ascii (e.g. cyrillic, chinese)   names, if explicitly requested.   Not needed unless you specifically use cli tool with &quot;--encoding   detect&quot; option, which is probably a bad idea in general anyway.LiveConnect/OneDrive API (v5.0) notes-------------------------------------Important: these details can (naturally) go obsolete, especially iftimestamp of this doc is older than the one of the API docs, in whichcase please open an Issue pointing to the inconsistency.It's quite a conventional REST API with JSON encoding of structureddata, like pretty much every other trendy modern API, say, github.Authentication is `&quot;OAuth2.0&quot; &lt;http://msdn.microsoft.com/en-us/library/dn659750.aspx&gt;`__, whichis quite ambigous all by itself, and especially when being implementedby well-known for it's proprietary &quot;cripple-everything-else&quot; extensioncreep Microsoft. It has a twist in authrization\_code grant flow for&quot;mobile&quot; apps, where bearer token refresh can be performed withouthaving to provide client\_secret. Client app must be marked as &quot;mobile&quot;in`DevCenter &lt;https://account.live.com/developers/applications/create&gt;`__for that to work. There's also totally LiveConnect-specific &quot;Sign-In&quot;auth flow. Access tokens for OneDrive scopes (plus wl.offline) seem tobe issued with ttl of one hour.Permissions are set per-path, are inherited for the created objects and**cannot** be changed through the API, only through the Web UI (or maybeproprietary windows interfaces as well).Accessible to everyone URL links (of different types - embedded,read-only, read-write, preauthenticated) to any restricted-access object(that is reachable through the API) can be provided in&quot;preauthenticated&quot; form, a bit like in tahoe-lafs, but probably withoutthe actual crypto keys embedded in them (not much point as they're keptserver-side along with the files anyway).All but a few default paths (like &quot;my\_documents&quot;) are accessed byfile/folder IDs. All IDs seem to be in the form of&quot;{obj\_type}.{uid\_lowercase}.{uid\_uppercase}!{obj\_number}&quot;, where&quot;obj\_type&quot; is a type of an object (e.g. &quot;file&quot;, &quot;folder&quot;, etc),&quot;uid\_\*&quot; is some 8-byte hex-encoded value, constant for allfiles/folders of the user, and &quot;obj\_number&quot; is an integer valuecounting up from one for each uploaded file.UI-visible names come on top of these IDs as metadata, so &quot;rename&quot; isessentially a metadata &quot;name&quot; field update and two files/folders withthe same &quot;name&quot; can co-exist in the same parent folder, though uploadinga file defaults to overwriting file with same &quot;name&quot; (disableable).Aforementioned &quot;default paths&quot; (like &quot;my\_documents&quot;) don't seem to workreliably with copy and move methods, unless resolved to folder\_idproper.There's a &quot;Recycle Bin&quot; path in web interface, which I don't recallseeing any way to access, which keeps all removed files (for somelimited time, presumably). Files removed through the API end up there aswell.There are some handy special OneDrive-related API URLs for stuff likequota, list of recent changes and a list of shared-with-me objects.Files have a lot of metadata attached to them, parsed from theircontents (exif data for photos, office documents metadata, etc). APIallows to request image-previews of an items, links to which are alsoavailable in file (object) metadata.There was an issue with public.bay.livefilestore.com hosts (to whichactual file store/retrieve requests get redirected) not working withclients advertising TLS -1.2 (see issue-1 on github), but it seem to begone by now (2014-11-21).File uploads can either use PUT or POST requests, but former (PUT)*must* use &quot;Transfer-Encoding: chunked&quot; or requests just hang and getclosed by the server. For more info on this quirk, see github issue #30.Errors can be returned for most ops, encoded as JSON in responses andhave a human-readable &quot;code&quot; (like &quot;resource\_quota\_exceeded&quot;) anddescriptive &quot;message&quot;.According to &quot;OneDrive interaction guidelines&quot;, it is discouraged(though not explicitly prohibited) to upload files in non-conventionalformats that aren't useable to other apps (under &quot;Use OneDrive for thethings that it’s good at&quot;):::    To support this principle, the Live Connect APIs limit the set of file formats    that apps can upload to OneDrive.ToS for LiveConnect APIs is kinda weird, having unclear (at least tolayman like me) stuff like this:-  You may only use the Live SDK and Live Connect APIs to create   software.   Seem to imply that APIs shouldn't be used in hardware, but I fail to   see why it can't also be interpreted as &quot;only create software, not   just use it to get/store stuff&quot;.-  You are solely and entirely responsible for all uses of Live Connect   occurring under your Client ID.   So either you take the blame for every potential user or go make all   users register their own app? Hopefully I've misinterpreted that one.After SkyDrive -&gt; OneDrive rename (on 2014-02-19), API remained thesame, with same URLs, same &quot;me/skydrive&quot; root, and API docs still seemto refer to the service as SkyDrive.For more robust and fault-tolerant uploads, OneDrive seem to supportBITS API, allowing to upload each individual file via several httprequests, with some (non-overlapping) byte-range in each. Moredetails/discussion on this API can be found in `issue-34 ongithub &lt;https://github.com/mk-fg/python-onedrive/issues/34&gt;`__ and `thisgithub gist &lt;https://gist.github.com/rgregg/37ba8929768a62131e85&gt;`__. Asof now (2014-11-21), this is &quot;preliminary documentation and is subjectto change&quot;.Since 24 Feb 2015, there is new &quot;api.onedrive.com/v1.0&quot; API available,and eventually (2015-10-09) got an official python sdk -`onedrive-sdk-python &lt;https://github.com/OneDrive/onedrive-sdk-python&gt;`__- which is probably the best option for any new python project.</longdescription>
</pkgmetadata>