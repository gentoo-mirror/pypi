<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|License| |Build Status|Introduction============This project provides a Python 2.7/3.x library for common tasksespecially when writing shell-like scripts. Some of the functionalityoverlaps with the standard library but the API is slightly modified.The goal of this project is to leverage the straightforward, cleansyntax of Python while avoiding some of the boilerplate code that mightbe necessary when using the standard library. Functions that overlapwith the standard library are designed to do what you would reasonablyexpect(`POLA &lt;https://en.wikipedia.org/wiki/Principle_of_least_astonishment&gt;`__)and, when necessary, fail **without** throwing exceptions.Please note when using this library that operations will fail silently.This is a deliberate design decision. However, there is often a way tocheck if an operation has failed and optionally throw and exception ifthat is desirable:.. code:: python   auxly.filesys.copy(&quot;foo.txt&quot;, &quot;bar&quot;) or auxly.throw()  # Throws/raises exception on failure.Auxly provides the following modules:-  `auxly &lt;https://auxly.readthedocs.io/en/latest/#id1&gt;`__-  `auxly.filesys &lt;https://auxly.readthedocs.io/en/latest/#auxly-filesys&gt;`__-  `auxly.shell &lt;https://auxly.readthedocs.io/en/latest/#auxly-shell&gt;`__-  `auxly.stringy &lt;https://auxly.readthedocs.io/en/latest/#auxly-stringy&gt;`__-  `auxly.listy &lt;https://auxly.readthedocs.io/en/latest/#auxly-listy&gt;`__The following are basic examples of Auxly (all examples can be found`here &lt;https://github.com/jeffrimko/Auxly/tree/master/examples&gt;`__):-  `examples/delete_pyc.py &lt;https://github.com/jeffrimko/Auxly/blob/master/examples/delete_pyc.py&gt;`__   - Deletes all PYC files in the project.-  `examples/guess_os.py &lt;https://github.com/jeffrimko/Auxly/blob/master/examples/guess_os.py&gt;`__   - Attempts to guess the host OS based on available shell commands.Refer to the unit tests`here &lt;https://github.com/jeffrimko/Auxly/tree/master/tests&gt;`__ foradditional examples.Status======Currently, this project is in the **development release** stage. Whilethis project is suitable for use, please note that there may beincompatibilities in new releases.Release notes are maintained in the project`changelog &lt;https://github.com/jeffrimko/Auxly/blob/master/CHANGELOG.adoc&gt;`__.Requirements============Auxly should run on any Python 2.7/3.x interpreter without additionaldependencies.Installation============Auxly can be installed with pip using the following command:``pip install auxly``Additionally, Auxly can be installed from source by running:``python setup.py install``Documentation=============The full documentation for this project can be found `here on Read theDocs &lt;http://auxly.readthedocs.io&gt;`__.Similar=======The following projects are similar and may be worth checking out:-  `Reusables &lt;https://github.com/cdgriffith/Reusables&gt;`__.. |License| image:: http://img.shields.io/:license-mit-blue.svg.. |Build Status| image:: https://github.com/jeffrimko/Auxly/workflows/tests/badge.svg</longdescription>
</pkgmetadata>