<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=============================Django-Helpscout=============================.. image:: https://travis-ci.org/victorneo/Django-Helpscout.svg?branch=master    :target: https://travis-ci.org/victorneo/Django-Helpscout.. image:: https://img.shields.io/coveralls/victorneo/Django-Helpscout.svg    :target: https://coveralls.io/r/victorneo/Django-Helpscout?branch=master Help Scout integration for Django.Introduction-------------If you are using Help Scout to handle support tickets for your Djangoweb application, you can use Help Scout's custom app feature to provideadditional information on the user, such as the following:.. image:: https://raw.githubusercontent.com/victorneo/Django-Helpscout/master/helpscout_customapp.pngThis project provides a Django app which allows you to integrate Help ScoutCustom App into your Django web application and easily customize the output.Installation-------------You can install this library via ``pip``::    pip install django-helpscoutOnce installed, add ``django_helpscout`` to your ``INSTALLED_APPS``::    INSTALLED_APPS = (        ...,        'django_helpscout'        ...,    )Add Help Scout's secret key to your settings file::    HELPSCOUT_SECRET = '&lt;helpscout custom app secret key&gt;'Getting Started----------------A Django view is provided to make it easy for you to get started. First, addthe view to your ``urls.py``::    from django_helpscout.views import helpscout_user    urlpatterns = patterns('',        # Your URL definitions        url(r'^helpscout-user/$', helpscout_user),    )Once done, deploy your web application to production and point yourHelp Scout Custom App URL to the url you have configured above andyou should see a simple HTML output on the side bar of a support ticket withthe user's username and join date.Customizing the HTML Output---------------------------You will want to customize the HTML output to add in additional informationrelated to the user. You can do so by overriding the templates that areincluded.In your templates folder, create the following structure::    templates/        |- django_helpscout                 |- 404.html                 |- helpscout.htmlDetails on the two templates:``404.html``  Used when a user with the given email address is not found``helpscout.html``  Used when a user is foundBy overriding the library's built-in templates, you can customize the output tosuit your needs.Further Customizations----------------------You might want to use ``select_related`` to prefetch related modelsfor a particular user, or you have additional data sources to querywhen loading a user. A helper decorator is available if you wish touse your own view.The decorator helps you deal with verifying Help Scout's signaturewhen a request is made from their side. You can use the decoratorin the following manner::    from django_helpscout.helpers import helpscout_request    # your view    @helpscout_request    def load_user_for_helpscout(request):        ... code here ...License-------Copyright 2014 Victor NeoLicensed under the Apache License, Version 2.0 (the &quot;License&quot;);you may not use this file except in compliance with the License.You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.History-------0.6.3 (2015-05-21)++++++++++++++++++* Added csrf_exempt decorator to helpscout_user view.* Fixed failing bytes conversion on Python &lt; 3 in helpscout_request decorator.0.6.2 (2014-12-04)++++++++++++++++++* Updated documentation with previously missing configuration option.0.6.1 (2014-11-20)++++++++++++++++++* Fixed bug with Django's HTTP header names (Thanks @Fizzadar!)0.6.0 (2014-09-29)++++++++++++++++++* Preliminary Python 3.4 support.0.5.0 (2014-08-06)++++++++++++++++++* PyPI release.0.0.1 (2014-08-01)++++++++++++++++++* Initial release on GitHub.</longdescription>
</pkgmetadata>