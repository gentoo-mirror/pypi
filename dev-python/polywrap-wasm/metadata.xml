<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Polywrap Wasm=============This package contains the runtime for executing Wasm wrappers.Quickstart----------The following code snippet demonstrates how to use the runtime to execute a Wasm wrapper.Imports~~~~~~~&gt;&gt;&gt; import os&gt;&gt;&gt; from typing import cast&gt;&gt;&gt; from polywrap_core import Uri, FileReader, InvokerClient&gt;&gt;&gt; from polywrap_wasm import WasmWrapper&gt;&gt;&gt; from polywrap_msgpack import msgpack_decode&gt;&gt;&gt; from polywrap_manifest import deserialize_wrap_manifest, AnyWrapManifestCreate a Wasm wrapper~~~~~~~~~~~~~~~~~~~~~&gt;&gt;&gt; path_to_wrapper = os.path.join(os.path.dirname(__file__), &quot;..&quot;, &quot;tests&quot;, &quot;cases&quot;, &quot;simple&quot;)&gt;&gt;&gt; assert os.path.exists(path_to_wrapper)&gt;&gt;&gt; with open(os.path.join(path_to_wrapper, &quot;wrap.wasm&quot;), &quot;rb&quot;) as f:...     wasm_module = f.read()&gt;&gt;&gt; assert isinstance(wasm_module, bytes)&gt;&gt;&gt; with open(os.path.join(path_to_wrapper, &quot;wrap.info&quot;), &quot;rb&quot;) as f:...     manifest = deserialize_wrap_manifest(f.read())&gt;&gt;&gt; assert isinstance(manifest, AnyWrapManifest)&gt;&gt;&gt; wrapper = WasmWrapper(...     cast(FileReader, NotImplemented),...     wasm_module,...     manifest... )&gt;&gt;&gt; assert isinstance(wrapper, WasmWrapper)Invocation~~~~~~~~~~&gt;&gt;&gt; message = &quot;Hello, World!&quot;&gt;&gt;&gt; args = {&quot;arg&quot;: message}&gt;&gt;&gt; result = wrapper.invoke(...     uri=Uri.from_str(&quot;wrap://authority/path&quot;),...     method=&quot;simpleMethod&quot;,...     args=args,...     client=cast(InvokerClient, NotImplemented),... )&gt;&gt;&gt; assert result.encoded is True&gt;&gt;&gt; assert msgpack_decode(cast(bytes, result.result)) == message</longdescription>
</pkgmetadata>