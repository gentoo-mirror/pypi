<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pyinjector[![Tests (GitHub Actions)](https://github.com/kmaork/pyinjector/workflows/Tests/badge.svg)](https://github.com/kmaork/pyinjector)[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/pyinjector.svg)](https://pypi.python.org/pypi/pyinjector/)[![PyPI version](https://badge.fury.io/py/pyinjector.svg)](https://badge.fury.io/py/pyinjector)[![Downloads](https://pepy.tech/badge/pyinjector)](https://pepy.tech/project/pyinjector)[![GitHub license](https://img.shields.io/github/license/kmaork/pyinjector)](https://github.com/kmaork/pyinjector/blob/master/LICENSE.txt)A cross-platform tool/library allowing dynamic library injection into running processes.If you are looking for a way to inject *python* code into a running process, try the [hypno](https://github.com/kmaork/hypno) library.Pyinjector has no external python dependencies.It is implemented as a python wrapper for [kubo/injector](https://github.com/kubo/injector).### Installation```shell scriptpip install pyinjector```Both source distributions, `manylinux2010` wheels and windows wheels are uploaded to Pypi for every release.### Usage#### CLI```shell scriptinject &lt;pid&gt; &lt;path/to/shared/library&gt;```#### API```pythonfrom pyinjector import injectinject(pid, path_to_so_file)```### How it worksWe build [kubo/injector](https://github.com/kubo/injector) as a C-extension and use its interface using `ctypes`.[kubo/injector](https://github.com/kubo/injector) is an awesome repo allowing to inject shared libraries into runningprocesses both on Windows (`CreateRemoteThread`), Linux (`ptrace`), and Mac (`task_for_pid`).</longdescription>
</pkgmetadata>