<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/alejandroautalan/pygubu.svg?branch=master)](https://travis-ci.org/alejandroautalan/pygubu)[Leer en Espa√±ol](LEEME.md)Welcome to Pygubu!==================`Pygubu` is a [RAD tool](https://en.wikipedia.org/wiki/Rapid_application_development) to enable _quick_ and _easy development of user interfaces_ for the Python's `tkinter` module.The user interfaces designed are saved as [XML](https://en.wikipedia.org/wiki/XML) files, and, by using the _pygubu builder_, these can be loaded by applications dynamically as needed.Pygubu is inspired by [Glade](https://glade.gnome.org).Installation============The latest version of pygubu requires Python &gt;= 3.6You can install pygubu using pip:```pip install pygubu```Usage=====Since version 0.10 the project was splitted in two main modules:- The **pygubu core** (this project), that load and build user interfaces defined in xml.- The **interface editor** [pygubu-designer](https://github.com/alejandroautalan/pygubu-designer), that helps you create the xml definition graphically.Start creating your tkinter application xml UI definition using the pygubu-designer editor.The following is a UI definition example called [helloworld.ui](https://github.com/alejandroautalan/pygubu-designer/blob/master/examples/helloworld/helloworld.ui):```xml&lt;?xml version='1.0' encoding='utf-8'?&gt;&lt;interface version=&quot;1.2&quot;&gt;  &lt;object class=&quot;tk.Toplevel&quot; id=&quot;mainwindow&quot;&gt;    &lt;property name=&quot;height&quot;&gt;200&lt;/property&gt;    &lt;property name=&quot;resizable&quot;&gt;both&lt;/property&gt;    &lt;property name=&quot;title&quot; translatable=&quot;yes&quot;&gt;Hello World App&lt;/property&gt;    &lt;property name=&quot;width&quot;&gt;200&lt;/property&gt;    &lt;child&gt;      &lt;object class=&quot;ttk.Frame&quot; id=&quot;mainframe&quot;&gt;        &lt;property name=&quot;height&quot;&gt;200&lt;/property&gt;        &lt;property name=&quot;padding&quot;&gt;20&lt;/property&gt;        &lt;property name=&quot;width&quot;&gt;200&lt;/property&gt;        &lt;layout manager=&quot;pack&quot;&gt;          &lt;property name=&quot;expand&quot;&gt;true&lt;/property&gt;          &lt;property name=&quot;side&quot;&gt;top&lt;/property&gt;        &lt;/layout&gt;        &lt;child&gt;          &lt;object class=&quot;ttk.Label&quot; id=&quot;label1&quot;&gt;            &lt;property name=&quot;anchor&quot;&gt;center&lt;/property&gt;            &lt;property name=&quot;font&quot;&gt;Helvetica 26&lt;/property&gt;            &lt;property name=&quot;foreground&quot;&gt;#0000b8&lt;/property&gt;            &lt;property name=&quot;text&quot; translatable=&quot;yes&quot;&gt;Hello World !&lt;/property&gt;            &lt;layout manager=&quot;pack&quot;&gt;              &lt;property name=&quot;side&quot;&gt;top&lt;/property&gt;            &lt;/layout&gt;          &lt;/object&gt;        &lt;/child&gt;      &lt;/object&gt;    &lt;/child&gt;  &lt;/object&gt;&lt;/interface&gt;```Then, you should create your _application script_ as shown below ([helloworld.py](https://github.com/alejandroautalan/pygubu-designer/blob/master/examples/helloworld/helloworld.py)):```python# helloworld.pyimport pathlibimport tkinter as tkimport tkinter.ttk as ttkimport pygubuPROJECT_PATH = pathlib.Path(__file__).parentPROJECT_UI = PROJECT_PATH / &quot;helloworld.ui&quot;class HelloworldApp:    def __init__(self, master=None):        # 1: Create a builder and setup resources path (if you have images)        self.builder = builder = pygubu.Builder()        builder.add_resource_path(PROJECT_PATH)        # 2: Load an ui file        builder.add_from_file(PROJECT_UI)        # 3: Create the mainwindow        self.mainwindow = builder.get_object('mainwindow', master)        # 4: Connect callbacks        builder.connect_callbacks(self)    def run(self):        self.mainwindow.mainloop()if __name__ == '__main__':    app = HelloworldApp()    app.run()```Note that instead of `helloworld.ui`, you should insert the _filename_ (or full path) of your UI definition:```pythonPROJECT_UI = PROJECT_PATH / &quot;helloworld.ui&quot;```Note also that instead of 'mainwindow', you should have the name of your _main_widget_ (the parent of all widgets) in the following line:```pythonself.mainwindow = builder.get_object('_your_main_widget_')```Documentation=============Visit the pygubu [wiki](https://github.com/alejandroautalan/pygubu/wiki) for more documentation.The following are some good tkinter (and tk) references:- [TkDocs](http://www.tkdocs.com)- [Graphical User Interfaces with Tk](https://docs.python.org/3/library/tk.html)- [Tkinter 8.5 reference: a GUI for Python](https://tkdocs.com/shipman)- [An Introduction to Tkinter](http://effbot.org/tkinterbook) [(archive)](http://web.archive.org/web/20200504141939/http://www.effbot.org/tkinterbook)- [Tcl/Tk 8.5 Manual](http://www.tcl.tk/man/tcl8.5/)You can also see the [examples](https://github.com/alejandroautalan/pygubu-designer/tree/master/examples) directory or watch [this introductory video tutorial](http://youtu.be/wuzV9P8geDg).History=======See the list of changes [here](HISTORY.md).</longdescription>
</pkgmetadata>