<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>edges\_cal==========|Build Status| |codecov| |Code style: black| |RTD|**Calculate calibration coefficients for EDGES CalibrationObservations**Installation------------Download/clone the repo and do::    pip install .in the top-level directory (optionally add an ``-e`` for develop-mode).Preferably, do this in an isolated python/conda environment.Usage-----CLI~~~There is a very basic CLI set up for running a full calibration pipelineover a set of data. To use it, do::    $ edges-cal run --helpMultiple options exist, but the only ones required are ``CONFIG`` and``PATH``. The first should point to a YAML configuration for the run,and the second should point to a directory in which exists ``S11``,``Resistance`` and ``Spectra`` folders. Thus:::    $ edges-cal run ~/config.yaml .will work if you are in such a directory.The ``config.yaml`` consists of a set of parameters passed to``edges_cal.CalibrationObservation``. See its docstring for moredetails.In addition, you can run a &quot;term sweep&quot; over a given calibration,iterating over number of Cterms and Wterms until some threshold is met.This uses the same configuration as ``edges-cal run``, but you can passa maximum number of C and W-terms, along with a threshold at which tostop the sweep (this is a threshold in absolute RMS over degrees offreedom). This will write out a ``Calibration`` file for the &quot;best&quot; setof parameters.You can also create full Jupyter notebook reports (and convert them toPDF!) using the CLI. To get this to work, you must install ``edges-cal``with ``pip install edges-cal[report]``. Then you must do the following:1. Activate the environment you wish to use to generate the reports   (usually ``conda activate edges``)2. Run   ``python -m ipykernel install --user --name edges --display-name &quot;edges&quot;``Note that in the second command, calling it &quot;edges&quot; is necessary(regardless of the name of your environment!).Now you can run::    $ edges-cal report PATH --config ~/config.yaml(obviously there are other parameters -- use ``edges-cal report --help``for help). The ``PATH`` should again be a calibration observationdirectory. The config can be the same file as in ``edges-cal run``, andis optional. By default, both a notebook and a PDF will be produced, inthe ``outputs/`` directory of the observation. You can turn off the PDFproduction with a ``-R`` flag.Similarly, you can *compare* two observations as a report notebook with::    $ edges-cal compare PATH COMPARE --config ~/config.yaml --config-cmp ~/config.yamlThis is intended to more easily show up what might be wrong in anobservation, when compared to a &quot;golden&quot; observation, for example.Using the Library~~~~~~~~~~~~~~~~~To import:::    import edges_cal as ecMost of the functionality is highly object-oriented, and objects existfor each kind of data/measurement. However, there is a container objectfor all of these, which manages them. Thus you will typically use::    &gt;&gt;&gt; calobs = ec.CalibrationObservation(path=&quot;path/to/top/level&quot;)Several other options exist, and they have documentation that you canaccess interactively by using::    &gt;&gt;&gt; help(ec.CalibrationObservation)The most relevant attributes are the (lazily-evaluated) calibrationcoefficient models:::    &gt;&gt;&gt; plt.plot(calobs.freq.freq, calobs.C1())the various plotting routines, eg.::    &gt;&gt;&gt; calobs.plot_coefficients()and the calibrate/decalibrate methods:::    &gt;&gt;&gt; calibrated_temp = calobs.calibrate(&quot;ambient&quot;)Note that this final method can be applied to any ``LoadSpectrum`` --i.e. you can pass in field observations, or an antenna simulator... |Build Status| image:: https://travis-ci.org/edges-collab/edges-cal.svg?branch=master   :target: https://travis-ci.org/edges-collab/edges-cal.. |codecov| image:: https://codecov.io/gh/edges-collab/edges-cal/branch/master/graph/badge.svg   :target: https://codecov.io/gh/edges-collab/edges-cal.. |Code style: black| image:: https://img.shields.io/badge/code%20style-black-000000.svg   :target: https://github.com/psf/black.. |RTD| image:: https://readthedocs.org/projects/edges-cal/badge/?version=latest   :target: https://edges-cal.readthedocs.io/en/latest/?badge=latest   :alt: Documentation Status</longdescription>
</pkgmetadata>