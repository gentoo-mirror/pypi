<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BIPL is a Big Image Python LibraryLibrary to read big pyramidal images like in formats like BigTiff, Aperio SVS, Leica MRXS.## `bipl.Slide` - ndarray-like reader for multiscale images (svs, tiff, etc...)&lt;details&gt;```pythonimport numpy as npfrom bipl import Slideslide = Slide.open('test.svs')shape: tuple[int, ...] = slide.shapepools: tuple[int, ...] = slide.poolsspacing: float = slide.spacing  # X um per pixelimage: np.ndarray = slide[:2048, :2048]  # Get numpy.ndarray of 2048x2048 from 1:1 levelmini = slide.pool(4)  # 1:4 scale, shape is 4x smaller then full resolutionimage: np.ndarray = mini[:512, :512]  # Same view as `image`, but lower resolution```&lt;/details&gt;## `bipl.Mosaic` - apply function for each tile of big image on desired scale.&lt;details&gt;```pythonimport numpy as npfrom bipl import Mosaic, Slidem = Mosaic(step=512, overlap=0)  # Read at [0:512], [512:1024], ...# Open slide at 1:1 scales = Slide.open('test.svs')# Get view at 1:4 scale of slide. `s4.shape` = `s.shape` / 4.# If `test.svs` has some pyramid in it (i.e. 1:1, 1:4, 1:16), it will be used to speed up reads.s4 = s.pool(4)# Get iterator over tiles.# Reads will be at [0:512], [512:1024] ... @ 1:4 scale# or [0:2048], [2048:4096], ... @ 1:1, each downscaled to 512pxtiles = m.iterate(s4)# Read only subset of tiles according to binary mask (1s are read, 0s are not).# `mask.shape` * `scale` = `s4.shape`, `scale` &gt;= 1tiles = tiles.select(mask, scale)# Read all data, trigger I/O. All the previous calls do not trigger any disk reads beyond metadata.images: list[np.ndarray] = [*tiles]```&lt;/details&gt;## Installation```bashpip install bipl```bipl is compatible with: Python 3.9+.Tested on ArchLinux, Ubuntu 18.04/20.04/22.04, Windows 10/11.</longdescription>
</pkgmetadata>