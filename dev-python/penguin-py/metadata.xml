<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.python.org/pypi/penguin_py&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/penguin_py.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;http://unlicense.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/l/penguin_py.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.python.org/pypi/penguin_py&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/penguin_py.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt;# üêß penguin-py üêßPenguin is a lightweight, customizable stopwatch ‚è± decorator that helps you determine how long it takes for your functions to run. It supports both synchronous and asynchronous functions.# Source codeThe source code of this package lives here: https://github.com/espitiaandres/penguin# Installation## With Command LineTo install `penguin-py` with the command line, run this command:`pip install penguin-py`.## With a `requirements.txt` fileTo install `penguin-py` using a `requirements.txt` file, add this line to your `requirements.txt` file.`penguin-py==0.3.8`# Usage## Synchronous FunctionsFor **synchronous** functions, use the `@penguin()` decorator.‚úÖ To run with **default kwargs**:```pythonfrom penguin_py import penguin@penguin()def foo(test1, test2=None):    # Note: this function can be anything!    for i in range(10000000):        pass    return &quot;test&quot;, Truetest = foo(&quot;&quot;, test2=&quot;&quot;)```‚úÖ To run with **user specified kwargs**:```python@penguin(    verbose=True,    show_args=True,    show_return=True,    foreground='cyan',    background='yellow',)def foo(test1, test2=None):    for i in range(10000000):        pass    return &quot;test&quot;, Truetest = foo(&quot;&quot;, test2=&quot;&quot;)```**Note**: For a more detailed list of all kwargs and their defaults, visit this section: [List of kwargs](#kwargs_list)‚ùå Since `penguin` is a decorator that takes in kwargs, do **not** call it without the brackets `()`.```pythonfrom penguin_py import penguin@penguindef foo(test1, test2=None):    # Note: this function can be anything!    for i in range(10000000):        pass    return &quot;test&quot;, Truetest = test_func(&quot;&quot;, test2=&quot;:&quot;)```If you do this, you'll get a `TypeError` relating to arguments.## Asynchronous FunctionsFor **asynchronous** functions, use the `@penguin_async()` decorator.‚úÖ To run with **default kwargs**:```pythonfrom penguin_py import penguin@penguin_async()def foo(test1, test2=None):    # Note: this function can be anything!    for i in range(10000000):        pass    return &quot;test&quot;, Truetest = foo(&quot;&quot;, test2=&quot;&quot;)```This will output the following to your logger:![Sample penguin output](/img/sample_output.png)‚úÖ To run with **user specified kwargs**:```python@penguin(    verbose=True,    show_args=True,    show_return=True,    foreground='cyan',    background='yellow',)def foo(test1, test2=None):    for i in range(10000000):        pass    return &quot;test&quot;, Truetest = foo(&quot;&quot;, test2=&quot;&quot;)```This will output the following to your logger:![Sample penguin output kwargs](/img/sample_output_kwargs.png)&lt;a name=&quot;kwargs_list&quot;/&gt;## List of kwargs- `verbose`: When `True`, it shows all logs that are described by the other kwargs. When `False`,  each kwarg would determine if that specific log is shown - default: `False`- `show_args`: When `True`, it shows the function's signature, with the `*args` and `**kwargs` being passed in.  - default: `False`- `show_return`: When `True`, it shows the function's return value(s).  - default: `False`- `foreground`: When chosen from this list, `[&quot;red&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;grey&quot;]`, it colour the logger output **text** the chosen colour.  - default: `&quot;grey&quot;`- `background`: When chosen from this list, `[&quot;red&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;magenta&quot;, &quot;cyan&quot;, &quot;grey&quot;, &quot;black&quot;, &quot;white&quot;]`, it colour the logger output **background** the chosen colour.  - default: `&quot;black&quot;`# DocumentationDocumentation of `penguin-py` can be found here: https://github.com/espitiaandres/penguin/blob/master/README.md# Bugs/RequestsIf you find any bugs or have any suggestions to `penguin-py`, submit them in the issues tab in the Github repo. This can be found here: https://github.com/espitiaandres/penguin/issues# LicenseDistributed under the terms of the MIT license, `penguin-py` is free and open source software.</longdescription>
</pkgmetadata>