<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># instagram_scraper&lt;img src=&quot;https://raw.githubusercontent.com/realsirjoe/designs/master/flat_illustration.png&quot; align=&quot;right&quot;&gt;This is a minimalistic Instagram scraper written in Python.&lt;br /&gt;&lt;br /&gt;It can fetch media, accounts, videos, comments etc.`Comment` and `Like` actions are also supported.It is not easy to get Applications approved for Instagram's API therefore I created this tool inspired by [instagram-php-scraper](https://github.com/postaddictme/instagram-php-scraper).&lt;br /&gt;&lt;br /&gt;The goal of this project is to become as minimalistic as possible while still having all the needed functionality so that its easy to add code to it!Any ‚≠êÔ∏è or contribution is appreciated if you like the project ü§ò## How to installSimply run:```pip install igramscraper```or download the project via git clone and run the following:```pip install -r requirements.txt```## UsagesSome methods do require authentication:```pythonfrom igramscraper.instagram import Instagraminstagram = Instagram()# authentication supportedinstagram.with_credentials('username', 'password')instagram.login()#Getting an account by idaccount = instagram.get_account_by_id(3)# Available fieldsprint('Account info:')print('Id: ', account.identifier)print('Username: ', account.username)print('Full name: ', account.full_name)print('Biography: ', account.biography)print('Profile pic url: ', account.get_profile_pic_url_hd())print('External Url: ', account.external_url)print('Number of published posts: ', account.media_count)print('Number of followers: ', account.followed_by_count)print('Number of follows: ', account.follows_count)print('Is private: ', account.is_private)print('Is verified: ', account.is_verified)# or simply for printing use print(account)```If you use authentication, the program will cache the user session by default so one doesn't need to create session every time.  If one want to disable the user session cache, assign `True` to Instagram.login() methodTwo Factor Authentication is also supported through cli interface, simply use 'True' for second argument of login() function   Many of the methods do not require authenticationfor more info browse through the examples folderUsing proxy for requests:```pythonfrom igramscraper.instagram import Instagram proxies = {    'http': 'http://123.45.67.8:1087',    'https': 'http://123.45.67.8:1087',}instagram = Instagram()instagram.set_proxies(proxies)account = instagram.get_account('kevin')print(account.identifier)```## Recommended LimitsIf you make too many requests too fast you will get a 429 Error or something similar.- It is recommended to make a short break between each request of 30s (+- random)- In between all 10 requests a long break (300-600s)If different proxies and accounts are used for all requests and the circle doesn't repeat too fast these limits don't apply ;)Feel free to make your own tests and let us know of any limits you experienced## More usagesSee examples [here](https://github.com/SergioWagenleitner/instagram-scraper/tree/master/examples).## How to contributeEvery contribution is welcome, check out our [TODOs](https://github.com/realsirjoe/instagram-scraper/blob/master/CONTRIBUTING.md)&lt;br /&gt;and join our telegram group: https://t.me/joinchat/J86yTBAtZlEi-6T6LOxijw## Otherinstagram-php-scraper [here](https://github.com/postaddictme/instagram-php-scraper/)</longdescription>
</pkgmetadata>