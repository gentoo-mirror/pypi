<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># kaniko-remoteEnable familiar `docker build` semantics using kaniko remotely on a preconfigured k8s cluster## Quick StartInstall with pip, optionally with the docker alias:```bashpip install kaniko-remote[docker]```Run docker build commands as expected:```bashdocker build -t registry.fish/my/cool-image:latest .# Or without the docker alias:kaniko-remote build -t registry.fish/my/cool-image:latest .```## Config```yamlkubernetes:  # kubeconfig:   # context  namespace: kaniko-remote # Default is defaultbuilder:  name: lucas # Default is to get the username from the environment  cpu: 1 # Default is 1, accepts any value k8s accepts  memory: 1G # Default is 1G, accepts any value k8s accepts  kanikoImage: &quot;&quot; # Default is gcr.io/kaniko-project/executor:latest  setupImage: &quot;&quot; # Default is busybox:stable  additionalLabels:    yes: hello  additionalAnnotations:    why: not  kanikoArgs: # Replaces default if provided, default is:  - --use-new-run  podStartTimeout: 300 # In seconds, default 5 mins  podTransferPacketSize: 14e3 # In bytes, default 14kBtag:  default: eliiza.azurecr.io/some-default-image  static: eliiza.azurecr.io/specific-image:v1  prefix: eliiza.azurecr.io/dataiku  regexes:    pattern: templateauth: # Default is to have none of these  - url: eliiza.azurecr.io    mount: always # Defaults to only mounting each auth into the builder if the url matches the tag being built    type: acr    env:    - fromSecret: eliiza-azurecr-push-sp  - url: gs://kaniko-bucket    type: pod-only  - url: s3://kaniko-bucket  - url: https://myaccount.blob.core.windows.net/container``````yamlkubernetes:  namespace: kaniko-remotebuilder:  name: lucastag:  prepend: eliiza.azurecr.io/lucas-devauth:  - url: eliiza.azurecr.io    mount: always    type: acr    env:    - fromSecret: eliiza-azurecr-push-sp```## Licensekaniko-remote is licensed under the MIT licenseDependencies with other licenses are included under `/docs/3rd_party_licenses`</longdescription>
</pkgmetadata>