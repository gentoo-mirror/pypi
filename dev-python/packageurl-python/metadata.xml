<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=================packageurl-python=================Python library to parse and build &quot;purl&quot; aka. Package URLs.See https://github.com/package-url/purl-spec for details.Join the discussion at https://gitter.im/package-url/Lobby or enter a ticket for support.License: MITTests and build status======================+----------------------+| **Tests and build**  |+======================+| |ci-tests|           |+----------------------+Install=======::    pip install packageurl-pythonUsage=====::    &gt;&gt;&gt; from packageurl import PackageURL    &gt;&gt;&gt; purl = PackageURL.from_string(&quot;pkg:maven/org.apache.commons/io@1.3.4&quot;)    &gt;&gt;&gt; print(purl.to_dict())    {'type': 'maven', 'namespace': 'org.apache.commons', 'name': 'io', 'version': '1.3.4', 'qualifiers': None, 'subpath': None}    &gt;&gt;&gt; print(purl.to_string())    pkg:maven/org.apache.commons/io@1.3.4    &gt;&gt;&gt; print(str(purl))    pkg:maven/org.apache.commons/io@1.3.4    &gt;&gt;&gt; print(repr(purl))    PackageURL(type='maven', namespace='org.apache.commons', name='io', version='1.3.4', qualifiers={}, subpath=None)Utilities=========Django models^^^^^^^^^^^^^`packageurl.contrib.django_models.PackageURLMixin` is a Django abstract model mixin to use Package URLs in Django.URL to PURL^^^^^^^^^^^`packageurl.contrib.url2purl.get_purl(url)` returns a Package URL inferred from an URL.::    &gt;&gt;&gt; from packageurl.contrib import url2purl    &gt;&gt;&gt; url2purl.get_purl(&quot;https://github.com/package-url/packageurl-python&quot;)    PackageURL(type='github', namespace='package-url', name='packageurl-python', version=None, qualifiers={}, subpath=None)PURL to URL^^^^^^^^^^^- `packageurl.contrib.purl2url.get_repo_url(purl)` returns a repository URL inferred from a Package URL.- `packageurl.contrib.purl2url.get_download_url(purl)` returns a download URL inferred from a Package URL.- `packageurl.contrib.purl2url.get_inferred_urls(purl)` return all inferred URLs (repository, download) from a Package URL.::    &gt;&gt;&gt; from packageurl.contrib import purl2url    &gt;&gt;&gt; purl2url.get_repo_url(&quot;pkg:rubygems/bundler@2.3.23&quot;)    &quot;https://rubygems.org/gems/bundler/versions/2.3.23&quot;    &gt;&gt;&gt; purl2url.get_download_url(&quot;pkg:rubygems/bundler@2.3.23&quot;)    &quot;https://rubygems.org/downloads/bundler-2.3.23.gem&quot;    &gt;&gt;&gt; purl2url.get_inferred_urls(&quot;pkg:rubygems/bundler@2.3.23&quot;)    [&quot;https://rubygems.org/gems/bundler/versions/2.3.23&quot;, &quot;https://rubygems.org/downloads/bundler-2.3.23.gem&quot;,]Run tests=========Install test dependencies::    python3 thirdparty/virtualenv.pyz --never-download --no-periodic-update .    bin/pip install -e .&quot;[test]&quot;Run tests::    bin/py.test testsMake a new release==================- start a new release branch- update the CHANGELOG.rst and AUTHORS.rst- update README.rst if needed- bump version in setup.cfg- run all tests- install restview and validate that all .rst docs are correct- commit and push this branch- tag and push that tag- make a PR to merge branch- once merged, run::    bin/pip install --upgrade pip wheel twine setuptools- delete the &quot;dist&quot; and &quot;build&quot; directories::    rm -rf dist/ build/- create a source distribution and wheel with::    bin/python setup.py sdist bdist_wheel- finally, upload to PyPI::    bin/twine upload dist/*.. |ci-tests| image:: https://github.com/package-url/packageurl-python/actions/workflows/ci.yml/badge.svg?branch=main    :target: https://github.com/package-url/packageurl-python/actions/workflows/ci.yml    :alt: CI Tests and build status</longdescription>
</pkgmetadata>