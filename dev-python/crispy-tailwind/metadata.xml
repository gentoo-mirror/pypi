<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============Crispy-Tailwind===============.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/blackA `Tailwind CSS`_ template pack for the wonderful django-crispy-forms_.**WARNING**This project is still in its early stages of development. Any contributions tothe package would be very welcomed.Currently the template pack allows the use of the ``|crispy`` filter to styleyour form. Here is an example image... image:: https://django-crispy-forms.github.io/crispy-tailwind/_images/crispy_form.pngHow to install--------------Install via pip. ::    pip install crispy-tailwindYou will need to update your project's settings file to add ``crispy_forms``and ``crispy_tailwind`` to your project's ``INSTALLED_APPS`` setting. Also set``tailwind`` as an allowed template pack and as the default template packfor your project::    INSTALLED_APPS = (        ...        &quot;crispy_forms&quot;,        &quot;crispy_tailwind&quot;,        ...    )    CRISPY_ALLOWED_TEMPLATE_PACKS = &quot;tailwind&quot;    CRISPY_TEMPLATE_PACK = &quot;tailwind&quot;How to use----------This project is still in its early stages.Current functionality allows the ``|crispy`` filter to be used to style yourform. In your template:1. Load the filter: ``{% load tailwind_filters %}``2. Apply the crispy filter: ``{{ form|crispy }}``We can also use the ``{% crispy %}`` tag to allow usage of crispy-forms'``FormHelper`` and ``Layout``. In your template:1. Load the crispy tag: ``{% load crispy_forms_tags %}``2. Add ``FormHelper`` to your form and use crispy-forms to set-up your form3. Use the crispy tag ``{% crispy form %}`` in your templateDocumentation-------------The documentation for this project is available here:https://django-crispy-forms.github.io/crispy-tailwind/index.htmlFAQs----What about custom widgets?==========================The template pack includes default styles for widgets included in Django itself. `Styling of widget instances`_ can be done by using the ``widget.attrs``argument when creating the widget.For example the following form will render ``&lt;input type=&quot;text&quot; name=&quot;name&quot; class=&quot;customtextwidget custom-css&quot; required id=&quot;id_name&quot;&gt;``::    class CustomTextWidget(forms.TextInput):        pass    class CustomTextWidgetForm(forms.Form):        name = forms.CharField(            widget=CustomTextWidget(attrs={&quot;class&quot;: &quot;custom-css&quot;})        ).. _`Styling of widget instances` : https://docs.djangoproject.com/en/dev/ref/forms/widgets/#styling-widget-instances.. _Tailwind CSS: https://tailwindcss.com/.. _django-crispy-forms: https://github.com/django-crispy-forms/django-crispy-forms</longdescription>
</pkgmetadata>