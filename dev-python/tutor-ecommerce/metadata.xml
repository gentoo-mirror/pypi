<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>E-Commerce plugin for `Tutor &lt;https://docs.tutor.overhang.io&gt;`_===============================================================This is a plugin for `Tutor &lt;https://docs.tutor.overhang.io&gt;`_ that integrates the `E-Commerce &lt;https://github.com/edx/ecommerce/&gt;`__ application in an Open edX platform.Installation------------This plugin requires tutor&gt;=12.0.0, the `Discovery plugin &lt;https://github.com/overhangio/tutor-discovery&gt;`__ and the `MFE plugin &lt;https://github.com/overhangio/tutor-mfe&gt;`__. If you have installed Tutor by downloading the pre-compiled binary, then both plugins should be automatically installed. You can confirm by running::    tutor plugins listBut if you have installed tutor from source, then you also need to install the plugin from source::    pip install tutor-ecommerceThen, in any case you need to enable the plugins::    tutor plugins enable discovery ecommerce mfeServices will have to be re-configured and restarted, so you are probably better off just running launch again::    tutor local launch Note that this plugins is compatible with `Kubernetes integration &lt;http://docs.tutor.overhang.io/k8s.html&gt;`__. When deploying to a Kubernetes cluster, run instead::    tutor k8s launchFor further instructions on how to setup E-Commerce with Open edX, check the `official E-Commerce documentation &lt;https://edx-ecommerce.readthedocs.io/en/latest/&gt;`__.Configuration-------------- ``ECOMMERCE_HOST`` (default: ``&quot;ecommerce.{{ LMS_HOST }}&quot;``)- ``ECOMMERCE_PAYMENT_PROCESSORS`` (default: ``{cybersource: {...}, paypal: {...}}`` See below for details.)- ``ECOMMERCE_ENABLE_IDENTITY_VERIFICATION``: (default: ``True``)- ``ECOMMERCE_ENABLED_PAYMENT_PROCESSORS``: (default: ``[&quot;cybersource&quot;, &quot;paypal&quot;]``)- ``ECOMMERCE_ENABLED_CLIENT_SIDE_PAYMENT_PROCESSORS`` (default: ``[&quot;cybersource&quot;]``)- ``ECOMMERCE_EXTRA_PAYMENT_PROCESSOR_CLASSES`` (default: ``[]``)- ``ECOMMERCE_MYSQL_PASSWORD``: ``&quot;{{ 8|random_string }}&quot;``)- ``ECOMMERCE_SECRET_KEY`` (default: ``&quot;{{ 20|random_string }}&quot;``)- ``ECOMMERCE_OAUTH2_SECRET`` (default: ``&quot;{{ 8|random_string }}&quot;``)- ``ECOMMERCE_API_KEY`` (default: ``&quot;{{ 20|random_string }}&quot;``)- ``ECOMMERCE_DOCKER_IMAGE`` (default: ``&quot;{{ DOCKER_REGISTRY }}overhangio/openedx-ecommerce:{{ TUTOR_VERSION }}&quot;``)- ``ECOMMERCE_WORKER_DOCKER_IMAGE`` (default: ``&quot;{{ DOCKER_REGISTRY }}overhangio/openedx-ecommerce-worker:{{ TUTOR_VERSION }}&quot;``)- ``ECOMMERCE_MYSQL_DATABASE`` (default: ``&quot;ecommerce&quot;``)- ``ECOMMERCE_MYSQL_USERNAME`` (default: ``&quot;ecommerce&quot;``)- ``ECOMMERCE_CURRENCY`` (default: ``&quot;USD&quot;``)- ``ECOMMERCE_OAUTH2_KEY`` (default: ``&quot;ecommerce&quot;``)- ``ECOMMERCE_API_TIMEOUT`` (default: ``5``)- ``ECOMMERCE_WORKER_JWT_ISSUER`` (default: ``&quot;ecommerce-worker&quot;``)- ``ECOMMERCE_EXTRA_PIP_REQUIREMENTS`` (default: ``[]``)You will need to modify the ``ECOMMERCE_PAYMENT_PROCESSORS`` parameter to configure your payment providers credentials. By default, it is equal to::    cybersource:        merchant_id: SET-ME-PLEASE        flex_shared_secret_key_id: SET-ME-PLEASE        flex_shared_secret_key: SET-ME-PLEASE        soap_api_url: https://ics2wstest.ic3.com/commerce/1.x/transactionProcessor/CyberSourceTransaction_1.140.wsdl        transaction_key: SET-ME-PLEASE      paypal:        cancel_checkout_path: /checkout/cancel-checkout/        client_id: SET-ME-PLEASE        client_secret: SET-ME-PLEASE        error_url: /checkout/error/        mode: sandbox        receipt_url: /checkout/receipt/We suggest you modify this configuration, save it to ``ecommerce-config.yml`` and then load it with::  tutor config save --set &quot;ECOMMERCE_PAYMENT_PROCESSORS=$(cat ecommerce-config.yml)&quot;Cybersource~~~~~~~~~~~To enable the `Cybersource &lt;https://cybersource.com&gt;`__ payment processor, two keys need to be generated. In your Cybersource account, go to &quot;Payment Configuration&quot; ü†Ü &quot;Key Management&quot; ü†Ü &quot;Generate key&quot;. Create the following keys:- SOAP API key: use this key to define the ``transaction_key`` setting.- REST Shared secret: use the key ID and value to define ``flex_shared_secret_key_id`` and ``flex_shared_secret_key``, respectively.The ``merchant_id`` setting corresponds to your Merchant ID.Operations----------Creating a user~~~~~~~~~~~~~~~The ecommerce user interface will be available at http://ecommerce.local.overhang.io for a local instance, and at ``ECOMMERCE_HOST`` (by  default: ``http(s)://ecommerce.&lt;yours lms host&gt;``) in production. In order to run commands from the UI, a user with admin rights must be created. There are two ways to proceed. To create a brand new user in E-Commerce which will not exist in the LMS, run::  tutor local run ecommerce ./manage.py createsuperuserThen login with this new user at: http://ecommerce.local.overhang.io/admin/To re-use an existing LMS user, first go to http://ecommerce.local.overhang.io/login. You should be redirected to the LMS login page, then to the dashboard. Then this user must be made a staff/superuser in E-Commerce::    tutor local run ecommerce ./manage.py shell -c &quot;from django.contrib.auth import get_user_model; get_user_model().objects.filter(email='USER@EMAIL.COM').update(is_staff=True, is_superuser=True)&quot;Make sure to replace ``USER@EMAIL.COM`` by the actual user email address. You should then be able to view the Oscar dashboard at http://ecommerce.local.overhang.io.Custom payment processors~~~~~~~~~~~~~~~~~~~~~~~~~‚ö†Ô∏è WARNING: as of Lilac (Tutor v12), Open edX no longer supports custom payment processors with E-Commerce. There is an ongoing conversation about how to resolve this issue which you can follow `here &lt;https://discuss.openedx.org/t/urgent-ecommerce-in-lilac-custom-payment-processors-broken/5055&gt;`__.Image customisation~~~~~~~~~~~~~~~~~~~E-Commerce implementations vary a lot from one country to another. If all you need are the Paypal, Cybersource and Stripe payment processors, then it should not be necessary to customize the tutor-ecommerce docker image, which contains the vanilla E-Commerce platform. However, if you need to run a fork of E-Commerce, or install extra requirements, then you should re-build the docker image. To do so, first set the appropriate settings::  tutor config save \    --set 'ECOMMERCE_EXTRA_PIP_REQUIREMENTS=[&quot;git+https://github.com/myusername/myplugin&quot;]'Then, build the image, pointing to your fork if necessary::  tutor images build ecommerce \    -a ECOMMERCE_REPOSITORY=https://github.com/myusername/ecommerce \    -a ECOMMERCE_VERSION=my/tagDevelopment~~~~~~~~~~~When running Tutor in development mode, the ecommerce service is accessible at http://ecommerce.local.overhang.io:8130.To mount a local ecommerce repository in the ecommerce container, add the following content to the ``$(tutor config printroot)/env/dev/docker-compose.override.yml`` file::    version: &quot;3.7&quot;    services:      ecommerce:        volumes:          - /absolute/path/to/ecommerce:/openedx/ecommerceYou will have to generate static assets in your local repository::    tutor dev run ecommerce npm install    tutor dev run ecommerce ./node_modules/.bin/bower install --allow-root    tutor dev run ecommerce python3 manage.py update_assets --skip-collectTo attach a debugger to the ecommerce service, run::    tutor dev start ecommerceTroubleshooting---------------This Tutor plugin is maintained by R√©gis Behmo from `Overhang.IO &lt;https://overhang.io&gt;`__. Community support is available from the official `Open edX forum &lt;https://discuss.openedx.org&gt;`__. Do you need help with this plugin? See the `troubleshooting &lt;https://docs.tutor.overhang.io/troubleshooting.html&gt;`__ section from the Tutor documentation.License-------This work is licensed under the terms of the `GNU Affero General Public License (AGPL) &lt;https://github.com/overhangio/ecommerce/blob/master/LICENSE.txt&gt;`_.</longdescription>
</pkgmetadata>