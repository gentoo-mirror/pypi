<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Tests](https://github.com/mib1185/py-sucks/actions/workflows/tests.yaml/badge.svg)](https://github.com/mib1185/py-sucks/actions/workflows/tests.yaml)[![PyPI version](https://badge.fury.io/py/py-sucks.svg)](https://pypi.org/project/py-sucks)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/py-sucks)](https://pypi.org/project/py-sucks)# py-sucksThis is the successor of &lt;https://github.com/wpietri/sucks&gt;.## OverviewA simple command-line python script to drive a robot vacuum. Currentlyknown to work with the Ecovacs Deebot N79, M80 Pro, M81, M88Pro, and R95 MKII from both North America and Europe.Does it work for your model as well? Join the discussion on the[sucks-users mailinglist](https://groups.google.com/forum/#!forum/sucks-users).If you're curious about the protocol, I have [a rough doc](http://github.com/mib1185/py-sucks/blob/master/protocol.md)started. I'll happily accept pull requests for it.Why the project name? Well, a) it's ridiculous that I needed to MITMmy own vacuum.  This is not the future I signed up for. And b),it's a vacuum.## InstallationIf you have a recent version of Python 3, you should be able todo `pip install py-sucks` to get the most recently released version ofthis.## UsageTo get started, you'll need to have already set up an EcoVacs accountusing your smartphone.With that ready, step one is to log in:```bash% sucks loginEcovacs app email: [your email]Ecovacs app password: [your password]your two-letter country code: usyour two-letter continent code: naConfig saved.```That creates a config file in a platform-appropriate place. The passwordis hashed before saving, so it's reasonably safe. (If it doesn't appearto work for your continent, try &quot;ww&quot;, their world-wide catchall.)With that set up, you could have it clean in auto mode for 10 minutesand return to its charger:```bash% sucks clean 10```You could have it clean for 15 minutes and then do an extra 10 minutesof edging:```bash% sucks clean 15 edge 10```If you wanted it to clean for 5 minutes and then stop without charging:```bash% sucks clean 5 stop```If it's running amok and you'd just like it to stop where it is:```bash% sucks stop```To tell it to go plug in:```bash% sucks charge```I run mine from my crontab, but I didn't want it to clean every day,so it also has a mode where it randomly decides to run or not based ona frequency you give it. My crontab entry looks like this:```plaintext0 10 * * * /home/william/projects/sucks/sucks.sh clean -f 4/7 15 edge -f 1/14 10```This means that every day at 10 am, it might do something. 4 days outof 7, it will do 15 minutes of automatic cleaning. 1 day out of 14,it will do 10 minutes of edging. And afterward it will always go back tocharge.## Library useYou are welcome to try using this as a python library for other efforts. TheAPI is still experimental, so expect changes. Please join the [mailinglist](https://groups.google.com/forum/#!forum/sucks-users) to participate inshaping the API.A simple usage might go something like this:```pythonimport sucksconfig = ...api = EcoVacsAPI(config['device_id'], config['email'], config['password_hash'],                         config['country'], config['continent'])my_vac = api.devices()[0]vacbot = VacBot(api.uid, api.REALM, api.resource, api.user_access_token, my_vac, config['continent'])vacbot.connect_and_wait_until_ready()vacbot.run(Clean())  # start cleaningtime.sleep(900)      # clean for 15 minutesvacbot.run(Charge()) # return to the charger```## DevelopingIf you'd like to join in on developing, I recommend checking out the code,setting up a virtual environment, and installing this package in editablemode. You can confirm your environment works by running the tests. And pleasedo join the [mailing list](https://groups.google.com/forum/#!forum/sucks-users)to discuss your plans.For more information see [the development documentation](developing.md).## See alsoThere are now similar libraries in [Javascript](https://github.com/joostth/sucks.js)and [Go](https://github.com/skburgart/go-vacbot).## ThanksMy heartfelt thanks to:* [xmpppeek](https://www.beneaththewaves.net/Software/XMPPPeek.html), a great library for examining XMPP traffic flows (yes, your vacuum speaks Jabbber!),* [mitmproxy](https://mitmproxy.org/), a fantastic tool for analyzing HTTPS,* [click](http://click.pocoo.org/), a wonderfully complete and thoughtful library for making Python command-line interfaces,* [requests](http://docs.python-requests.org/en/master/), a polished Python library for HTTP requests,* [Decompilers online](http://www.javadecompilers.com/apk), which was very helpful in figuring out what the Android app was up to,* Albert Louw, who was kind enough to post code from [his own experiments](https://community.smartthings.com/t/ecovacs-deebot-n79/93410/33) with his device, and* All the users who have given useful feedback and contributed code!</longdescription>
</pkgmetadata>