<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Combo LockThe combo-lock is a combination of a process lock and a thread lock. Usable in cases both multiple threads and multiple processes are sharing the same resource such as a file in the file system.The module utilizes the FileLock from [filelock](https://pypi.org/project/filelock/) and the standard *Lock* from threading.The FileLock uses a filesystem lock so the initialization of the class requires a path for the lock file.## Example```pythonfrom combo_lock import ComboLocklock = ComboLock('/tmp/my.lock')with lock:    write_my_shared_resource()```A `NamedLock` will save the lock file to shared memory using [memory-tempfile](https://github.com/mbello/memory-tempfile)```pythonfrom combo_lock import NamedLocklock = NamedLock('some_name')with lock:    write_my_shared_resource()```### HistoryThe combo-lock was originally created for [Mycroft-core](https://github.com/mycroftai/mycroft-core) but as it's been useful in other projects a separate release seemed appropriate.</longdescription>
</pkgmetadata>