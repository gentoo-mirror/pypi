<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>### English to IPA (eng_to_ipa)This Python program utilizes the Carnegie-Mellon University Pronouncing Dictionary to convert English text into the [International Phonetic Alphabet](https://en.wikipedia.org/wiki/International_Phonetic_Alphabet).The `convert` function is used to take English text and convert it to IPA, like so:```Python&gt;&gt;&gt; import eng_to_ipa as ipa&gt;&gt;&gt; ipa.convert(&quot;The quick brown fox jumped over the lazy dog.&quot;)'ðə kwɪk braʊn fɑks ʤəmpt ˈoʊvər ðə ˈleɪzi dɔg.'``` Note that words that cannot be found in the CMU dictionary are simply reprinted with an asterisk.#### `convert` parameters* **text** : *string* - The input string of English text to be converted to IPA notation.* **keep_punct** : *boolean, optional (default=True)* - Determines whether or not the punctuation marks from the input stringshould be retained or not.* **retrieve_all** : *boolean, optional (default=False)* - Given that some words might have more than one transcription,this parameter determines whether or not a list of all possible combinations of transcriptions should be returned (True) or just the string of one transcription (False). * **stress_marks** : *string, optional (default='both')* - Determines whether or not the primary and secondary stress markings (ˈ, ˌ) should be retained. Understood arguments are:   * &quot;primary&quot; - retains primary stress only    * &quot;secondary&quot; - retains secondary stress only   * &quot;both&quot; - to keep both primary and secondary stress markers.    * **mode** : *string, optional (default='sql')* - Accepts &quot;sql&quot; or &quot;json&quot;, depending on which version of the database you'd like to use. As another option for JSON users, simply use the function `jonvert` instead of `convert`.    The `ipa_list` function returns a list of each word as a list of all its possible transcriptions. It has all the sameoptional `stress_marks` and `keep_punct` parameters as `convert`.```Python&gt;&gt;&gt; ipa.ipa_list(&quot;The record was expensive.&quot;)[['ði', 'ðə'], ['rəˈkɔrd', 'rɪˈkɔrd', 'ˈrɛkərd'], ['wɑz'], ['ɪkˈspɛnsɪv.']]```The `isin_cmu` function takes a word (or list of words) and checks if it is in the CMU pronouncing dictionary (returns `True` or `False`). If a list of words is provided, then `True` will only be returned if *every* provided word is in the dictionary.```Python&gt;&gt;&gt; ipa.isin_cmu(&quot;The dentist opened a new practice.&quot;)True&gt;&gt;&gt; ipa.isin_cmu(&quot;emoji&quot;)False```The `get_rhymes` function returns a list of rhymes for a word or set of words. ```Python&gt;&gt;&gt; ipa.get_rhymes(&quot;rhyming function&quot;)[['climbing', 'diming', 'liming', 'priming', 'timing'], ['compunction', 'conjunction', 'dysfunction', 'injunction', 'junction', 'malfunction']]```*Use the `jhymes` function instead to force usage of the JSON database.*   The `syllable_count` function returns an integer, corresponding to the number of syllables in a word. Returns a list of syllable counts if more than one word is provided in the input string.```Python&gt;&gt;&gt; ipa.syllable_count(&quot;computer programming&quot;)[3, 3]```For another Python package that offers support for rhyming and syllable counts (as well as other cool things), see [pronouncingpy](https://github.com/aparrish/pronouncingpy).Note: I'd like to make this project easily available/installable from pip, but I don't know how. Looking for help!### Releaseversion: 0.0.2#### How to release```bashpip install setuptools wheel twinepython setup.py sdistpython -m twine upload --repository  testpypi dist/*python -m twine upload --repository  pypi dist/*rm -rf dist *.egg-info MANIFEST```</longdescription>
</pkgmetadata>