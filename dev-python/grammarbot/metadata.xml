<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># grammarbot-pyGrammar Bot provides spelling and grammar check. Signup for an API key athttps://www.grammarbot.io/ for increased usage limits. The API still workswith no key, but the daily usage limit is lower.## Installation```shpip install grammarbot```## UsageSee the example below```py# import the client libraryfrom grammarbot import GrammarBotClient# Creating the client# ===================client = GrammarBotClient()# or, signup for an API Key to get higher usage limits here: https://www.grammarbot.io/client = GrammarBotClient(api_key='my_api_key_here') # GrammarBotClient(api_key=my_api_key_here)# you can even set the base URI to a different serverclient = GrammarBotClient(base_uri='http://backup.grammarbot.io:80')# Analyzing the text# ==================# There is only one method to perform the analysis, viz. GrammarBotClient.check# method.text = 'I cant remember how to go their'# check the text, returns GrammarBotApiResponse objectres = client.check(text) # GrammarBotApiResponse(matches=[GrammarBotMatch(offset=2, length=4, rule={'CANT'}, category={'TYPOS'}), GrammarBotMatch(offset=26, length=5, rule={'CONFUSION_RULE'}, category={'TYPOS'})])# Inspecting the GrammarBotApiResponse object# ===========================================# check detected languageres.detected_language # &quot;en-US&quot;# check if the result is incompleteres.result_is_incomplete # False# see the suggestions / corrections suggested by the GrammarBot API# returns a list of GrammarBotMatch objects describing each replacementres.matches # [GrammarBotMatch(offset=2, length=4, rule={'CANT'}, category={'TYPOS'}), GrammarBotMatch(offset=26, length=5, rule={'CONFUSION_RULE'}, category={'TYPOS'})]# Inspecting the GrammarBotMatch object# =====================================match0 = match[0] # GrammarBotMatch(offset=2, length=4, rule={'CANT'}, category={'TYPOS'})# get replacement informationmatch0.replacement_offset # 2match0.replacement_length # 4# get suggested replacementsmatch0.replacements # [&quot;can't&quot;, 'cannot']# get list of possible correct sentences after applying the replacementsmatch0.corrections # [&quot;I can't remember how to go their&quot;, 'I cannot remember how to go their']# get the rules, type and category information of the matchmatch0.rule # 'CANT'match0.category # 'TYPOS'match0.type # 'Other'# getting a friendly message regarding the replacement suggestionmatch0.message # 'Did you mean &quot;can\'t&quot; or &quot;cannot&quot;?'# Getting even more information# =============================# if the information provided by the class properties is not enough, you can# always access the complete original JSON response from GrammarBotApiResponse# objectres.raw_json```## API docsYou can see the API documentation here: https://grammarbot-py.readthedocs.io/en/latest/</longdescription>
</pkgmetadata>