<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Taskiq NATSTaskiq-nats is a plugin for taskiq that adds NATS broker.## InstallationTo use this project you must have installed core taskiq library:```bashpip install taskiq taskiq-nats```## UsageHere's a minimal setup example with a broker and one task.```pythonimport asynciofrom taskiq_nats import NatsBrokerbroker = NatsBroker(    [        &quot;nats://nats1:4222&quot;,        &quot;nats://nats2:4222&quot;,    ],    queue=&quot;random_queue_name&quot;,)@broker.taskasync def my_lovely_task():    print(&quot;I love taskiq&quot;)async def main():    await broker.startup()    await my_lovely_task.kiq()    await broker.shutdown()if __name__ == &quot;__main__&quot;:    asyncio.run(main())```## NatsBroker configurationHere's the constructor parameters:* `servers` - a single string or a list of strings with nats nodes addresses.* `subject` - name of the subect that will be used to exchange tasks betwee workers and clients.* `queue` - optional name of the queue. By default NatsBroker broadcasts task to all workers,    but if you want to handle every task only once, you need to supply this argument.* `result_backend` - custom result backend.* `task_id_generator` - custom function to generate task ids.* Every other keyword argument will be sent to `nats.connect` function.</longdescription>
</pkgmetadata>