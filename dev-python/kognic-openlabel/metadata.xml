<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Kognic OpenLABEL## InstallationInstall the Kognic OpenLABEL package from pip with    pip install kognic-openlabel## Serialization and deserializationSince all models inherit from `pydantic`'s `BaseModel`, serialization and deserialization from dicts or json strings are relatively straight forward. ```pydata = {    &quot;openlabel&quot;: {        &quot;metadata&quot;: {            &quot;schema_version&quot;: &quot;1.0.0&quot;        }    }}import kognic.openlabel.models as OLM# Deserialize dictopenlabel_annotation = OLM.OpenLabelAnnotation.parse_obj(data)# Serialize to jsonjson_data = openlabel_annotation.json(exclude_none=True)# Deserialize jsonopenlabel_annotation = OLM.OpenLabelAnnotation.parse_raw(json_data)# Serialize to dictdict_data = openlabel_annotation.dict(exclude_none=True)```    ## Further readinghttps://www.asam.net/project-detail/asam-openlabel-v100/# Changelog## [1.0.0] - 2022-10-18- Annotell becomes Kognic## [0.1.4] - 2022-01-24- Improved serializability for enum classes## [0.1.3] - 2022-01-04- Fixed issues with version 0.1.2## [0.1.2] - 2021-12-29- Updated several fields with multiple types to fix issues with serialization and deserialization.For example, the coordinates on `Poly2d` objects were previously always parsed to strings.  This update means that an attempt to parse them to floats is made. If this fails the they will be parsed to strings. ## [0.1.1] - 2021-11-24- Updated stream properties model generation to be nicer to work with## [0.1.0] - 2021-11-18- Updated json schema and model to be true to the 1.0.0 release of openlabel. Previously it was based on the release-candidate</longdescription>
</pkgmetadata>