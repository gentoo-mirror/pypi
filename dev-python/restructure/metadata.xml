<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dictionary Restructure Tool## ProjectThis project implements in Python a function called `restructure()`:```pythondef restructure(data: dict, specification: dict):...```It is useful to restructure where keys are in a dictionary, for example toupgrade a configuration file to a new schema.## Usage```pythonfrom restructure import restructure```### Moving KeysTo move a nested dictionary to the top-level:```pythoninput_data = {'key1': {'key2': {'key3': 'value',},},}specification = {'key1.key2.key3': 'key',}output = restructure(input_data, specification)assert output == {'key': 'value',}```or the opposite:```pythoninput_data = {'key': 'value',}specification = {'key': 'key1.key2.key3',}output = restructure(input_data, specification)assert output == {'key1': {'key2': {'key3': 'value',},}}```Or to swap keys:```pythoninput_data = {'key1': {'key2': 'value1',},'key3': {'key4': 'value2',},}specification = {'key1.key2': 'key3.key4','key3.key4': 'key1.key2',}output = restructure(input_data, specification)assert output == {'key1': {'key2': 'value2',},'key3': {'key4': 'value1',},}```### Copying KeysKeys can be copied using sets of key-paths:```pythoninput_data = {'key1': {'key2': {'key3': 'value1',},},}specification = {'key1.key2.key3': {'key1.key2.key3.key4', 'key1.key2.key5', 'key1.key6', 'key7'},}output = restructure(input_data, specification)assert output == {'key1': {'key2': {'key3': {'key4': 'value1',},'key5': 'value1',},'key6': 'value1',},'key7': 'value1',}```### Merging KeysKeys which contain dictionaries or equivalent values can be merged:```pythoninput_data = {'key1': {'key2': {'key3': 'value1',},},'key4': {'key5': 'value2',},'key6': 'value1',}specification = {'key4': 'key1.key2','key6': 'key1.key2.key3',}output = restructure(input_data, specification)assert output == {'key1': {'key2': {'key3': 'value1','key5': 'value2',},},}```### Removing KeysKeys can be removed by providing `None` or an empty string:```pythoninput_data = {'key1': {'key2': 'value1','key3': 'value2',        'key4': 'value3',},}specification = {'key1.key3': None,    'key1.key4': '',}output = restructure(input_data, specification)assert output == {'key1': {'key2': 'value1',},}```## For Developers- Follows [Semantic Versioning 2.0.0](https://semver.org/)- Follows [this package structure](https://packaging.python.org/en/latest/tutorials/packaging-projects/)### TestingTo run unit tests, run the following command from the project root directory:```bashpython -m unittest```### PackagingBefore packaging, update the version number in `pyproject.toml`To package &amp; upload the project, run the following commands from the project root directory:```bashpython -m buildpython -m twine upload dist/*```</longdescription>
</pkgmetadata>