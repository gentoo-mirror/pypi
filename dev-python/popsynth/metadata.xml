<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![CI](https://github.com/grburgess/popsynth/workflows/CI/badge.svg?branch=master)[![codecov](https://codecov.io/gh/grburgess/popsynth/branch/master/graph/badge.svg)](https://codecov.io/gh/grburgess/popsynth)[![Codacy Badge](https://api.codacy.com/project/badge/Grade/5d02c9e6f5c540989a615eb1575863e3)](https://app.codacy.com/gh/grburgess/popsynth?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=grburgess/popsynth&amp;utm_campaign=Badge_Grade_Settings)[![Documentation Status](https://readthedocs.org/projects/popsynth/badge/?version=latest)](http://jmichaelburgess.com/popsynth/)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5109590.svg)](https://doi.org/10.5281/zenodo.5109590)![PyPI](https://img.shields.io/pypi/v/popsynth)![PyPI - Downloads](https://img.shields.io/pypi/dm/popsynth) [![status](https://joss.theoj.org/papers/a52e4c2c355396e7946917996502aac0/status.svg)](https://joss.theoj.org/papers/a52e4c2c355396e7946917996502aac0)# popsynth![alt text](https://raw.githubusercontent.com/grburgess/popsynth/master/external/logo.png)`popsynth` core function is to create **observed** surveys from **latent** population models. First, let's define what a population of objects is in terms of agenerative model. The two main ingredients are the objects' spatialdistribution (&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\lambda(\vec{r},\vec{\psi})&quot;&gt;) and the distribution oftheir inherent properties (&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\pi(\vec{\phi} | \vec{\psi})&quot;&gt;). Here,&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\vec{\psi}&quot;&gt; are the latent population parameters, &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\vec{r}&quot;&gt; are thespatial locations of the objects, and &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\vec{\phi}&quot;&gt; are the propertiesof the individual objects (luminosity, spin, viewing angle, mass,etc.). The spatial distribution is defined such that:&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\frac{d \Lambda}{dt}(\vec{\psi}) = \int d r \frac{dV}{dr} \lambda(\vec{r}, \vec{\psi}))&quot;&gt;is the intensity of objects for a given set of populationparameters. With these definitions we can define the probability foran object to have position &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\vec{r}&quot;&gt; and properties &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\vec{\phi}&quot;&gt; as&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\pi(\vec{r}, \vec{\phi} | \vec{\psi}) = \frac{\lambda(\vec{r}, \vec{\psi})  \pi(\vec{\phi} | \vec{\psi})}{ \int d r \frac{dV}{dr} \lambda(\vec{r}, \vec{\psi})}&quot;&gt;`popsynth` allows you to specify these spatial and propertydistributions in an object-oriented way to create surveys. The finalingredient to creating a sample for a survey is knowing how manyobjects to sample from the population (before any selection effectsare applied). Often, we see this number in simulation frameworkspresented as &quot;we draw N objects to guarantee we have enough.&quot; This isincorrect. A survey takes place over a given period of time (&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=\Delta t&quot;&gt;) in which observed objects are counted. This is a description of aPoisson process. Thus, the number of objects in a simulation of thissurvey is a draw from a Poisson distribution:&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=N \sim Poisson \left( \Delta t \frac{d\Lambda}{dt} \right)&quot;&gt;Thus, ```popsynth``` first numerically integrates the spatialdistribution to determine the Poisson rate parameter for the given$\vec{\psi}$, then makes a Poisson draw for the number of objects inthe population survey. For each object, positions and properties aredrawn with arbitrary dependencies between them. Finally, selectionfunctions are applied to either latent or observed (with or withoutmeasurement error) properties.**Note:** If instead we draw a preset number of objects, as is done inmany astrophysical population simulation frameworks, it is equivalentto running a survey up until that specific number of objects isdetected. This process is distributed as a negative binomial process,i.e, wait for a number of successes and requires a differentstatistical framework to compare models to data.## Installation```bashpip install popsynth```Note: **This is not synth pop!** If you were looking for some hard driving beats out of a yamaha keyboard with bells... look elsewhere![alt text](https://raw.githubusercontent.com/grburgess/popsynth/master/external/pop.gif)## ContributingContributions to ```popsynth``` are always welcome. They can come in the form of:### Bug reportsPlease use the [Github issue tracking system for anybugs](https://github.com/grburgess/popsynth/issues), for questions,and or feature requests.### Code and more distributionsWhile it is easy to create custom distributions in your local setup,if you would like to add them to popsynth directly, go ahead. Pleaseinclude tests to ensure that your contributions are compatible withthe code and can be maintained in the long term.### DocumentationAdditions or examples, tutorials, or better explanations are alwayswelcome. To ensure that the documentation builds with the currentversion of the software, I am using[jupytext](https://jupytext.readthedocs.io/en/latest/) to write thedocumentation in Markdown. These are automatically converted to andexecuted as jupyter notebooks when changes are pushed to Github.</longdescription>
</pkgmetadata>