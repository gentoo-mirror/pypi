<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>shijian=======Python change, time, file, list, statistics and other utilitiessetup=====.. code:: bash    sudo pip install shijianusage=====time expressions----------------Function ``style_datetime_object`` accepts a ``datetime`` object andreturns a string representation of a time. The default style is&quot;YYYY-MM-DDTHHMMSS&quot; and it can be changed by argument. Styles availableare as follows:+----------------------------+---------------------------------------------+| **time representation**    | **comment**                                 |+============================+=============================================+| YYYY-MM-DDTHHMMSSZ         | filename safe (default)                     |+----------------------------+---------------------------------------------+| YYYY-MM-DDTHHMMSSMMMMMMZ   | microseconds                                |+----------------------------+---------------------------------------------+| YYYY-MM-DD HH:MM:SS UTC    | elegant                                     |+----------------------------+---------------------------------------------+| UNIX time S.SSSSSS         | UNIX time in seconds with second fraction   |+----------------------------+---------------------------------------------+| UNIX time S                | UNIX time in seconds rounded                |+----------------------------+---------------------------------------------+Functions ``time_UTC`` and ``time_UNIX`` are sorts of special cases offunction ``style_datetime_object`` which return representations of thecurrent time (as opposed to any specified datetime object) in a style.For ``time_UTC``, the default style is &quot;YYYY-MM-DDTHHMMSS&quot; and for``time_UNIX``, the default style is &quot;UNIX time S&quot; and these styles canbe changed by argument... code:: python    &gt;&gt;&gt; shijian.time_UTC()    '2015-01-05T092125Z'    &gt;&gt;&gt; shijian.time_UNIX()    1420449720unique identifiers------------------Function ``propose_filename`` proposes a safe filename. It can accept afilename suggestion or, by default, can generate its own filenamesuggestion, a time expression returned by function ``time_UTC``.Filename suggestions are tested and then proposed if they meet testconditions. The default condition is to not overwrite existing files andto append an underscore followed by an integer in order to meet thiscondition... code:: python    &gt;python    Python 2.7.6 (default, Mar 22 2014, 22:59:56)     [GCC 4.8.2] on linux2    Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.    &gt;&gt;&gt; import shijian    &gt;&gt;&gt; shijian.propose_filename()    '2015-01-05T092319Z'    &gt;&gt;&gt; shijian.propose_filename(filename = &quot;data.pkl&quot;)    'data.pkl'    &gt;&gt;&gt;     &gt;touch data.pkl    &gt;python    Python 2.7.6 (default, Mar 22 2014, 22:59:56)     [GCC 4.8.2] on linux2    Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.    &gt;&gt;&gt; import shijian    &gt;&gt;&gt; shijian.propose_filename(filename = &quot;data.pkl&quot;)    'data_1.pkl'Function ``UID`` returns a 128 bit integer unique identifier inhexadecimal with dashes in accordance with `RFC 4122 UUID version4 &lt;http://tools.ietf.org/html/rfc4122.html&gt;`__... code:: python    &gt;&gt;&gt; shijian.UID()    '91df3b90-285c-4f22-8ced-a154b3b5b09b'    &gt;&gt;&gt; shijian.UID()    '169bde88-2be2-4b46-bf2d-5bb7aee85658'Function ``unique_number`` returns an integer that does not exist in aglobal list of integers recorded by the function... code:: python    &gt;&gt;&gt; shijian.unique_number()    1    &gt;&gt;&gt; shijian.unique_number()    2Function ``unique_3_digit_number`` returns an integer of 3 significantfigures that does not exist in a global list of integers of 3significant figures recorded by the function... code:: python    &gt;&gt;&gt; shijian.unique_3_digit_number()    100    &gt;&gt;&gt; shijian.unique_3_digit_number()    101clocks------Clocks can be created in a straightforward way such as the following:.. code:: python    alpha = shijian.Clock(name = &quot;alpha&quot;)By default, clocks keep time from their creation time. This behaviourcan be disabled using Boolean argument ``start = False``. Clocks can beassigned a name or can generate their own unique identifier. Clocks canbe stopped easily:.. code:: python    beta.stop()and can be started easily:.. code:: python    alpha.start()Clocks can report on their characteristics in ways such as thefollowing:.. code:: python    print(alpha.name())    print(alpha.start_time())    print(alpha.stop_time())    print(alpha.time())Clocks can also provide a general printout of their characteristics:.. code:: python    alpha.printout()All clocks are recorded in the shijian list of clocks. Printouts ofclocks are available in two styles: full and statistics. The style&quot;full&quot; returns the elapsed times of all clocks while the default style&quot;statistics&quot; returns the mean times of all clocks of the same name... code:: python    shijian.clocks.printout(style = &quot;full&quot;)    shijian.clocks.printout()daily time range----------------Whether the current time is in a specified daily time range can betested:.. code:: python    shijian.in_daily_time_range(time_range = &quot;1700--0900&quot;)filename sequences------------------The function ``natural_sort`` naturally sorts a list. The function``find_file_sequences``, for which a directory and file extension can bespecified, returns a naturally-sorted list of filenames that are in asequence or returns a dictionary of lists of filenames that are in asequence. For example, a list something like the following could bereturned:.. code:: bash    ['image-000001.png', 'image-000002.png', 'image-000003.png', 'image-000004.png', 'image-000005.png']configurations, Markdown lists------------------------------Markdown lists are human-readable and machine-readable. So, they can beused to specify configurations written by humans for programs. Thismodule features utilities for loading configurations specified inMarkdown lists to Python dictionaries and ordered dictionaries.In order to facilitate the human-readability of configurationspecifications, the idea is that lines that are not valid Markdown listsare ignored.ICHEP 2016----------.. code:: bash    ./time_ICHEP_2016.py.. figure:: https://raw.githubusercontent.com/wdbm/shijian/master/media/ICHEP_2016.gif   :alt: upcoming========Changes to time style specifications are under consideration.</longdescription>
</pkgmetadata>