# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Python SDK for Laminar"

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="alephalpha all bedrock chromadb cohere crewai haystack lancedb langchain llamaindex marqo mcp milvus mistralai ollama pinecone qdrant replicate sagemaker together transformers vertexai watsonx weaviate"
DEPENDENCIES="<dev-python/pydantic-3.0.0[${PYTHON_USEDEP}]
	>=dev-python/python-dotenv-1.0[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-api-1.33.0[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-sdk-1.33.0[${PYTHON_USEDEP}]
	dev-python/opentelemetry-exporter-otlp-proto-http[${PYTHON_USEDEP}]
	dev-python/opentelemetry-exporter-otlp-proto-grpc[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-semantic-conventions-0.54_beta0[${PYTHON_USEDEP}]
	dev-python/opentelemetry-semantic-conventions-ai[${PYTHON_USEDEP}]
	>=dev-python/tqdm-4.0[${PYTHON_USEDEP}]
	>=dev-python/tenacity-8.0[${PYTHON_USEDEP}]
	>=dev-python/grpcio-1.0[${PYTHON_USEDEP}]
	>=dev-python/httpx-0.24.0[${PYTHON_USEDEP}]
	>=dev-python/orjson-3.0.0[${PYTHON_USEDEP}]
	>=dev-python/packaging-22.0[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation-threading[${PYTHON_USEDEP}]
	alephalpha? ( dev-python/opentelemetry-instrumentation-alephalpha[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-alephalpha[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-bedrock[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-chromadb[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-cohere[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-crewai[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-haystack[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-lancedb[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-langchain[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-llamaindex[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-marqo[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-mcp[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-milvus[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-mistralai[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-ollama[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-pinecone[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-qdrant[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-replicate[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-sagemaker[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-together[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-vertexai[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-watsonx[${PYTHON_USEDEP}] )
	all? ( dev-python/opentelemetry-instrumentation-weaviate[${PYTHON_USEDEP}] )
	bedrock? ( dev-python/opentelemetry-instrumentation-bedrock[${PYTHON_USEDEP}] )
	chromadb? ( dev-python/opentelemetry-instrumentation-chromadb[${PYTHON_USEDEP}] )
	cohere? ( dev-python/opentelemetry-instrumentation-cohere[${PYTHON_USEDEP}] )
	crewai? ( dev-python/opentelemetry-instrumentation-crewai[${PYTHON_USEDEP}] )
	haystack? ( dev-python/opentelemetry-instrumentation-haystack[${PYTHON_USEDEP}] )
	lancedb? ( dev-python/opentelemetry-instrumentation-lancedb[${PYTHON_USEDEP}] )
	langchain? ( dev-python/opentelemetry-instrumentation-langchain[${PYTHON_USEDEP}] )
	llamaindex? ( dev-python/opentelemetry-instrumentation-llamaindex[${PYTHON_USEDEP}] )
	marqo? ( dev-python/opentelemetry-instrumentation-marqo[${PYTHON_USEDEP}] )
	mcp? ( dev-python/opentelemetry-instrumentation-mcp[${PYTHON_USEDEP}] )
	milvus? ( dev-python/opentelemetry-instrumentation-milvus[${PYTHON_USEDEP}] )
	mistralai? ( dev-python/opentelemetry-instrumentation-mistralai[${PYTHON_USEDEP}] )
	ollama? ( dev-python/opentelemetry-instrumentation-ollama[${PYTHON_USEDEP}] )
	pinecone? ( dev-python/opentelemetry-instrumentation-pinecone[${PYTHON_USEDEP}] )
	qdrant? ( dev-python/opentelemetry-instrumentation-qdrant[${PYTHON_USEDEP}] )
	replicate? ( dev-python/opentelemetry-instrumentation-replicate[${PYTHON_USEDEP}] )
	sagemaker? ( dev-python/opentelemetry-instrumentation-sagemaker[${PYTHON_USEDEP}] )
	together? ( dev-python/opentelemetry-instrumentation-together[${PYTHON_USEDEP}] )
	transformers? ( dev-python/opentelemetry-instrumentation-transformers[${PYTHON_USEDEP}] )
	vertexai? ( dev-python/opentelemetry-instrumentation-vertexai[${PYTHON_USEDEP}] )
	watsonx? ( dev-python/opentelemetry-instrumentation-watsonx[${PYTHON_USEDEP}] )
	weaviate? ( dev-python/opentelemetry-instrumentation-weaviate[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
