<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**Note:** *This a fork of the original* ``better_exceptions`` *library.This fork is intended to fix some edge cases I reported (see*`#47 &lt;https://github.com/Qix-/better-exceptions/issues/47&gt;`__), *but forthis it adds two dependencies to the project. The fixed errors are toosmall to justify the addition of dependency to the main library, hencethis fork that I publish for personal use.*better-exceptions |Travis|==========================Pretty and more helpful exceptions in Python, automatically... image:: https://github.com/Delgan/better-exceptions/raw/master_fork/screenshot.png    :alt: Example screenshot of exceptionsUsage-----Install ``better_exceptions`` via pip:.. code:: console    $ pip install better_exceptionsAnd set the ``BETTER_EXCEPTIONS`` environment variable to any value:.. code:: bash    export BETTER_EXCEPTIONS=1  # Linux / OSX    setx BETTER_EXCEPTIONS 1    # WindowsThat's it!Python REPL (Interactive Shell)~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In order to use ``better_exceptions`` in the Python REPL, first install thepackage (as instructed above) and run:.. code:: console    $ python -m better_exceptions    Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.    (BetterExceptionsConsole)    &gt;&gt;&gt;in order to drop into a ``better_exceptions``-enabled Python interactive shell.Advanced Usage~~~~~~~~~~~~~~If you want to allow the entirety of values to be outputted instead ofbeing truncated to a certain amount of characters:.. code:: python    import better_exceptions    better_exceptions.MAX_LENGTH = NoneWhile using ``better_exceptions`` in production, do not forget to unsetthe ``BETTER_EXCEPTIONS`` variable to avoid leaking sensitive data inyour logs.Troubleshooting---------------If you do not see beautiful exceptions, first make sure that theenvironment variable does exist. You can try ``echo $BETTER_EXCEPTIONS``(Linux / OSX) or ``echo %BETTER_EXCEPTIONS%`` (Windows). On Linux andOSX, the ``export`` command does not add the variable permanently, youwill probably need to edit the ``~/.profile`` file to make itpersistent. On Windows, you need to open a new terminal after the``setx`` command.Check that there is no conflict with another library, and that the``sys.excepthook`` function has been correctly replaced with the``better_exceptions``'s one. Sometimes other components can set up theirown exception handlers, such as the ``python3-apport`` Ubuntu packagethat you may need to uninstall.Make sure that you have not inadvertently deleted the``better_exceptions_hook.pth`` file that should be in the same place asthe ``better_exceptions`` folder where all of your Python packages areinstalled. Otherwise, try re-installing ``better_exceptions``.You can also try to manually activate the hook by adding``import better_exceptions; better_exceptions.hook()`` at the beginningof your script.Finally, if you still can not get this module to work, `open a newissue &lt;https://github.com/Qix-/better-exceptions/issues/new&gt;`__ bydescribing your problem precisely and detailing your configuration(Python and ``better_exceptions`` versions, OS, code snippet,interpeter, etc.) so that we can reproduce the bug you are experiencing.License=======Copyright Â© 2017, Josh Junon. Licensed under the `MITlicense &lt;LICENSE.txt&gt;`__... |Travis| image:: https://img.shields.io/travis/Delgan/better-exceptions.svg?style=flat-square   :target: https://travis-ci.org/Delgan/better-exceptions</longdescription>
</pkgmetadata>