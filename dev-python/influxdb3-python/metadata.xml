<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://github.com/InfluxCommunity/influxdb3-python/blob/main/python-logo.png?raw=true&quot; alt=&quot;Your Image&quot; width=&quot;150px&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/influxdb3-python/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/influxdb3-python.svg&quot; alt=&quot;PyPI version&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/influxdb3-python/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/influxdb3-python.svg&quot; alt=&quot;PyPI downloads&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/InfluxCommunity/influxdb3-python/actions/workflows/pylint.yml&quot;&gt;        &lt;img src=&quot;https://github.com/InfluxCommunity/influxdb3-python/actions/workflows/pylint.yml/badge.svg&quot; alt=&quot;Lint Code Base&quot;&gt;    &lt;/a&gt;        &lt;a href=&quot;https://github.com/InfluxCommunity/influxdb3-python/actions/workflows/python-publish.yml&quot;&gt;        &lt;img src=&quot;https://github.com/InfluxCommunity/influxdb3-python/actions/workflows/python-publish.yml/badge.svg&quot; alt=&quot;Lint Code Base&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://influxcommunity.slack.com&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;style=social&quot; alt=&quot;Community Slack&quot;&gt;    &lt;/a&gt;&lt;/p&gt;# InfluxDB 3.0 Python Client## Introduction`influxdb_client_3` is a Python module that provides a simple and convenient way to interact with InfluxDB 3.0. This module supports both writing data to InfluxDB and querying data using the Flight client, which allows you to execute SQL and InfluxQL queries on InfluxDB 3.0.## Dependencies- `pyarrow` (automatically installed)- `influxdb-client` (automatically installed)- `pandas` (optional)  ## InstallationYou can install 'influxdb3-python' using `pip`:```bashpip install influxdb3-python```Note: This does not include Pandas support. If you would like to use key features such as `to_pandas()`  and `write_file()` you will need to install `pandas` separately.*Note: Please make sure you are using 3.6 or above. For the best performance use 3.11+*# UsageOne of the easiest ways to get started is to checkout the [&quot;Pokemon Trainer Cookbook&quot;](Examples/pokemon-trainer/cookbook.ipynb). This scenario takes you through the basics of both the client library and Pyarrow.## Importing the Module```pythonfrom influxdb_client_3 import InfluxDBClient3, Point```## InitializationIf you are using InfluxDB Cloud, then you should note that:1. You will need to supply your org id, this is not necessary for InfluxDB Dedicated.2. Use a bucketname for the database argument.```pythonclient = InfluxDBClient3(token=&quot;your-token&quot;,                         host=&quot;your-host&quot;,                         org=&quot;your-org&quot;,                         database=&quot;your-database&quot;)```## Writing DataYou can write data using the Point class, or supplying line protocol.### Using Points```pythonpoint = Point(&quot;measurement&quot;).tag(&quot;location&quot;, &quot;london&quot;).field(&quot;temperature&quot;, 42)client.write(point)```### Using Line Protocol```pythonpoint = &quot;measurement fieldname=0&quot;client.write(point)```### Write from fileUsers can import data from CSV, JSON, Feather, ORC, Parquet```pythonimport influxdb_client_3 as InfluxDBClient3import pandas as pdimport numpy as npfrom influxdb_client_3 import write_client_options, WritePrecision, WriteOptions, InfluxDBErrorclass BatchingCallback(object):    def success(self, conf, data: str):        print(f&quot;Written batch: {conf}, data: {data}&quot;)    def error(self, conf, data: str, exception: InfluxDBError):        print(f&quot;Cannot write batch: {conf}, data: {data} due: {exception}&quot;)    def retry(self, conf, data: str, exception: InfluxDBError):        print(f&quot;Retryable error occurs for batch: {conf}, data: {data} retry: {exception}&quot;)callback = BatchingCallback()write_options = WriteOptions(batch_size=500,                                        flush_interval=10_000,                                        jitter_interval=2_000,                                        retry_interval=5_000,                                        max_retries=5,                                        max_retry_delay=30_000,                                        exponential_base=2)wco = write_client_options(success_callback=callback.success,                          error_callback=callback.error,                          retry_callback=callback.retry,                          WriteOptions=write_options                         )with  InfluxDBClient3.InfluxDBClient3(    token=&quot;INSERT_TOKEN&quot;,    host=&quot;eu-central-1-1.aws.cloud2.influxdata.com&quot;,    org=&quot;6a841c0c08328fb1&quot;,    database=&quot;python&quot;, write_client_options=wco) as client:    client.write_file(        file='./out.csv',        timestamp_column='time', tag_columns=[&quot;provider&quot;, &quot;machineID&quot;])        client.write_file(        file='./out.json',        timestamp_column='time', tag_columns=[&quot;provider&quot;, &quot;machineID&quot;], date_unit='ns' )    ```## Querying ### Querying with SQL```pythonquery = &quot;select * from measurement&quot;reader = client.query(query=query, language=&quot;sql&quot;)table = reader.read_all()print(table.to_pandas().to_markdown())```### Querying with influxql```pythonquery = &quot;select * from measurement&quot;reader = client.query(query=query, language=&quot;influxql&quot;)table = reader.read_all()print(table.to_pandas().to_markdown())```## Windows UsersCurrently, Windows users require an extra installation when querying via Flight natively. This is due to the fact gRPC cannot locate Windows root certificates. To work around this please follow these steps:Install `certifi````bashpip install certifi```Next include certifi within the flight client options:```pythonimport influxdb_client_3 as InfluxDBClient3import pandas as pdimport numpy as npfrom influxdb_client_3 import flight_client_optionsimport certififh = open(certifi.where(), &quot;r&quot;)cert = fh.read()fh.close()client = InfluxDBClient3.InfluxDBClient3(    token=&quot;&quot;,    host=&quot;b0c7cce5-8dbc-428e-98c6-7f996fb96467.a.influxdb.io&quot;,    org=&quot;6a841c0c08328fb1&quot;,    database=&quot;flightdemo&quot;,    flight_client_options=flight_client_options(        tls_root_certs=cert))table = client.query(    query=&quot;SELECT * FROM flight WHERE time &gt; now() - 4h&quot;,    language=&quot;influxql&quot;)print(table.to_pandas())```You may also include your own root certificate via this manor aswell. </longdescription>
</pkgmetadata>