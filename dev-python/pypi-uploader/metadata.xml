<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=============PyPI Uploader=============.. image:: https://secure.travis-ci.org/ignacysokolowski/pypi-uploader.png  :target: http://travis-ci.org/ignacysokolowski/pypi-uploader.. image:: https://coveralls.io/repos/ignacysokolowski/pypi-uploader/badge.png   :target: https://coveralls.io/r/ignacysokolowski/pypi-uploader.. image:: https://pypip.in/v/pypi-uploader/badge.png  :target: https://crate.io/packages/pypi-uploader/.. image:: https://pypip.in/d/pypi-uploader/badge.png  :target: https://crate.io/packages/pypi-uploader/Upload source distributions of your requirements to your PyPI server.The problem===========If you are using a custom PyPI server as a proxy and want to upload somepackages there, it's not easy.  For each package, you need to download itssource and upload it using ``setup.py`` script:.. code-block:: bash    # Uploading requests==2.0.0    $ git clone https://github.com/kennethreitz/requests    $ cd requests    $ git checkout v2.0.0    # Assuming you have 'internal' index-server configured in your '~/.pypirc'.    $ python setup.py sdist upload -r internal    # Uploading coverage==3.5    $ cd ..    $ git clone https://github.com/nedbat/coveragepy    $ cd coveragepy    $ git checkout coverage-3.5    $ python setup.py sdist upload -r internalYou could also download the packages directly into the PyPI's index directory... code-block:: bash    $ ssh pypi-mirror.yourdomain.com    $ pip install requests==2.0.0 coverage==3.5 -d ~/.packagesIf there's more than one package, you could use a requirements file... code-block:: bash    $ scp requirements.txt pypi-mirror.yourdomain.com:.    $ ssh pypi-mirror.yourdomain.com    $ pip install -r requirements.txt -d ~/.packagesBut it's still too much.  You should be able to do it with one command.And what if you don't have SSH access to the PyPI server host?The solution============One command for download and upload.Upload packages by name-----------------------.. code-block:: bash    $ pypiupload packages mock==1.0.1 requests==2.2.1 -i internalUpload packages from requirements file--------------------------------------.. code-block:: bash    $ pypiupload requirements requirements.txt -i internalUpload source distribution files--------------------------------.. code-block:: bash    $ pypiupload files packages/mock-1.0.1.tar.gz \      packages/requests-2.2.1-py2.py3-none-any.whl -i internalMore options------------.. code-block:: bash    $ pypiupload --help    $ pypiupload &lt;command&gt; --helpSupported PyPI servers======================Tested only on `pypiserver &lt;http://pypi.python.org/pypi/pypiserver&gt;`_.Installation============Install from PyPI::    $ pip install pypi-uploaderOr go to the root directory with **setup.py** script and install it::    $ python setup.py installDocumentation=============Documentation is available at https://pypi-uploader.readthedocs.orgSource======Source is available at https://github.com/ignacysokolowski/pypi-uploaderLicense=======PyPI Uploader is licensed under the MIT license.Changelog=========Version 1.1.0-------------* Adapt to newer versions of pip: use ``pip download`` instead of  ``pip install`` for downloading packages, and ``--no-binary :all:`` instead  of ``--no-use-wheel`` to not use wheel archives.Version 1.0.0-------------* Added ``--no-use-wheel`` optionVersion 0.1.0-------------First releaseIssues and contributing=======================Please report any issues on GitHub athttps://github.com/ignacysokolowski/pypi-uploader/issuesOr contribute by submitting a pull request with your changes following theserules:* Follow :pep:`8` rules* Follow :pep:`257` rules* Follow The Zen of Python* Test your commits* Write meaningful commit messages* Keep the documentation up-to-dateTo run tests and build the docs, you have to install additional packages::    $ python setup.py develop    $ pip install -r requirements_dev.txtRunning tests::    $ toxBuilding documentation::    $ cd docs    $ make html</longdescription>
</pkgmetadata>