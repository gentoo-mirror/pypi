<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django_rq_wrapperDjango management command for multiple rq workers in one command and autoreload.---This project builds off of [Django RQ](https://github.com/ui/django-rq). Instead of using the command `python manage.py rqworker high default low`, you can now run `python manage.py rqworkers high default low`.### Installation    pip install django-rq-wrapperAdd ``django_rq_wrapper`` to your installed apps. Use the management command ``rqworkers``.### Added command options:If you need to run multiple workers, you can pass in the ``--workers`` flag with thenumber of workers you want to spawn. If you don't pass in this flag, the number ofworkers will default to the environment variable ``RQ_CONCURRENCY``, or 1 if thatis not set::    python manage.py rqworkers high default low --workers 5If you would like to have your workers autoreload the same way django's runserverautoreloads, use the ``--autoreload`` flag::    python manage.py rqworkers high default low --autoreload### Note for HerokuAdd the environment variable ``RQ_CONCURRENCY`` to your config with the number of workersappropriate for (your dyno type)[https://devcenter.heroku.com/articles/optimizing-dyno-usage#python].</longdescription>
</pkgmetadata>