<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========MongoEngine===========:Info: MongoEngine is an ORM-like layer on top of PyMongo.:Repository: https://github.com/MongoEngine/mongoengine:Author: Harry Marr (http://github.com/hmarr):Maintainer: Stefan WÃ³jcik (http://github.com/wojcikstefan).. image:: https://travis-ci.org/MongoEngine/mongoengine.svg?branch=master  :target: https://travis-ci.org/MongoEngine/mongoengine.. image:: https://coveralls.io/repos/github/MongoEngine/mongoengine/badge.svg?branch=master  :target: https://coveralls.io/github/MongoEngine/mongoengine?branch=master.. image:: https://img.shields.io/badge/code%20style-black-000000.svg  :target: https://github.com/ambv/black.. image:: https://pepy.tech/badge/mongoengine/month  :target: https://pepy.tech/project/mongoengine.. image:: https://img.shields.io/pypi/v/mongoengine.svg  :target: https://pypi.python.org/pypi/mongoengineAbout=====MongoEngine is a Python Object-Document Mapper for working with MongoDB.Documentation is available at https://mongoengine-odm.readthedocs.io - thereis currently a `tutorial &lt;https://mongoengine-odm.readthedocs.io/tutorial.html&gt;`_,a `user guide &lt;https://mongoengine-odm.readthedocs.io/guide/index.html&gt;`_, andan `API reference &lt;https://mongoengine-odm.readthedocs.io/apireference.html&gt;`_.Supported MongoDB Versions==========================MongoEngine is currently tested against MongoDB v3.6, v4.0, v4.4 and v5.0. Future versionsshould be supported as well, but aren't actively tested at the moment. Makesure to open an issue or submit a pull request if you experience any problemswith a more recent MongoDB versions.Installation============We recommend the use of `virtualenv &lt;https://virtualenv.pypa.io/&gt;`_ and of`pip &lt;https://pip.pypa.io/&gt;`_. You can then use ``python -m pip install -U mongoengine``.You may also have `setuptools &lt;http://peak.telecommunity.com/DevCenter/setuptools&gt;`_and thus you can use ``easy_install -U mongoengine``. Another option is`pipenv &lt;https://docs.pipenv.org/&gt;`_. You can then use ``pipenv install mongoengine``to both create the virtual environment and install the package. Otherwise, you candownload the source from `GitHub &lt;http://github.com/MongoEngine/mongoengine&gt;`_ andrun ``python setup.py install``.The support for Python2 was dropped with MongoEngine 0.20.0Dependencies============All of the dependencies can easily be installed via `python -m pip &lt;https://pip.pypa.io/&gt;`_.At the very least, you'll need these two packages to use MongoEngine:- pymongo&gt;=3.4If you utilize a ``DateTimeField``, you might also use a more flexible date parser:- dateutil&gt;=2.1.0If you need to use an ``ImageField`` or ``ImageGridFsProxy``:- Pillow&gt;=2.0.0If you need to use signals:- blinker&gt;=1.3Examples========Some simple examples of what MongoEngine code looks like:.. code :: python    from mongoengine import *    connect('mydb')    class BlogPost(Document):        title = StringField(required=True, max_length=200)        posted = DateTimeField(default=datetime.datetime.utcnow)        tags = ListField(StringField(max_length=50))        meta = {'allow_inheritance': True}    class TextPost(BlogPost):        content = StringField(required=True)    class LinkPost(BlogPost):        url = StringField(required=True)    # Create a text-based post    &gt;&gt;&gt; post1 = TextPost(title='Using MongoEngine', content='See the tutorial')    &gt;&gt;&gt; post1.tags = ['mongodb', 'mongoengine']    &gt;&gt;&gt; post1.save()    # Create a link-based post    &gt;&gt;&gt; post2 = LinkPost(title='MongoEngine Docs', url='hmarr.com/mongoengine')    &gt;&gt;&gt; post2.tags = ['mongoengine', 'documentation']    &gt;&gt;&gt; post2.save()    # Iterate over all posts using the BlogPost superclass    &gt;&gt;&gt; for post in BlogPost.objects:    ...     print('===', post.title, '===')    ...     if isinstance(post, TextPost):    ...         print(post.content)    ...     elif isinstance(post, LinkPost):    ...         print('Link:', post.url)    ...    # Count all blog posts and its subtypes    &gt;&gt;&gt; BlogPost.objects.count()    2    &gt;&gt;&gt; TextPost.objects.count()    1    &gt;&gt;&gt; LinkPost.objects.count()    1    # Count tagged posts    &gt;&gt;&gt; BlogPost.objects(tags='mongoengine').count()    2    &gt;&gt;&gt; BlogPost.objects(tags='mongodb').count()    1Tests=====To run the test suite, ensure you are running a local instance of MongoDB onthe standard port and have ``pytest`` installed. Then, run ``python setup.py test``or simply ``pytest``.To run the test suite on every supported Python and PyMongo version, you canuse ``tox``. You'll need to make sure you have each supported Python versioninstalled in your environment and then:.. code-block:: shell    # Install tox    $ python -m pip install tox    # Run the test suites    $ toxIf you wish to run a subset of tests, use the pytest convention:.. code-block:: shell    # Run all the tests in a particular test file    $ pytest tests/fields/test_fields.py    # Run only particular test class in that file    $ pytest tests/fields/test_fields.py::TestFieldCommunity=========- `MongoEngine Users mailing list  &lt;http://groups.google.com/group/mongoengine-users&gt;`_- `MongoEngine Developers mailing list  &lt;http://groups.google.com/group/mongoengine-dev&gt;`_Contributing============We welcome contributions! See the `Contribution guidelines &lt;https://github.com/MongoEngine/mongoengine/blob/master/CONTRIBUTING.rst&gt;`_</longdescription>
</pkgmetadata>