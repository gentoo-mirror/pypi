<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Cuenca – Python client library[![test](https://github.com/cuenca-mx/cuenca-python/workflows/test/badge.svg)](https://github.com/cuenca-mx/cuenca-python/actions?query=workflow%3Atest)[![codecov](https://codecov.io/gh/cuenca-mx/cuenca-python/branch/main/graph/badge.svg)](https://codecov.io/gh/cuenca-mx/cuenca-python)[![PyPI](https://img.shields.io/pypi/v/cuenca.svg)](https://pypi.org/project/cuenca/)# Installation`pip install cuenca`# AuthenticationThe preferred way to configure the credentials for the client is to set the`CUENCA_API_KEY` and `CUENCA_API_SECRET` environment variables. The clientlibrary will automatically configure based on the values of those variables.To configure manually:```pythonimport cuencacuenca.configure(api_key='PKxxxx', api_secret='yyyyyy')```### JwtJWT tokens can also be used if your credentials have enough permissions. Todo so, you may include the parameter `use_jwt` as part of your `configure````pythonimport cuencacuenca.configure(use_jwt=True)```A new token will be created at this moment and automatically renewed beforesending any request if there is less than 5 minutes to be expired accordingto its payload data.## Transfers### Create transfer```pythonimport cuencacuenca.configure(sandbox=True)  # if using sandboxlocal_transfer_id = '078efdc20bab456285437309c4b75673'transfer = cuenca.Transfer.create(    recipient_name='Benito Juárez',    account_number='646180157042875763',  # CLABE or card number    amount=12345,  # Mx$123.45    descriptor='sending money',  # As it'll appear for the customer    idempotency_key=local_transfer_id)# To get updated statustransfer.refresh()```### Retrieve by `id````pythonimport cuencatransfer = cuenca.Transfer.retrieve('tr_123')```### Query by `idempotency_key`, `account_number` and `status`Results are always returned in descending order of `created_at`The methods that can be used:- `one()` - returns a single result. Raises `NoResultFound` if there are noresults and `MultipleResultsFound` if there are more than one- `first()` - returns the first result or `None` if there aren't any- `all()` - returns a generator of all matching results. Pagination is handledautomatically as you iterate over the response- `count()` - returns an integer with the count of the matching results```pythonimport cuencafrom cuenca.types import Status# find the unique transfer using the idempotency keylocal_transfer_id = '078efdc20bab456285437309c4b75673'transfer = cuenca.Transfer.one(idempotency_key=local_transfer_id)# returns a generator of all succeeded transfers to the specific accounttransfers = cuenca.Transfer.all(    account_number='646180157000000004',    status=Status.succeeded)# the total number of succeeded transferscount = cuenca.Transfer.count(status=Status.succeeded)```## Balance### Current balance```pythonimport cuenca# balance is the amount in centsbalance = cuenca.get_balance()```## Api Keys### Create new `ApiKey` and deactivate old```pythonimport cuenca# Create new ApiKeynew = cuenca.ApiKey.create()# Have to use the new key to deactivate the old keyold_id = cuenca.session.auth[0]cuenca.session.configure(new.id, new.secret)cuenca.ApiKey.deactivate(old_id, 60)  # revoke prior API key in an hour```## LoginCreate a new password```pythoncuenca.UserCredential.create(password='1234567890')```To update your password```pythoncuenca.UserCredential.update(password='1234567890')```To reset password```pythoncuenca.UserCredential.update(password=None)```Login in and out```pythoncuenca.UserLogin.create(password='1234567890')...  # authenticated operationcuenca.UserLogin.logout()```Create login token for biometrics```python# Must be logged incuenca.UserLogin.create(password='1234567890')token = cuenca.LoginToken.create()cuenca.UserLogin.logout()# Then you can use the token which lasts for 7 dayscuenca.configure(login_token=token)...  # authenticated operation```</longdescription>
</pkgmetadata>