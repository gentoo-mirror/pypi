<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================#pyrsync2===============================This is a fork of the `pyrsync` package with some changes such as:    - The functions `blockchecksums` and `rsyncdelta` are now generators      which make it easier to send through the network    - Some unittests are added    - Implementation changes (uses bytearray instead of a deque, faster hash lookup etc.)    - The block size is no longer in the delta itself, it needs to be passed      to the patchstream function    - Does not use try/except for programming logicIt's a Python 3 only package!pyrsync2 is a Python module which implements the [rsync algorithm] [1],written in pure Python. It *is not* a wrapper for rsync, but a set offunctions which apply full rsync functionality through Python.The majority of the code for this module is taken from [Eric Pruitt'spost at ActiveState] [2]. It was orginally licensed under an [MIT license][3], and this license has been kept wthout modifications.## Installation--------------------------------You need to have PIP:    $ sudo pip install pyrsync2## Use--------------------------------An example use case for this module:    # On the system containing the file that needs to be patched    &gt;&gt;&gt; import pyrsync2    &gt;&gt;&gt; unpatched = open(&quot;unpatched.file&quot;, &quot;rb&quot;)    &gt;&gt;&gt; hashes = pyrsync2.blockchecksums(unpatched)    # On the remote system after having received hashes    &gt;&gt;&gt; import pyrsync2    &gt;&gt;&gt; patchedfile = open(&quot;patched.file&quot;, &quot;rb&quot;)    &gt;&gt;&gt; delta = pyrsync2.rsyncdelta(patchedfile, hashes)    # System with the unpatched file after receiving delta    &gt;&gt;&gt; unpatched.seek(0)    &gt;&gt;&gt; save_to = open(&quot;locally-patched.file&quot;, &quot;wb&quot;)    &gt;&gt;&gt; pyrsync2.patchstream(unpatched, save_to, delta)[1]: http://samba.anu.edu.au/rsync/ &quot;Andrew Tridgell and Paul Mackerras. The rsync algorithm. Technical Report TR-CS-96-05, Canberra 0200 ACT, Australia, 1996.&quot;[2]: https://code.activestate.com/recipes/577518-rsync-algorithm/ &quot;Rsync Algorithm (Python Recipe)&quot;[3]: http://www.opensource.org/licenses/mit-license.php &quot;OSI MIT License&quot;</longdescription>
</pkgmetadata>