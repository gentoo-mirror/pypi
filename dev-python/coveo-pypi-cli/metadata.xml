<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># coveo-pypi-cliA very simple pypi cli that can be used to obtain the latest version of a package, or calculate the next one.Serves our automatic pypi push github action.## `pypi current-version`Display the current version of a package from `pypi.org`## `pypi next-version`Compute the next version of a package.- Can be given a minimum version  - e.g.: pypi is `0.0.3` and mininum set to `0.1`: next version will be `0.1`- Supports computing pre-release versions# private index supportYou can target a private pypi server through a switch or an environment variable.## Using the `--index` switch```shell$ pypi current-version secret-package --index https://my.pypi.server.org1.0.0$ pypi current-version secret-package --index https://my.pypi.server.org:51800/urlprefix1.0.0```## Using the environment variable:```shell$ PYPI_CLI_INDEX=&quot;https://my.pypi.server.org&quot; pypi current-version secret-package```Note: Unlike `pip --index-url`, **you must omit** the `/simple` url prefix.The API used by `coveo-pypi-cli` is served by the `/pypi` endpoint _and should not be specified either!_# pypi-cli in actionThe best example comes from the [github action](../.github/workflows/actions/publish-to-pypi), which computes the next version based on the current release and what's in the `pyproject.toml`.Here's what you can expect from the tool:```shell$ pypi current-version coveo-functools0.2.1$ pypi next-version coveo-functools0.2.2$ pypi next-version coveo-functools --prerelease0.2.2a1$ pypi next-version coveo-functools --minimum-version 0.20.2.2$ pypi next-version coveo-functools --minimum-version 0.30.3$ pypi next-version coveo-functools --minimum-version 0.3 --prerelease0.3a1# Here's an example of how we use it in the github action$ poetry versioncoveo-pypi-cli 0.1.0$ minimum_version=$(poetry version | cut --fields 2 --delimiter ' ' )0.1.0# when left unattended, the next-version increments the patch number$ pypi next-version coveo-pypi-cli --minimum-version $minimum_version0.2.2# in order to change the minor or major, because the script uses `poetry version` to obtain the minimum version, # just set it in `pyproject.toml` manually or by calling `poetry version &lt;new-version&gt;` (and commit!)$ poetry version 0.3Bumping version from 0.1.0 to 0.3$ minimum_version=$(poetry version | cut --fields 2 --delimiter ' ' )0.3$ pypi next-version coveo-pypi-cli --minimum-version $minimum_version0.3# IMPORTANT: the publish step MUST set the computed version for poetry before publishing!$ poetry version $minimum_version0.3$ poetry publish...# after publishing the above, repeating the steps would yield:$ pypi next-version coveo-pypi-cli --minimum-version $minimum_version0.3.1# for completeness, you can also publish pre-releases:$ pypi next-version coveo-pypi-cli --minimum-version $minimum_version --prerelease0.3.1a1 ```</longdescription>
</pkgmetadata>