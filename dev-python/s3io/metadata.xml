<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>====s3io====About-----s3io is a minimalistic python module which provides file object access to data on S3.All data manipulations are done via temporary local files - so you will actually work with local temp file which is a file object with all its methods supported.Just keep in mind these facts:1. Reading: the whole file will be downloaded to local temporary location at entering the context.2. Writing: temp file will be provided at entering the context. Actual saving to S3 will be performed at exit from context. Thus such methods as ``flush`` will not influence the process of saving to S3.Dependencies------------- `boto &lt;https://github.com/boto/boto&gt;`_Examples--------s3io is intended to be used via context manager only.There are three ways to provide access to s3:1. Directly providing ``s3_connection``.2. Providing credentials: ``aws_access_key_id`` and ``aws_secret_access_key``.3. Providing ``profile_name``. This method is recommended to use. See `boto docs &lt;http://boto.readthedocs.org/en/latest/boto_config_tut.html&gt;`_ for more info.Reading file using existing S3 connection::        import s3io        s3 = boto.connect_s3()        with s3io.open('s3://&lt;bucket&gt;/&lt;key&gt;', s3_connection=s3) as s3_file:            contents = s3_file.read()Reading file using credentials::        credentials = dict(            aws_access_key_id='&lt;ACCESS_KEY&gt;',            aws_secret_access_key='&lt;SECRET_KEY&gt;',        )        with s3io.open('s3://&lt;bucket&gt;/&lt;key&gt;', **credentials) as s3_file:            contents = s3_file.read()Reading file using profile::        with s3io.open('s3://&lt;bucket&gt;/&lt;key&gt;', profile_name='&lt;profile&gt;') as s3_file:            contents = s3_file.read()Writing file using profile::        with s3io.open('s3://&lt;bucket&gt;/&lt;key&gt;', mode='w', profile_name='&lt;profile&gt;') as s3_file:            s3_file.write('Some data.')Exceptions----------Possible exceptions:1. s3io.BucketNotFoundError2. s3io.KeyNotFoundError3. s3io.UrlParseError</longdescription>
</pkgmetadata>