<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Werk24 Client&lt;p align=&quot;center&quot;&gt;  &lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://werk24.io/?utm_source=github&amp;utm_medium=logo&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/W24-Service-GmbH/.github/blob/main/profile/Werk24_banner_GitHub.png?raw=true&quot; alt=&quot;Werk24&quot;&gt;    &lt;/a&gt;  &lt;/p&gt;&lt;/p&gt;[![pypi](https://img.shields.io/pypi/v/werk24.svg)](https://pypi.python.org/pypi/werk24)[![Tests | cpython 3.7, 3.8, 3.9](https://github.com/W24-Service-GmbH/werk24-python/actions/workflows/python-test.yml/badge.svg)](https://github.com/W24-Service-GmbH/werk24-python/actions/workflows/python-test.yml)# FeaturesWhen submitting a PDF, PNG, JPEG of a Technical Drawing to Werk24's API, you receive within secondsthe following features:- Measures and Tolerances- Threads and Chamfers- Geometric Dimensioning and Tolerancing frames- External Dimensions- Surface Roughnesses- the Title Block information (Material, Drawing ID, Designation, General Tolerances)And finally you can obtain a CAD Approximation of the part's Geometry.Currently this features is focused on flat parts, such as sheet metal parts, but more is in the pipeline.Check our website at [https://werk24.io](https://werk24.io/?utm_source=github&amp;utm_medium=feature_link).&lt;table style=&quot;width:100%&quot;&gt;&lt;tr&gt;&lt;td&gt;Input&lt;/td&gt;&lt;td&gt;Output&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;width:50%&quot;&gt;    &lt;a href=&quot;https://werk24.io/?utm_source=github&amp;utm_medium=drawing_input&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://docs.werk24.io/img/drawing_input.png&quot; alt=&quot;Werk24&quot; style=&quot;max-height:200px&quot;&gt;    &lt;/a&gt;&lt;/td&gt;&lt;td style=&quot;width:50%&quot;&gt;    &lt;a href=&quot;https://werk24.io/?utm_source=github&amp;utm_medium=drawing_output&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://docs.werk24.io/img/drawing_output.png&quot; alt=&quot;Werk24&quot; style=&quot;max-height:200px&quot;&gt;    &lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;    &lt;small&gt;Original drawing by T. Hartmann (CC)&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;# ApplicationsTypical applications of our Technology include- Instant Pricing on 2D Engineering Drawings- Feasibility Checks on incoming RFQs- Auto-Fill of Online Configurators- Automated Anonymiziation of Technical Drawings- Automated Supplier Scouting- Automated Registration of incoming RFQs into your ERP system- Structured Archiving## InstallationPip installation    pip install werk24## DocumentationSee [https://werk24.io/docs/index.html](https://werk24.io/docs/index.html)## CLITo get a first impression, you can run the CLI:    usage: w24cli techread [-h] [--ask-techread-started] [--ask-page-thumbnail]                       [--ask-sheet-thumbnail] [--ask-sectional-thumbnail]                       [--ask-variant-measures]                       input_files## Example    from werk24 import Hook, W24TechreadClient, W24AskVariantMeasures    async def read_measures_from_drawing(document_bytes:bytes) -&gt; None:        # define what you want to learn about the drawing, and what function        # should be called when a response arrives        hooks = [Hook(ask=W24AskVariantMeasures(), function=print)]        # make the call        client = W24TechreadClient.make_from_env()        async with client as session:            await session.read_drawing_with_hooks(document_bytes,hooks)</longdescription>
</pkgmetadata>