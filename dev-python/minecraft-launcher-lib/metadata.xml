<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># minecraft-launcher-lib![PyPI](https://img.shields.io/pypi/v/minecraft-launcher-lib)![PyPI - Downloads](https://img.shields.io/pypi/dm/minecraft-launcher-lib)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/minecraft-launcher-lib)![PyPI - License](https://img.shields.io/pypi/l/minecraft-launcher-lib)![PyPI - Implementation](https://img.shields.io/pypi/implementation/minecraft-launcher-lib)![Read the Docs](https://img.shields.io/readthedocs/minecraft-launcher-lib)A Python library for creating a custom minecraft launcher. This library containts functions to install and execute minecraft and interacting with mojang accounts.```pythonimport minecraft_launcher_libimport subprocessimport sys# Set the data for your Azure Application here. For more information look at the documentation.CLIENT_ID = &quot;YOUR CLIENT ID&quot;REDIRECT_URL = &quot;YOUR REDIRECT URL&quot;# Get latest versionlatest_version = minecraft_launcher_lib.utils.get_latest_version()[&quot;release&quot;]# Get Minecraft directoryminecraft_directory = minecraft_launcher_lib.utils.get_minecraft_directory()# Make sure, the latest version of Minecraft is installedminecraft_launcher_lib.install.install_minecraft_version(latest_version, minecraft_directory)# Loginlogin_url, state, code_verifier = minecraft_launcher_lib.microsoft_account.get_secure_login_data(CLIENT_ID, REDIRECT_URL)print(f&quot;Please open {login_url} in your browser and copy the url you are redirected into the prompt below.&quot;)code_url = input()# Get the code from the urltry:    auth_code = minecraft_launcher_lib.microsoft_account.parse_auth_code_url(code_url, state)except AssertionError:    print(&quot;States do not match!&quot;)    sys.exit(1)except KeyError:    print(&quot;Url not valid&quot;)    sys.exit(1)# Get the login datalogin_data = minecraft_launcher_lib.microsoft_account.complete_login(CLIENT_ID, None, REDIRECT_URL, auth_code, code_verifier)# Get Minecraft commandoptions = {    &quot;username&quot;: login_data[&quot;name&quot;],    &quot;uuid&quot;: login_data[&quot;id&quot;],    &quot;token&quot;: login_data[&quot;access_token&quot;]}minecraft_command = minecraft_launcher_lib.command.get_minecraft_command(latest_version, minecraft_directory, options)# Start Minecraftsubprocess.run(minecraft_command)```Features:- Easy installing- Get command to run Minecraft- Login to Microsoft account- Supports [Forge](https://minecraftforge.net), [Fabric](https://fabricmc.net), [Quilt](https://quiltmc.org) and Liteloader- Old versions like alpha or beta supported- All functions have type annotations and docstrings- Only depents on [requests](https://pypi.org/project/requests)- Supports [PyPy](https://www.pypy.org)- Full Documention with tutorial online available- Supports reading and writing profiles of the Vanilla Launcher- Install of [mrpack modpacks](https://docs.modrinth.com/docs/modpacks/format_definition)- All public APIs are static typed- Examples available- OpenSource[View more examples](https://codeberg.org/JakobDev/minecraft-launcher-lib/src/branch/master/examples)[Read the documentation](https://minecraft-launcher-lib.readthedocs.io)[Thanks to tomsik68 who documented how a minecraft launcher works](https://github.com/tomsik68/mclauncher-api/wiki)[Buy me a coffe](https://ko-fi.com/jakobdev)</longdescription>
</pkgmetadata>