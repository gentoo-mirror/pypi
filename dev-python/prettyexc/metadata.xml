<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Pretty-Exception for Python~~~~~~~~~~~~~~~~~~~~~~~~~~~.. image:: https://travis-ci.org/youknowone/prettyexc.svg?branch=master    :target: https://travis-ci.org/youknowone/prettyexcprettyexc provides common exception representation to make human-readable exception in easy way.You can install the package from PyPI    $ pip install prettyexcExample-------Prelude::&gt;&gt;&gt; from prettyexc import PrettyExceptionPut and get your arguments always::&gt;&gt;&gt; class SimpleException(PrettyException):...     pass...&gt;&gt;&gt; e = SimpleException('any', 'plain', 'args', code=200, description='OK')&gt;&gt;&gt; raise eTraceback (most recent call last):  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;__main__.SimpleException: &quot;any&quot;,&quot;plain&quot;,&quot;args&quot;,code=200,description=&quot;OK&quot;SimpleException(&quot;any&quot;,&quot;plain&quot;,&quot;args&quot;,code=200,description=&quot;OK&quot;)&gt;&gt;&gt; print [e, e][&lt;SimpleException(&quot;any&quot;,&quot;plain&quot;,&quot;args&quot;,code=200,description=&quot;OK&quot;)&gt;, &lt;SimpleException(&quot;any&quot;,&quot;plain&quot;,&quot;args&quot;,code=200,description=&quot;OK&quot;)&gt;]Set default message::    &gt;&gt;&gt; class MessageException(PrettyException):    ...     message = u'You should select a user'    ...    &gt;&gt;&gt; e = MessageException(user_id=10)    &gt;&gt;&gt; raise e    Traceback (most recent call last):      File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;    __main__.MessageException: You should select a user    &gt;&gt;&gt; print [e, e]    [&lt;MessageException(user_id=10)&gt;, &lt;MessageException(user_id=10)&gt;]Set message formatter::    &gt;&gt;&gt; class FormatException(PrettyException):    ...     message_format = u'User {user_id} has no permission.'    ...    &gt;&gt;&gt; e = FormatException(user_id=10)    &gt;&gt;&gt; raise e    Traceback (most recent call last):      File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;    __main__.FormatException: User 10 has no permission.    &gt;&gt;&gt; print e.message    User 10 has no permission.Patch existing exceptions::    &gt;&gt;&gt; from prettyexc import patch    &gt;&gt;&gt; class AnException(Exception): pass    ...    &gt;&gt;&gt; patch(AnException, PrettyException)    &gt;&gt;&gt; raise AnException(status=404)    Traceback (most recent call last):      File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;    __main__.AnException: status=404</longdescription>
</pkgmetadata>