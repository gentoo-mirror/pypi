<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;docs/misc/logo-no-background.svg&quot; width=&quot;100&quot; alt=&quot;&quot; style=&quot;float: right;&quot;&gt;# Create FastAPI App (cfa)Create and manage FastAPI applications## Quick TourFollow these steps to set up a FastAPI project. See the [documentation](https://tsladecek.github.io/create-fastapi-app/) for more details.### InstallationThis is a [pip package](https://pypi.org/project/create-fastapi-app/). Thus, the only thing you need to do, is to run:```shellpip install create-fastapi-app```### UsageTo create a new applications at a directory `~/my_fastapi_dir`, run:```shellcfa create ~/my_fastapi_dir```#### Options##### AuthYou can choose from three auth setups:- none - no auth (default)- self - self-managed auth    ```shell    cfa create ~/my_fastapi_dir --auth=self    ```    Will create a `users` table and auth mechanisms for authorizing requests- backend - auth managed by other backend    ```shell    cfa create ~/my_fastapi_dir --auth=backend    ```    Will create a logic for authorizing requests via external backend API. Remember to set the `BACKEND_URL` env var, as well as the `GET_USER_BY_TOKEN_ENDPOINT` env variable.    When trying to authorize, by default the app will call an endpoint at `http://{BACKEND_URL}/{GET_USER_BY_TOKEN_ENDPOINT}/{token}`. Make sure to have this endpoint and it returns a user object (with name, surname, email, etc)</longdescription>
</pkgmetadata>