<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg&quot; alt=&quot;Apache 2.0 License&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://gitpod.io/#https://github.com/01walid/cdktf-gke-auth&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod ready-to-code&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://www.npmjs.com/package/cdktf-gke-auth&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/cdktf-gke-auth.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/cdktf-gke-auth/&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/cdktf-gke-auth.svg&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/01walid/cdktf-gke-auth/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/01walid/cdktf-gke-auth/actions/workflows/build.yml/badge.svg&quot; alt=&quot;Build badge&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/01walid/cdktf-gke-auth/actions/workflows/release.yml&quot;&gt;&lt;img src=&quot;https://github.com/01walid/cdktf-gke-auth/actions/workflows/release.yml/badge.svg&quot; alt=&quot;Release badge&quot;&gt;&lt;/a&gt;&lt;/p&gt;# cdktf-gke-authEasily authenticate against a Google Kubernetes Engine (GKE) within your CDK for Terraform stack. Without the need toresort to [Google's terraform GKE auth](https://github.com/terraform-google-modules/terraform-google-kubernetes-engine/tree/v26.1.1/modules/auth) module. You can avoid running `cdktf get` as pre-synth step.This project uses [projen](https://github.com/projen/projen) and [jsii](https://github.com/aws/jsii) to compile the construct to Typescript, Python, Go and .Net (Java upon request).## Example usage (Typescript)Install the construct with: `yarn install cdktf-gke-auth`.```pythonimport { GoogleProvider } from &quot;@cdktf/provider-google/lib/provider&quot;;import { TerraformOutput, TerraformStack } from &quot;cdktf&quot;;import { Construct } from &quot;constructs&quot;;import { GKEAuth } from 'cdktf-gke-auth';export class MyKubeStack extends TerraformStack {  constructor(scope: Construct, name: string) {    super(scope, name);    new GoogleProvider(this, &quot;google-provider&quot;, {});    const auth = new GKEAuth(this, &quot;gke-auth&quot;, {      clusterName: &quot;my-cluster&quot;,      location: &quot;europe-west1&quot;,      projectId: &quot;my-project&quot;,    });    // init the Kubernetes provider like so:    new KubernetesProvider(this, &quot;kubernetes&quot;, {      ...auth.authCredentials    });    // Or a helm provider like so:     new HelmProvider(this, &quot;helm&quot;, {      kubernetes: auth.authCredentials,    });  }}```The `GKEAuth` instance expose `host`, `clusterCaCertificate`, `clusterCaCertificatePEM`, and `token` you can use to authenticate usingany of the kubernetes popular cdktf providers.For other languages examples, checkout this construct on [ConstructHub](https://constructs.dev/packages/cdktf-gke-auth/).</longdescription>
</pkgmetadata>