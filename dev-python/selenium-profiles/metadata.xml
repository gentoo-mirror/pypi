<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Selenium-Profiles[![Downloads](https://static.pepy.tech/badge/selenium-profiles)](https://pepy.tech/project/selenium-profiles) [![](https://img.shields.io/pypi/v/selenium-profiles.svg?color=3399EE)](https://pypi.org/project/selenium-profiles/)* Overwrite **device metrics** using Selenium* Mobile and Desktop **emulation*** **Undetected** by Google, Cloudflare, creep-js using [selenium-driverless](# with selenium-driverless)* [Modifying headers](#Modify-headers) supported using [Selenium-Interceptor](https://github.com/kaliiiiiiiiii/Selenium-Interceptor) or seleniumwire* [Touch Actions](# Touch_actions)* dynamic proxies with authentication* making single [POST](https://github.com/kaliiiiiiiiii/Selenium-Profiles/discussions/11#discussioncomment-4797109), GET or other requests using `driver.profiles.fetch(url)`  ([syntax](https://developer.mozilla.org/en-US/docs/Web/API/fetch#syntax))* headless unofficially supported* apply profile on already running driver with `driver.profiles.apply(profiles.Android())`* use of [seleniumwire](https://github.com/wkeeling/selenium-wire)for the latest features, have a look at the `dev` branch### Feel free to test my code!## Getting Started### Dependencies* [Python &gt;= 3.7](https://www.python.org/downloads/)* [Chrome-Browser](https://www.google.de/chrome/) installed### Installing* Install [Google-Chrome](https://www.google.de/chrome/) (or another chromium-based browser)* ```pip install selenium-profiles```### Start Driver```pythonfrom selenium_profiles.webdriver import Chromefrom selenium_profiles.profiles import profilesfrom selenium.webdriver.common.by import By  # locate elementsfrom seleniumwire import webdriverprofile = profiles.Windows() # or .Androidoptions = webdriver.ChromeOptions()options.add_argument(&quot;--headless=new&quot;)driver = Chrome(profile, options=options,                uc_driver=False                )# get urldriver.get('https://abrahamjuliot.github.io/creepjs/')  # test fingerprintinput(&quot;Press ENTER to exit: &quot;)driver.quit()  # Execute on the End!```Don't forget to execute```driver.quit()```in the End. Else-wise your temporary folder will get flooded!#### Run with Google-Colab__[Google-Colab](https://colab.research.google.com/github/kaliiiiiiiiii/Selenium-Profiles/blob/master/google-colab/selenium_profiles.ipynb) (file: master@google-colab/selenium_profiles.ipynb)__## ProfilesExample Profile: ```pythonprofile = \{  &quot;options&quot;: {      &quot;sandbox&quot;: True,      &quot;headless&quot;: False,      &quot;load_images&quot;: True,      &quot;incognito&quot;: True,      &quot;touch&quot;: True,      &quot;app&quot;: False,      &quot;gpu&quot;: False,      &quot;proxy&quot;: &quot;http://example-proxy.com:9000&quot;, # note: auth not supported,      &quot;extension_paths&quot;: [&quot;path/to/extension_1&quot;, ...], # directory, .crx or .zip      &quot;args&quot;: [&quot;--my-arg1&quot;, ...],      &quot;capabilities&quot;: {&quot;cap_1&quot;:&quot;val_1&quot;, &quot;cap_2&quot;:&quot;val_2&quot;},      &quot;experimental_options&quot;:{&quot;option1&quot;:&quot;value1&quot;, &quot;option2&quot;:&quot;value2&quot;},      &quot;adb&quot;: False, # run on harware device over ADB      &quot;adb_package&quot;: &quot;com.android.chrome&quot;,      &quot;use_running_app&quot;: True  },  &quot;cdp&quot;: {    &quot;touch&quot;: True,    &quot;darkmode&quot;:None,    &quot;maxtouchpoints&quot;: 5,    &quot;cores&quot;:8,    &quot;cdp_args&quot;: [],    &quot;emulation&quot;: {&quot;mobile&quot;:True,&quot;width&quot;: 384, &quot;height&quot;: 700, &quot;deviceScaleFactor&quot;: 10,        &quot;screenOrientation&quot;: {&quot;type&quot;: &quot;portrait-primary&quot;, &quot;angle&quot;: 0}},    &quot;patch_version&quot;: True, # to patch automatically, or use &quot;111.0.5563.111&quot;    &quot;useragent&quot;: {                &quot;platform&quot;: &quot;Linux aarch64&quot;,                &quot;acceptLanguage&quot;:&quot;en-US&quot;,                &quot;userAgent&quot;: &quot;Mozilla/5.0 (Linux; Android 11; HD1913) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Mobile Safari/537.36&quot;,                &quot;userAgentMetadata&quot;: {                    &quot;brands&quot;: [{&quot;brand&quot;: &quot;Google Chrome&quot;, &quot;version&quot;: &quot;105&quot;}, {&quot;brand&quot;: &quot;Not)A;Brand&quot;, &quot;version&quot;: &quot;8&quot;},                               {&quot;brand&quot;: &quot;Chromium&quot;, &quot;version&quot;: &quot;105&quot;}],                    &quot;fullVersionList&quot;: [{&quot;brand&quot;: &quot;Google Chrome&quot;, &quot;version&quot;: &quot;105.0.5195.136&quot;},                                        {&quot;brand&quot;: &quot;Not)A;Brand&quot;, &quot;version&quot;: &quot;8.0.0.0&quot;},                                        {&quot;brand&quot;: &quot;Chromium&quot;, &quot;version&quot;: &quot;105.0.5195.136&quot;}],                    &quot;fullVersion&quot;: &quot;105.0.5195.136&quot;,                    &quot;platform&quot;: &quot;Android&quot;,                    &quot;platformVersion&quot;: &quot;11.0.0&quot;,                    &quot;architecture&quot;: &quot;&quot;,                    &quot;model&quot;: &quot;HD1913&quot;,                    &quot;mobile&quot;: True,                    &quot;bitness&quot;: &quot;&quot;,                    &quot;wow64&quot;: False}    }  },&quot;proxy&quot;:{  &quot;proxy&quot;:&quot;socks5://user1:pass@example_jost.com:5001&quot;,   &quot;bypass_list&quot;:[&quot;localhost&quot;]  }}```### with selenium-driverlesswarning: - this package is experimental and might include bugs, please report them at [bug-reports](https://github.com/kaliiiiiiiiii/Selenium-Driverless/issues)- only for python &gt;=3.8- you'll need to install __pycdp__ first with `* `pip install git+https://github.com/HMaker/python-cdp.git@latest`````pythonfrom selenium_profiles.webdriver import Chromefrom selenium_profiles.profiles import profilesfrom selenium_driverless.webdriver import ChromeOptionsfrom selenium_driverless.types.by import Byprofile = profiles.Windows()  # or .Androidoptions = ChromeOptions()# options.add_argument(&quot;--headless=new&quot;)driver = Chrome(profile, options=options, driverless_options=True)# get urldriver.get('https://nowsecure.nl#relax')  # test fingerprintdriver.quit()  # Execute on the End!```see [documentation](https://github.com/kaliiiiiiiiii/Selenium-Driverless) for usages### Modify-headersusing selenium-wire```pythonfrom selenium_profiles import webdriverfrom selenium_profiles.profiles import profilesprofile = profiles.Android()driver = webdriver.Chrome(profile, uc_driver=False, seleniumwire_options=True) # or pass seleniumwire-optionsdef interceptor(request):    request.headers['New-Header'] = 'Some Value'driver.request_interceptor = interceptor# checkout headersdriver.get(&quot;https://httpbin.org/headers&quot;)input(&quot;Press ENTER to quit..&quot;)driver.quit()exit()```Using [Selenium-Injector](https://github.com/kaliiiiiiiiii/Selenium-Injector)```pythonfrom selenium_profiles.webdriver import Chromedriver = Chrome(injector_options=True)injector = driver.profiles.injector# modify headersinjector.declarativeNetRequest.update_headers({&quot;test&quot;: &quot;test_2&quot;, &quot;sec-ch-ua-platform&quot;: &quot;Android&quot;})rules = injector.declarativeNetRequest.dynamic_rulesheaders = injector.declarativeNetRequest._headersdriver.get(&quot;https://httpbin.org/headers&quot;)input(&quot;press ENTER to continue&quot;)# block imagesinjector.declarativeNetRequest.update_block_on(resource_types=[&quot;image&quot;])driver.get(&quot;https://www.wikimedia.org/&quot;)input(&quot;press ENTER to exit&quot;)driver.quit()```### Touch_actionsExample demonstration script```pythonfrom selenium_profiles.webdriver import Chromefrom selenium_profiles.profiles import profilesfrom selenium.webdriver.common.by import Byfrom selenium.webdriver import ChromeOptionsfrom selenium_profiles.scripts.driver_utils import TouchActionChain# Start Driveroptions = ChromeOptions()profile = profiles.Android() # or .Windows()driver = Chrome(profile, uc_driver=False, options=options)# initialise touch_actionschain = TouchActionChain(driver)driver.get(&quot;https://cps-check.com/de/multi-touch-test&quot;)touch_box = driver.find_element(By.XPATH,'//*[@id=&quot;box&quot;]') # Get elementchain.touch_and_hold(touch_box)chain.pause(10)chain.release(touch_box)# perform actionschain.perform()# now you should see a touch indication# point on the Website for 10 seconds# quit driverinput('Press ENTER to quit Driver\n')driver.quit()```### connect to running driverUndetectability isn't garanteed```pythonfrom selenium import  webdriverdriver = webdriver.Chrome()# driver allready started:)from selenium_profiles.webdriver import profiles as profile_managerfrom selenium_profiles.profiles import profilesprofile = profiles.Android() # or .Android()driver.profiles = profile_manager(driver=driver, profile=profile)driver.profiles.apply(profile)driver.get('https://hmaker.github.io/selenium-detector/')  # test fingerprintinput(&quot;Press ENTER to exit&quot;)driver.quit()  # Execute on the End!```### Set proxies dynamically or with options```pythonfrom selenium_profiles.webdriver import Chromefrom selenium_profiles.profiles import profilesprofile = profiles.Windows() # or .Android()profile[&quot;proxy&quot;] = {  &quot;proxy&quot;:&quot;http://user1:pass1@example_host.com:41149&quot;  }driver = Chrome(profile=profile, injector_options=True)driver.profiles.proxy.set_single(&quot;http://user2:pass2@example_host.com:41149&quot;)print(driver.profiles.proxy.proxy)driver.quit()  # Execute on the End!```### To export a profile:go to [https://js.do/kaliiiiiiiiiii/get_profile](https://js.do/kaliiiiiiiiiii/get_profile) in your browser and copy the text.## HelpPlease feel free to open an issue or fork!## Known Bugs- [click_as_touch makes automation hung](https://github.com/kaliiiiiiiiii/Selenium-Profiles/issues/1)## Todo- [x] js-undetectability  - [ ] [`navigator.connection`]  - [ ] fonts don't match platform  - [ ] does not match worker scope (Emulation) [crbug#1358491](https://bugs.chromium.org/p/chromium/issues/detail?id=1358491)    - `Navigator.userAgent`    - `Navigator.platform`    - `navigator.hardwareConcurrency`  - [ ] emulation leak on new tabs [diskussion](https://github.com/kaliiiiiiiiii/Selenium-Profiles/discussions/50)  - [ ] [selenium-detector](https://github.com/HMaker/HMaker.github.io/blob/master/selenium-detector/chromedriver.js)    - [ ] Either Devtools Console is open or CDP Runtime Domain is enabled =&gt; patch javascript objects using a Proxy or disable CDP.Runtime domain?    - [ ] [document.$cdc_asdjflasutopfhvcZLmcfl_](https://source.chromium.org/chromium/chromium/src/+/main:chrome/test/chromedriver/js/call_function.js;l=219)    - [ ] [`document.$chrome_asyncScriptInfo`](https://source.chromium.org/chromium/chromium/src/+/main:chrome/test/chromedriver/chrome/web_view_impl.cc;l=1586-1597;drc=2e14a3ac178ee87aa9154e5a15dcd986af1b6059)    - [ ] driver.execute_script() usage (needs hook on called element)    - [ ] driver.execute_async_script() usage (needs hook on called element)    - [ ] driver.find_element() usage    - [x] [`window.cdc_adoQpoasnfa76pfcZLmcfl`](https://source.chromium.org/chromium/chromium/src/+/main:chrome/test/chromedriver/chrome/devtools_client_impl.cc;l=526-532;drc=f915006bb8e09e0c29016cf9ab9e737cdebc1adc)- [x] default metrics  - [x] Android  - [x] Windows  - [ ] IOS  - [ ] Linux  - [ ] Tablet- [ ] test.py script  - [x] test_driver.py    - [x] assert useragent, profile_export (no error)      - [x] Windows        - [x] useragent-data        - [ ] undetected          - [ ] headless      - [x] Android       - [x] useragent-data       - [ ] undetected         - [ ] headless## Deprecated* [Stealth method]((https://github.com/diprajpatra/selenium-stealth)) (Detected by Google)* [buster captcha solver](https://github.com/dessant/buster) | [wontfix](https://github.com/kaliiiiiiiiii/Selenium_Profiles/issues/3)## Authors[Aurin Aegerter](mailto:aurinliun@gmx.ch)## LicenseShield: [![CC BY-NC-SA 4.0][cc-by-nc-sa-shield]][cc-by-nc-sa]This work is licensed under a[Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License][cc-by-nc-sa].[![CC BY-NC-SA 4.0][cc-by-nc-sa-image]][cc-by-nc-sa][cc-by-nc-sa]: http://creativecommons.org/licenses/by-nc-sa/4.0/[cc-by-nc-sa-image]: https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png[cc-by-nc-sa-shield]: https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg## DisclaimerI am not responsible what you use the code for!!! Also no warranty!## AcknowledgmentsInspiration, code snippets, etc.* [Selenium](https://github.com/SeleniumHQ/selenium)* [selenium-documentation](https://www.selenium.dev/documentation/)* [README-Template](https://gist.github.com/DomPizzie/7a5ff55ffa9081f2de27c315f5018afc)* [headless_js](https://github.com/microlinkhq/browserless/tree/master/packages/goto/src/evasions)* [Selenium-Stealth](https://github.com/diprajpatra/selenium-stealth)* [Undetected-Chromedriver](https://github.com/ultrafunkamsterdam/undetected-chromedriver)* [Selenium-Wire](https://github.com/wkeeling/selenium-wire)* [Modheader-Selenium](https://github.com/modheader/modheader_selenium)* [ModHeader docs](https://docs.modheader.com/advanced/selenium-webdriver)* [buster captcha solver](https://github.com/dessant/buster) | [wontfix](https://github.com/kaliiiiiiiiii/Selenium-Profiles/issues/3)* [audio_captcha_solver](https://github.com/najmi9/solve-recaptcha-python-selenium/blob/master/main.py)* [Chromedriver-Options List](https://peter.sh/experiments/chromium-command-line-switches/)* [Chrome DevTools Protocol (cdp_cmd)](https://chromedevtools.github.io/devtools-protocol/1-3/)* [example_pypi_package](https://github.com/tomchen/example_pypi_package)* [google-colab installer](https://github.com/ultrafunkamsterdam/undetected-chromedriver/issues/108)* [scripts/touch_action_chain](https://www.reddit.com/r/Appium/comments/rbx1r2/touchaction_deprecated_please_use_w3c_i_stead/)* [cdp_event_listeners](https://stackoverflow.com/questions/66227508/selenium-4-0-0-beta-1-how-add-event-listeners-in-cdp)* [proxy-auth](https://github.com/Smartproxy/Selenium-proxy-authentication)* [webdriver-manager](https://github.com/SergeyPirogov/webdriver_manager)* [dynamic subclasses](https://stackoverflow.com/a/9270908/20443541)</longdescription>
</pkgmetadata>