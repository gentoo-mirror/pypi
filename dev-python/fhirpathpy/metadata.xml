<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>fhirpath.py===========[![Build Status](https://github.com/beda-software/fhirpath-py/actions/workflows/build.yaml/badge.svg)](https://github.com/beda-software/fhirpath-py/actions)[![codecov](https://codecov.io/gh/beda-software/fhirpath-py/branch/master/graph/badge.svg)](https://codecov.io/gh/beda-software/fhirpath-py)[![pypi](https://img.shields.io/pypi/v/fhirpathpy.svg)](https://pypi.org/project/fhirpathpy/)[![Supported Python version](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/release/python-380/)[FHIRPath](https://www.hl7.org/fhir/fhirpath.html) implementation in PythonParser was generated with [antlr4](https://github.com/antlr/antlr4)# Getting started## Install`pip install fhirpathpy`## Usage```Pythonfrom fhirpathpy import evaluatepatient = {  &quot;resourceType&quot;: &quot;Patient&quot;,  &quot;id&quot;: &quot;example&quot;,  &quot;name&quot;: [    {      &quot;use&quot;: &quot;official&quot;,      &quot;given&quot;: [        &quot;Peter&quot;,        &quot;James&quot;      ],      &quot;family&quot;: &quot;Chalmers&quot;    },    {      &quot;use&quot;: &quot;usual&quot;,      &quot;given&quot;: [        &quot;Jim&quot;      ]    },    {      &quot;use&quot;: &quot;maiden&quot;,      &quot;given&quot;: [        &quot;Peter&quot;,        &quot;James&quot;      ],      &quot;family&quot;: &quot;Windsor&quot;,      &quot;period&quot;: {        &quot;end&quot;: &quot;2002&quot;      }    }  ]}# Evaluating FHIRPathresult = evaluate(patient, &quot;Patient.name.where(use='usual').given.first()&quot;, [])# result: `['Jim']````## evaluate &gt; Evaluates the &quot;path&quot; FHIRPath expression on the given resource, using data    from &quot;context&quot; for variables mentioned in the &quot;path&quot; expression.    Parameters:    resource (dict|list): FHIR resource, bundle as js object or array of resources This resource will be modified by this function to add type information.    path (string): fhirpath expression, sample 'Patient.name.given'    context (dict): a hash of variable name/value pairs.    model (dict): The &quot;model&quot; data object specific to a domain, e.g. R4.    Returns:    int: Description of return value## compile&gt; Returns a function that takes a resource and an optional context hash (see    &quot;evaluate&quot;), and returns the result of evaluating the given FHIRPath    expression on that resource.  The advantage of this function over &quot;evaluate&quot;    is that if you have multiple resources, the given FHIRPath expression will    only be parsed once.    Parameters:    path (string) - the FHIRPath expression to be parsed.    model (dict) - The &quot;model&quot; data object specific to a domain, e.g. R4.</longdescription>
</pkgmetadata>