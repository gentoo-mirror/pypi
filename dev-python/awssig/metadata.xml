<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>AWS signature verification routines.==============================================================================This library provides signature verification for requests made to an AWSservice. Typically, this is used to provide mock interfaces for AWS servicesor to rewrite AWS requests through a proxy host.The current source tree can be found on`GitHub &lt;https://github.com/dacut/python-aws-sig&gt;`_.Documentation is available at`docs.ionosphere.io &lt;https://docs.ionosphere.io/awssig/index.html&gt;`_.Currently only `SigV4`_ and `SigV4S3`_ (the S3 variant of SigV4) are supported.Example Usage------------------------------------------------------------------------------::   &gt;&gt;&gt; import awssig   &gt;&gt;&gt; access_key = &quot;AKIDEXAMPLE&quot;   &gt;&gt;&gt; secret_key = &quot;wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY&quot;   &gt;&gt;&gt; key_mapping = { access_key: secret_key }   &gt;&gt;&gt; v = awssig.AWSSigV4Verifier(   ...     request_method=&quot;GET&quot;,   ...     uri_path=&quot;/&quot;,   ...     query_string=&quot;a=foo&amp;b=foo&quot;,   ...     headers={   ...         &quot;date&quot;: [&quot;Mon, 09 Sep 2011 23:36:00 GMT&quot;],   ...         &quot;host&quot;: [&quot;host.foo.com&quot;],   ...         &quot;authorization&quot;: [(   ...             &quot;AWS4-HMAC-SHA256 &quot;   ...             &quot;Credential=AKIDEXAMPLE/20110909/us-east-1/host/aws4_request, &quot;   ...             &quot;SignedHeaders=date;host, &quot;   ...             &quot;Signature=0dc122f3b28b831ab48ba65cb47300de53fbe91b577fe113edac383730254a3b&quot;)],   ...    },   ...    body=b&quot;&quot;,   ...    region=&quot;us-east-1&quot;,   ...    service=&quot;host&quot;,   ...    key_mapping=key_mapping,   ...    timestamp_mismatch=None)   &gt;&gt;&gt; try:   ...     v.verify()   ...     print(&quot;ok&quot;)   ... except awssig.InvalidSignatureError as e:   ...     print(&quot;error: %s&quot; % e)   ok   &gt;&gt;&gt; v = awssig.AWSSigV4S3Verifier(   ...     request_method=&quot;POST&quot;,   ...     uri_path=&quot;/a//b/../c&quot;,   ...     headers={   ...         &quot;date&quot;: [&quot;Mon, 09 Sep 2011 23:36:00 GMT&quot;],   ...         &quot;host&quot;: [&quot;host.foo.com&quot;],   ...         &quot;authorization&quot;: [(   ...             &quot;AWS4-HMAC-SHA256 &quot;   ...             &quot;Credential=AKIDEXAMPLE/20110909/us-east-1/host/aws4_request, &quot;   ...             &quot;SignedHeaders=date;host, &quot;   ...             &quot;Signature=6b8af5a1e94a59c511e47267ab0cbfa1783dc42861ab7f09e0dba62680da8b28&quot;)],   ...         &quot;x-amz-content-sha256&quot;: [&quot;UNSIGNED-PAYLOAD&quot;],   ...    },   ...    body=b&quot;Hello world&quot;,   ...    region=&quot;us-east-1&quot;,   ...    service=&quot;host&quot;,   ...    key_mapping=key_mapping,   ...    timestamp_mismatch=None)   &gt;&gt;&gt; try:   ...     v.verify()   ...     print(&quot;ok&quot;)   ... except awssig.InvalidSignatureError as e:   ...     print(&quot;error: %s&quot; % e)   ok.. _SigV4: http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html.. _SigV4S3: https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html</longdescription>
</pkgmetadata>