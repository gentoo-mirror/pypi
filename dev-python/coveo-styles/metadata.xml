<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># coveo-stylesDon't let your CLI app spit out hundreds of boring lines!Manage your user feedback a bit like you manage logs, and get bonus colors and emojis just because we can!This module provides an `echo` symbol that you can use instead of `print` for convenience.It is also completely customizable!## predefined themes for common actionsHere's how a ci run could look like:```pythonfrom coveo_styles.styles import echoecho.step(&quot;Launching ci operations&quot;)echo.normal(&quot;pytest&quot;, emoji='hourglass')echo.normal(&quot;black&quot;, emoji='hourglass')echo.noise(&quot;Generated test reports in .ci/&quot;)echo.success()echo.warning(&quot;Formatting errors detected&quot;)echo.suggest(&quot;The --fix switch will automatically fix these for you and re-run the test !!smile!!&quot;)echo.error(&quot;The CI run detected errors you need to fix&quot;, pad_after=False)echo.error_details(&quot;Black reported files to reformat&quot;, item=True)echo.error_details(&quot;Details as items is nice!&quot;, item=True)``````Launching ci operationsâŒ› pytestâŒ› blackGenerated test reports in .ci/âœ” Success!âš  Formatting errors detectedðŸ¤– The --fix switch will automatically fix these for you and re-run the test ðŸ˜„ðŸ’¥ The CI run detected errors you need to fix Î‡ Black reported files to reformat Î‡ Details as items is nice```It's even nicer with colors! :) This doc needs a few animated gifs!# exception hookException handlers may re-raise an exception as an `ExitWithFailure` in order to hide the traceback from the user and show a helpful error message.Here's an example for the sake of demonstration:```pythonfrom pathlib import Pathfrom coveo_styles.styles import ExitWithFailuretry:    project = Path('./project').read_text()except FileNotFoundError as exception:    raise ExitWithFailure(suggestions='Use the --list switch to see which projects I can see') from exception```The stacktrace will be hidden, the app will exit with code 1 after printing the exception type and message:```! FileNotFoundError: [Errno 2] No such file or directory: 'project'ðŸ¤– Use the --list switch to see which projects I can see```Unhandled exceptions (those that are not wrapped by an ExitWithFailure), will display the usual python feedback and stacktrace.# hunting for emojisEmoji support is provided by the [emoji](https://pypi.org/project/emoji/) package. Their description provides different links to help with your emoji hunt, but for some reason not everything is supported or has the name it should have.The only foolproof way I have found is to actually inspect the `emoji` package, either by opening `site-packages/emoji/unicode_codes/en.py` in my IDE or programmatically like this:```pythonfrom coveo_styles.styles import echofrom emoji.unicode_codes.en import EMOJI_UNICODE_ENGLISH, EMOJI_ALIAS_UNICODE_ENGLISHquery = 'smile'.lower()for emoji_name in {*EMOJI_UNICODE_ENGLISH, *EMOJI_ALIAS_UNICODE_ENGLISH}:    emoji_name = emoji_name.strip(':')    if query in emoji_name.lower():        echo.normal(f'{emoji_name}: !!{emoji_name}!!')``````sweat_smile: ðŸ˜…cat_face_with_wry_smile: ðŸ˜¼smile: ðŸ˜„smiley: ðŸ˜ƒsmiley_cat: ðŸ˜ºsmile_cat: ðŸ˜¸```</longdescription>
</pkgmetadata>