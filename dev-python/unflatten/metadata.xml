<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==================================================unflatten - convert flat dict to nested dict/array==================================================|version| |pyversions| |build status|***********Description***********This package provides a function which can unpack a flat dictionaryinto a structured ``dict`` with nested sub-dicts and/or sub-lists.Development takes place on github_.The package is installable from PyPI_.. _github: https://github.com/dairiki/unflatten/.. _pypi: https://pypi.python.org/pypi/unflatten/********Synopsis********Nested dicts::  &gt;&gt;&gt; from unflatten import unflatten  &gt;&gt;&gt; unflatten({'foo.bar': 'val'})  {'foo': {'bar': 'val'}}Nested list::  &gt;&gt;&gt; unflatten({'foo[0]': 'x', 'foo[1]': 'y'})  {'foo': ['x', 'y']}Nested lists and dicts, intermixed::  &gt;&gt;&gt; unflatten({  ...     'foo[0][0]': 'a',  ...     'foo[0][1]': 'b',  ...     'foo[1].x': 'c',  ...      })  {'foo': [['a', 'b'], {'x': 'c'}]}*****Notes*****``Unflatten`` take a single argument which should either be a ``dict``(or an object with a dict-like ``.items()`` or ``.iteritems()``method) or a sequence of ``(key, value)`` pairs.All keys in the dict or sequence must be strings.(Under python 2, keys must be instances of ``basestring``; underpython 3, keys just be instances of ``str``.)``Unflatten`` always returns a ``dict``.  By way of example::  &gt;&gt;&gt; unflatten([('[0]', 'x')])  {'': ['x']}For list-valued nodes, all indexes must be present in the input(flattened) mapping, otherwise a ``ValueError`` will be thrown::  &gt;&gt;&gt; unflatten({'a[0]': 'x', 'a[2]': 'y'})  Traceback (most recent call last):  ...  ValueError: missing key 'a[1]'********See Also********The `morph`_ and `flattery`_ packages purport to implement similar functions... _morph: https://github.com/metagriffin/morph.. _flattery: https://github.com/acg/python-flattery*******Authors*******`Jeff Dairiki`_.. _Jeff Dairiki: mailto:dairiki@dairiki.org.. |version| image::    https://img.shields.io/pypi/v/unflatten.svg    :target: https://pypi.python.org/pypi/unflatten/    :alt: Latest Version.. |pyversions| image::    https://img.shields.io/pypi/pyversions/unflatten.svg    :target: https://pypi.python.org/pypi/unflatten/    :alt: Python versions.. |build status| image::    https://github.com/dairiki/unflatten/actions/workflows/tests.yml/badge.svg    :target: https://github.com/dairiki/unflatten/actions/workflows/tests.yml *******History*******Release 0.1.1 (2021-08-16)==========================Nits----- Fix backslashes in docstringsPackaging---------- PEP517-ize the packaging- Use ``setuptools-scm`` to maintain version numbersTesting-------- Test under Python 3.7, 3.8, 3.9 and PyPy 3.7. Drop testing for Python 3.4 &amp; 3.5.- Pin pip version for pypy2 (see `pip #8653`_)- Clean up and modernize the tox ``lint`` and ``coverage`` environments.. _pip #8653: https://github.com/pypa/pip/issues/8653Release 0.1 (2018-01-17)========================No code changes.This package is now deemed &quot;production ready&quot; (though your mileage may vary.)Release 0.1b1 (2018-01-09)==========================Initial release.</longdescription>
</pkgmetadata>