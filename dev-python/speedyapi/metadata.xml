<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># speedyapiAn easy-to-use Python module for creating API.Built on `Flask` / `Async Flask` with features for easily creating API endpointsFeatures:- Parameter Parsing and Checking- API Authentication- Rate Limiting (user, address, global)- In-depth Endpoint Testing (Write tests to be run that confirm endpoints act as intended)- Automatic OpenAPI `swagger.json` Generation (with access to full specification)- Common JSON Response Formatting# InstallationSimply run `pip install speedyapi`. The PyPI package is at https://pypi.org/project/speedyapi/# Dependencies- **[Python](https://www.python.org/downloads/)** 3.10- **[Requests](https://github.com/kennethreitz/requests)** &gt;= 2.9.2- **[Flask](https://github.com/pallets/flask)** &gt;= 2.2# Example Usage```pythonfrom speedyapi import API, QueryParameter, PathParameter, respond, request, Test, typesfrom speedyapi.swagger_objects import InfoObject, XLogoObjectinfo = InfoObject(title=&quot;Example API&quot;, version=&quot;1.0.1&quot;)app = API(__name__, info=info)app.swagger.info.logo = XLogoObject(url=&quot;&quot;)app.swagger.info.description = &quot;# Introduction\nThis is an example API for the speedyapi python module.&quot;@app.authentication(apikey_required=True, description=&quot;Example apikey: `CorrectApikey`&quot;)def auth():    return &quot;allowed&quot; if request.apikey == &quot;CorrectApikey&quot; else None@app.endpoint(path=&quot;/maths/&lt;method&gt;&quot;, method=&quot;GET&quot;, authentication=&quot;allowed&quot;, name=&quot;Simple Maths&quot;, description=&quot;Simple operations.&quot;)@app.limits(user_limits=[&quot;10/min&quot;], ip_limits=[&quot;30/min&quot;], global_limits=[&quot;5000/5 min&quot;])@app.tests(Test(url=&quot;/maths/multiply?a=3&amp;b=5&quot;, headers={&quot;Apikey&quot;: &quot;CorrectApikey&quot;}, expected_status_code=200, checks=[lambda x: x[&quot;result&quot;] == 15]),           Test(url=&quot;/maths/multiply?a=3&amp;b=5&quot;, headers={&quot;Apikey&quot;: &quot;WrongApikey&quot;}, expected_status_code=403),           Test(url=&quot;/maths/modulo?a=3&amp;b=5&quot;, headers={&quot;Apikey&quot;: &quot;CorrectApikey&quot;}, expected_status_code=422),           Test(url=&quot;/maths/multiply?a=3&amp;b=5&quot;, expected_status_code=400))@app.parameters(PathParameter(name=&quot;method&quot;, options=[&quot;multiply&quot;, &quot;divide&quot;, &quot;add&quot;, &quot;subtract&quot;], default=&quot;add&quot;, description=&quot;Choose operation.&quot;),                QueryParameter(name=&quot;a&quot;, type=types.Number, required=True, description=&quot;First number to use.&quot;),                QueryParameter(name=&quot;b&quot;, type=types.Number, required=True, description=&quot;Second number to use.&quot;))def simple_maths_endpoint(method, a, b):    methods = {&quot;multiply&quot;: lambda x, y: x * y, &quot;divide&quot;: lambda x, y: x / y, &quot;add&quot;: lambda x, y: x + y, &quot;subtract&quot;: lambda x, y: x - y}    return respond.json({&quot;result&quot;: methods[method](a, b), &quot;method&quot;: method, &quot;authentication&quot;: request.authentication})if __name__ == &quot;__main__&quot;:    app.run(host=&quot;0.0.0.0&quot;, port=80, tests=True, threaded=True)``````------------------------------------------------------------------------------------------ *  Test on path `/maths/multiply - - GET` returned correct status code 200 [Time: 2.12s] - - {&quot;success&quot;: true, &quot;result&quot;: 15, &quot;method&quot;: &quot;multiply&quot;, &quot;authentication&quot;: &quot;allowed&quot;} *  Test on path `/maths/multiply - - GET` Success [Time: 2.12s] - - {&quot;success&quot;: true, &quot;result&quot;: 15, &quot;method&quot;: &quot;multiply&quot;, &quot;authentication&quot;: &quot;allowed&quot;} *  Test on path `/maths/modulo - - GET` returned correct status code 422 [Time: 2.12s] - - {&quot;success&quot;: false, &quot;cause&quot;: &quot;Malformed [method]&quot;} *  Test on path `/maths/multiply - - GET` returned correct status code 400 [Time: 2.12s] - - {&quot;success&quot;: false, &quot;cause&quot;: &quot;Missing one or more fields [key]&quot;} *  Test on path `/maths/multiply - - GET` returned correct status code 403 [Time: 2.12s] - - {&quot;success&quot;: false, &quot;cause&quot;: &quot;Access is forbidden, usually due to an invalid API key being used.&quot;} *  Tests Completed - - (Success: 5/5) - [Time: 2.13s] -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *  API Ready - - [Running on: http://0.0.0.0:80/] - - (Press CTRL+C to quit!)------------------------------------------------------------------------------------------```</longdescription>
</pkgmetadata>