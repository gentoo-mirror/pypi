<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>g2p\_en: A Simple Python Module for English Grapheme To Phoneme Conversion==========================================================================[Update] * We removed TensorFlow from the dependencies. After all, it changes its APIs quite often, and we don't expect you to have a GPU. Instead, NumPy is used for inference.This module is designed to convert English graphemes (spelling) tophonemes (pronunciation). It is considered essential in several taskssuch as speech synthesis. Unlike many languages like Spanish or Germanwhere pronunciation of a word can be inferred from its spelling, Englishwords are often far from people's expectations. Therefore, it will bethe best idea to consult a dictionary if we want to know thepronunciation of some word. However, there are at least two tentativeissues in this approach. First, you can't disambiguate the pronunciationof homographs, words which have multiple pronunciations. (See ``a``below.) Second, you can't check if the word is not in the dictionary.(See ``b`` below.)-   \a.  I refuse to collect the refuse around here. (rɪ\|fju:z as verb vs. \|refju:s as noun)-   \b.  I am an activationist. (activationist: newly coined word which means ``n. A person who designs and implements programs of treatment or therapy that use recreation and activities to help people whose functional abilities are affected by illness or disability.`` from `WORD SPY &lt;https://wordspy.com/index.php?word=activationist&gt;`__For the first homograph issue, fortunately many homographs can bedisambiguated using their part-of-speech, if not all. When it comes tothe words not in the dictionary, however, we should make our best guessusing our knowledge. In this project, we employ a deep learning seq2seqframework based on TensorFlow.Algorithm---------1. Spells out arabic numbers and some currency symbols. (e.g. $200 -&gt;   two hundred dollars) (This is borrowed from `Keith Ito's   code &lt;https://github.com/keithito/tacotron/blob/master/text/numbers.py&gt;`__)2. Attempts to retrieve the correct pronunciation for homographs based   on their POS)3. Looks up `The CMU Pronouncing   Dictionary &lt;http://www.speech.cs.cmu.edu/cgi-bin/cmudict&gt;`__ for   non-homographs.4. For OOVs, we predict their pronunciations using our neural net model.Environment------------  python 3.xDependencies-------------  numpy &gt;= 1.13.1-  nltk &gt;= 3.2.4-  python -m nltk.downloader &quot;averaged\_perceptron\_tagger&quot; &quot;cmudict&quot;-  inflect &gt;= 0.3.1-  Distance &gt;= 0.1.3Installation------------::    pip install g2p_enOR::    python setup.py installnltk package will be automatically downloaded at your first run.Usage-----::    from g2p_en import G2p    texts = [&quot;I have $250 in my pocket.&quot;, # number -&gt; spell-out             &quot;popular pets, e.g. cats and dogs&quot;, # e.g. -&gt; for example             &quot;I refuse to collect the refuse around here.&quot;, # homograph             &quot;I'm an activationist.&quot;] # newly coined word    g2p = G2p()    for text in texts:        out = g2p(text)        print(out)    &gt;&gt;&gt; ['AY1', ' ', 'HH', 'AE1', 'V', ' ', 'T', 'UW1', ' ', 'HH', 'AH1', 'N', 'D', 'R', 'AH0', 'D', ' ', 'F', 'IH1', 'F', 'T', 'IY0', ' ', 'D', 'AA1', 'L', 'ER0', 'Z', ' ', 'IH0', 'N', ' ', 'M', 'AY1', ' ', 'P', 'AA1', 'K', 'AH0', 'T', ' ', '.']    &gt;&gt;&gt; ['P', 'AA1', 'P', 'Y', 'AH0', 'L', 'ER0', ' ', 'P', 'EH1', 'T', 'S', ' ', ',', ' ', 'F', 'AO1', 'R', ' ', 'IH0', 'G', 'Z', 'AE1', 'M', 'P', 'AH0', 'L', ' ', 'K', 'AE1', 'T', 'S', ' ', 'AH0', 'N', 'D', ' ', 'D', 'AA1', 'G', 'Z']    &gt;&gt;&gt; ['AY1', ' ', 'R', 'IH0', 'F', 'Y', 'UW1', 'Z', ' ', 'T', 'UW1', ' ', 'K', 'AH0', 'L', 'EH1', 'K', 'T', ' ', 'DH', 'AH0', ' ', 'R', 'EH1', 'F', 'Y', 'UW2', 'Z', ' ', 'ER0', 'AW1', 'N', 'D', ' ', 'HH', 'IY1', 'R', ' ', '.']    &gt;&gt;&gt; ['AY1', ' ', 'AH0', 'M', ' ', 'AE1', 'N', ' ', 'AE2', 'K', 'T', 'IH0', 'V', 'EY1', 'SH', 'AH0', 'N', 'IH0', 'S', 'T', ' ', '.']May, 2018.Kyubyong Park &amp; `Jongseok Kim &lt;https://github.com/ozmig77&gt;`__</longdescription>
</pkgmetadata>