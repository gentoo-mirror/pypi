<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/src-d/sparkpickle.svg?branch=master)](https://travis-ci.org/src-d/sparkpickle) [![PyPI](https://img.shields.io/pypi/v/sparkpickle.svg)](https://pypi.python.org/pypi/sparkpickle)SparkPickle===========Pure Python implementation of reading SequenceFile-s with pickles written bySpark's [saveAsPickleFile()](http://spark.apache.org/docs/latest/api/python/pyspark.html#pyspark.RDD.saveAsPickleFile).This is needed if you store the results from Spark in the efficient binary pickleformat and want to load them locally on your computer, without any Spark installation,given only the actual files.[Article about creating this project.](https://blog.sourced.tech/post/reading_pyspark_pickles_locally)Installation------------```pip install sparkpickle```Supports Python 2.7 and 3.x.Usage-----View the contents of the file via command line:```python -m sparkpickle /path/to/file```Code:```import sparkpicklefor obj in sparkpickle.load_gen(&quot;/path/to/file&quot;):    print(obj)```API---There are 3 functions: `load()`, `loads()` and `load_gen()`. The first twoare similar to those found in &quot;pickle&quot; package, whereas the last one is thegenerator which yields deserialized objects and thus provides the minimalmemory footprint.License-------Apache 2.0.</longdescription>
</pkgmetadata>