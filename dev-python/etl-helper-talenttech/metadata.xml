<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ETL table converter and creator==========The Python Toolkit for converting table from one database to anotherDatabases types-------------Supported databases. You have to use short name of databaseshort_name:type of database * ch:clickhouse* pg:postgresql* mysql:mysql* vertica:vertica* exasol:exasolSupported database conversions-------------* mysql to pg* mysql to vertica* mysql to exasol* ch to vertica* pg to verticaCredentials-------------```shsql_credentials = {    &quot;pg&quot;: {        &quot;database&quot;: os.getenv(&quot;PG_DATABASE&quot;),        &quot;schema&quot;: os.getenv(&quot;PG_SCHEMA&quot;),        &quot;user&quot;: os.getenv(&quot;PG_USER&quot;),        &quot;host&quot;: os.getenv(&quot;PG_HOST&quot;),        &quot;port&quot;: os.getenv(&quot;PG_PORT&quot;),        &quot;password&quot;: os.getenv(&quot;PG_PASSWORD&quot;),        #additional params bellow (optional)         &quot;executemany_mode&quot;: &quot;values&quot;,        &quot;executemany_values_page_size&quot;: 10000,        &quot;executemany_batch_page_size&quot;: 500,    },    &quot;ch&quot;: {        &quot;database&quot;: os.getenv(&quot;CH_DATABASE&quot;),        &quot;user&quot;: os.getenv(&quot;CH_USER&quot;),        &quot;host&quot;: os.getenv(&quot;CH_HOST&quot;),        &quot;port&quot;: os.getenv(&quot;CH_PORT&quot;),        &quot;password&quot;: os.getenv(&quot;CH_PASSWORD&quot;),        #additional params bellow (optional)         &quot;connect_args&quot;: {            &quot;alt_hosts&quot;: &quot;{},{}:{}&quot;.format(                os.getenv(&quot;CH_HOST_B&quot;), os.getenv(&quot;CH_HOST_C&quot;), os.getenv(&quot;CH_PORT&quot;)            )        },    },    &quot;vertica&quot;: {        &quot;database&quot;: os.getenv(&quot;VERTICA_DATABASE&quot;),        &quot;schema&quot;: os.getenv(&quot;VERTICA_SCHEMA&quot;),        &quot;user&quot;: os.getenv(&quot;VERTICA_USER&quot;),        &quot;host&quot;: os.getenv(&quot;VERTICA_HOST&quot;),        &quot;port&quot;: os.getenv(&quot;VERTICA_PORT&quot;),        &quot;password&quot;: os.getenv(&quot;VERTICA_PASSWORD&quot;),        #additional params bellow (optional)         &quot;connect_args&quot;: {            &quot;connection_load_balance&quot;: True,            &quot;backup_server_node&quot;: json.loads(os.getenv(&quot;VERTICA_CONFIGS&quot;))[                &quot;backup_server_node&quot;            ],        },    },    &quot;mysql&quot;: {        &quot;database&quot;: os.getenv(&quot;MYSQL_DATABASE&quot;),        &quot;user&quot;: os.getenv(&quot;MYSQL_USER&quot;),        &quot;host&quot;: os.getenv(&quot;MYSQL_HOST&quot;),        &quot;port&quot;: os.getenv(&quot;MYSQL_PORT&quot;),        &quot;password&quot;: os.getenv(&quot;MYSQL_PASSWORD&quot;),    },}```Usage```shpip3 install etl-helper-talenttech``````pythonimport osfrom converter.fields_converter import FieldsConverterfrom_db = &quot;mysql&quot;to_db = &quot;vertica&quot;  tables = [&quot;users&quot;, &quot;user_to_mc&quot;]converter = FieldsConverter(sql_credentials, from_db, to_db, tables=tables, advanced_features=[0, 1])res = converter.create_list_of_tables(tables, to_create=True, dir_ddl=None)fields_from = converter.db_worker_from.get_columns(tables[0])fields_to = converter.db_worker_to.get_columns(tables[0])print(fields_from)print(fields_to)</longdescription>
</pkgmetadata>