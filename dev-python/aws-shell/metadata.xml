<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aws-shell - The interactive productivity booster for the AWS CLI================================================================.. image:: https://aws-developer-blog-media.s3-us-west-2.amazonaws.com/cli/Super-Charge-Your-AWS-Command-Line-Experience-with-aws-shell/aws-shell-final.gifInstallation============The aws-shell requires python and `pip`_ to install.You can install the aws-shell using `pip`_::    $ pip install aws-shellIf you are not installing into a virtualenv you can run::    $ sudo pip install aws-shell**Mac OS X (10.11 El Capitan) users**: There is a known issue with Apple andits included python package dependencies (more info athttps://github.com/pypa/pip/issues/3165).We are investigating ways to fix this issue but in the meantime,to install the aws-shell, you can run:``sudo pip install aws-shell --upgrade --ignore-installed six``Once you've installed the aws-shell, you can now run::    $ aws-shellTo exit the shell, press ``Ctrl-D``.Upgrading the aws-shell-----------------------If you want to upgrade to the latest version of the aws-shell,you can run::    $ pip install --upgrade aws-shellYou can also use this upgrade command whenever a new version of the AWS CLI isreleased that includes new services and API updates.  You will then beable to use these new services and API updates in the aws-shell.Supported Python Versions-------------------------The aws-shell works on the same python versions supported by the AWS CLI:* 2.6.5 and greater* 2.7.x and greater* 3.3.x and greater* 3.4.x and greaterConfiguration=============The aws-shell uses the same configuration settings as the AWS CLI.If you've never used the AWS CLI before, the easiest way to getstarted is to run the ``configure`` command::    $ aws-shell    aws&gt; configure    AWS Access Key ID [None]: your-access-key-id    AWS Secret Access Key [None]: your-secret-access-key    Default region name [None]: region-to-use (e.g us-west-2, us-west-1, etc).    Default output format [None]:    aws&gt;For more information about configure settings, see the`AWS CLI Getting Started Guide`_.Basic Usage===========The aws-shell accepts the same commands as the AWS CLI, except you don'tneed to provide the ``aws`` prefix.  For example, here are a few commandsyou can try::    $ aws-shell    aws&gt; ec2 describe-regions    {        &quot;Regions&quot;: [            {                &quot;Endpoint&quot;: &quot;ec2.eu-west-1.amazonaws.com&quot;,                &quot;RegionName&quot;: &quot;eu-west-1&quot;            },            ...    aws&gt; s3 ls    2015-12-07 15:03:34 bucket1    2015-12-07 15:03:34 bucket2    aws&gt; dynamodb list-tables --output text    TABLENAMES     First    TABLENAMES     Second    TABLENAMES     ThirdProfiles--------The aws-shell supports AWS CLI profiles.  You have two options to useprofiles.  First, you can provide a profile when you start the aws-shell::    $ aws-shell --profile prod    aws&gt;When you do this all the server side completion as well as CLI commandsyou run will automatically use the ``prod`` profile.You can also change the current profile while you're in the aws-shell::    $ aws-shell    aws&gt; .profile demo    Current shell profile changed to: demoYou can also check what profile you've configured in the aws-shell using::    aws&gt; .profile    Current shell profile: demoAfter changing your profile using the ``.profile`` dot command, allserver side completion as well as CLI commands will automatically usethe new profile you've configured.Features========Auto Completion of Commands and Options---------------------------------------The aws-shell provides auto completion of commands andoptions as you type... image:: https://cloud.githubusercontent.com/assets/368057/11824078/784a613e-a32c-11e5-8ac5-f1d1873cc643.pngShorthand Auto Completion-------------------------The aws-shell can also fill in an example of theshorthand syntax used for various AWS CLI options:.. image:: https://cloud.githubusercontent.com/assets/368057/11823453/e95d85da-a328-11e5-8b8d-67566eccf9e3.pngServer Side Auto Completion---------------------------The aws-shell also leverages `boto3`_, the AWS SDK for Python, to auto completeserver side resources such as Amazon EC2 instance Ids, Amazon Dynamodb tablenames, AWS IAM user names, Amazon S3 bucket names, etc.This feature is under active development.  The list of supported resourcescontinues to grow... image:: https://cloud.githubusercontent.com/assets/368057/11824022/3648b4fc-a32c-11e5-8e18-92f028eb1cee.pngFuzzy Searching---------------Every auto completion value supports fuzzy searching.  This enables you tospecify the commands, options, and values you want to run with even lesstyping.  You can try typing:* The first letter of each sub word: ``ec2 describe-reserved-instances-offerings``  -&gt; ``ec2 drio``* A little bit of each word: ``ec2 describe-instances`` -&gt; ``ec2 descinst``* Any part of the command: ``dynamodb table`` -&gt; Offers all commands that  contain the subsequence ``table``... image:: https://cloud.githubusercontent.com/assets/368057/11823996/18e69d16-a32c-11e5-80a2-defbaa6a8a80.pngInline Documentation--------------------The aws-shell will automatically pull up documentation as you type commands.It will show inline documentation for CLI options.  There is also a separatedocumentation panel that will show documentation for the current command oroption you are typing. Pressing F9 will toggle focus to the documentation panelallowing you to navigate it using your selected keybindings... image:: https://cloud.githubusercontent.com/assets/368057/11823320/36ae9b04-a328-11e5-9661-81abfc0afe5a.pngFish-Style Auto Suggestions---------------------------The aws-shell supports Fish-style auto-suggestions. Use the right arrow key tocomplete a suggestion... image:: https://cloud.githubusercontent.com/assets/368057/11822961/4bceff94-a326-11e5-87fa-c664e1e82be4.pngCommand History---------------The aws-shell records the commands you run and writes them to``~/.aws/shell/history``.  You can use the up and down arrow keys to scrollthrough your history... image:: https://cloud.githubusercontent.com/assets/368057/11823211/b5851e9a-a327-11e5-877f-687dc1f90e27.pngToolbar Options---------------The aws-shell has a bottom toolbar that provides several options:* ``F2`` toggles between fuzzy and substring matching* ``F3`` toggles between VI and Emacs key bindings* ``F4`` toggles between single and multi column auto completions* ``F5`` shows and hides the help documentation pane* ``F9`` toggles focus between the cli and documentation pane* ``F10`` or ``Ctrl-D`` exits the aws-shellAs you toggle options in the toolbar, your preferences are persistedto the ``~/.aws/shell/awsshellrc`` file so that the next time you runthe aws-shell, your preferences will be restored... image:: https://cloud.githubusercontent.com/assets/368057/11823907/8c3f1e60-a32b-11e5-9f99-fe504ea0a5dc.pngDot Commands------------The aws-shell provides additional commands specific to the aws-shell.The commands are available by adding the ``.`` prefix before a command.Exiting the Shell~~~~~~~~~~~~~~~~~You can run the ``.exit`` or ``.quit`` commands to exit the shell.Creating Shell Scripts with .edit~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~There are times when you may want to take a sequence of commandsyou've run in the aws-shell and combine them into a shell script.In addition to the command history that's persisted to thehistory file, the aws-shell also keeps track of all the commandsyou've run since you first started your aws-shell session.You can run the ``.edit`` command to open all these commands inan editor.  The aws-shell will use the ``EDITOR`` environmentvariable before defaulting to ``notepad`` on Windows and``vi`` on other platforms.::    aws&gt; ec2 describe-instances    aws&gt; dynamodb list-tables    aws&gt; .editChanging Profiles with .profile~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~You can change the current AWS CLI profile used by the aws-shellby using the ``.profile`` dot command.  If you run the ``.profile``command with no arguments, the currently configured shell profilewill be printed.::    aws&gt; .profile demo    Current shell profile changed to: demo    aws&gt; .profile    Current shell profile: demo.cd~~~You can change the current working directory of the aws-shell by usingthe ``.cd`` command::    aws&gt; !pwd    /usr    aws&gt; .cd /tmp    aws&gt; !pwd    /tmpExecuting Shell Commands------------------------The aws-shell integrates with other commands in several ways.First, you can pipe AWS CLI commands to other processes as wellas redirect output to a file::    aws&gt; dynamodb list-tables --output text | head -n 1    TABLENAMES     First    aws&gt; dynamodb list-tables --output text &gt; /tmp/foo.txtSecond, if you want to run a shell command rather than an AWS CLIcommand, you can add the ``!`` prefix to your command::    aws&gt; !ls /tmp/    foo.txt                                    bar.txtDeveloper Preview Status========================The aws-shell is currently in developer preview.We welcome feedback, feature requests, and bug reports.There may be backwards incompatible changes made in orderto respond to customer feedback as we continue to iterateon the aws-shell.More Information================Below are miscellaneous links for more information:* `AWS CLI Reference Docs`_* `AWS CLI User Guide`_* `AWS CLI Blog`_* `AWS CLI Github Repo`_.. _pip: http://www.pip-installer.org/en/latest/.. _AWS CLI Getting Started Guide: http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html.. _boto3: https://github.com/boto/boto3.. _AWS CLI Reference Docs: http://docs.aws.amazon.com/cli/latest/reference/.. _AWS CLI User Guide: http://docs.aws.amazon.com/cli/latest/userguide/.. _AWS CLI Blog: https://blogs.aws.amazon.com/cli/.. _AWS CLI Github Repo: https://github.com/aws/aws-cli</longdescription>
</pkgmetadata>