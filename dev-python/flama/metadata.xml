<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://flama.dev&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/vortico/flama/master/.github/logo.png&quot; alt='Flama'&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;Fire up your models with the flame&lt;/em&gt; &amp;#128293;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/vortico/flama/actions&quot;&gt;        &lt;img src=&quot;https://github.com/vortico/flama/workflows/Test%20And%20Publish/badge.svg&quot; alt=&quot;Test And Publish workflow status&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/vortico/flama/actions&quot;&gt;        &lt;img src=&quot;https://github.com/vortico/flama/workflows/Docker%20Push/badge.svg&quot; alt=&quot;Docker Push workflow status&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/flama/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/flama?logo=PyPI&amp;logoColor=white&quot; alt=&quot;Package version&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/flama/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/pyversions/flama?logo=Python&amp;logoColor=white&quot; alt=&quot;PyPI - Python Version&quot;&gt;    &lt;/a&gt;&lt;/p&gt;---# FlamaFlama is a python library which establishes a standard framework fordevelopment and deployment of APIs with special focus on machine learning (ML).The main aim of the framework is to make ridiculously simple the deployment ofML APIs, simplifying (when possible) the entire process to a single line ofcode.The library builds on Starlette, and provides an easy-to-learnphilosophy to speed up the building of highly performant GraphQL, REST and ML APIs.Besides, it comprises an ideal solution for the development of asynchronousand production-ready services, offering automatic deployment for ML models.Some remarkable characteristics:* Generic classes for API resources with the convenience of standard CRUD methods over SQLAlchemy tables.* A schema system (based on Marshmallow or Typesystem) which allows the declaration of inputs and outputs of endpoints  very easily, with the convenience of reliable and automatic data-type validation.* Dependency injection to make ease the process of managing parameters needed in endpoints via the use of `Component`s.  Flama ASGI objects like `Request`, `Response`, `Session` and so on are defined as `Component`s ready to be injected in  your endpoints.* `Component`s as the base of the plugin ecosystem, allowing you to create custom or use those already defined in your  endpoints, injected as parameters.* Auto generated API schema using OpenAPI standard.* Auto generated `docs`, and provides a Swagger UI and ReDoc endpoints.* Automatic handling of pagination, with several methods at your disposal such as `limit-offset` and `page numbering`,  to name a few.## InstallationFlama is fully compatible with all [supported versions](https://devguide.python.org/versions/) of Python. We recommendyou to use the latest version available.For a detailed explanation on how to install flamavisit:  [https://flama.dev/docs/getting-started/installation](https://flama.dev/docs/getting-started/installation).## Getting StartedVisit [https://flama.dev/docs/getting-started/quickstart](https://flama.dev/docs/getting-started/quickstart) to getstarted with Flama.## DocumentationVisit [https://flama.dev/docs/](https://flama.dev/docs/) to view the full documentation.## Example```pythonfrom flama import Flamaapp = Flama(    title=&quot;Hello-ðŸ”¥&quot;,    version=&quot;1.0&quot;,    description=&quot;My first API&quot;,)@app.route(&quot;/&quot;)def home():    &quot;&quot;&quot;    tags:        - Salute    summary:        Returns a warming message.    description:        This is a more detailed description of the method itself.        Here we can give all the details required and they will appear        automatically in the auto-generated docs.    responses:        200:            description: Warming hello message!    &quot;&quot;&quot;    return {&quot;message&quot;: &quot;Hello ðŸ”¥&quot;}```This example will build and run a `Hello ðŸ”¥` API. To run it:```commandlineflama run examples.hello_flama:app```## Authors* JosÃ© Antonio Perdiguero LÃ³pez ([@perdy](https://github.com/perdy/))* Miguel DurÃ¡n-Olivencia ([@migduroli](https://github.com/migduroli/))## ContributingThis project is absolutely open to contributions so if you have a nice idea, please readour [contributing docs](.github/CONTRIBUTING.md) **before submitting** a pullrequest.</longdescription>
</pkgmetadata>