<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Hayloft [![Downloads](https://static.pepy.tech/badge/hayloft/month)](https://pepy.tech/project/hayloft)[![](https://dcbadge.vercel.app/api/server/EKewT5cYMy?compact=true&amp;style=flat)](https://discord.gg/EKewT5cYMy)[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/eaturchenkov.svg?style=social&amp;label=Follow%20%40eaturchenkov)](https://twitter.com/eaturchenkov)UI tool for LLM frameworks to make easy prompt/completion tracking, store and comparison of different sessions.- [Installation](#installation)- [Usage](#usage)  - [LlamaIndex](#llamaindex)  - [BabyAGI](#babyagi)## InstallationInstall package with pip```pip install hayloft```## UsageStart hayloft server```hayloft start```Trace logs of your script on [http://localhost:7000](http://localhost:7000)### LlamaIndexInstall `llama-index`, create `example.py` file as below. Put [examples](https://github.com/jerryjliu/llama_index/tree/main/examples) folder from llama_index repo near the file.```pythonimport osos.environ[&quot;OPENAI_API_KEY&quot;] = 'YOUR_OPENAI_API_KEY'from llama_index import SimpleDirectoryReader, VectorStoreIndex from hayloft.llama_index import grab_logsgrab_logs()documents = SimpleDirectoryReader(&quot;examples/paul_graham_essay/data&quot;).load_data()index = VectorStoreIndex.from_documents(documents)query_engine = index.as_query_engine()query_engine.query(&quot;What did the author do growing up?&quot;)```Or you can start live sessions from hayloft ui, just modify code like here```pythonimport osos.environ[&quot;OPENAI_API_KEY&quot;] = 'YOUR_OPENAI_API_KEY'from llama_index import SimpleDirectoryReader, VectorStoreIndex from hayloft.llama_index import listendef agent(query: str):    documents = SimpleDirectoryReader(&quot;examples/paul_graham_essay/data&quot;).load_data()    index = VectorStoreIndex.from_documents(documents)    query_engine = index.as_query_engine()    query_engine.query(query)listen(agent)```Start this script```python example.py```### BabyAGIClone `BabyAGI fork` repo, setup virtual env and install all dependencies```git clone git@github.com:eturchenkov/babyagi-hayloft.git &amp;&amp; cd babyagi-hayloftpip install -r requirements.txt```Adjust config in .env file and start `babyagi.py` script```python babyagi.py```</longdescription>
</pkgmetadata>