<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>#### DependenciesThe [Zulip API](https://zulip.com/api) Python bindings require thefollowing dependencies:* **Python (version &gt;= 3.8)*** requests (version &gt;= 0.12.1)**Note**: If you'd like to use the Zulip bindings with Python 2, werecommend installing version 0.6.4.#### InstallingThis package uses setuptools, so you can just run:    python setup.py install#### Using the APIFor now, the only fully supported API operation is sending a message.The other API queries work, but are under active development, soplease make sure we know you're using them so that we can notify youas we make any changes to them.The easiest way to use these API bindings is to base your tools offof the example tools under zulip/examples/ in this distribution.If you place your API key in the config file `~/.zuliprc` the PythonAPI bindings will automatically read it in. The format of the configfile is as follows:    [api]    key=&lt;api key from the web interface&gt;    email=&lt;your email address&gt;    site=&lt;your Zulip server's URI&gt;    insecure=&lt;true or false, true means do not verify the server certificate&gt;    cert_bundle=&lt;path to a file containing CA or server certificates to trust&gt;If omitted, these settings have the following defaults:    insecure=false    cert_bundle=&lt;the default CA bundle trusted by Python&gt;Alternatively, you may explicitly use &quot;--user&quot;, &quot;--api-key&quot;, and`--site` in our examples, which is especially useful when testing.  Ifyou are running several bots which share a home directory, werecommend using `--config` to specify the path to the `zuliprc` filefor a specific bot.  Finally, you can control the defaults for all ofthese variables using the environment variables `ZULIP_CONFIG`,`ZULIP_API_KEY`, `ZULIP_EMAIL`, `ZULIP_SITE`, `ZULIP_CERT`,`ZULIP_CERT_KEY`, and `ZULIP_CERT_BUNDLE`.  Command-line options takeprecedence over environment variables take precedence over the configfiles.The command line equivalents for other configuration options are:    --insecure    --cert-bundle=&lt;file&gt;You can obtain your Zulip API key, create bots, and manage bots allfrom your Zulip settings page; with current Zulip there's also abutton to download a `zuliprc` file for your account/server pair.A typical simple bot sending API messages will look as follows:At the top of the file:    # Make sure the Zulip API distribution's root directory is in sys.path, then:    import zulip    zulip_client = zulip.Client(email=&quot;your-bot@example.com&quot;, client=&quot;MyTestClient/0.1&quot;)When you want to send a message:    message = {      &quot;type&quot;: &quot;stream&quot;,      &quot;to&quot;: [&quot;support&quot;],      &quot;subject&quot;: &quot;your subject&quot;,      &quot;content&quot;: &quot;your content&quot;,    }    zulip_client.send_message(message)If you are parsing arguments, you may find it useful to use Zulip'soption group; see any of our API examples for details on how to do this.Additional examples:    client.send_message({'type': 'stream', 'content': 'Zulip rules!',                         'subject': 'feedback', 'to': ['support']})    client.send_message({'type': 'private', 'content': 'Zulip rules!',                         'to': ['user1@example.com', 'user2@example.com']})send_message() returns a dict guaranteed to contain the followingkeys: msg, result.  For successful calls, result will be &quot;success&quot; andmsg will be the empty string.  On error, result will be &quot;error&quot; andmsg will describe what went wrong.#### ExamplesThe API bindings package comes with several nice example scripts thatshow how to use the APIs; they are installed as part of the APIbindings bundle.#### LoggingThe Zulip API comes with a ZulipStream class which can be used with thelogging module:```import zulipimport loggingstream = zulip.ZulipStream(type=&quot;stream&quot;, to=[&quot;support&quot;], subject=&quot;your subject&quot;)logger = logging.getLogger(&quot;your_logger&quot;)logger.addHandler(logging.StreamHandler(stream))logger.setLevel(logging.DEBUG)logger.info(&quot;This is an INFO test.&quot;)logger.debug(&quot;This is a DEBUG test.&quot;)logger.warn(&quot;This is a WARN test.&quot;)logger.error(&quot;This is a ERROR test.&quot;)```#### Sending messagesYou can use the included `zulip-send` script to send messages via theAPI directly from existing scripts.    zulip-send hamlet@example.com cordelia@example.com -m \        &quot;Conscience doth make cowards of us all.&quot;Alternatively, if you don't want to use your ~/.zuliprc file:    zulip-send --user shakespeare-bot@example.com \        --api-key a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5 \        --site https://zulip.example.com \        hamlet@example.com cordelia@example.com -m \        &quot;Conscience doth make cowards of us all.&quot;#### Working with an untrusted server certificateIf your server has either a self-signed certificate, or a certificate signedby a CA that you don't wish to globally trust then by default the API willfail with an SSL verification error.You can add `insecure=true` to your .zuliprc file.    [api]    site=https://zulip.example.com    insecure=trueThis disables verification of the server certificate, so connections areencrypted but unauthenticated. This is not secure, but may be good enoughfor a development environment.You can explicitly trust the server certificate using `cert_bundle=&lt;filename&gt;`in your .zuliprc file.    [api]    site=https://zulip.example.com    cert_bundle=/home/bots/certs/zulip.example.com.crtYou can also explicitly trust a different set of Certificate Authorities fromthe default bundle that is trusted by Python. For example to trust a companyinternal CA.    [api]    site=https://zulip.example.com    cert_bundle=/home/bots/certs/example.com.ca-bundleSave the server certificate (or the CA certificate) in its own file,converting to PEM format first if necessary.Verify that the certificate you have saved is the same as the one on theserver.The `cert_bundle` option trusts the server / CA certificate only forinteraction with the zulip site, and is relatively secure.Note that a certificate bundle is merely one or more certificates combinedinto a single file.</longdescription>
</pkgmetadata>