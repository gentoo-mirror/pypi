<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;h1&gt;RunPod | Python Library &lt;/h1&gt;[![PyPI Package](https://badge.fury.io/py/runpod.svg)](https://badge.fury.io/py/runpod)&amp;nbsp;[![Downloads](https://static.pepy.tech/personalized-badge/runpod?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=Downloads)](https://pepy.tech/project/runpod)[![CI | Code Quality](https://github.com/runpod/runpod-python/actions/workflows/CI-pylint.yml/badge.svg)](https://github.com/runpod/runpod-python/actions/workflows/CI-pylint.yml)&amp;nbsp;[![CI | Unit Tests](https://github.com/runpod/runpod-python/actions/workflows/CI-tests.yml/badge.svg)](https://github.com/runpod/runpod-python/actions/workflows/CI-tests.yml)&amp;nbsp;[![CI | CodeQL](https://github.com/runpod/runpod-python/actions/workflows/CI-codeql.yml/badge.svg)](https://github.com/runpod/runpod-python/actions/workflows/CI-codeql.yml)&lt;/div&gt;Welcome to the official Python library for RunPod API &amp;amp; SDK.## Table of Contents- [Table of Contents](#table-of-contents)- [üíª | Installation](#--installation)- [‚ö° | Serverless Worker (SDK)](#--serverless-worker-sdk)  - [Quick Start](#quick-start)  - [Local Test Worker](#local-test-worker)- [üìö | API Language Library (GraphQL Wrapper)](#--api-language-library-graphql-wrapper)  - [Endpoints](#endpoints)  - [GPU Cloud (Pods)](#gpu-cloud-pods)- [üìÅ | Directory](#--directory)- [ü§ù | Community and Contributing](#--community-and-contributing)## üíª | Installation```bash# Install the latest release versionpip install runpod# or# Install the latest development version (main branch)pip install git+https://github.com/runpod/runpod-python.git```*Python 3.10 or higher is required to use the latest version of this package.*## ‚ö° | Serverless Worker (SDK)This python package can also be used to create a serverless worker that can be deployed to RunPod as a custom endpoint API.### Quick StartCreate an python script in your project that contains your model definition and the RunPod worker start code. Run this python code as your default container start command:```python# my_worker.pyimport runpoddef is_even(job):    job_input = job[&quot;input&quot;]    the_number = job_input[&quot;number&quot;]    if not isinstance(the_number, int):        return {&quot;error&quot;: &quot;Silly human, you need to pass an integer.&quot;}    if the_number % 2 == 0:        return True    return Falserunpod.serverless.start({&quot;handler&quot;: is_even})```Make sure that this file is ran when your container starts. This can be accomplished by calling it in the docker command when you setup a template at [runpod.io/console/serverless/user/templates](https://www.runpod.io/console/serverless/user/templates) or by setting it as the default command in your Dockerfile.See our [blog post](https://www.runpod.io/blog/serverless-create-a-basic-api) for creating a basic Serverless API, or view the [details docs](https://docs.runpod.io/serverless-ai/custom-apis) for more information.### Local Test WorkerYou can also test your worker locally before deploying it to RunPod. This is useful for debugging and testing.```bashpython my_worker.py --rp_serve_api```## üìö | API Language Library (GraphQL Wrapper)When interacting with the RunPod API you can use this library to make requests to the API.```pythonimport runpodrunpod.api_key = &quot;your_runpod_api_key_found_under_settings&quot;```### EndpointsYou can interact with RunPod endpoints via a `run` or `run_sync` method.```pythonendpoint = runpod.Endpoint(&quot;ENDPOINT_ID&quot;)run_request = endpoint.run(    {&quot;your_model_input_key&quot;: &quot;your_model_input_value&quot;})# Check the status of the endpoint run requestprint(run_request.status())# Get the output of the endpoint run request, blocking until the endpoint run is complete.print(run_request.output())``````pythonendpoint = runpod.Endpoint(&quot;ENDPOINT_ID&quot;)run_request = endpoint.run_sync(    {&quot;your_model_input_key&quot;: &quot;your_model_input_value&quot;})# Returns the job results if completed within 90 seconds, otherwise, returns the job status.print(run_request )```### GPU Cloud (Pods)```pythonimport runpodrunpod.api_key = &quot;your_runpod_api_key_found_under_settings&quot;# Create a podpod = runpod.create_pod(&quot;test&quot;, &quot;runpod/stack&quot;, &quot;NVIDIA GeForce RTX 3070&quot;)# Stop the podrunpod.stop_pod(pod.id)# Start the podrunpod.start_pod(pod.id)# Terminate the podrunpod.terminate_pod(pod.id)```## üìÅ | Directory```BASH.‚îú‚îÄ‚îÄ docs               # Documentation‚îú‚îÄ‚îÄ examples           # Examples‚îú‚îÄ‚îÄ runpod             # Package source code‚îÇ   ‚îú‚îÄ‚îÄ api_wrapper    # Language library - API (GraphQL)‚îÇ   ‚îú‚îÄ‚îÄ cli            # Command Line Interface Functions‚îÇ   ‚îú‚îÄ‚îÄ endpoint       # Language library - Endpoints‚îÇ   ‚îî‚îÄ‚îÄ serverless     # SDK - Serverless Worker‚îî‚îÄ‚îÄ tests              # Package tests```## ü§ù | Community and ContributingWe welcome both pull requests and issues on [GitHub](https://github.com/runpod/runpod-python). Bug fixes and new features are encouraged.&lt;div align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://discord.gg/pJ3P2DbUUq&quot;&gt;![Discord Banner 2](https://discordapp.com/api/guilds/912829806415085598/widget.png?style=banner2)&lt;/a&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>