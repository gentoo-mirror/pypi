<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## dalmatian[![Build Status](https://travis-ci.com/broadinstitute/dalmatian.svg?branch=master)](https://travis-ci.com/broadinstitute/dalmatian)[FISS](https://github.com/broadinstitute/fiss)' faithful companion.dalmatian is a collection of high-level functions for interacting with Firecloud via Pandas dataframes.### Install`pip install firecloud-dalmatian`### RequirementsFireCloud uses the Google Cloud SDK (https://cloud.google.com/sdk/) to manage authorization. To use dalmatian, you must install the SDK and login locally with```gcloud auth application-default login```### ExamplesDalmatian provides the WorkspaceManager class for interacting with FireCloud workspaces.```import dalmatianwm = dalmatian.WorkspaceManager(&quot;namespace/workspace&quot;)```#### Creating and managing workspacesCreate the workspace:```wm.create_workspace()```Upload samples and sample attributes (e.g., BAM paths). The attributes must be provided as a pandas DataFrame, in the following form: * the index must be named 'sample_id', and contain the sample IDs * the dataframe must contain the column 'participant_id' * if a 'sample_set_id' columns is provided, the corresponding sample sets will be generated```wm.upload_samples(attributes_df, add_participant_samples=True)```If `add_participant_samples=True`, all samples of a participant are stored in `participant.samples_`.Add or update workspace attributes:```attr = {    'attribute_name':'gs://attribute_path',}wm.update_attributes(attr)```Get attributes on samples, sample sets, participants:```samples_df = wm.get_samples()sets_df = wm.get_sample_sets()participants_df = wm.get_participants()```Create or update sets:```wm.update_sample_set('all_samples', samples_df.index)wm.update_participant_set('all_participants', participant_df.index)```Copy/move data from workspace:```samples_df = wm.get_samples()dalmatian.gs_copy(samples_df[attribute_name], dest_path)dalmatian.gs_move(samples_df[attribute_name], dest_path)```Clone a workspace:```wm2 = dalmatian.WorkspaceManager(namespace2, workspace2)wm2.create_workspace(wm)```#### Running jobsSubmit jobs:```wm.create_submission(&quot;config_namespace/config_name&quot;, sample_id, 'sample', use_callcache=True)wm.create_submission(&quot;config_namespace/config_name&quot;, sample_set_id, 'sample_set', expression='this.samples', use_callcache=True)wm.create_submission(&quot;config_namespace/config_name&quot;, participant_id, 'participant', expression='this.samples_', use_callcache=True)```Monitor jobs:```wm.get_submission_status()```Get runtime statistics (including cost estimates):```status_df = wm.get_sample_status(config_name)workflow_status_df, task_dfs = wm.get_stats(status_df)```Re-run failed jobs (for a sample set):```status_df = wm.get_sample_set_status(config_name)print(status_df['status'].value_counts())  # list sample statuseswm.update_sample_set('reruns', status_df[status_df['status']=='Failed'].index)wm.create_submission(config_namespace, config_name, sample_set_id, 'reruns', expression=this.samples, use_callcache=True)```### ContentsIncluding additional FireCloud Tools (enumerated below)```workflow_timecreate_workspacedelete_workspaceupload_samplesupload_participantsupdate_participant_samplesupdate_attributesget_submission_statusget_storageget_statspublish_configget_samplesget_sample_setsupdate_sample_setdelete_sample_setupdate_configurationcheck_configurationget_google_metadataparse_google_statscalculate_google_costlist_methodsget_methodget_method_versionlist_configsget_configget_config_versionprint_methodsprint_configsget_wdlcompare_wdlscompare_wdlredact_outdated_method_versionsupdate_methodget_vm_cost```### UsageSome functionality depends on the installed `gsutil`.When using PY3 this creates a potential issue of requiring multiple accessible python installs.Remediate this issue by defining an `env` variable for gsutil python```# replace path with path to local python 2.7 path.# if using pyenv the following should work# (assuming of course 2.7.12 is installed)export CLOUDSDK_PYTHON=/usr/local/var/pyenv/versions/2.7.12/bin/python```</longdescription>
</pkgmetadata>