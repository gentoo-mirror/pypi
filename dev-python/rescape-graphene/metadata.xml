<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># rescape_grapheneGraphene helpers for rescape projects## InstallationCreate a virtual environment using```bashmkdir ~/.virtualenvspython3 -m venv ~/.virtualenvs/rescape-grapheneActivate itsource ~/.virtualenvs/rescape-graphene/bin/activate```#### Install requirementsIf you don't have pur installed:pip install purThis updates requirements.txt to their latest versionInstall requirements with latest versions```bashpur -r requirements.txt &amp;&amp; $VIRTUAL_ENV/bin/pip3 install --no-cache-dir  --upgrade -r requirements.txt```Add the following to the bottom $VIRTUAL_ENV/bin/activate to setup the PYTHONPATH.Replace the path with your code directory```bashexport RESCAPE_GRAPHENE_BASE_DIR=/Users/andy/code/rescape-grapheneexport RESCAPE_GRAPHENE_PROJECT_DIR=$RESCAPE_GRAPHENE_BASE_DIR/urbinsightexport PYTHONPATH=.:$RESCAPE_GRAPHENE_BASE_DIR:$RESCAPE_GRAPHENE_PROJECT_DIR```## BuildUpdate the version in setup.pyRun to generate build:Update the version with bumpversion, which can't seem to look it up itself but udpates setup.py```bashgit commit . -m &quot;Version update&quot; &amp;&amp; git pushbumpversion --current-version {look in setup.py} patch setup.pypython3 setup.py clean sdist bdist_wheel```To distribute to testpypi site:Upload package:```bashtwine upload dist/*```All at once``` bashgit commit . -m &quot;Version update&quot; &amp;&amp; git push &amp;&amp; bumpversion --current-version {look in setup.py} patch setup.py &amp;&amp; python3 setup.py clean sdist bdist_wheel &amp;&amp; twine upload dist/*# without commitbumpversion --current-version {look in setup.py} patch setup.py &amp;&amp; python3 setup.py clean sdist bdist_wheel &amp;&amp; twine upload dist/*```For setup of testpypi see ~/.pypirc or create one according to the testpypi docs:e.g.:[distutils]index-servers=    pypi    testpypi[testpypi]repository: https://test.pypi.org/legacy/username: your username for pypi.org## Running testsCreate a postgres database rescape_graphene# Login to psql:CREATE DATABASE rescape_graphene;CREATE USER test_user WITH PASSWORD 'test';GRANT ALL PRIVILEGES ON DATABASE rescape_graphene to test_user;# Give Superuser permission to create test databasesALTER ROLE test_user SUPERUSER;# Run the migrations# Create a Django user test with pw testpass ./manage.py createsuperuser # or echo &quot;from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('test', 'test@nowhere.man', 'testpass')&quot; | ./manage.py shell</longdescription>
</pkgmetadata>