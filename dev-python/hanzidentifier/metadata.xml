<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================Hanzi Identifier================.. image:: https://badge.fury.io/py/hanzidentifier.png    :target: http://badge.fury.io/py/hanzidentifier    .. image:: https://travis-ci.org/tsroten/hanzidentifier.png?branch=develop        :target: https://travis-ci.org/tsroten/hanzidentifierHanzi Identifier is a simple Python module that identifies a string of text as having Simplified or Traditional characters.* GitHub: https://github.com/tsroten/hanzidentifier* Free software: MIT licenseAbout-----Easy-to-use helper functions for identifying strings:.. code:: python    &gt;&gt;&gt; import hanzidentifier    &gt;&gt;&gt; hanzidentifier.has_chinese('Hello my name is John.')    False    &gt;&gt;&gt; hanzidentifier.is_simplified('John说：你好！')    True    &gt;&gt;&gt; hanzidentifier.is_traditional('John說：你好！')    True    &gt;&gt;&gt; hanzidentifier.has_chinese('Country in Simplified: 国家. Country in Traditional: 國家.')    TrueHere it is without the helper functions:.. code:: python    &gt;&gt;&gt; hanzidentifier.identify('Hello my name is Thomas.') is hanzidentifier.UNKNOWN    True    &gt;&gt;&gt; hanzidentifier.identify('Thomas 说：你好！') is hanzidentifier.SIMPLIFIED    True    &gt;&gt;&gt; hanzidentifier.identify('Thomas 說：你好！') is hanzidentifier.TRADITIONAL    True    &gt;&gt;&gt; hanzidentifier.identify('你好！') is hanzidentifier.BOTH    True    &gt;&gt;&gt; hanzidentifier.identify('Country in Simplified: 国家. Country in Traditional: 國家.' ) is hanzidentifier.MIXED    True``hanzidentifier.identify`` has five possible return values:* ``hanzidentifier.UNKNOWN``: there are no recognized Chinese characters in the string.* ``hanzidentifier.BOTH``: the string is compatible with both Simplified and Traditional character systems.* ``hanzidentifier.TRADITIONAL``: the string consists of Traditional characters.* ``hanzidentifier.SIMPLIFIED``: the string consists of Simplified characters.* ``hanzidentifier.MIXED``: the string consists of characters recognized solely as Traditional characters and also consists of characters recognized solely as Simplified characters.Characters that aren't found in CC-CEDICT are ignored when determining a string's identity.Hanzi Identifier uses the CC-CEDICT data provided by `Zhon &lt;https://github.com/tsroten/zhon&gt;`_ to identify Chinese characters.Because the Traditional and Simplified Chinese character systems overlap, astring containing Simplified characters could identify as``hanzidentifer.SIMPLIFIED`` or ``hanzidentifier.BOTH`` depending on if thecharacters are also Traditional characters.Hanzi Identifier's functions accept and return unicode.Getting Started---------------* Install Hanzi Identifier: ``$ pip install hanzidentifier``* Report bugs and ask questions via `GitHub Issues &lt;https://github.com/tsroten/hanzidentifier/issues&gt;`_* `Contribute features or bug fixes &lt;https://github.com/tsroten/hanzidentifier/pulls&gt;`_Change Log----------v1.1.0 (2020-10-15)~~~~~~~~~~~~~~~~~~~* New function: ``count_chinese()``. Thanks to ramwin.* Drop Python 2.v1.0.2 (2015-08-06)~~~~~~~~~~~~~~~~~~~* New README format* Adds Travis CI support* Uses ``io.open()`` in ``setup.py``. Fixes #1.v1.0.1 (2014-04-14)~~~~~~~~~~~~~~~~~~~* Fixes URL typo.v1.0 (2014-04-12)~~~~~~~~~~~~~~~~~Version 1.0 merges some changes from Dragon Mapper. It is not backwards compatible withthe previous versions of Hanzi Identifier (e.g. some of the constants are named differently).* Merges code from `Dragon Mapper &lt;http://github.com/tsroten/dragonmapper&gt;`_ project.* Adds tox support.v0.1 (2013-04-24)~~~~~~~~~~~~~~~~~* Initial release.</longdescription>
</pkgmetadata>