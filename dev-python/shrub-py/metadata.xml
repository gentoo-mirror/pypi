<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># shrub.pyA python based Evergreen project config generation library![PyPI - Python Version](https://img.shields.io/pypi/pyversions/shrub.py)[![PyPI version](https://badge.fury.io/py/shrub.py.svg)](https://pypi.org/project/shrub.py/)## OverviewBased on [shrub](https://github.com/evergreen-ci/shrub/), shrub.py is a library for programaticallybuilding Evergreen project configurations described [here](https://github.com/evergreen-ci/evergreen/wiki/Project-Files).## ExampleThe following snippet will create a set of parallel tasks reported under a single display task. Itwould generate json used by ```generate.tasks```:```from shrub.v2 import ShrubProject, Task, BuildVariantn_tasks = 10def define_task(index):    name = f&quot;task_name_{index}&quot;    return Task(        name,        [            FunctionCall(&quot;do setup&quot;),            FunctionCall(                &quot;run test generator&quot;,                {&quot;parameter_1&quot;: &quot;value 1&quot;, &quot;parameter_2&quot;: &quot;value 2&quot;}            ),            FunctionCall(&quot;run tests&quot;)        ],    ).dependency(&quot;compile&quot;)tasks = {define_task(i) for i in range(n_tasks)}variant = BuildVariant(&quot;linux-64&quot;).display_task(&quot;test_suite&quot;, tasks)project = ShrubProject({variant})project.json()```## Run tests```poetry run pytest```</longdescription>
</pkgmetadata>