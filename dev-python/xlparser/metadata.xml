<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>- [xlparser](#xlparser)  - [Install](#install)  - [Usage](#usage)    - [CLI Usage](#cli-usage)    - [Module Usage](#module-usage)    - [Parse any type of file](#parse-any-type-of-file)    - [Save to any type of file](#save-to-any-type-of-file)    - [Csv operation](#csv-operation)    - [Zip operation](#zip-operation)  - [Required](#required)# xlparserParse excel(xlsx/xls/csv) to other format(csv, xlsx, json).[![](https://img.shields.io/pypi/pyversions/xlparser.svg?longCache=True)](https://pypi.org/pypi/xlparser/)[![](https://img.shields.io/pypi/v/xlparser.svg?maxAge=36000)](https://pypi.org/pypi/xlparser/)## Install    pip install xlparser    # or    pip3 install xlparserIf you want to filter fields, it will be convenient with [xcut](https://github.com/ahuigo/xcut).    pip install xcut     # or    pip3 install xcut ## Usage    $ xlparser -h    xlparser [options] INFILE [OUTFILE]\n        options:\n            -h       For help.\n### CLI UsageFrom xlsx to csv.    $ xlparser source.xlsx new.csv From csv to xlsx.    $ xlparser source.csv new.xlsx From csv to json.    $ xlparser source.csv new.jsonFrom xlsx to csv(stdout).    $ xlparser source.xlsx | head     $ xlparser src.xlsx | tee test.csv    name, score    &quot;李雷,韩梅&quot;,15    小花,16Use xcut to filter fields.    $ xlparser src.xlsx | xcut --from-csv -f name     name    &quot;李雷,韩梅&quot;    小花    $ xlparser src.xlsx | xcut --from-csv -f score,name    score,name    15,&quot;李雷,韩梅&quot;    16,小花Convert xlsx to csv    $ xlparser src.xlsx test.csv;     $ cat test.csv    name, age    李雷,15    小花,16Convert csv to json    $ xlparser test.csv test.json    [[&quot;name&quot;, &quot;age&quot;], [&quot;李雷&quot;, &quot;15&quot;], [&quot;小花&quot;, &quot;16&quot;]]### Module Usage#### Parse any type of file`parse` any type of file to rows:    &gt;&gt;&gt; from xlparser import parse, saveCsv    &gt;&gt;&gt; rows = parse('some.xlsx')    &gt;&gt;&gt; list(rows)    [['foo', 'bar'], ['看', '我', '变']]The `parse` function supports the following file formats: .csv, .xls, .xlsx .#### Save to any type of fileSave rows to csv    &gt;&gt;&gt; from xlparser import saveCsv    &gt;&gt;&gt; rows = [['foo', 'bar'], ['看', '我', '变']]    &gt;&gt;&gt; saveCsv(rows, 'test.csv')Save rows to xlsx    &gt;&gt;&gt; saveXlsx(rows, 'test.xlsx')#### Csv operation    &gt;&gt;&gt; from xlparser import *    &gt;&gt;&gt; rows = [('foo','bar'), ('看','我','变')]    &gt;&gt;&gt; saveCsv(rows, 'test.csv')    &gt;&gt;&gt; list(parseCsv('test.csv'))    [['foo', 'bar'], ['看', '我', '变']]#### Zip operation    &gt;&gt;&gt; from xlparser import loadZip    &gt;&gt;&gt; zf = loadZip('test.xlsx')    &gt;&gt;&gt; print(zf.filelist)    ......    &gt;&gt;&gt; zf.extract('xl/media/image1.png', '/tmp')    &gt;&gt;&gt; os.rename('/tmp/'+'xl/media/image1.png', './image1.png')## Required1. python&gt;=3.52. xlrd: required by xls2. openpyxl&gt;=2.5.4: required by xlsx</longdescription>
</pkgmetadata>