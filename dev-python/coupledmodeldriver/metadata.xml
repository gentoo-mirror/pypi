<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CoupledModelDriver[![tests](https://github.com/noaa-ocs-modeling/CoupledModelDriver/workflows/tests/badge.svg)](https://github.com/noaa-ocs-modeling/CoupledModelDriver/actions?query=workflow%3Atests)[![codecov](https://codecov.io/gh/noaa-ocs-modeling/coupledmodeldriver/branch/main/graph/badge.svg?token=4DwZePHp18)](https://codecov.io/gh/noaa-ocs-modeling/coupledmodeldriver)[![build](https://github.com/noaa-ocs-modeling/CoupledModelDriver/workflows/build/badge.svg)](https://github.com/noaa-ocs-modeling/CoupledModelDriver/actions?query=workflow%3Abuild)[![version](https://img.shields.io/pypi/v/CoupledModelDriver)](https://pypi.org/project/CoupledModelDriver)[![license](https://img.shields.io/github/license/noaa-ocs-modeling/CoupledModelDriver)](https://creativecommons.org/share-your-work/public-domain/cc0)[![style](https://sourceforge.net/p/oitnb/code/ci/default/tree/_doc/_static/oitnb.svg?format=raw)](https://sourceforge.net/p/oitnb/code)[![documentation](https://readthedocs.org/projects/coupledmodeldriver/badge/?version=latest)](https://coupledmodeldriver.readthedocs.io/en/latest/?badge=latest)CoupledModelDriver generates an overlying job submission framework and configuration directories for NEMS-coupled coastal oceanmodel ensembles.```shellpip install coupledmodeldriver```It utilizes [NEMSpy](https://nemspy.readthedocs.io) to generate NEMS configuration files, shares common configurations betweenruns, and organizes spinup and mesh partition into separate jobs for dependant submission.Documentation can be found at https://coupledmodeldriver.readthedocs.io## supported models and platforms- **models**    - circulation models        - ADCIRC (uses [ADCIRCpy](https://pypi.org/project/adcircpy))        - SCHISM (uses [PySCHISM](https://github.com/schism-dev/pyschism))    - forcings        - ATMESH        - WW3DATA        - HURDAT best track        - OWI- **platforms**    - local    - Slurm        - Hera        - Stampede2        - Orion## organization / responsibilityCoupledModelDriver is developed for the COASTAL Act project by the [Coastal Marine Modeling Branch (CMMB)](https://coastaloceanmodels.noaa.gov) of the Office of Coast Survey (OCS), a part of the [National Oceanic and Atmospheric Administration (NOAA)](https://www.noaa.gov), an agency of the United States federal government.- Zachary Burnett (**lead**) - zachary.burnett@noaa.gov- William Pringle - wpringle@anl.gov- Saeed Moghimi - saeed.moghimi@noaa.gov## usage example### 1. generate JSON configuration files`initialize_adcirc` creates JSON configuration files according to the given parameters. ADCIRC run options that are not exposedby this command, such as `runs` or `gwce_solution_scheme`, can be specified by directly modifying the JSON files. The followingcreates JSON files for coupling `(ATMESH + WW3DATA) -&gt; ADCIRC` over a small Shinnecock Inlet mesh:```shellinitialize_adcirc \    --platform HERA \    --mesh-directory /scratch2/COASTAL/coastal/save/shared/models/meshes/shinnecock/v1.0 \    --output-directory hera_shinnecock_ike_spinup_tidal_atmesh_ww3data \    --modeled-start-time 20080823 \    --modeled-duration 14:06:00:00 \    --modeled-timestep 00:00:02 \    --nems-interval 01:00:00 \    --adcirc-executable /scratch2/COASTAL/coastal/save/shared/repositories/CoastalApp/ALLBIN_INSTALL/NEMS-adcirc-atmesh-ww3data.x \    --adcirc-processors 40    --adcprep-executable /scratch2/COASTAL/coastal/save/shared/repositories/CoastalApp/ALLBIN_INSTALL/adcprep \    --modulefile /scratch2/COASTAL/coastal/save/shared/repositories/CoastalApp/modulefiles/envmodules_intel.hera \    --forcings tidal,atmesh,ww3data \    --tidal-source TPXO \    --tidal-path /scratch2/COASTAL/coastal/save/shared/models/forcings/tides/h_tpxo9.v1.nc \    --tidal-spinup-duration 12:06:00:00 \    --atmesh-path /scratch2/COASTAL/coastal/save/shared/models/forcings/shinnecock/ike/wind_atm_fin_ch_time_vec.nc \    --ww3data-path /scratch2/COASTAL/coastal/save/shared/models/forcings/shinnecock/ike/ww3.Constant.20151214_sxy_ike_date.nc```This will create the directory `hera_shinnecock_ike_spinup_tidal_atmesh_ww3data/` with the following JSON configuration files:```ðŸ“‚ hera_shinnecock_ike_spinup_tidal_atmesh_ww3data/â”£ ðŸ“œ configure_adcirc.jsonâ”£ ðŸ“œ configure_atmesh.jsonâ”£ ðŸ“œ configure_modeldriver.jsonâ”£ ðŸ“œ configure_nems.jsonâ”£ ðŸ“œ configure_slurm.jsonâ”£ ðŸ“œ configure_tidal_forcing.jsonâ”— ðŸ“œ configure_ww3data.json```These files contain relevant configuration values for an ADCIRC run. You will likely wish to change these values to alter theresulting run, before generating the actual model configuration. For instance, NEMS connections and the run sequence need to bemanually specified in `configure_nems.json`.### 2. generate model configuration files`generate_adcirc` generates an ADCIRC run configuration (`fort.14`, `fort.15`, etc.) using options read from the JSONconfiguration files (generated in the previous step).```shellcd hera_shinnecock_ike_spinup_tidal_atmesh_ww3datagenerate_adcirc```The resulting configuration will look like this:```ðŸ“‚ hera_shinnecock_ike_spinup_tidal_atmesh_ww3data/â”£ ðŸ“œ configure_adcirc.jsonâ”£ ðŸ“œ configure_atmesh.jsonâ”£ ðŸ“œ configure_modeldriver.jsonâ”£ ðŸ“œ configure_nems.jsonâ”£ ðŸ“œ configure_slurm.jsonâ”£ ðŸ“œ configure_tidal_forcing.jsonâ”£ ðŸ“œ configure_ww3data.jsonâ”£ ðŸ“‚ spinup/â”ƒ  â”£ ðŸ“œ fort.13â”ƒ  â”£ ðŸ”— fort.14 -&gt; ../fort.14â”ƒ  â”£ ðŸ“œ fort.15â”ƒ  â”£ ðŸ“œ nems.configureâ”ƒ  â”£ ðŸ“œ model_configureâ”ƒ  â”£ ðŸ”— atm_namelist.rc -&gt; ./model_configureâ”ƒ  â”£ ðŸ“œ config.rcâ”ƒ  â”£ ðŸ“œ setup.jobâ”ƒ  â”— ðŸ“œ adcirc.jobâ”£ ðŸ“‚ runs/â”ƒ  â”— ðŸ“‚ unperturbed/â”ƒ    â”£ ðŸ“œ fort.13â”ƒ    â”£ ðŸ”— fort.14 -&gt; ../../fort.14â”ƒ    â”£ ðŸ“œ fort.15â”ƒ    â”£ ðŸ”— fort.67.nc -&gt; ../../spinup/fort.67.ncâ”ƒ    â”£ ðŸ”— fort.68.nc -&gt; ../../spinup/fort.68.ncâ”ƒ    â”£ ðŸ“œ nems.configureâ”ƒ    â”£ ðŸ“œ model_configureâ”ƒ    â”£ ðŸ”— atm_namelist.rc -&gt; ./model_configureâ”ƒ    â”£ ðŸ“œ config.rcâ”ƒ    â”£ ðŸ“œ setup.jobâ”ƒ    â”— ðŸ“œ adcirc.jobâ”£ ðŸ“œ fort.14â”£ ðŸ“œ cleanup.shâ”— ðŸ“œ run_hera.sh```### 3. run the modelThe previous step will also have generated a script called `./run_hera.sh`. You can run it to submit the model run to the Slurmjob queue:```shell./run_hera.sh``` The queue will have the following jobs added:```   JOBID CPU NODE DEPENDENCY       NODELIST(REA NAME20967647 1   1    (null)           (None)       ADCIRC_SETUP_SPINUP20967648 40  1    afterok:20967647 (Dependency) ADCIRC_COLDSTART_SPINUP20967649 1   1    (null)           (None)       ADCIRC_SETUP_unperturbed20967650 42  2    afterok:20967649 (Dependency) ADCIRC_HOTSTART_unperturbed```### 4. track model progress`check_completion` checks the completion status of a running model directory.```shellcd hera_shinnecock_ike_spinup_tidal_atmesh_ww3datacheck_completion``````json{    &quot;hera_shinnecock_ike_spinup_tidal_atmesh_ww3data&quot;: {        &quot;spinup&quot;: &quot;running - 15%&quot;,        &quot;runs&quot;: &quot;not_started - 0%&quot;    }}```you can also pass a specific directory (or several directories):```shellcheck_completion spinup``````json{    &quot;spinup&quot;: &quot;running - 27%&quot;}``````shellcd run_20211027_florence_besttrack_250msubset_quadraturecheck_completion runs/*_13``````json{    &quot;vortex_4_variable_perturbation_13&quot;: &quot;completed - 100.0%&quot;,    &quot;vortex_4_variable_quadrature_13&quot;: &quot;not_started - 0%&quot;}```if a run has an error, you can pass `--verbose` to see detailed logs:```shellcheck_completion spinup``````json{    &quot;spinup&quot;: &quot;error - 0%&quot;}``````shellcheck_completion spinup --verbose``````json{    &quot;spinup&quot;: {        &quot;status&quot;: &quot;error&quot;,        &quot;progress&quot;: &quot;0%&quot;,        &quot;error&quot;: {            &quot;ADCIRC_SETUP_SPINUP.err.log&quot;: [                &quot;forrtl: severe (24): end-of-file during read, unit -4, file /proc/92195/fd/0\n&quot;,                &quot;Image              PC                Routine            Line        Source             \n&quot;,                &quot;adcprep            000000000069A72E  Unknown               Unknown  Unknown\n&quot;,                &quot;adcprep            00000000006CBAAF  Unknown               Unknown  Unknown\n&quot;,                &quot;adcprep            000000000050A5CB  openprepfiles_           6996  prep.F\n&quot;,                &quot;adcprep            0000000000507F22  prep13_                   753  prep.F\n&quot;,                &quot;adcprep            000000000042E2E9  prepinput_                717  adcprep.F\n&quot;,                &quot;adcprep            000000000042BCDB  MAIN__                    239  adcprep.F\n&quot;,                &quot;adcprep            000000000040B65E  Unknown               Unknown  Unknown\n&quot;,                &quot;libc-2.17.so       00002AAEC02EB555  __libc_start_main     Unknown  Unknown\n&quot;,                &quot;adcprep            000000000040B569  Unknown               Unknown  Unknown\n&quot;,                &quot;srun: error: h24c51: task 0: Exited with exit code 24\n&quot;,                &quot;srun: launch/slurm: _step_signal: Terminating StepId=25366266.1\n&quot;            ]        }    }}``````shellcheck_completion runs``````json{    &quot;spinup&quot;: &quot;failed - 0%&quot;}``````shellcheck_completion runs --verbose``````json{    &quot;runs&quot;: {        &quot;status&quot;: &quot;failed&quot;,        &quot;progress&quot;: &quot;0%&quot;,        &quot;failed&quot;: {            &quot;fort.16&quot;: &quot;ADCIRC output file `fort.16` not found&quot;        },        &quot;error&quot;: {            &quot;ADCIRC_SETUP_unperturbed.err.log&quot;: [                &quot;slurmstepd: error: execve(): /scratch2/COASTAL/coastal/save/shared/repositories/CoastalApp/ADCIRC/ALLBIN_INSTALL/adcprep: No such file or directory\n&quot;,                &quot;srun: error: h18c49: task 0: Exited with exit code 2\n&quot;,                &quot;srun: launch/slurm: _step_signal: Terminating StepId=25366268.0\n&quot;            ]        }    }}```</longdescription>
</pkgmetadata>