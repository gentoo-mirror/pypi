<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>cdata-------------&quot;see data&quot;, see data, handy snippets for conversion, cleaning and integration.install-------------  pip install cdatajson data manipulation-------------* json (and json stream) file IO, e.g.  items2file(...)* json data access, e.g. json_get(...), any2utf8, json_dict_copy* json array statistics, e.g. stat(...).. code-block:: python  from cdata.core import any2utf8  the_input = {&quot;hello&quot;: u&quot;世界&quot;}  the_output = any2utf8(the_input)  logging.info((the_input, the_output)).. code-block:: python  property_list = [      { &quot;name&quot;:&quot;name&quot;, &quot;alternateName&quot;: [&quot;name&quot;,&quot;title&quot;]},      { &quot;name&quot;:&quot;birthDate&quot;, &quot;alternateName&quot;: [&quot;dob&quot;,&quot;dateOfBirth&quot;] },      { &quot;name&quot;:&quot;description&quot; }  ]  json_object = {&quot;dob&quot;:&quot;2010-01-01&quot;,&quot;title&quot;:&quot;John&quot;,&quot;interests&quot;:&quot;data&quot;,&quot;description&quot;:&quot;a person&quot;}  ret = json_dict_copy(json_object, property_list)table data manipulation-------------* json array to/from excel.. code-block:: python  import json  from cdata.table import excel2json,json2excel  filename = &quot;test.xls&quot;  items = [{&quot;first&quot;:&quot;hello&quot;, &quot;last&quot;:&quot;world&quot; }]  json2excel(items, [&quot;first&quot;,&quot;last&quot;], filename)  ret = excel2json(filename)  print json.dumps(ret)JSON data from reading a single sheet excel file.. code-block:: json  {    &quot;fields&quot;: {        &quot;00&quot;: [            &quot;name&quot;,            &quot;年龄&quot;,            &quot;notes&quot;        ]    },    &quot;data&quot;: {        &quot;00&quot;: [            {                &quot;notes&quot;: &quot;&quot;,                &quot;年龄&quot;: 18.0,                &quot;name&quot;: &quot;张三&quot;            },            {                &quot;notes&quot;: &quot;this is li si&quot;,                &quot;年龄&quot;: 18.0,                &quot;name&quot;: &quot;李四&quot;            }        ]    }  }web stuff-------------* url domain extractionentity manipulation-------------* entity.SimpleEntity.ner().. code-block:: python  from cdata.entity import SimpleEntity  entity_list = [{&quot;@id&quot;:&quot;1&quot;,&quot;name&quot;:u&quot;张三&quot;},{&quot;@id&quot;:&quot;2&quot;,&quot;name&quot;:u&quot;李四&quot;}]  ner = SimpleEntity(entity_list)  sentence = &quot;张三给了李四一个苹果&quot;  ret = ner.ner(sentence)  logging.info(json.dumps(ret, ensure_ascii=False, indent=4))  &quot;&quot;&quot;  [{      &quot;text&quot;: &quot;张三&quot;,      &quot;entities&quot;: [          {              &quot;@id&quot;: &quot;1&quot;,              &quot;name&quot;: &quot;张三&quot;          }      ],      &quot;index&quot;: 0  },  {      &quot;text&quot;: &quot;李四&quot;,      &quot;entities&quot;: [          {              &quot;@id&quot;: &quot;2&quot;,              &quot;name&quot;: &quot;李四&quot;          }      ],      &quot;index&quot;: 4  }]  &quot;&quot;&quot;* region.RegionEntity.guess_all().. code-block:: python  from cdata.region import RegionEntity  addresses = [&quot;北京海淀区阜成路52号（定慧寺）&quot;, &quot;北京大学肿瘤医院&quot;]  city_data = RegionEntity()  result = city_data.guess_all(addresses)  logging.info(json.dumps(result, ensure_ascii=False))  &quot;&quot;&quot;     {&quot;province&quot;: &quot;北京市&quot;,     &quot;city&quot;: &quot;市辖区&quot;,     &quot;name&quot;: &quot;海淀区&quot;,     &quot;district&quot;: &quot;海淀区&quot;,     &quot;cityid&quot;: &quot;110108&quot;,     &quot;type&quot;: &quot;district&quot;}  &quot;&quot;&quot;wikification-------------* 通过wikidata搜索，定位对应实体，查找实体中文名，别名等属性。wikidata_search (item/property) and wikidata_get.. code-block:: python  query = u&quot;居里夫人&quot;  ret = wikidata_search(query, lang=&quot;zh&quot;)  logging.info(ret)  nodeid = ret[&quot;itemList&quot;][0][&quot;identifier&quot;]  ret = wikidata_get(nodeid)  lable_zh = ret[&quot;entities&quot;][nodeid][&quot;labels&quot;][&quot;zh&quot;][&quot;value&quot;]  logging.info(lable_zh)misc-------------* support simple cli function using argparsenotes-------------release package using https://github.com/pypa/twine</longdescription>
</pkgmetadata>