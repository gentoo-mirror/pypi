<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Circle CI](https://img.shields.io/circleci/project/yohanboniface/psycopg-postgis.svg)](https://circleci.com/gh/yohanboniface/psycopg-postgis) [![PyPI](https://img.shields.io/pypi/v/psycopg-postgis.svg)](https://pypi.python.org/pypi/psycopg-postgis) [![PyPI](https://img.shields.io/pypi/pyversions/psycopg-postgis.svg)](https://pypi.python.org/pypi/psycopg-postgis) [![PyPI](https://img.shields.io/pypi/implementation/psycopg-postgis.svg)](https://pypi.python.org/pypi/psycopg-postgis) [![PyPI](https://img.shields.io/pypi/status/psycopg-postgis.svg)](https://pypi.python.org/pypi/psycopg-postgis)# python-postgisPostGIS helpers for psycopg2 and asyncpg.## Install    pip install postgisIf you want a compiled version, first install `cython`:    pip install cython    pip install postgis## UsageYou need to register the extension:    # With psycopg2    &gt; from postgis.psycopg import register    &gt; register(connection)    # With asyncpg    &gt; from postgis.asyncpg import register    &gt; await register(connection)Then you can pass python geometries instance to psycopg:    &gt; cursor.execute('INSERT INTO table (geom) VALUES (%s)', [Point(x=1, y=2, srid=4326)])And retrieve data as python geometries instances:    &gt; cursor.execute('SELECT geom FROM points LIMIT 1')    &gt; geom = cursor.fetchone()[0]    &gt; geom    &lt;Point POINT(1.0 2.0)&gt;## Example with psycopg2    &gt; import psycopg2    &gt; from postgis import LineString    &gt; from postgis.psycopg import register    &gt; db = psycopg2.connect(dbname=&quot;test&quot;)    &gt; register(db)    &gt; cursor.execute('CREATE TABLE IF NOT EXISTS mytable (&quot;geom&quot; geometry(LineString) NOT NULL)')    &gt; cursor.execute('INSERT INTO mytable (geom) VALUES (%s)', [LineString([(1, 2), (3, 4)], srid=4326)])    &gt; cursor.execute('SELECT geom FROM mytable LIMIT 1')    &gt; geom = cursor.fetchone()[0]    &gt; geom    &lt;LineString LINESTRING(1.0 2.0, 3.0 4.0)&gt;    &gt; geom[0]    &lt;Point POINT(1.0 2.0)&gt;    &gt; geom.coords    ((1.0, 2.0), (3.0, 4.0))    &gt; geom.geojson    {'coordinates': ((1.0, 2.0), (3.0, 4.0)), 'type': 'LineString'}    &gt; str(geom.geojson)    '{&quot;type&quot;: &quot;LineString&quot;, &quot;coordinates&quot;: [[1, 2], [3, 4]]}'## Example with asyncpg    from postgis.asyncpg import register    pool = await create_pool(**DB_CONFIG, loop=loop, max_size=100,                             init=register)</longdescription>
</pkgmetadata>