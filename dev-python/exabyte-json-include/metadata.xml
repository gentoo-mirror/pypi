<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>An extension for JSON to support file inclusion===============================================json-include is an extended way for JSON to support file inclusion, it has two parts:1. A syntax definition called **include syntax**.2. A Python implementation to parse and build JSON file that contains **include syntax**.Syntax------json-include supports an extended syntax called **include syntax** in JSON,formatted as:.. code-block:: json    {        &quot;...&quot;: &quot;include(&lt;json file name&gt;)&quot;    }or.. code-block:: json    {        &quot;&lt;any key&gt;&quot;: &quot;include_text(&lt;text file name&gt;)&quot;    }The include syntax means that this object (the whole ``{&quot;...&quot;: &quot;include(&lt;json file name&gt;&quot;)}``) in JSON is a reference to the JSON file named in ``&lt;json file name&gt;`` notation, and should be included into its place.The included JSON should always be an object (dict) rather than an array (list), to prevent implicit meaning and make sure we can get a clear view of the structure without looking into the included JSON files.In case multiple include statements are used, passing key inside `makeUnique` adds a random string to each included value at the corresponding key:.. code-block:: json    {        &quot;...&quot;: &quot;include(&lt;json file name&gt;)&quot;,        &quot;makeUnique&quot;: &quot;&lt;key&gt;&quot;    }In a normal JSON when we want to include another JSON on an attribute, it should be written as follows:.. code-block:: json    {        &quot;username&quot;: &quot;alice&quot;,        &quot;profile&quot;: {            &quot;...&quot;: &quot;include(profile_model.json)&quot;        }    }In this JSON a ``profile_model.json`` is included to present ``profile`` attribute,if the content of ``profile_model.json`` is like:.. code-block:: json    {        &quot;age&quot;: 18,        &quot;gender&quot;: &quot;female&quot;    }then what we mean by the include syntax is that, when this JSON is being usedas a normal JSON, it should be seen as:.. code-block:: json    {        &quot;username&quot;: &quot;alice&quot;,        &quot;profile&quot;: {            &quot;age&quot;: 18,            &quot;gender&quot;: &quot;female&quot;        }    }To ture JSON with include syntax into a normal JSON, a build process is needed,that's what the implementation does.Python Implementation---------------------Implementation could be of any language as long as it can understand the include syntaxand output as expected, this repo contains a Python implementation for use.Installation~~~~~~~~~~~~::    pip install https://github.com/exabyte-io/json_include/archive/master.zipUsage~~~~~.. code-block:: python    import json_include    json_include.build_json(ROOT_DIR, 'example.json')</longdescription>
</pkgmetadata>