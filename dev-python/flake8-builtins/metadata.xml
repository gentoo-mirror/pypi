<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. -*- coding: utf-8 -*-.. image:: https://github.com/gforcada/flake8-builtins/actions/workflows/testing.yml/badge.svg?branch=main   :target: https://github.com/gforcada/flake8-builtins/actions/workflows/testing.yml.. image:: https://coveralls.io/repos/gforcada/flake8-builtins/badge.svg?branch=main   :target: https://coveralls.io/github/gforcada/flake8-builtins?branch=mainFlake8 Builtins plugin======================Check for python builtins being used as variables or parameters.Imagine some code like this:.. code:: Python    def max_values(list, list2):        max = list[0]        for x in list:            if x &gt; 0:                max = x        all_values = list()        all_values.append(max)        max = list2[0]        for x in list2:            if x &gt; 0:                max = x        all_values.append(max)        return all_values    max_values([3, 4, 5, ], [5, 6, 7])The last statement is not returning ``[5, 7]`` as one would expect,instead is raising this exception::    Traceback (most recent call last):      File &quot;test.py&quot;, line 17, in &lt;module&gt;        max_values([3,4,5], [4,5,6])      File &quot;bla.py&quot;, line 6, in max_values        all_values = list()    TypeError: 'list' object is not callable**Why?** Because ``max_value`` function's first argument is ``list`` a Python builtin.Python allows to override them, but although could be useful in some really specific use cases,the general approach is to **not** do that as code then can suddenly break without a clear trace.Example-------Given the following code:.. code:: Python    def my_method(object, list, dict):        max = 5        min = 3        zip = (4, 3)The following warnings are shown (via flake8)::   test.py:1:15: A002 argument &quot;object&quot; is shadowing a python builtin   test.py:1:23: A002 argument &quot;list&quot; is shadowing a python builtin   test.py:1:29: A002 argument &quot;dict&quot; is shadowing a python builtin   test.py:2:5: A001 variable &quot;max&quot; is shadowing a python builtin   test.py:3:5: A001 variable &quot;min&quot; is shadowing a python builtin   test.py:4:5: A001 variable &quot;zip&quot; is shadowing a python builtinInstall-------Install with pip::    $ python -m pip install flake8-builtinsOptions-------One can use `--builtins-ignorelist` option, or configuration option,to ignore a custom list of builtins::    $ flake8 --builtins-ignorelist id,copyright *.pyRequirements------------- Python 3.8, 3.9, 3.10, 3.11, and pypy3- flake8Rules-----A001:  A variable is shadowing a Python builtin.A002:  An argument is shadowing a Python builtin.A003:  A class attribute is shadowing a Python builtin.A004:  An import statement is shadowing a Python builtin.License-------GPL 2.0</longdescription>
</pkgmetadata>