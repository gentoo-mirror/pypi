<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img alt=&quot;DecayLanguage logo&quot; src=&quot;https://raw.githubusercontent.com/scikit-hep/decaylanguage/master/images/DecayLanguage.png&quot;/&gt;# DecayLanguage: describe, manipulate and convert particle decays[![Scikit-HEP](https://scikit-hep.org/assets/images/Scikit--HEP-Project-blue.svg)](https://scikit-hep.org/)[![PyPI Package latest release](https://img.shields.io/pypi/v/decaylanguage.svg)](https://pypi.python.org/pypi/decaylanguage)[![Conda latest release](https://img.shields.io/conda/vn/conda-forge/decaylanguage.svg)](https://github.com/conda-forge/decaylanguage-feedstock)[![Supported versions](https://img.shields.io/pypi/pyversions/decaylanguage.svg)](https://pypi.python.org/pypi/decaylanguage)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3257423.svg)](https://doi.org/10.5281/zenodo.3257423)[![GitHub Actions Status: CI](https://github.com/scikit-hep/decaylanguage/workflows/CI/badge.svg)](https://github.com/scikit-hep/decaylanguage/actions)[![Code Coverage](https://codecov.io/gh/scikit-hep/decaylanguage/graph/badge.svg?branch=master)](https://codecov.io/gh/scikit-hep/decaylanguage?branch=master)[![Documentation Status](https://readthedocs.org/projects/decaylanguage/badge/?style=flat)](https://decaylanguage.readthedocs.io)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Binder demo](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/scikit-hep/decaylanguage/master?urlpath=lab/tree/notebooks/DecayLanguageDemo.ipynb)DecayLanguage implements a language to describe and convert particle decaysbetween digital representations, effectively making it possible to interoperateseveral fitting programs. Particular interest is given to programs dedicatedto amplitude analyses.DecayLanguage provides tools to parse so-called .dec decay files,and describe, manipulate and visualize decay chains.## InstallationJust run the following:```bashpip install decaylanguage```You can use a virtual environment through pipenv or with `--user` if you knowwhat those are. [Python3.7+](http://docs.python-guide.org/en/latest/starting/installation) supported(see version 0.12 for Python 2 &amp; 3.5 support, 0.14 for Python 3.6 support).&lt;details&gt;&lt;summary&gt;Dependencies: (click to expand)&lt;/summary&gt;&lt;p&gt;Required and compatibility dependencies will be automatically installed by pip.### Required dependencies:-   [particle](https://github.com/scikit-hep/particle): PDG particle data and identification codes-   [NumPy](https://scipy.org/install.html): The numerical library for Python-   [pandas](https://pandas.pydata.org/): Tabular data in Python-   [attrs](https://github.com/python-attrs/attrs): DataClasses for Python-   [plumbum](https://github.com/tomerfiliba/plumbum): Command line tools-   [lark](https://github.com/lark-parser/lark): A modern parsing library for Python-   [graphviz](https://gitlab.com/graphviz/graphviz/) to render (DOT language) graph    descriptions and visualizations of decay chains.### Python compatibility:-   [importlib_resources](http://importlib-resources.readthedocs.io/en/latest/) backport if using Python /&lt; 3.7&lt;/p&gt;&lt;/details&gt;## Getting startedThe [Binder demo](https://mybinder.org/v2/gh/scikit-hep/decaylanguage/master?urlpath=lab/tree/notebooks/DecayLanguageDemo.ipynb)is an excellent way to get started with `DecayLanguage`.This is a quick user guide. For a full API docs, go [here](https://decaylanguage.readthedocs.io)(note that it is presently work-in-progress).### What is DecayLanguage?`DecayLanguage` is a set of tools for building and transforming particledecays:1. It provides tools to parse so-called `.dec` decay files,and describe, manipulate and visualize the resulting decay chains.2. It implements a language to describe and convert particle decaysbetween digital representations, effectively making it possible to interoperateseveral fitting programs. Particular interest is given to programs dedicatedto amplitude analyses.### ParticlesParticles are a key component when dealing with decays.Refer to the [particle package](https://github.com/scikit-hep/particle)for how to deal with particles and Monte Carlo particle identification codes.### Parse decay filesDecay `.dec` files can be parsed simply with```pythonfrom decaylanguage import DecFileParserparser = DecFileParser('my-decay-file.dec')parser.parse()# Inspect what decays are definedparser.list_decay_mother_names()# Print decay modes, etc. ...```A copy of the master DECAY.DEC file used by the LHCb experiment is provided[here](https://github.com/scikit-hep/decaylanguage/tree/master/src/decaylanguage/data)for convenience.The `DecFileParser` class implements a series of methods giving access to allinformation stored in decay files: the decays themselves, particle name aliases,definitions of charge-conjugate particles, variable and Pythia-specificdefinitions, etc.It can be handy to parse from a multi-line string rather than a file:```pythons = &quot;&quot;&quot;Decay pi00.988228297   gamma   gamma                   PHSP;0.011738247   e+      e-      gamma           PI0_DALITZ;0.000033392   e+      e+      e-      e-      PHSP;0.000000065   e+      e-                      PHSP;Enddecay&quot;&quot;&quot;dfp = DecFileParser.from_string(s)dfp.parse()```#### Advanced usageThe list of `.dec` file decay models known to the package can be inspected via```pythonfrom decaylanguage.dec import known_decay_models```Say you have to deal with a decay file containing a new model not yet on the list above.Running the parser as usual will result in a `UnexpectedToken` exception.It is nevertheless easy to deal with this issue; no need to wait for a new release.It is just a matter of adding the model name to the list in `decaylanguage/data/decfile.lark`(or your private copy), see the line`MODEL_NAME.2 : &quot;BaryonPCR&quot;|&quot;BTO3PI_CP&quot;|&quot;BTOSLLALI&quot;|...`,and then proceed as usual apart from adding an extra line to call to `load_grammar`to specify the Lark grammar to use:```pythondfp = DecFileParser('my_decfile.dec')dfp.load_grammar('path/to/my_updated_decfile.lark')dfp.parse()...```This being said, please do submit a pull request to add new models,if you spot missing ones ...### Visualize decay filesThe class `DecayChainViewer` allows the visualization of parsed decay chains:```pythonfrom decaylanguage import DecayChainViewer# Build the (dictionary-like) D*+ decay chain representation setting the# D+ and D0 mesons to stable, to avoid too cluttered an imaged = dfp.build_decay_chains('D*+', stable_particles=('D+', 'D0'))DecayChainViewer(d)  # works in a notebook```![DecayChain D*](https://raw.githubusercontent.com/scikit-hep/decaylanguage/master/images/DecayChain_Dst_stable-D0-and-D+.png)The actual graph is available as```python# ...dcv = DecayChainViewer(d)dcv.graph```making all `graphviz.Digraph` class properties and methods available, such as```pythondcv.graph.render(filename='mygraph', format='pdf', view=True, cleanup=True)```In the same way, all `graphviz.Digraph` class attributes are settableupon instantiation of `DecayChainViewer`:```pythondcv = DecayChainViewer(chain, name='TEST', format='pdf')```### Universal representation of decay chainsA series of classes and methods have been designed to provide universal representationsof particle decay chains of any complexity, and to provide the abilityto convert between these representations.Specifically, class- and dictionary-based representations have been implemented.An example of a class-based representation of a decay chain is the following:```python&gt;&gt;&gt; from decaylanguage import DaughtersDict, DecayMode, DecayChain&gt;&gt;&gt;&gt;&gt;&gt; dm1 = DecayMode(0.0124, 'K_S0 pi0', model='PHSP')&gt;&gt;&gt; dm2 = DecayMode(0.692, 'pi+ pi-')&gt;&gt;&gt; dm3 = DecayMode(0.98823, 'gamma gamma')&gt;&gt;&gt; dc = DecayChain('D0', {'D0':dm1, 'K_S0':dm2, 'pi0':dm3})&gt;&gt;&gt; dc&lt;DecayChain: D0 -&gt; K_S0 pi0 (2 sub-decays), BF=0.0124&gt;```Decay chains can be visualised with the `DecayChainViewer` class making useof the dictionary representation `dc.to_dict()`, which is the simplerepresentation understood by `DecayChainViewer`, as see above:```pythonDecayChainViewer(dc.to_dict())```The fact that 2 representations of particle decay chains are provided ensuresthe following:1. Human-readable (class) and computer-efficient (dictionary) alternatives.2. Flexibility for parsing, manipulation and storage of decay chain information.### Decay modelingThe most common way to create a decay chain is to read in an [AmpGen]style syntax from a file or a string. You can use:```pythonfrom decaylanguage.modeling import AmplitudeChainlines, parameters, constants, states = AmplitudeChain.read_ampgen(text='''EventType D0 K- pi+ pi+ pi-D0[D]{K*(892)bar0{K-,pi+},rho(770)0{pi+,pi-}}                            0 1 0.1 0 1 0.1K(1460)bar-_mass  0 1460 1K(1460)bar-_width 0  250 1a(1)(1260)+::Spline::Min 0.18412a(1)(1260)+::Spline::Max 1.86869a(1)(1260)+::Spline::N 34''')```Here, `lines` will be a list of AmplitudeChain lines (pretty print supported in Jupyter notebooks),`parameters` will be a table of parameters (ranged parameters not yet supported),`constants` will be a table of constants,and `states` will be the list of known states (EventType).#### ConvertersYou can output to a format (currently only [GooFit] supported, feel freeto make a PR to add more). Use a subclass of DecayChain, in this case,GooFitChain. To use the [GooFit] output, type from the shell:```bashpython -m decaylanguage -G goofit myinput.opts```## ContributorsWe hereby acknowledge the contributors that made this project possible ([emoji key](https://allcontributors.org/docs/en/emoji-key)):&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;&lt;!-- prettier-ignore-start --&gt;&lt;!-- markdownlint-disable --&gt;&lt;table&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://cern.ch/eduardo.rodrigues&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5013581?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Eduardo Rodrigues&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eduardo Rodrigues&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-eduardo-rodrigues&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt; &lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=eduardo-rodrigues&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=eduardo-rodrigues&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://iscinumpy.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4616906?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Henry Schreiner&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Henry Schreiner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-henryiii&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt; &lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=henryiii&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=henryiii&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/yipengsun&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33738176?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Yipeng Sun&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yipeng Sun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=yipengsun&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/chrisburr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5220533?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Chris Burr&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chris Burr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=chrisburr&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.lieret.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13602468?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Kilian Lieret&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kilian Lieret&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=klieret&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sognetic&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10749132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Moritz Bauer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Moritz Bauer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=sognetic&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/FlorianReiss&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44642966?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;FlorianReiss&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;FlorianReiss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=FlorianReiss&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=FlorianReiss&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://gitlab.cern.ch/users/admorris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15155249?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Adam Morris&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Adam Morris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/scikit-hep/decaylanguage/commits?author=admorris&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;!-- markdownlint-restore --&gt;&lt;!-- prettier-ignore-end --&gt;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification.## AcknowledgementsThe UK Science and Technology Facilities Council (STFC) and the University of Liverpoolprovide funding for Eduardo Rodrigues (2020-) to work on this project part-time.Support for this work was provided by the National Science Foundationcooperative agreement OAC-1450377 (DIANA/HEP) in 2016-2019and has been provided by OAC-1836650 (IRIS-HEP) since 2019.Any opinions, findings, conclusions or recommendations expressed in this materialare those of the authors and do not necessarily reflect the views of the National Science Foundation.[AmpGen]: https://gitlab.cern.ch/lhcb/Gauss/tree/LHCBGAUSS-1058.AmpGenDev/Gen/AmpGen[GooFit]: https://GooFit.github.io</longdescription>
</pkgmetadata>