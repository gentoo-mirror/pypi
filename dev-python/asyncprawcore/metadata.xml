<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. _main_page:asyncprawcore=============.. image:: https://img.shields.io/pypi/v/asyncprawcore.svg    :alt: Latest asyncprawcore Version    :target: https://pypi.python.org/pypi/asyncprawcore.. image:: https://img.shields.io/pypi/pyversions/asyncprawcore    :alt: Supported Python Versions    :target: https://pypi.python.org/pypi/asyncprawcore.. image:: https://img.shields.io/pypi/dm/asyncprawcore    :alt: PyPI - Downloads - Monthly    :target: https://pypi.python.org/pypi/asyncprawcore.. image:: https://github.com/praw-dev/asyncprawcore/actions/workflows/ci.yml/badge.svg?event=push    :alt: GitHub Actions Status    :target: https://github.com/praw-dev/asyncprawcore/actions/workflows/ci.yml.. image:: https://coveralls.io/repos/github/praw-dev/asyncprawcore/badge.svg    :alt: Coveralls Coverage    :target: https://coveralls.io/github/praw-dev/asyncprawcore.. image:: https://api.securityscorecards.dev/projects/github.com/praw-dev/asyncprawcore/badge    :alt: OpenSSF Scorecard    :target: https://api.securityscorecards.dev/projects/github.com/praw-dev/asyncprawcore.. image:: https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg    :alt: Contributor Covenant    :target: https://github.com/praw-dev/.github/blob/main/CODE_OF_CONDUCT.md.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white    :alt: pre-commit    :target: https://github.com/pre-commit/pre-commit.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :alt: Black code style    :target: https://github.com/psf/blackasyncprawcore is a low-level communication layer used by Async PRAW 7+.Installation------------Install asyncprawcore using ``pip`` via:.. code-block:: console    pip install asyncprawcoreExecution Example-----------------The following example demonstrates how to use asyncprawcore to obtain the list oftrophies for a given user using the script-app type. This example assumes you have theenvironment variables ``PRAWCORE_CLIENT_ID`` and ``PRAWCORE_CLIENT_SECRET`` set to theappropriate values for your application... code-block:: python    import os    import pprint    import asyncio    import asyncprawcore    async def main():        authenticator = asyncprawcore.TrustedAuthenticator(            asyncprawcore.Requestor(&quot;YOUR_VALID_USER_AGENT&quot;),            os.environ[&quot;PRAWCORE_CLIENT_ID&quot;],            os.environ[&quot;PRAWCORE_CLIENT_SECRET&quot;],        )        authorizer = asyncprawcore.ReadOnlyAuthorizer(authenticator)        await authorizer.refresh()        async with asyncprawcore.session(authorizer) as session:            pprint.pprint(await session.request(&quot;GET&quot;, &quot;/api/v1/user/bboe/trophies&quot;))    if __name__ == &quot;__main__&quot;:        asyncio.run(main())Save the above as ``trophies.py`` and then execute via:.. code-block:: console    python trophies.pyAdditional examples can be found at:https://github.com/praw-dev/asyncprawcore/tree/main/examplesDepending on asyncprawcore--------------------------asyncprawcore follows `semantic versioning &lt;https://semver.org/&gt;`_ with the exceptionthat deprecations will not be preceded by a minor release. In essence, expect only majorversions to introduce breaking changes to asyncprawcore's public interface. As a result,if you depend on asyncprawcore then it is a good idea to specify not only the minimumversion of asyncprawcore your package requires, but to also limit the major version.Below are two examples of how you may want to specify your asyncprawcore dependency:setup.py~~~~~~~~.. code-block:: python    setup(..., install_requires=[&quot;asyncprawcore &gt;=0.1, &lt;1&quot;], ...)requirements.txt~~~~~~~~~~~~~~~~.. code-block:: text    asyncprawcore &gt;=1.5.1, &lt;2</longdescription>
</pkgmetadata>