<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://explosion.ai&quot;&gt;&lt;img src=&quot;https://explosion.ai/assets/img/logo.svg&quot; width=&quot;125&quot; height=&quot;125&quot; align=&quot;right&quot; /&gt;&lt;/a&gt;# spacy-streamlit: spaCy building blocks for Streamlit appsThis package contains utilities for visualizing [spaCy](https://spacy.io) modelsand building interactive spaCy-powered apps with[Streamlit](https://streamlit.io). It includes various building blocks you canuse in your own Streamlit app, like visualizers for **syntactic dependencies**,**named entities**, **text classification**, **semantic similarity** via wordvectors, token attributes, and more.[![Current Release Version](https://img.shields.io/github/release/explosion/spacy-streamlit.svg?style=flat-square&amp;logo=github&amp;include_prereleases)](https://github.com/explosion/spacy-streamlit/releases)[![pypi Version](https://img.shields.io/pypi/v/spacy-streamlit.svg?style=flat-square&amp;logo=pypi&amp;logoColor=white)](https://pypi.org/project/spacy-streamlit/)&lt;img width=&quot;50%&quot; align=&quot;right&quot; src=&quot;https://user-images.githubusercontent.com/13643239/85388081-f2da8700-b545-11ea-9bd4-e303d3c5763c.png&quot;&gt;## ðŸš€ QuickstartYou can install `spacy-streamlit` from pip:```bashpip install spacy-streamlit```The package includes **building blocks** that call into Streamlit and set up allthe required elements for you. You can either use the individual componentsdirectly and combine them with other elements in your app, or call the`visualize` function to embed the whole visualizer.Download the English model from spaCy to get started.```bashpython -m spacy download en_core_web_sm```Then put the following example code in a file.```python# streamlit_app.pyimport spacy_streamlitmodels = [&quot;en_core_web_sm&quot;, &quot;en_core_web_md&quot;]default_text = &quot;Sundar Pichai is the CEO of Google.&quot;spacy_streamlit.visualize(models, default_text)```You can then run your app with `streamlit run streamlit_app.py`. The app shouldpop up in your web browser. ðŸ˜€#### ðŸ“¦ Example: [`01_out-of-the-box.py`](examples/01_out-of-the-box.py)Use the embedded visualizer with custom settings out-of-the-box.```bashstreamlit run https://raw.githubusercontent.com/explosion/spacy-streamlit/master/examples/01_out-of-the-box.py```#### ðŸ‘‘ Example: [`02_custom.py`](examples/02_custom.py)Use individual components in your existing app.```bashstreamlit run https://raw.githubusercontent.com/explosion/spacy-streamlit/master/examples/02_custom.py```## ðŸŽ› API### Visualizer componentsThese functions can be used in your Streamlit app. They call into `streamlit`under the hood and set up the required elements.#### &lt;kbd&gt;function&lt;/kbd&gt; `visualize`Embed the full visualizer with selected components.```pythonimport spacy_streamlitmodels = [&quot;en_core_web_sm&quot;, &quot;/path/to/model&quot;]default_text = &quot;Sundar Pichai is the CEO of Google.&quot;visualizers = [&quot;ner&quot;, &quot;textcat&quot;]spacy_streamlit.visualize(models, default_text, visualizers)```| Argument                 | Type                       | Description                                                                                                                                                                                                                                                 || ------------------------ | -------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- || `models`                 | List[str] / Dict[str, str] | Names of loadable spaCy models (paths or package names). The models become selectable via a dropdown. Can either be a list of names or the names mapped to descriptions to display in the dropdown.                                                         || `default_text`           | str                        | Default text to analyze on load. Defaults to `&quot;&quot;`.                                                                                                                                                                                                          || `default_model`          | Optional[str]              | Optional name of default model. If not set, the first model in the list of `models` is used.                                                                                                                                                                || `visualizers`            | List[str]                  | Names of visualizers to show. Defaults to `[&quot;parser&quot;, &quot;ner&quot;, &quot;textcat&quot;, &quot;similarity&quot;, &quot;tokens&quot;]`.                                                                                                                                                           || `ner_labels`             | Optional[List[str]]        | NER labels to include. If not set, all labels present in the `&quot;ner&quot;` pipeline component will be used.                                                                                                                                                       || `ner_attrs`              | List[str]                  | Span attributes shown in table of named entities. See [`visualizer.py`](spacy_streamlit/visualizer.py) for defaults.                                                                                                                                        || `token_attrs`            | List[str]                  | Token attributes to show in token visualizer. See [`visualizer.py`](spacy_streamlit/visualizer.py) for defaults.                                                                                                                                            || `similarity_texts`       | Tuple[str, str]            | The default texts to compare in the similarity visualizer. Defaults to `(&quot;apple&quot;, &quot;orange&quot;)`.                                                                                                                                                               || `show_json_doc`          | bool                       | Show button to toggle JSON representation of the `Doc`. Defaults to `True`.                                                                                                                                                                                 || `show_meta`              | bool                       | Show button to toggle `meta.json` of the current pipeline. Defaults to `True`.                                                                                                                                                                              || `show_config`            | bool                       | Show button to toggle `config.cfg` of the current pipeline. Defaults to `True`.                                                                                                                                                                             || `show_visualizer_select` | bool                       | Show sidebar dropdown to select visualizers to display (based on enabled visualizers). Defaults to `False`.                                                                                                                                                 || `sidebar_title`          | Optional[str]              | Title shown in the sidebar. Defaults to `None`.                                                                                                                                                                                                             || `sidebar_description`    | Optional[str]              | Description shown in the sidebar. Accepts Markdown-formatted text.                                                                                                                                                                                          || `show_logo`              | bool                       | Show the spaCy logo in the sidebar. Defaults to `True`.                                                                                                                                                                                                     || `color`                  | Optional[str]              | Experimental: Primary color to use for some of the main UI elements (`None` to disable hack). Defaults to `&quot;#09A3D5&quot;`.                                                                                                                                      || `get_default_text`       | Callable[[Language], str]  | Optional callable that takes the currently loaded `nlp` object and returns the default text. Can be used to provide language-specific default texts. If the function returns `None`, the value of `default_text` is used, if available. Defaults to `None`. |#### &lt;kbd&gt;function&lt;/kbd&gt; `visualize_parser`Visualize the dependency parse and part-of-speech tags using spaCy's[`displacy` visualizer](https://spacy.io/usage/visualizers).```pythonimport spacyfrom spacy_streamlit import visualize_parsernlp = spacy.load(&quot;en_core_web_sm&quot;)doc = nlp(&quot;This is a text&quot;)visualize_parser(doc)```| Argument           | Type           | Description                                                                                                                                              || ------------------ | -------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- || `doc`              | `Doc`          | The spaCy `Doc` object to visualize.                                                                                                                     || _keyword-only_     |                |                                                                                                                                                          || `title`            | Optional[str]  | Title of the visualizer block.                                                                                                                           || `key`              | Optional[str]  | Key used for the streamlit component for selecting labels.                                                                                               || `manual`           | bool           | Flag signifying whether the doc argument is a Doc object or a List of Dicts containing parse information.                                                || `displacy_optoins` | Optional[Dict] | Dictionary of options to be passed to the displacy render method for generating the HTML to be rendered. See: https://spacy.io/api/top-level#options-dep |#### &lt;kbd&gt;function&lt;/kbd&gt; `visualize_ner`Visualize the named entities in a `Doc` using spaCy's[`displacy` visualizer](https://spacy.io/usage/visualizers).```pythonimport spacyfrom spacy_streamlit import visualize_nernlp = spacy.load(&quot;en_core_web_sm&quot;)doc = nlp(&quot;Sundar Pichai is the CEO of Google.&quot;)visualize_ner(doc, labels=nlp.get_pipe(&quot;ner&quot;).labels)```| Argument           | Type           | Description                                                                                                                                                                                                                                                 || ------------------ | -------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- || `doc`              | `Doc`          | The spaCy `Doc` object to visualize.                                                                                                                                                                                                                        || _keyword-only_     |                |                                                                                                                                                                                                                                                             || `labels`           | Sequence[str]  | The labels to show in the labels dropdown.                                                                                                                                                                                                                  || `attrs`            | List[str]      | The span attributes to show in entity table.                                                                                                                                                                                                                || `show_table`       | bool           | Whether to show a table of entities and their attributes. Defaults to `True`.                                                                                                                                                                               || `title`            | Optional[str]  | Title of the visualizer block.                                                                                                                                                                                                                              || `colors`           | Dict[str,str]  | Dictionary of colors for the entity spans to visualize, with keys as labels and corresponding colors as the values. This argument will be deprecated soon. In future the colors arg need to be passed in the `displacy_options` arg with the key &quot;colors&quot;.) || `key`              | Optional[str]  | Key used for the streamlit component for selecting labels.                                                                                                                                                                                                  || `manual`           | bool           | Flag signifying whether the doc argument is a Doc object or a List of Dicts containing entity span                                                                                                                                                          || information.       || `displacy_options` | Optional[Dict] | Dictionary of options to be passed to the displacy render method for generating the HTML to be rendered. See https://spacy.io/api/top-level#displacy_options-ent.                                                                                           |#### &lt;kbd&gt;function&lt;/kbd&gt; `visualize_spans`Visualize spans in a `Doc` using spaCy's[`displacy` visualizer](https://spacy.io/usage/visualizers).```pythonimport spacyfrom spacy_streamlit import visualize_spansnlp = spacy.load(&quot;en_core_web_sm&quot;)doc = nlp(&quot;Sundar Pichai is the CEO of Google.&quot;)span = doc[4:7]  # CEO of Googlespan.label_ = &quot;CEO&quot;doc.spans[&quot;job_role&quot;] = [span]visualize_spans(doc, spans_key=&quot;job_role&quot;, displacy_options={&quot;colors&quot;: {&quot;CEO&quot;: &quot;#09a3d5&quot;}})```| Argument           | Type           | Description                                                                                                                                                        || ------------------ | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ || `doc`              | `Doc`          | The spaCy `Doc` object to visualize.                                                                                                                               || _keyword-only_     |                |                                                                                                                                                                    || `spans_key`        | Sequence[str]  | Which spans key to render spans from. Default is &quot;sc&quot;.                                                                                                             || `attrs`            | List[str]      | The attributes on the entity Span to be labeled. Attributes are displayed only when the `show_table` argument is True.                                             || `show_table`       | bool           | Whether to show a table of spans and their attributes. Defaults to `True`.                                                                                         || `title`            | Optional[str]  | Title of the visualizer block.                                                                                                                                     || `manual`           | bool           | Flag signifying whether the doc argument is a Doc object or a List of Dicts containing entity span information.                                                    || `displacy_options` | Optional[Dict] | Dictionary of options to be passed to the displacy render method for generating the HTML to be rendered. See https://spacy.io/api/top-level#displacy_options-span. |#### &lt;kbd&gt;function&lt;/kbd&gt; `visualize_textcat`Visualize text categories predicted by a trained text classifier.```pythonimport spacyfrom spacy_streamlit import visualize_textcatnlp = spacy.load(&quot;./my_textcat_model&quot;)doc = nlp(&quot;This is a text about a topic&quot;)visualize_textcat(doc)```| Argument       | Type          | Description                          || -------------- | ------------- | ------------------------------------ || `doc`          | `Doc`         | The spaCy `Doc` object to visualize. || _keyword-only_ |               |                                      || `title`        | Optional[str] | Title of the visualizer block.       |#### `visualize_similarity`Visualize semantic similarity using the model's word vectors. Will show awarning if no vectors are present in the model.```pythonimport spacyfrom spacy_streamlit import visualize_similaritynlp = spacy.load(&quot;en_core_web_lg&quot;)visualize_similarity(nlp, (&quot;pizza&quot;, &quot;fries&quot;))```| Argument        | Type            | Description                                                                                                                                          || --------------- | --------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- || `nlp`           | `Language`      | The loaded `nlp` object with vectors.                                                                                                                || `default_texts` | Tuple[str, str] | The default texts to compare on load. Defaults to `(&quot;apple&quot;, &quot;orange&quot;)`.                                                                             || _keyword-only_  |                 |                                                                                                                                                      || `threshold`     | float           | Threshold for what's considered &quot;similar&quot;. If the similarity score is greater than the threshold, the result is shown as similar. Defaults to `0.5`. || `title`         | Optional[str]   | Title of the visualizer block.                                                                                                                       |#### &lt;kbd&gt;function&lt;/kbd&gt; `visualize_tokens`Visualize the tokens in a `Doc` and their attributes.```pythonimport spacyfrom spacy_streamlit import visualize_tokensnlp = spacy.load(&quot;en_core_web_sm&quot;)doc = nlp(&quot;This is a text&quot;)visualize_tokens(doc, attrs=[&quot;text&quot;, &quot;pos_&quot;, &quot;dep_&quot;, &quot;ent_type_&quot;])```| Argument       | Type          | Description                                                                                              || -------------- | ------------- | -------------------------------------------------------------------------------------------------------- || `doc`          | `Doc`         | The spaCy `Doc` object to visualize.                                                                     || _keyword-only_ |               |                                                                                                          || `attrs`        | List[str]     | The names of token attributes to use. See [`visualizer.py`](spacy_streamlit/visualizer.py) for defaults. || `title`        | Optional[str] | Title of the visualizer block.                                                                           |### Cached helpersThese helpers attempt to cache loaded models and created `Doc` objects.#### &lt;kbd&gt;function&lt;/kbd&gt; `process_text`Process a text with a model of a given name and create a `Doc` object. Callsinto the `load_model` helper to load the model.```pythonimport streamlit as stfrom spacy_streamlit import process_textspacy_model = st.sidebar.selectbox(&quot;Model name&quot;, [&quot;en_core_web_sm&quot;, &quot;en_core_web_md&quot;])text = st.text_area(&quot;Text to analyze&quot;, &quot;This is a text&quot;)doc = process_text(spacy_model, text)```| Argument     | Type  | Description                                             || ------------ | ----- | ------------------------------------------------------- || `model_name` | str   | Loadable spaCy model name. Can be path or package name. || `text`       | str   | The text to process.                                    || **RETURNS**  | `Doc` | The processed document.                                 |#### &lt;kbd&gt;function&lt;/kbd&gt; `load_model`Load a spaCy model from a path or installed package and return a loaded `nlp`object.```pythonimport streamlit as stfrom spacy_streamlit import load_modelspacy_model = st.sidebar.selectbox(&quot;Model name&quot;, [&quot;en_core_web_sm&quot;, &quot;en_core_web_md&quot;])nlp = load_model(spacy_model)```| Argument    | Type       | Description                                             || ----------- | ---------- | ------------------------------------------------------- || `name`      | str        | Loadable spaCy model name. Can be path or package name. || **RETURNS** | `Language` | The loaded `nlp` object.                                |</longdescription>
</pkgmetadata>