<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Case Insensitive DictTyped Python Case Insensitive Dictionary[![Publish](https://github.com/DeveloperRSquared/case-insensitive-dict/actions/workflows/publish.yml/badge.svg)](https://github.com/DeveloperRSquared/case-insensitive-dict/actions/workflows/publish.yml)[![Python 3.7+](https://img.shields.io/badge/python-3.7+-brightgreen.svg)](#case-insensitive-dict)[![PyPI - License](https://img.shields.io/pypi/l/case-insensitive-dictionary.svg)](LICENSE)[![PyPI - Version](https://img.shields.io/pypi/v/case-insensitive-dictionary.svg)](https://pypi.org/project/case-insensitive-dictionary)[![CodeQL](https://github.com/DeveloperRSquared/case-insensitive-dict/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/DeveloperRSquared/case-insensitive-dict/actions/workflows/codeql-analysis.yml)[![codecov](https://codecov.io/gh/DeveloperRSquared/case-insensitive-dict/branch/main/graph/badge.svg?token=45JCHX8KT9)](https://codecov.io/gh/DeveloperRSquared/case-insensitive-dict)[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/DeveloperRSquared/case-insensitive-dict/main.svg)](https://results.pre-commit.ci/latest/github/DeveloperRSquared/case-insensitive-dict/main)[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336)](https://pycqa.github.io/isort/)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)## InstallInstall and update using [pip](https://pypi.org/project/case-insensitive-dictionary/).```sh$ pip install -U case-insensitive-dictionary```## API Reference| Method                    | Description                                                                                                                                         || :------------------------ | :-------------------------------------------------------------------------------------------------------------------------------------------------- || clear()                   | Removes all elements from the dictionary.                                                                                                           || copy()                    | Returns a copy of the dictionary.                                                                                                                   || get(key, default)         | Returns the value (case-insensitively), of the item specified with the key.&lt;br&gt;Falls back to the default value if the specified key does not exist. || fromkeys(iterable, value) | Returns a dictionary with the specified keys and the specified value.                                                                               || keys()                    | Returns the dictionary's keys.                                                                                                                      || values()                  | Returns the dictionary's values.                                                                                                                    || items()                   | Returns the key-value pairs.                                                                                                                        || pop(key)                  | Remove the specified item (case-insensitively).&lt;br&gt;The value of the removed item is the return value.                                               || popitem()                 | Remove the last item that was inserted into the dictionary.&lt;br&gt;For Python version &lt;3.7, popitem() removes a random item.                            |## ExampleCaseInsensitiveDict:```py&gt;&gt;&gt; from typing import Union&gt;&gt;&gt; from case_insensitive_dict import CaseInsensitiveDict&gt;&gt;&gt; case_insensitive_dict = CaseInsensitiveDict[Union[str, int], str](data={&quot;Aa&quot;: &quot;b&quot;, 1: &quot;c&quot;})&gt;&gt;&gt; case_insensitive_dict[&quot;aa&quot;]'b'&gt;&gt;&gt; case_insensitive_dict[1]'c'```which also supports json encoding/decoding:```py&gt;&gt;&gt; import json&gt;&gt;&gt; from case_insensitive_dict import CaseInsensitiveDict, CaseInsensitiveDictJSONEncoder, case_insensitive_dict_json_decoder&gt;&gt;&gt; case_insensitive_dict = CaseInsensitiveDict[str, str](data={&quot;Aa&quot;: &quot;b&quot;})&gt;&gt;&gt; json_string = json.dumps(obj=case_insensitive_dict, cls=CaseInsensitiveDictJSONEncoder)&gt;&gt;&gt; json_string'{&quot;Aa&quot;: &quot;b&quot;}'&gt;&gt;&gt; case_insensitive_dict = json.loads(s=json_string, object_hook=case_insensitive_dict_json_decoder)&gt;&gt;&gt; case_insensitive_dictCaseInsensitiveDict({'Aa': 'b'})```## ContributingContributions are welcome via pull requests.### First time setup```sh$ git clone git@github.com:DeveloperRSquared/case-insensitive-dict.git$ cd case-insensitive-dict$ poetry install$ poetry shell```Tools including black, mypy etc. will run automatically if you install [pre-commit](https://pre-commit.com) using the instructions below```sh$ pre-commit install$ pre-commit run --all-files```### Running tests```sh$ poetry run pytest```## Links- Source Code: &lt;https://github.com/DeveloperRSquared/case-insensitive-dict/&gt;- PyPI Releases: &lt;https://pypi.org/project/case-insensitive-dictionary/&gt;- Issue Tracker: &lt;https://github.com/DeveloperRSquared/case-insensitive-dict/issues/&gt;</longdescription>
</pkgmetadata>