<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># projen-simple[![License](https://img.shields.io/badge/License-Apache%202.0-green)](https://opensource.org/licenses/Apache-2.0) ![Release](https://github.com/HsiehShuJeng/projen-simple/workflows/Release/badge.svg) [![npm downloads](https://img.shields.io/npm/dt/projen-statemachine-example?label=npm%20downloads&amp;style=plastic)](https://img.shields.io/npm/dt/projen-statemachine-example?label=npm%20downloads&amp;style=plastic) [![pypi downloads](https://img.shields.io/pypi/dm/scotthsieh-projen-statemachine?label=pypi%20downloads&amp;style=plastic)](https://img.shields.io/pypi/dm/scotthsieh-projen-statemachine?label=pypi%20downloads&amp;style=plastic) [![NuGet downloads](https://img.shields.io/nuget/dt/Projen.Statemachine?label=NuGet%20downloads&amp;style=plastic)](https://img.shields.io/nuget/dt/Projen.Statemachine?label=NuGet%20downloads&amp;style=plastic) [![repo languages](https://img.shields.io/github/languages/count/HsiehShuJeng/projen-simple?label=repo%20languages&amp;style=plastic)](https://img.shields.io/github/languages/count/HsiehShuJeng/projen-simple?label=repo%20languages&amp;style=plastic)| npm (JS/TS) | PyPI (Python) | Maven (Java) | Go | NuGet || --- | --- | --- | --- | --- || [Link](https://www.npmjs.com/package/projen-simple) | [Link](https://pypi.org/project/scotthsieh_projen_statemachine/) | [Link](https://search.maven.org/artifact/io.github.hsiehshujeng/projen-statemachine) | [Link](https://github.com/HsiehShuJeng/projen-statemachine-go) | [Link](https://www.nuget.org/packages/Projen.Statemachine/) |Build a custom construct based on an example in an AWS Blog post and use [projen](https://github.com/projen/projen) to publish to 5 language repositories, i.e., npm, PyPI, Central Maven, NuGet, and Go.# ArchitectureThis library constrcution is referred to the first example in this AWS blog, [*Introducing Amazon API Gateway service integration for AWS Step Functions*](https://aws.amazon.com/tw/blogs/compute/introducing-amazon-api-gateway-service-integration-for-aws-step-functions/) written by Benjanmin Smith. After you deploy the stack with whatever programming language you like, i.e., Typescript, Python, Java, or C sharp, you'll get a view similar to the following diagram:![image](https://raw.githubusercontent.com/HsiehShuJeng/projen-simple/main/images/designer_view.png)# How to utilize polyglot packages and deploy## TypeScript```bash$ cdk --init language typescript$ yarn add projen-statemachine-example``````pythonimport { StateMachineApiGatewayExample } from 'projen-statemachine-example'; export class TypescriptStack extends cdk.Stack { constructor(scope: cdk.Construct, id: string, props?: cdk.StackProps) {     super(scope, id, props);     const stageName = 'default';     const partPath = 'pets';     const exampleConstruct = new StateMachineApiGatewayExample(this, 'KerKer', {         stageName: stageName, partPath: partPath});     new cdk.CfnOutput(this, 'OStateMachine', {         value: exampleConstruct.stateMachine.stateMachineArn});     new cdk.CfnOutput(this, 'OExecutionOutput', {         value: exampleConstruct.executionInput, description: 'Sample input to StartExecution.'}); }```## Python```bash$ cdk init --language python$ cat &lt;&lt;EOL &gt; requirements.txtaws-cdk.corescotthsieh_projen_statemachineEOL$ python -m pip install -r requirements.txt``````pythonfrom aws_cdk import core as cdkfrom scotthsieh_projen_statemachine import StateMachineApiGatewayExampleclass PythonStack(cdk.Stack):    def __init__(self, scope: cdk.Construct, construct_id: str, **kwargs) -&gt; None:         super().__init__(scope, construct_id, **kwargs)         stage_name = 'default'         part_path = 'pets'         example_construct = StateMachineApiGatewayExample(             self, 'PythonStatemachne', stage_name=stage_name, part_path=part_path,         )         cdk.CfnOutput(self, &quot;OStateMachine&quot;,             value=example_construct.state_machine.state_machine_arn         )         cdk.CfnOutput(self, &quot;OExecutionOutput&quot;, value=example_construct.execution_input, description=&quot;Sample input to StartExecution.&quot;)```## Java```bash$ cdk init --language java$ mvn package``````xml..&lt;properties&gt;     &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;     &lt;custom.construct.version&gt;0.1.20&lt;/custom.construct.version&gt;     &lt;cdk.version&gt;1.104.0&lt;/cdk.version&gt;     &lt;junit.version&gt;5.7.1&lt;/junit.version&gt; &lt;/properties&gt; . . &lt;dependencies&gt;     &lt;!-- AWS Cloud Development Kit --&gt;     .     .     .     &lt;dependency&gt;         &lt;groupId&gt;io.github.hsiehshujeng&lt;/groupId&gt;         &lt;artifactId&gt;projen-statemachine&lt;/artifactId&gt;         &lt;version&gt;${custom.construct.version}&lt;/version&gt;     &lt;/dependency&gt;     .     .     . &lt;/dependencies&gt;``````javapackage com.myorg;import software.amazon.awscdk.core.Construct;import software.amazon.awscdk.core.CfnOutput;import software.amazon.awscdk.core.CfnOutputProps;import software.amazon.awscdk.core.Stack;import software.amazon.awscdk.core.StackProps;import io.github.hsiehshujeng.projen.statemachine.*;public class JavaStack extends Stack {    public JavaStack(final Construct scope, final String id) {        this(scope, id, null);     }     public JavaStack(final Construct scope, final String id, final StackProps props) {         super(scope, id, props);         String stageName = &quot;default&quot;;         String partPath = &quot;pets&quot;;         StateMachineApiGatewayExample exampleConstruct = new StateMachineApiGatewayExample(this, &quot;KerKer&quot;,             StateMachineApiGatewayExampleProps.builder()                 .stageName(stageName)                 .partPath(partPath)                 .build());         new CfnOutput(this, &quot;OStateMachine&quot;,             CfnOutputProps.builder()                 .value(exampleConstruct.getStateMachine().getStateMachineArn())                 .build());         new CfnOutput(this, &quot;OExecutionOutput&quot;, CfnOutputProps.builder()             .value(exampleConstruct.getExecutionInput())             .description(&quot;Sample input to StartExecution.&quot;)             .build());     } }```## C#```bash$ cdk init --language csharp$ dotnet add src/Csharp package Projen.Statemachine --version 0.1.21``````csusing Amazon.CDK;using ScottHsieh.Examples;namespace Csharp{    public class CsharpStack : Stack    {        internal CsharpStack(Construct scope, string id, IStackProps props = null) : base(scope, id, props)        {            string stageName = &quot;default&quot;;            string partPath = &quot;pets&quot;;            var exampleConstruct = new StateMachineApiGatewayExample(this, &quot;KerKer&quot;, new StateMachineApiGatewayExampleProps            {                StageName = stageName,                PartPath = partPath            });            new CfnOutput(this, &quot;OStateMachine&quot;, new CfnOutputProps            {                Value = exampleConstruct.StateMachine.StateMachineArn            });            new CfnOutput(this, &quot;OExecutionOutput&quot;, new CfnOutputProps            {                Value = exampleConstruct.ExecutionInput,                Description = &quot;Sample input to StartExecution.&quot;            });        }    } }```# References* [jsii reference](https://github.com/cdklabs/jsii-release)* [aws-cdk-go](https://github.com/aws/aws-cdk-go)* [jsii](https://github.com/aws/jsii)</longdescription>
</pkgmetadata>