<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># brundeckrunA(nother) fork of the client library written in Python to interact with the Rundeck API, the majority ofwhich was created by Mark LaPerriere.The fork exists mostly because the environment Lambda Vector uses it in requires it to be hosted onpypi, so updates must be pushed quickly. In addition, the requirement to run tests against a liveRundeck is a no-no.# Rundeck (API) version compatibility:*Some* calls are under active use/development, primarily: - Job imports: API v1+ - Project archive imports: API v14+All other calls _should_ work correctly as long as they are not deprecated or if Rundeck fail tocorrectly implement backwards compatibility.# Python versionTarget python version: 2.7Should work (but not tested aagainst): 3# Installation  pip install brundeckrun## Use    &gt;&gt;&gt; from rundeck.client import Rundeck    &gt;&gt;&gt; rd = Rundeck('rundeck.server.com', api_token='SECRET_API_TOKEN')    &gt;&gt;&gt; rd.list_projects()    [{        'description': None,        'name': 'TestProject',        'resources': {'providerURL': 'http://localhost:8000/resources.xml'},    }]    &gt;&gt;&gt; rd.list_jobs('TestProject')    [{'description': 'Hello World!',      'group': None,      'id': 'a6e1e0f7-ad32-4b93-ba2c-9387be06a146',      'name': 'HelloWorld',      'project': 'TestProject'}]    &gt;&gt;&gt; rd.run_job('a6e1e0f7-ad32-4b93-ba2c-9387be06a146', argString={'from':'brundeckrun'})    {'argstring': '-from brundeckrun',     'date-started': datetime.datetime(2013, 7, 11, 18, 4, 24),     'description': 'Plugin[localexec, nodeStep: true]',     'href': 'http://rundeck.server.com/execution/follow/123',     'id': '123',     'job': None,     'status': 'running',     'user': 'brundeckrun'}# Tests## Unit testsUnit tests are performed via tox.To install tox and then run the tests:    pip install tox    tox## Integration tests*Note:* currently the integrations are not up-to-date and are not under continous integration. Soon though...Running the tests requires a running Rundeck server (the Rundeck standalone jar works well) and anAPI token for said Rundeck server.You'll have to at least set the API token environment variable of ``RUNDECK_API_TOKEN`` but thereare other environment variables to be aware of. The list is below and can be found at the head ofthe tests/\_\_init\_\_.py file. They should be fairly self-explanatory (OK, RUNDECK_PROTOCOL mightnot be self-explanatory... use either 'http' or 'https' there)... code-block:: bash    RUNDECK_API_TOKEN    RUNDECK_SERVER    RUNDECK_PORT    RUNDECK_PROTOCOLNext clone the repo... code-block:: bash    git clone https://github.com/pmatias/brundeckrun.. note:: activate your `virtualenv &lt;http://www.virtualenv.org/en/latest/&gt;`_Then install the requirements and dev requirements... code-block:: bash    pip install -r requirements.txt    pip install -r requirements_dev.txtLastly, execute nose tests... code-block:: bash    nosetests.. _requests: http://docs.python-requests.org/.. _Read the Docs:  http://brundeckrun.readthedocs.org/Some calls are under active use/development, primarily: - Job imports: API v1+ - Project archive imports: API v14+All other calls _should_ work correctly as long as they are not deprecated or if Rundeck fail tocorrectly implement backwards compatibility.Target python version: 2.7Should work (but not tested aagainst): 3# Installation  pip install brundeckrun## Use    &gt;&gt;&gt; from rundeck.client import Rundeck    &gt;&gt;&gt; rd = Rundeck('rundeck.server.com', api_token='SECRET_API_TOKEN')    &gt;&gt;&gt; rd.list_projects()    [{        'description': None,        'name': 'TestProject',        'resources': {'providerURL': 'http://localhost:8000/resources.xml'},    }]    &gt;&gt;&gt; rd.list_jobs('TestProject')    [{'description': 'Hello World!',      'group': None,      'id': 'a6e1e0f7-ad32-4b93-ba2c-9387be06a146',      'name': 'HelloWorld',      'project': 'TestProject'}]    &gt;&gt;&gt; rd.run_job('a6e1e0f7-ad32-4b93-ba2c-9387be06a146', argString={'from':'brundeckrun'})    {'argstring': '-from brundeckrun',     'date-started': datetime.datetime(2013, 7, 11, 18, 4, 24),     'description': 'Plugin[localexec, nodeStep: true]',     'href': 'http://rundeck.server.com/execution/follow/123',     'id': '123',     'job': None,     'status': 'running',     'user': 'brundeckrun'}# Tests## Unit testsUnit tests are performed via tox. To install tox and then run the tests:    pip install tox    tox## Integration tests*Note:* currently the integrations are not up-to-date and are not under continous integration. Soon though...Running the tests requires a running Rundeck server (the Rundeck standalone jar works well) and anAPI token for said Rundeck server.You'll have to at least set the API token environment variable of ``RUNDECK_API_TOKEN`` but thereare other environment variables to be aware of. The list is below and can be found at the head ofthe tests/\_\_init\_\_.py file. They should be fairly self-explanatory (OK, RUNDECK_PROTOCOL mightnot be self-explanatory... use either 'http' or 'https' there)... code-block:: bash    RUNDECK_API_TOKEN    RUNDECK_SERVER    RUNDECK_PORT    RUNDECK_PROTOCOLNext clone the repo... code-block:: bash    git clone https://github.com/pmatias/brundeckrun.. note:: activate your `virtualenv &lt;http://www.virtualenv.org/en/latest/&gt;`_Then install the requirements and dev requirements... code-block:: bash    pip install -r requirements.txt    pip install -r requirements_dev.txtLastly, execute nose tests... code-block:: bash    nosetests.. _requests: http://docs.python-requests.org/.. _Read the Docs:  http://brundeckrun.readthedocs.org/</longdescription>
</pkgmetadata>