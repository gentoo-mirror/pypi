<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Limbo=====A `Slack &lt;https://slack.com/&gt;`__ chatbot----------------------------------------.. image:: https://travis-ci.org/llimllib/limbo.svg?branch=masterStatus------At the moment, I consider limbo to be feature complete, and the projectis in maintenance mode. Every once in a while I come in and update thedependencies.Contributions will be considered and may be accepted, you may want to`email me &lt;bill@billmill.org&gt;`__ because I might not notice your PR.Installation------------1. Clone the repo2. `Create a bot user &lt;https://my.slack.com/services/new/bot&gt;`__ if you   don’t have one yet, and copy the API Token3. export SLACK_TOKEN=“your-api-token”4. ``make run`` (or ``make repl`` for local testing)5. Invite Limbo into any channels you want it in, or just message it in   #general. Try typing ``!gif dubstep cat`` to test it out.. figure:: http://i.imgur.com/xhmD6QO.png   :alt: kitten mittens   kitten mittensI recommend that you always run limbo in a`virtualenv &lt;http://docs.python-guide.org/en/latest/dev/virtualenvs/&gt;`__so that you are running in a clean environment.Command Arguments------------------  ``--test``, ``-t``: Enter command line mode to enter a limbo repl.-  ``--hook``: Specify the hook to test. (Defaults to “message”).-  ``-c``: Run a single command.-  ``--database``, ``-d``: Where to store the limbo sqlite3 database.   Defaults to limbo.sqlite3.-  ``--pluginpath``, ``-pp``: The path where limbo should look to find   its plugins (defaults to /plugins).-  ``--version``, ``-v``: Print a version number and exitEnvironment Variables----------------------  SLACK_TOKEN: Slack API token. Required.-  LIMBO_LOGLEVEL: The logging level. Defaults to INFO.-  LIMBO_LOGFILE: File to log info to. Defaults to none.-  LIMBO_LOGFORMAT: Format for log messages. Defaults to   ``%(asctime)s:%(levelname)s:%(name)s:%(message)s``.-  LIMBO_PLUGINS: Comma-delimited string of plugins to load. Defaults to   loading all plugins in the plugins directory (which defaults to   “limbo/plugins”)Note that if you are getting an error message about not seeingenvironment variables, you may be running limbo as ``sudo``, which willclear the environment. Use a virtualenv and always run limbo as a userprocess!Commands--------It’s super easy to add your own commands! Just create a python file inthe plugins directory with an ``on_message`` function that returns astring.You can use the ``!help`` command to print out all available commandsand a brief help message about them. ``!help &lt;plugin&gt;`` will return justthe help for a particular plugin.By default, plugins won’t react to messages from other bots (justmessages from humans). Define an ``on_bot_message`` function to handlebot messages too. See the example plugins for an easy way to definethese functions.These are the current default plugins:-  `calc &lt;https://github.com/llimllib/limbo/wiki/Calc-Plugin&gt;`__-  `emoji &lt;https://github.com/llimllib/limbo/wiki/Emoji-Plugin&gt;`__-  `flip &lt;https://github.com/llimllib/limbo/wiki/Flip-Plugin&gt;`__-  `gif &lt;https://github.com/llimllib/limbo/wiki/Gif-Plugin&gt;`__-  `google &lt;https://github.com/llimllib/limbo/wiki/Google-Plugin&gt;`__-  `help &lt;https://github.com/llimllib/limbo/wiki/Help-Plugin&gt;`__-  `image &lt;https://github.com/llimllib/limbo/wiki/Image-Plugin&gt;`__-  `map &lt;https://github.com/llimllib/limbo/wiki/Map-Plugin&gt;`__-  `poll &lt;https://github.com/llimllib/limbo/wiki/Poll-Plugin&gt;`__-  `stock &lt;https://github.com/llimllib/limbo/wiki/Stock-Plugin&gt;`__-  `stockphoto &lt;https://github.com/llimllib/limbo/wiki/Stock-Photo-Plugin&gt;`__-  `weather &lt;https://github.com/llimllib/limbo/wiki/Weather-Plugin&gt;`__-  `wiki &lt;https://github.com/llimllib/limbo/wiki/Wiki-Plugin&gt;`__-  `youtube &lt;https://github.com/llimllib/limbo/wiki/Youtube-Plugin&gt;`__Docker-------  How do I try out Limbo via docker?   -  @PeterGrace maintains a public build of limbo, available from the      docker registry. Executing ``make docker_run`` will start the      default bot.   -  ``make docker_stop`` will stop the bot-  When I start the docker container, I see an error about unable to   source limbo.env. Is this a problem?   -  No. The limbo.env file only exists when using Kubernetes with the      included opaque secret recipe for storing your environment      variables.-  I’d like to develop plugins for Limbo, but would still like to use   Docker to run the bot. Is there a quick way to add plugins to the   bot?   -  Yes! Use the included Dockerfile.dev as a template, and simply      build via ``make docker_build`` You’ll then need to start the bot      with your new_image_name, for example      ``docker run -d -e SLACK_TOKEN=&lt;your_token&gt; new_image_name``Contributors-------------  `@fsalum &lt;https://github.com/fsalum&gt;`__-  `@rodvodka &lt;https://github.com/rodvodka&gt;`__-  `@mattfora &lt;https://github.com/mattfora&gt;`__-  `@dguido &lt;https://github.com/dguido&gt;`__-  `@JoeGermuska &lt;https://github.com/JoeGermuska&gt;`__-  `@MathyV &lt;https://github.com/MathyV&gt;`__-  `@stopspazzing &lt;https://github.com/stopspazzing&gt;`__-  `@noise &lt;https://github.com/noise&gt;`__-  `@drewp &lt;https://github.com/drewp&gt;`__-  `@TetraEtc &lt;https://github.com/TetraEtc&gt;`__-  `@LivingInSyn &lt;https://github.com/LivingInSyn&gt;`__-  `@reversegremlin &lt;https://github.com/reversegremlin&gt;`__-  `@adamghill &lt;https://github.com/adamghill&gt;`__-  `@PeterGrace &lt;https://github.com/PeterGrace&gt;`__-  `@SkiftCreative &lt;https://github.com/SkiftCreative&gt;`__-  `@diceone &lt;https://github.com/diceone&gt;`__-  `@rnagle &lt;https://github.com/rnagle&gt;`__-  `@topher200 &lt;https://github.com/topher200&gt;`__-  `@StewPoll &lt;https://github.com/StewPoll&gt;`__-  `@eSoares &lt;https://github.com/eSoares&gt;`__-  `@sweinstein89 &lt;https://github.com/sweinstein89&gt;`__-  `@fenwar &lt;https://github.com/fenwar&gt;`__-  `@rdimartino &lt;https://github.com/rdimartino&gt;`__</longdescription>
</pkgmetadata>