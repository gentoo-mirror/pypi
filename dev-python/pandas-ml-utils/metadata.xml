<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pandas ML UtilsPandas Machine Learning Utilities is part of a bigger set of libraries for a convenient experience. Usually exploringstatistical models start with a pandas `DataFrame`. But soon enough you will find yourself converting your data frames to numpy, splitting arrays, applying minmax scalers, lagging and concatenating columns etc. As a result your notebook looks messy and became and unreadable beast. Yet the mess becomes only worse once you start to deploy your research into a productiveapplication. The untested hard coded data pipelines need be be maintained at two places. The aim of this library is to conveniently operate with data frames without and abstract away the ugly unreproducible data pipelines. The only thing you need is the original unprocessed data frame where you started.The data pipeline becomes a part of your model and gets saved that way. Going into production is as easy as this:```pythonimport pandas as pdimport pandas_ml_utils  # monkey patch the `DataFrame`from pandas_ml_utils import Model# alternatively as a one liner `from pandas_ml_utils import pd, Model` model = Model.load('your_saved.model')df = pd.read_csv('your_raw_data.csv')df_prediction = df.model.predict(model)# do something with your predictiondf_prediction.plot()``` is intended to help you through your journey of statistical or machine learning models, while you never need to leave the world of pandas.## InstallationThe basic implementation supports [scikit learn][e1] classifiers and regressors.```shell scriptpip install pandas-ml-utils```Additional machine learning libraries are available as an add on:```shell scriptpip install pandas-ml-utils-torch  # pytorch implementationpip install pandas-ml-utils-keras  # keras + tensorflow 1.x implementation```Note that the keras/tensorflow version is currently stalled as I focus on pytorch recently. This might changewith PyMC4 and tensorflow probability ## ExampleYou will find some demo projects in the [examples][ghl1] directory. But It might also be worth it to checkthe unit tests and the [integration tests][ghl2]. Here is how classification challengemight look like:  ![Classification Example][ghi1][e1]: https://scikit-learn.org/stable/[ghl1]: ./examples/[ghl2]: ../pandas-ml-1ntegration-test[ghi1]: ../.readme/images/classification.png</longdescription>
</pkgmetadata>