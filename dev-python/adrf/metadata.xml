<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Async Django REST framework**Async support for Django REST framework**# Requirements* Python 3.8+* Django 4.1We **highly recommend** and only officially support the latest patch release ofeach Python and Django series.# InstallationInstall using `pip`...    pip install adrfAdd `'adrf'` to your `INSTALLED_APPS` setting.```pythonINSTALLED_APPS = [    ...    'adrf',]```# Examples# Async ViewsWhen using Django 4.1 and above, this package allows you to work with async class and function based views.For class based views, all handler methods must be async, otherwise Django will raise an exception. For function based views, the function itself must be async.For example:```pythonfrom adrf.views import APIViewclass AsyncView(APIView):    async def get(self, request):        return Response({&quot;message&quot;: &quot;This is an async class based view.&quot;})from adrf.decorators import api_view@api_view(['GET'])async def async_view(request):    return Response({&quot;message&quot;: &quot;This is an async function based view.&quot;})```# Async ViewSetsFor viewsets, all handler methods must be async too.views.py```pythonfrom django.contrib.auth import get_user_modelfrom rest_framework.response import Responsefrom adrf.viewsets import ViewSetUser = get_user_model()class AsyncViewSet(ViewSet):    async def list(self, request):        return Response(            {&quot;message&quot;: &quot;This is the async `list` method of the viewset.&quot;}        )    async def retrieve(self, request, pk):        user = await User.objects.filter(pk=pk).afirst()        return Response({&quot;user_pk&quot;: user and user.pk})```urls.py```pythonfrom django.urls import path, includefrom rest_framework import routersfrom . import viewsrouter = routers.DefaultRouter()router.register(r&quot;async_viewset&quot;, views.AsyncViewSet, basename=&quot;async&quot;)urlpatterns = [    path(&quot;&quot;, include(router.urls)),]```</longdescription>
</pkgmetadata>