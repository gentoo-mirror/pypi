<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Kaskada Timestreams&lt;!-- start elevator-pitch --&gt;Kaskada's `timestreams` library makes it easy to work with structured event-based data.Define temporal queries on event-based data loaded from Python, using Pandas or PyArrow and push new data in as it occurs.Or, execute the queries directly on events in your data lake and/or as they arrive on a stream.With Kaskada you can unleash the value of real-time, temporal queries without the complexity of &quot;big&quot; infrastructure components like a distributed stream or stream processing system.Under the hood, `timestreams` is an efficient temporal query engine built in Rust.It is built on Apache Arrow, using the same columnar execution strategy that makes ...&lt;!-- end elevator-pitch --&gt;## Install PythonUse `pyenv` and install at least `3.8` (most development occurs under `3.11`).If multiple versions are installed, `nox` will test against each of them.## Building and TestingTo build this package, first install `maturin`:```shellpoetry shellpoetry install --no-rootmaturin developpytest```Alternatively, install nox and run the tests inside an isolated environment:```shellnox```</longdescription>
</pkgmetadata>