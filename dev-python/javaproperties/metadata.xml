<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: http://www.repostatus.org/badges/latest/active.svg    :target: http://www.repostatus.org/#active    :alt: Project Status: Active - The project has reached a stable, usable          state and is being actively developed... image:: https://github.com/jwodder/javaproperties/workflows/Test/badge.svg?branch=master    :target: https://github.com/jwodder/javaproperties/actions?workflow=Test    :alt: CI Status.. image:: https://codecov.io/gh/jwodder/javaproperties/branch/master/graph/badge.svg    :target: https://codecov.io/gh/jwodder/javaproperties.. image:: https://img.shields.io/pypi/pyversions/javaproperties.svg    :target: https://pypi.org/project/javaproperties.. image:: https://img.shields.io/github/license/jwodder/javaproperties.svg?maxAge=2592000    :target: https://opensource.org/licenses/MIT    :alt: MIT License`GitHub &lt;https://github.com/jwodder/javaproperties&gt;`_| `PyPI &lt;https://pypi.org/project/javaproperties&gt;`_| `Documentation &lt;https://javaproperties.readthedocs.io&gt;`_| `Issues &lt;https://github.com/jwodder/javaproperties/issues&gt;`_| `Changelog &lt;https://github.com/jwodder/javaproperties/blob/master/CHANGELOG.md&gt;`_``javaproperties`` provides support for reading &amp; writing |properties|_ (boththe simple line-oriented format and XML) with a simple API based on the``json`` module ‚Äî though, for recovering Java addicts, it also includes a``Properties`` class intended to match the behavior of |propclass|_ as much asis Pythonically possible.Previous versions of ``javaproperties`` included command-line programs forbasic manipulation of ``.properties`` files.  As of version 0.4.0, theseprograms have been split off into a separate package, |clipkg|_.Installation============``javaproperties`` requires Python 3.6 or higher.  Just use `pip&lt;https://pip.pypa.io&gt;`_ for Python 3 (You have pip, right?) to install it::    python3 -m pip install javapropertiesExamples========Dump some keys &amp; values (output order not guaranteed):&gt;&gt;&gt; properties = {&quot;key&quot;: &quot;value&quot;, &quot;host:port&quot;: &quot;127.0.0.1:80&quot;, &quot;snowman&quot;: &quot;‚òÉ&quot;, &quot;goat&quot;: &quot;üêê&quot;}&gt;&gt;&gt; print(javaproperties.dumps(properties))#Mon Sep 26 14:57:44 EDT 2016key=valuegoat=\ud83d\udc10host\:port=127.0.0.1\:80snowman=\u2603Load some keys &amp; values:&gt;&gt;&gt; javaproperties.loads('''... #Mon Sep 26 14:57:44 EDT 2016... key = value... goat: \\ud83d\\udc10... host\\:port=127.0.0.1:80... #foo = bar... snowman   ‚òÉ... '''){'goat': 'üêê', 'host:port': '127.0.0.1:80', 'key': 'value', 'snowman': '‚òÉ'}Dump some properties to a file and read them back in again:&gt;&gt;&gt; with open('example.properties', 'w', encoding='latin-1') as fp:...     javaproperties.dump(properties, fp)...&gt;&gt;&gt; with open('example.properties', 'r', encoding='latin-1') as fp:...     javaproperties.load(fp)...{'goat': 'üêê', 'host:port': '127.0.0.1:80', 'key': 'value', 'snowman': '‚òÉ'}Sort the properties you're dumping:&gt;&gt;&gt; print(javaproperties.dumps(properties, sort_keys=True))#Mon Sep 26 14:57:44 EDT 2016goat=\ud83d\udc10host\:port=127.0.0.1\:80key=valuesnowman=\u2603Turn off the timestamp:&gt;&gt;&gt; print(javaproperties.dumps(properties, timestamp=None))key=valuegoat=\ud83d\udc10host\:port=127.0.0.1\:80snowman=\u2603Use your own timestamp (automatically converted to local time):&gt;&gt;&gt; print(javaproperties.dumps(properties, timestamp=1234567890))#Fri Feb 13 18:31:30 EST 2009key=valuegoat=\ud83d\udc10host\:port=127.0.0.1\:80snowman=\u2603Dump as XML:&gt;&gt;&gt; print(javaproperties.dumps_xml(properties))&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;&lt;properties&gt;&lt;entry key=&quot;key&quot;&gt;value&lt;/entry&gt;&lt;entry key=&quot;goat&quot;&gt;üêê&lt;/entry&gt;&lt;entry key=&quot;host:port&quot;&gt;127.0.0.1:80&lt;/entry&gt;&lt;entry key=&quot;snowman&quot;&gt;‚òÉ&lt;/entry&gt;&lt;/properties&gt;New in v0.6.0: Dump Unicode characters as-is instead of escaping them:&gt;&gt;&gt; print(javaproperties.dumps(properties, ensure_ascii=False))#Tue Feb 25 19:13:27 EST 2020key=valuegoat=üêêhost\:port=127.0.0.1\:80snowman=‚òÉ`And more! &lt;https://javaproperties.readthedocs.io&gt;`_.. |properties| replace:: Java ``.properties`` files.. _properties: https://en.wikipedia.org/wiki/.properties.. |propclass| replace:: Java 8's ``java.util.Properties``.. _propclass: https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html.. |clipkg| replace:: ``javaproperties-cli``.. _clipkg: https://github.com/jwodder/javaproperties-cli</longdescription>
</pkgmetadata>