# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="The datacontract CLI is an open source command-line tool for working with Data Contracts. It uses data contract YAML files to lint the data contract, connect to data sources and execute schema and quality tests, detect breaking changes, and export to different formats. The tool is written in Python. It can be used as a standalone CLI tool, in a CI/CD pipeline, or directly as a Python library."

HOMEPAGE="https://cli.datacontract.com"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all api athena avro bigquery csv databricks dbml dbt dev excel iceberg kafka parquet postgres protobuf rdf s3 snowflake sqlserver trino"
DEPENDENCIES="<dev-python/typer-0.17[${PYTHON_USEDEP}]
	<dev-python/pydantic-2.12.0[${PYTHON_USEDEP}]
	~dev-python/pyyaml-6.0.1[${PYTHON_USEDEP}]
	<dev-python/requests-2.33[${PYTHON_USEDEP}]
	<dev-python/fastjsonschema-2.22.0[${PYTHON_USEDEP}]
	dev-python/fastparquet[${PYTHON_USEDEP}]
	<dev-python/numpy-2.0.0[${PYTHON_USEDEP}]
	<dev-python/python-multipart-1.0.0[${PYTHON_USEDEP}]
	<dev-python/rich-15.0[${PYTHON_USEDEP}]
	<dev-python/sqlglot-28.0.0[${PYTHON_USEDEP}]
	dev-python/duckdb[${PYTHON_USEDEP}]
	dev-python/soda-core-duckdb[${PYTHON_USEDEP}]
	>=dev-python/setuptools-60.0[${PYTHON_USEDEP}]
	<dev-python/python-dotenv-2.0.0[${PYTHON_USEDEP}]
	<dev-python/boto3-2.0.0[${PYTHON_USEDEP}]
	<dev-python/jinja2-4.0.0[${PYTHON_USEDEP}]
	dev-python/jinja_partials[${PYTHON_USEDEP}]
	dev-python/datacontract-specification[${PYTHON_USEDEP}]
	dev-python/open-data-contract-standard[${PYTHON_USEDEP}]
	avro? ( dev-python/avro[${PYTHON_USEDEP}] )
	bigquery? ( dev-python/soda-core-bigquery[${PYTHON_USEDEP}] )
	csv? ( >=dev-python/pandas-2.0.0[${PYTHON_USEDEP}] )
	excel? ( <dev-python/openpyxl-4.0.0[${PYTHON_USEDEP}] )
	databricks? ( dev-python/soda-core-spark-df[${PYTHON_USEDEP}] )
	databricks? ( dev-python/soda-core-spark[${PYTHON_USEDEP}] )
	databricks? ( dev-python/databricks-sql-connector[${PYTHON_USEDEP}] )
	databricks? ( dev-python/databricks-sdk[${PYTHON_USEDEP}] )
	databricks? ( dev-python/pyspark[${PYTHON_USEDEP}] )
	iceberg? ( dev-python/pyiceberg[${PYTHON_USEDEP}] )
	kafka? ( dev-python/datacontract-cli[${PYTHON_USEDEP}] )
	kafka? ( dev-python/soda-core-spark-df[${PYTHON_USEDEP}] )
	kafka? ( dev-python/pyspark[${PYTHON_USEDEP}] )
	postgres? ( dev-python/soda-core-postgres[${PYTHON_USEDEP}] )
	s3? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	s3? ( dev-python/aiobotocore[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/snowflake-connector-python[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/soda-core-snowflake[${PYTHON_USEDEP}] )
	sqlserver? ( dev-python/soda-core-sqlserver[${PYTHON_USEDEP}] )
	athena? ( dev-python/soda-core-athena[${PYTHON_USEDEP}] )
	trino? ( dev-python/soda-core-trino[${PYTHON_USEDEP}] )
	dbt? ( dev-python/dbt-core[${PYTHON_USEDEP}] )
	dbml? ( dev-python/pydbml[${PYTHON_USEDEP}] )
	parquet? ( >=dev-python/pyarrow-18.1.0[${PYTHON_USEDEP}] )
	rdf? ( ~dev-python/rdflib-7.0.0[${PYTHON_USEDEP}] )
	api? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	api? ( ~dev-python/uvicorn-0.35.0[${PYTHON_USEDEP}] )
	protobuf? ( dev-python/grpcio-tools[${PYTHON_USEDEP}] )
	all? ( dev-python/datacontract-cli[${PYTHON_USEDEP}] )
	dev? ( dev-python/datacontract-cli[${PYTHON_USEDEP}] )
	dev? ( ~dev-python/httpx-0.28.1[${PYTHON_USEDEP}] )
	dev? ( dev-python/kafka-python[${PYTHON_USEDEP}] )
	dev? ( ~dev-python/moto-5.1.10[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/pandas-2.1.0[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	dev? ( dev-python/pymssql[${PYTHON_USEDEP}] )
	dev? ( dev-python/ruff[${PYTHON_USEDEP}] )
	dev? ( dev-python/testcontainers[${PYTHON_USEDEP}] )
	dev? ( dev-python/trino[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
