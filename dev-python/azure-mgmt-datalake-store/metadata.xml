<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Microsoft Azure SDK for Python==============================This is the Microsoft Azure Data Lake Store Management Client Library.Azure Resource Manager (ARM) is the next generation of management APIs thatreplace the old Azure Service Management (ASM).This package has been tested with Python 2.7, 3.4, 3.5 and 3.6.For the older Azure Service Management (ASM) libraries, see`azure-servicemanagement-legacy &lt;https://pypi.python.org/pypi/azure-servicemanagement-legacy&gt;`__ library.For a more complete set of Azure libraries, see the `azure &lt;https://pypi.python.org/pypi/azure&gt;`__ bundle package.Compatibility=============**IMPORTANT**: If you have an earlier version of the azure package(version &lt; 1.0), you should uninstall it before installing this package.You can check the version using pip:.. code:: shell    pip freezeIf you see azure==0.11.0 (or any version below 1.0), uninstall it first:.. code:: shell    pip uninstall azureUsage=====For code examples, see `Data Lake Store Management&lt;https://docs.microsoft.com/python/api/overview/azure/data-lake-store&gt;`__on docs.microsoft.com.Provide Feedback================If you encounter any bugs or have suggestions, please file an issue in the`Issues &lt;https://github.com/Azure/azure-sdk-for-python/issues&gt;`__section of the project... :changelog:Release History===============0.5.0 (2018-06-14)++++++++++++++++++**Features**- Model CreateDataLakeStoreAccountParameters has a new parameter virtual_network_rules- Model DataLakeStoreAccount has a new parameter virtual_network_rules- Model UpdateDataLakeStoreAccountParameters has a new parameter virtual_network_rules- Added operation group VirtualNetworkRulesOperations- Client class can be used as a context manager to keep the underlying HTTP session open for performance**General Breaking changes**This version uses a next-generation code generator that *might* introduce breaking changes.- Model signatures now use only keyword-argument syntax. All positional arguments must be re-written as keyword-arguments.  To keep auto-completion in most cases, models are now generated for Python 2 and Python 3. Python 3 uses the &quot;*&quot; syntax for keyword-only arguments.- Enum types now use the &quot;str&quot; mixin (class AzureEnum(str, Enum)) to improve the behavior when unrecognized enum values are encountered.  While this is not a breaking change, the distinctions are important, and are documented here:  https://docs.python.org/3/library/enum.html#others  At a glance:  - &quot;is&quot; should not be used at all.  - &quot;format&quot; will return the string value, where &quot;%s&quot; string formatting will return `NameOfEnum.stringvalue`. Format syntax should be prefered.- New Long Running Operation:  - Return type changes from `msrestazure.azure_operation.AzureOperationPoller` to `msrest.polling.LROPoller`. External API is the same.  - Return type is now **always** a `msrest.polling.LROPoller`, regardless of the optional parameters used.  - The behavior has changed when using `raw=True`. Instead of returning the initial call result as `ClientRawResponse`,    without polling, now this returns an LROPoller. After polling, the final resource will be returned as a `ClientRawResponse`.  - New `polling` parameter. The default behavior is `Polling=True` which will poll using ARM algorithm. When `Polling=False`,    the response of the initial call will be returned without polling.  - `polling` parameter accepts instances of subclasses of `msrest.polling.PollingMethod`.  - `add_done_callback` will no longer raise if called after polling is finished, but will instead execute the callback right away.**Bugfixes**- Compatibility of the sdist with wheel 0.31.00.4.0 (2018-02-12)++++++++++++++++++**Breaking changes**- The account operations object has been changed from &quot;account&quot; to &quot;accounts&quot;    - E.g., account.get(...) to accounts.get(...)- When creating or updating resources (accounts, firewall rules, etc.), explicit parameter objects are now required:    - Account creation:        - &quot;DataLakeStoreAccount&quot; to &quot;CreateDataLakeStoreAccountParameters&quot;            - List of &quot;FirewallRule&quot; to &quot;CreateFirewallRuleWithAccountParameters&quot;            - List of &quot;TrustedIdProvider&quot; to &quot;CreateTrustedIdProviderWithAccountParameters&quot;    - Account update:        - &quot;DataLakeStoreUpdateParameters&quot; to &quot;UpdateDataLakeStoreParameters&quot;            - List of &quot;FirewallRule&quot; to &quot;UpdateFirewallRuleWithAccountParameters&quot;            - List of &quot;TrustedIdProvider&quot; to &quot;UpdateTrustedIdProviderWithAccountParameters&quot;    - Firewall rule creation and update:        - &quot;FirewallRule&quot; to &quot;CreateOrUpdateFirewallRuleParameters&quot;        - &quot;FirewallRule&quot; to &quot;UpdateFirewallRuleParameters&quot;    - Trusted identity provider creation and update:        - &quot;TrustedIdProvider&quot; to &quot;CreateOrUpdateTrustedIdProviderParameters&quot;        - &quot;TrustedIdProvider&quot; to &quot;UpdateTrustedIdProviderParameters&quot;0.3.0 (2018-01-09)++++++++++++++++++**Breaking changes*** Changed the ODataQuery parameter type from DataLakeStoreAccount to DataLakeStoreAccountBasic for these APIs:  * Account_List  * Account_ListByResourceGroup**Notes*** Added two more states to DataLakeStoreAccountStatus enum: Undeleting and Canceled* Added new Account APIs:  * Account_CheckNameAvailability  * Location_GetCapability  * Operation_List0.2.0 (2017-08-17)++++++++++++++++++**Breaking change*** When getting a list of accounts, the object type that is returned is DataLakeAnalyticsAccountBasic and not DataLakeAnalyticsAccount (more information on the difference is below in the Notes section)* Standardized the parameter name for file paths in the url (e.g. fileDestination to path)**Notes*** When getting a list of accounts, the account information for each account now includes a strict subset of the account information that is returned when getting a single account  * There are two ways to get a list of accounts: List and ListByResource methods  * The following fields are included in the account information when getting a list of accounts, which is less than the account information retrieved for a single account:* provisioningState* state* creationTime* lastModifiedTime* endpoint* When retrieving account information, an account id field called &quot;accountId&quot; is now included.  * accountId's description: The unique identifier associated with this Data Lake Analytics account.0.1.6 (2017-06-19)++++++++++++++++++* Fixing a regression discovered in 0.1.5. Please update to 0.1.6 to avoid any issues caused by that regression.0.1.5 (2017-06-07)++++++++++++++++++**New features*** Add support for updating a User Managed KeyVault key.0.1.4 (2017-04-20)++++++++++++++++++This wheel package is now built with the azure wheel extension0.1.3 (2017-02-13)++++++++++++++++++**New features*** Added extended firewall rule support, enabling allowing/blocking all azure IP traffic* Add Update support for existing firewall rules (instead of replace)* Added support for updating existing trusted identity providers (instead of replace)* Fix various documentation bugs to reflect accurate information.0.1.2 (2017-01-09)++++++++++++++++++**New features*** Added the ability to create and update accounts with usage commitment levels for Data Lake Store and Data Lake Analytics0.1.1 (2016-12-12)++++++++++++++++++**Breaking change*** &quot;account_name&quot; parameter is now &quot;name&quot; in account operation0.1.0 (2016-11-14)++++++++++++++++++* Initial Release</longdescription>
</pkgmetadata>