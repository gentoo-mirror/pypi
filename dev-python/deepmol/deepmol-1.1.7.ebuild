# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="DeepMol: a python-based machine and deep learning framework for drug discovery"

HOMEPAGE=""
LICENSE="BSD 2-Clause License"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all boruta cached-property chembl-structure-pipeline deep-learning deepchem dgl dgllife dill flake8 gensim h5py imblearn ipython joblib kaleido kneed machine-learning mypy numpy optuna pillow plotly preprocessing pydantic pytest pytest-cov rdkit scikeras scikit-learn scikit-multilearn seaborn shap smilespe tensorflow tensorflow-probability test timeout-decorator torch torch-geometric tox umap-learn"
DEPENDENCIES="dev-python/rdkit[${PYTHON_USEDEP}]
	dev-python/cached-property[${PYTHON_USEDEP}]
	~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}]
	~dev-python/joblib-1.1.1[${PYTHON_USEDEP}]
	~dev-python/pillow-8.4.0[${PYTHON_USEDEP}]
	~dev-python/h5py-3.7.0[${PYTHON_USEDEP}]
	~dev-python/timeout-decorator-0.5.0[${PYTHON_USEDEP}]
	ipython? ( dev-python/ipython[${PYTHON_USEDEP}] )
	all? ( ~dev-python/timeout-decorator-0.5.0[${PYTHON_USEDEP}] )
	all? ( >=dev-python/tox-3.25.0[${PYTHON_USEDEP}] )
	all? ( dev-python/SmilesPE[${PYTHON_USEDEP}] )
	all? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	all? ( ~dev-python/h5py-3.7.0[${PYTHON_USEDEP}] )
	all? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	all? ( >=dev-python/mypy-0.942[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all? ( dev-python/scikeras[${PYTHON_USEDEP}] )
	all? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	all? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	all? ( dev-python/dgl[${PYTHON_USEDEP}] )
	all? ( dev-python/shap[${PYTHON_USEDEP}] )
	all? ( dev-python/dgllife[${PYTHON_USEDEP}] )
	all? ( dev-python/ipython[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pytest-7.1.1[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	all? ( dev-python/Boruta[${PYTHON_USEDEP}] )
	all? ( ~dev-python/plotly-5.13.1[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	all? ( dev-python/kneed[${PYTHON_USEDEP}] )
	all? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all? ( ~dev-python/dill-0.3.6[${PYTHON_USEDEP}] )
	all? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	all? ( dev-python/deepchem[${PYTHON_USEDEP}] )
	all? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )
	all? ( ~dev-python/joblib-1.1.1[${PYTHON_USEDEP}] )
	all? ( ~dev-python/scikit-learn-1.2.0[${PYTHON_USEDEP}] )
	all? ( dev-python/gensim[${PYTHON_USEDEP}] )
	all? ( >=dev-python/flake8-4.0.1[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pytest-cov-3.0.0[${PYTHON_USEDEP}] )
	all? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( ~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}] )
	all? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	all? ( ~dev-python/numpy-1.23.5[${PYTHON_USEDEP}] )
	all? ( ~dev-python/pillow-8.4.0[${PYTHON_USEDEP}] )
	boruta? ( dev-python/Boruta[${PYTHON_USEDEP}] )
	cached-property? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	chembl-structure-pipeline? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/timeout-decorator-0.5.0[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/SmilesPE[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/h5py-3.7.0[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/scikeras[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/dgl[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/shap[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/dgllife[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/ipython[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/plotly-5.13.1[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/kneed[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/optuna[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/dill-0.3.6[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/deepchem[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/joblib-1.1.1[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/scikit-learn-1.2.0[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/gensim[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/torch[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}] )
	deep-learning? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/numpy-1.23.5[${PYTHON_USEDEP}] )
	deep-learning? ( ~dev-python/pillow-8.4.0[${PYTHON_USEDEP}] )
	deepchem? ( dev-python/deepchem[${PYTHON_USEDEP}] )
	dgl? ( dev-python/dgl[${PYTHON_USEDEP}] )
	dgllife? ( dev-python/dgllife[${PYTHON_USEDEP}] )
	dill? ( ~dev-python/dill-0.3.6[${PYTHON_USEDEP}] )
	flake8? ( >=dev-python/flake8-4.0.1[${PYTHON_USEDEP}] )
	gensim? ( dev-python/gensim[${PYTHON_USEDEP}] )
	h5py? ( ~dev-python/h5py-3.7.0[${PYTHON_USEDEP}] )
	imblearn? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	joblib? ( ~dev-python/joblib-1.1.1[${PYTHON_USEDEP}] )
	kaleido? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	kneed? ( dev-python/kneed[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/timeout-decorator-0.5.0[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/SmilesPE[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/h5py-3.7.0[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/shap[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/ipython[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/Boruta[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/plotly-5.13.1[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/kneed[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/optuna[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/dill-0.3.6[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/joblib-1.1.1[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/scikit-learn-1.2.0[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/gensim[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}] )
	machine-learning? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/numpy-1.23.5[${PYTHON_USEDEP}] )
	machine-learning? ( ~dev-python/pillow-8.4.0[${PYTHON_USEDEP}] )
	mypy? ( >=dev-python/mypy-0.942[${PYTHON_USEDEP}] )
	numpy? ( ~dev-python/numpy-1.23.5[${PYTHON_USEDEP}] )
	optuna? ( dev-python/optuna[${PYTHON_USEDEP}] )
	pillow? ( ~dev-python/pillow-8.4.0[${PYTHON_USEDEP}] )
	plotly? ( ~dev-python/plotly-5.13.1[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/dill-0.3.6[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/timeout-decorator-0.5.0[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/SmilesPE[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/ipython[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/h5py-3.7.0[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/gensim[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/joblib-1.1.1[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/numpy-1.23.5[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/Boruta[${PYTHON_USEDEP}] )
	preprocessing? ( ~dev-python/pillow-8.4.0[${PYTHON_USEDEP}] )
	pydantic? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	pytest? ( >=dev-python/pytest-7.1.1[${PYTHON_USEDEP}] )
	pytest-cov? ( >=dev-python/pytest-cov-3.0.0[${PYTHON_USEDEP}] )
	rdkit? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	scikeras? ( dev-python/scikeras[${PYTHON_USEDEP}] )
	scikit-learn? ( ~dev-python/scikit-learn-1.2.0[${PYTHON_USEDEP}] )
	scikit-multilearn? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	seaborn? ( ~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}] )
	shap? ( dev-python/shap[${PYTHON_USEDEP}] )
	smilespe? ( dev-python/SmilesPE[${PYTHON_USEDEP}] )
	tensorflow? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	tensorflow-probability? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	test? ( >=dev-python/flake8-4.0.1[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pytest-cov-3.0.0[${PYTHON_USEDEP}] )
	test? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	test? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	test? ( ~dev-python/dill-0.3.6[${PYTHON_USEDEP}] )
	test? ( >=dev-python/tox-3.25.0[${PYTHON_USEDEP}] )
	test? ( dev-python/SmilesPE[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pytest-7.1.1[${PYTHON_USEDEP}] )
	test? ( ~dev-python/h5py-3.7.0[${PYTHON_USEDEP}] )
	test? ( >=dev-python/mypy-0.942[${PYTHON_USEDEP}] )
	test? ( ~dev-python/seaborn-0.12.0[${PYTHON_USEDEP}] )
	test? ( ~dev-python/joblib-1.1.1[${PYTHON_USEDEP}] )
	test? ( ~dev-python/numpy-1.23.5[${PYTHON_USEDEP}] )
	test? ( ~dev-python/pillow-8.4.0[${PYTHON_USEDEP}] )
	timeout-decorator? ( ~dev-python/timeout-decorator-0.5.0[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch-geometric? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )
	tox? ( >=dev-python/tox-3.25.0[${PYTHON_USEDEP}] )
	umap-learn? ( dev-python/umap-learn[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
