<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pycircleci[![PyPI version](https://img.shields.io/pypi/v/pycircleci?color=blue)](https://python.org/pypi/pycircleci)[![Build Status](https://github.com/alpinweis/pycircleci/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/alpinweis/pycircleci/actions/workflows/test.yml?query=branch%3Amaster)Python client for [CircleCI API](https://circleci.com/docs/2.0/api-intro/).Based on the discontinued [circleci.py](https://github.com/levlaz/circleci.py) project.## Features- Supports [API v1.1](https://circleci.com/docs/api/#api-overview) and [API v2](https://circleci.com/docs/api/v2/)- Supports both `circleci.com` and self-hosted [Enterprise CircleCI](https://circleci.com/enterprise/)## Installation    $ pip install pycircleci## UsageCreate a personal [API token](https://circleci.com/docs/2.0/managing-api-tokens/#creating-a-personal-api-token).Set up the expected env vars:    CIRCLE_TOKEN           # CircleCI API access token    CIRCLE_API_URL         # CircleCI API base url. Defaults to https://circleci.com/api```pythonfrom pycircleci.api import Api, CIRCLE_TOKEN, CIRCLE_API_URLcircle_client = Api(token=CIRCLE_TOKEN, url=CIRCLE_API_URL)# get current user infocircle_client.get_user_info()# get list of projectsresults = circle_client.get_projects()# pretty print results as jsoncircle_client.ppj(results)# pretty print the details of the last request/responsecircle_client.ppr()```### Interactive development console     make consoleThis starts a pre-configured python interactive console which gives you access to a`client` object - an instance of the `Api` class to play around. From the consoletype `man()` to see the help screen.### Contributing1. Fork it1. Install dev dependencies (`pip install -r requirements-dev.txt`)1. Create your feature branch (`git checkout -b my-new-feature`)1. Make sure `flake8` and the `pytest` test suite successfully run locally1. Commit your changes (`git commit -am 'Add some feature'`)1. Push to the branch (`git push origin my-new-feature`)1. Create new Pull Request</longdescription>
</pkgmetadata>