# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="0.11.7.dev0"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python3_10 )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Python client for the Sarus Gateway"

HOMEPAGE=""
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="imblearn optbinning pandas-profiling plotly shap sklearn skopt tensorflow tests xgboost"
DEPENDENCIES="dev-python/sarus-data-spec-public[${PYTHON_USEDEP}]
	<dev-python/cloudpickle-2.1[${PYTHON_USEDEP}]
	>=dev-python/pyarrow-11.0[${PYTHON_USEDEP}]
	dev-python/protobuf[${PYTHON_USEDEP}]
	sklearn? ( ~dev-python/scikit-learn-1.2.2[${PYTHON_USEDEP}] )
	sklearn? ( ~dev-python/scipy-1.9.0[${PYTHON_USEDEP}] )
	imblearn? ( dev-python/imbalanced-learn[${PYTHON_USEDEP}] )
	tensorflow? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	pandas-profiling? ( dev-python/ydata-profiling[${PYTHON_USEDEP}] )
	plotly? ( dev-python/plotly[${PYTHON_USEDEP}] )
	xgboost? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	skopt? ( dev-python/scikit-optimize[${PYTHON_USEDEP}] )
	shap? ( dev-python/shap[${PYTHON_USEDEP}] )
	optbinning? ( dev-python/optbinning[${PYTHON_USEDEP}] )
	tests? ( >=dev-python/pytest-7.4.2[${PYTHON_USEDEP}] )
	tests? ( ~dev-python/pytest-mock-3.5.1[${PYTHON_USEDEP}] )
	tests? ( >=dev-python/pytest-cov-4.1.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/responses[${PYTHON_USEDEP}] )
	tests? ( ~dev-python/typeguard-4.0[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
