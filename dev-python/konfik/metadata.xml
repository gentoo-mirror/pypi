<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/30027932/95400681-0a8b1f00-092d-11eb-9868-dfa8ff496565.png&quot; alt=&quot;konfik-logo&quot;&gt;&lt;strong&gt;&gt;&gt; &lt;i&gt;The Strangely Familiar Config Parser&lt;/i&gt; &lt;&lt;&lt;/strong&gt;&lt;br&gt;&lt;/br&gt;![Codecov](https://img.shields.io/codecov/c/github/rednafi/konfik?color=pink&amp;style=flat-square&amp;logo=appveyor)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square&amp;logo=appveyor)](https://github.com/python/black)[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&amp;logo=appveyor)](./LICENSE)&lt;br&gt;&lt;/br&gt;**Konfik** is a simple configuration parser that helps you access your config variables using dot (.) notation.This lets you to do this ‚Äî```pythonfoo_bar_bazz = config.FOO.BAR.BAZZ```‚Äî instead of this ‚Äî```pythonfoo_bar_bazz = config[&quot;FOO&quot;][&quot;BAR&quot;][&quot;BAZZ&quot;]```Konfik currently supports **TOML**, **YAML**, **DOTENV** and **JSON** configuration formats.&lt;/div&gt;## ‚öôÔ∏è InstallationInstall Konfik via pip:```pip install konfik```## üí° UsageLet's see how you can parse a TOML config file and access the configuration variables. For demonstration, we'll be using the following `config.toml` file:```toml# Contents of `config.toml`title = &quot;TOML Example&quot;[owner]name = &quot;Tom Preston-Werner&quot;dob = 1979-05-27T07:32:00-08:00 # First class dates[servers]  [servers.alpha]  ip = &quot;10.0.0.1&quot;  dc = &quot;eqdc10&quot;  [servers.beta]  ip = &quot;10.0.0.2&quot;  dc = &quot;eqdc10&quot;[clients]data = [ [&quot;gamma&quot;, &quot;delta&quot;], [1, 2] ]```Load the above config file and access the variables using dot notation:```pythonfrom pathlib import Pathfrom konfik import Konfik# Define the config pathBASE_DIR = Path(__file__).parentCONFIG_PATH_TOML = BASE_DIR / &quot;config.toml&quot;# Initialize the konfik classkonfik = Konfik(config_path=CONFIG_PATH_TOML)# Print the config file as a Python dictkonfik.show_config()# Get the config dict from the konfik classconfig = konfik.config# Access and print the variablesprint(config.title)print(config.owner)print(config.owner.dob)print(config.database.ports)print(config.servers.alpha.ip)print(config.clients)```The `.show_config()` method will print your entire config file as a colorized Python dictionary object like this:```python{    'title': 'TOML Example',    'owner': {        'name': 'Tom Preston-Werner',        'dob': datetime.datetime(1979, 5, 27, 7, 32, tzinfo=&lt;toml.tz.TomlTz object at0x7f2dfca308b0&gt;)    },    'database': {        'server': '192.168.1.1',        'ports': [8001, 8001, 8002],        'connection_max': 5000,        'enabled': True    },    'servers': {        'alpha': {'ip': '10.0.0.1', 'dc': 'eqdc10'},        'beta': {'ip': '10.0.0.2', 'dc': 'eqdc10'}    },    'clients': {'data': [['gamma', 'delta'], [1, 2]]}}```Konfik also exposes a few command-line options for you to introspect your config file and variables. Run:```konfik --help```This will reveal the options associated with the CLI tool:```Konfik -- The strangely familiar config parser ‚öôÔ∏èusage: konfik [-h] [--path PATH] [--show] [--show-literal] [--var VAR] [--version]optional arguments:  -h, --help      show this help message and exit  --path PATH     add config file path  --show          print config as a dict  --show-literal  print config file content literally  --var VAR       print config variable  --version       print konfik-cli version number```To inspect the value of a specific variable in a `./config.toml` file you can run:```konfik --path=config.toml --var=servers.alpha.ip```&lt;div align=&quot;center&quot;&gt;&lt;i&gt; ‚ú® üç∞ ‚ú® &lt;/i&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>