<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://techally-content.s3-us-west-1.amazonaws.com/public-content/lacework_logo_full.png&quot; width=&quot;600&quot;&gt;# Lacework Python SDK![Build Status](https://github.com/lacework/python-sdk/actions/workflows/python-test.yml/badge.svg)[![Downloads](https://pepy.tech/badge/laceworksdk)](https://pepy.tech/project/laceworksdk)**laceworksdk** is a community developed Python library for interacting with the Lacework APIs.The purpose of this library is to simplify the common tasks required for interacting with the Lacework API, and allowusers write simple code to automate tasks related to their Lacework instance(s). From data retrieval to configuration,this library aims to expose all publicly available APIs. For example, the following code would authenticate,fetch events, fetch host vulnerabilities, and fetch container vulnerabilities. The latest version of the SDK supportsexpressive searches as enabled by v2 of the Lacework APIs.```pythonfrom laceworksdk import LaceworkClientlw = LaceworkClient() # This would leverage your default Lacework CLI profile.lw = LaceworkClient(account=&quot;ACCOUNT&quot;,                    subaccount=&quot;SUBACCOUNT&quot;,                    api_key=&quot;API KEY&quot;,                    api_secret=&quot;API SECRET&quot;)events = lw.events.search(json={  &quot;timeFilter&quot;: {    &quot;startTime&quot;: start_time,    &quot;endTime&quot;: end_time  }})host_vulns = lw.vulnerabilities.hosts.search(json={    &quot;timeFilter&quot;: {        &quot;startTime&quot;: start_time,        &quot;endTime&quot;: end_time    }})container_vulns = lw.vulnerabilities.containers.search(json={    &quot;timeFilter&quot;: {        &quot;startTime&quot;: start_time,        &quot;endTime&quot;: end_time    },    &quot;filters&quot;: [        {            &quot;field&quot;: &quot;imageId&quot;,            &quot;expression&quot;: &quot;eq&quot;,            &quot;value&quot;: &quot;sha256:657922eb2d64b0a34fe7339f8b48afb9f2f44635d7d6eaa92af69591d29b3330&quot;        }    ]})```## Requirements- Python 3.6 or higher- Lacework API Credentials  - Account Name  - API Key  - API Secret## How-ToThe following information is required to instantiate a LaceworkClient instance:- `account`: The Lacework account/organization domain. (`xxxxx`.lacework.net)- `api_key`: The API Key that was generated from the Lacework UI/API.- `api_secret`: The API Secret that was generated from the Lacework UI/API.Optionally, you can also set a Lacework Sub-Account using the `subaccount` parameter.To generate API credentials, you'll need to do the following in Lacework:1.  In the Lacework web interface, go to Settings -&gt; API Keys2.  Create a new API Key and download information the credentials.## Environment VariablesIf you wish to configure the LaceworkClient instance using environment variables, this module honors the samevariables used by the Lacework CLI. The `account`, `subaccount`, `api_key`, `api_secret`, and `profile` parameterscan all be configured as specified below.| Environment Variable | Description                                                          | Required || -------------------- | -------------------------------------------------------------------- | :------: || `LW_PROFILE`         | Lacework CLI profile to use (configured at ~/.lacework.toml)         |    N     || `LW_ACCOUNT`         | Lacework account/organization domain (i.e. `&lt;account&gt;`.lacework.net) |    Y     || `LW_SUBACCOUNT`      | Lacework sub-account                                                 |    N     || `LW_API_KEY`         | Lacework API Access Key                                              |    Y     || `LW_API_SECRET`      | Lacework API Access Secret                                           |    Y     |## InstallationInstalling and upgrading `laceworksdk` is easy:**Install via PIP**`$ pip install laceworksdk`**Upgrading to the latest Version**`$ pip install laceworksdk --upgrade`## ExamplesAre you looking for some sample scripts? Check out the [examples](examples/) folder!### [Contributing](CONTRIBUTING.md)</longdescription>
</pkgmetadata>