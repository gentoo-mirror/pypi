<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># arcus-python[![test](https://github.com/cuenca-mx/arcus-python/workflows/test/badge.svg)](https://github.com/cuenca-mx/arcus-python/actions?query=workflow%3Atest)[![codecov](https://codecov.io/gh/cuenca-mx/arcus-python/branch/master/graph/badge.svg)](https://codecov.io/gh/cuenca-mx/arcus-python)[![PyPI](https://img.shields.io/pypi/v/arcus.svg)](https://pypi.org/project/arcus/)[![Downloads](https://pepy.tech/badge/arcus)](https://pepy.tech/project/arcus)Arcus python3.6+ client library for API version 3.1 of [Arcus](https://www.arcusfi.com/).## Install```bash$ pip install arcus```## Testing```bash$ make test```## Authentication and account infoCurrent version support direct endpoint calls.```pythonfrom arcus.client import Client# Create an Arcus client instanceclient = Client('your-api-key', 'your-secret-key')# Get account info account_info = client.get('/account')# create bill account_info = dict(biller_id=40, account_number='501000000007')bill = client.post('/bills', account_info)```## Pay bills```pythonfrom arcus import Clientclient = Client('your-api-key', 'your-secret-key')# create billbill = client.bills.create(40, '501000000007')# pay billtransaction = bill.pay()# refresh transactiontransaction.refresh()# cancel transactioncancellation = transaction.cancel()assert cancellation['code'] == 'R0'assert cancellation['message'] == 'Transaction successful'assert transaction.status == 'refunded'```## Top-up```pythonfrom arcus import Clientclient = Client('your-api-key', 'your-secret-key')biller_id = 808080phone_number = '5599992222'amount = 100.0# by default, currency is MXNtopup = client.topups.create(biller_id, phone_number, amount)assert topup.bill_amount == 100.0```## Billers listYou can list all active billers or filter in a specific field```pythonfrom arcus.client import Client# Create an Arcus client instanceclient = Client('your-api-key', 'your-secret-key')# Get all billers in Mexico which use MXN as currencymx_biller_list = client.biller.list(country='MX', currency='MXN')# Get all billers with an specific biller_typeelectricity_biller_list = client.biller.list(biller_type='Electricity')</longdescription>
</pkgmetadata>