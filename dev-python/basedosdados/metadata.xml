<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Package## Desenvolvimento Linux e Mac: Clone o repositório principal:```shgit clone https://github.com/basedosdados/mais.git```Entre na pasta local do repositório usando `cd mais/` e suba o ambiente localmente:```shmake create-env. .mais/bin/activatecd python-package/python setup.py develop```### Desenvolva uma nova feature1. Abra uma branch com o nome issue-&lt;X&gt;2. Faça as modificações necessárias3. Suba o Pull Request apontando para a branch `python-next-minor` ou `python-next-patch`.     Sendo, minor e patch referentes ao bump da versão: v1.5.7 --&gt; v\&lt;major&gt;.\&lt;minor&gt;.\&lt;patch&gt;.4. O nome do PR deve seguir o padrão    `[infra] &lt;titulo explicativo&gt;`### O que uma modificação precisa ter  - Resolver o problema- Lista de modificações efetuadas    1. Mudei a função X para fazer Y    2. Troquei o nome da variavel Z- Referência aos issues atendidos- Documentação e Docstrings- Testes  ## Versionamento**Para publicar uma nova versão do pacote é preciso seguir os seguintes passos:**1. Fazer o pull da branch:    ```bash    git pull origin [python-version]    ```      Onde `[python-version]` é a branch da nova versão do pacote.2. Se necessario adicionar novas dependências:    ```bash      poetry add &lt;package-name&gt;    ```3. Gerar novo `requirements-dev.txt`     ```bash    poetry export -f requirements.txt --output requirements-dev.txt --without-hashes    ```4. Editar `pyproject.toml`:    O arquivo `pyproject.toml` contém, entre outras informações, a versão do pacote em python da **BD**. Segue excerto do arquivo:    ```toml    description = &quot;Organizar e facilitar o acesso a dados brasileiros através de tabelas públicas no BigQuery.&quot;    homepage = &quot;https://github.com/base-dos-dados/bases&quot;    license = &quot;MIT&quot;    name = &quot;basedosdados&quot;    packages = [      {include = &quot;basedosdados&quot;},    ]    readme = &quot;README.md&quot;    repository = &quot;https://github.com/base-dos-dados/bases&quot;    version = &quot;1.6.1-beta.2&quot;    ```        O campo `version` deve ser alterado para o número da versão sendo lançada.5. Editar `basedosdados/__init__.py`:        O arquivo `basedosdados/__init__.py` contém a versão do pacote em python da **BD**. Exemplo:        ```python    __version__ = &quot;1.6.1-beta.2&quot;    ```       O atributo `__version__` também deve ser alterado para o número da versão sendo lançada.6. Push para branch:    ```bash    git push origin [python-version]    ```7. Publicação do pacote no PyPI (exige usuário e senha):   Para publicar o pacote no PyPI, use:   ```bash    poetry version [python-version]    poetry publish --build   ```8. Faz merge da branch para a master9. Faz release usando a UI do GitHub10. Atualizar versão do pacote usada internamente</longdescription>
</pkgmetadata>