<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Ontology Builder (owl-builder)#### Key Term Extraction```pythonfrom owl_builder import keytermsinput_text = &quot;&quot;&quot;A local area network (LAN) is a computer network that interconnects computers within a limited area such as a residence, school, laboratory, university campus or office building.By contrast, a wide area network (WAN) not only covers a larger geographic distance, but also generally involves leased telecommunication circuits.Ethernet and Wi-Fi are the two most common technologies in use for local area networks.Historical network technologies include ARCNET, Token Ring, and AppleTalk.&quot;&quot;&quot;results = keyterms(    input_text=input_text,    use_openai=False,    use_terms=True,    use_keyterms=True,    use_ngrams=False,    use_nounchunks=False)```The results are```json[   &quot;leased telecommunication circuit&quot;,   &quot;historical network technology&quot;,   &quot;large geographic distance&quot;,   &quot;interconnects computer&quot;,   &quot;local area network&quot;,   &quot;university campus&quot;,   &quot;common technology&quot;,   &quot;wide area network&quot;,   &quot;computer network&quot;,   &quot;office building&quot;,   &quot;include arcnet&quot;,   &quot;limited area&quot;,   &quot;token ring&quot;]```If `use_openai` is set to `True`, then the following environment variables must be set:```pythonos.environ['USE_OPENAI'] = &quot;True&quot;os.environ['OPENAI_KEY'] = &quot;&lt;openai-key&gt;&quot;os.environ['OPENAI_ORG'] = &quot;&lt;openai-org&gt;&quot;```## TTL Generation```pythonfrom owl_builder import build_ttlresults = build_ttl(&quot;He has aims to make Detroit a leader in green energy.&quot;)```The result is```ttl###  http://graffl.ai/pathology#green_energy        :green_energy rdf:type owl:Class ;        rdfs:label &quot;Green Energy&quot; ;        rdfs:subClassOf :energy .###  http://graffl.ai/pathology#energy        :energy rdf:type owl:Class ;        rdfs:label &quot;Energy&quot; .```You can also supply your own taxonomy like this:```pythonimport pandas as pdresults = build_ttl(pd.DataFrame([    {&quot;Parent&quot;: &quot;Alpha&quot;, &quot;Child&quot;: &quot;Alpha Beta&quot;},    {&quot;Parent&quot;: &quot;Alpha Beta&quot;, &quot;Child&quot;: &quot;Alpha Beta Gamma&quot;},    {&quot;Parent&quot;: &quot;Gamma&quot;, &quot;Child&quot;: &quot;Gamma Delta&quot;},]))```The result is```ttl###  http://graffl.ai/pathology#alpha_beta        :alpha_beta rdf:type owl:Class ;        rdfs:label &quot;Alpha Beta&quot; ;        rdfs:subClassOf :alpha .###  http://graffl.ai/pathology#alpha            :alpha rdf:type owl:Class ;            rdfs:label &quot;Alpha&quot; .###  http://graffl.ai/pathology#alpha_beta_gamma            :alpha_beta_gamma rdf:type owl:Class ;            rdfs:label &quot;Alpha Beta Gamma&quot; ;            rdfs:subClassOf :alpha_beta .###  http://graffl.ai/pathology#alpha_beta            :alpha_beta rdf:type owl:Class ;            rdfs:label &quot;Alpha Beta&quot; .###  http://graffl.ai/pathology#gamma_delta            :gamma_delta rdf:type owl:Class ;            rdfs:label &quot;Gamma Delta&quot; ;            rdfs:subClassOf :gamma .###  http://graffl.ai/pathology#gamma            :gamma rdf:type owl:Class ;            rdfs:label &quot;Gamma&quot; .```</longdescription>
</pkgmetadata>