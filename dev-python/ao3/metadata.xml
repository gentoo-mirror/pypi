<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ao3.py======This Python package provides a scripted interface to some of the data on`AO3 &lt;https://archiveofourown.org/&gt;`_ (the Archive of Our Own).It is **not** an official API.Motivation**********I want to be able to write Python scripts that use data from AO3.An official API for AO3 data has been `on the roadmap &lt;http://archiveofourown.org/admin_posts/295&gt;`_for a couple of years.  Until that appears, I've cobbled together my ownpage-scraping code that does the job.  It's a bit messy and fragile, but itseems to work most of the time.If/when we get the proper API, I'd drop this in a heartbeat and do itproperly.Installation************Install using pip:.. code-block:: console   $ pip install ao3I'm trying to support Python 2.7, Python 3.3+ and PyPy.Usage*****Create an API instance:.. code-block:: pycon   &gt;&gt;&gt; from ao3 import AO3   &gt;&gt;&gt; api = AO3()Looking up information about a work-----------------------------------Getting a work:.. code-block:: pycon   &gt;&gt;&gt; work = api.work(id='258626')The ``id`` is the numeric portion of the URL.  For example, the work ID of``https://archiveofourown.org/works/258626`` is ``258626``.Get a URL:.. code-block:: pycon   &gt;&gt;&gt; work.url   'https://archiveofourown.org/works/258626'You can then look up a number of attributes, similar to the Stats panel at thetop of a page.  Here's the full set you can look up:.. code-block:: pycon   &gt;&gt;&gt; work.title   'The Morning After'   &gt;&gt;&gt; work.author   'ambyr'   &gt;&gt;&gt; work.summary   &quot;&lt;p&gt;Delicious just can't understand why it's the shy, quiet ones who get all the girls.&lt;/p&gt;&quot;   &gt;&gt;&gt; work.rating   ['Teen And Up Audiences']   &gt;&gt;&gt; work.warnings   [](An empty list is synonymous with &quot;No Archive Warnings&quot;, so that it's a falseyvalue.).. code-block:: pycon   &gt;&gt;&gt; work.category   ['F/M']   &gt;&gt;&gt; work.fandoms   ['Anthropomorfic - Fandom']   &gt;&gt;&gt; work.relationship   ['Pinboard/Fandom']   &gt;&gt;&gt; work.characters   ['Pinboard', 'Delicious - Character', 'Diigo - Character']   &gt;&gt;&gt; work.additional_tags   ['crackfic', 'Meta', 'so very not my usual thing']   &gt;&gt;&gt; work.language   'English'   &gt;&gt;&gt; work.published   datetime.date(2011, 9, 29)   &gt;&gt;&gt; work.words   605   &gt;&gt;&gt; work.comments   122   &gt;&gt;&gt; work.kudos   1238   &gt;&gt;&gt; for name in work.kudos_left_by:   ...     print(name)   ...   winterbelles   AnonEhouse   SailAweigh   # and so on   &gt;&gt;&gt; work.bookmarks   99   &gt;&gt;&gt; work.hits   43037There's also a method for dumping all the information about a work into JSON,for easy export/passing into other places:.. code-block:: pycon   &gt;&gt;&gt; work.json()   '{&quot;rating&quot;: [&quot;Teen And Up Audiences&quot;], &quot;fandoms&quot;: [&quot;Anthropomorfic - Fandom&quot;], &quot;characters&quot;: [&quot;Pinboard&quot;, &quot;Delicious - Character&quot;, &quot;Diigo - Character&quot;], &quot;language&quot;: &quot;English&quot;, &quot;additional_tags&quot;: [&quot;crackfic&quot;, &quot;Meta&quot;, &quot;so very not my usual thing&quot;], &quot;warnings&quot;: [], &quot;id&quot;: &quot;258626&quot;, &quot;stats&quot;: {&quot;hits&quot;: 43037, &quot;words&quot;: 605, &quot;bookmarks&quot;: 99, &quot;comments&quot;: 122, &quot;published&quot;: &quot;2011-09-29&quot;, &quot;kudos&quot;: 1238}, &quot;author&quot;: &quot;ambyr&quot;, &quot;category&quot;: [&quot;F/M&quot;], &quot;title&quot;: &quot;The Morning After&quot;, &quot;relationship&quot;: [&quot;Pinboard/Fandom&quot;], &quot;summary&quot;: &quot;&lt;p&gt;Delicious just can\'t understand why it\'s the shy, quiet ones who get all the girls.&lt;/p&gt;&quot;}'Looking up your account-----------------------If you have an account on AO3, you can log in to access pages that aren'tavailable to the public:.. code-block:: pycon   &gt;&gt;&gt; api.login('username', 'password')Currently there's only one thing you can do with this: if you have ViewingHistory enabled, you can get a list of work IDs from that history, like so:.. code-block:: pycon   &gt;&gt;&gt; for entry in api.user.reading_history():   ...     print(entry.work_id)   ...   '123'   '456'   '789'   # and so onYou can enable Viewing History in the settings pane.One interesting side effect of this is that you can use it to get a listof works where you've left kudos:.. code-block:: python   from ao3 import AO3   from ao3.works import RestrictedWork   api = AO3()   api.login('username', 'password')   for entry in api.user.reading_history():       try:           work = api.work(id=entry.work_id)       except RestrictedWork:           continue       print(work.url + '... ', end='')       if api.user.username in work.kudos_left_by:           print('yes')       else:           print('no')Warning: this is `very` slow.  It has to go back and load a page for everythingyou've ever read.  Don't use this if you're on a connection with limitedbandwidth.This doesn't include &quot;restricted&quot; works -- works that require you to be alogged-in user to see them.(The reading page tells you when you last read something.  If you cached theresults, and then subsequent runs only rechecked fics you'd read since thelast run, you could make this quite efficient.  Exercise for the reader.)License*******The project is licensed under the MIT license.</longdescription>
</pkgmetadata>