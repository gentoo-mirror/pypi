<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Paretos packageThis is the paretos package for easy integration of socrates optimizationwithin customer environments. The package also enables to get the resultsof socrates api in an easy and understandable way.## InstallationThe installation of the package is simply done via. pip```shellpip install paretos```## UsageIn general the complete documentation for usage and classes can be found [here](https://docs.paretos.io/). In thisreadme only brief overview of the most important points to get started is given.## DevelopmentThis section is aimed towards developers of the paretos library.### Getting StartedYou will find some executable examples in the `/examples` folder.See [examples/getting-started.md](examples/getting-started.md) for the necessary steps to run those scripts.### Linting- `isort .`- `black .`### Unit Testing- `python -m unittest discover test/unittest`- `coverage run --source paretos -m unittest discover test/unittest`- `coverage html`### Setting up Testbench for FrontendTo setup some test projects in certain states for frontend tests you can use the script in test/frontend_testbenchTo call it you have to set the following environment variables:- SOCRATES_URL- PARETOS_USERNAME- PARETOS_PASSWORDThen call the script: `python test/frontend_testbench/init_testbench.py`The script will use the socrates-api to create projects and run optimizations to create some edge-cases for frontend tests.## Dependencies- requires connection to Socrates API 1.2.0 or newer</longdescription>
</pkgmetadata>