<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># homecloudW.I.P/ more detailed readme to come&lt;br&gt;A command line tool for generating the template files needed to integrate fastapi, uvicorn, and a requests based client into a Python projectover a local network. &lt;br&gt;Devices on the local network running a client can automatically find the server for their app name at startup.&lt;br&gt;## InstallationInstall with&lt;pre&gt;pip install homecloud&lt;/pre&gt;## UsageNavigate to your project directory in the terminaland run &lt;pre&gt;&gt;homecloud&lt;/pre&gt;Several files should have been generated.Assuming the project directory is called myapp,you should see the following files:&lt;pre&gt;homecloud_config.tomlmyapp_client.pymyapp_get_routes.pymyapp_post_routes.pymyapp_request_models.pymyapp_server.py&lt;/pre&gt;The server for myapp can be started by running the `myapp_server.py` script.&lt;br&gt;Any device on the local network that runs code that creates a `myapp.MyappClient` object should be able to automatically find the ip address and port of the myapp server.&lt;br&gt;&lt;br&gt;Other `myapp_*_routes.py` files can be generated by passing their names with the `-r/--routes` switch to the `homecloud` tool.&lt;br&gt;If, earlier, we ran&lt;pre&gt;&gt;homecloud -r trace put&lt;/pre&gt;then we would have generated the previous files as well as&lt;pre&gt;myapp_trace_routes.pymyapp_put_routes.py&lt;/pre&gt;The help display for `homecloud`:&lt;pre&gt;&gt;homecloud -husage: homecloud [-h] [-r [ROUTES ...]] [-d DESTINATION] [app_name]positional arguments:  app_name              The name of the app to generate files for. If a value isn't provided, the folder name of the current working directory will be used.options:  -h, --help            show this help message and exit  -r [ROUTES ...], --routes [ROUTES ...]                        The routes to generate files for in addition to 'get' and 'post' routes.  -d DESTINATION, --destination DESTINATION                        The directory to save the generated files to. By default, uses the current working directory.&lt;/pre&gt;</longdescription>
</pkgmetadata>