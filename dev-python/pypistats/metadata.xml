<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pypistats[![PyPI version](https://img.shields.io/pypi/v/pypistats.svg?logo=pypi&amp;logoColor=FFE873)](https://pypi.org/project/pypistats/)[![Supported Python versions](https://img.shields.io/pypi/pyversions/pypistats.svg?logo=python&amp;logoColor=FFE873)](https://pypi.org/project/pypistats/)[![PyPI downloads](https://img.shields.io/pypi/dm/pypistats.svg)](https://pypistats.org/packages/pypistats)[![Azure Pipelines status](https://dev.azure.com/hugovk/hugovk/_apis/build/status/hugovk.pypistats?branchName=main)](https://dev.azure.com/hugovk/hugovk/_build?definitionId=1)[![GitHub Actions status](https://github.com/hugovk/pypistats/workflows/Test/badge.svg)](https://github.com/hugovk/pypistats/actions)[![codecov](https://codecov.io/gh/hugovk/pypistats/branch/main/graph/badge.svg)](https://codecov.io/gh/hugovk/pypistats)[![Licence](https://img.shields.io/github/license/hugovk/pypistats.svg)](LICENSE.txt)[![DOI](https://zenodo.org/badge/149862343.svg)](https://zenodo.org/badge/latestdoi/149862343)[![Code style: Black](https://img.shields.io/badge/code%20style-Black-000000.svg)](https://github.com/psf/black)Python interface to [PyPI Stats API](https://pypistats.org/api) to get aggregatedownload statistics on Python packages on the Python Package Index without having toexecute queries directly against Google BigQuery.Data is available for the [last 180 days](https://pypistats.org/about#data). (For longertime periods, [pypinfo](https://github.com/ofek/pypinfo) can help, you'll need an APIkey and get free quota.)## Installation### From PyPI```bashpython3 -m pip install --upgrade pypistats```### From source```bashgit clone https://github.com/hugovk/pypistatscd pypistatspython3 -m pip install .```## Example command-line useRun `pypistats` with a subcommand (corresponding to[PyPI Stats endpoints](https://pypistats.org/api/#endpoints)), then options for thatsubcommand.Top-level help:&lt;!-- [[[cogfrom scripts.run_command import runrun(&quot;pypistats --help&quot;)]]] --&gt;```console$ pypistats --helpusage: pypistats [-h] [-V]                 {recent,overall,python_major,python_minor,system} ...positional arguments:  {recent,overall,python_major,python_minor,system}options:  -h, --help            show this help message and exit  -V, --version         show program's version number and exit```&lt;!-- [[[end]]] --&gt;Help for a subcommand:&lt;!-- [[[cog run(&quot;pypistats recent --help&quot;) ]]] --&gt;```console$ pypistats recent --helpusage: pypistats recent [-h] [-p {day,week,month}]                        [-f {html,json,pretty,md,markdown,rich,rst,tsv}] [-j]                        [-v]                        packageRetrieve the aggregate download quantities for the last day/week/monthpositional arguments:  packageoptions:  -h, --help            show this help message and exit  -p {day,week,month}, --period {day,week,month}  -f {html,json,pretty,md,markdown,rich,rst,tsv}, --format {html,json,pretty,md,markdown,rich,rst,tsv}                        The format of output (default: pretty)  -j, --json            Shortcut for &quot;-f json&quot; (default: False)  -v, --verbose         Print debug messages to stderr (default: False)```&lt;!-- [[[end]]] --&gt;Get recent downloads:&lt;!-- [[[cog run(&quot;pypistats recent pillow&quot;) ]]] --&gt;```console$ pypistats recent pillow┌───────────┬────────────┬────────────┐│  last_day │ last_month │  last_week │├───────────┼────────────┼────────────┤│ 1,740,674 │ 50,722,906 │ 11,471,253 │└───────────┴────────────┴────────────┘```&lt;!-- [[[end]]] --&gt;Help for another subcommand:&lt;!-- [[[cog run(&quot;pypistats python_minor --help&quot;) ]]] --&gt;```console$ pypistats python_minor --helpusage: pypistats python_minor [-h] [-V VERSION]                              [-f {html,json,pretty,md,markdown,rich,rst,tsv}]                              [-j] [-sd yyyy-mm[-dd]|name]                              [-ed yyyy-mm[-dd]|name] [-m yyyy-mm|name] [-l]                              [-t] [-d] [--monthly] [-c {yes,no,auto}] [-v]                              packageRetrieve the aggregate daily download time series by Python minor versionnumberpositional arguments:  packageoptions:  -h, --help            show this help message and exit  -V VERSION, --version VERSION                        eg. 2.7 or 3.6 (default: None)  -f {html,json,pretty,md,markdown,rich,rst,tsv}, --format {html,json,pretty,md,markdown,rich,rst,tsv}                        The format of output (default: pretty)  -j, --json            Shortcut for &quot;-f json&quot; (default: False)  -sd yyyy-mm[-dd]|name, --start-date yyyy-mm[-dd]|name                        Start date (default: None)  -ed yyyy-mm[-dd]|name, --end-date yyyy-mm[-dd]|name                        End date (default: None)  -m yyyy-mm|name, --month yyyy-mm|name                        Shortcut for -sd &amp; -ed for a single month (default:                        None)  -l, --last-month      Shortcut for -sd &amp; -ed for last month (default: False)  -t, --this-month      Shortcut for -sd for this month (default: False)  -d, --daily           Show daily downloads (default: False)  --monthly             Show monthly downloads (default: False)  -c {yes,no,auto}, --color {yes,no,auto}                        Color terminal output (default: auto)  -v, --verbose         Print debug messages to stderr (default: False)```&lt;!-- [[[end]]] --&gt;Get version downloads:&lt;!-- [[[cog run(&quot;pypistats python_minor pillow --last-month&quot;) ]]] --&gt;```console$ pypistats python_minor pillow --last-month┌──────────┬─────────┬────────────┐│ category │ percent │  downloads │├──────────┼─────────┼────────────┤│ 3.7      │  36.58% │ 18,620,128 ││ 3.8      │  22.17% │ 11,285,248 ││ 3.9      │  13.83% │  7,041,419 ││ 3.6      │  10.72% │  5,454,315 ││ null     │   7.39% │  3,761,767 ││ 3.10     │   6.41% │  3,263,885 ││ 3.11     │   1.16% │    589,792 ││ 2.7      │   0.89% │    451,041 ││ 3.5      │   0.83% │    422,741 ││ 3.12     │   0.01% │      3,089 ││ 3.4      │   0.00% │      2,483 ││ 3.3      │   0.00% │        251 ││ 3.2      │   0.00% │         95 ││ 2.6      │   0.00% │          1 ││ Total    │         │ 50,896,255 │└──────────┴─────────┴────────────┘Date range: 2022-11-01 - 2022-11-30```&lt;!-- [[[end]]] --&gt;You can format in Markdown, ready for pasting in GitHub issues and PRs:&lt;!-- [[[cog run(&quot;pypistats python_minor pillow --last-month --format md&quot;, with_console=False) ]]] --&gt;| category | percent |  downloads || :------- | ------: | ---------: || 3.7      |  36.58% | 18,620,128 || 3.8      |  22.17% | 11,285,248 || 3.9      |  13.83% |  7,041,419 || 3.6      |  10.72% |  5,454,315 || null     |   7.39% |  3,761,767 || 3.10     |   6.41% |  3,263,885 || 3.11     |   1.16% |    589,792 || 2.7      |   0.89% |    451,041 || 3.5      |   0.83% |    422,741 || 3.12     |   0.01% |      3,089 || 3.4      |   0.00% |      2,483 || 3.3      |   0.00% |        251 || 3.2      |   0.00% |         95 || 2.6      |   0.00% |          1 || Total    |         | 50,896,255 |Date range: 2022-11-01 - 2022-11-30&lt;!-- [[[end]]] --&gt;These are equivalent (in May 2019):```shpypistats python_major pip --last-monthpypistats python_major pip --month aprilpypistats python_major pip --month aprpypistats python_major pip --month 2019-04```And:```shpypistats python_major pip --start-date december --end-date januarypypistats python_major pip --start-date dec      --end-date janpypistats python_major pip --start-date 2018-12  --end-date 2019-01```## Example programmatic useReturn values are from the JSON responses documented in the API:https://pypistats.org/api/```pythonimport pypistatsfrom pprint import pprint# Call the APIprint(pypistats.recent(&quot;pillow&quot;))print(pypistats.recent(&quot;pillow&quot;, &quot;day&quot;, format=&quot;markdown&quot;))print(pypistats.recent(&quot;pillow&quot;, &quot;week&quot;, format=&quot;rst&quot;))print(pypistats.recent(&quot;pillow&quot;, &quot;month&quot;, format=&quot;html&quot;))pprint(pypistats.recent(&quot;pillow&quot;, &quot;week&quot;, format=&quot;json&quot;))print(pypistats.recent(&quot;pillow&quot;, &quot;day&quot;))print(pypistats.overall(&quot;pillow&quot;))print(pypistats.overall(&quot;pillow&quot;, mirrors=True, format=&quot;markdown&quot;))print(pypistats.overall(&quot;pillow&quot;, mirrors=False, format=&quot;rst&quot;))print(pypistats.overall(&quot;pillow&quot;, mirrors=True, format=&quot;html&quot;))pprint(pypistats.overall(&quot;pillow&quot;, mirrors=False, format=&quot;json&quot;))print(pypistats.python_major(&quot;pillow&quot;))print(pypistats.python_major(&quot;pillow&quot;, version=2, format=&quot;markdown&quot;))print(pypistats.python_major(&quot;pillow&quot;, version=3, format=&quot;rst&quot;))print(pypistats.python_major(&quot;pillow&quot;, version=&quot;2&quot;, format=&quot;html&quot;))pprint(pypistats.python_major(&quot;pillow&quot;, version=&quot;3&quot;, format=&quot;json&quot;))print(pypistats.python_minor(&quot;pillow&quot;))print(pypistats.python_minor(&quot;pillow&quot;, version=2.7, format=&quot;markdown&quot;))print(pypistats.python_minor(&quot;pillow&quot;, version=&quot;2.7&quot;, format=&quot;rst&quot;))print(pypistats.python_minor(&quot;pillow&quot;, version=3.7, format=&quot;html&quot;))pprint(pypistats.python_minor(&quot;pillow&quot;, version=&quot;3.7&quot;, format=&quot;json&quot;))print(pypistats.system(&quot;pillow&quot;))print(pypistats.system(&quot;pillow&quot;, os=&quot;darwin&quot;, format=&quot;markdown&quot;))print(pypistats.system(&quot;pillow&quot;, os=&quot;linux&quot;, format=&quot;rst&quot;))print(pypistats.system(&quot;pillow&quot;, os=&quot;darwin&quot;, format=&quot;html&quot;))pprint(pypistats.system(&quot;pillow&quot;, os=&quot;linux&quot;, format=&quot;json&quot;))```### NumPy and pandasTo use with either NumPy or pandas, make sure they are first installed, or:```bashpip install --upgrade &quot;pypistats[numpy]&quot;pip install --upgrade &quot;pypistats[pandas]&quot;pip install --upgrade &quot;pypistats[numpy,pandas]&quot;```Return data in a NumPy array for further processing:```pythonimport pypistatsnumpy_array = pypistats.overall(&quot;pyvista&quot;, total=True, format=&quot;numpy&quot;)print(type(numpy_array))# &lt;class 'numpy.ndarray'&gt;print(numpy_array)# [['with_mirrors' '2019-09-20' '2.23%' 1204]#  ['without_mirrors' '2019-09-20' '2.08%' 1122]#  ['with_mirrors' '2019-09-19' '0.92%' 496]#  ...#  ['with_mirrors' '2019-10-26' '0.02%' 13]#  ['without_mirrors' '2019-10-26' '0.02%' 12]#  ['Total' None None 54041]]```Or in a pandas DataFrame:```pythonimport pypistatspandas_dataframe = pypistats.overall(&quot;pyvista&quot;, total=True, format=&quot;pandas&quot;)print(type(pandas_dataframe))# &lt;class 'pandas.core.frame.DataFrame'&gt;print(pandas_dataframe)#             category        date percent  downloads# 0       with_mirrors  2019-09-20   2.23%       1204# 1    without_mirrors  2019-09-20   2.08%       1122# 2       with_mirrors  2019-09-19   0.92%        496# 3       with_mirrors  2019-08-22   0.90%        489# 4    without_mirrors  2019-09-19   0.86%        466# ..               ...         ...     ...        ...# 354  without_mirrors  2019-11-03   0.03%         15# 355  without_mirrors  2019-11-16   0.03%         15# 356     with_mirrors  2019-10-26   0.02%         13# 357  without_mirrors  2019-10-26   0.02%         12# 358            Total        None    None      54041## [359 rows x 4 columns]```For example, create charts with pandas:```python# Show overall downloads over time, excluding mirrorsimport pypistatsdata = pypistats.overall(&quot;pillow&quot;, total=True, format=&quot;pandas&quot;)data = data.groupby(&quot;category&quot;).get_group(&quot;without_mirrors&quot;).sort_values(&quot;date&quot;)chart = data.plot(x=&quot;date&quot;, y=&quot;downloads&quot;, figsize=(10, 2))chart.figure.show()chart.figure.savefig(&quot;overall.png&quot;)  # alternatively```![overall.png](example/overall.png)```python# Show Python 3 downloads over timeimport pypistatsdata = pypistats.python_major(&quot;pillow&quot;, total=True, format=&quot;pandas&quot;)data = data.groupby(&quot;category&quot;).get_group(3).sort_values(&quot;date&quot;)chart = data.plot(x=&quot;date&quot;, y=&quot;downloads&quot;, figsize=(10, 2))chart.figure.show()chart.figure.savefig(&quot;python3.png&quot;)  # alternatively```![python3.png](example/python3.png)## See alsoRelated projects- https://github.com/ofek/pypinfo- https://github.com/scivision/pypistats-plots</longdescription>
</pkgmetadata>