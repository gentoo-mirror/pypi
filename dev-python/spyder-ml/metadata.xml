<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;Spyder-HTML&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.shields.io/static/v1?label=STATUS&amp;message=EM%20DESENVOLVIMENTO&amp;color=GREEN&amp;style=for-the-badge&quot;/&gt;&lt;img src=&quot;http://img.shields.io/static/v1?label=VERSION&amp;message=2.1.4&amp;color=blue&amp;style=for-the-badge&quot;/&gt;&lt;img src=&quot;https://img.shields.io/github/license/accessmaker/Spyder-ml?style=for-the-badge&quot;/&gt;&lt;/p&gt;A tool made to facilitate the analysis of html code.&lt;h2&gt;INSTALL(git clone):&lt;/h2&gt;git clone &lt;https://github.com/accessmaker/Spyder-ml&gt;python setup.py install&lt;h2&gt;INSTALL(PIP):&lt;/h2&gt;pip install spyder-ml&lt;h2&gt;USAGE:&lt;/h2&gt;spyderml       [-h] [-t TARGET] [--tr TR] [--update]               [--tags TAGS | --comments | --attribs ATTRIBS | --getjs | --techs | --geturls | --html | --jsr]               [-o OUTPUT] [-C COOKIE] [-A AGENT] [-hf HEADERSFILE] [-S]               [-w WORKERS] [--domain DOMAIN] [--cache] [--proxy PROXY]               [-D DATA [DATA ...]]A tool made to facilitate the analysis of html code.options:&lt;br&gt;  -h, --help            show this help message and exit&lt;br&gt;  -t TARGET, --target TARGET&lt;br&gt;                        Parameter that defines the target URL&lt;                        &lt;http://example.com/index.html&gt; &lt;br&gt;  --tr TR               Type of request(POST or GET(Default)).  --update              Flag responsible for updating the database.&lt;br&gt;  --tags TAGS           Flag that defines which tags the program will bring&lt;br&gt;  --comments            Flag that brings the comments&lt;br&gt;  --attribs ATTRIBS     Flag that defines which attributes the application                        will look for.&lt;br&gt;  --getjs               Flag that brings all JS files from the page.&lt;br&gt;  --techs               Flag trying to discover the technologies of the page.&lt;br&gt;  --geturls             This flag takes all the target's urls and tries to                        access them.&lt;br&gt;  --html                This Flag results in all the page's html code.&lt;br&gt;  --jsr                 Makes a request that returns a JSON.&lt;br&gt;  -o OUTPUT, --output OUTPUT                        Flag that defines in which file the command output                        will be saved.&lt;br&gt;  -C COOKIE, --cookie COOKIE                        Cookie to send with the request&lt;br&gt;  -A AGENT, --agent AGENT                        User-Agent to send with the request&lt;br&gt;  -hf HEADERSFILE, --headersfile HEADERSFILE                        Parameter that passes an HTTP request header file to                        be scanned.&lt;br&gt;  -S, --spider          flag to run spider&lt;br&gt;  -w WORKERS, --workers WORKERS                        Defines the number of workers.&lt;br&gt;  --domain DOMAIN       Defines the domain of the web crawler.&lt;br&gt;  --cache               Defines whether to create cache or not (default:                        false).&lt;br&gt;  --proxy PROXY         Defines the proxy that will be used (Which can be                        passed tor or burpsuite to use these two default                        proxies).&lt;br&gt;  -D DATA [DATA ...], --data DATA [DATA ...]                        Data to send with the request in format key1:value1                        key2:value2 key3:value3...&lt;br&gt;'Functionality': It searches the html document for specific things</longdescription>
</pkgmetadata>