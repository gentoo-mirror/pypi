<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ProdotA new way to deal with dictionaries and lists in python.Treat data like classes, or by reading/writing data with json paths```Python&gt;&gt;&gt; from prodot import ProObject&gt;&gt;&gt; my_obj = ProObject({'foo':{'bar':['eggs']}})&gt;&gt;&gt; my_obj.foo.bar.n1.get_value()'eggs'&gt;&gt;&gt; my_obj['$.foo.bar.[0]'].get_value()'eggs```# Getting started## install```pip install prodot```## UsageImport the pro object from the prodot library. You can create a new empty dictionary, or start with a filled one```Python# No parameters instances an empty dictionary&gt;&gt;&gt; my_new_obj = ProObject() # The pro object can be initialized with a dictionary&gt;&gt;&gt; my_dict_obj = ProObject({&quot;foo&quot;:[&quot;bar&quot;,&quot;eggs&quot;]})# The pro object can also initialize with a list&gt;&gt;&gt; my_list_obj = ProObject([ [1,2,3], [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;], [{&quot;foo&quot;:&quot;bar&quot;}, {&quot;bar&quot;:&quot;eggs&quot;}] ])```### Dot notation usageBy using the pro-object you can use the dictionary as a class```Python&gt;&gt;&gt; my_json = {...     &quot;userData&quot;: {...         &quot;name&quot;: &quot;John&quot;,...         &quot;age&quot;: &quot;38&quot;,...         &quot;shoppingCart&quot;:[...             {&quot;cellphone&quot;: 999.99},...             {&quot;notebook&quot;: 2999.99},...             {&quot;wireless keyboard&quot;: 299.99}...         ]...     }... }&gt;&gt;&gt; my_new_obj = ProObject(my_json)&gt;&gt;&gt; shoppingCart = my_new_obj.userData.shoppingCart```The ProObject will return another instance of the ProObject with the main_object attribute as being the selected path.```Python&gt;&gt;&gt; type(shoppingCart)&lt;class 'prodot.pro_object.ProObject'&gt;```To get the raw value of the object, you can use the `.get_value()` function.```Python&gt;&gt;&gt; shoppingCart.get_value()[{&quot;cellphone&quot;: 999.99}, {&quot;notebook&quot;: 2999.99}, {&quot;wireless keyboard&quot;: 299.99}]# or by using the get_value directly at the path&gt;&gt;&gt; my_new_obj.userData.shoppingCart.get_value()[{&quot;cellphone&quot;: 999.99}, {&quot;notebook&quot;: 2999.99}, {&quot;wireless keyboard&quot;: 299.99}]&gt;&gt;&gt; type(shoppingCart.get_value())&lt;class 'dict'&gt;```You can also add new information to the instancied object```Python# n3 means list index 3 (will be added as 4th item)&gt;&gt;&gt; my_new_obj.userData.shoppingCart.n3 = {&quot;monitor&quot;: 699.99}&gt;&gt;&gt; my_new_obj.userData.shoppingCart.get_value()[{&quot;cellphone&quot;: 999.99}, {&quot;notebook&quot;: 2999.99}, {&quot;wireless keyboard&quot;: 299.99}, {&quot;monitor&quot;: 399.99}]```Python doesn't accept list indexes to be used as a class attribute. For solve this problem, list indexes start with the `n` letter (like n0, n1, ...)### Json path usageIf you prefere or need to use json paths, it is possible to write and retrieve information using json path strings.```Python&gt;&gt;&gt; my_new_obj['$.userData.shoppingCart[4]'] = {'FunStation 6 Series T':'699,99'}&gt;&gt;&gt; my_new_obj['$.userData.shoppingCart'].get_value()[{&quot;cellphone&quot;: 999.99}, {&quot;notebook&quot;: 2999.99}, {&quot;wireless keyboard&quot;: 299.99}, {&quot;monitor&quot;: 399.99}, {'FunStation 6 Series T':'699,99'}]```Note that by using a json path string, list indexes must not have `n` as their first value.You can view all possible json_paths from object by using the `get_all_paths` attribute.```Python&gt;&gt;&gt; my_new_obj.get_all_paths()&lt;generator object PathObject.all_paths_from_main_object at 0x7f6a012b5c80&gt;&gt;&gt;&gt; list(my_new_obj.get_all_paths())['.userData', '.userData.name', '.userData.age', '.userData.shoppingCart', '.userData.shoppingCart[0]', '.userData.shoppingCart[0].cellphone', '.userData.shoppingCart[1]', '.userData.shoppingCart[1].notebook', '.userData.shoppingCart[2]', '.userData.shoppingCart[2].wireless keyboard', '.userData.shoppingCart[3]', '.userData.shoppingCart[3].monitor', '.userData.shoppingCart[4]', '.userData.shoppingCart[4].FunStation 6 Series T']```</longdescription>
</pkgmetadata>