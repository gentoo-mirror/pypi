<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># basedtypingA collection of helpers and utilities to aid at dealing with types, both at static analysis and at runtime.It's recommended to use [`basedmypy`](https://github.com/kotlinisland/basedmypy) when using `basedtyping`,as there are specialised adaptations made to `basedmypy` to support some functionality of this package.## Features### `ReifiedGeneric`A ``Generic`` where the type parameters are available at runtime and usable in ``isinstance`` and ``issubclass`` checks.For example:```pyclass Foo(ReifiedGeneric[T]):   def hi(self):       print(&quot;Hi :)&quot;)def foo(it: object):    # no error, as the class is reified and can be checked at runtime    if isinstance(it, Foo[int]):         print(&quot;wooow ðŸ˜³&quot;)```### `assert_type`A type-time function used for testing types:```pyfrom typing import TYPE_CHECKINGif TYPE_CHECKING:  assert_type[int](foo) # type error if `foo` isn't an `int````### And many more!</longdescription>
</pkgmetadata>