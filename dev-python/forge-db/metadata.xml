<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># forge-dbUse Postgres for local Django development via Docker.## InstallationFirst, install `forge-db` from [PyPI](https://pypi.org/project/forge-db/):```shpip install forge-db```Now you will have access to the `db` command:```shforge db```You will need to have a `DATABASE_URL` environment variable,which is where the database name, username, password, and port are parsed from:```sh# .envDATABASE_URL=postgres://postgres:postgres@localhost:54321/postgres```You can use a `POSTGRES_VERSION` environment variable to override the default Postgres version (13):```sh# .envPOSTGRES_VERSION=12```In most cases you will want to use [`dj_database_url`](https://github.com/kennethreitz/dj-database-url) in your `settings.py` to easily set the same settings (works in most deployment environments too):```python# settings.pyimport dj_databse_urlDATABASES = {    &quot;default&quot;: dj_database_url.parse(        environ[&quot;DATABASE_URL&quot;], conn_max_age=environ.get(&quot;DATABASE_CONN_MAX_AGE&quot;, 600)    )}```You will also notice a new `.forge` directory in your project root.This contains your local database files and should be added to `.gitignore`.## UsageIf you use [`forge-work`](https://github.com/forgepackages/forge-work),then most of the time you won't need to interact with `forge-db` directly.But it has a few commands that come in handy.- `forge db start` - starts a new database container and runs it in the background (use `--logs` to foreground it or connect to the logs)- `forge db stop` - stop the database container- `forge db reset` - drops and creates a new database- `forge db pull` - pulls the latest database backup from Heroku and imports it into the local databaseIn the end, the database container is like any other Docker container.You can use the standard Docker commands and tools to interact with it when needed.## SnapshotsThe `forge db snapshot` command manages local copies of your development database.This is useful for testing migrations or switching between git branches that have different db states.Snapshots are simply additional Postgres databases that are created and dropped as needed (`createdb {snapshot_name} -T postgres`).</longdescription>
</pkgmetadata>