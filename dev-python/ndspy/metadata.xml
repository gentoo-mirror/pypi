<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ndspy=====[![Discord](https://img.shields.io/discord/534221996230180884.svg?logo=discord&amp;logoColor=white&amp;colorB=7289da)](https://discord.gg/RQhxAxw)[![Documentation](https://img.shields.io/badge/documentation-Read%20the%20Docs-brightgreen.svg?logo=read%20the%20docs&amp;logoColor=white)](http://ndspy.readthedocs.io/)[![PyPI](https://img.shields.io/pypi/v/ndspy.svg?logo=python&amp;logoColor=white)](https://pypi.org/project/ndspy/)[![License: GNU GPL 3.0](https://img.shields.io/github/license/RoadrunnerWMC/ndspy.svg?logo=gnu&amp;logoColor=white)](https://www.gnu.org/licenses/gpl-3.0)**ndspy** (&quot;en-dee-ESS-pie&quot;) is a Python library and suite of command-linetools that can help you read, modify and create many types of files used inNintendo DS games.ndspy follows a few key design principles:-   **Accuracy**: ndspy should be able to open and resave any supported file    with byte-for-byte accuracy if it's in its canonical format.-   **Flexibility**: ndspy should be able to read any valid file in a format it    supports. In cases where there's a high chance it will be unable to fully    interpret some especially complex part of a file, it should still be useful    for editing the other parts.-   **Semantic**: ndspy's APIs should closely match the semantics of file    structures while hiding their binary-level details.ndspy provides both a Python API and a set of simple command-line tools thatmake use of it. The command-line tools let you convert files to and from binaryformats without having to write any Python code yourself. The API is suitablefor use in applications written in Python, and in scripts to do more complextasks than the command-line tools are capable of.As ndspy is written in pure Python, it is cross-platform and should run on allplatforms Python supports. Note that Python doesn't support the Nintendo DSitself; ndspy is intended to be used on your PC.Interested? Read on to see some examples, or check the [APIReference](https://ndspy.readthedocs.io/en/latest/api/index.html) to see thedocumentation for a specific module. When you're ready to install, head over tothe [Installation](#installation) section!A few examples of ndspy in action---------------------------------Create a *BMG* file containing message strings:```python&gt;&gt;&gt; import ndspy.bmg&gt;&gt;&gt; message1 = ndspy.bmg.Message(b'', ['Open your eyes...'])&gt;&gt;&gt; message2 = ndspy.bmg.Message(b'', ['Wake up, Link...'])&gt;&gt;&gt; bmg = ndspy.bmg.BMG.fromMessages([message1, message2])&gt;&gt;&gt; bmg.save()b'MESGbmg1\xa0\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00INF1 \x00\x00\x00\x02\x00\x04\x00\x00\x00\x00\x00\x02\x00\x00\x00&amp;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00DAT1`\x00\x00\x00\x00\x00O\x00p\x00e\x00n\x00 \x00y\x00o\x00u\x00r\x00 \x00e\x00y\x00e\x00s\x00.\x00.\x00.\x00\x00\x00W\x00a\x00k\x00e\x00 \x00u\x00p\x00,\x00 \x00L\x00i\x00n\x00k\x00.\x00.\x00.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'&gt;&gt;&gt;```Change all notes in a *SSEQ* sequenced music file to middle C, similar to [thissong](https://youtu.be/cSAp9sBzPbc):```python&gt;&gt;&gt; import ndspy.soundSequence&gt;&gt;&gt; song = ndspy.soundSequence.SSEQ.fromFile('never-gonna-give-you-up.sseq')&gt;&gt;&gt; song.parse()&gt;&gt;&gt; for event in song.events:...     if isinstance(event, ndspy.soundSequence.NoteSequenceEvent):...         event.pitch = 60...&gt;&gt;&gt; song.saveToFile('never-gonna-give-you-up-but-all-the-notes-are-c.sseq')&gt;&gt;&gt;```Compress and decompress data using the *LZ10* compression format:```python&gt;&gt;&gt; import ndspy.lz10&gt;&gt;&gt; compressed = ndspy.lz10.compress(b'This is some data to compress')&gt;&gt;&gt; compressedb'\x10\x1d\x00\x00\x04This \x00\x02so\x00me data \x00to compr\x00ess\x00\x00\x00\x00\x00'&gt;&gt;&gt; ndspy.lz10.decompress(compressed)b'This is some data to compress'&gt;&gt;&gt;```Search for all files starting with a particular byte sequence in a ROM:```python&gt;&gt;&gt; import ndspy.rom&gt;&gt;&gt; rom = ndspy.rom.NintendoDSRom.fromFile('nsmb.nds')&gt;&gt;&gt; for i, file in enumerate(rom.files):...     if file.startswith(b'BMD0'):...         print(rom.filenames[i] + ' is a NSBMD model')...demo/end_kp.nsbmd is a NSBMD modeldemo/staffroll.nsbmd is a NSBMD modeldemo/staffroll_back.nsbmd is a NSBMD modelenemy/A_jiku.nsbmd is a NSBMD modelenemy/all_goal_flag.nsbmd is a NSBMD model...map/world7.nsbmd is a NSBMD modelmap/world8.nsbmd is a NSBMD model&gt;&gt;&gt;```Misconceptions--------------Still a little confused about what exactly ndspy is or what it's capable of?This section will try to answer some questions you may have.-   ndspy is a *library*, not a *program.* To use ndspy, you have to write your    own Python code; ndspy is essentially a tool your code can use. This may    sound daunting -- especially if you're not very familiar with Python -- but    the    [tutorials](https://ndspy.readthedocs.io/en/latest/tutorials/index.html)    walk you through this process step-by-step for some common tasks. In the    future, I plan to add some command-line and maybe even GUI tools powered by    ndspy, but until then, this is how you use it.-   ndspy runs on your PC, not on the Nintendo DS itself. You use it to create    and modify game files, which can then be run on the console. DS games have    to be written in a compiled language such as C or C++ to have any hope of    being efficient; Python will never be a serious option there,    unfortunately.-   ndspy doesn't support every type of file used in every DS game. In fact,    for any given game, it's likely that the majority of the game's files    *won't* be supported by ndspy. There's a huge amount of variety in video    game file formats, and it would be impossible to support them all. ndspy    focuses on file formats used in many games, especially first-party ones.    Support for formats that are specific to a particular game would best    belong in a separate Python library instead.    That said, certain parts of ndspy (such as its support for ROM files and    raw texture data) have to do with the console's hardware rather than its    software, and thus should be relevant to most or all games.&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;Installation------------ndspy requires Python 3.6 or newer to run. CPython (the referenceimplementation of Python) and PyPy are both supported. Python 2, though, is notsupported at all.The easiest way to get the latest stable release of ndspy is through PyPI usingpip.pip is a command-line application, so you'll need to use the Windows commandprompt or bash to do this. The exact command you need to enter depends on youroperating system and the settings you chose when you installed Python. One ofthe following possibilities will probably work for you, though:    pip install ndspy    python3 -m pip install ndspy    py -3 -m pip install ndspyIf you want the very latest version of ndspy including features and bugfixesnot yet in any official release, you can also download the code from the[GitHub repository](https://github.com/RoadrunnerWMC/ndspy) and install itmanually. Note that [crcmod](https://pypi.org/project/crcmod/) is a requireddependency.Documentation-------------[ndspy's documentation is hosted on Read theDocs](https://ndspy.readthedocs.io/en/latest/index.html), and the documentationsource code can be found in the ``docs/`` folder in this repository. Inaddition to the [APIreference](https://ndspy.readthedocs.io/en/latest/api/index.html), there arealso[examples](https://ndspy.readthedocs.io/en/latest/index.html#a-few-examples-of-ndspy-in-action)and [tutorials](https://ndspy.readthedocs.io/en/latest/tutorials/index.html) tohelp you out!Support-------I spent a long time writing the documentation for ndspy, so first pleasedouble-check that your question isn't already answered in the [APIreference](https://ndspy.readthedocs.io/en/latest/api/index.html) or[Tutorials](https://ndspy.readthedocs.io/en/latest/tutorials/index.html)sections in the documentation.If that doesn't help, you can ask me (RoadrunnerWMC) your questions via [thendspy Discord server](https://discord.gg/RQhxAxw). I'll try to get back toyou as quickly as I can!If you think you've found a bug in ndspy, please [file an issue onGitHub](https://github.com/RoadrunnerWMC/ndspy/issues/new). Thanks!Versioning----------ndspy follows [semantic versioning](https://semver.org/) to the best of myability. If a tool claims to work with ndspy 1.0.2, it should also work withndspy 1.2.0, but not necessarily 2.0.0. (Please note that not all of thoseversion numbers actually exist!)Undocumented modules are considered exempt from semantic versioning, and aresubject to drastic changes at any time. This is also mentioned in the[UndocumentedAPIs](https://ndspy.readthedocs.io/en/latest/api/index.html#undocumented-apis)section of the documentation.</longdescription>
</pkgmetadata>