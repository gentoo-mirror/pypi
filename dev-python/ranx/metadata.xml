<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;https://repository-images.githubusercontent.com/268892956/750228ec-f3f2-465d-9c17-420c688ba2bc&quot;&gt;&lt;/div&gt;&lt;p align=&quot;center&quot;&gt;  &lt;!-- Python --&gt;  &lt;a href=&quot;https://www.python.org&quot; alt=&quot;Python&quot;&gt;&lt;img src=&quot;https://badges.aleen42.com/src/python.svg&quot;&gt;&lt;/a&gt;  &lt;!-- Version --&gt;  &lt;a href=&quot;https://pypi.org/project/ranx/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/ranx?color=light-green&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;  &lt;!-- Downloads --&gt;  &lt;a href=&quot;https://pepy.tech/project/ranx&quot;&gt;&lt;img src=&quot;https://static.pepy.tech/personalized-badge/ranx?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=downloads&quot; alt=&quot;Download counter&quot;&gt;&lt;/a&gt;  &lt;!-- Docs --&gt;  &lt;a href=&quot;https://amenra.github.io/ranx&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-passing-&lt;COLOR&gt;.svg&quot; alt=&quot;Documentation Status&quot;&gt;&lt;/a&gt;  &lt;!-- Black --&gt;  &lt;a href=&quot;https://github.com/psf/black&quot; alt=&quot;Code style: black&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;  &lt;!-- License --&gt;  &lt;a href=&quot;https://lbesson.mit-license.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt;  &lt;!-- Google Colab --&gt;  &lt;a href=&quot;https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/1_overview.ipynb&quot;&gt;&lt;img src=&quot;https://colab.research.google.com/assets/colab-badge.svg&quot; alt=&quot;Open in Colab&quot;/&gt;&lt;/a&gt;&lt;/p&gt;## üî• News- üìå [October 10, 2022] I released a new sharing platform for pre-computed runs called [ranxhub](https://amenra.github.io/ranxhub), click [here](https://amenra.github.io/ranxhub) to learn more!- [November 2, 2022] `ranx` `0.3.3` is out!  This release adds support for changing Qrels relevance level, i.e, the minimum relevance judgement score to consider a document to be relevant.  You can now define metric-wise relevance levels by appending `-l&lt;num&gt;` to metric names (e.g., `evaluate(qrels, run, [&quot;map@100-l2&quot;, &quot;ndcg-l3])`), or setting the Qrels relevance level qrels-wise as `qrels.set_relevance_level(2)`.- [October 10, 2022] `ranx` `0.3` is out!  This release adds integration with [ranxhub](https://amenra.github.io/ranxhub), a new sharing platform for pre-computed runs.  Click [here](#off-the-shelf-runs) for a quick example.  Click [here](https://amenra.github.io/ranxhub) to learn how to share your own runs with the community and lead by example!## ‚ö°Ô∏è Introduction[ranx](https://github.com/AmenRa/ranx) ([ra≈ãks]) is a library of fast ranking evaluation metrics implemented in [Python](https://en.wikipedia.org/wiki/Python_(programming_language)), leveraging [Numba](https://github.com/numba/numba) for high-speed [vector operations](https://en.wikipedia.org/wiki/Automatic_vectorization) and [automatic parallelization](https://en.wikipedia.org/wiki/Automatic_parallelization).It offers a user-friendly interface to evaluate and compare [Information Retrieval](https://en.wikipedia.org/wiki/Information_retrieval) and [Recommender Systems](https://en.wikipedia.org/wiki/Recommender_system).[ranx](https://github.com/AmenRa/ranx) allows you to perform statistical tests and export [LaTeX](https://en.wikipedia.org/wiki/LaTeX) tables for your scientific publications.Moreover, [ranx](https://github.com/AmenRa/ranx) provides several [fusion algorithms](https://amenra.github.io/ranx/fusion) and [normalization strategies](https://amenra.github.io/ranx/normalization), and an automatic [fusion optimization](https://amenra.github.io/ranx/fusion/#optimize-fusion) functionality.[ranx](https://github.com/AmenRa/ranx) was featured in [ECIR 2022](https://ecir2022.org) and [CIKM 2022](https://www.cikm2022.org).  If you use [ranx](https://github.com/AmenRa/ranx) to evaluate results or conducting experiments involving fusion for your scientific publication, please consider citing it: [evaluation bibtex](https://dblp.org/rec/conf/ecir/Bassani22.html?view=bibtex), [fusion bibtex](https://dblp.org/rec/conf/cikm/BassaniR22.html?view=bibtex).For a quick overview, follow the [Usage](#-usage) section.For a in-depth overview, follow the [Examples](#-examples) section.## ‚ú® Features### Metrics* [Hits](https://amenra.github.io/ranx/metrics/#hits)* [Hit Rate](https://amenra.github.io/ranx/metrics/#hit-rate-success)* [Precision](https://amenra.github.io/ranx/metrics/#precision)* [Recall](https://amenra.github.io/ranx/metrics/#recall)* [F1](https://amenra.github.io/ranx/metrics/#f1)* [r-Precision](https://amenra.github.io/ranx/metrics/#r-precision)* [Bpref](https://amenra.github.io/ranx/metrics/#bpref)* [Rank-biased Precision (RBP)](https://amenra.github.io/ranx/metrics/#rank-biased-precision)* [Mean Reciprocal Rank (MRR)](https://amenra.github.io/ranx/metrics/#mean-reciprocal-rank)* [Mean Average Precision (MAP)](https://amenra.github.io/ranx/metrics/#mean-average-precision)* [Normalized Discounted Cumulative Gain (NDCG)](https://amenra.github.io/ranx/metrics/#ndcg)The metrics have been tested against [TREC Eval](https://github.com/usnistgov/trec_eval) for correctness.### Statistical Tests* [Paired Student's t-Test](https://www.itl.nist.gov/div898/software/dataplot/refman1/auxillar/t_test.htm) (default)* [Fisher's Randomization Test](https://www.itl.nist.gov/div898/software/dataplot/refman1/auxillar/fishrand.htm)* [Tukey's HSD Test](https://www.itl.nist.gov/div898/handbook/prc/section4/prc471.htm)Please, refer to [Smucker et al.](https://dl.acm.org/doi/10.1145/1321440.1321528), [Carterette](https://dl.acm.org/doi/10.1145/2094072.2094076), and [Fuhr](http://www.sigir.org/wp-content/uploads/2018/01/p032.pdf) for additional information on statistical tests for Information Retrieval.### Off-the-shelf QrelsYou can load qrels from [ir-datasets](https://ir-datasets.com) as simply as:```pythonqrels = Qrels.from_ir_datasets(&quot;msmarco-document/dev&quot;)```A full list of the available qrels is provided [here](https://ir-datasets.com).### Off-the-shelf RunsYou can load runs from [ranxhub](https://amenra.github.io/ranxhub/) as simply as:```pythonrun = Run.from_ranxhub(&quot;run-id&quot;)```A full list of the available runs is provided [here](https://amenra.github.io/ranxhub//browse).### Fusion Algorithms| **Name**                                                 | **Name**                                                   | **Name**                                                                | **Name**                                                     | **Name**                                                                       || -------------------------------------------------------- | ---------------------------------------------------------- | ----------------------------------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------------------------ || [CombMIN](https://amenra.github.io/ranx/fusion/#combmin) | [CombMNZ](https://amenra.github.io/ranx/fusion/#combmnz)   | [RRF](https://amenra.github.io/ranx/fusion/#reciprocal-rank-fusion-rrf) | [MAPFuse](https://amenra.github.io/ranx/fusion/#mapfuse)     | [BordaFuse](https://amenra.github.io/ranx/fusion/#bordafuse)                   || [CombMED](https://amenra.github.io/ranx/fusion/#combmed) | [CombGMNZ](https://amenra.github.io/ranx/fusion/#combgmnz) | [RBC](https://amenra.github.io/ranx/fusion/#rank-biased-centroids-rbc)  | [PosFuse](https://amenra.github.io/ranx/fusion/#posfuse)     | [Weighted BordaFuse](https://amenra.github.io/ranx/fusion/#weighted-bordafuse) || [CombANZ](https://amenra.github.io/ranx/fusion/#combanz) | [ISR](https://amenra.github.io/ranx/fusion/#isr)           | [WMNZ](https://amenra.github.io/ranx/fusion/#wmnz)                      | [ProbFuse](https://amenra.github.io/ranx/fusion/#probfuse)   | [Condorcet](https://amenra.github.io/ranx/fusion/#condorcet)                   || [CombMAX](https://amenra.github.io/ranx/fusion/#combmax) | [Log_ISR](https://amenra.github.io/ranx/fusion/#log_isr)   | [Mixed](https://amenra.github.io/ranx/fusion/#mixed)                    | [SegFuse](https://amenra.github.io/ranx/fusion/#segfuse)     | [Weighted Condorcet](https://amenra.github.io/ranx/fusion/#weighted-condorcet) || [CombSUM](https://amenra.github.io/ranx/fusion/#combsum) | [LogN_ISR](https://amenra.github.io/ranx/fusion/#logn_isr) | [BayesFuse](https://amenra.github.io/ranx/fusion/#bayesfuse)            | [SlideFuse](https://amenra.github.io/ranx/fusion/#slidefuse) | [Weighted Sum](https://amenra.github.io/ranx/fusion/#wighted-sum)              |Please, refer to the [documentation](https://amenra.github.io/ranx/fusion) for further details.### Normalization Strategies* [Min-Max Norm](https://amenra.github.io/ranx/normalization/#min-max-norm) * [Max Norm](https://amenra.github.io/ranx/normalization/#sum-norm)         * [Sum Norm](https://amenra.github.io/ranx/normalization/#rank-norm)        * [ZMUV Norm](https://amenra.github.io/ranx/normalization/#max-norm)   * [Rank Norm](https://amenra.github.io/ranx/normalization/#zmuv-norm)  * [Borda Norm](https://amenra.github.io/ranx/normalization/#borda-norm)Please, refer to the [documentation](https://amenra.github.io/ranx/fusion) for further details.## üîå Requirements```bashpython&gt;=3.8```As of `v.0.3.5`, [ranx](https://github.com/AmenRa/ranx) requires `python&gt;=3.8`.## üíæ Installation ```bashpip install ranx```## üí° Usage### Create Qrels and Run```pythonfrom ranx import Qrels, Runqrels_dict = { &quot;q_1&quot;: { &quot;d_12&quot;: 5, &quot;d_25&quot;: 3 },               &quot;q_2&quot;: { &quot;d_11&quot;: 6, &quot;d_22&quot;: 1 } }run_dict = { &quot;q_1&quot;: { &quot;d_12&quot;: 0.9, &quot;d_23&quot;: 0.8, &quot;d_25&quot;: 0.7,                      &quot;d_36&quot;: 0.6, &quot;d_32&quot;: 0.5, &quot;d_35&quot;: 0.4  },             &quot;q_2&quot;: { &quot;d_12&quot;: 0.9, &quot;d_11&quot;: 0.8, &quot;d_25&quot;: 0.7,                      &quot;d_36&quot;: 0.6, &quot;d_22&quot;: 0.5, &quot;d_35&quot;: 0.4  } }qrels = Qrels(qrels_dict)run = Run(run_dict)```### Evaluate```pythonfrom ranx import evaluate# Compute score for a single metricevaluate(qrels, run, &quot;ndcg@5&quot;)&gt;&gt;&gt; 0.7861# Compute scores for multiple metrics at onceevaluate(qrels, run, [&quot;map@5&quot;, &quot;mrr&quot;])&gt;&gt;&gt; {&quot;map@5&quot;: 0.6416, &quot;mrr&quot;: 0.75}```### Compare```pythonfrom ranx import compare# Compare different runs and perform Two-sided Paired Student's t-Testreport = compare(    qrels=qrels,    runs=[run_1, run_2, run_3, run_4, run_5],    metrics=[&quot;map@100&quot;, &quot;mrr@100&quot;, &quot;ndcg@10&quot;],    max_p=0.01  # P-value threshold)```Output:```pythonprint(report)``````#    Model    MAP@100    MRR@100    NDCG@10---  -------  --------   --------   ---------a    model_1  0.320·µá     0.320·µá     0.368·µá·∂úb    model_2  0.233      0.234      0.239c    model_3  0.308·µá     0.309·µá     0.330·µád    model_4  0.366·µÉ·µá·∂ú   0.367·µÉ·µá·∂ú   0.408·µÉ·µá·∂úe    model_5  0.405·µÉ·µá·∂ú·µà  0.406·µÉ·µá·∂ú·µà  0.451·µÉ·µá·∂ú·µà```### Fusion```pythonfrom ranx import fuse, optimize_fusionbest_params = optimize_fusion(    qrels=train_qrels,    runs=[train_run_1, train_run_2, train_run_3],    norm=&quot;min-max&quot;,     # The norm. to apply before fusion    method=&quot;wsum&quot;,      # The fusion algorithm to use (Weighted Sum)    metric=&quot;ndcg@100&quot;,  # The metric to maximize)combined_test_run = fuse(    runs=[test_run_1, test_run_2, test_run_3],      norm=&quot;min-max&quot;,           method=&quot;wsum&quot;,            params=best_params,)```## üìñ Examples| Name                                                             | Link                                                                                                                                                                                   || ---------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- || Overview                                                         | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/1_overview.ipynb)              || Qrels and Run                                                    | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/2_qrels_and_run.ipynb)         || Evaluation                                                       | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/3_evaluation.ipynb)            || Comparison and Report                                            | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/4_comparison_and_report.ipynb) || Fusion                                                           | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/5_fusion.ipynb)                || Share your runs with [ranxhub](https://amenra.github.io/ranxhub) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AmenRa/ranx/blob/master/notebooks/6_ranxhub.ipynb)               |## üìö DocumentationBrowse the [documentation](https://amenra.github.io/ranx) for more details and examples.## üéì CitationIf you use [ranx](https://github.com/AmenRa/ranx) to evaluate results for your scientific publication, please consider citing our [ECIR 2022](https://ecir2022.org) paper:&lt;details&gt;  &lt;summary&gt;BibTeX&lt;/summary&gt;    ```bibtex  @inproceedings{DBLP:conf/ecir/Bassani22,    author    = {Elias Bassani},    title     = {ranx: {A} Blazing-Fast Python Library for Ranking Evaluation and Comparison},    booktitle = {{ECIR} {(2)}},    series    = {Lecture Notes in Computer Science},    volume    = {13186},    pages     = {259--264},    publisher = {Springer},    year      = {2022}  }  ```&lt;/details&gt;  If you use the fusion functionalities provided by [ranx](https://github.com/AmenRa/ranx) for conducting the experiments of your scientific publication, please consider citing our [CIKM 2022](https://www.cikm2022.org) paper:&lt;details&gt;  &lt;summary&gt;BibTeX&lt;/summary&gt;    ```bibtex  @inproceedings{DBLP:conf/cikm/BassaniR22,    author    = {Elias Bassani and                Luca Romelli},    title     = {ranx.fuse: {A} Python Library for Metasearch},    booktitle = {{CIKM}},    pages     = {4808--4812},    publisher = {{ACM}},    year      = {2022}  }  ```&lt;/details&gt;## üéÅ Feature RequestsWould you like to see other features implemented? Please, open a [feature request](https://github.com/AmenRa/ranx/issues/new?assignees=&amp;labels=enhancement&amp;template=feature_request.md&amp;title=%5BFeature+Request%5D+title).## ü§ò Want to contribute?Would you like to contribute? Please, drop me an [e-mail](mailto:elias.bssn@gmail.com?subject=[GitHub]%20ranx).## üìÑ License[ranx](https://github.com/AmenRa/ranx) is an open-sourced software licensed under the [MIT license](LICENSE).</longdescription>
</pkgmetadata>