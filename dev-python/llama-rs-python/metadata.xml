<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># llama-rs-pythonUnofficial python bindings for [llama-rs](https://github.com/rustformers/llama-rs) created with [PyO3](https://github.com/PyO3/pyo3). üêç‚ù§Ô∏èü¶ÄThis package gives access to the basic functionality of the llama-rs project.GGML converted models can be loaded and executed.## InstallationSimply install it via pip: `pip install llama-rs-python`## UsageThe package is typehinted for easy usage.A usage example could look like this:```python from llama_rs_python import Model#load the modelmodel = Model(&quot;path/to/model.bin&quot;)#generateprint(model.generate(&quot;The meaning of life is&quot;))```The package also supports callbacks to get each token as it is generated.The callback-function also supports canceling the generation by returning a `True` value from the pytohn side.```python from llama_rs_python import Modelimport sysfrom typing import Optional#load the modelmodel = Model(&quot;path/to/model.bin&quot;)#define the callbackdef callback(token:str)-&gt;Optional[bool]:    print(token,end=&quot;&quot;)    sys.stdout.flush()    # (return True here to cancel the generation)#start generationmodel.generate(&quot;The meaning of life is&quot;,callback=callback)```The configuration of the generation is handled by the `GenerationConfig` class.```python from llama_rs_python import Model, GenerationConfig#load the modelmodel = Model(&quot;path/to/model.bin&quot;)#create a configconfig = GenerationConfig(top_p=0.9,seed=1441,max_new_tokens=1024)#generateprint(model.generate(&quot;The meaning of life is&quot;,generation_config=config))```To configure model specific settings the `SessionConfig` class can be used.```pythonfrom llama_rs_python import Model, SessionConfig#define the sessionsession_config = SessionConfig(threads=8,context_length=512)#load the modelmodel = Model(&quot;path/to/model.bin&quot;,session_config=session_config)```</longdescription>
</pkgmetadata>