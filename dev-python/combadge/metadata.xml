<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CombadgeCombadge generates a service client implementation from a user service interfacedeclared by a [protocol](https://peps.python.org/pep-0544/) class or an abstract base class.[![Checks](https://img.shields.io/github/checks-status/kpn/combadge/main?logo=github)](https://github.com/kpn/combadge/actions/workflows/check.yaml)[![Coverage](https://codecov.io/gh/kpn/combadge/branch/main/graph/badge.svg?token=ZAqYAaTXwE)](https://codecov.io/gh/kpn/combadge)![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)[![Python Version](https://img.shields.io/pypi/pyversions/combadge?logo=python&amp;logoColor=yellow)](https://pypi.org/project/combadge/)[![License](https://img.shields.io/github/license/kpn/combadge)](LICENSE)## Documentation&lt;a href=&quot;https://kpn.github.io/combadge/&quot;&gt;    &lt;img alt=&quot;Documentation&quot; height=&quot;30em&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/kpn/combadge/docs.yml?label=documentation&amp;logo=github&quot;&gt;&lt;/a&gt;## Sneak peek```python title=&quot;quickstart_httpx.py&quot;from typing import Listfrom httpx import Clientfrom pydantic import BaseModel, Fieldfrom typing_extensions import Annotated, Protocolfrom combadge.support.http.markers import QueryParam, http_method, pathfrom combadge.support.httpx.backends.sync import HttpxBackend# 1Ô∏è‚É£ Declare the response models:class CurrentCondition(BaseModel):    humidity: int    temperature: Annotated[float, Field(alias=&quot;temp_C&quot;)]class Weather(BaseModel):    current: Annotated[List[CurrentCondition], Field(alias=&quot;current_condition&quot;)]# 2Ô∏è‚É£ Declare the protocol:class SupportsWttrIn(Protocol):    @http_method(&quot;GET&quot;)    @path(&quot;/{in_}&quot;)    def get_weather(        self,        *,        in_: str,        format_: Annotated[str, QueryParam(&quot;format&quot;)] = &quot;j1&quot;,    ) -&gt; Weather:        raise NotImplementedError# 3Ô∏è‚É£ Bind the service:with HttpxBackend(Client(base_url=&quot;https://wttr.in&quot;))[SupportsWttrIn] as service:    # üöÄ Call the service:    response = service.get_weather(in_=&quot;amsterdam&quot;)assert response.current[0].humidity == 71assert response.current[0].temperature == 8.0```</longdescription>
</pkgmetadata>