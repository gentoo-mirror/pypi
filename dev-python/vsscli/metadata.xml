<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Warning: this project has been deprecatedIf you are running `vsscli` v0.5.x we strongly suggest using the new ``vss-cli`` available at [VSS-Cli](https://pypi.org/project/vss-cli/). For more information see the following [Announcement](https://vss-wiki.eis.utoronto.ca/x/KABwAg).# ITS Private Cloud Command Line Interface[![CI][build-img]](https://gitlab-ee.eis.utoronto.ca/vss/vsscli/commits/master)[![Coverage][coverage-img]](https://gitlab-ee.eis.utoronto.ca/vss/vsscli/commits/master)[![PyPI][pypi-img]](https://pypi.python.org/pypi/vsscli)[![PyPI version][pyver-img]](https://pypi.python.org/pypi/vsscli)[![Docker Image Pulls][docker-pulls-img]][docker-image][![Docker Image Layers][docker-layer-img]][docker-image][![Docker Image Version][docker-version-img]][docker-image]This package provides a unified command line interface to the ITS Private Cloud.## DocumentationPackage documentation is now available at [docs][docs].## Installation&gt; Windows users, download and install [Python Releases for Windows][Python Releases for Windows] prior running [pip][pip].The fastest way to install VSS CLI is to use [pip][pip]:```bashpip install vsscli```If you have the VSS CLI installed and want to upgrade to the latest versionyou can run:```bashpip install --upgrade vsscli```This will install VSS CLI as well as all dependencies. You can also just [download the tarball][download the tarball].Once you have the `vsscli` directory structure on your workstation, you can just run:```bashcd &lt;path_to_vsscli&gt;python setup.py install```## CLI ReleasesThe release notes for the VSS CLI can be found [CHANGELOG](CHANGELOG.md) in the gitlab repo.## Getting StartedBefore using VSS CLI, you need setup your VSS credentials. You can do this in a couple of ways:* Environment variables* Configuration fileThe quickest way to get started is to run the ``vss configure`` command:```bashvss configureUsername []:Endpoint [https://vss-api.eis.utoronto.ca]:PasswRepeat for confirmation:```To use environment variables, set ``VSS_API_USER`` and ``VSS_API_USER_PASS`` or ``VSS_API_TOKEN``:```bashexport VSS_API_USER=&lt;vss_user&gt;export VSS_API_USER_PASS=&lt;vss_user_pass&gt;# orexport VSS_API_TOKEN=&lt;vss_api_token&gt;```To use a config file, create a configuration as follows:```javascript{&quot;https://vss-api.eis.utoronto.ca&quot;: {    &quot;auth&quot;: &quot;&lt;encoded_creds&gt;&quot;,    &quot;token&quot;: &quot;&lt;access_token&quot;    }}```Place it in ``~/.vss/config.json`` (or in ``%UserProfile%\.vss\config.json`` on Windows).If you place the config file in a different location than ``~/.vss/config.json``you need to inform VSS CLI the full path. Do this by settingthe appropriate environment variable:```bashexport VSS_CONFIG_FILE=/path/to/config_file.json```Or use the ``-c/--config`` option in the ``vss`` command as follows:```bashvss -c ~/.secret/vss-config.json```By default VSS CLI output is text, and this can be configured either by ``-o/--output``option or the ``VSS_DEFAULT_OUTPUT`` environment variable as follows:```bash$ export VSS_DEFAULT_OUTPUT=json# or$ export VSS_DEFAULT_OUTPUT=text```## JSON Parameter InputVSS CLI options vary from simple string, boolean or numeric values toJSON data structures as input parameters on the command line.For example, consider the following command to deploy a new virtualmachine from a given template and provide a guest operating systemspecification to reconfigure hostname, domain, dns, ip, subnetand gateway:```bashvss compute vm mk from-template --source $TEMPLATE_UUID \      --description 'New virtual machine' \      --custom-spec '{&quot;hostname&quot;: &quot;fe1&quot;, &quot;domain&quot;: &quot;eis.utoronto.ca&quot;, &quot;interfaces&quot;: [{&quot;dhcp&quot;: true}]}'```Where ``$TEMPLATE_UUID`` is an environment variable storing the UUID ofthe source template.## Bash completionBash completion support is provided by [Click][Click] and will completesub commands and parameters. Subcommands are always listed whereas parametersonly if at least a dash has been provided. Example:```bashvss compute &lt;TAB&gt;&lt;TAB&gt;account    compute    configure  request    stor       tokenvss -&lt;TAB&gt;&lt;TAB&gt;--config      --no-verbose  --output      --verbose     --version     -c            -o```Activating Bash completion can be done by executing the following command:```basheval &quot;$(_VSS_COMPLETE=source vss)&quot;```The above activation example will always invoke your application on startupand may slow down the shell activation. VSS-CLI ships with a Bash completionactivation script named ``vss_bash_completer`` which can be either loaded manuallyor added to your ``basrc``:```bash. $(dirname `which vss`)/vss_bash_completer```    ## VSS ShellThe VSS CLI provides a REPL interactive shell with tab-completion, suggestions andcommand history.```bashUsage: vss shell [OPTIONS]  REPL interactive shell.Options:  -i, --history TEXT  File path to save history  --help              Show this message and exit.```To enter the shell just execute ``vss shell`` and you will get the following welcome message:&lt;a href=&quot;https://asciinema.org/a/9TTqzGUvakj2vZ2ZfaDt2RTKa&quot;&gt;&lt;img src=&quot;https://asciinema.org/a/9TTqzGUvakj2vZ2ZfaDt2RTKa.png&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;## Getting HelpWe use GitLab issues for tracking bugs, enhancements and feature requests.If it turns out that you may have found a bug, please [open a new issue][open a new issue].## VersioningThe API versions are tagged based on [Semantic Versioning](https://semver.org/). Versions available in the [tags section](https://gitlab-ee.eis.utoronto.ca/vss/vsscli/tags).## ContributingRefer to the [Contributing Guide](CONTRIBUTING.md) for details on our code of conduct and the process of submitting code to the repository.[docs]: https://eis.utoronto.ca/~vss/vsscli/[download the tarball]: https://pypi.python.org/pypi/vsscli[Click]: http://click.pocoo.org/6/[Python Releases for Windows]: https://www.python.org/downloads/windows/[pip]: http://www.pip-installer.org/en/latest/[open a new issue]: https://gitlab-ee.eis.utoronto.ca/vss/vsscli/issues/new&gt;[build-img]: https://gitlab-ee.eis.utoronto.ca/vss/vsscli/badges/master/build.svg[coverage-img]: https://gitlab-ee.eis.utoronto.ca/vss/vsscli/badges/master/coverage.svg[pypi-img]: https://img.shields.io/pypi/v/vsscli.svg[pyver-img]: https://img.shields.io/pypi/pyversions/vsscli.svg[docker-pulls-img]:  https://img.shields.io/docker/pulls/uofteis/vsscli.svg[docker-layer-img]: https://images.microbadger.com/badges/image/uofteis/vsscli.svg[docker-version-img]: https://images.microbadger.com/badges/version/uofteis/vsscli.svg[docker-image]: https://hub.docker.com/r/uofteis/vsscli/</longdescription>
</pkgmetadata>