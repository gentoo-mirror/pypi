<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>⚠️ This is a fork of scardine/image_size simply to create a distributable package on PyPI. Will be rendered unnecessary if `image_size/issues/13`__ is addressed... _issue13: https://github.com/scardine/image_size/issues/13__ issue13================get_image_size================| Src: https://github.com/scardine/image_size| PyPI:.. image:: https://raw.github.com/scardine/image_size/master/lookmanodeps.png    :alt: Look, Ma! No deps!Get image width and height given a file path using minimal dependencies(no need for PIL, libjpeg, libpng, etc).Why don't you just use PIL?---------------------------PIL is huge and has lots of dependencies, perhaps an overkill if youwant just the image dimensions.  If you already have PIL installed, thensure, use it instead.This was written in answer for the question &quot;`Get Image size WITHOUTloading image into memory&lt;http://stackoverflow.com/questions/15800704/python-get-image-size-without-loading-image-into-memory/&gt;`__&quot;(using Python) in stackoverflow. The OP said:    @PauloScardine hey thanks Paulo, this is great!  It's always so nice    to have code that can be easily deployed without bringing in    dependencies, and this fits the bill!  As you say, avoiding PIL is    worth it for its own sake.Usage-----Right now only for PNG, JPEG, GIF, BMP and TIF. Very untested, fork andsend PRs.Python ``get_image_size.get_image_size`` usage:.. code:: python    import get_image_size    try:        width, height = get_image_size.get_image_size('/path/to/image.ext')    except get_image_size.UnknownImageFormat:        width, height = -1, -1Python ``get_image_size.get_image_metadata`` usage:.. code:: python   import get_image_size   try:       img = get_image_size.get_image_metadata('/path/to/image.ext')       width, height = img.width, img.height       print(img._asdict())   except get_image_size.UnknownImageFormat:       width, height = -1, -1Commandline ``get-image-size`` usage:.. code:: bash    $ python -m get_image_size --help    $ get-image-size --help    Usage: get-image-size [-v|--verbose] [--json|--json-indent] &lt;path0&gt; [&lt;pathN&gt;]    Print metadata for the given image paths (without image library bindings).    Options:      -h, --help     show this help message and exit      --json      --json-indent      -v, --verbose      -q, --quiet      -t, --test    $ get-image-size ./lookmanodeps.png    25120822228PNG./lookmanodeps.png    $ get-image-size --json-indent ./lookmanodeps.png    {      &quot;path&quot;: &quot;./lookmanodeps.png&quot;,      &quot;type&quot;: &quot;PNG&quot;,      &quot;file_size&quot;: 22228,      &quot;width&quot;: 251,      &quot;height&quot;: 208    }Updates-------Over the time people sent updates for &quot;.ico&quot;, &quot;.bmp&quot; and otherimprovements. It is interesting to have all those algorithms in the sameplace so people can reimplement them using other languages, so thanksfor all the pull requests (you can see the list of contributions in thehistory).    I added support for BMP file types, respecting different types of    DIB headers. Should work on all current bitmap types, tested for old    OS/2 and BITMAPCOREHEADER files, too. You might try it and consider    it for merging if you find it useful. **No longer under 100 LOC    though, sorry ;)**License--------MIT LicenseThanks------Thanks everyone who inspired this, contributed with code or sent bugreports. You know who you are, THANK YOU!HISTORY=========</longdescription>
</pkgmetadata>