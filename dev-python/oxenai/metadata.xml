<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># üêÇ üêç Oxen Python Interface The Oxen python interface makes it easy to integrate Oxen datasets directly into machine learning dataloaders or other data pipelines.## RepositoriesThere are two types of repositories one can interact with, a `LocalRepo` and a `RemoteRepo`.## Local RepoTo fully clone all the data to your local machine, you can use the `LocalRepo` class.```pythonimport oxenrepo = LocalRepo(&quot;path/to/repository&quot;)repo.clone(&quot;https://hub.oxen.ai/ox/CatDogBBox&quot;)```If there is a specific version of your data you want to access, you can specify the `branch` when cloning.```pythonrepo.clone(&quot;https://hub.oxen.ai/ox/CatDogBBox&quot;, branch=&quot;my-pets&quot;)```Once you have a repository locally, you can perform the same operations you might via the command line, through the python api.For example, you can checkout a branch, add a file, commit, and push the data to the same remote you cloned it from.```pythonimport oxenrepo = LocalRepo(&quot;path/to/repository&quot;)repo.clone(&quot;https://hub.oxen.ai/ox/CatDogBBox&quot;)repo.checkout()```## Remote RepoIf you don't want to download the data locally, you can use the `RemoteRepo` class to interact with a remote repository on OxenHub.```pythonimport oxen repo = RemoteRepo(&quot;https://hub.oxen.ai/ox/CatDogBBox&quot;)```To stage and commit files to a specific version of the data, you can `checkout` an existing branch or create a new one.```pythonrepo.create_branch(&quot;dev&quot;)repo.checkout(&quot;dev&quot;)```You can then stage files to the remote repository by specifying the file path and destination directory.```pythonrepo.add(&quot;new-cat.png&quot;, &quot;images&quot;) # Stage to images/new-cat.png on remoterepo.commit(&quot;Adding another training image&quot;)```Note that no &quot;push&quot; command is required here, since the above code creates a commit directly on the remote branch.</longdescription>
</pkgmetadata>