<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/dwavebinarycsp.svg    :target: https://pypi.org/project/dwavebinarycsp.. image:: https://ci.appveyor.com/api/projects/status/b99rhw0l6ljsgw5t?svg=true    :target: https://ci.appveyor.com/project/dwave-adtt/dwavebinarycsp.. image:: https://codecov.io/gh/dwavesystems/dwavebinarycsp/branch/master/graph/badge.svg    :target: https://codecov.io/gh/dwavesystems/dwavebinarycsp.. image:: https://readthedocs.com/projects/d-wave-systems-binarycsp/badge/?version=latest    :target: https://docs.ocean.dwavesys.com/projects/binarycsp/en/latest/?badge=latest.. image:: https://circleci.com/gh/dwavesystems/dwavebinarycsp.svg?style=svg    :target: https://circleci.com/gh/dwavesystems/dwavebinarycspdwavebinarycsp==============.. index-start-markerLibrary to construct a binary quadratic model from a constraint satisfaction problem withsmall constraints over binary variables.Below is an example usage:.. code-block:: python    import dwavebinarycsp    import dimod    csp = dwavebinarycsp.factories.random_2in4sat(8, 4)  # 8 variables, 4 clauses    bqm = dwavebinarycsp.stitch(csp)    resp = dimod.ExactSolver().sample(bqm)    for sample, energy in resp.data(['sample', 'energy']):        print(sample, csp.check(sample), energy).. index-end-markerInstallation------------.. installation-start-markerTo install:.. code-block:: bash    pip install dwavebinarycspTo build from source:.. code-block:: bash    pip install -r requirements.txt    python setup.py install.. installation-end-markerLicense-------Released under the Apache License 2.0. See LICENSE file.Contributing------------Ocean's `contributing guide &lt;https://docs.ocean.dwavesys.com/en/stable/contributing.html&gt;`_has guidelines for contributing to Ocean packages.</longdescription>
</pkgmetadata>