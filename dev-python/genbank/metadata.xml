<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># genbankPython code to work with Genbank filesThis repo contains several classes to help work with Genbank filesThe flow goes:```File -&gt; Locus -&gt; Feature```To use:```pythonfrom genbank.file import Filefile = File('infile.gbk')for locus in file:print(name)for feature in locus:print(feature)```You can also build a Locus object from the ground up:```pythonfrom genbank.locus import Locuslocus = Locus('test', 'actgactgatcgtagctagc')# then add a feature by parsing text of a genbank featurelocus.read_feature('  CDS  1..10')# or add manually by specifing the type,strand,locationlocus.add_feature('CDS',+1,[['10','20']])locus.write()```which gives:```LOCUS       test                      20 bpFEATURES             Location/Qualifiers     CDS             1..10     CDS             10..20ORIGIN        1 actgactgat cgtagctagc//```---This package also allows you to perform various conversions on a given genome file:```bash$ genbank.py tests/phiX174.gbk -f tabular'phiX174''CDS'(('100', '627'),){'gene': &quot;G&quot;}'phiX174''CDS'(('636', '1622'),){'gene': &quot;H&quot;}'phiX174''CDS'(('1659', '3227'),){'gene': &quot;A&quot;}'phiX174''CDS'(('2780', '3142'),){'gene': &quot;B&quot;}'phiX174''CDS'(('3142', '3312'),){'gene': &quot;K&quot;}$ genbank.py tests/phiX174.gbk -f fasta&gt;phiX174gtgtgaggttataacgccgaagcggtaaaaattttaatttttgccgctgaggggttgaccaagcgaagcgcggtaggttttctgcttaggagtttaatcatgtttcag$ genbank.py tests/phiX174.gbk -f fna&gt;phiX174_CDS_[100..627] [gene=&quot;G&quot;]atgtttcagacttttatttctcgccataattcaaactttttttctgataag&gt;phiX174_CDS_[636..1622] [gene=&quot;H&quot;]atgtttggtgctattgctggcggtattgcttctgctcttgctggtggcgcc&gt;phiX174_CDS_[1659..3227]$ genbank.py tests/phiX174.gbk -f faa&gt;phiX174_CDS_[100..627] [gene=&quot;G&quot;]MFQTFISRHNSNFFSDKLVLTSVTPASSAPVLQTPKATSSTLYFDSLTVNA&gt;phiX174_CDS_[636..1622] [gene=&quot;H&quot;]MFGAIAGGIASALAGGAMSKLFGGGQKAASGGIQGDVLATDNNTVGMGDAG&gt;phiX174_CDS_[1659..3227] [gene=&quot;A&quot;]$ genbank.py tests/phiX174.gbk -f coveragephiX1741.1168```---You can also *slice* the locus to a specified range and only the nucleotides andfeatures that occur within the slice are kept. The command to take the first twohundred bases of the phiX174 genome is shown below. ```bash$ genbank.py tests/phiX174.gbk --slice 1..200LOCUS       phiX174                  200 bp    DNA             PHGDEFINITION  phiX174FEATURES             Location/Qualifiers     rep_origin      13..56     CDS             100..&gt;200                     /gene=&quot;G&quot;                     /note=&quot;merged&quot;ORIGIN        1 gtgtgaggtt ataacgccga agcggtaaaa attttaattt ttgccgctga ggggttgacc       61 aagcgaagcg cggtaggttt tctgcttagg agtttaatca tgtttcagac ttttatttct      121 cgccataatt caaacttttt ttctgataag ctggttctca cttctgttac tccagcttct      181 tcggcacctg ttttacagac//```The *slice* arguement can be paired with all the other output format options:```bash$ genbank.py tests/phiX174.gbk --slice 1..200 -f coverage0.51```---You can also easily edit features by running multiple commands.Print out the features of a specified **key**:**tag** into a file```$ genbank.py tests/phiX174.gbk -k CDS:gene &gt; labels.tsv```Change the H of the second gene to something more informative:(ideally you will have columns from other sources, like excel)```perl -pi -e 's/H/Minor spike/' labels.tsv```Edit all the features of a specified **key**:**tag** with the updated labels:```$ genbank.py tests/phiX174.gbk -e CDS:gene &lt; labels.tsv | headLOCUS       phiX174                 5386 bp    DNA      PHGFEATURES             Location/Qualifiers     source          1..5386     rep_origin      13..56     CDS             100..627                     /gene=&quot;G&quot;     CDS             636..1622                     /gene=&quot;Minor spike&quot;     CDS             1659..3227```</longdescription>
</pkgmetadata>