<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>mfc===Python driver and command-line tool for [MKS mass flow controllers](http://www.mksinst.com/product/category.aspx?CategoryID=406).&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://www.engineering-sci.com/images/editor/G-Series%20Thermal%20Mass%20Flow%20Controllers%20&amp;%20Meters%20with%20Fast%20&amp;%20Repeatable%20Performance.jpg&quot; /&gt;&lt;/p&gt;Installation============```pip install mfc```If you want the older python2/tornado driver, use `pip install mfc==0.2.11` and review [this README](https://github.com/numat/mfc/tree/1af5162b67041c6b5d934a5ef5f1aea0c8a5731e).Usage=====This driver uses the ethernet port *on the side of the device* for communication.If you use this driver, you only need to provide power to the top ports.### Command LineTo test your connection and stream real-time data, use the command-lineinterface. You can read the flow rate with:```$ mfc 192.168.1.200{  &quot;actual&quot;: 4.99,  &quot;gas&quot;: &quot;CO2&quot;,  &quot;max&quot;: 37,  &quot;setpoint&quot;: 5.00,  &quot;temperature&quot;: 27.34}```You can optionally specify a setpoint flow and/or gas with e.g.`mfc 192.168.1.150 --set 7.5 --set-gas N2`. See `mfc --help` for more.### PythonThis uses Python â‰¥3.5's async/await syntax to asynchronously communicate withthe mass flow controller. For example:```pythonimport asynciofrom mfc import FlowControllerasync def get():    async with FlowController('the-mfc-ip-address') as fc:        print(await fc.get())asyncio.run(get())```The API that matters is `get`, `set`, and `set_gas`.```python&gt;&gt;&gt; await fc.get(){  &quot;actual&quot;: 4.99,  &quot;gas&quot;: &quot;CO2&quot;,  &quot;max&quot;: 37,  &quot;setpoint&quot;: 5.00,  &quot;temperature&quot;: 27.34}``````python&gt;&gt;&gt; await fc.set(10)&gt;&gt;&gt; await fc.open()   # set to max flow&gt;&gt;&gt; await fc.close()  # set to zero flow``````python&gt;&gt;&gt; await fc.set_gas('N2')```There is also `set_display`, which will only work on devices that support it.```python&gt;&gt;&gt; await fc.set_display('flow')```</longdescription>
</pkgmetadata>