<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cryptocodePython library used to encrypt and decrypt strings in the simplest possible way, while also being incredibly secure.## Requirements- **Python** 3 or later.## InstallationInstall some Python utilities along with some libraries and other stuff:~~~pip install cryptocode~~~## Basic usageEncrypting a message:~~~&gt;&gt;&gt; import cryptocode&gt;&gt;&gt; myEncryptedMessage = cryptocode.encrypt(&quot;I like trains&quot;, &quot;password123&quot;)&gt;&gt;&gt; print(myEncryptedMessage)M+Wykmlub0z7FhEdmA==*PvAbXRNx0SiSDHHxLsKZ5w==*ihQM/fdkgrX3G+yOItyAUQ==*QFNDmuUP1ysgo01/P2MNpg==~~~The first parameter is the string you want to encrypt. The second parameter is the password, which will be used for decrypting the string.Decrypting a message&quot;~~~&gt;&gt;&gt; import cryptocode&gt;&gt;&gt; myDecryptedMessage = cryptocode.decrypt(&quot;M+Wykmlub0z7FhEdmA==*PvAbXRNx0SiSDHHxLsKZ5w==*ihQM/fdkgrX3G+yOItyAUQ==*QFNDmuUP1ysgo01/P2MNpg==&quot;, &quot;password123&quot;)&gt;&gt;&gt; print(myDecryptedMessage)I like trains~~~The first parameter is the encrypted string and the second parameter is the password. If the password is incorrect, decrypt function will return `False`.## ExampleHere, we will be creating a simple &quot;trial product key&quot;. This is useful if you have software that you would like people to use temporarily.In this example, we will be letting the user use the product for 2 hours. The password we will be using is ``cryptocode is amazing``.Code on the server side:~~~import cryptocodeimport timehours = 2messageToEncrypt = str(time.time() + hours * 60 * 60)## Hours * 60 * 60 is necessary because we need to turn the hours into seconds, since the timestamp is in seconds.cryptocode.encrypt(messageToEncrypt, &quot;cryptocode is amazing&quot;)~~~Code on the client side:~~~import cryptocodeimport timeimport sys#Function to verify that the key is valid:def check_valid(key):    message = cryptocode.decrypt(key, 'cryptocode is amazing')    if message == False:        #The key is incorrect!        return False    if float(message) &gt;= time.time():        return True    else:        #The key has expired!        return FalseuserKeyInput = input(&quot;Please enter your product key.&quot;)keyChecked = check_valid(userKeyInput)if keyChecked == True:    print(&quot;You are good to go!&quot;)if keyChecked == False:    print(&quot;You have either entered an invalid key or your time has expired. Sorry!&quot;)    sys.exit()~~~</longdescription>
</pkgmetadata>