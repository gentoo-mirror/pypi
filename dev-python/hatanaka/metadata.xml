<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Hatanaka [![Build](https://github.com/valgur/hatanaka/actions/workflows/build.yml/badge.svg?event=push)](https://github.com/valgur/hatanaka/actions/workflows/build.yml) [![codecov](https://codecov.io/gh/valgur/hatanaka/branch/master/graph/badge.svg?token=7TBLMZ8Wi9)](https://codecov.io/gh/valgur/hatanaka) [![PyPI](https://img.shields.io/pypi/v/hatanaka)](https://pypi.org/project/hatanaka/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/hatanaka)](https://pypistats.org/packages/hatanaka)Effortless compression / decompression of RINEX files in Python and on the command line.Supports all compression formats allowed by the RINEX 2, 3 and 4 standards:* Hatanaka compression for Observation Data Files,* LZW (.Z), gzip (.gz), bzip2 (.bz2) and .zip.## Quick Start### InstallationWheels are available from PyPI for Linux, MacOS and Windows. Python versions 3.6 and up are supported.```bashpip install hatanaka```To ensure that everything is working as expected, it is recommended to also run the included tests.```bashpip install pytestpytest --pyargs hatanaka```### Python```pythonimport hatanakafrom pathlib import Path# decompressionrinex_data = hatanaka.decompress('1lsu0010.21d.Z')# orrinex_data = hatanaka.decompress(Path('1lsu0010.21d.Z').read_bytes())# or, creates '1lsu0010.21o' directly on diskhatanaka.decompress_on_disk('1lsu0010.21d.Z')# compressionPath('1lsu0010.21d.gz').write_bytes(hatanaka.compress(rinex_data))# orPath('1lsu0010.21d.gz').write_bytes(hatanaka.compress('1lsu0010.21o'))# or, creates '1lsu0010.21d.gz' directly on diskhatanaka.compress_on_disk('1lsu0010.21o')```Any errors during Hatanaka compression/decompression will be raised as a `HatanakaException` and any non-criticalproblems reported as warnings.These functions are idempotent – already decompressed / compressed data is returned as is.### CLIThe same functionality is also made available from the command line via `rinex-decompress` and `rinex-compress`.Simply provide a list of RINEX files to compress or decompress. stdin-stdout is used if no files are specified.To remove the original files after conversion, add `-d`/`--delete`. The input file is removed only if conversionsucceeds without any errors or warnings.```bash# creates 1lsu0010.21orinex-decompress 1lsu0010.21d.Z# creates 1lsu0010.21d.gzrinex-compress 1lsu0010.21o# stdin-stdout examplerinex-decompress &lt; 1lsu0010.21d.Z | grep 'SYS / # / OBS TYPES'```Additionally, the original `rnx2crx` and `crx2rnx` executables are also installed for other tools that might want to make use of them, such as RTKLIB.## Development### Building from sourceInstalling from source code is also an option, in which case the RNXCMP tools will be built in the process. This assumesa C compiler is available and is usually picked up automatically by Python's `setuptools`. If that is not the case, youcan instead provide a path to one by setting the `CC` environment variable.```bashpip install git+https://github.com/valgur/hatanaka```## ChangesSee [CHANGELOG.md](CHANGELOG.md).## AttributionMartin Valgur – this Python library.[RNXCMP software](https://terras.gsi.go.jp/ja/crx2rnx.html) for Hatanaka compression support:&lt;br&gt;Hatanaka, Y. (2008), A Compression Format and Tools for GNSS Observation Data, Bulletin of the Geospatioal InformationAuthority of Japan, 55, 21-30.(available at https://www.gsi.go.jp/ENGLISH/Bulletin55.html)## LicenseThis library is provided under the MIT license. Additional license terms apply for the included RNXCMP software –see [LICENSE](LICENSE).</longdescription>
</pkgmetadata>