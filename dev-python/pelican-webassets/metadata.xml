<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Web Assets: A Plugin for Pelican[![Build Status](https://img.shields.io/github/workflow/status/pelican-plugins/webassets/build)](https://github.com/pelican-plugins/webassets/actions)[![PyPI Version](https://img.shields.io/pypi/v/pelican-webassets)](https://pypi.org/project/pelican-webassets/)![License](https://img.shields.io/pypi/l/pelican-webassets?color=blue)This [Pelican](https://github.com/getpelican/pelican) plugin allows you to usethe [webassets][] module to perform a numberof useful asset management functions on your web site, such as:* CSS minification (`cssmin`, `yui_css`, ...)* CSS compiling (`less`, `sass`, ...)* JS building (`uglifyjs`, `yui_js`, `closure`, ...)Some other interesting abilities of [webassets][] include:* [URL Expiry or  &quot;cache-busting&quot;](https://webassets.readthedocs.io/en/latest/expiring.html),  allowing you to set the cache headers for your assets long into the  future, saving bandwidth and reducing page load-times* a [`spritemapper`](https://yostudios.github.io/Spritemapper/) function to  automatically combine multiple icons into one large image with corresponding  position slices* a `datauri` function to minimize the number of HTTP requests by  replacing `url()` references in your stylesheets with internal  in-line [data URIs](https://en.wikipedia.org/wiki/Data_URI_scheme)For the complete list of what [webassets][] can do, check out the **includedfilters** section in the [webassetsdocumentation](https://webassets.readthedocs.io/en/latest/builtin_filters.html).## InstallationGetting started with [webassets][] couldn't be easier thanks to `pip`:```shell-sessionpython -m pip install pelican-webassets```For more detailed plugin installation instructions, please refer to the[Pelican Plugin Documentation](https://docs.getpelican.com/en/latest/plugins.html).ðŸ’¡ **Keep in Mind:** Each function you use in your `{% asset filters %}`arguments (more on this later) will need to be installedseparately. For example, if you wanted to use the `libsass` filter, youwill need to `pip install libsass`. You can even [create a customfilter](https://webassets.readthedocs.io/en/latest/custom_filters.html)if you wanted.## UsageWith the plugin installed, include one or more `{% assets %}` tagsinto your web site's templates to generate everything your web page willneed. For example, something like this in your templateâ€¦```html+jinja{% assets filters=&quot;libsass,cssmin&quot;, output=&quot;css/style.min.css&quot;, &quot;css/style.scss&quot; %}  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{SITEURL}}/{{ASSET_URL}}&quot;&gt;{% endassets %}```â€¦Â will tell [webassets][] to use `libsass` and `cssmin` to compile andminify the `css/style.scss` file in your theme, and save the compiledstylesheet as `css/style.min.css` in the output of your finishedwebsite, along with the `link` element like this in your web page:```html+jinja&lt;link href=&quot;{SITEURL}/{THEME_STATIC_DIR}/css/style.min.css?b3a7c807&quot; rel=&quot;stylesheet&quot;&gt;```ðŸŒ  **The More You Know:** The `ASSET_URL` variable is the concatenationof your Pelican `THEME_STATIC_DIR` setting, the `output` argument, andthe &quot;cache-busting&quot; variable we already talked about.### JavaScript ExampleAs another example, we can use the [webassets][] `closure_js` function tocombine, minify, and compress two files in your web site's theme, `js/jQuery.js`and `js/widgets.js`:```html+jinja{% assets filters=&quot;closure_js&quot;, output=&quot;js/packed.js&quot;, &quot;js/jQuery.js&quot;, &quot;js/widgets.js&quot; %} &lt;script src=&quot;{{SITEURL}}/{{ASSET_URL}}&quot;&gt;&lt;/script&gt;{% endassets %}```The resulting output will be a single `script` tag and itscorresponding file in your web site's generated output:```html+jinja&lt;script src=&quot;{SITEURL}/{THEME_STATIC_DIR}/js/packed.js?00703b9d&quot;&gt;&lt;/script&gt;```## ConfigurationBeing a very small wrapper around the [webassets][] module, there areonly a few options that you may need.#### WEBASSETS_DEBUGBy default, if Pelican is in DEBUG mode (`pelican -D ...`), thisplugin will put [webassets][] in DEBUG mode, to help you withdebugging. To override this behavior, set `WEBASSETS_DEBUG = False` toalways process files regardless of Pelican's DEBUG flag, or `True`to always force [webassets][] into DEBUG mode.```python# put webassets into DEBUG mode if Pelican isWEBASSETS_DEBUG = logger.getEffectiveLevel() &lt;= logging.DEBUG```#### WEBASSETS_CONFIGSome [webassets][] filters require extra configuration options to functionproperly. You can use `WEBASSETS_CONFIG` to specify these options in alist of `(key, value)` tuples that are passed along to the [webassets][]environment.```pythonWEBASSETS_CONFIG = [  (&quot;closure_compressor_optimization&quot;, &quot;ADVANCED_OPTIMIZATIONS&quot;),  (&quot;libsass_style&quot;, &quot;compressed&quot;)]```#### WEBASSETS_BUNDLES[Bundles](https://webassets.readthedocs.io/en/latest/bundles.html) area convenient way to group a collection of assets together along withthe information on how to properly process the files. The`WEBASSETS_BUNDLES` option allows us to make these Bundles by taking alist of `(name, args, kwargs)` arguments that will be passed to the[webassets][] environment.```pythonWEBASSETS_BUNDLES = (     (&quot;my_bundle&quot;, (&quot;colors.scss&quot;, &quot;style.scss&quot;),     {&quot;output': &quot;style.min.css&quot;, &quot;filters&quot;: [&quot;libsass&quot;, &quot;cssmin&quot;]}),)```Allowing you to simplify something like this in your web site's templatesâ€¦```html+jinja{% assets filters=&quot;libsass,cssmin&quot;, output=&quot;style.min.css&quot;, &quot;colors.scss&quot;, &quot;style.scss&quot; %}```â€¦ into this:```html+jinja{% assets 'my_bundle' %}```#### WEBASSETS_SOURCE_PATHSIf your raw assets are in directories other than your`THEME_STATIC_PATHS`, you can supply additional directories to searchin with `WEBASSETS_SOURCE_PATHS`.```pythonWEBASSETS_SOURCE_PATHS = [&quot;stylehseets&quot;, &quot;javascript&quot;]```## ContributingContributions are welcome and much appreciated. Every little bithelps. You can contribute by improving the documentation, addingmissing features, and fixing bugs. You can also help out by reviewingand commenting on [existing issues][].To start contributing to this plugin, review the [Contributing toPelican][] documentation, beginning with the **Contributing Code**section.[existing issues]: https://github.com/pelican-plugins/webassets/issues[Contributing to Pelican]: https://docs.getpelican.com/en/latest/contribute.html## LicenseThis project is licensed under the [AGPL-3.0license](https://tldrlegal.com/license/gnu-affero-general-public-license-v3-(agpl-3.0))![AGPL-3.0](https://img.shields.io/pypi/l/pelican-webassets?color=blue)[webassets]: https://github.com/miracle2k/webassets</longdescription>
</pkgmetadata>