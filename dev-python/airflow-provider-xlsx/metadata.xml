<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Airflow Provider XLSX[Apache Airflow](https://github.com/apache/airflow) operators for converting XLSX files from/to Parquet, CSV and JSON.[![Build Status](https://github.com/andreax79/airflow-provider-xlsx/workflows/Tests/badge.svg)](https://github.com/andreax79/airflow-provider-xlsx/actions)[![PyPI version](https://badge.fury.io/py/airflow-provider-xlsx.svg)](https://badge.fury.io/py/airflow-provider-xlsx)[![PyPI](https://img.shields.io/pypi/pyversions/airflow-provider-xlsx.svg)](https://pypi.org/project/airflow-provider-xlsx)[![Downloads](https://pepy.tech/badge/airflow-provider-xlsx/month)](https://pepy.tech/project/airflow-provider-xlsx)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)### System Requirements* Airflow Versions    * 2.0 or newer### Installation```console$ pip install airflow-provider-xlsx```### Operators#### FromXLSXOperatorRead an XLSX or XLS file and convert it into Parquet, CSV, JSON, JSON Lines(one line per record) file.[API Documentation](https://airflow-provider-xlsx.readthedocs.io/en/latest/#module-xlsx_provider.operators.from_xlsx_operator)##### ExampleXLSX Source![image](https://user-images.githubusercontent.com/1288154/130972144-e33f01af-2f9a-4e34-803a-907324a7adbf.png)Airflow Task```pythonfrom xlsx_provider.operators.from_xlsx_operator import FromXLSXOperatorxlsx_to_jsonl = FromXLSXOperator(   task_id='xlsx_to_jsonl',   source='{{ var.value.tmp_path }}/test.xlsx',   target='{{ var.value.tmp_path }}/test.jsonl',   file_format='jsonl',   dag=dag)```JSON Lines Output```json{&quot;month&quot;: &quot;Jan&quot;, &quot;high&quot;: -12.2, &quot;mean&quot;: -16.2, &quot;low&quot;: -20.1, &quot;precipitation&quot;: 19}{&quot;month&quot;: &quot;Feb&quot;, &quot;high&quot;: -10.3, &quot;mean&quot;: -14.7, &quot;low&quot;: -19.1, &quot;precipitation&quot;: 14}{&quot;month&quot;: &quot;Mar&quot;, &quot;high&quot;: -2.6, &quot;mean&quot;: -7.2, &quot;low&quot;: -11.8, &quot;precipitation&quot;: 15}{&quot;month&quot;: &quot;Apr&quot;, &quot;high&quot;: 8.1, &quot;mean&quot;: 3.2, &quot;low&quot;: -1.7, &quot;precipitation&quot;: 24}{&quot;month&quot;: &quot;May&quot;, &quot;high&quot;: 17.5, &quot;mean&quot;: 11.6, &quot;low&quot;: 5.6, &quot;precipitation&quot;: 36}{&quot;month&quot;: &quot;Jun&quot;, &quot;high&quot;: 24, &quot;mean&quot;: 18.2, &quot;low&quot;: 12.3, &quot;precipitation&quot;: 58}{&quot;month&quot;: &quot;Jul&quot;, &quot;high&quot;: 25.7, &quot;mean&quot;: 20.2, &quot;low&quot;: 14.7, &quot;precipitation&quot;: 72}{&quot;month&quot;: &quot;Aug&quot;, &quot;high&quot;: 22.2, &quot;mean&quot;: 17, &quot;low&quot;: 11.7, &quot;precipitation&quot;: 66}{&quot;month&quot;: &quot;Sep&quot;, &quot;high&quot;: 16.6, &quot;mean&quot;: 11.5, &quot;low&quot;: 6.4, &quot;precipitation&quot;: 44}{&quot;month&quot;: &quot;Oct&quot;, &quot;high&quot;: 6.8, &quot;mean&quot;: 3.4, &quot;low&quot;: 0, &quot;precipitation&quot;: 38}```#### FromXLSXQueryOperatorExecute an SQL query an XLSX/XLS file and export the result into a Parquet or CSV fileThis operators loads an XLSX or XLS file into an in-memory SQLite database, executes a query on the db and stores the result into a Parquet, CSV, JSON, JSON Lines(one line per record) file. The output columns names and types are determinated by the SQL query output.[API Documentation](https://airflow-provider-xlsx.readthedocs.io/en/latest/#xlsx-provider-operators-operators-from-xlsx-query-operator)##### ExampleXLSX Source![image](https://user-images.githubusercontent.com/1288154/130963470-f7f05ca0-a952-47e1-86ec-c6cd322746f6.png)SQL Query```sql select     g as high_tech_sector,     h as eur_bilion,     i as share from     high_tech where     _index &gt; 1     and high_tech_sector &lt;&gt; ''     and lower(high_tech_sector) &lt;&gt; 'total'```Airflow Task```pythonfrom xlsx_provider.operators.from_xlsx_query_operator import FromXLSXQueryOperatorxlsx_to_csv = FromXLSXQueryOperator(   task_id='xlsx_to_csv',   source='{{ var.value.tmp_path }}/high_tech.xlsx',   target='{{ var.value.tmp_path }}/high_tech.parquet',   file_format='csv',   csv_delimiter=',',   table_name='high_tech',   worksheet='Figure 3',   query='''       select           g as high_tech_sector,           h as eur_bilion,           i as share       from           high_tech       where           _index &gt; 1           and high_tech_sector &lt;&gt; ''           and lower(high_tech_sector) &lt;&gt; 'total'   ''',   dag = dag)```Output```high_tech_sector,value,sharePharmacy,78280,0.231952169555313Electronics-telecommunications,75243,0.222954583130376Scientific instruments,64010,0.189670433253542Aerospace,44472,0.131776952366115Computers office machines,21772,0.0645136852766778Non-electrical machinery,20813,0.0616714981835167Chemistry,19776,0.058598734453222Electrical machinery,9730,0.028831912195612Armament,3384,0.0100300315856265```#### ToXLSXOperatorRead a Parquest, CSV, JSON, JSON Lines(one line per record) file and convert it into XLSX.[API Documentation](https://airflow-provider-xlsx.readthedocs.io/en/latest/#xlsx-provider-operators-operators-to-xlsx-operator)##### Example```pythonfrom xlsx_provider.operators.to_xlsx_operator import ToXLSXOperatorparquet_to_xlsx = ToXLSXOperator(   task_id='parquet_to_xlsx',   source='{{ var.value.tmp_path }}/test.parquet',   target='{{ var.value.tmp_path }}/test.xlsx',   dag=dag)```### Links* Apache Airflow - https://github.com/apache/airflow* Project home page (GitHub) - https://github.com/andreax79/airflow-provider-xlsx* Documentation (Read the Docs) - https://airflow-provider-xlsx.readthedocs.io/en/latest* openpyxl, library to read/write Excel 2010 xlsx/xlsm/xltx/xltm files - https://foss.heptapod.net/openpyxl/openpyxl* lrd, library for reading data and formatting information from Excel files in the historical .xls format - https://github.com/python-excel/xlrd* Python library for Apache Arrow - https://github.com/apache/arrow/tree/master/python</longdescription>
</pkgmetadata>