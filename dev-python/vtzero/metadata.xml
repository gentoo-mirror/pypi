<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-vtzeroExperimental Python wrapper of [vtzero](https://github.com/mapbox/vtzero) a minimalist vector tile decoder and encoder in C++[![Status](https://github.com/tilery/python-vtzero/workflows/CI/badge.svg)](https://github.com/tilery/python-vtzero/actions?query=workflow%3ACI)[![Packaging status](https://badge.fury.io/py/vtzero.svg)](https://badge.fury.io/py/vtzero)## Requirements- Python &gt;= 3.5- gcc/clang++ &gt;= 4.5 (C++11)## InstallYou can install python-vtzero using pip```bash$ pip install vtzero```or install from source```bash$ git clone https://github.com/tilery/python-vtzero$ cd python-vtzero# Download vendor submodules (protozero, mvt-fixtures, vtzero)$ git submodule update --init# Compile Cython module$ python setup.py build_ext --inplace$ pip install -e .```## ExampleA complete example can be found [here](example/__init__.py)```pythonfrom vtzero.tile import VectorTile, Tile, Layer, Point# Create MVTtile = Tile()# Add a layerlayer = Layer(tile, b'my_layer')# Add a pointfeature = Point(layer)feature.add_points(1)feature.set_point(10, 10)feature.add_property(b'foo', b'bar')feature.add_property(b'x', b'y')feature.commit()# Encode mvtdata = tile.serialize()```</longdescription>
</pkgmetadata>