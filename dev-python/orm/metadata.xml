<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ORM&lt;p&gt;&lt;a href=&quot;https://github.com/encode/orm/actions&quot;&gt;    &lt;img src=&quot;https://github.com/encode/orm/workflows/Test%20Suite/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/gh/encode/orm&quot;&gt;    &lt;img src=&quot;https://codecov.io/gh/encode/orm/branch/master/graph/badge.svg&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/orm/&quot;&gt;    &lt;img src=&quot;https://badge.fury.io/py/orm.svg&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;/p&gt;The `orm` package is an async ORM for Python, with support for Postgres,MySQL, and SQLite. ORM is built with:* [SQLAlchemy core][sqlalchemy-core] for query building.* [`databases`][databases] for cross-database async support.* [`typesystem`][typesystem] for data validation.Because ORM is built on SQLAlchemy core, you can use Alembic to providedatabase migrations.---**Documentation**: [https://www.encode.io/orm](https://www.encode.io/orm)---## Installation```shell$ pip install orm```You can install the required database drivers with:```shell$ pip install orm[postgresql]$ pip install orm[mysql]$ pip install orm[sqlite]```Driver support is provided using one of [asyncpg][asyncpg], [aiomysql][aiomysql], or [aiosqlite][aiosqlite].---## Quickstart**Note**: Use `ipython` to try this from the console, since it supports `await`.```pythonimport databasesimport ormdatabase = databases.Database(&quot;sqlite:///db.sqlite&quot;)models = orm.ModelRegistry(database=database)class Note(orm.Model):    tablename = &quot;notes&quot;    registry = models    fields = {        &quot;id&quot;: orm.Integer(primary_key=True),        &quot;text&quot;: orm.String(max_length=100),        &quot;completed&quot;: orm.Boolean(default=False),    }# Create the tablesawait models.create_all()await Note.objects.create(text=&quot;Buy the groceries.&quot;, completed=False)note = await Note.objects.get(id=1)print(note)# Note(id=1)```&lt;p align=&quot;center&quot;&gt;&amp;mdash; ðŸ—ƒ &amp;mdash;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;ORM is &lt;a href=&quot;https://github.com/encode/orm/blob/master/LICENSE.md&quot;&gt;BSD licensed&lt;/a&gt; code. Designed &amp; built in Brighton, England.&lt;/i&gt;&lt;/p&gt;[sqlalchemy-core]: https://docs.sqlalchemy.org/en/latest/core/[asyncpg]: https://github.com/MagicStack/asyncpg[aiomysql]: https://github.com/aio-libs/aiomysql[aiosqlite]: https://github.com/jreese/aiosqlite[databases]: https://github.com/encode/databases[typesystem]: https://github.com/encode/typesystem[typesystem-fields]: https://www.encode.io/typesystem/fields/</longdescription>
</pkgmetadata>