<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># benchclientsA simple, low-dependency Python library with clients for calling the Conbench API andpotentially other APIs in the Conbench ecosystem## InstallationThe benchclients package can be installed [from PyPI](https://pypi.org/project/benchclients/)with``` shpip install benchclients```or direct from GitHub with``` shpip install benchclients@git+https://github.com/conbench/conbench.git@main#subdirectory=benchclients/python```or with your preferred environment management system. Package code should rarely change,and the number of dependencies should remain very minimal.## ComponentsThe package is structured such that all users should need is client classes that itexposes. As of writing, there is only one such useful class: `benchclients.ConbenchClient`.However, clients for other APIs can easily be created by inheriting from the`benchclients.BaseAdapter` class, which defines core methods for making HTTP requests(e.g. `.get()`, `.post()`, etc.) set up to handle retries and logging and so on.### `ConbenchClient`#### Environment variablesConfiguration and credentials for `ConbenchClient` are handled by three environmentvariables set before class instantiation:- `CONBENCH_URL`: The URL of the Conbench server. Required.- `CONBENCH_EMAIL`: The email to use for Conbench login. Only required for GETting if theserver is private.- `CONBENCH_PASSWORD`: The password to use for Conbench login. Only required for GETtingif the server is private.#### UsageProvided environment variables are set before instantiation, `ConbenchClient` will handleauth, so users can get right to making requests:``` pythonimport loggingimport osfrom benchclients import ConbenchClient, logos.environ[&quot;CONBENCH_URL&quot;] = &quot;https://conbench.ursa.dev&quot;log.setLevel(logging.DEBUG)conbench = ConbenchClient()benchmark_result_id = &quot;4e0e569d82724667b3e929dedb730edc&quot;res = conbench.get(f&quot;/benchmarks/{benchmark_result_id}&quot;)#&gt; DEBUG [2023-02-10 12:56:48,492] GET https://conbench.ursa.dev/api/benchmarks/4e0e569d82724667b3e929dedb730edcres#&gt; {'batch_id': '746e76a30fbf4bb0bf91bde369b76f3a-1n',#&gt;  'change_annotations': {},#&gt;  'error': None,#&gt;  'id': '4e0e569d82724667b3e929dedb730edc',#&gt;  'links': {'context': 'http://conbench.ursa.dev/api/contexts/105b127c7f624a6d908d4ec65e018fea/',#&gt;   'info': 'http://conbench.ursa.dev/api/info/4d8cb198342f455e90cd84e2e8356f2a/',#&gt;   'list': 'http://conbench.ursa.dev/api/benchmarks/',#&gt;   'run': 'http://conbench.ursa.dev/api/runs/746e76a30fbf4bb0bf91bde369b76f3a/',#&gt;   'self': 'http://conbench.ursa.dev/api/benchmarks/4e0e569d82724667b3e929dedb730edc/'},#&gt;  'optional_benchmark_info': {},#&gt;  'run_id': '746e76a30fbf4bb0bf91bde369b76f3a',#&gt;  'stats': {'data': [0.693055, 0.69691, 0.702238],#&gt;   'iqr': 0.004591,#&gt;   'iterations': 3,#&gt;   'max': 0.702238,#&gt;   'mean': 0.697401,#&gt;   'median': 0.69691,#&gt;   'min': 0.693055,#&gt;   'q1': 0.694982,#&gt;   'q3': 0.699574,#&gt;   'stdev': 0.004611,#&gt;   'time_unit': 's',#&gt;   'times': [],#&gt;   'unit': 's',#&gt;   'z_improvement': False,#&gt;   'z_regression': True,#&gt;   'z_score': -14.600706547691335},#&gt;  'tags': {'cpu_count': None,#&gt;   'engine': 'arrow',#&gt;   'format': 'native',#&gt;   'id': '4193bedfc281454f87f6e045019fedfa',#&gt;   'language': 'R',#&gt;   'memory_map': False,#&gt;   'name': 'tpch',#&gt;   'query_id': 'TPCH-13',#&gt;   'scale_factor': 1},#&gt;  'timestamp': '2023-02-10T09:17:18Z',#&gt;  'validation': None}```</longdescription>
</pkgmetadata>