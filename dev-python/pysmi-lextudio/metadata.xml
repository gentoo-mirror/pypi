<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SNMP MIB parser---------------[![PyPI](https://img.shields.io/pypi/v/pysmi-lextudio.svg?maxAge=2592000)](https://pypi.org/project/pysmi-lextudio)[![PyPI Downloads](https://img.shields.io/pypi/dd/pysmi-lextudio)](https://pypi.python.org/pypi/pysmi-lextudio/)[![Python Versions](https://img.shields.io/pypi/pyversions/pysmi-lextudio.svg)](https://pypi.org/project/pysmi-lextudio/)[![GitHub license](https://img.shields.io/badge/license-BSD-blue.svg)](https://raw.githubusercontent.com/lextudio/pysmi/master/LICENSE.rst)PySMI is a pure-Python implementation of[SNMP SMI](https://en.wikipedia.org/wiki/Management_information_base) MIB parser.This tool is designed to turn ASN.1 MIBs into various formats. As of this moment,JSON and [pysnmp](https://github.com/lextudio/pysnmp) modules can be generatedfrom ASN.1 MIBs.Features--------* Understands SMIv1, SMIv2 and de-facto SMI dialects* Turns MIBs into pysnmp classes and JSON documents* Maintains an index of MIB objects over many MIB modules* Automatically pulls ASN.1 MIBs from local directories, ZIP archives,  HTTP and FTP servers* 100% Python, works with Python 3.7+Rendered PySMI documentation can be found at [pysmi site](https://www.pysnmp.com/pysmi).How to use PySMI----------------If you are using pysnmp, you might never notice pysmi presence - pysnmpcalls pysmi for MIB download and compilation behind the scenes (you canstill can do that manually by invoking *mibdump* tool).To turn ASN.1 MIB into a JSON document, call *mibdump* tool like this:```$ mibdump --generate-mib-texts  --destination-format json IF-MIBSource MIB repositories: file:///usr/share/snmp/mibs, https://mibs.pysnmp.com/asn1/@mib@Borrow missing/failed MIBs from: https://mibs.pysnmp.com/json/fulltexts/@mib@Existing/compiled MIB locations: Compiled MIBs destination directory: .MIBs excluded from code generation: RFC-1212, RFC-1215, RFC1065-SMI, RFC1155-SMI,RFC1158-MIB, RFC1213-MIB, SNMPv2-CONF, SNMPv2-SMI, SNMPv2-TC, SNMPv2-TMMIBs to compile: IF-MIBDestination format: jsonParser grammar cache directory: not usedAlso compile all relevant MIBs: yesRebuild MIBs regardless of age: yesDo not create/update MIBs: noByte-compile Python modules: no (optimization level no)Ignore compilation errors: noGenerate OID-&gt;MIB index: noGenerate texts in MIBs: yesKeep original texts layout: noTry various filenames while searching for MIB module: yesCreated/updated MIBs: IANAifType-MIB, IF-MIB, SNMPv2-MIBPre-compiled MIBs borrowed: Up to date MIBs: SNMPv2-CONF, SNMPv2-SMI, SNMPv2-TCMissing source MIBs: Ignored MIBs: Failed MIBs: ```JSON document build from[IF-MIB module](https://mibs.pysnmp.com/asn1/IF-MIB)would hold information such as:```   {      &quot;ifMIB&quot;: {          &quot;name&quot;: &quot;ifMIB&quot;,          &quot;oid&quot;: &quot;1.3.6.1.2.1.31&quot;,          &quot;class&quot;: &quot;moduleidentity&quot;,          &quot;revisions&quot;: [            &quot;2007-02-15 00:00&quot;,            &quot;1996-02-28 21:55&quot;,            &quot;1993-11-08 21:55&quot;          ]        },      ...      &quot;ifTestTable&quot;: {        &quot;name&quot;: &quot;ifTestTable&quot;,        &quot;oid&quot;: &quot;1.3.6.1.2.1.31.1.3&quot;,        &quot;nodetype&quot;: &quot;table&quot;,        &quot;class&quot;: &quot;objecttype&quot;,        &quot;maxaccess&quot;: &quot;not-accessible&quot;      },      &quot;ifTestEntry&quot;: {        &quot;name&quot;: &quot;ifTestEntry&quot;,        &quot;oid&quot;: &quot;1.3.6.1.2.1.31.1.3.1&quot;,        &quot;nodetype&quot;: &quot;row&quot;,        &quot;class&quot;: &quot;objecttype&quot;,        &quot;maxaccess&quot;: &quot;not-accessible&quot;,        &quot;augmention&quot;: {          &quot;name&quot;: &quot;ifTestEntry&quot;,          &quot;module&quot;: &quot;IF-MIB&quot;,          &quot;object&quot;: &quot;ifEntry&quot;        }      },      &quot;ifTestId&quot;: {        &quot;name&quot;: &quot;ifTestId&quot;,        &quot;oid&quot;: &quot;1.3.6.1.2.1.31.1.3.1.1&quot;,        &quot;nodetype&quot;: &quot;column&quot;,        &quot;class&quot;: &quot;objecttype&quot;,        &quot;syntax&quot;: {          &quot;type&quot;: &quot;TestAndIncr&quot;,          &quot;class&quot;: &quot;type&quot;        },        &quot;maxaccess&quot;: &quot;read-write&quot;      },      ...   }```In general, converted MIBs capture all aspects of original (ASN.1) MIB contentsand layout. The snippet above is just a partial example, but here is thecomplete [IF-MIB.json](https://mibs.pysnmp.com/json/fulltexts/IF-MIB.json)file.Besides one-to-one MIB conversion, PySMI library can produce JSON index tofacilitate fast MIB information lookup across large collection of MIB files.For example, JSON index for[IP-MIB.json](https://mibs.pysnmp.com/json/asn1/IP-MIB),[TCP-MIB.json](https://mibs.pysnmp.com/json/asn1/TCP-MIB) and[UDP-MIB.json](https://mibs.pysnmp.com/json/asn1/UDP-MIB)modules would keep information like this:```   {      &quot;compliance&quot;: {         &quot;1.3.6.1.2.1.48.2.1.1&quot;: [           &quot;IP-MIB&quot;         ],         &quot;1.3.6.1.2.1.49.2.1.1&quot;: [           &quot;TCP-MIB&quot;         ],         &quot;1.3.6.1.2.1.50.2.1.1&quot;: [           &quot;UDP-MIB&quot;         ]      },      &quot;identity&quot;: {          &quot;1.3.6.1.2.1.48&quot;: [            &quot;IP-MIB&quot;          ],          &quot;1.3.6.1.2.1.49&quot;: [            &quot;TCP-MIB&quot;          ],          &quot;1.3.6.1.2.1.50&quot;: [            &quot;UDP-MIB&quot;          ]      },      &quot;oids&quot;: {          &quot;1.3.6.1.2.1.4&quot;: [            &quot;IP-MIB&quot;          ],          &quot;1.3.6.1.2.1.5&quot;: [            &quot;IP-MIB&quot;          ],          &quot;1.3.6.1.2.1.6&quot;: [            &quot;TCP-MIB&quot;          ],          &quot;1.3.6.1.2.1.7&quot;: [            &quot;UDP-MIB&quot;          ],          &quot;1.3.6.1.2.1.49&quot;: [            &quot;TCP-MIB&quot;          ],          &quot;1.3.6.1.2.1.50&quot;: [            &quot;UDP-MIB&quot;          ]      }   }```With this example, *compliance* and *identity* keys point to*MODULE-COMPLIANCE* and *MODULE-IDENTITY* MIB objects, *oids*list top-level OIDs branches defined in MIB modules. Full indexbuild over thousands of MIBs could be seen[here](https://mibs.pysnmp.com/json/index.json).The PySMI library can automatically fetch required MIBs from HTTP, FTP sitesor local directories. You could configure any MIB source available to you (including[https://mibs.pysnmp.com/asn1/](https://mibs.pysnmp.com/asn1/)) for that purpose.How to get PySMI----------------The pysmi package is distributed under terms and conditions of 2-clauseBSD [license](https://www.pysnmp.com/pysmi/license.html). Source code is freelyavailable as a GitHub [repo](https://github.com/lextudio/pysmi).You could `pip install pysmi-lextudio` or download it from [PyPI](https://pypi.org/project/pysmi-lextudio/).If something does not work as expected,[open an issue](https://github.com/lextudio/pysnmp/issues) at GitHub orpost your question [on Stack Overflow](https://stackoverflow.com/questions/ask).Copyright (c) 2015-2020, [Ilya Etingof](mailto:etingof@gmail.com).Copyright (c) 2022, [LeXtudio Inc.](mailto:support@lextudio.com).All rights reserved.</longdescription>
</pkgmetadata>