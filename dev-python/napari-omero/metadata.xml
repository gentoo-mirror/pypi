<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># napari-omero[![License](https://img.shields.io/pypi/l/napari-omero.svg?color=green)](https://github.com/tlambert03/napari-omero/raw/main/LICENSE)[![PyPI](https://img.shields.io/pypi/v/napari-omero.svg?color=green)](https://pypi.org/project/napari-omero)[![Python Version](https://img.shields.io/pypi/pyversions/napari-omero.svg?color=green)](https://python.org)[![CI](https://github.com/tlambert03/napari-omero/actions/workflows/ci.yml/badge.svg)](https://github.com/tlambert03/napari-omero/actions/workflows/ci.yml)[![codecov](https://codecov.io/gh/tlambert03/napari-omero/branch/main/graph/badge.svg)](https://codecov.io/gh/tlambert03/napari-omero)[![conda-forge](https://img.shields.io/conda/vn/conda-forge/napari-omero)](https://anaconda.org/conda-forge/napari-omero)This package provides interoperability between the[OMERO](https://www.openmicroscopy.org/omero/) image management platform, and[napari](https://github.com/napari/napari): a fast, multi-dimensional imageviewer for python.It provides a GUI interface for browsing an OMERO instance from within napari,as well as command line interface extensions for both OMERO and napari CLIs.![demo](https://github.com/tlambert03/napari-omero/blob/master/demo.gif?raw=true)## Features- GUI interface to browse remote OMERO data, with thumbnail previews.- Loads remote nD images from an OMERO server into napari- Planes are loading on demand as sliders are moved (&quot;lazy loading&quot;).- session management (login memory)- OMERO rendering settings (contrast limits, colormaps, active channels, current  Z/T position) are applied in napari### as a napari dock widgetTo launch napari with the OMERO browser added, [install](#installation) thispackage and run:```bashnapari-omero```The OMERO browser widget can also be manually added to the napari viewer:```pythonimport napariviewer = napari.Viewer()viewer.window.add_plugin_dock_widget('napari-omero')napari.run()```### as a napari pluginThis package provides a napari reader plugin that accepts OMERO resources as&quot;proxy strings&quot; (e.g. `omero://Image:&lt;ID&gt;`) or as [OMERO webclientURLS](https://help.openmicroscopy.org/urls-to-data.html).```pythonviewer = napari.Viewer()# omero object identifier stringviewer.open(&quot;omero://Image:1&quot;)# or URLS: https://help.openmicroscopy.org/urls-to-data.htmlviewer.open(&quot;http://yourdomain.example.org/omero/webclient/?show=image-314&quot;)```these will also work on the napari command line interface, e.g.:```bashnapari omero://Image:1# ornapari http://yourdomain.example.org/omero/webclient/?show=image-314```### as an OMERO CLI pluginThis package also serves as a plugin to the OMERO CLI```bashomero napari view Image:1```- ROIs created in napari can be saved back to OMERO via a &quot;Save ROIs&quot; button.- napari viewer console has BlitzGateway 'conn' and 'omero_image' in context.## installationRequires python 3.7 - 3.10.### from condaIt's easiest to install `omero-py` from conda, so the recommended procedureis to install everything from conda, using the `conda-forge` channel```pythonconda install -c conda-forge napari-omero```### from pip`napari-omero` itself can be installed from pip, but you will still need`omero-py````shconda create -n omero -c conda-forge python=3.9 omero-pyconda activate omeropip install napari-omero[all]  # the [all] here is the same as `napari[all]````## issues| ‚ùó  | This is alpha software &amp; some things will be broken or sub-optimal!  || --- | -------------------------------------------------------------------- |- experimental &amp; definitely still buggy!  [Bug  reports](https://github.com/tlambert03/napari-omero/issues/new) are welcome!- remote loading can be very slow still... though this is not strictly an issue  of this plugin.  Datasets are wrapped as delayed dask stacks, and remote data  fetching time can be significant.  Plans for [asynchronous  rendering](https://napari.org/guides/stable/rendering.html) in  napari and  [tiled loading from OMERO](https://github.com/tlambert03/napari-omero/pull/1)  may eventually improve the subjective performance... but remote data loading  will likely always be a limitation here.  To try asyncronous loading, start the program with `NAPARI_ASYNC=1 napari-omero`.## contributingContributions are welcome!  To get setup with a development environment:```bash# clone this repo:git clone https://github.com/tlambert03/napari-omero.git# change into the new directorycd napari-omero# create conda environmentconda env create -f environment.yml# activate the new envconda activate napari-omero# install in editable modepip install -e .```To maintain good code quality, this repo uses[flake8](https://gitlab.com/pycqa/flake8),[mypy](https://github.com/python/mypy), and[black](https://github.com/psf/black).  To enforce code quality when you commitcode, you can install pre-commit```bash# install pre-commit which will run code checks prior to commitspre-commit install```The original OMERO data loader and CLI extension was created by [WillMoore](https://github.com/will-moore).The napari reader plugin and GUI browser was created by [TalleyLambert](https://github.com/tlambert03/)</longdescription>
</pkgmetadata>