<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img alt=&quot;Celery Director logo&quot; src=&quot;https://raw.githubusercontent.com/ovh/celery-director/master/logo.png&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/ovh/celery-director/actions/workflows/tests.yml&quot;&gt;&lt;img alt=&quot;Tests&quot; src=&quot;https://github.com/ovh/celery-director/workflows/Tests/badge.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://www.python.org/&quot;&gt;&lt;img alt=&quot;Python versions&quot; src=&quot;https://img.shields.io/badge/python-3.7%2B-blue.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/ovh/depc/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/license-BSD%203--Clause-blue.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/python/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://raw.githubusercontent.com/ovh/celery-director/master/director.gif&quot;&gt;&lt;img alt=&quot;Celery Director&quot; src=&quot;https://raw.githubusercontent.com/ovh/celery-director/master/director.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt;----------------Director is a simple and rapid framework used to manage tasks and build workflows using Celery.The objective is to make Celery easier to use by providing :- a WebUI, an API and a CLI to manage and execute the workflows,- a WebUI to track the tasks states,- a YAML syntax used to combine tasks into workflows,- the ability to periodically launch a whole workflow,- and many others.See how to use Director with the quickstart and guides in the [documentation](https://ovh.github.io/celery-director/).## InstallationInstall the latest version of Director with pip (requires at least `Python 3.7`):```bashpip install celery-director```## Usage### Write your code in Python```python# tasks/orders.pyfrom director import taskfrom .utils import Order, Mail@task(name=&quot;ORDER_PRODUCT&quot;)def order_product(*args, **kwargs):    order = Order(      user=kwargs[&quot;payload&quot;][&quot;user&quot;],      product=kwargs[&quot;payload&quot;][&quot;product&quot;]    ).save()    return {&quot;id&quot;: order.id}@task(name=&quot;SEND_MAIL&quot;)def send_mail(*args, **kwargs):    order_id = args[0][&quot;id&quot;]    mail = Mail(      title=f&quot;Your order #{order_id} has been received&quot;,      user=kwargs[&quot;payload&quot;][&quot;user&quot;]    )    mail.send()```### Build your workflows in YAML```yaml# workflows.ymlproduct.ORDER:  tasks:    - ORDER_PRODUCT    - SEND_MAIL```### Run itYou can simply test your workflow in local :```bash$ director workflow run product.ORDER '{&quot;user&quot;: 1234, &quot;product&quot;: 1000}'```And run it in production using the director API :```bash$ curl --header &quot;Content-Type: application/json&quot; \  --request POST \  --data '{&quot;project&quot;: &quot;product&quot;, &quot;name&quot;: &quot;ORDER&quot;, &quot;payload&quot;: {&quot;user&quot;: 1234, &quot;product&quot;: 1000}}' \  http://localhost:8000/api/workflows```Read the [documentation](https://ovh.github.io/celery-director/) to try the quickstart and see advanced usages of Celery Director.## Project layout    .env                # The configuration file.    workflows.yml       # The workflows definition.    tasks/        example.py      # A file containing some tasks.        ...             # Other files containing other tasks.## Commands* `director init [path]` - Create a new project.* `director celery [worker|beat|flower]` - Start Celery daemons.* `director webserver` - Start the webserver.* `director workflow [list|show|run]` - Manage your project workflows.## LicenseSee https://github.com/ovh/celery-director/blob/master/LICENSE</longdescription>
</pkgmetadata>