<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI version](https://img.shields.io/pypi/v/agentarchives.svg)](https://pypi.python.org/pypi/agentarchives)[![GitHub CI](https://github.com/artefactual-labs/agentarchives/actions/workflows/test.yml/badge.svg)](https://github.com/artefactual-labs/agentarchives/actions/workflows/test.yml)[![codecov](https://codecov.io/gh/artefactual-labs/agentarchives/branch/master/graph/badge.svg?token=rNmMA59AqJ)](https://codecov.io/gh/artefactual-labs/agentarchives)# agentarchivesClients to retrieve, add, and modify records from archival management systems.## InstallationAgentarchives is on [PyPI](https://pypi.python.org/pypi/agentarchives)!`pip install agentarchives`Or you can install it directly from git`pip install git+https://github.com/artefactual-labs/agentarchives.git`### Dependency issue on MacOsAgentarchvies depends on the [mysqlclient](https://pypi.org/project/mysqlclient/) package which has a [bug](https://bugs.mysql.com/bug.php?id=86971) which can possibly fail an install when using homebrew on MacOs computers. A solution suggested on the mysqlclient site is to change `mysql_config` on or about line 112:```# Create optionslibs=&quot;-L$pkglibdir&quot;libs=&quot;$libs -l &quot;```to```# Create optionslibs=&quot;-L$pkglibdir&quot;libs=&quot;$libs -lmysqlclient -lssl -lcrypto&quot;```See also this [blog](https://medium.com/@MrWeeble/homebrew-on-mac-and-pythons-mysqlclient-ea44fa300e70).## UsageThis library can be used to interact with [Archivists Toolkit](http://archiviststoolkit.org/),[ArchivesSpace](http://archivesspace.org/), and [Access To Memory (AtoM)](https://www.accesstomemory.org).### ArchivesSpaceFirst, you need to import the module in your Python script:```pythonfrom agentarchives import archivesspace```Then, initiate a new client, passing in the URL, user name, password, port and repository for your AS instance:```pythonclient = archivesspace.ArchivesSpaceClient('http://localhost', 'admin', 'admin', 8089, 2)```Using your client, call one of the included functions (documented in `client.py`). For example, the following:    $ resource = client.get_record('/repositories/2/resources/1')    $ print resourcewill return:```json{    &quot;classifications&quot;: [],    &quot;create_time&quot;: &quot;2015-11-17T00:23:19Z&quot;,    &quot;created_by&quot;: &quot;admin&quot;,    &quot;dates&quot;: [        {            &quot;create_time&quot;: &quot;2015-11-17T00:23:19Z&quot;,            &quot;created_by&quot;: &quot;admin&quot;,            &quot;date_type&quot;: &quot;bulk&quot;,            &quot;expression&quot;: &quot;maybe 1999&quot;,            &quot;jsonmodel_type&quot;: &quot;date&quot;,            &quot;label&quot;: &quot;creation&quot;,            &quot;last_modified_by&quot;: &quot;admin&quot;,            &quot;lock_version&quot;: 0,            &quot;system_mtime&quot;: &quot;2015-11-17T00:23:19Z&quot;,            &quot;user_mtime&quot;: &quot;2015-11-17T00:23:19Z&quot;        }    ],    &quot;deaccessions&quot;: [],    &quot;extents&quot;: [        {            &quot;create_time&quot;: &quot;2015-11-17T00:23:19Z&quot;,            &quot;created_by&quot;: &quot;admin&quot;,            &quot;extent_type&quot;: &quot;cassettes&quot;,            &quot;jsonmodel_type&quot;: &quot;extent&quot;,            &quot;last_modified_by&quot;: &quot;admin&quot;,            &quot;lock_version&quot;: 0,            &quot;number&quot;: &quot;1&quot;,            &quot;portion&quot;: &quot;whole&quot;,            &quot;system_mtime&quot;: &quot;2015-11-17T00:23:19Z&quot;,            &quot;user_mtime&quot;: &quot;2015-11-17T00:23:19Z&quot;        }    ],    &quot;external_documents&quot;: [],    &quot;external_ids&quot;: [],    &quot;id_0&quot;: &quot;blah&quot;,    &quot;instances&quot;: [],    &quot;jsonmodel_type&quot;: &quot;resource&quot;,    &quot;language&quot;: &quot;aar&quot;,    &quot;last_modified_by&quot;: &quot;admin&quot;,    &quot;level&quot;: &quot;collection&quot;,    &quot;linked_agents&quot;: [],    &quot;linked_events&quot;: [],    &quot;lock_version&quot;: 0,    &quot;notes&quot;: [],    &quot;publish&quot;: false,    &quot;related_accessions&quot;: [],    &quot;repository&quot;: {        &quot;ref&quot;: &quot;/repositories/2&quot;    },    &quot;restrictions&quot;: false,    &quot;revision_statements&quot;: [],    &quot;rights_statements&quot;: [],    &quot;subjects&quot;: [],    &quot;suppressed&quot;: false,    &quot;system_mtime&quot;: &quot;2015-11-17T00:23:19   Z&quot;,    &quot;title&quot;: &quot;blah&quot;,    &quot;tree&quot;: {        &quot;ref&quot;: &quot;/repositories/2/resources/1/tree&quot;    },    &quot;uri&quot;: &quot;/repositories/2/resources/1&quot;,    &quot;user_mtime&quot;: &quot;2015-11-17T00:23:19   Z&quot;}```### Access To Memory (AtoM)First, you need to import the module in your Python script:```pythonfrom agentarchives import atom```Then, initiate a new client, passing in the URL, REST API access token, password, and port for your AtoM instance:```pythonclient = atom.AtomClient('http://localhost', '68405800c6612599', 80)```Using your client, call one of the included functions (documented in `client.py`). For example, the following:    $ resource = client.get_record('test-fonds')    $ print resourceWill return:```json{    &quot;dates&quot;: [        {            &quot;begin&quot;: &quot;2014-01-01&quot;,            &quot;end&quot;: &quot;2015-01-01&quot;,            &quot;type&quot;: &quot;Creation&quot;        }    ],    &quot;level_of_description&quot;: &quot;Fonds&quot;,    &quot;notes&quot;: [        {            &quot;content&quot;: &quot;Note content&quot;,            &quot;type&quot;: &quot;general&quot;        }    ],    &quot;publication_status&quot;: &quot;Draft&quot;,    &quot;reference_code&quot;: &quot;F2&quot;,    &quot;title&quot;: &quot;Test fonds&quot;}```Current AtoM client limitations (versus the ArchivesSpace client):* Identifier wildcard search not supported* Creation of multiple notes not supported* Nested digital objects not supported* The ability to add/list notes with no content isn't supported</longdescription>
</pkgmetadata>