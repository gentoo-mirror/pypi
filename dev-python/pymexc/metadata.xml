<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pymexc`pymexc` is an unofficial Python library for interacting with the [MEXC crypto exchange](https://www.mexc.com/). It provides a simple and intuitive API for making requests to the [MEXC API endpoints](https://mxcdevelop.github.io/apidocs/spot_v3_en/#introduction).Most of the code was generated with ChatGPT, if you see an error, write to issues.# InstallationYou can install pymexc using pip:```bashpip install pymexc```# Getting StartedTo start working with pymexc, you must import spot or futures from the library. Each of them contains 2 classes: HTTP and WebSocket. To work with simple requests, you need to initialize the HTTP class. To work with web sockets you need to initialize the WebSocket class ## Example:```pythonfrom pymexc import spot, futuresapi_key = &quot;YOUR API KEY&quot;api_secret = &quot;YOUR API SECRET KEY&quot;def handle_message(message):     # handle websocket message    print(message)# SPOT V3# initialize HTTP clientspot_client = spot.HTTP(api_key = api_key, api_secret = api_secret)# initialize WebSocket clientws_spot_client = spot.WebSocket(api_key = api_key, api_secret = api_secret)# make http request to apiprint(spot_client.exchange_info())# create websocket connection to public channel (spot@public.deals.v3.api@BTCUSDT)# all messages will be handled by function `handle_message`ws_spot_client.deals_stream(handle_message, &quot;BTCUSDT&quot;)# FUTURES V1# initialize HTTP clientfutures_client = futures.HTTP(api_key = api_key, api_secret = api_secret)# initialize WebSocket clientws_futures_client = futures.WebSocket(api_key = api_key, api_secret = api_secret)# make http request to apiprint(futures_client.index_price(&quot;MX_USDT&quot;))# create websocket connection to public channel (sub.tickers)# all messages will be handled by function `handle_message`ws_futures_client.tickers_stream(handle_message)# loop forever for save websocket connection while True:     ...```# DocumentationYou can find the official documentation for the MEXC API [here](https://mxcdevelop.github.io/apidocs/spot_v3_en/#introduction).# LicenseThis library is licensed under the MIT License.</longdescription>
</pkgmetadata>