<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Informatics Matters Data Manager Job Decoder============================================.. image:: https://badge.fury.io/py/im-data-manager-job-decoder.svg   :target: https://badge.fury.io/py/im-data-manager-job-decoder   :alt: PyPI package (latest)A package that simplifies the decoding of encoded text strings.Given an encoded string the ``decode()`` methodreturns the decoded value or an error.For example, given the following `jinja2`_ encoded string``'{{ foo }}, bar={{ bar }}, baz={{ baz }}'`` and variable map``{'foo': 1, 'bar': 2, 'baz': 3}`` the decoder returnsthe string ``'foo=1, bar=2, baz=3'``.The following encoding/decoding formats are supported: -- jinja2 (3.0)The package also provides ``validate_job_schema()`` and``validate_manifest_schema()`` functions, which can (should) be used tovalidate the Manifests and Job definitions against thebuilt-in schemas... _jinja2: https://jinja.palletsprojects.com/en/3.0.x/Installation (Python)=====================The Job decoder is published on `PyPI`_ and can be installed fromthere::    pip install im-data-manager-job-decoderOnce installed you can validate the definition (expected to be a dictionaryformed from the definition YAML file) with::    &gt;&gt;&gt; from decoder import decoder    &gt;&gt;&gt; error: Optional[str] = decoder.validate_manifest_schema(manifest)    &gt;&gt;&gt; error: Optional[str] = decoder.validate_job_schema(job_definition)And you can decode encoded fields within the job definition.Here we're decoding the job's 'command' using a map of variables and theirvalues::    &gt;&gt;&gt; decoded, success = decoder.decode(definition['command'],                                          variables,                                          'command',                                          decoder.TextEncoding.JINJA2_3_0)A method also exists to generate a Data Manger Job documentation URLfor the supported repository types. For example, to get theauto-generated documentation URL for a job definition hosted in a GitHubrepository you can do this::    &gt;&gt;&gt; doc_url: str = decoder.get_job_doc_url(&quot;github&quot;,                                               collection                                               job_id,                                               job_definition,                                               manifest_url)We support ``github`` and ``gitlab`` as repository types... _PyPI: https://pypi.org/project/im-data-manager-job-decoderGet in touch============- Report bugs, suggest features or view the source code `on GitHub`_... _on GitHub: https://github.com/informaticsmatters/squonk2-data-manager-job-decoder</longdescription>
</pkgmetadata>