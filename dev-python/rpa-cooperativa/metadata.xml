<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Exemplos de utilizacao da bilioteca rpa_coop```python# linha1: update pip # linha2: install lib rpa-cooperativa via pippython -m pip install --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --trusted-host pypi.org --upgrade pippip install --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --trusted-host pypi.org pip rpa-cooperativa``````python# Melhorias da versao 1.0.31## - Add libs webdriver as service## - Add libs dependencia para todos projetos da VM## - Add acesso gerador de senhas## - Melhoria metodos da classe fluid, exceptions caso nao retorne 200```## manipulacao selenium: automaÃ§Ã£o web```pythonfrom rpa_coop import seleniumimport timedriver = selenium.driver_edge()url = 'http://www.google.com.br'time.sleep(1)driver.get(url)time.sleep(1)driver.maximize_window()```## manipulacao de emails:```pythonfrom rpa_coop import mailmail.enviar_email('usuario@dominio.com.br', 'teste titulo2', 'teste msg')lista_dest = ['usuario@dominio.com.br','appuser@dominio.com.br']mail.enviar_email(lista_dest, 'teste titulo2', 'teste msg')anexos = ['notas.txt', 'README.md']mail.enviar_email('usuario@dominio.com.br', 'teste titulo2', 'teste msg', anexos)anexos = ['notas.txt', 'README.md', 'imagem.PNG']html_text_img = '&lt;html&gt;&lt;body&gt;&lt;h1&gt;Teste img + texto&lt;/h1&gt;&lt;img src=&quot;cid:imagem.PNG&quot;&gt;&lt;/body&gt;&lt;/html&gt;'mail.enviar_email('usuario@dominio.com.br', 'teste titulo2', 'teste msg', anexos, html_text_img)        ```## manipulacao da ferramenta de fluxo de trabalho: fluid```python########################################################from rpa_coop import fluid# Variaveisid_tipo_processo = 945# criar processo novo (rascunho)cod_processo = fluid.criar_processo_rascunho(id_tipo_processo) # empresa 1 - sede por padraocod_processo = fluid.criar_processo_rascunho(id_tipo_processo, filial_orig, filial_dest) # filiais# gravar dados em campo comun e campo-tabelacampos_comuns = {2055: '123456'}campos_tabela = [{5221: 'Galileo Galilei', 2012: '111.222.333-55'},{5221: 'Isaac Newton.', 2012: '333.222.453-77'}]fluid.gravar_dados_campos_comuns(cod_processo, id_tipo_processo, campos_comuns)fluid.gravar_dados_campos_tabela(cod_processo, id_tipo_processo, 3815, [5221, 2012], campos_tabela )# anexar arquivos em processocod_tipo_arquivo_fluid = '417' fluid.anexar_arquivo_fluid(cod_processo, 'C:\\Temp\\teste.xlsx', cod_tipo_arquivo_fluid)# protocolar/enviarfluid.protocolar_processo_fluid(cod_processo, id_tipo_processo) # empresa 1 - padrao, proximo nodo padraofluid.protocolar_processo_fluid(cod_processo, id_tipo_processo, filial_orig, filial_dest) # filiais, proximo nodo padraofluid.protocolar_processo_fluid(cod_processo, id_tipo_processo, filial_orig, filial_dest, nome_do_nodo='Devolver a confeccao') fluid.protocolar_processo_fluid(cod_processo, id_tipo_processo, nome_do_nodo='Devolver a confeccao') # nodo especÃfico pelo nome# pegar processos aguardando na caixa do usuariodf_processos = fluid.get_processos_fluid([id_tipo_processo]) # por padrao user do rpa no fluid, passar lista id_tipo_processo# pegar dados de processo especificodf_dados_processo = fluid.get_dados_processo(cod_processo)print(df_processos)print()print(df_dados_processo)```# manipulacao de banco de dados```python########################################################from rpa_coop import dados# conexaoconexao = dados.criar_engine('nome_db')# selectdf = dados.select_banco_dados(conexao, &quot;SELECT * FROM rpas WHERE id = 9161&quot;)print(df)# updatedados.update_banco_dados(conexao, &quot;UPDATE rpas SET nome = 'test' WHERE id = 9161&quot;)# insertsql = &quot;INSERT INTO rpa_fila(cod_rpa, status_rpa, vm) VALUES (6001, 'novo', 'VM01')&quot;dados.insert_banco_dados(conexao, sql)```# sistema legado acclient```python########################################################from rpa_coop import acc # abrir aplicativo acc # obs. se transacional = False, clica na opÃ§Ã£o relatorios no menu inicialacc.open_acclient('siat', transacional=True)# verificar se existe texto na tela para decidir a proxima acaoacc.exist_text('Retorna ao Sistema')acc.exist_text('Retorna ao Sistema', topo1=100, topo2=200, continua_seerro=True)# navegar ao menu, sequencia de letras, no caso C.B.Cacc.select_menu_letras('cbc')# aguarda a mensagem de texto na tela, para realizar a acaoacc.exist_text('Informe a conta')# acao de digitar o numero da conta na telaacc.p.write('123123')# acao de pressionar enteracc.p.press('enter')```# gerador de senhas de sistemas com rpa```python######################################################### OBS. # funciona somente em maquinas no dominio da empresa, # e maquinas que possuam as variaveis de ambientes para acesso ao cofre de senhasfrom rpa_coop import gerador_pwdusuario = gerador_pwd('denodo', 'usuario')print(usuario)senha = gerador_pwd('denodo', 'senha')print(senha)```</longdescription>
</pkgmetadata>