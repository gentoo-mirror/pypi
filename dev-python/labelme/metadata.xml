<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/wkentaro/labelme/blob/main/labelme/icons/icon.png?raw=true&quot;&gt;&lt;br/&gt;labelme&lt;/h1&gt;&lt;h4 align=&quot;center&quot;&gt;  Image Polygonal Annotation with Python&lt;/h4&gt;&lt;div align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.python.org/pypi/labelme&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/labelme.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/labelme&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/labelme.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/wkentaro/labelme/actions&quot;&gt;&lt;img src=&quot;https://github.com/wkentaro/labelme/workflows/ci/badge.svg?branch=main&amp;event=push&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/wkentaro/labelme/blob/main/#installation?raw=true&quot;&gt;&lt;b&gt;Installation&lt;/b&gt;&lt;/a&gt; |  &lt;a href=&quot;https://github.com/wkentaro/labelme/blob/main/#usage&quot;&gt;&lt;b&gt;Usage&lt;/b&gt;&lt;/a&gt; |  &lt;a href=&quot;https://github.com/wkentaro/labelme/tree/main/examples/tutorial#tutorial-single-image-example&quot;&gt;&lt;b&gt;Tutorial&lt;/b&gt;&lt;/a&gt; |  &lt;a href=&quot;https://github.com/wkentaro/labelme/tree/main/examples&quot;&gt;&lt;b&gt;Examples&lt;/b&gt;&lt;/a&gt; |  &lt;a href=&quot;https://github.com/wkentaro/labelme/discussions&quot;&gt;&lt;b&gt;Discussions&lt;/b&gt;&lt;/a&gt; |  &lt;a href=&quot;https://www.youtube.com/playlist?list=PLI6LvFw0iflh3o33YYnVIfOpaO0hc5Dzw&quot;&gt;&lt;b&gt;Youtube FAQ&lt;/b&gt;&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/wkentaro/labelme/blob/main/examples/instance_segmentation/.readme/annotation.jpg?raw=true&quot; width=&quot;70%&quot;&gt;&lt;/div&gt;## DescriptionLabelme is a graphical image annotation tool inspired by &lt;http://labelme.csail.mit.edu&gt;.  It is written in Python and uses Qt for its graphical interface.&lt;img src=&quot;https://github.com/wkentaro/labelme/blob/main/examples/instance_segmentation/data_dataset_voc/JPEGImages/2011_000006.jpg?raw=true&quot; width=&quot;19%&quot; /&gt; &lt;img src=&quot;examples/instance_segmentation/data_dataset_voc/SegmentationClassPNG/2011_000006.png&quot; width=&quot;19%&quot; /&gt; &lt;img src=&quot;examples/instance_segmentation/data_dataset_voc/SegmentationClassVisualization/2011_000006.jpg&quot; width=&quot;19%&quot; /&gt; &lt;img src=&quot;examples/instance_segmentation/data_dataset_voc/SegmentationObjectPNG/2011_000006.png&quot; width=&quot;19%&quot; /&gt; &lt;img src=&quot;examples/instance_segmentation/data_dataset_voc/SegmentationObjectVisualization/2011_000006.jpg&quot; width=&quot;19%&quot; /&gt;  &lt;i&gt;VOC dataset example of instance segmentation.&lt;/i&gt;&lt;img src=&quot;https://github.com/wkentaro/labelme/blob/main/examples/semantic_segmentation/.readme/annotation.jpg?raw=true&quot; width=&quot;30%&quot; /&gt; &lt;img src=&quot;examples/bbox_detection/.readme/annotation.jpg&quot; width=&quot;30%&quot; /&gt; &lt;img src=&quot;examples/classification/.readme/annotation_cat.jpg&quot; width=&quot;35%&quot; /&gt;  &lt;i&gt;Other examples (semantic segmentation, bbox detection, and classification).&lt;/i&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4310419/47907116-85667800-de82-11e8-83d0-b9f4eb33268f.gif&quot; width=&quot;30%&quot; /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/4310419/47922172-57972880-deae-11e8-84f8-e4324a7c856a.gif&quot; width=&quot;30%&quot; /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/14256482/46932075-92145f00-d080-11e8-8d09-2162070ae57c.png&quot; width=&quot;32%&quot; /&gt;  &lt;i&gt;Various primitives (polygon, rectangle, circle, line, and point).&lt;/i&gt;## Features- [x] Image annotation for polygon, rectangle, circle, line and point. ([tutorial](https://github.com/wkentaro/labelme/blob/main/examples/tutorial))- [x] Image flag annotation for classification and cleaning. ([#166](https://github.com/wkentaro/labelme/pull/166))- [x] Video annotation. ([video annotation](https://github.com/wkentaro/labelme/blob/main/examples/video_annotation?raw=true))- [x] GUI customization (predefined labels / flags, auto-saving, label validation, etc). ([#144](https://github.com/wkentaro/labelme/pull/144))- [x] Exporting VOC-format dataset for semantic/instance segmentation. ([semantic segmentation](https://github.com/wkentaro/labelme/blob/main/examples/semantic_segmentation?raw=true), [instance segmentation](https://github.com/wkentaro/labelme/blob/main/examples/instance_segmentation?raw=true))- [x] Exporting COCO-format dataset for instance segmentation. ([instance segmentation](https://github.com/wkentaro/labelme/blob/main/examples/instance_segmentation?raw=true))## Requirements- Ubuntu / macOS / Windows- Python3- [PyQt5 / PySide2](http://www.riverbankcomputing.co.uk/software/pyqt/intro)## InstallationThere are options:- Platform agnostic installation: [Anaconda](https://github.com/wkentaro/labelme/blob/main/#anaconda)- Platform specific installation: [Ubuntu](https://github.com/wkentaro/labelme/blob/main/#ubuntu), [macOS](https://github.com/wkentaro/labelme/blob/main/#macos), [Windows](https://github.com/wkentaro/labelme/blob/main/#windows)- Pre-build binaries from [the release section](https://github.com/wkentaro/labelme/releases)### AnacondaYou need install [Anaconda](https://www.continuum.io/downloads), then run below:```bash# python3conda create --name=labelme python=3source activate labelme# conda install -c conda-forge pyside2# conda install pyqt# pip install pyqt5  # pyqt5 can be installed via pip on python3pip install labelme# or you can install everything by conda command# conda install labelme -c conda-forge```### Ubuntu```bashsudo apt-get install labelme# orsudo pip3 install labelme# or install standalone executable from:# https://github.com/wkentaro/labelme/releases```### macOS```bashbrew install pyqt  # maybe pyqt5pip install labelme# orbrew install wkentaro/labelme/labelme  # command line interface# brew install --cask wkentaro/labelme/labelme  # app# or install standalone executable/app from:# https://github.com/wkentaro/labelme/releases```### WindowsInstall [Anaconda](https://www.continuum.io/downloads), then in an Anaconda Prompt run:```bashconda create --name=labelme python=3conda activate labelmepip install labelme# or install standalone executable/app from:# https://github.com/wkentaro/labelme/releases```## UsageRun `labelme --help` for detail.  The annotations are saved as a [JSON](http://www.json.org/) file.```bashlabelme  # just open gui# tutorial (single image example)cd examples/tutoriallabelme apc2016_obj3.jpg  # specify image filelabelme apc2016_obj3.jpg -O apc2016_obj3.json  # close window after the savelabelme apc2016_obj3.jpg --nodata  # not include image data but relative image path in JSON filelabelme apc2016_obj3.jpg \  --labels highland_6539_self_stick_notes,mead_index_cards,kong_air_dog_squeakair_tennis_ball  # specify label list# semantic segmentation examplecd examples/semantic_segmentationlabelme data_annotated/  # Open directory to annotate all images in itlabelme data_annotated/ --labels labels.txt  # specify label list with a file```For more advanced usage, please refer to the examples:* [Tutorial (Single Image Example)](https://github.com/wkentaro/labelme/blob/main/examples/tutorial)* [Semantic Segmentation Example](https://github.com/wkentaro/labelme/blob/main/examples/semantic_segmentation?raw=true)* [Instance Segmentation Example](https://github.com/wkentaro/labelme/blob/main/examples/instance_segmentation?raw=true)* [Video Annotation Example](https://github.com/wkentaro/labelme/blob/main/examples/video_annotation?raw=true)### Command Line Arguments- `--output` specifies the location that annotations will be written to. If the location ends with .json, a single annotation will be written to this file. Only one image can be annotated if a location is specified with .json. If the location does not end with .json, the program will assume it is a directory. Annotations will be stored in this directory with a name that corresponds to the image that the annotation was made on.- The first time you run labelme, it will create a config file in `~/.labelmerc`. You can edit this file and the changes will be applied the next time that you launch labelme. If you would prefer to use a config file from another location, you can specify this file with the `--config` flag.- Without the `--nosortlabels` flag, the program will list labels in alphabetical order. When the program is run with this flag, it will display labels in the order that they are provided.- Flags are assigned to an entire image. [Example](https://github.com/wkentaro/labelme/blob/main/examples/classification?raw=true)- Labels are assigned to a single polygon. [Example](https://github.com/wkentaro/labelme/blob/main/examples/bbox_detection?raw=true)## FAQ- **How to convert JSON file to numpy array?** See [examples/tutorial](https://github.com/wkentaro/labelme/blob/main/examples/tutorial#convert-to-dataset).- **How to load label PNG file?** See [examples/tutorial](https://github.com/wkentaro/labelme/blob/main/examples/tutorial#how-to-load-label-png-file).- **How to get annotations for semantic segmentation?** See [examples/semantic_segmentation](https://github.com/wkentaro/labelme/blob/main/examples/semantic_segmentation?raw=true).- **How to get annotations for instance segmentation?** See [examples/instance_segmentation](https://github.com/wkentaro/labelme/blob/main/examples/instance_segmentation?raw=true).## Developing```bashgit clone https://github.com/wkentaro/labelme.gitcd labelme# Install anaconda3 and labelmecurl -L https://github.com/wkentaro/dotfiles/raw/main/local/bin/install_anaconda3.sh | bash -s .source .anaconda3/bin/activatepip install -e .```## How to build standalone executableBelow shows how to build the standalone executable on macOS, Linux and Windows.  ```bash# Setup condaconda create --name labelme python=3.9conda activate labelme# Build the standalone executablepip install .pip install 'matplotlib&lt;3.3'pip install pyinstallerpyinstaller labelme.specdist/labelme --version```## How to contributeMake sure below test passes on your environment.  See `.github/workflows/ci.yml` for more detail.```bashpip install -r requirements-dev.txtflake8 .black --line-length 79 --check labelme/MPLBACKEND='agg' pytest -vsx tests/```## AcknowledgementThis repo is the fork of [mpitid/pylabelme](https://github.com/mpitid/pylabelme).</longdescription>
</pkgmetadata>