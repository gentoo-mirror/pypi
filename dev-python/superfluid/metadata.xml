<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;Welcome to Superfluid Python SDK(Unofficial) üëã&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;&lt;img  width=&quot;300&quot; padding=&quot;0 0 10px&quot; alt=&quot;Superfluid logo&quot; src=&quot;https://github.com/superfluid-finance/protocol-monorepo/raw/dev/sf-logo.png&quot; /&gt;&lt;p&gt;  &lt;a href=&quot;#&quot; target=&quot;_blank&quot;&gt;    &lt;img alt=&quot;License: MIT&quot; src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://twitter.com/Superfluid_HQ/&quot; target=&quot;blank&quot;&gt;    &lt;img alt=&quot;Twitter: Superfluid_HQ&quot; src=&quot;https://img.shields.io/twitter/follow/Superfluid_HQ.svg?style=social&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;&lt;/div&gt;### üè† [Homepage](https://superfluid.finance)### ‚ú® [Superfluid App](https://app.superfluid.finance/)### üìñ [Docs](https://docs.superfluid.finance)&lt;/br&gt;# Introductionsuperfluid.py is an application framework for interacting with the Superfluid Protocol using the Python Programming Language.# Features* Minimal Framework initialization (`rpc` and `chain id`)* New Operation syntax for transactions* Read/Create/Update/Delete Agreement Operations (Constant Flow Agreement and Instant Distribution Agreement(In development))# Notable Used Technologies* Python* Web3.py# Installation```bashpip install superfluid```# Usage```pythonfrom superfluid import CFA_V1from superfluid import Web3FlowInforpc: str = &quot;YOUR PREFERRED RPC&quot;chain_id: int = &quot;CHAIN ID&quot;############################################################ CONSTANT FLOW AGREEMENT OPERATIONS #################################################################cfaV1Instance = CFA_V1(rpc, chain_id)super_token: str = &quot;SUPER TOKEN ADDRESS&quot;sender: str = &quot;SENDER ADDRESS&quot;receiver: str = &quot;RECEIVER ADDRESS&quot;flow_rate: int = &quot;FLOW RATE&quot;PRIVATE_KEY: str = &quot;YOUR PRIVATE KEY&quot;flow_data: Web3FlowInfo = cfaV1Instance.get_flow(super_token, sender, receiver)create_flow_operation = cfaV1Instance.create_flow(    sender, receiver, super_token, flow_rate)transaction_hash = create_flow_operation.exec(PRIVATE_KEY)update_flow_operation = cfaV1Instance.update_flow(    sender, receiver, super_token, flow_rate)transaction_hash = update_flow_operation.exec(PRIVATE_KEY)delete_flow_operation = cfaV1Instance.delete_flow(    sender, receiver, super_token)transaction_hash = delete_flow_operation.exec(PRIVATE_KEY)```</longdescription>
</pkgmetadata>