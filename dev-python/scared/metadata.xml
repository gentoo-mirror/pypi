<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SCAred[![pipeline status](https://gitlab.com/eshard/scared/badges/master/pipeline.svg)](https://gitlab.com/eshard/scared/commits/master)[![PyPI version](https://badge.fury.io/py/scared.svg)](https://pypi.org/project/scared/)[![Conda installer](https://anaconda.org/eshard/scared/badges/installer/conda.svg)](https://anaconda.org/eshard/scared)[![Latest Conda release](https://anaconda.org/eshard/scared/badges/latest_release_date.svg)](https://anaconda.org/eshard/scared)scared is a side-channel analysis framework maintained by [eShard](http://www.eshard.com) team.## Getting started### RequirementsScared need python **3.7**, **3.8**, **3.9** or **3.10**.You can install `scared`, depending on your setup:- from source- with `pip`- with `conda`#### Install with `conda`You just have to run:```bashconda install -c eshard scared```#### Install with `pip`Python wheels are available from Pypi, just run:```bashpip install scared```#### Install from sourcesTo install from sources, you will need to run:```bashpip install .```from the source folder.If you are planning to contribute, see [CONTRIBUTING.md](CONTRIBUTING.md) to install the library in development mode and run the test suite.### Make a first cool thingStart using scared by doing a cool thing:```python# First import the libimport scaredimport numpy as np# Define a selection function@scared.attack_selection_functiondef first_add_key(plaintext, guesses):    res = np.empty((plaintext.shape[0], len(guesses), plaintext.shape[1]), dtype='uint8')    for i, guess in enumerate(guesses):        res[:, i, :] = np.bitwise_xor(plaintext, guess)    return res# Create an analysis CPAa = scared.CPAAttack(        selection_function=first_add_key,        model=scared.HammingWeight(),        discriminant=scared.maxabs)# Load some traces, for example a dpa v2 subsetths = scared.traces.read_ths_from_ets_file('dpa_v2.ets')# Create a container for your thscontainer = scared.Container(ths)# Run!a.run(container)```## DocumentationTo go further and learn all about scared, please go to [the full documentation](https://eshard.gitlab.io/scared).You can also have an interactive introduction to scared by launching these [notebooks with Binder](https://mybinder.org/v2/gl/eshard%2Fscared-notebooks/master).## ContributingAll contributions, starting with feedbacks, are welcomed.Please read [CONTRIBUTING.md](CONTRIBUTING.md) if you wish to contribute to the project.## LicenseThis library is licensed under LGPL V3 license. See the [LICENSE](LICENSE) file for details.It is mainly intended for non-commercial use, by academics, students or professional willing to learn the basics of side-channel analysis.If you wish to use this library in a commercial or industrial context, [eShard](https://www.eshard.com) provides commercial licenses under fees. [Contact us](mailto:scared@eshard.com)!## AuthorsSee [AUTHORS](AUTHORS.md) for the list of contributors to the project.## Binary builds availableBinary builds (wheels on pypi and conda builds) are available for the following platforms and Python version.Platforms:- Linux x86 64- Macosx x86 64Python version:- 3.6- 3.7- 3.8</longdescription>
</pkgmetadata>