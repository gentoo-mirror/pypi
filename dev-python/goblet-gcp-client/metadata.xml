<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Goblet GCP Client![PyPI](https://img.shields.io/pypi/v/goblet_gcp_client?color=blue&amp;style=plastic)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/goblet_gcp_client?style=plastic) Goblet GCP Client is a util library with support for creating GCP resource clients, GCP integration tests, and other related utils.## Getting startedTo install run: `pip install goblet-gcp-client`## Using a Client```pythonfrom goblet_gcp_client import Clientcloudfunction_client = Client(    &quot;cloudfunctions&quot;,    &quot;v1&quot;,    calls=&quot;projects.locations.functions&quot;,    parent_schema=&quot;projects/{project_id}/locations/{location_id}&quot;,)scheduler_client = Client(    &quot;cloudscheduler&quot;,    &quot;v1&quot;,    calls=&quot;projects.locations.jobs&quot;,    parent_schema=&quot;projects/{project_id}/locations/{location_id}&quot;,)# override default parent_key with &quot;name&quot;cloudfunction_client.execute(                &quot;get&quot;, parent_key=&quot;name&quot;, parent_schema=&quot;projects/{project_id}/locations/{location_id}/functions/{name}&quot;            )# pass in body paramssample_body = {}resp = cloudfunction_client.execute(                &quot;patch&quot;,                parent_key=&quot;name&quot;,                parent_schema=&quot;projects/{project_id}/locations/{location_id}/functions/{name}&quot;,                params={&quot;body&quot;: sample_body},            )# Wait for previous operation to completecloudfunction_client.wait_for_operation(resp[&quot;name&quot;], calls=&quot;operations&quot;)```## Writing Integration Tests:Write your test and set env variable `G_HTTP_TEST` to `RECORD`By default responses will be written to the `/tests/data` folder. You can customize this by setting `G_TEST_DATA_DIR` env variable.Setting the `G_MOCK_CREDENTIALS` environment variable will use AnonymousCredentials. ```pythondef TestDeploy(self):    monkeypatch.setenv(&quot;G_HTTP_TEST&quot;, &quot;RECORD&quot;)    monkeypatch.setenv(&quot;G_TEST_NAME&quot;, &quot;TEST_NAME&quot;)    cloudfunction_client = Client(        &quot;cloudfunctions&quot;,        &quot;v1&quot;,        calls=&quot;projects.locations.functions&quot;,        parent_schema=&quot;projects/{project_id}/locations/{location_id}&quot;,    )    cloudfunction_client.execute(        &quot;get&quot;, parent_key=&quot;name&quot;, parent_schema=&quot;projects/{project_id}/locations/{location_id}/functions/{name}&quot;    )```Running your test will record all responses that your Client makesNow you can run your tests with `G_HTTP_TEST` with `REPLAY`. You can access the responses with `get_responses` or `get_response````pythonfrom goblet_gcp_client import get_responses, get_response, get_replay_count, reset_replay_countdef TestDeploy(self):    monkeypatch.setenv(&quot;G_HTTP_TEST&quot;, &quot;REPLAY&quot;)    monkeypatch.setenv(&quot;G_TEST_NAME&quot;, &quot;TEST_NAME&quot;)    reset_replay_count()    cloudfunction_client = Client(        &quot;cloudfunctions&quot;,        &quot;v1&quot;,        calls=&quot;projects.locations.functions&quot;,        parent_schema=&quot;projects/{project_id}/locations/{location_id}&quot;,    )    cloudfunction_client.execute(        &quot;get&quot;, parent_key=&quot;name&quot;, parent_schema=&quot;projects/{project_id}/locations/{location_id}/functions/{name}&quot;    )    responses = get_responses(&quot;TEST_NAME&quot;)    assert len(responses) == 2    assert &quot;test_value&quot; in responses[0][&quot;body&quot;]    assert get_replay_count() == 1```You can assert that your tests are making all required api called by using `get_replay_count`. If you are running multiple tests you can run `reset_replay_count` before each test to ensure the counts are accurate. ## Point to EmulatorYou can point to an emulator by setting the `G_EMULATOR_HOST` environment variable, or specifying in the Client constructor.```pythonspanner_instances_client = Client(    resource=&quot;spanner&quot;,    version=&quot;v1&quot;,    calls=&quot;projects.instances&quot;    emulator_host=&quot;localhost:9020&quot;,)```## Features* GCP resource clients* GCP HTTP Test Recording and Replaying## Examples[Client and Testing Examples](https://github.com/goblet/goblet_gcp_client/blob/main/examples)## IssuesPlease file any issues, bugs or feature requests as an issue on our [GitHub](https://github.com/goblet/goblet_gcp_client/issues) page.## Want to ContributeIf you would like to contribute to the library (e.g. by improving the documentation, solving a bug or adding a cool new feature) submit a [pull request](https://github.com/goblet/goblet_gcp_client/pulls).</longdescription>
</pkgmetadata>