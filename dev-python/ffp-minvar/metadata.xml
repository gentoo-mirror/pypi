<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>FFP_MINVAR===# Table of Contents- [Installation](Installation)- [Documentation](Documentation)- [Github Description](#Github-Description)- [GSL Download](#GSL-Download)  - [OSX](#osx)  - [Ubuntu](#ubuntu)- [Compilation and Test](#Compilation)  - [Compile .so file](#Shared)  - [Test in python](#PythonTest)  - [Test in c](#CTest)# InstallationTo install ***ffp_minvar***, use this command in terminal:```bashpip3 install ffp_minvar```We assume you are using python &gt;= 3.6# DocumentationTo use the library, import the module like following:```bashfrom ffp_minvar import ffp_minvar_lib```Function Description- &lt;dt id=&quot;ffp_minvar_lib.ffp&quot;&gt;  &lt;code class=&quot;sig-prename descclassname&quot;&gt;ffp_minvar_lib.&lt;/code&gt;&lt;code class=&quot;sig-name descname&quot;&gt;ffp&lt;/code&gt;&lt;span class=&quot;sig-paren&quot;&gt;(&lt;/span&gt;&lt;em class=&quot;sig-param&quot;&gt;theta&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;B&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;V&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;Delta&lt;/em&gt;)&lt;/span&gt;  &lt;/dt&gt;  - &lt;span style=&quot;background-color:grey&quot;&gt;theta&lt;/span&gt;: A K-1 array of [np.zeros(K)](https://numpy.org/doc/stable/reference/generated/numpy.zeros.html)   - &lt;span style=&quot;background-color:grey&quot;&gt;B&lt;/span&gt;: An N-K [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html)  - &lt;span style=&quot;background-color:grey&quot;&gt;V&lt;/span&gt;: A K-K diagonal matrix as [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html). Note that V must be passed in as a diagonal matrix otherwise a *ValueError* will be raised.   - &lt;span style=&quot;background-color:grey&quot;&gt;Delta&lt;/span&gt;: An N-1 [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html). Contains the diagonal entries of the actual N-N matrix D.- &lt;dt id=&quot;ffp_minvar_lib.lo_minvar&quot;&gt;  &lt;code class=&quot;sig-prename descclassname&quot;&gt;ffp_minvar_lib.&lt;/code&gt;&lt;code class=&quot;sig-name descname&quot;&gt;lo_minvar&lt;/code&gt;&lt;span class=&quot;sig-paren&quot;&gt;(&lt;em class=&quot;sig-param&quot;&gt;B&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;V&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;Delta&lt;/em&gt;)&lt;/span&gt;  &lt;/dt&gt;  - &lt;span style=&quot;background-color:grey&quot;&gt;B&lt;/span&gt;: An N-K [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html)  - &lt;span style=&quot;background-color:grey&quot;&gt;V&lt;/span&gt;: A K-K diagonal matrix as [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html). Note that V must be passed in as a diagonal matrix otherwise a *ValueError* will be raised.   - &lt;span style=&quot;background-color:grey&quot;&gt;Delta&lt;/span&gt;: An N-1 [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html). Contains the diagonal entries of the actual N-N matrix D.- &lt;dt id=&quot;ffp_minvar_lib.psi&quot;&gt;  &lt;code class=&quot;sig-prename descclassname&quot;&gt;ffp_minvar_lib.&lt;/code&gt;&lt;code class=&quot;sig-name descname&quot;&gt;psi&lt;/code&gt;&lt;span class=&quot;sig-paren&quot;&gt;(&lt;em class=&quot;sig-param&quot;&gt;B&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;V&lt;/em&gt;, &lt;em class=&quot;sig-param&quot;&gt;Delta&lt;/em&gt;)&lt;/span&gt;  &lt;/dt&gt;  - &lt;span style=&quot;background-color:grey&quot;&gt;B&lt;/span&gt;: An N-K [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html)  - &lt;span style=&quot;background-color:grey&quot;&gt;V&lt;/span&gt;: A K-K diagonal matrix as [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html). Note that V must be passed in as a diagonal matrix otherwise a *ValueError* will be raised.   - &lt;span style=&quot;background-color:grey&quot;&gt;Delta&lt;/span&gt;: An N-1 [numpy.ndarray](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html). Contains the diagonal entries of the actual N-N matrix D.Examples:```bash#------------ ffp Test --------------#print(&quot;------------ ffp Test ------------&quot;)ffp_res = ffp_minvar_lib.ffp(theta, B, V, D)  print(ffp_res)#------------ Psi Test --------------#print(&quot;------------ Psi Test ------------&quot;)psi_res = ffp_minvar_lib.psi(B, V, D)  print(psi_res)#---------- lo_minvar Test ----------#print(&quot;------------ lo_minvar Test ------------&quot;)lo_minvar_res = ffp_minvar_lib.lo_minvar(B, V, D)print(lo_minvar_res)```  # Github Description`lib` folder stores the source python library. `lib/shared` folder stores the .so file used by the python library.`include` folder contains the header file of the algorithm.`src` folder contains the C file of the algorithm, which uses the GSL library from GNU. `obj` folder stores the object file of the compiled C file of the algorithm.`test` folder contains tests in C of the functions of the algorithm.`ffp_minvar.py` is the original version of the algorithm.`test_lib.py` is the test file of the python package.# GSL DownloadNote that this part is irrelevant to the installation of ***ffp_minvar*** package and is only for the download of GSL library. ## OSXApparently GSL can be installed through [Homebrew](https://brew.sh/) via ```bashbrew install gsl```though installing it manually is just as simple, which we now describe.- Download [gsl-latest.tar.gz](ftp://ftp.gnu.org/gnu/gsl/gsl-latest.tar.gz) from the [GSL ftp site](ftp://ftp.gnu.org/gnu/gsl/) and unzip it anywhere (e.g. /Downloads)- Open the unzipped `gsl` folder in Terminal (e.g. `cd ~/Downloads/gsl-2.4`- Run `sudo ./configure &amp;&amp; make &amp;&amp; make install`If the above gives a &quot;permission denied&quot; error, instead try```bashsudo make cleansudo chown -R $USER ../configure &amp;&amp; makemake install```## Ubuntu```bashsudo apt-get install libgsl-dev```You'll now be able to include GSL into your code from anywhere.# Compilation## SharedTo compile the .so file of the algorithm used by the python package, use this command under root folder. ```bashmake alg_lomv.so```## PythonTestTo run the test of the python package:1. Compile the .so file2. Make sure that your current python interpreter has installed `numpy`, `ctypes`, `pdb`, and `pathlib`.3. Use this command under root folder:    ```bash    python test_lib.py    ```## CTestTo compile the test of the algorithm in c, use this command under root folder:```bashmake test_alg./test_alg```</longdescription>
</pkgmetadata>