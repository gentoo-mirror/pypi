<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![auto-merge](https://github.com/airmonitor/aws-hexagonal-adapters/actions/workflows/auto_merge.yml/badge.svg)](https://github.com/airmonitor/aws-hexagonal-adapters/actions/workflows/auto_merge.yml)[![tests](https://github.com/airmonitor/aws-hexagonal-adapters/actions/workflows/tests.yml/badge.svg)](https://github.com/airmonitor/aws-hexagonal-adapters/actions/workflows/tests.yml)# aws-hexagonal-adaptersAdapters following hexagonal architecture to connect various AWS services# Example usage## S3### Download object```pythonfrom os import environfrom aws_hexagonal_adapters.s3_service import S3ServiceS3_SERVICE = S3Service(region_name=environ[&quot;CURRENT_REGION&quot;])# Download fileS3_SERVICE.download(    bucket=&quot;bucket_name&quot;, local_path=f&quot;/tmp/object&quot;, remote_path=&quot;object&quot;)```### Upload object```pythonfrom os import environfrom aws_hexagonal_adapters.s3_service import S3ServiceS3_SERVICE = S3Service(region_name=environ[&quot;CURRENT_REGION&quot;])# Download fileS3_SERVICE.upload(    bucket=&quot;bucket_name&quot;,    local_path=f&quot;/tmp/object_name&quot;,    remote_path=&quot;object_name&quot;,    extra_args={&quot;StorageClass&quot;: &quot;STANDARD_IA&quot;},)```### List objects```pythonfrom os import environfrom aws_hexagonal_adapters.s3_service import S3ServiceS3_SERVICE = S3Service(region_name=environ[&quot;CURRENT_REGION&quot;])# Download fileS3_SERVICE.list_files(bucket=&quot;bucket_name&quot;, prefix=&quot;folder_name&quot;)```### Delete object```pythonfrom os import environfrom aws_hexagonal_adapters.s3_service import S3ServiceS3_SERVICE = S3Service(region_name=environ[&quot;CURRENT_REGION&quot;])# Download fileS3_SERVICE.delete_object(bucket=&quot;bucket_name&quot;, key=&quot;object_name&quot;)```### Delete objects```pythonfrom os import environfrom aws_hexagonal_adapters.s3_service import S3ServiceS3_SERVICE = S3Service(region_name=environ[&quot;CURRENT_REGION&quot;])objects = [&quot;folder/object1.txt&quot;, &quot;folder/object2.txt&quot;, &quot;folder/object3.txt&quot;]# Download fileS3_SERVICE.delete_objects(bucket=&quot;bucket_name&quot;, keys=objects)```## DynamoDB### Get Item```pythonfrom os import environfrom aws_hexagonal_adapters.dynamo_db_service import DynamoDBServiceDYNAMODB_SERVICE = DynamoDBService(region_name=environ[&quot;REGION_NAME&quot;])item = DYNAMODB_SERVICE.get_item(    table_name=environ[&quot;DYNAMODB_TABLE_NAME&quot;],    key={&quot;pk&quot;: f'{environ[&quot;DYNAMODB_TABLE_ITEM_NAME&quot;]}', &quot;sk&quot;: &quot;1&quot;},)```### Get Items```pythonfrom os import environfrom boto3.dynamodb.conditions import Keyfrom aws_hexagonal_adapters.dynamo_db_service import DynamoDBServiceDYNAMODB_SERVICE = DynamoDBService(region_name=environ[&quot;REGION_NAME&quot;])item = DYNAMODB_SERVICE.get_items(    table_name=environ[&quot;DYNAMODB_TABLE_NAME&quot;],    filter_expression=Key(&quot;sk&quot;).eq(&quot;2&quot;),)```### Scan```pythonfrom os import environfrom aws_hexagonal_adapters.dynamo_db_service import DynamoDBServiceDYNAMODB_SERVICE = DynamoDBService(region_name=environ[&quot;REGION_NAME&quot;])item = DYNAMODB_SERVICE.scan_items(    table_name=environ[&quot;DYNAMODB_TABLE_NAME&quot;],    index_name=environ[&quot;DYNAMODB_INDEX_NAME&quot;],)```## SQS```pythonfrom os import environfrom aws_hexagonal_adapters.sqs_service import SQSServiceSQS_SERVICE = SQSService(region_name=environ[&quot;REGION_NAME&quot;])messages = SQS_SERVICE.receive_messages(queue_url=environ[&quot;SQS_QUEUE_NAME&quot;])```</longdescription>
</pkgmetadata>