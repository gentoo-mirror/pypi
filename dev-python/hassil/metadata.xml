<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HassILThe Home Assistant Intent Language (HassIL) parser for [intents](https://github.com/home-assistant/intents).## Dependencies* PyYAML## InstallationRun the `script/setup` script to automatically create a virtual environment and install the requirements.# Running``` shpython3 -m hassil &lt;yaml_file_or_directory&gt; [&lt;yaml_file_or_directory&gt; ...]```Once loaded, you may type in a sentence and see what intent it matches.For example:``` shpython3 -m hassil examples/en.yaml --areas 'living room'what is the temperature in the living room{'intent': 'HassClimateGetTemperature', 'area': 'living room', 'domain': 'climate'}```Make sure to provide area names with `--areas`. Device or entity names can be provided with `--names`.``` shpython3 -m hassil examples/en.yaml --areas office --names trapdooropen the trapdoor in the office{'intent': 'HassOpenCover', 'name': 'trapdoor', 'area': 'office'}```### Sampling SentencesSentences for each intent can be sampled from the intent YAML files:``` shpython3 -m hassil.sample examples/en.yaml -n 1{&quot;intent&quot;: &quot;HassTurnOn&quot;, &quot;text&quot;: &quot;turn on the entity&quot;}{&quot;intent&quot;: &quot;HassTurnOff&quot;, &quot;text&quot;: &quot;turn off the entity&quot;}{&quot;intent&quot;: &quot;HassOpenCover&quot;, &quot;text&quot;: &quot;open the entity in the area&quot;}{&quot;intent&quot;: &quot;HassCloseCover&quot;, &quot;text&quot;: &quot;close the entity in the area&quot;}{&quot;intent&quot;: &quot;HassLightsSet&quot;, &quot;text&quot;: &quot;set the entity color to red&quot;}{&quot;intent&quot;: &quot;HassClimateSetTemperature&quot;, &quot;text&quot;: &quot;set temperature to 0 degrees in the area&quot;}{&quot;intent&quot;: &quot;HassClimateGetTemperature&quot;, &quot;text&quot;: &quot;what is the temperature in the area&quot;}```The `--areas` and `--names` arguments are the same from `python3 -m hassil`, but default to generic &quot;area&quot; and &quot;entity&quot; terms.Exclude the `-n` argument to sample all possible sentences.## Sentence TemplatesUses a custom parser written in Python.* Alternative words or phrases  * `(red | green | blue)`  * `turn(s | ed | ing)`* Optional words or phrases  * `[the]`  * `[this | that]`  * `light[s]`* Permutations of words or phrases  * `(patience; you must have) my young Padawan`  * `is [the] light (on; in &lt;area&gt;)`* Slot Lists  * `{list_name}`  * `{list_name:slot_name}`  * Refers to a pre-defined list of values in YAML (`lists`)* Expansion Rules  * `&lt;rule_name&gt;`  * Refers to a pre-defined expansion rule in YAML (`expansion_rules`), either global or local (particular to the intent to which the sentence refers)## YAML Format``` yamllanguage: &quot;&lt;language code&gt;&quot;intents:  &lt;intent name&gt;:    data:      # List of sentences/slots/etc.      - sentences:          - &quot;&lt;sentence template&gt;&quot;          - &quot;&lt;sentence template&gt;&quot;        # Optional        slots:          # Fixed slots for the recognized intent          &lt;name&gt;: &lt;value&gt;        requires_context:          # Must be present in match context          &lt;name&gt;: # Any provided value is good        excludes_context:          # Must NOT be present in match context          &lt;name&gt;: &lt;value or list&gt;        expansion_rules:          # Expansion rules which only apply to the intent, referenced as &lt;rule_name&gt;          &lt;rule_name&gt;: &lt;sentence template&gt;# Optional lists of items that become alternatives in sentence templateslists:  # Referenced as {list_name} or {list_name:slot_name}  &lt;list name&gt;:    values:      - &quot;items&quot;      - &quot;in list&quot;      - in: &quot;text in&quot;        out: &lt;value for slot&gt;        # Optional        context:          &lt;name&gt;: &lt;value&gt;  &lt;range_name&gt;    range:      type: &quot;number&quot;      from: 0      to: 100  # inclusive  &lt;wildcard_name&gt;    wildcard: true# Optional rules that are expanded in sentence templatesexpansion_rules:  # Referenced as &lt;rule_name&gt;  &lt;rule_name&gt;: &quot;&lt;sentence template&gt;&quot;# Optional words that the intent recognizer can skip during recognitionskip_words:  - &quot;&lt;word&gt;&quot;```</longdescription>
</pkgmetadata>