<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## martor [![pypi version][1]][2] [![paypal donation][3]][4][![license][5]][6] [![python version][7]][8] [![django version][9]][10] [![build][11]][12] [![black][18]][19]**Martor** is a Markdown Editor plugin for Django, supported for _Bootstrap_ &amp; _Semantic-UI_.### Features* Live Preview* Integrated with [_Ace Editor_](https://ace.c9.io)* Supported with [_Bootstrap_](https://getbootstrap.com) and [_Semantic-UI_](https://semantic-ui.com)* Supported Multiple Fields [_fixed this issue_](https://github.com/agusmakmun/django-markdown-editor/issues/3)* Upload Images to imgur.com _(via API)_ and [custom uploader][13]* Direct Mention users `@[username]` - _(requires user to logged in)_.* Supports embed/iframe video from (Youtube, Vimeo, Dailymotion, Yahoo, Veoh, &amp; Metacafe)* Spellchecking (only supports US English at this time)* Emoji `:emoji_name:` + Cheat sheets* Martor Commands Reference* Supports Django Admin* Toolbar Buttons* Highlight `pre`### Preview![editor](https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-editor.png)![preview](https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-preview.png)### Requirements* `Django&gt;=3.2`* `Markdown&gt;=3.0`* `requests&gt;=2.12.4`* `bleach`### InstallationMartor is available directly from [PyPI][2]:**1.** Installing the package.```$ pip install martor```**2.** Don't forget to add `'martor'` to your `'INSTALLED_APPS'` setting _(without migrations)_.```python# settings.pyINSTALLED_APPS = [    ....    'martor',]```**3.** Add url pattern to your `urls.py.````python# urls.pyurlpatterns = [    ...    path('martor/', include('martor.urls')),]```**4.** Collect martor's static files in your `STATIC_ROOT` folder.```./manage.py collectstatic```### Setting Configurations `settings.py`Please register your application at https://api.imgur.com/oauth2/addclientto get `IMGUR_CLIENT_ID` and `IMGUR_API_KEY`.```python# Choices are: &quot;semantic&quot;, &quot;bootstrap&quot;MARTOR_THEME = 'bootstrap'# Global martor settings# Input: string boolean, `true/false`MARTOR_ENABLE_CONFIGS = {    'emoji': 'true',        # to enable/disable emoji icons.    'imgur': 'true',        # to enable/disable imgur/custom uploader.    'mention': 'false',     # to enable/disable mention    'jquery': 'true',       # to include/revoke jquery (require for admin default django)    'living': 'false',      # to enable/disable live updates in preview    'spellcheck': 'false',  # to enable/disable spellcheck in form textareas    'hljs': 'true',         # to enable/disable hljs highlighting in preview}# To show the toolbar buttonsMARTOR_TOOLBAR_BUTTONS = [    'bold', 'italic', 'horizontal', 'heading', 'pre-code',    'blockquote', 'unordered-list', 'ordered-list',    'link', 'image-link', 'image-upload', 'emoji',    'direct-mention', 'toggle-maximize', 'help']# To setup the martor editor with title label or not (default is False)MARTOR_ENABLE_LABEL = False# Imgur API KeysMARTOR_IMGUR_CLIENT_ID = 'your-client-id'MARTOR_IMGUR_API_KEY   = 'your-api-key'# MarkdownifyMARTOR_MARKDOWNIFY_FUNCTION = 'martor.utils.markdownify' # defaultMARTOR_MARKDOWNIFY_URL = '/martor/markdownify/' # default# Markdown extensions (default)MARTOR_MARKDOWN_EXTENSIONS = [    'markdown.extensions.extra',    'markdown.extensions.nl2br',    'markdown.extensions.smarty',    'markdown.extensions.fenced_code',    # Custom markdown extensions.    'martor.extensions.urlize',    'martor.extensions.del_ins',      # ~~strikethrough~~ and ++underscores++    'martor.extensions.mention',      # to parse markdown mention    'martor.extensions.emoji',        # to parse markdown emoji    'martor.extensions.mdx_video',    # to parse embed/iframe video    'martor.extensions.escape_html',  # to handle the XSS vulnerabilities]# Markdown Extensions ConfigsMARTOR_MARKDOWN_EXTENSION_CONFIGS = {}# Markdown urlsMARTOR_UPLOAD_URL = '' # Completely disable the endpoint# or:MARTOR_UPLOAD_URL = '/martor/uploader/' # defaultMARTOR_SEARCH_USERS_URL = '' # Completely disables the endpoint# or:MARTOR_SEARCH_USERS_URL = '/martor/search-user/' # default# Markdown Extensions# MARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://www.webfx.com/tools/emoji-cheat-sheet/graphics/emojis/'     # from webfxMARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://github.githubassets.com/images/icons/emoji/'                  # default from github# or:MARTOR_MARKDOWN_BASE_EMOJI_URL = ''  # Completely disables the endpointMARTOR_MARKDOWN_BASE_MENTION_URL = 'https://python.web.id/author/'                                      # please change this to your domain# If you need to use your own themed &quot;bootstrap&quot; or &quot;semantic ui&quot; dependency# replace the values with the file in your static files dirMARTOR_ALTERNATIVE_JS_FILE_THEME = &quot;semantic-themed/semantic.min.js&quot;   # default NoneMARTOR_ALTERNATIVE_CSS_FILE_THEME = &quot;semantic-themed/semantic.min.css&quot; # default NoneMARTOR_ALTERNATIVE_JQUERY_JS_FILE = &quot;jquery/dist/jquery.min.js&quot;        # default None# URL schemes that are allowed within linksALLOWED_URL_SCHEMES = [    &quot;file&quot;, &quot;ftp&quot;, &quot;ftps&quot;, &quot;http&quot;, &quot;https&quot;, &quot;irc&quot;, &quot;mailto&quot;,    &quot;sftp&quot;, &quot;ssh&quot;, &quot;tel&quot;, &quot;telnet&quot;, &quot;tftp&quot;, &quot;vnc&quot;, &quot;xmpp&quot;,]# https://gist.github.com/mrmrs/7650266ALLOWED_HTML_TAGS = [    &quot;a&quot;, &quot;abbr&quot;, &quot;b&quot;, &quot;blockquote&quot;, &quot;br&quot;, &quot;cite&quot;, &quot;code&quot;, &quot;command&quot;,    &quot;dd&quot;, &quot;del&quot;, &quot;dl&quot;, &quot;dt&quot;, &quot;em&quot;, &quot;fieldset&quot;, &quot;h1&quot;, &quot;h2&quot;, &quot;h3&quot;, &quot;h4&quot;, &quot;h5&quot;, &quot;h6&quot;,    &quot;hr&quot;, &quot;i&quot;, &quot;iframe&quot;, &quot;img&quot;, &quot;input&quot;, &quot;ins&quot;, &quot;kbd&quot;, &quot;label&quot;, &quot;legend&quot;,    &quot;li&quot;, &quot;ol&quot;, &quot;optgroup&quot;, &quot;option&quot;, &quot;p&quot;, &quot;pre&quot;, &quot;small&quot;, &quot;span&quot;, &quot;strong&quot;,    &quot;sub&quot;, &quot;sup&quot;, &quot;table&quot;, &quot;tbody&quot;, &quot;td&quot;, &quot;tfoot&quot;, &quot;th&quot;, &quot;thead&quot;, &quot;tr&quot;, &quot;u&quot;, &quot;ul&quot;]# https://github.com/decal/werdlists/blob/master/html-words/html-attributes-list.txtALLOWED_HTML_ATTRIBUTES = [    &quot;alt&quot;, &quot;class&quot;, &quot;color&quot;, &quot;colspan&quot;, &quot;datetime&quot;,  # &quot;data&quot;,    &quot;height&quot;, &quot;href&quot;, &quot;id&quot;, &quot;name&quot;, &quot;reversed&quot;, &quot;rowspan&quot;,    &quot;scope&quot;, &quot;src&quot;, &quot;style&quot;, &quot;title&quot;, &quot;type&quot;, &quot;width&quot;]```Check this setting is not set else csrf will not be sent over ajax calls:```pythonCSRF_COOKIE_HTTPONLY = False```### Usage#### Model```pythonfrom django.db import modelsfrom martor.models import MartorFieldclass Post(models.Model):    description = MartorField()```#### Form```pythonfrom django import formsfrom martor.fields import MartorFormFieldclass PostForm(forms.Form):    description = MartorFormField()```#### Admin```pythonfrom django.db import modelsfrom django.contrib import adminfrom martor.widgets import AdminMartorWidgetfrom yourapp.models import YourModelclass YourModelAdmin(admin.ModelAdmin):    formfield_overrides = {        models.TextField: {'widget': AdminMartorWidget},    }admin.site.register(YourModel, YourModelAdmin)```#### Template RendererSimply safely parse markdown content as html ouput by loading templatetags from `martor/templatetags/martortags.py`.```html{% load martortags %}{{ field_name|safe_markdown }}# example{{ post.description|safe_markdown }}```Don't miss to include the required css &amp; js files before use.You can take a look at this folder [martor_demo/app/templates][14] for more details.The below example is a one of the way to implement it when you choose the `MARTOR_THEME = 'bootstrap'`:```html{% extends &quot;bootstrap/base.html&quot; %}{% load static %}{% load martortags %}{% block css %}  &lt;link href=&quot;{% static 'plugins/css/ace.min.css' %}&quot; type=&quot;text/css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; /&gt;  &lt;link href=&quot;{% static 'martor/css/martor.bootstrap.min.css' %}&quot; type=&quot;text/css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; /&gt;{% endblock %}{% block content %}  &lt;div class=&quot;martor-preview&quot;&gt;    &lt;h1&gt;Title: {{ post.title }}&lt;/h1&gt;    &lt;p&gt;&lt;b&gt;Description:&lt;/b&gt;&lt;/p&gt;    &lt;hr /&gt;    {{ post.description|safe_markdown }}  &lt;/div&gt;{% endblock %}{% block js %}  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/highlight.min.js' %}&quot;&gt;&lt;/script&gt;  &lt;script&gt;    $('.martor-preview pre').each(function(i, block){        hljs.highlightBlock(block);    });  &lt;/script&gt;{% endblock %}```#### Template Editor FormDifferent with *Template Renderer*, the *Template Editor Form* have more css &amp; javascript dependencies.```html{% extends &quot;bootstrap/base.html&quot; %}{% load static %}{% block css %}  &lt;link href=&quot;{% static 'plugins/css/ace.min.css' %}&quot; type=&quot;text/css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; /&gt;  &lt;link href=&quot;{% static 'plugins/css/resizable.min.css' %}&quot; type=&quot;text/css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; /&gt;  &lt;link href=&quot;{% static 'martor/css/martor.bootstrap.min.css' %}&quot; type=&quot;text/css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; /&gt;{% endblock %}{% block content %}  &lt;form class=&quot;form&quot; method=&quot;post&quot;&gt;{% csrf_token %}    &lt;div class=&quot;form-group&quot;&gt;      {{ form.title }}    &lt;/div&gt;    &lt;div class=&quot;form-group&quot;&gt;      {{ form.description }}    &lt;/div&gt;    &lt;div class=&quot;form-group&quot;&gt;      &lt;button class=&quot;btn btn-success&quot;&gt;        &lt;i class=&quot;save icon&quot;&gt;&lt;/i&gt; Save Post      &lt;/button&gt;    &lt;/div&gt;  &lt;/form&gt;{% endblock %}{% block js %}  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/ace.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/mode-markdown.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/ext-language_tools.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/theme-github.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/typo.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/spellcheck.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/highlight.min.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/resizable.min.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'plugins/js/emojis.min.js' %}&quot;&gt;&lt;/script&gt;  &lt;script type=&quot;text/javascript&quot; src=&quot;{% static 'martor/js/martor.bootstrap.min.js' %}&quot;&gt;&lt;/script&gt;{% endblock %}```### Custom UploaderIf you want to save the images uploaded to your storage,**Martor** also provides a way to handle this. Please checkout this [WIKI][13]### Test Martor from this RepositoryAssuming you are already setup with a virtual enviroment (virtualenv):```$ git clone https://github.com/agusmakmun/django-markdown-editor.git$ cd django-markdown-editor/ &amp;&amp; python setup.py install$ cd martor_demo/$ python manage.py makemigrations &amp;&amp; python manage.py migrate$ python manage.py runserver```Checkout at http://127.0.0.1:8000/simple-form/ on your browser.### Martor Commands Reference![command refference](https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/.etc/images/bootstrap/martor-guide.png)### Notes**Martor** was inspired by these great projects: [django-markdownx][15], [Python Markdown][16] and [Online reStructuredText editor][17].[1]: https://img.shields.io/pypi/v/martor.svg[2]: https://pypi.python.org/pypi/martor[3]: https://img.shields.io/badge/donate-paypal-blue[4]: https://www.paypal.com/paypalme/summonagus[5]: https://img.shields.io/badge/license-GNUGPLv3-blue.svg[6]: https://raw.githubusercontent.com/agusmakmun/django-markdown-editor/master/LICENSE[7]: https://img.shields.io/pypi/pyversions/martor.svg[8]: https://pypi.python.org/pypi/martor[9]: https://img.shields.io/badge/Django-3.2%20%3E=%204.1-green.svg[10]: https://www.djangoproject.com[11]: https://img.shields.io/github/actions/workflow/status/agusmakmun/django-markdown-editor/run-tests.yml?branch=master[12]: https://github.com/agusmakmun/django-markdown-editor/actions/workflows/run-tests.yml[13]: https://github.com/agusmakmun/django-markdown-editor/wiki[14]: https://github.com/agusmakmun/django-markdown-editor/tree/master/martor_demo/app/templates[15]: https://github.com/adi-/django-markdownx[16]: https://github.com/waylan/Python-Markdown[17]: http://rst.ninjs.org[18]: https://img.shields.io/badge/code%20style-black-000000.svg[19]: https://github.com/ambv/black</longdescription>
</pkgmetadata>