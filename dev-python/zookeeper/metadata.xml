<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Zookeeper[![GitHub Actions](https://github.com/larq/zookeeper/workflows/Unittest/badge.svg)](https://github.com/larq/zookeeper/actions?workflow=Unittest) [![Codecov](https://img.shields.io/codecov/c/github/larq/zookeeper)](https://codecov.io/github/larq/zookeeper?branch=main) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/zookeeper.svg)](https://pypi.org/project/zookeeper/) [![PyPI](https://img.shields.io/pypi/v/zookeeper.svg)](https://pypi.org/project/zookeeper/) [![PyPI - License](https://img.shields.io/pypi/l/zookeeper.svg)](https://github.com/plumerai/zookeeper/blob/main/LICENSE) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)A small library for configuring modular applications.### Installation```consolepip install zookeeper```### ComponentsThe fundamental building blocks of Zookeeper are components. The[`@component`](zookeeper/component.py) decorator is used to turn classes intocomponents. These component classes can have configurable fields, which aredeclared with the `Field` constructor and class-level type annotations. Fieldscan be created with or without default values. Components can also be nested,with `ComponentField`s, such that child componenents can access the field valuesdefined on their parents.For example:```pythonfrom zookeeper import component@componentclass ChildComponent:    a: int = Field()                          # An `int` field with no default set    b: str = Field(&quot;foo&quot;)                     # A `str` field with default value `&quot;foo&quot;`@componentclass ParentComponent:    a: int = Field()                          # The same `int` field as the child    child: ChildComponent = ComponentField()  # A nested component field, of type `ChildComponent````After instantiation, components can be 'configured' with a configurationdictionary, containing values for a tree of nested fields. This processautomatically injects the correct values into each field.If a child sub-component declares a field which already exists in somecontaining ancestor component, then it will pick up the value that's set on theparent, unless a 'scoped' value is set on the child.For example:```from zookeeper import configurep = ParentComponent()configure(    p,    {        &quot;a&quot;: 5,        &quot;child.a&quot;: 4,    })&gt;&gt;&gt; 'ChildComponent' is the only concrete component class that satisfies the type&gt;&gt;&gt; of the annotated parameter 'ParentComponent.child'. Using an instance of this&gt;&gt;&gt; class by default.print(p)&gt;&gt;&gt; ParentComponent(&gt;&gt;&gt;     a = 5,&gt;&gt;&gt;     child = ChildComponent(&gt;&gt;&gt;         a = 4,&gt;&gt;&gt;         b = &quot;foo&quot;&gt;&gt;&gt;     )&gt;&gt;&gt; )```### Tasks and the CLIThe [`@task`](zookeeper/task.py) decorator is used to define Zookeeper tasks andcan be applied to any class that implements an argument-less `run` method. Suchtasks can be run through the Zookeeper CLI, with parameter values passed inthrough CLI arguments (`configure` is implicitly called).For example:```pythonfrom zookeeper import cli, task@taskclass UseChildA:    parent: ParentComponent = ComponentField()    def run(self):        print(self.parent.child.a)@taskclass UseParentA(UseChildA):    def run(self):        print(self.parent.a)if __name__ == &quot;__main__&quot;:    cli()```Running the above file then gives a nice CLI interface:```python test.py use_child_a&gt;&gt;&gt; ValueError: No configuration value found for annotated parameter 'UseChildA.parent.a' of type 'int'.python test.py use_child_a a=5&gt;&gt;&gt; 5python test.py use_child_a a=5 child.a=3&gt;&gt;&gt; 3python test.py use_parent_a a=5 child.a=3&gt;&gt;&gt; 5```### Using Zookeeper to define Larq or Keras experimentsSee [examples/larq_experiment.py](examples/larq_experiment.py) for an example ofhow to use Zookeeper to define all the necessary components (dataset,preprocessing, and model) of a Larq experiment: training a BinaryNet onMNIST. This example can be easily adapted to other Larq or Keras models andother datasets.</longdescription>
</pkgmetadata>