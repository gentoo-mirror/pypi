<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Arcee## *The OptScale ML profiling tool by Hystax*Arcee is a tool that hepls you to integrate ML tasks with [OptScale](https://my.optscale.com/).This tool can automatically collect executor metadata from cloud and process stats.## InstallationArcee requires python 3.7+ to run.```shpip install optscale-arcee```## UsageFirst of all you need to import and init arcee in your code:```shimport optscale_arcee as arcee``````sh# init arcee using context manager syntaxwith arcee.init('token', 'model_key'):    # some code```To use custom endpoint and enable\disable ssl checks (supports using self-signed ssl certificates):```shwith arcee.init('token', 'model_key', endpoint_url='https://my.custom.endpoint:443/arcee/v2', ssl=False):    # some code```Alternatively arcee can be initialized via function call. However manual finish is required:```sharcee.init('token', 'model_key')# some codearcee.finish()```Or in error case:```sharcee.init('token', 'model_key')# some codearcee.error()```To send stats:```sharcee.send({&quot;loss&quot;: 2.0012, &quot;iter&quot;: 2, &quot;epoch&quot;: 1})```(key should be string, value - int or float, multiple values can be sent)To add tags to model run (key, value):```sharcee.tag(&quot;project&quot;, &quot;torchvision demo&quot;)```To add milestones:```sharcee.milestone(&quot;Download test data&quot;)```To add stages:```sharcee.stage(&quot;calculation&quot;)```</longdescription>
</pkgmetadata>