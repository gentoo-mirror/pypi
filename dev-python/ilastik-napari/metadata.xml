<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ilastik-napari[Napari][napari] plugin for interactive pixel classification.Designed to be similar to the pixel classification workflow in [classic ilastik][ilastik].## InstallationThis plugin requires you to use a _conda_ environment. The environment manager conda comes in a few different forms.If you haven't used conda before, you can find more information in the [conda user guide][conda-user-guide].You can use whichever variant you prefer, as the resulting environment should be the same, but we recommend the [_mambaforge_][mambaforge] variant as it is usually the fastest.When using mambaforge, the `mamba` command usually replaces the `conda` command one would otherwise use.Once you have installed mambaforge, set up a conda environment with napari and the _fastfilters_ package, and then use pip to install _ilastik-napari_:```shellmamba create -y -c ilastik-forge -c conda-forge -n my-napari-env napari fastfiltersmamba activate my-napari-envpip install ilastik-napari```Finally, run napari:```shellnapari```That's it! You should be able to find the ilastik-napari plugin in the Plugins menu.If you prefer to __install napari using pip__ instead of conda:Make sure to install `napari[all]`.Unless you want to [choose a PyQt implementation other than _PyQt5_][napari-pyqt], in which case you should leave out the `[all]` extra.## UsageAs a prerequisite, make sure you understand the [napari basics][napari-quickstart].1. Open your image, or use a sample in _File - Open Sample_.   ![Use a sample image](https://ilastik.org/assets/ilastik-napari/image-sample.png &quot;Use a sample image&quot;)2. Activate the plugin in the _Plugins_ menu.   ![Activate the plugin](https://ilastik.org/assets/ilastik-napari/activation.png &quot;Activate the plugin&quot;)3. In _layer list_, create a new _Labels_ layer.   ![Labels layer](https://ilastik.org/assets/ilastik-napari/labels-layer.png &quot;Labels layer&quot;)4. In _layers control_, switch to the _paint_ action.   ![Paint action](https://ilastik.org/assets/ilastik-napari/paint-action.png &quot;Paint action&quot;)5. Draw your background labels.   ![Paint the background](https://ilastik.org/assets/ilastik-napari/draw-background.png &quot;Paint the background&quot;)6. Switch to a new label.   ![Switch label](https://ilastik.org/assets/ilastik-napari/new-label.png &quot;Switch label&quot;)7. Draw your foreground labels.   ![Paint cells](https://ilastik.org/assets/ilastik-napari/draw-cells.png &quot;Paint cells&quot;)8. Select output types you need, and click _Run_.   ![Plugin interface](https://ilastik.org/assets/ilastik-napari/interface.png &quot;Plugin interface&quot;)9. The plugin will create one layer for each output type, which you save as normal napari layers.   ![Example output](https://ilastik.org/assets/ilastik-napari/example.png &quot;Example output&quot;)## DevelopmentCreate a development environment:```mamba create -y -n ilastik-napari-dev -c ilastik-forge fastfilters setuptools-scm conda-build anaconda-clientconda activate napari-ilastik-devpip install -e .```Build conda package:```conda activate napari-ilastik-devmamba build -c ilastik-forge conda-recipeanaconda upload /path/to/the/new/package.tar.bz2```Build wheel and sdist packages:```conda activate napari-ilastik-devpip install build twinepython -m buildpython -m twine upload --repository testpypi dist/*```[napari]: https://napari.org/[ilastik]: https://www.ilastik.org/[conda-user-guide]: https://docs.conda.io/projects/conda/en/latest/user-guide/index.html[miniconda]: https://docs.conda.io/en/latest/miniconda.html[mambaforge]: https://github.com/conda-forge/miniforge#mambaforge[napari-quickstart]: https://napari.org/tutorials/fundamentals/quick_start.html[napari-pyqt]: https://napari.org/stable/plugins/best_practices.html#don-t-include-pyside2-or-pyqt5-in-your-plugin-s-dependencies</longdescription>
</pkgmetadata>