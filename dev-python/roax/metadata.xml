<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Roax[![PyPI](https://badge.fury.io/py/roax.svg)](https://badge.fury.io/py/roax)[![License](https://img.shields.io/github/license/roax/roax.svg)](https://github.com/roax/roax/blob/master/LICENSE)[![GitHub](https://img.shields.io/badge/github-master-blue.svg)](https://github.com/roax/roax/)[![Travis CI](https://travis-ci.org/roax/roax.svg?branch=master)](https://travis-ci.org/roax/roax)[![Codecov](https://codecov.io/gh/roax/roax/branch/master/graph/badge.svg)](https://codecov.io/gh/roax/roax)[![Black](https://img.shields.io/badge/code%20style-black-black.svg)](https://github.com/psf/black)Ro·ax /ˈɹoʊ.æks/: A lightweight Python resource-oriented framework. ## IntroductionRoax is a lightweight framework for building resource-oriented applications in Python.By composing your application as a set of resources that expose operations through a uniforminterface, they can be automatically exposed through a REST and/or command line interface.## Features* Resource operations accessed through WSGI based REST API.* Command-line interface to resource operations.* Generates [OpenAPI](https://www.openapis.org/) interface description, compatible with [Swagger UI](https://swagger.io/tools/swagger-ui/).* Schema enforcement of resource operation parameters and return values.* Authorization to resource operations enforced through imperative security policies.## Quick start### Installation```pip install roax```### Hello worldHere is a minimal application that responds with `&quot;Hello world!&quot;` when theclient accesses [http://localhost:8000/hello](http://localhost:8000/hello).```pythonimport roax.schema as schemafrom roax.resource import Resource, operationfrom roax.wsgi import Appfrom wsgiref.simple_server import make_serverclass HelloResource(Resource):    @operation(returns=schema.str(), security=[])    def read(self):        return &quot;Hello world!&quot;app = App(&quot;/&quot;, &quot;Hello&quot;, &quot;1.0&quot;)app.register_resource(&quot;/hello&quot;, HelloResource())if __name__== &quot;__main__&quot;:    make_server(&quot;&quot;, 8000, app).serve_forever()```## Develop```poetry installpoetry run pre-commit install```## Test```poetry run pytest```</longdescription>
</pkgmetadata>