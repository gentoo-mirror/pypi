<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># logzero![Build status for master branch](https://github.com/metachris/logzero/workflows/Run%20the%20tests/badge.svg)[![Documentation Status](https://readthedocs.org/projects/logzero/badge/?version=latest)](https://logzero.readthedocs.io/en/latest/?badge=latest)[![Latest version on PyPi](https://img.shields.io/pypi/v/logzero.svg)](https://pypi.python.org/pypi/logzero)[![Anaconda-Server Badge](https://anaconda.org/conda-forge/logzero/badges/version.svg)](https://anaconda.org/conda-forge/logzero)[![Downloads](https://pepy.tech/badge/logzero/week)](https://pepy.tech/project/logzero)Robust and effective logging for Python 2 and 3.![Logo](https://raw.githubusercontent.com/metachris/logzero/master/docs/_static/demo-output-with-beaver.png)* Documentation: https://logzero.readthedocs.io* GitHub: https://github.com/metachris/logzeroFeatures--------* Easy logging to console and/or (rotating) file.* Provides a fully configured standard [Python logger object](https://docs.python.org/2/library/logging.html#module-level-functions&gt;).* JSON logging (with integrated [python-json-logger](https://github.com/madzak/python-json-logger))* Pretty formatting, including level-specific colors in the console.* No dependencies* Windows color output supported by [colorama](https://github.com/tartley/colorama)* Robust against str/bytes encoding problems, works with all kinds of character encodings and special characters.* Multiple loggers can write to the same logfile (also across multiple Python files and processes).* Global default logger with [logzero.logger](https://logzero.readthedocs.io/en/latest/#i-logzero-logger) and custom loggers with [logzero.setup_logger(..)](https://logzero.readthedocs.io/en/latest/#i-logzero-setup-logger).* Compatible with Python 2 and 3.* All contained in a [single file](https://github.com/metachris/logzero/blob/master/logzero/__init__.py).* Licensed under the MIT license.* Heavily inspired by the [Tornado web framework](https://github.com/tornadoweb/tornado).Installation:```shellpython -m pip install logzero```Example Usage-------------```pythonfrom logzero import loggerlogger.debug(&quot;hello&quot;)logger.info(&quot;info&quot;)logger.warning(&quot;warn&quot;)logger.error(&quot;error&quot;)# This is how you'd log an exceptiontry:    raise Exception(&quot;this is a demo exception&quot;)except Exception as e:    logger.exception(e)# JSON loggingimport logzerologzero.json()logger.info(&quot;JSON test&quot;)# Start writing into a logfilelogzero.logfile(&quot;/tmp/logzero-demo.log&quot;)# Set a minimum loglevellogzero.loglevel(logzero.WARNING)```This is the output:![demo-output](https://raw.githubusercontent.com/metachris/logzero/master/docs/_static/demo-output-json.png)Note: You can find more examples in the documentation: https://logzero.readthedocs.io### JSON loggingJSON logging can be enabled for the default logger with `logzero.json()`, or with `setup_logger(json=True)` for custom loggers:```python&gt;&gt;&gt; logzero.json()&gt;&gt;&gt; logger.info(&quot;test&quot;){&quot;asctime&quot;: &quot;2020-10-21 10:42:45,808&quot;, &quot;filename&quot;: &quot;&lt;stdin&gt;&quot;, &quot;funcName&quot;: &quot;&lt;module&gt;&quot;, &quot;levelname&quot;: &quot;INFO&quot;, &quot;levelno&quot;: 20, &quot;lineno&quot;: 1, &quot;module&quot;: &quot;&lt;stdin&gt;&quot;, &quot;message&quot;: &quot;test&quot;, &quot;name&quot;: &quot;logzero_default&quot;, &quot;pathname&quot;: &quot;&lt;stdin&gt;&quot;, &quot;process&quot;: 76179, &quot;processName&quot;: &quot;MainProcess&quot;, &quot;threadName&quot;: &quot;MainThread&quot;}&gt;&gt;&gt; my_logger = setup_logger(json=True)&gt;&gt;&gt; my_logger.info(&quot;test&quot;){&quot;asctime&quot;: &quot;2020-10-21 10:42:45,808&quot;, &quot;filename&quot;: &quot;&lt;stdin&gt;&quot;, &quot;funcName&quot;: &quot;&lt;module&gt;&quot;, &quot;levelname&quot;: &quot;INFO&quot;, &quot;levelno&quot;: 20, &quot;lineno&quot;: 1, &quot;module&quot;: &quot;&lt;stdin&gt;&quot;, &quot;message&quot;: &quot;test&quot;, &quot;name&quot;: &quot;logzero_default&quot;, &quot;pathname&quot;: &quot;&lt;stdin&gt;&quot;, &quot;process&quot;: 76179, &quot;processName&quot;: &quot;MainProcess&quot;, &quot;threadName&quot;: &quot;MainThread&quot;}```The logged JSON object has these fields:```json{  &quot;asctime&quot;: &quot;2020-10-21 10:43:40,765&quot;,  &quot;filename&quot;: &quot;test.py&quot;,  &quot;funcName&quot;: &quot;test_this&quot;,  &quot;levelname&quot;: &quot;INFO&quot;,  &quot;levelno&quot;: 20,  &quot;lineno&quot;: 9,  &quot;module&quot;: &quot;test&quot;,  &quot;message&quot;: &quot;info&quot;,  &quot;name&quot;: &quot;logzero&quot;,  &quot;pathname&quot;: &quot;_tests/test.py&quot;,  &quot;process&quot;: 76204,  &quot;processName&quot;: &quot;MainProcess&quot;,  &quot;threadName&quot;: &quot;MainThread&quot;}```Exceptions logged with `logger.exception(e)` have these additional JSON fields:```json{  &quot;levelname&quot;: &quot;ERROR&quot;,  &quot;levelno&quot;: 40,  &quot;message&quot;: &quot;this is a demo exception&quot;,  &quot;exc_info&quot;: &quot;Traceback (most recent call last):\n  File \&quot;_tests/test.py\&quot;, line 15, in test_this\n    raise Exception(\&quot;this is a demo exception\&quot;)\nException: this is a demo exception&quot;}```Take a look at the documentation for more information and examples:* Documentation: https://logzero.readthedocs.io.Installation------------Install `logzero` with [pip](https://pip.pypa.io):```shellpython -m pip install logzero```Here's how you setup a virtualenv and download and run the demo:```shell# Create and activate a virtualenv in ./venv/python3 -m venv venv. venv/bin/activate# Install logzeropython -m pip install logzero# Download and run demo.pywget https://raw.githubusercontent.com/metachris/logzero/master/examples/demo.pypython demo.py```If you don't have [pip](https://pip.pypa.io) installed, this [Python installation guide](http://docs.python-guide.org/en/latest/starting/installation/) can guideyou through the process.Alternatively, if you use the [Anaconda distribution](https://www.anaconda.com/download/):```shell$ conda config --add channels conda-forge$ conda install logzero```You can also install `logzero` from the public [Github repo](https://github.com/metachris/logzero):```shell$ git clone https://github.com/metachris/logzero.git$ cd logzero$ python setup.py install```Contributors------------* [Chris Hager](https://github.com/metachris)* [carlodr](https://github.com/carlodri)* [Brian Lenz](https://github.com/brianlenz)* [David Martin](https://github.com/dmartin35)* [Zakaria Zajac](madzak) (creator of [python-json-logger](https://github.com/madzak/python-json-logger))---Development-----------**Getting started**```shell$ git clone https://github.com/metachris/logzero.git$ cd logzero# Activate virtualenv$ python3 -m venv venv$ . venv/bin/activate# Install main and dev dependencies$ pip install -e .$ pip install -r requirements_dev.txt# Run the tests$ make test# Run the linter$ make lint# Generate the docs (will auto-open in Chrome)$ make docs# You can enable watching mode to automatically rebuild on changes:$ make servedocs```To test with Python 2.7, you can use Docker:```shelldocker run --rm -it -v /Users/chris/stream/logzero:/mnt python:2.7 /bin/bash```Now you have a shell with the current directory mounted into `/mnt/` inside the container.**Notes*** [pytest](https://docs.pytest.org/en/latest/) is the test runner* CI is run with [Github actions](https://github.com/metachris/logzero/tree/master/.github/workflows).* Download stats: https://pepy.tech/project/logzero---Changelog---------See the changelog here: https://github.com/metachris/logzero/blob/master/HISTORY.mdFeedback--------All kinds of feedback and contributions are welcome.* [Create an issue](https://github.com/metachris/logzero/issues/new)* Create a pull request* [@metachris](https://twitter.com/metachris)![logo](https://raw.githubusercontent.com/metachris/logzero/master/docs/_static/logo-420.png)History=======1.6.5 (2021-03-17)------------------- Export loglevels directly (you can use eg. `logzero.DEBUG` instead of `logging.DEBUG`)- `setup_default_logger` use `backupCount`- Update dependencies- PRs: (386)[https://github.com/metachris/logzero/pull/386]1.6.3 (2020-11-15)------------------- JSON logging with UTF-8 enabled by default ([PR 357](https://github.com/metachris/logzero/pull/357))1.6.0 (1.6.2) (2020-10-29)---------------------------   JSON logging support ([PR 344][])-   Ability to easily change colors ([\#82][])-   Allow creating a root logger ([\#342][])-   Bugfix: file logging with lower loglevel than stream ([PR 338][])-   Running tests with Python up to 3.9-   Dependency updates1.5.0 (2018-03-07)-------------------   `logzero.syslog(..)` ([PR 83][])1.4.0 (2018-03-02)-------------------   Allow Disabling stderr Output ([PR 83][1])1.3.0 (2017-07-19)-------------------   Color output now works in Windows (supported by colorama)1.2.1 (2017-07-09)-------------------   Logfiles with custom loglevels (eg. stream handler with DEBUG and    file handler with ERROR).1.2.0 (2017-07-05)-------------------   Way better API for configuring the default logger with &lt;span    class=&quot;title-ref&quot;&gt;logzero.loglevel(..)&lt;/span&gt;, &lt;span    class=&quot;title-ref&quot;&gt;logzero.logfile(..)&lt;/span&gt;, etc.-   Built-in rotating logfile support.``` pythonimport loggingimport logzerofrom logzero import logger# This log message goes to the consolelogger.debug(&quot;hello&quot;)# Set a minimum log levellogzero.loglevel(logging.INFO)# Set a logfile (all future log messages are also saved there)logzero.logfile(&quot;/tmp/logfile.log&quot;)# Set a rotating logfile (replaces the previous logfile handler)logzero.logfile(&quot;/tmp/rotating-logfile.log&quot;, maxBytes=1000000, backupCount=3)# Disable logging to a filelogzero.logfile(None)# Set a custom formatterformatter = logging.Formatter('%(name)s - %(asctime)-15s - %(levelname)s: %(message)s');logzero.formatter(formatter)# Log some variableslogger.info(&quot;var1: %s, var2: %s&quot;, var1, var2)```1.1.2 (2017-07-04)-------------------   Better reconfiguration of handlers, doesn't remove custom handlers    anymore1.1.0 (2017-07-03)-------------------   Bugfix: Disabled color logging to logfile1.1.0 (2017-07-02)-------------------   Global default logger instance (&lt;span    class=&quot;title-ref&quot;&gt;logzero.logger&lt;/span&gt;)-   Ability to reconfigure the default logger with (&lt;span    class=&quot;title-ref&quot;&gt;logzero.setup\_default\_logger(..)&lt;/span&gt;)-   More tests-   More documentation1.0.0 (2017-06-27)-------------------   Cleanup and documentation0.2.0 (2017-06-12)-------------------   Working logzero package with code and tests0.1.0 (2017-06-12)-------------------   First release on PyPI.  [PR 344]: https://github.com/metachris/logzero/pull/344  [\#82]: https://github.com/metachris/logzero/issues/82  [\#342]: https://github.com/metachris/logzero/pull/342  [PR 338]: https://github.com/metachris/logzero/pull/338  [PR 83]: https://github.com/metachris/logzero/pull/84  [1]: https://github.com/metachris/logzero/pull/83</longdescription>
</pkgmetadata>