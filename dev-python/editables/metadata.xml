<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># A Python library for creating &quot;editable wheels&quot;This library supports the building of wheels which, when installed, willexpose packages in a local directory on `sys.path` in &quot;editable mode&quot;. Inother words, changes to the package source will be  reflected in the packagevisible to Python, without needing a reinstall.## UsageSuppose you want to build a wheel for your project `foo`. Your project islocated in the directory `/path/to/foo`. Under that directory, you have a`src` directory containing your project, which is a package called `foo`and a Python module called `bar.py`. So your directory structure looks likethis:```/path/to/foo|+-- src|   +-- foo|   |   +-- __init__.py|   +-- bar.py|+-- setup.py+-- other files```Build your wheel as follows:```pythonfrom editables import EditableProjectmy_project = EditableProject(&quot;foo&quot;, &quot;/path/to/foo&quot;)my_project.add_to_path(&quot;src&quot;)# Build a wheel however you prefer...wheel = BuildAWheel()# Add files to the wheelfor name, content in my_project.files():    wheel.add_file(name, content)# Record any runtime dependenciesfor dep in my_project.dependencies():    wheel.metadata.dependencies.add(dep)```The resulting wheel will, when installed, put the project `src` directory on`sys.path` so that editing the original source will take effect without needinga reinstall (i.e., as &quot;editable&quot; packages). The project is exposed on `sys.path`by adding a single `.pth` file, named after the project, into the wheel.For more details, including how to control what gets exposed more precisely, see[the documentation](https://editables.readthedocs.io/en/latest/).Note that this project doesn't build wheels directly. That's the responsibilityof the calling code.## Python CompatibilityThis project supports the same versions of Python as pip does. Currentlythat is Python 3.7 and later, and PyPy3 (although we don't test againstPyPy).</longdescription>
</pkgmetadata>