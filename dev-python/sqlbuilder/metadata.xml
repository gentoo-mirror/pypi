<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========SQLBuilder===========SmartSQL - lightweight Python sql builder, follows the `KISS principle &lt;http://en.wikipedia.org/wiki/KISS_principle&gt;`_. Supports Python2 and Python3.You can use SmartSQL separatelly, or with Django, or with super-lightweight `Ascetic ORM &lt;https://bitbucket.org/emacsway/ascetic&gt;`_, or with super-lightweight datamapper `Openorm &lt;http://code.google.com/p/openorm/source/browse/python/&gt;`_ (`miror &lt;https://bitbucket.org/emacsway/openorm/src/default/python/&gt;`__) etc.* Home Page: https://bitbucket.org/emacsway/sqlbuilder* Docs: https://sqlbuilder.readthedocs.io/* Browse source code (canonical repo): https://bitbucket.org/emacsway/sqlbuilder/src* GitHub mirror: https://github.com/emacsway/sqlbuilder* Get source code (canonical repo): ``hg clone https://bitbucket.org/emacsway/sqlbuilder``* Get source code (mirror): ``git clone https://github.com/emacsway/sqlbuilder.git``* PyPI: https://pypi.python.org/pypi/sqlbuilderLICENSE:* License is BSDQuick start===========::    &gt;&gt;&gt; from sqlbuilder.smartsql import Q, T, compile    &gt;&gt;&gt; compile(Q().tables(    ...     (T.book &amp; T.author).on(T.book.author_id == T.author.id)    ... ).columns(    ...     T.book.name, T.author.first_name, T.author.last_name    ... ).where(    ...     (T.author.first_name != 'Tom') &amp; (T.author.last_name != 'Smith')    ... )[20:30])    ('SELECT &quot;book&quot;.&quot;name&quot;, &quot;author&quot;.&quot;first_name&quot;, &quot;author&quot;.&quot;last_name&quot; FROM &quot;book&quot; INNER JOIN &quot;author&quot; ON (&quot;book&quot;.&quot;author_id&quot; = &quot;author&quot;.&quot;id&quot;) WHERE &quot;author&quot;.&quot;first_name&quot; &lt;&gt; %s AND &quot;author&quot;.&quot;last_name&quot; &lt;&gt; %s LIMIT %s OFFSET %s', ['Tom', 'Smith', 10, 20])Django integration==================Simple add &quot;django_sqlbuilder&quot; to your INSTALLED_APPS.::    &gt;&gt;&gt; object_list = Book.s.q.tables(    ...     (Book.s &amp; Author.s).on(Book.s.author == Author.s.pk)    ... ).where(    ...     (Author.s.first_name != 'James') &amp; (Author.s.last_name != 'Joyce')    ... )[:10]More info=========See docs on https://sqlbuilder.readthedocs.io/..P.S.: See also `article about SQLBuilder in English &lt;https://emacsway.github.io/en/storm-orm/#do-you-really-need-query-object&gt;`__ and `in Russian &lt;https://emacsway.github.io/ru/storm-orm/#query-object&gt;`__.</longdescription>
</pkgmetadata>