<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;madge&quot; src=&quot;https://github.com/slxiao/partition/blob/master/logo.png&quot; width=&quot;200&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;Last version&quot; src=&quot;https://img.shields.io/github/tag/slxiao/partition.svg?style=flat-square&quot; /&gt;&lt;a href=&quot;https://travis-ci.org/slxiao/partition&quot;&gt;&lt;img alt=&quot;Build Status&quot; src=&quot;http://img.shields.io/travis/slxiao/partition/master.svg?style=flat-square&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/partition/&quot;&gt;&lt;img alt=&quot;Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/partition.svg&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://coveralls.io/github/slxiao/partition?branch=master&quot;&gt;&lt;img alt=&quot;Coverage&quot; src=&quot;https://coveralls.io/repos/github/slxiao/partition/badge.svg?branch=master&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/partition&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://pepy.tech/badge/partition&quot; /&gt;&lt;/a&gt;&lt;/p&gt;# partition```partiton` is a Python algorithm library which provides efficient algorithms for the [number partition problem](https://en.wikipedia.org/wiki/Partition_problem). You can also use it from shell command. These algorithms have many applications. One typical one is for [parallel software testing](https://mp.weixin.qq.com/s/oq3-mJ7cA6f_lK0SviMVyw). Currently, the following three algorithms are supported:- greedy algorithm, which is a benchmark algorithm with simple login- differencing algorithm, a.k.a. Karmarkarâ€“Karp(KK) algorithm- dynamic programming(DP) algorithm, which is optimal for scenarios where the size of integers is not too large# InstallUse pip:```shellpip install partition```From source code:```shellpython setup.py develop```# How to use## command line usageGet help:```shellpartition -h```Query version:```shellpartition --version```Available options:```shellusage: partition [-h] [--numbers NUMBERS] [--grouplen GROUPLEN]                 [--algorithm {greedy,kk,dp}] [--version]optional arguments:  -h, --help            show this help message and exit  --numbers NUMBERS     integer numbers to be partitioned, seperated by comma  --grouplen GROUPLEN   length of groups to hold the partitioned integer                        numbers, default is 2  --algorithm {greedy,kk,dp}                        select partition algorithms, available options are                        greedy, kk and dp  --version             print version```For example:```shellroot@foo:~# partition --numbers 1,2,3,4,5 --grouplen 2 --algorithm greedyPartition 1,2,3,4,5 into 2 groups, using algorithm: greedyGroup: 0, numbers: [5, 2, 1]Group: 1, numbers: [4, 3]Min group sum: 7, Max group sum: 8, difference: 1Group(s) with min sum: [4, 3]Group(s) with max sum: [5, 2, 1]([[5, 2, 1], [4, 3]], 1)```## python library usage```pythonIn [1]: import partitionIn [2]: partition.partition.__version__Out[2]: '0.1.0'In [3]: partition.greedy.greedy([1,2,3,4,5], 2)Out[3]: [[5, 2, 1], [4, 3]]In [4]: partition.kk.kk([1,2,3,4,5], 2)Out[5]: [[5, 3], [1, 2, 4]]```# LisenseMIT# MaintenanceThis tool is developed by [slxiao](https://github.com/slxiao). You are welcome to raise any [issues](https://github.com/slxiao/partition/issues) about the tool.</longdescription>
</pkgmetadata>