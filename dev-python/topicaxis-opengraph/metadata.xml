<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Topicaxis-opengraph is a fork of https://github.com/erikriver/opengraph that adds support for Python 3.OpenGraph is a module of python for parsing the Open Graph Protocol, you can read more about the specification at http://ogp.me/Installation=============.. code-block:: console   $ pip install topicaxis-opengraphFeatures=============* Use it as a python dict* Input and parsing from a specific url* Input and parsung from html previous extracted* HTML output* JSON outputUsage==============**From an URL**.. code-block:: pycon   &gt;&gt;&gt; import opengraph   &gt;&gt;&gt; video = opengraph.OpenGraph(url=&quot;http://www.youtube.com/watch?v=q3ixBmDzylQ&quot;)   &gt;&gt;&gt; video.is_valid()   True   &gt;&gt;&gt; for x,y in video.items():   ...     print &quot;%-15s =&gt; %s&quot; % (x, y)   ...   site_name       =&gt; YouTube   description     =&gt; Eric Clapton and Paul McCartney perform George Harrison's &quot;While My Guitar Gently Weeps&quot; at the...   title           =&gt; While My Guitar Gently Weeps   url             =&gt; http://www.youtube.com/watch?v=q3ixBmDzylQ   image           =&gt; http://i2.ytimg.com/vi/q3ixBmDzylQ/default.jpg   video:type      =&gt; application/x-shockwave-flash   video:height    =&gt; 224   video           =&gt; http://www.youtube.com/v/q3ixBmDzylQ?version=3&amp;autohide=1   video:width     =&gt; 398   type            =&gt; video**From HTML**.. code-block:: pycon   &gt;&gt;&gt; HTML = &quot;&quot;&quot;   ... &lt;html xmlns:og=&quot;http://ogp.me/ns#&quot;&gt;   ... &lt;head&gt;   ... &lt;title&gt;The Rock (1996)&lt;/title&gt;   ... &lt;meta property=&quot;og:title&quot; content=&quot;The Rock&quot; /&gt;   ... &lt;meta property=&quot;og:type&quot; content=&quot;movie&quot; /&gt;   ... &lt;meta property=&quot;og:url&quot; content=&quot;http://www.imdb.com/title/tt0117500/&quot; /&gt;   ... &lt;meta property=&quot;og:image&quot; content=&quot;http://ia.media-imdb.com/images/rock.jpg&quot; /&gt;   ... &lt;/head&gt;   ... &lt;/html&gt;   ... &quot;&quot;&quot;   &gt;&gt;&gt; movie = opengraph.OpenGraph() # or you can instantiate as follows: opengraph.OpenGraph(html=HTML)   &gt;&gt;&gt; movie.parser(HTML)   &gt;&gt;&gt; video.is_valid()   True**Generate JSON or HTML**.. code-block:: pycon   &gt;&gt;&gt; ogp = opengraph.OpenGraph(&quot;http://ogp.me/&quot;)   &gt;&gt;&gt; print ogp.to_json()   {&quot;image:type&quot;: &quot;image/png&quot;, &quot;title&quot;: &quot;Open Graph protocol&quot;, &quot;url&quot;: &quot;http://ogp.me/&quot;, &quot;image&quot;: &quot;http://ogp.me/logo.png&quot;, &quot;scrape&quot;: false, &quot;_url&quot;: &quot;http://ogp.me/&quot;, &quot;image:height&quot;: &quot;300&quot;, &quot;type&quot;: &quot;website&quot;, &quot;image:width&quot;: &quot;300&quot;, &quot;description&quot;: &quot;The Open Graph protocol enables any web page to become a rich object in a social graph.&quot;}   &gt;&gt;&gt; print ogp.to_html()   &lt;meta property=&quot;og:image:type&quot; content=&quot;image/png&quot; /&gt;   &lt;meta property=&quot;og:title&quot; content=&quot;Open Graph protocol&quot; /&gt;   &lt;meta property=&quot;og:url&quot; content=&quot;http://ogp.me/&quot; /&gt;   &lt;meta property=&quot;og:image&quot; content=&quot;http://ogp.me/logo.png&quot; /&gt;   &lt;meta property=&quot;og:scrape&quot; content=&quot;False&quot; /&gt;   &lt;meta property=&quot;og:_url&quot; content=&quot;http://ogp.me/&quot; /&gt;   &lt;meta property=&quot;og:image:height&quot; content=&quot;300&quot; /&gt;   &lt;meta property=&quot;og:type&quot; content=&quot;website&quot; /&gt;   &lt;meta property=&quot;og:image:width&quot; content=&quot;300&quot; /&gt;   &lt;meta property=&quot;og:description&quot; content=&quot;The Open Graph protocol enables any web page to become a rich object in a social graph.&quot; /&gt;</longdescription>
</pkgmetadata>