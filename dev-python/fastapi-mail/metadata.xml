<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Fastapi-mailThe fastapi-mail is a simple lightweight mail system, for sending emails and attachments(individual &amp;&amp; bulk)[![MIT licensed](https://img.shields.io/github/license/sabuhish/fastapi-mail)](https://raw.githubusercontent.com/sabuhish/fastapi-mail/master/LICENSE)[![GitHub stars](https://img.shields.io/github/stars/sabuhish/fastapi-mail.svg)](https://github.com/sabuhish/fastapi-mail/stargazers)[![GitHub forks](https://img.shields.io/github/forks/sabuhish/fastapi-mail.svg)](https://github.com/sabuhish/fastapi-mail/network)[![GitHub issues](https://img.shields.io/github/issues-raw/sabuhish/fastapi-mail)](https://github.com/sabuhish/fastapi-mail/issues)[![Downloads](https://pepy.tech/badge/fastapi-mail)](https://pepy.tech/project/fastapi-mail)###  ðŸ”¨  Installation ###```bashpython3 -m venv .venvsource .venv/bin/activatepip install fastapi-mailfor aioredis and httpxpip install 'fastapi-mail[aioredis]'pip install 'fastapi-mail[httpx]'```Alternatively, if you prefer to use `poetry` for package dependencies:```bashpoetry shellpoetry add fastapi-mailfor aioredis and httpxpoetry add 'fastapi-mail[aioredis]'poetry add 'fastapi-mail[httpx]'```---**Documentation**: [FastApi-MAIL](https://sabuhish.github.io/fastapi-mail/)---The key features are:-  sending emails either with FastApi or using asyncio module -  sending emails using FastApi background task managment-  sending files either from form-data or files from server-  Using Jinja2 HTML Templates-  email utils (utility allows you to check temporary email addresses, you can block any email or domain)-  email utils has two available classes ```DefaultChecker``` and  ```WhoIsXmlApi```-  Unittests using FastapiMailMore information on [Getting-Started](https://sabuhish.github.io/fastapi-mail/getting-started/)### Guide```pythonfrom typing import Listfrom fastapi import BackgroundTasks, FastAPIfrom fastapi_mail import ConnectionConfig, FastMail, MessageSchema, MessageTypefrom pydantic import BaseModel, EmailStrfrom starlette.responses import JSONResponseclass EmailSchema(BaseModel):    email: List[EmailStr]conf = ConnectionConfig(    MAIL_USERNAME =&quot;username&quot;,    MAIL_PASSWORD = &quot;**********&quot;,    MAIL_FROM = &quot;test@email.com&quot;,    MAIL_PORT = 465,    MAIL_SERVER = &quot;mail server&quot;,    MAIL_STARTTLS = False,    MAIL_SSL_TLS = True,    USE_CREDENTIALS = True,    VALIDATE_CERTS = True)app = FastAPI()html = &quot;&quot;&quot;&lt;p&gt;Thanks for using Fastapi-mail&lt;/p&gt; &quot;&quot;&quot;@app.post(&quot;/email&quot;)async def simple_send(email: EmailSchema) -&gt; JSONResponse:    message = MessageSchema(        subject=&quot;Fastapi-Mail module&quot;,        recipients=email.dict().get(&quot;email&quot;),        body=html,        subtype=MessageType.html)    fm = FastMail(conf)    await fm.send_message(message)    return JSONResponse(status_code=200, content={&quot;message&quot;: &quot;email has been sent&quot;})     ```## List of ExamplesFor more examples of using fastapi-mail please check: [example](https://sabuhish.github.io/fastapi-mail/example/) section.## Contributors âœ¨Thanks goes to these wonderful[People](https://github.com/sabuhish/fastapi-mail/blob/master/contributors.txt)# ContributingContributions of any kind are welcome!Before you start, please read [CONTRIBUTING](https://github.com/sabuhish/fastapi-mail/blob/master/CONTRIBUTING.md)## LICENSE[MIT](LICENSE)</longdescription>
</pkgmetadata>