<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># hyperliquid-python-sdk&lt;div align=&quot;center&quot;&gt;[![Dependencies Status](https://img.shields.io/badge/dependencies-up%20to%20date-brightgreen.svg)](https://github.com/hyperliquid-dex/hyperliquid-python-sdk/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20author%3Aapp%2Fdependabot)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Security: bandit](https://img.shields.io/badge/security-bandit-green.svg)](https://github.com/PyCQA/bandit)[![Pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/hyperliquid-dex/hyperliquid-python-sdk/blob/master/.pre-commit-config.yaml)[![Semantic Versions](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--versions-e10079.svg)](https://github.com/hyperliquid-dex/hyperliquid-python-sdk/releases)[![License](https://img.shields.io/pypi/l/hyperliquid-python-sdk)](https://github.com/hyperliquid-dex/hyperliquid-python-sdk/blob/master/LICENSE.md)![Coverage Report](https://github.com/hyperliquid-dex/hyperliquid-python-sdk/blob/master/assets/images/coverage.svg)SDK for Hyperliquid API trading with Python.&lt;/div&gt;## Installation```bashpip install hyperliquid-python-sdk```## Usage Examples```pythonfrom hyperliquid.info import Infofrom hyperliquid.utils import constantsinfo = Info(constants.TESTNET_API_URL, skip_ws=True)user_state = info.user_state(&quot;0xcd5051944f780a621ee62e39e493c489668acf4d&quot;)print(user_state)```See [examples](examples) for more complete examples. You can also checkout the repo and run any of the examples after configuring your private key e.g. ```bashcp examples/config.json.example examples/config.jsonvim examples/config.jsonpython examples/basic_order.py```## Getting started with contributing to this repo1. Download `Poetry`: https://python-poetry.org/. Note that in the install script you might have to set `symlinks=True` in `venv.EnvBuilder`.2. Point poetry to correct version of python. For development we require python 3.10 exactly. Some dependencies have issues on 3.11, while older versions don't have correct typing support.`brew install python@3.10 &amp;&amp; poetry env use /opt/homebrew/Cellar/python@3.10/3.10.10_1/bin/python3.10`3. Install dependencies:```bashmake install```### Makefile usageCLI commands for faster development.&lt;details&gt;&lt;summary&gt;Install all dependencies&lt;/summary&gt;&lt;p&gt;Install requirements:```bashmake install```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Codestyle&lt;/summary&gt;&lt;p&gt;Automatic formatting uses `pyupgrade`, `isort` and `black`.```bashmake codestyle# or use synonymmake formatting```Codestyle checks only, without rewriting files:```bashmake check-codestyle```&gt; Note: `check-codestyle` uses `isort`, `black` and `darglint` libraryUpdate all dev libraries to the latest version using one comand```bashmake update-dev-deps```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Tests with coverage badges&lt;/summary&gt;&lt;p&gt;Run `pytest````bashmake test```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;All linters&lt;/summary&gt;&lt;p&gt;```bashmake lint```the same as:```bashmake test &amp;&amp; make check-codestyle &amp;&amp; make mypy &amp;&amp; make check-safety```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Cleanup&lt;/summary&gt;&lt;p&gt;Delete pycache files```bashmake pycache-remove```Remove package build```bashmake build-remove```Delete .DS_STORE files```bashmake dsstore-remove```Remove .mypycache```bashmake mypycache-remove```Or to remove all above run:```bashmake cleanup```&lt;/p&gt;&lt;/details&gt;## ReleasesYou can see the list of available releases on the [GitHub Releases](https://github.com/hyperliquid-dex/hyperliquid-python-sdk/releases) page.We follow the [Semantic Versions](https://semver.org/) specification and use [`Release Drafter`](https://github.com/marketplace/actions/release-drafter). As pull requests are merged, a draft release is kept up-to-date listing the changes, ready to publish when youâ€™re ready. With the categories option, you can categorize pull requests in release notes using labels.### List of labels and corresponding titles|               **Label**               |  **Title in Releases**  || :-----------------------------------: | :---------------------: ||       `enhancement`, `feature`        |        Features         || `bug`, `refactoring`, `bugfix`, `fix` |  Fixes &amp; Refactoring    ||       `build`, `ci`, `testing`        |  Build System &amp; CI/CD   ||              `breaking`               |    Breaking Changes     ||            `documentation`            |     Documentation       ||            `dependencies`             |  Dependencies updates   |### Building and releasingBuilding a new version of the application contains steps:- Bump the version of your package with `poetry version &lt;version&gt;`. You can pass the new version explicitly, or a rule such as `major`, `minor`, or `patch`. For more details, refer to the [Semantic Versions](https://semver.org/) standard.- Make a commit to `GitHub`- Create a `GitHub release`- `poetry publish --build`## LicenseThis project is licensed under the terms of the `MIT` license. See [LICENSE](LICENSE.md) for more details.```bibtex@misc{hyperliquid-python-sdk,  author = {Hyperliquid},  title = {SDK for Hyperliquid API trading with Python.},  year = {2023},  publisher = {GitHub},  journal = {GitHub repository},  howpublished = {\url{https://github.com/hyperliquid-dex/hyperliquid-python-sdk}}}```## TermsBy using this package you agree to the Terms of Use. See [TERMS](TERMS.md) for more details.## CreditsThis project was generated with [`python-package-template`](https://github.com/TezRomacH/python-package-template).</longdescription>
</pkgmetadata>