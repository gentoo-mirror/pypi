<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># string-color   string-color is just another python module for coloring strings in print statements.   ### Installation   `$ pip install string-color`   ### Python Module Usage   ```python   from stringcolor import * # a few examples without background colors.   # for color names see CLI usage below.   print(cs(&quot;here we go&quot;, &quot;orchid&quot;))   print(cs(&quot;away to space!&quot;, &quot;DeepPink3&quot;))   print(cs(&quot;final fantasy&quot;, &quot;#ffff87&quot;))   print()  # bold and underline also available.  print(cs(&quot;purple number 4, bold&quot;, &quot;purple4&quot;).bold())  print(cs(&quot;blue, underlined&quot;, &quot;blue&quot;).underline())  print(bold(&quot;bold AND underlined!&quot;).underline().cs(&quot;red&quot;, &quot;gold&quot;))print(underline(&quot;the bottom line.&quot;))print()# yellow text with a red background.   # color names, hex values, and ansi numbers will work.   print(cs(&quot;warning!&quot;, &quot;yellow&quot;, &quot;#ff0000&quot;)) print()# concatprint(cs(&quot;wild&quot;, &quot;pink&quot;)+&quot; stuff&quot;)print(&quot;nothing &quot;+cs(&quot;something&quot;, &quot;DarkViolet2&quot;, &quot;lightgrey6&quot;))print()# use any working rgb or hex values.# it will find the closest color available.print(cs(&quot;this will show up red&quot;, &quot;#ff0009&quot;))print(cs(&quot;so will this&quot;, &quot;rgb(254, 0, 1)&quot;))print()# use with format and f-stringsprint(f&quot;this is a test {cs('to check formatting with f-strings', 'yellow', 'grey').bold().underline()}&quot;)print(&quot;this is a test {}&quot;.format(cs('to check the format function', 'purple', 'lightgrey11').bold().underline()))```   ![Usage Screep Cap][screencap][screencap]: https://believe-it-or-not-im-walking-on-air.s3.amazonaws.com/sc-screen-cap.jpg &quot;Usage Screen Cap&quot;### CLI Usage     ```usage: string-color [-h] [-x] [-r] [-t] [--hsl] [-a] [-i] [-v] [color]just another mod for printing strings in color.positional arguments:  color          show info for a specific color:                 $ string-color red                 $ string-color '#ffff87'                 $ string-color *grey* # wildcards acceptable                 $ string-color '#E16A7F' # any hex not found will return the closest matchoptional arguments:  -h, --help     show this help message and exit  -x, --hex      show hex values  -r, --rgb      show rgb values  -t, --term     show term numbers  --hsl          show hsl values  -a, --alpha    sort by name  -i, --inverse  show inverse colors  -v, --version  show program's version number and exit```  `$ string-color`   display a list of all 256 colors   `$ string-color yellow`   show color info for the color yellow   `$ string-color &quot;#ff0000&quot;`   show color info for the hex value #ff0000   `$ string-color *grey*`  show all colors with &quot;grey&quot; in the name. also works with &quot;grey\*&quot; and &quot;\*grey&quot;  ![CLI Screep Cap][cliscreencap]  [cliscreencap]: https://believe-it-or-not-im-walking-on-air.s3.amazonaws.com/sc-screen-cap2.jpg  &quot;CLI Screen Cap&quot;  </longdescription>
</pkgmetadata>