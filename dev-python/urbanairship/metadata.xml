<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/urbanairship/python-library/actions/workflows/ci.yaml/badge.svg    :target: https://github.com/urbanairship/python-library/=====``urbanairship`` is a Python library for using the `Airship&lt;http://airship.com/&gt;`_ REST API for push notifications, messagecenter messages, email, and SMS.Requirements============Python 2.7, 3.6, 3.7, 3.8, or 3.9 is required. Other requirements can be found in requirements.txt.Questions=========The best place to ask questions or report a problem is our support site:http://support.airship.com/Usage=====See the `full documentation for this library&lt;https://docs.airship.com/api/libraries/python/&gt;`_, as well as the`Airship API Documentation&lt;https://docs.airship.com/api/ua/&gt;`_.Simple iOS Push---------------    &gt;&gt;&gt; import urbanairship as ua    &gt;&gt;&gt; airship = ua.Airship('application_key', 'master_secret')    &gt;&gt;&gt; push = airship.create_push()    &gt;&gt;&gt; push.audience = ua.or_(ua.alias('adam'), ua.ios_channel('some_ios_channel'))    &gt;&gt;&gt; push.notification = ua.notification(alert='Hello')    &gt;&gt;&gt; push.device_types = ua.device_types('ios')    &gt;&gt;&gt; push.send()Broadcast to iOS and Android devices------------------------------------    &gt;&gt;&gt; push = airship.create_push()    &gt;&gt;&gt; push.audience = ua.all_    &gt;&gt;&gt; push.notification = ua.notification(    ...     ios=ua.ios(alert='Hello iOS'),    ...     android=ua.android(alert='Hello Android'))    &gt;&gt;&gt; push.device_types = ua.device_types('ios', 'android')    &gt;&gt;&gt; push.send()Sending a message center message to a single iOS device--------------------------------------------------------    &gt;&gt;&gt; import urbanairship as ua    &gt;&gt;&gt; airship = ua.Airship('application_key', 'master_secret')    &gt;&gt;&gt; push = airship.create_push()    &gt;&gt;&gt; push.audience = ua.ios_channel('some_ios_channel')    &gt;&gt;&gt; push.notification = ua.notification(alert='Hello')    &gt;&gt;&gt; push.device_types = ua.device_types('ios')    &gt;&gt;&gt; push.message = ua.message(    ...     'Hello, message center user',    ...     '&lt;html&gt;&lt;h1&gt;Hello!&lt;/h1&gt;&lt;p&gt;Goodbye.&lt;/p&gt;&lt;/html&gt;')    &gt;&gt;&gt; push.send()Web Push to a tag-----------------    &gt;&gt;&gt; import urbanairship as ua    &gt;&gt;&gt; airship = ua.Airship('application_key', 'master_secret')    &gt;&gt;&gt; push = airship.create_push()    &gt;&gt;&gt; push.audience = ua.tag('web_tag')    &gt;&gt;&gt; push.notification = ua.notification(alert='Hello')    &gt;&gt;&gt; push.device_types = ua.device_types('web')    &gt;&gt;&gt; push.send()History=======* 6.0 Support for Bearer Token Authentication. Removes support for Python 2.* 5.0 Support for SMS and Email messages. See changelog for other updates.* 4.0 Support for Automation, removed Feedback* 3.0 Support for Open Channels, several other significant changes* 2.0 Support for Web Notify and more iOS 10, stopped supporting Python 2.6* 1.0 Support for In-App and iOS 10* 0.8 Support for Reports APIs* 0.7 Support for Python 3, major refactoring* 0.6 Major refactoring, support for push api v3* 0.5 Added Android, Rich Push, and scheduled notifications* 0.4 Added batch push* 0.3 Added deregister, device token list, other minor improvements* 0.2 Added tags, broadcast, feedback* 0.1 Initial releaseSee the CHANGELOG file for more details.</longdescription>
</pkgmetadata>