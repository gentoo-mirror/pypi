<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/iskandr/serializable.svg?branch=master)](https://travis-ci.org/iskandr/serializable)# serializableBase class with serialization methods for user-defined Python objects## UsageClasses which inherit from `Serializable` are enabled with default implementations of`to_json`, `from_json`, `__reduce__` (for pickling), and other serializationhelpers. A derived class must either:* have a member data matching the name of each argument to `__init__`* provide a user-defined `to_dict()` method which returns a dictionary whose keys match the arguments to `__init__`If you change the keyword arguments to a class which derives from `Serializable` but would like to be able to deserialize older JSON representations then you can define a class-level dictionary called `_KEYWORD_ALIASES` which maps old keywords to new names (or `None` if a keyword was removed).## Limitations* Serializable objects must inherit from `Serializable`, be tuples or namedtuples, be serializble primitive types such as dict, list, int, float, or str.* The serialized representation of objects relies on reserved keywords (such as `&quot;__name__&quot;`, and `&quot;__class__&quot;`), so dictionaries are expected to not contain any keys which begin with two underscores.</longdescription>
</pkgmetadata>