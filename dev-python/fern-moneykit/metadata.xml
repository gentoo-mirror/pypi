<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MoneyKit Python Library[![pypi](https://img.shields.io/pypi/v/fern-moneykit.svg)](https://pypi.python.org/pypi/fern-moneykit)[![fern shield](https://img.shields.io/badge/%F0%9F%8C%BF-SDK%20generated%20by%20Fern-brightgreen)](https://github.com/fern-api/fern)## InstallationAdd this dependency to your project's build file:```bashpip install fern-moneykit# orpoetry add fern-moneykit```## Usage```pythonfrom moneykit.client import MoneyKitfrom moneykit import LinkSessionCustomerUsermoneykit_client = MoneyKit(  client_id=&quot;CLIENT_ID&quot;,   client_secret=&quot;CLIENT_SECRET&quot;)token_response = moneykit_client.link_session.create_link_session(  customer_user=LinkSessionCustomerUser(    id=&quot;user_uuid&quot;,   ),  webhook=&quot;https://url/to/my/webhook&quot;,);print(token_response)```## Async Client```pythonfrom moneykit.client import AsyncMoneyKitfrom moneykit import LinkSessionCustomerUserimport asynciomoneykit_client = AsyncMoneyKit(  client_id=&quot;CLIENT_ID&quot;,   client_secret=&quot;CLIENT_SECRET&quot;)async def create_link_session() -&gt; None:    token_response = moneykit_client.link_session.create_link_session(      customer_user=LinkSessionCustomerUser(        id=&quot;user_uuid&quot;,       ),      webhook=&quot;https://url/to/my/webhook&quot;,    );    print(token_response)asyncio.run(create_link_session())```## Sandbox EnvironmentBy default, the client will use the Production Environment. Below is an example of how you can specify using the Sandbox Environment:```pythonfrom moneykit.client import MoneyKitfrom moneykit.environment import MoneyKitEnvironmentclient = MoneyKit(  environment=MoneyKitEnvironment.SANDBOX,  client_id=&quot;CLIENT_ID&quot;,  client_secret=&quot;CLIENT_SECRET&quot;)```## TimeoutsBy default, the client is configured to have a timeout of 60 seconds. You can customize this value at client instantiation. ```pythonfrom moneykit.client import MoneyKitclient = MoneyKit(client_id=&quot;CLIENT_ID&quot;, client_secret=&quot;CLIENT_SECRET&quot;, timeout=15)```## Handling ExceptionsAll exceptions thrown by the SDK will sublcass [moneykit.ApiError](./src/moneykit/core/api_error.py). ```pythonfrom moneykit.core import ApiErrorfrom moneykit import BadRequestErrortry:  moneykit_client.institutions.get_institution(institution_id='my_id')except BadRequestError as e:   # handle bad request errorexcept APIError as e:    # handle any api related error```Error codes are as followed:| Status Code | Error Type                 || ----------- | -------------------------- || 400         | `BadRequestError`          || 401         | `UnauthorizedError`        || 403         | `ForbiddenError`           || 404         | `NotFoundError`            || 422         | `UnprocessableEntityError` || 429         | `TooManyRequestsError`     |## Beta statusThis SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning the package version to a specific version in your pyproject.toml file. This way, you can install the same version each time without breaking changes unless you are intentionally looking for the latest version.## ContributingWhile we value open-source contributions to this SDK, this library is generated programmatically. Additions made directly to this library would have to be moved over to our generation code, otherwise they would be overwritten upon the next generated release. Feel free to open a PR as a proof of concept, but know that we will not be able to merge it as-is. We suggest opening an issue first to discuss with us!On the other hand, contributions to the README are always very welcome!</longdescription>
</pkgmetadata>