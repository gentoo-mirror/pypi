<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|  |downloads| |stars| |forks| |contributors| |coverage||  |version| |packages| |license||  |github-actions| |appveyor| |doc| |twitter|.. |downloads| image:: https://img.shields.io/pypi/dm/pyftpdlib.svg    :target: https://pepy.tech/project/pyftpdlib    :alt: Downloads.. |stars| image:: https://img.shields.io/github/stars/giampaolo/pyftpdlib.svg    :target: https://github.com/giampaolo/pyftpdlib/stargazers    :alt: Github stars.. |forks| image:: https://img.shields.io/github/forks/giampaolo/pyftpdlib.svg    :target: https://github.com/giampaolo/pyftpdlib/network/members    :alt: Github forks.. |contributors| image:: https://img.shields.io/github/contributors/giampaolo/pyftpdlib.svg    :target: https://github.com/giampaolo/pyftpdlib/graphs/contributors    :alt: Contributors.. |github-actions| image:: https://github.com/giampaolo/pyftpdlib/actions/workflows/tests.yml/badge.svg    :target: https://github.com/giampaolo/pyftpdlib/actions/workflows/tests.yml    :alt: Linux, macOS, Windows tests.. |appveyor| image:: https://img.shields.io/appveyor/build/giampaolo/pyftpdlib/master.svg?label=windows%20tests    :target: https://ci.appveyor.com/project/giampaolo/pyftpdlib    :alt: Windows tests (Appveyor).. |coverage| image:: https://coveralls.io/repos/github/giampaolo/pyftpdlib/badge.svg?branch=master    :target: https://coveralls.io/github/giampaolo/pyftpdlib?branch=master    :alt: Test coverage (coverall.io).. |doc| image:: https://readthedocs.org/projects/pyftpdlib/badge/?version=latest    :target: https://pyftpdlib.readthedocs.io/en/latest/    :alt: Documentation Status.. |version| image:: https://img.shields.io/pypi/v/pyftpdlib.svg?label=pypi    :target: https://pypi.org/project/pyftpdlib    :alt: Latest version.. |packages| image:: https://repology.org/badge/tiny-repos/python:pyftpdlib.svg    :target: https://repology.org/metapackage/python:pyftpdlib/versions    :alt: Binary packages.. |license| image:: https://img.shields.io/pypi/l/pyftpdlib.svg    :target: https://github.com/giampaolo/pyftpdlib/blob/master/LICENSE    :alt: License.. |twitter| image:: https://img.shields.io/twitter/follow/grodola.svg?label=follow&amp;style=flat&amp;logo=twitter&amp;logoColor=4FADFF    :target: https://twitter.com/grodola    :alt: Twitter FollowQuick links===========- `Home &lt;https://github.com/giampaolo/pyftpdlib&gt;`__- `Documentation &lt;http://pyftpdlib.readthedocs.io&gt;`__- `Download &lt;https://pypi.python.org/pypi/pyftpdlib/&gt;`__- `Blog &lt;http://grodola.blogspot.com/search/label/pyftpdlib&gt;`__- `Mailing list &lt;http://groups.google.com/group/pyftpdlib/topics&gt;`__- `What's new &lt;https://github.com/giampaolo/pyftpdlib/blob/master/HISTORY.rst&gt;`__About=====Python FTP server library provides a high-level portable interface to easilywrite very efficient, scalable and asynchronous FTP servers with Python. It isthe most complete `RFC-959 &lt;http://www.faqs.org/rfcs/rfc959.html&gt;`__ FTP serverimplementation available for `Python &lt;http://www.python.org/&gt;`__ programminglanguage.Features========- Extremely **lightweight**, **fast** and **scalable** (see  `why &lt;https://github.com/giampaolo/pyftpdlib/issues/203&gt;`__ and  `benchmarks &lt;http://pyftpdlib.readthedocs.io/en/latest/benchmarks.html&gt;`__).- Uses **sendfile(2)** (see `pysendfile &lt;https://github.com/giampaolo/pysendfile&gt;`__)  system call for uploads.- Uses epoll() / kqueue() / select() to handle concurrency asynchronously.- ...But can optionally skip to a  `multiple thread / process &lt;http://pyftpdlib.readthedocs.io/en/latest/tutorial.html#changing-the-concurrency-model&gt;`__  model (as in: you'll be free to block or use slow filesystems).- Portable: entirely written in pure Python; works with Python from **2.6** to  **3.5** by using a single code base.- Supports **FTPS** (`RFC-4217 &lt;http://tools.ietf.org/html/rfc4217&gt;`__),  **IPv6** (`RFC-2428 &lt;ftp://ftp.rfc-editor.org/in-notes/rfc2428.txt&gt;`__),  **Unicode** file names (`RFC-2640 &lt;http://tools.ietf.org/html/rfc2640&gt;`__),  **MLSD/MLST** commands (`RFC-3659 &lt;ftp://ftp.rfc-editor.org/in-notes/rfc3659.txt&gt;`__).- Support for virtual users and virtual filesystem.- Extremely flexible system of &quot;authorizers&quot; able to manage both &quot;virtual&quot; and  &quot;real&quot; users on on both  `UNIX &lt;http://pyftpdlib.readthedocs.io/en/latest/tutorial.html#unix-ftp-server&gt;`__  and  `Windows &lt;http://pyftpdlib.readthedocs.io/en/latest/tutorial.html#windows-ftp-server&gt;`__.- `Test coverage &lt;https://github.com/giampaolo/pyftpdlib/blob/master/pyftpdlib/test/&gt;`__  close to 100%.Performances============Despite being written in an interpreted language, pyftpdlib has transfer ratescomparable or superior to common UNIX FTP servers written in C. It usually tendsto scale better (see `benchmarks &lt;https://pyftpdlib.readthedocs.io/en/latest/benchmarks.html&gt;`__)because whereas vsftpd and proftpd use multiple processes toachieve concurrency, pyftpdlib only uses one (see `the C10K problem &lt;http://www.kegel.com/c10k.html&gt;`__).pyftpdlib vs. proftpd 1.3.4---------------------------+-----------------------------------------+----------------+----------------+-------------+| **benchmark type**                      | **pyftpdlib**  | **proftpd**    | **speedup** |+-----------------------------------------+----------------+----------------+-------------+| STOR (client -&gt; server)                 |  585.90 MB/sec | 600.49 MB/sec  | -0.02x      |+-----------------------------------------+----------------+----------------+-------------+| RETR (server -&gt; client)                 | 1652.72 MB/sec | 1524.05 MB/sec | **+0.08**   |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (connect, login) |    0.19 secs   | 9.98 secs      | **+51x**    |+-----------------------------------------+----------------+----------------+-------------+| STOR (1 file with 300 idle clients)     |  585.59 MB/sec | 518.55 MB/sec  | **+0.1x**   |+-----------------------------------------+----------------+----------------+-------------+| RETR (1 file with 300 idle clients)     | 1497.58 MB/sec | 1478.19 MB/sec | 0x          |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (RETR 10M file)  |    3.41 secs   | 3.60 secs      | **+0.05x**  |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (STOR 10M file)  |    8.60 secs   | 11.56 secs     | **+0.3x**   |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (QUIT)           |    0.03 secs   | 0.39 secs      | **+12x**    |+-----------------------------------------+----------------+----------------+-------------+pyftpdlib vs. vsftpd 2.3.5--------------------------+-----------------------------------------+----------------+----------------+-------------+| **benchmark type**                      | **pyftpdlib**  | **vsftpd**     | **speedup** |+-----------------------------------------+----------------+----------------+-------------+| STOR (client -&gt; server)                 |  585.90 MB/sec | 611.73 MB/sec  | -0.04x      |+-----------------------------------------+----------------+----------------+-------------+| RETR (server -&gt; client)                 | 1652.72 MB/sec | 1512.92 MB/sec | **+0.09**   |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (connect, login) |    0.19 secs   | 20.39 secs     | **+106x**   |+-----------------------------------------+----------------+----------------+-------------+| STOR (1 file with 300 idle clients)     |  585.59 MB/sec | 610.23 MB/sec  | -0.04x      |+-----------------------------------------+----------------+----------------+-------------+| RETR (1 file with 300 idle clients)     | 1497.58 MB/sec | 1493.01 MB/sec | 0x          |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (RETR 10M file)  |    3.41 secs   | 3.67 secs      | **+0.07x**  |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (STOR 10M file)  |    8.60 secs   | 9.82 secs      | **+0.07x**  |+-----------------------------------------+----------------+----------------+-------------+| 300 concurrent clients (QUIT)           |    0.03 secs   | 0.01 secs      | +0.14x      |+-----------------------------------------+----------------+----------------+-------------+For more benchmarks see `here &lt;http://pyftpdlib.readthedocs.io/en/latest/benchmarks.html&gt;`__.Quick start===========.. code-block:: python    &gt;&gt;&gt; from pyftpdlib.authorizers import DummyAuthorizer    &gt;&gt;&gt; from pyftpdlib.handlers import FTPHandler    &gt;&gt;&gt; from pyftpdlib.servers import FTPServer    &gt;&gt;&gt;    &gt;&gt;&gt; authorizer = DummyAuthorizer()    &gt;&gt;&gt; authorizer.add_user(&quot;user&quot;, &quot;12345&quot;, &quot;/home/giampaolo&quot;, perm=&quot;elradfmwMT&quot;)    &gt;&gt;&gt; authorizer.add_anonymous(&quot;/home/nobody&quot;)    &gt;&gt;&gt;    &gt;&gt;&gt; handler = FTPHandler    &gt;&gt;&gt; handler.authorizer = authorizer    &gt;&gt;&gt;    &gt;&gt;&gt; server = FTPServer((&quot;127.0.0.1&quot;, 21), handler)    &gt;&gt;&gt; server.serve_forever()    [I 13-02-19 10:55:42] &gt;&gt;&gt; starting FTP server on 127.0.0.1:21 &lt;&lt;&lt;    [I 13-02-19 10:55:42] poller: &lt;class 'pyftpdlib.ioloop.Epoll'&gt;    [I 13-02-19 10:55:42] masquerade (NAT) address: None    [I 13-02-19 10:55:42] passive ports: None    [I 13-02-19 10:55:42] use sendfile(2): True    [I 13-02-19 10:55:45] 127.0.0.1:34178-[] FTP session opened (connect)    [I 13-02-19 10:55:48] 127.0.0.1:34178-[user] USER 'user' logged in.    [I 13-02-19 10:56:27] 127.0.0.1:34179-[user] RETR /home/giampaolo/.vimrc completed=1 bytes=1700 seconds=0.001    [I 13-02-19 10:56:39] 127.0.0.1:34179-[user] FTP session closed (disconnect).`other code samples &lt;http://pyftpdlib.readthedocs.io/en/latest/tutorial.html&gt;`__Donate======A lot of time and effort went into making pyftpdlib as it is right now.If you feel pyftpdlib is useful to you or your business and want to support itsfuture development please consider `donating &lt;https://gmpy.dev/donate&gt;`__ me some money.</longdescription>
</pkgmetadata>