<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pymemri&gt; Pymemri is a python library for creating &lt;b&gt;Plugins&lt;/b&gt; for the Memri Personal online datastore &lt;a href='https://gitlab.memri.io/memri/pod'&gt;(pod)&lt;/a&gt;. Pymemri has a PodClient to communicate with the pod, and tools to build and test plugins.[![Gitlab pipeline status (self-hosted)](https://img.shields.io/gitlab/pipeline/memri/pymemri/dev?gitlab_url=https%3A%2F%2Fgitlab.memri.io&amp;label=CI&amp;logo=gitlab&amp;style=plastic)](https://gitlab.memri.io/memri/pymemri/-/pipelines/latest)[![Discord](https://img.shields.io/discord/799216875480678430?color=blue&amp;label=Discord&amp;logo=discord&amp;style=plastic)](https://discord.gg/BcRfajJk4k)[![Twitter URL](https://img.shields.io/twitter/url?label=%40YourMemri&amp;logo=twitter&amp;style=plastic&amp;url=https%3A%2F%2Ftwitter.com%2FYourMemri)](https://twitter.com/YourMemri)&lt;a href=&quot;https://pypi.org/project/pymemri/&quot;&gt;&lt;img src=&quot;https://pepy.tech/badge/pymemri&quot; /&gt;&lt;/a&gt;Plugins connect and add the information to your Pod. Plugins that &lt;b&gt;import your data from external services&lt;/b&gt; are called **Importers** (Gmail, WhatsApp, etc.). Plugins that &lt;b&gt;connect new data to the existing data&lt;/b&gt; are called  **indexers** (face recognition, spam detection, object detection, etc.). Lastly there are plugins that &lt;b&gt;execute actions&lt;/b&gt; (sending messages, uploading files).## Installing### As a package```bashpip install pymemri```### DevelopmentTo install the Python package for development, run:```bashpip install -e .```## ContributingIf you would like to contribute to Pymemri, have a look at our [contibuting guidelines](CONTRIBUTING.md) to get started and join our Discord if you have any questions about using or contributing to the library.## Quickstart: Pod ClientAll interaction between plugins and the pod goes via the Pymemri `PodClient`. To use this client in development, we first need to have a pod running locally. The quickest way to do this is to install from the [pod repo](https://gitlab.memri.io/memri/pod), and run `./examples/run_development.sh`.If you have a running pod, you can define and add your own item definitions:```pythonfrom pymemri.data.schema import Itemfrom pymemri.pod.client import PodClientclass Dog(Item):    name: Optional[str] = None    age: Optional[int] = None# Connect to the pod and add the Dog item definitionclient = PodClient()client.add_to_schema(Dog)# Add a Dog to the poddog = Dog(name=&quot;Rita&quot;, age=3)client.create(dog)```## Quickstart: Running a pluginAfter installation, users can use the plugin CLI to manually run a plugin. For more information on how to build a plugin, see `run_plugin`.&lt;b&gt;With the pod running, run in your terminal: &lt;/b&gt;```bashstore_keysrun_plugin --metadata &quot;example_plugin.json&quot;```This stores a random owner key and database key on your disk for future use, and runs the pymemri example plugin. If everything works correctly, the output should read `Plugin run success.`## Docs[pymemri docs](https://docs.memri.io/component-architectures/plugins/readme/)</longdescription>
</pkgmetadata>