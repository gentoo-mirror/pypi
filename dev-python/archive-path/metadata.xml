<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># archive-path[![Build Status][ci-badge]][ci-link][![codecov.io][cov-badge]][cov-link][![PyPI version][pypi-badge]][pypi-link][![Conda Version][conda-badge]][conda-link]A package to provide pathlib like access to zip &amp; tar archives.## Installation```console$ pip install archive-path```## UsageFor reading zip (`ZipPath`) or tar (`TarPath`) files:```pythonfrom archive_path import TarPath, ZipPathpath = TarPath(&quot;path/to/file.tar.gz&quot;, mode=&quot;r:gz&quot;)sub_path = path / &quot;folder&quot; / &quot;file.txt&quot;assert sub_path.filepath == &quot;path/to/file.tar.gz&quot;assert sub_path.at == &quot;folder/file.txt&quot;assert sub_path.exists() and sub_path.is_file()assert sub_path.parent.is_dir()content = sub_path.read_text()for sub_path in path.iterdir():    print(sub_path)```For writing files, you should use within a context manager, or directly call the `close` method:```pythonwith TarPath(&quot;path/to/file.tar.gz&quot;, mode=&quot;w:gz&quot;) as path:    (path / &quot;new_file.txt&quot;).write_text(&quot;hallo world&quot;)    # there are also some features equivalent to shutil    (path / &quot;other_file.txt&quot;).putfile(&quot;path/to/external_file.txt&quot;)    (path / &quot;other_folder&quot;).puttree(&quot;path/to/external_folder&quot;, pattern=&quot;**/*&quot;)```Note that archive formats do not allow to overwrite existing files (they will raise a `FileExistsError`).For performant access to single files:```pythonfrom archive_path import read_file_in_tar, read_file_in_zipcontent = read_file_in_tar(&quot;path/to/file.tar.gz&quot;, &quot;file.txt&quot;, encoding=&quot;utf8&quot;)```These methods allow for faster access to files (using less RAM) in archives containing 1000's of files.This is because, the archive's file index is only read until the path is found (discarding non-matches),rather than the standard `tarfile`/`zipfile` approach that is to read the entire index into memory first.## Windows compatibilityPaths within the archives are **always** read and written as being `/` delimited.This means that the package works on Windows,but will not be compatible with archives written outside this package with `\\` path delimiters.## DevelopmentSee [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to contribute to this package.[ci-badge]: https://github.com/aiidateam/archive-path/workflows/CI/badge.svg?branch=main[ci-link]: https://github.com/aiidateam/archive-path/actions?query=workflow%3ACI+branch%3Amain+event%3Apush[conda-badge]: https://img.shields.io/conda/vn/conda-forge/archive-path.svg[conda-link]: https://anaconda.org/conda-forge/archive-path[cov-badge]: https://codecov.io/gh/aiidateam/archive-path/branch/main/graph/badge.svg[cov-link]: https://codecov.io/gh/aiidateam/archive-path[pypi-badge]: https://img.shields.io/pypi/v/archive-path.svg[pypi-link]: https://pypi.org/project/archive-path</longdescription>
</pkgmetadata>