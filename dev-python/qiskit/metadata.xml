<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Qiskit[![License](https://img.shields.io/github/license/Qiskit/qiskit-terra.svg?)](https://opensource.org/licenses/Apache-2.0) &lt;!--- long-description-skip-begin --&gt;[![Release](https://img.shields.io/github/release/Qiskit/qiskit-terra.svg)](https://github.com/Qiskit/qiskit-terra/releases)[![Downloads](https://img.shields.io/pypi/dm/qiskit-terra.svg)](https://pypi.org/project/qiskit-terra/)[![Coverage Status](https://coveralls.io/repos/github/Qiskit/qiskit-terra/badge.svg?branch=main)](https://coveralls.io/github/Qiskit/qiskit-terra?branch=main)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qiskit)[![Minimum rustc 1.61.0](https://img.shields.io/badge/rustc-1.61.0+-blue.svg)](https://rust-lang.github.io/rfcs/2495-min-rust-version.html)[![Downloads](https://pepy.tech/badge/qiskit-terra)](https://pypi.org/project/qiskit-terra/)&lt;!--- long-description-skip-end --&gt;[![DOI](https://zenodo.org/badge/161550823.svg)](https://zenodo.org/badge/latestdoi/161550823)**Qiskit** is an open-source framework for working with noisy quantum computers at the level of pulses, circuits, and algorithms.This framework allows for building, transforming, and visualizing  quantum circuits. It also contains a compiler that supportsdifferent quantum computers and a common interface for running programs on different quantum computer architectures.For more details on how to use Qiskit you can refer to the documentation located here:&lt;https://qiskit.org/documentation/&gt;## InstallationWe encourage installing Qiskit via ``pip``:```bashpip install qiskit```Pip will handle all dependencies automatically and you will always install the latest (and well-tested) version.To install from source, follow the instructions in the [documentation](https://qiskit.org/documentation/contributing_to_qiskit.html#install-install-from-source-label).## Creating Your First Quantum Program in QiskitNow that Qiskit is installed, it's time to begin working with Qiskit. To do thiswe create a `QuantumCircuit` object to define a basic quantum program.```pythonfrom qiskit import QuantumCircuitqc = QuantumCircuit(2, 2)qc.h(0)qc.cx(0, 1)qc.measure([0,1], [0,1])```This example makes an entangled state, also called a [Bell state](https://en.wikipedia.org/wiki/Bell_state).Once you've made your first quantum circuit, you can then simulate it.To do this, first we need to compile your circuit for the target backend we're going to runon. In this case we are leveraging the built-in `BasicAer` simulator. However, thissimulator is primarily for testing and is limited in performance and functionality (as the nameimplies). You should consider more sophisticated simulators, such as [`qiskit-aer`](https://github.com/Qiskit/qiskit-aer/),for any real simulation work.```pythonfrom qiskit import transpilefrom qiskit.providers.basicaer import QasmSimulatorPybackend_sim = QasmSimulatorPy()transpiled_qc = transpile(qc, backend_sim)```After compiling the circuit we can then run this on the ``backend`` object with:```pythonresult = backend_sim.run(transpiled_qc).result()print(result.get_counts(qc))```The output from this execution will look similar to this:```python{'00': 513, '11': 511}```For further examples of using Qiskit you can look at the tutorials in the documentation here:&lt;https://qiskit.org/documentation/tutorials.html&gt;### Executing your code on a real quantum chipYou can also use Qiskit to execute your code on a **real quantum processor**.Qiskit provides an abstraction layer that lets users run quantum circuits on hardware from anyvendor that provides an interface to their systems through Qiskit. Using these ``providers`` you can run any Qiskit code againstreal quantum computers. Some examples of published provider packages for running on real hardware are:* https://github.com/Qiskit/qiskit-ibmq-provider* https://github.com/Qiskit-Partners/qiskit-ionq* https://github.com/Qiskit-Partners/qiskit-aqt-provider* https://github.com/qiskit-community/qiskit-braket-provider* https://github.com/qiskit-community/qiskit-quantinuum-provider* https://github.com/rigetti/qiskit-rigetti&lt;!-- This is not an exhasutive list, and if you maintain a provider package please feel free to open a PR to add new providers --&gt;You can refer to the documentation of these packages for further instructionson how to get access and use these systems.## Contribution GuidelinesIf you'd like to contribute to Qiskit, please take a look at our[contribution guidelines](CONTRIBUTING.md). By participating, you are expected to uphold our [code of conduct](CODE_OF_CONDUCT.md).We use [GitHub issues](https://github.com/Qiskit/qiskit-terra/issues) for tracking requests and bugs. Please[join the Qiskit Slack community](https://qisk.it/join-slack) for discussion, comments, and questions.For questions related to running or using Qiskit, [Stack Overflow has a `qiskit`](https://stackoverflow.com/questions/tagged/qiskit).For questions on quantum computing with Qiskit, use the `qiskit` tag in the [Quantum Computing Stack Exchange](https://quantumcomputing.stackexchange.com/questions/tagged/qiskit) (please, read first the [guidelines on how to ask](https://quantumcomputing.stackexchange.com/help/how-to-ask) in that forum).## Authors and CitationQiskit is the work of [many people](https://github.com/Qiskit/qiskit-terra/graphs/contributors) who contributeto the project at different levels. If you use Qiskit, please cite as per the included [BibTeX file](CITATION.bib).## Changelog and Release NotesThe changelog for a particular release is dynamically generated and getswritten to the release page on Github for each release. For example, you canfind the page for the `0.9.0` release here:&lt;https://github.com/Qiskit/qiskit-terra/releases/tag/0.9.0&gt;The changelog for the current release can be found in the releases tab:[![Releases](https://img.shields.io/github/release/Qiskit/qiskit-terra.svg?style=flat&amp;label=)](https://github.com/Qiskit/qiskit-terra/releases)The changelog provides a quick overview of notable changes for a givenrelease.Additionally, as part of each release detailed release notes are written todocument in detail what has changed as part of a release. This includes anydocumentation on potential breaking changes on upgrade and new features.For example, you can find the release notes for the `0.9.0` release in theQiskit documentation here:https://qiskit.org/documentation/release_notes.html#terra-0-9## License[Apache License 2.0](LICENSE.txt)</longdescription>
</pkgmetadata>