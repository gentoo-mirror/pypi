<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># wftutil&lt;a href=&quot;https://pypi.python.org/pypi/wtfutil&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/wtfutil.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.python.org/pypi/wtfutil&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/wtfutil.svg&quot;&gt;&lt;/a&gt;=================================================================================================================## ☤ The BasicsWTF A Python utility / library## ☤ InstallationOf course, the recommended installation method is `pipenv &lt;http://pipenv.org&gt;`\_::```bashpipenv install wtfutil```or```bashpip install wtfutil```## ☤ Features```pythonfileutilsqlutilnotifyutilhttputilhashutilstrutil```## ☤ Example```pythonfrom wtfutil import util# 1. get requests session# def requests_session(proxies=False, max_retries=1, timeout=30, debug=False, base_url=None, user_agent=None, use_cache=None):req1 = util.requests_session(timeout=30, max_retries=1)req1.post('http://localhost:8080/xxx')req2 = util.requests_session(base_url='http://localhost:8080', timeout=30, max_retries=1)req2.post('/xxx/update')``````pythonfrom wtfutil import util# send http rawutil.httpraw('''POST /a/bbbb?id=1&amp;type=jsp HTTP/1.1Host: abc.comUser-Agent: Mozilla/5.0 (Windows NT 10.0; rv:88.0) Gecko/20100101 Firefox/88.0Content-Length: 1Accept-Charset: utf-8Content-Type: multipart/; boundary=----WebKitFormBoundaryzxcxzcxzAccept-Encoding: gzip------WebKitFormBoundaryzxcxzcxzContent-Disposition: form-data; name=&quot;upload&quot;;filename=&quot;f.jsp&quot;test------WebKitFormBoundaryzxcxzcxzContent-Disposition: form-data; name=&quot;submit&quot;submit------WebKitFormBoundaryzxcxzcxz--    ''')``````pythonfrom wtfutil import util# read and write file# def read_lines(filepath, encoding='utf-8', not_exists_ok: bool = False) -&gt; list:urls = util.read_lines('input_url.txt')# def read_text(filepath, encoding='utf-8', not_exists_ok: bool = False) -&gt; str:data = util.read_text('input.txt')data_bytes = util.read_bytes('input.txt')# def write_text(filepath, content, mode='w', encoding='utf-8'):util.write_text('output.txt', 'test')util.write_lines('output.txt', ['te','st'])...# like py3.9 removesuffixutil.removesuffix('test123456', '456')util.removeprefix('test123456', 'test')util.str_to_bool('yes')...```## ☤ Thank YouThanks for checking this library out! I hope you find it useful.Of course, there's always room for improvement. Feel free to [https://github.com/vicrack](https://github.com/vicrack)</longdescription>
</pkgmetadata>