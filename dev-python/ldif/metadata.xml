<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ldif - parse and generate LDIF data (see [RFC 2849](https://tools.ietf.org/html/rfc2849)).![Commit activity](https://img.shields.io/github/commit-activity/m/abilian/ldif)![Code size in bytes](https://img.shields.io/github/languages/code-size/abilian/ldif)![License](https://img.shields.io/github/license/abilian/ldif)![Latest version](https://img.shields.io/pypi/v/ldif)![PyPI Downloads](https://img.shields.io/pypi/dm/ldif)This is a fork of the `ldif` module from[python-ldap](http://www.python-ldap.org/) with python3/unicode support.One of its benefits is that it's a pure-python package (you don'tdepend on the `libldap2-dev` (or similar) package that needs to beinstalled on your laptop / test machine / production server).See the last entry in [changelog](https://github.com/abilian/ldif/blob/main/CHANGES.rst) for a more complete list ofdifferences.This package only support Python 3 (\&gt;= 3.7, actually).## UsageParse LDIF from a file (or `BytesIO`):```pythonfrom ldif import LDIFParserfrom pprint import pprintparser = LDIFParser(open(&quot;data.ldif&quot;, &quot;rb&quot;))for dn, record in parser.parse():    print('got entry record: %s' % dn)    pprint(record)```Write LDIF to a file (or `BytesIO`):```pythonfrom ldif import LDIFWriterwriter = LDIFWriter(open(&quot;data.ldif&quot;, &quot;wb&quot;))writer.unparse(&quot;mail=alice@example.com&quot;, {    &quot;cn&quot;: [&quot;Alice Alison&quot;],    &quot;mail&quot;: [&quot;alice@example.com&quot;],    &quot;objectclass&quot;: [&quot;top&quot;, &quot;person&quot;],})```## Unicode supportThe stream object that is passed to parser or writer must be an asciibyte stream.The spec allows to include arbitrary data in base64 encoding or via URL.There is no way of knowing the encoding of this data. To handle this,there are two modes:By default, the `LDIFParser` will try to interpret all values as UTF-8and leave only the ones that fail to decode as bytes. But you can alsopass an `encoding` of `None` to the constructor, in which case theparser will not try to do any conversion and return bytes directly.</longdescription>
</pkgmetadata>