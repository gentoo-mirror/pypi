<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. docs-index-start.. |pypi-release| image:: https://img.shields.io/pypi/v/cloup.svg    :alt: Latest release on PyPI    :target: https://pypi.org/project/cloup/.. |tests-status| image:: https://github.com/janLuke/cloup/workflows/Tests/badge.svg    :alt: Tests status    :target: https://github.com/janLuke/cloup/actions?query=workflow%3ATests.. |coverage| image:: https://codecov.io/github/janLuke/cloup/coverage.svg?branch=master    :alt: Coverage Status    :target: https://app.codecov.io/github/janluke/cloup/tree/master.. |python-versions| image:: https://img.shields.io/pypi/pyversions/cloup.svg    :alt: Supported versions    :target: https://pypi.org/project/cloup.. |dev-docs| image:: https://readthedocs.org/projects/cloup/badge/?version=latest    :alt: Documentation Status (master branch)    :target: https://cloup.readthedocs.io/en/latest/.. |release-docs| image:: https://readthedocs.org/projects/cloup/badge/?version=stable    :alt: Documentation Status (latest release)    :target: https://cloup.readthedocs.io/en/stable/.. |downloads| image:: https://img.shields.io/pypi/dw/cloup    :alt: PyPI - Downloads    :target: https://pypistats.org/packages/cloup.. |donate| image:: https://img.shields.io/badge/Donate-PayPal-green.svg    :alt: Donate with PayPal    :target: https://www.paypal.com/donate/?hosted_button_id=4GTN24HXPMNBJ========Overview========|pypi-release| |python-versions| |downloads| |tests-status| |coverage| |dev-docs| |donate|**Cloup** — originally from &quot;**Cl**\ick + option gr\ **oup**\s&quot; — enriches`Click &lt;https://github.com/pallets/click&gt;`_ with several features that make itmore expressive and configurable:- **option groups** and an (optional) help section for positional arguments- **constraints**, like ``mutually_exclusive``, that can be applied to option groups  or to any group of parameters, even *conditionally*- **subcommand aliases**- **subcommands sections**, i.e. the possibility of organizing the subcommands of a  ``Group`` in multiple help sections- a **themeable HelpFormatter**  that:  - has more parameters for adjusting widths and spacing, which can be provided    at the context and command level  - use a different layout when the terminal width is below a certain threshold    in order to improve readability- suggestions like &quot;did you mean &lt;subcommand&gt;?&quot; when you mistype a subcommand.Moreover, Cloup improves on **IDE support** providing decorators with *detailed*type hints and adding the static methods ``Context.settings()`` and``HelpFormatter.settings()`` for creating dictionaries of settings.Cloup is **statically type-checked** with MyPy in strict mode and extensively **tested**against multiple versions of Python with nearly 100% coverage.A simple example================.. code-block:: python    from cloup import (        HelpFormatter, HelpTheme, Style,        command, option, option_group    )    from cloup.constraints import RequireAtLeast, mutually_exclusive    # Check the docs for all available arguments of HelpFormatter and HelpTheme.    formatter_settings = HelpFormatter.settings(        theme=HelpTheme(            invoked_command=Style(fg='bright_yellow'),            heading=Style(fg='bright_white', bold=True),            constraint=Style(fg='magenta'),            col1=Style(fg='bright_yellow'),        )    )    # In a multi-command app, you can pass formatter_settings as part    # of your context_settings so that they are propagated to subcommands.    @command(formatter_settings=formatter_settings)    @option_group(        &quot;Cool options&quot;,        option('--foo', help='This text should describe the option --foo.'),        option('--bar', help='This text should describe the option --bar.'),        constraint=mutually_exclusive,    )    @option_group(        &quot;Other cool options&quot;,        &quot;This is the optional description of this option group.&quot;,        option('--pippo', help='This text should describe the option --pippo.'),        option('--pluto', help='This text should describe the option --pluto.'),        constraint=RequireAtLeast(1),    )    def cmd(**kwargs):        &quot;&quot;&quot;This is the command description.&quot;&quot;&quot;        pass    if __name__ == '__main__':        cmd(prog_name='invoked-command').. image:: https://raw.githubusercontent.com/janLuke/cloup/master/docs/_static/basic-example.png    :alt: Basic example --help screenshotIf you don't provide ``--pippo`` or ``--pluto``:.. code-block:: text    Usage: invoked-command [OPTIONS]    Try 'invoked-command --help' for help.    Error: at least 1 of the following parameters must be set:      --pippo      --plutoThis simple example just scratches the surface. Read more in the documentation(links below).Supporting the project======================Designing, testing and documenting a library takes a lot of time. The mostconcrete way to show your appreciation and to support future development is bydonating. Any amount is appreciated.|donate|Apart from that, you can help the project by starring it on GitHub, reportingissues, proposing improvements and contributing with your code!.. docs-index-endLinks=====* Documentation (release_ | development_)* `Changelog &lt;https://cloup.readthedocs.io/en/stable/pages/changelog.html&gt;`_* `GitHub repository &lt;https://github.com/janLuke/cloup&gt;`_* `Q&amp;A and discussions &lt;https://github.com/janLuke/cloup/discussions&gt;`_.. _release: https://cloup.readthedocs.io/en/stable/#user-guide.. _development: https://cloup.readthedocs.io/en/latest/#user-guideThanks======.. list-table::    * - |JetBrainsLogo|      - A big thank to `JetBrains &lt;https://www.jetbrains.com/&gt;`_ for providing me with a free license for their IDEs.        If you're developing a non-commercial open-source project, you may consider applying for a free license too.        You find all details at `this link &lt;https://jb.gg/OpenSourceSupport&gt;`_. Note that this license can be used only        to develop non-commercial projects... |JetBrainsLogo| image:: https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.png    :alt: JetBrains logo    :width: 250</longdescription>
</pkgmetadata>