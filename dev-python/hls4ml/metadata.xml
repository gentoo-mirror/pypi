<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p float=&quot;left&quot;&gt;   &lt;img src=&quot;https://github.com/fastmachinelearning/fastmachinelearning.github.io/raw/master/images/hls4ml_logo.svg&quot; alt=&quot;hls4ml&quot; width=&quot;400&quot;/&gt;&lt;/p&gt;[![DOI](https://zenodo.org/badge/108329371.svg)](https://zenodo.org/badge/latestdoi/108329371)[![License](https://img.shields.io/badge/License-Apache_2.0-red.svg)](https://opensource.org/licenses/Apache-2.0)[![Documentation Status](https://github.com/fastmachinelearning/hls4ml/actions/workflows/build-sphinx.yml/badge.svg)](https://fastmachinelearning.org/hls4ml)[![PyPI version](https://badge.fury.io/py/hls4ml.svg)](https://badge.fury.io/py/hls4ml)[![Downloads](https://static.pepy.tech/personalized-badge/hls4ml?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=orange&amp;left_text=Downloads)](https://pepy.tech/project/hls4ml)&lt;a href=&quot;https://anaconda.org/conda-forge/hls4ml/&quot;&gt;&lt;img alt=&quot;conda-forge&quot; src=&quot;https://img.shields.io/conda/dn/conda-forge/hls4ml.svg?label=conda-forge&quot;&gt;&lt;/a&gt;A package for machine learning inference in FPGAs. We create firmware implementations of machine learning algorithms using high level synthesis language (HLS). We translate traditional open-source machine learning package models into HLS that can be configured for your use-case!If you have any questions, comments, or ideas regarding hls4ml or just want to show us how you use hls4ml, don't hesitate to reach us through the [discussions](https://github.com/fastmachinelearning/hls4ml/discussions) tab.# Documentation &amp; TutorialFor more information visit the webpage: [https://fastmachinelearning.org/hls4ml/](https://fastmachinelearning.org/hls4ml/)Detailed tutorials on how to use `hls4ml`'s various functionalities can be found [here](https://github.com/hls-fpga-machine-learning/hls4ml-tutorial).# Installation```bashpip install hls4ml```To install the extra dependencies for profiling:```bashpip install hls4ml[profiling]```# Getting Started### Creating an HLS project```Pythonimport hls4ml# Fetch a keras model from our example repository# This will download our example model to your working directory and return an example configuration fileconfig = hls4ml.utils.fetch_example_model('KERAS_3layer.json')# You can print the configuration to see some default parametersprint(config)# Convert it to a hls projecthls_model = hls4ml.converters.keras_to_hls(config)# Print full list of example models if you want to explore morehls4ml.utils.fetch_example_list()```### Building a project with Xilinx Vivado HLS (after downloading and installing from [here](https://www.xilinx.com/products/design-tools/vivado/integration/esl-design.html))Note: Vitis HLS is not yet supported. Vivado HLS versions between 2018.2 and 2020.1 are recommended.```Python# Use Vivado HLS to synthesize the model# This might take several minuteshls_model.build()# Print out the report if you wanthls4ml.report.read_vivado_report('my-hls-test')```# CitationIf you use this software in a publication, please cite the software```bibtex@software{fastml_hls4ml,  author       = {{FastML Team}},  title        = {fastmachinelearning/hls4ml},  year         = 2023,  publisher    = {Zenodo},  version      = {v0.7.0rc1},  doi          = {10.5281/zenodo.1201549},  url          = {https://github.com/fastmachinelearning/hls4ml}}```and first publication:```bibtex@article{Duarte:2018ite,    author = &quot;Duarte, Javier and others&quot;,    title = &quot;{Fast inference of deep neural networks in FPGAs for particle physics}&quot;,    eprint = &quot;1804.06913&quot;,    archivePrefix = &quot;arXiv&quot;,    primaryClass = &quot;physics.ins-det&quot;,    reportNumber = &quot;FERMILAB-PUB-18-089-E&quot;,    doi = &quot;10.1088/1748-0221/13/07/P07027&quot;,    journal = &quot;JINST&quot;,    volume = &quot;13&quot;,    number = &quot;07&quot;,    pages = &quot;P07027&quot;,    year = &quot;2018&quot;}```Additionally, if you use specific features developed in later papers, please cite those as well. For example, CNNs:```bibtex@article{Aarrestad:2021zos,    author = &quot;Aarrestad, Thea and others&quot;,    title = &quot;{Fast convolutional neural networks on FPGAs with hls4ml}&quot;,    eprint = &quot;2101.05108&quot;,    archivePrefix = &quot;arXiv&quot;,    primaryClass = &quot;cs.LG&quot;,    reportNumber = &quot;FERMILAB-PUB-21-130-SCD&quot;,    doi = &quot;10.1088/2632-2153/ac0ea1&quot;,    journal = &quot;Mach. Learn. Sci. Tech.&quot;,    volume = &quot;2&quot;,    number = &quot;4&quot;,    pages = &quot;045015&quot;,    year = &quot;2021&quot;}@article{Ghielmetti:2022ndm,    author = &quot;Ghielmetti, Nicol\`{o} and others&quot;,    title = &quot;{Real-time semantic segmentation on FPGAs for autonomous vehicles with hls4ml}&quot;,    eprint = &quot;2205.07690&quot;,    archivePrefix = &quot;arXiv&quot;,    primaryClass = &quot;cs.CV&quot;,    reportNumber = &quot;FERMILAB-PUB-22-435-PPD&quot;,    doi = &quot;10.1088/2632-2153/ac9cb5&quot;,    journal =&quot;Mach. Learn. Sci. Tech.&quot;,    year = &quot;2022&quot;}```binary/ternary networks:```bibtex@article{Loncar:2020hqp,    author = &quot;Ngadiuba, Jennifer and others&quot;,    title = &quot;{Compressing deep neural networks on FPGAs to binary and ternary precision with HLS4ML}&quot;,    eprint = &quot;2003.06308&quot;,    archivePrefix = &quot;arXiv&quot;,    primaryClass = &quot;cs.LG&quot;,    reportNumber = &quot;FERMILAB-PUB-20-167-PPD-SCD&quot;,    doi = &quot;10.1088/2632-2153/aba042&quot;,    journal = &quot;Mach. Learn. Sci. Tech.&quot;,    volume = &quot;2&quot;,    pages = &quot;015001&quot;,    year = &quot;2021&quot;}```</longdescription>
</pkgmetadata>