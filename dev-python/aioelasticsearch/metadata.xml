<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aioelasticsearch================:info: elasticsearch-py wrapper for asyncio.. image:: https://img.shields.io/travis/aio-libs/aioelasticsearch.svg    :target: https://travis-ci.org/aio-libs/aioelasticsearch.. image:: https://img.shields.io/pypi/v/aioelasticsearch.svg    :target: https://pypi.python.org/pypi/aioelasticsearch.. image:: https://codecov.io/gh/aio-libs/aioelasticsearch/branch/master/graph/badge.svg  :target: https://codecov.io/gh/aio-libs/aioelasticsearchInstallation------------.. code-block:: shell    pip install aioelasticsearchUsage-----.. code-block:: python    import asyncio    from aioelasticsearch import Elasticsearch    async def go():        es = Elasticsearch()        print(await es.search())        await es.close()    loop = asyncio.get_event_loop()    loop.run_until_complete(go())    loop.close()Features--------Asynchronous `scroll &lt;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html&gt;`_.. code-block:: python    import asyncio    from aioelasticsearch import Elasticsearch    from aioelasticsearch.helpers import Scan    async def go():        async with Elasticsearch() as es:            async with Scan(                es,                index='index',                doc_type='doc_type',                query={},            ) as scan:                print(scan.total)                async for doc in scan:                    print(doc['_source'])    loop = asyncio.get_event_loop()    loop.run_until_complete(go())    loop.close()Thanks------The library was donated by `Ocean S.A. &lt;https://ocean.io/&gt;`_Thanks to the company for contribution.</longdescription>
</pkgmetadata>