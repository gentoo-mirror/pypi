<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AWS CDK Datadog Resources[![npm version](https://badge.fury.io/js/%40nomadblacky%2Fcdk-datadog-resources.svg)](https://badge.fury.io/js/%40nomadblacky%2Fcdk-datadog-resources)An AWS CDK construct library that wraps [DataDog/datadog-cloudformation-resources](https://github.com/DataDog/datadog-cloudformation-resources).## RequirementsBefore using this library, [register datadog-cloudformation-resources to your AWS account.](https://github.com/DataDog/datadog-cloudformation-resources#datadog-aws-cloudformation)You need to register the correct version listed in `Supported Resources`.## Supported CDK Languages* TypeScript* Python* ~~Java~~ Sorry, there is a problem with the release. ([#22](https://github.com/NomadBlacky/cdk-datadog-resources/issues/22))## Supported Resources| Supported? | Resource                | Datadog CF Resource Name         | Description                                              | Datadog CF Version || :--------: | ----------------------- | -------------------------------- | -------------------------------------------------------- | ------------------ ||     ✅     | Dashboards              | `Datadog::Dashboards::Dashboard` | [Create, update, and delete Datadog dashboards.](https://github.com/DataDog/datadog-cloudformation-resources/tree/master/datadog-dashboards-dashboard-handler)      | [1.0.0](https://github.com/DataDog/datadog-cloudformation-resources/blob/master/datadog-dashboards-dashboard-handler/CHANGELOG.md#100--2021-02-16)         ||     ✅     | Datadog-AWS integration | `Datadog::Integrations::AWS`     | [Manage your Datadog-Amazon Web Service integration.](https://github.com/DataDog/datadog-cloudformation-resources/tree/master/datadog-integrations-aws-handler) | [1.1.0](https://github.com/DataDog/datadog-cloudformation-resources/blob/master/datadog-integrations-aws-handler/CHANGELOG.md#110--2020-08-04)        ||     ✅     | Monitors                | `Datadog::Monitors::Monitor`     | [Create, update, and delete Datadog monitors.](https://github.com/DataDog/datadog-cloudformation-resources/tree/master/datadog-monitors-monitor-handler)        | [3.0.0](https://github.com/DataDog/datadog-cloudformation-resources/blob/master/datadog-monitors-monitor-handler/CHANGELOG.md#300--2021-02-16)         ||     ✅     | Downtimes               | `Datadog::Monitors::Downtime`    | [Enable or disable downtimes for your monitors.](https://github.com/DataDog/datadog-cloudformation-resources/tree/master/datadog-monitors-downtime-handler)      | [2.0.0](https://github.com/DataDog/datadog-cloudformation-resources/blob/master/datadog-monitors-downtime-handler/CHANGELOG.md#200--2021-02-16)         ||     ✅     | Users                   | `Datadog::IAM::User`             | [Create and manage Datadog users.](https://github.com/DataDog/datadog-cloudformation-resources/tree/master/datadog-iam-user-handler)                    | [1.2.0](https://github.com/DataDog/datadog-cloudformation-resources/blob/master/datadog-iam-user-handler/CHANGELOG.md#120--2021-02-16)         |## InstallationTypeScript```shellnpm install @nomadblacky/cdk-datadog-resources```Python```shellpip install cdk-datadog-resources```Java```xml&lt;dependency&gt;    &lt;groupId&gt;dev.nomadblacky&lt;/groupId&gt;    &lt;artifactId&gt;cdk-datadog-resources&lt;/artifactId&gt;    &lt;version&gt;x.y.z&lt;/version&gt;&lt;/dependency&gt;```## UsageBelow are examples of TypeScript.### Dashboards```python# Example automatically generated. See https://github.com/aws/jsii/issues/826import fs as fsfrom nomadblacky.cdk_datadog_resources import DatadogDashboardDatadogDashboard(your_stack, &quot;TestDashboard&quot;,    datadog_credentials={        &quot;api_key&quot;: process.env.DATADOG_API_KEY,        &quot;application_key&quot;: process.env.DATADOG_APP_KEY    },    dashboard_definition=fs.read_file_sync(f&quot;{__dirname}/path/to/your/dashboard-definition.json&quot;).to_string())```### Monitors```python# Example automatically generated. See https://github.com/aws/jsii/issues/826from nomadblacky.cdk_datadog_resources import DatadogMonitorDatadogMonitor(your_stack, &quot;TestMonitor&quot;,    datadog_credentials={        &quot;api_key&quot;: process.env.DATADOG_API_KEY,        &quot;application_key&quot;: process.env.DATADOG_APP_KEY    },    query=&quot;avg(last_1h):sum:system.cpu.system{host:host0} &gt; 100&quot;,    type=MonitorType.QueryAlert,    name=&quot;Test Monitor&quot;,    options={        &quot;thresholds&quot;: {            &quot;critical&quot;: 100,            &quot;warning&quot;: 80,            &quot;o_k&quot;: 90        },        &quot;notify_no_data&quot;: True,        &quot;evaluation_delay&quot;: 60    })```### Downtimes```python# Example automatically generated. See https://github.com/aws/jsii/issues/826from nomadblacky.cdk_datadog_resources import DatadogDowntimeDatadogDowntime(stack, &quot;TestMonitor&quot;,    datadog_credentials={        &quot;api_key&quot;: &quot;DATADOG_API_KEY&quot;,        &quot;application_key&quot;: &quot;DATADOG_APP_KEY&quot;    },    scope=[&quot;host:myserver&quot;, &quot;service:myservice&quot;],    start=1624542715,    end=1624546321)```### Users```python# Example automatically generated. See https://github.com/aws/jsii/issues/826from nomadblacky.cdk_datadog_resources import DatadogIAMUserDatadogIAMUser(stack, &quot;TestUser&quot;,    datadog_credentials={        &quot;api_key&quot;: &quot;DATADOG_API_KEY&quot;,        &quot;application_key&quot;: &quot;DATADOG_APP_KEY&quot;    },    email=&quot;jane.doe@example.com&quot;,    name=&quot;name_example&quot;,    handle=&quot;title_example&quot;,    disabled=False)```### DataDog Integration```python# Example automatically generated. See https://github.com/aws/jsii/issues/826from nomadblacky.cdk_datadog_resources import DatadogIntegrationAWSDatadogIntegrationAWS(self, &quot;DataDogIntegration&quot;,    datadog_credentials={        &quot;api_key&quot;: &quot;DATADOG_API_KEY&quot;,        &quot;application_key&quot;: &quot;DATADOG_APP_KEY&quot;    },    account_id=&quot;ACCOUNT_ID&quot;,    role_name=&quot;DatadogIntegrationRole&quot;)```</longdescription>
</pkgmetadata>