<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Curifactory[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![PyPI version](https://badge.fury.io/py/curifactory.svg)](https://badge.fury.io/py/curifactory)[![Conda Version](https://img.shields.io/conda/vn/conda-forge/curifactory.svg)](https://anaconda.org/conda-forge/curifactory)[![status](https://joss.theoj.org/papers/e6ace365c4f632391a289ddea5bbfd1c/status.svg)](https://joss.theoj.org/papers/e6ace365c4f632391a289ddea5bbfd1c)[![tests](https://github.com/ORNL/curifactory/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/ORNL/curifactory/actions/workflows/tests.yml)[![Python versions](https://img.shields.io/pypi/pyversions/curifactory.svg)](https://github.com/ORNL/curifactory)[![License](https://img.shields.io/pypi/l/curifactory)](https://github.com/ORNL/curifactory/blob/main/LICENSE)Curifactory is a library and CLI tool designed to help organize and manageresearch experiments in python.![screenshot flow](https://raw.githubusercontent.com/ORNL/curifactory/main/sphinx/source/images/diagram.png)Experiment management must fulfill several tasks, including experiment orchestration,parameterization, caching, reproducibility, reporting, and parallelization.Existing projects such as MLFlow, MetaFlow, Luigi, and Pachydermsupport these tasks in several different ways and to various degrees.Curifactory provides a different opinion, with a heavier focus on supporting generalresearch experiment workflows for individuals or small teams working primarilyin python.You can read more about these design principles in our paper in the [SciPy 2022proceedings](https://conference.scipy.org/proceedings/scipy2022/nathan_martindale.html).## Features* Adds a CLI layer on top of your codebase, a single entrypoint for running experiments* Automatic caching of intermediate data and lazy loading of stored objects* Jupyter notebook output for further exploration of an experiment run* Docker container output with copy of codebase, conda environment, full experiment run cache, and jupyter run notebook* HTML report output from each run with graphviz-rendered diagram of experiment* Easily report plots and values to HTML report* Configuration files are python scripts, allowing programmatic definition, parameter composition, and parameter inheritance* Output logs from every run* Run experiments directly from CLI or other python code, notebooks, etc.## Installation```pythonpip install curifactory```Graphviz is required for certain features and can be installed through condavia:```pythonconda install python-graphviz```### Tab completionFor tab-completion in bash/zsh, install the `argcomplete` package (if using curifactory insidea conda environment, you'll need to install this in your system python.)```pythonpip install argcomplete```To enable, you can either use argcomplete's global hook `activate-global-python-argcomplete`, whichwill enable tab complete on all argcomplete-enabled python packages (e.g. pytest), or you can add`eval &quot;$(register-python-argcomplete experiment)&quot;` to your shell's rc file. Curifactory can addthis line for you automatically with:```bashcurifactory completion [--bash|--zsh]  # use the shell flag appropriate```Once enabled, the `experiment` command will provide tab complete for experiment names, parameter names, and flags.## Requirements**OS**: We primarily develop and test Curifactory on Linux, but it runs on Windows and MacOS as well.**Python**: 3.9-3.11**Optional**:* Conda/Mamba* Graphviz* Docker* Jupyter notebook/lab## DocumentationThe documentation for the latest version of Curifactory can be found at:[https://ornl.github.io/curifactory/latest/index.html](https://ornl.github.io/curifactory/latest/index.html).## ExamplesSeveral small example can be found in the `examples` folder.`examples/notebooks` includes walkthroughs demonstrating usage of curifactorysolely in Jupyter.## CitationPlease use the following BibTeX if citing this project:```bibtex@article{Martindale2023,  doi = {10.21105/joss.05793},  url = {https://doi.org/10.21105/joss.05793},  year = {2023},  publisher = {The Open Journal},  volume = {8},  number = {90},  pages = {5793},  author = {Nathan Martindale and Scott L. Stewart and Jason Hite and Mark B. Adams},  title = {Curifactory: A research experiment manager},  journal = {Journal of Open Source Software}}```## Similar ProjectsCurifactory is one tool and one opinion among many, other projects that have similar goals and/or approaches:* [Kedro](https://github.com/kedro-org/kedro)* [Tango](https://github.com/allenai/tango)* [Sacred](https://github.com/IDSIA/sacred)* [MLFlow](https://github.com/mlflow/mlflow)</longdescription>
</pkgmetadata>