<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># RL-Accounting  会计强化学习&lt;a href=&quot;https://pypi.org/project/cpagym/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/accounting-intelligent-ai/cpagym/main/cpagym.png&quot; width = &quot;300&quot; height = &quot;300&quot; alt=&quot;logo&quot; align=center /&gt;&lt;/a&gt;Redefining [Accounting](https://cpanlp.com/)!Developed by **Bfsu Ai-Accounting Team** (c) 2023[Github](https://github.com/accounting-intelligent-ai/cpagym)[![PyPI - Python Version](https://img.shields.io/static/v1?label=pypi&amp;message=v0.0.21&amp;color=blue)](https://pypi.org/project/cpagym/)[![Downloads](https://static.pepy.tech/badge/cpagym/week)](https://pepy.tech/project/cpagym)## Install &amp; Import 安装和导入For detailed installation instructions, see the[documentation](https://cpanlp.com/documentation).```pythonpip install cpagymimport gymnasium as gymimport cpagym as cg import torch```## Accounting Envs 主要会计环境### 1. Moral_Hazard 道德风险#### Action Space| Num | Action                                | Unit         ||-----|---------------------------------------|--------------|| 0   | Discharge of duty                     | 0            || 1   | Due diligence                         | 1            |#### Observation SpaceThe observation is a `ndarray` with shape `(6,)` that provides information about thetwo rotational joint angles as well as their angular velocities:| Num | Observation                  | Min                 | Max               ||-----|------------------------------|---------------------|-------------------|| 0   | Project success rate         |  0                  | 1                 || 1   | Project success return       |  0                  | 1                 |```pythonenv = gym.make(&quot;Moral_Hazard-v1&quot;)#Instantiate the Environment载入道德风险环境state, info = env.reset(seed=2)#初始化n_steps = 10for _ in range(n_steps):    action = env.action_space.sample()#随机行动    state, reward, terminated, truncated, info = env.step(action)    print(observation, reward, terminated, truncated, info )    if terminated or truncated:        observation, info = env.reset()```## Accounting  RL-Algorithm 会计强化学习算法### 1. Train the Agent with DQN#### Accounting  RL-Agent 会计强化学习代理人```pythonagent=cg.Agent(state_size=1,action_size=2)#Instantiate the Agent载入会计智能体env = gym.make(&quot;Moral_Hazard-v1&quot;)state, info = env.reset(seed=2)action = agent.act(state, eps)#最优化行动next_state, reward, done, _,_ = env.step(action)agent.step(state, action, reward, next_state, done)print(agent.memory.memory)```## 配套智能会计包CPANLP&lt;a href=&quot;https://pypi.org/project/cpanlp/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/accounting-intelligent-ai/cpanlp/main/cpanlp.png&quot; width = &quot;320&quot; height = &quot;120&quot; alt=&quot;logo&quot; align=center /&gt;&lt;/a&gt;Check out: https://cpanlp.com/reinforcement</longdescription>
</pkgmetadata>