<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Gdf2BokehAn easy way to map your geographic data (from a GeoDataFrame, a DataFrame and a list of dictionaries containing wkt or shapely geometries).Yeah! Because it's boring to convert shapely geometry to bokeh format each time I need to map something !!Also, this library let you to build complex Bokeh dashboard: no limitations to use Bokeh mecanisms.[![CI](https://github.com/amauryval/gdf2bokeh/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/amauryval/gdf2bokeh/actions/workflows/main.yml)[![codecov](https://codecov.io/gh/amauryval/gdf2bokeh/branch/master/graph/badge.svg)](https://codecov.io/gh/amauryval/gdf2bokeh)[![Anaconda-Server Badge](https://anaconda.org/amauryval/gdf2bokeh/badges/version.svg)](https://anaconda.org/amauryval/gdf2bokeh)[![Anaconda-Server Badge](https://anaconda.org/amauryval/gdf2bokeh/badges/latest_release_date.svg)](https://anaconda.org/amauryval/gdf2bokeh)[![Anaconda-Server Badge](https://anaconda.org/amauryval/gdf2bokeh/badges/platforms.svg)](https://anaconda.org/amauryval/gdf2bokeh)[![PyPI version](https://badge.fury.io/py/gdf2bokeh.svg)](https://badge.fury.io/py/gdf2bokeh)Check the demo [here](https://amauryval.github.io/gdf2bokeh/)## How to install it ?### with pip```bashpip install gdf2bokeh```### With Anaconda```bashconda install -c amauryval gdf2bokeh```## How to use it ?Gdf2Bokeh is able to map your data from various format. About data, you must be aware to use compliant geometry types:It supports Geo/DataFrame/List of dict/List of geometry containing these 4 geometries families:* Point data with Point geometry* MultiPoint data with MultiPoint geometry* Line data with LineString and/or MultiLineString geometries* Polygon data with Polygon and/or MultiPolygon geometriesGeometryCollection data are not supported, so explode it to use it. So the best practice consists to split your input data by geometry type. And you'll be able, optionally, to style your data thanks to the bokeh arguments :Check bokeh documentation in order to style your data :    * Point / MultiPoint families: [bokeh marker style options](https://docs.bokeh.org/en/latest/docs/reference/models/markers.html)* Line family: [bokeh multi_line style options](https://docs.bokeh.org/en/latest/docs/reference/plotting.html?highlight=multi_polygons#bokeh.plotting.figure.Figure.multi_line)* Polygon family: [bokeh multi_polygon style options](https://docs.bokeh.org/en/latest/docs/reference/plotting.html?highlight=multi_polygons#bokeh.plotting.figure.Figure.multi_polygons)### A simple example```pythonfrom bokeh.plotting import showimport geopandas as gpdimport paandas as pdfrom gdf2bokeh import Gdf2Bokehmap_session = Gdf2Bokeh()# add your layer from your data# Map a points GeoDataFrame. You can see marker style arguments, so we suppose that input_data contains Point geometrymap_session.add_layer_from_geodataframe(&quot;layer1&quot;, gpd.GeoDataFrame.from_file(&quot;your_poins_data.geojson&quot;),                                        size=6, fill_color=&quot;red&quot;, line_color=&quot;blue&quot;)# Map from a DataFrame. Style parameters are not requiredmap_session.add_layer_from_dataframe(&quot;layer2&quot;, pd.DataFrame.from_file(&quot;your_data.json&quot;),                                     geom_column=&quot;geometry&quot;, geom_format=&quot;shapely&quot;)# Map from a list of dictionnariesmap_session.add_layer_from_dict_list(&quot;layer3&quot;,                                      [                                         {&quot;geometry&quot;: &quot;POINT(0 0)&quot;, &quot;col1&quot;: &quot;value1&quot;},                                         {&quot;geometry&quot;: &quot;POINT(1 1)&quot;, &quot;col1&quot;: &quot;value2&quot;}                                     ],                                     geom_column=&quot;geometry&quot;, geom_format=&quot;wkt&quot;)# Map from a geometry (shapely, wkt...) listmap_session.add_layer_from_geom_list(&quot;layer4&quot;, [&quot;Point(0 0)&quot;, &quot;Point(5 5)&quot;], geom_format=&quot;wkt&quot;)# Let's go to register them on bokehmap_session.add_layers_on_map()# Next, the map is displayedshow(map_session.figure)```Here a bokeh basic example.On the terminal, run :```bashpython examples/bokeh_simple_case_example.py```Or you can use the jupyter notebook 'example.ipynb'### An advanced exampleHere a bokeh serve example with a slider widget.On the terminal, run :```bashbokeh serve --show examples/bokeh_serve_example.py```</longdescription>
</pkgmetadata>