<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Redis Collections=================`redis-collections` is a Python library that provides a high-levelinterface to `Redis &lt;http://redis.io/&gt;`_, the excellent key-value store.Quickstart----------Install the library with ``pip install redis-collections``.Import the collections from the top-level ``redis_collections`` package.Standard collections^^^^^^^^^^^^^^^^^^^^The standard collections (e.g. ``Dict``, ``List``, ``Set``) behave like theirPython counterparts:.. code-block:: python    &gt;&gt;&gt; from redis_collections import Dict, List, Set    &gt;&gt;&gt; D = Dict()    &gt;&gt;&gt; D['answer'] = 42    &gt;&gt;&gt; D['answer']    42+---------------------+------------+------------------------------------------------------+|  Collection         | Redis type | Description                                          |+=====================+============+======================================================+| ``Dict``            | Hash       | Emulates Python's ``dict``                           |+---------------------+------------+------------------------------------------------------+| ``List``            | List       | Emulates Python's ``list``                           |+---------------------+------------+------------------------------------------------------+| ``Set``             | Set        | Emulates Python's ``set``                            |+---------------------+------------+------------------------------------------------------+| ``Counter``         | Hash       | Emulates Python's ``collections.Counter``            |+---------------------+------------+------------------------------------------------------+| ``DefaultDict``     | Hash       | Emulates Python's ``collections.defaultdict``        |+---------------------+------------+------------------------------------------------------+| ``Deque``           | List       | Emulates Python's ``collections.deque``              |+---------------------+------------+------------------------------------------------------+Syncable collections^^^^^^^^^^^^^^^^^^^^The syncable collections in this package provide types whosecontents are kept in memory. When their ``sync`` method is called thosecontents are written to Redis:.. code-block:: python    &gt;&gt;&gt; from redis_collections import SyncableDict    &gt;&gt;&gt; with SyncableDict() as D:    ...     D['a'] = 1  # No write to Redis    ...     D['a'] += 1  # No read from or write to Redis    &gt;&gt;&gt; D['a']  # D.sync() is called at the end of the with block    2+-------------------------+-----------------------------+-----------------------+| Collection              | Python type                 | Description           |+=========================+=============================+=======================+| ``SyncableDict``        | ``dict``                    | Syncs to a Redis Hash |+-------------------------+-----------------------------+-----------------------+| ``SyncableList``        | ``list``                    | Syncs to a Redis List |+-------------------------+-----------------------------+-----------------------+| ``SyncableSet``         | ``set``                     | Syncs to a Redis Set  |+-------------------------+-----------------------------+-----------------------+| ``SyncableCounter``     | ``collections.Counter``     | Syncs to a Redis Hash |+-------------------------+-----------------------------+-----------------------+| ``SyncableDeque``       | ``collections.deque``       | Syncs to a Redis List |+-------------------------+-----------------------------+-----------------------+| ``SyncableDefaultDict`` | ``collections.defaultdict`` | Syncs to a Redis Hash |+-------------------------+-----------------------------+-----------------------+Other collections^^^^^^^^^^^^^^^^^The ``LRUDict`` collection stores recently used items in in memory.It pushes older items to Redis:.. code-block:: python    &gt;&gt;&gt; from redis_collections import LRUDict    &gt;&gt;&gt; D = LRUDict(maxsize=2)    &gt;&gt;&gt; D['a'] = 1    &gt;&gt;&gt; D['b'] = 2    &gt;&gt;&gt; D['c'] = 2  # 'a' is pushed to Redis and 'c' is stored locally    &gt;&gt;&gt; D['a']  # 'b' is pushed to Redis and 'a' is retrieved for local storage    1    &gt;&gt;&gt; D.sync()  # All items are copied to RedisThe ``SortedSetCounter`` provides access to the Redis`Sorted Set &lt;http://redis.io/topics/data-types#sorted-sets&gt;`_ type:.. code-block:: python    &gt;&gt;&gt; from redis_collections import SortedSetCounter    &gt;&gt;&gt; ssc = SortedSetCounter([('earth', 300), ('mercury', 100)])    &gt;&gt;&gt; ssc.set_score('venus', 200)    &gt;&gt;&gt; ssc.get_score('venus')    200.0    &gt;&gt;&gt; ssc.items()    [('mercury', 100.0), ('venus', 200.0), ('earth', 300.0)]Documentation-------------For more information, see`redis-collections.readthedocs.io &lt;https://redis-collections.readthedocs.io/&gt;`_Maintainers------------ Bo Bayles (`@bbayles &lt;http://github.com/bbayles&gt;`_)- Honza Javorek (`@honzajavorek &lt;http://github.com/honzajavorek&gt;`_)License: ISC------------© 2016-? Bo Bayles &lt;bbayles@gmail.com&gt; and contributors© 2013-2016 Honza Javorek &lt;mail@honzajavorek.cz&gt; and contributorsThis work is licensed under `ISC license &lt;https://en.wikipedia.org/wiki/ISC_license&gt;`_.This library is not affiliated with `Redis Labs &lt;https://redislabs.com/&gt;`__, `Redis &lt;https://redis.io/&gt;`__, or `redis-py &lt;https://github.com/andymccurdy/redis-py&gt;`__. Govern yourself accordingly!</longdescription>
</pkgmetadata>