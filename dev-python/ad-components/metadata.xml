<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Accelerated Discovery Reusable ComponentsThe central implementation of Accelerated Discover Reusable Components. It serves as a wrapper around client libraries we use locally like Dapr and MLflow.## 1.InstallationAll components will be availble using```shellpip install ad-components```### CLIHere's an example usage of the CLI```usage: adc [-h] [--verbose] [--version] {&lt;component&gt;} ...Accelerated Discovery reusable components.positional arguments:  &lt;component&gt;    the component that you want to trigger.optional arguments:  -h, --help     show this help message and exit.  --version      show program's version number and exit.```## 2. Usage### 2.0. In your pipelineTo use a component in your pipeline, you need to run it in a Step context```pythonfrom ad.step import DaprStepfrom ad.storage import download, uploadwith DaprStep():    resp = download(download_src, download_dest, binding_name=binding)    print(f&quot;download resp: {resp}&quot;)    resp = upload(upload_src, upload_dest, binding_name=binding)    print(f&quot;upload resp: {resp}&quot;)```Running the components inside a step will make sure the client dependencies are handled correctly.### 2.1. Storage#### 2.1.2. Python moduleYou can invoke the manager using native python. Please note that the package must be present in you python environment.```pythonfrom ad.storage import download, uploaddownload_resp = download(    src, dest,    # binding_name=&quot;s3-state&quot;,  # Or any other binding)upload_resp = upload(    src, dest,    # binding_name=&quot;s3-state&quot;,  # Or any other binding)```#### 2.1.3. CLI```shellusage: adc storage [-h] --src PATH --dest PATH [--binding NAME] [--timeout SEC] {download,upload}positional arguments:  {download,upload}     action to be performed on data.optional arguments:  -h, --help            show this help message and exitaction arguments:  --src PATH, -r PATH   path of file to perform action on.  --dest PATH, -d PATH  object's desired full path in the destination.  --binding NAME, -b NAME                        the name of the binding as defined in the components.dapr arguments:  --timeout SEC, -t SEC                        value in seconds we should wait for sidecar to come up.```&gt; **Note:** You can replace `adc` with `python ad/main.py ...` if you don't have the package installed in your python environment.##### Examples1. To download an object from S3 run```bashadc storage download \    --src test.txt \    --dest tmp/downloaded.txt```2. To upload an object to S3 run```bashadc storage upload \    --src tmp/downloaded.txt \    --dest local/uploaded.txt```## 3. Supported components### 3.1. Storage#### 3.1.1. Supported operationsBelow is a list of the operations you might intend to perform in your component.##### UploadUploads data from a file to an object in a bucket.###### Arguments* `src`: Name of file to download.* `dest`: Object name in the bucket.* `binding`: The name of the binding to perform the operation.##### DownloadDownloads data of an object to file.###### Arguments* `src`: Object name in the bucket.* `dest`: Name of file to download.* `binding`: The name of the binding to perform the operation.##### Dapr configurations* `address`: Dapr Runtime gRPC endpoint address.* `timeout`: Value in seconds we should wait for sidecar to come up## 4. PublishingEvery change to the python script requires a new version to be pushed PyPi registry.If you have the right (write) permissions, and a correctly-configured `$HOME/.pypirc` file, run the following command to publish the package```shellmake```### 4.1. Increment the versionTo increment the version, go to [adstorage/version.py](adstorage/version.py) and increment the version there. Both the [setup.py](setup.py) and the `CLI` will read the new version correctly.### 4.2 Configure PyPi registryTo be able to push to the package to our private registry, you need to tell PyPi about it. This one-liner command will take care of it for you```shellcat &lt;&lt; EOF &gt; $HOME/.pypirc[distutils]index-servers =    pypi[pypi]repository: https://upload.pypi.org/legacy/username: __token__password: $PYPI_TOKENEOF```&gt; **Note:** The pip package will fetch the version from `ad/version.py` file, so make sure to increment before pushing.</longdescription>
</pkgmetadata>