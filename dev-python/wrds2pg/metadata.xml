<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># WRDS (or SAS) to PostgreSQLThis software has two functions:- Download tables from [WRDS](https://wrds-web.wharton.upenn.edu/wrds/) and feed them to a PostgreSQL database. (Requires access to WRDS and to the data in question.)- Import a SAS file (`*.sas7dbat`) into a PostgreSQL database.## Requirements### 1. PythonThe software uses Python 3 and depends on Pandas, SQLAlchemy and Paramiko. In addition, the Python scripts generally interact with PostgreSQL using SQLAlchemy and the [Psycopg](http://initd.org/psycopg/) library. These dependencies are installed when you use Pip (see instructions below).### 2. A WRDS IDTo use public-key authentication to access WRDS, follow hints taken from [here](https://debian-administration.org/article/152/Password-less_logins_with_OpenSSH) to set up a public key.Copy that key to the WRDS server from the terminal on your computer. (Note that this code assumes you have a directory `.ssh` in your home directory. If not, log into WRDS via SSH, then type `mkdir ~/.ssh` to create this.) Here's code (for me) to create the key and send it to WRDS:```ssh-keygen -t rsacat ~/.ssh/id_rsa.pub | ssh iangow@wrds-cloud.wharton.upenn.edu &quot;cat &gt;&gt; ~/.ssh/authorized_keys&quot;```Use an empty passphrase in setting up the key so that the scripts can run without user intervention.### 3. PostgreSQLYou should have a PostgreSQL database to store the data.### 4. Environment variablesEnvironment variables that the code can use include:- `PGDATABASE`: The name of the PostgreSQL database you use.- `PGUSER`: Your username on the PostgreSQL database.- `PGHOST`: Where the PostgreSQL database is to be found (this will be `localhost` if its on the same machine as you're running the code on)- `WRDS_ID`: Your [WRDS](https://wrds-web.wharton.upenn.edu/wrds/) ID.I set these environment variables in `~/.profile`:```export PGHOST=&quot;localhost&quot;export PGDATABASE=&quot;crsp&quot;export WRDS_ID=&quot;iangow&quot;export PGUSER=&quot;igow&quot;```## Using the function `wrds_update`.Two arguments `table_name` and `schema` are required.### 1. WRDS SettingsSet `WRDS_ID`  using either `wrds_id=your_wrds_id` in the function call or the environment variable `WRDS_ID`.### 2. Environment variablesThe software will use the environment variables `PGHOST`, `PGDATABASE`, and `PGUSER` if you If you have set them. Otherwise, you need to provide values as arguments to `wrds_udpate()`. Default `PGPORT` is`5432`.### 3. Table settingsTo tailor your request, specify the following arguments:- `fix_missing`: set to `True` to fix missing values. This addresses special missign values, which SAS's `PROC EXPORT` dumps as strings. Default value is `False`. - `fix_cr`: set to `True` to fix characters. Default value is `False`.- `drop`: add column names to be dropped (e.g., `drop=&quot;id name&quot;` will drop columns `id` and `name`).- `obs`: add maxium number of observations (e.g., `obs=10` will import the first 10 rows from the table on WRDS).- `rename`: rename columns (e.g., `rename=&quot;fee=mngt_fee&quot;` renames `fee` to `mngt_fee`).- `force`: set to `True` to force update. Default value is `False`.## Importing SAS data into PostgreSQLThe software can also upload SAS file directly to PostgreSQL. You need to have local SAS in order to use this function.Use `fpath` to specify the path to the file to be imported### ExamplesHere are some examples.If you are at the home directory of this git repo, you can import and use the software as shown below.To install it from Github:```sudo -H pip3 install git+https://github.com/iangow/wrds2pg --upgrade```This software is also available from PyPI. To install it from [PyPI](https://pypi.org/project/wrds2pg/):```pip3 install wrds2pg```Example usage:```pyfrom wrds2pg import wrds_update# 1. Download crsp.mcti from wrds and upload to pg as crps.mcti# Simplest versionwrds_update(table_name=&quot;mcti&quot;, schema=&quot;crsp&quot;)# Tailored arguments wrds_update(table_name=&quot;mcti&quot;, schema=&quot;crsp&quot;, host=your_pghost, dbname=your_pg_database, fix_missing=True, fix_cr=True, drop=&quot;b30ret b30ind&quot;, obs=10, rename=&quot;caldt=calendar_date&quot;, force=True)# 2. Upload test.sas7dbat to pg as crsp.mctiwrds_update(table_name=&quot;mcti&quot;, schema=&quot;crsp&quot;, fpath=&quot;your_path/test.sas7dbat&quot;)```### Report bugsAuthor: Ian Gow, &lt;iandgow@gmail.com&gt;Contributor: Jingyu Zhang, &lt;jingyu.zhang@chicagobooth.edu&gt;</longdescription>
</pkgmetadata>