<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================Django AdminPlus================**AdminPlus** aims to be the smallest possible extension to the excellentDjango admin component that lets you add admin views that are not tied tomodels.There are packages out there, like `Nexus &lt;https://github.com/disqus/nexus&gt;`_and `django-admin-tools &lt;http://pypi.python.org/pypi/django-admin-tools&gt;`_ thatreplace the entire admin. Nexus supports adding completely new &quot;modules&quot; (theDjango model admin is a default module) but there seems to be a lot of boilerplate code to do it. django-admin-tools does not, as far as I can tell, supportadding custom pages.All AdminPlus does is allow you to add simple custom views (well, they can beas complex as you like!) without mucking about with hijacking URLs, andproviding links to them right in the admin index... image:: https://travis-ci.org/jsocol/django-adminplus.png?branch=master   :target: https://travis-ci.org/jsocol/django-adminplusInstalling AdminPlus====================Install from `PyPI &lt;https://pypi.python.org/pypi/django-adminplus&gt;`_ with pip::    pip install django-adminplusOr get AdminPlus from `GitHub &lt;https://github.com/jsocol/django-adminplus&gt;`_with pip::    pip install -e git://github.com/jsocol/django-adminplus#egg=django-adminplusAnd add ``adminplus`` to your installed apps::    INSTALLED_APPS = (        # ...        'adminplus',        # ...    )To use AdminPlus in your Django project, you'll need to replace``django.contrib.admin.site``, which is an instance of``django.contrib.admin.sites.AdminSite``. I recommend doing this in ``urls.py``right before calling ``admin.autodiscover()``::    # urls.py    from django.contrib import admin    from adminplus.sites import AdminSitePlus    admin.site = AdminSitePlus()    admin.autodiscover()    urlpatterns = [        # ...        # Include the admin URL conf as normal.        (r'^admin', include(admin.site.urls)),        # ...    ]If you're using Django 1.7, you should also replace ``django.contrib.admin`` with``django.contrib.admin.apps.SimpleAdminConfig`` in your installed apps, in orderto disable the automatic auto-discovery::    INSTALLED_APPS = (        # ...        'django.contrib.admin.apps.SimpleAdminConfig',  # instead of 'django.contrib.admin'        # ...    )Congratulations! You're now using AdminPlus.Using AdminPlus===============So now that you've installed AdminPlus, you'll want to use it. AdminPlus is100% compatible with the built in admin module, so if you've been using that,you shouldn't have to change anything.AdminPlus offers a new function, ``admin.site.register_view``, to attacharbitrary views to the admin::    # someapp/admin.py    # Assuming you've replaced django.contrib.admin.site as above.    from django.contrib import admin    def my_view(request, *args, **kwargs):        pass    admin.site.register_view('somepath', view=my_view)    # And of course, this still works:    from someapp.models import MyModel    admin.site.register(MyModel)Now ``my_view`` will be accessible at ``admin/somepath`` and there will be alink to it in the *Custom Views* section of the admin index.You can also use ``register_view`` as a decorator::    @admin.site.register_view('somepath')    def my_view(request):        pass``register_view`` takes some optional arguments: * ``name``: a friendly name for display in the list of custom views. For example::    def my_view(request):        &quot;&quot;&quot;Does something fancy!&quot;&quot;&quot;    admin.site.register_view('somepath', 'My Fancy Admin View!', view=my_view)* ``urlname``: give a name to the urlpattern so it can be called by   ``redirect()``, ``reverse()``, etc.* `visible`: a boolean or a callable returning one, that defines if  the custom view is visible in the admin dashboard.All registered views are wrapped in ``admin.site.admin_view``... note::      Views with URLs that match auto-discovered URLs (e.g. those created via   ModelAdmins) will override the auto-discovered URL.</longdescription>
</pkgmetadata>