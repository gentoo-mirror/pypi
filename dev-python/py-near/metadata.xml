<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-near[![Financial Contributors on Open Collective](https://opencollective.com/py-near/all/badge.svg?style=flat-square)](https://opencollective.com/py-near) [![PyPi Package Version](https://img.shields.io/pypi/v/py-near?style=flat-square)](https://pypi.org/project/py-near)[![Supported python versions](https://img.shields.io/pypi/pyversions/py-near)](https://pypi.python.org/pypi/py-near)[![Documentation Status](https://img.shields.io/readthedocs/py-near?style=flat-square)](https://py-near.readthedocs.io/en/latest)[![Github issues](https://img.shields.io/github/issues/pvolnov/py-near.svg?style=flat-square)](https://github.com/pvolnov/py-near/issues)[![MIT License](https://img.shields.io/pypi/l/py-near.svg?style=flat-square?style=flat-square)](https://opensource.org/licenses/MIT)[![Twitter](https://img.shields.io/twitter/follow/p_volnov?label=Follow)](https://twitter.com/p_volnov)[//]: # ([![downloads]&amp;#40;https://img.shields.io/github/downloads/pvolnov/py-near/total?style=flat-square&amp;#41;]&amp;#40;https://pypi.org/project/py-near&amp;#41;)**py-near** is a pretty simple and fully asynchronous framework for working with NEAR blockchain.## Examples&lt;details&gt;  &lt;summary&gt;ðŸ“š Click to see some basic examples&lt;/summary&gt;**Few steps before getting started...**- Install the latest stable version of py-near, simply running `pip install py-near`- Create NEAR account and get your private key [wallet](https://wallet.near.org/create)### Simple money transfer```pythonfrom py_near.account import Accountimport asynciofrom py_near.dapps.core import NEARACCOUNT_ID = &quot;bob.near&quot;PRIVATE_KEY = &quot;ed25519:...&quot;async def main():   acc = Account(ACCOUNT_ID, PRIVATE_KEY)   await acc.startup()   print(await acc.get_balance() / NEAR)   print(await acc.get_balance(&quot;bob.near&quot;) / NEAR)   tr = await acc.send_money(&quot;bob.near&quot;, NEAR * 2)   print(tr.transaction.hash)   print(tr.logs)asyncio.run(main())```### Transfer money by phone number```pythonfrom py_near.account import Accountimport asynciofrom py_near.dapps.core import NEARACCOUNT_ID = &quot;bob.near&quot;PRIVATE_KEY = &quot;ed25519:...&quot;async def main():   acc = Account(ACCOUNT_ID, PRIVATE_KEY)   await acc.startup()   tr = await acc.phone.send_near_to_phone(&quot;+15626200911&quot;, NEAR // 10)   print(tr.transaction.hash)asyncio.run(main())```### Parallel requestsOnly one parallel request can be made from one private key.All transaction calls execute sequentially.To make several parallel calls you need to use several private keys```python3acc = Account(&quot;bob.near&quot;, private_key1)for i in range(2):  signer = InMemorySigner.from_random(AccountId(&quot;bob.near&quot;), KeyType.ED25519)  await acc.add_full_access_public_key(str(signer.public_key))  print(signer.secret_key)```Now we can call transactions in parallel```python3acc = Account(&quot;bob.near&quot;, [private_key1, private_key2, private_key3])# request time = count transactions / count public keystasks = [  asyncio.create_task(acc.send_money(&quot;alisa.near&quot;, 1)),  asyncio.create_task(acc.send_money(&quot;alisa.near&quot;, 1)),  asyncio.create_task(acc.send_money(&quot;alisa.near&quot;, 1)),]for t in task:  await t```&lt;/details&gt;## Official py-near resources: - News: [@herewallet](https://t.me/herewallet) - Social media:   - ðŸ‡ºðŸ‡¸ [Telegram](https://t.me/neafiol)   - ðŸ‡ºðŸ‡¸ [Twitter](https://twitter.com/p_volnov) - PyPI: [py-near](https://pypi.python.org/pypi/py-near) - Documentation: [py-near.readthedocs.io](https://py-near.readthedocs.io/en/latest) - Source: [Github repo](https://github.com/pvolnov/py-near) - Issues/Bug tracker: [Github issues tracker](https://github.com/pvolnov/py-near/issues)## Contributors### Code ContributorsThis project exists thanks to all the people who contribute. [[Code of conduct](CODE_OF_CONDUCT.md)].&lt;a href=&quot;https://github.com/pvolnov/py-near/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/py-near/contributors.svg?width=890&amp;button=false&quot; /&gt;&lt;/a&gt;</longdescription>
</pkgmetadata>