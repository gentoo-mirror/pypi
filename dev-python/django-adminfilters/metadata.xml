<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-adminfilters===================Collection of extra filters for the Django admin siteDemo can be found at https://django-adminfilters.herokuapp.com/demo/artist/[![Pypi](https://badge.fury.io/py/django-adminfilters.svg)](https://badge.fury.io/py/django-adminfilters)[![coverage](https://codecov.io/github/saxix/django-adminfilters/coverage.svg?branch=develop)](https://codecov.io/github/saxix/django-adminfilters?branch=develop)[![Test](https://github.com/saxix/django-adminfilters/actions/workflows/test.yml/badge.svg)](https://github.com/saxix/django-adminfilters/actions/workflows/test.yml)[![ReadTheDocs](https://readthedocs.org/projects/django-adminfilters/badge/?version=latest)](https://django-adminfilters.readthedocs.io/en/latest/)https://user-images.githubusercontent.com/27282/153727131-d875f946-a8a8-4d89-be83-1d8cb5c9391a.mp4Filters=======* Autocomplete  * AutocompleteFilter* Simple  * ValueFilter* Combobox  * AllValuesComboFilter  * RelatedFieldComboFilter  * ChoicesFieldComboFilter* Radio  * AllValuesRadioFilter  * RelatedFieldRadioFilter  * ChoicesFieldRadioFilter  * BooleanRadioFilter* Checkbox  * RelatedFieldCheckBoxFilter* Multiple  * MultiValueFilter* ManyToMany  * IntersectionFieldListFilter  * UnionFieldListFilter* JSON  * JsonFieldFilter* Number  * NumberFilter* Special  * QueryStringFilter  * DjangoLookupFilter  * PermissionPrefixFilterFYI====Filters management (save/retrieve), is handled by an optional application `adminfilters.depot` that,due to the Django filters internal design, it uses GET method to save filter definition to the database.When you use `FilterDepotManager` to save a filter, the call is *idempotent* but not *safe*.Usage examples==============    class MyModel(models.Model):        index = models.CharField(max_length=255)        name = models.CharField(max_length=255)        age = models.IntegerField()        flag = models.CharField(default=&quot;1&quot;, choices=((&quot;0&quot;, &quot;Flag 1&quot;), (&quot;1&quot;, &quot;Flag 2&quot;))        household = models.ForeignKey('Household')        custom = JSONField(default=dict, blank=True)    class MyModelAdmin(ModelAdmin):        list_filter = (            FilterDepotManager,  # needs `adminfilters.depot` app            QueryStringFilter,            DjangoLookupFilter,            (&quot;custom&quot;, JsonFieldFilter.factory(can_negate=False, options=True)),            (&quot;flag&quot;, ChoicesFieldComboFilter),            ('household', AutoCompleteFilter)            ('name', ValueFilter.factory(lookup='istartswith'),            (&quot;age&quot;, NumberFilter),        )Run demo app============    $ git clone https://github.com/saxix/django-adminfilters.git    $ cd django-adminfilters    $ python3 -m venv .venv    $ source .venv/bin/activate    $ make develop    $ make demoProject links-------------* Project home page: https://github.com/saxix/django-adminfilters* Download: http://pypi.python.org/pypi/django-adminfilters/* Documentation: https://django-adminfilters.readthedocs.io/en/latest/</longdescription>
</pkgmetadata>