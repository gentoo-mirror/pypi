<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ðŸ¤— AutoNLPAutoNLP: faster and easier training and deployments of SOTA NLP models## InstallationYou can Install AutoNLP python package via PIP. Please note you will need python &gt;= 3.7 for AutoNLP to work properly.    pip install autonlpPlease make sure that you have git lfs installed. Check out the instructions here: https://github.com/git-lfs/git-lfs/wiki/Installation## Quick start - in the terminalPlease take a look at [AutoNLP Documentation](https://huggingface.co/docs/autonlp/) for a list of supported tasks and languages.Note:AutoNLP is currently in beta release. To participate in the beta, just go to https://huggingface.co/autonlp and apply ðŸ¤—First, create a project:```bashautonlp login --api-key YOUR_HUGGING_FACE_API_TOKENautonlp create_project --name sentiment_detection --language en --task binary_classification --max_models 5```Upload files and start the training. You need a training and a validation split. Only CSV files are supported at the moment.```bash# Train splitautonlp upload --project sentiment_detection --split train \               --col_mapping review:text,sentiment:target \               --files ~/datasets/train.csv# Validation splitautonlp upload --project sentiment_detection --split valid \               --col_mapping review:text,sentiment:target \               --files ~/datasets/valid.csv```Once the files are uploaded, you can start training the model:```bashautonlp train --project sentiment_detection```Monitor the progress of your project.```bash# Project progressautonlp project_info --name sentiment_detection# Model metricsautonlp metrics --project PROJECT_ID```## Quick start - Python APISetting up:```pythonfrom autonlp import AutoNLPclient = AutoNLP()client.login(token=&quot;YOUR_HUGGING_FACE_API_TOKEN&quot;)```Creating a project and uploading files to it:```pythonproject = client.create_project(name=&quot;sentiment_detection&quot;, task=&quot;binary_classification&quot;, language=&quot;en&quot;, max_models=5)project.upload(    filepaths=[&quot;/path/to/train.csv&quot;],    split=&quot;train&quot;,    col_mapping={        &quot;review&quot;: &quot;text&quot;,        &quot;sentiment&quot;: &quot;target&quot;,    })# also upload a validation with split=&quot;valid&quot;```Start the training of your models:```pythonproject.train()```To monitor the progress of your training:```pythonproject.refresh()print(project)```After the training of your models has succeeded, you can retrieve the metrics for each model and test them with the ðŸ¤— Inference API:```pythonclient.predict(project=&quot;sentiment_detection&quot;, model_id=42, input_text=&quot;i love autonlp&quot;)```or use command line:```bashautonlp predict --project sentiment_detection --model_id 42 --sentence &quot;i love autonlp&quot;```## How much do I have to pay?It's difficult to provide an exact answer to this question, however, we have an estimator that might help you.Just enter the number of samples and language and you will get an estimate. Please keep in mind that this is just an estimate and can easily over-estimate or under-estimate (we are actively working on this).```bashautonlp estimate --num_train_samples 10000 --project_name sentiment_detection```</longdescription>
</pkgmetadata>