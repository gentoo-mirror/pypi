<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://www.mailersend.com&quot;&gt;&lt;img src=&quot;https://www.mailersend.com/images/logo.svg&quot; width=&quot;200px&quot;/&gt;&lt;/a&gt;MailerSend Python SDK[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)# Table of Contents- [Table of Contents](#table-of-contents)- [Installation](#installation)  - [Requirements](#requirements)  - [Authentication](#authentication)- [Usage](#usage)  - [Email](#email)    - [Send an email](#send-an-email)    - [Add CC, BCC recipients](#add-cc-bcc-recipients)    - [Send a template-based email](#send-a-template-based-email)    - [Advanced personalization](#advanced-personalization)    - [Simple personalization](#simple-personalization)    - [Send email with attachment](#send-email-with-attachment)  - [Email Verification](#email-verification)    - [Get all email verification lists](#get-all-email-verification-lists)    - [Get a single email verification list](#get-a-single-email-verification-list)    - [Create a email verification list](#create-a-email-verification-list)    - [Verify a list](#verify-a-list)    - [Get list results](#get-list-results)  - [Bulk Email](#bulk-email)    - [Send bulk email](#send-bulk-email)    - [Get bulk email status](#get-bulk-email-status)  - [Activity](#activity)    - [Get a list of activities (simple)](#get-a-list-of-activities-simple)    - [Get a list of activities (full)](#get-a-list-of-activities-full)  - [Analytics](#analytics)    - [Activity data by date](#activity-data-by-date)    - [Opens by country](#opens-by-country)    - [Opens by user-agent name](#opens-by-user-agent-name)    - [Opens by reading environment](#opens-by-reading-environment)  - [Inbound Routes](#inbound-routes)    - [Get a list of inbound routes](#get-a-list-of-inbound-routes)    - [Get a single inbound route](#get-a-single-inbound-route)    - [Add an inbound route](#add-an-inbound-route)    - [Update an inbound route](#update-an-inbound-route)    - [Delete an inbound route](#delete-an-inbound-route)  - [Domains](#domains)    - [Get a list of domains](#get-a-list-of-domains)    - [Get a single domain](#get-a-single-domain)    - [Get a single domain using helper function](#get-a-single-domain-using-helper-function)    - [Add a domain](#add-a-domain)    - [Delete a domain](#delete-a-domain)    - [Get a list of recipients per domain](#get-a-list-of-recipients-per-domain)    - [Update domain settings](#update-domain-settings)    - [Get DNS Records](#get-dns-records)    - [Verify a domain](#verify-a-domain)  - [Messages](#messages)    - [Get a list of messages](#get-a-list-of-messages)    - [Get a single message](#get-a-single-message)  - [Scheduled messages](#scheduled-messages)    - [Get a list of scheduled messages](#get-a-list-of-scheduled-messages)    - [Get a single scheduled message](#get-a-single-scheduled-message)    - [Delete a scheduled message](#delete-a-scheduled-message)  - [Recipients](#recipients)    - [Get a list of recipients](#get-a-list-of-recipients)    - [Get a single recipient](#get-a-single-recipient)    - [Delete a recipient](#delete-a-recipient)    - [Get recipients from a blocklist](#get-recipients-from-a-blocklist)    - [Get recipients from hard bounces](#get-recipients-from-hard-bounces)    - [Get recipients from spam complaints](#get-recipients-from-spam-complaints)    - [Get recipients from unsubscribes](#get-recipients-from-unsubscribes)    - [Add recipients to blocklist](#add-recipients-to-blocklist)    - [Add hard bounced recipients](#add-hard-bounced-recipients)    - [Add spam complaints](#add-spam-complaints)    - [Add recipients to unsubscribe list](#add-recipients-to-unsubscribe-list)    - [Delete recipients from blocklist](#delete-recipients-from-blocklist)    - [Delete hard bounced recipients](#delete-hard-bounced-recipients)    - [Delete spam complaints](#delete-spam-complaints)    - [Delete recipients from unsubscribe list](#delete-recipients-from-unsubscribe-list)  - [Tokens](#tokens)    - [Create a token](#create-a-token)    - [Pause / Unpause Token](#pause--unpause-token)    - [Delete a Token](#delete-a-token)  - [Templates](#templates)    - [Get a list of templates](#get-a-list-of-templates)    - [Get a single template](#get-a-single-template)    - [Delete template](#delete-template)  - [Webhooks](#webhooks)    - [Get a list of webhooks](#get-a-list-of-webhooks)    - [Get a single webhook](#get-a-single-webhook)    - [Create a Webhook](#create-a-webhook)    - [Create a disabled webhook](#create-a-disabled-webhook)    - [Update a Webhook](#update-a-webhook)    - [Disable/Enable a Webhook](#disableenable-a-webhook)    - [Delete a Webhook](#delete-a-webhook)  - [SMS](#sms)    - [Sending SMS messages](#sending-sms-messages)  - [SMS Activity](#sms-activity)    - [Get a list of activities](#get-a-list-of-activities)    - [Get activity of a single message](#get-activity-of-a-single-message)  - [SMS Phone Numbers](#sms-phone-numbers)    - [Get a list of SMS phone numbers](#get-a-list-of-sms-phone-numbers)    - [Get an SMS phone number](#get-an-sms-phone-number)    - [Update a single SMS phone number](#update-a-single-sms-phone-number)    - [Delete an SMS phone number](#delete-an-sms-phone-number)  - [SMS Recipients](#sms-recipients)    - [Get a list of SMS recipients](#get-a-list-of-sms-recipients)    - [Get an SMS recipient](#get-an-sms-recipient)    - [Update a single SMS recipient](#update-a-single-sms-recipient)  - [SMS Messages](#sms-messages)    - [Get a list of SMS messages](#get-a-list-of-sms-messages)    - [Get an SMS message](#get-an-sms-message)  - [SMS Webhooks](#sms-webhooks)    - [Get a list of SMS webhooks](#get-a-list-of-sms-webhooks)    - [Get a single SMS webhook](#get-a-single-sms-webhook)    - [Create an SMS webhook](#create-an-sms-webhook)    - [Update a single SMS webhook](#update-a-single-sms-webhook)    - [Delete an SMS webhook](#delete-an-sms-webhook)    - [Get a list of SMS webhooks](#get-a-list-of-sms-webhooks-1)  - [SMS Inbouds](#sms-inbouds)    - [Get a list of SMS inbound routes](#get-a-list-of-sms-inbound-routes)    - [Get a single SMS inbound route](#get-a-single-sms-inbound-route)    - [Create an SMS inbound route](#create-an-sms-inbound-route)    - [Update an SMS inbound route](#update-an-sms-inbound-route)    - [Delete an SMS inbound route](#delete-an-sms-inbound-route)  - [Sender Identities](#sender-identities)    - [Get a list of sender identities](#get-a-list-of-sender-identities)    - [Get a sender identity](#get-a-sender-identity)    - [Create a sender identity](#create-a-sender-identity)    - [Update a sender identity](#update-a-sender-identity)    - [Delete a sender identity](#delete-a-sender-identity)- [Troubleshooting](#troubleshooting)  - [Emails not being sent](#emails-not-being-sent)- [Testing](#testing)- [Available endpoints](#available-endpoints)- [Support and Feedback](#support-and-feedback)- [License](#license)&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;# Installation```$ python -m pip install mailersend```## Requirements- Python &gt; 3.6.1- Python `pip`- An API Key from [mailersend.com](https://www.mailersend.com)## AuthenticationWe recommend you to define `MAILERSEND_API_KEY` environment variable in the `.env` file, and use it to store the API key. - Using environment variable```pythonfrom mailersend import emails# assigning NewEmail() without params defaults to MAILERSEND_API_KEY env varmailer = emails.NewEmail()# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]reply_to = [    {        &quot;name&quot;: &quot;Name&quot;,        &quot;email&quot;: &quot;reply@domain.com&quot;,    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello!&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content&quot;, mail_body)mailer.set_reply_to(reply_to, mail_body)# using print() will also return status code and datamailer.send(mail_body)```- Explicit declaration```pythonfrom mailersend import emailsmailer = emails.NewEmail(&quot;my-api-key&quot;)# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]reply_to = [    {        &quot;name&quot;: &quot;Name&quot;,        &quot;email&quot;: &quot;reply@domain.com&quot;,    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello!&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content&quot;, mail_body)mailer.set_reply_to(reply_to, mail_body)# using print() will also return status code and datamailer.send(mail_body)```# Usage## Email### Send an email```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]reply_to = [    {        &quot;name&quot;: &quot;Name&quot;,        &quot;email&quot;: &quot;reply@domain.com&quot;,    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello!&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content&quot;, mail_body)mailer.set_reply_to(reply_to, mail_body)# using print() will also return status code and datamailer.send(mail_body)```### Add CC, BCC recipients```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]cc = [    {        &quot;name&quot;: &quot;CC&quot;,        &quot;email&quot;: &quot;cc@client.com&quot;    }]bcc = [    {        &quot;name&quot;: &quot;BCC&quot;,        &quot;email&quot;: &quot;bcc@client.com&quot;    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello!&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content&quot;, mail_body)mailer.set_cc_recipients(cc, mail_body)mailer.set_bcc_recipients(bcc, mail_body)mailer.send(mail_body)```### Send a template-based email```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]variables = [    {        &quot;email&quot;: &quot;your@client.com&quot;,        &quot;substitutions&quot;: [            {                &quot;var&quot;: &quot;foo&quot;,                &quot;value&quot;: &quot;bar&quot;            },        ]    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello from {$company}&quot;, mail_body)mailer.set_template(&quot;templateID&quot;, mail_body)mailer.set_simple_personalization(variables, mail_body)mailer.send(mail_body)```### Advanced personalization```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]personalization = [    {        &quot;email&quot;: &quot;test@mailersend.com&quot;,        &quot;data&quot;: {            &quot;var&quot;: &quot;value&quot;,            &quot;boolean&quot;: True,            &quot;object&quot;: {                &quot;key&quot; : &quot;object-value&quot;            },            &quot;number&quot;: 2,            &quot;array&quot;: [                1,                2,                3            ]        }    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello from {$company}&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content, {$name}&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content, {$name}&quot;, mail_body)mailer.set_advanced_personalization(personalization, mail_body)mailer.send(mail_body)```### Simple personalization```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]variables = [    {        &quot;email&quot;: &quot;your@client.com&quot;,        &quot;substitutions&quot;: [            {                &quot;var&quot;: &quot;foo&quot;,                &quot;value&quot;: &quot;bar&quot;            },        ]    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello from {$foo}&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content, {$foo}&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content, {$foo}&quot;, mail_body)mailer.set_simple_personalization(variables, mail_body)mailer.send(mail_body)```### Send email with attachment```pythonfrom mailersend import emailsimport base64from dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))# define an empty dict to populate with mail valuesmail_body = {}mail_from = {    &quot;name&quot;: &quot;Your Name&quot;,    &quot;email&quot;: &quot;your@domain.com&quot;,}recipients = [    {        &quot;name&quot;: &quot;Your Client&quot;,        &quot;email&quot;: &quot;your@client.com&quot;,    }]variables = [    {        &quot;email&quot;: &quot;your@client.com&quot;,        &quot;substitutions&quot;: [            {                &quot;var&quot;: &quot;foo&quot;,                &quot;value&quot;: &quot;bar&quot;            },        ]    }]attachment = open('path-to-file', 'rb')att_read = attachment.read()att_base64 = base64.b64encode(bytes(att_read))attachments = [    {        &quot;id&quot;: &quot;my-attached-file&quot;,        &quot;filename&quot;: &quot;file.jpg&quot;,        &quot;content&quot;: f&quot;{att_base64.decode('ascii')}&quot;,        &quot;disposition&quot;: &quot;attachment&quot;    }]mailer.set_mail_from(mail_from, mail_body)mailer.set_mail_to(recipients, mail_body)mailer.set_subject(&quot;Hello from {$foo}&quot;, mail_body)mailer.set_html_content(&quot;This is the HTML content, {$foo}&quot;, mail_body)mailer.set_plaintext_content(&quot;This is the text content, {$foo}&quot;, mail_body)mailer.set_simple_personalization(variables, mail_body)mailer.set_attachments(attachments, mail_body)mailer.send(mail_body)```## Email Verification### Get all email verification lists```pythonfrom mailersend import email_verificationfrom dotenv import load_dotenvload_dotenv()mailer = email_verification.NewEmailVerification(os.getenv('MAILERSEND_API_KEY'))mailer.get_all_lists()```### Get a single email verification list```pythonfrom mailersend import email_verificationfrom dotenv import load_dotenvload_dotenv()mailer = email_verification.NewEmailVerification(os.getenv('MAILERSEND_API_KEY'))email_verification_list_id = 123456mailer.get_list(email_verification_list_id)```### Create a email verification list```pythonfrom mailersend import email_verificationfrom dotenv import load_dotenvload_dotenv()mailer = email_verification.NewEmailVerification(os.getenv('MAILERSEND_API_KEY'))name = &quot;My List&quot;emails = [    &quot;some@email.com&quot;,    &quot;another@email.com&quot;]mailer.create_list(name, emails)```### Verify a list```pythonfrom mailersend import email_verificationfrom dotenv import load_dotenvload_dotenv()mailer = email_verification.NewEmailVerification(os.getenv('MAILERSEND_API_KEY'))email_verification_list_id = 123456mailer.verify_list(email_verification_list_id)```### Get list results```pythonfrom mailersend import email_verificationfrom dotenv import load_dotenvload_dotenv()mailer = email_verification.NewEmailVerification(os.getenv('MAILERSEND_API_KEY'))email_verification_list_id = 123456mailer.get_list_results(email_verification_list_id)```## Bulk Email### Send bulk email```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))mail_list = [  {    &quot;from&quot;: {      &quot;email&quot;: &quot;your@domain.com&quot;,      &quot;name&quot;: &quot;Your Name&quot;    },    &quot;to&quot;: [      {        &quot;email&quot;: &quot;your@client.com&quot;,        &quot;name&quot;: &quot;Your Client&quot;      }    ],    &quot;subject&quot;: &quot;Subject&quot;,    &quot;text&quot;: &quot;This is the text content&quot;,    &quot;html&quot;: &quot;&lt;p&gt;This is the HTML content&lt;/p&gt;&quot;,  },  {    &quot;from&quot;: {      &quot;email&quot;: &quot;your@domain.com&quot;,      &quot;name&quot;: &quot;Your Name&quot;    },    &quot;to&quot;: [      {        &quot;email&quot;: &quot;your@client.com&quot;,        &quot;name&quot;: &quot;Your Client&quot;      }    ],    &quot;subject&quot;: &quot;Subject&quot;,    &quot;text&quot;: &quot;This is the text content&quot;,    &quot;html&quot;: &quot;&lt;p&gt;This is the HTML content&lt;/p&gt;&quot;,  }]print(mailer.send_bulk(mail_list))```### Get bulk email status```pythonfrom mailersend import emailsfrom dotenv import load_dotenvload_dotenv()mailer = emails.NewEmail(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_bulk_status_by_id(&quot;bulk-email-id&quot;))```&lt;a name=&quot;activity&quot;&gt;&lt;/a&gt;## Activity### Get a list of activities (simple)```pythonfrom mailersend import activityfrom dotenv import load_dotenvload_dotenv()mailer = activity.NewActivity(os.getenv('MAILERSEND_API_KEY'))mailer.get_domain_activity(&quot;domain-id&quot;)```### Get a list of activities (full)```pythonfrom mailersend import activityfrom dotenv import load_dotenvload_dotenv()mailer = activity.NewActivity(os.getenv('MAILERSEND_API_KEY'))page = 1limit = 20date_from = 1623073576date_to = 1623074976events = [    &quot;processed&quot;,    &quot;queued&quot;,    &quot;sent&quot;,    &quot;delivered&quot;,    &quot;soft-bounced&quot;,    &quot;hard-bounced&quot;,    &quot;junk&quot;,    &quot;opened&quot;,    &quot;clicked&quot;,    &quot;unsubscribed&quot;,    &quot;spam_complaints&quot;,]mailer.get_domain_activity(&quot;domain-id&quot;, page, limit, date_from, date_to, events)```## Analytics### Activity data by date```pythonfrom mailersend import analyticsfrom dotenv import load_dotenvload_dotenv()mailer = analytics.NewAnalytics(os.getenv('MAILERSEND_API_KEY'))date_from = 1623073576date_to = 1623074976events = [    &quot;processed&quot;,    &quot;sent&quot;,]# optional argumentsdomain_id = &quot;domain-id&quot;group_by = &quot;days&quot;mailer.get_activity_by_date(date_from, date_to, events, domain_id, group_by)```### Opens by country```pythonfrom mailersend import analyticsfrom dotenv import load_dotenvload_dotenv()mailer = analytics.NewAnalytics(os.getenv('MAILERSEND_API_KEY'))date_from = 1623073576date_to = 1623074976# optional argumentsdomain_id = &quot;domain-id&quot;mailer.get_opens_by_country(date_from, date_to, domain_id)```### Opens by user-agent name```pythonfrom mailersend import analyticsfrom dotenv import load_dotenvload_dotenv()mailer = analytics.NewAnalytics(os.getenv('MAILERSEND_API_KEY'))date_from = 1623073576date_to = 1623074976# optional argumentsdomain_id = &quot;domain-id&quot;mailer.get_opens_by_user_agent(date_from, date_to, domain_id)```### Opens by reading environment```pythonfrom mailersend import analyticsfrom dotenv import load_dotenvload_dotenv()mailer = analytics.NewAnalytics(os.getenv('MAILERSEND_API_KEY'))date_from = 1623073576date_to = 1623074976# optional argumentsdomain_id = &quot;domain-id&quot;mailer.get_opens_by_reading_environment(date_from, date_to, domain_id)```## Inbound Routes### Get a list of inbound routes```pythonfrom mailersend import inbound_routingfrom dotenv import load_dotenvload_dotenv()mailer = inbound_routing.NewInbound(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_inbound_routes())```### Get a single inbound route```pythonfrom mailersend import inbound_routingfrom dotenv import load_dotenvload_dotenv()mailer = inbound_routing.NewInbound(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_inbound_by_id(&quot;inbound-id&quot;))```### Add an inbound route```pythonfrom mailersend import inbound_routingfrom dotenv import load_dotenvload_dotenv()mailer = inbound_routing.NewInbound(os.getenv('MAILERSEND_API_KEY'))options = {}_catch_filter = {    &quot;type&quot;: &quot;catch_recipient&quot;,    &quot;filters&quot;: [        {            &quot;comparer&quot;: &quot;equal&quot;,            &quot;value&quot;: &quot;test&quot;        }    ]}_match_filter = {    &quot;type&quot;: &quot;match_all&quot;}_forwards = [    {        &quot;type&quot;: &quot;webhook&quot;,        &quot;value&quot;: &quot;https://www.mailersend.com/hook&quot;    }]mailer.set_name(&quot;Example route&quot;, options)mailer.set_domain_enabled(True, options)mailer.set_inbound_domain(&quot;test.remotecompany.com&quot;, options)mailer.set_catch_filter(_catch_filter, options)print(mailer.add_inbound_route())```### Update an inbound route```pythonfrom mailersend import inbound_routingfrom dotenv import load_dotenvload_dotenv()route_id = &quot;inbound-route-id&quot;mailer = inbound_routing.NewInbound(os.getenv('MAILERSEND_API_KEY'))options = {}_catch_filter = {    &quot;type&quot;: &quot;catch_recipient&quot;,    &quot;filters&quot;: [        {            &quot;comparer&quot;: &quot;equal&quot;,            &quot;value&quot;: &quot;test&quot;        }    ]}_match_filter = {    &quot;type&quot;: &quot;match_all&quot;}_forwards = [    {        &quot;type&quot;: &quot;webhook&quot;,        &quot;value&quot;: &quot;https://www.mailersend.com/hook&quot;    }]mailer.set_name(&quot;Example route&quot;, options)mailer.set_domain_enabled(True, options)mailer.set_inbound_domain(&quot;test.remotecompany.com&quot;, options)mailer.set_catch_filter(_catch_filter, options)print(mailer.update_inbound_route(route_id))```### Delete an inbound route```pythonfrom mailersend import inbound_routingfrom dotenv import load_dotenvload_dotenv()route_id = &quot;inbound-route-id&quot;mailer = inbound_routing.NewInbound(os.getenv('MAILERSEND_API_KEY'))print(mailer.delete_inbound_route(route_id))```## Domains### Get a list of domains```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.get_domains()```### Get a single domain```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.get_domain_by_id(&quot;domain-id&quot;)```### Get a single domain using helper function```pythonfrom mailersend import domainsfrom mailersend import utilsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))helper = utils.NewHelper(os.getenv('MAILERSEND_API_KEY'))mailer.get_domain_by_id(helper.get_id_by_name(&quot;domains&quot;,&quot;domain-name&quot;))```### Add a domainYou can find a full list of settings [here](https://developers.mailersend.com/api/v1/domains.html#request-parameters-3).```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.add_domain(&quot;name&quot;, &quot;example.com&quot;)```### Delete a domain```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.delete_domain(&quot;domain-id&quot;)```### Get a list of recipients per domain```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.get_recipients_for_domain(&quot;domain-id&quot;)```### Update domain settingsYou can find a full list of settings [here](https://developers.mailersend.com/api/v1/domains.html#request-body).```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.update_domain_setting(&quot;domain-id&quot;, &quot;send_paused&quot;, True)```### Get DNS Records```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.get_dns_records(&quot;domain-id&quot;)```### Verify a domain```pythonfrom mailersend import domainsfrom dotenv import load_dotenvload_dotenv()mailer = domains.NewDomain(os.getenv('MAILERSEND_API_KEY'))mailer.verify_domain(&quot;domain-id&quot;)```## Messages### Get a list of messages```pythonfrom mailersend import messagesfrom dotenv import load_dotenvload_dotenv()mailer = messages.NewMessage(os.getenv('MAILERSEND_API_KEY'))mailer.get_messages()```### Get a single message```pythonfrom mailersend import messagesfrom dotenv import load_dotenvload_dotenv()mailer = messages.NewMessage(os.getenv('MAILERSEND_API_KEY'))mailer.get_message_by_id(&quot;message-id&quot;)```## Scheduled messages### Get a list of scheduled messages```pythonfrom mailersend import scheduled_messagesfrom dotenv import load_dotenvload_dotenv()mailer = scheduled_messages.NewMessageSchedule(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_scheduled_messages())```### Get a single scheduled message```pythonfrom mailersend import scheduled_messagesfrom dotenv import load_dotenvload_dotenv()mailer = scheduled_messages.NewMessageSchedule(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_scheduled_message_by_id(&quot;scheduled-message-id&quot;))```### Delete a scheduled message```pythonfrom mailersend import scheduled_messagesfrom dotenv import load_dotenvload_dotenv()mailer = scheduled_messages.NewMessageSchedule(os.getenv('MAILERSEND_API_KEY'))print(mailer.delete_scheduled_message(&quot;scheduled-message-id&quot;))```## Recipients### Get a list of recipients```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.get_recipients()```### Get a single recipient```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.get_recipient_by_id(&quot;recipient-id&quot;)```### Delete a recipient```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.delete_recipient(&quot;recipient-id&quot;)```### Get recipients from a blocklist```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.get_recipients_from_blocklist(&quot;domain-id&quot;)```### Get recipients from hard bounces```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.get_hard_bounces(&quot;domain-id&quot;)```### Get recipients from spam complaints```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.get_spam_complaints(&quot;domain-id&quot;)```### Get recipients from unsubscribes```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))mailer.get_unsubscribes(&quot;domain-id&quot;)```### Add recipients to blocklistUsing recipients:```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    'blocked@client.com']mailer.add_to_blocklist(&quot;domain-id&quot;, recipients=recipient_list)```Using patterns:```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_patterns = [    '*@client.com']mailer.add_to_blocklist(&quot;domain-id&quot;, patterns=recipient_patterns)```### Add hard bounced recipients```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.add_hard_bounces(&quot;domain-id&quot;, recipient_list)```### Add spam complaints```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.add_spam_complaints(&quot;domain-id&quot;, recipient_list)```### Add recipients to unsubscribe list```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.add_unsubscribes(&quot;domain-id&quot;, recipient_list)```### Delete recipients from blocklist```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.delete_from_blocklist(&quot;domain-id&quot;, recipient_list)```### Delete hard bounced recipients```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.delete_hard_bounces(&quot;domain-id&quot;, recipient_list)```### Delete spam complaints```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.delete_spam_complaints(&quot;domain-id&quot;, recipient_list)```### Delete recipients from unsubscribe list```pythonfrom mailersend import recipientsfrom dotenv import load_dotenvload_dotenv()mailer = recipients.NewRecipient(os.getenv('MAILERSEND_API_KEY'))recipient_list = [    &quot;your@client.com&quot;]mailer.delete_unsubscribes(&quot;domain-id&quot;, recipient_list)```## Tokens### Create a token```pythonfrom mailersend import tokensfrom dotenv import load_dotenvload_dotenv()mailer = tokens.NewToken(os.getenv('MAILERSEND_API_KEY'))scopes = [&quot;email_full&quot;, &quot;analytics_read&quot;]mailer.create_token(&quot;my-token&quot;, scopes)```Because of security reasons, we only allow access token appearance once during creation. In order to see the access token created you can do:```pythonfrom mailersend import tokensfrom dotenv import load_dotenvload_dotenv()mailer = tokens.NewToken(os.getenv('MAILERSEND_API_KEY'))scopes = [&quot;email_full&quot;, &quot;analytics_read&quot;]print(mailer.create_token(&quot;my-token&quot;, scopes))```### Pause / Unpause Token```pythonfrom mailersend import tokensfrom dotenv import load_dotenvload_dotenv()mailer = tokens.NewToken(os.getenv('MAILERSEND_API_KEY'))# pausemailer.update_token(&quot;my-token&quot;)# unpausemailer.update_token(&quot;my-token&quot;, pause=False)```### Delete a Token```pythonfrom mailersend import tokensfrom dotenv import load_dotenvload_dotenv()mailer = tokens.NewToken(os.getenv('MAILERSEND_API_KEY'))mailer.delete_token(&quot;token-id&quot;)```## Templates### Get a list of templates```pythonfrom mailersend import templatesfrom dotenv import load_dotenvload_dotenv()mailer = templates.NewTemplate(os.getenv('MAILERSEND_API_KEY'))mailer.get_templates()```### Get a single template```pythonfrom mailersend import templatesfrom dotenv import load_dotenvload_dotenv()mailer = templates.NewTemplate(os.getenv('MAILERSEND_API_KEY'))template_id = 1234mailer.get_template_by_id()```### Delete template```pythonfrom mailersend import templatesfrom dotenv import load_dotenvload_dotenv()mailer = templates.NewTemplate(os.getenv('MAILERSEND_API_KEY'))template_id = 1234mailer.delete_template()```## Webhooks### Get a list of webhooks```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()mailer = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))mailer.get_webhooks(&quot;domain-id&quot;)```### Get a single webhook```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()mailer = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))mailer.get_webhook_by_id(&quot;webhook-id&quot;)```### Create a Webhook```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()webhookEvents = ['activity.sent', 'activity.delivered']webhook = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))webhook.set_webhook_url(&quot;https://webhooks.mysite.com&quot;)webhook.set_webhook_name(&quot;my first webhook&quot;)webhook.set_webhook_events(webhookEvents)webhook.set_webhook_domain(&quot;domain-id&quot;)webhook.create_webhook()```### Create a disabled webhook```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()webhookEvents = ['activity.sent', 'activity.delivered']webhook = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))webhook.set_webhook_url(&quot;https://webhooks.mysite.com&quot;)webhook.set_webhook_name(&quot;my first webhook&quot;)webhook.set_webhook_events(webhookEvents)webhook.set_webhook_domain(&quot;domain-id&quot;)webhook.set_webhook_enabled(False)webhook.create_webhook()```### Update a Webhook```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()webhook = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))webhook.update_webhook(&quot;webhook-id&quot;, &quot;name&quot;, &quot;a new webhook name&quot;)```### Disable/Enable a Webhook```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()webhook = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))webhook.update_webhook(&quot;webhook-id&quot;, &quot;enabled&quot;, False)```### Delete a Webhook```pythonfrom mailersend import webhooksfrom dotenv import load_dotenvload_dotenv()webhook = webhooks.NewWebhook(os.getenv('MAILERSEND_API_KEY'))webhook.delete_webhook(&quot;webhook-id&quot;)```## SMS### Sending SMS messagesWithout personalization:```pythonfrom mailersend import sms_sendingfrom dotenv import load_dotenvload_dotenv()mailer = sms_sending.NewSmsSending(os.getenv('MAILERSEND_API_KEY'))# Number belonging to your account in E164 formatnumber_from = &quot;+11234567890&quot;# You can add up to 50 recipient numbersnumbers_to = [    &quot;+11234567891&quot;,    &quot;+11234567892&quot;]text = &quot;This is the text content&quot;print(mailer.send_sms(number_from, numbers_to, text))```With personalization:```pythonfrom mailersend import sms_sendingfrom dotenv import load_dotenvload_dotenv()mailer = sms_sending.NewSmsSending(os.getenv('MAILERSEND_API_KEY'))# Number belonging to your account in E164 formatnumber_from = &quot;+11234567890&quot;# You can add up to 50 recipient numbersnumbers_to = [    &quot;+11234567891&quot;,    &quot;+11234567892&quot;]text = &quot;Hi {{name}} how are you?&quot;personalization = [    {        &quot;phone_number&quot;: &quot;+11234567891&quot;,        &quot;data&quot;: {            &quot;name&quot;: &quot;Mike&quot;        }    },    {        &quot;phone_number&quot;: &quot;+11234567892&quot;,        &quot;data&quot;: {            &quot;name&quot;: &quot;John&quot;        }    }]print(mailer.send_sms(number_from, numbers_to, text, personalization))```## SMS Activity### Get a list of activities```pythonfrom mailersend import sms_activityfrom dotenv import load_dotenvload_dotenv()mailer = sms_activity.NewSmsActivity(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = 1365743date_from = 1655157601date_to = 1655158601status = [&quot;queued&quot;, &quot;failed&quot;]page = 1limit = 200print(mailer.get_activities(sms_number_id=sms_number_id, date_from=date_from, date_to=date_to, status=status, page=page, limit=limit))```### Get activity of a single message```pythonfrom mailersend import sms_activityfrom dotenv import load_dotenvload_dotenv()mailer = sms_activity.NewSmsActivity(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_message_id = &quot;62a9d12b07852eaf2207b417&quot;print(mailer.get_activity(sms_message_id))```## SMS Phone Numbers### Get a list of SMS phone numbers```pythonfrom mailersend import sms_phone_numbersfrom dotenv import load_dotenvload_dotenv()mailer = sms_phone_numbers.NewSmsNumbers(os.getenv('MAILERSEND_API_KEY'))#Request parameterspaused = Falseprint(mailer.get_phone_numbers(paused))```### Get an SMS phone number```pythonfrom mailersend import sms_phone_numbersfrom dotenv import load_dotenvload_dotenv()mailer = sms_phone_numbers.NewSmsNumbers(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;9pq3enl6842vwrzx&quot;print(mailer.get_phone_number(sms_number_id))```### Update a single SMS phone number```pythonfrom mailersend import sms_phone_numbersfrom dotenv import load_dotenvload_dotenv()mailer = sms_phone_numbers.NewSmsNumbers(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;9pq3enl6842vwrzx&quot;paused = Trueprint(mailer.update_phone_number(sms_number_id, paused))```### Delete an SMS phone number```pythonfrom mailersend import sms_phone_numbersfrom dotenv import load_dotenvload_dotenv()mailer = sms_phone_numbers.NewSmsNumbers(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;9pq3enl6842vwrzx&quot;print(mailer.delete_phone_number(sms_number_id))```## SMS Recipients### Get a list of SMS recipients```pythonfrom mailersend import sms_recipientsfrom dotenv import load_dotenvload_dotenv()mailer = sms_recipients.NewSmsRecipients(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;9pq3enl6842vwrzx&quot;status = &quot;active&quot;print(mailer.get_recipients(status=status, sms_number_id=sms_number_id))```### Get an SMS recipient```pythonfrom mailersend import sms_recipientsfrom dotenv import load_dotenvload_dotenv()mailer = sms_recipients.NewSmsRecipients(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_recipient_id = &quot;627e756fd30078fb2208cc87&quot;print(mailer.get_recipient(sms_recipient_id))```### Update a single SMS recipient```pythonfrom mailersend import sms_recipientsfrom dotenv import load_dotenvload_dotenv()mailer = sms_recipients.NewSmsRecipients(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_recipient_id = &quot;627e756fd30078fb2208cc87&quot;status = &quot;opt_out&quot;print(mailer.update_recipient(sms_recipient_id, status))```## SMS Messages### Get a list of SMS messages```pythonfrom mailersend import sms_messagesfrom dotenv import load_dotenvload_dotenv()mailer = sms_messages.NewSmsMessages(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_messages())```### Get an SMS message```pythonfrom mailersend import sms_messagesfrom dotenv import load_dotenvload_dotenv()#Request parameterssms_message_id = &quot;627e756fd30078fb2208cc87&quot;mailer = sms_messages.NewSmsMessages(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_message(sms_message_id))```## SMS Webhooks### Get a list of SMS webhooks```pythonfrom mailersend import sms_webhooksfrom dotenv import load_dotenvload_dotenv()mailer = sms_webhooks.NewSmsWebhooks(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;9pq3enl6842vwrzx&quot;print(mailer.get_webhooks(sms_number_id))```### Get a single SMS webhook```pythonfrom mailersend import sms_webhooksfrom dotenv import load_dotenvload_dotenv()mailer = sms_webhooks.NewSmsWebhooks(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_webhook_id = &quot;aaui13enl12f2vzx&quot;print(mailer.get_webhook(sms_webhook_id))```### Create an SMS webhook```pythonfrom mailersend import sms_webhooksfrom dotenv import load_dotenvload_dotenv()mailer = sms_webhooks.NewSmsWebhooks(os.getenv('MAILERSEND_API_KEY'))#Request parametersurl = &quot;https://webhook-url.com&quot;name = &quot;My Webhook Name&quot;events = [&quot;sms.sent&quot;]sms_number_id = &quot;9pq3enl6842vwrzx&quot;enabled = Trueprint(mailer.create_webhook(url, name, events, sms_number_id, enabled))```### Update a single SMS webhook```pythonfrom mailersend import sms_webhooksfrom dotenv import load_dotenvload_dotenv()mailer = sms_webhooks.NewSmsWebhooks(os.getenv('MAILERSEND_API_KEY'))#Request parametersurl = &quot;https://different-url.com&quot;name = &quot;New Webhook Name&quot;events = [&quot;sms.sent&quot;, &quot;sms.failed&quot;],sms_webhook_id = &quot;aaui13enl12f2vzx&quot;enabled = Falseprint(mailer.update_webhook(sms_webhook_id, url, name, events, enabled))```### Delete an SMS webhook```pythonfrom mailersend import sms_webhooksfrom dotenv import load_dotenvload_dotenv()mailer = sms_webhooks.NewSmsWebhooks(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_webhook_id = &quot;aaui13enl12f2vzx&quot;print(mailer.delete_webhook(sms_webhook_id))```### Get a list of SMS webhooks```pythonfrom mailersend import sms_webhooksfrom dotenv import load_dotenvload_dotenv()mailer = sms_webhooks.NewSmsWebhooks(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;9pq3enl6842vwrzx&quot;print(mailer.get_webhooks(sms_number_id))```## SMS Inbouds### Get a list of SMS inbound routes```pythonfrom mailersend import sms_inboundsfrom dotenv import load_dotenvload_dotenv()mailer = sms_inbounds.NewSmsInbounds(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;123456789&quot;enabled = Truepage = 1limit = 25print(mailer.get_inbound_routes(sms_number_id, enabled, page, limit))```### Get a single SMS inbound route```pythonfrom mailersend import sms_inboundsfrom dotenv import load_dotenvload_dotenv()mailer = sms_inbounds.NewSmsInbounds(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_inbound_id = &quot;123456789&quot;print(mailer.get_inbound_route(sms_inbound_id))```### Create an SMS inbound route```pythonfrom mailersend import sms_inboundsfrom dotenv import load_dotenvload_dotenv()mailer = sms_inbounds.NewSmsInbounds(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;123456789&quot;name = &quot;My route&quot;forward_url = &quot;https://some.url&quot;filter = {    &quot;comparer&quot;: &quot;equal&quot;,    &quot;value&quot;: &quot;START&quot;}enabled = Trueprint(mailer.create_inbound_route(sms_number_id, name, forward_url, filter, enabled))```### Update an SMS inbound route```pythonfrom mailersend import sms_inboundsfrom dotenv import load_dotenvload_dotenv()mailer = sms_inbounds.NewSmsInbounds(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_number_id = &quot;123456789&quot;name = &quot;New name&quot;forward_url = &quot;https://news.url&quot;filter = {    &quot;comparer&quot;: &quot;contains&quot;,    &quot;value&quot;: &quot;some-value&quot;}enabled = Trueprint(mailer.update_inbound_route(sms_number_id, name, forward_url, filter, enabled))```### Delete an SMS inbound route```pythonfrom mailersend import sms_inboundsfrom dotenv import load_dotenvload_dotenv()mailer = sms_inbounds.NewSmsInbounds(os.getenv('MAILERSEND_API_KEY'))#Request parameterssms_inbound_id = &quot;123456789&quot;print(mailer.delete_inbound_route()(sms_inbound_id))```## Sender Identities### Get a list of sender identities```pythonfrom mailersend import sender_identitiesfrom dotenv import load_dotenvload_dotenv()mailer = sender_identities.NewSenderIdentity(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_identities())```### Get a sender identity```pythonfrom mailersend import sender_identitiesfrom dotenv import load_dotenvload_dotenv()mailer = sender_identities.NewSenderIdentity(os.getenv('MAILERSEND_API_KEY'))print(mailer.get_identity(identity_id=&quot;12345&quot;))```### Create a sender identity```pythonfrom mailersend import sender_identitiesfrom dotenv import load_dotenvload_dotenv()mailer = sender_identities.NewSenderIdentity(os.getenv('MAILERSEND_API_KEY'))print(mailer.create_identity(    domain_id=&quot;123456&quot;,    name=&quot;John Doe&quot;,    email=&quot;email@domain.com&quot;,    reply_to_email=&quot;reply@domain.com&quot;,    reply_to_name=&quot;Doe John&quot;,    add_note=True,    personal_note=&quot;My awesome note&quot;,))```### Update a sender identity```pythonfrom mailersend import sender_identitiesfrom dotenv import load_dotenvload_dotenv()mailer = sender_identities.NewSenderIdentity(os.getenv('MAILERSEND_API_KEY'))print(mailer.update_identity(    identity_id=&quot;123456&quot;,    domain_id=&quot;123456&quot;,    name=&quot;Abe Doe&quot;,    email=&quot;email@mydomain.com&quot;,    reply_to_email=&quot;reply@mydomain.com&quot;,    reply_to_name=&quot;Doe Abe&quot;,    add_note=False))```### Delete a sender identity```pythonfrom mailersend import sender_identitiesfrom dotenv import load_dotenvload_dotenv()mailer = sender_identities.NewSenderIdentity(os.getenv('MAILERSEND_API_KEY'))print(mailer.delete_identity(identity_id=&quot;123456&quot;))```# Troubleshooting## Emails not being sentPrint the output of `mailer.send()` to view status code and errors.```pythonfrom mailersend import emailsmailer = emails.NewEmail()mail_body = {}print(mailer.send(mail_body))```# TestingTBD&lt;a name=&quot;endpoints&quot;&gt;&lt;/a&gt;# Available endpoints| Feature group     | Endpoint                                | Available ||-------------------|-----------------------------------------|-----------|| Activity          | `GET activity`                          | ✅         || Analytics         | `GET analytics`                         | ✅         || Domains           | `{GET, PUT, DELETE} domains`            | ✅         || Emails            | `POST send`                             | ✅         || Messages          | `GET messages`                          | ✅         || Recipients        | `{GET, DELETE} recipients`              | ✅         || Templates         | `{GET, DELETE} templates`               | ✅         || Tokens            | `{POST, PUT, DELETE} tokens`            | ✅         || Webhooks          | `{GET, POST, PUT, DELETE} webhooks`     | ✅         || SMS Sending       | `{POST} sms`                            | ✅         || SMS Activity      | `{GET} sms-activity`                    | ✅         || SMS Phone numbers | `{GET, PUT, DELETE} sms-numbers`        | ✅         || SMS Recipients    | `{GET, PUT} sms-recipients`             | ✅         || SMS Messages      | `{GET} sms-messages`                    | ✅         || SMS Webhooks      | `{GET, POST, PUT, DELETE} sms-webhooks` | ✅         || SMS Inbounds      | `{GET, POST, PUT, DELETE} sms-inbounds` | ✅         || Sender Identities | `{GET, POST, PUT, DELETE} identities`   | ✅         |*If, at the moment, some endpoint is not available, please use other available tools to access it. [Refer to official API docs for more info](https://developers.mailersend.com/).*&lt;a name=&quot;support-and-feedback&quot;&gt;&lt;/a&gt;# Support and FeedbackIn case you find any bugs, submit an issue directly here in GitHub.You are welcome to create SDK for any other programming language.If you have any troubles using our API or SDK free to contact our support by email [info@mailersend.com](mailto:info@mailersend.com)The official documentation is at [https://developers.mailersend.com](https://developers.mailersend.com)&lt;a name=&quot;license&quot;&gt;&lt;/a&gt;# License[The MIT License (MIT)](LICENSE)</longdescription>
</pkgmetadata>