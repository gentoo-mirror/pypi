<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-digitalocean===================This library provides easy access to Digital Ocean APIs to deploydroplets, images and more.|image0|| |image1|| |image2|| |image3|How to install--------------You can install python-digitalocean using **pip**::    pip install -U python-digitaloceanor via sources:::    python setup.py installFeatures--------python-digitalocean support all the features provided viadigitalocean.com APIs, such as:-  Get user's Droplets-  Get user's Images (Snapshot and Backups)-  Get public Images-  Get Droplet's event status-  Create and Remove a Droplet-  Resize a Droplet-  Shutdown, restart and boot a Droplet-  Power off, power on and &quot;power cycle&quot; a Droplet-  Perform Snapshot-  Enable/Disable automatic Backups-  Restore root password of a DropletExamples---------Listing the droplets~~~~~~~~~~~~~~~~~~~~This example shows how to list all the active droplets:.. code:: python    import digitalocean    manager = digitalocean.Manager(token=&quot;secretspecialuniquesnowflake&quot;)    print(manager.get_all_droplets())Shutdown all droplets~~~~~~~~~~~~~~~~~~~~~This example shows how to shutdown all the active droplets:.. code:: python    import digitalocean    manager = digitalocean.Manager(token=&quot;secretspecialuniquesnowflake&quot;)    my_droplets = manager.get_all_droplets()    for droplet in my_droplets:        droplet.shutdown()Creating a Droplet and checking its status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~This example shows how to create a droplet and how to check its status.. code:: python    import digitalocean    droplet = digitalocean.Droplet(token=&quot;secretspecialuniquesnowflake&quot;,                                   name='Example',                                   region='nyc2', # New York 2                                   image='ubuntu-14-04-x64', # Ubuntu 14.04 x64                                   size_slug='512mb',  # 512MB                                   backups=True)    droplet.create()Checking the status of the droplet~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    actions = droplet.get_actions()    for action in actions:        action.load()        # Once it shows complete, droplet is up and running        print action.statusAdd SSHKey into DigitalOcean Account~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    from digitalocean import SSHKey    user_ssh_key = open('/home/&lt;$USER&gt;/.ssh/id_rsa.pub').read()    key = SSHKey(token='secretspecialuniquesnowflake',                 name='uniquehostname',                 public_key=user_ssh_key)    key.create()Creating a new droplet with all your SSH keys~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    manager = digitalocean.Manager(token=&quot;secretspecialuniquesnowflake&quot;)    keys = manager.get_all_sshkeys()    droplet = digitalocean.Droplet(token=&quot;secretspecialuniquesnowflake&quot;,                                   name='DropletWithSSHKeys',                                   region='ams3', # Amster                                   image='ubuntu-14-04-x64', # Ubuntu 14.04 x64                                   size_slug='512mb',  # 512MB                                   ssh_keys=keys, #Automatic conversion                                   backups=False)    droplet.create()Testing-------Test using Docker~~~~~~~~~~~~~~~~~To test this python-digitalocean you can use`docker &lt;https://www.docker.com&gt;`__ to have a **clean environmentautomatically**. First you have to build the container by running inyour shell on the repository directory:::    docker build -t &quot;pdo-tests&quot; .Then you can run all the tests (for both python 2 and python 3)::    docker run pdo-tests**Note**: This will use Ubuntu 14.04 as base and use your repository torun tests. So every time you edit some files, please run these commandsto perform tests on your changes.Testing using pytest manually~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Use `pytest &lt;http://pytest.org/&gt;`__ to perform testing. It isrecommended to use a dedicated virtualenv to perform tests, using thesecommands:::    $ virtualenv /tmp/digitalocean_env    $ source /tmp/digitalocean_env/bin/activate    $ pip install -r requirements.txtTo run all the tests manually use py.test command:::    $ python -m pytestLinks------  GitHub: https://github.com/koalalorenzo/python-digitalocean-  PyPI page: https://pypi.python.org/pypi/python-digitalocean/-  Author Website:   `http://who.is.lorenzo.setale.me/? &lt;http://setale.me/&gt;`__-  Author Blog: http://blog.setale.me/.. |image0| image:: https://travis-ci.org/koalalorenzo/python-digitalocean.svg   :target: https://travis-ci.org/koalalorenzo/python-digitalocean.. |image1| image:: https://img.shields.io/github/forks/badges/shields.svg?style=social&amp;label=Fork   :target: https://travis-ci.org/koalalorenzo/python-digitalocean.. |image2| image:: https://img.shields.io/github/stars/badges/shields.svg?style=social&amp;label=Star   :target: https://travis-ci.org/koalalorenzo/python-digitalocean.. |image3| image:: https://img.shields.io/github/watchers/badges/shields.svg?style=social&amp;label=Watch   :target: https://travis-ci.org/koalalorenzo/python-digitalocean</longdescription>
</pkgmetadata>