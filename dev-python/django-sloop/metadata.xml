<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Sloop](/docs/img/splash.jpg?raw=true &quot;Django-Sloop&quot;)This package contains some tools that will ease the implementation of push notifications using AWS SNS and other backends into django projects.# Django-Sloop## Installation1. Install the package via Github or PIP (pip install django-sloop)2. Add **django_sloop** to the INSTALLED_APPS list in the settings file.3. Extend the django_sloop.models.AbstractSNSDevice class and create your own push token device model.```python# models.pyfrom django_sloop.models import AbstractSNSDeviceclass Device(AbstractSNSDevice):    pass        # (Optional) if you need to override Meta.    class Meta(AbstractSNSDevice.Meta):        pass```4. Make sure that you fill necessary information at the settings file:```python# settings.pyDJANGO_SLOOP_SETTINGS = {    &quot;AWS_REGION_NAME&quot;: &quot;&quot;,    &quot;AWS_ACCESS_KEY_ID&quot;: &quot;&quot;,    &quot;AWS_SECRET_ACCESS_KEY&quot;: &quot;&quot;,    &quot;SNS_IOS_APPLICATION_ARN&quot;: &quot;test_ios_arn&quot;,    &quot;SNS_IOS_SANDBOX_ENABLED&quot;: False,    &quot;SNS_ANDROID_APPLICATION_ARN&quot;: &quot;test_android_arn&quot;,    &quot;LOG_SENT_MESSAGES&quot;: False,  # False by default.    &quot;DEFAULT_SOUND&quot;: &quot;&quot;,    &quot;DEVICE_MODEL&quot;: &quot;module_name.Device&quot;,}```You cannot change the DEVICE_MODEL setting during the lifetime of a project (i.e. once you have made and migrated models that depend on it) without serious effort. The model it refers to must be available in the first migration ofthe app that it lives in.5. Create migrations for newly created Device model and migrate.**Note:** django_sloop's migrations must run after your Device is created. If you run into a problem while running migrations add following to the your migration file where the Device is created.```run_before = [   ('django_sloop', '0001_initial'),]```6. Add django_sloop.models.PushNotificationMixin to your User model.```pythonclass User(PushNotificationMixin, ...):    passuser.send_push_notification_async(message=&quot;Sample push notification.&quot;)```7. Add django_sloop.admin.SloopAdminMixin to your UserAdmin to enable sending push messages to users from Django admin panel.```python# admin.pyfrom django_sloop.admin import SloopAdminMixinfrom django.contrib import adminclass UserAdmin(SloopAdminMixin, admin.ModelAdmin):        actions = (&quot;send_push_notification&quot;, )    ```8. Add django rest framework urls to create and delete device.```python# urls.pyfrom django.urls import pathfrom django.urls import includeurlpatterns = [    # ...    path('api/devices/', include('django_sloop.urls')),    # ...]```Done!</longdescription>
</pkgmetadata>