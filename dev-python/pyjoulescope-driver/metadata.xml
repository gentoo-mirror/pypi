<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--# Copyright 2014-2023 Jetperch LLC## Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);# you may not use this file except in compliance with the License.# You may obtain a copy of the License at##     http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.--&gt;[![packaging](https://github.com/jetperch/joulescope_driver/actions/workflows/packaging.yml/badge.svg)](https://github.com/jetperch/joulescope_driver/actions/workflows/packaging.yml)# Joulescope DriverWelcome to the Joulescopeâ„¢ Driver project.[Joulescope](https://www.joulescope.com) is an affordable, precision DC energyanalyzer that enables you to build better products.This user-space C library communicates with Joulescope products to configure operation and receive data.  The first-generation driver introduced in 2019 waswritten in Python.  While Python proved to be a very flexible language enablingmany user scripts, it was difficult to support other languages.  This second-generation driver launched in 2022 addresses several issueswith the first-generation python driver including:1. Improved event-driven API based upon PubSub for easier integration with    user interfaces and other complicated software packages.2. Improved portability for easier language bindings.3. Improved performance.For more information, see:* [source code](https://github.com/jetperch/joulescope_driver)* [documentation](https://joulescope-driver.readthedocs.io/en/latest/)* [pypi](https://pypi.org/project/pyjoulescope-driver/)* [Joulescope](https://www.joulescope.com/) (Joulescope web store)* [jls](https://github.com/jetperch/jls) (Joulescope file format)* [forum](https://forum.joulescope.com/)## Python InstallationThe python bindings work with Python 3.9 and later.To use the python bindings, ensure that you have a compatible versionof python installed on your host computer.  Then:    python -m pip install pyjoulescope_driverFor Ubuntu, you will also need to [install the udev rules](#ubuntu-2204-lts).You can then run the pyjoulescope_driver python entry points:    python -m pyjoulescope_driver --help    python -m pyjoulescope_driver scan    python -m pyjoulescope_driver info    python -m pyjoulescope_driver info * --verboseNote that you may need to change &quot;python&quot; to &quot;python3&quot; or the full path.  You can also use a python[virtual environment](https://docs.python.org/3/tutorial/venv.html).## BuildingEnsure that your computer has a development environment including CMake.  ### WindowsInstall cmake and your favorite build toolchain such as Visual Studio, mingw64, wsl, ninja.### macOSFor macOS, install homebrew, then:    brew install pkgconfig python3### Ubuntu 22.04 LTSFor Ubuntu:    sudo apt install cmake build-essential ninja-build libudev-devYou will also need to install the udev rules:    $ wget https://raw.githubusercontent.com/jetperch/joulescope_driver/main/99-joulescope.rules    $ sudo cp 99-joulescope.rules /etc/udev/rules.d/    $ sudo udevadm control --reload-rules### Common    cd {your/repos/joulescope_driver}    mkdir build &amp;&amp; cd build    cmake ..    cmake --build . &amp;&amp; ctest .This package includes a command-line tool, jsdrv:    jsdrv --help    jsdrv scan### Build python bindingsInstall a compatible version of Python 3.9 or later.  To installthe pyjoulescope_driver dependencies:    cd {your/repos/joulescope_driver}    python -m pip install -U requirements.txtYou should then be able to build the native bindings:    python setup.py build_ext --inplaceYou can build the package using isolation:    python -m buildDepending upon your system configuration, you may need to replace&quot;python&quot; with &quot;python3&quot; or the full path to your desired python installation.On Windows, you may be prompted to install the [Microsoft C++ Build Tools](https://visualstudio.microsoft.com/visual-cpp-build-tools/).</longdescription>
</pkgmetadata>