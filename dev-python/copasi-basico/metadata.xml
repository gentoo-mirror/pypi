<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Python package](https://github.com/copasi/basico/workflows/Python%20package/badge.svg) [![Documentation Status](https://readthedocs.org/projects/basico/badge/?version=latest)](https://basico.readthedocs.io/en/latest/?badge=latest) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=copasi_basico&amp;metric=alert_status)](https://sonarcloud.io/dashboard?id=copasi_basico) [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/copasi/basico.git/HEAD?filepath=docs/notebooks/index.ipynb) [![DOI](https://zenodo.org/badge/148472105.svg)](https://zenodo.org/badge/latestdoi/148472105) [![codecov](https://codecov.io/gh/copasi/basico/branch/master/graph/badge.svg?token=MG54YU29JQ)](https://codecov.io/gh/copasi/basico)## BasiCOThis project hosts a simplified python interface to COPASI. While all functionality from COPASIis exposed via automatically generated SWIG wrappers, this package aims to add a layer on top ofthat, to hide most of the complexity away when calling COPASI functions.   ![COPASI Logo](https://raw.githubusercontent.com/copasi/basico/master/./docs/_static/COPASI_Conly_176x176.png)  ### InstallationThe package works with python 3.7+, provided the following packages are installed: * python-copasi* pandas* numpy* matplotlib* PyYAMLthat are freely available on pypi, they will be automatically installed when installing via setup.py.Once done, just have the `basico` directory in the `PYTHONPATH` or `sys.path`.Or you could directly install everything you need right from pypi     pip install copasi-basicofrom this git repo:    pip install git+https://github.com/copasi/basico.git### UsageThe following modules are available: * `model_io`: functionality, for creating / loading / saving models.* `model_info`: functionality to getting / setting model elements from pandas dataframes  * `task_timecourse`: a wrapper for running time course simulations* `task_parameter_estimation`: a wrapper for parameter estimation* `task_optimization`: a wrapper for computing optimizations with arbitrary objective functions* `task_steadystate`: a wrapper for computing steady states* `task_scan`: a wrapper for parameter scans / repeats* `task_sensitivities`: a wrapper for computing sensitivities* `compartment_array_tools`: utility for plotting and the likeDocumentation is continually updated at: &lt;https://basico.readthedocs.org/&gt;. Please use the [issue tracker](https://github.com/copasi/basico/issues) for bug reports and feature requests.### AcknowledgementsThis project has been possible thanks to the BMBF funded de.NBI initiative (031L0104A):![de.NBI logo](https://raw.githubusercontent.com/copasi/basico/master/./docs/_static/deNBI_logo.jpg)### LicenseThe packages available on this page are provided under the [Artistic License 2.0](http://copasi.org/Download/License/), which is an [OSI](http://www.opensource.org/) approved license. This license allows non-commercial and commercial use free of charge. </longdescription>
</pkgmetadata>