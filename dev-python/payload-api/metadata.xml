<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Payload Python LibraryA Python library for integrating [Payload](https://payload.co).## Installation## Install using pip```bashpip install payload-api```## Get StartedOnce you've installed the Payload Python library to your environment,import the `payload` module to get started. **Note:** We recommendusing the shorthand name of `pl` when importing.```pythonimport payload as pl```### API AuthenticationTo authenticate with the Payload API, you'll need a live or test API key. APIkeys are accessible from within the Payload dashboard.```pythonimport payload as plpl.api_key = 'secret_key_3bW9JMZtPVDOfFNzwRdfE'```----------------------------Session based:```pythonimport payloadpl = payload.Session('secret_key_3bW9JMZtPVDOfFNzwRdfE')```### Creating an ObjectInterfacing with the Payload API is done primarily through Payload Objects. Below is an example ofcreating a customer using the `pl.Customer` object.```python# Create a Customercustomer = pl.Customer.create(email='matt.perez@example.com',name='Matt Perez')``````python# Create a Paymentpayment = pl.Payment.create(    amount=100.0,    payment_method=pl.Card(        card_number='4242 4242 4242 4242'    ))```### Accessing Object AttributesObject attributes are accessible through dot notation.```pythoncustomer.name```### Updating an ObjectUpdating an object is a simple call to the `update` object method.```python# Updating a customer's emailcustomer.update( email='matt.perez@newwork.com' )```### Selecting ObjectsObjects can be selected using any of their attributes.```python# Select a customer by emailcustomers = pl.Customer.filter_by(    email='matt.perez@example.com')```Use the `pl.attr` attribute helperinterface to write powerful queries with a little extra syntax sugar.```pythonpayments = pl.Payment.filter_by(    pl.attr.amount &gt; 100,    pl.attr.amount &lt; 200,    pl.attr.description.contains(&quot;Test&quot;),    pl.attr.created_at &gt; datetime(2021,2,1)).all()```### Testing the Payload Python LibraryTests are contained within the tests/ directory. To run a test file, once within thepipenv shell, enter the command in terminal```bashTEST_SECRET_KEY=test_api_key pytest tests/{__FILENAME__}.py ```## DocumentationTo get further information on Payload's Python library and API capabilities,visit the unabridged [Payload Documentation](https://docs.payload.co/?python).</longdescription>
</pkgmetadata>