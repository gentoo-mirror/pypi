<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-rplidar/badge/?version=latest    :target: https://docs.circuitpython.org/projects/rplidar/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_RPLIDAR/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_RPLIDAR    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: Black.. Provide a convenient interface to the Slamtec RPLidar.Dependencies=============Install with PyPy: ``pip install Adafruit_CircuitPython_RPLIDAR``This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_* `Register &lt;https://github.com/adafruit/Adafruit_CircuitPython_Register&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Usage Example=============.. code-block:: python    import os    from math import floor    from adafruit_rplidar import RPLidar    # Setup the RPLidar    PORT_NAME = '/dev/ttyUSB0'    lidar = RPLidar(None, PORT_NAME, timeout=3)    # used to scale data to fit on the screen    max_distance = 0    def process_data(data):        print(data)    scan_data = [0]*360    try:    #    print(lidar.get_info())        for scan in lidar.iter_scans():            for (_, angle, distance) in scan:                scan_data[min([359, floor(angle)])] = distance            process_data(scan_data)    except KeyboardInterrupt:        print('Stopping.')    lidar.stop()    lidar.disconnect()Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/rplidar/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_RPLIDAR/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>