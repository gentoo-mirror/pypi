<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Packstack=========Utility to install **OpenStack** on **Red Hat** based operating system.See other branches for older **OpenStack** versions. Details on how tocontribute to **Packstack** may be found in the **Packstack** wiki athttps://wiki.openstack.org/wiki/Packstack Additional information aboutinvolvement in the community around **Packstack** can be found athttps://openstack.redhat.com/Get_involvedThis utility can be used to install **OpenStack** on a single or groupof hosts (over ``ssh``).This utility is still in the early stages, a lot of the configurationoptions have yet to be added.Installation of packstack:--------------------------::   $ yum install -y git   $ git clone git://github.com/openstack/packstack.git   $ cd packstack &amp;&amp; sudo python setup.py installInstallation of Puppet modules (REQUIRED if running packstack from source):---------------------------------------------------------------------------::   $ export GEM_HOME=/tmp/somedir   $ gem install r10k   $ sudo -E /tmp/somedir/bin/r10k puppetfile install -v   $ sudo cp -r packstack/puppet/modules/packstack /usr/share/openstack-puppet/modulesOption 1 (all-in-one)~~~~~~~~~~~~~~~~~~~~~::   $ packstack --allinoneThis will install all **OpenStack** services on a single host withoutprompting for any configuration information. This will generate an“answers” file (``packstack-answers-&lt;date&gt;-&lt;time&gt;.txt``) containing allthe values used for the install.If you need to re-run packstack, you must use the ``--answer-file``option in order for packstack to use the correct values for passwordsand other authentication credentials:::   $ packstack --answer-file packstack-answers-&lt;date&gt;-&lt;time&gt;.txtOption 2 (using answer file)~~~~~~~~~~~~~~~~~~~~~~~~~~~~::   $ packstack --gen-answer-file=ans.txtThen edit ``ans.txt`` as appropriate e.g.-  set ``CONFIG_SSH_KEY`` to a public ssh key to be installed to remote   machines-  Edit the IP address to anywhere you want to install a piece of   OpenStack on another server-  Edit the 3 network interfaces to whatever makes sense in your setup   $ packstack –answer-file=ans.txtOption 3 (prompts for configuration options)~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~::   $ packstackthat’s it, if everything went well you can now start using OpenStack::   $ cd   $ . keystonerc_admin   $ nova list   $ swift list  # if you have installed swiftConfig options---------------  ``CONFIG_NOVA_COMPUTE_HOSTS`` :   -  A comma separated list of ip addresses on which to install nova      compute-  ``CONFIG_SWIFT_STORAGE_HOSTS`` :   -  A comma separated list of swift storage devices      -  ``1.1.1.1``: create a testing loopback device and use this for         storage      -  ``1.1.1.1/sdb``: use ``/dev/sdb`` on ``1.1.1.1`` as a storage         deviceLogging-------The location of the log files and generated puppet manifests are in the``/var/tmp/packstack`` directory under a directory named by the date inwhich **Packstack** was run and a random string(e.g. ``/var/tmp/packstack/20131022-204316-Bf3Ek2``). Inside, we find amanifest directory and the ``openstack-setup.log`` file; puppetmanifests and a log file for each one are found inside the manifestdirectory.Debugging---------To make **Packstack** write more detailed information into the log fileyou can use the ``-d`` switch:::   $ packstack -d --allinoneWhen upgrading to a new OpenStack release and reusing old answerfile itis useful to know if any **Packstack** option was removed. If answerfileis written by hand it is possible to make a mistake. The``--validate-answer-file`` switch allows checking if any provided optionis not recognized by **Packstack**.::   $ packstack --validate-answer-file=ans.txtDeveloping----------To ease development of **Packstack**, it can be useful to install from*git* such that updates to the git repositories are immediatelyeffective without reinstallation.To do this, start with a minimal **CentOS 7** installation. Then removeany relevant packages that might conflict:::   $ yum -y erase openstack-packstack*,puppet-*Disable **SELinux** by changing “``enforcing``” to “``permissive``” in``/etc/sysconfig/selinux``, then reboot to allow service changes to takeeffect and swap over networking. Then install packages:::   $ yum -y install git python-setuptoolsAnd install **RDO**:::   $ yum -y install https://www.rdoproject.org/repos/rdo-release.rpm   $ yum -y updateInstall Puppet modules as described`above &lt;README.md#installation-of-puppet-modules-required-if-running-packstack-from-source&gt;`__.Then we get **Packstack**:::   $ yum install -y python-crypto python-devel libffi-devel openssl-devel gcc-c++   $ git clone https://github.com/openstack/packstack   $ cd packstack   $ python setup.py developAnd we’re done. Changes to the contents of **Packstack** sourcerepository are picked up by the **Packstack** executable without furtherintervention, and **Packstack** is ready to install.Puppet Style Guide------------------**IMPORTANT** https://docs.puppetlabs.com/guides/style_guide.htmlPlease, respect the Puppet Style Guide as much as possible !Running local Puppet-lint tests-------------------------------It assumes that both ``bundler`` as well as ``rubygems`` (and ``ruby``)are already installed on the system. If not, run this command:::   $ sudo yum install rubygems rubygem-bundler ruby ruby-devel -yGo into the **Packstack** root directory.::   $ cd packstack/A ``Rakefile`` contains all you need to run puppet-lint taskautomatically over all the puppet manifests included in the**Packstack** project.::   $ ls -l packstack/puppet/templates/and::   $ ls -l packstack/puppet/modules/The default puppet-lint pattern for ``.pp`` files is ``**/*.pp``. Sothere is no need to go inside those directories to run puppet-lint !::   $ mkdir vendor   $ export GEM_HOME=vendor   $ bundle install   $ bundle exec rake lintPackstack integration tests---------------------------Packstack is integration tested in the OpenStack gate and provides themeans to reproduce these tests on your environment if you wish.Scenario000 installs packstack allinone only and doesn’t run any tests.This is the current matrix of available tests:============== =========== =========== =========== ===========-              scenario000 scenario001 scenario002 scenario003============== =========== =========== =========== ===========keystone       FERNET      FERNET      FERNET      FERNETglance                     file        swift       filenova           X           X           X           Xneutron        X           X           X           Xneutron plugin ovn         ovn         ovs         ovnvpnaas                                            cinder         X           X                      ceilometer     X                                   Xaodh           X                                   Xgnocchi        X                                   Xheat                                               Xswift          X                       X          sahara                                 X          trove                                  X          horizon                    X                      manila                     X                      SSL                        X                      ============== =========== =========== =========== ===========To run these tests:::   export SCENARIO=&quot;scenario001&quot;   ./run_tests.shrun_tests.sh will take care of installing the required dependencies,configure packstack to run according to the above matrix and run thecomplete installation process. If the installation is successful,tempest will also run smoke tests.By default, run_tests.sh will set up delorean (RDO Trunk) repositories.There are two ways of overriding default repositories:::   export DELOREAN=&quot;http://someotherdomain.tld/delorean.repo&quot;   export DELOREAN_DEPS=&quot;http://someotherdomain.tld/delorean-deps.repo&quot;   ./run_tests.shYou can also choose to disable repository management entirely:::   &lt;setup your own custom repositories here&gt;   export MANAGE_REPOS=&quot;false&quot;   ./run_tests.sh</longdescription>
</pkgmetadata>