<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===================================Palo Alto Networks Cloud Python SDK===================================Python idiomatic SDK for the Palo Alto Networks Application Framework.The Palo Alto Networks Cloud Python SDK (or `pancloud` for short) was created to assist developers withprogrammatically interacting with the Palo Alto Networks Application Framework.The primary goal is to provide full, low-level API coverage for the following Application Framework services:    - Logging Service    - Directory Sync Service    - Event ServiceThe secondary goal is to provide coverage, in the form of helpers, for common tasks/operations.    - Log/event pagination    - OAuth 2.0 and token refreshing    - More, coming soon!* Documentation: https://pancloud.readthedocs.io* Free software: ISC license-----|requests| |pipenv| |pypi| |travis| |docs|-----Features--------- HTTP client wrapper for the popular Requests library with full access to its features.- Language bindings for Logging Service, Event Service and Directory Sync Service.- Helper methods for performing common tasks, such as log/event pagination.- Support for OAuth 2.0 grant code authorization flow.- Library of example scripts illustrating how to leverage `pancloud`.- Support for API Explorer Developer Tokens (Introduced in v1.5.0).Status------The Palo Alto Networks Cloud Python SDK is considered **production/stable** at this time.Installation------------From PyPI::    $ pip install pancloudInstall From GitHub-------------------Clone the repo::    $ git clone https://github.com/PaloAltoNetworks/pancloud.gitUse |pipenv| to install all dependencies and create a virtualenv for your project::    $ pipenv installYou can specify which python version to use by adding &quot;--two&quot; or &quot;--three&quot;::    $ pipenv --three installActivate the pipenv shell::    $ pipenv shellObtaining and Using OAuth 2.0 Tokens------------------------------------Work with your Developer Relations representative to register yourapplication and receive the credentials needed to obtain an `access_token`.Normally, this requires a `client_id`, `client_secret`, and `refresh_token`.API Explorer may optionally be used to generate a Developer Token, which canbe used in place of the `client_id`, `client_secret`, and `refresh_token`.For more information visit the following RTD page: `Credentials &lt;https://pancloud.readthedocs.io/en/latest/guides/credentials.html&gt;`__Example-------The following example assumes valid credentials are present::    $ ./logging_query.py    QUERY: {&quot;queryId&quot;:&quot;59801207-9a75-49c1-9f87-a2aa23f55774&quot;,&quot;sequenceNo&quot;:0,&quot;queryStatus&quot;:&quot;RUNNING&quot;,&quot;clientParameters&quot;:{},&quot;result&quot;:{&quot;esResult&quot;:null,&quot;esQuery&quot;:{&quot;table&quot;:[&quot;panw.traffic&quot;],&quot;query&quot;:{&quot;aggregations&quot;:{},&quot;size&quot;:1},&quot;selections&quot;:[],&quot;params&quot;:{}}}}    JOB_FINISHED: queryId: 59801207-9a75-49c1-9f87-a2aa23f55774, sequenceNo: 0, retrieving from 0, size: 1, took: 117 ms    RESULT: {&quot;queryId&quot;:&quot;59801207-9a75-49c1-9f87-a2aa23f55774&quot;,&quot;sequenceNo&quot;:0,&quot;queryStatus&quot;:&quot;JOB_FINISHED&quot;,&quot;clientParameters&quot;:{},&quot;result&quot;:{&quot;esResult&quot;:{&quot;took&quot;:117,&quot;hits&quot;:{&quot;total&quot;:1878954,&quot;maxScore&quot;:2,&quot;hits&quot;:[{&quot;_index&quot;:&quot;117270009_panw.all_2018042400-2018062300_000000&quot;,&quot;_type&quot;:&quot;traffic&quot;,&quot;_id&quot;:&quot;117270009_lcaas:0:149314:0&quot;,&quot;_score&quot;:2,&quot;_source&quot;:{&quot;risk-of-app&quot;:&quot;4&quot;,&quot;logset&quot;:&quot;ForwardToLoggingService&quot;,&quot;bytes_received&quot;:14882,&quot;natsport&quot;:53295,&quot;sessionid&quot;:806912,&quot;type&quot;:&quot;traffic&quot;,&quot;parent_start_time&quot;:0,&quot;packets&quot;:30,&quot;characteristic-of-app&quot;:[&quot;able-to-transfer-file&quot;,&quot;has-known-vulnerability&quot;,&quot;tunnel-other-application&quot;,&quot;prone-to-misuse&quot;,&quot;is-saas&quot;],&quot;dg_hier_level_4&quot;:0,&quot;dg_hier_level_1&quot;:11,&quot;dg_hier_level_3&quot;:0,&quot;dg_hier_level_2&quot;:0,&quot;action&quot;:&quot;allow&quot;,&quot;recsize&quot;:1622,&quot;from&quot;:&quot;L3-Trust&quot;,&quot;parent_session_id&quot;:0,&quot;repeatcnt&quot;:1,&quot;app&quot;:&quot;web-browsing&quot;,&quot;vsys&quot;:&quot;vsys1&quot;,&quot;nat&quot;:1,&quot;technology-of-app&quot;:&quot;browser-based&quot;,&quot;pkts_received&quot;:17,&quot;chunks_sent&quot;:0,&quot;receive_time&quot;:1524893357,&quot;non-standard-dport&quot;:443,&quot;subcategory-of-app&quot;:&quot;internet-utility&quot;,&quot;chunks_received&quot;:0,&quot;users&quot;:&quot;panwdomain\\user1&quot;,&quot;srcuser&quot;:&quot;panwdomain\\user1&quot;,&quot;proxy&quot;:1,&quot;fwd&quot;:1,&quot;config_ver&quot;:2049,&quot;cloud_hostname&quot;:&quot;sample-cft-fw&quot;,&quot;customer-id&quot;:&quot;117270009&quot;,&quot;proto&quot;:&quot;tcp&quot;,&quot;non_std_dport&quot;:1,&quot;tunneled-app&quot;:&quot;tunneled-app&quot;,&quot;is-saas-of-app&quot;:0,&quot;natdport&quot;:443,&quot;action_source&quot;:&quot;from-policy&quot;,&quot;assoc_id&quot;:0,&quot;dst&quot;:&quot;66.135.212.201&quot;,&quot;natdst&quot;:&quot;66.135.212.201&quot;,&quot;chunks&quot;:0,&quot;flags&quot;:22020208,&quot;rule&quot;:&quot;Allow Outbound Browsing&quot;,&quot;dport&quot;:443,&quot;elapsed&quot;:0,&quot;sanctioned-state-of-app&quot;:0,&quot;inbound_if&quot;:&quot;ethernet1/2&quot;,&quot;device_name&quot;:&quot;sample-cft-fw&quot;,&quot;subtype&quot;:&quot;end&quot;,&quot;time_received&quot;:1524893357,&quot;actionflags&quot;:-9223372036854776000,&quot;tunnelid_imsi&quot;:0,&quot;session_end_reason&quot;:&quot;tcp-fin&quot;,&quot;natsrc&quot;:&quot;10.0.0.100&quot;,&quot;seqno&quot;:1633879,&quot;src&quot;:&quot;10.0.1.101&quot;,&quot;start&quot;:1524893341,&quot;time_generated&quot;:1524893357,&quot;outbound_if&quot;:&quot;ethernet1/1&quot;,&quot;category-of-app&quot;:&quot;general-internet&quot;,&quot;bytes_sent&quot;:2152,&quot;srcloc&quot;:&quot;10.0.0.0-10.255.255.255&quot;,&quot;pkts_sent&quot;:13,&quot;dstloc&quot;:&quot;US&quot;,&quot;serial&quot;:&quot;&quot;,&quot;bytes&quot;:17034,&quot;vsys_id&quot;:1,&quot;to&quot;:&quot;L3-Untrust&quot;,&quot;category&quot;:&quot;10006&quot;,&quot;sport&quot;:33562,&quot;tunnel&quot;:0}}]},&quot;id&quot;:&quot;59801207-9a75-49c1-9f87-a2aa23f55774&quot;,&quot;from&quot;:0,&quot;size&quot;:1,&quot;completed&quot;:true,&quot;state&quot;:&quot;COMPLETED&quot;,&quot;timed_out&quot;:false},&quot;esQuery&quot;:{&quot;table&quot;:[&quot;panw.traffic&quot;],&quot;query&quot;:{&quot;aggregations&quot;:{},&quot;size&quot;:1},&quot;selections&quot;:[],&quot;params&quot;:{}}}}    DELETE: {&quot;success&quot;:true}Contributors------------- Kevin Steves - `github &lt;https://github.com/kevinsteves&gt;`__- Steven Serrata - `github &lt;https://github.com/sserrata&gt;`__.. |pypi| image:: https://img.shields.io/pypi/pyversions/pancloud.svg        :target: https://pypi.python.org/pypi/pancloud.. |travis| image:: https://img.shields.io/travis/PaloAltoNetworks/pancloud.svg        :target: https://travis-ci.org/PaloAltoNetworks/pancloud.. |docs| image:: https://readthedocs.org/projects/pancloud/badge/?version=latest        :target: https://pancloud.readthedocs.io/en/latest/?badge=latest        :alt: Documentation Status.. |requests| image:: https://img.shields.io/badge/docs-requests-blue.svg    :target: http://docs.python-requests.org/en/master    :alt: Documentation Status.. |pipenv| image:: https://img.shields.io/badge/docs-pipenv-green.svg    :target: https://docs.pipenv.org    :alt: Documentation Status=======History=======1.5.1 (2019-04-26)------------------* Updated Pipfile.lock.* Replaced recursion with loop pattern in `LoggingService` `xpoll()` method.* Added `decode('utf-8')` to base64 decoded JWT to ensure compatibility with `json.loads()`.* Addressed minor typos in docs.1.5.0 (2019-02-27)------------------* Added `flush()` method to `EventService` class.* Added `auto_refresh` support to `HTTPClient` `_apply_credentials()` method.* Removed `auto_retry` feature from `HTTPClient` class.* Refactored `HTTPClient` class `request()` method keyword argument overrides.* Removed unused `token_revoke_url` keyword argument.* Added support for API Explorer Developer Tokens to `Credentials` class.* Refactored `Credentials` `refresh()` method.1.4.0 (2018-10-04)------------------* Added default URL to `HTTPClient` class.* Updated docstrings for `StorageAdapter`, `TinyDBStore` and `Credentials` classes.* Now returning `state` as `str` instead of `UUID` in `get_authorization_url()` method.* Now unifying display results for -m/-s/--write. For -m you now need an output specifier (-j/-p) to print the response.* Added `decode_jwt_payload()` method to allow for extracting/using all JWT fields.* Added -s option to allow for invocation of setter methods. This allows modifying of credential store fields.* Added credential setters to allow for modifying credentials.* Updated examples.* Switched from using `requests` to `HTTPClient` in `Credentials` class.* Now checking JWT access_token `exp` to determine if refresh if needed.* Now generating a new `state` each time `get_authorization_url()` is called.* Added `__repr__` to `Credentials` class with support for masking secrets.* Updated -E --ack,nack,poll options usage to be accurate.* `JOB_FAILED` response in `xpoll()` queryStatus now includes errorCode.1.3.0 (2018-08-04)------------------* Added support for custom read/write credentials path.* `TinyDBStore` `fetch_credential()` now returns `None` instead of empty `str`.* Fixed bug that caused `_resolve_credential()` to be executed an inefficient number of times.* Now updating `HTTPClient` headers instead of overriding them which previously broke HTTP persistence.* Added JMESPath `isotime()` function to `summit.py` which prints epoch.* Added argument to `EventService` `xpoll()` method to support sleeping between polls.* Added `PAN_` prefix to envars to avoid name collisions.* Fixed bug when `R['R1_obj']['LoggingService.query']` is None and allow json=None case with special case of --end -1 which will not set a default end of now.* Fixed bug that nulled out credentials if an error occurred during a `fetch_tokens()` or `refresh()` operation.* Now enforcing strict credential resolution. Previous behavior allowed for merging credentials from different providers.* Added support for caching `refresh_token` to support rolling.* Added support for writing logs to `summit.py`.* Switch from using `data` param to `json` param in client/service methods.* Now defaulting `R1` to `None` so don't send body unless specified.* Now printing request headers and body at debug level 3 in `summit.py`.* Added enhancements to `summit.py` for specifying `startTime` and `endTime`.1.2.3 (2018-06-21)------------------* Reversed the `access_token` lookup order in get_credentials() method.* Added `_resolve_credential()` to `access_token()` property method to support token caching.* Now comparing passed `access_token` in `refresh()` method to value returned by property method.1.2.2 (2018-06-20)------------------* Added pancloud.adapters to find_packages include list to resolve issue with PyPI package.1.2.1 (2018-06-20)------------------* Added requirements.txt to MANIFEST.in to address build issues with PyPI package.* Fixed issue in README.rst that prevented PyPI from properly rendering.1.2.0 (2018-06-20)------------------* Updated README.rst* Updated RTD API Reference.* Added `pancloud` to requirements_dev.txt* Added docstrings to `Credentials` property methods.* Changed logging xpoll() to return entire log entry instead of just `_source` dictionary.* Added `Credentials` Storage Adapter feature and moved `TinyDB` code to `tinydb_adapter.py`, the default storage adapter.* Automatically carry `queryId` from `logging --query` response to `--id` in subsequent `--poll`, `--xpoll` and `--delete` in `summit.py`.* Various bug fixes and improvements to `summit.py`.* Added support for caching `access_token` in credentials store.* Added `write()` method to `LoggingService` class to support writing logs.* Fixed issues with `Credentials` `get_authorization_url` and `fetch_tokens` methods.* Added `logging_write.py` to examples.1.1.0 (2018-05-08)------------------* Updated logging `xpoll()` to reflect behavior of current API.* Added `credentials.py` module to support OAuth2 operations.* Added `auto_refresh` and `auto_retry` support to `HTTPClient()`.* Added `PartialCredentialsError` exception to handle cases where incomplete credentials are passed to `Credentials`.* Removed extraneous dependencies, e.g. pyopenssl.* Cleaned up requirements.txt and PipLock files.* Added `TinyDB` package for reading/writing `credentials.json` file.* Now raising `PanCloudError` for `enforce_json` errors.* Removed logging `poll_all()` method and example script.* Now checking if `sequence_no` is `None` before incrementing in logging `iter_poll()` method.* Added event `xpoll()` method to support iterating through events.* Introducing `summit.py`, a command-line interface for `pancloud`.* Added `credentials` support to `summit.py` to enable writing `credentials.json` file and passing `Credentials` with requests.* Updated example scripts library to incorporate new credentials feature.1.0.3 (2018-04-26)------------------* Overhauled and updated RTDs* Updated `__init__.py` to allow package-level imports* Fixed issue where starrifying authorization token in `__repr__` overrode value in request header.1.0.2 (2018-03-20)------------------* Updated .gitignore to exclude .pytest_cache* Excluding certain functions/classes from tests until API Gateway is ready* Renamed tests modules to all lowercase* Bumped version to 1.0.2 from 1.0.1* Updated 'query' and 'poll' endpoints to reflect current working state of APIs* Fixed .travis.yml branch regex* Updated example scripts* Removed pyopenssl property method from HTTPClient* Removed test_repr() as not all tested python versions support ordered kwargs1.0.1 (2018-03-19)------------------* Default to empty `path`1.0.0 (2018-03-16)------------------* First release.</longdescription>
</pkgmetadata>