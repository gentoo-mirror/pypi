<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Unicorn Herder==============.. image:: https://secure.travis-ci.org/gds-operations/unicornherder.png   :target: http://travis-ci.org/gds-operations/unicornherder`Unicorn &lt;http://unicorn.bogomips.org/&gt;`_ and `Gunicorn&lt;http://gunicorn.org/&gt;`_ are awesome tools for people writing web services inRuby and Python. One of the more nifty features of both programs is theirability to reload application code on-the-fly, by spawning a new masterprocess (or &quot;arbiter&quot;, in Gunicorn's language) in response to an operatingsystem signal (SIGUSR2). Unfortunately, this reloading process is incompatiblewith process-tracking supervisors such as `Upstart&lt;http://upstart.ubuntu.com/&gt;`_, because the old master process dies as part ofthe reload.Unicorn Herder is a utility designed to assist in the use of Upstart andsimilar supervisors with Unicorn. It does this by polling the pidfile writtenby the Unicorn master process, and automating the sequence of signals thatmust be sent to the master to do a &quot;hot-reload&quot;. If Unicorn quits, so will theUnicorn Herder, meaning that if you supervise the herder (which does notdaemonize), you are effectively supervising the Unicorn process.Installation------------Unicorn Herder is available from the `Python Package Index&lt;http://pypi.python.org/&gt;`_, and can be installed with `pip&lt;http://pipinstaller.org/&gt;`_::    $ pip install unicornherderUsage-----With gunicorn::    $ unicornherder -- -w 4 myapp:appWith unicorn (using `Bundler &lt;http://gembundler.com&gt;`_)::    $ bundle exec unicornherder -u unicornSignals-------Unicorn Herder forwards the following signals to the unicorn master process::    INT QUIT TERM TTIN TTOU USR1 USR2Notably, Unicorn Herder does *not* forward ``SIGWINCH``, because it is notintended to be daemonized.Unicorn Herder *also* intercepts ``SIGHUP``, because this is the signal sent byUpstart when you call ``initctl reload``, and uses it to trigger a hot-reload ofits Unicorn instance. This process will take two minutes by default, in order togive the new workers time to start up.**NB**: There will be a period during hot-reload when requests are served byboth old and new workers. This might have serious implications if you arerunning data migrations between deploying versions of your application. Pleasebear this in mind when deciding if you should use Unicorn Herder'shot-reloading feature.This diagram shows the interactions between unicornherder and (g)unicorn mastersat boot and around hot-reloading with HUP (ignoring workers):.. image:: unicornherder-diagram.jpegUpstart config--------------An example upstart config (compatible with Upstart v1.4 and later) for usewith Unicorn Herder is given below::    description &quot;Unicorn Herder&quot;    start on runlevel [2345]    stop on runlevel [!2345]    respawn    respawn limit 5 20    env PORT=4567    setuid www    setgid www    chdir /var/apps/myapp    exec bundle exec unicornherder -u unicorn -- --port $PORT    # Or, for a gunicorn installation with a virtualenv    # at /var/venv/myapp...    #script    #  . /var/venv/myapp/bin/activate    #  exec unicornherder -- -w 4 -b &quot;127.0.0.1:$PORT&quot; myapp:app    #end scriptDiscussion----------You can discuss this tool with our open source mailing list: gds-operations-open-source@digital.cabinet-office.gov.ukLicense-------Unicorn Herder is released under the MIT license, a copy of which can be foundin ``LICENSE``.Uploading---------To upload a new version of ``unicornherder`` to PyPI, you can follow theseinstructions:    $ python setup.py sdist    $ pip install twine    $ twine upload dist/*The credentials for the GDS PyPI account are available in govuk-secrets.</longdescription>
</pkgmetadata>