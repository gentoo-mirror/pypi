<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>``iso_4217``: Yet another currency data package for Python==========================================================.. image:: https://github.com/ikseek/iso_4217/workflows/Python%20package/badge.svg.. image:: https://img.shields.io/pypi/v/iso-4217?style=plastic   :target: https://pypi.org/project/iso-4217/This package contains ISO 4217 *active* and *historical* currency data.Written and tested for Python 3.6 and above.Supports `pint`_ for operations with currency units.&gt;&gt;&gt; from iso_4217 import Currency&gt;&gt;&gt; Currency.USD&lt;Currency.USD: 'US Dollar'&gt;&gt;&gt;&gt; Currency.USD.value'US Dollar'&gt;&gt;&gt; Currency.USD.number840&gt;&gt;&gt; Currency('US Dollar')&lt;Currency.USD: 'US Dollar'&gt;&gt;&gt;&gt; Currency.JPY.entitiesfrozenset({'JAPAN'})&gt;&gt;&gt; Currency.ZWR&lt;Currency.ZWR: 'Zimbabwe Dollar (2009)'&gt;&gt;&gt;&gt; Currency.ZWR.entitiesfrozenset()&gt;&gt;&gt; Currency.ZWR.withdrew_entities(Historic(entity='ZIMBABWE', name='Zimbabwe Dollar'...2009, month=6), begin=None)),)&gt;&gt;&gt; Currency.VED&lt;Currency.VED: 'Bol√≠var Soberano (VED)'&gt;Pint units and subunits are available with convenient :code:`unit` and :code:`subunit`properties on Currency. Accessing these properties requires `pint` package installedand automatically defines currency units in application default registry.&gt;&gt;&gt; Currency.USD.unit * 5 + Currency.USD.subunit * 5&lt;Quantity(5.05, 'USD')&gt;Currency units can be defined in any UnitRegistry manually&gt;&gt;&gt; import pint&gt;&gt;&gt; from decimal import Decimal&gt;&gt;&gt; from iso_4217 import define_currency_units&gt;&gt;&gt; reg = define_currency_units(pint.UnitRegistry(non_int_type=Decimal))&gt;&gt;&gt; 5 * reg.USD&lt;Quantity(5, 'USD')&gt;But units from separate registries should not be mixed&gt;&gt;&gt; Currency.USD.unit == reg.USDTraceback (most recent call last):...ValueError: Cannot operate with Unit and Unit of different registries.If you want to replace registry used by Currency just replace the application registry:&gt;&gt;&gt; pint.set_application_registry(reg)&gt;&gt;&gt; Currency.USD.unit == reg.USDTrueSubunits are defined with `s` suffix:&gt;&gt;&gt; 5 * reg.USDs&lt;Quantity(5, 'USDs')&gt;&gt;&gt;&gt; (5 * reg.USDs).to(&quot;USD&quot;)&lt;Quantity(0.05, 'USD')&gt;&gt;&gt;&gt; (5 * reg.BHDs).to_base_units()&lt;Quantity(0.005, 'BHD')&gt;Each currency is defined within it's own dimension:&gt;&gt;&gt; (5 * reg.USD).to('EUR')Traceback (most recent call last):...pint.errors.DimensionalityError: Cannot convert from 'USD' ([currency_USD]) to 'EUR' ([currency_EUR])But automatic currency conversion can be made via pint Contexts&gt;&gt;&gt; context = pint.Context()&gt;&gt;&gt; eur_to_usd = lambda r, eur: eur * r(&quot;1.2 USD/EUR&quot;)&gt;&gt;&gt; context.add_transformation(&quot;[currency_EUR]&quot;, &quot;[currency_USD]&quot;, eur_to_usd)&gt;&gt;&gt; (Currency.EUR.unit * 5).to('USD', context)&lt;Quantity(6.0, 'USD')&gt;Inspired by `iso4217`_ package by Hong Minhee... _iso4217: https://github.com/dahlia/iso4217.. _pint: https://pint.readthedocs.io</longdescription>
</pkgmetadata>