<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Directory Tree Package[![Setup Automated](https://img.shields.io/badge/setup-automated-blue?logo=gitpod)](https://gitpod.io/from-referrer/)![Test passing](https://img.shields.io/badge/Tests-passing-brightgreen.svg)![Python Version](https://img.shields.io/badge/python-3.6+-brightgreen.svg)[![PyPI version](https://badge.fury.io/py/directory-tree.svg)](https://badge.fury.io/py/directory-tree)![Last Commit](https://img.shields.io/github/last-commit/rahulbordoloi/Directory-Tree?style=flat-square)[![Open Source Love png2](https://badges.frapsoft.com/os/v2/open-source.png?v=103)](https://github.com/ellerbrock/open-source-badges/)## About Want to Display your Project/Current Working Directory as a Neat Tree? No Worries!`Directory Tree` is a simple python utility package that displays out the Tree Structure of a User Defined Directory.&lt;b&gt;&lt;i&gt; Currently Available for All Platforms.  &lt;/i&gt;&lt;/b&gt;## InstallationRun the Following Command on your Terminal to Install `directory_tree`: 1 .  Installing the Package using `pip`:```bashpip install directory_tree```OR```bashpip3 install directory_tree```2 . Cloning the Repository:```bashgit clone https://github.com/rahulbordoloi/Directory-Tree/cd Directory-Treepip install -e .```## Usage&lt;h4&gt; Function Signature &lt;/h4&gt;```pythondisplay_tree(dir_path: str = '', string_rep: bool = False, header: bool = False, max_depth: float = float(&quot;inf&quot;), show_hidden: bool = False)```&lt;h4&gt; Arguments Description &lt;/h4&gt;| __Parameters__ | __Description__                                                                                                 ||    ---         |-----------------------------------------------------------------------------------------------------------------|| __dir_path__ | Root Path of Operation. By Default, Refers to the Current Working Directory.                                    || __string_rep__ | Boolean Flag for Direct Console Output or a String Return of the Same. By Default, It Gives out Console Output. || __header__ | Boolean Flag for Displaying [OS &amp; Directory Path] Info in the Console. Not Applicable if `string_rep=True`.     || __max_depth__ | Max Depth of the Directory Tree. By Default, It goes upto the Deepest Directory/File.                           || __show_hidden__ | Boolean Flag for Returning/Displaying Hidden Files/Directories if Value Set to `True`.               |Run this Script in Order to Print out the Tree Structure of a User-Defined Directory `DirectoryPath`!```python# Importing Librariesfrom directory_tree import display_tree# Main Methodif __name__ == '__main__':    display_tree(DirectoryPath)```*   Here by default, the `DirectoryPath` is the current working directory (CWD) unless specified by the user.## Output ExamplesSample Directory Tree -![SampleDirectoryTree.png](https://github.com/rahulbordoloi/Directory-Tree/blob/main/images/SampleDirectoryTree.png?raw=true)NOTE - Here, `letseee.txt` (File) and `Directory 4/` (Directory) are **HIDDEN** in Nature.1. For &lt;i&gt;Current Working Directory&lt;/i&gt; with Argument [Header Info = `False`]```pythonfrom directory_tree import display_treedisplay_tree(header=True)```![CWDwithHeader.png](https://github.com/rahulbordoloi/Directory-Tree/blob/main/images/CWDwithHeader.png?raw=true)2. For &lt;i&gt;User Specified Directory&lt;/i&gt; with Arguments [String Representation = `True`, Show Hidden Entities = `True`]```pythonfrom directory_tree import display_treecustomPath = 'D:\Work\Python Packages Maintainence\Directory-Tree\Test\Main Directory'stringRepresentation = display_tree(customPath, string_rep=True, show_hidden=True)print(stringRepresentation)```![UserSpecifiedDirectoryStrRepShowHidden.png](https://github.com/rahulbordoloi/Directory-Tree/blob/main/images/UserSpecifiedDirectoryStrRepShowHidden.png?raw=true)3. For &lt;i&gt;Current Working Directory&lt;/i&gt; with Argument [Max Depth = `2`]```pythonfrom directory_tree import display_treedisplay_tree(max_depth=2)```![UserSpecifiedDirectoryMaxDep.png](https://github.com/rahulbordoloi/Directory-Tree/blob/main/images/UserSpecifiedDirectoryMaxDep.png?raw=true)## Developing `Directory Tree`To install `directory_tree`, along with the tools you need to develop and run tests, and execute the following in your virtualenv:```bash$ pip install -e .[dev]```## Security &amp; Probable Bugs*   `Directory Tree` uses recursion. It will raise a `RecursionError` on really deep directory trees.*   As the tree is lazily evaluated, it should behave well on really wide directory trees. Immediate children of a given directory are not lazily evaluated, though. It would be prompted to the last.*   If you're a Windows user, it is always advised to use `\\` instead of `\` in the address as using `\` might catchup escape sequences and corrupt the address string.## Contact AuthorName : __Rahul Bordoloi__ &lt;br&gt;Website : https://rahulbordoloi.me &lt;br&gt;Email : rahulbordoloi24@gmail.com &lt;br&gt;[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)[![ForTheBadge built-with-love](http://ForTheBadge.com/images/badges/built-with-love.svg)](https://github.com/rahulbordoloi/)</longdescription>
</pkgmetadata>