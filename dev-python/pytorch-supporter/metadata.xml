<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pytorch-supporterhttps://pypi.org/project/pytorch-supporter&lt;pre&gt;pip install pytorch-supporter&lt;/pre&gt;Supported layers&lt;pre&gt;import pytorch_supporterpytorch_supporter.layers.DictToParameterspytorch_supporter.layers.DotProductpytorch_supporter.layers.GRULastHiddenStatepytorch_supporter.layers.HiddenStateResetGRUpytorch_supporter.layers.HiddenStateResetLSTMpytorch_supporter.layers.HiddenStateResetRNNpytorch_supporter.layers.LazilyInitializedLinearpytorch_supporter.layers.LSTMLastHiddenStatepytorch_supporter.layers.Reshapepytorch_supporter.layers.RNNLastHiddenStatepytorch_supporter.layers.SelectFromArray&lt;/pre&gt;Supported utils&lt;pre&gt;import pytorch_supportertext = ''pytorch_supporter.utils.clean_english(text)pytorch_supporter.utils.clean_korean(text)&lt;/pre&gt;Simple time series regression&lt;pre&gt;import pytorch_supporterfrom sklearn.preprocessing import MinMaxScalertransformer = MinMaxScaler()transformer.fit(train_df[['Close']].to_numpy())train_np_array = transformer.transform(validation_df[['Close']].to_numpy())#window_length = sequence_length + 1train_x, train_label = pytorch_supporter.utils.slice_time_series_data_from_np_array(train_np_array, x_column_indexes=[0], label_column_indexes=[0], sequence_length=7)#print(train_x.shape) #(973, 7, 1)#print(train_labels.shape) #(973, 1)#print(validation_x.shape) #(238, 7, 1)#print(validation_labels.shape) #(238, 1)&lt;/pre&gt;Multiple time series regression&lt;pre&gt;import pytorch_supporterfrom sklearn.preprocessing import MinMaxScalertransformer = MinMaxScaler()transformer.fit(train_df[['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']].to_numpy())train_np_array = transformer.transform(validation_df[['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']].to_numpy())#window_length = sequence_length + 1train_x, train_label = pytorch_supporter.utils.slice_time_series_data_from_np_array(train_np_array, x_column_indexes=[0, 1, 2, 3, 4, 5], label_column_indexes=[3], sequence_length=7)#print(train_x.shape) #(973, 7, 6)#print(train_labels.shape) #(973, 1)#print(validation_x.shape) #(238, 7, 6)#print(validation_labels.shape) #(238, 1)&lt;/pre&gt;</longdescription>
</pkgmetadata>