<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># *stamina*: Production-grade Retries Made EasyTransient failures are common in distributed systems.To make your systems resilient, you need to **retry** failed operations.But bad retries can make things *much worse*.*stamina* is an opinionated wrapper around the *great-but-unopinionated* [Tenacity](https://tenacity.readthedocs.io/) package.Its goal is to be as ergonomic as possible, while doing the right thing by default, while minimizing potential for misuse.It is the result of years of copy-pasting the same configuration over and over again:- Retry only on certain exceptions.- Exponential backoff with _jitter_ between retries.- Limit the number of retries **and** total time.- Automatic **async** support.- Preserve **type hints** of the decorated callable.- Count ([Prometheus](https://github.com/prometheus/client_python)) and log ([*structlog*](https://www.structlog.org/)) retries with basic metadata, if they're installed.- Easy _global_ deactivation for testing.For example:```pythonimport httpximport stamina@stamina.retry(on=httpx.HTTPError, attempts=3)def do_it(code: int) -&gt; httpx.Response:    resp = httpx.get(f&quot;https://httpbin.org/status/{code}&quot;)    resp.raise_for_status()    return resp```**Async** callables work use the same API and it's possible to retry **arbitrary blocks**, too.Please refer to our [tutorial](https://stamina.hynek.me/en/latest/tutorial.html) for more examples.## Release Information### Added- Official Python 3.12 support.  [#9](https://github.com/hynek/stamina/pull/9)- Async support.  [#10](https://github.com/hynek/stamina/pull/10)- Retries of arbitrary blocks using (async) `for` loops and context managers.  [#12](https://github.com/hynek/stamina/pull/12)- Proper documentation.  [#16](https://github.com/hynek/stamina/pull/16)- A backwards-compatibility policy.### Changed- The *timeout*, *wait_initial*, *wait_max*, and *wait_jitter* arguments can now also be of type [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta).---[â†’ Full Changelog](https://github.com/hynek/stamina/blob/main/CHANGELOG.md)</longdescription>
</pkgmetadata>