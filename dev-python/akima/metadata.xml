<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Akima Interpolation===================Akima is a Python library that implements Akima's interpolation methoddescribed in:    A new method of interpolation and smooth curve fitting based    on local procedures. Hiroshi Akima, J. ACM, October 1970, 17(4), 589-602.A continuously differentiable sub-spline is built from piecewise cubicpolynomials. It passes through the given data points and will appear smoothand natural.This module is no longer being actively developed. Consider using`scipy.interpolate.Akima1DInterpolator&lt;http://docs.scipy.org/doc/scipy/reference/interpolate.html&gt;`_ instead.:Author: `Christoph Gohlke &lt;https://www.cgohlke.com&gt;`_:License: BSD 3-Clause:Version: 2022.9.12Requirements------------This release has been tested with the following requirements and dependencies(other versions may work):- `CPython 3.8.10, 3.9.13, 3.10.7, 3.11.0rc2 &lt;https://www.python.org&gt;`_- `NumPy 1.22.4 &lt;https://pypi.org/project/numpy/&gt;`_Revisions---------2022.9.12- Remove support for Python 3.7 (NEP 29).- Update metadata.Examples--------&gt;&gt;&gt; from matplotlib import pyplot&gt;&gt;&gt; from scipy.interpolate import Akima1DInterpolator&gt;&gt;&gt; def example():...     '''Plot interpolated Gaussian noise.'''...     x = numpy.sort(numpy.random.random(10) * 100)...     y = numpy.random.normal(0.0, 0.1, size=len(x))...     x2 = numpy.arange(x[0], x[-1], 0.05)...     y2 = interpolate(x, y, x2)...     y3 = Akima1DInterpolator(x, y)(x2)...     pyplot.title('Akima interpolation of Gaussian noise')...     pyplot.plot(x2, y2, 'r-', label='akima')...     pyplot.plot(x2, y3, 'b:', label='scipy', linewidth=2.5)...     pyplot.plot(x, y, 'go', label='data')...     pyplot.legend()...     pyplot.show()&gt;&gt;&gt; example()</longdescription>
</pkgmetadata>