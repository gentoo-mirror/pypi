<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Green Pass Verifier[![Codacy Badge](https://app.codacy.com/project/badge/Grade/575c0631970a4d9a994f18b416e0eefc)](https://www.codacy.com/gh/berdav/greenpass/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=berdav/greenpass&amp;amp;utm_campaign=Badge_Grade)[![Codacy Badge Coverage](https://app.codacy.com/project/badge/Coverage/575c0631970a4d9a994f18b416e0eefc)](https://www.codacy.com/gh/berdav/greenpass/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=berdav/greenpass&amp;amp;utm_campaign=Badge_Coverage)![Github Action Workflow](https://github.com/berdav/greenpass/actions/workflows/github-actions-test-greenpass.yml/badge.svg)[![PyPi greenpass](https://badgen.net/pypi/v/greenpass/)](https://pypi.org/project/greenpass/)[![Docker greenpass](https://badgen.net/badge/icon/docker?icon=docker&amp;label)](https://hub.docker.com/r/berdav/greenpass)![A verified green pass](https://github.com/berdav/greenpass/blob/master/img/draghi.png?raw=true)Scriptable green pass verifier.With this application you can automatize accesses based on green pass validity.It can also be used to analyze your digital certification (e.g. to printwhich key was used to sign the certificate, `--verbose`).It is compatibile with EU certificates (DGC) and UK certificate (NHS).## InstallationYou need to have pip and libzbar to install the application.You can install it using your favorite package manager, for instance in Ubuntu:```bashsudo apt install python3-pip libzbar0```You can just install the application using pip:```bashpip install greenpass```If you want to install it from sources, install the python3 requirementsusing the following command:```bashpip3 install -r requirements.txt```You can also use it through the pre-built Docker image, you can find it[here](https://hub.docker.com/r/berdav/greenpass).  You can easily useit using:```bashsudo docker run --rm -ti berdav/greenpass --settings```## UsageYou can feed the application with different file formats, for instance:Green pass official PDFs```bashgreenpass --pdf greenpass.pdf```QRCode images in PNG```bashgreenpass --qr greenpass.png```Txt files with the content of the qrcode```bashgreenpass --txt greenpass.txt```Standard input and pipes```bashzbarimg --raw greenpass.png | greenpass --txt -```On a side note, you can verify camera-acquired images if your scannerprints the raw content of the QRcode on stdout```bashzbarcam --raw -q1 | greenpass --txt -```The application returns an UNIX compatible code, therefore you canconcatenate commands that will be executed only if the green pass isverified.```bashgreenpass --qr greenpass.png &amp;&amp; echo &quot;green pass ok&quot;```You can also get the expiration configuration using `--settings` withoutother inputs.```bashgreenpass --settings```![Settings screen](https://github.com/berdav/greenpass/blob/master/img/settings.png?raw=true)Debug the cryptographic part of your greenpass```bashgreenpass --qr greenpass.png --dump-sign```Print the key which the greenpass was signed with```bashgreenpass --qr greenpass.png --verbose --no-cache```Check if a greenpass was valid or will be valid on a certain date```bashgreenpass --qr greenpass.png --at-date '2021-10-30 18:34'```## Switches```bash-h --help```Help, print the help messageYou need to use one of:```bash--settings```Dump the settings used by the Italian application```bash--qr QR```Analyze the qrcode QR```bash--pdf PDF```Analyze the pdf file PDF```bash--txt TXT```Analyze the txt file TXTCaching options:```bash--cachedir CACHEDIR```Use CACHEDIR as the cache directory, by default the cache is placed in `$HOME/.local/greenpass`.Miscellaneous switches: ```bash--raw```Print the raw content (JSON) of the certificate```bash--no-color```Disable colored output.```bash--force-color```Force colored output. (useful in CMD on Windows)```bash--no-cache```Disable cache, download everything without saving it.```bash--clear-cache```Redownload the entire cache, useful to update settings.```bash--key KEY```Use the content of the file KEY as the public certificate (DGC) or the public key (NHS) toverify the certificate.```bash--verbose```Print more information (e.g. which key verifies the certificate).```bash--dump-sign```Print details on the headers and signature of the certificate.```bash--at-date AT_DATE ```Use AT_DATE instead of the current date```bash--recovery-expiration```The recovery certification contains an expiration date.  Bydefault this date is ignored, this switch re-enables the checkand consider this date (in addition to the settings date).```bash--batch```Remove all the outputs.```bash--language LANGUAGE```Localize the output in LANGUAGE.  Currently the following languages areavailable:*   English*   Italian*   German## Docker ContainerThe docker image shipped with the program can be used in the followingway:```bashzbarimg --raw qrcode.png | sudo docker -i greenpass```Read a PNG greenpass qrcode```bashsudo docker -i greenpass --settings```To read the settingsAnd virtually with all the switches you can find in the previoussection.  At the moment, files are not easily passed in the container,therefore it is better to process the qrcode or the pdf outside of thecontainer and extract the qrcode text to pass in the application.## PointersIf you want more information on the green pass certification and howto parse or verify it you can refer to the following resources:[Greenpass Encoding documentation](https://github.com/ehn-dcc-development/hcert-spec)[Official Italian Android application](https://github.com/ministero-salute/it-dgc-verificaC19-android )[JSON schema and specifications](https://ec.europa.eu/health/sites/default/files/ehealth/docs/covid-certificate_json_specification_en.pdf)[A very detailed blog post on how decode the pass](https://gir.st/blog/greenpass.html)</longdescription>
</pkgmetadata>