<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=======NSEnter=======.. image:: https://travis-ci.org/zalando/python-nsenter.svg?branch=master   :target: https://travis-ci.org/zalando/python-nsenter   :alt: Travis CI build statusThis Python package allows entering Linux kernel namespaces (mount, IPC, net, PID, user and UTS) by doing the &quot;setns&quot; syscall.The command line interface tries to be similar to the nsenter_ C program.Requires Python 2.6 or higherSee the introductory `blog post &quot;Entering Kernel Namespaces from Python&quot;`_.Install from PyPI::    sudo pip3 install nsenterInstall from git source::    python3 setup.py installExample command line usage::    docker run -d --name=redis -t redis    sudo nsenter --all --target=`docker inspect --format '{{ .State.Pid }}' redis` /bin/bashExample usage from Python:.. code:: python    import subprocess    from nsenter import Namespace    with Namespace(mypid, 'net'):        # output network interfaces as seen from within the mypid's net NS:        subprocess.check_output(['ip', 'a'])    # or enter an arbitrary namespace:    with Namespace('/var/run/netns/foo', 'net'):        # output network interfaces as seen from within the net NS &quot;foo&quot;:        subprocess.check_output(['ip', 'a']).. _nsenter: http://man7.org/linux/man-pages/man1/nsenter.1.html.. _blog post &quot;Entering Kernel Namespaces from Python&quot;: http://tech.zalando.com/posts/entering-kernel-namespaces-with-python.html</longdescription>
</pkgmetadata>