<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img alt=&quot;giskardlogo&quot; src=&quot;https://github.com/Giskard-AI/giskard/blob/9f9f9994ab5deb503ed9c64e672982432a493cca/readme/giskard_logo.png?raw=true&quot;&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot; weight='300' &gt;The testing framework dedicated to ML models, from tabular to LLMs&lt;/h1&gt;&lt;h3 align=&quot;center&quot; weight='300' &gt;Scan AI models to detect risks of biases, performance issues and errors. In 4 lines of code. &lt;/h3&gt;&lt;p align=&quot;center&quot;&gt;   &lt;a href=&quot;https://github.com/Giskard-AI/giskard/releases&quot;&gt;      &lt;img alt=&quot;GitHub release&quot; src=&quot;https://img.shields.io/github/v/release/Giskard-AI/giskard&quot;&gt;  &lt;/a&gt; &lt;a href=&quot;https://github.com/Giskard-AI/giskard/blob/main/LICENSE&quot;&gt;     &lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg&quot;&gt; &lt;/a&gt;  &lt;a href=&quot;https://github.com/Giskard-AI/giskard/actions/workflows/build.yml&quot;&gt;    &lt;img alt=&quot;build&quot; src=&quot;https://github.com/Giskard-AI/giskard/actions/workflows/build.yml/badge.svg?branch=main&quot;/&gt; &lt;/a&gt;  &lt;a href=&quot;https://gisk.ar/discord&quot;&gt;    &lt;img alt=&quot;Giskard on Discord&quot; src=&quot;https://img.shields.io/discord/939190303397666868?label=Discord&quot;/&gt;  &lt;/a&gt;  &lt;a rel=&quot;me&quot; href=&quot;https://fosstodon.org/@Giskard&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 align=&quot;center&quot;&gt;   &lt;a href=&quot;https://docs.giskard.ai/en/latest/getting-started/quickstart.html&quot;&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; &amp;bull;   &lt;a href=&quot;https://www.giskard.ai/knowledge-categories/blog/?utm_source=github&amp;utm_medium=github&amp;utm_campaign=github_readme&amp;utm_id=readmeblog&quot;&gt;&lt;b&gt;Blog&lt;/b&gt;&lt;/a&gt; &amp;bull;    &lt;a href=&quot;https://www.giskard.ai/?utm_source=github&amp;utm_medium=github&amp;utm_campaign=github_readme&amp;utm_id=readmeblog&quot;&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; &amp;bull;  &lt;a href=&quot;https://gisk.ar/discord&quot;&gt;&lt;b&gt;Discord Community&lt;/b&gt;&lt;/a&gt; &amp;bull;  &lt;a href=&quot;https://www.giskard.ai/about?utm_source=github&amp;utm_medium=github&amp;utm_campaign=github_readme&amp;utm_id=readmeblog#advisors&quot;&gt;&lt;b&gt;Advisors&lt;/b&gt;&lt;/a&gt; &lt;/h3&gt;&lt;br /&gt;## Table of contents1. [What is Giskard?](#what-is-giskard)2. [Getting started](#getting-started)  * [Installation](#installation)  * [Scan your model to detect vulnerabilities](#scan-your-model-to-detect-vulnerabilities)  * [Automatically generate a test suite](#automatically-generate-a-test-suite-based-on-the-scan-results)  * [Upload your test suite to the Giskard server](#upload-your-test-suite-to-the-giskard-server)3. [How to contribute](#how-to-contribute)4. [Like what we're doing?](#like-what-were-doing)&lt;div id=&quot;what-is-giskard&quot;&gt;## What is Giskard?**Giskard is an open-source testing framework dedicated to ML models, from tabular models to LLMs.**Testing Machine Learning applications can be tedious. Since ML models depend on data, testing scenarios depend on the domain specificities and are often infinite. &lt;p align=&quot;center&quot;&gt;&lt;strong&gt;Where to start testing? Which tests to implement? What issues to cover? How to implement the tests?&lt;/strong&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://giskard.readthedocs.io/en/latest/_images/hey.png&quot; alt=&quot;hey&quot; width=&quot;20%&quot;&gt;&lt;/p&gt;At Giskard, we believe that Machine Learning needs its own testing framework. Created by ML engineers for ML engineers, Giskard enables you to:- **Scan your model to find dozens of vulnerabilities**: The Giskard scan automatically detects vulnerability issues such as performance bias, data leakage, unrobustness, spurious correlation, overconfidence, underconfidence, unethical issue, etc.&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/Giskard-AI/giskard/blob/9f9f9994ab5deb503ed9c64e672982432a493cca/readme/scan_example.png?raw=true&quot; alt=&quot;Scan Example&quot; width=&quot;700px&quot;&gt;&lt;/p&gt;- **Instantaneously generate domain-specific tests**: Giskard automatically generates relevant tests based on the vulnerabilities detected by the scan. You can easily customize the tests depending on your use case by defining domain-specific data slicers and transformers as fixtures of your test suites.&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/Giskard-AI/giskard/blob/9f9f9994ab5deb503ed9c64e672982432a493cca/readme/test_suite_example.png?raw=true&quot; alt=&quot;Scan Example&quot; width=&quot;700px&quot;&gt;&lt;/p&gt;- **Leverage the Quality Assurance best practices of the open-source community**: The Giskard catalog enables you to easily contribute and load data slicing &amp; transformation functions such as AI-based detectors (toxicity, hate, etc.), generators (typos, paraphraser, etc.), or evaluators. Inspired by the Hugging Face philosophy, the aim of Giskard is to become the open-source hub of ML Quality Assurance.&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/Giskard-AI/giskard/blob/9f9f9994ab5deb503ed9c64e672982432a493cca/readme/catalog_example.png?raw=true&quot; alt=&quot;Scan Example&quot; width=&quot;700px&quot;&gt;&lt;/p&gt;And of course, Giskard works with any model, any environment and integrates seamlessly with your favorite tools ⤵️ &lt;br/&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img width='600' src=&quot;https://github.com/Giskard-AI/giskard/blob/9f9f9994ab5deb503ed9c64e672982432a493cca/readme/tools.png?raw=true&quot;&gt;&lt;/p&gt;&lt;br/&gt;&lt;/div&gt;&lt;div id=&quot;getting-started&quot;&gt;## Getting started&lt;div id=&quot;installation&quot;&gt;### Installation```shpip install &quot;giskard[server]&gt;=2.0.0b&quot; -Ugiskard server start```That's it. Access at http://localhost:19000&lt;/div&gt;&lt;div id=&quot;scan-your-model-to-detect-vulnerabilities&quot;&gt;### Scan your model to detect vulnerabilitiesAfter having wrapped your [model](https://docs.giskard.ai/en/latest/guides/wrap_model/index.html) &amp; [dataset](https://docs.giskard.ai/en/latest/guides/wrap_dataset/index.html), you can scan your model for vulnerabilities using:```pythonimport giskard# Replace this with your own data &amp; model creation.df = giskard.demo.titanic_df()data_preprocessor, clf = giskard.demo.titanic_pipeline()# Wrap your Pandas DataFrame with Giskard.Dataset (test set, a golden dataset, etc.). Check the dedicated doc page: https://docs.giskard.ai/en/latest/guides/wrap_dataset/index.htmlgiskard_dataset = giskard.Dataset(    df=df,  # A pandas.DataFrame that contains the raw data (before all the pre-processing steps) and the actual ground truth variable (target).    target=&quot;Survived&quot;,  # Ground truth variable    name=&quot;Titanic dataset&quot;, # Optional    cat_columns=['Pclass', 'Sex', &quot;SibSp&quot;, &quot;Parch&quot;, &quot;Embarked&quot;]  # Optional, but is a MUST if available. Inferred automatically if not.)# Wrap your model with Giskard.Model. Check the dedicated doc page: https://docs.giskard.ai/en/latest/guides/wrap_model/index.html# you can use any tabular, text or LLM models (PyTorch, HuggingFace, LangChain, etc.),# for classification, regression &amp; text generation.def prediction_function(df):    # The pre-processor can be a pipeline of one-hot encoding, imputer, scaler, etc.    preprocessed_df = data_preprocessor(df)    return clf.predict_proba(preprocessed_df)giskard_model = giskard.Model(    model=prediction_function,  # A prediction function that encapsulates all the data pre-processing steps and that could be executed with the dataset used by the scan.    model_type=&quot;classification&quot;,  # Either regression, classification or text_generation.    name=&quot;Titanic model&quot;,  # Optional    classification_labels=clf.classes_,  # Their order MUST be identical to the prediction_function's output order    feature_names=['PassengerId', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked'],  # Default: all columns of your dataset    # classification_threshold=0.5,  # Default: 0.5)# Then apply the scanresults = giskard.scan(giskard_model, giskard_dataset)```Once the scan completes, you can display the results directly in your notebook:```pythondisplay(scan_results)  # in your notebook```&lt;/div&gt;&lt;div id=&quot;automatically-generate-a-test-suite-based-on-the-scan-results&quot;&gt;### Automatically generate a test suite based on the scan resultsIf the scan found potential issues in your model, you can automatically generate a test suite.Generating a test suite from your scan results will enable you to:- Turn the issues you found into actionable tests that you can directly integrate in your CI/CD pipeline- Diagnose your vulnerabilities and debug the issues you found in the scan```pythontest_suite = scan_results.generate_test_suite(&quot;My first test suite&quot;)# You can run the test suite locally to verify that it reproduces the issuestest_suite.run()```&lt;/div&gt;&lt;div id=&quot;upload-your-test-suite-to-the-giskard-server&quot;&gt;### Upload your test suite to the Giskard serverYou can then upload the test suite to the local Giskard server. This will enable you to:- Compare the quality of different models to decide which one to promote- Debug your tests to diagnose the identified issues- Create more domain-specific tests relevant to your use case- Share results, and collaborate with your team to integrate business feedbackFirst, install the Giskard server by following [this documentation](https://docs.giskard.ai/en/latest/guides/installation_app/index.html)```python# Create a Giskard client after having installed the Giskard server (see documentation)token = &quot;API_TOKEN&quot;  # Find it in Settings in the Giskard serverclient = GiskardClient(    url=&quot;http://localhost:19000&quot;, token=token  # URL of your Giskard instance)my_project = client.create_project(&quot;my_project&quot;, &quot;PROJECT_NAME&quot;, &quot;DESCRIPTION&quot;)# Upload to the current projecttest_suite.upload(client, &quot;my_project&quot;)```    For more information on uploading to your local Giskard server, go to the [Upload an object to the Giskard server](https://docs.giskard.ai/en/latest/guides/upload/index.html) page.&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;how-to-contribute&quot;&gt;## How to contributeWe welcome contributions from the Machine Learning community!Read this [guide](https://github.com/Giskard-AI/giskard/blob/main/CONTRIBUTING.md) to get started.&lt;/div&gt;&lt;br /&gt;&lt;div id=&quot;like-what-were-doing&quot;&gt;## Like what we're doing?🌟 [Leave us a star](https://github.com/Giskard-AI/giskard), it helps the project to get discovered by others and keeps us motivated to build awesome open-source tools! 🌟❤️ You can also [sponsor us](https://github.com/sponsors/Giskard-AI) on GitHub. With a monthly sponsor subscription, you can get a sponsor badge and get your bug reports prioritized. We also offer one-time sponsoring if you want us to get involved in a consulting project, run a workshop, or give a talk at your company.&lt;/div&gt;</longdescription>
</pkgmetadata>