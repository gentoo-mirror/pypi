<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Useless Lavalink[![BuildStatus](https://github.com/jotonedev/useless_lavalink/actions/workflows/publish_pypi.yml/badge.svg)](https://github.com/jotonedev/useless_lavalink/actions/workflows/publish_pypi.yml)[![TestStatus](https://github.com/jotonedev/useless_lavalink/actions/workflows/tests.yml/badge.svg)](https://github.com/jotonedev/useless_lavalink/actions/workflows/tests.yml)[![DocumentationStatus](https://readthedocs.org/projects/useless-lavalink/badge/?version=latest)](https://useless-lavalink.readthedocs.io/en/latest)A Lavalink client library written for Python 3.9 and 3.10 using the AsyncIOframework. This is a fork of[Red-Lavalink](https://github.com/Cog-Creators/Red-Lavalink) optimized to work with Useless Bot.To install:``` bashpip install useless_lavalink```# Usage``` pythonimport lavalinkfrom discord.ext.commands import Botbot = Bot()@bot.eventasync def on_ready():    await lavalink.initialize(bot)    await lavalink.add_node(        bot, host='localhost', password='password',  ws_port=2333    )async def search_and_play(voice_channel, search_terms):    player = await lavalink.connect(voice_channel)    tracks = await player.search_yt(search_terms)    player.add(tracks[0])    await player.play()```# Shuffling``` pythondef shuffle_queue(player_id, forced=True):    player = lavalink.get_player(player_id)    if not forced:        player.maybe_shuffle(sticky_songs=0)        &quot;&quot;&quot;        `player.maybe_shuffle` respects `player.shuffle`        And will only shuffle if `player.shuffle` is True.        `player.maybe_shuffle` should be called every time        you would expect the queue to be shuffled.        `sticky_songs=0` will shuffle every song in the queue.        &quot;&quot;&quot;    else:        player.force_shuffle(sticky_songs=3)        &quot;&quot;&quot;        `player.force_shuffle` does not respect `player.shuffle`        And will always shuffle the queue.        `sticky_songs=3` will shuffle every song after the first 3 songs in the queue.        &quot;&quot;&quot;```When shutting down, be sure to do the following:``` pythonawait lavalink.close(bot)```</longdescription>
</pkgmetadata>