<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># fastapi-mqttMQTT is a lightweight publish/subscribe messaging protocol designed for M2M (machine to machine) telemetry in low bandwidth environments.Fastapi-mqtt is the client for working with MQTT.For more information about MQTT, please refer to here: [MQTT](MQTT.md)Fatapi-mqtt wraps around [gmqtt](https://github.com/wialon/gmqtt) module. Gmqtt Python async client for MQTT client implementation.Module has support of MQTT version 5.0 protocol[![MIT licensed](https://img.shields.io/github/license/sabuhish/fastapi-mqtt)](https://raw.githubusercontent.com/sabuhish/fastapi-mqtt/master/LICENSE)[![GitHub stars](https://img.shields.io/github/stars/sabuhish/fastapi-mqtt.svg)](https://github.com/sabuhish/fastapi-mqtt/stargazers)[![GitHub forks](https://img.shields.io/github/forks/sabuhish/fastapi-mqtt.svg)](https://github.com/sabuhish/fastapi-mqtt/network)[![GitHub issues](https://img.shields.io/github/issues-raw/sabuhish/fastapi-mqtt)](https://github.com/sabuhish/fastapi-mqtt/issues)[![Downloads](https://pepy.tech/badge/fastapi-mqtt)](https://pepy.tech/project/fastapi-mqtt)---## **Documentation**: [FastApi-MQTT](https://sabuhish.github.io/fastapi-mqtt/)The key feature are:MQTT specification avaliable with help decarator methods using callbacks:- on_connect()- on_disconnect()- on_subscribe()- on_message()- subscribe(topic)- Base Settings available with `pydantic` class- Authetication to broker with credentials- unsubscribe certain topics and publish to certain topics### ðŸ”¨ Installation```sh $ pip install fastapi-mqtt```### ðŸ•¹ Guide```pythonfrom fastapi import FastAPIfrom fastapi_mqtt import FastMQTT, MQTTConfigapp = FastAPI()mqtt_config = MQTTConfig()mqtt = FastMQTT(    config=mqtt_config)mqtt.init_app(app)@mqtt.on_connect()def connect(client, flags, rc, properties):    mqtt.client.subscribe(&quot;/mqtt&quot;) #subscribing mqtt topic    print(&quot;Connected: &quot;, client, flags, rc, properties)@mqtt.on_message()async def message(client, topic, payload, qos, properties):    print(&quot;Received message: &quot;,topic, payload.decode(), qos, properties)@mqtt.subscribe(&quot;my/mqtt/topic/#&quot;)async def message_to_topic(client, topic, payload, qos, properties):    print(&quot;Received message to specific topic: &quot;, topic, payload.decode(), qos, properties)@mqtt.on_disconnect()def disconnect(client, packet, exc=None):    print(&quot;Disconnected&quot;)@mqtt.on_subscribe()def subscribe(client, mid, qos, properties):    print(&quot;subscribed&quot;, client, mid, qos, properties)```Publish method:```pythonasync def func():    mqtt.publish(&quot;/mqtt&quot;, &quot;Hello from Fastapi&quot;) #publishing mqtt topic    return {&quot;result&quot;: True,&quot;message&quot;:&quot;Published&quot; }```Subscribe method:```python@mqtt.on_connect()def connect(client, flags, rc, properties):    mqtt.client.subscribe(&quot;/mqtt&quot;) #subscribing mqtt topic    print(&quot;Connected: &quot;, client, flags, rc, properties)```Changing connection params```pythonmqtt_config = MQTTConfig(host = &quot;mqtt.mosquito.org&quot;,    port= 1883,    keepalive = 60,    username=&quot;username&quot;,    password=&quot;strong_password&quot;)mqtt = FastMQTT(    config=mqtt_config)```# ContributingFell free to open issue and send pull request.Thanks To [Contributors](https://github.com/sabuhish/fastapi-mqtt/graphs/contributors).Contributions of any kind are welcome!Before you start please read [CONTRIBUTING](https://github.com/sabuhish/fastapi-mqtt/blob/master/CONTRIBUTING.md)</longdescription>
</pkgmetadata>