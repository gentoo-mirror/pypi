<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Graphdoc - Generate docs for your GraphQL APIGraphdoc uses your GraphQL schema to generate an HTML page documenting your API.It works with Graphene and Ariadne and any other framework generating `GraphQLSchema`instances from the `graphql-core` package.You can see an example of autogenerated docs using the [SWAPI](https://swapi.dev/)schema [in this page](https://wallee94.github.io/graphdoc/)## InstallationInstall using pip:    pip install graphdoc## UsageUse `graphdoc.to_doc` to create HTML documentation from a `GraphQLSchema` instance or a string with your schema in SDL.Use `graphdoc.to_md` to create Markdown documentation.## Examples### Django and Graphene```python# view.pyfrom django.http import HttpResponsefrom graphene_django.views import GraphQLViewimport graphdocdef graphql_docs(request):    # For graphene&gt;=3 use schema.graphql_schema    # html = graphdoc.to_doc(GraphQLView().schema.graphql_schema)    html = graphdoc.to_doc(GraphQLView().schema)    return HttpResponse(html, content_type='text/html')# urls.pyfrom graphene_django.views import GraphQLViewfrom .views import graphql_docsurlpatterns = [    path('graphql', GraphQLView.as_view(), name='graphql_endpoint'),    path('docs', graphql_docs, name='graphql_docs'),]```### FastAPI and Ariadne```python# schema.pyfrom ariadne import load_schema_from_pathschema = load_schema_from_path(&quot;schema.graphql&quot;)# main.pyfrom fastapi import FastAPI, Responsefrom schema import schemaimport graphdocapp = FastAPI()@app.get(&quot;/docs&quot;)async def graphql_docs():    html = graphdoc.to_doc(schema)    return Response(content=html, media_type=&quot;text/html&quot;)```## API#### `graphdoc.to_doc(schema, templates_folder=None, context=None)`**schema**: `GraphQLSchema` instance or a str with a schema in SDL.**templates_folder**: Optional path to a templates folder. If received,Jinja will look for templates in this folder before falling back to the defaults[here](https://github.com/wallee94/graphdoc/tree/main/graphdoc/templates).**context**: An optional custom dictionary to be passed to the templates variables.## Custom templatesYou can find more example apps using custom templates and documenting multiple schemas in the [examples folder](https://github.com/wallee94/graphdoc/tree/main/examples)</longdescription>
</pkgmetadata>