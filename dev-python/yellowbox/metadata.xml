<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Yellowbox![Test YellowBox](https://github.com/biocatchltd/yellowbox/workflows/Test%20YellowBox/badge.svg?branch=master)[![Coverage](https://codecov.io/github/biocatchltd/yellowbox/coverage.svg?branch=master)](https://codecov.io/github/biocatchltd/yellowbox?branch=master)Yellowbox makes it easy to run docker containers as part of black box tests.**Documentation:** https://yellowbox.readthedocs.io/---## ExamplesSay you want to run a blackbox test on a service that depends on a redis server.```pythonfrom yellowbox.clients import docker_clientfrom yellowbox.extras import RedisServicedef test_black_box():  with docker_client() as docker_client, RedisService.run(docker_client) as redis:    redis_port = redis.client_port()  # this the host port the redis    ...  # run your black box test here  # yellowbox will automatically close the service when exiting the scopedef test_black_box_with_initial_data():  # you can use the service's built-in utility functions to  # easily interoperate the service  with docker_client() as docker_client,          RedisService.run(docker_client) as redis,          redis.client() as client:    client.set(&quot;foo&quot;, &quot;bar&quot;)  ...```## LicenseYellowbox is registered under the MIT public license</longdescription>
</pkgmetadata>