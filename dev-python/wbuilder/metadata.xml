<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># wBuilder```    wBuilder    (c) 2020 Rodney Maniego Jr.    MIT License```HTML template generator for Python.Read: [Introducing wBuilder: An HTML5 Generator for Python](https://peakd.com/hive-102677/@oniemaniego/introducing-wbuilder-an-html5-generator-for-python)*Requirements:*- Arkivist, BS4, Namari*Future Features*- Simple JQuery generator## WebBuilder Usage**Import**```pythonfrom wbuilder import WebBuilder```**Initialize**```pythonhtml = WebBuilder()html = WebBuilder(&quot;web.html&quot;)html = WebBuilder(html=&quot;&lt;span id='label'&gt;&lt;/span&gt;&quot;)```**HTML head**```pythonhtml.prop(&quot;html&quot;, &quot;lang&quot;, &quot;en&quot;)html.at(&quot;head&quot;).append(&quot;title&quot;, text=&quot;WebBuilder&quot;)html.at(&quot;head&quot;).append(&quot;meta&quot;, charset=&quot;UTF-8&quot;)html.at(&quot;head&quot;).append(&quot;meta&quot;, name=&quot;viewport&quot;, content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;)html.at(&quot;head&quot;).append(&quot;link&quot;, rel=&quot;icon&quot;, href=&quot;icon.png&quot;, type_=&quot;image/png&quot;, sizes=&quot;96x96&quot;, static=True)html.at(&quot;head&quot;).append(&quot;link&quot;, rel=&quot;stylesheet&quot;, href=&quot;reset.css&quot;, static=True)html.at(&quot;head&quot;).append(&quot;link&quot;, rel=&quot;stylesheet&quot;, href=&quot;design.css&quot;)```**Basic usage**```pythonhtml.at(&quot;body&quot;).append(&quot;div&quot;, id=&quot;#popup .popup&quot;)html.at(&quot;#popup&quot;).append(&quot;header3&quot;, id=&quot;.header&quot;, text=&quot;Welcome!&quot;)```**CSS selectors**```pythonhtml.at(&quot;#popup&quot;).append(&quot;span&quot;, id=&quot;#popup-txt .popup-txt&quot;, text=&quot;Hello, user!&quot;)html.at(&quot;#popup&quot;).append(&quot;button&quot;, id=&quot;#ok .blue&quot;, text=&quot;OK&quot;)# CSS as a stringhtml.inlineCss(&quot;div&quot;, {&quot;color&quot;: &quot;#000&quot;})html.inlineCss(&quot;div&quot;, &quot;font-size:12px;&quot;, reset=True))# CSS as a dictionarydesign = { &quot;font-size&quot;: &quot;12px&quot;, &quot;color&quot;: &quot;#222&quot;, &quot;background-color&quot;: &quot;#f0f0f0&quot; }html.at(&quot;#popup&quot;).append(&quot;div&quot;, id=&quot;.message&quot;, text=&quot;Lorem ipsum...&quot;, style=design)```**Update element properties**```pythonhtml.prop(&quot;html&quot;, &quot;lang&quot;, &quot;en&quot;)html.prop(&quot;#popup&quot;, &quot;data-name&quot;, &quot;container&quot;)html.prop(&quot;#popup&quot;, &quot;data-title&quot;, &quot;message&quot;)html.prop(&quot;div&quot;, &quot;style&quot;, &quot;font-size:12px;&quot;)```**Preview HTML**```pythoncontent = html.build()print(content)```**Save to HTML file**```pythonhtml.save()html.save(&quot;saveAsNewFile.html&quot;)```**Save to/Read from JSON file**```pythonhtml.toJson(&quot;test.json&quot;)html.fromJson(&quot;test.json&quot;)```</longdescription>
</pkgmetadata>