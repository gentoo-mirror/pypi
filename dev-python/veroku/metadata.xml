<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;logo.svg&quot;&gt;&lt;/div&gt;[comment]: # (doc-start)![Build Status](https://github.com/ejlouw/veroku/workflows/CI_PIPELINE/badge.svg?branch=master)### InstallationFor installing through pip:```bashpip install veroku```To clone this git repo:```git clone https://github.com/ejlouw/veroku.git cd veroku/pip install -r requirements.txt```It is recommended to use a separate conda virtual environment when installing the dependencies, to avoid interferingwith existing packages. To get started with conda environments, see the[installation guide](https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html).For more information on using conda environments see[managing environments guide](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)### Overview&lt;div style=&quot;text-align: justify&quot;&gt;Veroku is an open source library for building and performing inference with probabilistic graphical models (PGMs) inpython. PGMs provide a framework for performing efficient probabilistic inference with very high dimensionaldistributions. A typical example of a well-known type of PGM is the Kalman filter that can be used to obtainprobabilistic estimates of a hidden state of a process or system, given noisy measurements. PGMs can in principle beused for any problem that involves uncertainty and is therefore applicable to many problems.&lt;/div&gt; Veroku currently supports the following probability distributions:* Categorical (sparse and dense implementations)* Gaussian* Gaussian mixture&lt;sup&gt;1&lt;/sup&gt;* Linear Gaussian&lt;sup&gt;2&lt;/sup&gt;* Non-linear Gaussian&lt;sup&gt;3&lt;/sup&gt;&lt;sup&gt;1&lt;/sup&gt; This class still has some experimental functionality (specifically the Gaussian mixture division methods)and is, therefore, still in the factors.experimental sub-package.  &lt;sup&gt;2&lt;/sup&gt; Using the Gaussian class - see the Kalman filter example notebook.&lt;br/&gt;&lt;sup&gt;3&lt;/sup&gt;This implementation is still experimental (see the factors.experimental sub-package).&lt;div style=&quot;text-align: justify&quot;&gt;These distributions can be used as factors to represent a factorised distribution. These factors can be used, togetherwith the &lt;code&gt;cluster_graph&lt;/code&gt; module to automatically create valid cluster graphs. Inference can be performed in these graphsusing message passing algorithms. Currently only the LBU (Loopy Belief Update) message-passing algorithm is supported.&lt;/div&gt;&lt;br/&gt;Example notebooks:* [Toy example](https://github.com/ejlouw/veroku/blob/master/examples/slip_on_grass.ipynb)* [Kalman filter](https://github.com/ejlouw/veroku/blob/master/examples/Kalman_filter.ipynb)* [Sudoku](https://github.com/ejlouw/veroku/blob/master/examples/sudoku.ipynb)### On the RoadmapThe following distributions, models and features are on the roadmap to be added to veroku:* Conditional Gaussian* Dirichlet distribution* Wishart distribution* Normal-Wishart distribution* Plate models* Structure Learning* Causal Inference### DependenciesFor the python dependencies see the [requirements](https://github.com/ejlouw/veroku/blob/master/requirements.txt) file.The following additional dependencies are also required for some functionality (these are not installed automatically with the `pip install`):##### GraphvizSee https://graphviz.org/download/ for installation instructions. ### ContributingIf you would like to contribute to veroku, please see the [contributing guide](https://github.com/ejlouw/veroku/blob/master/contributing.md).### LicenseVeroku is released under a 3-Clause BSD license. You can view the license[here](https://github.com/ejlouw/veroku/blob/master/LICENSE).</longdescription>
</pkgmetadata>