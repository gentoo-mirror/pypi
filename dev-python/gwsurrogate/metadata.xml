<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Welcome to GWSurrogate! #GWSurrogate is an easy to use interface to gravitational wave surrogate models.Surrogates provide a fast and accurate evaluation mechanism for gravitationalwaveforms which would otherwise be found through solving differentialequations. These equations must be solved in the ``building&quot; phase, whichwas performed using other codes. For details see[1] Scott Field, Chad Galley, Jan Hesthaven, Jason Kaye, and Manuel Tiglio.`&quot;Fast prediction and evaluation of gravitational waveforms using surrogatemodels&quot;. Phys. Rev. X 4, 031006 (2014). arXiv: gr-qc:1308.3565If you find this package useful in your work, please cite reference [1] and,if available, the relevant paper describing the specific surrogate used.All available models can be found in gwsurrogate.catalog.list()gwsurrogate is available at https://pypi.python.org# Installation ### Dependency ##gwsurrogate requires:1)  gwtools. If you are installing gwsurrogate with pip youwill automatically get gwtools. If you are installing gwsurrogate fromsource, please see https://bitbucket.org/chadgalley/gwtools/2) gsl. For speed, the long (hybrid) surrogates use gsl's spline function.To build gwsurrogate you must have gsl installed. Fortunately, this is acommon library and can be easily installed with a package manager.Note that at runtime (ie when you do import gwsurrogate) you may need to letgsl know where your BLAS library is installed. This can be done by settingyour LD_PRELOAD or LD_LIBRARY_PATH environment variables. A relevant example:```&gt;&gt;&gt; export LD_PRELOAD=~/anaconda3/envs/python27/lib/libgslcblas.so```## From pip ##The python package pip supports installing from PyPI (the Python PackageIndex). gwsurrogate can be installed to the standard location(e.g. /usr/local/lib/pythonX.X/dist-packages) with```&gt;&gt;&gt; pip install gwsurrogate```## From conda ##`gwsurrogate` is [on conda-forge](https://anaconda.org/conda-forge/gwsurrogate), and can be installed with```&gt;&gt;&gt; conda install -c conda-forge gwsurrogate```## From source ##First, please make sure you have the necessary dependenciesinstalled (see above). Next, Download and unpack gwsurrogate-X.X.tar.gzto any folder gws_folder of your choosing. The gwsurrogate module canbe used immediately by adding```import syssys.path.append('absolute_path_to_gws_folder')```at the beginning of any script/notebook which uses gwsurrogate.Alternatively, if you are a bash or sh user, edit your .profile(or .bash_profile) file and add the line```export PYTHONPATH=~absolute_path_to_gws_folder:$PYTHONPATH```For a &quot;proper&quot; installation```&gt;&gt;&gt; python setup.py install    # option 1&gt;&gt;&gt; pip install -e gwsurrogate # option 2```where the &quot;-e&quot; installs an editable (development) project with pip. This allowsyour local code edits to be automatically seen by the system-wide installation.If you have git cloned this project, you must do```git submodule initgit submodule update```# Usage ### Available modelsTo get a list of all available surrogate models, do:```python&gt;&gt;&gt; import gwsurrogate&gt;&gt;&gt; gwsurrogate.catalog.list()&gt;&gt;&gt; gwsurrogate.catalog.list(verbose=True)      # Use this for more details```### Current modelsThe most up-to-date models are listed below, along with links to examplenotebooks.- [NRSur7dq4](https://github.com/sxs-collaboration/gwsurrogate/blob/master/tutorial/website/NRSur7dq4.ipynb):  For generically precessing BBHs, trained on mass ratios q≤4. Paper:  [arxiv:1905.09300](https://arxiv.org/abs/1905.09300).- [NRHybSur3dq8](https://github.com/sxs-collaboration/gwsurrogate/blob/master/tutorial/website/NRHybSur3dq8.ipynb):  For nonprecessing BBHs, trained on mass ratios q≤8. Paper:  [arxiv:1812.07865](https://arxiv.org/abs/1812.07865).- [NRHybSur2dq15](https://github.com/sxs-collaboration/gwsurrogate/blob/master/tutorial/website/NRHybSur2dq15.ipynb):  For nonprecessing BBHs, trained on q≤15, chi1≤0.5, chi2=0. Paper:  [arxiv:2203.10109](https://arxiv.org/abs/2203.10109).- [NRHybSur3dq8_CCE](https://github.com/sxs-collaboration/gwsurrogate/blob/master/tutorial/website/NRHybSur3dq8_CCE.ipynb):  For nonprecessing BBHs, trained on CCE (Cauchy-characteristic evolution) waveforms of mass ratios q≤8. Paper:  [arxiv:2306.03148](https://arxiv.org/abs/2306.03148).## Download surrogate data and load itPick a model, let's say `NRSur7dq4` and download the data. Note this onlyneeds to be done once.```pythongwsurrogate.catalog.pull('NRSur7dq4')       # This can take a few minutes```Load the surrogate, this only needs to be done once at the start of a script```pythonsur = gwsurrogate.LoadSurrogate('NRSur7dq4')```## Evaluate the surrogate```pythonq = 4           # mass ratio, mA/mB &gt;= 1.chiA = [-0.2, 0.4, 0.1]         # Dimensionless spin of heavier BHchiB = [-0.5, 0.2, -0.4]        # Dimensionless of lighter BHdt = 0.1                        # timestep size, Units of total mass Mf_low = 0                # initial frequency, f_low=0 returns the full surrogate# h is dictionary of spin-weighted spherical harmonic modes# t is the corresponding time array in units of M# dyn stands for dynamics, do dyn.keys() to see contentst, h, dyn = sur(q, chiA, chiB, dt=dt, f_low=f_low)```There are many more options, such as using MKS units, returning thepolarizations instead of the modes, etc.  Read the documentation for moredetails.```pythonhelp(sur)```Jupyter notebooks located in[tutorial/website](https://github.com/sxs-collaboration/gwsurrogate/blob/master/tutorial/website)give a more comprehensive overview of individual models.# Tests #If you have downloaded the entire project as a tar.gz file, its a good ideato run some regression tests. ```&gt;&gt;&gt; cd test                              # move into the folder test&gt;&gt;&gt; python download_regression_models.py # download all surrogate models to test&gt;&gt;&gt; python test_model_regression.py      # (optional - if developing a new test) generate regression data locally on your machine&gt;&gt;&gt; cd ..                                # move back to the top-level folder&gt;&gt;&gt; pytest                               # run all tests&gt;&gt;&gt; pytest -v -s                         # run all tests with high verbosity```# NSF Support #This package is based upon work supported by the National Science Foundationunder PHY-1316424, PHY-1208861, and PHY-1806665.Any opinions, findings, and conclusions or recommendations expressed ingwsurrogate are those of the authors and do not necessarily reflect theviews of the National Science Foundation.</longdescription>
</pkgmetadata>