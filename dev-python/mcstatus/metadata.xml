<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># &lt;img src=&quot;https://i.imgur.com/nPCcxts.png&quot; height=25&gt; MCStatus[![discord chat](https://img.shields.io/discord/936788458939224094.svg?logo=Discord)](https://discord.gg/C2wX7zduxC)![supported python versions](https://img.shields.io/pypi/pyversions/mcstatus.svg)[![current PyPI version](https://img.shields.io/pypi/v/mcstatus.svg)](https://pypi.org/project/mcstatus/)[![Validation](https://github.com/py-mine/mcstatus/actions/workflows/validation.yml/badge.svg)](https://github.com/py-mine/mcstatus/actions/workflows/validation.yml)[![Tox test](https://github.com/py-mine/mcstatus/actions/workflows/tox-test.yml/badge.svg)](https://github.com/py-mine/mcstatus/actions/workflows/tox-test.yml)Mcstatus provides an API and command line script to fetch publicly available data from Minecraft servers. Specifically, mcstatus retrieves data by using these protocols: [Server List Ping](https://wiki.vg/Server_List_Ping) and [Query](https://wiki.vg/Query). Because of mcstatus, you do not need to fully understand those protocols and can instead skip straight to retrieving minecraft server data quickly in your own programs.## InstallationMcstatus is available on [PyPI](https://pypi.org/project/mcstatus/), and can be installed trivially with:```bashpython3 -m pip install mcstatus```## Usage### Python API#### Java Edition```pythonfrom mcstatus import JavaServer# You can pass the same address you'd enter into the address field in minecraft into the 'lookup' function# If you know the host and port, you may skip this and use JavaServer(&quot;example.org&quot;, 1234)server = JavaServer.lookup(&quot;example.org:1234&quot;)# 'status' is supported by all Minecraft servers that are version 1.7 or higher.# Don't expect the player list to always be complete, because many servers run# plugins that hide this information or limit the number of players returned or even# alter this list to contain fake players for purposes of having a custom message here.status = server.status()print(f&quot;The server has {status.players.online} player(s) online and replied in {status.latency} ms&quot;)# 'ping' is supported by all Minecraft servers that are version 1.7 or higher.# It is included in a 'status' call, but is also exposed separate if you do not require the additional info.latency = server.ping()print(f&quot;The server replied in {latency} ms&quot;)# 'query' has to be enabled in a server's server.properties file!# It may give more information than a ping, such as a full player list or mod information.query = server.query()print(f&quot;The server has the following players online: {', '.join(query.players.names)}&quot;)```#### Bedrock Edition```pythonfrom mcstatus import BedrockServer# You can pass the same address you'd enter into the address field in minecraft into the 'lookup' function# If you know the host and port, you may skip this and use BedrockServer(&quot;example.org&quot;, 19132)server = BedrockServer.lookup(&quot;example.org:19132&quot;)# 'status' is the only feature that is supported by Bedrock at this time.# In this case status includes players_online, latency, motd, map, gamemode, and players_max. (ex: status.gamemode)status = server.status()print(f&quot;The server has {status.players_online} players online and replied in {status.latency} ms&quot;)```### Command Line InterfaceThis only works with Java servers; Bedrock is not yet supported. Use `mcstatus -h` to see helpful information on how to use this script.## LicenseMcstatus is licensed under the Apache 2.0 license. See LICENSE for full text.</longdescription>
</pkgmetadata>