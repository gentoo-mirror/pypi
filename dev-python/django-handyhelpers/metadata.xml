<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-handy-helpers| | | ||--------------|------|---|| Author       | David Slusser |   || Description  | A collection of handy utilities to support django projects |   || Requirements | `Python 3.x`&lt;br&gt;`Django 2.2.x` |   |# DocumentationFull documentation can be found on http://django-handyhelpers.readthedocs.org. Documentation source files are available in the docs folder.# How to InstallThe django-userextensions package is available on Python Package Index (PyPI) and can be installed via pip:    pip install django-handyhelpers    add 'handyhelpers' to your INSTALLED_APPS (for management commands and templates)    INSTALLED_APPS = [        ...        'handyhelpers',    ]# Management Commands ### DRF GeneratorDjango-handyhelpers includes manage.py commands to generate DRF files (api views, serializers, urls) for a given app in your project.This is done using jinja templates that define the structure of each file. Default templates are provided, and custom templates can be provided in the command. By default, all models and models fields are included.  Example command:    manage.py generate_drf &lt;my_app&gt; --serializer    manage.py generate_drf &lt;my_app&gt; --serializer --serializer_template &lt;my_custom_template&gt;** use the --help parameter for a full list of options    manage.py generate_drf --help### Admin GeneratorIncluded with django-handyhelpers are manage.py commands to auto-generate an admin.py file for a given application in your project. This is done using a jinja template that defines the structure of the admin.py file. A default template is provided. Example command:    manage.py generate_admin &lt;my_app&gt;    manage.py generate_admin &lt;my_app&gt; --template &lt;my_custom_template&gt;    ** use the --help parameter for a full list of options     manage.py generate-admin --help     # Mixins### FilterByQueryParamsMixinAllows your list views to be filtered by query parameters.### InvalidLookupMixinReturns an applicable error, instead of results based on an unfiltered queryset, if a provided  lookup expression, filter, or model field is invalid.   </longdescription>
</pkgmetadata>