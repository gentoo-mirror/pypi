<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DiscordLevelingCardA library with Rank cards for your discord bot.&lt;h3 style=&quot;color:yellow;&quot;&gt; now create your own custom rank cards!&lt;/h3&gt;&lt;br&gt;[![Downloads](https://pepy.tech/badge/discordlevelingcard)](https://pepy.tech/project/discordlevelingcard)# card preview`card1`![card1](https://user-images.githubusercontent.com/77439837/234198272-3dcaabb0-0f38-4d51-9938-de4b0ad42123.png)`card2`![card2](https://user-images.githubusercontent.com/77439837/234198354-315e9420-9bd7-47bd-87ed-b21c3772646c.png)`card3` *same as card2 but with background*![card3](https://user-images.githubusercontent.com/77439837/234203410-a6a970ef-c01c-454b-be67-6dc7c1b2c807.png)&lt;br&gt;# installation`for pypi version````shpip install discordlevelingcard````for github developement version````shpip install git+https://github.com/krishsharma0413/DiscordLevelingCard```# How To UseIf you don't provide `path` then the method will return `bytes` which can directly be used in discord.py/disnake/pycord/nextcord 's `File class`.&lt;br&gt;# Example`since no path was provided, it returns bytes which can directly be used in discord.py and its fork's File class.````pyfrom disnake.ext import commandsfrom DiscordLevelingCard import RankCard, Settingsimport disnakeclient = commands.Bot()# define background, bar_color, text_color at one placecard_settings = Settings(    background=&quot;url or path to background image&quot;,    text_color=&quot;white&quot;,    bar_color=&quot;#000000&quot;)@client.slash_command(name=&quot;rank&quot;)async def user_rank_card(ctx, user:disnake.Member):    await ctx.response.defer()    a = RankCard(        settings=card_settings,        avatar=user.display_avatar.url,        level=1,        current_exp=1,        max_exp=1,        username=&quot;cool username&quot;    )    image = await a.card1()    await ctx.edit_original_message(file=disnake.File(image, filename=&quot;rank.png&quot;)) # providing filename is very important```&lt;br&gt;## Documentation&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;RankCard&lt;/span&gt; class&lt;/summary&gt;&lt;br&gt;`__init__` method```pyRankCard(    settings: Settings,    avatar:str,    level:int,    current_exp:int,    max_exp:int,    username:str,    rank: Optional[int] = None)```- `settings` - Settings class from DiscordLevelingCard.- `avatar` - avatar image url.- `level` - level of the user.- `current_exp` - current exp of the user.- `max_exp` - max exp of the user.- `username` - username of the user.- `rank` - rank of the user. (optional)## methods- `card1`- `card2`- `card3`&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;Sandbox&lt;/span&gt; class&lt;/summary&gt;&lt;br&gt;`__init__` method```pyRankCard(    settings: Settings,    avatar:str,    level:int,    current_exp:int,    max_exp:int,    username:str,    cacheing:bool = True,    rank: Optional[int] = None)```- `settings` - Settings class from DiscordLevelingCard.- `avatar` - avatar image url.- `level` - level of the user.- `current_exp` - current exp of the user.- `max_exp` - max exp of the user.- `username` - username of the user.- `rank` - rank of the user. (optional)- `cacheing` - if set to `True` then it will cache the image and will not regenerate it again. (default is `True`)  ## methods- `custom_card1`  &lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;Settings&lt;/span&gt; class&lt;/summary&gt;&lt;br&gt;`__init__` method```pySettings(    background: Union[PathLike, BufferedIOBase, str],    bar_color: Optional[str] = 'white',    text_color: Optional[str] = 'white',    background_color: Optional[str]= &quot;#36393f&quot;)```- `background` - background image url or file-object in `rb` mode.  - `4:1` aspect ratio recommended.- `bar_color` - color of the bar [example: &quot;white&quot; or &quot;#000000&quot;]- `text_color` - color of the text [example: &quot;white&quot; or &quot;#000000&quot;]- `background_color` - color of the background [example: &quot;white&quot; or &quot;#000000&quot;]&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;card1&lt;/span&gt; method&lt;/summary&gt;```pyRankCard.card1(resize: int = 100)```## attribute- `resize` : resize the final image. (default is 100, treat it as a percentage.)## returns - `bytes` which can directly be used within `discord.File` class.![card1](https://user-images.githubusercontent.com/77439837/234198272-3dcaabb0-0f38-4d51-9938-de4b0ad42123.png)&lt;br&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;card2&lt;/span&gt; method&lt;/summary&gt;```pyRankCard.card2(resize: int = 100)```## attribute- `resize` : resize the final image. (default is 100, treat it as a percentage.)## returns- `bytes` which can directly be used within `discord.File` class.![card](https://user-images.githubusercontent.com/77439837/234198354-315e9420-9bd7-47bd-87ed-b21c3772646c.png)&lt;br&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;card3&lt;/span&gt; method&lt;/summary&gt;```pyRankCard.card3(resize: int = 100)```## attribute- `resize` : resize the final image. (default is 100, treat it as a percentage.)## returns- `bytes` which can directly be used within `discord.File` class.![card3](https://user-images.githubusercontent.com/77439837/234203410-a6a970ef-c01c-454b-be67-6dc7c1b2c807.png)&lt;br&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;custom_card1&lt;/span&gt; method&lt;/summary&gt;```pySandbox.custom_card1(card_colour:str = &quot;black&quot;, resize: int = 100)```## attribute- `resize` : resize the final image. (default is 100, treat it as a percentage.)- `card_colour` : color of the card. (default is black)## returns - `bytes` which can directly be used within `discord.File` class.## examples![custom_card1](https://raw.githubusercontent.com/krishsharma0413/DiscordLevelingCard/main/Examples/custom%20card%20examples/blue_card1.png)![custom_card1](https://raw.githubusercontent.com/krishsharma0413/DiscordLevelingCard/main/Examples/custom%20card%20examples/white_card1.png)![custom_card1](https://raw.githubusercontent.com/krishsharma0413/DiscordLevelingCard/main/Examples/custom%20card%20examples/black_card1.png)&lt;br&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;span style=&quot;color:yellow&quot;&gt;custom_canvas&lt;/span&gt; method&lt;/summary&gt;```pySandbox.custom_canvas(    resize:int = 100,    senstivity:int = 200,    card_colour: str = &quot;black&quot;,    border_width: int = 25,    border_height: int = 25,        avatar_frame: str = &quot;curvedborder&quot;,    avatar_size: int = 260,    avatar_position: tuple = (53, 36),        text_font: str = &quot;levelfont.otf&quot;,    username_position: tuple = (330,130),    username_font_size: int = 50,    level_position: tuple = (500,40),    level_font_size: int = 50,    exp_position: tuple = (775,130),    exp_font_size: int = 50,)```## attribute  - `has_background` : if set to `True` then it will add a background to the image. (default is `True`)  - `background_colour` : color of the background. (default is `black`)  - `canvas_size` : size of the canvas. (default is `(1000, 333)`)  - `resize` : resize the final image. (default is 100, treat it as a percentage.)  - `overlay` : A list of overlays to be placed on the background. (Default is `[[(1000-50, 333-50),(25, 25), &quot;black&quot;, 200]]`.)  - `avatar_frame` : `circle` `square` `curvedborder` `hexagon` or path to a self created mask. (Default is `curvedborder`.)  - `text_font` : Default is `levelfont.otf` or path to a custom otf or ttf file type font.  - `avatar_size` : size of the avatar. (default is `260`)  - `avatar_position` : position of the avatar. (default is `(53, 36)`)  - `username_position` : position of the username. (default is `(330,130)`)  - `username_font_size` : font size of the username. (default is `50`)  - `level_position` : position of the level. (default is `(500,40)`)  - `level_font_size` : font size of the level. (default is `50`)  - `exp_position` : position of the exp. (default is `(775,130)`)  - `exp_font_size` : font size of the exp. (default is `50`)  - `exp_bar_width` : width of the exp bar. (default is `619`)  - `exp_bar_height` : height of the exp bar. (default is `50`)  - `exp_bar_background_colour` : color of the exp bar background. (default is `white`)  - `exp_bar_position` : position of the exp bar. (default is `(330, 235)`)  - `exp_bar_curve` : curve of the exp bar. (default is `30`)  - `extra_text` : A list of extra text to be placed on the image. (Default is `None`.)  - `exp_bar` : The calculated exp of the user. (Default is `None`.)## returns - `bytes` which can directly be used within `discord.File` class.## examples![custom_canvas](https://raw.githubusercontent.com/krishsharma0413/DiscordLevelingCard/main/Examples/custom%20card%20examples/custom%20card3%20example-1.png)![custom_canvas](https://raw.githubusercontent.com/krishsharma0413/DiscordLevelingCard/main/Examples/custom%20card%20examples/custom%20card3%20unholy%20example-2.png)An Example that i really loved was this one, here is the code for it as well. (you might have to tweak a lot to make it work for you though. )```pyfrom DiscordLevelingCard import Sandbox, Settingsimport asynciofrom PIL import Imagesetting = Settings(    background=&quot;./bg.jpg&quot;,    bar_color=&quot;green&quot;,    text_color=&quot;white&quot;)async def main():    rank = Sandbox(        username=&quot;krishsharma0413&quot;,        level=1,        current_exp=10,        max_exp=400,        settings=setting,        avatar=Image.open(&quot;./avatarimg.png&quot;)    )    result = await rank.custom_canvas(        avatar_frame=&quot;square&quot;,        avatar_size=233,        avatar_position=(50, 50),        exp_bar_background_colour = &quot;black&quot;,        exp_bar_height=50,        exp_bar_width=560,        exp_bar_curve=0,        exp_bar_position=(70, 400),        username_position=(320, 50),        level_position=(320, 225),        exp_position=(70, 330),        canvas_size=(700, 500),        overlay=[[(350, 233),(300, 50), &quot;white&quot;, 100],                 [(600, 170),(50, 300), &quot;white&quot;, 100]],        extra_text=[            [&quot;bio-&quot;, (320, 110), 25, &quot;white&quot;],            [&quot;this can very well be a bio&quot;, (320, 140), 25, &quot;white&quot;],            [&quot;even mutiple lines!&quot;, (320, 170), 25, &quot;white&quot;],            [&quot;if we remove bio- even more!&quot;, (320, 200), 25, &quot;white&quot;],            ]    )        # you don't need this line if you are using this in discord.py    Image.open(result).save(&quot;result.png&quot;, &quot;PNG&quot;)asyncio.run(main())```and this is how it looks :D![custom_canvas](https://raw.githubusercontent.com/krishsharma0413/DiscordLevelingCard/main/Examples/custom%20card%20examples/extra%20canvas%20example.png)&lt;br&gt;&lt;/details&gt;&lt;br&gt;&lt;br&gt;if you want to see changelog then click [here](https://github.com/krishsharma0413/DiscordLevelingCard/blob/main/CHANGELOG.md)&lt;br&gt;&lt;br&gt;please star the &lt;a href=&quot;https://github.com/krishsharma0413/DiscordLevelingCard&quot;&gt;repository&lt;/a&gt; if you like it :D</longdescription>
</pkgmetadata>