<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># We are Nmstate!A declarative network manager API for hosts.![CI](https://github.com/nmstate/nmstate/workflows/CI/badge.svg?branch=base)[![Coverage Status](https://coveralls.io/repos/github/nmstate/nmstate/badge.svg?branch=base)](https://coveralls.io/github/nmstate/nmstate?branch=base)[![PyPI version](https://badge.fury.io/py/nmstate.svg)](https://badge.fury.io/py/nmstate)[![Fedora Rawhide version](https://img.shields.io/badge/dynamic/json.svg?label=Fedora%20Rawhide&amp;url=https%3A%2F%2Fapps.fedoraproject.org%2Fmdapi%2Frawhide%2Fpkg%2Fnmstate&amp;query=%24.version&amp;colorB=blue)](https://src.fedoraproject.org/rpms/nmstate)[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/nmstate/nmstate.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/nmstate/nmstate/context:python)Copr build status, all repos are built for Fedora Linux and RHEL/CentOS Stream/EPEL 8+:* Latest release: [![Latest release Copr build status](https://copr.fedorainfracloud.org/coprs/nmstate/nmstate/package/nmstate/status_image/last_build.png)](https://copr.fedorainfracloud.org/coprs/nmstate/nmstate/package/nmstate/)* Git base: [![Git base Copr build status](https://copr.fedorainfracloud.org/coprs/nmstate/nmstate-git/package/nmstate/status_image/last_build.png)](https://copr.fedorainfracloud.org/coprs/nmstate/nmstate-git/package/nmstate/)## What is it?Nmstate is a library with an accompanying command line tool that manageshost networking settings in a declarative manner.The networking state is described by a pre-defined schema.Reporting of current state and changes to it (desired state) both conform tothe schema.Nmstate is aimed to satisfy enterprise needs to manage host networking througha northbound declarative API and multi provider support on the southbound.NetworkManager acts as the main (and currently the only) provider supported.## State example:Desired/Current state example (YAML):```yamlinterfaces:- name: eth1  type: ethernet  state: up  ipv4:    enabled: true    address:    - ip: 192.0.2.10      prefix-length: 24    dhcp: false  ipv6:    enabled: true    address:    - ip: 2001:db8:1::a      prefix-length: 64    autoconf: false    dhcp: falsedns-resolver:  config:    search:    - example.com    - example.org    server:    - 2001:4860:4860::8888    - 8.8.8.8routes:  config:  - destination: 0.0.0.0/0    next-hop-address: 192.0.2.1    next-hop-interface: eth1  - destination: ::/0    next-hop-address: 2001:db8:1::1    next-hop-interface: eth1```## Basic OperationsShow eth0 current state (python/shell):```pythonimport libnmstatestate = libnmstate.show()eth0_state = next(ifstate for ifstate in state['interfaces'] if ifstate['name'] == 'eth0')# Here is the MAC addresseth0_mac = eth0_state['mac-address']``````shellnmstatectl show eth0```Change to desired state (python/shell):```pythonimport libnmstate# Specify a Linux bridge (created if it does not exist).state = {'interfaces': [{'name': 'br0', 'type': 'linux-bridge', 'state': 'up'}]}libnmstate.apply(state)``````shell# use yaml or json formatsnmstatectl set desired-state.ymlnmstatectl set desired-state.json```Edit the current state(python/shell):```pythonimport libnmstatestate = libnmstate.show()eth0_state = next(ifstate for ifstate in state['interfaces'] if ifstate['name'] == 'eth0')# take eth0 downeth0_state['state'] = 'down'libnmstate.apply(state)``````shell# open current state in a text editor, change and save to applynmstatectl edit eth3```## Contact*Nmstate* uses the [nmstate-devel@lists.fedorahosted.org][mailing_list] fordiscussions. To subscribe you can send an email with 'subscribe' in the subjectto &lt;nmstate-devel-join@lists.fedorahosted.org&gt; or visit the[mailing list page][mailing_list].Sprint tracking happens in ([Github projects](https://github.com/nmstate/nmstate/projects)).There is also `#nmstate` on[Libera IRC](https://libera.chat/).## ContributingYay! We are happy to accept new contributors to the Nmstate project. Please followthese [instructions](CONTRIBUTING.md) to contribute.## InstallationFor Fedora 29+, `sudo dnf install nmstate`.For others distribution, please see the [install guide](https://nmstate.io/user/install.html).## Documentation* [libnmstate API](https://nmstate.github.io/devel/api.html)* [Code examples](https://nmstate.github.io/devel/py_example.html)* [State examples](https://nmstate.github.io/examples.html)* [nmstatectl user guide](https://nmstate.github.io/cli_guide.html)* nmstatectl man page: `man nmstatectl`## Limitations* Maximum supported number of interfaces in a single desire state is 1000.## ChangelogPlease refer to [CHANGELOG](CHANGELOG)[mailing_list]: https://lists.fedorahosted.org/admin/lists/nmstate-devel.lists.fedorahosted.org</longdescription>
</pkgmetadata>