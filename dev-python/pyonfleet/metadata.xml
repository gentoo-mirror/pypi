<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Onfleet Python Wrapper![Build](https://img.shields.io/travis/onfleet/pyonfleet.svg?style=popout-square)[![License](https://img.shields.io/github/license/onfleet/pyonfleet.svg?style=popout-square)](https://github.com/onfleet/pyonfleet/blob/master/LICENSE)[![Latest version](https://img.shields.io/pypi/v/pyonfleet.svg?style=popout-square)](https://pypi.org/project/pyonfleet/)![Top language](https://img.shields.io/github/languages/top/onfleet/pyonfleet.svg?style=popout-square)[![Downloads](https://img.shields.io/pypi/dm/pyonfleet.svg?style=popout-square)](https://pypi.org/project/pyonfleet/)&gt; *Read this document in another language*:  &gt; [正體中文](https://github.com/onfleet/pyonfleet/blob/master/README.zh-tw.md)  &gt; [Español](https://github.com/onfleet/pyonfleet/blob/master/README.es.md)  Visit our blog post on the [API wrapper project](https://onfleet.com/blog/api-wrappers-explained/) to learn more about our initiatives.  If you have any questions, please reach us by submitting an issue [here](https://github.com/onfleet/pyonfleet/issues) or contact support@onfleet.com.## Table of contents* [Table of contents](#table-of-contents)* [Synopsis](#synopsis)* [Installation](#installation)* [Usage](#usage)    - [Unit testing using Docker](#unit-testing-using-docker)    - [Throttling](#throttling)    - [Responses](#responses)    - [Supported CRUD operations](#supported-crud-operations)        * [GET Requests](#get-requests)            - [Examples of `get()`](#examples-of-get)            - [Examples of `get(param)`](#examples-of-getparam)            - [Examples of `getByLocation`](#examples-of-getbylocation)        * [POST Requests](#post-requests)            - [Examples of `create()`](#examples-of-create)        * [PUT Requests](#put-requests)            - [Examples of `update()`](#examples-of-update)            - [Examples of `insertTask()`](#examples-of-inserttask)        * [DELETE Requests](#delete-requests)            - [Examples of `deleteOne()`](#examples-of-deleteone)## SynopsisThe Onfleet Python library provides convenient access to the Onfleet API. ## Installation```pip install pyonfleet```## UsageBefore using the API wrapper, you will need to obtain an API key from one of your organization's admins.Creation and integration of API keys are performed through the [Onfleet dashboard](https://onfleet.com/dashboard#/manage).To authenticate, you will also need to create a file named `.auth.json` under your working directory –this is where you will store your API credentials.The format of `.auth.json` is shown below:```json{    &quot;API_KEY&quot;: &quot;&lt;your_api_key&gt;&quot;}```You can also opt in to not store your API key here and pass it as param to `Onfleet`:```pythonfrom onfleet import Onfleet# Option 1 - Recommendedonfleet_api = Onfleet()  # Using the .auth.json file# Option 2onfleet_api = Onfleet(api_key=&quot;&lt;your_api_key&gt;&quot;)  # Without the .auth.json file```Another optional parameter for `Onfleet` is `custom_headers` where you can pass in headers to be applied to all requests. For example:```pythononfleet_api = Onfleet(custom_headers={&quot;&lt;header_name&gt;&quot;: &quot;&lt;header_value&gt;&quot;})```Once the `Onfleet` object is created, you will get access to all the API endpoints as documented in the [Onfleet API documentation](https://docs.onfleet.com/).### Unit testing using Docker`docker-compose up --build`### ThrottlingRate limiting is enforced by the API with a threshold of 20 requests per second across all your organization's API keys. Learn more about it [here](https://docs.onfleet.com/reference#throttling).### ResponsesResponses of this library are instances of [Response](https://2.python-requests.org//en/master/api/#requests.Response) from the `requests` library.### Supported CRUD operations Here are the operations available for each entity:| Entity | GET | POST | PUT | DELETE || :-: | :-: | :-: | :-: | :-: || [Admins/Administrators](https://docs.onfleet.com/reference#administrators) | get() | create(body={})&lt;br /&gt;matchMetadata(body={}) | update(id, body={}) | deleteOne(id) || [Containers](https://docs.onfleet.com/reference/containers) | get(workers=id)&lt;br /&gt;get(teams=id)&lt;br /&gt;get(organizations=id) | x | update(id, body={}) | x || [Destinations](https://docs.onfleet.com/reference/destinations) | get(id) | create(body={})&lt;br /&gt;matchMetadata(body={}) | x | x || [Hubs](https://docs.onfleet.com/reference/hubs) | get() | create(body={}) | update(id, body={}) | x || [Organization](https://docs.onfleet.com/reference/organizations) | get()&lt;br /&gt;get(id) | x | insertTask(id, body={}) | x || [Recipients](https://docs.onfleet.com/reference/recipients) | get(id)&lt;br /&gt;get(name='')&lt;br /&gt;get(phone='') | create(body={})&lt;br /&gt;matchMetadata(body={}) | update(id, body={}) | x || [Tasks](https://docs.onfleet.com/reference/tasks) | get(queryParams={})&lt;br /&gt;get(id)&lt;br /&gt;get(shortId=id) | create(body={})&lt;br /&gt;clone(id)&lt;br /&gt;forceComplete(id)&lt;br /&gt;batch(body={})&lt;br /&gt;autoAssign(body={})&lt;br /&gt;matchMetadata(body={}) | update(id, body={}) | deleteOne(id) || [Teams](https://docs.onfleet.com/reference/teams) | get()&lt;br /&gt;get(id)&lt;br /&gt;getWorkerEta(id, queryParams={})&lt;br /&gt;getTasks(id, queryParams={}) | create(body={})&lt;br /&gt;autoDispatch(id, body={}) | update(id, body={})&lt;br /&gt;insertTask(id, body={}) | deleteOne(id) || [Webhooks](https://docs.onfleet.com/reference/webhooks) | get() | create(body={}) | x | deleteOne(id) || [Workers](https://docs.onfleet.com/reference/workers) | get()&lt;br /&gt;get(id)&lt;br /&gt;get(queryParams={})&lt;br /&gt;getByLocation(queryParams={})&lt;br /&gt;getSchedule(id)&lt;br /&gt;getTasks(id, queryParams={}) | create(body={})&lt;br /&gt;setSchedule(id, body={})&lt;br /&gt;matchMetadata(body={}) | update(id, body={})&lt;br /&gt;insertTask(id, body={}) | deleteOne(id) |#### GET RequestsTo get all the documents within an endpoint:```pythonget()```##### Examples of `get()````pythononfleet_api.workers.get()onfleet_api.workers.get(queryParams=&quot;&quot;)```Optionally you can use `queryParams` for some certain endpoints.  Refer back to [API documentation](https://docs.onfleet.com/) for endpoints that support query parameters.```python# Option 1onfleet_api.workers.get(queryParams={&quot;phones&quot;: &quot;&lt;phone_number&gt;&quot;})# Option 2onfleet_api.workers.get(queryParams=&quot;phones=&lt;phone_number&gt;&quot;)```To get one of the document within an endpoint, specify the param that you wish to search by:```pythonget(param=&quot;&lt;value&gt;&quot;)```##### Examples of `get(param)````pythononfleet_api.workers.get(id=&quot;&lt;24_digit_ID&gt;&quot;)onfleet_api.workers.get(id=&quot;&lt;24_digit_ID&gt;&quot;, queryParams={&quot;analytics&quot;: &quot;true&quot;})onfleet_api.tasks.get(shortId=&quot;&lt;shortId&gt;&quot;)onfleet_api.recipients.get(phone=&quot;&lt;phone_number&gt;&quot;)onfleet_api.recipients.get(name=&quot;&lt;name&gt;&quot;)onfleet_api.containers.get(workers=&quot;&lt;worker_ID&gt;&quot;)onfleet_api.containers.get(teams=&quot;&lt;team_ID&gt;&quot;)onfleet_api.containers.get(organizations=&quot;&lt;organization_ID&gt;&quot;)```**Note:** don't use Python-style `True` and `False` for boolean values - supply these as strings like `&quot;true&quot;` or `&quot;false&quot;`.To get a driver by location, use the `getByLocation` function:```pythongetByLocation(queryParams=&quot;&lt;location_params&gt;&quot;)```##### Examples of `getByLocation````pythonlocation_params = {    &quot;longitude&quot;: &quot;-122.4&quot;,    &quot;latitude&quot;: &quot;37.7601983&quot;,    &quot;radius&quot;: &quot;6000&quot;,}onfleet_api.workers.getByLocation(queryParams=location_params)```#### POST RequestsTo create a document within an endpoint:```pythoncreate(body=&quot;&lt;data&gt;&quot;)```##### Examples of `create()````pythondata = {    &quot;name&quot;: &quot;John Driver&quot;,    &quot;phone&quot;: &quot;+16173428853&quot;,    &quot;teams&quot;: [&quot;&lt;team_ID&gt;&quot;, &quot;&lt;team_ID&gt; (optional)&quot;, &quot;...&quot;],    &quot;vehicle&quot;: {        &quot;type&quot;: &quot;CAR&quot;,        &quot;description&quot;: &quot;Tesla Model S&quot;,        &quot;licensePlate&quot;: &quot;FKNS9A&quot;,        &quot;color&quot;: &quot;purple&quot;,    },}onfleet_api.workers.create(body=data)```Extended POST requests include `clone`, `forceComplete`, `batchCreate`, `autoAssign` on the *Tasks* endpoint; `setSchedule` on the *Workers* endpoint; `autoDispatch` on the *Teams* endpoint; and `matchMetadata` on all supported entities. For instance:```pythononfleet_api.tasks.clone(id=&quot;&lt;24_digit_ID&gt;&quot;)onfleet_api.tasks.forceComplete(id=&quot;&lt;24_digit_ID&gt;&quot;, body=&quot;&lt;data&gt;&quot;)onfleet_api.tasks.batchCreate(body=&quot;&lt;data&gt;&quot;)onfleet_api.tasks.autoAssign(body=&quot;&lt;data&gt;&quot;)onfleet_api.workers.setSchedule(id=&quot;&lt;24_digit_ID&gt;&quot;, body=&quot;&lt;data&gt;&quot;)onfleet_api.teams.autoDispatch(id=&quot;&lt;24_digit_ID&gt;&quot;, body=&quot;&lt;data&gt;&quot;)onfleet_api.&lt;entity_name_pluralized&gt;.matchMetadata(body=&quot;&lt;data&gt;&quot;)```For more details, check our documentation on [`clone`](https://docs.onfleet.com/reference#clone-task), [`forceComplete`](https://docs.onfleet.com/reference#complete-task), [`batchCreate`](https://docs.onfleet.com/reference#create-tasks-in-batch), [`autoAssign`](https://docs.onfleet.com/reference#automatically-assign-list-of-tasks), [`setSchedule`](https://docs.onfleet.com/reference#set-workers-schedule), [`matchMetadata`](https://docs.onfleet.com/reference#querying-by-metadata), and [`autoDispatch`](https://docs.onfleet.com/reference#team-auto-dispatch).#### PUT RequestsTo update a document within an endpoint:```pythonupdate(id=&quot;&lt;24_digit_ID&gt;&quot;, body=&quot;&lt;data&gt;&quot;)```##### Examples of `update()````pythonnew_data = {    &quot;name&quot;: &quot;Jack Driver&quot;,}onfleet_api.workers.update(id=&quot;&lt;24_digit_ID&gt;&quot;, body=new_data)```##### Examples of `insertTask()````pythononfleet_api.workers.insertTask(id=&quot;&lt;24_digit_ID&gt;&quot;, body=&quot;&lt;data&gt;&quot;)```#### DELETE RequestsTo delete a document within an endpoint:```pythondeleteOne(id=&quot;&lt;24_digit_ID&gt;&quot;)```##### Examples of `deleteOne()````pythononfleet_api.workers.deleteOne(id=&quot;&lt;24_digit_ID&gt;&quot;)```*Go to [top](#onfleet-python-wrapper)*.</longdescription>
</pkgmetadata>