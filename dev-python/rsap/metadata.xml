<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Maintenance](https://img.shields.io/badge/Maintained%3F-Yes!-green.svg)](https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity)![Maintaner](https://img.shields.io/badge/Maintainer-Hunter-blue)[![Open Source? Yes!](https://badgen.net/badge/Open%20Source%20%3F/Yes%21/blue?icon=github)](https://github.com/Naereen/badges/)[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)#### RSAP.... well it is not a proper acronym, but you can think of it as `Random Stuff API Python`.. It makes use of [PGamerX](https://github.com/pgamerxdev)'s Random Stuff API to provide you features such as jokes, memes, images and also an **AI CHATBOT!!**### The installation is also very very very simple.```pip install rsap```### This will install `rsap` **with only** [requests](https://docs.python-requests.org/en/master/) module.. You need to install [aioHTTP](https://docs.aiohttp.org/en/stable/) for AsyncRSAP and [discord.py](https://discordpy.readthedocs.io/en/latest/) for DisRSAP&lt;br&gt;&lt;br&gt;The module uses the [logging](https://docs.python.org/3/library/logging.html) module of python to print logs to console. Add `logging.basicConfig(level=logging.NOTSET)` to the top of your code and all the the logs would get printed to the console&lt;br&gt;&lt;br&gt;### The usage is very very very simple.. There are mainly two classes of this module (well there are three but I would consider two because third, you can't say that it is a proper &quot;class&quot; of the module.)&lt;br&gt;&lt;br&gt;# ASYNC USAGETo use this module asynchronously, RSAP provides you with the `AsyncRSAP` class of the module... It uses the [aioHTTP](https://docs.aiohttp.org/en/stable/) module to send GET request to the API... A small example for the same is shown below&lt;br&gt;```pythonfrom rsap import AsyncRSAPimport asynciobot = AsyncRSAP(&quot;api_key_here&quot;, &quot;other_kwargs_here&quot;)# For AI Responseresponse = asyncio.run(bot.ai_response(&quot;message_here&quot;, &quot;unique_id&quot;))print(response)# For Jokesresponse = asyncio.run(bot.jokes(&quot;type&quot;))print(response)# For Imagesresponse = asyncio.run(bot.image(&quot;type&quot;))print(response)```The code above would use the [aioHTTP](https://docs.aiohttp.org/en/stable/) module..&lt;br&gt;&lt;br&gt;# SYNC USAGETo use this module synchronously, RSAP provides you with the `RSAP` class of the module... It uses the [requests](https://docs.python-requests.org/en/master/) module to send the GET request to the API... A small example for the same is shown below```pythonfrom rsap import RSAPbot = RSAP(&quot;api_key_here&quot;, &quot;other_kwargs_here&quot;)# For AI Responseresponse = bot.ai_response(&quot;message&quot;, &quot;unique_id&quot;) print(response)# For Jokesresponse = bot.joke(&quot;type&quot;)print(response)# For Imagesresponse = bot.image(&quot;type&quot;)print(response)# For Closingbot.close()```The code above would use the [requests](https://docs.python-requests.org/en/master/) module..&lt;br&gt;&lt;br&gt;So last of all that, we have that other so-called &quot;class&quot; known as `DisRSAP` class.. It is just an extension of the RSAP module, which uses the discord.py's [commands.Bot](https://discordpy.readthedocs.io/en/latest/ext/commands/api.html?highlight=bot#discord.ext.commands.Bot) module to send the bot responses in a particular Text Channel. It uses the `on_message` trigger to check for messages in the chat channel.. The example for the same is shown below```pythonfrom rsap import DisRSAPbot = DisRSAP(&quot;api_key_here&quot;, text_channel_id_here, command_prefix=&quot;!&quot;, &quot;other_kwargs_here&quot;) #Don't specify any intents because &quot;discord.Intents.all()&quot; is already enabled in the source code.bot.run(&quot;bot_token_here&quot;)```### So the above code would simply run your bot and the bot would reply to **every single message** sent in that channel!!&lt;br&gt;So lemme guess, you are now thinking what are even those `kwargs` mentioned above 😁So here is a list of kwargs that you can add to your code!!!👉 api_key ([str](https://docs.python.org/3/library/stdtypes.html#str)): The API key which you can get from https://api-info.pgamerx.com/register&lt;br&gt;&lt;br&gt;👉 dev_name ([str](https://docs.python.org/3/library/stdtypes.html#str), optional): The name of the developer who coded the chatbot. Used in responses. Defaults to Hunter.&lt;br&gt;&lt;br&gt;👉 unique_id ([str](https://docs.python.org/3/library/stdtypes.html#str), optional): The Unique ID to create custom sessions for each user. Defaults to a random [uuid.uuid4](https://docs.python.org/3/library/uuid.html#uuid.uuid4) string.&lt;br&gt;&lt;br&gt;👉 bot_name ([str](https://docs.python.org/3/library/stdtypes.html#str), optional): The name of the chatbot. Used in responses. Defaults to PyChat.&lt;br&gt;&lt;br&gt;👉 type ([str](https://docs.python.org/3/library/stdtypes.html#str), optional): The type of API to use. Stable is recommended but can also be `unstable`. Defaults to &quot;stable&quot;.&lt;br&gt;&lt;br&gt;👉 language ([str](https://docs.python.org/3/library/stdtypes.html#str), optional): The language to chat with the chatbot in. Defaults to &quot;en&quot;.&lt;br&gt;&lt;br&gt;👉 plan ([str](https://docs.python.org/3/library/stdtypes.html#str), optional): The plan, if any, that you have subscribed to. Defaults to `None`## List of Types of Jokes 😆 `any` 😆 `dev`😆 `spooky`😆 `pun`# List of Types of Images📸 `aww`📸 `duck`📸 `dog`📸 `cat`📸 `memes`📸 `dankmemes`📸 `holup`📸 `art`📸 `harrypottermemes`📸 `facepalm`# List of Plans📝 `pro`📝 `ultra`📝 `biz`📝 `mega`# CONTACT MENeed some help for some things?? Join [this discord](https://discord.gg/GWugD56QnE) (is of a friend), and you can always find me here or add me on discord `нυηтєя#8785` :D&lt;br&gt;&lt;br&gt;## Also, if you want to buy the pro plans of the API, be sure to check [this out](https://form.jotform.com/211240494443449)!</longdescription>
</pkgmetadata>