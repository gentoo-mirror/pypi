<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;Belvo Python SDK&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/belvo-python/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/belvo-python?style=for-the-badge&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypistats.org/packages/belvo-python&quot;&gt;&lt;img alt=&quot;PyPI - Downloads&quot; src=&quot;https://img.shields.io/pypi/dm/belvo-python?style=for-the-badge&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://app.circleci.com/pipelines/github/belvo-finance/belvo-python&quot;&gt;&lt;img alt=&quot;CircleCI (.com)&quot; src=&quot;https://img.shields.io/travis/com/belvo-finance/belvo-python/master?style=for-the-badge&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://coveralls.io/github/belvo-finance/belvo-python&quot;&gt;&lt;img alt=&quot;Coveralls github&quot; src=&quot;https://img.shields.io/coveralls/github/belvo-finance/belvo-python?style=for-the-badge&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Coveralls github&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge&quot;&gt;&lt;/a&gt;&lt;/p&gt;## üìï DocumentationHow to use `belvo-python`: https://belvo-finance.github.io/belvo-python/If you want to check the full documentation about Belvo API: https://docs.belvo.comOr if you want to more information about:* [Getting Belvo API keys](https://developers.belvo.com/docs/get-your-belvo-api-keys)* [Using Connect Widget](https://developers.belvo.com/docs/connect-widget)* [Testing in sandbox](https://developers.belvo.com/docs/test-in-sandbox)* [Using webhooks and recurrent links](https://developers.belvo.com/docs/webhooks)## üìã Requirements* Python 3.6+## üöÄ Getting startedInstall using `pip`:```$ pip install belvo-python```## Usage (create link via widget)When your user successfully links their account using the [Connect Widget](https://developers.belvo.com/docs/connect-widget), your implemented callback funciton will return the `link_id` required to make further API to retrieve information.```pythonfrom pprint import pprintfrom belvo.client import Clientfrom belvo.enums import AccessMode# Login to Belvo APIclient = Client(&quot;your-secret-key-id&quot;, &quot;your-secret-key&quot;, &quot;sandbox&quot;)# Get the link_id from the result of your widget callback functionlink_id = result_from_callback_function.id# Get all accountsclient.Accounts.create(link=link_id)# Pretty print all checking accountsfor account in client.Accounts.list(type=&quot;checking&quot;):    pprint(account)```## Usage (create link via SDK)You can also manually create the link using the SDK. However, for security purposes, we highly recommend, that you use the [Connect Widget](https://developers.belvo.com/docs/connect-widget) to create the link and follow the **Usage (create link via widget)** example.```pythonfrom pprint import pprintfrom belvo.client import Clientfrom belvo.enums import AccessMode# Login to Belvo APIclient = Client(&quot;your-secret-key-id&quot;, &quot;your-secret-key&quot;, &quot;sandbox&quot;)# Register a link link = client.Links.create(    institution=&quot;erebor_mx_retail&quot;,    username=&quot;johndoe&quot;,    password=&quot;supersecret&quot;,    access_mode=AccessMode.SINGLE)# Get all accountsclient.Accounts.create(link=link[&quot;id&quot;])# Pretty print all checking accountsfor account in client.Accounts.list(type=&quot;checking&quot;):    pprint(account)```## Errors and exceptionsBy default, when you use our SDK, we automatically return the [error](https://developers.belvo.com/docs/integration-overview#error-handling). However, if you prefer to receive the exception, you need to set the `raise_exception` optional parameter to `True`.```pythonfrom pprint import pprintfrom belvo.client import Clientfrom belvo.enums import AccessModefrom belvo.exceptions import RequestError# Login to Belvo APIclient = Client(&quot;my-secret-key-id&quot;, &quot;my-secret-key&quot;, &quot;sandbox&quot;)try:    # Register a link    link = client.Links.create(        access_mode=AccessMode.SINGLE,        institution=&quot;erebor_mx_retail&quot;,        username=&quot;&lt;username&gt;&quot;,        password=&quot;&lt;pass&gt;&quot;,        raise_exception=True, # Set this optional paramter    )except RequestError as e:    # do something with the error    pprint(e)else:    # do something with the link    pprint(link)```## üêç DevelopmentTo release a new version of the SDK to PyPI:- Create a new branch from master.- Use `make new-version major|minor|patch` to bump a new version.- Create a new pull request for the new version.- Once the new version is merged in `master`, create a `tag` matching the new version.## üë• Contributing**Anyone** can do something to make `belvo-python` better, so contributors are always welcome!If you wish to submit a pull request, please be sure check the items on this list:- [ ] Tests related to the changed code were executed- [ ] The source code has been coded following the OWASP security best practices (https://owasp.org/www-pdf-archive/OWASP_SCP_Quick_Reference_Guide_v2.pdf).- [ ] Commit message properly labeled- [ ] There is a ticket associated to each PR. For more details about contributing to this project, please take a look to our [guidelines](CONTRIBUTING.md). </longdescription>
</pkgmetadata>