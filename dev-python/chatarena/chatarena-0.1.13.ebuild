# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Multi-Agent Language Game Environments for Large Language Models"

HOMEPAGE="https://github.com/chatarena/chatarena"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all all_backends all_envs anthropic bard cohere database gradio huggingface langchain pettingzoo testing umshini"
DEPENDENCIES="dev-python/openai[${PYTHON_USEDEP}]
	dev-python/tenacity[${PYTHON_USEDEP}]
	dev-python/rich[${PYTHON_USEDEP}]
	dev-python/prompt-toolkit[${PYTHON_USEDEP}]
	all? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	all? ( dev-python/cohere[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/gradio[${PYTHON_USEDEP}] )
	all? ( dev-python/pettingzoo[${PYTHON_USEDEP}] )
	all? ( dev-python/chess[${PYTHON_USEDEP}] )
	all? ( dev-python/rlcard[${PYTHON_USEDEP}] )
	all? ( dev-python/pygame[${PYTHON_USEDEP}] )
	all? ( dev-python/gymnasium[${PYTHON_USEDEP}] )
	all? ( dev-python/supabase[${PYTHON_USEDEP}] )
	all? ( dev-python/bardapi[${PYTHON_USEDEP}] )
	all? ( dev-python/langchain[${PYTHON_USEDEP}] )
	all? ( dev-python/deptry[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	all_backends? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	all_backends? ( dev-python/cohere[${PYTHON_USEDEP}] )
	all_backends? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all_backends? ( dev-python/bardapi[${PYTHON_USEDEP}] )
	all_backends? ( dev-python/langchain[${PYTHON_USEDEP}] )
	all_envs? ( dev-python/pettingzoo[${PYTHON_USEDEP}] )
	all_envs? ( dev-python/chess[${PYTHON_USEDEP}] )
	all_envs? ( dev-python/rlcard[${PYTHON_USEDEP}] )
	all_envs? ( dev-python/pygame[${PYTHON_USEDEP}] )
	all_envs? ( dev-python/langchain[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	bard? ( dev-python/bardapi[${PYTHON_USEDEP}] )
	cohere? ( dev-python/cohere[${PYTHON_USEDEP}] )
	database? ( dev-python/supabase[${PYTHON_USEDEP}] )
	gradio? ( dev-python/gradio[${PYTHON_USEDEP}] )
	huggingface? ( dev-python/transformers[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain[${PYTHON_USEDEP}] )
	pettingzoo? ( dev-python/pettingzoo[${PYTHON_USEDEP}] )
	pettingzoo? ( dev-python/chess[${PYTHON_USEDEP}] )
	pettingzoo? ( dev-python/rlcard[${PYTHON_USEDEP}] )
	pettingzoo? ( dev-python/pygame[${PYTHON_USEDEP}] )
	pettingzoo? ( dev-python/gymnasium[${PYTHON_USEDEP}] )
	testing? ( dev-python/deptry[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	umshini? ( dev-python/pettingzoo[${PYTHON_USEDEP}] )
	umshini? ( dev-python/gymnasium[${PYTHON_USEDEP}] )
	umshini? ( dev-python/langchain[${PYTHON_USEDEP}] )
	umshini? ( dev-python/colorama[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
