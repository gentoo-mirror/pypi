<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;Welcome to ClassOpt üëã&lt;/h1&gt;&lt;p&gt;  &lt;img alt=&quot;Version&quot; src=&quot;https://img.shields.io/pypi/v/classopt&quot; /&gt;  &lt;a href=&quot;https://github.com/moisutsu/classopt/blob/main/LICENSE&quot; target=&quot;_blank&quot;&gt;    &lt;img alt=&quot;License: MIT&quot; src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://twitter.com/moisutsu&quot; target=&quot;_blank&quot;&gt;    &lt;img alt=&quot;Twitter: moisutsu&quot; src=&quot;https://img.shields.io/twitter/follow/moisutsu.svg?style=social&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;&gt; Arguments parser with class for Python, inspired by [StructOpt](https://github.com/TeXitoi/structopt)## Install```shpip install classopt```## UsageImport `classopt` and define the Opt class with decorator.```pythonfrom classopt import classopt@classopt(default_long=True)class Opt:    file: str    count: int = 3    numbers: list[int]    flag: boolif __name__ == &quot;__main__&quot;:    opt = Opt.from_args()    print(opt)    print(opt.file)```Run with command line arguments.```bash$ python example.py --file example.txt --numbers 1 2 3 --flagOpt(file='example.txt', count=3, numbers=[1, 2, 3], flag=True)example.txt```You can specify most of the arguments to [argparse.ArgumentParser.add_argument](https://docs.python.org/ja/3/library/argparse.html#argparse.ArgumentParser.add_argument) in `config` (except name_or_flags).```pythonfrom classopt import classopt, config@classoptclass Opt:    file: str    count: int = config(long=True)    numbers: list = config(long=True, short=True, nargs=&quot;+&quot;, type=int)    flag: bool = config(long=True, action=&quot;store_false&quot;)if __name__ == &quot;__main__&quot;:    opt = Opt.from_args()    print(opt)``````bash$ python example.py example.txt --count 5 -n 1 2 3 --flagOpt(file='example.txt', count=5, numbers=[1, 2, 3], flag=False)```Some details```python# `default_long=True` is equivalent to `config(long=True)' for all members# Similarly, you can do `default_short=True`@classopt(default_long=True)class Opt:    # `long=False` overrides `default_long=True`    file: str = config(long=False)    # equivalent to `numbers: list = config(nargs=&quot;*&quot;, type=int)`    # and `numbers: typing.List[int]`    numbers: list[int]    # equivalent to `flag: bool = config(action=&quot;store_true&quot;)`    flag: bool```### Other WayYou can also define an argument parser by inheriting from `ClassOpt`.```pythonfrom classopt import ClassOpt, configclass Opt(ClassOpt):    file: str    count: int = config(long=True)    numbers: list[int] = config(long=True, short=&quot;-c&quot;)    flag: bool = config(long=True)if __name__ == &quot;__main__&quot;:    opt = Opt.from_args()    print(opt)    print(opt.file)```Run with command line arguments.```bash$ python example.py example.txt --count 5 -c 1 2 3 --flagOpt(file='example.txt', count=5, numbers=[1, 2, 3], flag=True)example.txt```The inherited method does not support some features and may disappear in the future.So we recommend the decorator method.## Run tests```shpoetry run pytest```## Authorüë§ **moisutsu*** Twitter: [@moisutsu](https://twitter.com/moisutsu)* Github: [@moisutsu](https://github.com/moisutsu)## Show your supportGive a ‚≠êÔ∏è if this project helped you!## üìù LicenseCopyright ¬© 2021 [moisutsu](https://github.com/moisutsu).&lt;br /&gt;This project is [MIT](https://github.com/moisutsu/classopt/blob/main/LICENSE) licensed.***_This README was generated with ‚ù§Ô∏è by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_</longdescription>
</pkgmetadata>