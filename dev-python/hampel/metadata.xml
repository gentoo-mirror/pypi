<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># TheoryThe Hampel filter is generally used to detect anomalies in data with a timeseries structure. It basically consists of a sliding window of a parameterizable size. For each window, each observation will be compared with the Median Absolute Deviation (MAD). The observation will be considered an outlier in the case in which it exceeds the MAD by n times (the parameter n is also parameterizable). For more details, see the following Medium post as well as the Wikipedia entry on MAD.https://medium.com/wwblog/clean-up-your-time-series-data-with-a-hampel-filter-58b0bb3ebb04https://en.wikipedia.org/wiki/Median_absolute_deviation# Install PackageTo install the package execute the following command.```pip install hampel```# Usage```hampel(ts, window_size=5, n=3)hampel(ts, window_size=5, n=3, imputation=True)```# Arguments- **ts** - A pandas Series object representing the timeseries - **window_size** -  Total window size will be computed as 2*window_size + 1- **n** - Threshold, default is 3 (Pearson's rule)- **imputation** - If set to False, then the algorithm will be used for outlier detection.        If set to True, then the algorithm will also imput the outliers with the rolling median.# Code Example```import matplotlib.pyplot as pltimport pandas as pdfrom hampel import hampelts = pd.Series([1, 2, 1 , 1 , 1, 2, 13, 2, 1, 2, 15, 1, 2])# Just outlier detectionoutlier_indices = hampel(ts, window_size=5, n=3)print(&quot;Outlier Indices: &quot;, outlier_indices)# Outlier Imputation with rolling mediants_imputation = hampel(ts, window_size=5, n=3, imputation=True)ts.plot(style=&quot;k-&quot;)ts_imputation.plot(style=&quot;g-&quot;)plt.show()```</longdescription>
</pkgmetadata>