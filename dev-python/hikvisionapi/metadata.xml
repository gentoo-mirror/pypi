<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![CircleCI](https://circleci.com/gh/MissiaL/hikvision-client.svg?style=svg)](https://circleci.com/gh/MissiaL/hikvision-client)# Python Library for Hikvision CamerasSimple and easy to use library for working with video equipment from Hikvision.## Install```bashpip install hikvisionapi```## ExamplesThere are two formats for receiving a response:```pythonfrom hikvisionapi import Clientcam = Client('http://192.168.0.2', 'admin', 'admin')# Dict response (default)response = cam.System.deviceInfo(method='get')response == {    u'DeviceInfo': {        u'@version': u'2.0',        '...':'...'        }    }# xml text responseresponse = cam.System.deviceInfo(method='get', present='text')response == '''&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;        &lt;DeviceInfo version=&quot;1.0&quot; xmlns=&quot;http://www.hikvision.com/ver20/XMLSchema&quot;&gt;        &lt;deviceName&gt;HIKVISION&lt;/deviceName&gt;        &lt;/DeviceInfo&gt;'''```Hints:```python# to get the channel infomotion_detection_info = cam.System.Video.inputs.channels[1].motionDetection(method='get')# to send data to device:xml = cam.System.deviceInfo(method='get', present='text')cam.System.deviceInfo(method='put', data=xml)# to get events (motion, etc..)# Increase timeout if you want to wait for the event to be receivedcam = Client('http://192.168.0.2', 'admin', 'Password', timeout=30)cam.count_events = 2 # The number of events we want to retrieve (default = 1)response = cam.Event.notification.alertStream(method='get', type='stream')response == [{    u'EventNotificationAlert':{        u'@version': u'2.0',        u'@xmlns': u'http://www.hikvision.com/ver20/XMLSchema',        u'activePostCount': u'0',        u'channelID': u'1',        u'dateTime': u'2018-03-21T15:49:02+08:00',        u'eventDescription': u'videoloss alarm',        u'eventState': u'inactive',        u'eventType': u'videoloss'        }   }]# Alternative solution to get eventscam = Client('http://192.168.0.2', 'admin', 'Password', timeout=1)while True:    try:        response = cam.Event.notification.alertStream(method='get', type='stream')        if response:            print response    except Exception:        pass# to get opaque data type and write to fileresponse = cam.System.configurationData(method='get', type='opaque_data')with open('my_file', 'wb') as f:    for chunk in response.iter_content(chunk_size=1024):         if chunk:            f.write(chunk)            # Get and save picture from camera            response = client.Streaming.channels[102].picture(method='get', type='opaque_data')with open('screen.jpg', 'wb') as f:    for chunk in response.iter_content(chunk_size=1024):        if chunk:            f.write(chunk)                ```## Examples (Async)```pythonfrom hikvisionapi import AsyncClientcam = AsyncClient('http://192.168.0.2', 'admin', 'admin')# Dict response (default)response = await cam.System.deviceInfo(method='get')response == {    u'DeviceInfo': {        u'@version': u'2.0',        '...':'...'        }    }# xml text responseresponse = await cam.System.deviceInfo(method='get', present='text')response == '''&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;        &lt;DeviceInfo version=&quot;1.0&quot; xmlns=&quot;http://www.hikvision.com/ver20/XMLSchema&quot;&gt;        &lt;deviceName&gt;HIKVISION&lt;/deviceName&gt;        &lt;/DeviceInfo&gt;'''# to send data to device:xml = cam.System.deviceInfo(method='get', present='text')await cam.System.deviceInfo(method='put', data=xml)# to get events (motion, etc..)# Increase timeout if you want to wait for the event to be received (None for infinite)async for event in cam.Event.notification.alertStream(method='get', type='stream', timeout=None):    event == {        u'EventNotificationAlert':{            u'@version': u'2.0',            u'@xmlns': u'http://www.hikvision.com/ver20/XMLSchema',            u'activePostCount': u'0',            u'channelID': u'1',            u'dateTime': u'2018-03-21T15:49:02+08:00',            u'eventDescription': u'videoloss alarm',            u'eventState': u'inactive',            u'eventType': u'videoloss'            }    }# Get and save picture from camerawith open('screen.jpg', 'wb') as f:    async for chunk in cam.Streaming.channels[102].picture(method='get', type='opaque_data'):        if chunk:            f.write(chunk)```## How to run the tests```bashpipenv install --devpipenv run pytestpipenv run pytest --cov-report html --cov hikvisionapi # to get coverage report in ./htmlcov/# or you can get into the virtual env with:pipenv shellpytest```</longdescription>
</pkgmetadata>