<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pyechorobotics=============&lt;picture&gt;  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://brands.home-assistant.io/_/echorobotics/dark_logo@2x.png&quot;&gt;  &lt;img alt=&quot;Echorobotics Logo&quot; src=&quot;https://brands.home-assistant.io/_/echorobotics/logo@2x.png&quot;&gt;&lt;/picture&gt;Allows control and reads status of robot lawn mowers by echorobotics.Used by [Home Assistant Echorobotics integration](https://github.com/functionpointer/home-assistant-echorobotics-integration).Example:```pythonimport sysimport echoroboticsapiimport aiohttpimport asyncioimport loggingasync def main():    async with aiohttp.ClientSession(cookies=echoroboticsapi.create_cookies(user_id=&quot;your-user-id&quot;, user_token=&quot;user-user-token&quot;)) as session:        api = echoroboticsapi.Api(session, robot_ids=[&quot;your-robot-id&quot;])        print(await api.last_statuses())        print(await api.set_mode(&quot;chargeAndWork&quot;))if __name__ == &quot;__main__&quot;:    logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)    loop = asyncio.new_event_loop()    loop.run_until_complete(main())```Unfortunately, the API doesn't tell is which mode the robot is in.We can make an educated guess though, depending on what we set ourselves, history events and the status.This is what SmartMode does:```pythonimport sysimport echoroboticsapiimport aiohttpimport asyncioimport loggingasync def main():    async with aiohttp.ClientSession(cookies=echoroboticsapi.create_cookies(user_id=&quot;your-user-id&quot;, user_token=&quot;user-user-token&quot;)) as session:        api = echoroboticsapi.Api(session, robot_ids=[&quot;your-robot-id&quot;])        smartmode = echoroboticsapi.SmartMode(&quot;your-robot-id&quot;)        api.register_smart_mode(smartmode)                print(await api.history_list())        print(await api.last_statuses())        print(await smartmode.get_robot_mode())if __name__ == &quot;__main__&quot;:    logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)    loop = asyncio.new_event_loop()    loop.run_until_complete(main())```See also src/main.py</longdescription>
</pkgmetadata>