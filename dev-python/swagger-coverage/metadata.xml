<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Supported Python Versions](https://img.shields.io/badge/python-3.6-blue)![Version](https://img.shields.io/badge/Version-2.0.1-blue)# swagger-coverage-py#### This project is the adapter that allows using [swagger-coverage](https://github.com/viclovsky/swagger-coverage) tool in Python projects (PyTest+Requests).## Original description summary:&gt; Swagger-coverage gives a full picture about coverage of API tests (regression) based on OAS 2 (Swagger). By saying coverage we mean not a broad theme functionality, but presence (or absence) of calls defined by API methods, parameters, return codes or other conditions which corresponds specification of API.Some more info about the project you can alsofind [HERE](https://viclovsky.github.io/%D0%B0%D0%B2%D1%82%D0%BE%D1%82%D0%B5%D1%81%D1%82%D1%8B%20%D0%BD%D0%B0%20api/2020/01/16/swagger-coverage)&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/JamalZeynalov/swagger-coverage-py/master/images/swagger-coverage-report.png&quot; width=1100&gt;# How to use:All required steps are listed below. Additionally, you can find a working examplehere: [allure-results-sample](https://github.com/JamalZeynalov/allure-results-sample).### 0. Resolve dependencies:* python 3.6+* java JDK 11+ (with JAVA_HOME environment variable set)* Enable Long Paths (Windows only). Check the  guide [HERE](https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation#enable-long-paths-in-windows-10-version-1607-and-later)### 1. Install `swagger-coverage-py` as a project requirement.```shellpip install swagger-coverage```### 2. Add environment variables (Optionally):```dotenvAPI_DOCS_TYPE=&quot;swagger&quot;  # Note: &quot;openapi&quot; is default type of API docsAPI_DOCS_VERSION=&quot;2.0&quot;  # Note: &quot;3.0.0&quot; is default version of API docsAPI_DOCS_FORMAT=&quot;yaml&quot;  # Note: &quot;json&quot; is default format of API docs and output filesAPI_COVERAGE_REPORTS_DISABLED=True  # Skip requests recording. No files will be saved to 'swagger-coverage-output' dir DEBUG_MODE=True  # Enable debug mode. All commandline logs will be printed to console (False by default)```### 3. Add the session-scoped fixture```pythonimport pytestfrom swagger_coverage_py.reporter import CoverageReporterfrom requests.auth import HTTPBasicAuth@pytest.fixture(scope=&quot;session&quot;, autouse=True)def setup_swagger_coverage():    reporter = CoverageReporter(api_name=&quot;my-project&quot;, host=&quot;http://my-project.com&quot;)    reporter.cleanup_input_files()    reporter.setup(&quot;/api/v1/resources/my_project/doc/swagger.json&quot;, auth=HTTPBasicAuth(&quot;username&quot;, &quot;password&quot;))    yield    reporter.generate_report()```#### If you have 2 and more projects, then just add more reporters:```pythonimport pytestfrom swagger_coverage_py.reporter import CoverageReporterfrom requests.auth import HTTPBasicAuth@pytest.fixture(scope=&quot;session&quot;, autouse=True)def setup_swagger_coverage():    reporter = CoverageReporter(api_name=&quot;petstore&quot;, host=&quot;https://petstore.swagger.io&quot;)    reporter.cleanup_input_files()    reporter.setup(path_to_swagger_json=&quot;/v2/swagger.json&quot;)    reporter2 = CoverageReporter(api_name=&quot;my-project&quot;, host=&quot;http://my-project.com&quot;)    reporter2.cleanup_input_files()    reporter2.setup(path_to_swagger_json=&quot;/api/v1/swagger.json&quot;, auth=HTTPBasicAuth(&quot;username&quot;, &quot;password&quot;))    yield    reporter.generate_report()    reporter2.generate_report()```#### YAML format is also supported:```pythonimport pytestfrom swagger_coverage_py.reporter import CoverageReporter@pytest.fixture(scope=&quot;session&quot;, autouse=True)def setup_swagger_coverage():    reporter = CoverageReporter(api_name=&quot;petstore&quot;, host=&quot;https://petstore.swagger.io&quot;)    reporter.cleanup_input_files()    reporter.setup(&quot;/v2/swagger.yaml&quot;)    yield    reporter.generate_report()```&gt; #### Steps and Parameters:&gt; `api_name` - Define the name of the API. This name will be used to find a configuration file.&lt;br&gt;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; For APIs in this example the files must&gt; have names `swagger-coverage-config-petstore.json` and `swagger-coverage-config-my-project.json`.&lt;br&gt;&gt;&gt; `host` - The host of the API.&gt; It will be used to download a swagger.json file and to identify the CoverageListener output directory for each API.&gt;&gt; `cleanup_input_files()` - THis step deletes all files in the CoverageListener output directory (according to the target host)&gt;&gt; `path_to_swagger_json` - A second part of the HTTP link to your OpenApi/Swagger documentation in JSON format&lt;br&gt;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Adapted `swagger-&lt;api_name&gt;.json` file will be created in your project root.&lt;br&gt;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &quot;Swagger 2.0&quot; format is completely compatible with this tool.&lt;br&gt;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &quot;OpenAPI 3.0.2&quot; format is partly compatible.&gt; &quot;Tags coverage summary&quot; calculation is not supported.&lt;br&gt;&gt;&gt; `auth` - An authentication parameter for &quot;requests&quot; lib. Skip it if your API doesn't require authentication.### 4. Create and place `swagger-coverage-config-&lt;api_name&gt;.json` file(s) to your project:```json{    &quot;rules&quot;: {        &quot;status&quot;: {            &quot;enable&quot;: true,            &quot;ignore&quot;: [                &quot;500&quot;            ],            &quot;filter&quot;: []        },        &quot;only-declared-status&quot;: {            &quot;enable&quot;: false        },        &quot;exclude-deprecated&quot;: {            &quot;enable&quot;: true        }    },    &quot;writers&quot;: {        &quot;html&quot;: {            &quot;locale&quot;: &quot;en&quot;,            &quot;filename&quot;: &quot;swagger-coverage-report-petstore.html&quot;        }    }}```&gt; ### If you have more than 1 API then this config MUST:&gt; #### 1. Be created for each microservice which you track using `CoverageListener`.&gt; Otherwise, the default behavior will be applied, and your report will be saved as `swagger-coverage-report.html` which may cause override in case you have multiple APIs&gt; #### 2. Contain `writers` section with filename in the format: `swagger-coverage-report-&lt;api_name&gt;.html`&gt; #### 3. Be placed in the root of your projectMore examples of configuration options you can find inthe [Configuration options](https://github.com/JamalZeynalov/swagger-coverage#configuration-options) section of thedocumentation.### 5. Trace all your API calls with CoverageListener:```pythonfrom requests import Responsefrom requests.auth import HTTPBasicAuthfrom swagger_coverage_py.listener import CoverageListenerresponse: Response = CoverageListener(    method=&quot;get&quot;,    base_url=&quot;https://petstore.swagger.io&quot;,    raw_path=&quot;/v2/store/order/{orderId}&quot;,    uri_params={&quot;orderId&quot;: 1},    auth=HTTPBasicAuth(&quot;username&quot;, &quot;password&quot;),    params={&quot;type&quot;: &quot;active&quot;},).response```&gt; #### Note: &quot;auth&quot; and &quot;params&quot; arguments are default for &quot;requests&quot; lib and are not required. &lt;br&gt;You can use any other **kwargs that are applicable for Requests library.### 6. Run your tests and open created `swagger-coverage-report-&lt;api_name&gt;.html` report(s) in your browser.Important remarks:1. Virtual environments are supported. Make sure your virtual environment directory has name `venv`.2. To create report you have to run your test from the project root. Check that workind directory of your runner is   not `&quot;&lt;root&gt;/test&quot;`# How it works:1. The fixture `setup_swagger_coverage` setups required artifacts2. During test execution the CoverageListener saves all requests as JSON files in swagger format to a subdirectory named   as a called host. (e.g. `swagger-coverage-output/petstore.swagger.io/`).3. After all tests execution a `CoverageReporter().generate_report()` creates and saves new report(s) into your project   root.## Created &amp; Maintained By[Jamal Zeinalov](https://github.com/JamalZeynalov)## LicenseSwagger coverage is released under version 2.0 of the [Apache License](http://www.apache.org/licenses/LICENSE-2.0)</longdescription>
</pkgmetadata>