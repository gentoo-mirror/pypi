<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=========rst2html5=========*rst2html5* generates (X)HTML5 documents from standalone reStructuredText sources.It is a complete rewrite of the docutils' *rst2html* and uses new HTML5 constructs such as:code:`&lt;section&gt;` and :code:`&lt;aside&gt;`.Installation============.. code-block:: bash    $ pip install rst2html5Usage=====.. code-block:: bash$ rst2html5 [options] SOURCE [DEST]Options:--no-indent             Don't indent output--stylesheet=&lt;URL or path&gt;                        Specify a stylesheet URL to be included.                        (This option can be used multiple times)--script=&lt;URL or path&gt;  Specify a script URL to be included.                        (This option can be used multiple times)--script-defer=&lt;URL or path&gt;                        Specify a script URL with a defer attribute                        to be included in the output HTML file.                        (This option can be used multiple times)--script-async=&lt;URL or path&gt;                        Specify a script URL with a async attribute                        to be included in the output HTML file.                        (This option can be used multiple times)--html-tag-attr=&lt;attribute&gt;                        Specify a html tag attribute.                        (This option can be used multiple times)--template=&lt;filename or text&gt;                        Specify a filename or text to be used as the HTML5                        output template. The template must have the {head} and                        {body} placeholders. The &quot;&lt;html{html_attr}&gt;&quot;                        placeholder is recommended.--define=&lt;identifier&gt;   Define a case insensitive identifier to be used with                        ifdef and ifndef directives. There is no value                        associated with an identifier. (This option can be                        used multiple times)If ``DEST`` is not provided, the output is send to ``stdout``.Example-------Consider a file called ``example.rst`` that contains:.. code-block:: rst    Title    =====    Some text and a target to `Title 2`_. **strong emphasis**:    * item 1    * item 2    Title 2    =======    .. parsed-literal::        Inline markup is supported, e.g. *emphasis*, **strong**, ``literal        text``,        _`hyperlink targets`, and `references &lt;http://www.python.org/&gt;`_The command to produce an ``example.html`` output file is::    $ rst2html5 example.rst example.htmlThe HTML5 produced is clean and tidy:.. code-block:: html    &lt;!DOCTYPE html&gt;    &lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;section id=&quot;title&quot;&gt;            &lt;h1&gt;Title&lt;/h1&gt;            &lt;p&gt;Some text and a target to &lt;a href=&quot;#title-2&quot;&gt;Title 2&lt;/a&gt;. &lt;strong&gt;strong emphasis&lt;/strong&gt;:&lt;/p&gt;            &lt;ul&gt;                &lt;li&gt;item 1&lt;/li&gt;                &lt;li&gt;item 2&lt;/li&gt;            &lt;/ul&gt;        &lt;/section&gt;        &lt;section id=&quot;title-2&quot;&gt;            &lt;h1&gt;Title 2&lt;/h1&gt;            &lt;pre&gt;Inline markup is supported, e.g. &lt;em&gt;emphasis&lt;/em&gt;, &lt;strong&gt;strong&lt;/strong&gt;, &lt;code&gt;literal    text&lt;/code&gt;,    &lt;a id=&quot;hyperlink-targets&quot;&gt;hyperlink targets&lt;/a&gt;, and &lt;a href=&quot;http://www.python.org/&quot;&gt;references&lt;/a&gt;&lt;/pre&gt;        &lt;/section&gt;    &lt;/body&gt;    &lt;/html&gt;Stylesheets and Scripts-----------------------No stylesheets or scripts are spread over the HTML5 by default.However stylesheets and javascripts URLs or paths can be included through ``stylesheet`` and ``script`` options:.. parsed-literal::    $ rst2html5 example.rst \\    **--stylesheet** https://example.com/css/default.css \\    **--stylesheet-inline** css/simple.css \\    **--script** ``https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js``    **--script-defer** ``js/test1.js``    **--script-async** ``js/test2.js``.. code-block:: html    &lt;!DOCTYPE html&gt;    &lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot; /&gt;        &lt;link rel=&quot;stylesheet&quot; href=&quot;https://example.com/css/default.css&quot; /&gt;        &lt;style&gt;h1 {font-size: 20em}    img.icon {        width: 48px;        height: 48px;    }    h2 {color: red}    &lt;/style&gt;        &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;js/test1.js&quot; defer=&quot;defer&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;js/test2.js&quot; async=&quot;async&quot;&gt;&lt;/script&gt;    &lt;/head&gt;    ...HTML tag attributes can be included through ``html-tag-attr`` option:.. parsed-literal::    $ rst2html5 **--html-tag-attr** 'lang=&quot;pt-BR&quot;' example.rst.. code-block:: html    &lt;!DOCTYPE html&gt;    &lt;html lang=&quot;pt-BR&quot;&gt;    ...Templates---------Custom HTML5 template via the :literal:`--template` option. Example:.. parsed-literal::    $ template='&lt;!DOCTYPE html&gt;    &lt;html{html_attr}&gt;    &lt;head&gt;{head}    &lt;!-- custom links and scripts --&gt;        &lt;link href=&quot;css/default.css&quot; rel=&quot;stylesheet&quot; /&gt;        &lt;link href=&quot;css/pygments.css&quot; rel=&quot;stylesheet&quot; /&gt;        &lt;script src=&quot;http\://code.jquery.com/jquery-latest.min.js&quot;&gt;&lt;/script&gt;    &lt;/head&gt;    &lt;body&gt;{body}&lt;/body&gt;    &lt;/html&gt;'    $ echo 'one line' &gt; example.rst    $ rst2html5 **--template &quot;$template&quot;** example.rst.. code-block:: html    &lt;!DOCTYPE html&gt;    &lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot; /&gt;        &lt;!-- custom links and scripts --&gt;        &lt;link href=&quot;css/default.css&quot; rel=&quot;stylesheet&quot; /&gt;        &lt;link href=&quot;css/pygments.css&quot; rel=&quot;stylesheet&quot; /&gt;        &lt;script src=&quot;http://code.jquery.com/jquery-latest.min.js&quot;&gt;&lt;/script&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;p&gt;one line&lt;/p&gt;    &lt;/body&gt;    &lt;/html&gt;New Directives==============``define``, ``undef``, ``ifdef`` and ``ifndef``-----------------------------------------------:code:`rst2html5` provides some new directives: ``define``, ``undef``, ``ifdef`` and ``ifndef``,similar to those used in C++.They allow to conditionally include (or not) some rst snippets:.. code-block:: rst    .. ifdef:: x        this line will be included if 'x' was previously definedIn case of you check two or more identifiers,there must be an operator (``[and | or]``) defined:.. code-block:: rst    .. ifdef:: x y z        :operator: or        This line will be included only if 'x', 'y' or 'z' is defined.``stylesheet`` and ``script``-----------------------------From rst2html5 1.9, you can include stylesheets and scripts via directives inside a reStructuredText text:.. code-block:: rst    Just an ordinary paragraph.    .. stylesheet:: css/default.css    .. stylesheet:: https://pronus.io/css/standard.css    .. script:: http://code.jquery.com/jquery-latest.min.js    .. script:: slide.js        :defer:    .. script:: test/animations.js        :async:    Another paragraph.. code-block:: html    &lt;!DOCTYPE html&gt;    &lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot; /&gt;        &lt;link href=&quot;css/default.css&quot; rel=&quot;stylesheet&quot; /&gt;        &lt;link href=&quot;https://pronus.io/css/standard.css&quot; rel=&quot;stylesheet&quot; /&gt;        &lt;script src=&quot;http://code.jquery.com/jquery-latest.min.js&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;slide.js&quot; defer=&quot;defer&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;test/animations.js&quot; async=&quot;async&quot;&gt;&lt;/script&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;p&gt;Just an ordinary paragraph.&lt;/p&gt;        &lt;p&gt;Another paragraph&lt;/p&gt;    &lt;/body&gt;    &lt;/html&gt;``template``------------There also is a :code:`template` directive. The usage is:.. code-block:: rst    .. template:: filename    or    .. template::        template content here.New Roles=========``:abbr:``----------From `MDN Web Docs &lt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr&gt;`_:    The HTML Abbreviation element (:code:`&lt;abbr&gt;`) represents an abbreviation or acronym;    the optional title attribute can provide an expansion or description for the abbreviation.    If present, title must contain this full description and nothing else.To create an abbreviation in ``rst2html5`` use the ``:abbr:`` role:.. code:: rst    * :abbr:`SPA (Single-Page Application)`    * :abbr:`ASGI (Asynchronous Server Gateway Interface)` is a spiritual successor to :abbr:`WSGI`    * :abbr:`WSGI (Web Server Gateway Interface)`Resulting in:.. code:: html    &lt;ul&gt;        &lt;li&gt;            &lt;abbr title=&quot;Single-Page Application&quot;&gt;SPA&lt;/abbr&gt;        &lt;/li&gt;        &lt;li&gt;            &lt;abbr title=&quot;Asynchronous Server Gateway Interface&quot;&gt;ASGI&lt;/abbr&gt;        is a spiritual successor to            &lt;abbr&gt;WSGI&lt;/abbr&gt;        &lt;/li&gt;        &lt;li&gt;            &lt;abbr title=&quot;Web Server Gateway Interface&quot;&gt;WSGI&lt;/abbr&gt;        &lt;/li&gt;    &lt;/ul&gt;Note that if the abbreviation follows the pattern ``ABBR (Description for the abbreviation)``,the description is extracted and becomes the ``title``.How To Use rst2html5 Programmatically=====================================You should use ``rst2html5.HTML5Writer`` with one of the ``publish_*` methods available in ``docutils.core``.In the case that the input and output will be in memory,``publish_parts`` is the best fit:.. code:: python    from docutils.core import publish_parts    from rst2html5 import HTML5Writer    text = r'''The area of a circle is :math:`A_\text{c} = (\pi/4) d^2`.    .. math::        \frac{ \sum_{t=0}^{N}f(t,k) }{N}    '''    body = publish_parts(writer=HTML5Writer(), source=text)['body']    print(body)Resulting in:.. code:: html    &lt;p&gt;The area of a circle is        &lt;span class=&quot;math&quot;&gt;\(A_\text{c} = (\pi/4) d^2\)&lt;/span&gt;    .&lt;/p&gt;    &lt;div class=&quot;math&quot;&gt;\(\frac{ \sum_{t=0}^{N}f(t,k) }{N}\)&lt;/div&gt;.. attention::    Version 2.0 renames the module ``rst2html5_`` back to ``rst2html5``    since the conflict with docutils installation is solved.    Importing ``rst2html5_.HTML5Writer`` still works though.    See the section &quot;**Workaround to Conflicts with Docutils**&quot;    on ``docs/design_notes.rst`` for more information.See also: `The Docutils Publisher &lt;https://docutils.sourceforge.io/docs/api/publisher.html&gt;`_Links=====* `Documentation &lt;https://rst2html5.readthedocs.org/&gt;`_* `Project page at Heptapod &lt;https://foss.heptapod.net/doc-utils/rst2html5&gt;`_</longdescription>
</pkgmetadata>