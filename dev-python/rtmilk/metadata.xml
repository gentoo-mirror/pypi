<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![codecov](https://codecov.io/gh/rkhwaja/rtmilk/branch/master/graph/badge.svg?token=RaMYgorajr)](https://codecov.io/gh/rkhwaja/rtmilk) [![PyPI version](https://badge.fury.io/py/rtmilk.svg)](https://badge.fury.io/py/rtmilk)Python wrapper for &quot;Remember the Milk&quot; [API](https://www.rememberthemilk.com/services/api/)# Usage of client```pythonfrom rtmilk.client import Clientfrom rtmmilk.models import RTMError# These are the equivalent objects, created differentlyclient = Client.Create(API_KEY, SHARED_SECRET, TOKEN)client2 = await Client.CreateAsync(API_KEY, SHARED_SECRET, TOKEN)try:    task = client.Add(name='name 1')    assert task.complete.value is False    task.tags.Set({'tag1', 'tag2'})    assert task.tags.value == ['tag1', 'tag2']    task = await client.AddAsync(name='name 2')    await task.tags.Set({'tag1', 'tag2'})    tasks = client2.Get('name:&quot;name 1&quot;')    assert tasks[0].tags.value == ['tag1', 'tag2']except RTMError as e:    print(e)```# Usage of API functions directly```pythonfrom rtmilk.api_sync import APIfrom rtmmilk.models import RTMErrorapi = API(API_KEY, SHARED_SECRET, TOKEN)timeline = api.TimelinesCreate().timelinetry:    api.TasksAdd(timeline, 'task name')except RTMError as e:    print(e)``````pythonfrom rtmilk.api_async import APIAsyncfrom rtmmilk.models import RTMErrorapiAsync = APIAsync(API_KEY, SHARED_SECRET, TOKEN)timeline = await apiAsync.TimelinesCreate().timelinetry:    await apiAsync.TasksAdd(timeline, 'task name')except RTMError as e:    print(e)```# Authorization```pythonfrom rtmilk.authorization import AuthorizationSessionauthenticationSession = AuthorizationSession(API_KEY, SHARED_SECRET, 'delete')input(f&quot;Go to {authenticationSession.url} and authorize. Then Press ENTER&quot;)token = authenticationSession.Done()print(f'Authorization token is {token}')```</longdescription>
</pkgmetadata>