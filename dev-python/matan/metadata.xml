<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**This package is still under development. Be aware of often updates, versionsbelow 0.2 are pre-alpha, and can be changed without any warning, or without anybackward compatibility! **# MaTanShortcut comes from **Mat**erial **An**analysis - ultimately is should containsmodules allowing user to calculate metals and polymersproperties from tensile, HDT (polymers) and DSC tests, as well as theothers. There are few similar packages in PyPI, but none of them I found good tome, so I wrote new one.For now it includes:- ISO:527-1 (polymers tensile test)In near future all the findings functions will be finished, so you can describeyour sample with thermal modifications, comments and compositions as parameter,as well as CI/CD. This should be 0.1.6 version.Nextly the FEM module which will allow to create materials models will beimplemented.  In the beginning, the first feature will allow to create tensileFEM material models, with calculation of mean/worst real values stress-straincurve, and extracting from this curve the needed parameters, like plasticstrains, Young's Modulus etc. At this point export to .csv file will beimplemented. This should be 0.1.7 version Next phase will be export these modelsdirectly to .xml file as ANSYS is using such type, and this seems to be a FEMtool I will be working with. ANSYS already have tool to import from .csv file,so it will just make whole process faster. Later I will try to make export toFreeCAD's/CalculiX material models. This will be 0.1.8.  Finally from thatversion to 0.2 we will try to make whole package robust, and stable as possible._**[Documentation](https://matan.codeberg.page)**_# AbstractNowadays, Python is one of the most popular programming languages, even innon-informatics fields like mechanical engineering, due to its simplicity, andcomputer analysis solvers using FEM methods are part of almost all components,albeit access to material data is sometimes hard due to inadequate data in thedatasheets, problems with calculations, inconsistent information, etc. Toovercome this problem, the Python package was created, which allows to calculatethe stress, strains, tensile modulus, and other properties from force andelongation data from a machine. For now, it includes only polymer testsaccording to the ISO-527-1 standard, but in the future, other standards shouldbe included.Moreover, the package would need a graphical user interface, which could make iteven simpler to use and, more importantly, allow users to upload their obtainedresults into OpenAccess databases and export plastic strains, tensile modulus,and other properties needed to perform FEM and other numerical analysis. Thatcould make FEM methods even more accessible, which would lead to a decrease inthe use of unnecessary materials and, due to this, less CO2 pollution.# How to use it?Just simply put elongation and force arrays into sample.Be aware that sometimes csv files can have diffrent extension depends on machinemanufacturer. To be sure just check it using simples notepad, or try to read itby pandas.```pythonimport matan as mtimport pandas as pdpath_to_your_CSV = r&quot;path/to/your/CSV&quot;# BE AWARE# Somethimes some software machines uses diffrent encoding! Check the documentation of pandas.read_csv for moredf = pd.read_csv(path_to_your_CSV)elongation_array=df[&quot;elongation&quot;]force_array=df[&quot;force&quot;]# This uses N ewtons and mm by default to ensure [N/mm^2] as it is equal to MPa# by default force units are Newtons and lenght units are mmexample=mt.sample(    name=&quot;your sample name&quot;,    thickness = 5,    width= 5,    elongation_array=elongation_array,    force_array=force_array)#Use method below to convert engineering values into  realexample.calculate_real_values()# tensile modulus values between engineering value and real valueprint(ext.eng_values.tensile_modulus, ext.real_values.tensile_modulus)## Engineering values# Value of strenghtprint(ext.eng_values.strength.value, ext.eng_values.strength.strain)# Values at breakprint(ext.eng_values.at_break.stress, ext.eng_values.at_break.strain)# Yield strenght valuesprint(ext.eng_values.yield_strength.value, ext.eng_values.yield_strength.strain)## Real values# Value of strenghtprint(ext.real_values.strength.value, ext.real_values.strength.strain)# Values at breakprint(ext.real_values.at_break.stress, ext.real_values.at_break.strain)# Yield strenght valuesprint(ext.real_values.yield_strength.value, ext.real_values.yield_strength.strain)```</longdescription>
</pkgmetadata>