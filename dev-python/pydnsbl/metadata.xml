<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pydnsbl![pytest workflow](https://github.com/dmippolitov/pydnsbl/actions/workflows/python-app.yml/badge.svg)Async [dnsbl](https://en.wikipedia.org/wiki/DNSBL) lists checker basedon asyncio/aiodns. Checks if ip is listed in anti-spam dns blacklists.Multiple dns blacklists supported. Use aiodns for async dns requests.Usually ip check run for 50+ lists takes less than one second. Also allow to check domains.## Installation`pip install pydnsbl`## Requirements- python &gt;= 3.5- aiodns## Usage### Check ip```&gt;&gt;&gt; import pydnsbl&gt;&gt;&gt; ip_checker = pydnsbl.DNSBLIpChecker()&gt;&gt;&gt; ip_checker.check('8.8.8.8')&lt;DNSBLResult: 8.8.8.8  (0/52)&gt;&gt;&gt;&gt; ip_checker.check('68.128.212.240')&lt;DNSBLResult: 68.128.212.240 [BLACKLISTED] (6/52)&gt;```### Check domain```&gt;&gt;&gt; import pydnsbl&gt;&gt;&gt; domain_checker = pydnsbl.DNSBLDomainChecker()&gt;&gt;&gt; domain_checker.check('google.com')&lt;DNSBLResult: google.com  (0/4)&gt;&gt;&gt;&gt; domain_checker.check('belonging708-info.xyz')&lt;DNSBLResult: belonging708-info.xyz [BLACKLISTED] (2/4)&gt;```### DNSBLResult properties- `DNSBLResult.addr` - ip address or domain that was checked- `DNSBLResult.blacklisted` - boolean, True if ip/domain detected by at least one provider- `DNSBLResult.detected_by` - dictionary containing providers hosts detected this ip/domain as keys and their category verdicts- `DNSBLResult.categories` - combined categories from all providers for this ip/domain- `DNSBLResult.providers` - list of providers that was performing the check- `DNSBLResult.failed_providers` - list of providers that was unable to check this ip properly (possibly provider was down)```&gt;&gt;&gt; result = domain_checker.check('belonging708-info.xyz')&gt;&gt;&gt; result.addr'belonging708-info.xyz'&gt;&gt;&gt; result.blacklistedTrue&gt;&gt;&gt; result.detected_by{'multi.surbl.org': ['unknown'], 'dbl.spamhaus.org': ['spam']}&gt;&gt;&gt; result.categories{'unknown', 'spam'}&gt;&gt;&gt; result.providers[&lt;Provider: uribl.spameatingmonkey.net&gt;, &lt;Provider: multi.surbl.org&gt;, &lt;Provider: rhsbl.sorbs.net &gt;, &lt;Provider: dbl.spamhaus.org&gt;]&gt;&gt;&gt; result.failed_providers[]```## Extending/overriding providers### Basic```pythonfrom pydnsbl import DNSBLIpChecker, providersfrom pydnsbl.providers import BASE_PROVIDERS, Providerproviders = BASE_PROVIDERS + [Provider('yourprovider1.com'), ...]checker = DNSBLIpChecker(providers=providers)```### AdvancedTake a look into providers.py file.-   Use **Provider** class to create your custom providers.-   Override **process_response** method of **Provider** class to map    providers response codes (127.0.0.x) to DNSBL categories.Contact-------Feel free to contact me: ippolitov87 at gmail.com</longdescription>
</pkgmetadata>