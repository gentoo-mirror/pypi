<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>`fastbet`================&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt;``` pythonfrom IPython.display import HTMLimport pandas as pdfrom fastbet.config.mongo import mongo_initfrom fastbet.datastructure.data_extractor import data_aggregatorfrom fastbet.environment import BettingEnv```## Install``` shpip install fastbet```## ConfigIn order to connect to the `mongo` database we require some connectionparameters defined in `toml` format and should be read when the libraryis loaded. The package will look first under `/secrets/config.toml` orin the environment variable `BETTING_ENV_CONFIG`. An example of `config`file is provided with the package and will be used by default. It is theuser’s responsibility to make sure this file is saved at the rightlocation if you want to use your own.Let’s start by registering the connection to the mongo database:``` pythonmongo_init(db_host=&quot;public_atlas&quot;)```## Simplified betting environmentThe punter starts with `$N` (N\&gt;0) in his Bank account and can use themto place bets on several `football` games.He is offered the option to bet on the 3 main markets: `1X2`(home/draw/away), `Asian handicap` and `Total(Over/Under)` (we focus onthe even line) and is only allowed to place a `small`, `medium`, or`big` stake on *one and only one* of the 7 possible selections`home team win`, `away team win`, or `draw` (`1X2` case) or `home` or`away` (`Asian handicap` and `Total`) or skip the betting opportunity.At each step, the punter is presented with some information about a gameand the associated betting opportunities. If he decides to bet, hereceives a *reward* that could be `positive` (profit) or `negative`(loss of his stake). His balance is then updated accordingly and hemoves to the next step i.e next game. An episode ends when the puntergoes bankrupt (Balance \&lt;= 0) or if no more betting opportunities areavailable.### Load games``` pythonfixtures = data_aggregator(limit=10)```### Init environment``` pythonenv = BettingEnv(fixtures)max_steps_limit = fixtures.shape[0]```### Playing random choices``` python# Init RL env.env.reset()# Init done Flag to False.done = False# Init loop counter.i = 0# Stops when it is done or when we have bet on all provided games.while not done and i &lt; max_steps_limit:    # Make a step.    obs, reward, done, info = env.step(env.action_space.sample())    # Increment counter.    i = i + 1```&lt;img src=&quot;./images/img_1.gif&quot;&gt;### Playing Medium Stake on Home Team Win (1X2)``` python# Init RL env.env.reset()# Init done Flag to False.done = False# Init loop counter.i = 0# Stops when it is done or when we have bet on all provided games.while not done and i &lt; max_steps_limit:    # Make a step.    obs, reward, done, info = env.step(2)    # Increment counter.    i = i + 1```&lt;img src=&quot;./images/img_2.gif&quot;&gt;</longdescription>
</pkgmetadata>