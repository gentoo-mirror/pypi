<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Patchman## SummaryPatchman is a Django-based patch status monitoring tool for linux systems.Patchman provides a web interface for monitoring the package updates availablefor linux hosts.[![](https://raw.githubusercontent.com/furlongm/patchman/gh-pages/screenshots/dashboard.png)](https://github.com/furlongm/patchman/tree/gh-pages/screenshots)## How does Patchman work?Patchman clients send a list of installed packages and enabled repositories tothe Patchman server. The Patchman server updates its package list for eachrepository and determines which hosts require updates, and whether those updatesare normal or security updates. The web interface also gives information onpotential issues, such as installed packages that are not from any repository.Hosts, packages, repositories and operating systems can all be filtered. Forexample, it is possible to find out which hosts have a certain version of apackage installed, and which repository it comes from.Patchman does not install update packages on hosts, it determines and displayswhat updates are available for each host.`yum`, `apt` and `zypper` plugins can send reports to the Patchman server everytime packages are installed or removed on a host.## InstallationSee [the installation guide](https://github.com/furlongm/patchman/blob/master/INSTALL.md)for installation options.## UsageThe web interface contains a dashboard with items that need attention, andvarious pages to manipulate hosts, repositories, packages, operating systems andreports.To populate the database, simply run the client on some hosts:```shell$ patchman-client -s http://patchman.example.org```This should provide some initial data to work with.On the server, the `patchman` command line utility can be used to run certainmaintenance tasks, e.g. processing the reports sent from hosts, downloadingrepository update information from the web. Run `patchman -h` for a rundown ofthe usage:```shell$ sbin/patchman -husage: patchman [-h] [-f] [-q] [-r] [-R REPO] [-lr] [-lh] [-u] [-A] [-H HOST]                [-p] [-c] [-d] [-n] [-a] [-D hostA hostB]Patchman CLI tooloptional arguments:  -h, --help            show this help message and exit  -f, --force           Ignore stored checksums and force-refresh all mirrors  -q, --quiet           Quiet mode (e.g. for cronjobs)  -r, --refresh-repos   Refresh repositories  -R REPO, --repo REPO  Only perform action on a specific repository (repo_id)  -lr, --list-repos     List all repositories  -lh, --list-hosts     List all hosts  -u, --host-updates    Find host updates  -A, --host-updates-alt                        Find host updates (alternative algorithm that may be                        faster when there are many homogeneous hosts)  -H HOST, --host HOST  Only perform action on a specific host (fqdn)  -p, --process-reports                        Process pending reports  -c, --clean-reports   Remove all but the last three reports  -d, --dbcheck         Perform some sanity checks and clean unused db entries  -n, --dns-checks      Perform reverse DNS checks if enabled for that host  -a, --all             Convenience flag for -r -A -p -c -d -n  -D hostA hostB, --diff hostA hostB                        Show differences between two hosts in diff-like output  -e, --errata          Download CentOS errata from https://cefs.steve-                        meier.de/```## Dependencies### Server-side dependencies```python3-djangopython3-django-taggingpython3-django-extensionspython3-django-bootstrap3python3-djangorestframeworkpython3-debianpython3-rpmpython3-progressbarpython3-lxmlpython3-defusedxmlpython3-requestspython3-coloramapython3-magicpython3-humanize```The server can optionally make use of celery to asynchronously process thereports sent by hosts.### Client-side dependenciesThe client-side dependencies are kept to a minimum. `rpm` and `dpkg` arerequired to report packages, `yum`, `dnf`, `zypper` and/or `apt` are requiredto report repositories. These packages are normally installed by default onmost systems.deb-based OS's do not always change the kernel version when a kernel update isinstalled, so the `update-notifier-common` package can optionally be installedto enable this functionality. rpm-based OS's can tell if a reboot is requiredto install a new kernel by looking at `uname -r` and comparing it to thehighest installed kernel version, so no extra packages are required on thoseOS's.## ConceptsThe default settings will be fine for most people but depending on your setup,there may be some initial work required to logically organise the data sent inthe host reports. The following explanations may help in this case.There are a number of basic objects - Hosts, Repositories, Packages, OperatingSystems and Reports. There are also Operating System Groups (which are optional)and Mirrors.### HostA Host is a single host, e.g. test01.example.org.### Operating SystemA Host runs an Operating System, e.g. CentOS 7.7, Debian 10.1, Ubuntu 18.04### PackageA Package is a package that is either installed on a Host, or is available todownload from a Repository mirror, e.g. `strace-4.8-11.el7.x86_64`,`grub2-tools-2.02-0.34.el7.centos.x86_64`, etc.### MirrorA Mirror is a collection of Packages available on the web, e.g. a `yum`, `yast`or `apt` repo.### RepositoryA Repository is a collection of Mirrors. Typically all the Mirrors will containthe same Packages. For Red Hat-based Hosts, Repositories automatically linktheir Mirrors together. For Debian-based hosts, you may need to link allMirrors that form a Repository using the web interface. This may reduce thetime required to find updates. Repositories can be marked as being security ornon-security. This makes most sense with Debian and Ubuntu repositories wheresecurity updates are delivered via security repositories. For CentOS securityupdates, see the Erratum section below.### ReportA Host creates a Report using `patchman-client`. This Report is sent to thePatchman server. The Report contains the Host's Operating System, and listsof the installed Packages and enabled Repositories on the Host. The Patchmanserver processes and records the list of Packages and Repositories contained inthe Report.### Operating System Group (optional)An OSGroup is a collection of OS's. For example, an OSGroup named &quot;Ubuntu 18.04&quot;would be comprised of the following OS's:```Ubuntu 18.04.1Ubuntu 18.04.2Ubuntu 18.04.5```Likewise, an OSGroup named &quot;CentOS 7&quot; would be made up of the following OS's:```CentOS 7.5CentOS 7.7.1511```Repositories can be associated with an OSGroup, or with the Host itself. If the`use_host_repos variable` is set to True for a Host, then updates are found bylooking only at the Repositories that belong to that Host. This is the defaultbehaviour and does not require OSGroups to be configured.If `use_host_repos` is set to False, the update-finding process looks at theOSGroup that the Host's Operating System is in, and uses the OSGroup'sRepositories to determine the applicable updates. This is useful in environmentswhere many hosts are homogeneous (e.g. cloud/cluster environments).### ErratumErrata for CentOS can be downloaded from https://cefs.steve-meier.de/ .These errata are parsed and stored in the database. If a PackageUpdatecontains a package that is a security update in the errata, then that update ismarked as being a security update.</longdescription>
</pkgmetadata>