<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># logbesselkProvide function to calculate the modified Bessel function of the second kindand its derivatives.## ReferenceTakashi Takekawa, Fast parallel calculation of modified Bessel functionof the second kind and its derivatives, SoftwareX, 17, 100923, 2022.## AuthorTAKEKAWA Takashi &lt;takekawa@tk2lab.org&gt;## For Tensorflow### Require- Python (&gt;=3.8)- Tensorflow (&gt;=2.6)### Installation```shellpip install tensorflow logbesselk```### Examples```pythonimport tensorflow as tffrom logbesselk.tensorflow import log_bessel_k as logkfrom logbesselk.jax import bessel_ke as kefrom logbesselk.jax import bessel_kratio as kratiov = 1.0x = 1.0a = logk(v, x)v = jnp.linspace(1, 10, 10)x = jnp.linspace(1, 10, 10)b = logk(v, x)# gradientwith tf.GradientTape() as g:    g.watch(v, x)    f = logk(v, x)dlogkdv = g.gradient(f, v)dlogkdx = g.gradient(f, x)# use tf.functionlogk = tf.function(logk)# advanced versionfrom logbesselk.tensorflow import log_abs_deriv_bessel_klogk = lambda v, x: log_abs_deriv_bessel_k(v, x, 0, 0)logdkdv = lambda v, x: log_abs_deriv_bessel_k(v, x, 1, 0)logdkdx = lambda v, x: log_abs_deriv_bessel_k(v, x, 0, 1)```## For jax### Require- Python (&gt;=3.8)- jax (&gt;=0.3)### Installation```shellpip install jax[cuda] -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.htmlpip install logbesselk```### Examples```pythonimport jaximport jax.numpy as jnpfrom logbesselk.jax import log_bessel_k as logkfrom logbesselk.jax import bessel_ke as kefrom logbesselk.jax import bessel_kratio as kratio# scalar func and gradv = 1.0x = 1.0a = logk(v, x)# dlogK/dv = (dK/dv) / Kdlogkdv = jax.grad(logk, 0)b = dlogkdv(v, x)# dlogK/dx = (dK/dx) / Kdlogkdx = jax.grad(logk, 1)c = dlogkdx(v, x)# miscd = ke(v, x)e = kratio(v, x, d=1)# vectorizelogk_vec = jax.vmap(logk)v = jnp.linspace(1, 10, 10)x = jnp.linspace(1, 10, 10)f = logk_vec(v)# use jitlogk_vec_jit = jax.jit(logk_vec)# advanced versionfrom logbesselk.jax import log_abs_devel_bessel_klog_dkdv = lambda v, x: log_abs_deriv_bessel_k(v, x, 1, 0)log_dkdx = lambda v, x: log_abs_deriv_bessel_k(v, x, 0, 1)log_dkdv_jit = jax.jit(jax.vmap(log_dkdv))log_dkdx_jit = jax.jit(jax.vmap(log_dkdx))```</longdescription>
</pkgmetadata>