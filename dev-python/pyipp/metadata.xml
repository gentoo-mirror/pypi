<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python: Internet Printing Protocol (IPP) ClientAsynchronous Python client for Internet Printing Protocol (IPP).## AboutThis package allows you to monitor printers that support the Internet Printing Protocol (IPP) programmatically.## Installation```bashpip install pyipp```## Usage```pythonimport asynciofrom pyipp import IPP, Printerasync def main():    &quot;&quot;&quot;Show example of connecting to your IPP print server.&quot;&quot;&quot;    async with IPP(&quot;ipps://EPSON123456.local:631/ipp/print&quot;) as ipp:        printer: Printer = await ipp.printer()        print(printer)if __name__ == &quot;__main__&quot;:    loop = asyncio.get_event_loop()    loop.run_until_complete(main())```## Setting up development environmentThis Python project is fully managed using the [Poetry](https://python-poetry.org) dependencymanager. But also relies on the use of NodeJS for certain checks duringdevelopment.You need at least:- Python 3.9+- [Poetry](https://python-poetry.org/docs/#installation)- NodeJS 18+ (including NPM)To install all packages, including all development requirements:```bashnpm installpoetry install```As this repository uses the [pre-commit](https://pre-commit.com/) framework, all changesare linted and tested with each commit. You can run all checks and testsmanually, using the following command:```bashpoetry run pre-commit run --all-files```To run just the Python tests:```bashpoetry run pytest```</longdescription>
</pkgmetadata>