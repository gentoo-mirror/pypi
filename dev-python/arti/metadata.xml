<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># artigraph[![pypi](https://img.shields.io/pypi/v/arti.svg)](https://pypi.python.org/pypi/arti)[![changelog](https://img.shields.io/github/v/release/artigraph/artigraph?label=changelog)](https://github.com/artigraph/artigraph/releases)[![downloads](https://pepy.tech/badge/arti/month)](https://pepy.tech/project/arti)[![versions](https://img.shields.io/pypi/pyversions/arti.svg)](https://github.com/artigraph/artigraph)[![license](https://img.shields.io/github/license/artigraph/artigraph.svg)](https://github.com/artigraph/artigraph/blob/golden/LICENSE)[![CI](https://github.com/artigraph/artigraph/actions/workflows/ci.yaml/badge.svg)](https://github.com/artigraph/artigraph/actions/workflows/ci.yaml)[![codecov](https://codecov.io/gh/artigraph/artigraph/branch/golden/graph/badge.svg?token=6LUCpjcGdN)](https://codecov.io/gh/artigraph/artigraph)[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/5561/badge)](https://bestpractices.coreinfrastructure.org/projects/5561)Declarative Data ProductionArtigraph is a tool to improve the authorship, management, and quality of data. It emphasizes that the core deliverable of a data pipeline or workflow is the data, not the tasks.Artigraph is hosted by the [LF AI and Data Foundation](https://lfaidata.foundation) as a Sandbox project.## InstallationArtigraph can be installed from PyPI on python 3.9+ with `pip install arti`.## ExampleThis sample from the [spend example](docs/examples/spend/demo.py) highlights computing the total amount spent from a series of purchase transactions:```pythonfrom pathlib import Pathfrom typing import Annotatedfrom arti import Annotation, Artifact, Graph, producerfrom arti.formats.json import JSONfrom arti.storage.local import LocalFilefrom arti.types import Collection, Date, Float64, Int64, Structfrom arti.versions import SemVerDIR = Path(__file__).parentclass Vendor(Annotation):    name: strclass Transactions(Artifact):    &quot;&quot;&quot;Transactions partitioned by day.&quot;&quot;&quot;    type = Collection(        element=Struct(fields={&quot;id&quot;: Int64(), &quot;date&quot;: Date(), &quot;amount&quot;: Float64()}),        partition_by=(&quot;date&quot;,),    )class TotalSpend(Artifact):    &quot;&quot;&quot;Aggregate spend over all time.&quot;&quot;&quot;    type = Float64()    format = JSON()    storage = LocalFile()@producer(version=SemVer(major=1, minor=0, patch=0))def aggregate_transactions(    transactions: Annotated[list[dict], Transactions]) -&gt; Annotated[float, TotalSpend]:    return sum(txn[&quot;amount&quot;] for txn in transactions)with Graph(name=&quot;test-graph&quot;) as g:    g.artifacts.vendor.transactions = Transactions(        annotations=[Vendor(name=&quot;Acme&quot;)],        format=JSON(),        storage=LocalFile(path=str(DIR / &quot;transactions&quot; / &quot;{date.iso}.json&quot;)),    )    g.artifacts.spend = aggregate_transactions(        transactions=g.artifacts.vendor.transactions    )```The full example can be run easily with `docker run --rm artigraph/example-spend`:```INFO:root:Writing mock Transactions data:INFO:root:      /usr/src/app/transactions/2021-10-01.json: [{'id': 1, 'amount': 9.95}, {'id': 2, 'amount': 7.5}]INFO:root:      /usr/src/app/transactions/2021-10-02.json: [{'id': 3, 'amount': 5.0}, {'id': 4, 'amount': 12.0}, {'id': 4, 'amount': 7.55}]INFO:root:Building aggregate_transactions(transactions=Transactions(format=JSON(), storage=LocalFile(path='/usr/src/app/transactions/{date.iso}.json'), annotations=(Vendor(name='Acme'),)))...INFO:root:Build finished.INFO:root:Final Spend data:INFO:root:      /tmp/test-graph/spend/7564053533177891797/spend.json: 42.0```## CommunityEveryone is welcome to join the community - learn more in out [support](SUPPORT.md) and [contributing](CONTRIBUTING.md) pages!## Presentations- 2022-01-27: Requesting Sandbox Incubation with [LF AI &amp; Data](https://lfaidata.foundation/) ([deck](https://docs.google.com/presentation/d/1KLM9r0L5sTbpb_UPR5nx4fil-7fO-UnmhTeatSiaN3Y), [presentation](https://wiki.lfaidata.foundation/download/attachments/7733341/GMT20220127-140219_Recording_3840x2160.mp4?version=1&amp;modificationDate=1643716019000&amp;api=v2) @ 6m35s)</longdescription>
</pkgmetadata>