<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>discord-interactions-python---![PyPI - License](https://img.shields.io/pypi/l/discord-interactions)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/discord-interactions)Types and helper functions for Discord Interactions webhooks.# InstallationAvailable via [pypi](https://pypi.org/project/discord-interactions/):```pip install discord-interactions```# UsageUse the `InteractionType` and `InteractionResponseType` enums to process and respond to webhooks.Use `verify_key` to check a request signature:```pyif verify_key(request.data, signature, timestamp, 'my_client_public_key'):    print('Signature is valid')else:    print('Signature is invalid')```Use `verify_key_decorator` to protect routes in a Flask app:```pyimport osfrom flask import Flask, request, jsonifyfrom discord_interactions import verify_key_decorator, InteractionType, InteractionResponseTypeCLIENT_PUBLIC_KEY = os.getenv('CLIENT_PUBLIC_KEY')app = Flask(__name__)@app.route('/interactions', methods=['POST'])@verify_key_decorator(CLIENT_PUBLIC_KEY)def interactions():  if request.json['type'] == InteractionType.APPLICATION_COMMAND:    return jsonify({        'type': InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,        'data': {            'content': 'Hello world'        }    })```# ExportsThis module exports the following:### InteractionTypeAn enum of interaction types that can be POSTed to your webhook endpoint.### InteractionResponseTypeAn enum of response types you may provide in reply to Discord's webhook.### InteractionResponseFlagsAn enum of flags you can set on your response data.### verify_key(raw_body: str, signature: str, timestamp: str, client_public_key: str) -&gt; bool:Verify a signed payload POSTed to your webhook endpoint.### verify_key_decorator(client_public_key: str)Flask decorator that will verify request signatures and handle PING/PONG requests.</longdescription>
</pkgmetadata>