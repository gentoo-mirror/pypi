<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-libnmap==============Code status-----------|preflight-check| |Coverage Status| |License|Use cases---------libnmap is a python library enabling python developers to manipulatenmap process and data.libnmap is what you were looking for if you need to implement thefollowing:-  automate or schedule nmap scans on a regular basis-  manipulate nmap scans results to do reporting-  compare and diff nmap scans to generate graphs-  batch process scan reports-  …The above uses cases will be easy to implement with the help of thelibnmap modules.libnmap modules---------------The lib currently offers the following modules:-  **process**: enables you to launch nmap scans-  **parse**: enables you to parse nmap reports or scan results (only   XML so far) from a file, a string,…-  **report**: enables you to manipulate a parsed scan result and   de/serialize scan results in a json format-  **diff**: enables you to see what changed between two scans-  **common**: contains basic nmap objects like NmapHost and   NmapService. It is to note that each object can be &quot;diff()ed&quot; with   another similar object.-  **plugins**: enables you to support datastores for your scan results   directly in the &quot;NmapReport&quot; object. from report module:   -  mongodb: insert/get/getAll/delete   -  sqlalchemy: insert/get/getAll/delete   -  aws s3: insert/get/getAll/delete (not supported for python3 since      boto is not supporting py3)   -  csv: todo (easy to implement)   -  elastic search: todoDocumentation-------------All the documentation is available on `read thedocs &lt;https://libnmap.readthedocs.org&gt;`__. This documentation containssmall code samples that you directly reuse.Dependencies------------libnmap has by default no dependencies, except defusedxml if you need toimport untrusted XML scans data.The only additional python modules you’ll have to install depends if youwish to use libnmap to store reports on an exotic data store vialibnmap’s independents plugins.Below the list of optional dependencies:-  `sqlalchemy &lt;https://github.com/zzzeek/sqlalchemy&gt;`__ (+the driver   ie:MySQL-python)-  `pymongo &lt;https://github.com/mongodb/mongo-python-driver/&gt;`__-  `boto &lt;https://github.com/boto/boto&gt;`__Security--------If you are importing/parsing untrusted XML scan outputs withpython-libnmap, install defusedxml library:.. code:: bash   ronald@brouette:~/dev$ pip install defusedxmlThis will prevent you from being vulnerable to `XML External Entitiesattacks &lt;https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing&gt;`__.For more information, read the `official libnmapdocumentation &lt;https://libnmap.readthedocs.io/en/latest/parser.html#security-note-for-libnmap-parser&gt;`__This note relates to a cascaded CVE vulnerability from the python corelibrary XML ElementTree. Nevertheless, python-libnmap has been assignedan `officialCVE &lt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1010017&gt;`__to track this issue.This CVE is addressed from v0.7.2.Python Support--------------The libnmap code is tested against the following python interpreters:-  Python 2.7-  Python 3.6-  Python 3.7-  Python 3.8Install-------You can install libnmap via pip:.. code:: bash   ronald@brouette:~$ pip install python-libnmapor via git and dist utils (à l’ancienne):.. code:: bash   ronald@brouette:~$ git clone https://github.com/savon-noir/python-libnmap.git   ronald@brouette:~$ cd python-libnmap   ronald@brouette:~$ python setup.py installor via git and pip:.. code:: bash   ronald@brouette:~$ git clone https://github.com/savon-noir/python-libnmap.git   ronald@brouette:~$ cd python-libnmap   ronald@brouette:~$ pip install .Examples--------Some codes samples are available in the examples directory or in the`documentation &lt;https://libnmap.readthedocs.org&gt;`__.Among other example, you notice an sample code pushing nmap scan reportsin an ElasticSearch instance and allowing you to create fancy dashboardsin Kibana like the screenshot below:.. figure:: https://github.com/savon-noir/python-libnmap/blob/es/examples/kibanalibnmap.png   :alt: KibananeContributors------------Mike @bmx0r Boutillier for S3 and SQL-Alechemy plugins and for theconstructive critics. Thanks!.. |preflight-check| image:: https://github.com/savon-noir/python-libnmap/workflows/Preflight%20Check/badge.svg.. |Coverage Status| image:: https://coveralls.io/repos/github/savon-noir/python-libnmap/badge.svg?branch=master   :target: https://coveralls.io/github/savon-noir/python-libnmap?branch=master.. |License| image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg   :target: https://opensource.org/licenses/Apache-2.0</longdescription>
</pkgmetadata>