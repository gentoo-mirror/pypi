<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-ffmpegA python binding for FFmpeg which provides sync and async APIs## HelpSee [documentation](https://python-ffmpeg.readthedocs.io) for more details.## InstallTo install **python-ffmpeg**, simply use pip:```console$ pip install python-ffmpeg```## ExamplesYou can find more examples in [the documentation](https://python-ffmpeg.readthedocs.io/).### Transcoding#### Synchronous API```pythonfrom ffmpeg import FFmpeg, Progressdef main():    ffmpeg = (        FFmpeg()        .option(&quot;y&quot;)        .input(&quot;input.mp4&quot;)        .output(            &quot;ouptut.mp4&quot;,            {&quot;codec:v&quot;: &quot;libx264&quot;},            vf=&quot;scale=1280:-1&quot;,            preset=&quot;veryslow&quot;,            crf=24,        )    )    ffmpeg.execute()if __name__ == &quot;__main__&quot;:    main()```#### Asynchronous API``` pythonimport asynciofrom ffmpeg import Progressfrom ffmpeg.asyncio import FFmpegasync def main():    ffmpeg = (        FFmpeg()        .option(&quot;y&quot;)        .input(&quot;input.mp4&quot;)        .output(            &quot;ouptut.mp4&quot;,            {&quot;codec:v&quot;: &quot;libx264&quot;},            vf=&quot;scale=1280:-1&quot;,            preset=&quot;veryslow&quot;,            crf=24,        )    )    await ffmpeg.execute()if __name__ == &quot;__main__&quot;:    asyncio.run(main())```### Recording#### Synchronous API```pythonfrom ffmpeg import FFmpeg, Progressdef main():    ffmpeg = (        FFmpeg()        .option(&quot;y&quot;)        .input(            &quot;rtsp://username:password@127.0.0.1/cam&quot;,            rtsp_transport=&quot;tcp&quot;,            rtsp_flags=&quot;prefer_tcp&quot;,        )        .output(&quot;output.mp4&quot;, vcodec=&quot;copy&quot;)    )    @ffmpeg.on(&quot;progress&quot;)    def time_to_terminate(progress: Progress):        if progress.frame &gt; 200:            ffmpeg.terminate()    ffmpeg.execute()if __name__ == &quot;__main__&quot;:    main()```#### Asynchronous API``` pythonimport asynciofrom ffmpeg import Progressfrom ffmpeg.asyncio import FFmpegasync def main():    ffmpeg = (        FFmpeg()        .option(&quot;y&quot;)        .input(            &quot;rtsp://username:password@127.0.0.1/cam&quot;,            rtsp_transport=&quot;tcp&quot;,            rtsp_flags=&quot;prefer_tcp&quot;,        )        .output(&quot;output.mp4&quot;, vcodec=&quot;copy&quot;)    )    @ffmpeg.on(&quot;progress&quot;)    def time_to_terminate(progress: Progress):        if progress.frame &gt; 200:            ffmpeg.terminate()    await ffmpeg.execute()if __name__ == &quot;__main__&quot;:    asyncio.run(main())```</longdescription>
</pkgmetadata>