<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;.github/assets/meme.jpg&quot;&gt;  &lt;h1&gt;    pipupgrade  &lt;/h1&gt;  &lt;h4&gt;The missing command for &lt;code&gt;pip&lt;/code&gt;&lt;/h4&gt;&lt;/div&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href='https://github.com/achillesrasquinha/pipupgrade/actions?query=workflow:&quot;Continuous Integration&quot;'&gt;    &lt;img src=&quot;https://img.shields.io/github/workflow/status/achillesrasquinha/pipupgrade/Continuous Integration?style=flat-square&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://coveralls.io/github/achillesrasquinha/pipupgrade&quot;&gt;    &lt;img src=&quot;https://img.shields.io/coveralls/github/achillesrasquinha/pipupgrade.svg?style=flat-square&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/pipupgrade/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/pipupgrade.svg?style=flat-square&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/pipupgrade/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/l/pipupgrade.svg?style=flat-square&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/pipupgrade/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/pipupgrade.svg?style=flat-square&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://hub.docker.com/r/achillesrasquinha/pipupgrade&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/cloud/build/achillesrasquinha/pipupgrade.svg?style=flat-square&amp;logo=docker&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://git.io/boilpy&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/made%20with-boilpy-red.svg?style=flat-square&quot;&gt;  &lt;/a&gt;&lt;a href=&quot;https://saythanks.io/to/achillesrasquinha&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Say%20Thanks-🦉-1EAEDB.svg?style=flat-square&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://paypal.me/achillesrasquinha&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-💵-f44336.svg?style=flat-square&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;.github/assets/demo.gif&quot;&gt;&lt;/div&gt;### Table of Contents* [Features](#Features)* [Quick Start](#quick-start)* [Usage](#usage)  * [Basic Usage](#basic-usage)  * [Docker](#docker)  * [Environment Variables](docs/source/envvar.md)* [FAQ](FAQ.md)* [License](#license)### Features* Updates system packages and local packages.* Discovers packages present within multiple Python Environments.* Updates packages mentioned within a `requirements.txt` file (Also pins up-to-date versions if mentioned).* Smart `requirements.txt` detector.* [Pipfile](https://github.com/pypa/pipenv) support.* Detects semantic version to avoid updates that break changes. **Also ensures to avoid child dependencies that break changes.*** [View Dependency Graph.](FAQ.md/#how-do-i-view-a-dependency-graph)* Parallel updates (blazingly fast).* Python 2.7+ and Python 3.4+ compatible. Also pip 9+, pip 10+, pip 18+ and [pip 19.0.1+](https://github.com/pypa/pip/issues/6158) compatible.* Automate your Dependencies by installing `pipupgrade` in your CI workflow.* Zero Dependencies!### Quick Start```shell$ pip install pipupgrade```Check out [installation](docs/source/INSTALLATION.md) for more details.### Usage#### Basic Usage* [**`pipupgrade`**](https://git.io/pipupgrade)    *Upgrades all the packages across all detected pip environments.** [**`pipupgrade --self`**](https://git.io/pipupgrade)    *Upgrades `pipupgrade`.** [**`pipupgrade --format {table,tree,json,yaml}`**](https://git.io/pipupgrade)    *Display packages in the format (defaults to `table`)** [**`pipupgrade --pip-path PIP_PATH`**](https://git.io/pipupgrade)    *Upgrades all the packages within the defined pip environment.** [**`pipupgrade --check`**](https://git.io/pipupgrade)    *Checks and pretty prints outdated packages (Does not perform upgrades).** [**`pipupgrade --upgrade-type {major,minor,patch}`**](https://git.io/pipupgrade)    *Upgrades packages only of the upgrade type (defaults to minor and patch).** [**`pipupgrade --latest`**](https://git.io/pipupgrade)    *WARNING: Upgrades all packages (including the ones that break change).** [**`pipupgrade --all`**](https://git.io/pipupgrade)    *List all packages.** [**`pipupgrade --interactive`**](https://git.io/pipupgrade)    *Prompts confirmation dialog for each package to be upgraded.** [**`pipupgrade --requirements REQUIREMENTS`**](https://git.io/pipupgrade)    *Upgrades the requirements file (if required).** [**`pipupgrade --pipfile PIPFILE`**](https://git.io/pipupgrade)    *Upgrades the Pipfile and Pipfile.lock file (if required).** [**`pipupgrade --project PROJECT`**](https://git.io/pipupgrade)    *Upgrades all the requirements file and/or Pipfile/Pipfile.lock within a project directory.*That's basically it! Run the help for more details...```$ pipupgrade --helpusage: pipupgrade [--pip-path PIP_PATH] [-y] [-c]                  [--upgrade-type {major,minor,patch} [{major,minor,patch} ...]]                  [-l] [-f {table,tree,json,yaml}] [-a] [--pip] [-s]                  [-r REQUIREMENTS] [--pipfile PIPFILE] [-i] [-p PROJECT]                  [--git-username GIT_USERNAME] [--git-email GIT_EMAIL]                  [--pull-request] [--github-access-token GITHUB_ACCESS_TOKEN]                  [--github-reponame GITHUB_REPONAME]                  [--github-username GITHUB_USERNAME]                  [--target-branch TARGET_BRANCH] [-j JOBS] [-u]                  [--no-included-requirements] [--no-cache] [-o OUTPUT]                  [--ignore-error] [--force] [--no-color] [-V] [-v] [-h]                  [packages [packages ...]]pipupgrade (v VERSION)UPGRADE ALL THE PIP PACKAGES!positional arguments:  packages              Packages to Upgrade. (default: None)optional arguments:  --ignore IGNORE       Ignore packages to upgrade. (default: None)  --pip-path PIP_PATH   Path to pip executable to be used. (default: None)  -y, --yes             Confirm for all dialogs. (default: 0)  -c, --check           Perform a dry-run, avoid updating packages. (default:                        0)  --upgrade-type {major,minor,patch} [{major,minor,patch} ...]                        Upgrade Type (default: ['minor', 'patch'])  -l, --latest          Update all packages to latest. (default: 0)  -f {table,tree,json,yaml}, --format {table,tree,json,yaml}                        Display packages format. (default: table)  -a, --all             List all packages. (default: 0)  --pip                 Update pip. (default: 0)  -s, --self            Update pipupgrade. (default: False)  -r REQUIREMENTS, --requirements REQUIREMENTS                        Path(s) to requirements.txt file. (default: None)  --pipfile PIPFILE     Path(s) to Pipfile (default: None)  -i, --interactive     Interactive Mode. (default: 0)  -p PROJECT, --project PROJECT                        Path(s) to Project (default: None)  --git-username GIT_USERNAME                        Git Username (default: None)  --git-email GIT_EMAIL                        Git Email (default: None)  --pull-request        Perform a Pull Request. (default: False)  --github-access-token GITHUB_ACCESS_TOKEN                        GitHub Access Token (default: None)  --github-reponame GITHUB_REPONAME                        Target GitHub Repository Name (default: None)  --github-username GITHUB_USERNAME                        Target GitHub Username (default: None)  --target-branch TARGET_BRANCH                        Target Branch (default: master)  -j JOBS, --jobs JOBS  Number of Jobs to be used. (default: 4)  -u, --user            Install to the Python user install directory for                        environment variables and user configuration.                        (default: 0)  --no-included-requirements                        Avoid updating included requirements. (default: 0)  --no-cache            Avoid fetching latest updates from PyPI server.                        (default: 0)  -o OUTPUT, --output OUTPUT                        Print Output to File. (default: None)  --ignore-error        Ignore Error in case of upgrade failure. (default: 0)  --force               Force search for files within a project. (default: 0)  --no-color            Avoid colored output. (default: 0)  -V, --verbose         Display verbose output. (default: False)  -v, --version         Show pipupgrade's version number and exit.  -h, --help            Show this help message and exit.```### DockerUsing `pipupgrade`'s Docker Image to generate a Pull Request can be done as follows:```$ docker run \    -e &quot;PIPUPGRADE_GIT_USERNAME=&lt;YOUR_GIT_USERNAME&gt;&quot; \    -e &quot;PIPUPGRADE_GIT_EMAIL=&lt;YOUR_GIT_EMAIL&gt;&quot; \    -e &quot;PIPUPGRADE_GITHUB_REPONAME=&lt;YOUR_GIT_REPONAME&gt;&quot; \    -e &quot;PIPUPGRADE_GITHUB_USERNAME=&lt;YOUR_GIT_USERNAME&gt;&quot; \    --rm \    -it \    -v $(pwd):/path/to/project \      achillesrasquinha/pipupgrade \        --project /path/to/project \        --pull-request \        --force \        --yes \        --verbose```### Similar Packages`pipupgrade` attempts to provide an all-in-one solution as compared to the following packages:* [pur](https://github.com/alanhamlett/pip-update-requirements)* [pip_upgrade_outdated](https://github.com/defjaf/pip_upgrade_outdated)* [pipdate](https://github.com/nschloe/pipdate)* [pip-review](https://github.com/jgonggrijp/pip-review)* [pip-upgrader](https://github.com/simion/pip-upgrader)* [pipdeptree](https://github.com/naiquevin/pipdeptree)### Known Issues* [I'm stuck at &quot;Checking...&quot; forever.](https://github.com/achillesrasquinha/pipupgrade/issues/30)### LicenseThis repository has been released under the [MIT License](LICENSE).---&lt;div align=&quot;center&quot;&gt;  Made with ❤️ using &lt;a href=&quot;https://git.io/boilpy&quot;&gt;boilpy&lt;/a&gt;.&lt;/div&gt;</longdescription>
</pkgmetadata>