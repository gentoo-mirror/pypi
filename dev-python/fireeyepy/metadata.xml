<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI version](https://badge.fury.io/py/fireeyepy.svg)](https://badge.fury.io/py/fireeyepy)[![Python versions supported](https://img.shields.io/pypi/pyversions/fireeyepy.svg)](https://pypi.python.org/pypi/fireeyepy)# FireEye Client Library for PythonThis is the Python client library for all things FireEye API. Currently it only supports FireEye's Detection On Demand but will have support for other FireEye API's soon.For more API information, visit the [FireEye Developer Hub](https://fireeye.dev)Installation------------To install the Python client library:```pip install fireeyepy```To upgrade your installed library:```pip install fireeyepy --upgrade```Alternatively, you can clone the repository via the command line:```git clone https://github.com/fireeye/fireeye-python.git```Usage-----Begin by importing the 'fireeye' module:```pythonimport fireeyepy```## Detection On DemandConstruct a Detection object with your api key:```pythondetection = fireeyepy.Detection(key=api_key)```To obtain a free trial API key, subscribe on the [AWS Marketplace](https://aws.amazon.com/marketplace/pp/B07XSMKK41)### Upload A File```python  import fireeyepy  detection = fireeyepy.Detection(key=&quot;yourapikeyhere&quot;)  result = detection.submit_file(    files={      &quot;file&quot;: ('filename', open('./path/to/filename', 'rb'))    }  )```With configuration options:```python  result = detection.submit_file(    body={      &quot;file_name&quot;: &quot;different_name.txt&quot;,      &quot;screenshot&quot;: true    },    files={      &quot;file&quot;: ('filename', open('./path/to/filename', 'rb'))    }  )```### Submit URLs```python  import fireeyepy  detection = fireeyepy.Detection(key=&quot;yourapikeyhere&quot;)  result = detection.submit_urls([&quot;url1&quot;,&quot;url2&quot;,...])```### Retrieve File or URL Report```pythonresponse = detection.get_report(report_id)```You may also provide the optional `extended=True` flag to get the full, in-depth report:```pythonresponse = detection.get_report(report_id, extended=True)```### Search for a file from a connector (ex. Box, Teams, S3, etc.)```pythonresponse = detection.search_reports(connector_type=&quot;box&quot;, file_id=&quot;123456&quot;)```### Get a list of reports**Start and end time are in Unix epoch time.**```pythonresponse = detection.telemetry(start_time=1603980060, end_time=1604066460)```### Retrieve Presigned URL for Dashboard Report```pythonresult = detection.get_presigned_url(report_id)```### Perform Hash Lookup```pythonresponse = detection.get_hash(hash)```### Get a report artifact```pythonartifact = detection.get_artifact(report_id=&quot;8d0aa90b-8bf3-4483-ae3b-0ded00d157ab&quot;, artifact_type=&quot;screenshot&quot;)```### Get the health of the Detection on Demand service```pythonhealth = detection.get_health()```</longdescription>
</pkgmetadata>