<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Logo](https://raw.githubusercontent.com/ezyquant/ezyquant/main/docs/source/_static/logo-text-right.svg)](https://pydoc.ezyquant.com/)# EzyQuant: Powerful Python backtesting for Thai stocks[![PyPI](https://img.shields.io/pypi/v/ezyquant?label=PyPI)](https://pypi.org/project/ezyquant/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/ezyquant?label=PyPI%20Downloads)](https://pepy.tech/project/ezyquant)[![License](https://img.shields.io/pypi/l/ezyquant.svg)](https://github.com/ezyquant/ezyquant/blob/main/LICENSE)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Formatter: docformatter](https://img.shields.io/badge/%20formatter-docformatter-fedcba.svg)](https://github.com/PyCQA/docformatter)[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336)](https://pycqa.github.io/isort/)[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)## Features- Backtest- Signal Creator- Data Reader## Installation```bashpip install ezyquant```or```bashpip install git+https://github.com/ezyquant/ezyquant```## Quick Example```pythonimport pandas as pdimport ezyquant as ezfrom ezyquant import SETDataReader, backtestfrom ezyquant.backtest import Contextez.connect_sqlite(&quot;ezyquant.db&quot;)start_date = &quot;2020-01-01&quot;end_date = &quot;2020-12-31&quot;initial_cash = 1e6# Signalsdr = SETDataReader()trade_date_list = sdr.get_trading_dates(start_date, end_date)signal_df = pd.DataFrame(index=pd.DatetimeIndex(trade_date_list), columns=[&quot;AOT&quot;])def backtest_algorithm(ctx: Context) -&gt; float:    return 100# Backtestreport = backtest(    signal_df=signal_df,    backtest_algorithm=backtest_algorithm,    start_date=start_date,    end_date=end_date,    initial_cash=initial_cash,    pct_commission=0.25,)```Backtest report:```python                               port_value port_value_with_dividendpct_net_profit                   0.024916                 0.024916cagr                             0.025055                 0.025055pct_maximum_drawdown            -0.223604                -0.223604cagr_divided_maxdd               0.112052                 0.112052pct_win_per_trade                     1.0                      1.0std                               0.32582                  0.32582cagr_divided_std                 0.076899                 0.076899pct_exposure                     0.665873                 0.665873total_commission                  2483.75                  2483.75initial_capital                 1000000.0                1000000.0ending_capital                 1024916.25               1024916.25net_profit                       24916.25                 24916.25maximum_drawdown              -235340.125              -235340.125all_trades                              1                        1avg_profit_loss                  24916.25                 24916.25pct_avg_profit_loss                   NaN                      NaNavg_bar_held                        120.0                    120.0win_trades                              1                        1total_profit                      22364.0                  22364.0avg_profit                        22364.0                  22364.0pct_avg_profit                    0.02251                  0.02251avg_win_bar_held                    120.0                    120.0max_win_consecutive                     1                        1loss_trades                             0                        0total_loss                            0.0                      0.0avg_loss                              NaN                      NaNpct_avg_loss                          NaN                      NaNavg_lose_bar_held                     NaN                      NaNmax_lose_consecutive                    0                        0start_date            2020-01-02 00:00:00      2020-01-02 00:00:00end_date              2020-12-30 00:00:00      2020-12-30 00:00:00pct_commission                       0.25                     0.25pct_buy_slip                          0.0                      0.0pct_sell_slip                         0.0                      0.0```You can find more examples in the examples directory.</longdescription>
</pkgmetadata>