<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># simple-bloom-filter[![PyPI](https://img.shields.io/pypi/v/simplebloomfilter.svg)]()[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/simplebloomfilter.svg)]()A simple implementation of Bloom Filter and Scalable Bloom Filter for Python 3.## InstallationYou can install this package from PyPI using [pip](http://www.pip-installer.org):```$ [sudo] pip install simplebloomfilter```## Example Usage```python#!/usr/bin/python# -*- coding: utf-8 -*-from bloomfilter import BloomFilter, ScalableBloomFilter, SizeGrowthRateanimals = [    &quot;dog&quot;,    &quot;cat&quot;,    &quot;giraffe&quot;,    &quot;fly&quot;,    &quot;mosquito&quot;,    &quot;horse&quot;,    &quot;eagle&quot;,    &quot;bird&quot;,    &quot;bison&quot;,    &quot;boar&quot;,    &quot;butterfly&quot;,    &quot;ant&quot;,    &quot;anaconda&quot;,    &quot;bear&quot;,    &quot;chicken&quot;,    &quot;dolphin&quot;,    &quot;donkey&quot;,    &quot;crow&quot;,    &quot;crocodile&quot;,]other_animals = [    &quot;badger&quot;,    &quot;cow&quot;,    &quot;pig&quot;,    &quot;sheep&quot;,    &quot;bee&quot;,    &quot;wolf&quot;,    &quot;fox&quot;,    &quot;whale&quot;,    &quot;shark&quot;,    &quot;fish&quot;,    &quot;turkey&quot;,    &quot;duck&quot;,    &quot;dove&quot;,    &quot;deer&quot;,    &quot;elephant&quot;,    &quot;frog&quot;,    &quot;falcon&quot;,    &quot;goat&quot;,    &quot;gorilla&quot;,    &quot;hawk&quot;,]def bloom_filter_example():    print(&quot;========== Bloom Filter Example ==========&quot;)    bloom_filter = BloomFilter(size=1000, fp_prob=1e-6)    # Insert items into Bloom filter    for animal in animals:        bloom_filter.add(animal)    # Print several statistics of the filter    print(        &quot;+ Capacity: {} item(s)&quot;.format(bloom_filter.size),        &quot;+ Number of inserted items: {}&quot;.format(len(bloom_filter)),        &quot;+ Filter size: {} bit(s)&quot;.format(bloom_filter.filter_size),        &quot;+ False Positive probability: {}&quot;.format(bloom_filter.fp_prob),        &quot;+ Number of hash functions: {}&quot;.format(bloom_filter.num_hashes),        sep=&quot;\n&quot;,        end=&quot;\n\n&quot;,    )    # Check whether an item is in the filter or not    for animal in animals + other_animals:        if animal in bloom_filter:            if animal in other_animals:                print(                    f'&quot;{animal}&quot; is a FALSE POSITIVE case (please adjust fp_prob to a smaller value).'                )            else:                print(f'&quot;{animal}&quot; is PROBABLY IN the filter.')        else:            print(f'&quot;{animal}&quot; is DEFINITELY NOT IN the filter as expected.')    # Save to file    with open(&quot;bloom_filter.bin&quot;, &quot;wb&quot;) as fp:        bloom_filter.save(fp)    # Load from file    with open(&quot;bloom_filter.bin&quot;, &quot;rb&quot;) as fp:        bloom_filter = BloomFilter.load(fp)def scalable_bloom_filter_example():    print(&quot;========== Bloom Filter Example ==========&quot;)    scalable_bloom_filter = ScalableBloomFilter(        initial_size=100,        initial_fp_prob=1e-7,        size_growth_rate=SizeGrowthRate.LARGE,        fp_prob_rate=0.9,    )    # Insert items into Bloom filter    for animal in animals:        scalable_bloom_filter.add(animal)    # Print several statistics of the filter    print(        &quot;+ Capacity: {} item(s)&quot;.format(scalable_bloom_filter.size),        &quot;+ Number of inserted items: {}&quot;.format(len(scalable_bloom_filter)),        &quot;+ Number of Bloom filters: {}&quot;.format(scalable_bloom_filter.num_filters),        &quot;+ Total size of filters: {} bit(s)&quot;.format(scalable_bloom_filter.filter_size),        &quot;+ False Positive probability: {}&quot;.format(scalable_bloom_filter.fp_prob),        sep=&quot;\n&quot;,        end=&quot;\n\n&quot;,    )    # Check whether an item is in the filter or not    for animal in animals + other_animals:        if animal in scalable_bloom_filter:            if animal in other_animals:                print(                    f'&quot;{animal}&quot; is a FALSE POSITIVE case (please adjust fp_prob to a smaller value).'                )            else:                print(f'&quot;{animal}&quot; is PROBABLY IN the filter.')        else:            print(f'&quot;{animal}&quot; is DEFINITELY NOT IN the filter as expected.')    # Save to file    with open(&quot;scalable_bloom_filter.bin&quot;, &quot;wb&quot;) as fp:        scalable_bloom_filter.save(fp)    # Load from file    with open(&quot;scalable_bloom_filter.bin&quot;, &quot;rb&quot;) as fp:        scalable_bloom_filter = ScalableBloomFilter.load(fp)if __name__ == &quot;__main__&quot;:    bloom_filter_example()    scalable_bloom_filter_example()``````========== Bloom Filter Example ==========+ Capacity: 1000 item(s)+ Number of inserted items: 19+ Filter size: 28756 bit(s)+ False Positive probability: 1e-06+ Number of hash functions: 20&quot;dog&quot; is PROBABLY IN the filter.&quot;cat&quot; is PROBABLY IN the filter.&quot;giraffe&quot; is PROBABLY IN the filter.&quot;fly&quot; is PROBABLY IN the filter.&quot;mosquito&quot; is PROBABLY IN the filter.&quot;horse&quot; is PROBABLY IN the filter.&quot;eagle&quot; is PROBABLY IN the filter.&quot;bird&quot; is PROBABLY IN the filter.&quot;bison&quot; is PROBABLY IN the filter.&quot;boar&quot; is PROBABLY IN the filter.&quot;butterfly&quot; is PROBABLY IN the filter.&quot;ant&quot; is PROBABLY IN the filter.&quot;anaconda&quot; is PROBABLY IN the filter.&quot;bear&quot; is PROBABLY IN the filter.&quot;chicken&quot; is PROBABLY IN the filter.&quot;dolphin&quot; is PROBABLY IN the filter.&quot;donkey&quot; is PROBABLY IN the filter.&quot;crow&quot; is PROBABLY IN the filter.&quot;crocodile&quot; is PROBABLY IN the filter.&quot;badger&quot; is DEFINITELY NOT IN the filter as expected.&quot;cow&quot; is DEFINITELY NOT IN the filter as expected.&quot;pig&quot; is DEFINITELY NOT IN the filter as expected.&quot;sheep&quot; is DEFINITELY NOT IN the filter as expected.&quot;bee&quot; is DEFINITELY NOT IN the filter as expected.&quot;wolf&quot; is DEFINITELY NOT IN the filter as expected.&quot;fox&quot; is DEFINITELY NOT IN the filter as expected.&quot;whale&quot; is DEFINITELY NOT IN the filter as expected.&quot;shark&quot; is DEFINITELY NOT IN the filter as expected.&quot;fish&quot; is DEFINITELY NOT IN the filter as expected.&quot;turkey&quot; is DEFINITELY NOT IN the filter as expected.&quot;duck&quot; is DEFINITELY NOT IN the filter as expected.&quot;dove&quot; is DEFINITELY NOT IN the filter as expected.&quot;deer&quot; is DEFINITELY NOT IN the filter as expected.&quot;elephant&quot; is DEFINITELY NOT IN the filter as expected.&quot;frog&quot; is DEFINITELY NOT IN the filter as expected.&quot;falcon&quot; is DEFINITELY NOT IN the filter as expected.&quot;goat&quot; is DEFINITELY NOT IN the filter as expected.&quot;gorilla&quot; is DEFINITELY NOT IN the filter as expected.&quot;hawk&quot; is DEFINITELY NOT IN the filter as expected.========== Bloom Filter Example ==========+ Capacity: 100 item(s)+ Number of inserted items: 19+ Number of Bloom filters: 1+ Total size of filters: 3355 bit(s)+ False Positive probability: 9.999999994736442e-08&quot;dog&quot; is PROBABLY IN the filter.&quot;cat&quot; is PROBABLY IN the filter.&quot;giraffe&quot; is PROBABLY IN the filter.&quot;fly&quot; is PROBABLY IN the filter.&quot;mosquito&quot; is PROBABLY IN the filter.&quot;horse&quot; is PROBABLY IN the filter.&quot;eagle&quot; is PROBABLY IN the filter.&quot;bird&quot; is PROBABLY IN the filter.&quot;bison&quot; is PROBABLY IN the filter.&quot;boar&quot; is PROBABLY IN the filter.&quot;butterfly&quot; is PROBABLY IN the filter.&quot;ant&quot; is PROBABLY IN the filter.&quot;anaconda&quot; is PROBABLY IN the filter.&quot;bear&quot; is PROBABLY IN the filter.&quot;chicken&quot; is PROBABLY IN the filter.&quot;dolphin&quot; is PROBABLY IN the filter.&quot;donkey&quot; is PROBABLY IN the filter.&quot;crow&quot; is PROBABLY IN the filter.&quot;crocodile&quot; is PROBABLY IN the filter.&quot;badger&quot; is DEFINITELY NOT IN the filter as expected.&quot;cow&quot; is DEFINITELY NOT IN the filter as expected.&quot;pig&quot; is DEFINITELY NOT IN the filter as expected.&quot;sheep&quot; is DEFINITELY NOT IN the filter as expected.&quot;bee&quot; is DEFINITELY NOT IN the filter as expected.&quot;wolf&quot; is DEFINITELY NOT IN the filter as expected.&quot;fox&quot; is DEFINITELY NOT IN the filter as expected.&quot;whale&quot; is DEFINITELY NOT IN the filter as expected.&quot;shark&quot; is DEFINITELY NOT IN the filter as expected.&quot;fish&quot; is DEFINITELY NOT IN the filter as expected.&quot;turkey&quot; is DEFINITELY NOT IN the filter as expected.&quot;duck&quot; is DEFINITELY NOT IN the filter as expected.&quot;dove&quot; is DEFINITELY NOT IN the filter as expected.&quot;deer&quot; is DEFINITELY NOT IN the filter as expected.&quot;elephant&quot; is DEFINITELY NOT IN the filter as expected.&quot;frog&quot; is DEFINITELY NOT IN the filter as expected.&quot;falcon&quot; is DEFINITELY NOT IN the filter as expected.&quot;goat&quot; is DEFINITELY NOT IN the filter as expected.&quot;gorilla&quot; is DEFINITELY NOT IN the filter as expected.&quot;hawk&quot; is DEFINITELY NOT IN the filter as expected.```## LicenseMIT</longdescription>
</pkgmetadata>