<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Racetrack CLI client`racetrack-client` is a CLI client tool for deploying and managing workloads in Racetrack.Racetrack system allows to deploy jobs in a one step.It transforms your code to in-operation workloads, e.g. Kubernetes workloads.You write some code according to a set of coventions, you include the manifest file which explains the code, and you submit it to Racetrack. A short while after, the service calling your code is in operation.## Quickstart```shell# Install racetrack-clientpython3 -m pip install --upgrade racetrack-client# Set current remoteracetrack set remote https://racetrack.platform.example.com# Log inracetrack login T0k3n.g0es.H3r3# Deploy a Jobracetrack deploy```## InstallationInstall racetrack-client using pip:```shellpython3 -m pip install --upgrade racetrack-client```Python 3.8 (or higher) is required.This will install `racetrack` CLI tool. Verify installation by running `racetrack` command.## UsageRun `racetrack --help` to see usage.### Adding a remoteAssuming your Racetrack server is running on https://racetrack.platform.example.com/lifecycle,you can add this remote as an alias:```shellracetrack set alias my-dev https://racetrack.platform.example.com/lifecycle```Alias is a short, friendly name for the URL of your Racetrack server, which is also known as &quot;remote&quot;.From now on, you can refer to your remote with an alias.### Switching remotesSet your current remote with:```shellracetrack set remote my-dev```This will set up a &quot;remote&quot; context for later use.### Logging inLog in to Racetrack with your user account (you can get your token from the Dashboard's profile page):```shellracetrack login T0k3n.g0es.H3r3```In case you're going to use a private repository, provide your git credentials so the job can be built from your code:```shellracetrack set credentials https://github.com/YourUser/YourRepository USERNAME TOKEN```### Installing pluginsExtend Racetrack's possibilities by installing a bunch of plugins:```shell# This plugin allows you to deploy jobs written in Pythonracetrack plugin install github.com/TheRacetrack/plugin-python-job-type# This plugin allows you to deploy jobs to a local Docker infrastructureracetrack plugin install github.com/TheRacetrack/plugin-docker-infrastructure```Plugins can only be installed by admin users.### Deploying a jobWhen your code is ready and you pushed your changes to a repository, it's time to deploy it;that means, upload it to Racetrack so it can become a proper running Job.To deploy a job, just run it in the place where `job.yaml` is located:```shellcd MuffinDestroyerracetrack deploy ```You will see the URL of your deployed job in the output.### Listing jobsYou can see the list of all deployed jobs with a command:```shellracetrack list```### Checking runtime logsCheck the logs of a running job by means of:```shellracetrack logs MuffinDestroyer```### Deleting a jobDelete your running job with:```shellracetrack delete MuffinDestroyer```</longdescription>
</pkgmetadata>