<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># intersight-restCisco has released their new Intersight platform for managing UCS Server and Hyperflex Hyperconverged infrastructure from a SaaS based interface. With high security standards, forming and signing the RESTful API calls to Intersight can be a challenge, so this package was written to do all of that work for you. All you need to provide is your Public/Private keys generated from the Intersight interface, as well at the API endpoint you'd like to target. Optionally you can add in query parameters for GET requests, and a body for POST/PATCH opterations.  ### **Overview:**```pyintersight_call(**options);```| Option | Format | Value || ------ | ------ | ------ || http_method | &amp;lt;String&amp;gt; | HTTP Verb [ GET \| POST \| PATCH \| DELETE ] || resource_path | &amp;lt;String&amp;gt; | Resource Path from https://intersight.com/apidocs || query_params | &amp;lt;Dict&amp;gt; | Query Parameters from Resource Path GET || body | &amp;lt;Dict&amp;gt; | Body Parameters from Resource Path POST|| moid | &amp;lt;String&amp;gt; | MOID of Object to be Modified || name | &amp;lt;String&amp;gt; | Name of Object to be Modified (See Notes) || proxy | &amp;lt;String&amp;gt; | Proxy Server Address [ proto://\&lt;address\&gt;:\&lt;port\&gt; ] |&lt;sup&gt;1&lt;/sup&gt; ***name*** will be ignored if ***moid*** is set.  &lt;sup&gt;2&lt;/sup&gt; ***name*** is case sensitive.  More information about Intersight is available at: https://intersight.com  Details on the RESTful API and documentation: https://intersight.com/apidocs  ### **PIP Installation:**```sh$ pip install intersight-rest```### **Usage:**```py# Import &quot;intersight_rest&quot; Packageimport intersight_rest as isREST# Import JSON Packageimport json# Load Public/Private KeysisREST.set_private_key(open(&quot;./keys/private_key.pem&quot;, &quot;r&quot;) .read())isREST.set_public_key(open(&quot;./keys/public_key.txt&quot;, &quot;r&quot;) .read())# Select Resource Path from https://www.intersight.com/apidocsresource_path = '/ntp/Policies'# GET EXAMPLE#-- Set GET Options --#options = {    &quot;http_method&quot;: &quot;get&quot;,    &quot;resource_path&quot;: resource_path,    &quot;query_params&quot;: query_params}#-- Send GET Request --#results = isREST.intersight_call(**options)print(&quot;Status Code: &quot; + str(results.status_code))print(json.dumps(results.json(), indent=4))#-- NOTE: intersight_call Returns a &quot;requests.Response&quot; Object --## GET &quot;query_params&quot; Examples#-- Example query_params returning the top 1 result(s) --#query_params = {    &quot;$top&quot;: 1}#-- Example query_params showing filter by &quot;Name&quot; key --#query_params = {    &quot;$filter&quot;: &quot;Name eq 'Test-NTP'&quot;}#-- Example query_params showing filter by &quot;Description&quot; key --#query_params = {    &quot;$filter&quot;: &quot;Description eq 'pool.ntp.org'&quot;}#-- Example query_params showing advanced Tag filder by key &amp; value --#query_params = {    &quot;$filter&quot;: &quot;Tags/any(t: t/Key eq 'loc' and t/Value eq 'California')&quot;}# POST EXAMPLE#-- Assemble POST Body --#post_body = {    &quot;Name&quot;: &quot;Test-NTP&quot;,    &quot;Description&quot;: &quot;Test NTP Policy&quot;,    &quot;NtpServers&quot;: [&quot;8.8.8.8&quot;]}#-- Set POST Options --#options = {    &quot;http_method&quot;: &quot;post&quot;,    &quot;resource_path&quot;: resource_path,    &quot;body&quot;: post_body}#-- Send POST Request --#results = isREST.intersight_call(**options)print(&quot;Status Code: &quot; + str(results.status_code))print(json.dumps(results.json(), indent=4))#-- NOTE: intersight_call Returns a &quot;requests.Response&quot; Object --## PATCH EXAMPLE#-- Assemble PATCH Body --#patch_body = {    &quot;NtpServers&quot;: [&quot;10.10.10.10&quot;]}#-- Option #1: PATCH by Object MOID --##-- Set Object MOID to be Modified --#patch_moid = &quot;6b1727fa686c873463b8163e&quot;#-- Set PATCH Options --#options = {    &quot;http_method&quot;: &quot;patch&quot;,    &quot;resource_path&quot;: resource_path,    &quot;body&quot;: patch_body,    &quot;moid&quot;: patch_moid}#-- Option #2: PATCH by Object NAME --##-- Set Object NAME to be Modified --#patch_name = &quot;Test-NTP&quot;#-- Set PATCH Options --#options = {    &quot;http_method&quot;: &quot;patch&quot;,    &quot;resource_path&quot;: resource_path,    &quot;body&quot;: patch_body,    &quot;name&quot;: patch_name}#-- Send PATCH Request --#results = isREST.intersight_call(**options)print(&quot;Status Code: &quot; + str(results.status_code))print(json.dumps(results.json(), indent=4))#-- NOTE: intersight_call Returns a &quot;requests.Response&quot; Object --## DELETE EXAMPLE#-- Option #1: DELETE by Object MOID --##-- Set Object MOID to be Deleted --#delete_moid = &quot;6b1727fa686c873463b8163e&quot;#-- Set DELETE Options --#options = {    &quot;http_method&quot;: &quot;delete&quot;,    &quot;moid&quot;: delete_moid}#-- Option #2: DELETE by Object Name --##-- Set Object NAME to be Deleted --#delete_name = &quot;Test-NTP&quot;#-- Set DELETE Options --#options = {    &quot;http_method&quot;: &quot;delete&quot;,    &quot;name&quot;: delete_name}#-- Send DELETE Request --#results = isREST.intersight_call(**options)print(&quot;Status Code: &quot; + str(results.status_code))#-- NOTE: intersight_call Returns a &quot;requests.Response&quot; Object --#```### See package source for more details...*Copyright (c) 2018 Cisco and/or its affiliates.</longdescription>
</pkgmetadata>