<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># poyoA lightweight YAML Parser for Python. üêì**poyo** does not allow deserialization of arbitrary Python objects. Supportedtypes are `str`, `bool`, `int`, `float`, `NoneType` as well as `dict` and`list` values.‚ö†Ô∏è Please note that poyo supports only a chosen subset of the YAML formatthat is required to parse [cookiecutter user configurationfiles][cookiecutterrc]. poyo does not have support for serializing into YAMLand is not compatible with JSON.[cookiecutterrc]: https://cookiecutter.readthedocs.io/en/latest/advanced/user_config.html## Installationpoyo is available on [PyPI][PyPI] for Python versions 2.7 and newer and canbe installed with [pip][pip]:```textpip install poyo```[PyPI]: https://pypi.org/project/poyo/[pip]: https://pypi.org/project/pip/This package does not have any additional requirements. üì¶## Usagepoyo comes with a ``parse_string()`` function, to load utf-8 encoded stringdata into a Python dict.```pythonimport codecsimport loggingfrom poyo import parse_string, PoyoExceptionlogging.basicConfig(level=logging.DEBUG)with codecs.open(&quot;tests/foobar.yml&quot;, encoding=&quot;utf-8&quot;) as ymlfile:    ymlstring = ymlfile.read()try:    config = parse_string(ymlstring)except PoyoException as exc:    logging.error(exc)else:    logging.debug(config)```## Example### Input YAML string```yaml---default_context: # foobar    greeting: „Åì„Çì„Å´„Å°„ÅØ    email: &quot;raphael@hackebrot.de&quot;    docs: true    gui: FALSE    123: 456.789    # comment    # allthethings    'some:int': 1000000    foo: &quot;hallo #welt&quot; #Inline comment :)    longtext: &gt;        This is a multiline string.        It can contain all manners of characters.        Single line breaks are ignored,        but blank linkes cause line breaks.    trueish: Falseeeeeee    blog   : raphael.codes    relative-root: /          # web app root path (default: '')    lektor: 0.0.0.0:5000      # local build    doc_tools:        # docs or didn't happen        -    mkdocs        - 'sphinx'        - null    # ‰ªäÊó•„ÅØzZz: TrueNullValue: Null# Block# CommentHello World:    # See you at EuroPython    null: This is madness   # yo    gh: https://github.com/{0}.git&quot;Yay #python&quot;: Cool!```### Output Python dict```python{    u&quot;default_context&quot;: {        u&quot;greeting&quot;: u&quot;„Åì„Çì„Å´„Å°„ÅØ&quot;,        u&quot;email&quot;: u&quot;raphael@hackebrot.de&quot;,        u&quot;docs&quot;: True,        u&quot;gui&quot;: False,        u&quot;lektor&quot;: &quot;0.0.0.0:5000&quot;,        u&quot;relative-root&quot;: &quot;/&quot;,        123: 456.789,        u&quot;some:int&quot;: 1000000,        u&quot;foo&quot;: u&quot;hallo #welt&quot;,        u&quot;longtext&quot;: (            u&quot;This is a multiline string. It can contain all &quot;            u&quot;manners of characters.\nSingle line breaks are &quot;            u&quot;ignored, but blank linkes cause line breaks.\n&quot;        ),        u&quot;trueish&quot;: u&quot;Falseeeeeee&quot;,        u&quot;blog&quot;: u&quot;raphael.codes&quot;,        u&quot;doc_tools&quot;: [u&quot;mkdocs&quot;, u&quot;sphinx&quot;, None],    },    u&quot;zZz&quot;: True,    u&quot;NullValue&quot;: None,    u&quot;Hello World&quot;: {        None: u&quot;This is madness&quot;,        u&quot;gh&quot;: u&quot;https://github.com/{0}.git&quot;,    },    u&quot;Yay #python&quot;: u&quot;Cool!&quot;,}```## Loggingpoyo follows the recommendations for [logging in a library][logging], whichmeans it does not configure logging itself. Its root logger is named ``poyo``and the names of all its children loggers track the package/module hierarchy.poyo logs to a ``NullHandler`` and solely on ``DEBUG`` level.If your application configures logging and allows debug messages to be shown,you will see logging when using poyo. The log messages indicate which parsermethod is used for a given string as the parser deseralizes the config. Youcan remove all logging from poyo in your application by setting the log levelof the ``poyo`` logger to a value higher than ``DEBUG``.[logging]: https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library### Disable Logging```pythonimport logginglogging.getLogger(&quot;poyo&quot;).setLevel(logging.WARNING)```### Example Debug Logging Config```pythonimport loggingfrom poyo import parse_stringlogging.basicConfig(level=logging.DEBUG)CONFIG = &quot;&quot;&quot;---default_context: # foobar    greeting: „Åì„Çì„Å´„Å°„ÅØ    gui: FALSE    doc_tools:        # docs or didn't happen        -    mkdocs        - 'sphinx'    123: 456.789&quot;&quot;&quot;parse_string(CONFIG)```### Example Debug Logging Messages```textDEBUG:poyo.parser:parse_blankline &lt;- \nDEBUG:poyo.parser:parse_blankline -&gt; IGNOREDDEBUG:poyo.parser:parse_dashes &lt;- ---\nDEBUG:poyo.parser:parse_dashes -&gt; IGNOREDDEBUG:poyo.parser:parse_section &lt;- default_context: # foobar\nDEBUG:poyo.parser:parse_str &lt;- default_contextDEBUG:poyo.parser:parse_str -&gt; default_contextDEBUG:poyo.parser:parse_section -&gt; &lt;Section name: default_context&gt;DEBUG:poyo.parser:parse_simple &lt;-     greeting: \u3053\u3093\u306b\u3061\u306f\nDEBUG:poyo.parser:parse_str &lt;- greetingDEBUG:poyo.parser:parse_str -&gt; greetingDEBUG:poyo.parser:parse_str &lt;- \u3053\u3093\u306b\u3061\u306fDEBUG:poyo.parser:parse_str -&gt; \u3053\u3093\u306b\u3061\u306fDEBUG:poyo.parser:parse_simple -&gt; &lt;Simple name: greeting, value: \u3053\u3093\u306b\u3061\u306f&gt;DEBUG:poyo.parser:parse_simple &lt;-     gui: FALSE\nDEBUG:poyo.parser:parse_str &lt;- guiDEBUG:poyo.parser:parse_str -&gt; guiDEBUG:poyo.parser:parse_false &lt;- FALSEDEBUG:poyo.parser:parse_false -&gt; FalseDEBUG:poyo.parser:parse_simple -&gt; &lt;Simple name: gui, value: False&gt;DEBUG:poyo.parser:parse_list &lt;-     doc_tools:\n        # docs or didn't happen\n        -    mkdocs\n        - 'sphinx'\nDEBUG:poyo.parser:parse_str &lt;- mkdocsDEBUG:poyo.parser:parse_str -&gt; mkdocsDEBUG:poyo.parser:parse_str &lt;- 'sphinx'DEBUG:poyo.parser:parse_str -&gt; sphinxDEBUG:poyo.parser:parse_str &lt;- doc_toolsDEBUG:poyo.parser:parse_str -&gt; doc_toolsDEBUG:poyo.parser:parse_list -&gt; &lt;Simple name: doc_tools, value: ['mkdocs', 'sphinx']&gt;DEBUG:poyo.parser:parse_simple &lt;-     123: 456.789\nDEBUG:poyo.parser:parse_int &lt;- 123DEBUG:poyo.parser:parse_int -&gt; 123DEBUG:poyo.parser:parse_float &lt;- 456.789DEBUG:poyo.parser:parse_float -&gt; 456.789DEBUG:poyo.parser:parse_simple -&gt; &lt;Simple name: 123, value: 456.789&gt;DEBUG:poyo.parser:parse_simple &lt;-     docs: true\nDEBUG:poyo.parser:parse_str &lt;- docsDEBUG:poyo.parser:parse_str -&gt; docsDEBUG:poyo.parser:parse_true &lt;- trueDEBUG:poyo.parser:parse_true -&gt; TrueDEBUG:poyo.parser:parse_simple -&gt; &lt;Simple name: docs, value: True&gt;```## About this projectWe created this project to work around installation issues with a[cookiecutter][cookiecutter] version that depended on existing YAML parsersfor Python. For more information please check out this [GitHub issue][issue].[issue]: https://github.com/cookiecutter/cookiecutter/pull/621## CommunityWould you like to contribute to **poyo**? You're awesome! üòÉPlease check out the [good first issue][good first issue] label for tasks,that are good candidates for your first contribution to poyo. Yourcontributions are greatly appreciated! Every little bit helps and credit willalways be given.Everyone interacting in the poyo project's codebases, issue trackers, chatrooms, and mailing lists is expected to follow the [PyPI Code ofConduct][code of conduct].Join the poyo [community][community]! üåçüåèüåé[code of conduct]: https://www.pypa.io/en/latest/code-of-conduct/[community]: https://github.com/hackebrot/poyo/blob/master/COMMUNITY.md[good first issue]: https://github.com/hackebrot/poyo/labels/good%20first%20issue## LicenseDistributed under the terms of the [MIT][MIT] license, poyo is free and open sourcesoftware.[MIT]: https://github.com/hackebrot/poyo/blob/master/LICENSE[cookiecutter]: https://github.com/cookiecutter/cookiecutter</longdescription>
</pkgmetadata>