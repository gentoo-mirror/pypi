<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyKerberos PackageThis Python package is a high-level wrapper for Kerberos (GSSAPI)operations.  The goal is to avoid having to build a module that wrapsthe entire Kerberos.framework, and instead offer a limited set offunctions that do what is needed for client/server Kerberosauthentication based on &lt;http://www.ietf.org/rfc/rfc4559.txt&gt;.Much of the C-code here is adapted from Apache's mod_auth_kerb-5.0rc7.## BuildIn this directory, run:```python setup.py build```## TestingTo run the tests in the tests folder, you must have a valid Kerberos setup onthe test machine. You can use the script .travis.sh as quick and easy way tosetup a Kerberos KDC and Apache web endpoint that can be used for the tests.Otherwise you can also run the following to run a self contained Dockercontainer```docker run \-v $(pwd):/app \-w /app \-e PYENV=2.7.13 \-e KERBEROS_USERNAME=administrator \-e KERBEROS_PASSWORD=Password01 \-e KERBEROS_REALM=example.com \-e KERBEROS_PORT=80 \ubuntu:16.04 \/bin/bash .travis.sh```The docker command needs to be run in the same directory as this library andyou can test it with different Python versions by changing the value of thePYENV environment value set in the command.Please have a look at testing_notes.md for more information.## IMPORTANTThe checkPassword method provided by this library is meant only for testing purposes as it doesnot offer any protection against possible KDC spoofing. That method should not be used in anyproduction code.## Channel BindingsYou can use this library to authenticate with Channel Binding support. ChannelBindings are tags that identify the particular data channel being used with theauthentication. You can use Channel bindings to offer more proof of a valididentity. Some services like Microsoft's Extended Protection can enforceChannel Binding support on authorisation and you can use this library to meetthose requirements.More details on Channel Bindings as set through the GSSAPI can be found here&lt;https://docs.oracle.com/cd/E19455-01/806-3814/overview-52/index.html&gt;. UsingTLS as a example this is how you would add Channel Binding support to yourauthentication mechanism. The following code snippet is based on RFC5929&lt;https://tools.ietf.org/html/rfc5929&gt; using the 'tls-server-endpoint-point'type.```import hashlibdef get_channel_bindings_application_data(socket):    # This is a highly simplified example, there are other use cases    # where you might need to use different hash types or get a socket    # object somehow.    server_certificate = socket.getpeercert(True)    certificate_hash = hashlib.sha256(server_certificate).hexdigest().upper()    certificate_digest = base64.b16decode(certificate_hash)    application_data = b'tls-server-end-point:%s' % certificate_digest    return application_datadef main():    # Code to setup a socket with the server    # A lot of code to setup the handshake and start the auth process    socket = getsocketsomehow()    # Connect to the host and start the auth process    # Build the channel bindings object    application_data = get_channel_bindings_application_data(socket)    channel_bindings = kerberos.channelBindings(application_data=application_data)    # More work to get responses from the server    result, context = kerberos.authGSSClientInit(kerb_spn, gssflags=gssflags, principal=principal)    # Pass through the channel_bindings object as created in the kerberos.channelBindings method    result = kerberos.authGSSClientStep(context, neg_resp_value, channel_bindings=channel_bindings)    # Repeat as necessary```## Python APIsSee kerberos.py.## Copyright and LicenseCopyright (c) 2006-2021 Apple Inc.  All rights reserved.This software is licensed under the Apache License, Version 2.0.  TheApache License is a well-established open source license, enablingcollaborative open source software development.See the &quot;LICENSE&quot; file for the full text of the license terms.</longdescription>
</pkgmetadata>