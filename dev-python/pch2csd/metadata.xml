<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pch2csd - The Clavia Nord Modular G2 Patch Converter Project![](https://travis-ci.org/gleb812/pch2csd.svg?branch=master)The goal of this project is to (re)implement the Clavia Nord Modular G2 soundengine in Csound, a well-known sound and music computing system. Important wikipages:- The full list of supported Nord modules: [Module implementation  status](https://github.com/gleb812/pch2csd/wiki/Module-implementation-status).- A guideline for porting Nord modules: [Making a new  module](https://github.com/gleb812/pch2csd/wiki/Making-a-new-module).## InstallationAssuming you have Python 3.5 and[pip](https://pip.pypa.io/en/stable/installing/) installed:```sudo pip3 install pch2csd```Before the project has got more stable, we automatically build and upload everycommit made to the repository, so you may want want to update the tool once in awhile.  With newer versions you'll probably get new features and modulesavailable, as well as bugs fixed. To update the tool just run the followingcommand:```sudo pip3 install -U pch2csd```## Usage Command line options:```$ pch2csd -husage: pch2csd [-h] [-d] [-p | -c | -v | -e] [arg]convert Clavia Nord Modular G2 patches to the Csound codepositional arguments:  arg              a pch2 file path or an UDO numerical IDoptional arguments:  -h, --help       show this help message and exit  -d, --debug      print a stack trace in case of error  -p, --print      parse the patch file and print its content  -c, --check-udo  validate the UDO template file (overrides '-p')  -v, --version    show program's version number and exit  -e               show the elephant and exit```To generate a new Csound file just pass the `.pch2` file path as the argument.The new file will be generated in the same directory with the patch file. Anexample:```pch2csd test_poly_mix2.pch2```Option `-p` can be used to print modules and cables present in of the patch.Module `ID` is a unique number of a module in the patch, module `Type` is anumerical representation of the module's type (also used to look up fortemplates in the `resources/modules`). In the square brackets are the raw MIDImodule parameters. `Area` is the part the module or cable is located; it canbe either `VOICE` or `FX`. In the cable table notation `In2(id=1, out=0) -&gt;Mix41B(id=2, in=0)` means, that the cable connects the 0th output of the module`In2` (`ID` 1) with the input 0 of the module `Mix41b` (`ID` 2). Note that themodules can connect either outputs (`out-in`) to inputs or intputs to inputs(`in-in`).```$ pch2csd -p test_3osc.pch2Patch file: test_3osc.pch2ModulesName        ID    Type  Parameters               Area--------  ----  ------  -----------------------  ------OscA         1      97  [64, 51, 1, 0, 2, 1, 0]  VOICEOscA         2      97  [64, 78, 1, 0, 2, 1, 0]  VOICEOscA         3      97  [64, 64, 1, 0, 2, 1, 0]  VOICEMix41B       4      19  [100, 112, 91, 117, 1]   VOICEEnvD         6      55  [54, 0]                  VOICEFltLP        5      87  [75, 34, 0, 1]           VOICEOut2         7       4  [2, 1, 0]                VOICEKeyboard     8       1  []                       VOICEFxIn         1     127  [0, 1, 1]                FXClip         2      61  [0, 53, 1, 1]            FXOut2         3       4  [0, 1, 0]                FXCablesFrom                       To                  Color    Type    Area---------------------  --  ------------------  -------  ------  ------OscA(id=1, out=0)      -&gt;  Mix41B(id=4, in=1)  red      out-in  VOICEOscA(id=2, out=0)      -&gt;  Mix41B(id=4, in=2)  red      out-in  VOICEOscA(id=3, out=0)      -&gt;  Mix41B(id=4, in=3)  red      out-in  VOICEMix41B(id=4, out=0)    -&gt;  EnvD(id=6, in=2)    red      out-in  VOICEEnvD(id=6, out=1)      -&gt;  FltLP(id=5, in=0)   red      out-in  VOICEEnvD(id=6, out=0)      -&gt;  FltLP(id=5, in=1)   blue     out-in  VOICEFltLP(id=5, out=0)     -&gt;  Out2(id=7, in=0)    red      out-in  VOICEOut2(id=7, in=0)       -&gt;  Out2(id=7, in=1)    red      in-in   VOICEKeyboard(id=8, out=1)  -&gt;  EnvD(id=6, in=0)    yellow   out-in  VOICEFxIn(id=1, out=0)      -&gt;  Clip(id=2, in=0)    red      out-in  FXClip(id=2, out=0)      -&gt;  Out2(id=3, in=0)    red      out-in  FXOut2(id=3, in=0)       -&gt;  Out2(id=3, in=1)    red      in-in   FX```Option `-c` allows you to check whether the UDO for the specified module hasbeen implemented or has errors in the implementation:```$ pch2csd -c 43Checking UDO for the type ID 43Found a module of this type: ConstantThe UDO template seems to be correct$ pch2csd -c 194Checking UDO for the type ID 194Found a module of this type: Mix21AERROR Unknown table 'CLAEXP'$ pch2csd -c 100Checking UDO for the type ID 100Found a module of this type: Sw21ERROR UdoTemplate(Sw21, 100.txt): no opcode 'args' annotations were found in the template```## HistoryWe started our project during Summer of 2015. The Project's main objective is tosimulate legendary Clavia Nord Modular G2 synthesizer using Csound language. TheProject was first presented at the The Third International Csound Conference(2-4 October, St. Petersburg, Russia).## How to contributePlease, read the[CONTRIBUTION.md](https://github.com/gleb812/pch2csd/blob/master/CONTRIBUTION.md)file.## Why do you need it?If you are a Nord Modular fan, this software allows you to have your favouritedevice ressurected for eternal life in the halls of Csound language. You alsocan improve the precision of models and use the whole world of Csoundpossibilities together with Clavia.If you are a Csound person, this is a new branch of our journey. This is greatto have some hardware digital synths running on Csound. Once the conversionproject is done, you are able to use hundreds of interesting Clavia's G2 patchesstraigth on Csound.If you discover the world of modular synthesis and algorithmic composition, thesystem provides a good way to describe the graphic patches of Clavia.If you are a developer of alternative Clavia Nord Modular G2 Editor, you couldmerge your graphical editor software with the system to produce the sound.</longdescription>
</pkgmetadata>