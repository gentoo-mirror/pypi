<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># anywidget &lt;a href=&quot;https://github.com/manzt/anywidget&quot;&gt;&lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/manzt/anywidget/main/docs/public/favicon.svg&quot; height=&quot;38&quot;&gt;&lt;/img&gt;&lt;/a&gt;[![PyPI](https://img.shields.io/pypi/v/anywidget.svg?color=green)](https://pypi.org/project/anywidget)[![License](https://img.shields.io/pypi/l/anywidget.svg?color=green)](https://github.com/manzt/anywidget/raw/main/LICENSE)[![codecov](https://codecov.io/gh/manzt/anywidget/branch/main/graph/badge.svg)](https://codecov.io/gh/manzt/anywidget)[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/manzt/anywidget/blob/main/examples/Counter.ipynb)custom jupyter widgets made easy- üõ†Ô∏è create widgets **without complicated cookiecutter templates**- üìö **publish to PyPI** like any other Python package- ü§ñ prototype **within** `.ipynb` or `.py` files- üöÄ run in **Jupyter**, **JupyterLab**, **Google Colab**, **VSCode**, and more- ‚ö° develop with **instant HMR**, like modern web frameworksLearn more in[the announcement](https://anywidget.dev/blog/introducing-anywidget).## Installation&gt; **Warning**: **anywidget** is new and under active development. It is not yet&gt; ready for production as APIs are subject to change.**anywidget** is available on [PyPI](https://pypi.org/project/anywidget/) andmay be installed with `pip`:```bashpip install &quot;anywidget[dev]&quot;```It is also available on[conda-forge](https://anaconda.org/conda-forge/anywidget). If you have[Anaconda](https://www.anaconda.com/distribution/#download-section) or[Miniconda](https://docs.conda.io/en/latest/miniconda.html) installed on yourcomputer, you can install **anywidget** with the following command:```bashconda install -c conda-forge anywidget```## Usage```pythonimport anywidgetimport traitletsclass CounterWidget(anywidget.AnyWidget):    # Widget front-end JavaScript code    _esm = &quot;&quot;&quot;    export function render(view) {      let getCount = () =&gt; view.model.get(&quot;count&quot;);      let button = document.createElement(&quot;button&quot;);      button.innerHTML = `count is ${getCount()}`;      button.addEventListener(&quot;click&quot;, () =&gt; {        view.model.set(&quot;count&quot;, getCount() + 1);        view.model.save_changes();      });      view.model.on(&quot;change:count&quot;, () =&gt; {        button.innerHTML = `count is ${getCount()}`;      });      view.el.appendChild(button);    }    &quot;&quot;&quot;    # Stateful property that can be accessed by JavaScript &amp; Python    count = traitlets.Int(0).tag(sync=True)```Front-end code can also live in separate files (recommend):```pythonimport pathlibimport anywidgetimport traitletsclass CounterWidget(anywidget.AnyWidget):    _esm = pathlib.Path(&quot;index.js&quot;)    _css = pathlib.Path(&quot;styles.css&quot;)    count = traitlets.Int(0).tag(sync=True)```Read [the documentation](https://anywidget.dev/en/getting-started) to learnmore.## ContributingThis is a monorepo, meaning the repo holds multiple packages. It requires the use of [pnpm](https://pnpm.js.org/en/).You can [install pnpm](https://pnpm.io/installation) with:```bashnpm i -g pnpm```Then, create a Python virtual environment with a complete development install:```bashpip install -e &quot;.[dev,test]&quot;```or alternatively use the [`hatch`](https://github.com/pypa/hatch) CLI:```bashhatch shell```If you are using the classic Jupyter Notebook you need to install thenbextension:```bashjupyter nbextension install --py --symlink --sys-prefix anywidgetjupyter nbextension enable --py --sys-prefix anywidget```Note for developers:- the `-e` pip option allows one to modify the Python code in-place. Restart the  kernel in order to see the changes.- the `--symlink` argument on Linux or OS X allows one to modify the JavaScript  code in-place. This feature is not available with Windows.For developing with JupyterLab:```bashjupyter labextension develop --overwrite anywidget```## Sending PRs### Code stylingThere are a few guidelines we follow:- For JavaScript, internal variables are written with  `snake_case` while external APIs are written with `camelCase` (if applicable).- For Python, ensure `black --check .` and `ruff .` pass. You can run  `black .` and `ruff --fix .` to format and fix linting errors.### Generating changelogsFor changes to be reflected in package changelogs, run `npx changeset` andfollow the prompts. &gt; **Note** not every PR requires a changeset. Since changesets are focused on &gt; releases and changelogs, changes to the repository that don't effect these&gt; won't need a changeset (e.g., documentation, tests).## ReleaseThe [Changesets GitHub action](https://github.com/changesets/action) will createand update a PR that applies changesets and publishes new versions of**anywidget** to NPM and PyPI.</longdescription>
</pkgmetadata>