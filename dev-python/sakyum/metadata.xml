<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SakyumAn extension of flask web framework that erase the complexity of structuring flask project blueprint, packages, and other annoying stuffs.## InstallationInstall and update the latest release from &lt;a href=&quot;https://pypi.org/project/sakyum&quot;&gt;pypi&lt;/a&gt;. Basically the library was uploaded using `sdist` (Source Distribution) and `bdist_wheel` (Built Distribution), this software (library) as from `v0.0.9` it is compatible and also tested with `windows OS` and others as well, such as `linux`, `macOS` and possibly some others too!.```pip install --upgrade sakyum```## Create flask project using sakyumAfter the installation paste the following command on your termianl```python -c &quot;from sakyum import project; project('schoolsite')&quot;```This will create a project called `schoolsite` now cd into the `schoolsite` directory, if you do `ls` within the directory you just enter you will see a module called `thunder.py` and some directories (some in the form of package) `media`, `static`, `templates` and a directory with the same name of your base directory name, in our case it is `schoolsite`.Boot up the flask server by running the below command```python thunder.py boot```Now visit the local url `http://127.0.0.1:5000` this will show you index page of your project## Create flask app within your project (schoolsite)For you to start an app within your project `schoolsite` shutdown the flask development server by pressing ( CTRL+C ) and then run the following command, by giving the name you want your app to be, in our case we will call our app `exam````python thunder.py create_app -a exam```this will create an app (a new package called `exam`) within your project `(schoolsite)`## Register an appOnce the app is created open a file `schoolsite/routes.py` and import your `exam` blueprint which is in (`exam/views.py`), default name given to an app blueprint, is the app name so our `exam` app blueprint name is `exam`, after importing it, append (register) the app blueprint in a list called `reg_blueprints` in that same file of `schoolsite/routes.py`importing blueprint```pyfrom exam.views import exam```registering blueprint```pyreg_blueprints = [  blueprint.default,  blueprint.errors,  blueprint.auth,  base,  exam,]```once you register the app, boot up the flask webserver again by```python thunder.py boot```visit `http://127.0.0.1:5000` which is your project landing pagevisit `http://127.0.0.1:5000/exam` this will take you to your app landing page (exam)visit `http://127.0.0.1:5000/admin` this will take you to admin page. From there you are ready to go.See more documentations &lt;a href=&quot;https://sakyum.readthedocs.io&quot;&gt;here!&lt;/a&gt;### Sakyum default page[![Sakyum default page](https://raw.githubusercontent.com/usmanmusa1920/sakyum/v0.0.12/media/sakyum_default_page.png)](https://sakyum.readthedocs.io)## Useful links- Documentation: https://sakyum.readthedocs.io- Repository: https://github.com/usmanmusa1920/sakyum- Docker example: https://github.com/usmanmusa1920/sakyum/tree/master/example/sakyum-dockerPull requests are welcomeChange Log==========0.0.12 (23/june/2023)------------------- Twelveth ReleaseTesting for OS compatibility also again! again!! again!!!- Eleventh ReleaseTesting for OS compatibility again! again!! again!!!- Tenth ReleaseTesting for OS compatibility again- Nineth ReleaseFixing bugsFixing v0.0.8 bugs for OS compatibility, and also tested on windows OS- Eight ReleaseOS compatibilityMaking sakyum to be compatible with windows OS as well as other OS- Seventh ReleaseThis release mostly is for adding more docs and examples.- Sixth ReleaseAlembic is included as dependency (in the require module list).- Fifth ReleaseIn fifith release, we handle how default user file system tricks is, things like when user change his profile picture.- Fourth ReleaseIn this release we handle how we can customise the admin html page by inheriting (extends) it in our project templates/admin directory, and the admin page on how to bind models in the admin. Also I refactor other libraries that this package needs with their corresponding versions in the setup.py and requirements.txt files. In this release good documentations is well packed.Database migration is added using `alembic`Some error pages, default page were added but still you can customise it in your project sub folder (the package with the same name of your project in your project directory) in a file called `route.py`. Also an admin directory within your project templates folder is added too!Possibly other well things are added which include auth system for `users` and more.</longdescription>
</pkgmetadata>