<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;gpt-cli&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Simatwa/gpt-cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?logo=Github&amp;label=Github&amp;message=Passing&amp;color=lime&quot; alt=&quot;Gihtub&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/chatgpt4-cli/&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Pypi&amp;message=v1.4.9&amp;color=green&amp;logo=pypi&quot; alt=&quot;Pypi&quot;/&gt;&lt;a href=&quot;https://wakatime.com/badge/github/Simatwa/gpt-cli&quot;&gt;&lt;img src=&quot;https://wakatime.com/badge/github/Simatwa/gpt-cli.svg&quot; alt=&quot;wakatime&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=License&amp;message=MIT&amp;color=green&amp;logo=MIT&quot; alt=&quot;license&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Development&amp;message=Beta&amp;color=Orange&amp;logo=progress&quot; alt=&quot;Progress&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Code Style&amp;message=Black&amp;color=black&amp;logo=Black&quot; alt=&quot;Code-style&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Coverage&amp;message=80%&amp;color=green&quot; alt=&quot;Coverage&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/chatgpt4-cli&quot;&gt;&lt;img src=&quot;https://static.pepy.tech/badge/chatgpt4-cli&quot; alt=&quot;Downloads&quot;/&gt;&lt;/a&gt;&lt;/p&gt;CLI tool for interacting with [ChatGPT](https://openai.com). &gt; Chat and generate images.![screenshot](https://github.com/Simatwa/gpt-cli/raw/main/assets/Screenshot1.png)## [Independencies](requirements.txt)* [Openai](https://github.com/openai/openai-python)* [Numpy](https://github.com/numpy/numpy)* [Colorama](https://github.com/tartley/colorama)* [revChatGPT](https://github.com/acheong08/ChatGPT)### Features- Chat with ChatGPT conversationally.- Stream or Non-stream responses- Maintain record of the chats- Generate Images - Based on your prompt or ChatGPT generated description- Parse [awesome-chatgpt-prompts](https://github.com/f/awesome-chatgpt-prompts) easily- Fully customizable Commandline Interface- Interact with system commands on the fly### Prerequisites- [x] [OPENAI_API_KEY](https://platform.openai.com/account/api-keys)## InstallationEither of the following ways will get you ready.1. Using pip- From pypi```sh$ sudo pip install chatgpt4-cli```- Installing from source  ```sh $ sudo pip install git+https://github.com/Simatwa/gpt-cli.git ```2. Cloning locally and install```sh$ git clone https://github.com/Simatwa/gpt-cli.git$ cd gpt-cli$ sudo python3 setup.py install #or$ python3 setup.py install```## Usage - Make OPENAI_API_KEY an environment variable.`$ export OPENAI_API_KEY=&lt;openai-api-key&gt;`After that you can launch the script with or without a prompt&gt; For instance :```sh     #Without a prompt   $ gpt-cli     # With a prompt    $ gpt-cli Write a conversation between Sun and Pluto.````- Parsing OPENAI_API_KEY as one of the argumentsRun `$ gpt-cli -k &lt;openai-api-key&gt; &lt;Your query&gt;` at the terminal.&gt; For instance :```sh$ gpt-cli -k xxxxxxxxxxxxxxxxxx How to scan for SMB vulnerability using NMAP?```The [awesome-chatgpt-prompts](https://github.com/f/awesome-chatgpt-prompts) can be parsed to the script through the following ways:- Specifying the role - (*case-sensitive*)    e.g `$ gpt-cli UX/UI Developer`- Specifying the index of the prompt:    e.g `$ gpt-cli 29`Run `$ gpt-cli --dump show` to view the act,prompt and their **indexes**You can as well generate images using EdgeGPT (DALL-E) or ChatGPT independent of `gpt-cli`, uninteractively at the terminal:1. EdgeGPT ```sh$ gpt-cli-emage --cookie-file &lt;path&gt; &lt;Your prompt&gt;```  - Visit [EdgeGPT](https://github.com/acheong08/EdgeGPT#requirements) to learn more on how to get the cookies.2. ChatGPT ```sh  # Make OPENAI_API_KEY environment variable  $ gpt-cli-image &lt;Your Prompt&gt;```For more info run `$gpt-cli-image -h` or `$gpt-cli-emage -h`.## Highlight&lt;details&gt;&lt;summary&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: right;&quot;&gt;  No.&lt;/th&gt;&lt;th&gt;Command          &lt;/th&gt;&lt;th&gt;Action                                     &lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    0&lt;/td&gt;&lt;td&gt;./{command}      &lt;/td&gt;&lt;td&gt;Run command against system                 &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    1&lt;/td&gt;&lt;td&gt;img              &lt;/td&gt;&lt;td&gt;Generate image ChatGPT based on prompt     &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    2&lt;/td&gt;&lt;td&gt;emg              &lt;/td&gt;&lt;td&gt;Generate image with EdgeGPT based on prompt&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    3&lt;/td&gt;&lt;td&gt;txt2img          &lt;/td&gt;&lt;td&gt;Generate image based on GPT description    &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    4&lt;/td&gt;&lt;td&gt;_font_color      &lt;/td&gt;&lt;td&gt;Modify font-color                          &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    5&lt;/td&gt;&lt;td&gt;_background_color&lt;/td&gt;&lt;td&gt;Modify background_color                    &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    6&lt;/td&gt;&lt;td&gt;_prompt          &lt;/td&gt;&lt;td&gt;Modify terminal prompt                     &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    7&lt;/td&gt;&lt;td&gt;_save            &lt;/td&gt;&lt;td&gt;Save current configurations to `.json` file&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    8&lt;/td&gt;&lt;td&gt;_load            &lt;/td&gt;&lt;td&gt;Load configurations from file              &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;    9&lt;/td&gt;&lt;td&gt;_rollback        &lt;/td&gt;&lt;td&gt;Rollback Chat by {n} times                 &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;   10&lt;/td&gt;&lt;td&gt;_reset           &lt;/td&gt;&lt;td&gt;Reset current chat and start new           &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;   11&lt;/td&gt;&lt;td&gt;_help            &lt;/td&gt;&lt;td&gt;Show this help info                        &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;   12&lt;/td&gt;&lt;td&gt;{Any Other}      &lt;/td&gt;&lt;td&gt;Chat with ChatGPT                          &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/summary&gt;1.img : Text-to-Image converter - ChatGPT - e.g ```img Toddler cartoon coding in Python```2.emg : Text-to-Image converter - EdgeGPT - e.g ```emg Toddler cartoon coding in Python```3.txt2img : Generate image based on GPT description - e.g ```txt2img Describe phenotype anatomy of ancient dinosaurs```4._font_color : modifies font-color - e.g ```font_color input red```5._background_color : modifies background_color - e.g ```background_color cyan```6._prompt : Modify CMD prompt - e.g ```prompt ┌─[Smartwa@ChatGPT4]─(%H:%M:%S)```7._load : Load configurations from the json file - e.g ```load DAN.json```8._save : Save the current Chat Configurations - e.g ```save DAN.json```9._rollback : Rollback the Chat by the {n} time(s) - e.g ```_rollback 2```10._reset : Reset current chat and start new - e.g ```_reset Chat as if you are a 10 year old child```11._help : Show this help info* Use double `./` *(fullstop and forward slash)* to interact with**system commands**  e.g ```./ifconfig```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;For more info run `gpt-cli -h`.&lt;/summary&gt;```usage: gpt-cli [-h] [-v] [-m gpt-3.5-turbo|gpt-4|gpt-4-32k] [-t [0.1-1]]               [-mt [1-7000]] [-tp [0.1-1]] [-f [0.1-2]] [-p [0.1-2]] [-k KEY]               [-kp path] [-ic [cyan|green|yellow|red]]               [-oc [cyan|green|yellow|red]] [-bc [blue,magenta,black,reset]]               [-pc [cyan|green|yellow|red]] [--prompt [SETTINGS ...]]               [-tm value] [-pr PROXY] [-rc value] [-g 1,4] [-sp [text ...]]               [-fp path] [-o path] [-pp prefix] [-rp prefix]               [-dm keys|values|show|{fnm}] [-dl symbol] [-cf path]               [--disable-stream] [--new-record] [--disable-recording]               [--zero-show] [--markdown] [--update]               [message ...]Interact with ChatGPT at the terminalpositional arguments:  message               Message to be send.optional arguments:  -h, --help            show this help message and exit  -v, --version         show program's version number and exit  -m gpt-3.5-turbo|gpt-4|gpt-4-32k, --model gpt-3.5-turbo|gpt-4|gpt-4-32k                        ChatGPT model to be used  -t [0.1-1], --temperature [0.1-1]                        Charge of the generated text's randomness  -mt [1-7000], --max-tokens [1-7000]                        Maximum number of tokens to be generated upon                        completion  -tp [0.1-1], --top-p [0.1-1]                        Sampling threshold during inference time  -f [0.1-2], --frequency-penalty [0.1-2]                        Chances of word being repeated  -p [0.1-2], --presence-frequency [0.1-2]                        Chances of topic being repeated  -k KEY, --key KEY     OPENAI-API-KEY  -kp path, --key-path path                        Path to text-file containing GPT-api key  -ic [cyan|green|yellow|red], --input-color [cyan|green|yellow|red]                        Font color for inputs  -oc [cyan|green|yellow|red], --output-color [cyan|green|yellow|red]                        Font color for outputs  -bc [blue,magenta,black,reset], --background-color [blue,magenta,black,reset]                        Console's background-color  -pc [cyan|green|yellow|red], --prompt-color [cyan|green|yellow|red]                        Prompt's display color  --prompt [SETTINGS ...]                        Customizes the prompt display  -tm value, --timeout value                        Request timeout while making request - (Soon)  -pr PROXY, --proxy PROXY                        Pivot request through this proxy  -rc value, --reply-count value                        Number of responses to be received  -g 1,4, --gpt 1,4     ChatGPT version to be used  -sp [text ...], --system-prompt [text ...]                        Text to train ChatGPT at the start  -fp path, --file-path path                        Path to .csv file containing role and prompt -                        [act,prompt]  -o path, --output path                        Filepath for saving the chats - default                        [/home/smartwa/git/gpt-cli/.chatgpt-history.txt]  -pp prefix, --prompt-prefix prefix                        Text to append before saving each prompt - default                        [&gt;&gt;timestamp]  -rp prefix, --response-prefix prefix                        Text to append before saving each response - default                        [None]  -dm keys|values|show|{fnm}, --dump keys|values|show|{fnm}                        Stdout [keys,values]; Save all prompts in json format                        to a file  -dl symbol, --delimiter symbol                        Delimeter for the .CSV file - [act,prompt]  -cf path, --cookie-file path                        Path to Bing's cookies - for Edge Image Generation  --disable-stream      Specifies not to stream responses from ChatGPT  --new-record          Override previous chats under the filepath  --disable-recording   Disable saving prompts and responses  --zero-show           Specifies not to stdout prompt of the act parsed  --markdown            Stdout responses in markdown-format - disables                        streaming  --update              Download latest prompts - [awesome-chatgpt-prompts]```&lt;/details&gt;&gt; **Note** : **gpt-4** *(model)* supports upto *7000* tokens and others *3000*.&gt; **Warning** : **gpt-1**  Has issues - *(To be fixed later)*## Motive&lt;details&gt;&lt;summary&gt;Love for `Terminal` ❤️&lt;/summary&gt;As a `terminal guy` I used to find it uncomfortable to keep shifting from one window to next in order to access ChatGPT even after trying out the [gpt-login](https://github.com/Simatwa/gpt-login), the rest is [here.](https://github.com/Simatwa/gpt-cli)&lt;/details&gt;## Contributions- Anyone is free to [fork](https://github.com/Simatwa/gpt-cli/fork), submit an [issue](https://github.com/Simatwa/gpt-cli/issues) without any **guideline** or submitting a [pull request](https://github.com/Simatwa/gpt-cli/pulls).### ToDo- [x] Use dialogue- [x] Issue prompt from a file- [ ] Busy bar  &gt; Review [CHANGELOG](https://github.com/Simatwa/gpt-cli/blob/main/CHANGELOG.md)## Acknowledgements1. [remo7777](https://github.com/remo7777/T-Header)2. [acheong08](https://github.com/acheong08/ChatGPT)3. [f](https://github.com/f/awesome-chatgpt-prompts)</longdescription>
</pkgmetadata>