<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Test and deploy](https://github.com/moble/scri/actions/workflows/build.yml/badge.svg)](https://github.com/moble/scri/actions/workflows/build.yml)[![Documentation Status](https://readthedocs.org/projects/scri/badge/?version=latest)](https://scri.readthedocs.io/en/latest/?badge=latest)[![PyPI Version](https://img.shields.io/pypi/v/scri?color=)](https://pypi.org/project/scri/)[![Conda Version](https://img.shields.io/conda/vn/conda-forge/scri.svg?color=)](https://anaconda.org/conda-forge/scri)[![MIT License](https://img.shields.io/github/license/moble/scri.svg)](https://github.com/moble/scri/blob/main/LICENSE)[![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.4041971.svg)](https://doi.org/10.5281/zenodo.4041971)Scri====Python/numba code for manipulating time-dependent functions of spin-weightedspherical harmonics on future null infinity## Citing this codeIf you use this code for academic work (I can't actually imagine any other usefor it), please cite the latest version that you used in your publication. The DOI is:* DOI: [10.5281/zenodo.4041972](https://doi.org/10.5281/zenodo.4041972) ([BibTeX entry on Zenodo](https://zenodo.org/record/4041972/export/hx#.YFNpLe1KiV4))Also please cite the papers for/by which it was produced:* &quot;Angular velocity of gravitational radiation from precessing binaries and the  corotating frame&quot;, Boyle,  [Phys. Rev. D, 87, 104006](http://link.aps.org/doi/10.1103/PhysRevD.87.104006)  (2013).* &quot;Gravitational-wave modes from precessing black-hole binaries&quot;, Boyle *et  al.*, http://arxiv.org/abs/1409.4431 (2014).* &quot;Transformations of asymptotic gravitational-wave data&quot;, Boyle,  [Phys. Rev. D, 93, 084031](http://link.aps.org/doi/10.1103/PhysRevD.93.084031)  (2015).Bibtex entries for these articles can be found[here](https://raw.githubusercontent.com/moble/scri/master/scri.bib).  It mightalso be nice of you to provide a link directly to this source code.## Quick startAssuming you have the [`anaconda`](http://continuum.io/downloads) distributionof python (the preferred distribution for scientific applications),installation is as simple as```shconda update -y --allconda install -c conda-forge scri```If you need to install `anaconda` first, it's very easy and doesn't require root permissions.  Just [download](http://continuum.io/downloads) and follow the instructions â€” particularly setting your `PATH`.  Also, make sure `PYTHONPATH` and `PYTHONHOME` are *not* set.  Ensure that it worked by running `python --version`.  It should say something about anaconda; if not, you probably forgot to set your `PATH`.  Now just run the installation command above.Then, in python, you can check to make sure installation worked with```pythonimport scriw = scri.WaveformModes()```Now, `w` is an object to contain time and waveform data, as well as variousrelated pieces of information -- though it is trivial in this case, because wehaven't given it any data.  For more information, see the docstrings of `scri`,`scri.WaveformModes`, etc.## DependenciesThe dependencies should be taken care of automatically by the quickinstallation instructions above.  However, if you run into problems (or if youfoolishly decide not to use anaconda to install things), it may be because youare missing some or all of these:  * Standard packages (come with full anaconda installation)    * [`numpy`](http://www.numpy.org/)    * [`scipy`](http://scipy.org/)    * [`matplotlib`](http://matplotlib.org/)    * [`h5py`](http://www.h5py.org/)    * [`numba`](http://numba.pydata.org/)  * My packages, available from anaconda.org and/or github    * [`fftw`](https://github.com/moble/fftw) (not actually mine,      but I maintain a copy for easy installation)    * [`spinsfast`](https://github.com/moble/spinsfast) (not actually mine,      but I maintain a copy with updated python features)    * [`quaternion`](https://github.com/moble/quaternion)    * [`spherical_functions`](https://github.com/moble/spherical_functions)All these dependencies are installed automatically when you use the `conda`command described above.  The `anaconda` distribution can co-exist with yoursystem python with no trouble -- you simply add the path to anaconda beforeyour system executables.  In fact, your system python probably needs to staycrusty and old so that your system doesn't break, while you want to use a newerversion of python to actually run fancy new code like this.  This is what`anaconda` does for you.  It installs into your home directory, so it doesn'trequire root access.  It can be uninstalled easily, since it exists entirelyinside its own directory.  And updates are trivial.### &quot;Manual&quot; installationThe instructions in the &quot;Quick Start&quot; section above should be sufficient, asthere really is no good reason not to use `anaconda`.  You will occasionallyhear people complain about it not working; these people have not installed itcorrectly, and have other python-related environment variables that shouldn'tbe there.  You don't want to be one of those people.Nonetheless, it is possible to install these packages without anaconda -- inprinciple.  The main hurdle to overcome is `numba`.  Maybe there are nice waysto install `numba` without `anaconda`.  I don't know.  I don't care.  But ifyou're awesome enough to do that, you're awesome enough to install all theother dependencies without advice from me.  But in short, you can either usethe `setup.py` files as usual, or just use `pip`:```shpip install git+git://github.com/moble/spinsfastpip install git+git://github.com/moble/quaternionpip install git+git://github.com/moble/spherical_functionspip install git+git://github.com/moble/scri```And since you're just *soooo* cool, you already know that the `--user` flag ismissing from those commands because you're presumably using a virtualenvironment, hotshot.(If you're really not that cool, and aren't using `virtualenv`, you might thinkyou should `sudo` those commands.  But there's no need if you just use the`--user` flag instead.  That installs packages into your user directory, whichis usually a better idea.)Note that `spinsfast` depends (for both building and running) on `fftw`.  Ifyou run into build problems with `spinsfast`, it probably can't find theheader or library for `fftw`.  See the documentation of my copy of `spinsfast`[here](https://github.com/moble/spinsfast#manual-installation) for suggestionson solving that problem.  Of course, with `conda`, `fftw` is installed in theright place from my channel automatically.## DocumentationTutorials and automatically generated API documentation are available on [Read the Docs: scri](https://scri.readthedocs.io/).## AcknowledgmentsThis code is, of course, hosted on github; because it is an open-sourceproject, the hosting is free, and all the wonderful features of github areavailable, including free wiki space and web page hosting, pull requests, anice interface to the git logs, etc.Every change in this code is[auomatically tested](https://travis-ci.org/moble/scri) on[Travis-CI](https://travis-ci.org/).  This is a free service (for open-sourceprojects like this one), which integrates beautifully with github, detectingeach commit and automatically re-running the tests.  The code is downloaded andinstalled fresh each time, and then tested, on both versions of python (2 and3).  This ensures that no change I make to the code breaks either installationor any of the features that I have written tests for.Every change to this code is also recompiled automatically, bundled into a`conda` package, and made available for download from[anaconda.org](https://anaconda.org/moble/scri).  Again, because this is anopen-source project all those nice features are free.The work of creating this code was supported in part by the Sherman FairchildFoundation and by NSF Grants No. PHY-1306125 and AST-1333129.</longdescription>
</pkgmetadata>