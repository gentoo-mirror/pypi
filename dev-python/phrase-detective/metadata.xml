<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Installation from pip3```shellpip3 install --verbose phrase_detective python -m spacy download en_core_web_trfpython -m spacy download es_dep_news_trfpython -m spacy download de_dep_news_trf```# UsagePlease refer to [api docs](https://qishe-nlp.github.io/phrase-detective/)### Detect noun phrases ```import spacyfrom spacy import Languagefrom phrase_detective import NounPhraseRecognizer, PKG_INDICES@Language.factory(&quot;nprecog&quot;)def create_np_parser(nlp: Language, name: str):  return NounPhraseRecognizer(nlp) def noun_phrase(lang, sentence):  nlp = spacy.load(PKG_INDICES[lang])  nlp.add_pipe(&quot;nprecog&quot;)  doc = nlp(sentence)  for np in doc._.noun_phrases:    print(np.text)```### Detect verb phrases ```import spacyfrom spacy import Languagefrom phrase_detective import VerbKnowledgeRecognizer, PKG_INDICES@Language.factory(&quot;vkbrecog&quot;)def create_vkb_parser(nlp: Language, name: str):  return VerbKnowledgeRecognizer(nlp) def verb_knowledge(lang, sentence):  nlp = spacy.load(PKG_INDICES[lang])  nlp.add_pipe(&quot;vkbrecog&quot;)  doc = nlp(sentence)  for v in doc._.verbs:    print(&quot;TEXT: {}, TAG: {}, FORM: {}, ORIGNAL: {}&quot;.format(v.text, v.tag_, spacy.explain(v.tag_), v.lemma_))  for pp in doc._.passive_phrases:    print(pp.text)  for vp in doc._.verb_phrases:    print(vp)```# Development### Clone project```git clone https://github.com/qishe-nlp/phrase-detective.git```### Install [poetry](https://python-poetry.org/docs/)### Install dependencies```poetry update```### Test and Issue```poetry run pytest -rP```which run tests under `tests/*`### Create sphinx docs```poetry shellcd apidocssphinx-apidoc -f -o source ../phrase_detectivemake htmlpython -m http.server -d build/html```### Hose docs on github pages```cp -rf apidocs/build/html/* docs/```### Build* Change `version` in `pyproject.toml` and `phrase_detective/__init__.py`* Build python package by `poetry build`### Git commit and push### Publish from local dev env* Set pypi test environment variables in poetry, refer to [poetry doc](https://python-poetry.org/docs/repositories/)* Publish to pypi test by `poetry publish -r test`### Publish through CI * Github action build and publish package to [test pypi repo](https://test.pypi.org/)```git tag [x.x.x]git push origin master```* Manually publish to [pypi repo](https://pypi.org/) through [github action](https://github.com/qishe-nlp/phrase-detective/actions/workflows/pypi.yml)</longdescription>
</pkgmetadata>