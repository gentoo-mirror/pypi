<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Import Guardian README=============================What is it?-----------``python-import-guardian`` is a static-analysis import guardian forPython. It can be used to control explictly which Python modules andpackages can be imported by a given set of modules and packages in yourproject.When is this useful?--------------------Let’s say you have a project with two major components — a client and aserver. Both of these components live in the same repository (for thesake of argument) and both use a common set of shared code for variousfunctions — for example to determine how certain hashes are calculatedor some such.The code may be laid out thus:::   /myproject     |     |- client/     |- server/     |- shared/Conceptually, you only ever want ``client`` and ``shared`` code to beinstalled on client machines and ``server`` and ``shared`` code onserver machines. Modules in ``client`` and ``server`` may import from``shared``, but not from each other, and ``shared`` may import fromneither — this ensures that you have a good separation of concernsbetween client and server code whilst maintaining some shared code andgood DRY principles.``python-import-guardian`` allows you to define how you want thesemodules to relate to each other when it comes to which module can importwhat from where. For our example project, a simple``importguardian.json`` file at the top of the project tree might looklike this:::   {       &quot;forbidden_modules&quot;: {           &quot;server&quot;: [               &quot;client&quot;,               &quot;shared&quot;           ],           &quot;client&quot;: [               &quot;server&quot;,               &quot;shared&quot;           ]                  }   }The ``forbidden_modules`` declaration here maps Python modules to a listof the modules or packages which may not import them. So in this case:``server`` may not be imported by ``client`` or ``shared``, and``client`` may not be imported by ``server`` or ``shared``.``forbidden_modules`` is a blacklist, so ``shared`` can be imported byanything because it isn’t mentioned as a forbidden module.</longdescription>
</pkgmetadata>