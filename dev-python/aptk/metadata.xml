<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aptk - A Parse Toolkit======================This is a module for creating parsers from grammars.  aPTK targets to makethis in a very &quot;documented&quot; way.  So you can define the grammar in doc-stringof your grammar class or even in your reStructuredText documentation... highlight:: aptkA simple example of a greeting parser::  :grammar GreetingGrammar  &lt;greeting&gt;        := &lt;greeting-clause&gt; &lt;.ws&gt; &lt;greeted&gt;  &lt;ws&gt;              := \s+  &lt;greeting-clause&gt; := &quot;hello&quot; | &quot;hi&quot;  &lt;greeted&gt;         := \w+This will create a class named `GreetingGrammar`.  First rule in the grammar will be used as start-rule for a normal parsing.  Parsing a rule, will result in a ParseTree.  Here follows an example of rule``&lt;greeting&gt;`` matching &quot;hello world&quot;::  &lt;greeting&gt; ~~ &quot;hello world&quot;             -&gt; greeting(                  greeting-clause( 'hello' ),                   greeted( 'world' )                 )Actually what you see above is a test assertion for applying rule greetingto string &quot;hello world&quot;, what is expected to result in the parse-treedisplayed above.But read more in `aptk's documentation`_... _aptk's documentation: http://aptk.readthedocs.orgDownload--------You can download this package from PyPI_... _PyPI:: http://pypi.python.org/pypi/aptk#downloads.. highlight:: bashOr install it with easy_install::    easy_install -U aptk    or get the the source from source code repository from bitbucket.org::    $ hg clone https://bitbucket.org/klorenz/aptkBuilding Documentation----------------------For building documentation you need sphinx, you can get it using::    $ easy_install -U SphinxThen you can::    $ cd docs    $ make html    $ firefox _build/html/index.htmlLicense-------Licensed under New BSD License, see LICENSE.txt.Release Notes-------------======= =================================================================Version Notes======= =================================================================0.6.4   fix setup issue0.6     Backtracking for Operation Precedence0.5.7   add comments0.5.4   first tests for postcircumfix pass, more tests, cleaned code a bit0.5.3   Added operation precedence parser. Pretty simple yet, but supports        infix, postfix, prefix, circumfix operations. postcircumfix is        also implemented but not tested at all others are partly tested.0.5     Starting with version 0.5, which shall indicate, that there is         still a lot to do.        Especially documentation is far from complete and it contains         some passages, which are already outdated.        Next releases will focus on documentation and testing and adding         an operator precendence parser.======= =================================================================</longdescription>
</pkgmetadata>