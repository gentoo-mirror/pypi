<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pytest-cookies[pytest][pytest] is a mature testing framework for Python that is developedby a thriving and ever-growing community of volunteers. It uses plain assertstatements and regular Python comparisons. At the core of the pytest testframework is a powerful hook-based plugin system.**pytest-cookies** is a pytest plugin that comes with a ``cookies`` fixturewhich is a wrapper for the [cookiecutter][cookiecutter] API for generatingprojects. It helps you verify that your template is working as expected andtakes care of cleaning up after running the tests. üç™# Installation**pytest-cookies** is available for download from [PyPI][pypi] via [pip][pip]:```textpip install pytest-cookies```This will automatically install [pytest][pytest] and[cookiecutter][cookiecutter].# Usage## Generate a new projectThe ``cookies.bake()`` method generates a new project from your templatebased on the default values specified in ``cookiecutter.json``:```pythondef test_bake_project(cookies):    result = cookies.bake(extra_context={&quot;repo_name&quot;: &quot;helloworld&quot;})    assert result.exit_code == 0    assert result.exception is None    assert result.project_path.name == &quot;helloworld&quot;    assert result.project_path.is_dir()    # The `project` attribute is deprecated    assert result.project.basename == &quot;helloworld&quot;    assert result.project.isdir()```**Please note that the `project` attribute of the returned `Result` class isdeprecated and will be removed in a future release, please use `project_path`instead.**The ``cookies.bake()`` method also accepts the ``extra_context`` keywordargument that will be passed to cookiecutter. The given dictionary willoverride the default values of the template context, effectively allowing youto test arbitrary user input data.For more information on injecting extra context, please check out the[cookiecutter documentation][extra-context].## Specify the template directoryBy default ``cookies.bake()`` looks for a cookiecutter template in thecurrent directory. This can be overridden on the command line by passing a``--template`` parameter to pytest:```textpytest --template TEMPLATE```You can customize the cookiecutter template directory from a test by passingin the optional ``template`` paramter:```python@pytest.fixturedef custom_template(tmpdir):    template = tmpdir.ensure(&quot;cookiecutter-template&quot;, dir=True)    template.join(&quot;cookiecutter.json&quot;).write('{&quot;repo_name&quot;: &quot;example-project&quot;}')    repo_dir = template.ensure(&quot;{{cookiecutter.repo_name}}&quot;, dir=True)    repo_dir.join(&quot;README.rst&quot;).write(&quot;{{cookiecutter.repo_name}}&quot;)    return templatedef test_bake_custom_project(cookies, custom_template):    &quot;&quot;&quot;Test for 'cookiecutter-template'.&quot;&quot;&quot;    result = cookies.bake(template=str(custom_template))    assert result.exit_code == 0    assert result.exception is None    assert result.project_path.name == &quot;example-project&quot;    assert result.project_path.is_dir()```## Keep output directories for debuggingBy default ``cookies`` removes baked projects.However, you can pass the ``keep-baked-projects`` flag if you'd like to keepthem ([it won't clutter][temporary-directories] as pytest only keeps thethree newest temporary directories):```textpytest --keep-baked-projects```# CommunityContributions are very welcome! If you encounter any problems, please [filean issue][new-issue] along with a detailed description. Tests can be run with[tox][tox]. Please make sure all of the tests are green before you submit apull request.You can also support the development of this project by volunteering tobecome a maintainer, which means you will be able to triage issues, mergepull-requests, and publish new releases. If you're interested, please submita pull-request to add yourself to the list of [maintainers][community] andwe'll get you started! üç™Please note that **pytest-cookies** is released with a [Contributor Code ofConduct][code-of-conduct]. By participating in this project you agree toabide by its terms.# LicenseDistributed under the terms of the [MIT license][license], **pytest-cookies**is free and open source software.[cookiecutter]: https://github.com/audreyr/cookiecutter[pytest]: https://github.com/pytest-dev/pytest[pip]: https://pypi.org/project/pip/[pypi]: https://pypi.org/project/pytest-cookies/[extra-context]: https://cookiecutter.readthedocs.io/en/latest/advanced/injecting_context.html[temporary-directories]: https://docs.pytest.org/en/latest/tmpdir.html#the-default-base-temporary-directory[tox]: https://pypi.org/project/tox/[new-issue]: https://github.com/hackebrot/pytest-cookies/issues[code-of-conduct]: https://github.com/hackebrot/pytest-cookies/blob/main/CODE_OF_CONDUCT.md[community]: https://github.com/hackebrot/pytest-cookies/blob/main/COMMUNITY.md[license]: https://github.com/hackebrot/pytest-cookies/blob/main/LICENSE</longdescription>
</pkgmetadata>