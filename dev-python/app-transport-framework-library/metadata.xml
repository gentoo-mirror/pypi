<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ATF LibraryDie App-Transport-Framework (ATF) Library ist eine Python-Bibliothek zur Verarbeitung und Handhabung von ATF-Nachrichten (&lt;https://simplifier.net/app-transport-framework&gt;) im FHIR-Format. Die Bibliothek bietet eine einfache Möglichkeit, verschiedene Anwendungsfälle und ihre zugehörigen Handler zu registrieren und zu verwalten.## InstallationInstallieren Sie diese Bibliothek mit dem folgenden Befehl:```pip install app-transport-framework-library```## Verwendung1. Importieren Sie die benötigten Klassen und Funktionen aus der Bibliothek:```pythonfrom app_transport_framework_library.atf_bundle_processor import ATF_BundleProcessor```2. Erstellen Sie eine Instanz des ATF_BundleProcessor und registrieren Sie die Handler für die Anwendungsfälle, die Sie erweitern möchten:```pythonatf_processor = ATF_BundleProcessor(sender, source)atf_processor.register_use_case_handler(    &quot;https://gematik.de/fhir/atf/CodeSystem/operation-identifier-cs&quot;,    &quot;eRezept_Rezeptanforderung;Rezeptanfrage&quot;,    eRezept_Rezeptanforderung_RezeptanfrageHandler())atf_processor.register_use_case_handler(    &quot;https://gematik.de/fhir/atf/CodeSystem/service-identifier-cs&quot;,    &quot;eRezept_Rezeptanforderung;Rezeptanfrage_Storno&quot;,    eRezept_Rezeptanforderung_Rezeptanfrage_StornoHandler())```3. EventsAbonnieren Sie das 'message_to_send_event', um die generierten ausgehenden Eingangsbestätigungen zu erhalten und weiterzuleiten:```pythonfrom app_transport_framework_library.models.message_to_send import MessageToSenddef on_message_to_send_triggered(message_to_send: MessageToSend):    # Senden der Empfangsbestätigung an den ursprünglichen Absender    passatf_processor.message_to_send_event.subscribe(on_message_to_send_triggered)```Abonnieren Sie das 'received_Empfangsbestaetigung_event', um die eingehenden Eingangsbestätigungen des belieferten Adressaten zu erhalten und die Message-ID der gesendeten Nachricht auszuwerten:```pythonfrom app_transport_framework_library.models.empfangsbestaetigung import Empfangsbestaetigungdef on_received_Empfangsbestaetigung(empfangsbestaetigung: Empfangsbestaetigung):    print(f&quot;'{receiver_address}' hat Empfangsbestätigung für '{empfangsbestaetigung.message_id}' von '{empfangsbestaetigung.sender}' erhalten&quot;)atf_processor.received_Empfangsbestaetigung_event.subscribe(on_received_Empfangsbestaetigung)```Abonnieren Sie das 'focus_Ressource_to_process_event', um die inhaltlichen Ressourcen des Anwendungsfalls zu erhalten und auswerten zu können:```pythonfrom app_transport_framework_library.models.bundle_focus_content import BundleFocusContentfrom fhir.resources.communication import Communicationdef on_focus_Ressource_to_process(bundle_content: BundleFocusContent):    from app_transport_framework_library.models.bundle_focus_content import BundleFocusContentfrom fhir.resources.communication import Communicationdef on_focus_Ressource_to_process(bundle_content: BundleFocusContent):    print(f&quot;Verarbeitung des Bundles mit Fokus auf '{bundle_content.code}'&quot;)    if bundle_content.code == &quot;Selbsttest;Lieferung&quot;:        com_parsed = Communication.parse_raw(bundle_content.bundle_entries[0].json())        decoded_message = base64.b64decode(com_parsed.payload[0].contentAttachment.data)        print(f&quot;Das Bundle enthält {len(bundle_content.bundle_entries)} Einträge&quot;)        print(f&quot;Die Kommunikation enthält die Payload '{decoded_message.decode('utf-8')}'&quot;)atf_processor.focus_Ressource_to_process_event.subscribe(on_focus_Ressource_to_process)```## BeispielimplementierungEine Beispielimplementierung kann hier eingesehen werden:&lt;https://github.com/gematik/api-app-transport-framework/tree/main/src/poc&gt;## LizenzDieses Projekt steht unter der MIT-Lizenz - siehe die LICENSE-Datei für Details.</longdescription>
</pkgmetadata>