<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># imjoy_jupyterlab_extension[![Github Actions Status](https://github.com/imjoy-team/imjoy-jupyterlab-extension.git/workflows/Build/badge.svg)](https://github.com/imjoy-team/imjoy-jupyterlab-extension.git/actions/workflows/build.yml)[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/imjoy-team/imjoy-jupyterlab-extension.git/main?urlpath=lab)Run ImJoy plugins in JupyterLab![screenshot of the imjoy jupyterlab extension](docs/Screenshot 2023-11-14 at 11.14.19.png)## Requirements- JupyterLab &gt;= 4.0.0## InstallTo install the extension, execute:```bashpip install imjoy_jupyterlab_extension```## UninstallTo remove the extension, execute:```bashpip uninstall imjoy_jupyterlab_extension```## Contributing### Development installNote: You will need NodeJS to build the extension package.The `jlpm` command is JupyterLab's pinned version of[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use`yarn` or `npm` in lieu of `jlpm` below.```bash# Clone the repo to your local environment# Change directory to the imjoy_jupyterlab_extension directory# Install package in development modepip install -e &quot;.&quot;# Link your development version of the extension with JupyterLabjupyter labextension develop . --overwrite```You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.```bash# Run JupyterLab in another terminaljupyter lab```With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).By default, the `jlpm build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:```bashnvm use 16npm i -d @types/node # required to solve https://github.com/microsoft/TypeScript/issues/51567jupyter lab build --minimize=False```### Development uninstall```bashpip uninstall imjoy_jupyterlab_extension```In development mode, you will also need to remove the symlink created by `jupyter labextension develop`command. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`folder is located. Then you can remove the symlink named `imjoy-jupyterlab-extension` within that folder.### Packaging the extensionSee [RELEASE](RELEASE.md)## Testing the extensionStart jupyter lab:```bashjupyter lab```Open a notebook in jupyterlab, make sure the ImJoy icon is in the toolbar and run the following code in a notebook cell:```pythonfrom imjoy_rpc import apiclass ImJoyPlugin():    async def setup(self):        pass    async def run(self, ctx):        viewer = await api.createWindow(src=&quot;https://kaibu.org/#/app&quot;)        await viewer.view_image(&quot;https://images.proteinatlas.org/61448/1319_C10_2_blue_red_green.jpg&quot;)api.export(ImJoyPlugin())```</longdescription>
</pkgmetadata>