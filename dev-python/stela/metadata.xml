<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;   &lt;img src=&quot;docs/images/stela.png&quot; alt=&quot;Stela&quot; /&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;em&gt;Easily manage your application settings and secrets&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypi.org/project/stela/&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/stela&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/megalus/stela/actions&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Build&quot; src=&quot;https://github.com/megalus/stela/workflows/tests/badge.svg&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://www.python.org&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/stela&quot;/&gt;&lt;/a&gt;&lt;/p&gt;## Welcome to Stela[Stela](https://en.wikipedia.org/wiki/Stele) were the &quot;informationfiles&quot; of ancient times. This library aims to simplify your projectconfigurations, proposing an opinionated way to manage your projectusing dotenv files, or using any source you need.### Install```shell$ pip install stela```---### Documentation* Docs: https://megalus.github.io/stela/---### Key features:1. _**Learn once, use everywhere**_. Stela aims to be easily used in any Python project or Framework.2. _**Separate settings from secrets from environments**_. Instead of using a single dotenv file to store all your settings,   we use multiple dotenv files, one for each environment. This way, you can split secrets from settings, and you can   have different values for the same setting in different environments.3. _**Easy to implement**_. Use the command `stela init` to initialize your project and configure `.env` and `.gitignore`   files.4. _**Easy to use**_. To access you configuration just include `from stela import env` in your code. Simple as that.5. _**One Interface, Any Source**_. You're not limited to dotenv files. Create your custom logic to import data from anysource you need.### Quick StartRun Stela initialization command. This command will create `.env`, `.env.local` and `.gitignore` files.```bash$ stela init --default``````dotenv# Add this to .envAPI_URL=&quot;http://localhost:8000&quot;DB_URL=&quot;db://user:password@db:0000/name&quot;``````python# my_script.pyfrom stela import envAPI_URL = env.API_URL  # http://localhost:8000DATABASE_URL_CONNECTION = env.DB_URL  # db://user:password@db:0000/name``````dotenv# Add to .env.localDB_URL=&quot;db://real_user:real_password@real_db:0000/name&quot;``````python# my_script.pyfrom stela import envAPI_URL = env.API_URL  # http://localhost:8000DATABASE_URL_CONNECTION = env.DB_URL  # db://real_user:real_password@real_db:0000/name```That's it! Just check our [Documentation](https://megalus.github.io/stela/) for tons of customization and advice.### Migrating from version 4.x* Stela 5.0 is a major rework. The old format still works, but we strongly advise updating your code as soon as possible.Please check [this document](https://megalus.github.io/stela/update) to understand how to update your existing project.* Drop support to Python 3.8### Not working?Don't panic. Get a towel and, please, open an[issue](https://github.com/megalus/stela/issues).</longdescription>
</pkgmetadata>