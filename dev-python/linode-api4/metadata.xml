<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>linode_api4===========The official python library for the `Linode API v4`_ in python... _Linode API v4: https://developers.linode.com/api/v4/.. image:: https://img.shields.io/github/actions/workflow/status/linode/linode_api4-python/main.yml?label=tests    :target: https://img.shields.io/github/actions/workflow/status/linode/linode_api4-python/main.yml?label=tests.. image:: https://badge.fury.io/py/linode-api4.svg   :target: https://badge.fury.io/py/linode-api4.. image:: https://readthedocs.org/projects/linode-api4/badge/?version=latest   :target: https://linode-api4.readthedocs.io/en/latest/?badge=latest   :alt: Documentation StatusInstallation------------::    pip install linode_api4Building from Source--------------------To build and install this package:- Clone this repository- ``python3 -m pip install .``Usage=====Quick Start-----------In order to authenticate with the Linode API, you will first need to create a`Linode Personal Access Token`_ with your desired account permissions.The following code sample can help you quickly get started using this package... code-block:: python    from linode_api4 import LinodeClient, Instance    # Create a Linode API client    client = LinodeClient(&quot;MY_PERSONAL_ACCESS_TOKEN&quot;)    # Create a new Linode    new_linode, root_pass = client.linode.instance_create(        ltype=&quot;g6-nanode-1&quot;,        region=&quot;us-southeast&quot;,        image=&quot;linode/ubuntu22.04&quot;,        label=&quot;my-ubuntu-linode&quot;    )    # Print info about the Linode    print(&quot;Linode IP:&quot;, new_linode.ipv4[0])    print(&quot;Linode Root Password:&quot;, root_pass)    # List all Linodes on the account    my_linodes = client.linode.instances()    # Print the Label of every Linode on the account    print(&quot;All Instances:&quot;)    for instance in my_linodes:        print(instance.label)    # List Linodes in the us-southeast region    specific_linodes = client.linode.instances(        Instance.region == &quot;us-southeast&quot;    )    # Print the label of each Linode in us-southeast    print(&quot;Instances in us-southeast:&quot;)    for instance in specific_linodes:        print(instance.label)    # Delete the new instance    new_linode.delete()Check out the `Getting Started guide`_ for more details on getting startedwith this library, or read `the docs`_ for more extensive documentation... _Linode Personal Access Token: https://www.linode.com/docs/products/tools/api/guides/manage-api-tokens/.. _Getting Started guide: https://linode-api4.readthedocs.io/en/latest/guides/getting_started.html.. _the docs: https://linode-api4.readthedocs.io/en/latest/index.htmlExamples--------See the `Install on a Linode`_ example project for a simple use case demonstratingmany of the features of this library... _Install on a Linode: https://github.com/linode/linode_api4-python/tree/master/examples/install-on-linodeContributing============Tests-----Tests live in the ``test`` directory.  When invoking tests, make sure you arein the root directory of this project.  To run the full suite across allsupported python versions, use tox_:.. code-block:: shell   toxRunning tox also runs pylint and coverage reports.The test suite uses fixtures stored as JSON in ``test/fixtures``.  These filescontain sanitized JSON responses from the API - the file name is the URL calledto produce the response, replacing any slashes with underscores.Test classes should extend ``test.base.ClientBaseCase``.  This provides themwith ``self.client``, a ``LinodeClient`` object that is set up to work withtests.  Importantly, any GET request made by this object will be mocked toretrieve data from the test fixtures.  This includes lazy-loaded objects usingthis client (and by extension related models).When testing against requests other than GET requests, ``self.mock_post`` (andequivalent methods for other HTTP verbs) can be used in a ``with`` block tomock out the intended request type.  These functions accept the relative pathfrom the api base url that should be returned, for example::   # this should return the result of GET /linode/instances/123   with self.mock_post('/linode/instances/123'):     linode = self.client.linode.instance_create('g6-standard-2', 'us-east')     self.assertEqual(linode.id, 123) # passes.. _tox: http://tox.readthedocs.ioIntegration Tests-----------------Integration tests live in the ``test/integration`` directory.Pre-requisite^^^^^^^^^^^^^^^^^Export Linode API token as `LINODE_CLI_TOKEN` before running integration tests::    export LINODE_TOKEN = $(your_token)Running the tests^^^^^^^^^^^^^^^^^Run the tests locally using the make command. Run the entire test suite using command below::    make testintTo run a specific package, use environment variable `INTEGRATION_TEST_PATH` with `testint` command::    make INTEGRATION_TEST_PATH=&quot;linode_client&quot; testintTo run a specific model test suite, set the environment variable `TEST_MODEL` using file name in `integration/models`::    make TEST_MODEL=&quot;test_account.py&quot; testintLastly to run a specific test case use environment variable `TEST_CASE` with `testint` command::    make TEST_CASE=test_get_domain_record testintDocumentation-------------This library is documented with Sphinx_.  Docs live in the ``docs`` directory.The easiest way to build the docs is to run ``sphinx-autobuild`` in thatfolder::    sphinx-autobuild docs docs/buildAfter running this command, ``sphinx-autobuild`` will host a local web serverwith the rendered documentation.Classes and functions inside the library should be annotated with sphinx-compliantdocstrings which will be used to automatically generate documentation for thelibrary.  When contributing, be sure to update documentation or include newdocstrings where applicable to keep the library's documentation up to dateand useful.**Missing or inaccurate documentation is a bug**.  If you notice that thedocumentation for this library is out of date or unclear, please`open an issue`_ to make us aware of the problem... _Sphinx: http://www.sphinx-doc.org/en/master/index.html.. _open an issue: https://github.com/linode/linode_api4-python/issues/newContributing------------Please follow the `Contributing Guidelines`_ when making a contribution... _Contributing Guidelines: https://github.com/linode/linode_api4-python/blob/master/CONTRIBUTING.md</longdescription>
</pkgmetadata>