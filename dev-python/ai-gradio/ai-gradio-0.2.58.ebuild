# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A Python package for creating Gradio applications with AI models"

HOMEPAGE="https://github.com/AK391/ai-gradio"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all anthropic browser cohere crewai cua deepseek dev fireworks gemini groq huggingface hyperbolic jupyter kokoro langchain lumaai minimax mistral novita nvidia ollama openai openrouter perplexity qwen replicate sambanova smolagents swarms together transformers xai"
DEPENDENCIES="dev-python/accelerate[${PYTHON_USEDEP}]
	dev-python/bitsandbytes[${PYTHON_USEDEP}]
	dev-python/gradio-webrtc[${PYTHON_USEDEP}]
	dev-python/gradio-webrtc[${PYTHON_USEDEP}]
	dev-python/gradio[${PYTHON_USEDEP}]
	dev-python/librosa[${PYTHON_USEDEP}]
	dev-python/modelscope-studio[${PYTHON_USEDEP}]
	dev-python/numba[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/opencv-python[${PYTHON_USEDEP}]
	dev-python/pillow[${PYTHON_USEDEP}]
	dev-python/pydub[${PYTHON_USEDEP}]
	dev-python/python-dotenv[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/twilio[${PYTHON_USEDEP}]
	dev-python/websockets[${PYTHON_USEDEP}]
	all? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	all? ( dev-python/browser-use[${PYTHON_USEDEP}] )
	all? ( dev-python/cohere[${PYTHON_USEDEP}] )
	all? ( dev-python/crewai-tools[${PYTHON_USEDEP}] )
	all? ( dev-python/crewai[${PYTHON_USEDEP}] )
	all? ( dev-python/cua-agent[${PYTHON_USEDEP}] )
	all? ( dev-python/cua-computer[${PYTHON_USEDEP}] )
	all? ( dev-python/google-generativeai[${PYTHON_USEDEP}] )
	all? ( dev-python/groq[${PYTHON_USEDEP}] )
	all? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	all? ( dev-python/hyperbolic[${PYTHON_USEDEP}] )
	all? ( dev-python/kokoro-onnx[${PYTHON_USEDEP}] )
	all? ( dev-python/langchain-community[${PYTHON_USEDEP}] )
	all? ( dev-python/langchain-core[${PYTHON_USEDEP}] )
	all? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	all? ( dev-python/langchain[${PYTHON_USEDEP}] )
	all? ( dev-python/lumaai[${PYTHON_USEDEP}] )
	all? ( dev-python/openai[${PYTHON_USEDEP}] )
	all? ( <dev-python/pydantic-3.0.0[${PYTHON_USEDEP}] )
	all? ( >=dev-python/requests-2.31.0[${PYTHON_USEDEP}] )
	all? ( dev-python/sambanova[${PYTHON_USEDEP}] )
	all? ( >=dev-python/soundfile-0.12.0[${PYTHON_USEDEP}] )
	all? ( dev-python/swarm-models[${PYTHON_USEDEP}] )
	all? ( dev-python/swarms-memory[${PYTHON_USEDEP}] )
	all? ( dev-python/swarms[${PYTHON_USEDEP}] )
	all? ( dev-python/tavily-python[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	browser? ( dev-python/browser-use[${PYTHON_USEDEP}] )
	browser? ( dev-python/playwright[${PYTHON_USEDEP}] )
	cohere? ( dev-python/cohere[${PYTHON_USEDEP}] )
	crewai? ( dev-python/crewai-tools[${PYTHON_USEDEP}] )
	crewai? ( dev-python/crewai[${PYTHON_USEDEP}] )
	crewai? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	crewai? ( dev-python/langchain[${PYTHON_USEDEP}] )
	cua? ( dev-python/cua-agent[${PYTHON_USEDEP}] )
	cua? ( dev-python/cua-computer[${PYTHON_USEDEP}] )
	deepseek? ( dev-python/openai[${PYTHON_USEDEP}] )
	dev? ( dev-python/black[${PYTHON_USEDEP}] )
	dev? ( dev-python/flake8[${PYTHON_USEDEP}] )
	dev? ( dev-python/isort[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	fireworks? ( dev-python/openai[${PYTHON_USEDEP}] )
	gemini? ( dev-python/google-genai[${PYTHON_USEDEP}] )
	gemini? ( dev-python/google-generativeai[${PYTHON_USEDEP}] )
	groq? ( dev-python/openai[${PYTHON_USEDEP}] )
	huggingface? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	hyperbolic? ( dev-python/openai[${PYTHON_USEDEP}] )
	jupyter? ( dev-python/e2b-code-interpreter[${PYTHON_USEDEP}] )
	jupyter? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	jupyter? ( >=dev-python/nbconvert-7.16.0[${PYTHON_USEDEP}] )
	jupyter? ( >=dev-python/nbformat-5.9.0[${PYTHON_USEDEP}] )
	kokoro? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	kokoro? ( dev-python/kokoro-onnx[${PYTHON_USEDEP}] )
	kokoro? ( >=dev-python/soundfile-0.13.0[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain-community[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain-core[${PYTHON_USEDEP}] )
	langchain? ( dev-python/langchain-openai[${PYTHON_USEDEP}] )
	langchain? ( dev-python/tavily-python[${PYTHON_USEDEP}] )
	lumaai? ( dev-python/lumaai[${PYTHON_USEDEP}] )
	minimax? ( >=dev-python/requests-2.31.0[${PYTHON_USEDEP}] )
	mistral? ( dev-python/mistralai[${PYTHON_USEDEP}] )
	novita? ( >=dev-python/requests-2.31.0[${PYTHON_USEDEP}] )
	nvidia? ( dev-python/openai[${PYTHON_USEDEP}] )
	ollama? ( dev-python/ollama[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	openrouter? ( dev-python/openai[${PYTHON_USEDEP}] )
	perplexity? ( dev-python/openai[${PYTHON_USEDEP}] )
	qwen? ( dev-python/openai[${PYTHON_USEDEP}] )
	replicate? ( dev-python/replicate[${PYTHON_USEDEP}] )
	sambanova? ( dev-python/openai[${PYTHON_USEDEP}] )
	smolagents? ( dev-python/smolagents[${PYTHON_USEDEP}] )
	swarms? ( dev-python/langchain-community[${PYTHON_USEDEP}] )
	swarms? ( dev-python/langchain[${PYTHON_USEDEP}] )
	swarms? ( <dev-python/pydantic-3.0.0[${PYTHON_USEDEP}] )
	swarms? ( dev-python/swarm-models[${PYTHON_USEDEP}] )
	swarms? ( dev-python/swarms-memory[${PYTHON_USEDEP}] )
	swarms? ( dev-python/swarms[${PYTHON_USEDEP}] )
	together? ( dev-python/openai[${PYTHON_USEDEP}] )
	transformers? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	transformers? ( dev-python/bitsandbytes[${PYTHON_USEDEP}] )
	transformers? ( dev-python/einops[${PYTHON_USEDEP}] )
	transformers? ( >=dev-python/pillow-10.4.0[${PYTHON_USEDEP}] )
	transformers? ( dev-python/pyvips-binary[${PYTHON_USEDEP}] )
	transformers? ( dev-python/pyvips[${PYTHON_USEDEP}] )
	transformers? ( dev-python/torch[${PYTHON_USEDEP}] )
	transformers? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	transformers? ( dev-python/transformers[${PYTHON_USEDEP}] )
	xai? ( dev-python/openai[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
