<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========================== GraphQL Utils for Python==========================.. image:: https://circleci.com/gh/Mergifyio/graphql-utils.svg?style=svg   :target: https://circleci.com/gh/Mergifyio/graphql-utils.. image:: https://img.shields.io/endpoint.svg?url=https://api.mergify.com/v1/badges/Mergifyio/graphql-utils&amp;style=flat   :target: https://mergify.com   :alt: Mergify StatusThe ``graphql-utils`` Python package is a collection of utilities function forinteracting with GraphQL libraries. It is meant to be library agnostic so itshould work with whatever library or protocol you want.Usage=====Multi-requests--------------The multi-requests module allows you to send a request multiple times withdifferent parameter. It also supports pagination, making sure that you'll getall the results for all the requests you sent.Example::  import requests  from graphql_utils import multi  def requests_api(query):      return requests.post(&quot;https://myapi.com/graphql&quot;, json=query)  userlist = (      {&quot;login&quot;: &quot;jd&quot;},      {&quot;login&quot;: &quot;sileht&quot;},      {&quot;login&quot;: &quot;foo&quot;},      {&quot;login&quot;: &quot;bar&quot;},  )  result_iterator = multi.multi_query(&quot;&quot;&quot;      user(login: &quot;{login}&quot;) {{        pets(first: 100{after}) {{          nodes {{            name          }}          pageInfo {{            hasNextPage            endCursor          }}        }}      }}&quot;&quot;&quot;,      iterable=userlist,      pageinfo_path=(&quot;pets&quot;, &quot;pageInfo&quot;),      send_fn=requests_api,  )This will send one GraphQL requests with 4 queries (one for each user from``userlist``). As `pageinfo_path` was specified, if any of the query does notreturn all information in one request, a new query using the ``endCursor`` willbe automatically sent to get the next results.</longdescription>
</pkgmetadata>