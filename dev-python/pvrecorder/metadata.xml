<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PvRecorder Binding for Python## PvRecorderPvRecorder is an easy-to-use, cross-platform audio recorder designed for real-time speech audio processing. It allows developers access to an audio device's input stream, broken up into data frames of a given size.## Compatibility- Python 3.5+- Runs on Linux (x86_64), macOS (x86_64 and arm64), Windows (x86_64), Raspberry Pi (all variants), NVIDIA Jetson (Nano), and BeagleBone.## Installationpip3 install pvrecorder## UsageInitialize and begin recording:```pythonfrom pvrecorder import PvRecorderrecorder = PvRecorder(frame_length=512)recorder.start()```(or)Use `get_available_devices()` to get a list of available devices and then initialize the instance based on the index of a device:```pythonfrom pvrecorder import PvRecorderdevices = PvRecorder.get_available_devices()recorder = PvRecorder(frame_length=512, device_index=0)recorder.start()```Read frames of audio:```pythonwhile recorder.is_recording:    frame = recorder.read()    # process audio frame```To stop recording, call `stop()` on the instance:```pythonrecorder.stop()```Once you are done, free the resources acquired by PvRecorder. You do not have to call `stop()` before `delete()`:```pythonrecorder.delete()```## Demos[pvrecorderdemo](https://pypi.org/project/pvrecorderdemo/) provides command-line utilities for recording audio to a file.</longdescription>
</pkgmetadata>