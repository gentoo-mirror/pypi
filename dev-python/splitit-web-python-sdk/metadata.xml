<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># splitit-web-python-sdk&lt;a id=&quot;splitit-web-python-sdk&quot;&gt;&lt;/a&gt;Splitit's Web API[![PyPI](https://img.shields.io/badge/PyPI-v2.6.1-blue)](https://pypi.org/project/splitit-web-python-sdk/2.6.1)[![README.md](https://img.shields.io/badge/README-Click%20Here-green)](https://github.com/konfig-dev/splitit-web-sdks/tree/main/python#readme)## Table of Contents&lt;a id=&quot;table-of-contents&quot;&gt;&lt;/a&gt;&lt;!-- toc --&gt;- [Requirements](#requirements)- [Installing](#installing)- [Getting Started](#getting-started)- [Async](#async)- [Reference](#reference)  * [`splitit.installment_plan.cancel`](#splititinstallment_plancancel)  * [`splitit.installment_plan.check_eligibility`](#splititinstallment_plancheck_eligibility)  * [`splitit.installment_plan.get`](#splititinstallment_planget)  * [`splitit.installment_plan.post`](#splititinstallment_planpost)  * [`splitit.installment_plan.post2`](#splititinstallment_planpost2)  * [`splitit.installment_plan.refund`](#splititinstallment_planrefund)  * [`splitit.installment_plan.search`](#splititinstallment_plansearch)  * [`splitit.installment_plan.update_order`](#splititinstallment_planupdate_order)  * [`splitit.installment_plan.update_order2`](#splititinstallment_planupdate_order2)  * [`splitit.installment_plan.verify_authorization`](#splititinstallment_planverify_authorization)&lt;!-- tocstop --&gt;## Requirements&lt;a id=&quot;requirements&quot;&gt;&lt;/a&gt;Python &gt;=3.7## Installing&lt;a id=&quot;installing&quot;&gt;&lt;/a&gt;```shpip install splitit-web-python-sdk==2.6.1```## Getting Started&lt;a id=&quot;getting-started&quot;&gt;&lt;/a&gt;```pythonfrom pprint import pprintfrom splitit_client import Splitit, ApiExceptionsplitit = Splitit(    client_id=&quot;YOUR_CLIENT_ID&quot;,    client_secret=&quot;YOUR_CLIENT_SECRET&quot;,)try:    cancel_response = splitit.installment_plan.cancel(        installment_plan_number=&quot;installmentPlanNumber_example&quot;,        x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,        x_splitit_touch_point=&quot;&quot;,    )    pprint(cancel_response.body)    pprint(cancel_response.body[&quot;installment_plan_number&quot;])    pprint(cancel_response.headers)    pprint(cancel_response.status)    pprint(cancel_response.round_trip_time)except ApiException as e:    print(&quot;Exception when calling InstallmentPlanApi.cancel: %s\n&quot; % e)    pprint(e.body)    if e.status == 401:        pprint(e.body[&quot;trace_id&quot;])        pprint(e.body[&quot;error&quot;])    if e.status == 500:        pprint(e.body[&quot;trace_id&quot;])        pprint(e.body[&quot;error&quot;])    if e.status == 403:        pprint(e.body[&quot;trace_id&quot;])        pprint(e.body[&quot;error&quot;])    if e.status == 404:        pprint(e.body[&quot;trace_id&quot;])        pprint(e.body[&quot;error&quot;])    pprint(e.headers)    pprint(e.status)    pprint(e.reason)    pprint(e.round_trip_time)```## Async&lt;a id=&quot;async&quot;&gt;&lt;/a&gt;`async` support is available by prepending `a` to any method.```pythonimport asynciofrom pprint import pprintfrom splitit_client import Splitit, ApiExceptionsplitit = Splitit(    client_id=&quot;YOUR_CLIENT_ID&quot;,    client_secret=&quot;YOUR_CLIENT_SECRET&quot;,)async def main():    try:        cancel_response = await splitit.installment_plan.acancel(            installment_plan_number=&quot;installmentPlanNumber_example&quot;,            x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,            x_splitit_touch_point=&quot;&quot;,        )        pprint(cancel_response.body)        pprint(cancel_response.body[&quot;installment_plan_number&quot;])        pprint(cancel_response.headers)        pprint(cancel_response.status)        pprint(cancel_response.round_trip_time)    except ApiException as e:        print(&quot;Exception when calling InstallmentPlanApi.cancel: %s\n&quot; % e)        pprint(e.body)        if e.status == 401:            pprint(e.body[&quot;trace_id&quot;])            pprint(e.body[&quot;error&quot;])        if e.status == 500:            pprint(e.body[&quot;trace_id&quot;])            pprint(e.body[&quot;error&quot;])        if e.status == 403:            pprint(e.body[&quot;trace_id&quot;])            pprint(e.body[&quot;error&quot;])        if e.status == 404:            pprint(e.body[&quot;trace_id&quot;])            pprint(e.body[&quot;error&quot;])        pprint(e.headers)        pprint(e.status)        pprint(e.reason)        pprint(e.round_trip_time)asyncio.run(main())```## Reference&lt;a id=&quot;reference&quot;&gt;&lt;/a&gt;### `splitit.installment_plan.cancel`&lt;a id=&quot;splititinstallment_plancancel&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythoncancel_response = splitit.installment_plan.cancel(    installment_plan_number=&quot;installmentPlanNumber_example&quot;,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### installment_plan_number: `str`&lt;a id=&quot;installment_plan_number-str&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanCancelResponse`](./splitit_client/type/installment_plan_cancel_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/{installmentPlanNumber}/cancel` `post`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.check_eligibility`&lt;a id=&quot;splititinstallment_plancheck_eligibility&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythoncheck_eligibility_response = splitit.installment_plan.check_eligibility(    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    plan_data={        &quot;total_amount&quot;: 3.14,        &quot;number_of_installments&quot;: 1,        &quot;purchase_method&quot;: &quot;InStore&quot;,    },    card_details={        &quot;card_brand&quot;: &quot;Mastercard&quot;,        &quot;card_type&quot;: &quot;Credit&quot;,    },    billing_address={},)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### plan_data: [`PlanData`](./splitit_client/type/plan_data.py)&lt;a id=&quot;plan_data-plandatasplitit_clienttypeplan_datapy&quot;&gt;&lt;/a&gt;##### card_details: [`CardData`](./splitit_client/type/card_data.py)&lt;a id=&quot;card_details-carddatasplitit_clienttypecard_datapy&quot;&gt;&lt;/a&gt;##### billing_address: [`AddressData`](./splitit_client/type/address_data.py)&lt;a id=&quot;billing_address-addressdatasplitit_clienttypeaddress_datapy&quot;&gt;&lt;/a&gt;#### ⚙️ Request Body&lt;a id=&quot;⚙️-request-body&quot;&gt;&lt;/a&gt;[`CheckInstallmentsEligibilityRequest`](./splitit_client/type/check_installments_eligibility_request.py)#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentsEligibilityResponse`](./splitit_client/type/installments_eligibility_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/check-eligibility` `post`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.get`&lt;a id=&quot;splititinstallment_planget&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonget_response = splitit.installment_plan.get(    installment_plan_number=&quot;installmentPlanNumber_example&quot;,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### installment_plan_number: `str`&lt;a id=&quot;installment_plan_number-str&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanGetResponse`](./splitit_client/type/installment_plan_get_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/{installmentPlanNumber}` `get`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.post`&lt;a id=&quot;splititinstallment_planpost&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonpost_response = splitit.installment_plan.post(    auto_capture=True,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    attempt3d_secure=True,    shopper={},    plan_data={        &quot;total_amount&quot;: 3.14,        &quot;purchase_method&quot;: &quot;InStore&quot;,    },    billing_address={},    redirect_urls={},    ux_settings={},    events_endpoints={},    processing_data={},    x_splitit_test_mode=&quot;None&quot;,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### auto_capture: `bool`&lt;a id=&quot;auto_capture-bool&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### attempt3d_secure: `bool`&lt;a id=&quot;attempt3d_secure-bool&quot;&gt;&lt;/a&gt;##### shopper: [`ShopperData`](./splitit_client/type/shopper_data.py)&lt;a id=&quot;shopper-shopperdatasplitit_clienttypeshopper_datapy&quot;&gt;&lt;/a&gt;##### plan_data: [`PlanDataModel`](./splitit_client/type/plan_data_model.py)&lt;a id=&quot;plan_data-plandatamodelsplitit_clienttypeplan_data_modelpy&quot;&gt;&lt;/a&gt;##### billing_address: [`AddressDataModel`](./splitit_client/type/address_data_model.py)&lt;a id=&quot;billing_address-addressdatamodelsplitit_clienttypeaddress_data_modelpy&quot;&gt;&lt;/a&gt;##### redirect_urls: [`InitiateRedirectionEndpointsModel`](./splitit_client/type/initiate_redirection_endpoints_model.py)&lt;a id=&quot;redirect_urls-initiateredirectionendpointsmodelsplitit_clienttypeinitiate_redirection_endpoints_modelpy&quot;&gt;&lt;/a&gt;##### ux_settings: [`UxSettingsModel`](./splitit_client/type/ux_settings_model.py)&lt;a id=&quot;ux_settings-uxsettingsmodelsplitit_clienttypeux_settings_modelpy&quot;&gt;&lt;/a&gt;##### events_endpoints: [`EventsEndpointsModel`](./splitit_client/type/events_endpoints_model.py)&lt;a id=&quot;events_endpoints-eventsendpointsmodelsplitit_clienttypeevents_endpoints_modelpy&quot;&gt;&lt;/a&gt;##### processing_data: [`ProcessingData`](./splitit_client/type/processing_data.py)&lt;a id=&quot;processing_data-processingdatasplitit_clienttypeprocessing_datapy&quot;&gt;&lt;/a&gt;##### x_splitit_test_mode: `str`&lt;a id=&quot;x_splitit_test_mode-str&quot;&gt;&lt;/a&gt;#### ⚙️ Request Body&lt;a id=&quot;⚙️-request-body&quot;&gt;&lt;/a&gt;[`InstallmentPlanInitiateRequest`](./splitit_client/type/installment_plan_initiate_request.py)#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InitiatePlanResponse`](./splitit_client/type/initiate_plan_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/initiate` `post`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.post2`&lt;a id=&quot;splititinstallment_planpost2&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonpost2_response = splitit.installment_plan.post2(    auto_capture=True,    terms_and_conditions_accepted=True,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    attempt3d_secure=True,    shopper={},    plan_data={        &quot;total_amount&quot;: 3.14,        &quot;purchase_method&quot;: &quot;InStore&quot;,    },    billing_address={},    payment_method={        &quot;type&quot;: &quot;Card&quot;,    },    redirect_urls={},    processing_data={},    events_endpoints={},    x_splitit_test_mode=&quot;None&quot;,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### auto_capture: `bool`&lt;a id=&quot;auto_capture-bool&quot;&gt;&lt;/a&gt;##### terms_and_conditions_accepted: `bool`&lt;a id=&quot;terms_and_conditions_accepted-bool&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### attempt3d_secure: `bool`&lt;a id=&quot;attempt3d_secure-bool&quot;&gt;&lt;/a&gt;##### shopper: [`ShopperData`](./splitit_client/type/shopper_data.py)&lt;a id=&quot;shopper-shopperdatasplitit_clienttypeshopper_datapy&quot;&gt;&lt;/a&gt;##### plan_data: [`PlanDataModel`](./splitit_client/type/plan_data_model.py)&lt;a id=&quot;plan_data-plandatamodelsplitit_clienttypeplan_data_modelpy&quot;&gt;&lt;/a&gt;##### billing_address: [`AddressDataModel`](./splitit_client/type/address_data_model.py)&lt;a id=&quot;billing_address-addressdatamodelsplitit_clienttypeaddress_data_modelpy&quot;&gt;&lt;/a&gt;##### payment_method: [`PaymentMethodModel`](./splitit_client/type/payment_method_model.py)&lt;a id=&quot;payment_method-paymentmethodmodelsplitit_clienttypepayment_method_modelpy&quot;&gt;&lt;/a&gt;##### redirect_urls: [`RedirectionEndpointsModel`](./splitit_client/type/redirection_endpoints_model.py)&lt;a id=&quot;redirect_urls-redirectionendpointsmodelsplitit_clienttyperedirection_endpoints_modelpy&quot;&gt;&lt;/a&gt;##### processing_data: [`ProcessingData`](./splitit_client/type/processing_data.py)&lt;a id=&quot;processing_data-processingdatasplitit_clienttypeprocessing_datapy&quot;&gt;&lt;/a&gt;##### events_endpoints: [`EventsEndpointsModel`](./splitit_client/type/events_endpoints_model.py)&lt;a id=&quot;events_endpoints-eventsendpointsmodelsplitit_clienttypeevents_endpoints_modelpy&quot;&gt;&lt;/a&gt;##### x_splitit_test_mode: `str`&lt;a id=&quot;x_splitit_test_mode-str&quot;&gt;&lt;/a&gt;#### ⚙️ Request Body&lt;a id=&quot;⚙️-request-body&quot;&gt;&lt;/a&gt;[`InstallmentPlanCreateRequest`](./splitit_client/type/installment_plan_create_request.py)#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanCreateResponse`](./splitit_client/type/installment_plan_create_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans` `post`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.refund`&lt;a id=&quot;splititinstallment_planrefund&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonrefund_response = splitit.installment_plan.refund(    amount=3.14,    installment_plan_number=&quot;installmentPlanNumber_example&quot;,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    refund_strategy=&quot;FutureInstallmentsFirst&quot;,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### amount: `Union[int, float]`&lt;a id=&quot;amount-unionint-float&quot;&gt;&lt;/a&gt;##### installment_plan_number: `str`&lt;a id=&quot;installment_plan_number-str&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### refund_strategy: [`RefundStrategy`](./splitit_client/type/refund_strategy.py)&lt;a id=&quot;refund_strategy-refundstrategysplitit_clienttyperefund_strategypy&quot;&gt;&lt;/a&gt;#### ⚙️ Request Body&lt;a id=&quot;⚙️-request-body&quot;&gt;&lt;/a&gt;[`InstallmentPlanRefundRequest`](./splitit_client/type/installment_plan_refund_request.py)#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanRefundResponse`](./splitit_client/type/installment_plan_refund_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/{installmentPlanNumber}/refund` `post`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.search`&lt;a id=&quot;splititinstallment_plansearch&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonsearch_response = splitit.installment_plan.search(    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    installment_plan_number=&quot;string_example&quot;,    ref_order_number=&quot;string_example&quot;,    extended_params={        &quot;key&quot;: &quot;string_example&quot;,    },)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### installment_plan_number: `str`&lt;a id=&quot;installment_plan_number-str&quot;&gt;&lt;/a&gt;##### ref_order_number: `str`&lt;a id=&quot;ref_order_number-str&quot;&gt;&lt;/a&gt;##### extended_params: [`Dict[str, str]`](./splitit_client/type/.py)&lt;a id=&quot;extended_params-dictstr-strsplitit_clienttypepy&quot;&gt;&lt;/a&gt;#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanSearchResponse`](./splitit_client/type/installment_plan_search_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/search` `get`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.update_order`&lt;a id=&quot;splititinstallment_planupdate_order&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonupdate_order_response = splitit.installment_plan.update_order(    installment_plan_number=&quot;installmentPlanNumber_example&quot;,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    tracking_number=&quot;string_example&quot;,    ref_order_number=&quot;string_example&quot;,    shipping_status=&quot;Pending&quot;,    capture=True,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### installment_plan_number: `str`&lt;a id=&quot;installment_plan_number-str&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### tracking_number: `str`&lt;a id=&quot;tracking_number-str&quot;&gt;&lt;/a&gt;##### ref_order_number: `str`&lt;a id=&quot;ref_order_number-str&quot;&gt;&lt;/a&gt;##### shipping_status: [`ShippingStatus`](./splitit_client/type/shipping_status.py)&lt;a id=&quot;shipping_status-shippingstatussplitit_clienttypeshipping_statuspy&quot;&gt;&lt;/a&gt;##### capture: `bool`&lt;a id=&quot;capture-bool&quot;&gt;&lt;/a&gt;#### ⚙️ Request Body&lt;a id=&quot;⚙️-request-body&quot;&gt;&lt;/a&gt;[`UpdateOrderRequest`](./splitit_client/type/update_order_request.py)#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanUpdateResponse`](./splitit_client/type/installment_plan_update_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/{installmentPlanNumber}/updateorder` `put`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.update_order2`&lt;a id=&quot;splititinstallment_planupdate_order2&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonupdate_order2_response = splitit.installment_plan.update_order2(    body=None,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,    ref_order_number=&quot;string_example&quot;,    tracking_number=&quot;string_example&quot;,    capture=True,    shipping_status=&quot;Shipped&quot;,    identifier={},)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint##### ref_order_number: `str`&lt;a id=&quot;ref_order_number-str&quot;&gt;&lt;/a&gt;##### tracking_number: `str`&lt;a id=&quot;tracking_number-str&quot;&gt;&lt;/a&gt;##### capture: `bool`&lt;a id=&quot;capture-bool&quot;&gt;&lt;/a&gt;##### shipping_status: [`ShippingStatus2`](./splitit_client/type/shipping_status2.py)&lt;a id=&quot;shipping_status-shippingstatus2splitit_clienttypeshipping_status2py&quot;&gt;&lt;/a&gt;##### identifier: [`IdentifierContract`](./splitit_client/type/identifier_contract.py)&lt;a id=&quot;identifier-identifiercontractsplitit_clienttypeidentifier_contractpy&quot;&gt;&lt;/a&gt;#### ⚙️ Request Body&lt;a id=&quot;⚙️-request-body&quot;&gt;&lt;/a&gt;[`InstallmentPlanUpdateRequestByIdentifier`](./splitit_client/type/installment_plan_update_request_by_identifier.py)#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`InstallmentPlanUpdateResponse`](./splitit_client/type/installment_plan_update_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/updateorder` `put`[🔙 **Back to Table of Contents**](#table-of-contents)---### `splitit.installment_plan.verify_authorization`&lt;a id=&quot;splititinstallment_planverify_authorization&quot;&gt;&lt;/a&gt;#### 🛠️ Usage&lt;a id=&quot;🛠️-usage&quot;&gt;&lt;/a&gt;```pythonverify_authorization_response = splitit.installment_plan.verify_authorization(    installment_plan_number=&quot;installmentPlanNumber_example&quot;,    x_splitit_idempotency_key=&quot;X-Splitit-IdempotencyKey_example&quot;,    x_splitit_touch_point=&quot;&quot;,)```#### ⚙️ Parameters&lt;a id=&quot;⚙️-parameters&quot;&gt;&lt;/a&gt;##### installment_plan_number: `str`&lt;a id=&quot;installment_plan_number-str&quot;&gt;&lt;/a&gt;##### x_splitit_idempotency_key: `str`&lt;a id=&quot;x_splitit_idempotency_key-str&quot;&gt;&lt;/a&gt;##### x_splitit_touch_point: `str`&lt;a id=&quot;x_splitit_touch_point-str&quot;&gt;&lt;/a&gt;TouchPoint#### 🔄 Return&lt;a id=&quot;🔄-return&quot;&gt;&lt;/a&gt;[`VerifyAuthorizationResponse`](./splitit_client/type/verify_authorization_response.py)#### 🌐 Endpoint&lt;a id=&quot;🌐-endpoint&quot;&gt;&lt;/a&gt;`/api/installmentplans/{installmentPlanNumber}/verifyauthorization` `get`[🔙 **Back to Table of Contents**](#table-of-contents)---## Author&lt;a id=&quot;author&quot;&gt;&lt;/a&gt;This Python package is automatically generated by [Konfig](https://konfigthis.com)</longdescription>
</pkgmetadata>