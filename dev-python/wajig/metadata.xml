<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Wajig: Ubuntu System AdministrationWajig is a simplified, all-in-one-place, system support tool forDebian and Ubuntu.  It aims to cover every common (and some not socommon) tasks you may need to perform in managing your computer. A fewsimple examples:```console$ wajig install emacs$ wajig update$ wajig distupgrade$ wajig sysinfo```Wajig was implemented by Graham Williams. It has been supported byDirk Eddelbuettel and Tshepang Lekhonkhobe, with Tshepang maintainingand improving wajig for a few years. Contributions also come fromusers of wajig, with a special thanks to Reuben Thomas for his manysuggestions and contributions. Graham has resumed maintenance anddevelopment.Installing----------Wajig is available in the Debian and Ubuntu repositories. On Ubuntu,where sudo is set up by default```consoles$ sudo apt install wajig```It is also available on [PyPI](https://pypi.org/project/wajig/) fromwhere it can be installed with:```console$ pip3 install wajig```If sudo is not set up (see instructions below) then as root:```console# apt-get install wajig```Resources---------* [Home](https://wajig.togaware.com) of wajig.* [Support Wajig](https://togaware.com/gnulinux/) with a donation.* [GitHub](https://github.com/gjwgit/wajig) for the source code.* [Ubuntu](https://packages.ubuntu.com/wajig) for the package entry.* [PyPI](https://pypi.org/project/wajig/) for the public distribution channel.Guides------* [Read The Docs](https://wajig.readthedocs.io/en/latest/) on line.* [Togaware](https://togaware.com/linux/survivor/wajig.html) for the  GNU/Linux Survival Guide.* [LinOxide  2019](https://linoxide.com/tools/wajig-package-management-debian/) review.* [Unix Folk  2017](https://www.unixmen.com/wajig-alternative-apt-package-manager/) review.* [Source Digit  2015](https://sourcedigit.com/16708-install-wajig-alternative-to-apt-package-manager-on-linux-ubuntu-15-04/) review.* [Link Sprite  2014](https://learn.linksprite.com/pcduino/linux-applications/wajig-simplyfying-ubuntu-debian-administration/) review.The Name--------The word 'jig' has a couple of meanings, as WordNet and Webster's 1913Dictionary will confirm. It is a small machine or handy tool used toguide other tools. It is also a quick dance, generally an old rusticdance involving kicking and leaping, as well as a light, humorouspiece of writing, especially in rhyme, a farce in verse, or a ballad.&quot;A jig shall be clapped at, and every rhyme praised and applauded.&quot;The 'wa' in 'wajig' is Japanese, indicating 'harmony' and 'team spiritand unity'.History-------Development of wajig has been sponsored sponsored and supported byTogaware Pty Ltd, supporting open source software since the 1980's.Written in Python, wajig uses traditional Debian/Ubuntu administrationand user tools including apt-get, aptitude, dpkg, apt-cache, and verymany others.Wajig has evolved over more than 20 years and was rewritten from itsoriginal shell script to be a fully fledged Python program. Its goalis to support general users and administrators alike in using andmaintaining Debian and Ubuntu based systems.  Thus, it captures in asingle command line tool many common tasks for managing a GNU/Linuxsystem. It is a single and more comprehensive alternative to anotherwise large suite of separate tools, starting with apt-get andapt.Philosophy----------In essence, wajig is simply a front-end to many other commands andbelow we demonstrate how to manage your system with wajig.  wajig maynot be the answer you are looking for and that is fine. Wherever aprocedure is illustrated with wajig we will often indicate theunderlying commands that are being used to effect the wajig command.You can then use these underlying commands directly if youprefer. Indeed, wajig itself will show the commands that it runs if youprovide the --teach or --noop options after the wajig command. Bothwill show the command being run, with the latter then not actuallyrunning the command:```console$ wajig update --noop/usr/bin/sudo apt update$ wajig update --teach/usr/bin/sudo apt update[sudo] password for kayon: Hit:1 https://brave-browser-apt-release.s3.brave.com stable InRelease[...]```Sometimes the underlying commands can be complex and quite long.Online information about wajig is at https://wajig.togaware.com.wajig is hosted on github at https://github.com/gjwgit/wajig. StackOverflow (https://stackoverflow.com/) is monitored for questionsrelating to wajig so please post your queries there.Motivation----------If you've tried to remember all the different commands to getdifferent information about different aspects of Debian/Ubuntu packagemanagement and then used other commands to install and remove packagesthen you'll know that it can become a little too much.Swapping between dselect, aptitude, apt-get, dpkg, apt-cache, apt, andso on is interesting but cumbersome.  Also, dselect and aptitude canbe confusing and even though you can spend hours understanding each ofthem, it may not be time particularly well spent.This Python script simply collects together shortcuts to variouscommands!  Clearly no everything is covered, but as new capabilitiesare understood they get added to the toolkit.Basics------Wajig is designed to run in such a way as to suit the system it isrunning on and the policies of the system administrators.  It can berun as a normal user, but once a privileged command is required itwill use either su and ask for the root user's password, or else itcan use sudo and rely on the normal user's password. It can also berun directly as root without any extra setup (i.e., without the needfor sudo or regularly supplying passwords). Using sudo requires alittle setting (see below).Try the help command for a list of common commands provided bywajig:```console$ wajig help```Examples commands include:```console$ wajig update               (= apt-get update)$ wajig install less         (= apt-get install less)$ wajig new                  (list new packages since last update)$ wajig newupgrades          (list packages upgraded since last update)$ wajig updatealts editor    (update the default &quot;editor&quot;)$ wajig restart apache       (restart the apache daemon)$ wajig listfiles less       (list the files supplied by the &quot;less&quot; pkg)$ wajig whichpkg stdio.h     (what package supplies this header file)$ wajig whatis rats          (one line description of the package &quot;rats&quot;)$ wajig orphans              (list libraries not required by other pkgs)```For a complete list of available commands:```console$ wajig list-commands```In most cases, wajig expects a command and will call upon other Debiantools to perform the command.Getting Started With Sudo-------------------------The aim of wajig is to operate as much as possible as a user commandand to do super user privileged commands only when necessary (if thatis how the system administrator wishes to allow a user to maintaintheir system).  The easiest way to do this is to use the sudo packagewhich will ask you for your password and then run the command as thesuper user. If you don't have sudo installed then wajig will use su torun as super user, but you will need to enter the super user passwordfrequently. If sudo is installed but not set up for you to access theappropriate apt-get commands you will see a permission denied message.In order to allow your user to use sudo, run this command as root:```console# adduser &lt;username&gt; sudo```The change will take effect after logging out and in again.Hacking-------* Setup::```console$ wajig install devscripts debhelper$ debcheckout wajig$ cd wajig```* Build::```console$ debuild -us -uc```* Install::```console$ sudo debi```* Ensure that user-visible changes are mentioned in  ``debian/changelog``; use ``/usr/bin/debchange`` from within the  project root directory and do your changes there.HowTo Release-------------* Ensure that the version string in ``src/wajig.py`` as updated from  the Makefil matches that of latest changelog.* Ensure that debuild does not emit any lintian errors/warnings.Available Packages------------------The Debian packaging system relies on your local system having someidea of what packages are available. This is initialised when youinstall your system.  You will generally need to update this list ofpackages with what is currently available from the Debian archives fordownloading.  If you are staying with the stable release you generallyonly need to update the list of available packages once.  Thefollowing command is used to update the information about what isavailable for downloading:```console$ wajig update                (apt update)```(In brackets after the wajig command is the underlying command thatwajig calls upon to perform the operation.)This uses entries in the file /etc/apt/sources.list to know where toget the list of available packages from and which release of Debianyou wish to follow.  You can edit this file with:  $ wajig editsources           (&lt;configured editor&gt; /etc/apt/sources.list)It will check if $VISUAL and $EDITOR are defined, and use the editorsdefined there. If not, it will simply use /usr/bin/sensible-editor.You need to understand the format of the file /etc/apt/sources.list asexplained in the manual page:  $ man sources.listIt is pretty straightforward and we will see examples in the nextsection.If you have a Debian CD-ROM or DVD-ROM then you can tell apt what isavailable on it using:  $ wajig addcdromTo add a Launchpad PPA (Personal Package Archive) repository (used byUbuntu) the ADD-REPO command can be used. For example, to add thedaily builds of Google's Chromium browser, do the following:  $ wajig addrepo ppa:chromium-dailyIf you want to check when you last did an update then:  $ wajig lastupdateThere are quite a few archives available and you can test for a goodconnection to one with:  $ wajig searchaptThis will write a candidate sources.list in the current directory,which you can then review and add to the system sources.list, if youwish, with  $ wajig editsourcesFINDING PACKAGESTo search for a particular packages, use:  $ wajig search                        (apt-cache --names-only)This will only match a particular string with package names. If you wanta more comprehensive search, one that also searches for packagedescriptions, use the &quot;-v|--verbose&quot; options.To display the list of newly-available packages (after a cache update), use:  $ wajig newNote that after the first time you use update all packages will beconsidered new! But after the next update the new packages are thosethat were not in the available list from the previous update.Some (and often many) of the packages that you already have installedon your Debian system may have been upgraded in the archive since thelast time you performed an update. The following command will listthese packages:  $ wajig newupgradesFor a complete list of the packages you have installed but for whichthere are newer versions available on the archive use:  $ wajig toupgradeTo check the version of any installed package and also the versionavailable from the archive previously (i.e., the last time, but one,you performed an upgrade) and now (based on the last time youperformed an update), and to also see the so called Desired and Statusflags of the package, use:  $ wajig status &lt;package names&gt;        (similar to dpkg -l)Without a list of package names all installed packages will be listed.A variation is to list the status of all packages with a given stringin their name:  $ wajig statussearch &lt;string&gt;To check for a particular package for which you might guess at part ofits name you can use:  $ wajig listnames &lt;string&gt;            (apt-cache pkgnames)Without the string argument all known package names will be listed.To list the names and current install status of all installed packagesthen use:  $ wajig listYou can also list just the names of the packages installed with:  $ wajig list-installedAnd if you are looking for a particular installed package with a namecontaining a particular string then use:  $ wajig list-installed &lt;string&gt;To generate a list of packages, with version numbers, which you mightsave to file, and then restore a system to just this list of packagesat a later stage, use:  $ wajig snapshot &gt; snapshop-12dec04Each package installs some collection of files in different places onyour system (e.g., in /usr/bin/, /usr/man/man1/ andusr/doc/). Sometimes you like to see where those files go oreven just view the list of files installed. The command to use is:  $ wajig listfiles &lt;package name&gt;      (dpkg --listfiles )To list a one-line description for a package use:  $ wajig whatis &lt;package name&gt;And to find which package supplies a given file use:  $ wajig whichpkg &lt;command or file path&gt;and for a command (e.g., most):  $ wajig whichpkg $(which -p most)For unofficial packages (i.e., you came across a package but it doesn'tseem to be in Debian yet) search for a site with:  $ wajig searchpkg &lt;package-name&gt;The more detailed description of a package is available with:  $ wajig detail &lt;package-name&gt;Here, the package name can be replaced with a specific deb file.The Debian changelog can be retrieved with:  $ wajig changelog &lt;package name&gt;This command only displays changelog entries for upgradable packages.If you want to display the entire changelog, use:  $ wajig changelog --verbose &lt;package name&gt;It may be more practical to run the output through a pager:  $ wajig changelog --verbose &lt;package name&gt; | pagerINSTALLING PACKAGESTo install a new package (or even to update an already installedpackage) all you need do is:  $ wajig install &lt;package name&gt;        (apt-get install)(Instead of install you could equivalently say update.)You can list multiple packages to install with the one command.The install command will also accept a .deb file.  So, for example, ifyou have downloaded a Debian package file (with the .deb extension)you can install it with:  $ wajig install &lt;.deb file&gt;           (dpkg -i)The .deb file will be searched for in both the current directory andin the apt archive at /var/cache/apt/archive/.You can list multiple .deb files to install.If the .deb package file you wish to install is available on theinternet you can give its address and wajig will download then installit:  $ wajig install http://samfundet.no/debian/dists/woody/css/xine-dvd-css.debSometimes you may want to install many packages by listing them in afile, one per line.  You can do this with:  $ wajig install --fileinput &lt;filename&gt;The file of packages to install can conveniently be created from thelist of installed packages on another system with:  $ wajig listinstalled &gt; &lt;filename&gt;    (dpkg --get-selections)UPGRADING PACKAGESYou can upgrade all installed packages with:  $ wajig upgrade                       (apt-get -u upgrade)And you can upgrade all installed packages, remove those packages thatneed to be removed (for various reasons, including issues to do withdependencies) and install all newly required packages in thedistribution with:  $ wajig distupgrade                  (apt-get -u dist-upgrade)Note that a dist-upgrade will potentially remove packages wheredependency checking indicates this is necessary. Important packages(determined by the Priority specification which can be found using thedetails command) will be upgraded even at the cost of downgradingother (less important) packages.If this is an issue for you then you should use the upgrade commandrather than dist-upgrade. This command will never remove or downgradea package.To upgrade to a specific distribution (e.g., experimental) you can use:  # wajig distupgrade --dist experimentalNote that the mentioned distribution must also be mentioned in your/etc/apt/sources.list file.A neat trick with wajig is the ability to upgrade a collection ofpackages all with the same version number to another common versionnumber:  $ wajig status | grep 3.2.3-2 | grep 3.3.0-1 | cut -f1 &gt; list  $ wajig installfile listREMOVING PACKAGESOnce a package is installed you can remove it with:  $ wajig remove &lt;package name&gt;         (apt-get remove)Once again, you can list multiple packages to remove with the onecommand.A remove will not remove configuration files (in case you have donesome configuration of the package and later re-install the package).To get rid of the configuation files as well use:  $ wajig purge &lt;package name&gt;          (apt-get --purge remove)DISPLAYING APT LOGWhenever a package is installed, removed, upgraded, or downgradedwith either apt, aptitude, or synaptic, a log found at/var/log/apt/history.log is updated. To display it, run:  $ wajig list-log                      (cat /var/log/apt/history.log)CHECKING WHAT'S CHANGED BEFORE INSTALLINGWhen you install an updated package it is sometimes useful to knowwhat's changed.  The apt-listchanges package provides a mechanismwhereby when updating packages you will be given a chance to reviewthe changelog of the package and then decide whether to continue withthe upgrade. Simply install the apt-listchanges package to turn thisfeature on.INSTALLING ALIEN (RedHat/Fedora/CentOS) PACKAGESRedHat has quite an installed base of users. Some packages(particularly commercial packages) are available as RedHat packages(with the rpm extension). These can usually be installed in Debianwith little effort.  The alien package is required to convert the rpminto deb format which can then be installed. This is taken care of bywajig:  $ wajig rpminstall gmyclient-0.0.91b-1.i386.rpmPUTTING PACKAGES ON HOLDOccasionally, and particularly if you are following the unstablerelease, some packages are broken for various reasons.  This was thecase with the package cdrecord in unstable.  This package was compiledwith kernel 2.4.n and had some kernel specific issues that were donedifferently with kernel 2.2.n. At compile time one or the otheroptions was chosen (but not both!). Thus the newer binary versions ofcdrecord would not run on a system using kernel 2.2.n. One solution isto build a Debian package of cdrecord using the wajig build command.Another is to reinstall an older version that worked and then placethe package on hold with:  $ wajig hold cdrecordA wajig upgrade would not try to upgrade this package.BUILDING PACKAGESSometimes the binary distribution of the package is configured orcompiled with options that don't suit you. Or it may be compiled for amore recent release than that which you are using and does not workfor your release. Normally you would then be left on your own toretrieve the source of the package, configure and compile it, theninstall it into /usr/local/.  This is then outside of the Debianpackage management system, which is just fine.  But there are bettersolutions. One is to tune a specific source package and build a Debianpackage from it. The second is to specify general configurationoptions for your system and then rebuild many packages with theseoptions.BUILDING PACKAGES FROM SOURCEYou can download the source code for any Debian package from theDebian archive. You can then modify it and generate your own .deb filefor installation. To download the source of a Debian package you willneed deb-src lines in your /etc/apt/sources.list file, such as thefollowing:  deb-src http://ftp.debian.org/debian unstable main contrib non-freeGenerally you can add the '-src' to copies of pre-existing 'deb'lines.To retrieve and unpack a source Debian package use:  $ wajig source &lt;package names&gt;                (apt-get source)Note that you can list several packages and grab all of their sources.The source command downloads a .tar.gz file and a .dsc file for thepackage. The .tar.gz file contains the source code and associatedfiles. The .dsc file contains test information that is used by thepackaging system. The source command will also extract the contents ofthe .tar.gz archive into a subdirectory consisting of the package nameand version.To go one step further and also configure, compile and generate adefault Debian .deb package from source code (useful if you need tocompile a package for your setup specifically) then use instead:  $ wajig build &lt;package names&gt;This conveniently installs the needed build-dependencies for you.If you need to modify the source in some way and rebuild a package: $ wajig update $ wajig build ncftp $ dpkg-source -x ncftp_3.0.2-3.dsc $ cd ncftp-3.0.2 $ fakeroot dpkg-buildpackage -b -uNote that for some packages, you will get permission-related build errors.Replace 'fakeroot' with 'sudo' in such cases.BUILD ARCHITECTURE-OPTIMISED PACKAGESThe apt-build package, a front-end to apt-get, provides a generalsolution to build Debian packages tuned (or optimised) for yourarchitecture.  $ wajig install apt-buildYou will be asked for some options, and these go into/etc/apt/apt-build.conf:  build-dir = /var/cache/apt-build/build  repository-dir = /var/cache/apt-build/repository  Olevel = -O2  march = -march=pentium4  mcpu = -mcpu=pentium4  options = &quot; &quot;The built packages will be placed into/var/cache/apt-build/repository, an can be accessed with thestandard Debian package tools by adding the following line to the topof /etc/apt/sources.list (which can be done during theinstallation of apt-build:  deb file:/var/cache/apt-build/repository apt-build mainYou will need deb-src entries in your /etc/apt/sources.list file to beable to obtain the source packages.Being a front-end to apt-get, your first apt-build command might be toupdate the list of known available packages (particularly if you havejust added a deb-src entry to /etc/apt/sources.list), although thefollowing is equivalent:  $ wajig updateYou can then start building packages:  $ sudo apt-build install mostYou can manage a collection of packages to be recompiled and installedinstead of obtaining the default compiled versions. Create the file/etc/apt/apt-build.list to contain a list of such packagesand then:  $ sudo apt-build worldOne way to get a full list of installed packages is:  # dpkg --get-selections | awk '{if ($2 == &quot;install&quot;) print $1' \\    &gt; /etc/apt/apt-build.listBe sure to edit the list to remove, for example, gcc! Then a:  $ sudo apt-build worldwill recompile and optimise all packages.PINNING DISTRIBUTIONSWith the Debian packaging system you can specify that your packagescome by default from one distribution but you can override this withpackages from other distributions. The concept is called pinning andafter it is set up you can have, for example, testing asyour default release and then include unstable in/etc/apt/sources.list and install cdrecord from unstable with:  # apt-get install cdrecord/unstableThe following /etc/apt/preferences makes apt-get use testing unless itis overridden, even though there are entries for unstable in/etc/apt/sources.list:  Package: *  Pin: release a=testing  Pin-Priority: 900  Package: *  Pin: release o=Debian  Pin-Priority: -10RECONFIGURE PACKAGES  $ wajig reconfigure debconf           (dpkg-reconfigure  debconf)An alternative where you can specify a particular front end to use forthe configurator is:  # dpkg-reconfigure --frontend=dialog debconfSETTING DEFAULT APPLICATIONSDebian has a system of alternatives for various commands (orfunctionalities).  For example, the editor command could be nano ornvi, or one of a large number of alternative editors.  You can updatethe default for this command with:  $ wajig updatealts editor             (update-alternatives --config editor)Another common alternative is x-window-manager. You can get a list ofall alternatives with:  $ wajig listalts                      (ls /etc/alternatives/)The information is maintained in the directory /etc/alternatives/.BUGSIf you find a problem with your system and think it might be a bug, use:  $ wajig bug                           (reportbug)This will allow you to view bugs recorded against packages and alsoallow you to add a new bug report to the Debian bug reporting system.Otherwise visit the Debian email lists at http://lists.debian.org/ andsearch for the problem there.  The advice one gets here is generallyof high quality.MANAGING DAEMONS OR SERVICESIn addition to managing the installed packages wajig also allows youto start, stop, reload, and restart services (which are often providedby so called daemons---processes that run on your computer in thebackground performing various functions on an on-going basis).  Thecommands all follow the same pattern:  $ wajig restart &lt;service name&gt;        (/etc/init.d/&lt;service&gt; restart)The start and stop commands are obvious.  The restart commandgenerally performs a stop followed by a start.  The reload commandwill ask the daemon to reload its configuration files generallywithout stopping the daemon, if this is possible.  The services youcan specifiy here depend on what you have installed.  Common servicesinclude:  apache Web server  cron   Regular task scheduler  exim   Email delivery system  gdm    The Gnome Windows Display Manager (for logging on)  ssh    The Secure Shell daemonGenerally, daemons are started at system boot time automatically.ALTERNATIVE APPLICATIONSDebian has a mechanism for dealing with applications that provide thesame functionality.  We describe here how this mechanism works and howyou can use it to tune your installation.If you have more than one variant of emacs installed (e.g., emacs19,emacs20, and xemacs) then you can configure which one you get bydefault with:  $ wajig updatealts emacsYou will be asked to choose from a list of alternatives.To specify which window manager to use as the system default:  $ wajig updatealts x-window-managerSuppose the window-manager you want to use as the default is notlisted as available. You can install it with:# update-alternatives --install /usr/bin/x-window-manager \\                      x-window-manager /usr/bin/mywm PRIORITYWhere PRIORITY is a number higher than the highest existing priorityfor the x-window-manager alternative.  You can get a list ofpriorities with:# update-alternatives --display x-window-managerTo remove a Window Manager:# update-alternatives --remove x-window-manager /usr/bin/mywmPACKAGE ARCHIVESLocal CacheWhen packages are installed from the Debian Archives the correspondingdeb files are stored in /var/cache/apt/archive.  This can become quitepopulated with older versions of packages and we can clean out theseolder versions with:  $ wajig autoclean                     (apt-get autoclean)Warning: It is sometimes useful to have older versions of packageshanging around if you are tracking the unstable release.  Sometimesthe newer versions of packages are broken and you need to revert to anolder version which may not be available from the Debian archives, butmight be in your local download archive.If you get short of disk space then you might want to remove all thedownloaded deb files (not just the older versions of downloaded files)with:  $ wajig clean                         (apt-get clean)To remove files immediately after they have been installed edit/etc/apt/apt.conf:  // Things that effect the APT dselect method  DSelect  {    Clean &quot;auto&quot;;   // always|auto|prompt|never  ;Historic PackagesTo obtain any package version that might have appeared in the archiveinclude http://snapshot.debian.net in your package sources list andthe name of the package you are interested in. To update your sourceslist run:  $ wajig editsourcesto add the following line:  deb http://snapshot.debian.net/archive pool sedThen you can do, for example:  $ wajig available sed  $ wajig install sed=4.1.2-1MAINTAINING A DISTRIBUTION ARCHIVEDownloaded Debian packages are placed into /var/cache/apt/archive. Youcan have the files moved into a local hierarchy that mirrors astandard Debian distribution hierarchy.  Then you can point the/etc/apt/sources.list to this local archive by using the file://format.To set up a local machine as a local (partial) mirror of the Debianarchive, wajig will use the apt-move package.Edit /etc/apt-move.conf to set the DIST to match your system (defaultis stable):  DIST=unstableThe wajig command move will then move any packages in your/var/cache/apt/archives into the Debian mirror being created:  $ wajig moveYou can actually create a complete mirror with:  # apt-move mirrorThese commands place the packages into /mirrors/debian. To make itavailable on your web server simply:  # cd /var/www  # ln -s /mirrors pubThe file /etc/apt/sources.list can then be updated to point to the newarchive as the first place to check for packages (place this linesfirst in the file):  deb http://athens/pub/debian unstable main contrib non-freeAll of this might happen on your server (called athens in thisexample) and other machines on your local network can then access thelocal archive by adding the above line to /etc/apt/sources.list.If your server is not the most up to date machine (since you may notwant to run the risk of your server becoming unstable), you can rsyncall packages in /var/cache/apt/archives on other machines to theserver and then run the move command on the server:  # rsync -vr friend:/var/cache/apt/archives/ /var/cache/apt/archives/  # ssh friend wajig clean         (apt-get clean)  # wajig move                     (apt-move update)In fact, on your server you could use the following Python scriptsaved to file /root/apt-archive.py to automate this for each of thehosts on the network:    #!/usr/bin/env python    import os    hosts = ['friend', 'cargo']    archive = '/var/cache/apt/archives/'    for h in hosts:        os.system('rsync -vr %s:%s %s' % (h, archive, archive))        os.system('ssh %s wajig clean' % h)    os.system('wajig move')Then set the script up to run:  # chmod u+x apt-archive.pyand run it as required:  # ./apt-archive.pyDepending on how you have ssh set up this may ask for your passwordfor each connection.  To avoid this, you can use public/private keyswith no passphrase, and then the script could be run automaticallyusing cron each morning by copying the executable script to/etc/cron.daily/apt-archive. (Scripts in /etc/cron.daily with a pyextension are not run, so be sure to rename the file as suggestedhere.)Local Debian Package CacheTo set up a local Debian cache of deb files that you've created ordownloaded separately:  # mkdir -p /usr/local/cache/dists/local/local/binary-i386  # cp *.deb /usr/local/cache/dists/local/local/binary-i386  # cd /usr/local/cache  # dpkg-scanpackages dists/local/local/binary-i386 /dev/null \\  $ dists/local/local/binary-i386/PackagesThen add the following line to /etc/apt/sources.list:  deb file:/usr/local/cache local localOTHER COMMANDSThese may work their way into wajig.You can use the apt-get --download-only option of apt-get to downloadthe files for an install without actually unpacking and setting up thepackages. For example:  # wajig update  # apt-get --download-only dist-upgradeIn this way you are able to leave the download unattended and when youare ready you can monitor the unpacking and setup.If things go wrong somewhere then apt may be able to help:  # apt-get --fix-broken dist-upgradebut if things still don't work, you may need to use dpkg directly toremove and isntall packages.Synchronising Two InstallationsThe package system maintains a list of all packages installed (andde-installed). You can access this list, save it to a file, and use itto mark those same packages for installation (or deinstallation) onanther machine:# dpkg --get-selections &gt; dpkg-selections# dpkg --set-selections &lt; dpkg-selections# apt-get dselect-upgrade</longdescription>
</pkgmetadata>