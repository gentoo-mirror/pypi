<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># fabrictestbed-extensions[![pypi-badge]][pypy] [![api-docs-badge]][api-docs]This repository contains implementation of a Python API, otherwiseknown as &quot;FABlib&quot;, for intereacting with [FABRIC][fabric] testbed.## Installing FABlibYou can install released versions of FABlib from PyPI:```console$ pip install fabrictestbed-extensions```If you need the current development version of FABlib, install it fromthe git repository:```console$ pip install git+https://github.com/fabric-testbed/fabrictestbed-extensions@main```Note that installing FABlib using either methods will also install anumber of dependencies, so you might want to install FABlib in avirtual environment. Your favorite tool for managing virtualenvironments ([venv], [virtualenv], or [virtualenvwrapper]) shouldwork. FABRIC team tends to favor virtualenvwrapper.## Using FABlibOnce installed, you can use FABlib in your Python projects:```pythonfrom fabrictestbed_extensions.fablib.fablib import FablibManager as fablib_managertry:    fablib = fablib_manager()    fablib.show_config()except Exception as e:    print(f&quot;Exception: {e}&quot;)```Your first encounter with FABlib however might be through FABRICproject's [JupyterHub][fabric-jupyter] instance. You will be presentedwith many examples on FABlib usage when you log in there. The[notebook sources][fabric-jupyter-examples] can be found on GitHub aswell.Since FABlib 1.4, API docs can be found [here][fablib-api-rtd]. OlderAPI docs are [here][fablib-api-old].If you want to interact with FABRIC from Jupyter installed on yourcomputer, see: [Install the FABRIC Python API][fablib-install].## Contributing to FABlibContributions to FABlib are made with GitHub Pull Requests. When yousubmit a pull request, some tests will run against it:- Code formatting will be checked using [black].  Be sure that your  code is formatted with black, using its defaults.- CHANGELOG.md will be checked for updates.- Packages will be built.- Unit tests will be run.You can run tests in your environment, like so, using [pytest]:```console$ pip install -e .[test]$ pytest```## Packaging FABlibFABlib uses [flit] as the build backend.  To build source and wheelpackages, do this:```console$ pip install flit$ flit build```While using flit as the build backend, continuing to use [build] asthe build frontend should work too:```$ pip install build$ python -m build```## Releasing FABlibWhen it is time to release a new version of FABlib, remember to: (1)update the package version in top-level `__init__.py`, (2) build thesource and wheel packages, and (3) upload packages to PyPI:```console$ flit publish```Continuing to use twine to publish packages is an option too:```console$ twine upload dist/*```For details about publishing to PyPI, see flit documentation about[package uploads].&lt;!-- URLs --&gt;[pypy]: https://pypi.org/project/fabrictestbed-extensions/[pypi-badge]: https://img.shields.io/pypi/v/fabrictestbed-extensions?style=plastic (PyPI)[api-docs]: https://fabric-fablib.readthedocs.io/en/latest/?badge=latest[api-docs-badge]: https://readthedocs.org/projects/fabric-fablib/badge/?version=latest (Documentation Status)[fabric]: https://fabric-testbed.net/[venv]: https://docs.python.org/3/library/venv.html[virtualenv]: https://virtualenv.pypa.io/en/latest/[virtualenvwrapper]: https://virtualenvwrapper.readthedocs.io/en/latest/[fabric-jupyter]: https://jupyter.fabric-testbed.net/[fabric-jupyter-examples]: https://github.com/fabric-testbed/jupyter-examples[fablib-install]: https://learn.fabric-testbed.net/knowledge-base/install-the-python-api/[fablib-api-rtd]: https://fabric-fablib.readthedocs.io/en/latest/[fablib-api-old]: https://learn.fabric-testbed.net/docs/fablib/fablib.html[flit]: https://flit.pypa.io/en/stable/[package uploads]: https://flit.pypa.io/en/latest/upload.html[build]: https://pypi.org/project/build/[pytest]: https://pypi.org/project/pytest/[black]: https://pypi.org/project/black/</longdescription>
</pkgmetadata>