<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># WebraftChatBotThe &quot;chatbot-webraft&quot; Python module is a powerful tool that allows users to create their own chatbots with custom datasets in an easy and efficient manner. It is designed to work with CSV datasets and provides a variety of model types to choose from, ensuring that users can select the best model for their specific needs. The module requires no high-end servers and can be used with or without training, making it a flexible and cost-effective solution for chatbot development. With the &quot;chatbot-webraft&quot; module, users can quickly and easily develop their own chatbots, customizing the dataset and model type to fit their specific requirements. Whether you're a beginner or an experienced developer, the &quot;chatbot-webraft&quot; module provides a simple and intuitive way to create custom chatbots with Python due to its easy to use syntax.One of the best features of Chatbot-Webraft is its ability to generate code scripts in specific programming languages from text. This means that you can use your preferred programming language, or even write your own code, and Chatbot-Webraft will convert it into a script that is ready to use. Whether you are an experienced developer or just starting out, this feature makes it easy to build chatbots quickly and efficiently.In summary, Chatbot-Webraft is a must-have tool for anyone looking to create chatbots. With its wide range of features, including multiple model types, easy customization, and code generation capabilities,Chatbot-Webraft is the perfect tool for anyone looking to build chatbots with ease and efficiency.**PLEASE NOTE THAT THIS MODULE IS IN BETA AND CHATBOTS CREATED WITH IT MAY RESPOND WITH UNEXPECTED ANSWERS**### **USAGE:**#### Import library```from chatbot_webraft import chatbot```##### Create Model```chatbot.create_model(&quot;my-model&quot;)```##### Load  CSV DATASET (here 'input' needs to be replaced with the column in dataset that has the fields containing the data to be inputted same to be done with 'label' but with fields containing the data to be outputted. )```chatbot.dataset(CSV_FILE_NAME,'input','label',&quot;my-model&quot;&quot;) ```##### Add more data to chatbot(OPTIONAL)```chatbot.add_data(&quot;my-model&quot;&quot;,[&quot;input1&quot;,&quot;input2&quot;],[&quot;output1&quot;,&quot;output2&quot;]) ```##### Specify Input```input = &quot;hi&quot;``` / ```input = input(&quot;Enter: &quot;)```##### Run chatbot (for default set MODEL_TYPE to &quot;spimx&quot;)```print(chatbot.model_load(MDDEL_TYPE,input,&quot;my-model&quot;,MDDEL_TYPE))```/```chatbot.model_load(MDDEL_TYPE,input,&quot;my-model&quot;,MDDEL_TYPE)``` ##### Use codewriter (currently python supported)```print(codewriter(&quot;python&quot;,input,&quot;my-model&quot;,&quot;pywriter&quot;)``` / ```chatbot.model_load(&quot;pywriter&quot;,input,&quot;my-model&quot;,&quot;pywriter&quot;)```### **Model Types:**Inbuilt model types: nlpm (Generative, Best) , spimx (better), spimxr (more good), spim (good), rasv (not that good)You can use other model types by downloading them from [here](&quot;https://models.chatbot.webraft.in&quot;) and define path where modeltype (.wrmodel) file is stored to MODEL_TYPENLPM: A generative model type (framework) , works best for generative bots . (BETA)NLPM USAGE: ```chatbot.model_load(&quot;nlpm&quot;,input,&quot;my-model&quot;,MODELTYPE)``` - Replace `MODELTYPE` with the other modeltype that suites you the best , i.e - spim , spimx , rasv , spim (do not replace MODELTYPE with 'nlpm' rather replace with others)There is also a transformer modified framework that uses Tokenizers from prebuilt transfomer model i.e - BERT . Note that it needs very high system for running and takes a lot of time to load. USE - ```chatbot.model_load(&quot;bert&quot;,input,&quot;my-model&quot;,&quot;bert)``` (It doesnt need training)### **Basic BOT Usage:** ``` #Import libraryfrom chatbot_webraft import chatbot#set model namemodel = &quot;my-model&quot; #create modelchatbot.create_model(model)#load CSV dataset , Mention input column (question) and label column (answer)chatbot.dataset(CSV_FILE_NAME,INPUT_COLUMN,LABEL_COLUMN,model) #run in loopwhile True:  prompt = input(&quot;You: &quot;)      #run model and parse input  print(&quot;Bot: &quot;,chatbot.model_load(&quot;spimx&quot;,prompt,model,&quot;spimx&quot;))  ``` ### **Bot usage for discord:**```#Import librariesfrom chatbot_webraft import chatbotimport discord client = discord.Client(intents=discord.Intents.all())model = &quot;my-model&quot; #set model namechatbot.create_model(model) #create modelchatbot.dataset(CSV_FILE_NAME,INPUT_COLUMN,LABEL_COLUMN,model) #load CSV dataset .. Mention input column (question) and label column (answer)chatbot.add_data(model,[&quot;hey&quot;,&quot;what about you&quot;],[&quot;hello bro&quot;,&quot;im fine ,you?&quot;]) #add more data to model (Not saved , only in memory). Data that you may want to add later.@client.eventasync def on_message(message):    if message.author == client.user:        return    prompt = message.content        await message.reply(chatbot.model_load(&quot;spim&quot;,prompt,model,&quot;spim&quot;)) #run model and parse outputclient.run(BOT_TOKEN)```### **Basic codewriter usage:**``` #Import libraryfrom chatbot_webraft import chatbot#set model namemodel = &quot;my-model&quot; #create modelchatbot.create_model(model)#load CSV dataset , Mention input column (question) and label column (answer)chatbot.dataset(CSV_FILE_NAME,INPUT_COLUMN,LABEL_COLUMN,model) #run in loopwhile True:  prompt = input(&quot;You: &quot;)      #run model and parse input  print(&quot;Bot: &quot;,chatbot.model_load(&quot;pywriter&quot;,prompt,model,&quot;pywriter&quot;)) #Or codewriter(&quot;python&quot;,prompt,model,&quot;pywriter&quot;)```### **SAMPLE CSV DATASET:**Download Sample csv dataset from [here](https://webraft.in/sample.csv) , Dont forget to put the file in your project directory&lt;br&gt;Change `CSV_FILE_NAME` to &quot;sample.csv&quot; , `INPUT_COLUMN` to &quot;input&quot; , `LABEL_COLUMN` to &quot;label&quot; in the code### **Errors:**Error 1 - This error indicates that the model name used in specific function is not same as the modelname set with chatbot.createmodel() &lt;br&gt;Error 2 - This error indicates that the codewriter couldn't convert specific text to code due to lack of resources &lt;br&gt;Error 3 - This error indicates that the file being set in any of these functions: chatbot.dataset() , chatbot.model_load() doesn't exist </longdescription>
</pkgmetadata>