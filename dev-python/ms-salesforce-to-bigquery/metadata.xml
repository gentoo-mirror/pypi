<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># How to contributeAfter clone repository## 1.- Install dependencies```bashpoetry install```## 2.- Run test```bashmake test```## 3.- Run lint```bashmake lint &amp;&amp; make isort```## How to publish new versionOnce we have done a merge of our Pull request and we have the updated master branch we can generate a new version. For them we have 3 commands that change the version of our library and generate the corresponding tag so that the Bitbucket pipeline starts and publishes our library automatically.```bashmake release-patch``````bashmake release-minor``````bashmake release-major```# How worksThis project provides an API for querying Salesforce opportunities data and transforming it into an easy-to-use format. The API is built upon the `SalesforceQueryExecutor` and `Project` classes, with the latter inheriting from `SalesforceQueryExecutor`.## InstallationMake sure you have **Python 3.8+** installed. Then, install the required dependencies using `poetry`:```bashpoetry install```## UsageFirst, import the necessary classes:```pythonfrom ms_salesforce_to_bigquery.salesforce.project import Project```Then, initialize the `Project` class with your Salesforce credentials:```pythonproject = Project(    client_id=&quot;your_client_id&quot;,    username=&quot;your_username&quot;,    domain=&quot;your_domain&quot;,    private_key=&quot;your_private_key&quot;,    audience=&quot;https://login.salesforce.com&quot;, # Default value    session_duration_hours=1, # Default value    api_version='57.0',  # Default value)```Now, you can call the get_opportunities method with a query to get the opportunities data:```pythonopportunities = project.get_opportunities()```The opportunities variable will contain an array of opportunity objects with the transformed data. For example:```python[    {        &quot;client_fiscal_name&quot;: &quot;Five Eight Twenty-Two Consulting Inc.&quot;,        &quot;client_account_name&quot;: &quot;5822&quot;,        &quot;currency&quot;: &quot;CAD&quot;,        &quot;amount&quot;: 30000.0,        &quot;invoicing_country_code&quot;: &quot;ES&quot;,        &quot;operation_coordinator_email&quot;: &quot;jhon.doe@ext.makingscience.com&quot;,        &quot;operation_coordinator_sub_email&quot;: &quot;jhon.doe@ext.makingscience.com&quot;,        &quot;created_at&quot;: &quot;2023-02-15T09:30:06.000+0000&quot;,        &quot;last_updated_at&quot;: &quot;2023-04-04T10:43:24.000+0000&quot;,        &quot;opportunity_name&quot;: &quot;5822 - OPORTUNITY NAME&quot;,        &quot;stage&quot;: &quot;Closed Won&quot;,        &quot;billing_country&quot;: &quot;CA&quot;,        &quot;lead_source&quot;: &quot;TEST LEAD SOURCE&quot;,        &quot;project_code&quot;: &quot;ESMSEX00000&quot;,        &quot;project_id&quot;: &quot;1234567890abcde&quot;,        &quot;project_name&quot;: &quot;PROJECT TEST NAME&quot;,        &quot;project_start_date&quot;: &quot;2023-02-01&quot;,        &quot;controller_email&quot;: None,        &quot;controller_sub_email&quot;: &quot;jhon.doe@ext.makingscience.com&quot;,        &quot;profit_center&quot;: None,        &quot;cost_center&quot;: None,        &quot;project_tier&quot;: &quot;Unkown&quot;,        &quot;jira_task_url&quot;: &quot;https://makingscience.atlassian.net/browse/ESMSBD0001-00000&quot;,        &quot;opportunity_percentage&quot;: 100.0    }]```You can customize the query as needed to retrieve different data from Salesforce.```pythonquery = &quot;SELECT Id, Name FROM Project WHERE Project.Id = 'ESMS0000'&quot;opportunities = project.get_opportunities(query)```# TestingTo run the unit tests, simply execute the following command:```bashmake test```This will run all the tests and display the results. Make sure that all tests pass before using the API in a production environment.</longdescription>
</pkgmetadata>