<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django-AppMail[![PyPI](https://img.shields.io/pypi/v/django-appmail.svg)](https://pypi.org/project/django-appmail/)Django app for managing transactional email templates.## CompatibilityThis project now requires Django 4.0+ and Python 3.9+. If you require a previousversion you will have to refer to the relevant branch or tag.## BackgroundThis project arose out of a project to integrate a large transactional Djangoapplication with Mandrill, and the lessons learned. It also owes a minor h/t tothis project from 2011 (https://github.com/hugorodgerbrown/AppMail).The core requirement is to provide an easy way to add / edit email templates toa Django project, in such a way that it doesn't require a developer to makechanges. The easiest way to use templated emails in Django is to rely on thein-built template structure, but that means that the templates are held infiles, under version control, which makes it very hard for non-developers toedit.This is **not** a WYSIWYG HTML editor, and it doesn't do anything clever. Itdoesn't handle the sending of the emails - it simply provides a convenientmechanism for storing and rendering email content.```pythonfrom appmail.models import EmailTemplate, AppmailMessagedef send_order_confirmation(order_id):    order = Orders.objects.get(id=order_id)    template = EmailTemplate.objects.current('order_confirmation')    context = { &quot;order&quot;: order }    message = AppmailMessage(        template=template,        context=context,        to=[order.recipient.email]    )    message.send()```The core requirements are:1. List / preview existing templates2. Edit subject line, plain text and HTML content3. Use standard Django template syntax4. Support base templates5. Template versioning6. Language support7. Send test emails8. Log emails sent (if desired)### Email logging (v2)From v2 on, it is possible to log all emails that are sent via`AppmailMessage.send`. It records the template, context and the rendered output,so that the email can be views as sent, and resent. It will attempt to recordthe User to whom the email was sent, as well as the email address. This isdependent on there being a unique 1:1 match from email to User object, but canprove useful in tracking emails sent to users when they change their emailaddress.### Template propertiesIndividual templates are stored as model objects in the database. The standardDjango admin site is used to view / filter templates. The templates are orderedby name, language and version. This combination is unique. The language andversion properties have sensible defaults (`version=settings.LANGUAGE_CODE` and`version=0`) so don't need to set if you don't require it. There is noinheritance or relationship between different languages and versions - they arestored as independent objects.```python# get the default order_summary email (language = settings.LANGUAGE_CODE)template = EmailTemplate.objects.current('order_summary')# get the french versiontemplate = EmailTemplate.objects.current('order_summary', language='fr')# get a specific versiontemplate = EmailTemplate.objects.version('order_summary', 1)```**Template syntax**The templates themselves use standard Django template syntax, including the useof tags, filters. There is nothing special about them, however there is onecaveat - template inheritance.**Template inheritance**Although the template content is not stored on disk, without re-engineering thetemplate rendering methods any parent templates must be. This is annoying, butthere is a valid assumption behind it - if you are changing your base templatesyou are probably involving designers and developers already, so having to relyon a developer to make the changes is acceptable.**Sending test emails**You can send test emails to an email address through the admin list view.&lt;img src=&quot;screenshots/appmail-test-email-action.png&quot; alt=&quot;EmailTemplate adminchange form&quot; /&gt;The custom admin action 'Send test emails' will redirect to an intermediate pagewhere you can enter the recipient email address and send the email:&lt;img src=&quot;screenshots/appmail-test-email-send.png&quot;/&gt;There is also a linkon individual template admin pages (top-right, next to thehistory link):&lt;img src=&quot;screenshots/appmail-template-change-form.png&quot; alt=&quot;EmailTemplate adminchange form&quot; /&gt;## TestsThere is a test suite for the app, which is best run through `tox`.## LicenseMIT## ContributingUsual rules apply:1. Fork to your own account2. Fix the issue / add the feature3. Submit PRPlease take care to follow the coding style - and PEP8.</longdescription>
</pkgmetadata>