<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DynamoDB CSV utility[![ci](https://github.com/danishi/DynamoDB-CSV/actions/workflows/ci.yaml/badge.svg?branch=master)](https://github.com/danishi/DynamoDBImportCSV/actions/workflows/ci.yaml)[![codecov](https://codecov.io/gh/danishi/dynamodb-csv/branch/master/graph/badge.svg?token=KRA27MJN42)](https://codecov.io/gh/danishi/dynamodb-csv)[![Maintainability](https://api.codeclimate.com/v1/badges/c1d2a51bbd72d6198e0c/maintainability)](https://codeclimate.com/github/danishi/dynamodb-csv/maintainability)![MIT](https://img.shields.io/github/license/danishi/DynamoDB-CSV)![Supported Python versions](https://img.shields.io/pypi/pyversions/dynamodb-csv.svg?color=%2334D058)[![Linux](https://svgshare.com/i/Zhy.svg)](https://svgshare.com/i/Zhy.svg)[![macOS](https://svgshare.com/i/ZjP.svg)](https://svgshare.com/i/ZjP.svg)[![Windows](https://svgshare.com/i/ZhY.svg)](https://svgshare.com/i/ZhY.svg)[![PyPI](https://badge.fury.io/py/dynamodb-csv.svg)](https://badge.fury.io/py/dynamodb-csv)[![Downloads](https://pepy.tech/badge/dynamodb-csv)](https://pepy.tech/project/dynamodb-csv)[![Downloads week](https://pepy.tech/badge/dynamodb-csv/week)](https://pepy.tech/project/dynamodb-csv)[![Downloads month](https://pepy.tech/badge/dynamodb-csv/month)](https://pepy.tech/project/dynamodb-csv)[![Docker Pulls](https://img.shields.io/docker/pulls/danishi/dynamodb-csv)](https://hub.docker.com/r/danishi/dynamodb-csv)[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://makeapullrequest.com)[![&quot;Buy Me A Coffee&quot;](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/danishi)![DynamoDBCSV](https://user-images.githubusercontent.com/56535085/159007555-e72d1c26-eb44-46ca-bc38-c752164995bf.png)A utility that allows CSV import / export to DynamoDB on the command lineGive a ‚≠êÔ∏è if you like this tool!## IntroductionI made this command because I didn't have any tools to satisfy my modest desire to make it easy to import CSV files into DynamoDB.Written in a simple Python script, it's easy to parse and modify.It works for me.![terminalizer](https://user-images.githubusercontent.com/13270461/237145047-ec815dad-1ff6-4678-baa4-fd182ee35269.gif)## Getting started üöÄ### Install```shell$ python -m venv venv$ . venv/bin/activate$ pip install dynamodb-csv$ dynamodb-csv -husage: dynamodb-csv [-h] [-v] [-i] [-e] [--truncate] [--move] -t [TABLE ...] [-idx INDEX] [-f FILE] [-o OUTPUT] [--ignore]               [--profile PROFILE]Import CSV file into DynamoDB table utilitiesoptional arguments:  -h, --help            show this help message and exit  -v, --version         show version  -i, --imp             mode import  -e, --exp             mode export  --truncate            mode truncate  --move                mode move  -t [TABLE ...], --table [TABLE ...]                        DynamoDB table name  -idx INDEX, --index INDEX                        DynamoDB index name  -f FILE, --file FILE  UTF-8 CSV file path required import mode  -o OUTPUT, --output OUTPUT                        output file path required export mode  --ignore              ignore import error  --profile PROFILE     using AWS profile```### Install for developer```shell$ python -m venv venv$ . venv/bin/activate$ python setup.py install$ dynamodb-csv -h```Or```shell$ python -m venv venv$ . venv/bin/activate$ pip install -r requirements-dev.txt$ export PYTHONPATH=`pwd`$ python app/main.py -h```For Windows```shell&gt; python -m venv venv&gt; venv\Scripts\activate&gt; pip install -r requirements-dev.txt&gt; set PYTHONPATH=%cd%&gt; python app/main.py -h```Or you can use devcontainer.### [Use Docker image](https://hub.docker.com/r/danishi/dynamodb-csv)```shell$ docker run --rm -v ${PWD}/:/local danishi/dynamodb-csv:tagname -i -t my_table -f sample.csv```For Windows```shell&gt; docker run --rm -v %cd%/:/local danishi/dynamodb-csv:tagname -i -t my_table -f sample.csv```Or [GitHub Packages](https://github.com/danishi/dynamodb-csv/pkgs/container/dynamodb-csv)### Create your config.ini file on current directory```ini[AWS]AWS_ACCESS_KEY_ID=your_access_keyAWS_SECRET_ACCESS_KEY=your_secret_keyREGION=your_dynamodb_table_region# Option#ENDPOINT_URL=http://dynamodb-local:8000```Not required if AWS profile is specified as a parameter.### Create your CSV and CSV spec filePrepare a UTF-8 CSV file of the format you want to import into your DynamoDB table and a file that defines that format.#### For examplePlease refer to this writing method.[sample.csv](sample.csv)```csvStringPK,NumberSK,DecimalValue,BooleanValue,NullValue,JsonValue,StringListValues,DecimalListValuesfoo,1,1.23,TRUE,,&quot;[{&quot;&quot;string&quot;&quot; : &quot;&quot;value&quot;&quot;},{&quot;&quot;number&quot;&quot; : 100}]&quot;,foo bar baz,10 10.1 20foo,2,0.001,,,&quot;[{&quot;&quot;boolean&quot;&quot; : true}]&quot;,„É™„É≥„Ç¥ „Éê„Éä„Éä „Çπ„Ç§„Ç´,10 10.1 20foo,3,1,,,&quot;[{&quot;&quot;boolean&quot;&quot; : false}]&quot;,,```[sample.csv.spec](sample.csv.spec)```ini# sample.csv data format specification# String : S# Integer : I# Decimal : D# Boolean : B (blank false)# Json : J# StringList : SL# StringSet : SS# DecimalList : DL# DecimalSet : DS[CSV_SPEC]StringPK=SNumberSK=IDecimalValue=DBooleanValue=BNullValue=SJsonValue=JStringListValues=SLStringSetValues=SSDecimalListValues=DLDecimalSetValues=DS```### Create DynamoDB tableYou need to have created a DynamoDB table that meets your specifications.```shell$ aws dynamodb create-table --cli-input-json file://my_table.json --region ap-northeast-1$ aws dynamodb describe-table --table-name my_table{    &quot;Table&quot;: {        &quot;AttributeDefinitions&quot;: [            {                &quot;AttributeName&quot;: &quot;NumberSK&quot;,                &quot;AttributeType&quot;: &quot;N&quot;            },            {                &quot;AttributeName&quot;: &quot;StringPK&quot;,                &quot;AttributeType&quot;: &quot;S&quot;            }        ],        &quot;TableName&quot;: &quot;my_table&quot;,        &quot;KeySchema&quot;: [            {                &quot;AttributeName&quot;: &quot;StringPK&quot;,                &quot;KeyType&quot;: &quot;HASH&quot;            },            {                &quot;AttributeName&quot;: &quot;NumberSK&quot;,                &quot;KeyType&quot;: &quot;RANGE&quot;            }        ],        &quot;TableStatus&quot;: &quot;ACTIVE&quot;,        &quot;CreationDateTime&quot;: &quot;2022-06-26T21:19:21.767000+09:00&quot;,        &quot;ProvisionedThroughput&quot;: {            &quot;NumberOfDecreasesToday&quot;: 0,            &quot;ReadCapacityUnits&quot;: 5,            &quot;WriteCapacityUnits&quot;: 5        },        &quot;TableSizeBytes&quot;: 0,        &quot;ItemCount&quot;: 0,        &quot;TableArn&quot;: &quot;arn:aws:dynamodb:ap-northeast-1:XXXXXXXXXXX:table/my_table&quot;,        &quot;TableId&quot;: &quot;XXXXXXXX-925b-4cb1-8e3a-604158118c3f&quot;,        &quot;GlobalSecondaryIndexes&quot;: [            {                &quot;IndexName&quot;: &quot;NumberSK-index&quot;,                &quot;KeySchema&quot;: [                    {                        &quot;AttributeName&quot;: &quot;NumberSK&quot;,                        &quot;KeyType&quot;: &quot;HASH&quot;                    }                ],                &quot;Projection&quot;: {                    &quot;ProjectionType&quot;: &quot;INCLUDE&quot;,                    &quot;NonKeyAttributes&quot;: [                        &quot;DecimalValue&quot;,                        &quot;JsonValue&quot;                    ]                },                &quot;IndexStatus&quot;: &quot;ACTIVE&quot;,                &quot;ProvisionedThroughput&quot;: {                    &quot;NumberOfDecreasesToday&quot;: 0,                    &quot;ReadCapacityUnits&quot;: 5,                    &quot;WriteCapacityUnits&quot;: 5                },                &quot;IndexSizeBytes&quot;: 0,                &quot;ItemCount&quot;: 0,                &quot;IndexArn&quot;: &quot;arn:aws:dynamodb:ap-northeast-1:XXXXXXXXXXX:table/my_table/index/NumberSK-index&quot;            }        ]    }}```### CSV import into TableThis command requires a CSV spec file in the same directory.```shell$ dynamodb-csv -i -t my_table -f sample.csvplease wait my_table importing sample.csv300it [00:00, 19983.03it/s]100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 300/300 [00:07&lt;00:00, 40.97it/s]my_table csv imported 300 items```It is processed at high speed by batch write.#### Ignore optionIf there is an error such as a key schema mismatch, you can give the option to ignore the CSV record.```shell$ dynamodb-csv -i -t my_table -f sample.csv --ignoreplease wait my_table importing sample.csv300it [00:00, 19983.03it/s]100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 300/300 [00:07&lt;00:00, 40.97it/s]my_table csv imported 299 items and 1 error items```No batch write is done when this option is used.#### Import optionsBy default, if CSV has an empty value, it will be set to empty.  There are options to convert this to Null or not to set the attribute itself.```ini[IMPORT_OPTION]ConvertBlankToNullAttrs=NullValue,JsonValueConvertBlankToDropAttrs=DecimalValue```### Export table to CSVYou will also need to expand the same data to multiple tables.  Therefore, data can be exported.  As with import, you need a CSV spec file.```shell$ dynamodb-csv -e -t my_table -o sample_exp.csvplease wait my_table exporting sample_exp.csv100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 300/300 [00:00&lt;00:00, 16666.77it/s]my_table csv exported 300 items```#### Use index```shell$ dynamodb-csv -e -t my_table -idx NumberSK-index -o sample_gsi_exp.csv```#### Use Query```shell$ dynamodb-csv -e -t my_table -idx NumberSK-index -o sample_query_exp.csv``````ini# sample_query_exp.csv data format specification# Integer : I# String : S# Decimal : D# Json : J[QUERY_OPTION]PKAttribute=NumberSKPKAttributeValue=1PKAttributeType=I[CSV_SPEC]NumberSK=IStringPK=SDecimalValue=DJsonValue=J```##### Query options* `PKAttribute` : Partition key attribute name* `PKAttributeValue` : Partition key attribute query value* `PKAttributeType` : Partition key attribute data type* `SKAttribute` : Sort key attribute name* `SKAttributeValues` : Sort key attribute query value or values  * ex. `foo` or `foo,bar`* `SKAttributeType` : Sort key attribute data type* `SKAttributeExpression` : Sort key attribute query expression [ex.](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/dynamodb.html#dynamodb-conditions)  * `begins_with` `between` `eq` `gt` `gte` `lt` `lte````shell$ dynamodb-csv -e -t my_table -o sample_query_exp2.csv``````ini[QUERY_OPTION]PKAttribute=StringPKPKAttributeValue=barPKAttributeType=SSKAttribute=NumberSKSKAttributeValues=50,100SKAttributeType=ISKAttributeExpression=between```### Table truncateAlso, since you may want to erase unnecessary data during the import experiment, we have prepared a command to discard it.```shell$ dynamodb-csv --truncate -t my_tablemy_table scan 300 itemsplease wait my_table truncating100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 300/300 [00:07&lt;00:00, 40.95it/s]my_table truncated```### Table moveMove all items from table to table.A table with the same schema must be prepared in advance.  Table items is not deleted and behaves like a copy.```shell$ dynamodb-csv --move -t my_table_from my_table_tomy_table_from scan 300 itemsplease wait my_table_to moving100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 300/300 [00:15&lt;00:00, 20.00it/s]my_table_to moved 300 items```## LicenseSee [LICENSE](LICENSE)## Special Thanks### Code contributors ü§ù&lt;a href=&quot;https://github.com/danishi/dynamodb-csv/graphs/contributors&quot;&gt;  &lt;img src=&quot;https://contrib.rocks/image?repo=danishi/dynamodb-csv&quot; /&gt;&lt;/a&gt;## Appendix### User guide- [User guide (for japanese)](https://danishi.github.io/dynamodb-csv/)</longdescription>
</pkgmetadata>