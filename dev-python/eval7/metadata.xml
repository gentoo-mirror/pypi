<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>eval7=====.. image:: https://github.com/julianandrews/pyeval7/workflows/Tests/badge.svg    :target: https://github.com/julianandrews/pyeval7/actionsPython Texas Hold'em hand evaluation library based on Anonymous7's codebasewhich is in turn based on Keith Rule's hand evaluator (which you can seehere_). Eval7 also provides a parser for an extended set of PokerStovestyle range strings, and approximate equity calculation for unweighted ranges... _here: http://www.codeproject.com/Articles/12279/Fast-Texas-Holdem-Hand-          Evaluation-and-AnalysisEval7 is a work in progress: only the functionality needed by `Flop Ferret`_has been fully implemented. Time permitting, the goal is to provide a fullyfeatured poker hand evaluator and range equity calculator with a clean nativepython interface and all performance critical parts implemented in Cython... _Flop Ferret: https://github.com/JulianAndrews/FlopFerretInstallation------------Pip Installation~~~~~~~~~~~~~~~~Check PyPI_ to see if there are recent binary `.whl` packages for your versionof python. If there are, you can just install with::   pip install eval7If there isn't a wheel for your package, feel free to open an issue on GitHub... _PyPI: https://pypi.org/project/eval7/#filesOther Platforms~~~~~~~~~~~~~~~eval7 is tested on python 3.5, 3.6, 3.7 and 3.8 and likely works with 2.7+.The build process requires cython. If you have a working copy of pip::    pip install cythonshould work on many platforms. Once you have cython, clone the repo and installwith::    python setup.py installUsage-----Basic usage::    &gt;&gt;&gt; import eval7, pprint    &gt;&gt;&gt; deck = eval7.Deck()    &gt;&gt;&gt; deck.shuffle()    &gt;&gt;&gt; hand = deck.deal(7)    &gt;&gt;&gt; pprint.pprint(hand)    [Card(&quot;5c&quot;),     Card(&quot;9s&quot;),     Card(&quot;8d&quot;),     Card(&quot;5d&quot;),     Card(&quot;Ac&quot;),     Card(&quot;Qc&quot;),     Card(&quot;3d&quot;)]    &gt;&gt;&gt; eval7.evaluate(hand)    17025648    &gt;&gt;&gt; eval7.handtype(17025648)    'Pair'    &gt;&gt;&gt; hand = [eval7.Card(s) for s in ('As', '2c', '3d', '5s', '4c')]    &gt;&gt;&gt; eval7.evaluate(hand)    67305472    &gt;&gt;&gt; eval7.handtype(67305472)    'Straight'``Deck`` objects provide ``sample``, ``shuffle``, ``deal`` and ``peek``methods. The deck code is currently implemented in pure python and works wellfor quick lightweight simulations, but is too slow for full range vs. rangeequity calculations. Ideally this code will be rewritten in Cython.Hand Ranges-----------eval7 also provides a parser for weighted PokerStove style hand ranges.Examples::    &gt;&gt;&gt; from pprint import pprint    &gt;&gt;&gt; hr = eval7.HandRange(&quot;AQs+, 0.4(AsKs)&quot;)    &gt;&gt;&gt; pprint(hr.hands)    [((Card(&quot;Ac&quot;), Card(&quot;Qc&quot;)), 1.0),     ((Card(&quot;Ad&quot;), Card(&quot;Qd&quot;)), 1.0),     ((Card(&quot;Ah&quot;), Card(&quot;Qh&quot;)), 1.0),     ((Card(&quot;As&quot;), Card(&quot;Qs&quot;)), 1.0),     ((Card(&quot;Ac&quot;), Card(&quot;Kc&quot;)), 1.0),     ((Card(&quot;Ad&quot;), Card(&quot;Kd&quot;)), 1.0),     ((Card(&quot;Ah&quot;), Card(&quot;Kh&quot;)), 1.0),     ((Card(&quot;As&quot;), Card(&quot;Ks&quot;)), 1.0),     ((Card(&quot;As&quot;), Card(&quot;Ks&quot;)), 0.4)]    &gt;&gt;&gt; hr = eval7.HandRange(&quot;AJ+, ATs, KQ+, 33-JJ, 0.8(QQ+, KJs)&quot;)    &gt;&gt;&gt; len(hr)    144At present the HandRange objects are just a thin front-end for therange-string parser. Ultimately the hope is to add Cython backed sampling,enumeration, and HandRange vs. HandRange equity calculation.Equity------eval7 also provides equity calculation functions: ``py_hand_vs_range_exact``,``py_hand_vs_range_monte_carlo`` and ``py_all_hands_vs_range``. These don't yetsupport weighted ranges and could probably benefit from optimization.  See``equity.pyx`` for documentaiton.</longdescription>
</pkgmetadata>