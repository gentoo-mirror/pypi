<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>djangorestframework-auth0=====___This library let you to **authenticate** an specific user on DRF based on the JWT Token returned by Auth0 Javascript libraries.![Logo](docs/logo.png)Installation-----------1. Using `pip` to install current release:``` shellpip install rest_framework_auth0```2. Using `pip` to install development version:``` shellpip install git+https://github.com/mcueto/djangorestframework-auth0/```Quick start-----------1. Make sure `django.contrib.auth` in on INSTALLED_APPS setting, otherwise add it by your own:``` pythonINSTALLED_APPS = [    ...    'django.contrib.auth',    ...]```This will allow us to login as an specific user as well as auto-creating users when they don't exist1. Add `rest_framework_auth0` to your `INSTALLED_APPS` setting:``` pythonINSTALLED_APPS = [    ...,    'rest_framework_auth0',]```2. Add `Auth0JSONWebTokenAuthentication` in your DEFAULT_AUTHENTICATION_CLASSES located at settings.py from your project:``` pythonREST_FRAMEWORK = {    ...,    'DEFAULT_AUTHENTICATION_CLASSES': (        ...,        'rest_framework_auth0.authentication.Auth0JSONWebTokenAuthentication',    ),}```3. Add your `CLIENTS` &amp; `MANAGEMENT_API` settings in your settings.py file:```python# Import cryptography librariesfrom cryptography.x509 import load_pem_x509_certificatefrom cryptography.hazmat.backends import default_backend# Read the your Auth0 client PEM certificatecertificate_text = open('rsa_certificates/certificate.pem', 'rb').read()certificate = load_pem_x509_certificate(certificate_text, default_backend())# Get your PEM certificate public_keycertificate_publickey = certificate.public_key()### AUTH0 SETTINGSAUTH0 = {  'CLIENTS': {      'default': {          'AUTH0_CLIENT_ID': '&lt;YOUR_AUTH0_CLIENT_ID&gt;',          'AUTH0_AUDIENCE': '&lt;YOUR_AUTH0_CLIENT_AUDIENCE&gt;',          'AUTH0_ALGORITHM': 'RS256',  # default used in Auth0 apps          'PUBLIC_KEY': certificate_publickey',      }  },  # Management API - For roles and permissions validation  'MANAGEMENT_API': {      'AUTH0_DOMAIN': '&lt;YOUR_AUTH0_DOMAIN&gt;',      'AUTH0_CLIENT_ID': '&lt;YOUR_AUTH0_M2M_API_MANAGEMENT_CLIENT_ID&gt;',      'AUTH0_CLIENT_SECRET': '&lt;YOUR_AUTH0_M2M_API_MANAGEMENT_CLIENT_SECRET&gt;'  },}```4. Add the `Authorization` Header to all of your REST API request, prefixing `Bearer` to your token(default in common REST clients &amp; Postman):```Authorization: Bearer &lt;AUTH0_GIVEN_TOKEN&gt;```5. That's it, now only your Auth0 users can request data to your DRF endpoints```NOTE: In order to get the token authentication, the 'django.contrib.auth' app models migrations must be applied(python manage.py migrate).```Use cases------------ [Use cases can be found here](docs/use_cases.md)Sample Project-----------A sample project can be found [here][sample][sample]: https://github.com/mcueto/djangorestframework-auth0_sample</longdescription>
</pkgmetadata>