<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>bash for python===============A library that enables easy running and concatenation of bash commands inpythonInstallation------------Install using pip::    pip install bashUsage-----Run commands as you would in bash::    &gt;&gt;&gt; from bash import bash    &gt;&gt;&gt; bash('ls . | grep &quot;.pyc&quot;')    bash.pyc    tests.pycChain commands for the same effect::    &gt;&gt;&gt; bash('ls . ').bash('grep &quot;.pyc&quot;')    bash.pyc    tests.pycThis becomes increasingly useful if you later need to reuse one such command::    &gt;&gt;&gt; b = bash('ls . ')    &gt;&gt;&gt; b.bash('grep &quot;.pyc&quot;')    bash.pyc    tests.pyc    &gt;&gt;&gt; b.bash('grep &quot;.py$')    bash.py    tests.pyAccess stdout and stderr attributes::    &gt;&gt;&gt; b = bash('ls tests.py')    &gt;&gt;&gt; b.stdout    'tests.py\n'    &gt;&gt;&gt; b.stderr    ''Get the return code generated by a command::    &gt;&gt;&gt; b = bash('ls tests.py')    &gt;&gt;&gt; b    tests.py    &gt;&gt;&gt; b.code    0To get a stripped, unicode string version of bash.stdout call value()::    &gt;&gt;&gt; b = bash('ls tests.py').value()    u'tests.py'Motivation----------I found that I was often having to write the same lines of code to handlerunning bash commands from python.This provides a pip-installable, tested shortcut to writing::    from subprocess import PIPE, Popen    p = Popen(cmd, shell=True, stdout=PIPE, stdin=PIPE, stderr=PIPE)    output, err = p.communicate()Warning-------Please note that this library uses ``shell=True`` under the hood. This meansthat this library is **NOT** suitable for running untrusted commands.`(See explanation) &lt;https://docs.python.org/2/library/subprocess.html#frequently-used-arguments&gt;`_Running the tests-----------------Simply use a test runner.    $ nosetestsSupport + Contributing----------------------Feel free to make pull requests, or report issues via the repo:https://github.com/alexcouper/bash</longdescription>
</pkgmetadata>