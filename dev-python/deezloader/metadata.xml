<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># deezloaderThis project has been created to download songs, albums or playlists with Spotify or Deezer link from Deezer.# Disclaimer- I am not responsible for the usage of this program by other people.- I do not recommend you doing this illegally or against Deezer's terms of service.- This project is licensed under [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/)* ### PYTHON VERSION SUPPORTED ###![Python &gt;= 3.9](https://img.shields.io/badge/python-v%3E=3.9-blue)* ### OS Supported ###![Linux Support](https://img.shields.io/badge/Linux-Support-brightgreen.svg)![macOS Support](https://img.shields.io/badge/macOS-Support-brightgreen.svg)![Windows Support](https://img.shields.io/badge/Windows-Support-brightgreen.svg)* ### Installation ###```bashpip3 install deezloader```# SETTING[deez_login]mail = #YOUR DEEZER EMAILpassword = #YOUR DEEZER PASSWORDtoken = #YOUR ARL TOKEN GOT FROM DEEZER### Setting disclaimer- Write that content inside .deez_settings.ini file for using deez-dw.py# API AvalaibleFinally **deez-web.py** avalaible ;)```bashdeez-web.py```### API disclaimer- Open your browser at http://127.0.0.1:8000/docs# CLI interfaceFinally **deez-dw.py** avalaible ;)```bashdeez-dw.py -h```usage: deez-dw.py [-h] [-l LINK] [-s SONG] [-a ARTIST] [-o OUTPUT][-q {FLAC,MP3_320,MP3_128}] [-rq] [-rd][-g] [-z] [-sa {0,1,2}]## OPTIONS-h, --help            show this help message and exit-l LINK, --link LINK  Deezer or Spotify link for download-s SONG, --song SONG  song name-a ARTIST, --artist ARTISTartist song-o OUTPUT, --output OUTPUTOutput folder-q {FLAC,MP3_320,MP3_128}, --quality {FLAC,MP3_320,MP3_128}-rq, --recursive_qualityIf choosen quality doesn't exist download with best possiblequality (True or False)-rd, --recursive_downloadIf the song has already downloaded skip (True or False)-g, --not_gui         Show the little not_gui (True or False)-z, --zip             If is an album or playlist link create a zip archive (True orFalse)-sa {0,1,2}, --save {0,1,2}# Library### Initialize```pythonfrom deezloader import Login# if you want login with arl, IT EXPIRESdownloa = Login(arl = my_arl_token)# if you want to login through your email and password, SHOULD LAST FOREVERdownloa = Login(email = my_deezer_email,password = my_deezer_password)```### Download songDownload track by Spotify link```pythondownloa.download_trackspo(#YOUR SPOTIFY TRACK LINK,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,method_save = #choose between 0, 1 or 2)```Download track by Deezer link```pythondownloa.download_trackdee(#YOUR DEEZER TRACK LINK,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,method_save = #choose between 0, 1 or 2)```### Download albumDownload album by Spotify link```pythondownloa.download_albumspo(#YOUR SPOTIFY ALBUM LINK,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,make_zip = #True or False,method_save = #choose between 0, 1 or 2)```Download album from Deezer link```pythondownloa.download_albumdee(#YOUR DEEZER ALBUM LINK,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,make_zip = #True or False,method_save = #choose between 0, 1 or 2)```### Download playlistDownload playlist by Spotify link```pythondownloa.download_playlistspo(#YOUR SPOTIFY PLAYLIST LINK,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,make_zip = #True or False,method_save = #choose between 0, 1 or 2)```Download playlist from Deezer link```pythondownloa.download_playlistdee(#YOUR DEEZER PLAYLIST LINK,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,make_zip = #True or False,method_save = #choose between 0, 1 or 2```### Download nameDownload by name```pythondownloa.download_name(artist = #ARTIST NAME,song = #ARTIST SONG NAME,output_dir = #The output dir for the download,quality_download = #Choose between FLAC, MP3_320, MP3_128,recursive_quality = #True or False,recursive_download = #True or False,not_interface = #True or False,method_save = #choose between 0, 1 or 2)```# DONATIONIF YOU ARE POOR DON'T DONATE I AM ALSO POOR, IF YOU ARE RICH JUST PRESS [HERE](https://www.paypal.com/paypalme/an0nimia) THANKS YOU :)# HEY YOUUUUToo Lazy to finish the shitty documentation with VSCode you should be able discover the other params, methods and propieties I will try to do something more professional, MAYBE :)</longdescription>
</pkgmetadata>