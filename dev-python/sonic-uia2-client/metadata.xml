<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;80px&quot; src=&quot;https://raw.githubusercontent.com/SonicCloudOrg/sonic-server/main/logo.png&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;üéâThe Python Client of appium-uiautomator2-server&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;span&gt;English |&lt;/span&gt;  &lt;a href=&quot;https://github.com/SonicCloudOrg/sonic-uiautomator2-python-client/blob/main/README_CN.md&quot;&gt;       ÁÆÄ‰Ωì‰∏≠Êñá  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;#&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/v/sonic-uia2-client&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;#&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/dm/sonic-uia2-client&quot;&gt;  &lt;/a&gt;&lt;/p&gt;### BackgroundAt present, only one project [appium-uiautomator2-client](https://github.com/xsoloking/appium-uiautomator2-client) that bypasses Appium Server and interacts with appium-uiautomator2-server alone is seen on Github for Python, but it is not compatible The baseUrl of the latest appium-uiautomator2-server v5.x API has not been published on pypi. I tried to contact the author but there was no reply, so I decided to write a maintenance. For the Java version, you can see the [sonic-driver-core](https://github.com/SonicCloudOrg/sonic-driver-core) maintained by our organization.### How to use‚û°Ô∏è[More Document](https://sonic-cloud.cn/supc/re-supc.html)1. Install uiautomator2 server&gt; You should install `sonic-appium-uiautomator2-server.apk` and `sonic-appium-uiautomator2-server-test.apk` in [Here](https://github.com/SonicCloudOrg/sonic-agent/tree/main/plugins).&gt; &gt; Alternatively, you can build your own [Here](https://github.com/SonicCloudOrg/sonic-appium-uiautomator2-server)2. Launch uiautomator2 server```bashadb shell am instrument -w io.appium.uiautomator2.server.test/androidx.test.runner.AndroidJUnitRunner```3. Forward ports```bashadb forward tcp:6790 tcp:6790```4. Install Depends```bashpip install -U sonic-uia2-client```5. Write your script```pythonfrom common.models import AndroidSelectorfrom uia2.driver import AndroidDriverimport osclass TestDriver:    def __init__(self):        self.uia_url = &quot;http://localhost:6790&quot;        self.adb_serial_num = &quot;DAISKnlasido&quot;        self.package_name = &quot;com.android.settings&quot;    def test_demo(self):        # launch App        os.system(            &quot;adb -s {} shell monkey -p {} -c android.intent.category.LAUNCHER 1&quot;.format(self.adb_serial_num,                                                                                        self.package_name))                # connect remote uia2 server        driver = AndroidDriver(self.uia_url)        p = driver.get_page_source()        print(p)        e = driver.find_element(AndroidSelector.XPATH, &quot;//*[@text='ËÆæÁΩÆ']&quot;)        if e is not None:            print(e.get_text())            e.send_keys(&quot;Hello&quot;)```### Thanks- [appium/appium-uiautomator2-server](https://github.com/appium/appium-uiautomator2-server)- [xsoloking/appium-uiautomator2-client](https://github.com/xsoloking/appium-uiautomator2-client)### LICENSE[LICENSE](LICENSE)</longdescription>
</pkgmetadata>