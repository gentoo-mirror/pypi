<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dj-shop-cartA simple and flexible cart manager for your django projects.[![pypi](https://badge.fury.io/py/dj-shop-cart.svg)](https://pypi.org/project/dj-shop-cart/)[![python](https://img.shields.io/pypi/pyversions/dj-shop-cart)](https://github.com/Tobi-De/dj-shop-cart)[![django](https://img.shields.io/pypi/djversions/dj-shop-cart)](https://github.com/Tobi-De/dj-shop-cart)[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg?)](https://github.com/Tobi-De/dj-shop-cart/blob/master/LICENSE)[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)âœ¨ðŸ“šâœ¨ [Read the full documentation](https://tobi-de.github.io/dj-shop-cart/)## Features- Add, remove, decrement and clear items from cart- Authenticated users cart can be saved to database- Write custom methods to easily hook into the items add / remove flow- Custom **get_price** method to ensure that the cart always have an up-to-date products price- Each item in the cart hold a reference to the associated product- Metadata data can be attached to cart items- Supports specification of product variation details- Available context processor for easy access to the user cart in all your django templates- Swappable backend storage, with session and database provided by default## InstallationInstall **dj-shop-cart** with pip or poetry.```bash  pip install dj-shop-cart```## Quickstart```python3# settings.pyTEMPLATES = [    {        &quot;OPTIONS&quot;: {            &quot;context_processors&quot;: [                ...,                &quot;dj_shop_cart.context_processors.cart&quot;, # If you want access to the cart instance in all templates            ],        },    }]# models.pyfrom django.db import modelsfrom dj_shop_cart.cart import CartItemfrom dj_shop_cart.protocols import Numericclass Product(models.Model):    ...    def get_price(self, item:CartItem) -&gt; Numeric:        &quot;&quot;&quot;The only requirements of the dj_shop_cart package apart from the fact that the products you add        to the cart must be instances of django based models. You can use a different name for this method        but be sure to update the corresponding setting (see Configuration). Even if you change the name the        function signature should match this one.        &quot;&quot;&quot;# views.pyfrom dj_shop_cart.cart import get_cart_classfrom django.http import HttpRequestfrom django.views.decorators.http import require_POSTfrom django.shortcuts import get_object_or_404from .models import ProductCart = get_cart_class()@require_POSTdef add_product(request: HttpRequest, product_id:int):    product = get_object_or_404(Product.objects.all(), pk=product_id)    quantity = int(request.POST.get(&quot;quantity&quot;))    cart = Cart.new(request)    cart.add(product, quantity=quantity)    ...@require_POSTdef remove_product(request: HttpRequest):    item_id = request.POST.get(&quot;item_id&quot;)    quantity = int(request.POST.get(&quot;quantity&quot;))    cart = Cart.new(request)    cart.remove(item_id=item_id, quantity=quantity)    ...@require_POSTdef empty_cart(request: HttpRequest):    Cart.new(request).empty()    ...```## Used ByThis project is used by the following companies:- [FÃªmy bien Ãªtre](https://www.femybienetre.com/)## DevelopmentPoetry is required (not really, you can set up the environment however you want and install the requirementsmanually) to set up a virtualenv, install it then run the following:```shpoetry installpre-commit install --install-hooks```Tests can then be run quickly in that environment:```shpytest```## FeedbackIf you have any feedback, please reach out to me at tobidegnon@proton.me.## CreditsThanks to [Jetbrains](https://jb.gg/OpenSource) for providing an Open Source license for this project.&lt;img height=&quot;200&quot; src=&quot;https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.png&quot; alt=&quot;JetBrains Logo (Main) logo.&quot;&gt;</longdescription>
</pkgmetadata>