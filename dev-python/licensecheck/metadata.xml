<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![GitHub top language](https://img.shields.io/github/languages/top/FHPythonUtils/LicenseCheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](../../)[![Issues](https://img.shields.io/github/issues/FHPythonUtils/LicenseCheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](../../issues)[![License](https://img.shields.io/github/license/FHPythonUtils/LicenseCheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](/LICENSE.md)[![Commit activity](https://img.shields.io/github/commit-activity/m/FHPythonUtils/LicenseCheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](../../commits/master)[![Last commit](https://img.shields.io/github/last-commit/FHPythonUtils/LicenseCheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](../../commits/master)[![PyPI Downloads](https://img.shields.io/pypi/dm/licensecheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](https://pypistats.org/packages/licensecheck)[![PyPI Total Downloads](https://img.shields.io/badge/dynamic/json?style=for-the-badge&amp;label=total%20downloads&amp;query=%24.total_downloads&amp;url=https%3A%2F%2Fapi%2Epepy%2Etech%2Fapi%2Fv2%2Fprojects%2Flicensecheck)](https://pepy.tech/project/licensecheck)[![PyPI Version](https://img.shields.io/pypi/v/licensecheck.svg?style=for-the-badge&amp;cacheSeconds=28800)](https://pypi.org/project/licensecheck)&lt;!-- omit in toc --&gt;# LicenseCheck&lt;img src=&quot;readme-assets/icons/name.png&quot; alt=&quot;Project Icon&quot; width=&quot;750&quot;&gt;NOTICE: I am not a lawyer (IANAL)**Any output provided by this software is for general informational purposes only andshould not be construed as legal advice. I am not a lawyer and there is no guarantee that theinformation provided here is complete or correct. Any reliance on the information provided by thissoftware is at your own risk.**See also: https://en.wikipedia.org/wiki/IANAL, [project license (MIT)](/LICENSE.md)Output the licences used by dependencies and check if these are compatible withthe project license&lt;!-- omit in toc --&gt;## Table of Contents- [Examples from the command-line](#examples-from-the-command-line)- [Using requirements](#using-requirements)- [Failing on packages under MIT license](#failing-on-packages-under-mit-license)- [Custom requirements.txt in json format](#custom-requirementstxt-in-json-format)- [Poetry with dev requirements](#poetry-with-dev-requirements)- [PEP 631 (with or without optional dependencies)](#pep-631-with-or-without-optional-dependencies)- [Help](#help)- [Configuration Example](#configuration-example)- [Example 1: pyproject.toml](#example-1-pyprojecttoml)- [Example 2: licensecheck.json](#example-2-licensecheckjson)- [Example 3: licensecheck.ini](#example-3-licensecheckini)- [Documentation](#documentation)- [Install With PIP](#install-with-pip)- [Language information](#language-information)- [Built for](#built-for)- [Install Python on Windows](#install-python-on-windows)- [Chocolatey](#chocolatey)- [Windows - Python.org](#windows---pythonorg)- [Install Python on Linux](#install-python-on-linux)- [Apt](#apt)- [Dnf](#dnf)- [Install Python on MacOS](#install-python-on-macos)- [Homebrew](#homebrew)- [MacOS - Python.org](#macos---pythonorg)- [How to run](#how-to-run)- [Windows](#windows)- [Linux/ MacOS](#linux-macos)- [Building](#building)- [Testing](#testing)- [Download Project](#download-project)- [Clone](#clone)- [Using The Command Line](#using-the-command-line)- [Using GitHub Desktop](#using-github-desktop)- [Download Zip File](#download-zip-file)- [Community Files](#community-files)- [Licence](#licence)- [Changelog](#changelog)- [Code of Conduct](#code-of-conduct)- [Contributing](#contributing)- [Security](#security)- [Support](#support)- [Rationale](#rationale)## Examples from the command-lineSee below for the output if you run `licensecheck` in this directory```txt&gt;&gt; licensecheck                             list of packages┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓┃ Compatible ┃ Package             ┃ License(s)                           ┃┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩│ ✔          │ urllib3             │ MIT License                          ││ ✔          │ types-setuptools    │ Apache Software License              ││ ✔          │ tomli               │ MIT License                          ││ ✔          │ idna                │ BSD License                          ││ ✔          │ Pygments            │ BSD License                          ││ ✔          │ certifi             │ Mozilla Public License 2.0 (MPL 2.0) ││ ✔          │ fhconfparser        │ MIT License                          ││ ✔          │ rich                │ MIT License                          ││ ✔          │ charset-normalizer  │ MIT License                          ││ ✔          │ requirements-parser │ Apache Software License              ││ ✔          │ commonmark          │ BSD License                          ││ ✔          │ requests            │ Apache Software License              ││ ✔          │ attrs               │ MIT License                          │└────────────┴─────────────────────┴──────────────────────────────────────┘```### Using requirements```txt&gt;&gt; licensecheck -u requirements                       list of packages┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┓┃ Compatible ┃ Package             ┃ License(s)              ┃┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━┩│ ✔          │ requirements-parser │ Apache Software License ││ ✔          │ requests            │ Apache Software License ││ ✔          │ rich                │ MIT License             ││ ✔          │ fhconfparser        │ MIT License             ││ ✔          │ tomli               │ MIT License             │└────────────┴─────────────────────┴─────────────────────────┘```### Failing on packages under MIT license```txt&gt;&gt; licensecheck --fail-licenses mit                             list of packages┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓┃ Compatible ┃ Package             ┃ License(s)                           ┃┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩│ ✔          │ idna                │ BSD License                          ││ ✔          │ certifi             │ Mozilla Public License 2.0 (MPL 2.0) ││ ✔          │ Pygments            │ BSD License                          ││ ✔          │ commonmark          │ BSD License                          ││ ✔          │ requirements-parser │ Apache Software License              ││ ✖          │ fhconfparser        │ MIT License                          ││ ✖          │ tomli               │ MIT License                          ││ ✔          │ types-setuptools    │ Apache Software License              ││ ✖          │ attrs               │ MIT License                          ││ ✖          │ charset-normalizer  │ MIT License                          ││ ✖          │ rich                │ MIT License                          ││ ✖          │ urllib3             │ MIT License                          ││ ✔          │ requests            │ Apache Software License              │└────────────┴─────────────────────┴──────────────────────────────────────┘```### Custom requirements.txt in json formatAdd optional path to requirements.txt as outlined in https://github.com/FHPythonUtils/LicenseCheck/issues/9#issuecomment-898878228. Eg. `licensecheck --using requirements:c:/path/to/reqs.txt;path/to/other/reqs.txt````txt&gt;&gt; licensecheck -u 'requirements:requirements.txt;requirements_optional.txt' -f json{&quot;info&quot;: {&quot;program&quot;: &quot;licensecheck&quot;,&quot;version&quot;: &quot;2022.2.0&quot;},&quot;packages&quot;: [{&quot;name&quot;: &quot;requests&quot;,&quot;version&quot;: &quot;2.28.1&quot;,&quot;namever&quot;: &quot;requests-2.28.1&quot;,&quot;size&quot;: 180253,&quot;homePage&quot;: &quot;https://requests.readthedocs.io&quot;,&quot;author&quot;: &quot;Kenneth Reitz&quot;,&quot;license&quot;: &quot;Apache Software License&quot;,&quot;licenseCompat&quot;: true,&quot;errorCode&quot;: 0},{&quot;name&quot;: &quot;rich&quot;,&quot;version&quot;: &quot;12.6.0&quot;,&quot;namever&quot;: &quot;rich-12.6.0&quot;,&quot;size&quot;: 905975,&quot;homePage&quot;: &quot;https://github.com/willmcgugan/rich&quot;,&quot;author&quot;: &quot;Will McGugan&quot;,&quot;license&quot;: &quot;MIT License&quot;,&quot;licenseCompat&quot;: true,&quot;errorCode&quot;: 0},{&quot;name&quot;: &quot;tomli&quot;,&quot;version&quot;: &quot;2.0.1&quot;,&quot;namever&quot;: &quot;tomli-2.0.1&quot;,&quot;size&quot;: 26252,&quot;homePage&quot;: &quot;UNKNOWN&quot;,&quot;author&quot;: &quot;UNKNOWN&quot;,&quot;license&quot;: &quot;MIT License&quot;,&quot;licenseCompat&quot;: true,&quot;errorCode&quot;: 0},{&quot;name&quot;: &quot;requirements-parser&quot;,&quot;version&quot;: &quot;0.5.0&quot;,&quot;namever&quot;: &quot;requirements-parser-0.5.0&quot;,&quot;size&quot;: 11523,&quot;homePage&quot;: &quot;https://github.com/madpah/requirements-parser&quot;,&quot;author&quot;: &quot;Paul Horton&quot;,&quot;license&quot;: &quot;Apache Software License&quot;,&quot;licenseCompat&quot;: true,&quot;errorCode&quot;: 0},{&quot;name&quot;: &quot;fhconfparser&quot;,&quot;version&quot;: &quot;2022&quot;,&quot;namever&quot;: &quot;fhconfparser-2022&quot;,&quot;size&quot;: 14586,&quot;homePage&quot;: &quot;https://github.com/FHPythonUtils/FHConfParser&quot;,&quot;author&quot;: &quot;FredHappyface&quot;,&quot;license&quot;: &quot;MIT License&quot;,&quot;licenseCompat&quot;: true,&quot;errorCode&quot;: 0}]}```### Poetry with dev requirementsAdd `-u poetry:dev` to command-line to include dev packages (excluded by default)```txt&gt;&gt; licensecheck -u poetry:dev                                  list of packages┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓┃ Compatible ┃ Package             ┃ License(s)                                    ┃┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩│ ✔          │ astroid             │ GNU Lesser General Public License v2 (LGPLv2) ││ ✔          │ rich                │ MIT License                                   ││ ✔          │ types-setuptools    │ Apache Software License                       ││ ✔          │ fhconfparser        │ MIT License                                   ││ ✔          │ typed-ast           │ Apache License 2.0                            ││ ✔          │ py                  │ MIT License                                   ││ ✔          │ mccabe              │ MIT License                                   ││ ✔          │ tomlkit             │ MIT License                                   ││ ✔          │ coverage            │ Apache Software License                       ││ ✔          │ Pygments            │ BSD License                                   ││ ✔          │ requests            │ Apache Software License                       ││ ✔          │ requirements-parser │ Apache Software License                       ││ ✔          │ tomli               │ MIT License                                   ││ ✔          │ pluggy              │ MIT License                                   ││ ✔          │ isort               │ MIT License                                   ││ ✔          │ urllib3             │ MIT License                                   ││ ✖          │ pylint              │ GNU General Public License v2 (GPLv2)         ││ ✔          │ iniconfig           │ MIT License                                   ││ ✔          │ wrapt               │ BSD License                                   ││ ✔          │ pytest              │ MIT License                                   ││ ✔          │ pip                 │ MIT License                                   ││ ✔          │ charset-normalizer  │ MIT License                                   ││ ✔          │ packaging           │ Apache Software License, BSD License          ││ ✔          │ commonmark          │ BSD License                                   ││ ✔          │ lazy-object-proxy   │ BSD License                                   ││ ✔          │ platformdirs        │ MIT License                                   ││ ✔          │ certifi             │ Mozilla Public License 2.0 (MPL 2.0)          ││ ✔          │ colorama            │ BSD License                                   ││ ✔          │ attrs               │ MIT License                                   ││ ✔          │ dill                │ BSD License                                   ││ ✔          │ idna                │ BSD License                                   ││ ✔          │ importlib-resources │ Apache Software License                       ││ ✔          │ handsdown           │ MIT License                                   ││ ✔          │ pyparsing           │ MIT License                                   │└────────────┴─────────────────────┴───────────────────────────────────────────────┘```### PEP 631 (with or without optional dependencies)PEP 631 mode enables support for reading dependency information from `pyproject.toml` in the format specified by PEP 631.This format is used by build systems such as hatch.You can enable this mode by using `-u PEP631`, and include the optional dependencies of extras by using `-u PEP631:tests;dev;docs`,but it's recommended to use this instead:```toml[tool.licensecheck]using = &quot;PEP631&quot;# OR[tool.licensecheck]using = &quot;PEP631:tests;dev;docs&quot;```By default no optional dependencies are included.## Help```txtusage: __main__.py [-h] [--format FORMAT] [--file FILE] [--using USING]                   [--ignore-packages IGNORE_PACKAGES [IGNORE_PACKAGES ...]]                   [--fail-packages FAIL_PACKAGES [FAIL_PACKAGES ...]]                   [--ignore-licenses IGNORE_LICENSES [IGNORE_LICENSES ...]]                   [--fail-licenses FAIL_LICENSES [FAIL_LICENSES ...]] [--zero]Output the licenses used by dependencies and check if these are compatible with the project license.options:  -h, --help            show this help message and exit  --format FORMAT, -f FORMAT                        Output format. one of: json, markdown, csv, ansi, simple. default=simple  --file FILE, -o FILE  Filename to write to (omit for stdout)  --using USING, -u USING                        Environment to use e.g. requirements.txt. one of: requirements, poetry, PEP631. default=poetry  --ignore-packages IGNORE_PACKAGES [IGNORE_PACKAGES ...]                        a list of packages to ignore (compat=True)  --fail-packages FAIL_PACKAGES [FAIL_PACKAGES ...]                        a list of packages to fail (compat=False)  --ignore-licenses IGNORE_LICENSES [IGNORE_LICENSES ...]                        a list of licenses to ignore (skipped, compat may still be False)  --fail-licenses FAIL_LICENSES [FAIL_LICENSES ...]                        a list of licenses to fail (compat=False)  --skip-dependencies SKIP_DEPENDENCIES [SKIP_DEPENDENCIES ...]a list of dependencies to skip (compat=False)  --zero, -0            Return non zero exit code if an incompatible license is found```You can also import this into your own project and use any of the functionsin the DOCS## Configuration ExampleConfiguration files are parsed in the following order: `pyproject.toml`,`setup.cfg`, `licensecheck.toml`, `licensecheck.json`, `licensecheck.ini`,`~/licensecheck.toml`, `~/licensecheck.json`, `~/licensecheck.ini`- ⚠ All config files are parsed, however configuration defined in previous files takes precedentAdd optional path to requirements.txt as outlined inhttps://github.com/FHPythonUtils/LicenseCheck/issues/9#issuecomment-898878228for example: `licensecheck --using requirements:c:/path/to/reqs.txt;path/to/other/reqs.txt`### Example 1: pyproject.tomlThe following config is equivalent to `licensecheck -u 'requirements:requirements.txt;requirements_optional.txt' -f json````toml[tool.licensecheck]using = &quot;requirements:requirements.txt;requirements_optional.txt&quot;format = &quot;json&quot;```### Example 2: licensecheck.jsonThe following config is equivalent to `licensecheck -u 'requirements:requirements.txt;requirements_optional.txt' -f json````json{&quot;tool&quot;: {&quot;licensecheck&quot;: {&quot;using&quot;: &quot;requirements:requirements.txt;requirements_optional.txt&quot;,&quot;format&quot;: &quot;json&quot;}}}```### Example 3: licensecheck.iniThe following config is equivalent to `licensecheck -u 'requirements:requirements.txt;requirements_optional.txt' -f json````ini[licensecheck]using = &quot;requirements:requirements.txt;requirements_optional.txt&quot;format = &quot;json&quot;```## DocumentationA high-level overview of how the documentation is organized organized will help you knowwhere to look for certain things:&lt;!--- [Tutorials](/documentation/tutorials) take you by the hand through a series of steps to get  started using the software. Start here if you’re new.--&gt;- The [Technical Reference](/documentation/reference) documents APIs and other aspects of the  machinery. This documentation describes how to use the classes and functions at a lower level  and assume that you have a good high-level understanding of the software.&lt;!--- The [Help](/documentation/help) guide provides a starting point and outlines common issues that you  may have.--&gt;## Install With PIP```pythonpip install licensecheck```Head to https://pypi.org/project/licensecheck/ for more info## Language information### Built forThis program has been written for Python versions 3.8 - 3.11 and has been tested with both 3.8 and3.11## Install Python on Windows### Chocolatey```powershellchoco install python```### Windows - Python.orgTo install Python, go to https://www.python.org/downloads/windows/ and download the latestversion.## Install Python on Linux### Apt```bashsudo apt install python3.x```### Dnf```bashsudo dnf install python3.x```## Install Python on MacOS### Homebrew```bashbrew install python@3.x```### MacOS - Python.orgTo install Python, go to https://www.python.org/downloads/macos/ and download the latestversion.## How to run### Windows- Module`py -3.x -m [module]` or `[module]` (if module installs a script)- File`py -3.x [file]` or `./[file]`### Linux/ MacOS- Module`python3.x -m [module]` or `[module]` (if module installs a script)- File`python3.x [file]` or `./[file]`## BuildingThis project uses https://github.com/FHPythonUtils/FHMake to automate most of the building. Thiscommand generates the documentation, updates the requirements.txt and builds the library artefactsNote the functionality provided by fhmake can be approximated by the following```shhandsdown  --cleanup -o documentation/referencepoetry export -f requirements.txt --output requirements.txtpoetry export -f requirements.txt --with dev --output requirements_optional.txtpoetry build````fhmake audit` can be run to perform additional checks## TestingFor testing with the version of python used by poetry use```shpoetry run pytest```Alternatively use `tox` to run tests over python 3.8 - 3.11```shtox```## Download Project### Clone#### Using The Command Line1. Press the Clone or download button in the top right2. Copy the URL (link)3. Open the command line and change directory to where you wish toclone to4. Type 'git clone' followed by URL in step 2```bashgit clone https://github.com/FHPythonUtils/LicenseCheck```More information can be found athttps://help.github.com/en/articles/cloning-a-repository#### Using GitHub Desktop1. Press the Clone or download button in the top right2. Click open in desktop3. Choose the path for where you want and click CloneMore information can be found athttps://help.github.com/en/desktop/contributing-to-projects/cloning-a-repository-from-github-to-github-desktop### Download Zip File1. Download this GitHub repository2. Extract the zip archive3. Copy/ move to the desired location## Community Files### LicenceMIT LicenseCopyright (c) FredHappyface(See the [LICENSE](/LICENSE.md) for more information.)### ChangelogSee the [Changelog](/CHANGELOG.md) for more information.### Code of ConductOnline communities include people from many backgrounds. The *Project*contributors are committed to providing a friendly, safe and welcomingenvironment for all. Please see the[Code of Conduct](https://github.com/FHPythonUtils/.github/blob/master/CODE_OF_CONDUCT.md) for more information.### ContributingContributions are welcome, please see the[Contributing Guidelines](https://github.com/FHPythonUtils/.github/blob/master/CONTRIBUTING.md)for more information.### SecurityThank you for improving the security of the project, please see the[Security Policy](https://github.com/FHPythonUtils/.github/blob/master/SECURITY.md)for more information.### SupportThank you for using this project, I hope it is of use to you. Please be aware thatthose involved with the project often do so for fun along with other commitments(such as work, family, etc). Please see the[Support Policy](https://github.com/FHPythonUtils/.github/blob/master/SUPPORT.md)for more information.### RationaleThe rationale acts as a guide to various processes regarding projects such asthe versioning scheme and the programming styles used. Please see the[Rationale](https://github.com/FHPythonUtils/.github/blob/master/RATIONALE.md)for more information.</longdescription>
</pkgmetadata>