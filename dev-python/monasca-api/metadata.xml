<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Team and repository tags========================.. image:: https://governance.openstack.org/tc/badges/monasca-api.svg    :target: https://governance.openstack.org/tc/reference/tags/index.html.. Change things from this point onOverview========``monasca-api`` is a RESTful API server that is designed with a `layeredarchitecture`_.Documentation-------------The full API Specification can be found in `docs/monasca-api-spec.md`_Python Monasca API Implementation~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~To install the python api implementation, git clone the source and runthe following command:::   $ sudo python setup.py installIf it installs successfully, you will need to make changes to thefollowing two files to reflect your system settings, especially wherekafka server is located:::   /etc/monasca/api-config.ini   /etc/monasca/monasca-api.conf   /etc/monasca/api-logging.confOnce the configuration files are modified to match your environment, youcan start up the server by following the following instructions.To start the server, run the following command:::   Running the server in foreground mode   $ gunicorn -k eventlet --worker-connections=2000 --backlog=1000 --paste /etc/monasca/api-config.ini   Running the server as daemons   $ gunicorn -k eventlet --worker-connections=2000 --backlog=1000 --paste /etc/monasca/api-config.ini -DTo check if the code follows python coding style, run the followingcommand from the root directory of this project::   $ tox -e pep8To run all the unit test cases, run the following command from the rootdirectory of this project::   $ tox -e py36Start the Server - for Apache~~~~~~~~~~~~~~~~~~~~~~~~~~~~~To start the server using Apache: create a modwsgi file, create amodwsgi configuration file, and enable the wsgi module in Apache.The modwsgi configuration file may look something like this, and thesite will need to be enabled:.. code:: apache       Listen 8070       &lt;VirtualHost *:8070&gt;           WSGIDaemonProcess monasca-api processes=4 threads=1 socket-timeout=120 user=mon-api group=monasca python-path=/usr/local/lib/python2.7/site-packages           WSGIProcessGroup monasca-api           WSGIApplicationGroup monasca-api           WSGIScriptAlias / /usr/local/lib/python2.7/site-packages/monasca_api/api/wsgi/monasca_api.py           WSGIPassAuthorization On           LogLevel info           ErrorLog /var/log/monasca-api/wsgi.log           CustomLog /var/log/monasca-api/wsgi-access.log combined           &lt;Directory /usr/local/lib/python2.7/site-packages/monasca_api&gt;             Require all granted           &lt;/Directory&gt;           SetEnv no-gzip 1       &lt;/VirtualHost&gt;The wsgi file may look something like this:.. code:: py       from monasca_api.api import server       application = server.get_wsgi_app(config_base_path='/etc/monasca')Java Implementation~~~~~~~~~~~~~~~~~~~Details on usage can be found `here`_WARNING: The Java implementation of Monasca API is DEPRECATED and willbe removed in future release.License=======Copyright (c) 2014 Hewlett-Packard Development Company, L.P.Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you maynot use this file except in compliance with the License. You may obtaina copy of the License at::   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License... _layered architecture: https://en.wikipedia.org/wiki/Multilayered_architecture.. _docs/monasca-api-spec.md: docs/monasca-api-spec.md.. _here: /docs/java.md</longdescription>
</pkgmetadata>