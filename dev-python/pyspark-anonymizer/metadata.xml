<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyspark-anonymizerPython library which makes it possible to dynamically mask/anonymize data using JSON string or python dict rules in a PySpark environment.## Installing```shellpip install pyspark-anonymizer```## Usage### Before Masking```pythonfrom pyspark.sql import SparkSessionspark = SparkSession.builder.appName(&quot;your_app_name&quot;).getOrCreate()df = spark.read.parquet(&quot;s3://amazon-reviews-pds/parquet/product_category=Electronics/&quot;)df.limit(5).toPandas()```&lt;div&gt;&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;marketplace&lt;/th&gt;      &lt;th&gt;customer_id&lt;/th&gt;      &lt;th&gt;review_id&lt;/th&gt;      &lt;th&gt;product_id&lt;/th&gt;      &lt;th&gt;product_parent&lt;/th&gt;      &lt;th&gt;product_title&lt;/th&gt;      &lt;th&gt;star_rating&lt;/th&gt;      &lt;th&gt;helpful_votes&lt;/th&gt;      &lt;th&gt;total_votes&lt;/th&gt;      &lt;th&gt;vine&lt;/th&gt;      &lt;th&gt;verified_purchase&lt;/th&gt;      &lt;th&gt;review_headline&lt;/th&gt;      &lt;th&gt;review_body&lt;/th&gt;      &lt;th&gt;review_date&lt;/th&gt;      &lt;th&gt;year&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;th&gt;0&lt;/th&gt;      &lt;td&gt;US&lt;/td&gt;      &lt;td&gt;51163966&lt;/td&gt;      &lt;td&gt;R2RX7KLOQQ5VBG&lt;/td&gt;      &lt;td&gt;B00000JBAT&lt;/td&gt;      &lt;td&gt;738692522&lt;/td&gt;      &lt;td&gt;Diamond Rio Digital Player&lt;/td&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Why just 30 minutes?&lt;/td&gt;      &lt;td&gt;RIO is really great, but Diamond should increa...&lt;/td&gt;      &lt;td&gt;1999-06-22&lt;/td&gt;      &lt;td&gt;1999&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;1&lt;/th&gt;      &lt;td&gt;US&lt;/td&gt;      &lt;td&gt;30050581&lt;/td&gt;      &lt;td&gt;RPHMRNCGZF2HN&lt;/td&gt;      &lt;td&gt;B001BRPLZU&lt;/td&gt;      &lt;td&gt;197287809&lt;/td&gt;      &lt;td&gt;NG 283220 AC Adapter Power Supply for HP Pavil...&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Y&lt;/td&gt;      &lt;td&gt;Five Stars&lt;/td&gt;      &lt;td&gt;Great quality for the price!!!!&lt;/td&gt;      &lt;td&gt;2014-11-17&lt;/td&gt;      &lt;td&gt;2014&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;2&lt;/th&gt;      &lt;td&gt;US&lt;/td&gt;      &lt;td&gt;52246039&lt;/td&gt;      &lt;td&gt;R3PD79H9CTER8U&lt;/td&gt;      &lt;td&gt;B00000JBAT&lt;/td&gt;      &lt;td&gt;738692522&lt;/td&gt;      &lt;td&gt;Diamond Rio Digital Player&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;The digital audio &amp;amp;quot;killer app&amp;amp;quot;&lt;/td&gt;      &lt;td&gt;One of several first-generation portable MP3 p...&lt;/td&gt;      &lt;td&gt;1999-06-30&lt;/td&gt;      &lt;td&gt;1999&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;3&lt;/th&gt;      &lt;td&gt;US&lt;/td&gt;      &lt;td&gt;16186332&lt;/td&gt;      &lt;td&gt;R3U6UVNH7HGDMS&lt;/td&gt;      &lt;td&gt;B009CY43DK&lt;/td&gt;      &lt;td&gt;856142222&lt;/td&gt;      &lt;td&gt;HDE Mini Portable Capsule Travel Mobile Pocket...&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Y&lt;/td&gt;      &lt;td&gt;Five Stars&lt;/td&gt;      &lt;td&gt;I like it, got some for the Grandchilren&lt;/td&gt;      &lt;td&gt;2014-11-17&lt;/td&gt;      &lt;td&gt;2014&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;4&lt;/th&gt;      &lt;td&gt;US&lt;/td&gt;      &lt;td&gt;53068431&lt;/td&gt;      &lt;td&gt;R3SP31LN235GV3&lt;/td&gt;      &lt;td&gt;B00000JBSN&lt;/td&gt;      &lt;td&gt;670078724&lt;/td&gt;      &lt;td&gt;JVC FS-7000 Executive MicroSystem (Discontinue...&lt;/td&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Design flaws ruined the better functions&lt;/td&gt;      &lt;td&gt;I returned mine for a couple of reasons:  The ...&lt;/td&gt;      &lt;td&gt;1999-07-13&lt;/td&gt;      &lt;td&gt;1999&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;### After MaskingIn this example we will add the following data anonymizers:- **drop_column** on column &quot;marketplace&quot;- **replace** all values to &quot;*&quot; of the &quot;customer_id&quot; column- **replace_with_regex** &quot;R\d&quot; (R and any digit) to &quot;*&quot; on &quot;review_id&quot; column- **sha256** on &quot;product_id&quot; column- **filter_row** with condition &quot;product_parent != 738692522&quot;```pythonfrom pyspark.sql import SparkSessionimport pyspark.sql.functions as spark_functionsimport pyspark_anonymizerspark = SparkSession.builder.appName(&quot;your_app_name&quot;).getOrCreate()df = spark.read.parquet(&quot;s3://amazon-reviews-pds/parquet/product_category=Electronics/&quot;)dataframe_anonymizers = [    {        &quot;method&quot;: &quot;drop_column&quot;,        &quot;parameters&quot;: {            &quot;column_name&quot;: &quot;marketplace&quot;        }    },    {        &quot;method&quot;: &quot;replace&quot;,        &quot;parameters&quot;: {            &quot;column_name&quot;: &quot;customer_id&quot;,            &quot;replace_to&quot;: &quot;*&quot;        }    },    {        &quot;method&quot;: &quot;replace_with_regex&quot;,        &quot;parameters&quot;: {            &quot;column_name&quot;: &quot;review_id&quot;,            &quot;replace_from_regex&quot;: &quot;R\d&quot;,            &quot;replace_to&quot;: &quot;*&quot;        }    },    {        &quot;method&quot;: &quot;sha256&quot;,        &quot;parameters&quot;: {            &quot;column_name&quot;: &quot;product_id&quot;        }    },    {        &quot;method&quot;: &quot;filter_row&quot;,        &quot;parameters&quot;: {            &quot;where&quot;: &quot;product_parent != 738692522&quot;        }    }]df_parsed = pyspark_anonymizer.Parser(df, dataframe_anonymizers, spark_functions).parse()df_parsed.limit(5).toPandas()```&lt;div&gt;&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;customer_id&lt;/th&gt;      &lt;th&gt;review_id&lt;/th&gt;      &lt;th&gt;product_id&lt;/th&gt;      &lt;th&gt;product_parent&lt;/th&gt;      &lt;th&gt;product_title&lt;/th&gt;      &lt;th&gt;star_rating&lt;/th&gt;      &lt;th&gt;helpful_votes&lt;/th&gt;      &lt;th&gt;total_votes&lt;/th&gt;      &lt;th&gt;vine&lt;/th&gt;      &lt;th&gt;verified_purchase&lt;/th&gt;      &lt;th&gt;review_headline&lt;/th&gt;      &lt;th&gt;review_body&lt;/th&gt;      &lt;th&gt;review_date&lt;/th&gt;      &lt;th&gt;year&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;th&gt;0&lt;/th&gt;      &lt;td&gt;*&lt;/td&gt;      &lt;td&gt;RPHMRNCGZF2HN&lt;/td&gt;      &lt;td&gt;69031b13080f90ae3bbbb505f5f80716cd11c4eadd8d86...&lt;/td&gt;      &lt;td&gt;197287809&lt;/td&gt;      &lt;td&gt;NG 283220 AC Adapter Power Supply for HP Pavil...&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Y&lt;/td&gt;      &lt;td&gt;Five Stars&lt;/td&gt;      &lt;td&gt;Great quality for the price!!!!&lt;/td&gt;      &lt;td&gt;2014-11-17&lt;/td&gt;      &lt;td&gt;2014&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;1&lt;/th&gt;      &lt;td&gt;*&lt;/td&gt;      &lt;td&gt;*U6UVNH7HGDMS&lt;/td&gt;      &lt;td&gt;c99947c06f65c1398b39d092b50903986854c21fd1aeab...&lt;/td&gt;      &lt;td&gt;856142222&lt;/td&gt;      &lt;td&gt;HDE Mini Portable Capsule Travel Mobile Pocket...&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Y&lt;/td&gt;      &lt;td&gt;Five Stars&lt;/td&gt;      &lt;td&gt;I like it, got some for the Grandchilren&lt;/td&gt;      &lt;td&gt;2014-11-17&lt;/td&gt;      &lt;td&gt;2014&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;2&lt;/th&gt;      &lt;td&gt;*&lt;/td&gt;      &lt;td&gt;*SP31LN235GV3&lt;/td&gt;      &lt;td&gt;eb6b489524a2fb1d2de5d2e869d600ee2663e952a4b252...&lt;/td&gt;      &lt;td&gt;670078724&lt;/td&gt;      &lt;td&gt;JVC FS-7000 Executive MicroSystem (Discontinue...&lt;/td&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Design flaws ruined the better functions&lt;/td&gt;      &lt;td&gt;I returned mine for a couple of reasons:  The ...&lt;/td&gt;      &lt;td&gt;1999-07-13&lt;/td&gt;      &lt;td&gt;1999&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;3&lt;/th&gt;      &lt;td&gt;*&lt;/td&gt;      &lt;td&gt;*IYAZPPTRJF7E&lt;/td&gt;      &lt;td&gt;2a243d31915e78f260db520d9dcb9b16725191f55c54df...&lt;/td&gt;      &lt;td&gt;503838146&lt;/td&gt;      &lt;td&gt;BlueRigger High Speed HDMI Cable with Ethernet...&lt;/td&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Y&lt;/td&gt;      &lt;td&gt;Never got around to returning the 1 out of 2 ...&lt;/td&gt;      &lt;td&gt;Never got around to returning the 1 out of 2 t...&lt;/td&gt;      &lt;td&gt;2014-11-17&lt;/td&gt;      &lt;td&gt;2014&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;4&lt;/th&gt;      &lt;td&gt;*&lt;/td&gt;      &lt;td&gt;*RDD9FILG1LSN&lt;/td&gt;      &lt;td&gt;c1f5e54677bf48936fb1e9838869630e934d16ac653b15...&lt;/td&gt;      &lt;td&gt;587294791&lt;/td&gt;      &lt;td&gt;Brookstone 2.4GHz Wireless TV Headphones&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;N&lt;/td&gt;      &lt;td&gt;Y&lt;/td&gt;      &lt;td&gt;Saved my. marriage, I swear to god.&lt;/td&gt;      &lt;td&gt;Saved my.marriage, I swear to god.&lt;/td&gt;      &lt;td&gt;2014-11-17&lt;/td&gt;      &lt;td&gt;2014&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;### Anonymizers from DynamoDBYou can store anonymizers on DynamoDB too.#### Creating DynamoDB tableTo create the table follow the steps below.Using example script- Run [examples/create_on_demand_table.py](examples/create_on_demand_table.py) script of examples directory. The table will be createdOn AWS console:- DynamoDB &gt; Tables &gt; Create table- Table name: &quot;pyspark_anonymizer&quot; (or any other of your own)- Partition key: &quot;dataframe_name&quot;- Customize the settings if you want- Create table#### Writing Anonymizer on DynamoDBYou can run the example script, then edit your settings from there.- Run [examples/insert_anonymizer.py](examples/insert_anonymizer.py) script.- A new entry on DynamoDB will be added, the example dataframe name is &quot;table_x&quot;#### Parse from DynamoDB```pythonfrom pyspark.sql import SparkSessionimport pyspark.sql.functions as spark_functionsimport pyspark_anonymizerimport boto3from botocore.exceptions import ClientError as client_errordynamo_table = &quot;pyspark_anonymizer&quot;dataframe_name = &quot;table_x&quot;dynamo_table = boto3.resource('dynamodb').Table(dynamo_table)spark = SparkSession.builder.appName(&quot;your_app_name&quot;).getOrCreate()df = spark.read.parquet(&quot;s3://amazon-reviews-pds/parquet/product_category=Electronics/&quot;)df_parsed = pyspark_anonymizer.ParserFromDynamoDB(df, dataframe_name, dynamo_table, spark_functions, client_error).parse()df_parsed.limit(5).toPandas()```**The output will be same as the previous. The difference is that the anonymization settings will be in DynamoDB**## Currently supported data masking/anonymization methods- Methods  - drop_column - Drop a column.  - replace - Replace all column to a string.  - replace_with_regex - Replace column contents with regex.  - sha256 - Apply sha256 hashing function.  - filter_row - Apply a filter to the dataframe.</longdescription>
</pkgmetadata>