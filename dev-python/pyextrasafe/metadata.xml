<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyExtraSafe[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/Kijewski/pyextrasafe/ci.yml?branch=main&amp;logo=github&amp;logoColor=efefef&amp;style=flat-square)](https://github.com/Kijewski/pyextrasafe/actions/workflows/ci.yml)[![Documentation Status](https://img.shields.io/readthedocs/pyextrasafe?logo=readthedocs&amp;logoColor=efefef&amp;style=flat-square)](https://pyextrasafe.readthedocs.io/)[![PyPI](https://img.shields.io/pypi/v/pyextrasafe?logo=pypi&amp;logoColor=efefef&amp;style=flat-square)](https://pypi.org/project/pyextrasafe/)[![Python &gt;= 3.7](https://img.shields.io/badge/python-%E2%89%A5%203.7-informational?logo=python&amp;logoColor=efefef&amp;style=flat-square)](https://www.python.org/)[![OS: Linux](https://img.shields.io/badge/os-linux-informational?logo=linux&amp;logoColor=efefef&amp;style=flat-square)](https://www.kernel.org/)[![License](https://img.shields.io/badge/license-Apache--2.0-informational?logo=apache&amp;logoColor=efefef&amp;style=flat-square)](https://github.com/Kijewski/pyextrasafe/blob/main/LICENSE.md)PyExtraSafe is a library that makes it easy to improve your program’s security by selectivelyallowing the syscalls it can perform via the Linux kernel’s seccomp facilities.The python library is a shallow wrapper around [extrasafe](https://docs.rs/extrasafe/0.1.2/extrasafe/index.html).### Quick Example```pythonfrom threading import Threadimport pyextrasafetry:    thread = Thread(target=print, args=[&quot;Hello, world!&quot;])    thread.start()    thread.join()except Exception:    print(&quot;Could not run Thread (should have been able!)&quot;)pyextrasafe.SafetyContext().enable(    pyextrasafe.BasicCapabilities(),    pyextrasafe.SystemIO().allow_stdout().allow_stderr(),).apply_to_all_threads()try:    thread = Thread(target=print, args=[&quot;Hello, world!&quot;])    thread.start()    thread.join()except Exception:    print(&quot;Could not run Thread (that's good!)&quot;)else:    raise Exception(&quot;Should not have been able to run thread&quot;)```</longdescription>
</pkgmetadata>