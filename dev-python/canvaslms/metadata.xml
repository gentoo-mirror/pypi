<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># canvaslms: A CLI to Canvas LMS.This program provides a command-line interface for Canvas. The commandis `canvaslms` and it has several subcommands in the same style as Git.`canvaslms` provides output in a format useful for POSIX tools, thismakes automating tasks much easier.Let's consider how to grade students logging into the student-shell SSHserver. We store the list of students' Canvas and KTH IDs in a file.``` {.text}canvaslms users -c DD1301 -s | cut -f 1,2 &gt; students.csv```Then we check who has logged into student-shell.``` {.text startFrom=&quot;2&quot;}ssh student-shell.sys.kth.se last | cut -f 1 -d &quot; &quot; | sort | uniq \  &gt; logged-in.csv```Finally, we check who of our students logged in.``` {.text startFrom=&quot;4&quot;}for s in $(cut -f 2 students.csv); do  grep $s logged-in.csv &amp;&amp; \```Finally, we can set their grade to P and add the comment &quot;Well done!&quot; inCanvas. We set the grades for the two assignments whose titles match theregular expression `(Preparing the terminal|The terminal)`.``` {.text startFrom=&quot;6&quot;}    canvaslms grade -c DD1301 -a &quot;(Preparing the terminal|The terminal)&quot; \      -u $(grep $s students.csv | cut -f 1) \      -g P -m &quot;Well done!&quot;done```## InstallationJust install the PyPI package:```python3 -m pip install canvaslms```Some subcommands use `pandoc`, so you will likely have to [install pandoc][pandoc] on your system manually.[pandoc]: https://pandoc.org/installing.html</longdescription>
</pkgmetadata>