<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyxrkPython package for reading .xrk files. The `Run` class can be used to turn .xrk data files into pyarrow Tables.---Install pyxrk using pip:```shell$ pip install pyxrk```To load an .xrk file into a pyarrow Table:```pycon&gt;&gt;&gt; from pyxrk import Run&gt;&gt;&gt; run = Run.load(&quot;./my_run.xrk&quot;)&gt;&gt;&gt; run.racer'Lewis Hamilton'&gt;&gt;&gt; run.to_table()  # pyarrow.Table instance&gt;&gt;&gt; # Or for specific laps&gt;&gt;&gt; run.get_lap(1).to_table()```Channel unit information can be found in the arrow table metadata.--- The `pyxrk_raw` submodule wraps much of the functionality from the rust library [xdrk](https://github.com/bmc-labs/xdrk) while adding some convenience methods.To use the raw submodule for reading .xrk files:```pycon&gt;&gt;&gt; from pyxrk import pyxrk_raw&gt;&gt;&gt; run = pyxrk_raw.load_run(&quot;./my_run.xrk&quot;)&gt;&gt;&gt; run.lap_count7&gt;&gt;&gt; run.racer'Lewis Hamilton'&gt;&gt;&gt; channel = run.get_channel(&quot;GPS Speed&quot;)&gt;&gt;&gt; channel.unit'm/s'&gt;&gt;&gt; channel.frequency  # in Hz100.0&gt;&gt;&gt; for data in channel.data():...     print(data)  # tuple of (time offset, data point)...     break...(0.0, 0.1846618503332138)```In lieau of better API documentation, see `pyxrk_raw.pyi` for full interface and tests for more example usage.## CompatibilityCurrently known to work on Linux and Windows, but not Mac.  Contributions for getting it working on Mac are more than welcome.</longdescription>
</pkgmetadata>