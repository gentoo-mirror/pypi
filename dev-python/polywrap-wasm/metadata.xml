<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># polywrap-wasmPython implementation of the Wasm wrapper runtime.## Usage### Invoke Wasm Wrapper```pythonfrom typing import castfrom polywrap_manifest import AnyWrapManifestfrom polywrap_core import FileReader, Invokerfrom polywrap_wasm import WasmWrapperfile_reader: FileReader = ... # any valid file_reader, pass NotImplemented for mockingwasm_module: bytes = bytes(&quot;&lt;wrapper wasm module bytes read from file or http&gt;&quot;)wrap_manifest: AnyWrapManifest = ...wrapper = WasmWrapper(file_reader, wasm_module, wrap_manifest)invoker: Invoker = ... # any valid invoker, mostly PolywrapClientmessage = &quot;hey&quot;args = {&quot;arg&quot;: message}options: InvokeOptions[UriPackageOrWrapper] = InvokeOptions(  uri=Uri.from_str(&quot;fs/./build&quot;), method=&quot;simpleMethod&quot;, args=args)result = await wrapper.invoke(options, invoker)assert result.encoded is Trueassert msgpack_decode(cast(bytes, result.result)) == message```</longdescription>
</pkgmetadata>