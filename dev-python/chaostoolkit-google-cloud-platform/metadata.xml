<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Chaos Toolkit Extension for Google Cloud Platform[![Build Status](https://travis-ci.com/chaostoolkit-incubator/chaostoolkit-google-cloud-platform.svg?branch=master)](https://travis-ci.com/chaostoolkit-incubator/chaostoolkit-google-cloud-platform)[![Python versions](https://img.shields.io/pypi/pyversions/chaostoolkit-google-cloud-platform.svg)](https://www.python.org/)This project is a collection of [actions][] and [probes][], gathered as anextension to the [Chaos Toolkit][chaostoolkit]. It targets the[Google Cloud Platform][gcp].[actions]: http://chaostoolkit.org/reference/api/experiment/#action[probes]: http://chaostoolkit.org/reference/api/experiment/#probe[chaostoolkit]: http://chaostoolkit.org[gce]: https://cloud.google.com/compute/[gcp]: https://cloud.google.com## InstallThis package requires Python 3.7+To be used from your experiment, this package must be installed in the Pythonenvironment where [chaostoolkit][] already lives.```$ pip install --prefer-binary -U chaostoolkit-google-cloud-platform```## UsageTo use the probes and actions from this package, add the following to yourexperiment file:```json{    &quot;version&quot;: &quot;1.0.0&quot;,    &quot;title&quot;: &quot;create and delete a cloud run service&quot;,    &quot;description&quot;: &quot;n/a&quot;,    &quot;secrets&quot;: {        &quot;gcp&quot;: {            &quot;service_account_file&quot;: &quot;service_account.json&quot;        }    },    &quot;method&quot;: [        {            &quot;name&quot;: &quot;create-cloud-run-service&quot;,            &quot;type&quot;: &quot;action&quot;,            &quot;provider&quot;: {                &quot;type&quot;: &quot;python&quot;,                &quot;module&quot;: &quot;chaosgcp.cloudrun.actions&quot;,                &quot;func&quot;: &quot;create_service&quot;,                &quot;secrets&quot;: [&quot;gcp&quot;],                &quot;arguments&quot;: {                    &quot;parent&quot;: &quot;projects/.../locations/...&quot;,                    &quot;service_id&quot;: &quot;demo&quot;,                    &quot;container&quot;: {                        &quot;name&quot;: &quot;demo&quot;,                        &quot;image&quot;: &quot;gcr.io/google-samples/hello-app:1.0&quot;                    }                }            }        },        {            &quot;name&quot;: &quot;delete-cloud-run-service&quot;,            &quot;type&quot;: &quot;action&quot;,            &quot;provider&quot;: {                &quot;type&quot;: &quot;python&quot;,                &quot;module&quot;: &quot;chaosgcp.cloudrun.actions&quot;,                &quot;func&quot;: &quot;delete_service&quot;,                &quot;secrets&quot;: [&quot;gcp&quot;],                &quot;arguments&quot;: {                    &quot;parent&quot;: &quot;projects/.../locations/.../services/demo&quot;                }            }        }    ]}```That's it!Please explore the code to see existing probes and actions.## Configuration### Project and Cluster InformationYou can pass the context via the `configuration` section of your experiment:```json{    &quot;configuration&quot;: {        &quot;gcp_project_id&quot;: &quot;...&quot;,        &quot;gcp_gke_cluster_name&quot;: &quot;...&quot;,        &quot;gcp_region&quot;: &quot;...&quot;,        &quot;gcp_zone&quot;: &quot;...&quot;    }}```This is only valuable when you want to reuse the same context everywhere.A finer approach is to set the the `parent` argument on activities thatsupport it. It should be of the form`projects/*/locations/*` or `projects/*/locations/*/clusters/*`, where`location` is either a region or a zone, depending on the context and definedby the GCP API.When provided, this takes precedence over the context defined in theconfiguration. In some cases, it also means you do not need to pass thevalues in the configuration at all as the extension will derive thecontext from the `parent` value.### CredentialsThis extension expects a [service account][sa] with enough permissions toperform its operations. Please create such a service account manually (do notuse the default one for your cluster if you can, so you'll be able to deletethat service account if need be).[sa]: https://cloud.google.com/iam/docs/creating-managing-service-accounts Once you have created your service account, either keep the file on the samemachine where you will be running the experiment from. Or, pass its contentas part of the `secrets` section, although this is not recommended because yoursensitive data will be quite visible.Here is the first way:```json{    &quot;secrets&quot;: {        &quot;gcp&quot;: {            &quot;service_account_file&quot;: &quot;/path/to/sa.json&quot;        }    }}```You can also use the well-known `GOOGLE_APPLICATION_CREDENTIALS` environmentvariables. iI that case, you do not need to set any secrets in theexperiment.While the embedded way looks like this:```json{    &quot;secrets&quot;: {        &quot;k8s&quot;: {            &quot;KUBERNETES_CONTEXT&quot;: &quot;...&quot;        },        &quot;gcp&quot;: {            &quot;service_account_info&quot;: {                &quot;type&quot;: &quot;service_account&quot;,                &quot;project_id&quot;: &quot;...&quot;,                &quot;private_key_id&quot;: &quot;...&quot;,                &quot;private_key&quot;: &quot;...&quot;,                &quot;client_email&quot;: &quot;...&quot;,                &quot;client_id&quot;: &quot;...&quot;,                &quot;auth_uri&quot;: &quot;https://accounts.google.com/o/oauth2/auth&quot;,                &quot;token_uri&quot;: &quot;https://accounts.google.com/o/oauth2/token&quot;,                &quot;auth_provider_x509_cert_url&quot;: &quot;https://www.googleapis.com/oauth2/v1/certs&quot;,                &quot;client_x509_cert_url&quot;: &quot;https://www.googleapis.com/robot/v1/metadata/x509/....&quot;            }        }    }}```Notice also how we provided here the `k8s` entry. This is only because, in ourexample we use the `swap_nodepool` action which drains the Kubernetes nodesand it requires the Kubernetes cluster credentials to work. These are documentedin the [Kubernetes extension for Chaos Toolkit][k8sctk]. This is the onlyaction that requires such a secret payload, others only speak to the GCP API.[k8sctk]: https://docs.chaostoolkit.org/drivers/kubernetes/### Putting it all togetherHere is a full example which creates a node pool then swap it for a new one.```json{    &quot;version&quot;: &quot;1.0.0&quot;,    &quot;title&quot;: &quot;do stuff ye&quot;,    &quot;description&quot;: &quot;n/a&quot;,    &quot;secrets&quot;: {        &quot;k8s&quot;: {            &quot;KUBERNETES_CONTEXT&quot;: &quot;gke_...&quot;        },        &quot;gcp&quot;: {            &quot;service_account_file&quot;: &quot;service-account.json&quot;        }    },    &quot;method&quot;: [        {            &quot;name&quot;: &quot;create-our-nodepool&quot;,            &quot;type&quot;: &quot;action&quot;,            &quot;provider&quot;: {                &quot;type&quot;: &quot;python&quot;,                &quot;module&quot;: &quot;chaosgcp.gke.nodepool.actions&quot;,                &quot;func&quot;: &quot;create_new_nodepool&quot;,                &quot;secrets&quot;: [&quot;gcp&quot;],                &quot;arguments&quot;: {                    &quot;parent&quot;: &quot;projects/.../locations/.../clusters/...&quot;,                    &quot;body&quot;: {                        &quot;config&quot;: {                             &quot;oauth_scopes&quot;: [                                &quot;gke-version-default&quot;,                                &quot;https://www.googleapis.com/auth/devstorage.read_only&quot;,                                &quot;https://www.googleapis.com/auth/logging.write&quot;,                                &quot;https://www.googleapis.com/auth/monitoring&quot;,                                &quot;https://www.googleapis.com/auth/service.management.readonly&quot;,                                &quot;https://www.googleapis.com/auth/servicecontrol&quot;,                                &quot;https://www.googleapis.com/auth/trace.append&quot;                            ]                        },                        &quot;initial_node_count&quot;: 1,                        &quot;name&quot;: &quot;default-pool&quot;                    }                }            }        },        {            &quot;name&quot;: &quot;fetch-our-nodepool&quot;,            &quot;type&quot;: &quot;probe&quot;,            &quot;provider&quot;: {                &quot;type&quot;: &quot;python&quot;,                &quot;module&quot;: &quot;chaosgcp.gke.nodepool.probes&quot;,                &quot;func&quot;: &quot;get_nodepool&quot;,                &quot;secrets&quot;: [&quot;gcp&quot;],                &quot;arguments&quot;: {                    &quot;parent&quot;: &quot;projects/.../locations/.../clusters/.../nodePools/default-pool&quot;                }            }        },        {            &quot;name&quot;: &quot;swap-our-nodepool&quot;,            &quot;type&quot;: &quot;action&quot;,            &quot;provider&quot;: {                &quot;type&quot;: &quot;python&quot;,                &quot;module&quot;: &quot;chaosgcp.gke.nodepool.actions&quot;,                &quot;func&quot;: &quot;swap_nodepool&quot;,                &quot;secrets&quot;: [&quot;gcp&quot;, &quot;k8s&quot;],                &quot;arguments&quot;: {                    &quot;parent&quot;: &quot;projects/.../locations/.../clusters/...&quot;,                    &quot;delete_old_node_pool&quot;: true,                    &quot;old_node_pool_id&quot;: &quot;default-pool&quot;,                    &quot;new_nodepool_body&quot;: {                        &quot;config&quot;: {                             &quot;oauth_scopes&quot;: [                                &quot;gke-version-default&quot;,                                &quot;https://www.googleapis.com/auth/devstorage.read_only&quot;,                                &quot;https://www.googleapis.com/auth/logging.write&quot;,                                &quot;https://www.googleapis.com/auth/monitoring&quot;,                                &quot;https://www.googleapis.com/auth/service.management.readonly&quot;,                                &quot;https://www.googleapis.com/auth/servicecontrol&quot;,                                &quot;https://www.googleapis.com/auth/trace.append&quot;                            ]                        },                        &quot;initial_node_count&quot;: 1,                        &quot;name&quot;: &quot;default-pool-1&quot;                    }                }            }        }    ]}```## Migrate from GCE extensionIf you previously used the deprecated [GCE extension][ctk-gce], here is a quickrecap of changes you'll need to go through to update your experiments.[ctk-gce]: https://github.com/chaostoolkit-incubator/chaostoolkit-google-cloud-   The module `chaosgce.nodepool.actions` has been replaced by    `chaosgcp.gke.nodepool.actions`.    You will need to update the `module` key for the python providers.-   The configuration keys in the `configuration` section have been    renamed accordingly:    - `&quot;gce_project_id&quot;` -&gt; `&quot;gcp_project_id&quot;`    - `&quot;gce_region&quot;` -&gt; `&quot;gcp_region&quot;`    - `&quot;gce_zone&quot;` -&gt; `&quot;gcp_zone&quot;`    - `&quot;gce_cluster_name&quot;` -&gt; `&quot;gcp_gke_cluster_name&quot;`## ContributeIf you wish to contribute more functions to this package, you are more thanwelcome to do so. Please, fork this project, make your changes following theusual [PEP 8][pep8] code style, sprinkling with tests and submit a PR forreview.[pep8]: https://pycodestyle.readthedocs.io/en/latest/The Chaos Toolkit projects require all contributors must sign a[Developer Certificate of Origin][dco] on each commit they would like to mergeinto the master branch of the repository. Please, make sure you can abide bythe rules of the DCO before submitting a PR.[dco]: https://github.com/probot/dco#how-it-worksIf you wish to add a new function to this extension, that is related to a Google Cloud product that is not available yet in this package, please use the product short name or acronym as a first level subpackage (eg. iam, gke, sql, storage, ...). See the list of [GCP products and services][gcp_products].[gcp_products] https://cloud.google.com/products/### DevelopIf you wish to develop on this project, make sure to install the developmentdependencies. But first, [create a virtual environment][venv] and then installthose dependencies.[venv]: http://chaostoolkit.org/reference/usage/install/#create-a-virtual-environment```console$ pip install -r requirements-dev.txt -r requirements.txt ```Then, point your environment to this directory:```console$ python setup.py develop```Now, you can edit the files and they will be automatically be seen by yourenvironment, even when running from the `chaos` command locally.### TestTo run the tests for the project execute the following:```$ pytest```</longdescription>
</pkgmetadata>