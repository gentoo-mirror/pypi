<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://rocketry.readthedocs.io&quot;&gt;Rocketry&lt;/a&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;The engine to power your Python apps&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/Miksus/rocketry/actions/workflows/main.yml/badge.svg?branch=master&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://github.com/Miksus/rocketry/actions/workflows/main.yml/badge.svg?branch=master&quot; alt=&quot;Test&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/Miksus/rocketry&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://codecov.io/gh/Miksus/rocketry/branch/master/graph/badge.svg?token=U2KF1QA5HT&quot; alt=&quot;Test coverage&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/rocketry&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://badgen.net/pypi/v/rocketry?color=969696&quot; alt=&quot;Package version&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/rocketry&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://badgen.net/pypi/python/rocketry?color=969696&amp;labelColor=black&quot; alt=&quot;Supported Python versions&quot;&gt;    &lt;/a&gt;&lt;/p&gt;-----------------## What is it?Rocketry is a modern statement-based scheduling framework for Python. It is simple, clean and extensive.It is suitable for small and big projects.This is how it looks like:```pythonfrom rocketry import Rocketryfrom rocketry.conds import dailyapp = Rocketry()@app.task(daily)def do_daily():    ...if __name__ == '__main__':    app.run()```Core functionalities:- Powerful scheduling- Concurrency (async, threading, multiprocess)- Parametrization- Task pipelining- Modifiable session also in runtime- Async supportLinks:- Documentation: https://rocketry.readthedocs.io- Source code: https://github.com/Miksus/rocketry- Releases: https://pypi.org/project/rocketry/## Why Rocketry?Unlike the alternatives, Rocketry's scheduler is statement-based. Rocketry natively supports the same scheduling strategies as the other options, including cron and task pipelining, but it can also bearbitrarily extended using custom scheduling statements.Here is an example of custom conditions:```pythonfrom rocketry.conds import daily, time_of_weekfrom pathlib import Path@app.cond()def file_exists(file):    return Path(file).exists()@app.task(daily.after(&quot;08:00&quot;) &amp; file_exists(&quot;myfile.csv&quot;))def do_work():    ...```Rocketry is suitable for quick automation projectsand for larger scale applications. It does not makeassumptions of your project structure.## InstallationInstall Rocketry from [PyPI](https://pypi.org/project/rocketry/):```shellpip install rocketry```## More ExamplesHere are some more examples of what it can do.**Scheduling:**```pythonfrom rocketry.conds import everyfrom rocketry.conds import hourly, daily, weekly, from rocketry.conds import time_of_dayfrom rocketry.conds import cron@app.task(every(&quot;10 seconds&quot;))def do_continuously():    ...@app.task(daily.after(&quot;07:00&quot;))def do_daily_after_seven():    ...@app.task(hourly &amp; time_of_day.between(&quot;22:00&quot;, &quot;06:00&quot;))def do_hourly_at_night():    ...@app.task((weekly.on(&quot;Mon&quot;) | weekly.on(&quot;Sat&quot;)) &amp; time_of_day.after(&quot;10:00&quot;))def do_twice_a_week_after_ten():    ...@app.task(cron(&quot;* 2 * * *&quot;))def do_based_on_cron():    ...```**Pipelining tasks:**```pythonfrom rocketry.conds import daily, after_successfrom rocketry.args import Return@app.task(daily.after(&quot;07:00&quot;))def do_first():    ...    return 'Hello World'@app.task(after_success(do_first))def do_second(arg=Return('do_first')):    # arg contains the value of the task do_first's return    ...    return 'Hello Python'```**Parallelizing tasks:**```pythonfrom rocketry.conds import daily@app.task(daily, execution=&quot;main&quot;)def do_unparallel():    ...@app.task(daily, execution=&quot;async&quot;)async def do_async():    ...@app.task(daily, execution=&quot;thread&quot;)def do_on_separate_thread():    ...@app.task(daily, execution=&quot;process&quot;)def do_on_separate_process():    ...```---## Interested?Read more from [the documentation](https://rocketry.readthedocs.io).## About Library- **Author:** Mikael Koli ([Miksus](https://github.com/Miksus)) - koli.mikael@gmail.com- **License:** MIT</longdescription>
</pkgmetadata>