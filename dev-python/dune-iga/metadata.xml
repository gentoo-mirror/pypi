<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--SPDX-FileCopyrightText: 2022 The dune-iga developers developers mueller@ibb.uni-stuttgart.deSPDX-License-Identifier: LGPL-3.0-or-later--&gt;# dune-iga[![codecov](https://codecov.io/github/rath3t/dune-iga/branch/main/graph/badge.svg?token=4O9UV99UR6)](https://codecov.io/github/rath3t/dune-iga)Preparing the Sources=========================Additional to the software mentioned in README, you'll need thefollowing programs installed on your system:  cmake &gt;= 2.8.6or if you use the old autoconf build system:  automake &gt;= 1.9  autoconf &gt;= 2.62  libtoolGetting started---------------If these preliminaries are met, you should run  dunecontrol allwhich will find all installed dune modules as well as all dune modules(not installed) which sources reside in a subdirectory of the currentdirectory. Note that if dune is not installed properly you will eitherhave to add the directory where the dunecontrol script resides (probably./dune-common/bin) to your path or specify the relative path of the script.On your project and all uninstalled DUNE source modules found the scriptwill then call the GNU autoconf/automake to create a ./configure-scriptand the Makefiles. Afterwards that configure script will be called and themodules will be build using make allMost probably you'll have to provide additional information to dunecontrol(e. g. compilers, configure options) and/or make options.The most convenient way is to use options files in this case. The filesdefine four variables:CMAKE_FLAGS      flags passed to cmakeAUTOGEN_FLAGS    flags passed to autogenCONFIGURE_FLAGS  flags passed to configureMAKE_FLAGS       flags passed to makeAn example options file might look like this:#use this options to autogen, configure and make if no other options are givenCMAKE_FLAGS=&quot; \-DCMAKE_CXX_COMPILER=g++-4.9 \-DCMAKE_CXX_FLAGS='-Wall -pedantic' \-DCMAKE_INSTALL_PREFIX=/install/path&quot; #Force g++-4.9 and set compiler flagsAUTOGEN_FLAGS=&quot;--ac=2.50 --am=1.8&quot; #Forces autoconf 2.50 and automake 1.8CONFIGURE_FLAGS=&quot;CXX=g++-4.9 --prefix=/install/path&quot; #Force g++-4.9 as compilerMAKE_FLAGS=install #Per default run make install instead of simply makeIf you save this information into example.opts you can pass the opts file todunecontrol via the --opts option, e. g.  dunecontrol --opts=example.opts allTo get a full list of available configure flags just run  dunecontrol configure --helpafter running at least  dunecontrol autogenMore info---------See     dunecontrol --helpfor further options.The full build-system is described in the dune-common/doc/buildsystem (Git version) or under share/doc/dune-common/buildsystem if you installed DUNE!</longdescription>
</pkgmetadata>