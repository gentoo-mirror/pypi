<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Plug P100This is a fork of original work of [@K4CZP3R](https://github.com/K4CZP3R/tapo-p100-python)The purpose of this fork is to provide the library as PyPi package. # How to install```pip install plugp100```# Code example```pythonimport asynciofrom plugp100 import TapoApiClient, TapoApiClientConfigfrom plugp100.domain.light_effect import LightEffectPresetasync def main():    # create generic tapo api    config = TapoApiClientConfig(&quot;&lt;ip&gt;&quot;, &quot;&lt;email&gt;&quot;, &quot;&lt;passwd&gt;&quot;)    sw = TapoApiClient.from_config(config)    await sw.login()    await sw.off()    state = await sw.get_state()    print(state.firmware_version)    print(state.is_hardware_v2)    # color temperature and brightness    await sw.set_color_temperature(4000)    await sw.set_brightness(100)    # light effect example    await sw.set_light_effect(LightEffectPreset.rainbow().effect)    state = await sw.get_state()    print(state.get_unmapped_state())    print(state.get_unmapped_state())    print(state.get_energy_unmapped_state())    print(state.get_semantic_firmware_version())if __name__ == &quot;__main__&quot;:    loop = asyncio.new_event_loop()    loop.run_until_complete(main())    loop.run_until_complete(asyncio.sleep(0.1))    loop.close()```</longdescription>
</pkgmetadata>