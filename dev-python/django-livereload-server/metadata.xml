<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========================django-livereload-server========================This django app adds a management command that starts a livereload server watching all your static files and templates as wellas a custom ``runserver`` command that issues livereload requests when the development server is ready after a restart.Installation------------Install package: ::  $ pip install django-livereload-serverAdd ``'livereload'`` to the ``INSTALLED_APPS``, before ``'django.contrib.staticfiles'`` if this is used::    INSTALLED_APPS = (        ...        'livereload',        ...    )Next you need to inject the loading of the livereload javascript. You can do this in one of two ways:* Through middleware by adding  ``'livereload.middleware.LiveReloadScript'`` to ``MIDDLEWARE_CLASSES`` (probably at the end)::    MIDDLEWARE_CLASSES = (        ...        'livereload.middleware.LiveReloadScript',    )* Through a templatetag in your ``base.html`` (or similar) template::    {% load livereload_tags %}    ...    {% livereload_script %}    &lt;/head&gt;Either of these options will inject the ``livereload.js`` script into your webpages if ``DEBUG`` setting is on.Configuration-------------If you need the livereload server to use a different host and port than the default 127.0.0.1 and 35729,specify them by setting ``LIVERELOAD_HOST`` and ``LIVERELOAD_PORT`` in ``settings.py``.Usage-----Start the livereload server::  $ python manage.py livereloadkeep the livereload server running.Start the django development server as usual (in another console)::  $ python manage.py runserverIn the browser's address bar access your web app by doing:  127.0.0.1:8000 or localhost:8000now every time you hit save in your editor, the django-development-server/livereload-server automatically updates the staticfilesCustomization-------------By default both template and staticfiles directories are watched.You can ignore template directories using: ::  $ ./manage.py livereload --ignore-template-dirsOr staticfiles directories using: ::  $ ./manage.py livereload --ignore-static-dirsYou can ignore file extensions: ::  $ ./manage.py livereload --ignore-file-extensions=.less,.scssExtra files and/or paths to watch for changes can be added as positional arguments. By default livereload server watches the files that are found by your staticfiles finders and your template loaders. ::  $ python manage.py livereload path/to/my-extra-directory/This will be excluded from the paths ignored by `--ignore-template-dirs` and`--ignore-static-dirs`.Host and port can be overridden with ``--host`` and ``--port`` options. ::  $ python manage.py livereload --host=myhost.com --port=9090the runserver command ``python manage.py runserver`` also accepts three additional options::* ``--nolivereload`` to disable livereload functionality* ``--livereload-host`` to override both default and settings file specified host address* ``--livereload-port`` to override both default and settings file specified portBackground----------This project is based on a merge of `python-livereload &lt;https://github.com/lepture/python-livereload&gt;`_ and`django-livereload &lt;https://github.com/Fantomas42/django-livereload&gt;`_, excellent projects both and even better forsmooth django development when combined.</longdescription>
</pkgmetadata>