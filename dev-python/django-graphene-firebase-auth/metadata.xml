<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># graphene-django-firebase-authAuthentication provider for graphene-django and Firebase's Authentication service.Note this is a WIP and abandoned project since I never ended up using Firebase. But the code is still a good startingpoint as of writing this.Partially inspired by[django-firebase-auth](https://github.com/fcornelius/django-firebase-auth)for Django REST framework.This app is used with [Firebase Authentication](https://firebase.google.com/docs/auth/) on a client.## CompatibilityThis code has only been tested with Python `3.7.0` and Django `2.1.2`.## Installing1. Install the app:```shpipenv install graphene-django-firebase-auth```2. Download the JSON file from your [Firebase console](https://console.firebase.google.com/) with your account's   credentials.3. Set `FIREBASE_KEY_FILE` in your project's settings to the path of the credentials file:```pythonimport osFIREBASE_KEY_FILE = os.path.join(BASE_DIR, 'path/to/firebase-credentials.json')```4. Add the authentication backend to `AUTHENTICATION_BACKENDS`:```pythonAUTHENTICATION_BACKENDS = ['firebase_auth.authentication.FirebaseAuthentication']```5. Add `firebase_auth` to `INSTALLED_APPS`:```pythonINSTALLED_APPS = ['firebase_auth',]```6. Add `FirebaseAuthMixin` to your `AUTH_USER_MODEL`:```pythonclass User(PermissionsMixin, FirebaseAuthMixin):```7. Build and run your DB migrations to add the changes:```sh./manage.py makemigrations./manage.py migrate```## Sending tokens on the clientYour client will need to send an `Authorization: Bearer` token on each request. How you do this depends on your clientand is outside the scopeof this documentation.## Developing### Setting up your environment1. Install the dependencies:```shpipenv install -d```2. Download the JSON file from your [Firebase console](https://console.firebase.google.com/) with your account's   credentials.3. Create an `.env` file using `.env.example` as a template. Make sure   to specify the path to the file in the previous step.4. Enter the virtual environment:```sh./manage.py shell```### Other commands```sh# Run the tests./manage.py test``````sh# Lint the code./lint.sh```</longdescription>
</pkgmetadata>