<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Toolz=====|Build Status| |Coverage Status| |Version Status|A set of utility functions for iterators, functions, and dictionaries.See the PyToolz documentation at https://toolz.readthedocs.ioLICENSE-------New BSD. See `License File &lt;https://github.com/pytoolz/toolz/blob/master/LICENSE.txt&gt;`__.Install-------``toolz`` is on the Python Package Index (PyPI):::    pip install toolzStructure and Heritage----------------------``toolz`` is implemented in three parts:|literal itertoolz|_, for operations on iterables. Examples: ``groupby``,``unique``, ``interpose``,|literal functoolz|_, for higher-order functions. Examples: ``memoize``,``curry``, ``compose``,|literal dicttoolz|_, for operations on dictionaries. Examples: ``assoc``,``update-in``, ``merge``... |literal itertoolz| replace:: ``itertoolz``.. _literal itertoolz: https://github.com/pytoolz/toolz/blob/master/toolz/itertoolz.py.. |literal functoolz| replace:: ``functoolz``.. _literal functoolz: https://github.com/pytoolz/toolz/blob/master/toolz/functoolz.py.. |literal dicttoolz| replace:: ``dicttoolz``.. _literal dicttoolz: https://github.com/pytoolz/toolz/blob/master/toolz/dicttoolz.pyThese functions come from the legacy of functional languages for listprocessing. They interoperate well to accomplish common complex tasks.Read our `APIDocumentation &lt;https://toolz.readthedocs.io/en/latest/api.html&gt;`__ formore details.Example-------This builds a standard wordcount function from pieces within ``toolz``:.. code:: python    &gt;&gt;&gt; def stem(word):    ...     &quot;&quot;&quot; Stem word to primitive form &quot;&quot;&quot;    ...     return word.lower().rstrip(&quot;,.!:;'-\&quot;&quot;).lstrip(&quot;'\&quot;&quot;)    &gt;&gt;&gt; from toolz import compose, frequencies    &gt;&gt;&gt; from toolz.curried import map    &gt;&gt;&gt; wordcount = compose(frequencies, map(stem), str.split)    &gt;&gt;&gt; sentence = &quot;This cat jumped over this other cat!&quot;    &gt;&gt;&gt; wordcount(sentence)    {'this': 2, 'cat': 2, 'jumped': 1, 'over': 1, 'other': 1}Dependencies------------``toolz`` supports Python 3.5+ with a common codebase.It is pure Python and requires no dependencies beyond the standardlibrary.It is, in short, a lightweight dependency.CyToolz-------The ``toolz`` project has been reimplemented in `Cython &lt;http://cython.org&gt;`__.The ``cytoolz`` project is a drop-in replacement for the Pure Pythonimplementation.See `CyToolz GitHub Page &lt;https://github.com/pytoolz/cytoolz/&gt;`__ for moredetails.See Also---------  `Underscore.js &lt;https://underscorejs.org/&gt;`__: A similar library for   JavaScript-  `Enumerable &lt;https://ruby-doc.org/core-2.0.0/Enumerable.html&gt;`__: A   similar library for Ruby-  `Clojure &lt;https://clojure.org/&gt;`__: A functional language whose   standard library has several counterparts in ``toolz``-  `itertools &lt;https://docs.python.org/2/library/itertools.html&gt;`__: The   Python standard library for iterator tools-  `functools &lt;https://docs.python.org/2/library/functools.html&gt;`__: The   Python standard library for function toolsContributions Welcome---------------------``toolz`` aims to be a repository for utility functions, particularlythose that come from the functional programming and list processingtraditions. We welcome contributions that fall within this scope.We also try to keep the API small to keep ``toolz`` manageable.  The idealcontribution is significantly different from existing functions and hasprecedent in a few other functional systems.Please take a look at our`issue page &lt;https://github.com/pytoolz/toolz/issues&gt;`__for contribution ideas.Community---------See our `mailing list &lt;https://groups.google.com/forum/#!forum/pytoolz&gt;`__.We're friendly... |Build Status| image:: https://github.com/pytoolz/toolz/workflows/Test/badge.svg   :target: https://github.com/pytoolz/toolz/actions.. |Coverage Status| image:: https://coveralls.io/repos/pytoolz/toolz/badge.svg?branch=master   :target: https://coveralls.io/r/pytoolz/toolz.. |Version Status| image:: https://badge.fury.io/py/toolz.svg   :target: https://badge.fury.io/py/toolz</longdescription>
</pkgmetadata>