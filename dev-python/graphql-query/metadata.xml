<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># GraphQL-Query[![tag](https://img.shields.io/github/v/tag/denisart/graphql-query)](https://github.com/denisart/graphql-query)[![last-commit](https://img.shields.io/github/last-commit/denisart/graphql-query/master)](https://github.com/denisart/graphql-query/commits/master)[![license](https://img.shields.io/github/license/denisart/graphql-query)](https://github.com/denisart/graphql-query/blob/master/LICENSE)---**graphql_query** is complete GraphQL query string builder for python. With **graphql_query**you can- generate a GraphQL query string from a python class;- use and share similar Arguments, Variables and e.t.c between different queries;- easily add new fields to your query;- add Fragments and Directives to queries;The documentation for **graphql_query** can be found at [https://denisart.github.io/graphql-query/](https://denisart.github.io/graphql-query/).## QuickstartInstall with pip```bashpip install graphql_query```### Simple queryCode for the simple query```graphql{  hero {    name  }}```it is```pythonfrom graphql_query import Operation, Queryhero = Query(name=&quot;hero&quot;, fields=[&quot;name&quot;])operation = Operation(type=&quot;query&quot;, queries=[hero])print(operation.render())&quot;&quot;&quot;query {  hero {    name  }}&quot;&quot;&quot;```The `render` method for the `graphql_query.Operation` objectjust returns the final string with a query. Inside the `fields` array of the `graphql_query.Query` objectyou can use- `str` (a field name);- object of `graphql_query.Field` type;- `graphql_query.Fragment` and `graphql_query.InlineFragment`.### Arguments, Variables and DirectivesFor generation of the following query```graphqlquery Hero($episode: Episode, $withFriends: Boolean!) {  hero(episode: $episode) {    name    friends @include(if: $withFriends) {      name    }  }}```we have```pythonfrom graphql_query import Argument, Directive, Field, Operation, Query, Variableepisode = Variable(name=&quot;episode&quot;, type=&quot;Episode&quot;)withFriends = Variable(name=&quot;withFriends&quot;, type=&quot;Boolean!&quot;)arg_episode = Argument(name=&quot;episode&quot;, value=episode)arg_if = Argument(name=&quot;if&quot;, value=withFriends)hero = Query(    name=&quot;hero&quot;,    arguments=[arg_episode],    fields=[        &quot;name&quot;,        Field(            name=&quot;friends&quot;,            fields=[&quot;name&quot;],            directives=[Directive(name=&quot;include&quot;, arguments=[arg_if])]        )    ])operation = Operation(    type=&quot;query&quot;,    name=&quot;Hero&quot;,    variables=[episode, withFriends],    queries=[hero])print(operation.render())&quot;&quot;&quot;query Hero(  $episode: Episode  $withFriends: Boolean!) {  hero(    episode: $episode  ) {    name    friends @include(      if: $withFriends    ) {      name    }  }}&quot;&quot;&quot;```You can find other examples in the documentation.</longdescription>
</pkgmetadata>