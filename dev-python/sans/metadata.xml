<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sans[![pypi](https://img.shields.io/pypi/v/sans.svg) ![Licensed under the MIT License](https://img.shields.io/pypi/l/sans.svg)](https://pypi.org/project/sans/)[![Downloads](https://static.pepy.tech/badge/sans)](https://pepy.tech/project/sans)[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/charliermarsh/ruff)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/Zephyrkul/sans/master.svg)](https://results.pre-commit.ci/latest/github/Zephyrkul/sans/master)[![Documentation Status](https://readthedocs.org/projects/sans/badge/?version=latest)](http://sans.readthedocs.org/en/latest/?badge=latest)**S**ynchronous / **A**synchronous **N**ation**S**tatesA [fully typed](https://docs.python.org/3/library/typing.html&gt;) extension for [HTTPX](https://www.python-httpx.org/) for the [NationStates API](https://www.nationstates.net/pages/api.html).## Installing```shpython3 -m pip install -U sans```Development version:```shpython3 -m pip install -U https://github.com/zephyrkul/sans/archive/master.zip#egg=sans```## Examples### Synchronous```pyimport sansfrom xml.etree import ElementTree as ETdef main():   sans.set_agent(&quot;Darcania&quot;)   request = sans.Nation(      &quot;darcania&quot;,      &quot;fullname population flag census&quot;,      mode=&quot;score&quot;,      scale=&quot;65 66&quot;,   )   root = sans.get(request).xml   sans.indent(root)   print(ET.tostring(root, encoding=&quot;unicode&quot;))   with sans.stream(&quot;GET&quot;, sans.RegionsDump()) as response:      for region in response.iter_xml():         sans.indent(region)         print(ET.tostring(region, encoding=&quot;unicode&quot;))if __name__ == &quot;__main__&quot;:   main()```### Asynchronous```pyimport asyncioimport sansfrom xml.etree import ElementTree as ETasync def main():   sans.set_agent(&quot;Darcania&quot;)   async with sans.AsyncClient() as client:      request = sans.Nation(         &quot;darcania&quot;,         &quot;fullname population flag census&quot;,         mode=&quot;score&quot;,         scale=&quot;65 66&quot;,      )      root = (await client.get(request)).xml      sans.indent(root)      print(ET.tostring(root, encoding=&quot;unicode&quot;))      async with client.stream(&quot;GET&quot;, sans.RegionsDump()) as response:         async for region in response.aiter_xml():            sans.indent(region)            print(ET.tostring(region, encoding=&quot;unicode&quot;))if __name__ == &quot;__main__&quot;:   asyncio.run(main())```### Authentication```pyauth = sans.NSAuth(password=&quot;hunter2&quot;)sans.get(sans.Nation(&quot;testlandia&quot;, &quot;ping&quot;), auth=auth)# X-Autologin is automatically retrieved and stored for when the auth object is re-usedprint(auth.autologin)# X-Pin is cached internally for repeated requestsroot = sans.get(sans.Nation(&quot;testlandia&quot;, &quot;packs&quot;), auth=auth).xml```### Telegrams```pylimiter = sans.TelegramLimiter(recruitment=False)# The Telegram API can be used without a TelegramLimiter, but marking it ahead of time can save an API call.response = sans.get(sans.Telegram(client=&quot;abcd1234&quot;, tgid=&quot;1234&quot;, key=&quot;abcdef1234567890&quot;, to=&quot;testlandia&quot;), auth=limiter)assert response.content = b&quot;queued&quot;```## Command Line```xmlsans --nation darcania census --scale &quot;65 66&quot; --mode score --agent Darcania&lt;NATION id=&quot;darcania&quot;&gt;   &lt;CENSUS&gt;      &lt;SCALE id=&quot;65&quot;&gt;         &lt;SCORE&gt;8145.00&lt;/SCORE&gt;      &lt;/SCALE&gt;      &lt;SCALE id=&quot;66&quot;&gt;         &lt;SCORE&gt;0.00&lt;/SCORE&gt;      &lt;/SCALE&gt;   &lt;/CENSUS&gt;&lt;/NATION&gt;sans --nation testlandia fullname&lt;NATION id=&quot;testlandia&quot;&gt;   &lt;FULLNAME&gt;The Hive Mind of Testlandia&lt;/FULLNAME&gt;&lt;/NATION&gt;sans --region &quot;the north pacific&quot; numnations lastupdate&lt;REGION id=&quot;the_north_pacific&quot;&gt;   &lt;LASTUPDATE&gt;1685681810&lt;/LASTUPDATE&gt;   &lt;NUMNATIONS&gt;9535&lt;/NUMNATIONS&gt;&lt;/REGION&gt;sans --quitNo query provided. Exiting...```## Requirements- [Python 3.7+](https://www.python.org/)- [httpx](https://pypi.org/project/httpx/)</longdescription>
</pkgmetadata>