<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Knot Floer Homology===================Python wrapper for Zolt치n Szab칩's `HFK Calculator`_.Installing----------To install and test, do the following to install the current releasefrom `PyPI`_::  python3 -m pip install knot_floer_homology  python3 -m knot_floer_homology.testYou should see a result such as ``TestResults(failed=0, attempted=24)``.Usage-----In Python, do::  &gt;&gt;&gt; import knot_floer_homology  &gt;&gt;&gt; PD = [(2,0,3,15),(0,6,1,5),(6,2,7,1),(3,10,4,11),(9,4,10,5),(7,12,8,13),(13,8,14,9),(11,14,12,15)]  &gt;&gt;&gt; knot_floer_homology.pd_to_hfk(PD)  {'L_space_knot': False,   'epsilon': 0,   'fibered': True,   'modulus': 2,   'nu': 0,   'ranks': {(-2, -2): 1, (-1, -1): 2, (0, 0): 3, (1, 1): 2, (2, 2): 1},   'seifert_genus': 2,   'tau': 0,   'total_rank': 9}It also accepts `Spherogram`_ knots as input::  &gt;&gt;&gt; import spherogram  &gt;&gt;&gt; L = spherogram.Link('K10n10')  &gt;&gt;&gt; ans = knot_floer_homology.pd_to_hfk(L)  &gt;&gt;&gt; ans['seifert_genus']  3It can also return the simplified UV = 0 knot Floer chain complex,do::  &gt;&gt;&gt; help(knot_floer_homology.pd_to_hfk)for details.License-------Copyright Zolt치n Szab칩, Marc Culler, Nathan M. Dunfield, and MatthiasGoerner, 2017-present.  This code is released under the `GNU GeneralPublic License, version 2`_ or (at your option) any later version aspublished by the Free Software Foundation... _HFK Calculator: https://web.math.princeton.edu/~szabo/HFKcalc.html.. _PyPI: https://pypi.org.. _Spherogram: https://github.com/3-manifolds/Spherogram.. _GNU General Public License, version 2: https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</longdescription>
</pkgmetadata>