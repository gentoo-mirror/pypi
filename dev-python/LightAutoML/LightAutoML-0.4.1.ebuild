# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Fast and customizable framework for automatic ML model creation (AutoML)"

HOMEPAGE="https://lightautoml.readthedocs.io/en/latest/"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/44/32/eec22b2a6f0c7e8867681e83bc8ba3c3c71c34d87c578a88d2f3387d6b91/lightautoml-${REALVERSION}.tar.gz"
SOURCEFILE="lightautoml-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="afg all cv hypex nlp report"
DEPENDENCIES="<dev-python/poetry-core-2.0.0[${PYTHON_USEDEP}]
	dev-python/pandas[${PYTHON_USEDEP}]
	<dev-python/numpy-2.0.0[${PYTHON_USEDEP}]
	<dev-python/numpy-2.0.0[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	>=dev-python/scikit-learn-0.22[${PYTHON_USEDEP}]
	dev-python/lightgbm[${PYTHON_USEDEP}]
	dev-python/lightgbm[${PYTHON_USEDEP}]
	dev-python/catboost[${PYTHON_USEDEP}]
	dev-python/xgboost[${PYTHON_USEDEP}]
	dev-python/optuna[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/holidays[${PYTHON_USEDEP}]
	<=dev-python/statsmodels-0.14.0[${PYTHON_USEDEP}]
	dev-python/networkx[${PYTHON_USEDEP}]
	dev-python/cmaes[${PYTHON_USEDEP}]
	dev-python/pyyaml[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/joblib[${PYTHON_USEDEP}]
	dev-python/AutoWoE[${PYTHON_USEDEP}]
	dev-python/jinja2[${PYTHON_USEDEP}]
	dev-python/json2html[${PYTHON_USEDEP}]
	dev-python/seaborn[${PYTHON_USEDEP}]
	>=dev-python/sqlalchemy-2.0[${PYTHON_USEDEP}]
	nlp? ( dev-python/gensim[${PYTHON_USEDEP}] )
	all? ( dev-python/gensim[${PYTHON_USEDEP}] )
	nlp? ( dev-python/nltk[${PYTHON_USEDEP}] )
	all? ( dev-python/nltk[${PYTHON_USEDEP}] )
	nlp? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	cv? ( dev-python/albumentations[${PYTHON_USEDEP}] )
	all? ( dev-python/albumentations[${PYTHON_USEDEP}] )
	cv? ( dev-python/timm[${PYTHON_USEDEP}] )
	cv? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	all? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	cv? ( dev-python/pywavelets[${PYTHON_USEDEP}] )
	all? ( dev-python/pywavelets[${PYTHON_USEDEP}] )
	cv? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	all? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	afg? ( dev-python/featuretools[${PYTHON_USEDEP}] )
	all? ( dev-python/featuretools[${PYTHON_USEDEP}] )
	report? ( ~dev-python/weasyprint-52.5[${PYTHON_USEDEP}] )
	all? ( ~dev-python/weasyprint-52.5[${PYTHON_USEDEP}] )
	report? ( ~dev-python/cffi-1.14.5[${PYTHON_USEDEP}] )
	all? ( ~dev-python/cffi-1.14.5[${PYTHON_USEDEP}] )
	hypex? ( dev-python/hypex[${PYTHON_USEDEP}] )
	all? ( dev-python/hypex[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
