<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># GCGC&gt; GCGC is a tool for feature processing on Biological Sequences.[![](https://github.com/tshauck/gcgc/workflows/Run%20Tests%20and%20Lint/badge.svg)](https://github.com/tshauck/gcgc/actions?query=workflow%3A%22Run+Tests+and+Lint%22)[![](https://img.shields.io/pypi/v/gcgc.svg)](https://pypi.python.org/pypi/gcgc)[![code style black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)## InstallationGCGC is primarily intended to be used as part of a larger workflow insidePython.To install via pip:```sh$ pip install gcgc```If you'd like to use code that helps gcgc's tokenizers integrate with commonthird party libraries, either install those packages separately, or use gcgc'sextras.```sh$ pip install 'gcgc[pytorch,hf]'```## DocumentationThe GCGC documentation is at [gcgc.trenthauck.com](http://gcgc.trenthauck.com),please see it for examples.### Quick StartThe easiest way to get started is to import the kmer tokenizer, configure it,then start tokenizing.```pythonfrom gcgc import KmerTokenizerkmer_tokenizer = KmerTokenizer(alphabet=&quot;unambiguous_dna&quot;)encoded = kmer_tokenizer.encode(&quot;ATCG&quot;)print(encoded)```sample output:```[1, 6, 7, 8, 5, 2]```This output includes the &quot;bos&quot; token, the &quot;eos&quot; token, and the four nucleotidetokens in between.You can go the other way and convert the integers to strings.```pythonfrom gcgc import KmerTokenizerkmer_tokenizer = KmerTokenizer(alphabet=&quot;unambiguous_dna&quot;)decoded = kmer_tokenizer.decode(kmer_tokenizer.encode(&quot;ATCG&quot;))print(decoded)```sample output:```['&gt;', 'A', 'T', 'C', 'G', '&lt;']```There's also the vocab for the kmer tokenizer.```pythonfrom gcgc import KmerTokenizerkmer_tokenizer = KmerTokenizer(alphabet=&quot;unambiguous_dna&quot;)print(kmer_tokenizer.vocab.stoi)```sample output:```{'|': 0, '&gt;': 1, '&lt;': 2, '#': 3, '?': 4, 'G': 5, 'A': 6, 'T': 7, 'C': 8}```</longdescription>
</pkgmetadata>