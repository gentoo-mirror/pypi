<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># OpenGrm PyniniThis is a a Python extension module for compiling, optimizing and applyinggrammar rules. Rules can be compiled into weighted finite state transducers,pushdown transducers, or multi-pushdown transducers. It uses OpenFstfinite-state transducers (FSTs) and FST archives (FArs) as inputs and outputs.This library is primarily developed by [Kyle Gorman](mailto:kbg@google.com).If you use Pynini in your research, we would appreciate if you cite thefollowing paper:&gt; K. Gorman. 2016.&gt; [Pynini: A Python library for weighted finite-state grammar compilation](http://openfst.cs.nyu.edu/twiki/pub/GRM/Pynini/pynini-paper.pdf).&gt; In *Proc. ACL Workshop on Statistical NLP and Weighted Automata*, 75-80.(Note that some of the code samples in the paper are now out of date and notexpected to work.)## Dependencies-   A standards-compliant C++17 compiler (GCC \&gt;= 7 or Clang \&gt;= 700)-   The compatible recent version of [OpenFst](http://openfst.org) (see    [`NEWS`](NEWS) for this) built with the `grm` extensions (i.e., built with    `./configure --enable-grm`) and headers-   [Python 3.6+](https://www.python.org) and headers## Installation instructionsThere are various ways to install Pynini depending on your platform.### WindowsWhile Pynini is neither designed for nor tested on Windows, it can be installedusing the[Windows Subsystem for Linux](https://docs.microsoft.com/en-us/windows/wsl/install-win10)(WSL). Simply enter the WSL environment and follow the Linux instructions below.### MacOSThe pre-compiled library can be installed from[`conda-forge`](https://conda-forge.org/) by running `conda install -cconda-forge pynini`.Alternatively, one can build from source from [PyPI](https://pypi.org/) byrunning `pip install pynini`.Finally, one can use [Bazel](https://bazel.build) to build from source byrunning `bazel build //:all` anywhere in the source tree.### LinuxThe pre-compiled library can be installed from[`conda-forge`](https://conda-forge.org/) by running `conda install -cconda-forge pynini`.Alternatively, one can install a pre-compiled[`manylinux`](https://github.com/pypa/manylinux) wheel from[PyPI](https://pypi.org/) by running `pip install pynini`. This will install thepre-compiled `manylinux` wheel (if available for the release and compatible withyour platform), and build and install from source if not. Unlike the`conda-forge` option above, which also installs [OpenFst](http://openfst.org/)and [Graphviz](https://graphviz.org/), this does not install the OpenFst orGraphviz command-line tools. See the enclosed[`Dockerfile`](third_party/Dockerfile) for instructions for building anddeploying `manylinux` wheels.Finally, one can use [Bazel](https://bazel.build) to build from source byrunning `bazel build //:all` anywhere in the source tree.## TestingTo confirm successful installation, run `pip install -r requirements`, then`python tests/pynini_test.py`. If all tests pass, the final line will read `OK`.## Python version supportPynini 2.0.0 and onward support Python 3. Pynini 2.1 versions (onward) dropPython 2 support.# LicensePynini is released under the Apache license. See [`LICENSE`](LICENSE) for moreinformation.# Interested in contributing?See [`CONTRIBUTING`](CONTRIBUTING) for more information.# Mandatory disclaimerThis is not an official Google product.</longdescription>
</pkgmetadata>