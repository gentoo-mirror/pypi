<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Sorna Manager and API Gateway=============================Package Structure------------------  sorna-  manager: Abstraction of agents and computation kernels-  gateway: RESTful API gateway based on aiohttpInstallation------------Sorna Manager requires Python 3.6 or higher. We highly recommend to use`pyenv &lt;https://github.com/yyuu/pyenv&gt;`__ for an isolated setup ofcustom Python versions that might be different from defaultinstallations managed by your OS or Linux distros... code:: console    $ pip install sorna-managerFor development:~~~~~~~~~~~~~~~~We recommend to use virtual environments in Python. You may share avirtual environment with other Sorna projects... code:: console    $ git clone https://github.com/lablup/sorna-manager.git    $ python -m venv venv-sorna    $ source venv-sorna/bin/activate    $ pip install -U pip setuptools  # ensure latest versions!    $ pip install -r requirements-dev.txtRunning and Deployment----------------------Prepare databases.~~~~~~~~~~~~~~~~~~-  An RDBMS (PostgreSQL)-  A Redis server-  Sorna Manager uses the following `database   IDs &lt;http://redis.io/commands/SELECT&gt;`__   -  1: to track status and availability of kernel sessions   -  2: to track status and availability of instances (agents)   -  3: to track session IDs   -  These IDs are defined in      `sorna-common &lt;https://github.com/lablup/sorna-common/blob/master/sorna/defs.py&gt;`__Configuration~~~~~~~~~~~~~You need to specify configuration parameters using either CLI argumentsor environment variables. The default values are for developmentsettings so you should set most of them explicitly in production. Fordetails about arguments and their equivalent environment variable names,run the server module with ``--help``.Running the API gateway server from a command line:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: console    $ python -m sorna.gateway.serverExample supervisord config:~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: dosini    [program:sorna-manager]    stopsignal = TERM    stopasgroup = true    command = /home/sorna/run-manager.shTCP Port numbers to open~~~~~~~~~~~~~~~~~~~~~~~~-  5001 (for legacy ZeroMQ-based interface)-  8080 / 8443 (for local development)-  80 / 443 (for HTTP/HTTPS API requests in production)</longdescription>
</pkgmetadata>