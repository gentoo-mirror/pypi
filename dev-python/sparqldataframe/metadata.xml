<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sparqldataframe[![image](https://img.shields.io/pypi/v/sparqldataframe.svg)](https://pypi.python.org/pypi/sparqldataframe)A Python library that can send[SPARQL](https://en.wikipedia.org/wiki/SPARQL) queries to a SPARQLendpoint and retrieve a [Pandas](http://pandas.pydata.org/) dataframefrom the result.# Installation``` bashpip install sparqldataframe```# UsageHere is an example how to run a SPARQL query on the[Wikidata](http://wikidata.org/) endpoint:``` pythonimport sparqldataframesparql_query = &quot;&quot;&quot;PREFIX wd: &lt;http://www.wikidata.org/entity/&gt;PREFIX wdt: &lt;http://www.wikidata.org/prop/direct/&gt;PREFIX wikibase: &lt;http://wikiba.se/ontology#&gt;PREFIX bd: &lt;http://www.bigdata.com/rdf#&gt;SELECT ?item ?itemLabel WHERE {  ?item wdt:P31 wd:Q146.  SERVICE wikibase:label {    bd:serviceParam wikibase:language &quot;[AUTO_LANGUAGE],en&quot;.  }}&quot;&quot;&quot;df = sparqldataframe.query(  &quot;https://query.wikidata.org/sparql&quot;,  sparql_query)```Wikidata and [DBPedia](http://dbpedia.org/) can be both used withoutadding the SPARQL endpoint url by using the `wikidata_query()` and`dbpedia_query()` functions respectively:``` pythondf = sparqldataframe.wikidata_query(sparql_query)df = sparqldataframe.dbpedia_query(sparql_query)```# LicenseThis project is licensed under the MIT license. See the[LICENSE](LICENSE) for details.</longdescription>
</pkgmetadata>