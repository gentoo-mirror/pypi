<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PYGAMD: Python GPU-Accelerated Molecular Dynamics Software==========================================================Version 1---------Copyright: Lu group-------------------Molecular dynamics is an essential tool in the scientific research oncolloids, polymers, biomolecules, and etc. ``PYGAMD`` is a platformbased on Python3 Numba where users can define their models and methodsby themselves. The simulation models could be ranging from all-atom tocoarse-grained scales.Installation------------pygamd:::   python3 setup.py install::   pip install pygamdRequirements:~~~~~~~~~~~~~1. Python3 including numba, numpy, and pybind11 packages2. NVIDIA CUDA Toolkit &gt;= 7.0Citation--------::   To cite PYGAMD in publications use:       Thanks to Zhongyuan Lu group for providing PYGAMD software in our research work.Documentation-------------Official website: `https://pygamd.com &lt;https://pygamd.com&gt;`__ Onlinemanual could be read here:`https://pygamd-v1.readthedocs.io/en/latest/ &lt;https://pygamd-v1.readthedocs.io/en/latest/&gt;`__.Tutorials written by jupyter notebook are given here:`https://nbviewer.jupyter.org/github/youliangzhu/pygamd-v1/tree/main/tutorials/index.ipynb &lt;https://nbviewer.jupyter.org/github/youliangzhu/pygamd-v1/tree/main/tutorials/index.ipynb&gt;`__.More examples could be found here:`https://github.com/youliangzhu/pygamd-v1/tree/main/examples &lt;https://github.com/youliangzhu/pygamd-v1/tree/main/examples&gt;`__.Example: DPD simulation of diblock copolymer--------------------------------------------1 First step: generate configuration::   from poetry import molgen   mol1=molgen.Molecule(10)#particle number   mol1.setParticleTypes(&quot;A,A,A,A,A,B,B,B,B,B&quot;)#type   mol1.setTopology(&quot;0-1,1-2,2-3,3-4,4-5,5-6,6-7,7-8,8-9&quot;)#topology   mol1.setBondLength(0.75)#bond length   mol1.setMass(1.0)#mass   gen=molgen.Generators(20,20,20) # box size in x, y, and z direction   gen.addMolecule(mol1,2400)#molecule, the number of molecules   gen.outPutMST(&quot;A5B5&quot;) #file name2 Second step: run simulation::   import pygamd          mst = pygamd.snapshot.read(&quot;A5B5.mst&quot;)   app = pygamd.application.dynamics(info=mst, dt=0.04)   fn = pygamd.force.dpd(info=mst, rcut=1.0)   fn.setParams(type_i=&quot;A&quot;, type_j=&quot;A&quot;, alpha=25.0, sigma=3.0)   fn.setParams(type_i=&quot;B&quot;, type_j=&quot;B&quot;, alpha=25.0, sigma=3.0)   fn.setParams(type_i=&quot;A&quot;, type_j=&quot;B&quot;, alpha=40.0, sigma=3.0)   app.add(fn)   fb = pygamd.force.bond(info=mst, func='harmonic')   fb.setParams(bond_type = 'A-A', param=[4.0, 0.0])# param=[k, r0]   fb.setParams(bond_type = 'A-B', param=[4.0, 0.0])# param=[k, r0]   fb.setParams(bond_type = 'B-B', param=[4.0, 0.0])# param=[k, r0]   app.add(fb)   inn = pygamd.integration.gwvv(info=mst, group='all')   app.add(inn)   dm = pygamd.dump.mst(info=mst, group=['A', 'B'], file='p.mst', period=10000)   app.add(dm)   di = pygamd.dump.data(info=mst, group='all', file='data.log', period=100)   app.add(di)   app.run(500000)Contributing------------We welcome contributions to PYGAMD. Whether it is reporting a bug,starting a discussion by asking a question, or proposing/requesting anew feature, please go by creating a new issue here(`https://github.com/youliangzhu/pygamd-v1/issues/ &lt;https://github.com/youliangzhu/pygamd-v1/issues/&gt;`__)or writing an email to the author Dr. You-Liang Zhu (Email:ylzhu@pygamd.com) so that we can talk about it. Please note that thisproject is released with a Contributor Code of Conduct. By participatingin this project you agree to abide by its terms.</longdescription>
</pkgmetadata>