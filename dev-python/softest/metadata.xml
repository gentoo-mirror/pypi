<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># softest - Soft AssertionsSupports the soft assert style of testing,  where multiple assertions can fail within the same method,  while collecting and formatting those failures' stack traces  for reporting by a final `assert_all` call.Such stack traces are enhanced  to include the call hierarchy  from within the test class.## Usage```pythonimport softestclass ExampleTest(softest.TestCase):def test_example(self):self.soft_assert(self.assertEqual, 'Worf', 'wharf', 'Klingon is not ship receptacle')self.soft_assert(self.assertTrue, True)self.soft_assert(self.assertTrue, False)self.assert_all()def test_example_with_only_one_failure(self):self.soft_assert(self.assertTrue, False)self.assert_all()# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----class SomeException(Exception):def __init__(self, reason:str):super().__init__(self)self.reason = reasondef __str__(self):return self.reason# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----def test_assert_raises(self):with self.soft_assert_raises(self.SomeException) as assertion_context:print('=)')print(assertion_context)with self.soft_assert_raises_regex(self.SomeException, 'reason') as another_context:raise self.SomeException('reazon')print(another_context)self.assert_all()if __name__ == '__main__':softest.main()```### Error Console Output```======================================================================FAIL: &quot;test_assert_raises&quot; (ExampleTest)----------------------------------------------------------------------Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 41, in test_assert_raises    self.assert_all()  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\case.py&quot;, line 140, in assert_all    self.fail(''.join(failure_output))AssertionError: ++++ soft assert failure details follow below ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++The following 2 failures were found in &quot;test_assert_raises&quot; (ExampleTest):+----------------------+----------------------+----------------------+ Failure 1 (&quot;test_assert_raises&quot; method)+----------------------+----------------------+----------------------+Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 32, in test_assert_raises    print('=)')  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\context.py&quot;, line 51, in __exit__    &quot;Context actions did not raise {}&quot;.format(exception_name))  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 135, in _raiseFailure    raise self.test_case.failureException(msg)AssertionError: Context actions did not raise SomeException-+ [1/2] +-+----------------------+----------------------+----------------------+ Failure 2 (&quot;test_assert_raises&quot; method)+----------------------+----------------------+----------------------+SomeException: reazon  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 37, in test_assert_raises    raise SomeException('reazon')During handling of the above exception, another exception occurred:Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\context.py&quot;, line 71, in __exit__    self.expected_regex.pattern, str(exception_value)))  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 135, in _raiseFailure    raise self.test_case.failureException(msg)AssertionError: &quot;reason&quot; does not match the supplied regular expression &quot;reazon&quot;-+ [2/2] +-======================================================================FAIL: &quot;test_example&quot; (ExampleTest)----------------------------------------------------------------------Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 24, in test_example    self.assert_all()  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\case.py&quot;, line 140, in assert_all    self.fail(''.join(failure_output))AssertionError: ++++ soft assert failure details follow below ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++The following 2 failures were found in &quot;test_example&quot; (ExampleTest):+----------------------+----------------------+----------------------+ Failure 1 (&quot;test_example&quot; method)+----------------------+----------------------+----------------------+Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 20, in test_example    self.soft_assert(self.assertEqual, 'Worf', 'wharf', 'Klingon is not ship receptacle')  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\case.py&quot;, line 64, in soft_assert    assert_method(*arguments, **keywords)  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 829, in assertEqual    assertion_func(first, second, msg=msg)  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 1203, in assertMultiLineEqual    self.fail(self._formatMessage(msg, standardMsg))  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 670, in fail    raise self.failureException(msg)AssertionError: 'Worf' != 'wharf'- Worf+ wharf : Klingon is not ship receptacle-+ [1/2] +-+----------------------+----------------------+----------------------+ Failure 2 (&quot;test_example&quot; method)+----------------------+----------------------+----------------------+Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 22, in test_example    self.soft_assert(self.assertTrue, False)  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\case.py&quot;, line 64, in soft_assert    assert_method(*arguments, **keywords)  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 682, in assertTrue    raise self.failureException(msg)AssertionError: False is not true-+ [2/2] +-======================================================================FAIL: &quot;test_example_with_only_one_failure&quot; (ExampleTest)----------------------------------------------------------------------Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 28, in test_example_with_only_one_failure    self.assert_all()  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\case.py&quot;, line 140, in assert_all    self.fail(''.join(failure_output))AssertionError: ++++ soft assert failure details follow below ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++The following failure was found in &quot;test_example_with_only_one_failure&quot; (ExampleTest):+----------------------+----------------------+----------------------+Traceback (most recent call last):  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\test\softest_test.py&quot;, line 27, in test_example_with_only_one_failure    self.soft_assert(self.assertTrue, False)  File &quot;C:\more-programs\automation\workspaces\Ivan\Softest\src\main\softest\case.py&quot;, line 64, in soft_assert    assert_method(*arguments, **keywords)  File &quot;C:\Users\nicholas.umble\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py&quot;, line 682, in assertTrue    raise self.failureException(msg)AssertionError: False is not true-+ [1/1] +-----------------------------------------------------------------------Ran 3 tests in 0.016sFAILED (failures=3)```## Versions### 1.2.0.0Added `soft_assert_raises` and `soft_assert_raises_regex` to support/replace `assertRaises` and `assertRaisesRegex`.Updated output to include a failure count at the end of each failure, such as `-+ [1/2] +-`.</longdescription>
</pkgmetadata>