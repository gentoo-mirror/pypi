<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># graph-tools Packagegraph_tools - tools for graph theory and network science with many generation models# DESCRIPTIONThis manual page documents **graph-tools** module, a Python module thatprovides a number of features for handling directed/undirected graphs andcomplex networks.  **graph-tools** was initially developed for networkingresearchers, who perform experiments in the field of graph theory and networkscience.  **graph-tools** provides Graph class, which supports both directedand undirected graphs with multi-edges, vertex weights, edge weights, andgraph attributes.  A number of graph/network generation models and graphalgorithms are supported.Major features of **graph-tools** are:- directed/undirected graph with multi-edges, vertex weights, edge weights,  and graph attributes- vertex operations (add, delete, degree, neighbors, random vertex, and  set/get vertex attributes)- edge operations (add, delete, random edge, and set/get edge attributes)- graph operations (copy, adjacency matrix, diagonal matrix, Laplacian matrix)- major graph algorithms (exploration, connectivity, components, maximal  component, Dijkstra, Floyd-Warshall, betweenness centrality)- spectral graph theory (spectral radius, spectral gap, natural connectivity,  algebraic connectivity, effective_resistance, and spanning tree count)- a number of graph/network generation models (random graph, ER (Erdos Renyi),  BA (Barabasi Albert), randomized BA, ring, tree, binary tree, BA tree,  generalized BA, latent, lattice, Voronoi, DB (Degree Bounded), configuration  model, random regular graph, Li-Miani graph)- graph import/export in DOT (GraphViz) format# HISTORYThe development of **graph-tools** started in 2007, which was initially anextension to Graph module in CPAN (Comprehensive Perl Archive Network) byJarkko Hietaniemi.  Our Perl module has been called **graphtools** for longtime and Perl module names were Graph::Util and Graph::Enhanced.**graphtools** in Perl has been developed until 2018.  Python version of**graph-tools** was born in 2018 by porting **graphtools** in Perl to Python.Hence, the internal structure and the coding style receives significantinfluence from Graph module by Jarkko Hietaniemi.# EXAMPLE```pythonfrom graph_tools import Graph# create a graph with four nodes and two edgesg = Graph(directed=True)g.add_edge(1, 2)g.add_edge(2, 3)g.add_vertex(4)print(g)# find the all shortest paths from vertex 1dist, prev = g.dijkstra(1)print(dist)# generate BA graph with 100 verticesg = Graph(directed=False).create_graph('barabasi', 100)# check if all vertices are mutually connectedprint(g.is_connected())# compute the betweenness centrality of vertex 1print(g.betweenness(1))```# INSTALLATION```pythonpip3 install graph-tools```# AVAILABILITYThe latest version of **graph-tools** module is available at PyPI(https://pypi.org/project/graph-tools/) .# SEE ALSOgraphviz - graph visualization software (https://graphviz.org/)# AUTHORHiroyuki Ohsaki &lt;ohsaki[atmark]lsnl.jp&gt;</longdescription>
</pkgmetadata>