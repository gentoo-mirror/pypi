<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AWS CLI v2 for Python[![PyPI - awscliv2](https://img.shields.io/pypi/v/awscliv2.svg?color=blue&amp;label=awscliv2)](https://pypi.org/project/awscliv2)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/awscliv2.svg?color=blue)](https://pypi.org/project/awscliv2)[![PyPI - Downloads](https://img.shields.io/pypi/dm/awscliv2?color=blue)](https://pypistats.org/packages/awscliv2)Wrapper for [AWS CLI v2](https://awscli.amazonaws.com/v2/documentation/api/latest/index.html).- No dependency hell, like with original [awscli](https://pypi.org/project/awscli/)- Can install and update `awscliv2` binaries- Provides access to all services- Has Python interface- [AWS CLI v2 for Python](#aws-cli-v2-for-python)  - [Before you start](#before-you-start)  - [Installation](#installation)  - [Usage](#usage)    - [From command line](#from-command-line)    - [Docker fallback](#docker-fallback)    - [Extra commands](#extra-commands)    - [As a Python module](#as-a-python-module)  - [Development](#development)  - [How to help](#how-to-help)  - [Versioning](#versioning)  - [Latest changes](#latest-changes)## Before you start- This is not an official AWS CLI v2 application, [rant there](https://github.com/aws/aws-cli/issues/4947)- Check the source code of this app, as you are working with sensitive data- By default this app uses [amazon/aws-cli](https://hub.docker.com/r/amazon/aws-cli) Docker image- To use [binaries for your OS](https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html), run `awsv2 --install`- Cross-check the source code again, probably I want to steal your credentials## Installation```bashpython -m pip install awscliv2```You can add an alias to your `~/.bashrc` or `~/.zshrc` to use it as a regular `AWS CLI v2````bashalias aws='awsv2'```## Usage### From command lineInstall `AWS CLI v2`:```bash# do not worry if this fails, you can still use awsv2 if you have docker installedawsv2 --install```Configure default profile if needed:```bashAWS_ACCESS_KEY_ID='my-access-key'AWS_SECRET_ACCESS_KEY='my-secret-key'# --configure &lt;profile_name&gt; &lt;aws_access_key_id&gt; &lt;aws_secret_access_key&gt; [&lt;aws_session_token&gt;]awsv2 --configure default ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}awsv2 configure set region us-west-1```Use `AWS CLI` as usual:```bash# alias for# docker run --rm -i -v ~/.aws:/root/.aws -v $(pwd):/aws amazon/aws-cli $@awsv2 s3 ls# or as a python modulepython -m awscliv2 s3 ls```Also, you can check [scripts/example.sh](https://github.com/youtype/awscliv2/blob/main/scripts/example.sh)### Docker fallbackUnless you run `awsv2 --install` once, application will use [amazon/aws-cli](https://hub.docker.com/r/amazon/aws-cli) Docker image. The image is not ideal, and it uses `root` user, so fix downloaded file permissions manually. Or just run `awsv2 --install`Update it with `docker pull amazon/aws-cli`.Container uses two volumes:- `$HOME/.aws` -&gt; `/root/.aws` - credentials and config store- `$(cwd)` -&gt; `/aws` - Docker image workdir### Extra commands`awscliv2` contains a few commands to make your life easier, especially in CI or any non-TTY environment.- `awsv2 -U/--update/--install` - Install `AWS CLI v2`- `awsv2 --configure &lt;profile_name&gt; &lt;aws_access_key_id&gt; &lt;aws_secret_access_key&gt; [&lt;aws_session_token&gt;] [&lt;region&gt;]` - set profile in `~/.aws/credentials`- `awsv2 --assume-role &lt;profile_name&gt; &lt;source_profile&gt; &lt;role_arn&gt;` - create a new profile with assume role credentials- `awsv2 -V/--version` - Output `awscliv2` and `AWS CLI v2` versions### As a Python moduleBasic usage```pythonfrom awscliv2.api import AWSAPIfrom awscliv2.exceptions import AWSCLIErroraws_api = AWSAPI()try:    output = aws_api.execute([&quot;s3&quot;, &quot;ls&quot;])except AWSCLIError as e:    print(f&quot;Something went wrong: {e}&quot;)else:    print(output)```Install binaries for your OS from Python```pythonfrom awscliv2.installers import install_multiplatforminstall_multiplatform()```You can also set credentials or assume roles```pythonfrom awscliv2.api import AWSAPIaws_api = AWSAPI()aws_api.set_credentials(&quot;profile_name&quot;, &quot;access_key&quot;, &quot;secret_key&quot;, &quot;&quot;, &quot;region&quot;)aws_api.assume_role(&quot;name&quot;, &quot;source_profile&quot;, &quot;role_arn&quot;)```## Development- Install [poetry](https://python-poetry.org/)- Run `poetry install`- Use `black` formatter in your IDE## How to help- Ping AWS team to release an official PyPI package- Share your experience in issues## Versioning`awscliv2` version follows [PEP 440](https://www.python.org/dev/peps/pep-0440/).## Latest changesFull changelog can be found in [Releases](https://github.com/youtype/awscliv2/releases).</longdescription>
</pkgmetadata>