<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>lib_log_utils=============Version v1.4.14.2 as of 2022-06-02 see `Changelog`_|build_badge| |license| |jupyter| |pypi| |pypi-downloads| |black||codecov| |better_code| |cc_maintain| |cc_issues| |cc_coverage| |snyk|.. |build_badge| image:: https://github.com/bitranox/lib_log_utils/actions/workflows/python-package.yml/badge.svg   :target: https://github.com/bitranox/lib_log_utils/actions/workflows/python-package.yml.. |license| image:: https://img.shields.io/github/license/webcomics/pywine.svg   :target: http://en.wikipedia.org/wiki/MIT_License.. |jupyter| image:: https://mybinder.org/badge_logo.svg   :target: https://mybinder.org/v2/gh/bitranox/lib_log_utils/master?filepath=lib_log_utils.ipynb.. for the pypi status link note the dashes, not the underscore !.. |pypi| image:: https://img.shields.io/pypi/status/lib-log-utils?label=PyPI%20Package   :target: https://badge.fury.io/py/lib_log_utils.. |codecov| image:: https://img.shields.io/codecov/c/github/bitranox/lib_log_utils   :target: https://codecov.io/gh/bitranox/lib_log_utils.. |better_code| image:: https://bettercodehub.com/edge/badge/bitranox/lib_log_utils?branch=master   :target: https://bettercodehub.com/results/bitranox/lib_log_utils.. |cc_maintain| image:: https://img.shields.io/codeclimate/maintainability-percentage/bitranox/lib_log_utils?label=CC%20maintainability   :target: https://codeclimate.com/github/bitranox/lib_log_utils/maintainability   :alt: Maintainability.. |cc_issues| image:: https://img.shields.io/codeclimate/issues/bitranox/lib_log_utils?label=CC%20issues   :target: https://codeclimate.com/github/bitranox/lib_log_utils/maintainability   :alt: Maintainability.. |cc_coverage| image:: https://img.shields.io/codeclimate/coverage/bitranox/lib_log_utils?label=CC%20coverage   :target: https://codeclimate.com/github/bitranox/lib_log_utils/test_coverage   :alt: Code Coverage.. |snyk| image:: https://img.shields.io/snyk/vulnerabilities/github/bitranox/lib_log_utils   :target: https://snyk.io/test/github/bitranox/lib_log_utils.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg   :target: https://github.com/psf/black.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/lib-log-utils   :target: https://pypi.org/project/lib-log-utils/   :alt: PyPI - Downloadsthis library makes it easy to log colored messages from python and from the commandline. Text Wrapping is supported.whenever possible, it tries to autodetect the correct settings for colored output.currently the settings for TRAVIS and BINDER/Jupyter are detected automatically----automated tests, Travis Matrix, Documentation, Badges, etc. are managed with `PizzaCutter &lt;https://github.com/bitranox/PizzaCutter&gt;`_ (cookiecutter on steroids)Python version required: 3.6.0 or newertested on recent linux with python 3.6, 3.7, 3.8, 3.9, 3.10, pypy-3.8 - architectures: amd64`good code coverage &lt;https://codecov.io/gh/bitranox/lib_log_utils&gt;`_, flake8 style checking ,mypy static type checking ,tested under `Linux, macOS, Windows &lt;https://github.com/bitranox/lib_log_utils/actions/workflows/python-package.yml&gt;`_, automatic daily builds and monitoring----- `Try it Online`_- `Usage`_- `Usage from Commandline`_- `Installation and Upgrade`_- `Requirements`_- `Acknowledgements`_- `Contribute`_- `Report Issues &lt;https://github.com/bitranox/lib_log_utils/blob/master/ISSUE_TEMPLATE.md&gt;`_- `Pull Request &lt;https://github.com/bitranox/lib_log_utils/blob/master/PULL_REQUEST_TEMPLATE.md&gt;`_- `Code of Conduct &lt;https://github.com/bitranox/lib_log_utils/blob/master/CODE_OF_CONDUCT.md&gt;`_- `License`_- `Changelog`_----Try it Online-------------You might try it right away in Jupyter Notebook by using the &quot;launch binder&quot; badge, or click `here &lt;https://mybinder.org/v2/gh/{{rst_include.repository_slug}}/master?filepath=lib_log_utils.ipynb&gt;`_Usage-----------Python-----------import the module and check the code - it is very easy and documented thereas soon as I have some time, this will be completed (help welcome)Commandline-----------.. code-block:: bash   Usage:        log_util (-h | --version | --program_info)        log_util [Options] &quot;&lt;message&gt;&quot;        log_util &quot;&lt;message&gt;&quot; [Options]   Options:        -h, --help          show help        --version           show version        --program_info      show Program InfoArguments---------message    the message to logOptions-------===========================  ====================================================================================option                       description===========================  ====================================================================================-l --level &lt;level&gt;           the log level as number or predefined value, default = INFO-b --banner                  log as banner-w --width &lt;width&gt;           the width of the message or the banner, if text wrap is used, default = 140-s --silent &lt;True|False&gt; **  disables the output if set to &quot;True&quot; (not case sensitive)**, default = False-q --quiet                   disables the output (as flag), default = False-f --force                   take precedence over environment settings, default = False--wrap --nowrap              use text wrap (this is the default value), default = True--traceback --no-traceback   show traceback on commandline error, default = False-e --extended                extended log format, default = plain-p --plain                   plain log format, default = plain-c --colortest               color test===========================  ====================================================================================\**This makes it possible to silence messages elegantly in a shellscript:.. code-block:: bash        #!/bin/bash        # disable deprecation messages        DEP_MSG_OFF=&quot;True&quot;       ...       ...       log_util -l warning &quot;some deprecation message&quot; --silent=${DEP_MSG_OFF}       log_util -l info &quot;another deprecation message&quot; --silent=${DEP_MSG_OFF}       ...log levels--------------------=========   ===========Text        Integer=========   ===========NOTSET      0SPAM        5DEBUG       10VERBOSE     15INFO        20NOTICE      25WARNING     30SUCCESS     35ERROR       40CRITICAL    50=========   ===========Environment Settings--------------------========================  =======================================================================================environment variable      function========================  =======================================================================================LOG_UTIL_FMT              the log format - either &quot;plain&quot;, &quot;extended&quot; or a custom formatting string, default = plainLOG_UTIL_LEVEL            the level of the logger, one of the predefined log levels, or &quot;0&quot; - &quot;50&quot;, default = 0LOG_UTIL_WIDTH            the banner width if text wrap is used, must be &gt;=&quot;10&quot;, default = 140LOG_UTIL_WRAP             if text wrap should be used, must be True or False (not case sensitive), default = TrueLOG_UTIL_QUIET            if the logger is used at all - must be True or False (not case sensitive), default = FalseCOLOREDLOGS_LOG_FORMAT    `as described in coloredlogs &lt;https://coloredlogs.readthedocs.io/en/latest/api.html#environment-variables&gt;`_COLOREDLOGS_DATE_FORMAT   `as described in coloredlogs &lt;https://coloredlogs.readthedocs.io/en/latest/api.html#environment-variables&gt;`_COLOREDLOGS_FIELD_STYLES  `as described in coloredlogs &lt;https://coloredlogs.readthedocs.io/en/latest/api.html#environment-variables&gt;`_COLOREDLOGS_LEVEL_STYLES  `as described in coloredlogs &lt;https://coloredlogs.readthedocs.io/en/latest/api.html#environment-variables&gt;`_========================  =======================================================================================environment settings take precedence over commandline arguments, unless --force is passed to the commandlineEXAMPLES--------.. code-block:: bash    # multi-line banner    log_util -l warning &quot;Line1${IFS}Line2${IFS}Line3&quot;    # only show log messages from level WARNING upwards    export LOG_UTIL_LEVEL=WARNING    log_util -l info   &quot;spam&quot;   # this is not shown    log_util -l error  &quot;ham&quot;    # this is shown    # reset the log_level to 0 (the default value)    unset LOG_UTIL_LEVELUsage from Commandline------------------------.. code-block::   Usage: log_util [OPTIONS] [MESSAGE]     colored log messages and banners from commandline and python   Options:     --version                     Show the version and exit.     -e, --extended                extended log format     -p, --plain                   plain log format     -b, --banner                  log as banner     -w, --width INTEGER           wrap width, default=140     --wrap / --nowrap             wrap text     -s, --silent TEXT             disable logging if &quot;True&quot;     -q, --quiet                   disable logging as flag     -f, --force                   take precedence over environment settings     -l, --level TEXT              log level as number or predefined Level     --program_info                get program info     -c, --colortest               color test     --traceback / --no-traceback  return traceback information on cli     -h, --help                    Show this message and exit.Installation and Upgrade------------------------- Before You start, its highly recommended to update pip and setup tools:.. code-block::    python -m pip --upgrade pip    python -m pip --upgrade setuptools- to install the latest release from PyPi via pip (recommended):.. code-block::    python -m pip install --upgrade lib_log_utils- to install the latest version from github via pip:.. code-block::    python -m pip install --upgrade git+https://github.com/bitranox/lib_log_utils.git- include it into Your requirements.txt:.. code-block::    # Insert following line in Your requirements.txt:    # for the latest Release on pypi:    lib_log_utils    # for the latest development version :    lib_log_utils @ git+https://github.com/bitranox/lib_log_utils.git    # to install and upgrade all modules mentioned in requirements.txt:    python -m pip install --upgrade -r /&lt;path&gt;/requirements.txt- to install the latest development version from source code:.. code-block::    # cd ~    $ git clone https://github.com/bitranox/lib_log_utils.git    $ cd lib_log_utils    python setup.py install- via makefile:  makefiles are a very convenient way to install. Here we can do much more,  like installing virtual environments, clean caches and so on... code-block:: shell    # from Your shell's homedirectory:    $ git clone https://github.com/bitranox/lib_log_utils.git    $ cd lib_log_utils    # to run the tests:    $ make test    # to install the package    $ make install    # to clean the package    $ make clean    # uninstall the package    $ make uninstallRequirements------------following modules will be automatically installed :.. code-block:: bash    ## Project Requirements    click    coloredlogs    cli_exit_tools    lib_parameter    lib_platform    lib_programnameAcknowledgements----------------- special thanks to &quot;uncle bob&quot; Robert C. Martin, especially for his books on &quot;clean code&quot; and &quot;clean architecture&quot;Contribute----------I would love for you to fork and send me pull request for this project.- `please Contribute &lt;https://github.com/bitranox/lib_log_utils/blob/master/CONTRIBUTING.md&gt;`_License-------This software is licensed under the `MIT license &lt;http://en.wikipedia.org/wiki/MIT_License&gt;`_---Changelog=========- new MAJOR version for incompatible API changes,- new MINOR version for added functionality in a backwards compatible manner- new PATCH version for backwards compatible bug fixesv1.4.14.2---------2022-06-02: update to github actions checkout@v3 and setup-python@v3v1.4.14--------2022-03-29: remedy mypy type error in lob_log_utils_cliv1.4.13---------2022-03-25: - fix ValueError: underlying buffer has been detached on github Actions Windows - implement github actions - update documentation and tests - list ./dist dir if existing - fix requirements.txtv1.4.10---------2020-10-09: service release    - update travis build matrix for linux 3.9-dev    - update travis build matrix (paths) for windows 3.9 / 3.10v1.4.9--------2020-08-08: service release    - fix documentation    - fix travis    - deprecate pycodestyle    - implement flake8v1.4.8---------2020-08-01: fix doctests in windowsv1.4.7---------2020-08-01: fix pypi deployv1.4.6---------2020-07-31: fix travis buildv0.4.5---------2020-07-29: fix environ.pop issue in doctestv0.4.4---------2020-07-29: feature release    - use the new pizzacutter templatev0.4.3---------2020-07-27: feature release    - use cli_exit_tools    - add banner parameter, to temporary disable/enable bannerv0.4.2---------2020-07-23: separate travis profilev0.4.1---------2020-07-23: change color profilesv0.4.0---------2020-07-23: feature release    - correct print_exception_traceback is stdout, stderr = None    - added formatting parameter, custom log formatterv0.3.0---------2020-07-22: feature release    - autodetect travis settings    - autodetect binder/jupyter settingsv0.2.0---------2020-07-22: feature release    - log_exception_traceback and print_exception_traceback will also report stdout, stderr if presentv0.1.4---------2020-07-17: feature release    - bump coveragev0.1.3---------2020-07-17: feature release    - comprehensive *--colortest*    - automatically select 8 colors profile for travisv0.1.2---------2020-07-16: feature release    - store settings in environment for commandline use    - cleanup    - release on pypi    - fix cli test    - enable traceback option on cli errors    - jupyter notebookv0.1.1---------2020-07-06: patch release    - new click cli    - use PizzaCutter Templatev0.0.2---------developmentv0.0.1---------2019-09-03: Initial public release</longdescription>
</pkgmetadata>