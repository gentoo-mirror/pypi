<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build status](https://ci.appveyor.com/api/projects/status/tjkich0nqkjuotxb?svg=true)](https://ci.appveyor.com/project/mih/metadata-model)[![codecov](https://codecov.io/gh/datalad/metadata-model/branch/main/graph/badge.svg?token=YBU774L1A7)](https://codecov.io/gh/datalad/metadata-model)[![PyPI version](https://badge.fury.io/py/datalad-metadata-model.svg)](https://badge.fury.io/py/datalad-metadata-model)![GitHub release (latest by date including pre-releases)](https://img.shields.io/github/v/release/datalad/metadata-model?include_prereleases&amp;label=github%20release&amp;style=flat-square)# Datalad Metadata ModelThis software implements the metadata model that datalad and datalad-metalad (from version 0.3.0) use to store metadata.#### Model Elements (the model layer)The metadata model is defined by the API of the top-levelclasses. Those are:- `MetadataRootRecord` -- holds top-level metadata information for a singleversion of a datalad dataset- `UUIDSet` -- holds metadata root records for a set of datasets that are identified by their UUIDs and their version.- `TreeVersionList` -- holds metadata root records and a sub-dataset tree for adataset version and its sub-datasets- `Metadata` -- represents metadata for a single item, i.e. dataset or file.Metadata is associated with extractor names and extraction parameters.- `DatasetTree` -- a representation of the sub-dataset hierarchy of a dataset- `FileTree` -- a representation of the file-tree of a dataset- ... Because of the large size of some datalad-datasets, e.g. tens of thousands ofsub-datasets and hundres of millions of files, the implementation allowsfocus-based operations on individual parts of the potentially very large metadata model. The implementation uses the proxy-pattern, that means, it loads, modifies, and saves only the minimal necessary model elements that are necessary to operate on the metadata-information that the user is interested in.#### Storage layerThe model elements have to be persisted on a storage backend. How the model is mapped on storage backends is defined by thestorage layer, that is to a large degree independent of the model layer. The intention is to support multiple storage backends in the past.Currently, only one storage backend is supported:- `git-mapping` -- a storage backend that stores a metadata model in agit repository. The model objects are stored outside of existing branches.They are referenced by `datalad`-specific git-references under `refs/datalad/*`## AcknowledgementsThis DataLad extension was developed with support from the German Federal Ministry of Education and Research (BMBF 01GQ1905), and the US National Science Foundation (NSF 1912266).</longdescription>
</pkgmetadata>