<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-overcomingbias-pages: a web interface to Robin Hanson's content======================================================================``django-overcomingbias-pages`` is a standalone `Django &lt;https://www.djangoproject.com/&gt;`_app which provides a web interface to Robin Hanson's content.Features--------The main features are:- Scrape content from across the web (`overcomingbias &lt;https://overcomingbias.com/&gt;`_,  `YouTube &lt;https://www.youtube.com/&gt;`_, `Spotify &lt;https://spotify.com/&gt;`_  and more) via the admin site.- Search content with `meilisearch &lt;https://www.meilisearch.com/&gt;`_.- Create sequences (series) of content and export them to PDF, epub, plaintext,  or any other format supported by `pandoc &lt;https://pandoc.org/&gt;`_.- Persistent user accounts.Configuration-------------To configure ``django-overcomingbias-pages``, add the following to your settings:.. code-block:: python  # settings.py  # add required apps  INSTALLED_APPS = [    # required for admin site / user accounts    &quot;django.contrib.admin&quot;,    &quot;django.contrib.auth&quot;,    &quot;django.contrib.contenttypes&quot;,    &quot;django.contrib.sessions&quot;,    &quot;django.contrib.messages&quot;,    # for collecting static files    &quot;django.contrib.staticfiles&quot;,    # django-overcomingbias-api    &quot;ordered_model&quot;,    &quot;obapi&quot;,    # async tasks    &quot;huey.contrib.djhuey&quot;,    # django-overcomingbias-pages    &quot;obpages&quot;,    # custom form rendering    &quot;django.forms&quot;,  ]  # Use the (custom) obpages user model   AUTH_USER_MODEL = &quot;obpages.User&quot;Search is provided using ``meilisearch``.To configure search, first set up a MeiliSearch instance, and then set up the followingsettings:.. code-block:: python  # settings.py  MEILISEARCH_CLIENT = {      &quot;url&quot;: &quot;http://127.0.0.1:7700&quot;,  }  MEILISEARCH_INDEX = &quot;content&quot;``MEILISEARCH_CLIENT`` specifies the location of the MeiliSearch instance, while``MEILISEARCH_INDEX`` controls which MeiliSearch index is used for search.Indexes can be created, updated and deleted via the admin site.``django-overcomingbias-pages`` uses `Huey &lt;https://github.com/coleifer/huey&gt;`_ torun tasks asynchronously.To enable this feature, follow the`Django/Huey instructions &lt;https://huey.readthedocs.io/en/latest/django.html&gt;`_.A minimal configuration is shown below:.. code-block:: python  # settings.py  connection_pool = ConnectionPool(host=&quot;127.0.0.1&quot;, port=6379, db=0, max_connections=100)  # See docs for full list of settings  HUEY = {      &quot;huey_class&quot;: &quot;huey.PriorityRedisHuey&quot;,      &quot;name&quot;: PROJECT_NAME,      &quot;connection&quot;: {          &quot;connection_pool&quot;: connection_pool,          # see redis-py for more options          # https://redis-py.readthedocs.io/en/latest/connections.html          &quot;read_timeout&quot;: 0,      },      &quot;consumer&quot;: {          &quot;workers&quot;: 4,          &quot;worker_type&quot;: &quot;thread&quot;,      },  }(Note that this requires (1) a Redis server running on localhost:6379 and (2) installingvia ``pip install django-overcomingbias-pages[redis]``.)Optionally, you can also configure Huey as your`email backend &lt;https://github.com/chris-mcdo/django-huey-email-backend&gt;`_.Bugs/Requests-------------Please use the`GitHub issue tracker &lt;https://github.com/chris-mcdo/django-overcomingbias-pages/issues&gt;`_to submit bugs or request features.License-------Copyright (c) 2022 Christopher McDonaldDistributed under the terms of the`MIT &lt;https://github.com/chris-mcdo/django-overcomingbias-pages/blob/main/LICENSE&gt;`_license.All overcomingbias posts are copyright the original authors.</longdescription>
</pkgmetadata>