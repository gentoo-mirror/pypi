<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ada-url========This is ``ada_url``, a Python library for working with URLs based on the ``Ada`` URLparser.* `Documentation &lt;https://ada-url.readthedocs.io&gt;`__* `Development &lt;https://github.com/ada-url/ada-python/&gt;`__* `Ada &lt;https://www.ada-url.com/&gt;`__ Installation------------Install from `PyPI &lt;https://pypi.org/project/ada-url/&gt;`__:.. code-block:: sh    pip install ada_urlUsage examples--------------Parsing URLs^^^^^^^^^^^^The ``URL`` class is intended to match the one described in the`WHATWG URL spec &lt;https://url.spec.whatwg.org/#url-class&gt;`_:... code-block:: python    &gt;&gt;&gt; from ada_url import URL    &gt;&gt;&gt; urlobj = URL('https://example.org/path/../file.txt')    &gt;&gt;&gt; urlobj.href    'https://example.org/path/file.txt'The ``parse_url`` function returns a dictionary of all URL elements:.. code-block:: python    &gt;&gt;&gt; from ada_url import parse_url    &gt;&gt;&gt; parse_url('https://user:pass@example.org:80/api?q=1#2')    {        'href': 'https://user:pass@example.org:80/api?q=1#2',        'username': 'user',        'password': 'pass',        'protocol': 'https:',        'port': '80',        'hostname': 'example.org',        'host': 'example.org:80',        'pathname': '/api',        'search': '?q=1',        'hash': '#2',        'origin': 'https://example.org:80',        'host_type': &lt;HostType.DEFAULT: 0&gt;,        'scheme_type': &lt;SchemeType.HTTPS: 2&gt;    }Altering URLs^^^^^^^^^^^^^Replacing URL components with the ``URL`` class:.. code-block:: python    &gt;&gt;&gt; from ada_url import URL    &gt;&gt;&gt; urlobj = URL('https://example.org/path/../file.txt')    &gt;&gt;&gt; urlobj.host = 'example.com'    &gt;&gt;&gt; urlobj.href    'https://example.com/file.txt'Replacing URL components with the ``replace_url`` function:    &gt;&gt;&gt; from ada_url import replace_url    &gt;&gt;&gt; replace_url('https://example.org/path/../file.txt', host='example.com')    'https://example.com/file.txt'Search parameters^^^^^^^^^^^^^^^^^The ``URLSearchParams`` class is intended to match the one described in the`WHATWG URL spec &lt;https://url.spec.whatwg.org/#interface-urlsearchparams&gt;`__... code-block:: python    &gt;&gt;&gt; from ada_url import URLSearchParams    &gt;&gt;&gt; obj = URLSearchParams('key1=value1&amp;key2=value2')    &gt;&gt;&gt; list(obj.items())    [('key1', 'value1'), ('key2', 'value2')]The ``parse_search_params`` function returns a dictionary of search keys mapped tovalue lists:.. code-block:: python    &gt;&gt;&gt; from ada_url import parse_search_params    &gt;&gt;&gt; parse_search_params('key1=value1&amp;key2=value2')    {'key1': ['value1'], 'key2': ['value2']}Internationalized domain names^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^The ``idna`` class can encode and decode IDNs:.. code-block:: python    &gt;&gt;&gt; from ada_url import idna    &gt;&gt;&gt; idna.encode('Bücher.example')    b'xn--bcher-kva.example'    &gt;&gt;&gt; idna.decode(b'xn--bcher-kva.example')    'bücher.example'WHATWG URL compliance---------------------This library is compliant with the WHATWG URL spec. This means, among other things,that it properly encodes IDNs and resolves paths:.. code-block:: python    &gt;&gt;&gt; from ada_url import URL    &gt;&gt;&gt; parsed_url = URL('https://www.GOoglé.com/./path/../path2/')    &gt;&gt;&gt; parsed_url.hostname    'www.xn--googl-fsa.com'    &gt;&gt;&gt; parsed_url.pathname    '/path2/'Contrast that with the Python standard library's ``urlib.parse`` module:.. code-block:: python    &gt;&gt;&gt; from urllib.parse import urlparse    &gt;&gt;&gt; parsed_url = urlparse('https://www.GOoglé.com/./path/../path2/')    &gt;&gt;&gt; parsed_url.hostname    'www.googlé.com'    &gt;&gt;&gt; parsed_url.path    '/./path/../path2/'</longdescription>
</pkgmetadata>