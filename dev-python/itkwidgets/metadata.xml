<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>itkwidgets==========.. image:: https://img.shields.io/pypi/v/itkwidgets.svg    :target: https://pypi.python.org/pypi/itkwidgets    :alt: PyPI version.. image:: https://img.shields.io/npm/v/itkwidgets/latest    :target: https://www.npmjs.com/package/itkwidgets    :alt: npm.. image:: https://github.com/InsightSoftwareConsortium/itkwidgets/workflows/Build%20and%20test/badge.svg    :target: https://github.com/InsightSoftwareConsortium/itkwidgets/actions?query=workflow%3A%22Build+and+test%22    :alt: Build status.. image:: https://mybinder.org/badge_logo.svg    :target: https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples%2F3DImage.ipynb    :alt: Interactive example on MyBinder.. image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg    :target: https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/LICENSE    :alt: License.. image:: https://zenodo.org/badge/121581663.svg    :target: https://zenodo.org/badge/latestdoi/121581663    :alt: Software citation DOIInteractive Jupyter_ widgets to visualize images, point sets, and meshes on the web... image:: https://i.imgur.com/d8aXycW.png    :width: 800px    :alt: itkwidgets chest CT in JupyterLab**Key Features**:- Visualize 2D and 3D images, point sets, and geometry, e.g. meshes, in Jupyter_- Support for  - `NumPy array &lt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html&gt;`_ images  - `itk.Image &lt;https://itkpythonpackage.readthedocs.io/en/latest/Quick_start_guide.html&gt;`_  - `Dask array &lt;https://docs.dask.org/en/latest/array.html&gt;`_ images  - `vtk.vtkImageData &lt;https://vtk.org&gt;`_  - `pyvista.UniformGrid &lt;https://pyvista.org&gt;`_  - `vedo.Volume &lt;https://vedo.embl.es/index.html&gt;`_  - `pyimagej ImageJ / Fiji / ImageJ2 images &lt;https://github.com/imagej/pyimagej&gt;`_  - Additional NumPy array-like objects  - `SimpleITK.Image &lt;https://simpleitk-prototype.readthedocs.io/en/latest/user_guide/plot_image.html#sphx-glr-user-guide-plot-image-py&gt;`_  - NumPy array point sets  - `itk.PointSet &lt;https://itk.org/Doxygen/html/classitk_1_1PointSet.html&gt;`_  - `itk.PointBasedSpatialObject &lt;https://itk.org/Doxygen/html/classitk_1_1PointBasedSpatialObject.html&gt;`_  - `vtk.vtkPolyData &lt;https://vtk.org/doc/nightly/html/classvtkPolyData.html&gt;`_ point sets  - `pyvista.PolyData &lt;https://docs.pyvista.org/core/points.html&gt;`_ point sets  - `itk.Mesh &lt;https://itk.org/Doxygen/html/classitk_1_1Mesh.html&gt;`_  - `itk.PolyLineParametricPath &lt;https://itk.org/Doxygen/html/classitk_1_1PolyLineParametricPath.html&gt;`_  - `vtk.vtkPolyData &lt;https://vtk.org/doc/nightly/html/classvtkPolyData.html&gt;`_  - `vtk.vtkStructuredGrid &lt;https://vtk.org/doc/nightly/html/classvtkStructuredGrid.html&gt;`_  - `vtk.vtkUnstructuredGrid &lt;https://vtk.org/doc/nightly/html/classvtkUnstructuredGrid.html&gt;`_  - `vtk.vtkActor &lt;https://vtk.org/doc/nightly/html/classvtkActor.html&gt;`_  - `vtk.vtkVolume &lt;https://vtk.org/doc/nightly/html/classvtkVolume.html&gt;`_  - `vtk.vtkAssembly &lt;https://vtk.org/doc/nightly/html/classvtkAssembly.html&gt;`_  - `pyvista.PolyData &lt;https://docs.pyvista.org/core/points.html&gt;`_  - `pyvista.StructuredGrid &lt;https://docs.pyvista.org/core/point-grids.html#structured-grid-creation&gt;`_  - `pyvista.UnstructuredGrid &lt;https://docs.pyvista.org/core/point-grids.html#unstructured-grid-creation&gt;`_  - `vedo.Actor &lt;https://vedo.embl.es/index.html&gt;`_  - `vedo.Assembly &lt;https://vedo.embl.es/index.html&gt;`_  - `skan.csr.Skeleton &lt;https://jni.github.io/skan/api/skan.csr.html#module-skan.csr&gt;`_- Exquisite volume rendering- Tri-plane volume slicing- Innovative, powerful opacity transfer function / window / level widget- Label image segmentation 2D and 3D rendering- Anisotropic voxel spacing supported- Image line profile widget- Image statistics widget- Compare images widget- Widgets to select solid colors for geometry or colormaps when point data or  cell data is available- Visualize point sets as points or spheres and interactively adjust the point  size- Combine with other *ipywidgets* to quickly create graphical interfaces  that interactively provide insights into data algorithms.. image:: https://thumbs.gfycat.com/ShyFelineBeetle-size_restricted.gif    :width: 640px    :alt: itkwidgets demo    :align: centerThese widgets are designed to support spatial analysis with the `Insight Toolkit(ITK) &lt;https://itk.org/&gt;`_, but they work equally well with other spatial analysis toolsin the scientific Python ecosystem.These widgets are built on`itk.js &lt;https://github.com/InsightSoftwareConsortium/itk-js&gt;`_ and`vtk.js &lt;https://github.com/Kitware/vtk-js&gt;`_.Examples on Binder------------------Data types:- `Binder: 2D ITK Images &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples%2F2DImage.ipynb&gt;`_- `Binder: 3D ITK Images &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples%2F3DImage.ipynb&gt;`_- `Binder: 3D Label Images &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples%2FLabelImages.ipynb&gt;`_- `Binder: Dask Array images &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/DaskArray.ipynb&gt;`_- `Binder: Large volumes &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/LargeVolumes.ipynb&gt;`_- `Binder: NumPy array images (processed with SciPy) &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/NumPyArrayImage.ipynb&gt;`_- `Binder: NumPy array images (processed with scikit-image) &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/scikit-image.ipynb&gt;`_- `Binder: NumPy array for image with anisotropic spacing &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/ImageWithAnisotropicPixelSpacing.ipynb&gt;`_- `Binder: NumPy array point sets &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/NumPyArrayPointSet.ipynb&gt;`_- `Binder: ITK Mesh &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/Mesh.ipynb&gt;`_- `Binder: ITK PointBasedSpatialObject &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/PointBasedSpatialObject.ipynb&gt;`_- `Binder: skan segmentation skeleton &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/SegmentationSkeleton.ipynb&gt;`_- `Binder: skan segmentation skeleton &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/SegmentationSkeleton.ipynb&gt;`_Recipes:- `Binder: Compare images with a checkerboard pattern &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/Checkerboard.ipynb&gt;`_- `Binder: Compare images side by side &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/CompareImages.ipynb&gt;`_- `Binder: Examine a line profile &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/LineProfile.ipynb&gt;`_- `Binder: Inspect image label statistics &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/ImageLabelStatistics.ipynb&gt;`_- `Binder: Interactively explore algorithm parameters &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/InteractiveParameterExploration.ipynb&gt;`_- `Binder: Record a video &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/RecordAVideo.ipynb&gt;`_- `Binder: Restore a volume opacity transfer function &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/VolumeOpacityTransferFunction.ipynb&gt;`_- `Binder: Select a region of interest &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/SelectRegionOfInterest.ipynb&gt;`_- `Binder: Specify camera parameters &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/CameraParameters.ipynb&gt;`_- `Binder: Specify a colormap &lt;https://mybinder.org/v2/gh/InsightSoftwareConsortium/itkwidgets/master?filepath=examples/SpecifyAColormap.ipynb&gt;`_Installation------------To install the widgets for the Jupyter Notebook with pip::  pip install itkwidgetsFor Jupyter Lab, additionally, run::  jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib jupyterlab-datawidgets itkwidgets.. note::  JupyterLab 3 support is not yet available. JupyterLab 2 or the Jupyter  Notebook are possible alternatives.Usage-----In Jupyter, import the ``view`` function::  from itkwidgets import viewThen, call the ``view`` function at the end of a cell, passing in the image toexamine::  view(image)For information on additional options, see the ``view`` function docstring::  view?Other available widgets:- ``itkwidgets.line_profile``: Plot an intensity line profile.- ``itkwidgets.checkerboard``: Compare two images in a checkerboard pattern.- ``itkwidgets.compare``: Compare two images side-by-side.Using within a Docker Container-------------------------------You can use ``itkwidgets`` from within a docker container with jupyterlab.To create a local docker image:Install ``docker`` and build the docker image with::  git clone https://github.com/InsightSoftwareConsortium/itkwidgets  cd itkwidgets/docker  IMAGE=itkwidgets:0.1.0  docker build -t $IMAGE .Then run the docker container with::  EXAMPLESDIR=`pwd`/../examples  docker run -it --rm -v $EXAMPLESDIR:/home/jovyan -p 8888:8888 itkwidgets:0.1.0Finally, connect to your notebook at http://127.0.0.1:8888/labAdvanced Usage^^^^^^^^^^^^^^The *itkwidgets* are based on `ipywidgets&lt;https://ipywidgets.readthedocs.io/en/latest/examples/Widget%20Basics.html&gt;`_.As a consequence, widgets traits can be queried, assigned, or observed withthe `viewer` object returned by the `view` function. *itkwidgets* canbe combined with other *ipywidgets* to quickly explore algorithm parameters,create graphical interfaces, or create data visualization dashboards.Mouse Controls^^^^^^^^^^^^^^**Left click + drag**  Rotate**Right click + drag** or **shift + left click + drag**  Pan**Mouse wheel** or **control + left click + drag** or **pinch**  Zoom**Alt + left click + drag left-right**  Change color transfer function window**Shift + left click + drag top-bottom**  Change color transfer function level**Shift + alt + left click + drag top-bottom**  Change primary Gaussian volume opacity transfer function magnitudeKeyboard Shortcuts^^^^^^^^^^^^^^^^^^Keyboard shortcuts take effect when the mouse is positioned inside the viewer.All shortcuts are prefixed with **Alt+**. Corresponding keys for the Dvorakkeyboard layout have the same effect.**Alt + 1**  X-plane mode**Alt + 2**  Y-plane mode**Alt + 3**  Z-plane mode**Alt + 4**  Volume rendering mode**Alt + q**  Toggle user interface**Alt + w**  Toggle region of interest (ROI) selection widget**Alt + e**  Reset ROI**Alt + r**  Reset camera**Alt + s**  Toggle slicing planes in volume rendering mode**Alt + f**  Toggle fullscreenExamples--------After installation, try the following examples that demonstrate how to visualize:- `2D ITK Images &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/2DImage.ipynb&gt;`_- `3D ITK Images &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/3DImage.ipynb&gt;`_- `3D Label maps &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/LabelImages.ipynb&gt;`_- `Dask Array images &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/DaskArray.ipynb&gt;`_- `Large volumes &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/LargeVolumes.ipynb&gt;`_- `ImageJ ImgLib2 images &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/ImageJImgLib2.ipynb&gt;`_ (requires `conda &lt;https://conda.io/&gt;`_ and a local `Fiji &lt;https://fiji.sc/&gt;`_ installation)- `NumPy array images (processed with SciPy) &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/NumPyArrayImage.ipynb&gt;`_- `NumPy array images (processed with scikit-image) &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/scikit-image.ipynb&gt;`_- `NumPy array for image with anisotropic spacing &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/ImageWithAnisotropicPixelSpacing.ipynb&gt;`_- `VTK vtkImageData &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/vtkImageData.ipynb&gt;`_- `pyvista UniformGrid &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/pyvista.UniformGrid.ipynb&gt;`_- `NumPy array point sets &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/NumPyArrayPointSet.ipynb&gt;`_- `ITK Mesh &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/Mesh.ipynb&gt;`_- `ITK PointBasedSpatialObject &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/PointBasedSpatialObject.ipynb&gt;`_- `VTK vtkPolyData &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/vtkPolyData.ipynb&gt;`_- `VTK vtkUnstructuredGrid &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/vtkUnstructuredGrid.ipynb&gt;`_- `pyvista PolyData &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/pyvista.PolyData.ipynb&gt;`_- `pyvista StructuredGrid &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/pyvista.StructuredGrid.ipynb&gt;`_- `pyvista UnstructuredGrid &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/pyvista.UnstructuredGrid.ipynb&gt;`_- `pyvista LiDAR &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/pyvistaLiDAR.ipynb&gt;`_- `vedo actors and volumes &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/vedo.ipynb&gt;`_- `skan segmentation skeleton &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/SegmentationSkeleton.ipynb&gt;`_or how to:- `Compares images with a checkerboard pattern &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/Checkerboard.ipynb&gt;`_- `Compares images side by side &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/CompareImages.ipynb&gt;`_- `Examine a line profile &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/LineProfile.ipynb&gt;`_- `Inspect image label statistics &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/ImageLabelStatistics.ipynb&gt;`_- `Interactively explore algorithm parameters &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/InteractiveParameterExploration.ipynb&gt;`_- `Record a video &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/RecordAVideo.ipynb&gt;`_- `Restore a volume opacity transfer function &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/VolumeOpacityTransferFunction.ipynb&gt;`_- `Select a region of interest &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/SelectRegionOfInterest.ipynb&gt;`_- `Specify camera parameters &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/CameraParameters.ipynb&gt;`_- `Specify a colormap &lt;https://github.com/InsightSoftwareConsortium/itkwidgets/blob/master/examples/SpecifyAColormap.ipynb&gt;`_Troubleshooting---------------IOPub data rate exceeded.^^^^^^^^^^^^^^^^^^^^^^^^^If you experience the notebook warning::  IOPub data rate exceeded.  The notebook server will temporarily stop sending output  to the client in order to avoid crashing it.  To change this limit, set the config variable  `--NotebookApp.iopub_data_rate_limit`.Set the notebook configuration value::  jupyter notebook --NotebookApp.iopub_data_rate_limit=1e12Scrolling in JupyterLab^^^^^^^^^^^^^^^^^^^^^^^Cell output scrolls by default in JupyterLab. To disable scrolling, right clickin the region to the left of the output and select *Disable Scrolling forOutputs*.'Permission denied' during installation^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^If *Permission denied* errors occur during installation, install the Pythonpackage with *user* permission via:  pip install --user itkwidgetsFor JupyterLab extension installation, configure JupyterLab to use your userapplication directory by setting the environmental variable,`JUPYTERLAB_DIR`::  export JUPYTERLAB_DIR=$HOME/.local/share/jupyter/labCheck that this is picked up in the value of the *Application directory*reported by::  jupyter lab pathThen, install the extension as usual::  jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib jupyterlab-datawidgets itkwidgetsHacking-------Participation is welcome! For a development installation (requires `Node.js &lt;https://nodejs.org/en/download/&gt;`_)::  git clone https://github.com/InsightSoftwareConsortium/itkwidgets.git  cd itkwidgets  python -m pip install -r requirements-dev.txt -r requirements.txt  python -m pip install -e .  jupyter nbextension install --py --symlink --sys-prefix itkwidgets  jupyter nbextension enable --py --sys-prefix itkwidgets  jupyter nbextension enable --py --sys-prefix widgetsnbextension  python -m pytest  python -m pytest --nbmake examples/*.ipynbThe above commands will setup your system for development with the JupyterNotebook. In one terminal, start Jupyter::  cd itkwidgets  jupyter notebookIn another terminal, put Webpack in watch mode to rebuild any Javascriptchanges when you save a Javascript file::  cd itkwidgets  npm run watchIf Python code is changed, restart the kernel to see the changes. IfJavascript code is changed, reload the page after to Webpack has finishedbuilding.To develop for Jupyter Lab, additionally run::  jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib jupyterlab-datawidgets jupyter-webrtc  jupyter labextension install ./js  jupyter lab --watch.. note::  Historical note: this project was previously named *itk-jupyter-widgets*, but it was renamed to *itkwidgets* to be consistent with the package name... warning::  This project is under active development. Its API and behavior may change at any time. We mean it... _Jupyter: https://jupyter.org/</longdescription>
</pkgmetadata>