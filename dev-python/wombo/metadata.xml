<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;Hi there, I'm &lt;a href=&quot;https://github.com/pokedim13/WOMBO&quot; target=&quot;_blank&quot;&gt;Wombo&lt;/a&gt; ### I am a module for using wombo dream ai (neural network of image generation)&lt;details&gt;&lt;summary style=&quot;font-size: 36px&quot;&gt;Mini Documentation&lt;/summary&gt;&lt;details&gt;&lt;summary style=&quot;font-size: 24px; padding-left: 6vh;&quot;&gt;Asynchronous and synchronous module&lt;/summary&gt;```from wombo import AsyncDream # asyncfrom wombo import Dream # sync```&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 24px; padding-left: 6vh;&quot;&gt;Create a task&lt;/summary&gt;- since all actions are the same in both versions, I will consider only one module, namely the asynchronous```dream = AsyncDream()task = await dream.create_task(prompt: str, style: int)```- The list of styles will be available via github&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 24px; padding-left: 6vh;&quot;&gt;Check a task (complite or no)&lt;/summary&gt;```task = await dream.check_task(task.id) # To get information about readiness in bool formattask = await dream.check_task(task.id, False) # To get information about readiness```&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 24px; padding-left: 6vh;&quot;&gt;Create gif&lt;/summary&gt;- photo_url_list Only the already generated image has. To check the image, use check_task(). Return io.BytesIO()```gif = await dream.gif(task.photo_url_list)gif = await dream.gif(task.photo_url_list, thread=False)# Used if you don't want to use an asynchronous thread.# to generate a gif, it is true since the generation is quite long# Generation in the thread is not available for the synchronous library```&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 24px; padding-left: 6vh;&quot;&gt;Generate&lt;/summary&gt;- 1 command to receive, reply immediately. without checks via check_task()```gif = await dream.generate(taxt:str, syle: int, gif: bool)```&lt;/details&gt;&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 36px; font-weight: bold;&quot;&gt;all styles for generating images&lt;/summary&gt;- Mistakes are possible! the approximate data is given, and will be updated, each time the date of change will be indicated&lt;kbd&gt;{3: 'no style', 9: 'psychic', 14: 'etching', 16: 'wuhtercuhler', 17: 'provenance', 18: 'rose gold', 22: 'ghibli', 28: 'melancholic', 31: 'toasty', 32: 'realistic', 34: 'arcane', 35: 'throwback', 36: 'daydream', 37: 'surreal', 38: 'ink', 39: 'pandora', 40: 'malevolent', 41: 'street art', 42: 'unrealistic', 45: 'comic', 46: 'anime', 47: 'line-art', 48: 'gouache', 49: 'polygon', 50: 'paint', 52: 'hdr', 53: 'analogue', 54: 'retro-futurism', 55: 'isometric', 57: 'bad trip', 58: 'cartoonist', 60: 'vector', 61: 'fantastical', 63: 'Spectral', 65: 'diorama', 67: 'abstract', 68: 'flora', 71: 'soft touch', 72: 'winter', 73: 'festive', 74: 'splatter', 76: 'figure', 77: 'expressionism', 78: 'realistic v2', 80: 'anime v2', 81: 'flora v2', 84: 'buliojourney v2', 88: 'blues v2', 91: 'watercolor v2', 92: 'spectral v2', 94: 'gloomy', 95: 'the cut', 96: 'the bulio cut', 97: 'dreamwave v2', 98: 'illustrated v2', 99: 'abstract fluid v2'}&lt;/kbd&gt;&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 24px; font-weight: bold;&quot;&gt;Creditless&lt;/summary&gt;- [@mayneryt](https://vk.com/mayneryt) her give me algoritm- [@pokedim13](https://vk.com/h3try) me&lt;/details&gt;#&lt;details&gt;&lt;summary style=&quot;font-size: 24px; font-weight: bold;&quot;&gt;Requirements&lt;/summary&gt;- [httpx](https://pypi.org/project/httpx/)- [pillow](https://pypi.org/project/Pillow/)- [pydantic](https://pypi.org/project/pydantic/)&lt;/details&gt;</longdescription>
</pkgmetadata>