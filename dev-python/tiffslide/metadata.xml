<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># tiffslide: a drop-in replacement for openslide-python[![PyPI Version](https://img.shields.io/pypi/v/tiffslide)](https://pypi.org/project/tiffslide/)[![Conda (channel only)](https://img.shields.io/conda/vn/conda-forge/tiffslide?label=conda)](https://anaconda.org/conda-forge/tiffslide)[![tiffslide ci](https://github.com/bayer-science-for-a-better-life/tiffslide/actions/workflows/run_pytests.yaml/badge.svg)](https://github.com/bayer-science-for-a-better-life/tiffslide/actions/workflows/run_pytests.yaml)[![GitHub issues](https://img.shields.io/github/issues/bayer-science-for-a-better-life/tiffslide)](https://github.com/bayer-science-for-a-better-life/tiffslide/issues)[![PyPI - Downloads](https://img.shields.io/pypi/dm/tiffslide?label=pypi)](https://pypi.org/project/tiffslide/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/tiffslide)](https://github.com/bayer-science-for-a-better-life/tiffslide)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6327079.svg)](https://doi.org/10.5281/zenodo.6327079)Welcome to `tiffslide` :wave:, a [tifffile](https://github.com/cgohlke/tifffile/) baseddrop-in replacement for [openslide-python](https://github.com/openslide/openslide-python).`tiffslide`'s goal is to provide an easy way to migrate existing code from anopenslide dependency to the excellently maintained tifffile module.We strive to make your lives as easy as possible: If using `tiffslide` isunintuitive, slow, or if it's drop-in behavior differs from what you expect,it's a bug in `tiffslide`. Feel free to report any issues or feature requests inthe issue tracker!Development [happens on github](https://github.com/bayer-science-for-a-better-life/tiffslide) :octocat:## NotesTiffSlide aims to be compatible with all formats that openslide supports and more,but not all are implemented yet. Aperio SVS is currently the most tested format.Contributions to expand to a larger variety of file formats that tifffile supports are very welcome :heart:&lt;br&gt;If there are any questions open an issue, and we'll do our best to help!## CompatibilityHere's a list with currently supported formats.| File Format    |   can be opened    |    full support    | references                                                                    ||----------------|:------------------:|:------------------:|-------------------------------------------------------------------------------|| Aperio SVS     | :white_check_mark: | :white_check_mark: |                                                                               || Generic TIFF   | :white_check_mark: | :white_check_mark: |                                                                               || Hamamatsu NDPI | :white_check_mark: |     :warning:      | [#35](https://github.com/bayer-science-for-a-better-life/tiffslide/issues/35) || Leica SCN      | :white_check_mark: | :white_check_mark: |                                                                               || Ventana        |     :warning:      |     :warning:      | [#37](https://github.com/bayer-science-for-a-better-life/tiffslide/issues/37) || Hamamatsu VMS  |  :no_entry_sign:   |  :no_entry_sign:   |                                                                               || DICOM          |  :no_entry_sign:   |  :no_entry_sign:   | [#32](https://github.com/bayer-science-for-a-better-life/tiffslide/issues/32) || Mirax          |  :no_entry_sign:   |  :no_entry_sign:   | [#33](https://github.com/bayer-science-for-a-better-life/tiffslide/issues/33) || Zeiss ZVI      |  :no_entry_sign:   |  :no_entry_sign:   |                                                                               |## Documentation### Installationtiffslide's stable releases can be installed via `pip`:```bashpip install tiffslide```Or via `conda`:```bashconda install -c conda-forge tiffslide```### Usagetiffslide's behavior aims to be identical to openslide-python where it makes sense.If you rely heavily on the internals of openslide, this is not the package you are looking for.In case we add more features, we will add documentation here.#### as a drop-in replacement```python# directlyfrom tiffslide import TiffSlideslide = TiffSlide('path/to/my/file.svs')# or via its drop-in behaviorimport tiffslide as openslideslide = openslide.OpenSlide('path/to/my/file.svs')```#### access files in the cloudA nice side effect of using tiffslide is that your code will also work with[filesystem_spec](https://github.com/fsspec/filesystem_spec), which enables youto access your whole slide images from various supported filesystems:```pythonimport fsspecfrom tiffslide import TiffSlide# read from any io bufferwith fsspec.open(&quot;s3://my-bucket/file.svs&quot;) as f:    slide = TiffSlide(f)    thumb = slide.get_thumbnail((200, 200))# read from fsspec urlpaths directly, using your AWS_PROFILE 'aws'slide = TiffSlide(&quot;s3://my-bucket/file.svs&quot;, storage_options={'profile': 'aws'})thumb = slide.get_thumbnail((200, 200))# read via fsspec from google cloud and use fsspec's caching mechanism to cache locallyslide = TiffSlide(&quot;simplecache::gcs://my-bucket/file.svs&quot;, storage_options={'project': 'my-project'})region = slide.read_region((300, 400), 0, (512, 512))```#### read numpy arrays instead of PIL imagesVery often you'd actually want your region returned as a numpy array insteadgetting a PIL Image and then having to convert to numpy:```pythonimport numpy as npfrom tiffslide import TiffSlideslide = TiffSlide(&quot;myfile.svs&quot;)arr = slide.read_region((100, 200), 0, (256, 256), as_array=True)assert isinstance(arr, np.ndarray)```## Development InstallationIf you want to help improve tiffslide, you can setup your development environmentin two different ways:With conda:1. Clone tiffslide `git clone https://github.com/bayer-science-for-a-better-life/tiffslide.git`2. `cd tiffslide`3. `conda env create -f environment.devenv.yml`4. Activate the environment `conda activate tiffslide`Without conda:1. Clone tiffslide `git clone https://github.com/bayer-science-for-a-better-life/tiffslide.git`2. `cd tiffslide`3. `python -m venv venv &amp;&amp; source venv/bin/activate &amp;&amp; python -m pip install -U pip`4. `pip install -e .[dev]`Note that in these environments `tiffslide` is already installed in developmentmode, so go ahead and hack.## BenchmarksHere are some benchmarks comparing `tiffslide` to `openslide` for differentsupported file types and access patterns. Please note that you should test thedifference in access time always for yourself on your target machine and yourspecific use case.In case you would like a specific use case to be added, please feel free toopen an issue or make a pull request.The plots below were generated on a Thinkpad E495 and the files were stored on theinternal ssd.Note, that in general, on my test my machine, `tiffslide` outperforms `openslide`when reading data as numpy arrays. _Ventana_ tile reading is not _&quot;correct&quot;_since as of now (`1.5.0`) tiffslide lacks compositing for the overlapping tiles.See the [docs/README.md](docs/README.md) to run the benchmarks on your own machine.### reading PIL images![access times reading PIL](docs/images/benchmark_read_tiles_as_pil.png)### reading Numpy arrays![access times reading numpy](docs/images/benchmark_read_tiles_as_numpy.png)## Contributing Guidelines- Please follow [pep-8 conventions](https://www.python.org/dev/peps/pep-0008/) but:  - We allow 120 character long lines (try anyway to keep them short)- Please use [numpy docstrings](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard).- When contributing code, please try to use Pull Requests.- tests go hand in hand with modules on ```tests``` packages at the same level. We use ```pytest```.You can setup your IDE to help you adhering to these guidelines.&lt;br&gt;_([Santi](https://github.com/sdvillal) is happy to help you setting up pycharm in 5 minutes)_## AcknowledgementsBuild with love by Andreas Poehlmann and Santi Villalba from the _Machine Learning Research_ group at Bayer.`tiffslide`: copyright 2020 Bayer AG, licensed under [BSD](https://github.com/bayer-science-for-a-better-life/tiffslide/blob/master/LICENSE)</longdescription>
</pkgmetadata>