<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![CI](https://github.com/heidelbergcement/hcrystalball/workflows/CI/badge.svg)](https://github.com/heidelbergcement/hcrystalball/actions/?query=workflow%3ACI)[![CD](https://github.com/heidelbergcement/hcrystalball/workflows/CD/badge.svg)](https://github.com/heidelbergcement/hcrystalball/actions?query=workflow%3ACD)[![Documentation Status](https://readthedocs.org/projects/hcrystalball/badge/?version=latest)](https://hcrystalball.readthedocs.io/en/latest/?badge=latest)[![PyPI Version](https://img.shields.io/pypi/v/hcrystalball)](https://pypi.org/project/hcrystalball/)[![Conda Version](https://img.shields.io/conda/vn/conda-forge/hcrystalball)](https://anaconda.org/conda-forge/hcrystalball)[![Code Coverage](https://codecov.io/gh/heidelbergcement/hcrystalball/branch/master/graph/badge.svg)](https://codecov.io/gh/heidelbergcement/hcrystalball)[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/heidelbergcement/hcrystalball/master?filepath=docs/examples/)[![License](https://img.shields.io/github/license/heidelbergcement/hcrystalball)](https://raw.githubusercontent.com/heidelbergcement/hcrystalball/master/LICENSE.txt)[![Contributors](https://img.shields.io/github/contributors/heidelbergcement/hcrystalball)](https://github.com/heidelbergcement/hcrystalball/graphs/contributors)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)# HCrystal Ball&lt;div&gt;    &lt;a href=&quot;https://hcrystalball.readthedocs.io/en/latest/&quot;&gt;        &lt;img src=&quot;https://raw.githubusercontent.com/heidelbergcement/hcrystalball/master/docs/_static/hcrystal_ball_logo_green.png&quot;    width=&quot;150px&quot; align=&quot;left&quot; /&gt;&lt;/a&gt;    &lt;i&gt;&lt;br&gt;A library that unifies the API for most commonly &lt;br&gt;    used libraries and modelling techniques for time-series &lt;br&gt;    forecasting in the Python ecosystem.&lt;/i&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;**HCrystal Ball** consists of two main parts:* **Wrappers** - which bring different 3rd party   libraries to time series compatible sklearn API* **Model Selection** - to enable gridsearch over wrappers, general or custom made transformers   and add convenient layer over whole process (access to results, plots, storage, ...)## DocumentationSee examples, tutorials, contribution, API and more on the documentation [site](https://hcrystalball.readthedocs.io/en/latest) try notebooks on [binder](https://mybinder.org/v2/gh/heidelbergcement/hcrystalball/master) or browse example notebooks in [docs/examples](https://github.com/heidelbergcement/hcrystalball/tree/master/docs/examples) directly.## Core InstallationIf you want really minimal installation, you can install from pip or from conda-forge```bashpip install hcrystalball``````bashconda install -c conda-forge hcrystalball```## Typical InstallationVery often you will want to use more wrappers, than just Sklearn, run examples in jupyterlab, or execute model selection in parallel. Getting such dependencies to play together nicely might be cumbersome, so checking `envrionment.yml` might give you faster start.```bash# get dependencies file, e.g. using curlcurl -O https://raw.githubusercontent.com/heidelbergcement/hcrystalball/master/environment.yml# check comments in environment.yml, keep or remove as requested, than create environment usingconda env create -f environment.yml# activate the environmentconda activate hcrystalball# if you want to see progress bar in jupyterlab, execute alsojupyter labextension install @jupyter-widgets/jupyterlab-manager# install the library from pippip install hcrystalball# or from condaconda install -c conda-forge hcrystalball```## Development Installation:To have everything in place including docs build or executing tests, execute following code```bashgit clone https://github.com/heidelbergcement/hcrystalballcd hcrystalballconda env create -f environment.ymlconda activate hcrystalball# ensures interactive progress bar will work in example notebooksjupyter labextension install @jupyter-widgets/jupyterlab-managerpython setup.py develop```## Example Usage### Wrappers```pythonfrom hcrystalball.utils import generate_tsdatafrom hcrystalball.wrappers import ProphetWrapperX, y = generate_tsdata(n_dates=365*2)X_train, y_train, X_test, y_test = X[:-10], y[:-10], X[-10:], y[-10:]model = ProphetWrapper()y_pred = model.fit(X_train, y_train).predict(X_test)y_pred            prophet2018-12-22  6.0669992018-12-23  6.0500762018-12-24  6.1056202018-12-25  6.1419532018-12-26  6.1502292018-12-27  6.1636152018-12-28  6.1474202018-12-29  6.0486332018-12-30  6.0317112018-12-31  6.087255```### Model Selection```pythonimport pandas as pdimport matplotlib.pyplot as pltplt.style.use('seaborn')plt.rcParams['figure.figsize'] = [12, 6]from hcrystalball.utils import get_sales_datafrom hcrystalball.model_selection import ModelSelectordf = get_sales_data(n_dates=200,                    n_assortments=1,                    n_states=2,                    n_stores=2)ms = ModelSelector(horizon=10,                   frequency=&quot;D&quot;,                   country_code_column=&quot;HolidayCode&quot;,                   )ms.create_gridsearch(n_splits=2,                     sklearn_models=True,                     prophet_models=False,                     exog_cols=[&quot;Open&quot;,&quot;Promo&quot;,&quot;SchoolHoliday&quot;,&quot;Promo2&quot;],                     )ms.select_model(df=df,                target_col_name=&quot;Sales&quot;,                partition_columns=[&quot;Assortment&quot;, &quot;State&quot;,&quot;Store&quot;],                )ms.plot_results(plot_from=&quot;2015-06-01&quot;,                partitions=[{&quot;Assortment&quot;:&quot;a&quot;,&quot;State&quot;:&quot;NW&quot;,&quot;Store&quot;:335}]               )```&lt;img src=&quot;https://raw.githubusercontent.com/heidelbergcement/hcrystalball/master/docs/_static/forecast.png&quot; width=&quot;100%&quot; align=&quot;left&quot;/&gt;</longdescription>
</pkgmetadata>