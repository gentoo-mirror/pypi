<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ynm3k=====ynm3k(\ `文档 &lt;https://ynm3k.readthedocs.io/&gt;`__)取名自&quot;`要你命3000 &lt;http://cn.uncyclopedia.wikia.com/index.php?title=%E8%A6%81%E4%BD%A0%E5%91%BD%E4%B8%89%E5%8D%83&gt;`__&quot;，目前的功能包括-  一个通过完全通过json进行配置的mock调试/反向代理服务器-  一个静态文件服务器（除静态目录外，还可以服务zip文件）安装方法--------通过pip安装::    sudo pip install ynm3k基本的使用方法--------------在8080启动一个mock服务器，根据mock.json的规则进行转发和改写请求::    y3k --mock mock.json --port 8080mock.json的一些例子如下所示:-  根据前缀转发请求至不同服务器   ::       [         [&quot;/api/&quot;, &quot;http://example.com/api/&quot;],         [&quot;/static/my_work.html&quot;, &quot;http://127.0.0.1/static/my_work.html&quot;],         [&quot;/&quot;, &quot;http://192.168.1.10:8080/&quot;]       ]-  为每个请求增加一个特殊的header，比如设置X-Forwarded-For   ::       [        [{&quot;type&quot;: &quot;prefix&quot;,          &quot;path&quot;: &quot;/&quot;,          &quot;headers&quot;: {&quot;X-Forwarded-For&quot;: &quot;1.2.3.4&quot;}},         {&quot;type&quot;: &quot;remote&quot;,          &quot;url&quot;: &quot;https://ifcfg.cn/&quot;}        ]       ]-  转发某个前缀下的请求到一个本地目录下，并且对于/prefix/dirname/这样的请求自动返回该目录下的index.html的内容   ::       [       [&quot;/prefix/&quot;, {&quot;type&quot;: &quot;static&quot;,                     &quot;path&quot;: &quot;examples/dir&quot;,                     &quot;try_files&quot;: &quot;index.html&quot;}       ]       ]-  为每个请求的response，增加一个特殊的header，比如设置Cache-Control::    [       [          &quot;/&quot;,          {             &quot;type&quot; : &quot;remote&quot;,             &quot;url&quot; : &quot;https://ifcfg.cn/&quot;,             &quot;headers&quot; : {                &quot;Cache-Control&quot; : &quot;private&quot;             }          }       ]    ]-  改写特殊的请求(对于POST /test 这个请求，结果是文件test.json的内容)   ::       [          [        {          &quot;type&quot;: &quot;exact&quot;,          &quot;path&quot;: &quot;/test&quot;,          &quot;method&quot;: &quot;POST&quot;        },        {          &quot;type&quot;: &quot;file&quot;,          &quot;body&quot;: &quot;test.json&quot;,          &quot;headers&quot;: {&quot;content-type&quot;: &quot;json&quot;}        }          ],          [&quot;/&quot;, &quot;http://192.168.1.10:8080/&quot;]       ]</longdescription>
</pkgmetadata>