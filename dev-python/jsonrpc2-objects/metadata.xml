<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># JSON-RPC 2.0 Objects[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://mit-license.org/)A collection of objects for use in JSON-RPC 2.0 implementations.## Installation```shellpip install jsonrpc2-objects``````shellpoetry add jsonrpc2-objects```## ObjectsAvailable in `objects` are the following:| Object                   | Description                 ||--------------------------|-----------------------------|| RequestObjectParams      | Request with params         || RequestObject            | Request without params      || NotificationObjectParams | Notification with params    || NotificationObject       | Notification without params || ErrorResponseObject      | Response with result        || ResultResponseObject     | Response with error         |## ErrorsPython exceptions are available for each JSON-RPC 2.0 error. Each errorextends `JSONRPCError`.Example use with a client implementing these errors:```pythonfrom jsonrpcobjects.errors import JSONRPCError, MethodNotFoundtry:    client.example_method(params)except MethodNotFound:    print(&quot;Handle method not found&quot;)except JSONRPCError:    print(&quot;Handle any JSON RPC error.&quot;)```</longdescription>
</pkgmetadata>