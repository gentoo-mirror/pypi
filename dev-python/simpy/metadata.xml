<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SimPy=====SimPy is a process-based discrete-event simulation framework based on standardPython. Processes in SimPy are defined by Python `generator`__ functions andcan, for example, be used to model active components like customers, vehicles oragents.  SimPy also provides various types of shared resources to modellimited capacity congestion points (like servers, checkout counters andtunnels).Simulations can be performed “as fast as possible”, in real time (wall clocktime) or by manually stepping through the events.Though it is theoretically possible to do continuous simulations with SimPy, ithas no features that help you with that. Also, SimPy is not really required forsimulations with a fixed step size and where your processes don’t interact witheach other or with shared resources.The `documentation`__ contains a `tutorial`__, `several guides`__ explaining keyconcepts, a number of `examples`__ and the `API reference`__.SimPy is released under the MIT License. Simulation model developers areencouraged to share their SimPy modeling techniques with the SimPy community.Please post a message to the `SimPy mailing list`__.There is an introductory talk that explains SimPy’s concepts and provides someexamples: `watch the video`__ or `get the slides`__.__ http://docs.python.org/3/glossary.html#term-generator__ https://simpy.readthedocs.io/en/latest/__ https://simpy.readthedocs.io/en/latest/simpy_intro/index.html__ https://simpy.readthedocs.io/en/latest/topical_guides/index.html__ https://simpy.readthedocs.io/en/latest/examples/index.html__ https://simpy.readthedocs.io/en/latest/api_reference/index.html__ https://groups.google.com/forum/#!forum/python-simpy__ https://www.youtube.com/watch?v=Bk91DoAEcjY__ http://stefan.sofa-rockers.org/downloads/simpy-ep14.pdfA Simple Example----------------One of SimPy's main goals is to be easy to use. Here is an example for a simpleSimPy simulation: a *clock* process that prints the current simulation time ateach step:.. code-block:: python    &gt;&gt;&gt; import simpy    &gt;&gt;&gt;    &gt;&gt;&gt; def clock(env, name, tick):    ...     while True:    ...         print(name, env.now)    ...         yield env.timeout(tick)    ...    &gt;&gt;&gt; env = simpy.Environment()    &gt;&gt;&gt; env.process(clock(env, 'fast', 0.5))    &lt;Process(clock) object at 0x...&gt;    &gt;&gt;&gt; env.process(clock(env, 'slow', 1))    &lt;Process(clock) object at 0x...&gt;    &gt;&gt;&gt; env.run(until=2)    fast 0    slow 0    fast 0.5    slow 1    fast 1.0    fast 1.5Installation------------SimPy requires Python &gt;= 3.8, both CPython and PyPy3 are known to work.You can install SimPy easily via `pip &lt;http://pypi.python.org/pypi/pip&gt;`_:.. code-block:: bash    $ python -m pip install simpyYou can also download and install SimPy manually:.. code-block:: bash    $ cd where/you/put/simpy/    $ python -m build    $ python -m pip install dist/simpy-*.whlTo run SimPy’s test suite on your installation, execute:.. code-block:: bash    $ python -m toxGetting started---------------If you’ve never used SimPy before, the `SimPy tutorial`__ is a good startingpoint for you. You can also try out some of the `Examples`__ shipped withSimPy.__ https://simpy.readthedocs.io/en/latest/simpy_intro/index.html__ https://simpy.readthedocs.io/en/latest/examples/index.htmlDocumentation and Help----------------------You can find `a tutorial`__, `examples`__, `topical guides`__ and an `APIreference`__, as well as some information about `SimPy and its history`__ inour `online documentation`__. For more help, contact the `SimPy mailinglist`__. SimPy users are pretty helpful. You can, of course, also dig throughthe `source code`__.If you find any bugs, please post them on our `issue tracker`__.__ https://simpy.readthedocs.io/en/latest/simpy_intro/index.html__ https://simpy.readthedocs.io/en/latest/examples/index.html__ https://simpy.readthedocs.io/en/latest/topical_guides/index.html__ https://simpy.readthedocs.io/en/latest/api_reference/index.html__ https://simpy.readthedocs.io/en/latest/about/index.html__ https://simpy.readthedocs.io/__ mailto:python-simpy@googlegroups.com__ https://gitlab.com/team-simpy/simpy/-/tree/master__ https://gitlab.com/team-simpy/simpy/-/issuesEnjoy simulation programming in SimPy!Ports and comparable libraries------------------------------Re-implementations of SimPy and libraries similar to SimPy are available in thefollowing languages:- C#: `SimSharp &lt;https://github.com/abeham/SimSharp&gt;`_ (written by Andreas Beham)- Julia: `ConcurrentSim &lt;https://github.com/JuliaDynamics/ConcurrentSim.jl&gt;`_- R: `Simmer &lt;https://github.com/r-simmer/simmer&gt;`_</longdescription>
</pkgmetadata>