<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Docker ComposerA library to interact with `docker-compose` V2 from a python Program.All commands and parameters are exposed as python classes and attributesto allow for full auto-completion of its parameters with IDEsthat support it.## Install```shell scriptpip install docker-composer```## UsageThe main class is `docker_composer.DockerCompose`. Its parameters areall options from `docker-compose`. Each `docker-compose` command has a corresponding function, e.g. `DockerCompose.run` or `DockerCompose.scale`. Their arguments again mirror the options of the corresponding command.The resulting object has a `call` function. It takes arbitrary strings as input, as well as all keyword arguments from `subprocess.run`, and returns a `subprocess.CompletedProcess````pythonfrom docker_composer import DockerComposebase = DockerCompose(file=&quot;docker-compose.yml&quot;, verbose=True)base.run(detach=True, workdir=&quot;/tmp&quot;).call(&quot;app&quot;)base.run(workdir=&quot;/tmp&quot;).call(&quot;app&quot;, &quot;/bin/bash&quot;, &quot;-l&quot;)# /tmp $ ls /.dockerenv# /.dockerenv# /tmp $ exitprocess = base.ps(all=True).call(capture_output=True)print(process.stdout.encode(&quot;UTF-8&quot;))#          Name                      Command           State    Ports# -------------------------------------------------------------------# myapp_app_70fd8b786b76   myapp --start-server        Exit 0        # myapp_app_6ac3db4e1b55   myapp --client              Exit 0   ```## Develop### Coding Standards| **Type**       | Package  | Comment                         || -------------- | -------- | ------------------------------- || **Linter**     | `black`  | Also for auto-formatted modules || **Logging**    | `loguru` |                                 || **Packaging**  | `poetry` |                                 || **Tests**      | `pytest` |                                 || **Typing**     | `mypy`   | Type all methods                || **Imports**    | `isort`  |                                 |</longdescription>
</pkgmetadata>