<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========Overview========.. start-badges.. image:: https://github.com/unmade/thrift-pyi/workflows/lint%20and%20test/badge.svg?branch=master    :alt: Build Status    :target: https://github.com/unmade/thrift-pyi/blob/master/.github/workflows/lint-and-test.yml.. image:: https://codecov.io/github/unmade/thrift-pyi/coverage.svg?branch=master    :alt: Coverage Status    :target: https://codecov.io/github/unmade/thrift-pyi.. image:: https://api.codacy.com/project/badge/Grade/487480f045594e148309e8b7f1f71351    :alt: Codacy Badge    :target: https://app.codacy.com/app/unmade/thrift-pyi.. image:: https://requires.io/github/unmade/thrift-pyi/requirements.svg?branch=master    :alt: Requirements Status    :target: https://requires.io/github/unmade/thrift-pyi/requirements/?branch=master.. image:: https://img.shields.io/pypi/v/thrift-pyi.svg    :alt: PyPI Package latest release    :target: https://pypi.org/project/thrift-pyi.. image:: https://img.shields.io/pypi/wheel/thrift-pyi.svg    :alt: PyPI Wheel    :target: https://pypi.org/project/thrift-pyi.. image:: https://img.shields.io/pypi/pyversions/thrift-pyi.svg    :alt: Supported versions    :target: https://pypi.org/project/thrift-pyi.. image:: https://img.shields.io/badge/License-MIT-purple.svg    :alt: MIT License    :target: https://github.com/unmade/thrift-pyi/blob/master/LICENSE.. end-badgesThis is simple `.pyi` stubs generator from thrift interfaces.Motivation for this project is to have autocomplete and type checkingfor dynamically loaded thrift interfacesInstallation============.. code-block:: bash    pip install thrift-pyiQuickstart==========Sample usage:.. code-block:: bash    $ thriftpyi example/interfaces --output example/app/interfacesAdditionally to generated stubs you might want to create `__init__.py` that will load thrift interfaces, for example:.. code-block:: python    from pathlib import Path    from types import ModuleType    from typing import Dict    import thriftpy2    _interfaces_path = Path(&quot;example/interfaces&quot;)    _interfaces: Dict[str, ModuleType] = {}    def __getattr__(name):        try:            return _interfaces[name]        except KeyError:            interface = thriftpy2.load(str(_interfaces_path.joinpath(f&quot;{name}.thrift&quot;)))            _interfaces[name] = interface            return interfaceTo see more detailed example of usage refer to `example app &lt;https://github.com/unmade/thrift-pyi/blob/master/example&gt;`_--strict-optional-----------------Python and thrift are very different at argument handling.For example in thrift the following will be correct declaration:.. code-block:: thrift    struct TodoItem {        1: required i32 id        3: optional i32 type = 1        2: required string text    }In python, fields without default values cannot appear after fields with defaultvalues. Therefore by default all fields are optional with default to None.This is compliant to `thriftpy2 &lt;https://github.com/Thriftpy/thriftpy2&gt;`_.However, if you want more strict behaviour you can specify `--strict-optional` option.For the case above, the following stubs will be generated:.. code-block:: python    from dataclasses import dataclass    @dataclass    class TodoItem:        id: int        type: int = 1        text: strDevelopment===========To install pre-commit hooks::    pre-commit installTo run the all tests run::    tox</longdescription>
</pkgmetadata>