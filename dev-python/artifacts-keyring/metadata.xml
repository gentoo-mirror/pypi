<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## NOTE'artifacts-keyring' is a relatively thin wrapper around [artifacts-credprovider](https://github.com/microsoft/artifacts-credprovider).  Make sure to also look at that repository for more information about different scenarios. For example:* [Environment variable to explicitly override tokens](https://github.com/microsoft/artifacts-credprovider)* [Safely using credentials in docker](https://github.com/dotnet/dotnet-docker/blob/master/documentation/scenarios/nuget-credentials.md#using-the-azure-artifact-credential-provider)# artifacts-keyringThe `artifacts-keyring` package provides authentication for publishing or consuming Python packages to or from Azure Artifacts feeds within [Azure DevOps](https://azure.com/devops).This package is an extension to [keyring](https://pypi.org/project/keyring), which will automatically find and use it once installed.Both [pip](https://pypi.org/project/pip) and [twine](https://pypi.org/project/twine) will use `keyring` tofind credentials.## InstallationTo install this package, run the following `pip` command:```pip install artifacts-keyring```## Usage### RequirementsTo use `artifacts-keyring` to set up authentication between `pip`/`twine` and Azure Artifacts, the following requirements must be met:* pip version **19.2** or higher* twine version **1.13.0** or higher* python version **3.0** or higher* .Net SDK is installed. Refer to [here](https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu) for installation guideline.### Publishing packages to an Azure Artifacts feedOnce `artifacts-keyring` is installed, to publish a package, use the following `twine` command, replacing **&lt;org_name&gt;** and **&lt;feed_name&gt;** with your own:```twine upload --repository-url https://pkgs.dev.azure.com/&lt;org_name&gt;/_packaging/&lt;feed_name&gt;/pypi/upload &lt;package_wheel_or_other_dist_format&gt;```### Installing packages from an Azure Artifacts feedOnce `artifacts-keyring` is installed, to consume a package, use the following `pip` command, replacing **&lt;org_name&gt;** and **&lt;feed_name&gt;** with your own, and **&lt;package_name&gt;** with the package you want to install:```pip install &lt;package_name&gt; --index-url https://pkgs.dev.azure.com/&lt;org_name&gt;/_packaging/&lt;feed_name&gt;/pypi/simple```## Advanced configurationThe `artifacts-keyring` package is layered on top of our [Azure Artifacts Credential Provider](https://github.com/microsoft/artifacts-credprovider). Check out that link to the GitHub repo for more information on configuration options.### Environment variables- `ARTIFACTS_KEYRING_NONINTERACTIVE_MODE`: Controls whether the underlying credential provider can issue interactive prompts.## ContributingThis project welcomes contributions and suggestions.  Most contributions require you to agree to aContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant usthe rights to use your contribution. For details, visit https://cla.microsoft.com.When you submit a pull request, a CLA-bot will automatically determine whether you need to providea CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructionsprovided by the bot. You will only need to do this once across all repos using our CLA.This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) orcontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.</longdescription>
</pkgmetadata>