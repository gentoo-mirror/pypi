<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-mirth-client[![PyPI Release](https://img.shields.io/pypi/v/mirth-client)](https://pypi.org/project/mirth-client/)[![Documentation Status](https://readthedocs.org/projects/python-mirth-client/badge/?version=latest)](https://python-mirth-client.readthedocs.io/en/latest/?badge=latest)A basic async Python interface for Mirth Connect## Installation`pip install mirth-client`## Usage exampleAssuming running within IPython or as part of an async application with an event-loop set up.```pythonfrom mirth_client import MirthAPIfrom pprint import pprintasync with MirthAPI(&quot;https://mirth.domain.com/api&quot;) as api:    await api.login(&quot;****&quot;, &quot;****&quot;)    # Check out list of channels    for channel in await api.channels():        metadata = await channel.get_info()        print(f&quot;ID: {metadata.id}&quot;)        print(f&quot;Name: {metadata.name}&quot;)        print(&quot;&quot;)    # Get stats for a channel    s = await api.channel(&quot;3cdefad2-bf10-49ee-81c9-8ac6fd2fed67&quot;).get_statistics()    pprint(s)    # Check channel for failed messages    e = await api.channel(&quot;3cdefad2-bf10-49ee-81c9-8ac6fd2fed67&quot;).get_messages(status=&quot;error&quot;)    pprint(e)    # Get 10 most recent events    e = await api.events(10)    pprint(e)```</longdescription>
</pkgmetadata>