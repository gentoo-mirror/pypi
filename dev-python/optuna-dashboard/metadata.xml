<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># optuna-dashboard![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square) [![PyPI - Downloads](https://img.shields.io/pypi/dm/optuna-dashboard)](https://pypistats.org/packages/optuna-dashboard)Real-time dashboard for [Optuna](https://github.com/optuna/optuna).Code files were originally taken from [Goptuna](https://github.com/c-bata/goptuna).## InstallationYou can install optuna-dashboard via [PyPI](https://pypi.org/project/optuna-dashboard/) or [Anaconda Cloud](https://anaconda.org/conda-forge/optuna-dashboard).```$ pip install optuna-dashboard```Also, you can install following optional dependencies to make optuna-dashboard faster.```console$ pip install optuna-fast-fanova gunicorn```## Getting StartedFirst, please specify the storage URL to persistent your study using the [RDB backend](https://optuna.readthedocs.io/en/stable/tutorial/20_recipes/001_rdb.html).```pythonimport optunadef objective(trial):    x = trial.suggest_float(&quot;x&quot;, -100, 100)    y = trial.suggest_categorical(&quot;y&quot;, [-1, 0, 1])    return x**2 + yif __name__ == &quot;__main__&quot;:    study = optuna.create_study(        storage=&quot;sqlite:///db.sqlite3&quot;,  # Specify the storage URL here.        study_name=&quot;quadratic-simple&quot;    )    study.optimize(objective, n_trials=100)    print(f&quot;Best value: {study.best_value} (params: {study.best_params})&quot;)```After running the above script, please execute the `optuna-dashboard` command with Optuna storage URL.```$ optuna-dashboard sqlite:///db.sqlite3Listening on http://localhost:8080/Hit Ctrl-C to quit.```&lt;details&gt;&lt;summary&gt;More command line options&lt;/summary&gt;```console$ optuna-dashboard -husage: optuna-dashboard [-h] [--port PORT] [--host HOST] [--version] [--quiet] storageReal-time dashboard for Optuna.positional arguments:  storage        DB URL (e.g. sqlite:///example.db)optional arguments:  -h, --help            show this help message and exit  --port PORT           port number (default: 8080)  --host HOST           hostname (default: 127.0.0.1)  --server {wsgiref,gunicorn}                        server (default: auto)  --artifact-dir ARTIFACT_DIR                        directory to store artifact files  --version, -v         show program's version number and exit  --quiet, -q           quiet```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Python Interface&lt;/summary&gt;**`run_server(storage: Union[str, BaseStorage], host: str = 'localhost', port: int = 8080) -&gt; None`**Start running optuna-dashboard and blocks until the server terminates.This function uses wsgiref module which is not intended for the production use.**`wsgi(storage: Union[str, BaseStorage]) -&gt; WSGIApplication`**This function exposes WSGI interface for people who want to run on theproduction-class WSGI servers like Gunicorn or uWSGI.**`save_note(study_or_trial: Union[Study, Trial], body: str) -&gt; None`**Save the note (Markdown format) to the Study or the Trial.**`set_objective_names(study: Study, names: list[str]) -&gt; None`**Set the names of objectives.&lt;/details&gt;## Using an official Docker imageYou can also use [an official Docker image](https://github.com/optuna/optuna-dashboard/pkgs/container/optuna-dashboard) instead of setting up your Python environment.The Docker image only supports SQLite3, MySQL(PyMySQL), and PostgreSQL(Psycopg2).```$ docker run -it --rm -p 8080:8080 -v `pwd`:/app -w /app \&gt; ghcr.io/optuna/optuna-dashboard sqlite:///db.sqlite3```&lt;details&gt;&lt;summary&gt;MySQL (PyMySQL)&lt;/summary&gt;```$ docker run -it --rm -p 8080:8080 ghcr.io/optuna/optuna-dashboard mysql+pymysql://username:password@hostname:3306/dbname```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;PostgreSQL (Psycopg2)&lt;/summary&gt;```$ docker run -it --rm -p 8080:8080 ghcr.io/optuna/optuna-dashboard postgresql+psycopg2://username:password@hostname:5432/dbname```&lt;/details&gt;## Features### Manage StudiesYou can create and delete studies from Dashboard.![optuna-dashboard-create-delete-study](https://user-images.githubusercontent.com/5564044/205545958-305f2354-c7cd-4687-be2f-9e46e7401838.gif)### Visualize with Interactive Graphs &amp; Rich Trials Data GridYou can check the optimization history, hyperparameter importances, etc. in graphs and tables.![optuna-dashboard-realtime-graph](https://user-images.githubusercontent.com/5564044/205545965-278cd7f4-da7d-4e2e-ac31-6d81b106cada.gif)## Submitting patchesIf you want to contribute, please check [Developers Guide](./CONTRIBUTING.md).</longdescription>
</pkgmetadata>