<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>FunctionShield--------------   Serverless Security Library for Developers. Regain Control over Your   Serverless Runtime.How FunctionShield helps With Serverless Security?---------------------------------------------------  By monitoring (or blocking) outbound network traffic from your   function, you can be certain that your data is never leaked-  By disabling read/write operations on the /tmp/ directory, you can   make your function truly ephemeral-  By disabling the ability to launch child processes, you can make sure   that no rogue processes are spawned without your knowledge by   potentially malicious packages-  By disabling the ability to read the function's (handler) source code   through the file system, you can prevent handler source code leakage,   which is oftentimes the first step in a serverless attackSupports AWS Lambda and Google Cloud FunctionsGet a free token----------------Please visit: https://www.puresec.io/function-shield-token-formInstall-------.. code:: sh   $ pip install function-shieldSuper simple to use-------------------.. code:: python   import function_shield   function_shield.configure({       &quot;policy&quot;: {           # &quot;block&quot; mode =&gt; active blocking           # &quot;alert&quot; mode =&gt; log only           # &quot;allow&quot; mode =&gt; allowed, implicitly occurs if key does not exist           &quot;outbound_connectivity&quot;: &quot;block&quot;,           &quot;read_write_tmp&quot;: &quot;block&quot;,           &quot;create_child_process&quot;: &quot;block&quot;,           &quot;read_handler&quot;: &quot;block&quot;       },       &quot;token&quot;: os.environ[&quot;FUNCTION_SHIELD_TOKEN&quot;]   })   def handler(event, context):       # Your Code Here #Logging &amp; Security Visibility-----------------------------FunctionShield logs are sent directly to your function's AWS CloudWatchlog group. Here are a few sample logs, demonstrating the log format youshould expect:.. code:: js    // Log example #1:    {        &quot;details&quot;: {            &quot;host&quot;: &quot;microsoft.com&quot;,            &quot;ip&quot;: &quot;13.77.161.179&quot;        },        &quot;function_shield&quot;: true,        &quot;timestamp&quot;: &quot;2019-06-19T09:08:00.455144Z&quot;,        &quot;policy&quot;: &quot;outbound_connectivity&quot;,        &quot;mode&quot;: &quot;block&quot;    }    // Log example #2:    {        &quot;details&quot;: {            &quot;path&quot;: &quot;/tmp/block&quot;        },        &quot;function_shield&quot;: true,        &quot;timestamp&quot;: &quot;2019-06-19T09:08:00.422553Z&quot;,        &quot;policy&quot;: &quot;read_write_tmp&quot;,        &quot;mode&quot;: &quot;block&quot;    }    // Log example #3:    {        &quot;details&quot;: {            &quot;arguments&quot;: [                &quot;uname&quot;,                &quot;-a&quot;            ],            &quot;path&quot;: &quot;/bin/uname&quot;        },        &quot;function_shield&quot;: true,        &quot;timestamp&quot;: &quot;2019-06-19T09:08:00.469822Z&quot;,        &quot;policy&quot;: &quot;create_child_process&quot;,        &quot;mode&quot;: &quot;block&quot;    }    // Log example #4:    {        &quot;details&quot;: {            &quot;path&quot;: &quot;/var/task/handler.py&quot;        },        &quot;function_shield&quot;: true,        &quot;timestamp&quot;: &quot;2019-06-19T09:08:00.433942Z&quot;,        &quot;policy&quot;: &quot;read_handler&quot;,        &quot;mode&quot;: &quot;block&quot;    }Reconfiguring FunctionShield-----------------------------``function_shield.configure`` can be called multiple time to temporary disable one of the policies.Note that you need to add an additional parameter ``cookie`` to any subsequent call to ``function_shield.configure``... code:: python   import function_shield   import requests   cookie = function_shield.configure({       &quot;policy&quot;: {           &quot;outbound_connectivity&quot;: &quot;block&quot;,           &quot;read_write_tmp&quot;: &quot;block&quot;,           &quot;create_child_process&quot;: &quot;block&quot;,           &quot;read_handler&quot;: &quot;block&quot;       },       &quot;token&quot;: os.environ[&quot;FUNCTION_SHIELD_TOKEN&quot;]   })   def handler(event, context):       ...       function_shield.configure({           &quot;cookie&quot;: cookie,           &quot;policy&quot;: {               &quot;outbound_connectivity&quot;: &quot;allow&quot;           }       })       r = requests.get(&quot;https://api.company.com/users&quot;)       function_shield.configure({           &quot;cookie&quot;: cookie,           &quot;policy&quot;: {               &quot;outbound_connectivity&quot;: &quot;block&quot;           }       })       ...       Custom Security Policy (whitelisting)-------------------------------------Custom security policy is only supported with the PureSec SSP fullproduct.`Get PureSec`_.. _Get PureSec: https://www.puresec.io/product</longdescription>
</pkgmetadata>