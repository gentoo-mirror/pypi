<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Test](https://github.com/eadwinCode/django-ninja-extra/workflows/Test/badge.svg)[![PyPI version](https://badge.fury.io/py/django-ninja-extra.svg)](https://badge.fury.io/py/django-ninja-extra)[![PyPI version](https://img.shields.io/pypi/v/django-ninja-extra.svg)](https://pypi.python.org/pypi/django-ninja-extra)[![PyPI version](https://img.shields.io/pypi/pyversions/django-ninja-extra.svg)](https://pypi.python.org/pypi/django-ninja-extra)[![PyPI version](https://img.shields.io/pypi/djversions/django-ninja-extra.svg)](https://pypi.python.org/pypi/django-ninja-extra)[![Codecov](https://img.shields.io/codecov/c/gh/eadwinCode/django-ninja-extra)](https://codecov.io/gh/eadwinCode/django-ninja-extra)[![Downloads](https://static.pepy.tech/badge/django-ninja-extra)](https://pepy.tech/project/django-ninja-extra)# Django Ninja Extra**Django Ninja Extra** package offers a **class-based** approach plus extra functionalities that will speed up your RESTful API development with [**Django Ninja**](https://django-ninja.rest-framework.com)**Key features:**All **Django-Ninja** features :- **Easy**: Designed to be easy to use and intuitive.- **FAST execution**: Very high performance thanks to **&lt;a href=&quot;https://pydantic-docs.helpmanual.io&quot; target=&quot;_blank&quot;&gt;Pydantic&lt;/a&gt;** and **&lt;a href=&quot;/async-support/&quot;&gt;async support&lt;/a&gt;**.- **Fast to code**: Type hints and automatic docs lets you focus only on business logic.- **Standards-based**: Based on the open standards for APIs: **OpenAPI** (previously known as Swagger) and **JSON Schema**.- **Django friendly**: (obviously) has good integration with the Django core and ORM.Plus **Extra**:- **Class Based**: Design your APIs in a class based fashion.- **Permissions**: Protect endpoint(s) at ease with defined permissions and authorizations at route level or controller level.- **Dependency Injection**: Controller classes supports dependency injection with python [**Injector** ](https://injector.readthedocs.io/en/latest/) or [**django_injector**](https://github.com/blubber/django_injector). Giving you the ability to inject API dependable services to APIController class and utilizing them where needed---### Requirements- Python &gt;= 3.6- django &gt;= 2.1 - pydantic &gt;= 1.6 - Django-Ninja &gt;= 0.16.1Full documentation, [visit](https://eadwincode.github.io/django-ninja-extra/).## ExampleCheckout this sample project: https://github.com/eadwinCode/bookstoreapi## Installation```pip install django-ninja-extra```After installation, add `ninja_extra` to your `INSTALLED_APPS````Python INSTALLED_APPS = [    ...,    'ninja_extra',]```## UsageIn your django project next to urls.py create new `api.py` file:```Pythonfrom ninja_extra import NinjaExtraAPI, api_controller, http_getapi = NinjaExtraAPI()# function based definition@api.get(&quot;/add&quot;, tags=['Math'])def add(request, a: int, b: int):    return {&quot;result&quot;: a + b}#class based definition@api_controllerclass MathAPI:    @http_get('/subtract',)    def subtract(self, a: int, b: int):        &quot;&quot;&quot;Subtracts a from b&quot;&quot;&quot;        return {&quot;result&quot;: a - b}    @http_get('/divide',)    def divide(self, a: int, b: int):        &quot;&quot;&quot;Divides a by b&quot;&quot;&quot;        return {&quot;result&quot;: a / b}        @http_get('/multiple',)    def multiple(self, a: int, b: int):        &quot;&quot;&quot;Multiples a with b&quot;&quot;&quot;        return {&quot;result&quot;: a * b}    api.register_controllers(    MathAPI)```Now go to `urls.py` and add the following:```Python...from django.urls import pathfrom .api import apiurlpatterns = [    path(&quot;admin/&quot;, admin.site.urls),    path(&quot;api/&quot;, api.urls),  # &lt;---------- !]```### Interactive API docsNow go to &lt;a href=&quot;http://127.0.0.1:8000/api/docs&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:8000/api/docs&lt;/a&gt;You will see the automatic interactive API documentation (provided by &lt;a href=&quot;https://github.com/swagger-api/swagger-ui&quot; target=&quot;_blank&quot;&gt;Swagger UI&lt;/a&gt;):![Swagger UI](docs/images/ui_swagger_preview_readme.gif)</longdescription>
</pkgmetadata>