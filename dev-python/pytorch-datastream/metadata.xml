<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==================Pytorch Datastream==================.. image:: https://badge.fury.io/py/pytorch-datastream.svg       :target: https://badge.fury.io/py/pytorch-datastream.. image:: https://img.shields.io/pypi/pyversions/pytorch-datastream.svg       :target: https://pypi.python.org/pypi/pytorch-datastream.. image:: https://readthedocs.org/projects/pytorch-datastream/badge/?version=latest       :target: https://pytorch-datastream.readthedocs.io/en/latest/?badge=latest.. image:: https://img.shields.io/pypi/l/pytorch-datastream.svg       :target: https://pypi.python.org/pypi/pytorch-datastreamThis is a simple library for creating readable dataset pipelines andreusing best practices for issues such as imbalanced datasets. There arejust two components to keep track of: ``Dataset`` and ``Datastream``.``Dataset`` is a simple mapping between an index and an example. It provides pipelining of functions in a readable syntax originally adapted fromtensorflow 2's ``tf.data.Dataset``.``Datastream`` combines a ``Dataset`` and a sampler into a stream of examples.It provides a simple solution to oversampling / stratification, weightedsampling, and finally converting to a ``torch.utils.data.DataLoader``.Install=======.. code-block::    poetry add pytorch-datastreamOr, for the old-timers:.. code-block::    pip install pytorch-datastreamUsage=====The list below is meant to showcase functions that are useful in most standardand non-standard cases. It is not meant to be an exhaustive list. See the `documentation &lt;https://pytorch-datastream.readthedocs.io/en/latest/&gt;`_ for a more extensive list on API and usage... code-block:: python    Dataset.from_subscriptable    Dataset.from_dataframe    Dataset        .map        .subset        .split        .cache        .with_columns    Datastream.merge    Datastream.zip    Datastream        .map        .data_loader        .zip_index        .update_weights_        .update_example_weight_        .weight        .state_dict        .load_state_dictMerge / stratify / oversample datastreams-----------------------------------------The fruit datastreams given below repeatedly yields the string of its fruittype... code-block:: python    &gt;&gt;&gt; datastream = Datastream.merge([    ...     (apple_datastream, 2),    ...     (pear_datastream, 1),    ...     (banana_datastream, 1),    ... ])    &gt;&gt;&gt; next(iter(datastream.data_loader(batch_size=8)))    ['apple', 'apple', 'pear', 'banana', 'apple', 'apple', 'pear', 'banana']Zip independently sampled datastreams-------------------------------------The fruit datastreams given below repeatedly yields the string of its fruittype... code-block:: python    &gt;&gt;&gt; datastream = Datastream.zip([    ...     apple_datastream,    ...     Datastream.merge([pear_datastream, banana_datastream]),    ... ])    &gt;&gt;&gt; next(iter(datastream.data_loader(batch_size=4)))    [('apple', 'pear'), ('apple', 'banana'), ('apple', 'pear'), ('apple', 'banana')]More usage examples-------------------See the `documentation &lt;https://pytorch-datastream.readthedocs.io/en/latest/&gt;`_for more usage examples.Install from source===================.. pip install -e .</longdescription>
</pkgmetadata>