<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># jedi-language-server[![image-version](https://img.shields.io/pypi/v/jedi-language-server.svg)](https://python.org/pypi/jedi-language-server)[![image-license](https://img.shields.io/pypi/l/jedi-language-server.svg)](https://python.org/pypi/jedi-language-server)[![image-python-versions](https://img.shields.io/badge/python-&gt;=3.7-blue)](https://python.org/pypi/jedi-language-server)[![image-pypi-downloads](https://pepy.tech/badge/jedi-language-server)](https://pepy.tech/project/jedi-language-server)[![github-action-testing](https://github.com/pappasam/jedi-language-server/actions/workflows/testing.yaml/badge.svg)](https://github.com/pappasam/jedi-language-server/actions/workflows/testing.yaml)A [Language Server](https://microsoft.github.io/language-server-protocol/) for the latest version(s) of [Jedi](https://jedi.readthedocs.io/en/latest/). If using Neovim/Vim, we recommend using with [coc-jedi](https://github.com/pappasam/coc-jedi). Supports Python versions 3.7 and newer.**Note:** this tool is actively used by its primary author. He's happy to review pull requests / respond to issues you may discover.## InstallationSome frameworks, like coc-jedi and vscode-python, will install and manage jedi-language-server for you. If you're setting up manually, you can run the following from your command line (bash / zsh):```bashpip install -U jedi-language-server```Alternatively (and preferably), use [pipx](https://github.com/pipxproject/pipx) to keep jedi-language-server and its dependencies isolated from your other Python dependencies. Don't worry, jedi is smart enough to figure out which Virtual environment you're currently using!## Capabilitiesjedi-language-server aims to support Jedi's capabilities and expose them through the Language Server Protocol. It supports the following Language Server capabilities:### Language Features- [completionItem/resolve](https://microsoft.github.io/language-server-protocol/specification#completionItem_resolve)- [textDocument/codeAction](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeAction) (refactor.inline, refactor.extract)- [textDocument/completion](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_completion)- [textDocument/definition](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_definition)- [textDocument/documentHighlight](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentHighlight)- [textDocument/documentSymbol](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_documentSymbol)- [textDocument/typeDefinition](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_typeDefinition)- [textDocument/hover](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_hover)- [textDocument/publishDiagnostics](https://microsoft.github.io/language-server-protocol/specification#textDocument_publishDiagnostics)- [textDocument/references](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_references)- [textDocument/rename](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_rename)- [textDocument/signatureHelp](https://microsoft.github.io/language-server-protocol/specification#textDocument_signatureHelp)- [workspace/symbol](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspace_symbol)### Text Synchronization (for diagnostics)- [textDocument/didChange](https://microsoft.github.io/language-server-protocol/specification#textDocument_didChange)- [textDocument/didOpen](https://microsoft.github.io/language-server-protocol/specification#textDocument_didOpen)- [textDocument/didSave](https://microsoft.github.io/language-server-protocol/specification#textDocument_didSave)## Editor SetupThe following instructions show how to use jedi-language-server with your development tooling. The instructions assume you have already installed jedi-language-server.### Vim / NeovimUsers may choose 1 of the following options:- [coc.nvim](https://github.com/neoclide/coc.nvim) with [coc-jedi](https://github.com/pappasam/coc-jedi).- [ALE](https://github.com/dense-analysis/ale).- [Neovim's native LSP client](https://neovim.io/doc/user/lsp.html). See [here](https://github.com/neovim/nvim-lspconfig/blob/master/doc/server_configurations.md#jedi_language_server) for an example configuration.- [vim-lsp](https://github.com/prabirshrestha/vim-lsp).Note: this list is non-exhaustive. If you know of a great choice not included in this list, please submit a PR!### EmacsUsers may choose one of the following options:- [lsp-jedi](https://github.com/fredcamps/lsp-jedi).- [eglot](https://github.com/joaotavora/eglot)Note: this list is non-exhaustive. If you know of a great choice not included in this list, please submit a PR!### Visual Studio Code (vscode)Starting from the [October 2021 release](https://github.com/microsoft/vscode-python/releases/tag/2021.10.1317843341), set the `python.languageServer` setting to `Jedi` to use jedi-language-server.Note: This does not support Python 2.7.See: &lt;https://github.com/pappasam/jedi-language-server/issues/50#issuecomment-781101169&gt;## Command linejedi-language-server can be run directly from the command line.```console$ jedi-language-server --helpusage: jedi-language-server [-h] [--version] [--tcp] [--ws] [--host HOST] [--port PORT] [--log-file LOG_FILE] [-v]Jedi language server: an LSP wrapper for jedi.optional arguments:  -h, --help           show this help message and exit  --version            display version information and exit  --tcp                use TCP web server instead of stdio  --ws                 use web socket server instead of stdio  --host HOST          host for web server (default 127.0.0.1)  --port PORT          port for web server (default 2087)  --log-file LOG_FILE  redirect logs to file specified  -v, --verbose        increase verbosity of log outputExamples:    Run over stdio     : jedi-language-server    Run over tcp       : jedi-language-server --tcp    Run over websockets:        # only need to pip install once per env        pip install pygls[ws]        jedi-language-server --wsNotes:    For use with web sockets, user must first run    'pip install pygls[ws]' to install the correct    version of the websockets library.```If testing sending requests over stdio manually from the command line, you must include Windows-style line endings: `\r\n` . For an example, from within this project, run the following:```console$ jedi-language-server &lt; ./example-initialization-request.txtINFO:pygls.server:Starting IO serverINFO:pygls.feature_manager:Registered &quot;textDocument/didOpen&quot; with options &quot;None&quot;INFO:pygls.feature_manager:Registered &quot;textDocument/didChange&quot; with options &quot;None&quot;INFO:pygls.feature_manager:Registered &quot;textDocument/didSave&quot; with options &quot;None&quot;INFO:pygls.feature_manager:Registered &quot;textDocument/hover&quot; with options &quot;None&quot;INFO:pygls.protocol:Language server initialized work_done_token=None process_id=None root_uri='file:///home/ubuntu/artifacts/' capabilities=ClientCapabilities(workspace=WorkspaceClientCapabilities(apply_edit=None, workspace_edit=None, did_change_configuration=DidChangeConfigurationClientCapabilities(dynamic_registration=True), did_change_watched_files=None, symbol=None, execute_command=None, workspace_folders=None, configuration=None, semantic_tokens=None, code_lens=None, file_operations=None), text_document=TextDocumentClientCapabilities(synchronization=TextDocumentSyncClientCapabilities(dynamic_registration=True, will_save=False, will_save_wait_until=False, did_save=False), completion=CompletionClientCapabilities(dynamic_registration=True, completion_item=CompletionItemClientCapabilities(snippet_support=False, commit_characters_support=True, documentation_format=[&lt;MarkupKind.PlainText: 'plaintext'&gt;, &lt;MarkupKind.Markdown: 'markdown'&gt;], deprecated_support=False, preselect_support=False, tag_support=None, insert_replace_support=None, resolve_support=None, insert_text_mode_support=None), completion_item_kind=None, context_support=False), hover=HoverClientCapabilities(dynamic_registration=True, content_format=[&lt;MarkupKind.PlainText: 'plaintext'&gt;, &lt;MarkupKind.Markdown: 'markdown'&gt;]), signature_help=SignatureHelpClientCapabilities(dynamic_registration=True, signature_information=SignatureHelpInformationClientCapabilities(documentation_format=[&lt;MarkupKind.PlainText: 'plaintext'&gt;, &lt;MarkupKind.Markdown: 'markdown'&gt;], parameter_information=None, active_parameter_support=None), context_support=None), declaration=DeclarationClientCapabilities(dynamic_registration=True, link_support=True), definition=DefinitionClientCapabilities(dynamic_registration=True, link_support=True), type_definition=TypeDefinitionClientCapabilities(dynamic_registration=True, link_support=True), implementation=ImplementationClientCapabilities(dynamic_registration=True, link_support=True), references=None, document_highlight=None, document_symbol=None, code_action=None, code_lens=None, document_link=None, color_provider=None, formatting=None, range_formatting=None, on_type_formatting=None, rename=None, publish_diagnostics=None, folding_range=None, selection_range=None, linked_editing_range=None, call_hierarchy=None, semantic_tokens=None, moniker=None), window=None, general=None, experimental=None) client_info=None locale=None root_path=None initialization_options=None trace=None workspace_folders=NoneINFO:pygls.protocol:Sending data: {&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: 0, &quot;result&quot;: {&quot;capabilities&quot;: {&quot;textDocumentSync&quot;: {&quot;openClose&quot;: true, &quot;change&quot;: 2, &quot;willSave&quot;: false, &quot;willSaveWaitUntil&quot;: false, &quot;save&quot;: true}, &quot;completionProvider&quot;: {&quot;triggerCharacters&quot;: [&quot;.&quot;, &quot;'&quot;, &quot;\&quot;&quot;], &quot;resolveProvider&quot;: true}, &quot;hoverProvider&quot;: true, &quot;signatureHelpProvider&quot;: {&quot;triggerCharacters&quot;: [&quot;(&quot;, &quot;,&quot;]}, &quot;definitionProvider&quot;: true, &quot;referencesProvider&quot;: true, &quot;documentHighlightProvider&quot;: true, &quot;documentSymbolProvider&quot;: true, &quot;codeActionProvider&quot;: {&quot;codeActionKinds&quot;: [&quot;refactor.inline&quot;, &quot;refactor.extract&quot;]}, &quot;renameProvider&quot;: true, &quot;executeCommandProvider&quot;: {&quot;commands&quot;: []}, &quot;workspaceSymbolProvider&quot;: true, &quot;workspace&quot;: {&quot;workspaceFolders&quot;: {&quot;supported&quot;: true, &quot;changeNotifications&quot;: true}, &quot;fileOperations&quot;: {}}}}}Content-Length: 758Content-Type: application/vscode-jsonrpc; charset=utf-8{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: 0, &quot;result&quot;: {&quot;capabilities&quot;: {&quot;textDocumentSync&quot;: {&quot;openClose&quot;: true, &quot;change&quot;: 2, &quot;willSave&quot;: false, &quot;willSaveWaitUntil&quot;: false, &quot;save&quot;: true}, &quot;completionProvider&quot;: {&quot;triggerCharacters&quot;: [&quot;.&quot;, &quot;'&quot;, &quot;\&quot;&quot;], &quot;resolveProvider&quot;: true}, &quot;hoverProvider&quot;: true, &quot;signatureHelpProvider&quot;: {&quot;triggerCharacters&quot;: [&quot;(&quot;, &quot;,&quot;]}, &quot;definitionProvider&quot;: true, &quot;referencesProvider&quot;: true, &quot;documentHighlightProvider&quot;: true, &quot;documentSymbolProvider&quot;: true, &quot;codeActionProvider&quot;: {&quot;codeActionKinds&quot;: [&quot;refactor.inline&quot;, &quot;refactor.extract&quot;]}, &quot;renameProvider&quot;: true, &quot;executeCommandProvider&quot;: {&quot;commands&quot;: []}, &quot;workspaceSymbolProvider&quot;: true, &quot;workspace&quot;: {&quot;workspaceFolders&quot;: {&quot;supported&quot;: true, &quot;changeNotifications&quot;: true}, &quot;fileOperations&quot;: {}}}}}INFO:pygls.server:Shutting down the serverINFO:pygls.server:Closing the event loop.```If testing interactively, be sure to manually insert carriage returns. Although this may differ between shell environments, within most bash terminals, you can explicitly insert the required line endings by typing `&lt;C-v&gt;&lt;C-m&gt;`, which will insert a `^M`. See:```console$ jedi-language-server 2&gt;logsContent-Length: 1062^M^M{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:0,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;capabilities&quot;:{&quot;textDocument&quot;:{&quot;hover&quot;:{&quot;dynamicRegistration&quot;:true,&quot;contentFormat&quot;:[&quot;plaintext&quot;,&quot;markdown&quot;]},&quot;synchronization&quot;:{&quot;dynamicRegistration&quot;:true,&quot;willSave&quot;:false,&quot;didSave&quot;:false,&quot;willSaveWaitUntil&quot;:false},&quot;completion&quot;:{&quot;dynamicRegistration&quot;:true,&quot;completionItem&quot;:{&quot;snippetSupport&quot;:false,&quot;commitCharactersSupport&quot;:true,&quot;documentationFormat&quot;:[&quot;plaintext&quot;,&quot;markdown&quot;],&quot;deprecatedSupport&quot;:false,&quot;preselectSupport&quot;:false},&quot;contextSupport&quot;:false},&quot;signatureHelp&quot;:{&quot;dynamicRegistration&quot;:true,&quot;signatureInformation&quot;:{&quot;documentationFormat&quot;:[&quot;plaintext&quot;,&quot;markdown&quot;]}},&quot;declaration&quot;:{&quot;dynamicRegistration&quot;:true,&quot;linkSupport&quot;:true},&quot;definition&quot;:{&quot;dynamicRegistration&quot;:true,&quot;linkSupport&quot;:true},&quot;typeDefinition&quot;:{&quot;dynamicRegistration&quot;:true,&quot;linkSupport&quot;:true},&quot;implementation&quot;:{&quot;dynamicRegistration&quot;:true,&quot;linkSupport&quot;:true}},&quot;workspace&quot;:{&quot;didChangeConfiguration&quot;:{&quot;dynamicRegistration&quot;:true}}},&quot;initializationOptions&quot;:null,&quot;processId&quot;:null,&quot;rootUri&quot;:&quot;file:///home/ubuntu/artifacts/&quot;,&quot;workspaceFolders&quot;:null}}^MContent-Length: 758Content-Type: application/vscode-jsonrpc; charset=utf-8{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: 0, &quot;result&quot;: {&quot;capabilities&quot;: {&quot;textDocumentSync&quot;: {&quot;openClose&quot;: true, &quot;change&quot;: 2, &quot;willSave&quot;: false, &quot;willSaveWaitUntil&quot;: false, &quot;save&quot;: true}, &quot;completionProvider&quot;: {&quot;triggerCharacters&quot;: [&quot;.&quot;, &quot;'&quot;, &quot;\&quot;&quot;], &quot;resolveProvider&quot;: true}, &quot;hoverProvider&quot;: true, &quot;signatureHelpProvider&quot;: {&quot;triggerCharacters&quot;: [&quot;(&quot;, &quot;,&quot;]}, &quot;definitionProvider&quot;: true, &quot;referencesProvider&quot;: true, &quot;documentHighlightProvider&quot;: true, &quot;documentSymbolProvider&quot;: true, &quot;codeActionProvider&quot;: {&quot;codeActionKinds&quot;: [&quot;refactor.inline&quot;, &quot;refactor.extract&quot;]}, &quot;renameProvider&quot;: true, &quot;executeCommandProvider&quot;: {&quot;commands&quot;: []}, &quot;workspaceSymbolProvider&quot;: true, &quot;workspace&quot;: {&quot;workspaceFolders&quot;: {&quot;supported&quot;: true, &quot;changeNotifications&quot;: true}, &quot;fileOperations&quot;: {}}}}}```## ConfigurationWe recommend using [coc-jedi](https://github.com/pappasam/coc-jedi) and following its [configuration instructions](https://github.com/pappasam/coc-jedi#configuration).If you are configuring manually, jedi-language-server supports the following [initializationOptions](https://microsoft.github.io/language-server-protocol/specification#initialize):```json{  &quot;initializationOptions&quot;: {    &quot;codeAction&quot;: {      &quot;nameExtractVariable&quot;: &quot;jls_extract_var&quot;,      &quot;nameExtractFunction&quot;: &quot;jls_extract_def&quot;    },    &quot;completion&quot;: {      &quot;disableSnippets&quot;: false,      &quot;resolveEagerly&quot;: false,      &quot;ignorePatterns&quot;: []    },    &quot;diagnostics&quot;: {      &quot;enable&quot;: false,      &quot;didOpen&quot;: true,      &quot;didChange&quot;: true,      &quot;didSave&quot;: true    },    &quot;hover&quot;: {      &quot;enable&quot;: true,      &quot;disable&quot;: {        &quot;class&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;function&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;instance&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;keyword&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;module&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;param&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;path&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;property&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] },        &quot;statement&quot;: { &quot;all&quot;: false, &quot;names&quot;: [], &quot;fullNames&quot;: [] }      }    },    &quot;jediSettings&quot;: {      &quot;autoImportModules&quot;: [],      &quot;caseInsensitiveCompletion&quot;: true,      &quot;debug&quot;: false    },    &quot;markupKindPreferred&quot;: &quot;markdown&quot;,    &quot;workspace&quot;: {      &quot;extraPaths&quot;: [],      &quot;environmentPath&quot;: &quot;/path/to/venv/bin/python&quot;,      &quot;symbols&quot;: {        &quot;ignoreFolders&quot;: [&quot;.nox&quot;, &quot;.tox&quot;, &quot;.venv&quot;, &quot;__pycache__&quot;, &quot;venv&quot;],        &quot;maxSymbols&quot;: 20      }    }  }}```See coc-jedi's [configuration instructions](https://github.com/pappasam/coc-jedi#configuration) for an explanation of the above configurations.## DiagnosticsDiagnostics are provided by Python's built-in `compile` function.If you would like diagnostics (from [pylint](https://github.com/PyCQA/pylint), [mypy](https://github.com/python/mypy), etc.), we recommend using the powerful [diagnostic-language-server](https://github.com/iamcco/diagnostic-languageserver).## Code FormattingAgain, we recommend that you use [diagnostic-language-server](https://github.com/iamcco/diagnostic-languageserver). It also supports code formatting.## Local DevelopmentTo build and run this project from source:### DependenciesInstall the following tools manually:- [Poetry](https://github.com/sdispater/poetry#installation)- [GNU Make](https://www.gnu.org/software/make/)#### Recommended- [asdf](https://github.com/asdf-vm/asdf)### Get source code[Fork](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) this repository and clone the fork to your development machine:```bashgit clone https://github.com/&lt;YOUR-USERNAME&gt;/jedi-language-servercd jedi-language-server```### Set up development environment```bashmake setup```### Run tests```bashmake test```## InspirationPalantir's [python-language-server](https://github.com/palantir/python-language-server) inspired this project. In fact, for consistency's sake, many of python-language-server's CLI options are used as-is in jedi-language-server.Unlike python-language-server, jedi-language-server:- Uses [pygls](https://github.com/openlawlibrary/pygls) instead of creating its own low-level Language Server Protocol bindings- Supports one powerful 3rd party static analysis / completion / refactoring library: Jedi. By only supporting Jedi, we can focus on supporting all Jedi features without exposing ourselves to too many broken 3rd party dependencies (I'm looking at you, [rope](https://github.com/python-rope/rope)).- Is supremely simple because of its scope constraints. Leave complexity to the Jedi [master](https://github.com/davidhalter). If the force is strong with you, please submit a PR!## Articles- [Python in VS Code Improves Jedi Language Server Support](https://visualstudiomagazine.com/articles/2021/03/17/vscode-jedi.aspx)## Written by[Samuel Roeca](https://samroeca.com/)</longdescription>
</pkgmetadata>