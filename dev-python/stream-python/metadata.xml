<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Official Python SDK for [Stream Feeds](https://getstream.io/activity-feeds/)[![build](https://github.com/GetStream/stream-python/workflows/build/badge.svg)](https://github.com/GetStream/stream-python/actions) [![PyPI version](https://badge.fury.io/py/stream-python.svg)](http://badge.fury.io/py/stream-python) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/stream-python.svg)&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/GetStream/stream-python/8a0e88a6cf115a34c2d6d39a54527398f3fa5a90/assets/logo.svg&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    Official Python API client for Stream Feeds, a web service for building scalable newsfeeds and activity streams.    &lt;br /&gt;    &lt;a href=&quot;https://getstream.io/activity-feeds/docs/?language=python&quot;&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;    &lt;br /&gt;    &lt;br /&gt;    &lt;a href=&quot;https://github.com/GetStream/stream-django&quot;&gt;Django Code Sample&lt;/a&gt;    ¬∑    &lt;a href=&quot;https://github.com/GetStream/stream-python/issues&quot;&gt;Report Bug&lt;/a&gt;    ¬∑    &lt;a href=&quot;https://github.com/GetStream/stream-python/issues&quot;&gt;Request Feature&lt;/a&gt;&lt;/p&gt;## üìù About Stream&gt; üí° Note: this is a library for the **Feeds** product. The Chat SDKs can be found [here](https://getstream.io/chat/docs/).You can sign up for a Stream account at our [Get Started](https://getstream.io/get_started/) page.You can use this library to access feeds API endpoints server-side.For the client-side integrations (web and mobile) have a look at the JavaScript, iOS and Android SDK libraries ([docs](https://getstream.io/activity-feeds/)).&gt; üí° We have a Django integration available [here](https://github.com/GetStream/stream-django).## ‚öôÔ∏è Installation```bash$ pip install stream-python```## üìö Full documentationDocumentation for this Python client are available at the [Stream website](https://getstream.io/docs/?language=python).## ‚ú® Getting started```pythonimport datetime# Create a new clientimport streamclient = stream.connect('YOUR_API_KEY', 'API_KEY_SECRET')# Create a new client specifying data center locationclient = stream.connect('YOUR_API_KEY', 'API_KEY_SECRET', location='us-east')# Find your API keys here https://getstream.io/dashboard/# Create a feed objectuser_feed_1 = client.feed('user', '1')# Get activities from 5 to 10 (slow pagination)result = user_feed_1.get(limit=5, offset=5)# (Recommended &amp; faster) Filter on an id less than the given UUIDresult = user_feed_1.get(limit=5, id_lt=&quot;e561de8f-00f1-11e4-b400-0cc47a024be0&quot;)# Create a new activityactivity_data = {'actor': 1, 'verb': 'tweet', 'object': 1, 'foreign_id': 'tweet:1'}activity_response = user_feed_1.add_activity(activity_data)# Create a bit more complex activityactivity_data = {'actor': 1, 'verb': 'run', 'object': 1, 'foreign_id': 'run:1','course': {'name': 'Golden Gate park', 'distance': 10},'participants': ['Thierry', 'Tommaso'],'started_at': datetime.datetime.now()}user_feed_1.add_activity(activity_data)# Remove an activity by its iduser_feed_1.remove_activity(&quot;e561de8f-00f1-11e4-b400-0cc47a024be0&quot;)# or by foreign iduser_feed_1.remove_activity(foreign_id='tweet:1')# Follow another feeduser_feed_1.follow('flat', '42')# Stop following another feeduser_feed_1.unfollow('flat', '42')# List followers/followingfollowing = user_feed_1.following(offset=0, limit=2)followers = user_feed_1.followers(offset=0, limit=10)# Creates many follow relationships in one requestfollows = [    {'source': 'flat:1', 'target': 'user:1'},    {'source': 'flat:1', 'target': 'user:2'},    {'source': 'flat:1', 'target': 'user:3'}]client.follow_many(follows)# Batch adding activitiesactivities = [{'actor': 1, 'verb': 'tweet', 'object': 1},{'actor': 2, 'verb': 'watch', 'object': 3}]user_feed_1.add_activities(activities)# Add an activity and push it to other feeds too using the `to` fieldactivity = {    &quot;actor&quot;:&quot;1&quot;,    &quot;verb&quot;:&quot;like&quot;,    &quot;object&quot;:&quot;3&quot;,    &quot;to&quot;:[&quot;user:44&quot;, &quot;user:45&quot;]}user_feed_1.add_activity(activity)# Retrieve an activity by its IDclient.get_activities(ids=[activity_id])# Retrieve an activity by the combination of foreign_id and timeclient.get_activities(foreign_id_times=[    (foreign_id, activity_time),])# Enrich while getting activitiesclient.get_activities(ids=[activity_id], enrich=True, reactions={&quot;counts&quot;: True})# Update some parts of an activity with activity_partial_updateset = {    'product.name': 'boots',    'colors': {        'red': '0xFF0000',        'green': '0x00FF00'    }}unset = [ 'popularity', 'details.info' ]# ...by IDclient.activity_partial_update(id=activity_id, set=set, unset=unset)# ...or by combination of foreign_id and timeclient.activity_partial_update(foreign_id=foreign_id, time=activity_time, set=set, unset=unset)# Generating user token for client side usage (JS client)user_token = client.create_user_token(&quot;user-42&quot;)# Javascript client side feed initialization# client = stream.connect(apiKey, userToken, appId);# Generate a redirect url for the Stream Analytics platform to track# events/impressions on url clicksimpression = {    'content_list': ['tweet:1', 'tweet:2', 'tweet:3'],    'user_data': 'tommaso',    'location': 'email',    'feed_id': 'user:global'}engagement = {    'content': 'tweet:2',    'label': 'click',    'position': 1,    'user_data': 'tommaso',    'location': 'email',    'feed_id':    'user:global'}events = [impression, engagement]redirect_url = client.create_redirect_url('http://google.com/', 'user_id', events)```### Async code usage```pythonimport datetimeimport streamclient = stream.connect('YOUR_API_KEY', 'API_KEY_SECRET', use_async=True)# Create a new client specifying data center locationclient = stream.connect('YOUR_API_KEY', 'API_KEY_SECRET', location='us-east', use_async=True)# Find your API keys here https://getstream.io/dashboard/# Create a feed objectuser_feed_1 = client.feed('user', '1')# Get activities from 5 to 10 (slow pagination)result = await user_feed_1.get(limit=5, offset=5)# (Recommended &amp; faster) Filter on an id less than the given UUIDresult = await user_feed_1.get(limit=5, id_lt=&quot;e561de8f-00f1-11e4-b400-0cc47a024be0&quot;)# Create a new activityactivity_data = {'actor': 1, 'verb': 'tweet', 'object': 1, 'foreign_id': 'tweet:1'}activity_response = await user_feed_1.add_activity(activity_data)# Create a bit more complex activityactivity_data = {'actor': 1, 'verb': 'run', 'object': 1, 'foreign_id': 'run:1','course': {'name': 'Golden Gate park', 'distance': 10},'participants': ['Thierry', 'Tommaso'],'started_at': datetime.datetime.now()}await user_feed_1.add_activity(activity_data)# Remove an activity by its idawait user_feed_1.remove_activity(&quot;e561de8f-00f1-11e4-b400-0cc47a024be0&quot;)# or by foreign idawait user_feed_1.remove_activity(foreign_id='tweet:1')# Follow another feedawait user_feed_1.follow('flat', '42')# Stop following another feedawait user_feed_1.unfollow('flat', '42')# List followers/followingfollowing = await user_feed_1.following(offset=0, limit=2)followers = await user_feed_1.followers(offset=0, limit=10)# Creates many follow relationships in one requestfollows = [    {'source': 'flat:1', 'target': 'user:1'},    {'source': 'flat:1', 'target': 'user:2'},    {'source': 'flat:1', 'target': 'user:3'}]await client.follow_many(follows)# Batch adding activitiesactivities = [{'actor': 1, 'verb': 'tweet', 'object': 1},{'actor': 2, 'verb': 'watch', 'object': 3}]await user_feed_1.add_activities(activities)# Add an activity and push it to other feeds too using the `to` fieldactivity = {    &quot;actor&quot;:&quot;1&quot;,    &quot;verb&quot;:&quot;like&quot;,    &quot;object&quot;:&quot;3&quot;,    &quot;to&quot;:[&quot;user:44&quot;, &quot;user:45&quot;]}await user_feed_1.add_activity(activity)# Retrieve an activity by its IDawait client.get_activities(ids=[activity_id])# Retrieve an activity by the combination of foreign_id and timeawait client.get_activities(foreign_id_times=[    (foreign_id, activity_time),])# Enrich while getting activitiesawait client.get_activities(ids=[activity_id], enrich=True, reactions={&quot;counts&quot;: True})# Update some parts of an activity with activity_partial_updateset = {    'product.name': 'boots',    'colors': {        'red': '0xFF0000',        'green': '0x00FF00'    }}unset = [ 'popularity', 'details.info' ]# ...by IDawait client.activity_partial_update(id=activity_id, set=set, unset=unset)# ...or by combination of foreign_id and timeawait client.activity_partial_update(foreign_id=foreign_id, time=activity_time, set=set, unset=unset)# Generating user token for client side usage (JS client)user_token = client.create_user_token(&quot;user-42&quot;)# Javascript client side feed initialization# client = stream.connect(apiKey, userToken, appId);# Generate a redirect url for the Stream Analytics platform to track# events/impressions on url clicksimpression = {    'content_list': ['tweet:1', 'tweet:2', 'tweet:3'],    'user_data': 'tommaso',    'location': 'email',    'feed_id': 'user:global'}engagement = {    'content': 'tweet:2',    'label': 'click',    'position': 1,    'user_data': 'tommaso',    'location': 'email',    'feed_id':    'user:global'}events = [impression, engagement]redirect_url = client.create_redirect_url('http://google.com/', 'user_id', events)```[JS client](http://github.com/getstream/stream-js).## ‚úçÔ∏è Contributing=======We welcome code changes that improve this library or fix a problem, please make sure to follow all best practices and add tests if applicable before submitting a Pull Request on Github. We are very happy to merge your code in the official repository. Make sure to sign our [Contributor License Agreement (CLA)](https://docs.google.com/forms/d/e/1FAIpQLScFKsKkAJI7mhCr7K9rEIOpqIDThrWxuvxnwUq2XkHyG154vQ/viewform) first. See our [license file](./LICENSE) for more details.## üßëüíª We are hiring!We've recently closed a [$38 million Series B funding round](https://techcrunch.com/2021/03/04/stream-raises-38m-as-its-chat-and-activity-feed-apis-power-communications-for-1b-users/) and we keep actively growing.Our APIs are used by more than a billion end-users, and you'll have a chance to make a huge impact on the product within a team of the strongest engineers all over the world.Check out our current openings and apply via [Stream's website](https://getstream.io/team/#jobs).</longdescription>
</pkgmetadata>