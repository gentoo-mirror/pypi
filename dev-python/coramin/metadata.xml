<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Coramin[![codecov](https://codecov.io/gh/Coramin/Coramin/branch/main_branch/graph/badge.svg)](https://codecov.io/gh/Coramin/Coramin)[![Actions Status](https://github.com/Coramin/Coramin/workflows/main_ci/badge.svg?branch=main_branch)](https://github.com/Coramin/Coramin/actions)Coramin is a Pyomo-based Python package that provides tools fordeveloping tailored algorithms for mixed-integer nonlinear programmingproblems (MINLP's). This software includes classes for managing andrefining convex relaxations of nonconvex constraints. These classesprovide methods for updating the relaxation based on new variablebounds, creating and managing piecewise relaxations (for multi-treebased algorithms), and adding outer-approximation based cuts forconvex or concave constraints. These classes inherit from PyomoBlocks, so they can be easily integrated with Pyomomodels. Additionally, Coramin has functions for automaticallygenerating convex relaxations of general Pyomo models. Coramin alsohas tools for domain reduction, including a parallel implementationof optimization-based bounds tightening (OBBT) and various OBBTfiltering techniques.## Primary Contributors### [Michael Bynum](https://github.com/michaelbynum)- Relaxation classes- OBBT- OBBT Filtering- Factorable programming approach to generating relaxations### [Carl Laird](https://github.com/carldlaird)- Parallel OBBT- McCormick and piecewise McCormick relaxations for bilinear terms- Relaxations for univariate convex/concave fucntions### [Anya Castillo](https://github.com/anyacastillo)- Relaxation classes### [Francesco Ceccon](https://github.com/fracek)- Alpha-BB relaxation## Relevant Packages### [Pyomo](https://github.com/Pyomo/pyomo)Coramin is built upon Pyomo and is designed for integration with Pyomo models.### [Suspect](https://github.com/cog-imperial/suspect)Use of Coramin can be improved significantly by also utilizingSuspect's convexity detection and feasibility-based bounds tighteningfeatures. Future development of Coramin will directly use Suspect inCoramin's factorable programming approach to generating relaxations.## DocumentationComing soon..</longdescription>
</pkgmetadata>