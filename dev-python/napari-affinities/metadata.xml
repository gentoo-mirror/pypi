<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># napari-affinities[![License](https://img.shields.io/pypi/l/napari-affinities.svg?color=green)](https://github.com/pattonw/napari-affinities/raw/main/LICENSE)[![PyPI](https://img.shields.io/pypi/v/napari-affinities.svg?color=green)](https://pypi.org/project/napari-affinities)[![Python Version](https://img.shields.io/pypi/pyversions/napari-affinities.svg?color=green)](https://python.org)[![tests](https://github.com/pattonw/napari-affinities/workflows/tests/badge.svg)](https://github.com/pattonw/napari-affinities/actions)[![codecov](https://codecov.io/gh/pattonw/napari-affinities/branch/main/graph/badge.svg)](https://codecov.io/gh/pattonw/napari-affinities)[![napari hub](https://img.shields.io/endpoint?url=https://api.napari-hub.org/shields/napari-affinities)](https://napari-hub.org/plugins/napari-affinities)A plugin for creating, visualizing, and processing affinities---This [napari] plugin was generated with [Cookiecutter] using [@napari]'s [cookiecutter-napari-plugin] template.&lt;!--Don't miss the full getting started guide to set up your new package:https://github.com/napari/cookiecutter-napari-plugin#getting-startedand review the napari docs for plugin developers:https://napari.org/plugins/stable/index.html--&gt;## InstallationYou will need a conda environment for everything to runsmoothly. Supported python versions are 3.7, 3.8, 3.9.### pipYou can install `napari-affinities` via [pip]:    `pip install napari-affinities`To install latest development version :    `pip install git+https://github.com/pattonw/napari-affinities.git`Install torch according to your system [(follow the instructions here)](https://pytorch.org/get-started/locally/). For example with cuda 10.2 available, run:    conda install pytorch torchvision cudatoolkit=10.2 -c pytorchInstall conda requirements:    conda install -c conda-forge affogato### condaIf you install via conda, there are fewer steps sinceaffogato and pytorch will be installed for you.You can install `napari-affinities` via [conda]:    `conda install -c conda-forge napari-affinities`### Download example model:#### 2D:[epithelial example model](https://oc.embl.de/index.php/s/zfWMKu7HoQnSJLs)Place the model zip file wherever you want. You can open it in the plugin with the &quot;load from file&quot; button.#### 3D[lightsheet example model](https://owncloud.gwdg.de/index.php/s/LsShICsOcilqPRs)Unpack the tar file into test data (`lightsheet_nuclei_test_data` (an hdf5 file)) and model (`LightsheetNucleusSegmentation.zip` (a bioimageio model)).Move the data into sample_data which will enable you to load the &quot;Lightsheet Sample&quot; data in napari.Place the model zip file anywhere you want. You can open it in the plugin with the &quot;load from file&quot; button.##### Workarounds to be fixed:1. you need to update the `rdf.yaml` in the `LightsheetNucleusSegmentation.zip` with the following:   - &quot;shape&quot; for &quot;input0&quot; should be updated with a larger minimum input size and &quot;output0&quot; should be updated with a larger halo. If not fixed, there will be significant tiling artifacts.   - (Optional) &quot;output0&quot; should be renamed to affinities. The plugin supports multiple outputs and relies on names for figuring out which one is which. If unrecognized names are provided we assume the outputs are ordered (affinities, fgbg, lsds) but this is less reliable than explicit names.2. This model also generates foreground in the same array as affinities, i.e. a 10 channel output `(fgbg, [-1, 0, 0], [0, -1, 0], [0, 0, -1], [-2, 0, 0], ...)`. Although predictions will work, post processing such as mutex watershed will break unless you manually separate the first channel.## UseRequirements for the model:1. Bioimageio packaged pytorch model2. Outputs with names &quot;affinities&quot;, &quot;fgbg&quot;(optional) or &quot;lsds&quot;(optional)   - if these names are not used, it will be assumed that the outputs are affinities, fgbg, then lsds in that order## ContributingContributions are very welcome. Tests can be run with [tox], please ensurethe coverage at least stays the same before you submit a pull request.## LicenseDistributed under the terms of the [MIT] license,&quot;napari-affinities&quot; is free and open source software## IssuesIf you encounter any problems, please [file an issue] along with a detailed description.[napari]: https://github.com/napari/napari[cookiecutter]: https://github.com/audreyr/cookiecutter[@napari]: https://github.com/napari[mit]: http://opensource.org/licenses/MIT[bsd-3]: http://opensource.org/licenses/BSD-3-Clause[gnu gpl v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt[gnu lgpl v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt[apache software license 2.0]: http://www.apache.org/licenses/LICENSE-2.0[mozilla public license 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin[file an issue]: https://github.com/pattonw/napari-affinities/issues[napari]: https://github.com/napari/napari[tox]: https://tox.readthedocs.io/en/latest/[pip]: https://pypi.org/project/pip/[pypi]: https://pypi.org/</longdescription>
</pkgmetadata>