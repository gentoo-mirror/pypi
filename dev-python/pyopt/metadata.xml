<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pyopt version 0.84A module for command-line options with a pythonic, decorator-centric syntax.The following example auto-generates help with docstrings, type casting forarguments and enforcing argument count:    import pyopt    expose = pyopt.Exposer()    @expose.args    def regular_function(arg1:str, arg2:int):        '''Your help - the docstring'''        # bla, etc, foobar spam...        print(repr(arg1), repr(arg2))    if __name__ == &quot;__main__&quot;:        expose.run()There are 3 modes of operation:    1. expose.args - A decorator for positional arguments.    2. expose.kwargs - A decorator for keyword arguments.    3. expose.mixed - A decorator for keyword and positional arguments.Currently known compromises that are open to discussion, e-mail me:    1. This module was specifically designed with python 3 in mind, certain features        can be converted to python 2.x, but the awesome ones can't.    2. Keyword command-line functions require every argument to start with a        different letter to avoid collisions.    3. Annotations aren't mandatory, I don't know if this is the right way to go,        it's an explicity vs convenience issue.    4. Booleans can't default to True. I couldn't think of a use case for this        so tell me if you did.License: whatever, I don't mind. Google Code made me choose so I went withthe &quot;New BSD&quot;. If somebody has a better idea, e-mail, comment or whatnot.Hearing from whoever uses this code would be nice, but you really shouldn'tfeel obliged.Contact me at: ubershmekel at gmail</longdescription>
</pkgmetadata>