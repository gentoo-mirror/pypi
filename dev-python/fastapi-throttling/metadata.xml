<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Upload Python Package](https://github.com/wwnbb/fastapi-throttling/actions/workflows/publish.yml/badge.svg?branch=master)](https://github.com/wwnbb/fastapi-throttling/actions/workflows/publish.yml)## FastAPI Throttling MiddlewareFastAPI Throttling Middleware is a rate-limiting middleware for the FastAPI web framework. It uses a Redis server for request tracking and allows you to throttle incoming requests based on IP address and access token.Features    IP-based throttling: Limit requests based on client's IP address.    Token-based throttling: Limit requests based on user access token.    Redis integration: Uses Redis as a fast, in-memory data store to track request count.    Configurable rate limits: Set your own request limit and time window.InstallationFirst, ensure you have a running Redis server.Next, install the middleware library.```bashpip install fastapi-throttling```UsageHere's a basic example of how to use the middleware:```pythonfrom fastapi import FastAPI, Request, HTTPExceptionfrom fastapi_throttling import ThrottlingMiddlewareapp = FastAPI()app.add_middleware(ThrottlingMiddleware, limit=100, window=60)```In this example, the middleware will limit to 100 requests per 60 seconds, either by IP or by user token.##### LicenseGNU LESSER GENERAL PUBLIC LICENSE Version 2.1</longdescription>
</pkgmetadata>