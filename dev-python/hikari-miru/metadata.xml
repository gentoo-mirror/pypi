<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI](https://img.shields.io/pypi/v/hikari-miru)](https://pypi.org/project/hikari-miru)[![Documentation Status](https://readthedocs.org/projects/hikari-miru/badge/?version=latest)](https://hikari-miru.readthedocs.io/en/latest/?badge=latest)# hikari-miruAn optional component handler for [hikari](https://github.com/hikari-py/hikari), inspired by discord.py's views.## InstallationTo install miru, run the following command:```shpython3 -m pip install -U hikari-miru```To check if miru has successfully installed or not, run the following:```shpython3 -m miru```## Usage```pyimport hikariimport miruclass MyView(miru.View):    @miru.button(label=&quot;Rock&quot;, emoji=&quot;\N{ROCK}&quot;, style=hikari.ButtonStyle.PRIMARY)    async def rock_button(self, button: miru.Button, ctx: miru.ViewContext) -&gt; None:        await ctx.respond(&quot;Paper!&quot;)    @miru.button(label=&quot;Paper&quot;, emoji=&quot;\N{SCROLL}&quot;, style=hikari.ButtonStyle.PRIMARY)    async def paper_button(self, button: miru.Button, ctx: miru.ViewContext) -&gt; None:        await ctx.respond(&quot;Scissors!&quot;)    @miru.button(label=&quot;Scissors&quot;, emoji=&quot;\N{BLACK SCISSORS}&quot;, style=hikari.ButtonStyle.PRIMARY)    async def scissors_button(self, button: miru.Button, ctx: miru.ViewContext) -&gt; None:        await ctx.respond(&quot;Rock!&quot;)    @miru.button(emoji=&quot;\N{BLACK SQUARE FOR STOP}&quot;, style=hikari.ButtonStyle.DANGER, row=2)    async def stop_button(self, button: miru.Button, ctx: miru.ViewContext) -&gt; None:        self.stop() # Stop listening for interactionsbot = hikari.GatewayBot(token=&quot;...&quot;)miru.install(bot) # Load miru and attach it to the bot instance.@bot.listen()async def buttons(event: hikari.GuildMessageCreateEvent) -&gt; None:    # Ignore bots or webhooks pinging us    if not event.is_human:        return    me = bot.get_me()    # If the bot is mentioned    if me.id in event.message.user_mentions_ids:        view = MyView(timeout=60)  # Create a new view        message = await event.message.respond(&quot;Rock Paper Scissors!&quot;, components=view)        await view.start(message)  # Start listening for interactions        await view.wait() # Optionally, wait until the view times out or gets stopped        await event.message.respond(&quot;Thank you for playing!&quot;)bot.run()```For more examples see [examples](https://github.com/HyperGH/hikari-miru/tree/main/examples), or refer to the [documentation](https://hikari-miru.readthedocs.io/en/latest/).## Issues and supportFor general usage help or questions, see the `#miru` channel in the [hikari discord](https://discord.gg/Jx4cNGG), if you have found a bug or have a feature request, feel free to [open an issue](https://github.com/HyperGH/hikari-miru/issues/new)!## ContributingIf you wish to contribute, make sure to run [nox](https://nox.thea.codes/en/stable/) before pushing your changes, and ensure all pipelines pass. This will format and typecheck your code to ensure it passes the CI.## Links- [**Documentation**](https://hikari-miru.readthedocs.io/en/latest/index.html)- [**Examples**](https://github.com/HyperGH/hikari-miru/tree/main/examples)- [**License**](https://github.com/HyperGH/hikari-miru/blob/main/LICENSE)</longdescription>
</pkgmetadata>