<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;readme_resources/logo.png&quot; alt=&quot;logo&quot; width=&quot;200&quot; height=&quot;200&quot;/&gt;[![PyPi version](https://badge.fury.io/py/circleguard.svg)](https://pypi.org/project/circleguard/)# Circlecore ([documentation](https://circleguard.github.io/circlecore/))Circlecore is a utilities library for osu!. Features include:* Unstable Rate calculation* Judgments calculation (classifying all hitobjects into misses, hit300s, hit100s, hit50s, or sliderbreaks)* Similarity calculation between two replays, for replay stealing detection* Frametime calculation, for timewarp detection* Jerky, suspicious movement detection (called Snaps)Circlecore is used by [Circleguard](https://github.com/circleguard/circleguard), a replay analysis tool.Circlecore is developed and maintained by:* [tybug](https://github.com/tybug)* [samuelhklumpers](https://github.com/samuelhklumpers)## InstallationCirclecore can be installed from pip:```bashpip install circleguard```This documentation refers to the project as `circlecore` to differentiate it from our organization [Circleguard](https://github.com/circleguard) and the replay analysis tool [Circleguard](https://github.com/circleguard/circleguard). However, `circlecore` is installed from pypi with the name `circleguard`, and is imported as such in code (`import circleguard`).## LinksGithub: &lt;https://github.com/circleguard/circlecore&gt; &lt;br/&gt;Documentation: &lt;https://circleguard.github.io/circlecore/&gt; &lt;br/&gt;Discord: &lt;https://discord.gg/VNnkTjm&gt; &lt;br/&gt;## UsageWe have a full tutorial and documentation at &lt;https://circleguard.github.io/circlecore/&gt;. If you really want to jump right in, below is a quickstart guide:```pythonfrom circleguard import *# replace &quot;key&quot; with your api keycg = Circleguard(&quot;key&quot;)# replay on http://osu.ppy.sh/b/221777 by http://osu.ppy.sh/u/2757689replay = ReplayMap(221777, 2757689)print(cg.ur(replay)) # unstable rateprint(cg.frametime(replay)) # average frametimeprint(cg.frametimes(replay)) # full frametime listprint(cg.hits(replay)) # where the replay hits hitobjectsprint(cg.snaps(replay)) # any jerky/suspicious movementreplay2 = ReplayMap(221777, 4196808)print(cg.similarity(replay, replay2)) # how similar the replays are# ReplayMap isn't the only way to represent replays; we can also# get a beatmap's top 3 playsmap_ = cg.Map(221777, span=&quot;1-3&quot;)# or a User's fifteenth and twentieth best playsuser = cg.User(124493, span=&quot;15, 20&quot;)# or a local replayreplay3 = ReplayPath(&quot;/path/to/local/osr/replay.osr&quot;)# and more. You can find them all at# https://circleguard.github.io/circlecore/appendix.html#circleguard.loadables.Loadable# maps and users can be iterated overfor r in map_:    print(cg.ur(r))```## ContributingJoin [our discord](https://discord.gg/VNnkTjm) and ask how you can help, or look around for open issues which interest you and tackle those. Pull requests are welcome!</longdescription>
</pkgmetadata>