<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>MMseg中文分词 Chinese Segment On MMSeg Algorithm-------------------------------original editionpymmseg-cpp    by pluskid    http://code.google.com/p/pymmseg-cpp/This package is Chinese Segment , I think only chinese need it, so the description is chinese . If you have interesting , have a look a the original edition-------------------------------全文索引用，配合 xapian ( http://xapian.org/ ) 可以很方便的做全文索引~:python -m mmseg.search----------哈尔罗杰历险记(套)哈尔罗杰历险历险记----------卡拉马佐夫兄弟卡拉马佐夫兄弟----------银河英雄传说银河英雄传说银河英雄传说----------张无忌在光明顶无忌张无忌光明光明顶----------韦帅望的江湖(Ⅲ众望所归)韦帅帅望韦帅望江湖众望望所所归众望所归----------少年韦帅望之童年结束了少年韦帅帅望望之韦帅望之童年结束----------　　 　晋江文学网站驻站作家，已出版多部作品。晋江文学网站文学网站驻站作家出版多部作品-------------------------------分词用，适用于聚类等等from mmseg import seg_txtfor i in seg_txt(&quot;最主要的更动是：张无忌最后没有选定自己的配偶。&quot;):    print i-------------------------------配合xapian做索引#coding:utf-8#!/usr/bin/env pythonimport xapianimport sysimport stringfrom collections import defaultdictfrom mmseg.search import seg_txt_search,seg_txt_2_dictimport xapianSEARCH_DB = xapian.WritableDatabase(DBPATH, xapian.DB_CREATE_OR_OPEN)SEARCH_ENQUIRE = xapian.Enquire(SEARCH_DB)def index_txt(id, txt):    doc = xapian.Document()    for word, value in seg_txt_2_dict(txt).iteritems():        doc.add_term(word, value)    key = &quot;:%s&quot;%id    doc.add_term(key)    SEARCH_DB.replace_document(key, doc)def flush_db():    SEARCH_DB.flush()    if __name__ == &quot;__main__&quot;:    txt = &quot;&quot;&quot;    治安署地最高长官站在街头，皱眉看着一队近卫军飞快地走过，他心中满是疑惑，立刻回到了治安署里地办公室，然后喊来了自己地一个部下，让他立刻去军方统帅部请示一下.    &quot;&quot;&quot;    index_txt(1, txt)    flush_db()-------------------------------配合xapian做搜索#coding:utf-8from mmseg.search import seg_txt_search,seg_txt_2_dictimport xapianSEARCH_DB = xapian.WritableDatabase(DBPATH, xapian.DB_CREATE_OR_OPEN)SEARCH_ENQUIRE = xapian.Enquire(SEARCH_DB)def search(keywords, offset=0, limit=35, enquire=SEARCH_ENQUIRE):    query_list = []    for word, value in seg_txt_2_dict(keywords).iteritems():        query = xapian.Query(word, value)        query_list.append(query)    if len(query_list) != 1:        query = xapian.Query(xapian.Query.OP_AND, query_list)    else:         query = query_list[0]    enquire.set_query(query)    matches = enquire.get_mset(offset, limit, None)    return matchesif __name__ == &quot;__main__&quot;:    matches = search( &quot;治安&quot;)    # Display the results.    print &quot;%i results found.&quot; % matches.get_matches_estimated()    print &quot;Results 1-%i:&quot; % matches.size()    for m in matches:        print &quot;%i: %i%% docid=%i [%s]&quot; % (m.rank + 1, m.percent, m.docid, m.document.get_data())-------------------------------张沈鹏(zsp007@gmail.com) 修改版 rmmseg-cpp</longdescription>
</pkgmetadata>