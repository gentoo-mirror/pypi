<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Discord webhook[![GitHub license](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://raw.githubusercontent.com/lovvskillz/python-discord-webhook/master/LICENSE)[![PyPI version](https://badge.fury.io/py/discord-webhook.svg)](https://badge.fury.io/py/discord-webhook)[![Downloads](https://pepy.tech/badge/discord-webhook)](https://pepy.tech/project/discord-webhook)Easily send Discord webhooks with Python (also has [async support](#async-support))## InstallInstall via pip:```pip install discord-webhook```## Examples* [Basic Webhook](#basic-webhook)* [Create Multiple Instances / Use multiple URLs](#create-multiple-instances)* [Get Webhook by ID](#get-webhook-by-id)* [Manage Being Rate Limited](#manage-being-rate-limited)* [Embedded Content](#webhook-with-embedded-content)* [Edit Webhook Message](#edit-webhook-messages)* [Delete Webhook Message](#delete-webhook-messages)* [Send Files](#send-files)* [Remove Embeds and Files](#remove-embeds-and-files)* [Allowed Mentions](#allowed-mentions)* [Use Proxies](#use-proxies)* [Timeout](#timeout)* [Async Support](#async-support)### Basic Webhook```pythonfrom discord_webhook import DiscordWebhookwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, content=&quot;Webhook Message&quot;)response = webhook.execute()```### Create multiple instancesIf you want to use multiple URLs you need to create multiple instances.```pythonfrom discord_webhook import DiscordWebhook# you can provide any kwargs except urlwebhook1, webhook2 = DiscordWebhook.create_batch(urls=[&quot;first url&quot;, &quot;second url&quot;], content=&quot;Webhook Message&quot;)response1 = webhook1.execute()response2 = webhook2.execute()```![Image](img/multiple_urls.png &quot;Multiple Urls Result&quot;)### Get Webhook by IDYou can access a webhook that has already been sent by providing the ID.````pythonfrom discord_webhook import DiscordWebhookwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, id=&quot;your webhook message id&quot;)# now you could delete or edit the webhook# ...````### Manage being Rate Limited```pythonfrom discord_webhook import DiscordWebhook# if rate_limit_retry is True then in the event that you are being rate # limited by Discord your webhook will automatically be sent once the # rate limit has been liftedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, rate_limit_retry=True, content=&quot;Webhook Message&quot;)response = webhook.execute()```![Image](img/basic_webhook.png &quot;Basic Example Result&quot;)### Webhook with Embedded Content```pythonfrom discord_webhook import DiscordWebhook, DiscordEmbedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;)# create embed object for webhook# you can set the color as a decimal (color=242424) or hex (color=&quot;03b2f8&quot;) numberembed = DiscordEmbed(title=&quot;Your Title&quot;, description=&quot;Lorem ipsum dolor sit&quot;, color=&quot;03b2f8&quot;)# add embed object to webhookwebhook.add_embed(embed)response = webhook.execute()```![Image](img/simple_embed.png &quot;Basic Embed Example Result&quot;)```pythonfrom discord_webhook import DiscordWebhook, DiscordEmbedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;)# create embed object for webhookembed = DiscordEmbed(title=&quot;Your Title&quot;, description=&quot;Lorem ipsum dolor sit&quot;, color=&quot;03b2f8&quot;)# set authorembed.set_author(name=&quot;Author Name&quot;, url=&quot;author url&quot;, icon_url=&quot;author icon url&quot;)# set imageembed.set_image(url=&quot;your image url&quot;)# set thumbnailembed.set_thumbnail(url=&quot;your thumbnail url&quot;)# set footerembed.set_footer(text=&quot;Embed Footer Text&quot;, icon_url=&quot;URL of icon&quot;)# set timestamp (default is now) accepted types are int, float and datetimeembed.set_timestamp()# add fields to embedembed.add_embed_field(name=&quot;Field 1&quot;, value=&quot;Lorem ipsum&quot;)embed.add_embed_field(name=&quot;Field 2&quot;, value=&quot;dolor sit&quot;)# add embed object to webhookwebhook.add_embed(embed)response = webhook.execute()```![Image](img/extended_embed.png &quot;Basic Embed Example Result&quot;)This is another example with embedded content```pythonfrom discord_webhook import DiscordWebhook, DiscordEmbedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, username=&quot;New Webhook Username&quot;)embed = DiscordEmbed(title=&quot;Embed Title&quot;, description=&quot;Your Embed Description&quot;, color=&quot;03b2f8&quot;)embed.set_author(name=&quot;Author Name&quot;, url=&quot;https://github.com/lovvskillz&quot;, icon_url=&quot;https://avatars0.githubusercontent.com/u/14542790&quot;)embed.set_footer(text=&quot;Embed Footer Text&quot;)embed.set_timestamp()embed.add_embed_field(name=&quot;Field 1&quot;, value=&quot;Lorem ipsum&quot;)embed.add_embed_field(name=&quot;Field 2&quot;, value=&quot;dolor sit&quot;)embed.add_embed_field(name=&quot;Field 3&quot;, value=&quot;amet consetetur&quot;)embed.add_embed_field(name=&quot;Field 4&quot;, value=&quot;sadipscing elitr&quot;)webhook.add_embed(embed)response = webhook.execute()```![Image](img/extended_embed2.png &quot;Example Embed Result&quot;)By Default, the Embed fields are placed side by side. We can arrange them in a new line by setting `inline=False` as follows:```pythonfrom discord_webhook import DiscordWebhook, DiscordEmbedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, username=&quot;New Webhook Username&quot;)embed = DiscordEmbed(    title=&quot;Embed Title&quot;, description=&quot;Your Embed Description&quot;, color=&quot;03b2f8&quot;)embed.set_author(    name=&quot;Author Name&quot;,    url=&quot;https://github.com/lovvskillz&quot;,    icon_url=&quot;https://avatars0.githubusercontent.com/u/14542790&quot;,)embed.set_footer(text=&quot;Embed Footer Text&quot;)embed.set_timestamp()# Set `inline=False` for the embed field to occupy the whole lineembed.add_embed_field(name=&quot;Field 1&quot;, value=&quot;Lorem ipsum&quot;, inline=False)embed.add_embed_field(name=&quot;Field 2&quot;, value=&quot;dolor sit&quot;, inline=False)embed.add_embed_field(name=&quot;Field 3&quot;, value=&quot;amet consetetur&quot;)embed.add_embed_field(name=&quot;Field 4&quot;, value=&quot;sadipscing elitr&quot;)webhook.add_embed(embed)response = webhook.execute()```![Image](img/extended_embed3.png &quot;Example Non-Inline Embed Result&quot;)### Edit Webhook Messages```pythonfrom discord_webhook import DiscordWebhookfrom time import sleepwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, content=&quot;Webhook content before edit&quot;)webhook.execute()webhook.content = &quot;After Edit&quot;sleep(10)webhook.edit()```### Delete Webhook Messages```pythonfrom discord_webhook import DiscordWebhookfrom time import sleepwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, content=&quot;Webhook Content&quot;)webhook.execute()sleep(10)webhook.delete()```### Send Files```pythonfrom discord_webhook import DiscordWebhookwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, username=&quot;Webhook with files&quot;)# send two imageswith open(&quot;path/to/first/image.jpg&quot;, &quot;rb&quot;) as f:    webhook.add_file(file=f.read(), filename=&quot;example.jpg&quot;)with open(&quot;path/to/second/image.jpg&quot;, &quot;rb&quot;) as f:    webhook.add_file(file=f.read(), filename=&quot;example2.jpg&quot;)response = webhook.execute()```![Image](img/webhook_files.png &quot;Example Files Result&quot;)You can use uploaded attachments in Embeds:```pythonfrom discord_webhook import DiscordWebhook, DiscordEmbedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;)with open(&quot;path/to/image.jpg&quot;, &quot;rb&quot;) as f:    webhook.add_file(file=f.read(), filename=&quot;example.jpg&quot;)embed = DiscordEmbed(title=&quot;Embed Title&quot;, description=&quot;Your Embed Description&quot;, color=&quot;03b2f8&quot;)embed.set_thumbnail(url=&quot;attachment://example.jpg&quot;)webhook.add_embed(embed)response = webhook.execute()```### Remove Embeds and Files```pythonfrom discord_webhook import DiscordWebhook, DiscordEmbedwebhook = DiscordWebhook(url=&quot;your webhook url&quot;)with open(&quot;path/to/image.jpg&quot;, &quot;rb&quot;) as f:    webhook.add_file(file=f.read(), filename=&quot;example.jpg&quot;)embed = DiscordEmbed(title=&quot;Embed Title&quot;, description=&quot;Your Embed Description&quot;, color=&quot;03b2f8&quot;)embed.set_thumbnail(url=&quot;attachment://example.jpg&quot;)webhook.add_embed(embed)response = webhook.execute(remove_embeds=True)# webhook.embeds will be empty after webhook is executed# You could also manually call the function webhook.remove_embeds()````.remove_file()` removes the given file```pythonfrom discord_webhook import DiscordWebhookwebhook = DiscordWebhook(url=&quot;your webhook url&quot;, username=&quot;Webhook with files&quot;)# send two imageswith open(&quot;path/to/first/image.jpg&quot;, &quot;rb&quot;) as f:    webhook.add_file(file=f.read(), filename=&quot;example.jpg&quot;)with open(&quot;path/to/second/image.jpg&quot;, &quot;rb&quot;) as f:    webhook.add_file(file=f.read(), filename=&quot;example2.jpg&quot;)# remove &quot;example.jpg&quot;webhook.remove_file(&quot;example.jpg&quot;)# only &quot;example2.jpg&quot; is sent to the webhookresponse = webhook.execute()```### Allowed MentionsLook into the [Discord Docs](https://discord.com/developers/docs/resources/channel#allowed-mentions-object) for examples and for more explanationThis example would only ping user `123` and `124` but not everyone else.```pythonfrom discord_webhook import DiscordWebhookcontent = &quot;@everyone say hello to our new friends &lt;@123&gt; and &lt;@124&gt;&quot;allowed_mentions = {    &quot;users&quot;: [&quot;123&quot;, &quot;124&quot;]}webhook = DiscordWebhook(url=&quot;your webhook url&quot;, content=content, allowed_mentions=allowed_mentions)response = webhook.execute()```### Use Proxies```pythonfrom discord_webhook import DiscordWebhookproxies = {  &quot;http&quot;: &quot;http://10.10.1.10:3128&quot;,  &quot;https&quot;: &quot;http://10.10.1.10:1080&quot;,}webhook = DiscordWebhook(url=&quot;your webhook url&quot;, content=&quot;Webhook Message&quot;, proxies=proxies)response = webhook.execute()```or```pythonfrom discord_webhook import DiscordWebhookproxies = {  &quot;http&quot;: &quot;http://10.10.1.10:3128&quot;,  &quot;https&quot;: &quot;http://10.10.1.10:1080&quot;,}webhook = DiscordWebhook(url=&quot;your webhook url&quot;, content=&quot;Webhook Message&quot;)webhook.set_proxies(proxies)response = webhook.execute()```### Timeout```pythonfrom requests.exceptions import Timeoutfrom discord_webhook import DiscordWebhook, DiscordEmbed# We will set ridiculously low timeout threshold for testing purposeswebhook = DiscordWebhook(url=&quot;your webhook url&quot;, timeout=0.1)# You can also set timeout later using# webhook.timeout = 0.1embed = DiscordEmbed(title=&quot;Embed Title&quot;, description=&quot;Your Embed Description&quot;, color=&quot;03b2f8&quot;)webhook.add_embed(embed)# Handle timeout exceptiontry:    response = webhook.execute()except Timeout as err:    print(f&quot;Oops! Connection to Discord timed out: {err}&quot;)```### Async supportIn order to use the async version, you need to install the package using:```pip install discord-webhook[async]```Example usage:```pythonimport asynciofrom discord_webhook import AsyncDiscordWebhookasync def send_webhook(message):    webhook = AsyncDiscordWebhook(url=&quot;your webhook url&quot;, content=message)    await webhook.execute()async def main():    await asyncio.gather(        send_webhook(&quot;Async webhook message 1&quot;),        send_webhook(&quot;Async webhook message 2&quot;),    )  # sends both messages asynchronouslyasyncio.run(main())```### Use CLI```usage: discord_webhook [-h] -u URL [URL ...] -c CONTENT [--username USERNAME]                       [--avatar_url AVATAR_URL]Trigger discord webhook(s).optional arguments:  -h, --help            show this help message and exit  -u URL [URL ...], --url URL [URL ...]                        Webhook(s) url(s)  -c CONTENT, --content CONTENT                        Message content  --username USERNAME   override the default username of the webhook  --avatar_url AVATAR_URL                        override the default avatar of the webhook```## Development### Dev SetupThis project uses [Poetry](https://python-poetry.org/docs/) for dependency management and packaging.Install Poetry and add Poetry to [Path](https://python-poetry.org/docs/#installation).**Debian / Ubuntu / Mac**`curl -sSL https://install.python-poetry.org | python3 -`**Windows**open powershell and run: `(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -`Install dependencies: `poetry install`Install the defined pre-commit hooks: `poetry run pre-commit install`Activate the virtualenv: `poetry shell`</longdescription>
</pkgmetadata>