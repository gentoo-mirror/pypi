<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;    &lt;img src=&quot;./pipen.png&quot; width=&quot;320px&quot;&gt;**A pipeline framework for python**&lt;/div&gt;______________________________________________________________________[![Pypi][6]][7] [![Github][8]][9] ![Building][10] [![Docs and API][11]][1] [![Codacy][12]][13] [![Codacy coverage][14]][13] [![Deps][5]][23][Documentation][1] | [ChangeLog][2] | [Examples][3] | [API][4]## Features- Easy to use- Nearly zero-configuration- Nice logging- Highly extendable## Installation```bashpip install -U pipen```## Quickstart`example.py````pythonfrom pipen import Proc, Pipenclass P1(Proc):    &quot;&quot;&quot;Sort input file&quot;&quot;&quot;    input = &quot;infile&quot;    input_data = [&quot;/tmp/data.txt&quot;]    output = &quot;outfile:file:intermediate.txt&quot;    script = &quot;cat {{in.infile}} | sort &gt; {{out.outfile}}&quot;class P2(Proc):    &quot;&quot;&quot;Paste line number&quot;&quot;&quot;    requires = P1    input = &quot;infile&quot;    output = &quot;outfile:file:result.txt&quot;    script = &quot;paste &lt;(seq 1 3) {{in.infile}} &gt; {{out.outfile}}&quot;class MyPipeline(Pipen):    starts = P1if __name__ == &quot;__main__&quot;:    MyPipeline().run()``````shell&gt; echo -e &quot;3\n2\n1&quot; &gt; /tmp/data.txt&gt; python example.py``````log[09/13/21 04:23:37] I main                    _____________________________________   __[09/13/21 04:23:37] I main                    ___  __ \___  _/__  __ \__  ____/__  | / /[09/13/21 04:23:37] I main                    __  /_/ /__  / __  /_/ /_  __/  __   |/ /[09/13/21 04:23:37] I main                    _  ____/__/ /  _  ____/_  /___  _  /|  /[09/13/21 04:23:37] I main                    /_/     /___/  /_/     /_____/  /_/ |_/[09/13/21 04:23:37] I main[09/13/21 04:23:37] I main                                 version: 0.9.0[09/13/21 04:23:37] I main[09/13/21 04:23:37] I main    ╭═════════════════════════════ MYPIPELIN ═══════════════════════════════╮[09/13/21 04:23:37] I main    ║  # procs          = 2                                                 ║[09/13/21 04:23:37] I main    ║  plugins          = ['main', 'verbose-0.0.1']                         ║[09/13/21 04:23:37] I main    ║  profile          = default                                           ║[09/13/21 04:23:37] I main    ║  outdir           = mypipeline_results                                ║[09/13/21 04:23:37] I main    ║  cache            = True                                              ║[09/13/21 04:23:37] I main    ║  dirsig           = 1                                                 ║[09/13/21 04:23:37] I main    ║  error_strategy   = ignore                                            ║[09/13/21 04:23:37] I main    ║  forks            = 1                                                 ║[09/13/21 04:23:37] I main    ║  lang             = bash                                              ║[09/13/21 04:23:37] I main    ║  loglevel         = info                                              ║[09/13/21 04:23:37] I main    ║  num_retries      = 3                                                 ║[09/13/21 04:23:37] I main    ║  plugin_opts      = {}                                                ║[09/13/21 04:23:37] I main    ║  plugins          = None                                              ║[09/13/21 04:23:37] I main    ║  scheduler        = local                                             ║[09/13/21 04:23:37] I main    ║  scheduler_opts   = {}                                                ║[09/13/21 04:23:37] I main    ║  submission_batch = 8                                                 ║[09/13/21 04:23:37] I main    ║  template         = liquid                                            ║[09/13/21 04:23:37] I main    ║  template_opts    = {}                                                ║[09/13/21 04:23:37] I main    ║  workdir          = ./.pipen                                          ║[09/13/21 04:23:37] I main    ╰═══════════════════════════════════════════════════════════════════════╯[09/13/21 04:23:37] I main[09/13/21 04:23:37] I main    ╭───────────────────────────────── P1 ──────────────────────────────────╮[09/13/21 04:23:37] I main    │ Sort input file                                                       │[09/13/21 04:23:37] I main    ╰───────────────────────────────────────────────────────────────────────╯[09/13/21 04:23:37] I main    P1: Workdir: '.pipen/mypipeline/p1'[09/13/21 04:23:37] I main    P1: &lt;&lt;&lt; [START][09/13/21 04:23:37] I main    P1: &gt;&gt;&gt; ['P2'][09/13/21 04:23:37] I verbose P1: size: 1[09/13/21 04:23:37] I verbose P1: [0/0] in.infile: /tmp/data.txt[09/13/21 04:23:37] I verbose P1: [0/0] out.outfile:                      /home/pwwang/github/pipen/.pipen/mypipeline/p1/0/output/intermediate.txt[09/13/21 04:23:38] I verbose P1: Time elapsed: 00:00:01.039s[09/13/21 04:23:38] I main[09/13/21 04:23:38] I main    ╭═════════════════════════════════ P2 ══════════════════════════════════╮[09/13/21 04:23:38] I main    ║ Paste line number                                                     ║[09/13/21 04:23:38] I main    ╰═══════════════════════════════════════════════════════════════════════╯[09/13/21 04:23:38] I main    P2: Workdir: '.pipen/mypipeline/p2'[09/13/21 04:23:38] I main    P2: &lt;&lt;&lt; ['P1'][09/13/21 04:23:38] I main    P2: &gt;&gt;&gt; [END][09/13/21 04:23:38] I verbose P2: size: 1[09/13/21 04:23:38] I verbose P2: [0/0] in.infile:                      /home/pwwang/github/pipen/.pipen/mypipeline/p1/0/output/intermediate.txt[09/13/21 04:23:38] I verbose P2: [0/0] out.outfile:                      /home/pwwang/github/pipen/mypipeline_results/P2/result.txt[09/13/21 04:23:40] I verbose P2: Time elapsed: 00:00:02.074s[09/13/21 04:23:40] I main                PIPEN-0: 100%|████████████████████████████████████████| 2/2 [00:04&lt;00:00, 0.56 procs/s]``````shell&gt; cat ./mypipeline_results/P2/result.txt1       12       23       3```## ExamplesSee more examples at `examples/` and a more realcase example at:https://github.com/pwwang/pipen-report/tree/master/example## Plugin galleryPlugins make `pipen` even better.- [`pipen-verbose`][15]: Add verbosal information in logs for pipen.- [`pipen-lock`][25]: Process lock for pipen to prevent multiple runs at the same time.- [`pipen-report`][16]: Generate report for pipen- [`pipen-filters`][17]: Add a set of useful filters for pipen templates.- [`pipen-diagram`][18]: Draw pipeline diagrams for pipen- [`pipen-annotate`][26]: Use docstring to annotate pipen processes- [`pipen-args`][19]: Command line argument parser for pipen- [`pipen-dry`][20]: Dry runner for pipen pipelines- [`pipen-cli-init`][21]: A pipen CLI plugin to create a pipen project (pipeline)- [`pipen-cli-run`][22]: A pipen cli plugin to run a process or a pipeline- [`pipen-cli-config`][27]: UI wizard to generate configuration for pipen pipelines- [`pipen-cli-require`][24]: A pipen cli plugin check the requirements of a pipeline[1]: https://pwwang.github.io/pipen[2]: https://pwwang.github.io/pipen/CHANGELOG[3]: https://pwwang.github.io/pipen/examples[4]: https://pwwang.github.io/pipen/api/pipen[5]: https://img.shields.io/librariesio/release/pypi/pipen?style=flat-square[6]: https://img.shields.io/pypi/v/pipen?style=flat-square[7]: https://pypi.org/project/pipen/[8]: https://img.shields.io/github/v/tag/pwwang/pipen?style=flat-square[9]: https://github.com/pwwang/pipen[10]: https://img.shields.io/github/actions/workflow/status/pwwang/pipen/build.yml?style=flat-square[11]: https://img.shields.io/github/actions/workflow/status/pwwang/pipen/docs.yml?label=docs&amp;style=flat-square[12]: https://img.shields.io/codacy/grade/cf1c6c97e5c4480386a05b42dec10c6e?style=flat-square[13]: https://app.codacy.com/gh/pwwang/pipen[14]: https://img.shields.io/codacy/coverage/cf1c6c97e5c4480386a05b42dec10c6e?style=flat-square[15]: https://github.com/pwwang/pipen-verbose[16]: https://github.com/pwwang/pipen-report[17]: https://github.com/pwwang/pipen-filters[18]: https://github.com/pwwang/pipen-diagram[19]: https://github.com/pwwang/pipen-args[20]: https://github.com/pwwang/pipen-dry[21]: https://github.com/pwwang/pipen-cli-init[22]: https://github.com/pwwang/pipen-cli-run[23]: https://libraries.io/github/pwwang/pipen#repository_dependencies[24]: https://github.com/pwwang/pipen-cli-require[25]: https://github.com/pwwang/pipen-lock[26]: https://github.com/pwwang/pipen-annotate[27]: https://github.com/pwwang/pipen-cli-config</longdescription>
</pkgmetadata>