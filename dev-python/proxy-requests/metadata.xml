<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Python Proxy Requests | make an http GET/POST with a proxy scraped from https://www.sslproxies.org/&lt;br&gt;&lt;br&gt;NOTE: This repository has been archived and is no longer maintained after urllib3==1.26.2&lt;br&gt;&lt;br&gt;The ProxyRequests class first scrapes proxies from the web. Then it recursively attempts to make a request if the initial request with a proxy is unsuccessful.&lt;br&gt;&lt;br&gt;Either copy the code and put where you want it, or download via pip:&lt;br&gt;&lt;br&gt;&lt;code&gt;pip install proxy-requests&lt;/code&gt;  (or pip3)&lt;br&gt;&lt;code&gt;from proxy_requests import ProxyRequests&lt;/code&gt;&lt;br&gt;&lt;br&gt;or if you need the Basic Auth subclass as well:&lt;br&gt;&lt;code&gt;from proxy_requests import ProxyRequests, ProxyRequestsBasicAuth&lt;/code&gt;&lt;br&gt;&lt;br&gt;If the above import statement is used, method calls will be identical to the ones shown below. Pass a fully qualified URL when initializing an instance.&lt;br&gt;&lt;br&gt;System Requirements: &lt;b&gt;Python 3&lt;/b&gt; and the requests module.&lt;br&gt;&lt;br&gt;Runs on Linux and Windows (and Mac probably) - &lt;b&gt;It may take a moment to run depending on the current proxy.&lt;/b&gt;&lt;br&gt;Each request with a proxy is set with an 3  second timeout in the event that the request takes too long (before trying the next proxy socket in the queue).&lt;br&gt;&lt;br&gt;Proxies are randomly popped from the queue.&lt;br&gt;&lt;br&gt;The ProxyRequestBasicAuth subclass has the methods get(), get_with_headers(), post(), post_with_headers(), post_file(), and post_file_with_headers() that will override the Parent methods.&lt;br&gt;&lt;b&gt;GET:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequests('https://api.ipify.org')r.get()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;GET with headers:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;h = {'User-Agent': 'NCSA Mosaic/3.0 (Windows 95)'}r = ProxyRequests('url here')r.set_headers(h)r.get_with_headers()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequests('url here')r.post({'key1': 'value1', 'key2': 'value2'})    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST with headers:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequests('url here')r.set_headers({'name': 'rootVIII', 'secret_message': '7Yufs9KIfj33d'})r.post_with_headers({'key1': 'value1', 'key2': 'value2'})    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST FILE:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequests('url here')r.set_file('test.txt')r.post_file()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST FILE with headers:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;h = {'User-Agent': 'NCSA Mosaic/3.0 (Windows 95)'}r = ProxyRequests('url here')r.set_headers(h)r.set_file('test.txt')r.post_file_with_headers()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;GET with Basic Authentication:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequestsBasicAuth('url here', 'username', 'password')r.get()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;GET with headers &amp; Basic Authentication:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;h = {'User-Agent': 'NCSA Mosaic/3.0 (Windows 95)'}r = ProxyRequestsBasicAuth('url here', 'username', 'password')r.set_headers(h)r.get_with_headers()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST with Basic Authentication:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequestsBasicAuth('url here', 'username', 'password')r.post({'key1': 'value1', 'key2': 'value2'})    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST with headers &amp; Basic Authentication:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequestsBasicAuth('url here', 'username', 'password')r.set_headers({'header_key': 'header_value'})r.post_with_headers({'key1': 'value1', 'key2': 'value2'})    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST FILE with Basic Authentication:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;r = ProxyRequestsBasicAuth('url here', 'username', 'password')r.set_file('test.txt')r.post_file()    &lt;/code&gt;&lt;/pre&gt;&lt;b&gt;POST FILE with headers &amp; Basic Authentication:&lt;/b&gt;&lt;pre&gt;    &lt;code&gt;h = {'User-Agent': 'NCSA Mosaic/3.0 (Windows 95)'}r = ProxyRequestsBasicAuth('url here', 'username', 'password')r.set_headers(h)r.set_file('test.txt')r.post_file_with_headers()    &lt;/code&gt;&lt;/pre&gt;    &lt;br&gt;&lt;br&gt;&lt;b&gt;Response Methods&lt;/b&gt;&lt;br&gt;&lt;br&gt;  &lt;b&gt;Returns a string:&lt;/b&gt;&lt;br&gt;&lt;code&gt;print(r)&lt;/code&gt;&lt;br&gt;&lt;b&gt;Or if you want the raw content as bytes: &lt;/b&gt;&lt;br&gt;&lt;code&gt;r.get_raw()&lt;/code&gt;&lt;br&gt;&lt;b&gt;Get the response as JSON (if valid JSON):&lt;/b&gt;&lt;br&gt;&lt;code&gt;r.get_json()&lt;/code&gt;&lt;br&gt;&lt;b&gt;Get the response headers:&lt;/b&gt;&lt;br&gt;&lt;code&gt;print(r.get_headers())&lt;/code&gt;&lt;br&gt;&lt;b&gt;Get the status code:&lt;/b&gt;&lt;br&gt;&lt;code&gt;print(r.get_status_code())&lt;/code&gt;&lt;br&gt;&lt;b&gt;Get the URL that was requested:&lt;/b&gt;&lt;br&gt;&lt;code&gt;print(r.get_url())&lt;/code&gt;&lt;br&gt;&lt;b&gt;Get the proxy that was used to make the request:&lt;/b&gt;&lt;br&gt;&lt;code&gt;print(r.get_proxy_used())&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;To write raw data to a file (including an image):&lt;/b&gt;&lt;br&gt;&lt;pre&gt;    &lt;code&gt;url = 'https://www.restwords.com/static/ICON.png'r = ProxyRequests(url)r.get()with open('out.png', 'wb') as f:    f.write(r.get_raw())    &lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;b&gt;Dump the response to a file as JSON:&lt;/b&gt;&lt;br&gt;&lt;pre&gt;    &lt;code&gt;import jsonwith open('test.txt', 'w') as f:    json.dump(r.get_json(), f)    &lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;This was developed on Ubuntu 16.04.4/18.04 LTS.&lt;hr&gt;&lt;b&gt;Author: James Loye Colley  2018-2020&lt;/b&gt;&lt;br&gt;&lt;br&gt;</longdescription>
</pkgmetadata>