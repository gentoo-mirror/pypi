<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># [pprintjson](https://pprintjson.readthedocs.io/en/latest/)[![PyPi release](https://img.shields.io/pypi/v/pprintjson.svg)](https://pypi.org/project/pprintjson/)[![PyPi versions](https://img.shields.io/pypi/pyversions/pprintjson.svg)](https://pypi.org/project/pprintjson/)[![Downloads](https://pepy.tech/badge/pprintjson)](https://pepy.tech/project/pprintjson)[![Documentation Status](https://readthedocs.org/projects/pprintjson/badge/?version=latest)](https://pprintjson.readthedocs.io/en/latest/?badge=latest)A json pretty printer for Python üêç.[Check out the pprintjson docs](https://pprintjson.readthedocs.io/en/latest/)## InstallationInstall with the standard [`json`](https://docs.python.org/3/library/json.html) JSON encoder```bash$ pip install pprintjson```Install with the premier [`simplejson`](https://simplejson.readthedocs.io/en/latest/) JSON encoder```bash$ pip install pprintjson[simplejson]```## Usage```textusage: pprintjson.py [-h] [-i num] [-o file] [-c cmd] [-v] [file]A pretty-printing function for json.positional arguments:  file                    json &lt;file&gt; to pretty-printoptional arguments:  -h, --help              show this help message and exit  -i num, --indent num    indent &lt;num&gt; number of spaces at each level (default: 4)  -o file, --output file  write output to &lt;file&gt; instead of stdout (default: stdout)  -c cmd, --command cmd   json &lt;cmd&gt; to pretty-print  -v, --version           show program's version number and exit```### ScriptPretty print JSON from a **file** using the `pprintjson` CLI.```bash$ pprintjson &quot;./path/to/file.json&quot;```Pretty print JSON from a **stdin** using the `pprintjson` CLI.```bash$ echo '{ &quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;, &quot;c&quot;: true }' | pprintjson```Pretty print JSON from a **string** using the `pprintjson` CLI.```bash$ pprintjson -c '{ &quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;, &quot;c&quot;: true }'```Pretty print JSON from a **string** with an *indent* of **1**.```bash$ pprintjson -c '{ &quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;, &quot;c&quot;: true }' -i 1```Pretty print JSON from a **string** and save *output* to a file **output.json**.```bash$ pprintjson -c '{ &quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;, &quot;c&quot;: true }' -o ./output.json```### ModulePretty print JSON from a **dict** using the `pprintjson` module.```python# 1. import the &quot;pprintjson&quot; function.from pprintjson import pprintjson as ppjson# 2. pretty print JSON.obj = { &quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;, &quot;c&quot;: True }ppjson(obj)```![stdout](https://raw.githubusercontent.com/clarketm/pprintjson/master/pprintjson.png)## LicenseMIT &amp;copy; [**Travis Clarke**](https://blog.travismclarke.com/)</longdescription>
</pkgmetadata>