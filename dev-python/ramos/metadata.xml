<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Ramos=====.. image:: https://travis-ci.org/luizalabs/ramos.svg?branch=master    :target: https://travis-ci.org/luizalabs/ramos.. image:: https://codecov.io/gh/luizalabs/ramos/branch/master/graph/badge.svg    :target: https://codecov.io/gh/luizalabs/ramosGeneric backend poolSetup-----.. code:: bash    pip install ramosDevelopment setup-----------------.. code:: bash    make installUsage-----.. code:: python    import ramos    ramos.configure(pools={        'backend_type': [            'path.to.backend_a',            'path.to.backend_b',        ]    })Integrations~~~~~~~~~~~~Ramos can uses `Django`_ or `Simple Settings`_ to get backendsconfigurations if set settings.POOL_OF_RAMOS:.. code:: python    POOL_OF_RAMOS = {        'backend_type': [            'path.to.backend_a',            'path.to.backend_b',        ]    }Backend Implementations~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    from ramos.mixins import ThreadSafeCreateMixin    class BackendA(ThreadSafeCreateMixin):        id = 'backend_a'        def say(self):            return 'A'    class BackendB(ThreadSafeCreateMixin):        id = 'backend_b'        def say(self):            return 'B'Backend Pool~~~~~~~~~~~~.. code:: python    from ramos.pool import BackendPool    class BackendTypePool(BackendPool)        backend_type = 'backend_type'    backends = BackendTypePool.all()    for backend in backends:        print(backend.say())    # backend_a = BackendTypePool.get('backend_a')    # backend_b = BackendTypePool.get('backend_b').. _Django: https://github.com/django/django.. _Simple Settings: https://github.com/drgarcia1986/simple-settings</longdescription>
</pkgmetadata>