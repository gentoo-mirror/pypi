<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**xarray** (formerly **xray**) is an open source project and Python packagethat makes working with labelled multi-dimensional arrays simple,efficient, and fun!xarray introduces labels in the form of dimensions, coordinates andattributes on top of raw NumPy_-like arrays, which allows for a moreintuitive, more concise, and less error-prone developer experience.The package includes a large and growing library of domain-agnostic functionsfor advanced analytics and visualization with these data structures.xarray was inspired by and borrows heavily from pandas_, the popular dataanalysis package focused on labelled tabular data.It is particularly tailored to working with netCDF_ files, which were thesource of xarray's data model, and integrates tightly with dask_ for parallelcomputing... _NumPy: https://www.numpy.org.. _pandas: https://pandas.pydata.org.. _dask: https://dask.org.. _netCDF: https://www.unidata.ucar.edu/software/netcdfWhy xarray?-----------Multi-dimensional (a.k.a. N-dimensional, ND) arrays (sometimes called&quot;tensors&quot;) are an essential part of computational science.They are encountered in a wide range of fields, including physics, astronomy,geoscience, bioinformatics, engineering, finance, and deep learning.In Python, NumPy_ provides the fundamental data structure and API forworking with raw ND arrays.However, real-world datasets are usually more than just raw numbers;they have labels which encode information about how the array values mapto locations in space, time, etc.xarray doesn't just keep track of labels on arrays -- it uses them to provide apowerful and concise interface. For example:-  Apply operations over dimensions by name: ``x.sum('time')``.-  Select values by label instead of integer location: ``x.loc['2014-01-01']`` or ``x.sel(time='2014-01-01')``.-  Mathematical operations (e.g., ``x - y``) vectorize across multiple dimensions (array broadcasting) based on dimension names, not shape.-  Flexible split-apply-combine operations with groupby: ``x.groupby('time.dayofyear').mean()``.-  Database like alignment based on coordinate labels that smoothly handles missing values: ``x, y = xr.align(x, y, join='outer')``.-  Keep track of arbitrary metadata in the form of a Python dictionary: ``x.attrs``.Learn more----------- Documentation: `&lt;https://docs.xarray.dev&gt;`_- Issue tracker: `&lt;https://github.com/pydata/xarray/issues&gt;`_- Source code: `&lt;https://github.com/pydata/xarray&gt;`_- SciPy2015 talk: `&lt;https://www.youtube.com/watch?v=X0pAhJgySxk&gt;`_</longdescription>
</pkgmetadata>