<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Replit API## DatabaseWorks exactly the same as the official implementation, but doesn't depend on Flask 1.1.2! See the official docs: https://replit-py.readthedocs.io/en/latest/api.html#module-replit.database## Web scraper```pythonget_user_data(query, mode = &quot;username&quot;)````mode` - What to query by. Can be `&quot;username&quot;` or `&quot;url&quot;`.`query` - The item to look for. Must be in format with the `mode`.Returns: ```pythonLiteralObject({ # LiteralObject just behaves like a class for this purpose. Keys = Attributes.    &quot;favourite_langauges&quot;: [str(languages)],    &quot;cycles&quot;: int(cycles),    &quot;profile_picture&quot;: str(img_url)  })``````pythonget_repl_data(query, user = &quot;&quot;, mode = &quot;name&quot;)````mode` - What to query by. Can be `&quot;name&quot;` or `&quot;url&quot;`.`user` - Specifies the user to search for if the `mode` is `&quot;name&quot;`. Can be ommited if the `mode` is `&quot;url&quot;`.`query` - The item to look for. Must be in format with the `mode`.Returns: ```pythonLiteralObject({ # LiteralObject just behaves like a class for this purpose. Keys = Attributes.    &quot;favourite_langauges&quot;: [str(languages)],    &quot;cycles&quot;: int(cycles),    &quot;profile_picture&quot;: str(img_url)  })```More to come!</longdescription>
</pkgmetadata>