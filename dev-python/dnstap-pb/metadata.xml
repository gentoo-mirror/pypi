<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dnstap Protocol Buffers implementation in PythonDnstap Protocol Buffers implementation in Python, more informations on dnstap http://dnstap.info/.This library is based on the following [protocol buffers schema](https://raw.githubusercontent.com/dnstap/dnstap.pb/master/dnstap.proto).## InstallationThis module can be installed from [pypi](https://pypi.org/project/dnstap_pb) website```pythonpip install dnstap_pb```## DecoderExample to use the Dnstap decoder```pythonimport dnstap_pb# dnstap decoderdnstap = dnstap_pb.Dnstap()payload = b'\n\x08dnsdist1\x12\rdnsdist 1.5.0r[\x08\x05\x10\x01\x18\x01&quot;\x04\n\x00'payload += b'\x00\xd2*\x04\n\x00\x00\xd20\xe6\xae\x0385@\x8e\x8f\xc6\xff\x05M\x1cf,'payload += b'\x15R6\xda\xba\x01 \x00\x01\x00\x00\x00\x00\x00\x01\x03www\x06google\x02'payload += b'fr\x00\x00\x01\x00\x01\x00\x00)\x10\x00\x00\x00\x00\x00\x00\x0c\x00\n\x00'payload += b'\x08\xe68\xe3\x8e\x7f\x01\xdexx\x01'dnstap.ParseFromString(payload)dm = dnstap.messageprint(dm)type: CLIENT_QUERYsocket_family: INETsocket_protocol: UDPquery_address: &quot;\n\000\000\322&quot;response_address: &quot;\n\000\000\322&quot;query_port: 60218response_port: 53query_time_sec: 1609664434query_time_nsec: 533617553query_message: &quot;\221W\001 \000\001\000\000\000\000\000\001\003www\006google\002fr\000\000\001\000\001\000\000)\020\000\000\000\000\000\000\014\000\n\000\010\273\257\370\014_\001\341-&quot;```## EncoderExample to use the Dnstap encoder```pythonimport dnstap_pb# dnstap encoderdnstap = dnstap_pb.Dnstap()# clear all fieldsdnstap.Clear()# constructs the messagednstap.type = 1dnstap.version = b&quot;0.1.0&quot;dnstap.identity = b&quot;dnstap_python&quot;dnstap.message.type = dnstap_pb.dnstap_pb2._MESSAGE_TYPE.values_by_name[&quot;CLIENT_QUERY&quot;].numberdnstap.message.socket_protocol = dnstap_pb.dnstap_pb2._SOCKETPROTOCOL.values_by_name[&quot;UDP&quot;].numberdnstap.message.socket_family = dnstap_pb.dnstap_pb2._SOCKETFAMILY.values_by_name[&quot;INET&quot;].number# serialize the dnstap message to binarypayload = dnstap.SerializeToString()```# Developmentdnstap_pb2 file generation guideline Download dnstap.proto from https://github.com/dnstap/dnstap.pb```wget https://raw.githubusercontent.com/dnstap/dnstap.pb/master/dnstap.proto```Download protoc```export VER=21.5wget https://github.com/protocolbuffers/protobuf/releases/download/v$VER/protoc-$VER-linux-x86_64.zipunzip protoc-$VER-linux-x86_64.zip```Generate proto```python3 -m pip install protobufbin/protoc --python_out=. dnstap.proto```</longdescription>
</pkgmetadata>