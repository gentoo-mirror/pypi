<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AI Harness## IntroductionThis project would like to supply some convenient tools for the machine learning and deep learning.Current features:  - XMLConfiguration: for loading a configuration defined in xml files into a Python Object- Arguments: Mapping a Python Object to the arguments of argparse - inspector: Some convenient method for class/object  - executors: Some convenient ProcessExecutor- fileutils: DirectoryNavigator, FileReadPipeLine- others:## Log- 2019.4.18, version: 0.3.0: Added distributed training tools for python  - 2019.4.23, version: 0.3.5: Added a Json file Reader- 2019.4.24, version: 0.3.6: Added a data utils for processing data- 2019.4.26, version: 0.3.7 Added a data utils for processing data for zip file- 2019.4.28, version: 0.3.8 Added QueueExecutor## Examples### 1. XMLConfiguration##### (1) Define the configuration in xml file like:```xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;configuration&gt;    &lt;arg name=&quot;name&quot; default=&quot;TestName&quot; help=&quot;Name Test Help&quot;/&gt;    &lt;arg name=&quot;age&quot; default=&quot;20&quot; help=&quot;Age Test Help&quot;/&gt;    &lt;group name=&quot;address&quot;&gt;        &lt;arg name=&quot;home&quot; default=&quot;shanghai&quot; help=&quot;Home test Help&quot;/&gt;        &lt;arg name=&quot;phone&quot; default=&quot;136&quot; help=&quot;Phone test Help&quot;/&gt;    &lt;/group&gt;    &lt;group name=&quot;education&quot;&gt;        &lt;arg name=&quot;school&quot; default=&quot;beijing&quot; help=&quot;school test Help&quot;/&gt;        &lt;arg name=&quot;grade&quot; default=&quot;master&quot; help=&quot;grade test Help&quot;/&gt;    &lt;/group&gt;&lt;/configuration&gt;``` you can define multiple xml configuration files, and if the name is same, the value of the later will cover the previous. #### (3) Define the configuration class like: ```from aiharness.configuration import configclass,field@configclassclass Address:    phone: int = field(139, &quot;phone help&quot;)    home: str = field(&quot;beijing&quot;, &quot;phone help&quot;)@configclassclass Education:    school: str = field('ustb', &quot;phone help&quot;)    grade: str = field(&quot;master&quot;, &quot;phone help&quot;)@configclassclass Config:    name: str = field(&quot;test&quot;, &quot;name help&quot;)    age: str = field(10, &quot;age help&quot;)    address: Address = Address()    education: Education = Education()```#### (3) Load the xml configuration into python object as folling:```from aiharness.configuration import XmlConfigurationconfig:Config=XmlConfiguration(Config).load(['configuration1.xml','configuration2.xml'])```### Arguments ExampleGenerally, we use argparse as following:```import argparseparser = argparse.ArgumentParser()parser.add_argument(&quot;--name&quot;,default='TEST',help='name help')parser.add_argument(&quot;--age&quot;,default=18,help='age help')arguments=parser.parse_args()```And you can got a arguments object.Here give an example showing how to load a xml configuration and set to argparse arguments and to parse the arguments into a object you defined.And here the Config Class and 'configuration.xml' are same with those of the Configuration example.Firstly, in fact, the Config Class instead of the codes of 'add_argument' of the argparse.ArgumentParser.Secondly, you can put the configuration into a xml file so that you can change it conveniently.```from aiharness.configuration import  Arguments, XmlConfigurationconfig: Config = XmlConfiguration(Config).load(['configuration.xml'])arguments = Arguments(config)config: Config = arguments.parse()```</longdescription>
</pkgmetadata>