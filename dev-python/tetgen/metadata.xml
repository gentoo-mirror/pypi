<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>tetgen======.. image:: https://img.shields.io/pypi/v/tetgen.svg?logo=python&amp;logoColor=white   :target: https://pypi.org/project/tetgen/This Python library is an interface to Hang Si's`TetGen &lt;https://github.com/ufz/tetgen&gt;`__ C++ software.This module combines speed of C++ with the portability and ease of installationof Python along with integration to `PyVista &lt;https://docs.pyvista.org&gt;`_ for3D visualization and analysis.See the `TetGen &lt;https://github.com/ufz/tetgen&gt;`__ GitHub page for more detailson the original creator.This Python library uses the C++ source from TetGen (version 1.6.0,released on August 31, 2020) hosted at `libigl/tetgen &lt;https://github.com/libigl/tetgen&gt;`__.Brief description from`Weierstrass Institute Software &lt;http://wias-berlin.de/software/index.jsp?id=TetGen&amp;lang=1&gt;`__:    TetGen is a program to generate tetrahedral meshes of any 3D polyhedral domains.    TetGen generates exact constrained Delaunay tetrahedralization, boundary    conforming Delaunay meshes, and Voronoi partitions.    TetGen provides various features to generate good quality and adaptive    tetrahedral meshes suitable for numerical methods, such as finite element or    finite volume methods. For more information of TetGen, please take a look at a    list of `features &lt;http://wias-berlin.de/software/tetgen/features.html&gt;`__.License (AGPL)--------------The original `TetGen &lt;https://github.com/ufz/tetgen&gt;`__ software is under AGPL(see `LICENSE &lt;https://github.com/pyvista/tetgen/blob/master/LICENSE&gt;`_) and thus thisPython wrapper package must adopt that license as well.Please look into the terms of this license before creating a dynamic link to this softwarein your downstream package and understand commercial use limitations. We are not lawyersand cannot provide any guidance on the terms of this license.Please see https://www.gnu.org/licenses/agpl-3.0.en.htmlInstallation------------From `PyPI &lt;https://pypi.python.org/pypi/tetgen&gt;`__.. code:: bash    pip install tetgenFrom source at `GitHub &lt;https://github.com/pyvista/tetgen&gt;`__.. code:: bash    git clone https://github.com/pyvista/tetgen    cd tetgen    pip install .Basic Example-------------The features of the C++ TetGen software implemented in this module areprimarily focused on the tetrahedralization a manifold triangularsurface.  This basic example demonstrates how to tetrahedralize amanifold surface and plot part of the mesh... code:: python    import pyvista as pv    import tetgen    import numpy as np    pv.set_plot_theme('document')    sphere = pv.Sphere()    tet = tetgen.TetGen(sphere)    tet.tetrahedralize(order=1, mindihedral=20, minratio=1.5)    grid = tet.grid    grid.plot(show_edges=True).. figure:: https://github.com/pyvista/tetgen/raw/master/doc/images/sphere.png    :width: 300pt    Tetrahedralized SphereExtract a portion of the sphere's tetrahedral mesh below the xy plane and plotthe mesh quality... code:: python    # get cell centroids    cells = grid.cells.reshape(-1, 5)[:, 1:]    cell_center = grid.points[cells].mean(1)    # extract cells below the 0 xy plane    mask = cell_center[:, 2] &lt; 0    cell_ind = mask.nonzero()[0]    subgrid = grid.extract_cells(cell_ind)    # advanced plotting    plotter = pv.Plotter()    plotter.add_mesh(subgrid, 'lightgrey', lighting=True, show_edges=True)    plotter.add_mesh(sphere, 'r', 'wireframe')    plotter.add_legend([[' Input Mesh ', 'r'],                        [' Tessellated Mesh ', 'black']])    plotter.show().. image:: https://github.com/pyvista/tetgen/raw/master/doc/images/sphere_subgrid.pngHere is the cell quality as computed according to the minimum scaled jacobian... code::   Compute cell quality   &gt;&gt;&gt; cell_qual = subgrid.compute_cell_quality()['CellQuality']   Plot quality   &gt;&gt;&gt; subgrid.plot(scalars=cell_qual, stitle='Quality', cmap='bwr', clim=[0, 1],   ...              flip_scalars=True, show_edges=True).. image:: https://github.com/pyvista/tetgen/raw/master/doc/images/sphere_qual.pngAcknowledgments---------------Software was originally created by Hang Si based on work published in`TetGen, a Delaunay-Based Quality Tetrahedral Mesh Generator &lt;https://dl.acm.org/citation.cfm?doid=2629697&gt;`__.</longdescription>
</pkgmetadata>