<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Signed JSON===========.. image:: https://img.shields.io/pypi/v/signedjson.svg    :target: https://pypi.python.org/pypi/signedjson/    :alt: Latest Version.. image:: https://img.shields.io/travis/matrix-org/python-signedjson.svg   :target: https://travis-ci.org/matrix-org/python-signedjsonSigns JSON objects with ED25519 signatures.Features--------* More than one entity can sign the same object.* Each entity can sign the object with more than one key making it easier to  rotate keys* ED25519 can be replaced with a different algorithm.* Unprotected data can be added to the object under the ``&quot;unsigned&quot;`` key.Installing----------.. code:: bash   pip install signedjsonUsing-----.. code:: python    from signedjson.key import generate_signing_key, get_verify_key    from signedjson.sign import (        sign_json, verify_signed_json, SignatureVerifyException    )    signing_key = generate_signing_key('zxcvb')    signed_json = sign_json({'my_key': 'my_data'}, 'Alice', signing_key)    verify_key = get_verify_key(signing_key)    try:        verify_signed_json(signed_json, 'Alice', verify_key)        print 'Signature is valid'    except SignatureVerifyException:        print 'Signature is invalid'Format------.. code:: json    {        &quot;&lt;protected_name&gt;&quot;: &quot;&lt;protected_value&gt;&quot;,        &quot;signatures&quot;: {            &quot;&lt;entity_name&gt;&quot;: {                &quot;ed25519:&lt;key_id&gt;&quot;: &quot;&lt;unpadded_base64_signature&gt;&quot;            }        },        &quot;unsigned&quot;: {            &quot;&lt;unprotected_name&gt;&quot;: &quot;&lt;unprotected_value&gt;&quot;,        }    }</longdescription>
</pkgmetadata>