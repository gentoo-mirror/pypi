<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PandasSchema************For the full documentation, refer to the `Github Pages Website&lt;https://multimeric.github.io/PandasSchema/&gt;`_.======================================================================PandasSchema is a module for validating tabulated data, such as CSVs(Comma Separated Value files), and TSVs (Tab Separated Value files).It uses the incredibly powerful data analysis tool Pandas to do soquickly and efficiently.For example, say your code expects a CSV that looks a bit like this:.. code::   Given Name,Family Name,Age,Sex,Customer ID   Gerald,Hampton,82,Male,2582GABK   Yuuwa,Miyake,27,Male,7951WVLW   Edyta,Majewska,50,Female,7758NSIDNow you want to be able to ensure that the data in your CSV is in thecorrect format:.. code:: python   import pandas as pd   from io import StringIO   from pandas_schema import Column, Schema   from pandas_schema.validation import LeadingWhitespaceValidation, TrailingWhitespaceValidation, CanConvertValidation, MatchesPatternValidation, InRangeValidation, InListValidation   schema = Schema([       Column('Given Name', [LeadingWhitespaceValidation(), TrailingWhitespaceValidation()]),       Column('Family Name', [LeadingWhitespaceValidation(), TrailingWhitespaceValidation()]),       Column('Age', [InRangeValidation(0, 120)]),       Column('Sex', [InListValidation(['Male', 'Female', 'Other'])]),       Column('Customer ID', [MatchesPatternValidation(r'\d{4}[A-Z]{4}')])   ])   test_data = pd.read_csv(StringIO('''Given Name,Family Name,Age,Sex,Customer ID   Gerald ,Hampton,82,Male,2582GABK   Yuuwa,Miyake,270,male,7951WVLW   Edyta,Majewska ,50,Female,775ANSID   '''))   errors = schema.validate(test_data)   for error in errors:       print(error)PandasSchema would then output.. code:: text   {row: 0, column: &quot;Given Name&quot;}: &quot;Gerald &quot; contains trailing whitespace   {row: 1, column: &quot;Age&quot;}: &quot;270&quot; was not in the range [0, 120)   {row: 1, column: &quot;Sex&quot;}: &quot;male&quot; is not in the list of legal options (Male, Female, Other)   {row: 2, column: &quot;Family Name&quot;}: &quot;Majewska &quot; contains trailing whitespace   {row: 2, column: &quot;Customer ID&quot;}: &quot;775ANSID&quot; does not match the pattern &quot;\d{4}[A-Z]{4}&quot;</longdescription>
</pkgmetadata>