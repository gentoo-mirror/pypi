<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-jwt/badge/?version=latest    :target: https://docs.circuitpython.org/projects/jwt/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_JWT/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_JWT/actions/    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackJSON Web Token (JWT) Authentication module for CircuitPython. JSON Web Tokens are an open, industry standard`RFC 7519 &lt;https://tools.ietf.org/html/rfc7519&gt;`_ method for representing claims securely between two parties.This library currently supports the following signature algorithms for JWT generation and verification: * No encoding (&quot;none&quot;) * RS256/SHA-256 (via `Adafruit_CircuitPython_RSA &lt;https://github.com/adafruit/Adafruit_CircuitPython_RSA&gt;`_) * RS384/SHA-384 (via `Adafruit_CircuitPython_RSA &lt;https://github.com/adafruit/Adafruit_CircuitPython_RSA&gt;`_) * RS512/SHA-512 (via `Adafruit_CircuitPython_RSA &lt;https://github.com/adafruit/Adafruit_CircuitPython_RSA&gt;`_)Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Adafruit_CircuitPython_RSA &lt;https://github.com/adafruit/Adafruit_CircuitPython_RSA&gt;`_* `Adafruit_CircuitPython_binascii &lt;https://github.com/adafruit/Adafruit_CircuitPython_binascii&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Installing from PyPI=====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-jwt/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-jwtTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-jwtTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-jwtUsage Example=============Generating encoded JWT.. code-block:: python        import adafruit_jwt        # Import Private RSA key from a secrets.py file        try:            from secrets import secrets        except ImportError:            print(&quot;WiFi secrets are kept in secrets.py, please add them there!&quot;)            raise        # Create JWT Claims        claims = {&quot;iss&quot;: &quot;joe&quot;,                &quot;exp&quot;: 1300819380,                &quot;name&quot;: &quot;John Doe&quot;,                &quot;admin&quot;: True}        # Generate JWT, sign with RSA private key and RS-256        encoded_jwt = adafruit_jwt.JWT.generate(            claims, secrets[&quot;private_key&quot;], algo=&quot;RS256&quot;)        print(&quot;Encoded JWT: &quot;, encoded_jwt)Validating a generated JWT, encoded_jwt... code-block:: python        import adafruit_jwt        decoded_jwt = adafruit_jwt.JWT.validate(encoded_jwt)        # The decoded JWT's JOSE header and claims set are returned as a tuple        print('JOSE Header: {}\nJWT Claims: {}'.format(decoded_jwt[0], decoded_jwt[1]))Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/jwt/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_JWT/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>