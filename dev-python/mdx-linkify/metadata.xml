<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Mdx Linkify[![Travis](https://img.shields.io/travis/daGrevis/mdx_linkify.svg)](https://travis-ci.org/daGrevis/mdx_linkify)[![Coveralls](https://img.shields.io/coveralls/daGrevis/mdx_linkify.svg)](https://coveralls.io/r/daGrevis/mdx_linkify?branch=master)[![PyPI](https://img.shields.io/pypi/v/mdx_linkify.svg)](https://pypi.python.org/pypi/mdx_linkify)[![PyPI](https://img.shields.io/pypi/pyversions/mdx_linkify.svg)](https://pypi.python.org/pypi/mdx_linkify)This extension for [Python Markdown](https://github.com/waylan/Python-Markdown)will convert text that look like links to HTML anchors.There's an alternative package that serves the same purpose called[`markdown-urlize`](https://github.com/r0wb0t/markdown-urlize). The maindifference is that [`mdx_linkify`](https://github.com/daGrevis/mdx_linkify) isutilizing the excellent [`bleach`](https://github.com/jsocol/bleach) forsearching links in text. :clap:## Usage### Minimal Example```pythonfrom markdown import markdownmarkdown(&quot;minimal http://example.org/&quot;, extensions=[&quot;mdx_linkify&quot;])# Returns '&lt;p&gt;minimal &lt;a href=&quot;http://example.org/&quot;&gt;http://example.org/&lt;/a&gt;&lt;/p&gt;'```## InstallationThe project is [on PyPI](https://pypi.python.org/pypi/mdx_linkify)!    pip install mdx_linkifyIf you want the bleeding-edge version (this includes unreleased-to-PyPI code),you can always grab the master branch directly from Git.    pip install git+git://github.com/daGrevis/mdx_linkify.git### Configuring LinkerTo configure used Linker instance, use `linker_options` parameter. It will be passed to [`bleach.linkifier.Linker`](https://bleach.readthedocs.io/en/latest/linkify.html#using-bleach-linkifier-linker) unchanged.#### Example: Parse Emails```pythonfrom mdx_linkify.mdx_linkify import LinkifyExtensionfrom markdown import Markdownmd = Markdown(    extensions=[LinkifyExtension(linker_options={&quot;parse_email&quot;: True})],)assert md.convert('contact@example.com'), '&lt;p&gt;&lt;a href=&quot;mailto:contact@example.com&quot;&gt;contact@example.com&lt;/a&gt;&lt;/p&gt;'```#### Example: Custom TLDs```pythonfrom mdx_linkify.mdx_linkify import LinkifyExtensionfrom bleach.linkifier import build_url_refrom markdown import Markdownmd = Markdown(    extensions=[LinkifyExtension(linker_options={&quot;url_re&quot;: build_url_re([&quot;custom&quot;, &quot;custom2&quot;])})],)assert md.convert('linked.custom'), '&lt;p&gt;&lt;a href=&quot;http://linked.custom&quot;&gt;linked.custom&lt;/a&gt;&lt;/p&gt;'```#### Example: Ignoring TLDs```pythonfrom mdx_linkify.mdx_linkify import LinkifyExtensionfrom markdown import Markdowndef dont_linkify_net_tld(attrs, new=False):    if attrs[&quot;_text&quot;].endswith(&quot;.net&quot;):        return None    return attrsmd = Markdown(    extensions=[LinkifyExtension(linker_options={&quot;callbacks&quot;: [dont_linkify_net_tld]})],)assert md.convert(&quot;not-linked.net&quot;), '&lt;p&gt;not-linked.net&lt;/p&gt;'```## Development```git clone git@github.com:daGrevis/mdx_linkify.gitvirtualenv mdx_linkify/cd mdx_linkify/source bin/activatepython setup.py installpython setup.py test```Pull requests are much welcome! :+1:## Releasing_(more like a cheatsheet for me actually)_- Change version in `setup.py`,- Commit and tag it,- Push it (including tag),- Run `python setup.py register &amp;&amp; python setup.py sdist upload`;</longdescription>
</pkgmetadata>