<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># packed[![Codecov](https://img.shields.io/codecov/c/github/tsv1/packed/master.svg?style=flat-square)](https://codecov.io/gh/tsv1/packed)[![PyPI](https://img.shields.io/pypi/v/packed.svg?style=flat-square)](https://pypi.python.org/pypi/packed/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/packed?style=flat-square)](https://pypi.python.org/pypi/packed/)[![Python Version](https://img.shields.io/pypi/pyversions/packed.svg?style=flat-square)](https://pypi.python.org/pypi/packed/)## Installation```shpip3 install packed```## Usage```pythonfrom packed import packable@packable  # 1) register classclass EqualMatcher:    def __init__(self, expected):        self._expected = expected    def match(self, actual):        return actual == self._expected    def __packed__(self):  # 2) pick fields        return {&quot;expected&quot;: self._expected}```**client**```pythonfrom packed import packmatcher = EqualMatcher(&quot;banana&quot;)packed = pack(matcher)# -&gt; send «packed» over network```**server**```pythonfrom packed import unpack# &lt;- recieve «packed» as binarymatcher = unpack(packed)assert matcher.match(&quot;banana&quot;) is True```</longdescription>
</pkgmetadata>