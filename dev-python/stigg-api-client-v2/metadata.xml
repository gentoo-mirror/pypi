<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># stigg-api-client-v2 (BETA)This library provides a Python wrapper to [Stigg's GraphQL API](https://docs.stigg.io/docs/graphql-api) based on the operations that are in use by the [Stigg's Node.js SDK](https://docs.stigg.io/docs/nodejs-sdk).The [ariadne-codegen](https://github.com/mirumee/ariadne-codegen) code generator is used to generate a typesafe Python API client.## DocumentationTBD## Installation    pip install stigg-api-client-v2## UsageInitialize the client:```pythonimport osfrom stigg import Stiggapi_key = os.environ.get(&quot;STIGG_SERVER_API_KEY&quot;)client = Stigg.create_async_client(api_key)```Provision a customer```pythonimport osfrom stigg import Stiggfrom stigg.generated import ProvisionCustomerInputapi_key = os.environ.get(&quot;STIGG_SERVER_API_KEY&quot;)client = Stigg.create_async_client(api_key)customer_input = ProvisionCustomerInput(    **{        &quot;customer_id&quot;: &quot;1661115567186116608&quot;, # mandatory, everything else is optional        &quot;name&quot;: &quot;Acme&quot;,        &quot;email&quot;: &quot;billing@acme.com&quot;,        &quot;additional_meta_data&quot;: {&quot;key&quot;: &quot;value&quot;},        &quot;subscription_params&quot;: {&quot;plan_id&quot;: &quot;plan-acme-free&quot;},    })result = await client.provision_customer(customer_input)print(result.provision_customer.customer)```Get a customer by ID```pythonimport osfrom stigg import Stiggfrom stigg.generated import GetCustomerByRefIdInputapi_key = os.environ.get(&quot;STIGG_SERVER_API_KEY&quot;)client = Stigg.create_async_client(api_key)result = await client.get_customer_by_id(GetCustomerByRefIdInput(**{&quot;customer_id&quot;: &quot;1661115567186116608&quot;}))print(result.get_customer_by_ref_id.name)```</longdescription>
</pkgmetadata>