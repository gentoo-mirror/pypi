<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;HTTP Headers, the Complete Toolkit üß∞ &lt;a href=&quot;https://twitter.com/intent/tweet?text=Python%20library%20for%20oriented%20object%20HTTP%20style%20headers.&amp;url=https://www.github.com/Ousret/kiss-headers&amp;hashtags=python,headers,opensource&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&quot;/&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;sup&gt;Object-oriented headers. Kind of structured headers.&lt;/sup&gt;&lt;br&gt;  &lt;a href='https://pypi.org/project/kiss-headers/'&gt;     &lt;img src=&quot;https://img.shields.io/pypi/pyversions/kiss-headers.svg?orange=blue&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://codecov.io/gh/Ousret/kiss-headers&quot;&gt;      &lt;img src=&quot;https://codecov.io/gh/Ousret/kiss-headers/branch/master/graph/badge.svg&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pepy.tech/project/kiss-headers/&quot;&gt;     &lt;img alt=&quot;Download Count Total&quot; src=&quot;https://pepy.tech/badge/kiss-headers&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;### ‚ùì WhyNo matter if you are currently dealing with code using HTTP or IMAP _(message, email)_, you should not worry about easily accessing and exploiting headers.&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/9326700/77257881-55866300-6c77-11ea-820c-7550e6bdeee7.gif&quot; alt=&quot;using kiss-headers from python interpreter&quot;/&gt;&lt;/p&gt;I have seen so many chunks of code trying to deal with these headers; often I saw this implementation:```python# No more of that!charset = headers['Content-Type'].split(';')[-1].split('=')[-1].replace('&quot;', '')# That too..response = get(    &quot;https://httpbin.org/headers&quot;,    headers={        &quot;user-agent&quot;: &quot;custom/2.22&quot;,        &quot;referer&quot;: &quot;https://www.google.com&quot;,        &quot;accept&quot;: &quot;text/html&quot;,        &quot;accept-language&quot;: &quot;en-US&quot;,        &quot;custom-header-xyz&quot;: &quot;hello; charset=utf-8&quot;    })```**Scroll down and see how you could do it from now on.**## üî™ Features`kiss-headers` is a basic library that allow you to handle headers as objects.* A backwards-compatible syntax using bracket style.* Capability to alter headers using simple, human-readable operator notation `+` and `-`.* Flexibility if headers are from an email or HTTP, use as you need with one library.* Ability to parse any object and extract recognized headers from it, it also supports UTF-8 encoded headers.* Offer an opinionated way to un/serialize headers.* Fully type-annotated.* Provide great auto-completion in Python interpreter or any capable IDE.* No dependencies. Never will be.* 90% test coverage.Plus all the features that you would expect from handling headers...* Properties syntax for headers and attribute in a header.* Supports headers and attributes OneToOne, OneToMany and ManySquashedIntoOne.* Capable of parsing `bytes`, `fp`, `str`, `dict`, `email.Message`, `requests.Response`, `httpx._models.Response` and `urllib3.HTTPResponse`.* Automatically unquote and unfold the value of an attribute when retrieving it.* Keep headers and attributes ordering.* Case-insensitive with header name and attribute key.* Character `-` equal `_` in addition of above feature.* Any syntax you like, we like.### ‚ú® InstallationWhatever you like, use `pipenv` or `pip`, it simply works. Requires Python 3.6+ installed.```sh pip install kiss-headers --upgrade```### üç∞ Usage#### Quick start`parse_it()` method takes `bytes`, `str`, `fp`, `dict`, `email.Message` or even a `requests.Response` or `httpx._models.Response` itself and returns a `Headers` object.```pythonfrom requests import getfrom kiss_headers import parse_itresponse = get('https://www.google.fr')headers = parse_it(response)headers.content_type.charset  # output: ISO-8859-1# Its the same asheaders[&quot;content-type&quot;][&quot;charset&quot;]  # output: ISO-8859-1```and also, the other way around:```pythonfrom requests import getfrom kiss_headers import Headers, UserAgent, Referer, UpgradeInsecureRequests, Accept, AcceptLanguage, CustomHeaderclass CustomHeaderXyz(CustomHeader):        __squash__ = False        def __init__(self, charset: str = &quot;utf-8&quot;):        super().__init__(&quot;hello&quot;, charset=charset)# Officially supported with requestsresponse = get(    &quot;https://httpbin.org/headers&quot;,    headers=Headers(        UserAgent(&quot;custom/2.22&quot;),        Referer(&quot;https://www.google.com&quot;),        UpgradeInsecureRequests(),        Accept(&quot;text/html&quot;),        AcceptLanguage(&quot;en-US&quot;),        CustomHeaderXyz()    ))```httpbin should get back with:```json{    &quot;headers&quot;: {        &quot;Accept&quot;: &quot;text/html&quot;,        &quot;Accept-Encoding&quot;: &quot;identity&quot;,        &quot;Accept-Language&quot;: &quot;en-US&quot;,        &quot;Custom-Header-Xyz&quot;: &quot;hello; charset=\&quot;utf-8\&quot;&quot;,        &quot;Host&quot;: &quot;httpbin.org&quot;,        &quot;Referer&quot;: &quot;https://www.google.com&quot;,        &quot;Upgrade-Insecure-Requests&quot;: &quot;1&quot;,        &quot;User-Agent&quot;: &quot;custom/2.22&quot;,        &quot;X-Amzn-Trace-Id&quot;: &quot;Root=1-622sz46b-973c5671113f58d611972de&quot;    }}```Do not forget that headers are not OneToOne. One header can be repeated multiple times and attributes can have multiple values within the same header.```pythonfrom kiss_headers import parse_itmy_cookies = &quot;&quot;&quot;set-cookie: 1P_JAR=2020-03-16-21; expires=Wed, 15-Apr-2020 21:27:31 GMT; path=/; domain=.google.fr; Secure; SameSite=noneset-cookie: CONSENT=WP.284b10; expires=Fri, 01-Jan-2038 00:00:00 GMT; path=/; domain=.google.fr&quot;&quot;&quot;headers = parse_it(my_cookies)type(headers.set_cookie)  # output: listheaders.set_cookie[0].expires # output: Wed, 15-Apr-2020 21:27:31 GMTheaders.set_cookie[0]._1p_jar # output: 2020-03-16-21headers.set_cookie[0][&quot;1P_JAR&quot;] # output: 2020-03-16-21```Since v2.1 you can transform an Header object to its target `CustomHeader` subclass to access more methods.```pythonfrom kiss_headers import parse_it, get_polymorphic, SetCookiemy_cookies = &quot;&quot;&quot;set-cookie: 1P_JAR=2020-03-16-21; expires=Wed, 15-Apr-2020 21:27:31 GMT; path=/; domain=.google.fr; Secure; SameSite=noneset-cookie: CONSENT=WP.284b10; expires=Fri, 01-Jan-2038 00:00:00 GMT; path=/; domain=.google.fr&quot;&quot;&quot;headers = parse_it(my_cookies)type(headers.set_cookie[0])  # output: Headerset_cookie = get_polymorphic(headers.set_cookie[0], SetCookie)type(set_cookie)  # output: SetCookieset_cookie.get_cookie_name()  # output: 1P_JARset_cookie.get_expire()  # output: datetime(...)```Just a note: Accessing a header that has the same name as a reserved keyword must be done this way :```pythonheaders = parse_it('From: Ousret; origin=www.github.com\nIS: 1\nWhile: Not-True')# this flavourheaders.from_ # to access From, just add a single underscore to it# or.. just using :headers['from']```#### ‚úçÔ∏èSerializationSince version 2.3.0 the package offer the possibility to un/serialize `Headers`.```pythonfrom requests import getfrom kiss_headers import parse_it, dumpsjson_repr: str = dumps(    parse_it(        get(&quot;https://www.google.fr&quot;)    ),    indent=4)print(json_repr)  # See the result bellow# Additionally, how to parse the JSON repr to Headers againheaders = parse_it(json_repr)  # Yes! that easy!``````json{    &quot;Date&quot;: [        {            &quot;Tue, 02 Feb 2021 21:43:13 GMT&quot;: null        }    ],    &quot;Expires&quot;: [        {            &quot;-1&quot;: null        }    ],    &quot;Cache-Control&quot;: [        {            &quot;private&quot;: null        },        {            &quot;max-age&quot;: &quot;0&quot;        }    ],    &quot;Content-Type&quot;: [        {            &quot;text/html&quot;: null,            &quot;charset&quot;: &quot;ISO-8859-1&quot;        }    ],    &quot;P3P&quot;: [        {            &quot;CP&quot;: &quot;This is not a P3P policy! See g.co/p3phelp for more info.&quot;        }    ],    &quot;Content-Encoding&quot;: [        {            &quot;gzip&quot;: null        }    ],    &quot;Server&quot;: [        {            &quot;gws&quot;: null        }    ],    &quot;X-XSS-Protection&quot;: [        {            &quot;0&quot;: null        }    ],    &quot;X-Frame-Options&quot;: [        {            &quot;SAMEORIGIN&quot;: null        }    ],    &quot;Set-Cookie&quot;: [        {            &quot;NID&quot;: &quot;208=D5XUqjrP9PNpiZu4laa_0xvy_IxBzQLtfxqeAqcPBgiY2y5sfSF51IFuXZnH0zDAF1KZ8x-0VsRyGOM0aStIzCUfdiPBOCxHSxUv39N0vwzku3aI2UkeRXhWw8-HWw5Ob41GB0PZi2coQsPM7ZEQ_fl9PlQ_ld1KrPA&quot;,            &quot;expires&quot;: &quot;Wed, 04-Aug-2021 21:43:13 GMT&quot;,            &quot;path&quot;: &quot;/&quot;,            &quot;domain&quot;: &quot;.google.fr&quot;,            &quot;HttpOnly&quot;: null        },        {            &quot;CONSENT&quot;: &quot;PENDING+880&quot;,            &quot;expires&quot;: &quot;Fri, 01-Jan-2038 00:00:00 GMT&quot;,            &quot;path&quot;: &quot;/&quot;,            &quot;domain&quot;: &quot;.google.fr&quot;        }    ],    &quot;Alt-Svc&quot;: [        {            &quot;h3-29&quot;: &quot;:443&quot;,            &quot;ma&quot;: &quot;2592000&quot;        },        {            &quot;h3-T051&quot;: &quot;:443&quot;,            &quot;ma&quot;: &quot;2592000&quot;        },        {            &quot;h3-Q050&quot;: &quot;:443&quot;,            &quot;ma&quot;: &quot;2592000&quot;        },        {            &quot;h3-Q046&quot;: &quot;:443&quot;,            &quot;ma&quot;: &quot;2592000&quot;        },        {            &quot;h3-Q043&quot;: &quot;:443&quot;,            &quot;ma&quot;: &quot;2592000&quot;        },        {            &quot;quic&quot;: &quot;:443&quot;,            &quot;ma&quot;: &quot;2592000&quot;,            &quot;v&quot;: &quot;46,43&quot;        }    ],    &quot;Transfer-Encoding&quot;: [        {            &quot;chunked&quot;: null        }    ]}```Alternatively you may use `from kiss_headers import parse_it, encode, decode` to transform `Headers` to `dict` (instead of JSON) or the other way around.Understand that the `dict` returned in `encode` will differ from the method `to_dict()` in `Headers`.#### üõ†Ô∏è Create headers from objectsIntroduced in the version 2.0, kiss-headers now allow you to create headers with more than 40+ ready-to-use, fully documented, header objects.1st example usage```pythonfrom kiss_headers import Headers, Authorizationfrom requests import getresponse = get(&quot;https://httpbin.org/bearer&quot;, headers=Headers(Authorization(&quot;Bearer&quot;, &quot;qwerty&quot;)))print(response.status_code)  # 200```2nd example usage```pythonfrom kiss_headers import *headers = (    Host(&quot;developer.mozilla.org&quot;)    + UserAgent(        &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:50.0) Gecko/20100101 Firefox/50.0&quot;    )    + Accept(&quot;text/html&quot;)    + Accept(&quot;application/xhtml+xml&quot;)    + Accept(&quot;application/xml&quot;, qualifier=0.9)    + Accept(qualifier=0.8)    + AcceptLanguage(&quot;en-US&quot;)    + AcceptLanguage(&quot;en&quot;, qualifier=0.5)    + AcceptEncoding(&quot;gzip&quot;)    + AcceptEncoding(&quot;deflate&quot;)    + AcceptEncoding(&quot;br&quot;)    + Referer(&quot;https://developer.mozilla.org/testpage.html&quot;)    + Connection(should_keep_alive=True)    + UpgradeInsecureRequests()    + IfModifiedSince(&quot;Mon, 18 Jul 2016 02:36:04 GMT&quot;)    + IfNoneMatch(&quot;c561c68d0ba92bbeb8b0fff2a9199f722e3a621a&quot;)    + CacheControl(max_age=0))raw_headers = str(headers)````raw_headers` now retain the following :```Host: developer.mozilla.orgUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:50.0) Gecko/20100101 Firefox/50.0Accept: text/html, application/xhtml+xml, application/xml; q=&quot;0.9&quot;, */*; q=&quot;0.8&quot;Accept-Language: en-US, en; q=&quot;0.5&quot;Accept-Encoding: gzip, deflate, brReferer: https://developer.mozilla.org/testpage.htmlConnection: keep-aliveUpgrade-Insecure-Requests: 1If-Modified-Since: Mon, 18 Jul 2016 02:36:04 GMTIf-None-Match: &quot;c561c68d0ba92bbeb8b0fff2a9199f722e3a621a&quot;Cache-Control: max-age=&quot;0&quot;```See the complete list of available header class in the full documentation. Also, you can create your own custom header object using the class `kiss_headers.CustomHeader`.## üìú DocumentationSee the full documentation for advanced usages : [www.kiss-headers.tech](https://www.kiss-headers.tech/)## üë§ ContributingContributions, issues and feature requests are very much welcome.&lt;br /&gt;Feel free to check [issues page](https://github.com/Ousret/kiss-headers/issues) if you want to contribute.Firstly, after getting your own local copy, run `./scripts/install` to initialize your virtual environment.Then run `./scripts/check` before you commit, make sure everything is still working.Remember to keep it sweet and simple when contributing to this project.## üìù LicenseCopyright ¬© 2020 [Ahmed TAHRI @Ousret](https://github.com/Ousret).&lt;br /&gt;This project is [MIT](https://github.com/Ousret/kiss-headers/blob/master/LICENSE) licensed.</longdescription>
</pkgmetadata>