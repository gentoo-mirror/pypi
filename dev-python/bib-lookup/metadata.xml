<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># bib_lookup![pytest](https://github.com/DeepPSP/bib_lookup/actions/workflows/run-pytest.yml/badge.svg)[![codecov](https://codecov.io/github/DeepPSP/bib_lookup/branch/master/graph/badge.svg?token=H1B26Q3XWX)](https://codecov.io/github/DeepPSP/bib_lookup)![PyPI](https://img.shields.io/pypi/v/bib_lookup?style=flat-square)[![DOI](https://zenodo.org/badge/476130336.svg)](https://zenodo.org/badge/latestdoi/476130336)![downloads](https://img.shields.io/pypi/dm/bib-lookup?style=flat-square)![license](https://img.shields.io/github/license/DeepPSP/bib_lookup?style=flat-square)A useful tool for looking up Bib entries using DOI, or pubmed ID (or URL), or arXiv ID (or URL).It is an updated version of&lt;https://github.com/wenh06/utils/blob/master/utils_universal/utils_bib.py&gt;**NOTE** that you should have internet connection to use `bib_lookup`.&lt;!-- toc --&gt;- [Installation](#installation)- [Dependencies](#dependencies)- [Basic Usage Examples](#basic-usage-examples)- [Command-line Usage](#command-line-usage)- [Output (Append) to a `.bib` File](#append-to-file)- [arXiv to DOI](#arxiv-to-doi)- [Bib Items Checking](#bib-items-checking)- [Simplify a `.bib` File](#simplify-file)- [`CitationMixin` class](#citation-mixin)- [TODO](#todo)- [WARNING](#warning)- [Biblatex Cheetsheet](#biblatex-cheetsheet)- [Citation](#citation)- [References](#references)&lt;!-- tocstop --&gt;## InstallationRun```bashpython -m pip install bib-lookup```or install the latest version in [GitHub](https://github.com/DeepPSP/bib_lookup/) using```bashpython -m pip install git+https://github.com/DeepPSP/bib_lookup.git```or git clone this repository and install locally via```bashcd bib_lookuppython -m pip install .```:point_right: [Back to TOC](#bib_lookup)## Dependencies- requests- feedparser- pandas:point_right: [Back to TOC](#bib_lookup)## Basic Usage Examples&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup(align=&quot;middle&quot;)&gt;&gt;&gt; print(bl(&quot;1707.07183&quot;))@article{wen2017_1707.07183v2,   author = {Hao Wen and Chunhui Liu},    title = {Counting Multiplicities in a Hypersurface over a Number Field},  journal = {arXiv preprint arXiv:1707.07183v2},     year = {2017},    month = {7},}&gt;&gt;&gt; print(bl(&quot;10.1109/CVPR.2016.90&quot;))@inproceedings{He_2016,     author = {Kaiming He and Xiangyu Zhang and Shaoqing Ren and Jian Sun},      title = {Deep Residual Learning for Image Recognition},  booktitle = {2016 {IEEE} Conference on Computer Vision and Pattern Recognition ({CVPR})},        doi = {10.1109/cvpr.2016.90},       year = {2016},      month = {6},  publisher = {{IEEE}},}&gt;&gt;&gt; print(bl(&quot;10.23919/cinc53138.2021.9662801&quot;, align=&quot;left-middle&quot;))@inproceedings{Wen_2021,  author    = {Hao Wen and Jingsu Kang},  title     = {Hybrid Arrhythmia Detection on Varying-Dimensional Electrocardiography: Combining Deep Neural Networks and Clinical Rules},  booktitle = {2021 Computing in Cardiology ({CinC})},  doi       = {10.23919/cinc53138.2021.9662801},  year      = {2021},  month     = {9},  publisher = {{IEEE}},}```:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## Command-line Usage&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;After installation, one can use `bib-lookup` in the command line:```bashbib-lookup 10.1109/CVPR.2016.90 10.23919/cinc53138.2021.9662801 --ignore-fields url doi -i path/to/input.txt -o path/to/output.bib```View current version:```bashbib-lookup --version```View current configuration:```bashbib-lookup --config show```Remove current configuration:```bashbib-lookup --config reset```Set specific configuration:```bashbib-lookup --config &quot;timeout=2.0;print_result=true;ignore_fields=['url','pdf']&quot;```or from a `json` file or `yaml` file:```bashbib-lookup --config /path/to/config.jsonbib-lookup --config /path/to/config.yaml```Note that unrecognized fields will be ignored and warning messages will be printed. The following table lists all the available configuration options:| Option          | Type    | Default                                       | Description                                         ||-----------------|---------|-----------------------------------------------|-----------------------------------------------------|| `align`         | `str`   | `middle`                                      | Alignment of the bib item.                          || `email`         | `str`   | `None`                                        | Email address to be used in the request.            || `ignore_fields` | `list`  | `['url', 'pdf']`                              | Fields to be ignored in the output.                 || `ignore_errors` | `bool`  | `False`                                       | Whether to ignore errors.                           || `timeout`       | `float` | `6.0`                                         | Timeout in seconds for each request.                || `arxiv2doi`     | `bool`  | `True`                                        | Whether to convert arXiv ID to DOI.                 || `format`        | `str`   | `bibtex`                                      | Output format.                                      || `style`         | `str`   | `apa`                                         | Citation style. Valid only when `format` is `text`. || `verbose`       | `int`   | `0`                                           | Verbosity level.                                    || `print_result`  | `bool`  | `False`                                       | Whether to print the result.                        || `ordering`      | `list`  | `['title', 'author', 'journal', 'booktitle']` | Ordering of the fields.                             |:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## &lt;a name=&quot;append-to-file&quot;&gt;&lt;/a&gt; Output (Append) to a `.bib` File&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;Each time a bib item is successfully found, it will be cached. One can call the `save` function to write the cached bib items to a `.bib` file, in the append mode.```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup()&gt;&gt;&gt; bl([&quot;10.1109/CVPR.2016.90&quot;, &quot;10.23919/cinc53138.2021.9662801&quot;, &quot;DOI: 10.1142/S1005386718000305&quot;]);&gt;&gt;&gt; len(bl)3&gt;&gt;&gt; bl[0]'10.1109/CVPR.2016.90'&gt;&gt;&gt; bl.save([0, 2], &quot;path/to/some/file.bib&quot;)  # save bib item corr. to &quot;10.1109/CVPR.2016.90&quot; and &quot;DOI: 10.1142/S1005386718000305&quot;&gt;&gt;&gt; len(bl)1&gt;&gt;&gt; bl.pop(0)  # remove the bib item corr. &quot;10.23919/cinc53138.2021.9662801&quot;, equivalent to `bl.pop(&quot;10.23919/cinc53138.2021.9662801&quot;)`&gt;&gt;&gt; len(bl)0```:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## arXiv to DOI&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;From 2022.2.17, new arXiv articles are automatically assigned DOIs (old ones in progress). If one prefers DOI citation to arXiv citation then```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup(arxiv2doi=True)  # the default for `arxiv2doi` is False&gt;&gt;&gt; print(bl(&quot;https://arxiv.org/abs/2204.04420&quot;))@misc{https://doi.org/10.48550/arxiv.2204.04420,     author = {Hao, Wen and Jingsu, Kang},      title = {Investigating Deep Learning Benchmarks for Electrocardiography Signal Processing},        doi = {10.48550/ARXIV.2204.04420},   keywords = {Machine Learning (cs.LG), FOS: Computer and information sciences, FOS: Computer and information sciences},  publisher = {arXiv},       year = {2022},  copyright = {Creative Commons Attribution 4.0 International}}```while with `bl = BibLookup()`, one would get```latex@article{hao2022_2204.04420v1,   author = {Wen Hao and Kang Jingsu},    title = {Investigating Deep Learning Benchmarks for Electrocardiography Signal Processing},  journal = {arXiv preprint arXiv:2204.04420v1},     year = {2022},    month = {4}}```:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## Bib Items Checking&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;One can use `BibLookup` to check the validity (**required fields, duplicate labels**, etc) of bib items in a Bib file. The following is an example with a [Bib file](/test/invalid_items.bib) with incorrect and duplicate bib items.```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup()&gt;&gt;&gt; bl.check_bib_file(&quot;./test/invalid_items.bib&quot;)Bib item &quot;He_2016&quot;    starting from line 3 is not valid.    Bib item of entry type &quot;inproceedings&quot; should have the following fields:    ['author', 'title', 'booktitle', 'year']Bib item &quot;Wen_2018&quot;    starting from line 16 is not valid.    Bib item of entry type &quot;article&quot; should have the following fields:    ['author', 'title', 'journal', 'year']Bib items &quot;He_2016&quot; starting from line 3      and &quot;He_2016&quot; starting from line 45 is duplicate.[3, 16, 45]```or from command line```bashbib-lookup -c ./test/invalid_items.bibbib-lookup --ignore-fields url doi -i ./test/sample_input.txt -o ./tmp/a.bib -c true```:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## &lt;a name=&quot;simplify-file&quot;&gt;&lt;/a&gt; Simplify a `.bib` File&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;Sometimes one wants a clean bib without bib items that are not cited, then one can use the static method `simplify_bib_file` to generate a new `.bib` File that contains only the cited bib items from an old `.bib` File.```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; new_bib_file_path = BibLookup.simplify_bib_file(&quot;path/to/tex/source/file&quot;, &quot;path/to/old/bib/file&quot;)&gt;&gt;&gt; # or use the following if one has multiple source files&gt;&gt;&gt; new_bib_file_path = BibLookup.simplify_bib_file(list_of_tex_source_files_or_folders, &quot;path/to/old/bib/file&quot;)```:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;##  &lt;a name=&quot;citation-mixin&quot;&gt;&lt;/a&gt; `CitationMixin` class&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;One can inherit the `CitationMixin` class to have the method `get_citation` for any class,in which case one only needs to provide a `self.doi`. For example:```pythonfrom bib_lookup import CitationMixinclass SomeClass(CitationMixin):    doi = &quot;10.23919/cinc53138.2021.9662801&quot;  # can also be a list```&lt;/details&gt;## TODO&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;1. ([:heavy_check_mark:](#command-line-usage)) ~~add CLI support~~;2. use eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi for PubMed, as in \[[3](#ref3)\];3. try using google scholar api described in \[[4](#ref4)\] (unfortunately \[[4](#ref4)\] is charged);4. use `Flask` to write a simple browser-based UI;5. (:heavy_check_mark:) ~~check if the bib item is already existed in the output file, and skip saving it if so~~;6. since arXiv articles are now automatically assigned DOIs (ref. [this blog](https://blog.arxiv.org/2022/02/17/new-arxiv-articles-are-now-automatically-assigned-dois/)), consider converting arXiv identifiers to DOI indentifiers, and requesting from DOI. Currently, the request results are different, at least the entry type is change from `article` to `misc`;7. make `__call__` method asynchronised using `asyncio` and `aiohttp` or `httpx`.:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## WARNING&lt;details&gt;&lt;summary&gt;Click to expand!&lt;/summary&gt;Many journals have specific requirements for the Bib entries,for example, the title and/or journal (and/or booktitle), etc. should be **capitalized**,which could not be done automatically since- some abbreviations in title should have characters all in the upper case, for example&gt; ALBERT: A Lite BERT for Self-supervised Learning of Language Representations- some should have characters all in in the lower case,&gt; mixup: Beyond Empirical Risk Minimization- and some others should have mixed cases,&gt; KeMRE: Knowledge-enhanced Medical Relation Extraction for Chinese Medicine InstructionsThis should be corrected by the user himself **if necessary** (which although is rare),and remember to enclose such fields with **double curly braces**.For example, the lookup result for the `AlexNet` paper is```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup()&gt;&gt;&gt; print(bl(&quot;https://doi.org/10.1145/3065386&quot;))@article{Krizhevsky_2017,     author = {Alex Krizhevsky and Ilya Sutskever and Geoffrey E. Hinton},      title = {{ImageNet} classification with deep convolutional neural networks},    journal = {Communications of the {ACM}},        doi = {10.1145/3065386},       year = {2017},      month = {5},  publisher = {Association for Computing Machinery ({ACM})},     volume = {60},     number = {6},      pages = {84--90}}```This result (the title) should be adjusted to```latex@article{Krizhevsky_2017,     author = {Alex Krizhevsky and Ilya Sutskever and Geoffrey E. Hinton},      title = {{ImageNet Classification with Deep Convolutional Neural Networks}},    journal = {Communications of the {ACM}},        doi = {10.1145/3065386},       year = {2017},      month = {5},  publisher = {Association for Computing Machinery ({ACM})},     volume = {60},     number = {6},      pages = {84--90}}```A more severe example that need manual correction is as follows```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup()&gt;&gt;&gt; print(bl(&quot;10.1093/acprof:oso/9780195058239.001.0001&quot;))@book{Malmivuo_1995,     author = {Jaakko Malmivuo and Robert Plonsey},      title = {{BioelectromagnetismPrinciples} and Applications of Bioelectric and Biomagnetic Fields},        doi = {10.1093/acprof:oso/9780195058239.001.0001},       year = {1995},      month = {10},  publisher = {Oxford University Press}}```Adjust it to```latex@book{Malmivuo_1995,     author = {Jaakko Malmivuo and Robert Plonsey},      title = {{Bioelectromagnetism: Principles and Applications of Bioelectric and Biomagnetic Fields}},        doi = {10.1093/acprof:oso/9780195058239.001.0001},       year = {1995},      month = {10},  publisher = {Oxford University Press}}```This shows that the data in the DOI database is **NOT** always correct.:point_right: [Back to TOC](#bib_lookup)&lt;/details&gt;## Biblatex Cheetsheet[This file](/biblatex-cheatsheet.pdf) downloaded from \[[6](#ref6)\] gives full knowledge about `bib` entries.:point_right: [Back to TOC](#bib_lookup)## Citation```latex@misc{https://doi.org/10.5281/zenodo.6435017,     author = {WEN, Hao},      title = {bib\_lookup: A Useful Tool for Uooking Up Bib Entries},        doi = {10.5281/ZENODO.6435017},        url = {https://zenodo.org/record/6435017},  publisher = {Zenodo},       year = {2022},  copyright = {MIT License}}```The above citation can be get via```python&gt;&gt;&gt; from bib_lookup import BibLookup&gt;&gt;&gt; bl = BibLookup()&gt;&gt;&gt; print(bl(&quot;DOI: 10.5281/zenodo.6435017&quot;))```:point_right: [Back to TOC](#bib_lookup)## References1. &lt;a name=&quot;ref1&quot;&gt;&lt;/a&gt; https://github.com/davidagraf/doi2bib22. &lt;a name=&quot;ref2&quot;&gt;&lt;/a&gt; https://arxiv.org/help/api3. &lt;a name=&quot;ref3&quot;&gt;&lt;/a&gt; https://github.com/mfcovington/pubmed-lookup/4. &lt;a name=&quot;ref4&quot;&gt;&lt;/a&gt; https://serpapi.com/google-scholar-cite-api5. &lt;a name=&quot;ref5&quot;&gt;&lt;/a&gt; https://www.bibtex.com/6. &lt;a name=&quot;ref6&quot;&gt;&lt;/a&gt; http://tug.ctan.org/info/biblatex-cheatsheet/biblatex-cheatsheet.pdf:point_right: [Back to TOC](#bib_lookup)</longdescription>
</pkgmetadata>