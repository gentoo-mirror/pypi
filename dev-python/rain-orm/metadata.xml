<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># rain-orma tiny orm frame# Installit's easy to install via pip```cmdpip install rain-orm```# Simple Exampleassume you have &quot;students&quot; table in &quot;student_management&quot; databasestudents| id  | name | password | class_id ||-----|------|----------|----------||     |      |          |          |```pythonimport rain_ormfrom rain_orm.column import Int, VarCharrain_orm.connect(host=&quot;localhost&quot;, port=3306, user=&quot;root&quot;, password=&quot;123456&quot;, database=&quot;student_management&quot;)class StudentModel(rain_orm.Table):    __table__ = &quot;students&quot;    __fields__ = {        &quot;id&quot;: Int(auto_increment=True, primary_key=True),        &quot;name&quot;: VarChar(30, unique=True),        &quot;password&quot;: VarChar(30),        &quot;class_id&quot;: Int(default=1)    }if __name__ == &quot;__main__&quot;:    rain_orm.Table.auto_migrate()    stu = StudentModel().where(&quot;id=?&quot;, 1).one()    print(stu)```result```cmdid: 1name: cgy&lt;&lt; StudentModel 1951412882544.table = students.fields = ['id', 'name', 'password', 'gender', 'origin', 'class_id'].instance = {id: 1,name: cgy,password: 123456,class_id: 1,}&gt;&gt;```# Basic Usageit's easy to use rain-orm1. import rain_orm2. connect to database3. define model class that inherits class rain_orm.Table4. define two attribute &quot;\_\_table__&quot; and &quot;\_\_fields__&quot;5. use rain-orm API## Import```pythonimport rain_orm```## Connect```pythonrain_orm.connect(host=&quot;you host&quot;, port=3306, user=&quot;root&quot;, password=&quot;your password&quot;, database=&quot;student_management&quot;)```## Define Modeleach data must have a unique &quot;id&quot;```pythonfrom rain_orm import Tablefrom rain_orm.column import Int, VarCharclass ClassModel(Table):    __table__ = &quot;classes&quot;    __fields__ = {        &quot;id&quot;: Int(primary_key=True, auto_increment=True),        &quot;name&quot;: VarChar(30)    }class StudentModel(Table):    __table__ = &quot;students&quot;    __fields__ = {        &quot;id&quot;: Int(primary_key=True, auto_increment=True),        &quot;name&quot;: VarChar(30, not_null=True),        &quot;class_id&quot;: Int(foreign_key=ClassModel.id)    }```## Auto Migrate```python# all subclasses that inherit rain_orm.Tablerain_orm.Table.auto_migrate() # create StudentModelrain_orm.Table.auto_migrate(StudentModel)```## CRUD Example### Read```python# student liststu_lst = StudentModel().all()# student whose id equals 1 with all fieldsstu1 = StudentModel().where(&quot;id = ?&quot;, 1).one()# student whose id equals 1 with all fieldsstu2 = StudentModel().where(&quot;id = 1&quot;).one()```### Create```pythonstu = StudentModel(name=&quot;name&quot;, password=&quot;123&quot;, class_id=1234)  # set studentok = stu.create()print(&quot;ok:&quot;, ok)print(stu)```result:```ok: True&lt;&lt; StudentModel 2449383681440.table = students.fields = ['id', 'name', 'password', 'class_id'].instance = {id: 30,name: jack,password: 123456,class_id: 1,}&gt;&gt;```### Updatethere are 2 ways to update data```pythonStudentModel().where(&quot;id = ?&quot;, 22).one()  # get student instance first# 1. set attribute (recommend)stu.name = &quot;your name&quot;# 2. call update methodsok = stu.update(&quot;name&quot;, &quot;your name&quot;)```### Delete```pythonStudentModel().where(&quot;id = ?&quot;, 22).one()  # get student instance firstok = stu.delete()  # call delete method```</longdescription>
</pkgmetadata>