<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Comment Parser[![Build Status](https://travis-ci.org/jeanralphaviles/comment_parser.svg?branch=master)](https://travis-ci.org/jeanralphaviles/comment_parser/branches)[![PyPI status](https://img.shields.io/pypi/status/comment_parser.svg)](https://pypi.python.org/pypi/comment_parser/)[![PyPI version shields.io](https://img.shields.io/pypi/v/comment_parser.svg)](https://pypi.python.org/pypi/comment_parser/)[![PyPI license](https://img.shields.io/pypi/l/comment_parser.svg)](https://pypi.python.org/pypi/comment_parser/)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/comment_parser.svg)](https://pypi.python.org/pypi/comment_parser/)Python module used to extract comments from source code files of various types.## Installation### Prerequisites* libmagic### Linux/Unix```shellsudo pip3 install comment_parser```### OSX and WindowsAdditionally, complete the special installation requirements for[python-magic](https://github.com/ahupp/python-magic).## UsageTo use, simply run:```python&gt;&gt;&gt; from comment_parser import comment_parser&gt;&gt;&gt; # Returns a list of comment_parser.parsers.common.Comments&gt;&gt;&gt; comment_parser.extract_comments('/path/to/source_file')&gt;&gt;&gt; # Or&gt;&gt;&gt; comment_parser.extract_comments_from_str('...')```### extract_comments signatures```pythondef extract_comments(filename, mime=None):    &quot;&quot;&quot;Extracts and returns the comments from the given source file.    Args:        filename: String name of the file to extract comments from.        mime: Optional MIME type for file (str). Note some MIME types accepted            don't comply with RFC2045. If not given, an attempt to deduce the            MIME type will occur.    Returns:        Python list of parsers.common.Comment in the order that they appear in            the source file.    Raises:        UnsupportedError: If filename is of an unsupported MIME type.    &quot;&quot;&quot;    passdef extract_comments_from_str(code, mime=None):    &quot;&quot;&quot;Extracts and returns comments from the given source string.    Args:        code: String containing code to extract comments from.        mime: Optional MIME type for code (str). Note some MIME types accepted            don't comply with RFC2045. If not given, an attempt to deduce the            MIME type will occur.    Returns:        Python list of parsers.common.Comment in the order that they appear in            the source code.    Raises:        UnsupportedError: If code is of an unsupported MIME type.    &quot;&quot;&quot;    pass```### Comments Interface```pythonclass Comment(object):    &quot;&quot;&quot;Represents comments found in source files.&quot;&quot;&quot;    def text(self):        &quot;&quot;&quot;Returns the comment's text.        Returns:            String        &quot;&quot;&quot;        pass    def line_number(self):        &quot;&quot;&quot;Returns the line number the comment was found on.        Returns:            Int        &quot;&quot;&quot;        pass    def is_multiline(self):        &quot;&quot;&quot;Returns whether this comment was a multiline comment.        Returns:            True if comment was a multiline comment, False if not.        &quot;&quot;&quot;       pass    def __str__(self):        pass    def __eq__(self, other):        pass```## Development### Running locallyStart python3 in the base of repository.```pythonfrom comment_parser import comment_parsercomment_parser.extract_comments('foo.c', mime='text/x-c')```### Running tests```shellpython3 setup.py test```### Running pylint```shellpylint comment_parser```### Running formatter```shellyapf -rip --style=yapf .```### Deploying to PyPi```shellpython3 setup.py sdisttwine upload dist/*```## Supported Programming Languages| Language    | Mime String              ||------------ |------------------------- || C           | text/x-c                 || C++/C#      | text/x-c++               || Go          | text/x-go                || HTML        | text/html                || Java        | text/x-java-source       || Javascript  | application/javascript   || Python      | text/x-python            || Python      | text/x-script.python     || Ruby        | text/x-ruby              || Shell       | text/x-shellscript       || XML         | text/xml                 |And more to come!*Check comment_parser.py for corresponding MIME types.*</longdescription>
</pkgmetadata>