<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: http://www.repostatus.org/badges/latest/active.svg    :target: http://www.repostatus.org/#active    :alt: Project Status: Active â€” The project has reached a stable, usable          state and is being actively developed... image:: https://travis-ci.com/jwodder/apachelogs.svg?branch=master    :target: https://travis-ci.com/jwodder/apachelogs.. image:: https://codecov.io/gh/jwodder/apachelogs/branch/master/graph/badge.svg    :target: https://codecov.io/gh/jwodder/apachelogs.. image:: https://img.shields.io/pypi/pyversions/apachelogs.svg    :target: https://pypi.org/project/apachelogs/.. image:: https://img.shields.io/github/license/jwodder/apachelogs.svg    :target: https://opensource.org/licenses/MIT    :alt: MIT License.. image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg    :target: https://saythanks.io/to/jwodder`GitHub &lt;https://github.com/jwodder/apachelogs&gt;`_| `PyPI &lt;https://pypi.org/project/apachelogs/&gt;`_| `Documentation &lt;https://apachelogs.readthedocs.io&gt;`_| `Issues &lt;https://github.com/jwodder/apachelogs/issues&gt;`_| `Changelog &lt;https://github.com/jwodder/apachelogs/blob/master/CHANGELOG.md&gt;`_``apachelogs`` parses Apache access log files.  Pass it a `log format string&lt;http://httpd.apache.org/docs/current/mod/mod_log_config.html&gt;`_ and get back aparser for logfile entries in that format.  ``apachelogs`` even takes care ofdecoding escape sequences and converting things like timestamps, integers, andbare hyphens to ``datetime`` values, ``int``\s, and ``None``\s.Installation============``apachelogs`` requires Python 3.5 or higher.  Just use `pip&lt;https://pip.pypa.io&gt;`_ for Python 3 (You have pip, right?) to install``apachelogs`` and its dependencies::    python3 -m pip install apachelogsExamples========Parse a single log entry::    &gt;&gt;&gt; from apachelogs import LogParser    &gt;&gt;&gt; parser = LogParser(&quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot;)    &gt;&gt;&gt; # The above log format is also available as the constant `apachelogs.COMBINED`.    &gt;&gt;&gt; entry = parser.parse('209.126.136.4 - - [01/Nov/2017:07:28:29 +0000] &quot;GET / HTTP/1.1&quot; 301 521 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36&quot;\n')    &gt;&gt;&gt; entry.remote_host    '209.126.136.4'    &gt;&gt;&gt; entry.request_time    datetime.datetime(2017, 11, 1, 7, 28, 29, tzinfo=datetime.timezone.utc)    &gt;&gt;&gt; entry.request_line    'GET / HTTP/1.1'    &gt;&gt;&gt; entry.final_status    301    &gt;&gt;&gt; entry.bytes_sent    521    &gt;&gt;&gt; entry.headers_in[&quot;Referer&quot;] is None    True    &gt;&gt;&gt; entry.headers_in[&quot;User-Agent&quot;]    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36'    &gt;&gt;&gt; # Log entry components can also be looked up by directive:    &gt;&gt;&gt; entry.directives[&quot;%r&quot;]    'GET / HTTP/1.1'    &gt;&gt;&gt; entry.directives[&quot;%&gt;s&quot;]    301    &gt;&gt;&gt; entry.directives[&quot;%t&quot;]    datetime.datetime(2017, 11, 1, 7, 28, 29, tzinfo=datetime.timezone.utc)Parse a file full of log entries::    &gt;&gt;&gt; with open('/var/log/apache2/access.log') as fp:  # doctest: +SKIP    ...     for entry in parser.parse_lines(fp):    ...         print(str(entry.request_time), entry.request_line)    ...    2019-01-01 12:34:56-05:00 GET / HTTP/1.1    2019-01-01 12:34:57-05:00 GET /favicon.ico HTTP/1.1    2019-01-01 12:34:57-05:00 GET /styles.css HTTP/1.1    # etc.</longdescription>
</pkgmetadata>