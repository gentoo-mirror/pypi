<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/munshigroup/kthread.svg?branch=master)](https://travis-ci.org/munshigroup/kthread)# kthreadKillable threads in Python! ## PurposeThe built-in `threading.Thread` class offers no simple solution to terminate a running thread.  `kthread.KThread` inherits `threading.Thread` and supplies methods named `exit()`, `kill()`, and `terminate()` that serve the same purpose: attempt to stop a thread if it's running.## How it worksKThread leverages the CPython API to raise a `SystemExit` exception on a given thread.  Assuming that the thread is not blocked by an operating system call (such as `sleep`, `accept`, or `recv`), the thread will forcefully quit.## DISCLAIMER**TERMINATING THREADS MAY INTRODUCE INSTABILITY OR OTHER UNDESIRABLE EFFECTS IN YOUR PROGRAMS.  THIS SOFTWARE COMES WITH ABSOLUTELY NO WARRANTY.  THE MUNSHI GROUP CANNOT BE HELD LIABLE FOR ANY DAMAGES, LOSSES, OR EXPENSES INCURRED BY YOU OR YOUR ORGANIZATION WHILE USING THIS SOFTWARE.**## InstallationTo install this package, run the following command:    $ pip install kthread## Usage    &gt;&gt;&gt; import time    &gt;&gt;&gt; import kthread    &gt;&gt;&gt; import sys    &gt;&gt;&gt; def func():    &gt;&gt;&gt;     try:    &gt;&gt;&gt;         while True:    &gt;&gt;&gt;             time.sleep(0.2)    &gt;&gt;&gt;     finally:    &gt;&gt;&gt;         sys.stdout.write(&quot;Greetings from Vice City!\n&quot;)    &gt;&gt;&gt;         sys.stdout.flush()    &gt;&gt;&gt;    &gt;&gt;&gt; t = kthread.KThread(target = func, name = &quot;KillableThread1&quot;)    &gt;&gt;&gt; t.start()    &gt;&gt;&gt; t.isAlive()    True    &gt;&gt;&gt; t.terminate()    Greetings from Vice City!    &gt;&gt;&gt; t.isAlive()    False    ## LicenseMIT</longdescription>
</pkgmetadata>