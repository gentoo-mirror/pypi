<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dynamics Web API Client[![Coverage Status][coverage-badge]][coverage][![GitHub Workflow Status][status-badge]][status][![PyPI][pypi-badge]][pypi][![GitHub][licence-badge]][licence][![GitHub Last Commit][repo-badge]][repo][![GitHub Issues][issues-badge]][issues][![Downloads][downloads-badge]][pypi][![Python Version][version-badge]][pypi]```shellpip install dynamics-client```---**Documentation**: [https://mrthearman.github.io/dynamics-client/](https://mrthearman.github.io/dynamics-client/)**Source Code**: [https://github.com/MrThearMan/dynamics-client/](https://github.com/MrThearMan/dynamics-client/)**Contributing**: [https://github.com/MrThearMan/dynamics-client/blob/main/CONTRIBUTING.md](https://github.com/MrThearMan/dynamics-client/blob/main/CONTRIBUTING.md)---Client for making Web API request from a Microsoft Dynamics 365 Database.You should also read the [Dynamics Web API Reference Docs][ref-docs]:## Basic usage:```pythonfrom dynamics import DynamicsClient, ftr# Init the client:client = DynamicsClient(...)### Example GET request:client.table = &quot;accounts&quot;# Get only these columns for the account.client.select = [&quot;accountid&quot;, &quot;name&quot;]# Filter to only the accounts that have been created on or after the# given ISO date string, AND that have 200 or more employees.client.filter = [    ftr.on_or_after(&quot;createdon&quot;, &quot;2020-01-01T00:00:00Z&quot;),    ftr.ge(&quot;numberofemployees&quot;, 200),]# Expand to the contacts (collection-values navigation property)# on the account that have 'gmail.com' in their email address 1 OR 2.# Get only the 'firstname', 'lastname' and 'mobilephone' columns for these contacts.# Also expand the primary contact (single-valued navigation property).# Get only the 'emailaddress1' column for the primary contact.client.expand = {    &quot;contact_customer_accounts&quot;: {        &quot;select&quot;: [&quot;firstname&quot;, &quot;lastname&quot;, &quot;mobilephone&quot;],        &quot;filter&quot;: {            ftr.contains(&quot;emailaddress1&quot;, &quot;gmail.com&quot;),            ftr.contains(&quot;emailaddress2&quot;, &quot;gmail.com&quot;),        }    },    &quot;primarycontactid&quot;: {        &quot;select&quot;: [&quot;emailaddress1&quot;],    },}result = client.get()# [#     {#         &quot;accountid&quot;: ...,#         &quot;name&quot;: ...,#         &quot;contact_customer_accounts&quot;: [#             {#                 &quot;contactid&quot;: ...,  # id field is always given#                 &quot;firstname&quot;: ...,#                 &quot;lastname&quot;: ...,#                 &quot;mobilephone&quot;: ...#             },#             ...#         ],#         &quot;primarycontactid&quot;: {#             &quot;contactid&quot;: ...,#             &quot;emailaddress1&quot;: ...#         }#     },#     ...# ]### Example POST request# IMPORTANT!!!client.reset_query()client.table = &quot;contacts&quot;# Get only these columns from the created contactclient.select = [&quot;firstname&quot;, &quot;lastname&quot;, &quot;emailaddress1&quot;]# The data to create the contact with. '@odata.bind' is used to link# the contact to the given navigation property.accountid = ...data = {    &quot;firstname&quot;: ...,    &quot;lastname&quot;: ...,    &quot;emailaddress1&quot;: ...,    &quot;parentcustomerid_account@odata.bind&quot;: f&quot;/accounts({accountid})&quot;}result = client.post(data=data)# {#     &quot;contactid&quot;: ...,#     &quot;firstname&quot;: ...,#     &quot;lastname&quot;: ...,#     &quot;emailaddress1&quot;: ...# }### Example PATCH requestclient.reset_query()client.table = &quot;contacts&quot;client.row_id = result[&quot;contactid&quot;]data = {    &quot;firstname&quot;: ...,    &quot;lastname&quot;: ...,}result = client.patch(data=data)# Return all rows on the updated contact,# since no select statement was given## {#     ...#     &quot;contactid&quot;: ...,#     &quot;firstname&quot;: ...,#     &quot;lastname&quot;: ...,#     ...# }### Example DELETE requestclient.reset_query()client.table = &quot;contacts&quot;client.row_id = result[&quot;contactid&quot;]client.delete()```[ref-docs]: https://docs.microsoft.com/en-us/powerapps/developer/data-platform/webapi/query-data-web-api[coverage-badge]: https://coveralls.io/repos/github/MrThearMan/dynamics-client/badge.svg?branch=main[status-badge]: https://img.shields.io/github/actions/workflow/status/MrThearMan/dynamics-client/test.yml?branch=main[pypi-badge]: https://img.shields.io/pypi/v/dynamics-client[licence-badge]: https://img.shields.io/github/license/MrThearMan/dynamics-client[repo-badge]: https://img.shields.io/github/last-commit/MrThearMan/dynamics-client[issues-badge]: https://img.shields.io/github/issues-raw/MrThearMan/dynamics-client[version-badge]: https://img.shields.io/pypi/pyversions/dynamics-client[downloads-badge]: https://img.shields.io/pypi/dm/dynamics-client[coverage]: https://coveralls.io/github/MrThearMan/dynamics-client?branch=main[status]: https://github.com/MrThearMan/dynamics-client/actions/workflows/test.yml[pypi]: https://pypi.org/project/dynamics-client[licence]: https://github.com/MrThearMan/dynamics-client/blob/main/LICENSE[repo]: https://github.com/MrThearMan/dynamics-client/commits/main[issues]: https://github.com/MrThearMan/dynamics-client/issues</longdescription>
</pkgmetadata>