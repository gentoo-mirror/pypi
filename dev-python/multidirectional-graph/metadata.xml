<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Multidirectional Graph[![PyPI version](https://badge.fury.io/py/multidirectional-graph.svg)](https://badge.fury.io/py/multidirectional-graph)[![codecov](https://codecov.io/gh/username/multidirectional-graph/branch/main/graph/badge.svg?token=abc123def456)](https://codecov.io/gh/username/multidirectional-graph)Multidirectional Graph is a Python package that allows you to easily create graphs with multiple evaluation criteria, such as good, neutral, and bad.## InstallationYou can install Multidirectional Graph using pip:```bashpip install multidirectional-graph```## UsageHere is an example of how to use Multidirectional Graph:```pythonfrom multidirectional_graph import MultidirectionalGraphdata = {    &quot;Leitura&quot;: {        &quot;categ 1A&quot;: 5,        &quot;categ 1B&quot;: 9,        &quot;categ 1C&quot;: 5,    },    &quot;Escrita&quot;: {        &quot;categ 2A&quot;: 2,        &quot;categ 2B&quot;: 4,        &quot;categ 2C&quot;: 9,        &quot;categ 2D&quot;: 3,    },    &quot;Nome extremamente grande\nque não cabe no espaço&quot;: {        &quot;categ 3A&quot;: 6,        &quot;categ 3B&quot;: 7,    },    &quot;Listening&quot;: {        &quot;categ 4A&quot;: 2,        &quot;categ 4B&quot;: 3,    },}added_data = {    &quot;categ 1A&quot;: 4,    &quot;categ 1B&quot;: 5,    &quot;categ 1C&quot;: 4,    &quot;categ 2A&quot;: 3,    &quot;categ 2B&quot;: 3,    &quot;categ 2C&quot;: 7,    &quot;categ 2D&quot;: 2,    &quot;categ 3A&quot;: 7,    &quot;categ 3B&quot;: 6,    &quot;categ 4A&quot;: 3,    &quot;categ 4B&quot;: 2,}graph = MultidirectionalGraph(    data,    tipo_avaliacao = &quot;Lingua Inglesa&quot;,    figsize=(5.5,15),    main_plot_color=&quot;#902020&quot;,    category_fontsize=12,    group_title_fontsize=10,)graph.add_values(added_data, label=&quot;Autoavaliação&quot;)fig = graph.plot()fig.savefig(&quot;images/teste.png&quot;, dpi=100, bbox_inches='tight')```![](images/teste.png)</longdescription>
</pkgmetadata>