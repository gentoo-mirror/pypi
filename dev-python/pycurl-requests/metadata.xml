<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PycURL Requests `&lt;pycurl://â˜¤&gt;`**PycURL Requests** is a [Requests](https://github.com/psf/requests)-compatible interface for[PycURL](https://github.com/pycurl/pycurl).[![pycurl-requests](https://circleci.com/gh/dcoles/pycurl-requests.svg?style=shield)](https://circleci.com/gh/dcoles/pycurl-requests)## Requirements- Python 3.6+- [PycURL](https://github.com/pycurl/pycurl)- [chardet](https://github.com/chardet/chardet)## InstallationLatest release via [`pip`](https://pip.pypa.io/):```bashpip install pycurl-requests [--user]```via Git:```bashgit clone https://github.com/dcoles/pycurl-requests.git; cd pycurl-requestspython3 setup.py install [--user]```## Quick-start```python&gt;&gt;&gt; import pycurl_requests as requests&gt;&gt;&gt; r = requests.get('https://api.github.com/repos/dcoles/pycurl-requests')&gt;&gt;&gt; r.status_code200&gt;&gt;&gt; r.headers['content-type']'application/json; charset=utf-8'&gt;&gt;&gt; r.encoding'utf-8'&gt;&gt;&gt; r.text'{\n  &quot;id&quot;: 236427187,\n...'&gt;&gt;&gt; data = r.json()&gt;&gt;&gt; data['name']'pycurl-requests'&gt;&gt;&gt; data['html_url']'https://github.com/dcoles/pycurl-requests'&gt;&gt;&gt; data['description']'A Requests-compatible interface for pycURL'```The library can also be used to run existing Python scripts that import the `requests` module.By running the script through the `pycurl_requests` helper, any use of the `requests` module willbe automatically redirected to `pycurl_requests`.```bashpython3 -m pycurl_requests -- script.py arg arg...```## `request` toolA basic `curl`-like command-line utility is included:```usage: request.py [-h] [-d DATA] [-H HEADER] [--json JSON] [-L] [-o OUTPUT]                  [-X REQUEST] [-v]                  urlA basic `curl`-like command-line HTTP utilitypositional arguments:  url                   URL of resource to connect tooptional arguments:  -h, --help            show this help message and exit  -d DATA, --data DATA  Add POST data  -H HEADER, --header HEADER                        Add custom request header (format: `Header: Value`)  --json JSON           Add JSON POST data  -L, --location        Follow redirects  -o OUTPUT, --output OUTPUT                        Write to file instead of stdout  -X REQUEST, --request REQUEST                        Request command to use (e.g. HTTP method)  -v, --verbose         Verbose logging```This can also be used with the [Requests](https://github.com/psf/requests) library if`PYCURLREQUESTS_REQUESTS` environment variable is set to a non-null value.## DocumentationThis library aims to be API compatible with [Requests](https://github.com/psf/requests),thus the [Requests documentation](https://requests.readthedocs.io/en/master/) should bemostly applicable.### AdaptersPycURL support is implemented as a [transport adapter](https://requests.readthedocs.io/en/latest/user/advanced/#transport-adapters).This means it's possible to use PycURL with the Requests library itself!```pythonimport pycurlimport requestsfrom pycurl_requests.adapters import PyCurlHttpAdapterwith requests.Session() as session:    curl = pycurl.Curl()    session.mount('https://', PyCurlHttpAdapter(curl))    session.mount('http://', PyCurlHttpAdapter(curl))    response = session.get('http://example.com')```### cURL optionsIt is possible customize cURL's behaviour using the `curl` attribute on a[`Session object`](https://requests.readthedocs.io/en/master/user/advanced/#session-objects).For example, to make a request without requesting the body:```pythonimport pycurlimport pycurl_requests as requestswith requests.Session() as session:    session.curl.setopt(pycurl.NOBODY, 1)    response = session.get('http://example.com')```See the [`pycurl.Curl` object](http://pycurl.io/docs/latest/curlobject.html) documentationfor all possible `curl` attribute methods.### cURL exceptionsAll [`pycurl.error` exceptions](http://pycurl.io/docs/latest/callbacks.html#error-reporting)are mapped to a [`requests.RequestException`](https://requests.readthedocs.io/en/master/api/#exceptions)(or one of its subclasses).For convenience, the original `pycurl.error` error message and[cURL error code](https://curl.haxx.se/libcurl/c/libcurl-errors.html) will be set on the exceptionobject as the `curl_message` and `curl_code` attributes.```pythonimport pycurl_requests as requeststry:    requests.get('http://connect_error')except requests.RequestException as e:    print('ERROR: {} (cURL error: {})'.format(e.curl_message, e.curl_code))```It is also possible to obtain the original `pycurl.error` using the `__cause__` attribute.### LoggingDetailed log records from `libcurl`, including informational text and HTTP headers, can be shownby setting the `curl` logger (or sub-loggers) to [`DEBUG` level](https://docs.python.org/3/library/logging.html#logging-levels):```pythonimport logginglogging.getLogger('curl').setLevel(logging.DEBUG)```Log records are split into dedicated sub-loggers for each type of record:- `curl.text` &amp;mdash; Informational text- `curl.header_in` &amp;mdash; Header data received from the peer- `curl.header_out` &amp;mdash; Header data sent to the peer## Known limitations- No support for reading [Cookies](https://requests.readthedocs.io/en/master/user/quickstart/#cookies)- No support for [client-side certificates](https://requests.readthedocs.io/en/master/user/advanced/#client-side-certificates)- No support for [proxies](https://requests.readthedocs.io/en/master/user/advanced/#proxies)- No support for [link headers](https://requests.readthedocs.io/en/master/user/advanced/#link-headers) (e.g. [`Response.links`](https://requests.readthedocs.io/en/master/api/#requests.Response.links))- No support for [sending multi-part encoded files](https://requests.readthedocs.io/en/master/user/advanced/#post-multiple-multipart-encoded-files)- Basic support for [`Session` objects](https://requests.readthedocs.io/en/master/user/advanced/#session-objects) (e.g. [`requests.Session`](https://requests.readthedocs.io/en/master/api/#requests.Session))## LicenseLicensed under the MIT License.</longdescription>
</pkgmetadata>