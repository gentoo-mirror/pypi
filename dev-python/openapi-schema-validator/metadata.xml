<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>************************openapi-schema-validator************************.. image:: https://img.shields.io/pypi/v/openapi-schema-validator.svg     :target: https://pypi.python.org/pypi/openapi-schema-validator.. image:: https://travis-ci.org/python-openapi/openapi-schema-validator.svg?branch=master     :target: https://travis-ci.org/python-openapi/openapi-schema-validator.. image:: https://img.shields.io/codecov/c/github/python-openapi/openapi-schema-validator/master.svg?style=flat     :target: https://codecov.io/github/python-openapi/openapi-schema-validator?branch=master.. image:: https://img.shields.io/pypi/pyversions/openapi-schema-validator.svg     :target: https://pypi.python.org/pypi/openapi-schema-validator.. image:: https://img.shields.io/pypi/format/openapi-schema-validator.svg     :target: https://pypi.python.org/pypi/openapi-schema-validator.. image:: https://img.shields.io/pypi/status/openapi-schema-validator.svg     :target: https://pypi.python.org/pypi/openapi-schema-validatorAbout#####Openapi-schema-validator is a Python library that validates schema against:* `OpenAPI Schema Specification v3.0 &lt;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject&gt;`__ which is an extended subset of the `JSON Schema Specification Wright Draft 00 &lt;http://json-schema.org/&gt;`__.* `OpenAPI Schema Specification v3.1 &lt;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#schemaObject&gt;`__ which is an extended superset of the `JSON Schema Specification Draft 2020-12 &lt;http://json-schema.org/&gt;`__.Documentation#############Check documentation to see more details about the features. All documentation is in the &quot;docs&quot; directory and online at `openapi-schema-validator.readthedocs.io &lt;https://openapi-schema-validator.readthedocs.io&gt;`__Installation############Recommended way (via pip):.. code-block:: console   pip install openapi-schema-validatorAlternatively you can download the code and install from the repository:.. code-block:: console   pip install -e git+https://github.com/python-openapi/openapi-schema-validator.git#egg=openapi_schema_validatorUsage#####To validate an OpenAPI v3.1 schema:.. code-block:: python   from openapi_schema_validator import validate   # A sample schema   schema = {       &quot;type&quot;: &quot;object&quot;,       &quot;required&quot;: [          &quot;name&quot;       ],       &quot;properties&quot;: {           &quot;name&quot;: {               &quot;type&quot;: &quot;string&quot;           },           &quot;age&quot;: {               &quot;type&quot;: [&quot;integer&quot;, &quot;null&quot;],               &quot;format&quot;: &quot;int32&quot;,               &quot;minimum&quot;: 0,           },           &quot;birth-date&quot;: {               &quot;type&quot;: &quot;string&quot;,               &quot;format&quot;: &quot;date&quot;,           },           &quot;address&quot;: {                &quot;type&quot;: 'array',                &quot;prefixItems&quot;: [                    { &quot;type&quot;: &quot;number&quot; },                    { &quot;type&quot;: &quot;string&quot; },                    { &quot;enum&quot;: [&quot;Street&quot;, &quot;Avenue&quot;, &quot;Boulevard&quot;] },                    { &quot;enum&quot;: [&quot;NW&quot;, &quot;NE&quot;, &quot;SW&quot;, &quot;SE&quot;] }                ],                &quot;items&quot;: False,            }       },       &quot;additionalProperties&quot;: False,   }   # If no exception is raised by validate(), the instance is valid.   validate({&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 23, &quot;address&quot;: [1600, &quot;Pennsylvania&quot;, &quot;Avenue&quot;]}, schema)   validate({&quot;name&quot;: &quot;John&quot;, &quot;city&quot;: &quot;London&quot;}, schema)   Traceback (most recent call last):       ...   ValidationError: Additional properties are not allowed ('city' was unexpected)By default, the latest OpenAPI schema syntax is expected.For more details read about `Validation &lt;https://openapi-schema-validator.readthedocs.io/en/latest/validation.html&gt;`__.Related projects################* `openapi-core &lt;https://github.com/python-openapi/openapi-core&gt;`__   Python library that adds client-side and server-side support for the OpenAPI.* `openapi-spec-validator &lt;https://github.com/python-openapi/openapi-spec-validator&gt;`__   Python library that validates OpenAPI Specs against the OpenAPI 2.0 (aka Swagger) and OpenAPI 3.0 specification</longdescription>
</pkgmetadata>