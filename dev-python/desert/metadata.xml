<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================Desert: DRY deserialization===============================Desert generates serialization schemas for ``dataclasses`` and ``attrs`` classes. Writingcode that's DRY (&quot;don't repeat yourself&quot;) helps avoid bugs and improve readability. Deserthelps you write code that's DRY.Installation============::    pip install desertor with `Poetry`_::   poetry add desertUsage=========..    start-basic-usageA simple example models two ``Person`` objects in a ``Car``... code-block:: python        from dataclasses import dataclass        # Or using attrs        # from attr import dataclass        from typing import Listimport desert        @dataclass        class Person:            name: str            age: int        @dataclass        class Car:            passengers: List[Person]        # Load some simple data types.        data = {'passengers': [{'name': 'Alice', 'age': 21}, {'name': 'Bob', 'age': 22}]}        # Create a schema for the Car class.        schema = desert.schema(Car)        # Load the data.        car = schema.load(data)        assert car == Car(passengers=[Person(name='Alice', age=21), Person(name='Bob', age=22)])..    end-basic-usageDocumentation=============https://desert.readthedocs.io/Limitations============String annotations and forward references inside of functions are not supported.Acknowledgements=================- This package began as an extension of marshmallow-dataclass_ to add support for attrs_... _Poetry: https://poetry.eustace.io.. _marshmallow-dataclass: https://pypi.org/project/marshmallow-dataclass/.. _attrs: http://www.attrs.org/2022.09.22 (2022-09-22)-----------------------Backward-incompatible Changes^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- Update all project dependencies and fix all deprecated warnings. Python 3.6  support was dropped to allow updating deprecated dependencies.  `#161 &lt;https://github.com/python-desert/desert/issues/161&gt;`_Changes^^^^^^^- It is now possible to use `type-variant generics`_ in your dataclasses, such as ``Sequence``  or ``MutableSequence`` instead of ``List``, ``Mapping`` instead of ``Dict``, etc.  This allows you to hide implementation details from users of your dataclasses. If a field  in your dataclass works just as fine with a tuple as a list, you no longer need to force  your users to pass in a ``list`` just to satisfy type checkers.  For example, by using ``Mapping`` or ``MutableMapping``, users can pass ``OrderedDict`` to  a ``Dict`` attribute without MyPy complaining.  .. code-block:: python      @dataclass      class OldWay:          str_list: List[str]          num_map: Dict[str, float]      # MyPy will reject this even though Marshmallow works just fine. If you use      # type-variant generics, MyPy will accept this code.      instance = OldClass([], collections.ChainMap(MY_DEFAULTS))      @dataclass      class NewWay:          str_list: List[str]  # Type-invariants still work          num_map: MutableMapping[str, float]  # Now generics do too  .. _type-variant generics: https://mypy.readthedocs.io/en/stable/generics.html    `#140 &lt;https://github.com/python-desert/desert/issues/140&gt;`_----2020.11.18 (2020-11-18)-----------------------Changes^^^^^^^- Schemas no longer copy non-field dataclass attributes. Thanks to @sveinse for report and test.  `#79 &lt;https://github.com/python-desert/desert/issues/79&gt;`_----2020.01.06 (2020-01-06)-----------------------Changes^^^^^^^- Additional metadata are supported in ib() and fields(). Thanks to @sveinse for reporting and testing.  `#28 &lt;https://github.com/python-desert/desert/issues/28&gt;`_----2020.01.05 (2020-01-05)-----------------------Changes^^^^^^^- Add support for attrs factories that take ``self`` (``attr.Factory(..., takes_self=True)``).  `#27 &lt;https://github.com/python-desert/desert/issues/27&gt;`_----2020.01.04 (2020-01-04)-----------------------Changes^^^^^^^- Add support for Tuple[int, ...] per https://docs.python.org/3/library/typing.html#typing.Tuple  `#16 &lt;https://github.com/python-desert/desert/issues/16&gt;`_ Thanks to @sveinse for reporting and testing.- Use module imports internally.  `#18 &lt;https://github.com/python-desert/desert/issues/18&gt;`_- Desert version only needs to be updated in _version.py  `#19 &lt;https://github.com/python-desert/desert/issues/19&gt;`_- Fix doctests.  `#20 &lt;https://github.com/python-desert/desert/issues/20&gt;`_----2020.01.03--------------Changes^^^^^^^^- ``Optional`` fields allow ``None``. `#11 &lt;https://github.com/python-desert/desert/issues/11&gt;`__. Thanks to @sveinse for reporting and testing.2019.12.18--------------Changes^^^^^^^- Improve error message for unknown generics.  `#10 &lt;https://github.com/python-desert/desert/pull/10&gt;`_2019.12.10--------------Changes^^^^^^^- Add ``UnknownType`` exception with better error message for types that should be generic.  `#8  &lt;https://github.com/python-desert/desert/issues/8&gt;`_2019.12.09--------------Changes^^^^^^^- Marshmallow schema ``Meta`` arguments are accepted, allowing exclusion of unknown fields and other options.  `#3  &lt;https://github.com/python-desert/desert/pull/3&gt;`_2019.11.06 (2019-11-06)-----------------------Changes^^^^^^^- Add twine and wheel development dependencies.  `#2 &lt;https://github.com/python-desert/desert/issues/2&gt;`_----2019.11.06 (2019-11-06)-----------------------Changes^^^^^^^- Switch to calverBackward-incompatible Changes^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- Non-optional fields without a default or factory now have `required=True` so raise ``marshmallow.exceptions.ValidationError`` when missing.  `#1 &lt;https://github.com/python-desert/desert/issues/1&gt;`_----0.1.0 (2019-06-22)------------------Changes^^^^^^^- First release on PyPI.---</longdescription>
</pkgmetadata>