<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pipster&lt;div align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/reynoldsnlp/pipster/main/images/pipster_138x250.jpg&quot; alt=&quot;Pipster logo&quot; width=&quot;138&quot;&gt;&lt;br/&gt;&lt;br/&gt;| | || --- | --- || CI/CD | [![CI - Test and Build](https://github.com/reynoldsnlp/pipster/actions/workflows/test_build_publish.yml/badge.svg)](https://github.com/reynoldsnlp/pipster/actions/workflows/test_build_publish.yml) || Package | [![PyPI - Version](https://img.shields.io/pypi/v/pipster.svg?logo=pypi&amp;label=PyPI&amp;logoColor=gold)](https://pypi.org/project/pipster/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/pipster.svg?color=blue&amp;label=Downloads&amp;logo=pypi&amp;logoColor=gold)](https://pypi.org/project/pipster/) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pipster.svg?logo=python&amp;label=Python&amp;logoColor=gold)](https://pypi.org/project/pipster/) || Meta | [![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch) [![linting - Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v0.json)](https://github.com/charliermarsh/ruff) [![code style - Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![types - Mypy](https://img.shields.io/badge/types-Mypy-blue.svg)](https://github.com/python/mypy) [![License - MIT](https://img.shields.io/badge/license-MIT-9400d3.svg)](https://spdx.org/licenses/) [![GitHub Sponsors](https://img.shields.io/github/sponsors/reynoldsnlp?logo=GitHub%20Sponsors&amp;style=social)](https://github.com/sponsors/reynoldsnlp) |&lt;/div&gt;## IntroInstall packages using `pip` from inside a python script or console:```python&gt;&gt;&gt; from pipster import install&gt;&gt;&gt; install(&quot;some_package&quot;)```This tool solves the age-old problem of `pip install`ing a package only to findthat you still can't import it because it was installed for the wronginterpreter. By installing from inside python, you ensure that it will beavailable to import from that instance of python.If you re-install, upgrade, or downgrade a package _after_ it has already beenimported, `pipster` will do its best to detect this and issue a warning thatPython should be restarted for changes to be available.```python&gt;&gt;&gt; from pipster import install&gt;&gt;&gt; import requests&gt;&gt;&gt; requests.__version__'2.27.0'&gt;&gt;&gt; install(&quot;requests&quot;, upgrade=True)...Successfully installed requests-2.28.2WARNING: The following modules were already loaded. Restart python to see changes:requests```**Note:** The developers of `pipster` hope that this tool will eventually beintegrated into `pip` so that this functionality becomes ubiquitous.  However,first `pipster` needs to be extensively tested and used in real life. Bysharing this tool with others, and reporting bugs/issues if they arise, you arehelping us achieve that goal.## InstallationTo install `pipster`, run the following in your terminal (you may need toreplace `python` with the name of the executable you use to run Python, such as`python3`, `python3.11`, etc.):```$ python -m pip install --user pipster```...and if that's not working, you can run this in a python script or console:```pythonimport subprocessimport syscmd = [sys.executable,  &quot;-m&quot;, &quot;pip&quot;, &quot;install&quot;, &quot;--user&quot;, &quot;pipster&quot;]subprocess.check_call(cmd)```## UsageThe `install()` function can be called in two ways.### 1. Copy-paste `pip install ...`If you give `install()` a single string that begins with `pip install`, then itwill run that exact command as if it were given at the command line.```pythoninstall(&quot;pip install some_package&quot;)`install(&quot;pip install --user --upgrade pkg1 pkg2 pkg3&quot;)```### 2. Python function APIYou can also pass any number of target packages along with keyword argumentscorresponding to command-line options for `pip install`. Note that the pythonkeyword arguments use `_` instead of `-`.The `pipster.install()` function does not validate which options are availablein the command line. If you give it arguments that are not valid command-lineoptions, then it will attempt to run `pip install` with those options, and`pip` will return an error.The [CLI optionsreference](https://github.com/reynoldsnlp/pipster/blob/main/cli_options.md)shows every possible command-line option and its corresponding expression as akeyword argument for `install()`.  The principles behind these correspondingexpressions are layed out in the following sections.#### Boolean optionsMost boolean commandline options are set by giving `&lt;option&gt;=True`.```pythoninstall(&quot;pkg&quot;, user=True)             # pip install --user pkginstall(&quot;pkg&quot;, &quot;pkg2&quot;, upgrade=True)  # pip install --upgrade pkg pkg2```Boolean commandline options that begin with `--no-`, such as `--no-color` areset by removing the `no-` prefix and using `&lt;option&gt;=False`.```pythoninstall(&quot;pkg&quot;, color=False)  # pip install --no-color pkginstall(&quot;pkg&quot;, deps=False)   # pip install --no-deps pkg```#### Key-value optionsUsually, key-value options are set using a string: `&lt;option&gt;=&quot;&lt;value&gt;&quot;`.```pythoninstall(r=&quot;requirements.txt&quot;)         # pip install -r requirements.txtinstall(&quot;pkg&quot;, python_version=&quot;3.8&quot;)  # pip install --python-version 3.8 pkg```However, some key-value options can be used multiple times. In these cases,the value given should be a list of strings: `&lt;option&gt;=[&quot;&lt;val1&gt;&quot;, &quot;&lt;val2&gt;&quot;]`.```pythoninstall(r=[&quot;reqs1.txt&quot;, &quot;reqs2.txt&quot;])  # pip install -r reqs1.txt -r reqs2.txt```#### Additive optionsSome commandline options are additive (notably `-q` and `-v`), and can be usedup to 3 times. These can be set using either an integer or `True`.```pythoninstall('pkg', v=True)  # pip install -v pkginstall('pkg', v=1)     # pip install -v pkginstall('pkg', v=2)     # pip install -vv pkginstall('pkg', v=3)     # pip install -vvv pkg```#### Omitting optionsAny option that is assigned the value `None` is omitted from the command. Thisfeature facilitates simpler logic in preparing keyword argumentsprogrammatically.```pythonuser = Noneif &lt;logical test&gt;:  user = Trueinstall('pkg', user=user)```## PipfilesPipfiles are ignored by `pipster`. If you use `pipster` from a directory thatcontains a Pipfile (or whose parent directories up to a depth of 3 contain aPipfile), then `pipster` will issue a warning that Pipfiles are ignored.</longdescription>
</pkgmetadata>