<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Typing Extensions[![Chat at https://gitter.im/python/typing](https://badges.gitter.im/python/typing.svg)](https://gitter.im/python/typing)[Documentation](https://typing-extensions.readthedocs.io/en/latest/#) â€“[PyPI](https://pypi.org/project/typing-extensions/)## OverviewThe `typing_extensions` module serves two related purposes:- Enable use of new type system features on older Python versions. For example,  `typing.TypeGuard` is new in Python 3.10, but `typing_extensions` allows  users on previous Python versions to use it too.- Enable experimentation with new type system PEPs before they are accepted and  added to the `typing` module.`typing_extensions` is treated specially by static type checkers such asmypy and pyright. Objects defined in `typing_extensions` are treated the sameway as equivalent forms in `typing`.`typing_extensions` uses[Semantic Versioning](https://semver.org/). Themajor version will be incremented only for backwards-incompatible changes.Therefore, it's safe to dependon `typing_extensions` like this: `typing_extensions &gt;=x.y, &lt;(x+1)`,where `x.y` is the first version that includes all features you need.## Included itemsSee [the documentation](https://typing-extensions.readthedocs.io/en/latest/#) for acomplete listing of module contents.## ContributingSee [CONTRIBUTING.md](https://github.com/python/typing_extensions/blob/main/CONTRIBUTING.md)for how to contribute to `typing_extensions`.</longdescription>
</pkgmetadata>