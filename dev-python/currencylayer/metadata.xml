<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>currencylayer=============.. image:: https://img.shields.io/pypi/v/currencylayer.svg:target: https://pypi.python.org/pypi/currencylayer    :alt: Latest PyPI version        Python API client for currencylayer. This library supports all API access provide by currencylayer. Check https://currencylayer.com/documentation for more info.        This package is compatible with Python 2.7, 3.0 to 3.5Basic Use---------To use currencylayer, you must first create a `Client` instance,passing the access key id you obtained when you registeredwith currencylayer:.. code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.currencies()    e.g response        {            &quot;terms&quot;: &quot;https://currencylayer.com/terms&quot;,            &quot;privacy&quot;: &quot;https://currencylayer.com/privacy&quot;,            &quot;timestamp&quot;: 1430401802,            &quot;source&quot;: &quot;USD&quot;,            &quot;quotes&quot;: {            &quot;USDAED&quot;: 3.672982,            &quot;USDAFN&quot;: 57.8936,             [...]             }        }Live Rates---------To get live rates, Call live_rates method and pass optional currency.. code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.live_rates(base_currency='GBP')    e.g response        {            &quot;success&quot;: true,            &quot;terms&quot;: &quot;https://currencylayer.com/terms&quot;,            &quot;privacy&quot;: &quot;https://currencylayer.com/privacy&quot;,            &quot;timestamp&quot;: 1430068515,            &quot;source&quot;: &quot;GBP&quot;,            &quot;quotes&quot;: {            &quot;GBPAED&quot;: 5.578448,            &quot;GBPAFN&quot;: 87.869413,            &quot;GBPALL&quot;: 196.414724,            &quot;GBPAMD&quot;: 719.087298,            &quot;GBPANG&quot;: 2.717836,            &quot;GBPAOA&quot;: 165.601846,            &quot;GBPARS&quot;: 13.514458,            &quot;GBPAUD&quot;: 1.941526,            [...]            }        }Live Rates for Specific Currencies---------To get live rates, for specific currencies Call live_rates_for method and pass optional array of currencies e.g ['EUR', 'GBP', 'AED'] and and optional base currency.. code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.live_rates_for(currencies=['AUD','CHF','EUR','GBP','PLN'], base_currency='USD')    e.g response        {            &quot;success&quot;: true,            &quot;terms&quot;: &quot;https://currencylayer.com/terms&quot;,            &quot;privacy&quot;: &quot;https://currencylayer.com/privacy&quot;,            &quot;timestamp&quot;: 1430068515,            &quot;source&quot;: &quot;USD&quot;,            &quot;quotes&quot;: {            &quot;USDAUD&quot;: 1.278384,            &quot;USDCHF&quot;: 0.953975,            &quot;USDEUR&quot;: 0.919677,            &quot;USDGBP&quot;: 0.658443,            &quot;USDPLN&quot;: 3.713873            }        }Historical Rates---------To get historical rates, Call historical method and pass date and currency. If no date or currency is provided current date and USD is used. Date format required is YEAR-MONTH-DAY.. code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.historical(date='2005-02-01', base_currency='USD')    e.g response        {          &quot;success&quot;: true,          &quot;terms&quot;: &quot;https://currencylayer.com/terms&quot;,          &quot;privacy&quot;: &quot;https://currencylayer.com/privacy&quot;,          &quot;historical&quot;: true,          &quot;date&quot;: &quot;2005-02-01&quot;,          &quot;timestamp&quot;: 1107302399,          &quot;source&quot;: &quot;USD&quot;,          &quot;quotes&quot;: {            &quot;USDAED&quot;: 3.67266,            &quot;USDALL&quot;: 96.848753,            &quot;USDAMD&quot;: 475.798297,            &quot;USDANG&quot;: 1.790403,            &quot;USDARS&quot;: 2.918969,            &quot;USDAUD&quot;: 1.293878,            [...]          }        }Currency Conversion---------To convert rate from one currency to another, Call convert method and pass three required parameters. from_currency, to_currency, amount and optional date... code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.convert(from_currency='USD', to_currency='GBP', amount=10)    e.g response        {          &quot;success&quot;: true,          &quot;terms&quot;: &quot;https://currencylayer.com/terms&quot;,          &quot;privacy&quot;: &quot;https://currencylayer.com/privacy&quot;,          &quot;query&quot;: {            &quot;from&quot;: &quot;USD&quot;,            &quot;to&quot;: &quot;GBP&quot;,            &quot;amount&quot;: 10          },          &quot;info&quot;: {            &quot;timestamp&quot;: 1430068515,            &quot;quote&quot;: 0.658443          },          &quot;result&quot;: 6.58443        }Time-Frame Queries---------To request historical exchange rates for a time-period of your choice call timeframe function pass three required parameters. start_date, end_date, currencies which must be a list  and optional date... code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.timeframe(start_date='2010-03-01', end_date='2010-04-01', currencies=['USD', 'GBP', 'EUR'])    e.g response        {          &quot;success&quot;: true,          &quot;terms&quot;: &quot;https://currencylayer.com/terms&quot;,          &quot;privacy&quot;: &quot;https://currencylayer.com/privacy&quot;,          &quot;timeframe&quot;: true,          &quot;start_date&quot;: &quot;2010-03-01&quot;,          &quot;end_date&quot;: &quot;2010-04-01&quot;,          &quot;source&quot;: &quot;USD&quot;,          &quot;quotes&quot;: {            &quot;2010-03-01&quot;: {              &quot;USDUSD&quot;: 1,              &quot;USDGBP&quot;: 0.668525,              &quot;USDEUR&quot;: 0.738541            },            &quot;2010-03-02&quot;: {              &quot;USDUSD&quot;: 1,              &quot;USDGBP&quot;: 0.668827,              &quot;USDEUR&quot;: 0.736145            },            [...]          }        }Currency-Change Queries---------To request the change (both margin and percentage) of one or more currencies, relative to a Source Currency, within a specific time-frame (optional).Call change_queries and pass three required parameters. start_date, end_date, currencies which must be a list and optional base_currency.. code:: python    import currencylayer    exchange_rate = currencylayer.Client(access_key=YOUR_ACCESS_KEY)    exchange_rate.change_queries(start_date='2010-03-01', end_date='2010-04-01', currencies=['AUD','EUR','MXN'])    e.g response        {          &quot;success&quot;:true,          &quot;terms&quot;:&quot;https:\/\/currencylayer.com\/terms&quot;,          &quot;privacy&quot;:&quot;https:\/\/currencylayer.com\/privacy&quot;,          &quot;change&quot;:true,          &quot;start_date&quot;:&quot;2005-01-01&quot;,          &quot;end_date&quot;:&quot;2010-01-01&quot;,          &quot;source&quot;:&quot;USD&quot;,          &quot;quotes&quot;:{            &quot;USDAUD&quot;:{              &quot;start_rate&quot;:1.28124,              &quot;end_rate&quot;:1.108613,              &quot;change&quot;:-0.1726,              &quot;change_pct&quot;:-13.4734            },            &quot;USDEUR&quot;:{              &quot;start_rate&quot;:0.73618,              &quot;end_rate&quot;:0.697257,              &quot;change&quot;:-0.0389,              &quot;change_pct&quot;:-5.2872            },            &quot;USDMXN&quot;:{              &quot;start_rate&quot;:11.149366,              &quot;end_rate&quot;:13.108761,              &quot;change&quot;:1.9594,              &quot;change_pct&quot;:17.574            }          }        }Unit Test---------To run unit test:.. code:: python    python test.pyInstallation============Install the latest release with:::    pip install currencylayerCompatibility-------------Python 2.7, 3.0 to 3.5Authors-------`currencylayer` was written by `Said Ali &lt;said.ali@msn.com&gt;`_.</longdescription>
</pkgmetadata>