<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>bunch=====Bunch is a dictionary that supports attribute-style access, a la JavaScript.&gt;&gt;&gt; b = Bunch()&gt;&gt;&gt; b.hello = 'world'&gt;&gt;&gt; b.hello'world'&gt;&gt;&gt; b['hello'] += &quot;!&quot;&gt;&gt;&gt; b.hello'world!'&gt;&gt;&gt; b.foo = Bunch(lol=True)&gt;&gt;&gt; b.foo.lolTrue&gt;&gt;&gt; b.foo is b['foo']TrueDictionary Methods------------------A Bunch is a subclass of ``dict``; it supports all the methods a ``dict`` does:&gt;&gt;&gt; b.keys()['foo', 'hello']Including ``update()``:&gt;&gt;&gt; b.update({ 'ponies': 'are pretty!' }, hello=42)&gt;&gt;&gt; print repr(b)Bunch(foo=Bunch(lol=True), hello=42, ponies='are pretty!')As well as iteration:&gt;&gt;&gt; [ (k,b[k]) for k in b ][('ponies', 'are pretty!'), ('foo', Bunch(lol=True)), ('hello', 42)]And &quot;splats&quot;:&gt;&gt;&gt; &quot;The {knights} who say {ni}!&quot;.format(**Bunch(knights='lolcats', ni='can haz'))'The lolcats who say can haz!'Serialization-------------Bunches happily and transparently serialize to JSON and YAML.&gt;&gt;&gt; b = Bunch(foo=Bunch(lol=True), hello=42, ponies='are pretty!')&gt;&gt;&gt; import json&gt;&gt;&gt; json.dumps(b)'{&quot;ponies&quot;: &quot;are pretty!&quot;, &quot;foo&quot;: {&quot;lol&quot;: true}, &quot;hello&quot;: 42}'If JSON support is present (``json`` or ``simplejson``), ``Bunch`` will have a ``toJSON()`` method which returns the object as a JSON string.If you have PyYAML_ installed, Bunch attempts to register itself with the various YAML Representers so that Bunches can be transparently dumped and loaded.&gt;&gt;&gt; b = Bunch(foo=Bunch(lol=True), hello=42, ponies='are pretty!')&gt;&gt;&gt; import yaml&gt;&gt;&gt; yaml.dump(b)'!bunch.Bunch\nfoo: !bunch.Bunch {lol: true}\nhello: 42\nponies: are pretty!\n'&gt;&gt;&gt; yaml.safe_dump(b)'foo: {lol: true}\nhello: 42\nponies: are pretty!\n'In addition, Bunch instances will have a ``toYAML()`` method that returns the YAML string using ``yaml.safe_dump()``. This method also replaces ``__str__`` if present, as I find it far more readable. You can revert back to Python's default use of ``__repr__`` with a simple assignment: ``Bunch.__str__ = Bunch.__repr__``. The Bunch class will also have a static method ``Bunch.fromYAML()``, which loads a Bunch out of a YAML string.Finally, Bunch converts easily and recursively to (``unbunchify()``, ``Bunch.toDict()``) and from (``bunchify()``, ``Bunch.fromDict()``) a normal ``dict``, making it easy to cleanly serialize them in other formats.Miscellaneous-------------* It is safe to ``import *`` from this module. You'll get: ``Bunch``, ``bunchify``, and ``unbunchify``.* Ample doctests::    $ python -m bunch.test -vFeedback--------Open a ticket at http://github.com/dsc/bunch or send me an email at dsc@less.ly ... _PyYAML: http://pyyaml.org/wiki/PyYAML</longdescription>
</pkgmetadata>