<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>itunes-iap v2~~~~~~~~~~~~~Python 2 &amp; 3 compatible! Even with `asyncio` support!.. image:: https://travis-ci.org/youknowone/itunes-iap.svg?branch=master    :target: https://travis-ci.org/youknowone/itunes-iap.. image:: https://coveralls.io/repos/github/youknowone/itunes-iap/badge.svg?branch=master    :target: https://coveralls.io/github/youknowone/itunes-iap?branch=master- Source code: `&lt;https://github.com/youknowone/itunes-iap&gt;`_- Documentation: `&lt;http://itunes-iap.readthedocs.io/&gt;`_- Distribution: `&lt;https://pypi.python.org/pypi/itunes-iap/&gt;`_Quickstart----------Create request to create a request to itunes verifying api... sourcecode:: python   &gt;&gt;&gt; import itunesiap   &gt;&gt;&gt; try:   &gt;&gt;&gt;     response = itunesiap.verify(raw_data)  # base64-encoded data   &gt;&gt;&gt; except itunesiap.exc.InvalidReceipt as e:   &gt;&gt;&gt;     print('invalid receipt')   &gt;&gt;&gt; print response.receipt.last_in_app.product_id  # other values are also available as property!The common attributes are:    `product_id`, `original_transaction_id` and `quantity`.See the full document in:    - `itunesiap.verify`: The verifying function.    - `itunesiap.receipt.Receipt`: The receipt object.asyncio-------.. sourcecode:: python   &gt;&gt;&gt; import itunesiap   &gt;&gt;&gt; response = await itunesiap.aioverify(raw_data)  # verify -&gt; aioverifyThe other parts are the same.See the full document in:    - `itunesiap.aioverify`: The verifying function.Installation------------PyPI is the recommended way... sourcecode:: shell    $ pip install itunes-iapTo browse versions and tarballs, visit:    `&lt;https://pypi.python.org/pypi/itunes-iap/&gt;`_Apple in-review mode--------------------In review mode, your actual users who use older versions want to verify inproduction server but the reviewers in Apple office want to verify in sandboxserver.Note: The default env is `production` mode which doesn't allow any sandboxverifications.You can change the verifying mode by specifying `env`... sourcecode:: python    &gt;&gt;&gt; # review mode    &gt;&gt;&gt; itunesiap.verify(raw_data, env=itunesiap.env.review)Note for v1 users-----------------There was breaking changes between v1 and v2 APIs.- Specify version `0.6.6` for latest v1 API when you don't need new APIs.- Or use `import itunesiap.legacy as itunesiap` instead of `import itunesiap`. (`from itunesiap import xxx` to `from itunesiap.legacy import xxx`)Contributors------------See https://github.com/youknowone/itunes-iap/graphs/contributors</longdescription>
</pkgmetadata>