<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python: throwsSmall but simple library providing a function decorator similar to Kotlins *@throws(...)*decorator with the small difference that multiple exceptions or errors can be combined in just onesingle annotation. Should maily used for documentation and debugging purposes.## InstallationInstallation is possible using the Python *pip* command line tool. For you the command to installthis library may look like this:```bashpip3 install throws```## UsageTo use the *@throw* decorator simply place it before the function declaration providing everypossible exception raised by the function. For a quick example see below:```pythonfrom throws import throws@throws(IOError, ValueError)def check_version(version_file: str) -&gt; bool:    with open(version_file, &quot;r&quot;, encoding = &quot;utf-8&quot;) as vf:        if (float(vf.read() &gt; 1.0):            return true        return false```The library provides two Exceptions by itself, the *EmptyListException* and the*InvalidRaisedException*. The first one is raised when there are no parameters provided to*@throw* and the function decorated is run. The second one occours when the function raises anexception which is not provided to the decorator, providing the developer with feedback that hemight have forgotten about handling this specific exception!## Uploading a new versionTo create and upload a new version to PyPI use the following commands:```bash# 1) Check for correctnesspython3 setup.py check# 2) Create distributable filespython3 setup.py sdist bdist_wheel# 3) Check distributable filespython3 -m twine check dist/*# 4) Upload distributable filespython3 -m twine upload dist/*```## LinksLibrary at the Python Package Index (PyPI): https://pypi.org/project/throws/</longdescription>
</pkgmetadata>