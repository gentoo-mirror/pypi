<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># csv-diff[![PyPI](https://img.shields.io/pypi/v/csv-diff.svg)](https://pypi.org/project/csv-diff/)[![Changelog](https://img.shields.io/github/v/release/simonw/csv-diff?include_prereleases&amp;label=changelog)](https://github.com/simonw/csv-diff/releases)[![Tests](https://github.com/simonw/csv-diff/workflows/Test/badge.svg)](https://github.com/simonw/csv-diff/actions?query=workflow%3ATest)[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/csv-diff/blob/main/LICENSE)Tool for viewing the difference between two CSV, TSV or JSON files. See [Generating a commit log for San Franciscoâ€™s official list of trees](https://simonwillison.net/2019/Mar/13/tree-history/) (and the [sf-tree-history repo commit log](https://github.com/simonw/sf-tree-history/commits)) for background information on this project.## Installation    pip install csv-diff## UsageConsider two CSV files:`one.csv`    id,name,age    1,Cleo,4    2,Pancakes,2`two.csv`    id,name,age    1,Cleo,5    3,Bailey,1`csv-diff` can show a human-readable summary of differences between the files:    $ csv-diff one.csv two.csv --key=id    1 row changed, 1 row added, 1 row removed    1 row changed      Row 1        age: &quot;4&quot; =&gt; &quot;5&quot;    1 row added      id: 3      name: Bailey      age: 1    1 row removed      id: 2      name: Pancakes      age: 2The `--key=id` option means that the `id` column should be treated as the unique key, to identify which records have changed.The tool will automatically detect if your files are comma- or tab-separated. You can over-ride this automatic detection and force the tool to use a specific format using `--format=tsv` or `--format=csv`.You can also feed it JSON files, provided they are a JSON array of objects where each object has the same keys. Use `--format=json` if your input files are JSON.Use `--show-unchanged` to include full details of the unchanged values for rows with at least one change in the diff output:    % csv-diff one.csv two.csv --key=id --show-unchanged    1 row changed      id: 1        age: &quot;4&quot; =&gt; &quot;5&quot;        Unchanged:          name: &quot;Cleo&quot;You can use the `--json` option to get a machine-readable difference:    $ csv-diff one.csv two.csv --key=id --json    {        &quot;added&quot;: [            {                &quot;id&quot;: &quot;3&quot;,                &quot;name&quot;: &quot;Bailey&quot;,                &quot;age&quot;: &quot;1&quot;            }        ],        &quot;removed&quot;: [            {                &quot;id&quot;: &quot;2&quot;,                &quot;name&quot;: &quot;Pancakes&quot;,                &quot;age&quot;: &quot;2&quot;            }        ],        &quot;changed&quot;: [            {                &quot;key&quot;: &quot;1&quot;,                &quot;changes&quot;: {                    &quot;age&quot;: [                        &quot;4&quot;,                        &quot;5&quot;                    ]                }            }        ],        &quot;columns_added&quot;: [],        &quot;columns_removed&quot;: []    }## As a Python libraryYou can also import the Python library into your own code like so:    from csv_diff import load_csv, compare    diff = compare(        load_csv(open(&quot;one.csv&quot;), key=&quot;id&quot;),        load_csv(open(&quot;two.csv&quot;), key=&quot;id&quot;)    )`diff` will now contain the same data structure as the output in the `--json` example above.If the columns in the CSV have changed, those added or removed columns will be ignored when calculating changes made to specific rows.</longdescription>
</pkgmetadata>