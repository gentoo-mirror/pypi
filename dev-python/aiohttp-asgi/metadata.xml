<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aiohttp-asgi============[![PyPI - License](https://img.shields.io/pypi/l/aiohttp-asgi)](https://pypi.org/project/aiohttp-asgi) [![Wheel](https://img.shields.io/pypi/wheel/aiohttp-asgi)](https://pypi.org/project/aiohttp-asgi) [![PyPI](https://img.shields.io/pypi/v/aiohttp-asgi)](https://pypi.org/project/aiohttp-asgi) [![PyPI](https://img.shields.io/pypi/pyversions/aiohttp-asgi)](https://pypi.org/project/aiohttp-asgi) [![Coverage Status](https://coveralls.io/repos/github/mosquito/aiohttp-asgi/badge.svg?branch=master)](https://coveralls.io/github/mosquito/aiohttp-asgi?branch=master) ![tox](https://github.com/mosquito/aiohttp-asgi/workflows/tox/badge.svg?branch=master)This module provides a way to use any ASGI compatible frameworks and aiohttp together.Example-------```pythonfrom aiohttp import webfrom fastapi import FastAPIfrom starlette.requests import Request as ASGIRequestfrom aiohttp_asgi import ASGIResourceasgi_app = FastAPI()@asgi_app.get(&quot;/asgi&quot;)async def root(request: ASGIRequest):    return {        &quot;message&quot;: &quot;Hello World&quot;,        &quot;root_path&quot;: request.scope.get(&quot;root_path&quot;)    }aiohttp_app = web.Application()# Create ASGIResource which handle# any request startswith &quot;/asgi&quot;asgi_resource = ASGIResource(asgi_app, root_path=&quot;/asgi&quot;)# Register resourceaiohttp_app.router.register_resource(asgi_resource)# Mount startup and shutdown events from aiohttp to ASGI appasgi_resource.lifespan_mount(aiohttp_app)# Start the applicationweb.run_app(aiohttp_app)```Installation------------```bashpip install aiohttp-asgi```ASGI HTTP server----------------Command line tool for starting aiohttp web server with ASGI app.#### ExampleCreate the `test_app.py````pythonfrom starlette.applications import Starlettefrom starlette.responses import JSONResponsefrom starlette.routing import Routeasync def homepage(request):    return JSONResponse({'hello': 'world'})routes = [    Route(&quot;/&quot;, endpoint=homepage)]application = Starlette(debug=True, routes=routes)```and run the `test_app.py` with `aiohttp-asgi````bashaiohttp-asgi \    --address &quot;[::1]&quot; \    --port 8080 \    test_app:application```alternatively using `python -m````bashpython -m aiohttp_asgi \    --address &quot;[::1]&quot; \    --port 8080 \    test_app:application```</longdescription>
</pkgmetadata>