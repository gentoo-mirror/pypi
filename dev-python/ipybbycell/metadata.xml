<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ipybbycell[![Build Status](https://github.com/boyuai/ipybbycell/workflows/Build/badge.svg)](https://github.com/boyuai/ipybbycell/actions)[![codecov](https://codecov.io/gh/boyuai/ipybbycell/branch/master/graph/badge.svg)](https://codecov.io/gh/boyuai/ipybbycell)BBY Cell Extension## InstallationYou can install using `pip` :```bashgit clone git@github.com:boyuai/ipybbycell.gitcd ipybbycellpip install &quot;.[test, examples]&quot;```If you are using Jupyter Notebook 5.2 or earlier, you may also need to enablethe nbextension:```bashjupyter nbextension enable --py [--sys-prefix|--user|--system] ipybbycell```## Development InstallationCreate a dev environment:```bashgit clone git@github.com:boyuai/ipybbycell.gitcd ipybbycellpython3 -m venv venvsource venv/bin/activate```Install the python. This will also build the TS package.```bashpip install -e &quot;.[test, examples]&quot;```When developing your extensions, you need to manually enable your extensions with thenotebook / lab frontend.For classic notebook, you need to run:```jupyter nbextension install --sys-prefix --symlink --overwrite --py ipybbycelljupyter nbextension enable --sys-prefix --py ipybbycell```Note that the `--symlink` flag doesn't work on Windows, so you will here have to runthe `install` command every time that you rebuild your extension. For certain installationsyou might also need another flag instead of `--sys-prefix` , but we won't cover the meaningof those flags here.### How to see your changes#### Typescript:```bash# Watch the source directory in one terminal, automatically rebuilding when neededyarn run watch# Run Jupyter Notebook in another terminaljupyter notebook```After a change wait for the build to finish and then refresh your browser and the changes should take effect.#### Python:If you make a change to the python code then you will need to restart the notebook kernel to have it take effect.## Releasing your initial packages:* Add tests* Ensure tests pass locally and on CI. Check that the coverage is reasonable.* Make a release commit, where you remove the `, 'dev'` entry in `_version.py`.&lt;!-- * Update the version in `package.json`* Relase the npm packages:  ```bash  npm login  npm publish  ``` --&gt;* Bundle the python package: `python setup.py sdist bdist_wheel`* Publish the package to PyPI:```bash  python setup.py sdist bdist_wheel  pip install twine  twine upload dist/ipybbycell*  ```&lt;!-- * Tag the release commit (`git tag &lt;python package version identifier&gt;`)* Update the version in `_version.py`, and put it back to dev (e.g. 0.1.0 -&gt; 0.2.0.dev).  Update the versions of the npm packages (without publishing).* Commit the changes.* `git push` and `git push --tags`. --&gt;</longdescription>
</pkgmetadata>