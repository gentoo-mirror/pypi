<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Vedro Allure Reporter[![Codecov](https://img.shields.io/codecov/c/github/vedro-universe/vedro-allure-reporter/master.svg?style=flat-square)](https://codecov.io/gh/vedro-universe/vedro-allure-reporter)[![PyPI](https://img.shields.io/pypi/v/vedro-allure-reporter.svg?style=flat-square)](https://pypi.python.org/pypi/vedro-allure-reporter/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/vedro-allure-reporter?style=flat-square)](https://pypi.python.org/pypi/vedro-allure-reporter/)[![Python Version](https://img.shields.io/pypi/pyversions/vedro-allure-reporter.svg?style=flat-square)](https://pypi.python.org/pypi/vedro-allure-reporter/)[Allure](https://docs.qameta.io/allure/) reporter for [Vedro](https://vedro.io/) framework## Installation### 1. Install package```shell$ pip3 install vedro-allure-reporter```### 2. Enable plugin```python# ./vedro.cfg.pyimport vedroimport vedro_allure_reporter as allure_reporterclass Config(vedro.Config):    class Plugins(vedro.Config.Plugins):        class AllureReporter(allure_reporter.AllureReporter):            enabled = True```## Usage### Run tests```shell$ vedro run -r allure --allure-report-dir ./allure_reports```### Generate report via [Allure command-line tool](https://docs.qameta.io/allure/#_installing_a_commandline)```shell$ allure serve ./allure_reports```### Upload report to [Allure TestOps](https://docs.qameta.io/allure-testops/)```shell$ export ALLURE_ENDPOINT=&lt;endpoint&gt;$ export ALLURE_PROJECT_ID=&lt;project_id&gt;$ export ALLURE_TOKEN=&lt;token&gt;$ export LAUNCH_ID=`allurectl launch create --launch-name test --no-header --format ID | tail -n1`$ allurectl upload ./allure_reports --launch-id $LAUNCH_ID$ allurectl launch close $LAUNCH_ID```Docs â€” https://docs.qameta.io/allure-testops/quickstart/qa-auto/## Documentation### Custom Global LabelsGlobal labels will be added to each scenario```python# ./vedro.cfg.pyimport vedroimport vedro_allure_reporter as allure_reporterfrom vedro_allure_reporter import AllureLabelclass Config(vedro.Config):    class Plugins(vedro.Config.Plugins):        class AllureReporter(allure_reporter.AllureReporter):            enabled = True            labels = [                AllureLabel(&quot;custom&quot;, &quot;value&quot;)            ]```### Custom Scenario LabelsScenario labels will be added to specific scenario```python# ./scenarios/sign_up_user.pyimport vedrofrom vedro_allure_reporter import allure_labels, Story, AllureLabel@allure_labels(Story(&quot;Sign Up&quot;), AllureLabel(&quot;custom&quot;, &quot;value&quot;))class Scenario(vedro.Scenario):    subject = &quot;sign up user via email&quot;```</longdescription>
</pkgmetadata>