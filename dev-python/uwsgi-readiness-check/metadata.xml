<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># uwsgi-readiness-checkReadiness check for uwsgi using its stats socketUse this check to mark a pod running `uwsgi` as `NotReady` whenever the uwsgi queue crosses a threshold.This will allow uwsgi to finish processing requests in its queue before Kubernetes sends more traffic to it # Local Development / TestingBecause the readiness check needs to run as part of a pod, in order to have functional test we deploya small python+uwsgi application that sleeps for a few seconds + a second python &quot;client&quot; script thatmakes requests. Since the application sleeps upon a request and new requests are constantly being sent,uwsgi will eventually queue and we'll readiness checks should fail.[Kind installation](https://kind.sigs.k8s.io/docs/user/quick-start/)[Skaffold installation](https://skaffold.dev/docs/install/#standalone-binary)[Kubectl installation](https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/)## Running locallyWith `kind`, `kubectl` and `skaffold` installed, simply run:```skaffold dev```Skaffold builds a docker image, loads into the kind &quot;cluster&quot; and creates the Pods, watches for changes inthe filesystem and automatically re-deploys when needed.# Examples:The example below will prevent traffic from hitting the Pod once the queue reaches 70% its max capacity:```          readinessProbe:            exec:              command:                - uwsgi-is-ready                - --stats-socket                - /tmp/uwsgi-stats                - --queue-threshold                - 0.7            failureThreshold: 2            initialDelaySeconds: 5            periodSeconds: 5            successThreshold: 1            timeoutSeconds: 1```You can find a complete example in `k8s/deployment.yaml`# InstallationIn the container image used by your Pod, run:```pip install uwsgi-readiness-check```</longdescription>
</pkgmetadata>