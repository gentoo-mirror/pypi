<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># coveo-systoolsLanguage and OS related utilities.Content in a nutshell:- enhanced subprocess calls- asyncio subprocess calls- file and app finding made easy- safe text write and replace-if-different- git-repo-root locator- bool platforms `if WINDOWS or LINUX or MAC or WSL:`# searching the filesystem```pythonimport osfrom coveo_systools.filesystem import find_paths, find_application, find_repo_rootos.getcwd()# '/code/coveo-python-oss/coveo-systools'find_application('git')# WindowsPath('C:/Program Files/Git/cmd/git.EXE')  # windows example for completenessfind_repo_root()# Path('/code/coveo-python-oss')list(find_paths('pyproject.toml', search_from=find_repo_root(), in_root=True, in_children=True))# [Path('/code/coveo-python-oss/pyproject.toml'), ...]```# enhanced subprocess callsAn opinionated version of `subprocess.check_call` and `subprocess.check_output`._New in 2.0.7_: asyncio support, through `async_check_call` and `async_check_output`.Adds the following features:- command line is a variable args (instead of a list)- automatic conversion of output to a stripped string (instead of raw bytes)- automatic conversion of Path, bytes and number variables in command line- automatic filtering of ansi codes from the output- enhanced DetailedCalledProcessError on error (a subclass of the typical CalledProcessError)```pythonfrom pathlib import Pathfrom coveo_systools.subprocess import check_callcheck_call('mypy', '--config-file', Path('configs/mypy.ini'), verbose=True)```# safe I/O, if changedGood programming practices requires files to be saved using a temporary filename and then renamed.This helper takes it a step further by skipping the write operation if the content did not change: ```pythonimport jsonfrom pathlib import Pathfrom coveo_systools.filesystem import safe_text_writesafe_text_write(Path('./path/to/file.txt'), json.dumps(...), only_if_changed=True)```# conditional platforms syntactic sugarReadability is important, not repeating yourself is important.Forget about `platform.platform()` and use bools directly:```pythonfrom coveo_systools.platforms import WINDOWS, LINUX, IOS, WSLif WINDOWS or WSL:    print(&quot;Hello Windows!&quot;)elif LINUX or IOS:    print(&quot;Hello Unix!&quot;)```</longdescription>
</pkgmetadata>