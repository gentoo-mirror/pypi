<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># openconnect-ssoWrapper script for OpenConnect supporting Azure AD (SAMLv2) authenticationto Cisco SSL-VPNs[![Tests Status](https://github.com/vlaci/openconnect-sso/workflows/Tests/badge.svg?branch=master&amp;event=push)](https://github.com/vlaci/openconnect-sso/actions?query=workflow%3ATests+branch%3Amaster+event%3Apush)## Installation### Using pip/pipxA generic way that works on most 'standard' Linux distributions out of the box.The following example shows how to install `openconect-sso` along with itsdependencies including Qt:```shell$ pip install --user pipxSuccessfully installed pipx$ pipx install &quot;openconnect-sso[full]&quot;‚£æ installing openconnect-sso  installed package openconnect-sso 0.4.0, Python 3.7.5  These apps are now globally available    - openconnect-sso‚ö†Ô∏è  Note: '/home/vlaci/.local/bin' is not on your PATH environment variable.These apps will not be globally accessible until your PATH is updated. Run`pipx ensurepath` to automatically add it, or manually modify your PATH in yourshell's config file (i.e. ~/.bashrc).done! ‚ú® üåü ‚ú®Successfully installed openconnect-sso$ pipx ensurepathSuccess! Added /home/vlaci/.local/bin to the PATH environment variable.Consider adding shell completions for pipx. Run 'pipx completions' forinstructions.You likely need to open a new terminal or re-login for the changes to takeeffect. ‚ú® üåü ‚ú®```If you have Qt 5.x installed, you can skip the installation of bundled Qt version:``` bashpipx install openconnect-sso```Of course you can also install via `pip` instead of `pipx` if you'd like toinstall system-wide or a virtualenv of your choice.### On Arch LinuxThere is an unofficial package available for Arch Linux on[AUR](https://aur.archlinux.org/packages/openconnect-sso/). You can use yourfavorite AUR helper to install it:``` shellyay -S openconnect-sso```### Using nixThe easiest method to try is by installing directly:```shell$ nix-env -i -f https://github.com/vlaci/openconnect-sso/archive/master.tar.gzunpacking 'https://github.com/vlaci/openconnect-sso/archive/master.tar.gz'...[...]installing 'openconnect-sso-0.4.0'these derivations will be built:  /nix/store/2z47740z1rr2cfqfin5lnq04sq3c5xjg-openconnect-sso-0.4.0.drv[...]building '/nix/store/50q496iqf840wi8b95cfmgn07k6y5b59-user-environment.drv'...created 606 symlinks in user environment$ openconnect-sso```An overlay is also available to use in nix expressions:``` nixlet  openconnectOverlay = import &quot;${builtins.fetchTarball https://github.com/vlaci/openconnect-sso/archive/master.tar.gz}/overlay.nix&quot;;  pkgs = import &lt;nixpkgs&gt; { overlays = [ openconnectOverlay ]; };in  #  pkgs.openconnect-sso is available in this context```... or to use in `configuration.nix`:``` nix{ config, ... }:{  nixpkgs.overlays = [    (import &quot;${builtins.fetchTarball https://github.com/vlaci/openconnect-sso/archive/master.tar.gz}/overlay.nix&quot;)  ];}```### Windows *(EXPERIMENTAL)*Install with [pip/pipx](#using-pippipx) and be sure that you have `sudo` and `openconnect`executable commands in your PATH.## UsageIf you want to save credentials and get them automaticallyinjected in the web browser:```shell$ openconnect-sso --server vpn.server.com/group --user user@domain.comPassword (user@domain.com):[info     ] Authenticating to VPN endpoint ...```User credentials are automatically saved to the users login keyring (ifavailable).If you already have Cisco AnyConnect set-up, then `--server` argument isoptional. Also, the last used `--server` address is saved between sessions sothere is no need to always type in the same arguments:```shell$ openconnect-sso[info     ] Authenticating to VPN endpoint ...```Configuration is saved in `$XDG_CONFIG_HOME/openconnect-sso/config.toml`. Ontypical Linux installations it is located under`$HOME/.config/openconnect-sso/config.toml`## Development`openconnect-sso` is developed using [Nix](https://nixos.org/nix/). Refer to the[Quick Start section of the Nixmanual](https://nixos.org/nix/manual/#chap-quick-start) to see how to get itinstalled on your machine.To get dropped into a development environment, just type `nix-shell`:```shell$ nix-shellSourcing python-catch-conflicts-hook.shSourcing python-remove-bin-bytecode-hook.shSourcing pip-build-hookUsing pipBuildPhaseSourcing pip-install-hookUsing pipInstallPhaseSourcing python-imports-check-hook.shUsing pythonImportsCheckPhaseRun 'make help' for available commands[nix-shell]$```To try an installed version of the package, issue `nix-build`:```shell$ nix build[1 built, 0.0 MiB DL]$ result/bin/openconnect-sso --help```Alternatively you may just [get Poetry](https://python-poetry.org/docs/) andstart developing by using the included `Makefile`. Type `make help` to see thepossible make targets.</longdescription>
</pkgmetadata>