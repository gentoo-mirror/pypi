<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ycontract================================================================================[![PyPI](https://img.shields.io/pypi/v/ycontract)](https://pypi.org/project/ycontract/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ycontract)](https://pypi.org/project/ycontract/)[![pipeline status](https://gitlab.com/yassu/ycontract.py/badges/master/pipeline.svg)](https://gitlab.com/yassu/ycontract.py/-/pipelines/latest)[![coverage report](https://gitlab.com/yassu/ycontract.py/badges/master/coverage.svg)](https://gitlab.com/yassu/ycontract.py/-/commits/master)[![PyPI - License](https://img.shields.io/pypi/l/ycontract)](https://gitlab.com/yassu/ycontract.py/-/raw/master/LICENSE)Python library for contracts testing.This library provides functions for checking argument(`in_contract`) and return value(`out_contract`) of a function.How to install--------------------------------------------------------------------------------``` sh$ pip install ycontract```Example--------------------------------------------------------------------------------Example files are [here](https://gitlab.com/yassu/ycontract.py/-/blob/master/tests/test_contract.py)(test file)Main example is``` pythonfrom ycontract import contract, out_contract@contract(lambda a, b: a * b &gt; 0)def add(a, b, c):    return a + b@contract(returns=lambda res: res &gt; 0)def sub(a, b):    return a - b```And more complex example about in_contract is``` python@contract(    lambda a0: a0 &gt; 0,    lambda a1, b: a1 &gt; 0 and b &gt; 0,    {        &quot;a2&quot;: lambda x: x &gt; 0,        &quot;a3&quot;: [            lambda x: x &gt;= 0,            lambda x: x &lt; 4,        ],        (&quot;a4&quot;, &quot;a5&quot;): lambda x, y: x &gt; 0 and y &gt; 0,    },    b=lambda x: x &gt; 0,    contract_tag=&quot;tagtag&quot;,)def add_for_complex(a0, a1, a2, a3, a4, a5, b=1):    return a0 + a1 + a2 + a3 + a4 + a5 + b```Furthermore if you want to be disable, call``` pythonycontract.disable_contract()```LICENSES--------------------------------------------------------------------------------[Apache 2.0](https://gitlab.com/yassu/ycontract.py/-/blob/master/LICENSE)</longdescription>
</pkgmetadata>