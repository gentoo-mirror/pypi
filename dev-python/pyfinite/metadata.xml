<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============The ``pyfinite`` package is a python package for dealing with finitefields and related mathematical operations. Also included is a genericmatrix package for doing matrix operations over generic fields. As anillustration a Reed-Solomon erasure correcting code implementation isprovided using these tools.Roughly speaking a &quot;field&quot; is a mathematical space where consistentaddition, subtraction, multiplication, and division operations aredefined. A &quot;finite field&quot; is a field where the number of elements isfinite. Perhaps the most familiar finite field is the Boolean fieldwhere the elements are 0 and 1, addition (and subtraction) correspond toXOR, and multiplication (and division) work as normal for 0 and 1.More complicated finite fields are useful and interesting forcryptography and erasure correcting codes.Usage=====After you install via something like ``pip install pyfinite``, the bestway to get started is to look at the doctest examples in the followingfiles:-  ``ffield.py``: See docstring for ``FField`` and ``FElement`` classes.   -  This shows you how to work with finite fields.-  ``genericmatrix.py``: See docstring for ``GenericMatrix`` class.   -  This shows you how to do matrix operations on a generic field.-  ``rs_code.py``: See docstring for ``RSCode`` class.   -  This shows you how to do Reed-Solomon erasure correcting codes.-  ``file_ecc.py``: See the top-level docstring for the ``file_ecc``   module.   -  Shows you how to encode a file into multiple pieces and decode      from a subset of those pieces.For example, after you install ``pyfinite`` and start the pythoninterpreter, do something like the following to see help on finitefields:.. code:: python    &gt;&gt;&gt; from pyfinite import ffield    &gt;&gt;&gt; help(ffield.FField)or if you want to dive right in, you can try something like thefollowing:.. code:: python    &gt;&gt;&gt; from pyfinite import ffield    &gt;&gt;&gt; F = ffield.FField(5) # create the field GF(2^5)    &gt;&gt;&gt; a = 7    # field elements are denoted as integers from 0 to 2^5-1    &gt;&gt;&gt; b = 15    &gt;&gt;&gt; F.ShowPolynomial(a) # show the polynomial representation of a    'x^2 + x^1 + 1'    &gt;&gt;&gt; c = F.Multiply(a,b) # multiply a and b modulo the field generator    &gt;&gt;&gt; c    8    &gt;&gt;&gt; F.ShowPolynomial(c)    'x^3'Alternatively, you can jump into the ``genericmatrix.py`` package withsomething like:.. code:: python    &gt;&gt;&gt; import genericmatrix    &gt;&gt;&gt; v = genericmatrix.GenericMatrix((3,3))    &gt;&gt;&gt; v.SetRow(0,[0.0, -1.0, 1.0])    &gt;&gt;&gt; v.SetRow(1,[1.0, 1.0, 1.0])    &gt;&gt;&gt; v.SetRow(2,[1.0, 1.0, -1.0])    &gt;&gt;&gt; v    &lt;matrix      0.0 -1.0  1.0      1.0  1.0  1.0      1.0  1.0 -1.0&gt;    &gt;&gt;&gt; vi = v.Inverse()Then for some real fun, you can try experimenting with generic matrixoperations on elements of a finite field! The nice thing about the``genericmatrix`` module is that it only relies on the standard pythonarithmetic operators so you can use it for anything with sane ``+``,``-``, ``*``, and ``/`` operators. See the help on ``genericmatrix`` formore info.Finally, if you just want erasure correction, see the docs for the``rs_code`` and ``file_ecc`` modules via something like.. code:: python    &gt;&gt;&gt; import rs_code, file_ecc    &gt;&gt;&gt; help(file_ecc)    &gt;&gt;&gt; help(rs_code)Future work===========This code was written many years ago and hosted on an old MIT web siteunder the name ``py_ecc`` before being moved to github. It is in need ofsome love. In particular, it could use:1. Reworking to fix pep8/pylint warnings and generally better python   style.2. More documentation.3. More examples.4. Travis setup to verify doctests in both python2 and python3.   -  These have been manually verified but it would be nice to have a      setup which can run tests on multiple versions of python in an      automated way.To help or contribute please see the main project site athttps://github.com/emin63/pyfinite.</longdescription>
</pkgmetadata>