<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![PyChord](./pychord.png)# PyChord ![Build Status](https://github.com/yuma-m/pychord/actions/workflows/build.yml/badge.svg) [![Documentation Status](https://readthedocs.org/projects/pychord/badge/?version=latest)](http://pychord.readthedocs.io/en/latest/?badge=latest)## OverviewPychord is a python library to handle musical chords.## Installation```sh$ pip install pychord```## Basic Usage### Create a Chord```python&gt;&gt;&gt; from pychord import Chord&gt;&gt;&gt; c = Chord(&quot;Am7&quot;)&gt;&gt;&gt; c&lt;Chord: Am7&gt;&gt;&gt;&gt; c.info()&quot;&quot;&quot;Am7root=Aquality=m7appended=[]on=None&quot;&quot;&quot;```### Transpose a Chord```python&gt;&gt;&gt; c = Chord(&quot;Am7/G&quot;)&gt;&gt;&gt; c.transpose(3)&gt;&gt;&gt; c&lt;Chord: Cm7/Bb&gt;```### Get component notes```python&gt;&gt;&gt; c = Chord(&quot;Am7&quot;)&gt;&gt;&gt; c.components()['A', 'C', 'E', 'G']&gt;&gt;&gt; c.components_with_pitch(root_pitch=3)['A3', 'C4', 'E4', 'G4']```### Compare Chords```python&gt;&gt;&gt; Chord(&quot;C&quot;) == Chord(&quot;D&quot;)False&gt;&gt;&gt; Chord(&quot;C#&quot;) == Chord(&quot;Db&quot;)True&gt;&gt;&gt; c = Chord(&quot;C&quot;)&gt;&gt;&gt; c.transpose(2)&gt;&gt;&gt; c == Chord(&quot;D&quot;)True```### Find Chords from notes```python&gt;&gt;&gt; from pychord import find_chords_from_notes&gt;&gt;&gt; find_chords_from_notes([&quot;C&quot;, &quot;E&quot;, &quot;G&quot;])[ &lt;Chord: C&gt;]&gt;&gt;&gt; find_chords_from_notes([&quot;F#&quot;, &quot;A&quot;, &quot;C&quot;, &quot;D&quot;])[ &lt;Chord: D7/F#&gt;]&gt;&gt;&gt; find_chords_from_notes([&quot;F&quot;, &quot;G&quot;, &quot;C&quot;])[ &lt;Chord: Fsus2&gt;, &lt;Chord: Csus4/F&gt;]```### Create and handle chord progressions```python&gt;&gt;&gt; from pychord import ChordProgression&gt;&gt;&gt; cp = ChordProgression([&quot;C&quot;, &quot;G/B&quot;, &quot;Am&quot;])&gt;&gt;&gt; cp&lt;ChordProgression: C | G/B | Am&gt;&gt;&gt;&gt; cp.append(&quot;Em/G&quot;)&gt;&gt;&gt; cp&lt;ChordProgression: C | G/B | Am | Em/G&gt;&gt;&gt;&gt; cp.transpose(+3)&gt;&gt;&gt; cp&lt;ChordProgression: Eb | Bb/D | Cm | Gm/Bb&gt;&gt;&gt;&gt; cp[1]&lt;Chord: Bb/D&gt;```## Advanced Usage### Create a Chord from note index in a scale```python&gt;&gt;&gt; Chord.from_note_index(note=1, quality=&quot;&quot;, scale=&quot;Cmaj&quot;)&lt;Chord: C&gt;  # I of C major&gt;&gt;&gt; Chord.from_note_index(note=3, quality=&quot;m7&quot;, scale=&quot;Fmaj&quot;)&lt;Chord: Am7&gt;  # IIIm7 of F major&gt;&gt;&gt; Chord.from_note_index(note=5, quality=&quot;7&quot;, scale=&quot;Amin&quot;)&lt;Chord: E7&gt;  # V7 of A minor```### Overwrite the default Quality components with yours```python&gt;&gt;&gt; from pychord import Chord, QualityManager&gt;&gt;&gt; Chord(&quot;C11&quot;).components()['C', 'G', 'Bb', 'D', 'F']&gt;&gt;&gt; quality_manager = QualityManager()&gt;&gt;&gt; quality_manager.set_quality(&quot;11&quot;, (0, 4, 7, 10, 14, 17))&gt;&gt;&gt; Chord(&quot;C11&quot;).components()['C', 'E', 'G', 'Bb', 'D', 'F']```### InversionsChord inversions are created with a forward slash and a numberindicating the order. This can optionally be combined with anadditional forward slash to change the bass note:```python&gt;&gt;&gt; Chord(&quot;C/1&quot;).components() # First inversion of C['E', 'G', 'C']&gt;&gt;&gt; Chord(&quot;C/2&quot;).components() # Second inversion of C['G', 'C', 'E']&gt;&gt;&gt; Chord(&quot;Cm7/3/F&quot;).components() # Third inversion of Cm7 with an added F bass['F', 'Bb', 'C', 'Eb', 'G']```## Examples- [pychord-midi.py](./examples/pychord-midi.py) - Create a MIDI file using PyChord and pretty_midi.## Supported Python Versions- 3.6 and abovePython 2.7 and 3.5 compatibility was dropped from version 1.0.0.## Links- PyPI: https://pypi.python.org/pypi/pychord- GitHub: https://github.com/yuma-m/pychord- Documentation: http://pychord.readthedocs.io/en/latest/## Author- [Yuma Mihira](https://yuma.cloud/)## License- MIT LicenseIcon is made by [Freepik](https://www.flaticon.com/authors/freepik).</longdescription>
</pkgmetadata>