<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cdk-proxy-api-clientAPI Client library to interact with Conduktor ProxyCurrent version: v1beta1## Getting startedFirst, create a Proxy Client```pythonfrom cdk_proxy_api_client.proxy_api import ApiClient, ProxyClientapi = ApiClient(&quot;localhost&quot;, port=8888, username=&quot;superUser&quot;, password=&quot;superUser&quot;)proxy_client = ProxyClient(api)```### FeaturesNote: we assume you are re-using the ``proxy_client`` as shown above.* Create new Token for a tenant```pythonfrom cdk_proxy_api_client.admin_auth import AdminAuthadmin = AdminAuth(proxy_client)admin.create_tenant_credentials(&quot;a_tenant_name&quot;)```* List all topic mappings for a tenant```pythonfrom cdk_proxy_api_client.proxy_api import Multitenancytenants_mgmt = Multitenancy(proxy_client)tenants = tenants_mgmt.list_tenants(as_list=True)```* Create a new mapping for a tenant* Delete a tenant - topic mapping* Delete all topic mappings for a tenant```pythonfrom cdk_proxy_api_client.tenant_mappings import TenantTopicMappingstenant_mappings_mgmt = TenantTopicMappings(proxy_client)tenant_mappings_mgmt.create_tenant_topic_mapping(    &quot;tenant_name&quot;, &quot;logical_name&quot;, &quot;real_name&quot;)tenant_mappings_mgmt.delete_tenant_topic_mapping(&quot;tenant_name&quot;, &quot;logical_name&quot;)```## TestingThe testing is for now very manual. See ``e2e_testing.py``Pytest will be added later on## Tools &amp; CLITo simplify the usage of the client, you can use some CLI commands```shellusage: CDK Proxy CLI [-h] [--format OUTPUT_FORMAT] --username USERNAME --password PASSWORD --url URL {auth,tenant-topic-mappings,tenants} ...positional arguments:  {auth,tenant-topic-mappings,tenants}                        Resources to manage    auth                Manages proxy tenant token    tenant-topic-mappings                        Manages tenant mappings    tenants             Manage tenantsoptional arguments:  -h, --help            show this help message and exit  --format OUTPUT_FORMAT, --output-format OUTPUT_FORMAT                        output format  --username USERNAME  --password PASSWORD  --url URL```### cdk-cli tenant-topic-mappings```shellusage: CDK Proxy CLI tenant-topic-mappings [-h] {list,create,import-from-tenants-config,import-from-tenant,delete-all-mappings,delete-topic-mapping} ...positional arguments:  {list,create,import-from-tenants-config,import-from-tenant,delete-all-mappings,delete-topic-mapping}                        Mappings management    list                List tenant mappings    create              Create a new tenant mapping    import-from-tenants-config                        Create topic mappings from existing tenants    import-from-tenant  Import all topics from a existing tenant    delete-all-mappings                        Delete all topics mappings for a given tenant    delete-topic-mapping                        Delete a topic mapping for a given tenantoptional arguments:  -h, --help            show this help message and exit```#### import-from-tenants-configThis command uses a configuration file that will be used to propagate mappings from one/multiple existing tenants to another.example file:```yaml---# example.config.yamltenant_name: application-01ignore_duplicates_conflict: truemappings:  - logicalTopicName: data.stock    physicalTopicName: data.stock    readOnly: true``````shellcdk-cli --username ${PROXY_USERNAME} \        --password ${PROXY_PASSWORD} \        --url ${PROXY_URL} \        tenant-topic-mappings import-from-tenants-config -f example.config.yaml```### cdk-cli auth```shellcdk-cli auth --helpusage: CDK Proxy CLI auth [-h] {create} ...positional arguments:  {create}    Token actions to execute    create    Create a new tenant proxy JWT Tokenoptional arguments:  -h, --help  show this help message and exit```#### cdk-cli-create-tenant-tokenCreate a new user tenant token```shellcdk-cli \        --username ${PROXY_USERNAME} \        --password ${PROXY_PASSWORD} \        --url ${PROXY_URL} \        auth create \        --lifetime-in-seconds 3600  \        --tenant-name js-fin-panther-stg```### cdk-cli tenantsManage tenants```shellcdk-cli tenants --helpusage: CDK Proxy CLI tenants [-h] {list} ...positional arguments:  {list}      Manage tenants    list      List tenantsoptional arguments:  -h, --help  show this help message and exit```</longdescription>
</pkgmetadata>