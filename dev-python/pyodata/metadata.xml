<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Build Status](https://github.com/SAP/python-pyodata/actions/workflows/python-package.yml/badge.svg)[![PyPI version](https://badge.fury.io/py/pyodata.svg)](https://badge.fury.io/py/pyodata)[![codecov](https://codecov.io/gh/SAP/python-pyodata/branch/master/graph/badge.svg)](https://codecov.io/gh/SAP/python-pyodata)[![Total alerts](https://img.shields.io/lgtm/alerts/g/SAP/python-pyodata.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/SAP/python-pyodata/alerts/)[![REUSE status](https://api.reuse.software/badge/github.com/SAP/python-pyodata)](https://api.reuse.software/info/github.com/SAP/python-pyodata)# Python OData Client - pyodataPython OData client which provides comfortable Python agnosticway for communication with OData services.The goal of this Python module is to hide all OData protocol implementationdetails.## Supported features- OData V2## Requirements- [Python &gt;= 3.7](https://www.python.org/downloads/)## Download and InstallationInstall and update using pip:```bashpip install -U pyodata```## ConfigurationYou can start building your OData projects straight away after installing thePython module without any additional configuration steps needed.## LimitationsThere have been no limitations discovered yet.## Known IssuesThere are no known issues at this time.## How to obtain supportWe accept bug reports, feature requests, questions and comments via [GitHub issues](https://github.com/SAP/python-pyodata/issues)## UsageThe only thing you need to do is to import the _pyodata_ Python module andprovide an object implementing interface compatible with [Session Object](https://2.python-requests.org/en/master/user/advanced/#session-objects)for the library [Requests](https://2.python-requests.org/en/master/).```pythonimport requestsimport pyodataSERVICE_URL = 'http://services.odata.org/V2/Northwind/Northwind.svc/'# Create instance of OData clientclient = pyodata.Client(SERVICE_URL, requests.Session())```Find more sophisticated examples in [The User Guide](docs/usage/README.md).## ContributingPlease, go through [the Contributing guideline](CONTRIBUTING.md).### Authoring a patchHere's an example workflow for a project `PyOData` hosted on GithubYour username is `yourname` and you're submitting a basic bugfix or feature.* Hit 'fork' on Github, creating e.g. `yourname/PyOData`.* `git clone git@github.com:yourname/PyOData`* `git checkout -b foo_the_bars` to create new local branch named foo_the_bars* Hack, hack, hack* Run `python3 -m pytest` or `make check`* `git status`* `git add`* `git commit -s -m &quot;Foo the bars&quot;`* `git push -u origin HEAD` to create foo_the_bars branch in your fork* Visit your fork at Github and click handy &quot;Pull request&quot; button.* In the description field, write down issue number (if submitting code fixing  an existing issue) or describe the issue + your fix (if submitting a wholly  new bugfix).* Hit 'submit'! And please be patient - the maintainers will get to you when  they can.## LicenseCopyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.This file is licensed under the Apache Software License, v. 2 except as notedotherwise in [the LICENSE file](LICENSE)</longdescription>
</pkgmetadata>