<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========pytest-diff===========.. image:: https://img.shields.io/pypi/v/pytest-diff.svg    :target: https://pypi.org/project/pytest-diff    :alt: PyPI version.. image:: https://img.shields.io/pypi/pyversions/pytest-diff.svg    :target: https://pypi.org/project/pytest-diff    :alt: Python versions.. image:: https://travis-ci.org/username/pytest-diff.svg?branch=master    :target: https://travis-ci.org/username/pytest-diff    :alt: See Build Status on Travis CI.. image:: https://ci.appveyor.com/api/projects/status/github/username/pytest-diff?branch=master    :target: https://ci.appveyor.com/project/username/pytest-diff/branch/master    :alt: See Build Status on AppVeyorA simple plugin to use with pytest----This `pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `cookiecutter-pytest-plugin`_ template.Features--------* Readable diffs for failed tests* Customizable diffs for your classesRequirements------------* `pytest`* `deepdiff`* `pprintpp`Installation------------You can install &quot;pytest-diff&quot; via `pip`_ from `PyPI`_::    $ pip install pytest-diffUsage-----.. code-block:: python    class Person:        def __init__(self, name, age, favorites):            self.name = name            self.age = age            self.favorites = favorites    def test_person():        a = Person(&quot;Alice&quot;, age=21, favorites={&quot;food&quot;: &quot;spam&quot;, &quot;movie&quot;: &quot;Life of Brian&quot;})        b = Person(&quot;Alice&quot;, age=21, favorites={&quot;food&quot;: &quot;eggs&quot;, &quot;movie&quot;: &quot;Life of Brian&quot;})        assert a == bRunning :code:`pytest` gives:.. code-block:: python    ______________________________ test_person ______________________________        def test_person():            a = Person(&quot;Alice&quot;, age=21, favorites={'food': 'spam', 'movie': 'Life of Brian'})            b = Person(&quot;Alice&quot;, age=21, favorites={'food': 'eggs', 'movie': 'Life of Brian'})    &gt;       assert a == b    E       assert    E         &lt;test_person.Person object at 0x7fa326d769e8&gt;    E         ==    E         &lt;test_person.Person object at 0x7fa326d76be0&gt;    E         {'values_changed': {&quot;root.favorites['food']&quot;: {'new_value': 'spam', 'old_value': 'eggs'}}}    examples/test_person.py:11: AssertionErrorTo customize diffs for a specific type, register it with the registry:.. code-block:: python    import pytest_diff    class Car:        def __init__(self, make, model, year):            self.make = make            self.model = model            self.year = year    @pytest_diff.registry.register(Car)    def diff(x, y):        return [                   f&quot;{x.make} vs {y.make}&quot;,                   f&quot;{x.model} vs {y.model}&quot;,                   f&quot;{x.year} vs {y.year}&quot;,               ]    def test_car():        c1 = Car(&quot;Toyota&quot;, &quot;Prius&quot;, 2010)        c2 = Car(&quot;Honda&quot;, &quot;Accord&quot;, 2009)        assert c1 == c2Then running :code:`pytest` shows your custom diff:.. code-block:: python        def test_car():            c1 = Car(&quot;Toyota&quot;, &quot;Prius&quot;, 2010)            c2 = Car(&quot;Honda&quot;, &quot;Accord&quot;, 2009)    &gt;       assert c1 == c2    E       assert    E         &lt;test_custom.Car object at 0x7f0e9b0ccd68&gt;    E         ==    E         &lt;test_custom.Car object at 0x7f0e9b0cceb8&gt;    E         Toyota vs Honda    E         Prius vs Accord    E         2010 vs 2009    examples/test_custom.py:21: AssertionErrorContributing------------Contributions are very welcome. Tests can be run with `tox`_, please ensurethe coverage at least stays the same before you submit a pull request.License-------Distributed under the terms of the `MIT`_ license, &quot;pytest-diff&quot; is free and open source softwareIssues------If you encounter any problems, please `file an issue`_ along with a detailed description... _`Cookiecutter`: https://github.com/audreyr/cookiecutter.. _`@hackebrot`: https://github.com/hackebrot.. _`MIT`: http://opensource.org/licenses/MIT.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin.. _`file an issue`: https://github.com/username/pytest-diff/issues.. _`pytest`: https://github.com/pytest-dev/pytest.. _`tox`: https://tox.readthedocs.io/en/latest/.. _`pip`: https://pypi.org/project/pip/.. _`PyPI`: https://pypi.org/project</longdescription>
</pkgmetadata>