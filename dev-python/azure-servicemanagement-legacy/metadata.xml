<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Microsoft Azure SDK for PythonThis is the Microsoft Azure Service Management Legacy Client Library.All packages in this bundle have been tested with Python 2.7, 3.3, 3.4 and 3.5.For the newer Azure Resource Management (ARM) libraries, see [azure-mgmt](https://pypi.python.org/pypi/azure-mgmt).For a more complete set of Azure libraries, see the [azure](https://pypi.python.org/pypi/azure) bundle package.# Compatibility**IMPORTANT**: If you have an earlier version of the azure package(version &lt; 1.0), you should uninstall it before installing this package.You can check the version using pip:```shellpip freeze```If you see azure==0.11.0 (or any version below 1.0), uninstall it first:```shellpip uninstall azure```# Features-  Cloud Service management (Virtual Machines, VM Images, OS Images)-  Storage accounts management-  Scheduler management-  Service Bus management-  Affinity Group management-  Management certificate management-  Web Apps (Website) management# Installation## Download PackageTo install via the Python Package Index (PyPI), type:```shellpip install azure-servicemanagement-legacy```## Download Source CodeTo get the source code of the SDK via **git** type:```shellgit clone https://github.com/Azure/azure-sdk-for-python.gitcd azure-sdk-for-pythoncd azure-servicemanagement-legacypython setup.py install```# Usage## Authentication### Set-up certificatesYou will need two certificates, one for the server (a .cer file) and one forthe client (a .pem file).### Using the Azure .PublishSettings certificateYou can download your Azure publish settings file and use the certificate thatis embedded in that file to create the client certificate. The servercertificate already exists, so you won't need to upload one.To do this, download your [publish settings](http://go.microsoft.com/fwlink/?LinkID=301775)then use this code to create the .pem file.```pythonfrom azure.servicemanagement import get_certificate_from_publish_settingssubscription_id = get_certificate_from_publish_settings(    publish_settings_path='MyAccount.PublishSettings',    path_to_write_certificate='mycert.pem',    subscription_id='00000000-0000-0000-0000-000000000000',)```The subscription id parameter is optional. If there are more than onesubscription in the publish settings, the first one will be used.### Creating and uploading new certificate with OpenSSLTo create the .pem file using [OpenSSL](http://www.openssl.org), execute this:```shellopenssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem```To create the .cer certificate, execute this:```shellopenssl x509 -inform pem -in mycert.pem -outform der -out mycert.cer```After you have created the certificate, you will need to upload the .cerfile to Microsoft Azure via the &quot;Upload&quot; action of the &quot;Settings&quot; tab ofthe [management portal](http://manage.windowsazure.com).## ServiceManagementService### InitializationTo initialize the management service, pass in your subscription id andthe path to the .pem file.```pythonfrom azure.servicemanagement import ServiceManagementServicesubscription_id = '00000000-0000-0000-0000-000000000000'cert_file = 'mycert.pem'sms = ServiceManagementService(subscription_id, cert_file)```### List Available Locations```pythonlocations = sms.list_locations()for location in locations:    print(location.name)```### Create a Storage ServiceTo create a storage service, you need a name for the service (between 3and 24 lowercase characters and unique within Microsoft Azure), a label(up to 100 characters, automatically encoded to base-64), and either alocation or an affinity group.```pythonname = &quot;mystorageservice&quot;desc = namelabel = namelocation = 'West US'result = sms.create_storage_account(name, desc, label, location=location)sms.wait_for_operation_status(result.request_id, timeout=30)```### Create a Cloud ServiceA cloud service is also known as a hosted service (from earlier versionsof Microsoft Azure). The **create\_hosted\_service** method allows youto create a new hosted service by providing a hosted service name (whichmust be unique in Microsoft Azure), a label (automatically encoded tobase-64), and the location *or* the affinity group for your service.```pythonname = &quot;myhostedservice&quot;desc = namelabel = namelocation = 'West US'result = sms.create_hosted_service(name, label, desc, location=location)sms.wait_for_operation_status(result.request_id, timeout=30)```### Create a Virtual MachineTo create a virtual machine, you first need to create a cloud service.Then create the virtual machine deployment using thecreate_virtual_machine_deployment method.```pythonfrom azure.servicemanagement import LinuxConfigurationSet, OSVirtualHardDiskname = &quot;myhostedservice&quot;# Name of an os image as returned by list_os_imagesimage_name = 'OpenLogic__OpenLogic-CentOS-62-20120531-en-us-30GB.vhd'# Destination storage account container/blob where the VM disk# will be createdmedia_link = 'url_to_target_storage_blob_for_vm_hd'# Linux VM configuration, you can use WindowsConfigurationSet# for a Windows VM insteadlinux_config = LinuxConfigurationSet(    'myhostname',    'myuser',    'mypassword',    disable_ssh_password_authentication=True,)os_hd = OSVirtualHardDisk(image_name, media_link)result = sms.create_virtual_machine_deployment(    service_name=name,    deployment_name=name,    deployment_slot='production',    label=name,    role_name=name,    system_config=linux_config,    os_virtual_hard_disk=os_hd,    role_size='Small',)sms.wait_for_operation_status(result.request_id, timeout=600)```# Need Help?Be sure to check out the Microsoft Azure [Developer Forums on StackOverflow](http://go.microsoft.com/fwlink/?LinkId=234489) if you havetrouble with the provided code.# Contribute Code or Provide FeedbackIf you would like to become an active contributor to this project pleasefollow the instructions provided in [Microsoft Azure ProjectsContributionGuidelines](http://azure.github.io/guidelines.html).If you encounter any bugs with the library please file an issue in the[Issues](https://github.com/Azure/azure-sdk-for-python/issues)section of the project.# Learn More[Microsoft Azure Python DeveloperCenter](http://azure.microsoft.com/en-us/develop/python/)![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fazure-servicemanagement-legacy%2FREADME.png)</longdescription>
</pkgmetadata>