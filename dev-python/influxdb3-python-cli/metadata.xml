<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://github.com/InfluxCommunity/influxdb3-python-cli/blob/main/python-logo.png?raw=true&quot; alt=&quot;Your Image&quot; width=&quot;150px&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/influxdb3-python-cli/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/influxdb3-python-cli.svg&quot; alt=&quot;PyPI version&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/influxdb3-python-cli/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/influxdb3-python-cli.svg&quot; alt=&quot;PyPI downloads&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/InfluxCommunity/influxdb3-python-cli/actions/workflows/pylint.yml&quot;&gt;        &lt;img src=&quot;https://github.com/InfluxCommunity/influxdb3-python-cli/actions/workflows/pylint.yml/badge.svg&quot; alt=&quot;Lint Code Base&quot;&gt;    &lt;/a&gt;        &lt;a href=&quot;https://github.com/InfluxCommunity/influxdb3-python-cli/actions/workflows/python-publish.yml&quot;&gt;        &lt;img src=&quot;https://github.com/InfluxCommunity/influxdb3-python-cli/actions/workflows/python-publish.yml/badge.svg&quot; alt=&quot;Lint Code Base&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://influxcommunity.slack.com&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;style=social&quot; alt=&quot;Community Slack&quot;&gt;    &lt;/a&gt;&lt;/p&gt;# influxdb3-python-cli## AboutThis repository contains a CLI extension to the [influxdb 3.0 python client library](https://github.com/InfluxCommunity/influxdb3-python). While this code is built on officially supported APIs, the library and CLI here are not officially support by InfluxData. ## InstallTo install the CLI, enter the following command in your terminal:```bashpython3 -m pip install influxdb3-python-cli```### Scope and privilegesPython provides the following methods for installing packages within a specific scope:- To isolate the CLI (and its dependencies) to your project directory, install the CLI in a _virtual environment_. [See how to create and use a `venv` or `conda` Python virtual environment](https://docs.influxdata.com/influxdb/cloud-serverless/query-data/execute-queries/flight-sql/python/#create-a-python-virtual-environment).- To install the client to a user-specific directory (without administrative rights), pass the `--user` flag in the `pip` command.- To install the client in your system-wide path, use `sudo` with admin privileges.## Add a configTo configure the CLI, do _one_ of the following:- Use the `influx3 create config` command to create or modify config--for example:    ```bash    influx3 create config \    --name=&quot;my-config&quot; \    --database=&quot;&lt;database or bucket name&gt;&quot; \    --host=&quot;us-east-1-1.aws.cloud2.influxdata.com&quot; \    --token=&quot;&lt;your token&gt;&quot; \    --org=&quot;&lt;your org ID&gt;&quot;    ```      The output is the configuration in a `config.json` file. This is saved within a directory called `config` located with the influx3 application.If you're running the CLI against InfluxDB Cloud Serverless, replace `your-database` in the examples with your Cloud Serverless _bucket name_.## Run as a command```influx3 sql &quot;select * from anomalies&quot;``````influx3 write testmes f=7 ```## Query and write interactivelyIn your terminal, enter the following command:```influx3````influx3` displays the `(&gt;)` interactive prompt and waits for input.```Welcome to my IOx CLI.(&gt;)```To query, type `sql` at the prompt.```(&gt;) sql```At the `(sql &gt;)` prompt, enter your query statement:```(sql &gt;) select * from home```The `influx3` CLI displays query results in Markdown table format--for example:```|     |   co |   hum | room        |   temp | time                          ||----:|-----:|------:|:------------|-------:|:------------------------------||   0 |    0 |  35.9 | Kitchen     |   21   | 2023-03-09 08:00:00           ||   1 |    0 |  35.9 | Kitchen     |   21   | 2023-03-09 08:00:50           |```To write, type `write` at the `(&gt;)` prompt.```(&gt;) write```At the `(write &gt;)` prompt, enter line protocol data.```(&gt;) write home,room=kitchen temp=70.5,hum=80```To exit a prompt, enter `exit`.## Write from a fileThe InfluxDB CLI and client library can write data from a CSV file.The CSV file must contain the following:- A header row with column names- A column that contains a timestamp for each rowThe following CLI options specify how data is parsed:* `--file` - The path to the csv file.* `--time` - The name of the column containing the timestamp.* `--measurement` - The name of the measurment to store the CSV data under. (Currently only supports user specified string)* `--tags` - (optional) Specify an array of column names to use as tags. (Currently only supports user specified strings) for example: `--tags=host,region`The following example shows how to write CSV data from the [`./Examples/example.csv` file](https://github.com/InfluxCommunity/influxdb3-python/blob/main/Examples/example.csv) to InfluxDB (as line protocol):```bashinflux3 write_csv --file ./Examples/example.csv --measurement table2 --time Date --tags host,region```## Config CommandsThe `config` command allows you to manage configurations for your application. It has the following subcommands: `create`, `update`, `use`, `delete`, and `list`.### CreateThe `create` subcommand creates a new configuration. It requires the `--name`, `--host`, `--token`, `--database`, and `--org` parameters. The `--active` parameter is optional and can be used to set the new configuration as the active one.Example usage:```bashinflux3.py config create --name=&quot;my-config&quot; --host=&quot;us-east-1-1.aws.cloud2.influxdata.com&quot; --token=&quot;&lt;your token&gt;&quot; --database=&quot;&lt;database or bucket name&gt;&quot; --org=&quot;&lt;your org ID&gt;&quot; --active```### UpdateThe `update` subcommand updates an existing configuration. The `--name` parameter is required to specify which configuration to update. All other parameters (`--host`, `--token`, `--database`, `--org`, `--active`) are optional.Example usage:```bashinflux3.py config update --name=&quot;my-config&quot; --host=&quot;new-host.com&quot;```### UseThe `use` subcommand sets a specific configuration as the active one. The `--name` parameter is required to specify which configuration to use.Example usage:```bashinflux3.py config use --name=&quot;my-config&quot;```### DeleteThe `delete` subcommand deletes a configuration. The `--name` parameter is required to specify which configuration to delete.Example usage:```bashinflux3.py config delete --name=&quot;my-config&quot;```### ListThe `list` subcommand lists all the configurations.Example usage:```bashinflux3.py config list```Please replace `&quot;my-config&quot;`, `&quot;us-east-1-1.aws.cloud2.influxdata.com&quot;`, `&quot;&lt;your token&gt;&quot;`, `&quot;&lt;database or bucket name&gt;&quot;`, and `&quot;&lt;your org ID&gt;&quot;` with your actual values.## Client libraryThe underlying client library is also available for use in your own code: https://github.com/InfluxCommunity/influxdb3-python## ContributionWhen developing a new feature for the CLI or the client library, make sure to test your feature in both for breaking changes.#</longdescription>
</pkgmetadata>