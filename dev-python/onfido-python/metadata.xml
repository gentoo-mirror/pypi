<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Onfido Python Client Library[onfido-python on PyPI](https://pypi.org/project/onfido-python/)The official wrapper for Onfido's API. Refer to the full [API documentation](https://documentation.onfido.com) for details of expected requests and responses for all resources.[![PyPI version](https://badge.fury.io/py/onfido-python.svg)](https://badge.fury.io/py/onfido-python)This version uses Onfido API v3.6. Refer to our [API versioning guide](https://developers.onfido.com/guide/api-versioning-policy#client-libraries) for details of which client library versions use which versions of the API.This project supersedes the automatically generated [api-python-client](https://github.com/onfido/api-python-client) library (`onfido` in PyPI).## Installation`pip install onfido-python`:warning: Having the old `onfido` package installed at the same time will cause errors.## Getting startedMake API calls by using an instance of the `Api` class and providing your APItoken:```pythonimport onfidoapi = onfido.Api(&quot;&lt;YOUR_API_TOKEN&gt;&quot;)```### RegionsSet the region in the API instance using the `region` parameter, which takes a value from the `Region` enum (currently `Region.EU`, `Region.US` or `Region.CA`).For example, to specify the EU region:```pythonimport onfidofrom onfido.regions import Regionapi = onfido.Api(&quot;&lt;YOUR_API_TOKEN&gt;&quot;, region=Region.EU)````region` does not take a default parameter. Failure to pass a correct region will raise an `OnfidoRegionError`.See https://documentation.onfido.com/#regions for more information about our supported regions at a given time.### TimeoutsYou can optionally set a global timeout for all requests in the APIconstructor. This takes a floating number input and each whole integerincrement corresponds to a second. For example, to set a timeout of 1 second:```pythonapi = onfido.Api(&quot;&lt;YOUR_API_TOKEN&gt;&quot;, timeout=1)```The default value for `timeout` is `None`, meaning no timeout will be set onthe client side.## Response formatThe Python library will return JSON requests directly from the API. Each request corresponds to a resource. All resources share the same interface when making API calls. For example, use `.create` to create a resource, `.find` to find one, and `.all` to fetch all resources. For example, to create an applicant:```pythonapplicant_details = {  'first_name': 'Jane',  'last_name': 'Doe',  'dob': '1984-01-01',  'address': {    'street': 'Second Street',    'town': 'London',    'postcode': 'S2 2DF',    'country': 'GBR'  },  'location': {    'ip_address': '127.0.0.1',    'country_of_residence': 'GBR'  }}api.applicant.create(applicant_details)``````python{  'id': '&lt;APPLICANT_ID&gt;',  'created_at': '2019-10-09T16:52:42Z',  'sandbox': True,  'first_name': 'Jane',  'last_name': 'Doe',  'email': None,  'dob': '1990-01-01',  'delete_at': None,  'href': '/v3.1/applicants/&lt;APPLICANT_ID&gt;',  'id_numbers': [],  'address': {    'flat_number': None,    'building_number': None,    'building_name': None,    'street': 'Second Street',    'sub_street': None,    'town': 'London',    'state': None,    'postcode': 'S2 2DF',    'country': 'GBR',    'line1': None,    'line2': None,    'line3': None  },  'phone_number': None,  'location': {    'ip_address': '127.0.0.1',    'country_of_residence': 'GBR'  }}```See https://documentation.onfido.com/#request,-response-format for moreinformation.### ResourcesResource information and code examples can be found at https://documentation.onfido.com/.### Error Handling- `OnfidoServerError` is raised whenever Onfido returns a `5xx` response- `OnfidoRequestError` is raised whenever Onfido returns a `4xx` response- `OnfidoInvalidSignatureError` is raised whenever a signature from the header is not equal to the expected signature you compute for it- `OnfidoTimeoutError` is raised if a timeout occurs- `OnfidoConnectionError` is raised whenever any other network error occurs- `OnfidoUnknownError` is raised whenever something unexpected happens## Contributing1. Fork it ( https://github.com/onfido/onfido-python/fork )2. Create your feature branch (`git checkout -b my-new-feature`)3. Run the tests (`poetry run pytest tests/test_my_new_feature.py`)4. Commit your changes (`git commit -am 'Add some feature'`)5. Push to the branch (`git push origin my-new-feature`)6. Create a new Pull Request</longdescription>
</pkgmetadata>