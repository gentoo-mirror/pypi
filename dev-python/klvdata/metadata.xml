<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>klvdata=======.. image:: https://travis-ci.org/paretech/klvdata.svg?branch=master    :target: https://travis-ci.org/paretech/klvdata.. image:: https://coveralls.io/repos/github/paretech/klvdata/badge.svg?branch=master    :target: https://coveralls.io/github/paretech/klvdata?branch=master.. image:: https://img.shields.io/pypi/v/klvdata.svg        :target: https://pypi.org/project/klvdata/What?-----Klvdata is a Python library for parsing and constructing Key Length Value (KLV_) formatted binary streams. Common uses of the library would be parsing and displaying `MISB ST`_ 0601 Unmanned Air System (UAS) metadata from `STANAG 4609`_ compliant `MPEG-2 Transport Streams (TS) (MPEG-TS)`_. Note that klvdata alone cannot de-mux KLV data from an MPEG-2 TS, but programs like FFmpeg_ and GStreamer_ can be used with klvdata in the workflow to perform the function... _KLV: https://en.wikipedia.org/wiki/KLV.. _STANAG 4609: http://www.gwg.nga.mil/misb/docs/nato_docs/STANAG_4609_Ed3.pdf.. _MPEG-2 Transport Streams (TS) (MPEG-TS): https://en.wikipedia.org/wiki/MPEG_transport_stream.. _MISB ST: http://www.gwg.nga.mil/misb/st_pubs.html.. _FFMpeg: https://www.ffmpeg.org/.. _GStreamer: https://gstreamer.freedesktop.org/Why?----Not many opensource options available.Features--------- Parses KLV metadata streams.- Supports `MISB ST`_ 0601 UAS Datalink Local Set.- Supports `MISB ST`_ 0102 Security Metadata Local Set.- Built for Python 3.5, 3.6.- Requires no external Python dependencies... _MISB ST: http://www.gwg.nga.mil/misb/st_pubs.htmlQuick Start-----------Try these commands in your GNU/Linux terminal.First:.. code-block:: console    $ pip install klvdata    $ wget https://raw.githubusercontent.com/paretech/klvdata/master/data/DynamicConstantMISMMSPacketData.bin    $ cat &lt;&lt; EOF &gt; klvdata_test.py    #!/usr/bin/env python    import sys, klvdata;    for packet in klvdata.StreamParser(sys.stdin.buffer.read()): packet.structure()    EOFAnd then:.. code-block:: console    $ python ./klvdata_test.py &lt; DynamicConstantMISMMSPacketData.bin        &lt;class 'klvdata.misb0601.UASLocalMetadataSet'&gt;            &lt;class 'klvdata.misb0601.PrecisionTimeStamp'&gt;            &lt;class 'klvdata.misb0601.MissionID'&gt;            &lt;class 'klvdata.misb0601.PlatformHeadingAngle'&gt;            &lt;class 'klvdata.misb0601.PlatformPitchAngle'&gt;            &lt;class 'klvdata.misb0601.PlatformRollAngle'&gt;            &lt;class 'klvdata.misb0601.PlatformDesignation'&gt;            &lt;class 'klvdata.misb0601.ImageSourceSensor'&gt;            &lt;class 'klvdata.misb0601.ImageCoordinateSystem'&gt;            &lt;class 'klvdata.misb0601.SensorLatitude'&gt;            &lt;class 'klvdata.misb0601.SensorLongitude'&gt;            &lt;class 'klvdata.misb0601.SensorTrueAltitude'&gt;            &lt;class 'klvdata.misb0601.SensorHorizontalFieldOfView'&gt;            &lt;class 'klvdata.misb0601.SensorVerticalFieldOfView'&gt;            &lt;class 'klvdata.misb0601.SensorRelativeAzimuthAngle'&gt;            &lt;class 'klvdata.misb0601.SensorRelativeElevationAngle'&gt;            &lt;class 'klvdata.misb0601.SensorRelativeRollAngle'&gt;            &lt;class 'klvdata.misb0601.SlantRange'&gt;            &lt;class 'klvdata.misb0601.TargetWidth'&gt;            &lt;class 'klvdata.misb0601.FrameCenterLatitude'&gt;            &lt;class 'klvdata.misb0601.FrameCenterLongitude'&gt;            &lt;class 'klvdata.misb0601.FrameCenterElevation'&gt;            &lt;class 'klvdata.misb0102.SecurityLocalMetadataSet'&gt;                &lt;class 'klvdata.misb0102.SecurityClassification'&gt;                &lt;class 'klvdata.misb0102.UnknownElement'&gt;                &lt;class 'klvdata.misb0102.UnknownElement'&gt;                &lt;class 'klvdata.misb0102.UnknownElement'&gt;                &lt;class 'klvdata.misb0102.UnknownElement'&gt;                &lt;class 'klvdata.misb0102.UnknownElement'&gt;            &lt;class 'klvdata.misb0601.UASLSVersionNumber'&gt;            &lt;class 'klvdata.misb0601.UnknownElement'&gt;            &lt;class 'klvdata.misb0601.Checksum'&gt;If you have FFmpeg installed and want to try it on real video from a drone with embedded KLV metadata (~97 MB Download):.. code-block:: console    $ wget http://samples.ffmpeg.org/MPEG2/mpegts-klv/Day%20Flight.mpg    $ ffmpeg -i Day\ Flight.mpg -map data-re -codec copy -f data - | python ./klvdata_test.py        &lt;class 'klvdata.misb0601.UASLocalMetadataSet'&gt;            &lt;class 'klvdata.misb0601.PrecisionTimeStamp'&gt;            &lt;class 'klvdata.misb0601.UASLSVersionNumber'&gt;            &lt;class 'klvdata.misb0601.PlatformHeadingAngle'&gt;            &lt;class 'klvdata.misb0601.PlatformPitchAngle'&gt;            &lt;class 'klvdata.misb0601.PlatformRollAngle'&gt;            &lt;class 'klvdata.misb0601.ImageSourceSensor'&gt;            &lt;class 'klvdata.misb0601.ImageCoordinateSystem'&gt;            &lt;class 'klvdata.misb0601.SensorLatitude'&gt;            &lt;class 'klvdata.misb0601.SensorLongitude'&gt;            &lt;class 'klvdata.misb0601.SensorTrueAltitude'&gt;            &lt;class 'klvdata.misb0601.SensorHorizontalFieldOfView'&gt;            &lt;class 'klvdata.misb0601.SensorVerticalFieldOfView'&gt;            &lt;class 'klvdata.misb0601.SensorRelativeAzimuthAngle'&gt;            &lt;class 'klvdata.misb0601.SensorRelativeElevationAngle'&gt;            &lt;class 'klvdata.misb0601.SensorRelativeRollAngle'&gt;            &lt;class 'klvdata.misb0601.SlantRange'&gt;            &lt;class 'klvdata.misb0601.TargetWidth'&gt;            &lt;class 'klvdata.misb0601.FrameCenterLatitude'&gt;            &lt;class 'klvdata.misb0601.FrameCenterLongitude'&gt;            &lt;class 'klvdata.misb0601.FrameCenterElevation'&gt;            &lt;class 'klvdata.misb0601.TargetLocationLatitude'&gt;            &lt;class 'klvdata.misb0601.TargetLocationLongitude'&gt;            &lt;class 'klvdata.misb0601.TargetLocationElevation'&gt;            &lt;class 'klvdata.misb0601.PlatformGroundSpeed'&gt;            &lt;class 'klvdata.misb0601.GroundRange'&gt;            &lt;class 'klvdata.misb0601.Checksum'&gt;            [...]Documentation-------------Documentation is available at https://paretech.github.io/klvdata.Contributing------------Contributions are welcome!Contributors List:------------------- `Fran Raga &lt;https://github.com/All4Gis&gt;`_</longdescription>
</pkgmetadata>