<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://badge.fury.io/py/gpaw.svg    :target: https://pypi.org/project/gpaw/Coverage_GPAW====GPAW is a density-functional theory (DFT) Python_ code based on theprojector-augmented wave (PAW) method and the atomic simulation environment(ASE_). It uses plane-waves, atom-centered basis-functions or real-spaceuniform grids combined with multigrid methods.Webpage: http://wiki.fysik.dtu.dk/gpawRequirements------------* Python_ 3.7 or later* ASE_* NumPy_* SciPy_* LibXC_* A C compiler* A BLAS_ libraryOptional (highly recommended for increased performance):* A MPI_ library (required for parallel calculations)* BLACS_ and ScaLAPACK_ libraries* FFTW_See `Release notes &lt;releasenotes_&gt;`_ for version requirements.Installation------------Do this::    $ python3 -m pip install gpawand make sure you have ``~/.local/bin`` in your $PATH.For more details, please see:    https://wiki.fysik.dtu.dk/gpaw/install.htmlTest your installation----------------------You can do a test calculation with::    $ gpaw testContact-------* Mailing list: gpaw-users_* Chat: #gpaw on Matrix_.* Bug reports and development: gitlab-issues_Please send us bug-reports, patches, code, ideas and questions.Example-------Geometry optimization of hydrogen molecule:&gt;&gt;&gt; from ase import Atoms&gt;&gt;&gt; from ase.optimize import BFGS&gt;&gt;&gt; from ase.io import write&gt;&gt;&gt; from gpaw import GPAW, PW&gt;&gt;&gt; h2 = Atoms('H2',...            positions=[[0, 0, 0],...                       [0, 0, 0.7]])&gt;&gt;&gt; h2.center(vacuum=2.5)&gt;&gt;&gt; h2.calc = GPAW(xc='PBE',...                mode=PW(300),...                txt='h2.txt')&gt;&gt;&gt; opt = BFGS(h2, trajectory='h2.traj')&gt;&gt;&gt; opt.run(fmax=0.02)BFGS:   0  09:08:09       -6.566505       2.2970BFGS:   1  09:08:11       -6.629859       0.1871BFGS:   2  09:08:12       -6.630410       0.0350BFGS:   3  09:08:13       -6.630429       0.0003&gt;&gt;&gt; write('H2.xyz', h2)&gt;&gt;&gt; h2.get_potential_energy()  # ASE's units are eV and Ã…-6.6304292169392784Getting started---------------Once you have familiarized yourself with ASE_ and NumPy_, you should take alook at the GPAW exercises_ and tutorials_... _Python: http://www.python.org/.. _ASE: http://wiki.fysik.dtu.dk/ase.. _NumPy: http://docs.scipy.org/doc/numpy/reference/.. _SciPy: http://docs.scipy.org/doc/scipy/reference/.. _LibXC: http://www.tddft.org/programs/libxc/.. _MPI: http://www.mpi-forum.org/.. _BLAS: http://www.netlib.org/blas/.. _FFTW: http://www.fftw.org/.. _BLACS: http://www.netlib.org/blacs/.. _ScaLAPACK: http://www.netlib.org/scalapack/.. _gpaw-users: https://listserv.fysik.dtu.dk/mailman/listinfo/gpaw-users.. _Matrix: https://matrix.io/#/#gpaw:matrix.org.. _gitlab-issues: https://gitlab.com/gpaw/gpaw/issues.. _exercises: https://wiki.fysik.dtu.dk/gpaw/exercises/exercises.html.. _tutorials: https://wiki.fysik.dtu.dk/gpaw/tutorials/tutorials.html.. _Coverage: https://wiki.fysik.dtu.dk/gpaw/htmlcov/index.html.. _releasenotes: https://wiki.fysik.dtu.dk/gpaw/releasenotes.html</longdescription>
</pkgmetadata>