<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># **Frexco PyLogger**## Install___```bashpip install frexco_pylogger```## Configure___```python# main.pyfrom frexco_pylogger.functions import PyLoggerlogger = PyLogger(appname=&quot;my_app&quot;)logger.http(message=&quot;Uma mensagem http qualquer&quot;, status_code=200, data={&quot;name&quot;: &quot;Um nome qualquer&quot;, &quot;age&quot;: 22})```&gt; 2022-09-02 14:05:59 | [HTTP   ] | Uma mensagem http qualquer | [STATUSCODE 200] | {'name': 'Um nome qualquer', 'age': 22}## Log Types___| Tipo      | Description                                                        ||-----------|--------------------------------------------------------------------|| `error`   | Informar sobre exceptions tratadas                                 || `warning` | Informar eventos ou estados potencialmente prejudicias ao programa || `debug`   | Acompanhar eventos ou estados do programa                          || `info`    | Descrever infos detalhadas sobre o estado do programa              || `http`    | Informar dados de requests e responses feitas via http             |## Middlewares___### django```python# httpLogger.pyfrom frexco_pylogger.functions import PyLoggerfrom django.utils.deprecation import MiddlewareMixinclass HTTPLoggerMiddleware(MiddlewareMixin):    def process_response(self, request, response):        logger = PyLogger(appname=&quot;my_django_app&quot;)        logger.http(message=f'{request.META.get(&quot;REMOTE_ADDR&quot;)} {request.method} {request.META.get(&quot;PATH_INFO&quot;)}',                    status_code=response.status_code)        return response``````python# setting.pyMIDDLEWARE = [    ...,    'app.utils.httpLogger.HTTPLoggerMiddleware' # path to your middleware file]```### Flask```python# Your app setup filefrom flask import Flask, request, Responsefrom frexco_pylogger.functions import PyLoggerapp = Flask(__name__)logger = PyLogger(appname=&quot;my_flask_app&quot;)@app.after_requestdef log_response(response: Response):    logger.http(message=f'{request.remote_addr} {request.method} {request.path}',                status_code=response.status_code)    return response```## Alert```python# Seu arquivo de configuração de loggerfrom frexco_pylogger.functions import PyLoggerlogger = PyLogger(appname=&quot;my_app_name&quot;, group=&quot;nome_do_grupo&quot;) # Ex: group=&quot;warehouse&quot;, Ex: group=&quot;consumer&quot;logger.error(message=&quot;Uma messagem de error qualquer&quot;,            status_code=500, data={&quot;name&quot;: &quot;Um error&quot;}) # Enviar alertalogger.error(message=&quot;Uma messagem de error qualquer repetida&quot;,            status_code=500, data={&quot;name&quot;: &quot;Um error&quot;}, alert=False) # Não enviar alerta```</longdescription>
</pkgmetadata>