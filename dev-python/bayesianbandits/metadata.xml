<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `bayesianbandits`bayesianbandits is a Pythonic framework for building agents to maximize rewards in multi-armed bandit (MAB) problems. These agents can handle a number of MAB subproblems, such as contextual, restless, and delayed reward bandits.Building an agent is as simple as defining arms and using the necessary decorators. For example, to create an agent for a Bernoulli bandit:```pythonimport numpy as npfrom bayesianbandits import Bandit, Arm, epsilon_greedy, DirichletClassifierdef reward_func(x):    return np.take(x, 0, axis=-1)def action1_func():    # do action 1    ...def action2_func():    # do action 2    ...clf = DirichletClassifier({&quot;yes&quot;: 1.0, &quot;no&quot;: 1.0})policy = epsilon_greedy(0.1)class Agent(Bandit, learner=clf, policy=policy):    arm1 = Arm(action1_func, reward_func)    arm2 = Arm(action2_func, reward_func)agent = Agent()agent.pull() # receive some rewardagent.update(&quot;yes&quot;) # update with observed reward```## Getting StartedInstall this package from PyPI.```pip install -U bayesianbandits```## UsageCheck out the [documentation](https://bayesianbandits.readthedocs.io/en/latest/) for examples and an API reference. </longdescription>
</pkgmetadata>