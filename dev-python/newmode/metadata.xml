<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># newmode-python## IntroductionThis project contains the Python API wrapper for New/Mode API.## Versions`newmode-python` uses [Semantic Versioning](https://semver.org) for all changes.### Supported Python VersionsThis library has been tested in Python version &gt;= 3.7. Other Python 3.x could be supported.## InstallationInstall from PyPi using [pip](http://www.pip-installer.org/en/latest/), apackage manager for Python.    pip install newmodeDon't have pip installed? Try installing it, by running this from the commandline:    $ curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | pythonOr, you can [download the source code(ZIP)](https://github.com/twilio/twilio-python/zipball/master &quot;twilio-pythonsource code&quot;) for `twilio-python`, and then run:    python setup.py installYou may need to run the above commands with `sudo`.## Getting StartedGetting started with the New/Mode API couldn't be easier. Create a`Client` and you're ready to go.### API CredentialsThe `Client` needs your New/Mode credentials. You can either pass thesedirectly to the constructor (see the code below) or via environment variables.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)```Alternately, a `Client` constructor without these parameters willlook for `NEWMODE_API_USER` and `NEWMODE_API_PASSWORD` variables inside thecurrent environment. API version has a default value of v1.0 soit's not required to pass this parameter.We suggest storing your credentials as environment variables. Why? You'll neverhave to worry about committing your credentials and accidentally posting themsomewhere public.```pythonfrom Newmode import Clientclient = Client()```### Example usage```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)response = client.getTools()print(response)```### API Functions#### getToolsReturn all existing tools.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)response = client.getTools()print(response)```#### getToolReturn specific tool.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)tool_id = &quot;XX&quot;response = client.getTool(tool_id)print(response)```#### lookupTargetsLookup for targets for a given tool.The search parameter could be:##### EmptyFor custom target tools, this will return all targets.##### Postal CodeFor postal code tools, this will return targets matching the postal code.##### CustomFor csv tools, where search is a valid search term this will return matching targets.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)tool_id = &quot;XX&quot;search = &quot;XXX&quot;response = client.lookupTargets(tool_id, search)print(response)```#### getActionReturn action information for given tool.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)tool_id = &quot;XX&quot;response = client.getAction(tool_id)print(response)```#### runActionRun action for given tool.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)tool_id = &quot;XX&quot;payload = {&quot;first_name&quot;: &quot;Mark&quot;,&quot;last_name&quot;: &quot;Styles&quot;,&quot;email_address&quot;: &quot;lambic@pm.me&quot;,&quot;postal_code&quot;: &quot;H4E 2Y7&quot;,&quot;email_subject&quot;: &quot;This is my subject&quot;,&quot;your_letter&quot;: &quot;This is my letter&quot;}response = client.runAction(tool_id, payload)print(response)```#### getTargetGet specific target.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)target_id = &quot;XXXXXX&quot;response = client.getTarget(target_id)print(response)```#### getCampaignsGet existing campaigns.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)response = client.getCampaigns()print(response)```#### getCampaignGet specific campaign.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)campaign_id = &quot;XX&quot;response = client.getCampaign(campaign_id)print(response)```#### getOrganizationsGet existing organizations.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)response = client.getOrganizations()print(response)```#### getOrganizationGet specific organization.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)organization_id = &quot;XX&quot;response = client.getOrganization(organization_id)print(response)```#### getServicesGet existing services.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)response = client.getServices()print(response)```#### getServiceGet specific service.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)service_id = &quot;XX&quot;response = client.getService(service_id)print(response)```#### getOutreachesGet existing outreaches for given tool.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)tool_id = &quot;XX&quot;response = client.getOutreaches(tool_id)print(response)```#### getOutreachGet specific outreach.```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)outreach_id = &quot;XX&quot;response = client.getOutreach(outreach_id)print(response)```### PagingIn order to get results paginated, you need to send params like this:```pythonfrom Newmode import Clientapi_user = &quot;XXXXXXXXXXXXXXXXX&quot;api_password = &quot;YYYYYYYYYYYYYYYYYY&quot;api_version = &quot;v1.0&quot;client = Client(api_user, api_password, api_version)params = {'page[size]': 5,'page[number]': 2}response = client.getServices(params = params)print(response)```### Publishing new versionsIn order to publish new versions to Pypi.org, you need to run:```python3 setup.py sdist bdist_wheelpython3 -m twine upload dist/*```### Getting helpIf you need help installing or using the library, please [contact us](https://www.newmode.net/contact).</longdescription>
</pkgmetadata>