<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/Cobertos/md2notion/actions&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;build status&quot; src=&quot;https://github.com/Cobertos/md2notion/workflows/Package%20Tests/badge.svg&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/md2notion/&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;pypi python versions&quot; src=&quot;https://img.shields.io/pypi/pyversions/md2notion.svg&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://twitter.com/cobertos&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;twitter&quot; src=&quot;https://img.shields.io/badge/twitter-%40cobertos-0084b4.svg&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://cobertos.com&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;twitter&quot; src=&quot;https://img.shields.io/badge/website-cobertos.com-888888.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt;# Notion.so Markdown ImporterAn importer for Markdown files to [Notion.so](https://notion.so) using [`notion-py`](https://github.com/jamalex/notion-py)It provides these features over Notion.so's Markdown importer:* Picking a Notion.so page to upload to (instead of them all uploading to the root)* Code fences keep their original language (or as close as we can match it)* Code fences are formatted properly* Inline HTML is preserved* (Optionally) Upload images that are memtioned in the HTML `&lt;img&gt;` tags.* Markdown frontmatter is preserved* Local image references will be uploaded from relative URLs* Image alts are loaded as captions instead of as `TextBlock`s* Handles nested lists properly* Among other improvements...Supports Python 3.6+## Usage from CLI* `pip install md2notion`* Then run like `python -m md2notion [token_v2] [page-url] [...markdown_path_glob_or_url]`* The markdown at the given path will be added as a new child to the Notion.so note at `page-url`There are also some configuration options:* `--clear-previous`: If a child of the note at `page-url` has the same name as what you're uploading, it will first be removed.* `--append`: Instead of making a new child, it will append the markdown contents to the note at `page-url`* `--html-img`: Upload images that are memtioned in the HTML `&lt;img&gt;` tags.## Usage from script* `pip install md2notion`* In your Python file:```pythonfrom notion.client import NotionClientfrom notion.block import PageBlockfrom md2notion.upload import upload# Follow the instructions at https://github.com/jamalex/notion-py#quickstart to setup Notion.pyclient = NotionClient(token_v2=&quot;&lt;token_v2&gt;&quot;)page = client.get_block(&quot;https://www.notion.so/myorg/Test-c0d20a71c0944985ae96e661ccc99821&quot;)with open(&quot;TestMarkdown.md&quot;, &quot;r&quot;, encoding=&quot;utf-8&quot;) as mdFile:    newPage = page.children.add_new(PageBlock, title=&quot;TestMarkdown Upload&quot;)    upload(mdFile, newPage) #Appends the converted contents of TestMarkdown.md to newPage```If you need to process `notion-py` block descriptors after parsing from Markdown but before uploading, consider using `convert` and `uploadBlock` separately. Take a look at [`upload.py#upload()`](https://github.com/Cobertos/md2notion/blob/master/md2notion/upload.py) for more.```pythonfrom md2notion.upload import convert, uploadBlockrendered = convert(mdFile)# Process the rendered array of `notion-py` block descriptors here# (just dicts with some properties to pass to `notion-py`)# Upload all the blocksfor blockDescriptor in rendered:    uploadBlock(blockDescriptor, page, mdFile.name)```If you need to parse Markdown differently from the default, consider subclassing [`NotionPyRenderer`](https://github.com/Cobertos/md2notion/blob/master/md2notion/NotionPyRenderer.py) (a [`BaseRenderer` for `mistletoe`](https://github.com/miyuchina/mistletoe)). You can then pass it to `upload(..., notionPyRendererCls=NotionPyRenderer)` as a parameter.## Example, Custom Hexo ImporterHere's an example that imports a Hexo blog (slghtly hacky).```pythonimport ioimport os.pathimport globfrom pathlib import Pathfrom notion.block import PageBlockfrom notion.client import NotionClientfrom md2notion.upload import uploadclient = NotionClient(token_v2=&quot;&lt;token_v2&gt;&quot;)page = client.get_block(&quot;https://www.notion.so/myorg/Test-c0d20a71c0944985ae96e661ccc99821&quot;)for fp in glob.glob(&quot;../source/_posts/*.md&quot;, recursive=True):    with open(fp, &quot;r&quot;, encoding=&quot;utf-8&quot;) as mdFile:        #Preprocess the Markdown frontmatter into yaml code fences        mdStr = mdFile.read()        mdChunks = mdStr.split(&quot;---&quot;)        mdStr = \f&quot;&quot;&quot;```yaml{mdChunks[1]}`` `{'---'.join(mdChunks[2:])}&quot;&quot;&quot;        mdFile = io.StringIO(mdStr)        mdFile.__dict__[&quot;name&quot;] = fp #Set this so we can resolve images later        pageName = os.path.basename(fp)[:40]        newPage = page.children.add_new(PageBlock, title=pageName)        print(f&quot;Uploading {fp} to Notion.so at page {pageName}&quot;)        #Get the image relative to the markdown file in the flavor that Hexo        #stores its images (in a folder with the same name as the md file)        def convertImagePath(imagePath, mdFilePath):            return Path(mdFilePath).parent / Path(mdFilePath).stem / Path(imagePath)        upload(mdFile, newPage, imagePathFunc=convertImagePath)```## ContributingSee [CONTRIBUTING.md](https://github.com/Cobertos/md2notion/blob/master/CONTRIBUTING.md)</longdescription>
</pkgmetadata>