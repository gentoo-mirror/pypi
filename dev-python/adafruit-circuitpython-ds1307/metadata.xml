<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-ds1307/badge/?version=latest    :target: https://docs.circuitpython.org/projects/ds1307/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_DS1307/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_DS1307/actions/    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackThis is a great battery-backed real time clock (RTC) that allows yourmicrocontroller project to keep track of time even if it is reprogrammed,or if the power is lost. Perfect for datalogging, clock-building,time stamping, timers and alarms, etc. The DS1307 is the most popularRTC - but it requires 5V power to work.The DS1307 is simple and inexpensive but not a high precision device. It maylose or gain up to two seconds a day. For a high-precision, temperaturecompensated alternative, please check out the`DS3231 precision RTC &lt;https://www.adafruit.com/products/3013/&gt;`_.If you do not need a DS1307, or you need a 3.3V-power/logic capable RTCplease check out our affordable`PCF8523 RTC breakout &lt;https://www.adafruit.com/products/3295&gt;`_... image:: ../docs/_static/3296-00.jpg    :alt: DS1307Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_* `Register &lt;https://github.com/adafruit/Adafruit_CircuitPython_Register&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Installing from PyPI=====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-ds1307/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-ds1307To install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-ds1307To install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-ds1307Usage Notes===========Of course, you must import the library to use it:.. code:: python3    import board    import adafruit_ds1307    import timeAll the Adafruit RTC libraries take an instantiated and active I2C object(from the ``board`` library) as an argument to their constructor. The way tocreate an I2C object depends on the board you are using. For boards with labeledSCL and SDA pins, you can:.. code:: python    import boardNow, to initialize the I2C bus:.. code:: python    i2c = board.I2C()Once you have created the I2C interface object, you can use it to instantiatethe RTC object:.. code:: python    rtc = adafruit_ds1307.DS1307(i2c)To set the time, you need to set ``datetime`` to a `time.struct_time` object:.. code:: python    rtc.datetime = time.struct_time((2017,1,9,15,6,0,0,9,-1))After the RTC is set, you retrieve the time by reading the ``datetime``attribute and access the standard attributes of a struct_time such as ``tm_year``,``tm_hour`` and ``tm_min``... code:: python    t = rtc.datetime    print(t)    print(t.tm_hour, t.tm_min)Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/ds1307/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_DS1307/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>