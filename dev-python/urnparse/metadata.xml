<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># urnparsePython library for generating and parsing [RFC 8141]( https://tools.ietf.org/html/rfc8141) compliant uniformresource names (URN).## InstallationTo use this library in your project, install it with pip```shellpip install urnparse```## Usage### Create URN object from RFC 8141 formatted stringTo validate a given URN string against the RFC 8141 specification and constructan URN object from it, use the `URN8141.from_string()` method:```pythonfrom urnparse import URN8141urn_string = 'urn:example:example.org:resources:'+\             'example%20resource?+res1=a'+\             '?=param1=test&amp;param2=test2#example.org'urn = URN8141.from_string(urn_string)````You can then access the specific URN components:```pythonprint(urn.namespace_id)# exampleprint(urn.specific_string.decoded)# example.org:resources:example resourceprint(urn.specific_string.parts)# ['example.org', 'resources', 'example resource']print(urn.rqf_component.resolution)# {'res1': 'a'}print(urn.rqf_component.query)# {'param1': 'test', 'param2': 'test2'}print(urn.rqf_component.fragment)# example.org```#### Create URN string from component objects To create an RFC 8141 formatted URN string for a certain resource, construct the URNobject from the following components:````pythonfrom urnparse import URN8141, NSIdentifier, NSSString, RQFComponentnid = NSIdentifier('example')nss = NSSString('example.org:resources:example%20resource', encoded=True)rqf = RQFComponent(resolution_string='res1=a',                   query_string='param1=test&amp;param2=test2',                   fragment='example.org')urn = URN8141(nid=nid, nss=nss, rqf=rqf)print(urn)# urn:example:example.org:resources:example%20resource?+res1=a?=param1=test&amp;param2=test2#example.org````</longdescription>
</pkgmetadata>