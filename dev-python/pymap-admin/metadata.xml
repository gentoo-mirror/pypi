<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pymap-admin===========[![build](https://github.com/icgood/pymap-admin/actions/workflows/python-check.yml/badge.svg)](https://github.com/icgood/pymap-admin/actions/workflows/python-check.yml)[![PyPI](https://img.shields.io/pypi/v/pymap-admin.svg)](https://pypi.python.org/pypi/pymap-admin)[![PyPI](https://img.shields.io/pypi/pyversions/pymap-admin.svg)](https://pypi.python.org/pypi/pymap-admin)![platforms](https://img.shields.io/badge/platform-linux%20%7C%20macOS%20%7C%20windows-blueviolet)[![PyPI](https://img.shields.io/pypi/l/pymap-admin.svg)](https://pypi.python.org/pypi/pymap-admin)The `pymap-admin` tool can be used to perform various admin functions against arunning pymap server. This is a separate [grpc][2] service using [grpclib][3]listening on a socket.#### [API Documentation](https://icgood.github.io/pymap-admin/)### ConnectionsBy default, the `pymap-admin` command will attempt to interact with a pymapadmin server over a UNIX socket, typically in `/tmp/pymap/pymap-admin.sock`.See the `pymap-admin --help` commands for other connection options.## Commands### `save-args` CommandWhen administering remote pymap servers, it can be cumbersome to always supplyconnection arguments every time, such as `--host`. This command saves thearguments it is given to a config file.```console$ pymap-admin --host imap.example.com --port 50051 save-argsConfig file written: /home/user/.config/pymap/pymap-admin.conf```### `login` CommandSends login credentials and gets a bearer token. See[Authentication](#authentication) for more information.```console$ pymap-admin login -is user@example.comuser@example.com Password:result {  response: &quot;. OK Login completed.&quot;}bearer_token: &quot;MDAwZWxvY2F0aW9uIAowMDMwaWRlbnRpZmllciA0ZmM4MD...&quot;```### `ping` CommandPings the running server and reports its version string.```console$ pymap-admin pingpymap_version: &quot;0.21.1&quot;pymap_admin_version: &quot;0.5.2&quot;```### `append` CommandTo append a message directly to a mailbox, without using IMAP, use the`append` admin command. First, check out the help:```console$ pymap-admin append --help```As a basic example, you can append a message to a like this:```console$ cat &lt;&lt;EOF | pymap-admin append demouser&gt; From: user@example.com&gt;&gt; test message!&gt; EOFmailbox: &quot;INBOX&quot;validity: 1784302999uid: 1012.0.0 Message delivered```### User CommandsThese commands access and manipulate the users on the system:```console$ pymap-admin set-user --help$ pymap-admin get-user --help$ pymap-admin delete-user --help```Passing a username to `get-user` will display that user's metadata, includingthe (securely hashed) password string. A username can be deleted with`delete-user`. The `set-user` command will create and update a username and itspassword.If using pymap as part of the [slimta-docker][4] configuration, see its[Address Management][5] documentation for additional options.#### Admin RoleThe builtin pymap backends use a special role string &quot;admin&quot; to assign adminprivileges to existing users. Without the admin role, a user may only use`set-user` to change their own password. A user with the admin role (or usingthe admin token) can make any change to any user.```console$ pymap-admin set-user --role admin user@example.com```## AuthenticationEvery command except [`ping`](#ping-command) requires authentication toperform. Most commands will send a [macaroon][6] token to authenticate, exceptfor [`login`](#login-command) which uses the credentials provided.When running `pymap-admin` and `pymap` on the same machine, a temporary filecontaining an admin token is used by default, allowing unrestricted access toall operations. This token is verified in-memory and is only valid for the*current* `pymap` process.To use this admin token on another machine, copy the `PYMAP_ADMIN_TOKEN=...`line printed out on `pymap` startup and prefix it to `pymap-admin` calls, e.g.:```console$ PYMAP_ADMIN_TOKEN=... pymap-admin get-user user@example.com```### Permanent TokensFor a token that is not tied to the current `pymap` process, use the[`login`](#login-command) with the credentials of a user in the system. Theresulting token can be used to authenticate as that user in the future.```console$ pymap-admin login -is user@example.com```The `-s` flag will cause the token to be saved and used on future `pymap-admin`commands. Use `--token-file` or `$PYMAP_ADMIN_TOKEN_FILE` to specify alocation, otherwise it is saved to `~/.pymap-admin.token`.If `-s` is not given, the `bearer_token` value from the output can provided tofuture `pymap-admin` commands with `$PYMAP_ADMON_TOKEN`.[1]: https://github.com/icgood/pymap[2]: https://grpc.io/[3]: https://github.com/vmagamedov/grpclib[4]: https://github.com/slimta/slimta-docker[5]: https://github.com/slimta/slimta-docker#address-management[6]: https://github.com/ecordell/pymacaroons</longdescription>
</pkgmetadata>