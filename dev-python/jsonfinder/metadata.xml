<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>``jsonfinder`` lets you find and extract JSON objects and arrays embedded within a string using a simple iterator. For example::    &gt;&gt;&gt; s = 'jack [1,2,3] john'    &gt;&gt;&gt; for start, end, obj in jsonfinder(s):    ...     print start, ':', end    ...     if obj is None:    ...         print 'String:', repr(s[start:end])    ...     else:    ...         print 'List of length', len(obj)    0 : 5    String: 'jack '    5 : 12    List of length 3    12 : 17    String: ' john'    &gt;&gt;&gt; assert len(s) == endTwo other convenience methods are also provided: ``has_json`` and ``only_json``::    &gt;&gt;&gt; has_json('stuff {&quot;key&quot;: &quot;value&quot;} things')    True    &gt;&gt;&gt; has_json('stuff only')    False    &gt;&gt;&gt; only_json('stuff {&quot;key&quot;: &quot;value&quot;} things')[2]    {u'key': u'value'}    &gt;&gt;&gt; only_json('stuff only')    Traceback (most recent call last):    ...    ValueError: No JSON object found in argument.    &gt;&gt;&gt; only_json('{}{}')    Traceback (most recent call last):    ...    ValueError: More than one JSON object found in the argument.All the methods allow a custom JSONDecoder to be passed in for flexibility.The library also includes a command-line tool to format JSON and filter out parts of the input based on whether JSON is present.It's like a more flexible version of python's built in ``json.tool``, a ``grep -v`` for JSON, and more. For example::    $ cat cli_example.txt    This line contains no JSON and will be deleted by the --delete other-lines option.    On the other hand {&quot;json&quot;:   [&quot;is&quot;, &quot;formatted&quot;]  } and text surrounding it is preserved (but can also be removed if desired).    $ jsonfinder -i cli_example.txt --delete other-lines    On the other hand {        &quot;json&quot;: [            &quot;is&quot;,            &quot;formatted&quot;        ]    } and text surrounding it is preserved (but can also be removed if desired).    $ jsonfinder -i cli_example.txt --delete other-lines | jsonfinder --delete context --format tiny    {&quot;json&quot;:[&quot;is&quot;,&quot;formatted&quot;]}See the ``--help`` option in the command-line for more details.Installation is as simple as::    pip install jsonfinder</longdescription>
</pkgmetadata>