<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;&lt;i&gt;✨ pysilk ✨ &lt;/i&gt;&lt;/h1&gt;&lt;h3 align=&quot;center&quot;&gt;The python binding for &lt;a href=&quot;https://github.com/kn007/silk-v3-decoder&quot;&gt;silk-v3-decoder&lt;/a&gt; &lt;/h3&gt;[![pypi](https://img.shields.io/pypi/v/silk-python.svg)](https://pypi.org/project/silk-python/)![python](https://img.shields.io/pypi/pyversions/silk-python)![implementation](https://img.shields.io/pypi/implementation/silk-python)![wheel](https://img.shields.io/pypi/wheel/silk-python)![license](https://img.shields.io/github/license/synodriver/pysilk.svg)![action](https://img.shields.io/github/workflow/status/synodriver/pysilk/build%20wheel)## 安装```bashpip install silk-python```## 使用- encode```pythonimport pysilkwith open(&quot;verybiginput.pcm&quot;, &quot;rb&quot;) as pcm, open(&quot;output.silk&quot;, &quot;wb&quot;) as silk:    pysilk.encode(pcm, silk, 24000, 24000)```- decode```pythonimport pysilkwith open(&quot;verybiginput.silk&quot;, &quot;rb&quot;) as silk, open(&quot;output.pcm&quot;, &quot;wb&quot;) as pcm:    pysilk.decode(silk, pcm, 24000)```## 支持功能- 接受任何二进制的```file-like object```，比如```BytesIO```，可以流式解码大文件- 包装了silk的全部C接口的参数，当然他们都有合理的默认值- 基于```Cython```， [关键部位](https://github.com/synodriver/pysilk/blob/stream/pysilk/silk.pxd#L43-L65) 内联C函数，高性能## 公开函数```pythonfrom typing import BinaryIOdef encode(input: BinaryIO, output: BinaryIO, sample_rate: int, bit_rate: int, max_internal_sample_rate: int = 24000, packet_loss_percentage: int = 0, complexity: int = 2, use_inband_fec: bool = False, use_dtx: bool = False, tencent: bool = True) -&gt; bytes: ...def decode(input: BinaryIO, output: BinaryIO, sample_rate: int, frame_size: int = 0, frames_per_packet: int = 1, more_internal_decoder_frames: bool = False, in_band_fec_offset: int = 0, loss: bool = False) -&gt; bytes: ...```## 公开异常```pythonclass SilkError(Exception):    pass```### ✨v0.2.0✨合并了[CFFI](https://github.com/synodriver/pysilk-cffi) 的工作### 本机编译```python -m pip install setuptools wheel cython cffigit clone https://github.com/synodriver/pysilkcd pysilkgit submodule update --init --recursivepython setup.py bdist_wheel --use-cython --use-cffi```### 后端选择默认由py实现决定，在cpython上自动选择cython后端，在pypy上自动选择cffi后端，使用```SILK_USE_CFFI```环境变量可以强制选择cffi</longdescription>
</pkgmetadata>