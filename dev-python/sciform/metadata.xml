<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sciform#######|  **Repository:** `&lt;https://github.com/jagerber48/sciform&gt;`_|  **Documentation:** `&lt;https://sciform.readthedocs.io/en/stable/&gt;`_|  **PyPi:** `&lt;https://pypi.org/project/sciform/&gt;`_Overview--------``sciform`` is used to convert python float objects into stringsaccording to a variety of user-selected scientific formatting optionsincluding decimal, binary, fixed-point, scientific and engineeringformats.Where possible, formatting follows documented standards such as thosepublished by `BIPM &lt;https://www.bipm.org/en/&gt;`_ or`IEC &lt;https://iec.ch/homepage&gt;`_.``sciform`` provides certain options, such as engineering notation,well-controlled significant figure rounding, and separator customizationwhich are not provided by the python built-in`format specification mini-language (FSML) &lt;https://docs.python.org/3/library/string.html#format-specification-mini-language&gt;`_.Installation------------Install with pip::   pip install sciformUsage=====``sciform`` provides two primary methods for formatting floats intoscientific formatting strings.The first is via the ``Formatter`` object and the second is using stringformatting and the custom FSML with the ``sfloat`` object.&gt;&gt;&gt; from sciform import Formatter, RoundMode, GroupingSeparator, ExpMode&gt;&gt;&gt; sform = Formatter(round_mode=RoundMode.PREC,...                   precision=6,...                   upper_separator=GroupingSeparator.SPACE,...                   lower_separator=GroupingSeparator.SPACE)&gt;&gt;&gt; print(sform(51413.14159265359))51 413.141 593&gt;&gt;&gt; sform = Formatter(round_mode=RoundMode.SIG_FIG,...                   precision=4,...                   exp_mode=ExpMode.ENGINEERING)&gt;&gt;&gt; print(sform(123456.78))123.5e+03&gt;&gt;&gt; from sciform import sfloat&gt;&gt;&gt; num = sfloat(123456)&gt;&gt;&gt; print(f'{num:_!2f}')120_000``sciform`` can also be used to format pairs of value/uncertainty floatsusing the ``Formatter`` or ``vufloat`` objects.&gt;&gt;&gt; sform = Formatter(round_mode=RoundMode.SIG_FIG,...                   precision=2,...                   upper_separator=GroupingSeparator.SPACE,...                   lower_separator=GroupingSeparator.SPACE)&gt;&gt;&gt; print(sform(123456.654321, 0.0034))123 456.654 3 +/- 0.003 4&gt;&gt;&gt; sform = Formatter(round_mode=RoundMode.SIG_FIG,...                   precision=4,...                   exp_mode=ExpMode.ENGINEERING)&gt;&gt;&gt; print(sform(123456.654321, 0.0034))(123.456654321 +/- 0.000003400)e+03&gt;&gt;&gt; from sciform import vufloat&gt;&gt;&gt; num = vufloat(123456.654321, 0.0034)&gt;&gt;&gt; print(f'{num:_!2f}')123_456.6543 +/- 0.0034================Acknowledgements================``sciform`` was heavily motivated by the prefix formatting provided inthe `prefixed &lt;https://github.com/Rockhopper-Technologies/prefixed&gt;`_package and the value +/- uncertainty formatting in the`uncertainties &lt;https://github.com/lebigot/uncertainties&gt;`_ package.</longdescription>
</pkgmetadata>