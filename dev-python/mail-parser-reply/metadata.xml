<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Mail Reply Parser 📧🐍 [![Python](https://img.shields.io/badge/Made%20with-Python%203.x-blue.svg?style=flat-square&amp;logo=Python&amp;logoColor=white)](https://www.python.org/) [![Version](https://img.shields.io/badge/Version-1.2-dc2f02.svg?style=flat-square&amp;logoColor=white)](https://github.com/alfonsrv/mail-parser-reply)### Multi-language email reply parsing for international environments 🌍Mail clients handle reply formatting differently, making reliable parsing difficult. Thank god we have [standards](https://xkcd.com/927/).  This library splits *text-based* emails into separate replies based on common headers produced by different, multilingual clients usually indicating separation.Replies can either present the whole mail message body, or strip headers, signatures and common disclaimers if required. Currently supported languages are: English (`en`), German (`de`), French (`fr`) – adding more languages is quite easy.This is an improved Python implementation of GitHub's Ruby-based [email_reply_parser](https://github.com/github/email_reply_parser/) and an adaptation of Zapier's [email-reply-parser](https://github.com/zapier/email-reply-parser) which both split the mails in fragments instead of distinct replies. They also only support English.## ⭐ Features⭐ Easy to implement  ⭐ Multilanguage Support  ⭐ Text-based mail parsing  ⭐ Detect headers, signatures and disclaimers  ⭐ Fully type annotated  ⭐ Easy-to-read code and well-tested  ## Overview 🔭This library makes it easy to split an incoming mail into replies, making working with emails much more manageableand easily providing the text content for each reply – with or without signatures, disclaimers and headers.For example, it can turn the following email:```Awesome! I haven't had another problem with it.Thanks,alfonsrvOn Wed, Dec 20, 2023 at 13:37, RAUSYS &lt;info@rausys.de&gt; wrote:&gt; The good news is that I've found a much better query for lastLocation.&gt; It should run much faster now. Can you double-check?```Into just the replied text content:```Awesome! I haven't had another problem with it.```## Get started 👾### Installation```bashpip install mail-parser-reply```### Parse Replies```pythonfrom mailparser_reply import EmailReplyParsermail_body = 'foobar'; languages = ['en', 'de']mail_message = EmailReplyParser(languages=languages).read(text=mail_body)print(mail_message.replies)```*Or* get only the latest reply using:```pythonlatest_reply = EmailReplyParser(languages=languages).parse_reply(text=mail_body)```### Parser API```EmailMessage.text: Mail bodyEmailMessage.languages: Languages to use for parsing headersEmailMessage.replies: List of EmailReply; single parsed repliesEmailMessage.include_english: Always include English language for parsingEmailMessage.default_language: Default language to use if language dictionary                                doesn't includeEmailMessage.HEADER_REGEX: RegEx for identifying headers, separating mailsEmailMessage.SIGNATURE_REGEX: RegEx for identifying signaturesEmailMessage.DISCLAIMERS_REGEX: RegEx for identifying disclaimersEmailMessage.read(): Parse EmailMessage.text to EmailReply which are then stored                      in EmailMessage.repliesEmailReply.content: Unprocessed mail body with headers, signatures, disclaimersEmailReply.body: Mail body without headers, signatures, disclaimersEmailReply.full_body: Mail body; just without headersEmailReply.headers: Identified HeadersEmailReply.signatures: Identified SignaturesEmailReply.disclaimers: Identified disclaimers```---[![Buy me a Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/alfonsrv)  </longdescription>
</pkgmetadata>