<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># opstrat[![PyPI](https://img.shields.io/pypi/v/opstrat)](https://pypi.org/project/opstrat/)[![PyPI - License](https://img.shields.io/pypi/l/opstrat)](https://pypi.org/project/opstrat/)[![GitHub top language](https://img.shields.io/github/languages/top/hashabcd/opstrat)](https://github.com/abhijith-git/opstrat)[![GitHub Repo stars](https://img.shields.io/github/stars/abhijith-git/opstrat?style=social)](https://github.com/abhijith-git/opstrat)[![Twitter Follow](https://img.shields.io/twitter/follow/hashabcd?style=social)](https://twitter.com/intent/user?screen_name=hashabcd)[![Youtube](https://img.shields.io/youtube/views/EU3L4ziz3nk?style=social)](https://www.youtube.com/watch?v=EU3L4ziz3nk)Python library for visualizing options.## Requirementspandas, numpy, matplotlib, seaborn, yfinance## InstallationUse the package manager [pip](https://pip.pypa.io/en/stable/) to install opstrat.```bashpip install opstrat```## Usage## Import opstrat```pythonimport opstrat```## Version check```pythonop.__version__```If you are using an older version upgrade to the latest package using:```bashpip install opstrat --upgrade```# 1. single_plotter()Used for plotting payoff diagram involving multiple options.Parameters---op_type: kind {'c','p'}, default:'c'&lt;br&gt;   &amp;emsp; Opion type&gt;&gt; 'c': call option, 'p':put option spot: int, float, default: 100&lt;br&gt;   &amp;emsp;Spot Price   spot_range: int, float, optional, default: 5&lt;br&gt;   &amp;emsp;Range of spot variation in percentage    strike: int, float, default: 102&lt;br&gt;   &amp;emsp;Strike Pricetr_type: kind {'b', 's'} default:'b'&lt;br&gt;   &amp;emsp;Transaction Type&gt;&gt; 'b': long, 's': shortop_pr: int, float, default: 10&lt;br&gt;    &amp;emsp;Option Price### 1.a Default plotOption type : Call&lt;br&gt;Spot Price : 100&lt;br&gt;Spot range : +/- 5% &lt;br&gt;Strike price: 102 &lt;br&gt;Position : Long&lt;br&gt;Option Premium: 10 &lt;br&gt;```pythonop.single_plotter()```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/fig1.png)Green : Profit&lt;br&gt;Red : Loss### 1.b Input parameters Strike Price : 450&lt;br&gt;Spot price : 460&lt;br&gt;Option type : Put Option&lt;br&gt; Position : Short&lt;br&gt;Option Premium : 12.5&lt;br&gt;```pythonop.single_plotter(spot=460, strike=460, op_type='p', tr_type='s', op_pr=12.5)```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/fig2.png)# 2. multi_plotter()Used for plotting a single option &lt;br&gt;Parameters----------spot: int, float, default: 100&lt;br&gt;&amp;emsp;    Spot Price   spot_range: int, float, optional, default: 20&lt;br&gt;&amp;emsp;    Range of spot variation in percentage    op_list: list of dictionary&lt;br&gt;       &amp;emsp;Each dictionary must contiain following keys:   &lt;br&gt;&amp;emsp; 'strike': int, float, default: 720       &lt;br&gt;&amp;emsp;&amp;emsp;Strike Price   &lt;br&gt;&amp;emsp; 'tr_type': kind {'b', 's'} default:'b'      &lt;br&gt;&amp;emsp;&amp;emsp;Transaction Type&gt;&gt; 'b': long, 's': short   &lt;br&gt;&amp;emsp; 'op_pr': int, float, default: 10      &lt;br&gt;&amp;emsp;&amp;emsp;Option Price   &lt;br&gt;&amp;emsp; 'op_type': kind {'c','p'}, default:'c'      &lt;br&gt;&amp;emsp;&amp;emsp;Opion type&gt;&gt; 'c': call option, 'p':put option ### 2.a Default plot : The short strangle Options trading that involve: &lt;br&gt;&amp;emsp;(a)selling of a slightly out-of-the-money put and &lt;br&gt;&amp;emsp;(b)a slightly out-of-the-money call of the same underlying stock and expiration date. &lt;br&gt;spot_range=+/-20%&lt;br&gt;    spot=100&lt;br&gt;    &lt;br&gt;Option 1:Short call at strike price 110&lt;br&gt;&amp;emsp;op_type: 'c','strike': 110 'tr_type': 's', 'op_pr': 2    &lt;br&gt; Option 2 : Short put at strike price 95&lt;br&gt;&amp;emsp;'op_type': 'p', 'strike': 95, 'tr_type': 's', 'op_pr': 6    ```pythonop.multi_plotter()```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/fig3.png)### 2.b Example: Iron Condor (Option strategy with 4 options)An iron condor is an options strategy consisting of two puts (one long and one short) and two calls (one long and one short), and four strike prices, all with the same expiration date. stock currently trading at 212.26 (Spot Price)&lt;br&gt;Option 1: Sell a call with a 215 strike, which gives 7.63 in premium&lt;br&gt;Option 2: Buy a call with a strike of 220, which costs 5.35. &lt;br&gt;Option 3: Sell a put with a strike of 210 with premium received 7.20&lt;br&gt;Option 4: Buy a put with a strike of 205 costing 5.52. ```pythonop1={'op_type': 'c', 'strike': 215, 'tr_type': 's', 'op_pr': 7.63}op2={'op_type': 'c', 'strike': 220, 'tr_type': 'b', 'op_pr': 5.35}op3={'op_type': 'p', 'strike': 210, 'tr_type': 's', 'op_pr': 7.20}op4={'op_type': 'p', 'strike': 205, 'tr_type': 'b', 'op_pr': 5.52}op_list=[op1, op2, op3, op4]op.multi_plotter(spot=212.26,spot_range=10, op_list=op_list)```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/fig4.png)# 3. yf_plotter()Parameters----------ticker: string, default: 'msft' stock ticker for Microsoft.Inc&lt;br&gt;&amp;emsp;   Stock Ticker&lt;br&gt;exp: string default: next option expiration date&lt;br&gt;&amp;emsp;    Option expiration date in 'YYYY-MM-DD' format&lt;br&gt;   spot_range: int, float, optional, default: 10&lt;br&gt;&amp;emsp;   Range of spot variation in percentage &lt;br&gt;   op_list: list of dictionary&lt;br&gt;   &amp;emsp;   Each dictionary must contiain following keys&lt;br&gt;&amp;emsp;   'strike': int, float, default: 720&lt;br&gt;&amp;emsp;&amp;emsp;       Strike Price&lt;br&gt;&amp;emsp;   'tr_type': kind {'b', 's'} default:'b'&lt;br&gt;&amp;emsp;&amp;emsp;      Transaction Type&gt;&gt; 'b': long, 's': short&lt;br&gt;&amp;emsp;   'op_type': kind {'c','p'}, default:'c'&lt;br&gt;&amp;emsp;&amp;emsp;      Opion type&gt;&gt; 'c': call option, 'p':put option&lt;br&gt; ### 3.a Default plot&lt;b&gt;Strangle on Microsoft stock&lt;/b&gt;&lt;br&gt;Stock ticker : msft(Microsoft Inc.)&lt;br&gt; &amp;emsp;Option 1: Buy Call at Strike Price 250&lt;br&gt;&amp;emsp;Option 2: Buy Put option at Strike price 225```pythonop.yf_plotter()```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/fig5.png)### 3.b Example: Strangle on Amazon Strangle:&lt;br&gt;A simultaneous purchase of options to buy and to sell a security or commodity at a fixed price, allowing the purchaser to make a profit whether the price of the security or commodity goes up or down.Stock ticker : AMZN(Amazon Inc.)&lt;br&gt; &amp;emsp;Option 1: Buy Call at Strike Price 3070&lt;br&gt;&amp;emsp;Option 2: Buy Put option at Strike price 3070```pythonop_1={'op_type': 'c', 'strike':3070, 'tr_type': 'b'}op_2={'op_type': 'p', 'strike':3070, 'tr_type': 'b'}op.yf_plotter(ticker='amzn',               exp='default',               op_list=[op_1, op_2])```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/fig6.png)## 4. Save figureFigure can be saved in the current directory setting &lt;i&gt;save=True&lt;/i&gt;&lt;br&gt;Filename with extension has to be provided as &lt;i&gt;file&lt;/i&gt;.&lt;br&gt;If no filename is provided, the figure will be saved as fig in png format.```pythonop.single_plotter(save=True,file='simple_option.jpeg')```![png](https://raw.githubusercontent.com/abhijith-git/opstrat/main/readme_files/simple_option.jpeg)## ContributingPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.Please make sure to update tests as appropriate.## Content License[MIT](https://choosealicense.com/licenses/mit/)### Thanks to [Stackoverflow Community](https://stackoverflow.com/)&lt;br&gt;[Ran Aroussi](https://github.com/ranaroussi) : [yfinance](https://pypi.org/project/yfinance/)&lt;br&gt; [Daniel Goldfarb](https://github.com/DanielGoldfarb) : [mplfinance](https://pypi.org/project/mplfinance/)### Tutorial in Video Format[![Watch the video](https://img.youtube.com/vi/EU3L4ziz3nk/maxresdefault.jpg)](https://youtu.be/EU3L4ziz3nk)</longdescription>
</pkgmetadata>