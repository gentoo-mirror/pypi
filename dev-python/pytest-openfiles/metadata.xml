<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================pytest-openfiles================This package provides a plugin for the `pytest`_ framework that allowsdevelopers to detect whether any file handles or other file-like objects wereinadvertently left open at the end of a unit test. It has been moved from thecore `astropy`_ project since it is of use more generally... _pytest: https://pytest.org/en/latest/.. _astropy: https://astropy.org/en/latest/Motivation----------The `pytest-openfiles`_ plugin allows for the detection of open I/O resourcesat the end of unit tests.  This is particularly useful for testing code thatmanipulates file handles or other I/O resources. It allows developers to ensurethat this kind of code properly cleans up I/O resources when they are no longerneeded.Installation------------The ``pytest-openfiles`` plugin can be installed using ``pip``::    $ pip install pytest-openfilesIt is also possible to install the latest development version from the sourcerepository::    $ git clone https://github.com/astropy/pytest-openfiles    $ cd pytest-openfiles    $ python ./setup.py installIn either case, the plugin will automatically be registered for use with``pytest``.Usage-----This plugin adds the ``--open-files`` option to the ``pytest`` command.  Whenrunning tests with ``--open-files``, if a file is opened during the course of aunit test but that file is not closed before the test finishes, the test willfail.In some cases certain files are expected to remain open between tests. In orderto prevent these files from causing tests to fail, they can be ignored usingthe configuration file variable ``open_files_ignore``. This variable is addedto the ``[tool:pytest]`` section of a package's top-level ``setup.cfg`` file.Files can be ignored using a fully specified filename::    [tool:pytest]    open_files_ignore = &quot;/home/user/monty/output.log&quot;It is also possible to ignore files with a particular name regardless of wherethey reside in the file system::    [tool:pytest]    open_files_ignore = &quot;output.log&quot;In this example, all files named ``output.log`` will be ignored if they arefound to remain open after a test completes. Paths and filenames can include``*`` and ``?`` as wildcards::    [tool:pytest]    open_files_ignore = &quot;*.ttf&quot;It is also possible to ignore open files for particular test cases bydecorating them with the ``openfiles_ignore`` decorator:.. code::    import pytest    @pytest.mark.openfiles_ignore    def test_open_file_and_ignore():        &quot;&quot;&quot;We want to ignore this test when checking for open file handles.&quot;&quot;&quot;The test function will not be skipped, but any files that are left open by thetest will be ignored by this plugin.Development Status------------------.. image:: https://travis-ci.org/astropy/pytest-openfile.svg    :target: https://travis-ci.org/astropy/pytest-openfiles    :alt: Travis CI StatusQuestions, bug reports, and feature requests can be submitted on `github`_... _github: https://github.com/astropy/pytest-openfilesLicense-------This plugin is licensed under a 3-clause BSD style license - see the``LICENSE.rst`` file.</longdescription>
</pkgmetadata>