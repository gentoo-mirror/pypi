<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=============python-bsonjs=============.. image:: https://travis-ci.org/mongodb-labs/python-bsonjs.svg?branch=master   :alt: View build status   :target: https://travis-ci.org/mongodb-labs/python-bsonjs:Info: See `github &lt;http://github.com/mongodb-labs/python-bsonjs&gt;`_ for the latest source.:Author: Shane Harvey &lt;shane.harvey@mongodb.com&gt;About=====A fast BSON to MongoDB Extended JSON converter for Python that uses`libbson  &lt;http://mongoc.org/libbson/1.20.0/&gt;`_.Installation============python-bsonjs can be installed with `pip &lt;http://pypi.python.org/pypi/pip&gt;`_::  $ python -m pip install python-bsonjsExamples========.. code-block:: python    &gt;&gt;&gt; import bsonjs    &gt;&gt;&gt; bson_bytes = bsonjs.loads('{&quot;hello&quot;: &quot;world&quot;}')    &gt;&gt;&gt; bson_bytes    '\x16\x00\x00\x00\x02hello\x00\x06\x00\x00\x00world\x00\x00'    &gt;&gt;&gt; bsonjs.dumps(bson_bytes)    '{ &quot;hello&quot; : &quot;world&quot; }'Using bsonjs with pymongo to insert a RawBSONDocument... code-block:: python    &gt;&gt;&gt; import bsonjs    &gt;&gt;&gt; from pymongo import MongoClient    &gt;&gt;&gt; from bson.raw_bson import RawBSONDocument    &gt;&gt;&gt; client = MongoClient(&quot;localhost&quot;, 27017, document_class=RawBSONDocument)    &gt;&gt;&gt; db = client.test    &gt;&gt;&gt; bson_bytes = bsonjs.loads('{&quot;_id&quot;: 1, &quot;x&quot;: 2}')    &gt;&gt;&gt; bson_bytes    '\x15\x00\x00\x00\x10_id\x00\x01\x00\x00\x00\x10x\x00\x02\x00\x00\x00\x00'    &gt;&gt;&gt; result = db.test.insert_one(RawBSONDocument(bson_bytes))    &gt;&gt;&gt; result.inserted_id  # NOTE: inserted_id is None    &gt;&gt;&gt; result.acknowledged    True    &gt;&gt;&gt; raw_doc = db.test.find_one({'x': 2})    &gt;&gt;&gt; raw_doc.raw == bson_bytes    True    &gt;&gt;&gt; bsonjs.dumps(raw_doc.raw)    '{ &quot;_id&quot; : 1, &quot;x&quot; : 2 }'Speed=====bsonjs is roughly 10-15x faster than PyMongo's json_util at decoding BSON toJSON and encoding JSON to BSON. See `benchmark.py`::    $ python benchmark.py    Timing: bsonjs.dumps(b)    10000 loops, best of 3: 0.110911846161    Timing: json_util.dumps(bson.BSON(b).decode())    10000 loops, best of 3: 1.46571397781    bsonjs is 13.22x faster than json_util    Timing: bsonjs.loads(j)    10000 loops, best of 3: 0.0628039836884    Timing: bson.BSON().encode(json_util.loads(j))    10000 loops, best of 3: 0.683200120926    bsonjs is 11.72x faster than json_utilLimitations===========Top Level Arrays````````````````Because `libbson` does not distinguish between top level arrays and toplevel documents, neither does `python-bsonjs`. This means that if you give`dumps` or `dump` a top level array it will give you back a dictionary.Below are two examples of this behavior.. code-block:: python    &gt;&gt;&gt; import bson    &gt;&gt;&gt; from bson import json_util    &gt;&gt;&gt; import bsonjs    &gt;&gt;&gt; bson.decode(bsonjs.loads(json_util.dumps([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])))    {'0': 'a', '1': 'b', '2': 'c'}    &gt;&gt;&gt; bson.decode(bsonjs.loads(json_util.dumps([])))    {}One potential solution to this problem is to wrap your list in a dictionary,like so.. code-block:: python    &gt;&gt;&gt; list = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]    &gt;&gt;&gt; dict = {&quot;data&quot;: list}    &gt;&gt;&gt; wrapped = bson.decode(bsonjs.loads(json_util.dumps(dict)))    {'data': ['a', 'b', 'c']}    &gt;&gt;&gt; wrapped[&quot;data&quot;]    ['a', 'b', 'c']Installing From Source======================python-bsonjs supports CPython 3.6+.Compiler````````You must build python-bsonjs separately for each version of Python. OnWindows this means you must use the same C compiler your Python version wasbuilt with.- Python 3.6 and up requires Microsoft Visual Studio 2015Source``````You can download the source using git::    $ git clone https://github.com/mongodb-labs/python-bsonjs.gitInstall```````Once you have the source properly downloaded, build and install the package::    $ python setup.py installTest````To run the test suite::    $ python setup.py test</longdescription>
</pkgmetadata>