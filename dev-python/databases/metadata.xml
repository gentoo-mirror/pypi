<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Databases&lt;p&gt;&lt;a href=&quot;https://github.com/encode/databases/actions&quot;&gt;    &lt;img src=&quot;https://github.com/encode/databases/workflows/Test%20Suite/badge.svg&quot; alt=&quot;Test Suite&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/databases/&quot;&gt;    &lt;img src=&quot;https://badge.fury.io/py/databases.svg&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;/p&gt;Databases gives you simple asyncio support for a range of databases.It allows you to make queries using the powerful [SQLAlchemy Core][sqlalchemy-core]expression language, and provides support for PostgreSQL, MySQL, and SQLite.Databases is suitable for integrating against any async Web framework, such as [Starlette][starlette],[Sanic][sanic], [Responder][responder], [Quart][quart], [aiohttp][aiohttp], [Tornado][tornado], or [FastAPI][fastapi].**Documentation**: [https://www.encode.io/databases/](https://www.encode.io/databases/)**Requirements**: Python 3.7+---## Installation```shell$ pip install databases```Database drivers supported are:* [asyncpg][asyncpg]* [aiopg][aiopg]* [aiomysql][aiomysql]* [asyncmy][asyncmy]* [aiosqlite][aiosqlite]You can install the required database drivers with:```shell$ pip install databases[asyncpg]$ pip install databases[aiopg]$ pip install databases[aiomysql]$ pip install databases[asyncmy]$ pip install databases[aiosqlite]```Note that if you are using any synchronous SQLAlchemy functions such as `engine.create_all()` or [alembic][alembic] migrations then you still have to install a synchronous DB driver: [psycopg2][psycopg2] for PostgreSQL and [pymysql][pymysql] for MySQL.---## QuickstartFor this example we'll create a very simple SQLite database to run somequeries against.```shell$ pip install databases[aiosqlite]$ pip install ipython```We can now run a simple example from the console.Note that we want to use `ipython` here, because it supports using `await`expressions directly from the console.```python# Create a database instance, and connect to it.from databases import Databasedatabase = Database('sqlite+aiosqlite:///example.db')await database.connect()# Create a table.query = &quot;&quot;&quot;CREATE TABLE HighScores (id INTEGER PRIMARY KEY, name VARCHAR(100), score INTEGER)&quot;&quot;&quot;await database.execute(query=query)# Insert some data.query = &quot;INSERT INTO HighScores(name, score) VALUES (:name, :score)&quot;values = [    {&quot;name&quot;: &quot;Daisy&quot;, &quot;score&quot;: 92},    {&quot;name&quot;: &quot;Neil&quot;, &quot;score&quot;: 87},    {&quot;name&quot;: &quot;Carol&quot;, &quot;score&quot;: 43},]await database.execute_many(query=query, values=values)# Run a database query.query = &quot;SELECT * FROM HighScores&quot;rows = await database.fetch_all(query=query)print('High Scores:', rows)```Check out the documentation on [making database queries](https://www.encode.io/databases/database_queries/)for examples of how to start using databases together with SQLAlchemy core expressions.&lt;p align=&quot;center&quot;&gt;&amp;mdash; ⭐️ &amp;mdash;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Databases is &lt;a href=&quot;https://github.com/encode/databases/blob/master/LICENSE.md&quot;&gt;BSD licensed&lt;/a&gt; code. Designed &amp; built in Brighton, England.&lt;/i&gt;&lt;/p&gt;[sqlalchemy-core]: https://docs.sqlalchemy.org/en/latest/core/[sqlalchemy-core-tutorial]: https://docs.sqlalchemy.org/en/latest/core/tutorial.html[alembic]: https://alembic.sqlalchemy.org/en/latest/[psycopg2]: https://www.psycopg.org/[pymysql]: https://github.com/PyMySQL/PyMySQL[asyncpg]: https://github.com/MagicStack/asyncpg[aiopg]: https://github.com/aio-libs/aiopg[aiomysql]: https://github.com/aio-libs/aiomysql[asyncmy]: https://github.com/long2ice/asyncmy[aiosqlite]: https://github.com/omnilib/aiosqlite[starlette]: https://github.com/encode/starlette[sanic]: https://github.com/huge-success/sanic[responder]: https://github.com/kennethreitz/responder[quart]: https://gitlab.com/pgjones/quart[aiohttp]: https://github.com/aio-libs/aiohttp[tornado]: https://github.com/tornadoweb/tornado[fastapi]: https://github.com/tiangolo/fastapi</longdescription>
</pkgmetadata>