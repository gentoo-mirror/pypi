<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Report 2 JUnit[![License](https://img.shields.io/badge/License-MIT-green.svg)](./LICENSE.md)[![Maintenance](https://img.shields.io/badge/Maintained-yes-green.svg)](https://github.com/Nr18/report2junit/graphs/commit-activity)[![GitHub release](https://img.shields.io/github/release/Nr18/report2junit.svg)](https://github.com/Nr18/report2junit/releases/)[![Continuous Integration](https://github.com/Nr18/report2junit/actions/workflows/ci.yml/badge.svg)](https://github.com/Nr18/report2junit/actions/workflows/ci.yml)[![codecov](https://codecov.io/gh/Nr18/report2junit/branch/main/graph/badge.svg?token=RMPJ8DBMKZ)](https://codecov.io/gh/Nr18/report2junit)`report2junit` is a tool that converts various reports into the JUnit format.## InstallationYou can install the `report2junit` tool by running the following command:```bashpip install report2junit```## Usage### SyntaxThe following syntax can be used to convert a report:```bashreport2junit &lt;SOURCE_LOCATION&gt;```### CLI ExamplesConvert an output report from [cloudformation-guard][cloudformation-guard] using the following command(s):```bashreport2junit ./sample-reports/cfn-guard.json# Or if you want to specify the destination:report2junit ./sample-reports/cfn-guard.json --destination-file ./sample-reports/cfn-guard-other-destination.xml```Convert an output report from [cfn-nag][cfn-nag] using the following command(s):```bashreport2junit ./sample-reports/cfn-nag.json# Or if you want to specify the destination:report2junit ./sample-reports/cfn-nag.json --destination-file ./sample-reports/cfn-nag-other-destination.xml```Combine both the [cloudformation-guard][cloudformation-guard] and [cfn-nag][cfn-nag] reports into a single output report.```bashreport2junit ./sample-reports/cfn-nag.json ./sample-reports/cfn-guard.json# Or if you want to specify the destination:report2junit ./sample-reports/cfn-nag.json ./sample-reports/cfn-guard.json --destination-file ./sample-reports/junit-other.xml```In some cases it is useful to explicitly stop when there are failures. For example when you want to enforce that thereare no failures. Or on the other hand we could continue when there are failures. This behaviour can be influenced usingthe `--ignore-failures` and `--fail-on-failures` options. Where `--fail-on-failures` is the default.```bash# Convert the given report and when there are failures exit code 1 is returned.report2junit ./sample-reports/cfn-guard.json --fail-on-failuresecho $?# Convert the given report and when there are failures exit code 0 is returned.report2junit ./sample-reports/cfn-guard.json --ignore-failuresecho $?```### AWS CodeBuild ExamplesOne of the reasons for writing this tool to use it in combination with AWS CodeBuild. In this section you will find afew examples in how you could use it.#### Native buildspec.ymlAfter you synthesized your template, or you use a CloudFormation native template. You can scan it using [cloudformation-guard][cloudformation-guard]or [cfn-nag][cfn-nag] to scan the template. The outcome of those tools are not compatible with the reporting tools fromAWS CodeBuild. So we will use [report2junit][report2junit] to convert the 2 results into a single, combined compatiblereport.```yamlversion: 0.2phases:  install:    runtime-versions:      python: 3.8    commands:      - pip install -Ur requirements.txt      - mkdir -p reports  build:    commands:      # Generate the template or use the already existing template.      - cdk synth &gt; template.yml      # Use cfn_nag and cfn-guard to scan the generated template      - cfn_nag_scan --fail-on-warnings --input-path template.yml -o json &gt; reports/cfn-nag.json || true      - cfn-guard validate --rules cfn-rules.guard --data template.yml --output-format json --show-summary none &gt; reports/cfn-guard.json || true  post_build:    commands:      - report2junit reports/cfn-guard.json reports/cfn-nag.json --destination-file ./reports/combined-junit-report.xmlartifacts:  files: '**/*'reports:  Conpliance:    base-directory: ./reports    file-format: JUNITXML    files:      - combined-junit-report.xml```#### Using CDK CodePipelineWhen you want to use the pipelines functionality from CDK you can use the following sample to implement [report2junit][report2junit]into that pipeline.```pythonfrom aws_cdk import (    core as cdk,    aws_codebuild as codebuild,    aws_codecommit as codecommit,    pipelines as pipelines,)from pipeline_stage import PipelineStagedefault_synth_spec = {    &quot;version&quot;: &quot;0.2&quot;,    &quot;reports&quot;: {        &quot;Conpliance&quot;: {            &quot;base-directory&quot;: &quot;./reports&quot;,            &quot;file-format&quot;: &quot;JUNITXML&quot;,            &quot;files&quot;: [                &quot;combined-junit-report.xml&quot;,            ],        },    },}class PipelineStack(cdk.Stack):    def __init__(self, scope: cdk.Construct, id: str, **kwargs) -&gt; None:        super().__init__(scope, id, **kwargs)        repository = codecommit.Repository(self, &quot;MyRepo&quot;, repository_name=&quot;MyRepo&quot;)        pipelines.CodePipeline(            self,            &quot;Pipeline&quot;,            self_mutation=True,            synth_code_build_defaults=pipelines.CodeBuildOptions(                partial_build_spec=codebuild.BuildSpec.from_object(default_synth_spec),            ),            synth=pipelines.ShellStep(                &quot;Build&quot;,                input=pipelines.CodePipelineSource.code_commit(repository, &quot;main&quot;),                install_commands=[                    &quot;pip install -r requirements.txt&quot;,                    &quot;npm install -g aws-cdk&quot;,                    &quot;curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/aws-cloudformation/cloudformation-guard/main/install-guard.sh | sh &amp;&amp; &quot;,                    &quot;mkdir -p /codebuild/user/bin/&quot;,                    &quot;ln -s ~/.guard/bin/cfn-guard /codebuild/user/bin/cfn-guard&quot;                ],                commands=[                    &quot;mkdir reports&quot;,                    &quot;cdk synth &gt; template.yml&quot;,                    &quot;cfn-guard validate --rules cfn-rules.guard --data template.yml --output-format json --show-summary none &gt; reports/cfn-guard.json || true&quot;,                    &quot;report2junit reports/cfn-guard.json&quot;,                ],            ),        )```[cloudformation-guard]: https://github.com/aws-cloudformation/cloudformation-guard &quot;AWS CloudFormation Guard&quot;[cfn-nag]: https://github.com/stelligent/cfn_nag &quot;Stelligen cfn_nag&quot;[report2junit]: https://github.com/Nr18/report2junit &quot;Report2JUnit&quot;</longdescription>
</pkgmetadata>