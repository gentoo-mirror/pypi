<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cmem-plugin-kafkaSend and receive messages from Apache Kafka.This is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).You can install it with the [cmemc](https://eccenca.com/go/cmemc) command lineclients like this:```cmemc admin workspace python install cmem-plugin-kafka```## Plugin supported message format### XML dataset formatAn example XML document is shown below. This document will be sent as two messagesto the configured topic. Each message is created as a proper XML document.```xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;KafkaMessages&gt;    &lt;Message&gt;        &lt;PurchaseOrder OrderDate=&quot;1996-04-06&quot;&gt;            &lt;ShipTo country=&quot;string&quot;&gt;                &lt;name&gt;string&lt;/name&gt;                &lt;street&gt;string&lt;/street&gt;                &lt;city&gt;string&lt;/city&gt;                &lt;state&gt;string&lt;/state&gt;                &lt;zip&gt;9200&lt;/zip&gt;            &lt;/ShipTo&gt;            &lt;BillTo country=&quot;string&quot;&gt;                &lt;name&gt;string&lt;/name&gt;                &lt;street&gt;string&lt;/street&gt;                &lt;city&gt;string&lt;/city&gt;                &lt;state&gt;string&lt;/state&gt;                &lt;zip&gt;2381&lt;/zip&gt;            &lt;/BillTo&gt;        &lt;/PurchaseOrder&gt;    &lt;/Message&gt;    &lt;Message key=&quot;1234&quot;&gt;        &lt;SingleTagHere&gt;            .            .            .        &lt;/SingleTagHere&gt;    &lt;/Message&gt;&lt;/KafkaMessages&gt;```Producer plugin generates 2 messages with below content```xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;PurchaseOrder OrderDate=&quot;1996-04-06&quot;&gt;    &lt;ShipTo country=&quot;string&quot;&gt;        &lt;name&gt;string&lt;/name&gt;        &lt;street&gt;string&lt;/street&gt;        &lt;city&gt;string&lt;/city&gt;        &lt;state&gt;string&lt;/state&gt;        &lt;zip&gt;9200&lt;/zip&gt;    &lt;/ShipTo&gt;    &lt;BillTo country=&quot;string&quot;&gt;        &lt;name&gt;string&lt;/name&gt;        &lt;street&gt;string&lt;/street&gt;        &lt;city&gt;string&lt;/city&gt;        &lt;state&gt;string&lt;/state&gt;        &lt;zip&gt;2381&lt;/zip&gt;    &lt;/BillTo&gt;&lt;/PurchaseOrder&gt;``````xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SingleTagHere&gt;            .            .            .&lt;/SingleTagHere&gt;```### JSON Dataset formatAn example JSON document is shown below. This document will be sent as two messagesto the configured topic. Each message is created as a proper JSON document.```json[  {    &quot;message&quot;: {      &quot;key&quot;: &quot;818432-942813-832642-453478&quot;,      &quot;headers&quot;: {        &quot;type&quot;: &quot;ADD&quot;      },      &quot;content&quot;: {        &quot;location&quot;: [          &quot;Leipzig&quot;        ],        &quot;obstacle&quot;: {          &quot;name&quot;: &quot;Iron Bars&quot;,          &quot;order&quot;: &quot;1&quot;        }      }    }  },  {    &quot;message&quot;: {      &quot;key&quot;: &quot;887428-119918-570674-866526&quot;,      &quot;headers&quot;: {        &quot;type&quot;: &quot;REMOVE&quot;      },      &quot;content&quot;: {        &quot;comments&quot;: &quot;We can pass any json payload here.&quot;      }    }  }]```Producer plugin generates 2 messages with below content```json{  &quot;location&quot;: [    &quot;Leipzig&quot;  ],  &quot;obstacle&quot;: {    &quot;name&quot;: &quot;Iron Bars&quot;,    &quot;order&quot;: &quot;1&quot;  }}``````json{  &quot;comments&quot;: &quot;We can pass any json payload here.&quot;}```### Entities formatRandom values plugin entities will generate below format JSON document.```json{  &quot;schema&quot;: {    &quot;type_uri&quot;: &quot;https://example.org/vocab/RandomValueRow&quot;  },  &quot;entity&quot;: {    &quot;uri&quot;: &quot;urn:uuid:3c68d8e7-bf17-4045-a9eb-c9c9813f717f&quot;,    &quot;values&quot;: {      &quot;&lt;https://example.org/vocab/RandomValuePath0&gt;&quot;: [        &quot;a8o4Ocsb6RZClFRUZU3b2w&quot;      ],      &quot;&lt;https://example.org/vocab/RandomValuePath1&gt;&quot;: [        &quot;RTICRU7JcTUVn94decelPg&quot;      ],      &quot;&lt;https://example.org/vocab/RandomValuePath2&gt;&quot;: [        &quot;A9r-969NjAlX0DNWftxKoA&quot;      ],      &quot;&lt;https://example.org/vocab/RandomValuePath3&gt;&quot;: [        &quot;FygWRy1UJ4-IzIim1qukJA&quot;      ],      &quot;&lt;https://example.org/vocab/RandomValuePath4&gt;&quot;: [        &quot;AJcbn-LJEs-Dif96xu2eww&quot;      ]    }  }}```</longdescription>
</pkgmetadata>