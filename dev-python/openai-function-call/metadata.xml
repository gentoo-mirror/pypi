<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pydantic is all you need: An OpenAI Function Call Pydantic Integration ModuleWe try to provides a powerful and efficient approach to output parsing when interacting with OpenAI's Function Call API. One that is framework agnostic and minimizes any dependencies. It leverages the data validation capabilities of the Pydantic library to handle output parsing in a more structured and reliable manner.If you have any feedback, leave an issue or hit me up on [twitter](https://twitter.com/jxnlco). This repo also contains a range of examples I've used in experimetnation and in production and I welcome new contributions for different types of schemas.## SupportFollow me on twitter and consider helping pay for openai tokens![![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/jxnlco.svg?style=social&amp;label=Follow%20%40jxnlco)](https://twitter.com/jxnlco) [![&quot;Buy Me A Coffee&quot;](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/jxnl)## Installation```pythonpip install openai_function_call```## ContributingTo get started, clone the repository```bashgit clone https://github.com/jxnl/openai_function_call.git```Next, install the necessary Python packages from the requirements.txt file:```bashpip install -r requirements.txt```### PoetryWe also use poetry if you'd like```bashpoetry build```Your contributions are welcome! If you have great examples or find neat patterns, clone the repo and add another example.Check out the issues for any ideas if you want to learn. The goal is to find great patterns and cool examples to highlight.If you encounter any issues or want to provide feedback, you can create an issue in this repository. You can also reach out to me on Twitter at @jxnlco.## UsageThis module simplifies the interaction with the OpenAI API, enabling a more structured and predictable conversation with the AI. Below are examples showcasing the use of function calls and schemas with OpenAI and Pydantic.### Example 1: Function Calls```pythonimport openaifrom openai_function_call import openai_function@openai_functiondef sum(a:int, b:int) -&gt; int:    &quot;&quot;&quot;Sum description adds a + b&quot;&quot;&quot;    return a + bcompletion = openai.ChatCompletion.create(        model=&quot;gpt-3.5-turbo-0613&quot;,        temperature=0,        functions=[sum.openai_schema],        messages=[            {                &quot;role&quot;: &quot;system&quot;,                &quot;content&quot;: &quot;You must use the `sum` function instead of adding yourself.&quot;,            },            {                &quot;role&quot;: &quot;user&quot;,                &quot;content&quot;: &quot;What is 6+3 use the `sum` function&quot;,            },        ],    )result = sum.from_response(completion)print(result)  # 9```### Example 2: Schema Extraction```pythonimport openaifrom openai_function_call import OpenAISchemaclass UserDetails(OpenAISchema):    &quot;&quot;&quot;User Details&quot;&quot;&quot;    name: str = Field(..., description=&quot;User's name&quot;)    age: int = Field(..., description=&quot;User's age&quot;)completion = openai.ChatCompletion.create(    model=&quot;gpt-3.5-turbo-0613&quot;,    functions=[UserDetails.openai_schema]    messages=[        {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;I'm going to ask for user details. Use UserDetails to parse this data.&quot;},        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;My name is John Doe and I'm 30 years old.&quot;},    ],)user_details = UserDetails.from_response(completion)print(user_details)  # UserDetails(name=&quot;John Doe&quot;, age=30)```## Advanced UsageIf you want to see more examples checkout the examples folder!## LicenseThis project is licensed under the terms of the MIT license.For more details, refer to the LICENSE file in the repository.</longdescription>
</pkgmetadata>