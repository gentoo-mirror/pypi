<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://travis-ci.org/jonDel/loggers.svg?branch=master   :target: https://travis-ci.org/jonDel/loggers   :alt: Travis CI build status (Linux).. image:: https://coveralls.io/repos/github/jonDel/loggers/badge.svg?branch=master   :target: https://coveralls.io/github/jonDel/loggers?branch=master.. image:: https://readthedocs.org/projects/loggers/badge/?version=master   :target: http://loggers.readthedocs.io/en/latest/?badge=master   :alt: Documentation Status.. image:: https://landscape.io/github/jonDel/loggers/master/landscape.svg?style=flat   :target: https://landscape.io/github/jonDel/loggers/master   :alt: Code Health.. image:: https://img.shields.io/pypi/v/loggers.svg   :target: https://pypi.python.org/pypi/loggers/   :alt: Latest PyPI versionloggers===========**loggers** is a Python library that provides usefull wrapper methods for logging class. To be used as a superclass for your own classes.Example--------------------.. code:: python  &gt;&gt;&gt; from loggers import Loggers  &gt;&gt;&gt;  &gt;&gt;&gt; class spamClass(Loggers):  ...   def __init__(self, log_folder=None):  ...       super(spamClass, self).__init__('spamClass', log_folder_path=log_folder)  ...   def do_stuff(self, arg):  ...       if not type(arg) == str:  ...         self.log.error(&quot;I was expecting a string. :( &quot;)  ...       else:  ...         self.log.debug(&quot;I received my string. :)&quot;)  ...  &gt;&gt;&gt; spam = spamClass('/tmp/logs/spamClass')  &gt;&gt;&gt; spam.log.error('ERROR')  Log: ERROR | Log level:ERROR | Date:31/10/2016 16:51:47  &gt;&gt;&gt; spam.set_log_rotate_handler(True)  &gt;&gt;&gt; spam.do_stuff(123)  Log: I was expecting a string. :(  | Log level:ERROR | Date:31/10/2016 16:51:47  &gt;&gt;&gt; spam.do_stuff('Eggs')  &gt;&gt;&gt; spam.set_log_level('DEBUG')  Log: Changing log level to DEBUG | Log level:DEBUG | Date:31/10/2016 16:51:47  &gt;&gt;&gt; spam.do_stuff('Spam')  Log: I received my string. :) | Log level:DEBUG | Date:31/10/2016 16:51:47Installation------------To install loggers, simply run:::  $ pip install loggersloggers is compatible with Python 2.6+ and Python 3Documentation-------------https://loggers.readthedocs.ioSource Code-----------Feel free to fork, evaluate and contribute to this project.Source: https://github.com/jonDel/loggersLicense-------GPLv3 licensed.</longdescription>
</pkgmetadata>