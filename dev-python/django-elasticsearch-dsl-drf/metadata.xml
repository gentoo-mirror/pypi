<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>============================django-elasticsearch-dsl-drf============================Integrate `Elasticsearch DSL&lt;https://pypi.python.org/pypi/elasticsearch-dsl&gt;`_ with`Django REST framework &lt;https://pypi.python.org/pypi/djangorestframework&gt;`_ inthe shortest way possible, with least efforts possible.Package provides views, serializers, filter backends, pagination and otherhandy add-ons.You are expected to use `django-elasticsearch-dsl&lt;https://pypi.python.org/pypi/django-elasticsearch-dsl&gt;`_ for defining yourElasticsearch documents... image:: https://img.shields.io/pypi/v/django-elasticsearch-dsl-drf.svg   :target: https://pypi.python.org/pypi/django-elasticsearch-dsl-drf   :alt: PyPI Version.. image:: https://img.shields.io/pypi/pyversions/django-elasticsearch-dsl-drf.svg    :target: https://pypi.python.org/pypi/django-elasticsearch-dsl-drf/    :alt: Supported Python versions.. image:: https://github.com/barseghyanartur/django-elasticsearch-dsl-drf/workflows/test/badge.svg   :target: https://github.com/barseghyanartur/django-elasticsearch-dsl-drf/actions   :alt: Build Status.. image:: https://readthedocs.org/projects/django-elasticsearch-dsl-drf/badge/?version=latest    :target: http://django-elasticsearch-dsl-drf.readthedocs.io/en/latest/?badge=latest    :alt: Documentation Status.. image:: https://img.shields.io/badge/license-GPL--2.0--only%20OR%20LGPL--2.1--or--later-blue.svg   :target: https://github.com/barseghyanartur/django-elasticsearch-dsl-drf/#License   :alt: GPL-2.0-only OR LGPL-2.1-or-later.. image:: https://coveralls.io/repos/github/barseghyanartur/django-elasticsearch-dsl-drf/badge.svg?branch=master    :target: https://coveralls.io/github/barseghyanartur/django-elasticsearch-dsl-drf?branch=master    :alt: CoverageDocumentation=============Documentation is available on `Read the Docs&lt;http://django-elasticsearch-dsl-drf.readthedocs.io/&gt;`_.Make sure to read `FAQ &lt;https://github.com/barseghyanartur/django-elasticsearch-dsl-drf/blob/master/docs/faq.rst&gt;`_.Prerequisites=============- Django 2.2, 3.1 and 3.2.- Python 3.6, 3.7, 3.8 and 3.9.- Elasticsearch 6.x, 7.x. For older versions use  ``django-elasticsearch-dsl-drf`` version 0.18.Main features and highlights============================- `Dynamic serializer for Documents &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/basic_usage_examples.html#sample-serializer&gt;`_.- `Search filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#search&gt;`_.- `Ordering filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#ordering&gt;`_.- `Filtering filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#filtering&gt;`_ (big variety of  native- and functional- query lookups, such as ``gt``, ``gte``, ``lt``,  ``lte``, ``endswith``, ``contains``, ``wildcard``, ``exists``, ``exclude``,  ``isnull``, ``range``, ``in``, ``prefix`` (same as ``startswith``), ``term``  and ``terms`` is implemented.- `Geo-spatial filtering filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#geo-spatial-features&gt;`_ (the  following filters implemented: ``geo_distance``, ``geo_polygon`` and  ``geo_bounding_box``).- `Geo-spatial ordering filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#geo-spatial-features&gt;`_ (the  following filters implemented: ``geo_distance``).- `Faceted search filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#faceted-search&gt;`_.- `Post-filter filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#post-filter&gt;`_.- `Nested filtering filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/nested_fields_usage_examples.html#nested-filtering&gt;`_.- `Highlight backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#highlighting&gt;`_.- `Suggester filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#suggestions&gt;`_.- `Functional suggester filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#functional-suggestions&gt;`_.- `Pagination (Page number and limit/offset pagination) &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#pagination&gt;`_.- `Ids filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/advanced_usage_examples.html#ids-filter&gt;`_.- `Multi match search filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/search_backends.html#multi-match-search-filter-backend&gt;`_.- `Simple search query filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/search_backends.html#simple-query-string-filter-backend&gt;`_.- `More-like-this support (detail action) &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/more_like_this.html&gt;`_.- `Global aggregations support &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/global_aggregations.html&gt;`_.- `Source filter backend &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/source_backend.html&gt;`_.Do you need a similar tool for GraphQL? Check `graphene-elastic&lt;https://github.com/barseghyanartur/graphene-elastic&gt;`__.Demos=====Online demo-----------Check the `live demo app &lt;https://django-elasticsearch-dsl-drf.herokuapp.com&gt;`__(Django 3.1 + Django REST Framework 3.12 + Elasticsearch 7.5) hosted on Herokuand bonsai.io.Local demo----------A frontend demo (React based) is available. See the `dedicated docs&lt;https://github.com/barseghyanartur/django-elasticsearch-dsl-drf/blob/master/examples/frontend/README.rst&gt;`_for more information.To bootstrap evaluation, clone the repository locally and run `docker-compose`... code-block:: sh    docker-compose upIt will set up:- Elasticsearch on `http://localhost:9200 &lt;http://localhost:9200&gt;`_- Django REST framework on `http://localhost:8000 &lt;http://localhost:8000&gt;`_- React on `http://localhost:3000 &lt;http://localhost:3000&gt;`_Installation============(1) Install latest stable version from PyPI:    .. code-block:: sh        pip install django-elasticsearch-dsl-drf    or latest stable version from GitHub:    .. code-block:: sh        pip install https://github.com/barseghyanartur/django-elasticsearch-dsl-drf/archive/stable.tar.gz(2) Add ``rest_framework``, ``django_elasticsearch_dsl`` and    ``django_elasticsearch_dsl_drf`` to ``INSTALLED_APPS``:    .. code-block:: python        INSTALLED_APPS = (            # ...            # REST framework            'rest_framework',            # Django Elasticsearch integration            'django_elasticsearch_dsl',            # Django REST framework Elasticsearch integration (this package)            'django_elasticsearch_dsl_drf',            # ...        )Quick start===========Perhaps the easiest way to get acquainted with ``django-elasticsearch-dsl-drf``is to read the `quick start tutorial &lt;http://django-elasticsearch-dsl-drf.readthedocs.io/en/0.22.5/quick_start.html&gt;`_.See it as a guide of diving into integration of Elasticsearch with Djangowith very low knowledge entry level.Testing=======Project is covered with tests.To test with all supported Python/Django versions type:.. code-block:: sh    toxTo test against specific environment, type:.. code-block:: sh    tox -e py38-django30To test just your working environment type:.. code-block:: sh    ./runtests.pyTo run a single test in your working environment type:.. code-block:: sh    ./runtests.py src/django_elasticsearch_dsl_drf/tests/test_filtering.pyOr:.. code-block:: sh    ./manage.py test django_elasticsearch_dsl_drf.tests.test_orderingTo run a single test class in a given test module in your working environmenttype:.. code-block:: sh    ./runtests.py src/django_elasticsearch_dsl_drf/tests/test_suggesters.py::TestSuggestersIt's assumed that you have all the requirements installed. If not, firstinstall the test requirements:.. code-block:: sh    pip install -r examples/requirements/test.txtWriting documentation=====================Keep the following hierarchy... code-block:: text    =====    title    =====    header    ======    sub-header    ----------    sub-sub-header    ~~~~~~~~~~~~~~    sub-sub-sub-header    ^^^^^^^^^^^^^^^^^^    sub-sub-sub-sub-header    ++++++++++++++++++++++    sub-sub-sub-sub-sub-header    **************************License=======GPL-2.0-only OR LGPL-2.1-or-laterSupport=======For any issues contact me at the e-mail given in the `Author`_ section.Author======Artur Barseghyan &lt;artur.barseghyan@gmail.com&gt;</longdescription>
</pkgmetadata>