<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-monthfield=================Introduction------------This module provides a custom field for storing month (YYYY-MM) as a django field.This can be useful when dealing with data that relates to a whole month, for example,the total expenditure for a given month.This module also adds some arithmetic and other functionality for dealing with months.Usage-----Adding a month field to a django model:.. code-block:: console    from django.db import models    from month.models import MonthField    # Create your models here.    class ExampleModel(models.Model):        name = models.CharField(max_length=20, blank=True)        month = MonthField(&quot;Month Value&quot;, help_text=&quot;some help...&quot;)        def __unicode__(self):            return unicode(self.month)The module defines a &quot;Month&quot; class which is used to represent the MonthField attribute on the model.The &quot;Month&quot; class can also be used standalone without any django model.Some examples of funcionality provided by the Month class:.. code-block:: console    import month    m = month.Month(2017, 3)    print(m)    &gt;&quot;2017-03&quot;    print(m + 2)    &gt;&quot;2017-05&quot;    print(m.last_day())    &gt;&quot;2017-03-31&quot;    m2 = month.Month(2017, 7)    print(m &gt; m2)    &gt;&quot;False&quot;    print(m.range(m2))    &gt;&quot;[2017-03, 2017-04, 2017-05, 2017-06, 2017-07]&quot;Example project---------------An example website using this module is included in the repository.username: testpassword: test</longdescription>
</pkgmetadata>