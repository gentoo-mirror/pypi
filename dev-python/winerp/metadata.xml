<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># winerpAn IPC based on Websockets. Fast, Stable, and easy-to-use, for inter-communication between your processes or discord.py bots.### Key Features - **Fast** with minimum recorded response time being `&lt; 2ms` - Lightweight, Stable and Easy to integrate. - No limitation on number of connected clients. ## InstallationStable:```pypip install -U winerp```Main branch (can be unstable/buggy):```pypip install git+https://www.github.com/BlackThunder01001/winerp```### Working:This library uses a central server for communication between multiple clients. You can connect a large number of clients for sharing data, and data can be shared between any connected client.1) Import the library:```pyimport winerp```2) Initialize winerp client:```pyipc_client = winerp.Client(local_name = &quot;my-cool-app&quot;, port=8080)```3) Start the client:```pyawait ipc_client.start()# orasyncio.create_task(ipc_client.start())```- Registering routes:```py@ipc_client.routeasync def route_name(source, user_name):    return f&quot;Hello {user_name}&quot;```- Requesting data from another client:```pyuser_name = await ipc_client.request(route=&quot;fetch_user_name&quot;, source=&quot;another-cool-bot&quot;, user_id = 123)```- Sending *information* type data to other clients:```pydata = [1, 2, 3, 4]await ipc_client.inform(data, destinations=[&quot;another-cool-bot&quot;])```## Example Usage:Start the server on terminal using `$ winerp --port 8080`. You can also start the server using `winerp.Server`### Client 1 (`some-random-bot`):```pyimport winerpimport discordfrom discord.ext.commands import Botbot = Bot(command_prefix=&quot;!&quot;, intents=discord.Intents.all())bot.ipc = winerp.Client(local_name = &quot;some-random-bot&quot;, port=8080)@bot.command()async def request(ctx):    # Fetching data from a client named &quot;another-bot&quot; using route &quot;get_some_data&quot;    data = await bot.ipc.request(&quot;get_some_data&quot;, source = &quot;another-bot&quot;)    await ctx.send(data)@bot.ipc.route()async def get_formatted_data(source, user_id = None):    return f&quot;&lt;@{user_id}&gt;&quot;@bot.ipc.eventasync def on_winerp_ready():    print(&quot;Winerp Client is ready for connections&quot;)bot.loop.create_task(bot.ipc.start())bot.run(&quot;TOKEN&quot;)```### Client 2 (`another-bot`)```pyimport winerpimport discordfrom discord.ext.commands import Botbot = Bot(command_prefix=&quot;?&quot;, intents=discord.Intents.all())bot.ipc = winerp.Client(local_name = &quot;another-bot&quot;, port=8080)@bot.command()async def format(ctx):    # Fetching data from a client named &quot;some-random-bot&quot; using route &quot;get_formatted_data&quot;    data = await bot.ipc.request(&quot;get_formatted_data&quot;, source = &quot;some-random-bot&quot;, user_id = ctx.author.id)    await ctx.send(data)@bot.ipc.route()async def get_some_data(source):    return &quot;You are very cool&quot;bot.loop.create_task(bot.ipc.start())bot.run(&quot;TOKEN&quot;)```</longdescription>
</pkgmetadata>