<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=================================================== Lightweight Annotated Schema Serializable Objects===================================================.. image:: https://readthedocs.org/projects/lasso/badge/?version=latest   :target: https://lasso.readthedocs.org/en/latest   :alt: Documentation Status.. image:: https://img.shields.io/travis/aperezdc/lasso-python.svg?style=flat   :target: https://travis-ci.org/aperezdc/lasso-python   :alt: Build Status.. image:: https://img.shields.io/coveralls/aperezdc/lasso-python/master.svg?style=flat   :target: https://coveralls.io/r/aperezdc/lasso-python?branch=master   :alt: Code Coverage.. |lasso-icon| image:: http://tango.freedesktop.org/static/cvs/tango-art-libre/22x22/tools/select-lasso.pngLasso |lasso-icon| is a small module for `Python &lt;http://python.org&gt;`_ whichallows defining classes with type-checked attributes, conforming to apredetermined schema.Classes with Lasso |lasso-icon| schemas can be used to:* **Type-check** object attributes.* **Validate** input data.* **Deserialize** input data to application objects, with direct support for  deserializing `JSON &lt;http://json.org&gt;`_.* **Serialize** application objects to JSON_.Usage=====Define a class, with a schema attached to it used to type-check theattributes:   &gt;&gt;&gt; from lasso import Schemed   &gt;&gt;&gt; class Point(Schemed):   ...   __schema__ = { &quot;x&quot;: int, &quot;y&quot;: int }   ...   &gt;&gt;&gt;Now values can be created, using keyword arguments to set the values of theattributes. Note how the attributes can be accessed normally:   &gt;&gt;&gt; location = Point(x=-3, y=5)   &gt;&gt;&gt; location.x, location.y   (-3, 5)   &gt;&gt;&gt;Attributes are type-checked:   &gt;&gt;&gt; location.x = 6  # Succeds   &gt;&gt;&gt; location.x = &quot;invalid value&quot;  # Fails   Traceback (most recent call last):      ...   schema.SchemaError: 'invalid value' should be instance of &lt;class 'int'&gt;   &gt;&gt;&gt; location.x, location.y  # Values remain unchanged   (6, 5)   &gt;&gt;&gt;Last, but not least, conversion to and from JSON is automatically supported:   &gt;&gt;&gt; json_text = location.to_json(sort_keys=True)   &gt;&gt;&gt; json_text   '{&quot;x&quot;: 6, &quot;y&quot;: 5}'   &gt;&gt;&gt; value = Point.from_json(json_text)   &gt;&gt;&gt; value.__class__.__name__   'Point'   &gt;&gt;&gt;Installation============The stable releases are uploaded to `PyPI &lt;https://pypi.python.org&gt;`_, so youcan install them and upgrade using ``pip``::   pip install lassoAlternatively, you can install development versions —at your own risk—directly from the Git repository::   pip install -e git://github.com/aperezdc/lasso-pythonDocumentation=============The documentation for Lasso |lasso-icon| is available at:  http://lasso.readthedocs.org/en/latestNote that the documentation is work in progress. In the meanwhile, you maywant to read the source code of the module itself for additional insight,or even better, the code of `projects using the module`__.__ users_Development===========If you want to contribute, please use the usual GitHub workflow:1. Clone the repository.2. Hack on your clone.3. Send a pull request for review.If you do not have programming skills, you can still contribute by `reportingissues &lt;https://github.com/aperezdc/lasso-python/issues&gt;`_ that you mayencounter.Users=====The following projects make use of Lasso |lasso-icon|:* `intheam-python &lt;https://github.com/aperezdc/intheam-python&gt;`__* `pebbletime-python &lt;https://github.com/aperezdc/pebbletime-python&gt;`__(If you use it, please do not hesitate in editing this file and add a line tothis list.)</longdescription>
</pkgmetadata>