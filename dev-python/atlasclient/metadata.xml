<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=============================Apache Atlas Client in Python=============================.. image:: https://img.shields.io/pypi/v/atlasclient.svg        :target: https://pypi.python.org/pypi/atlasclient.. image:: https://img.shields.io/travis/jpoullet2000/atlasclient.svg        :target: https://travis-ci.org/jpoullet2000/atlasclient.. image:: https://coveralls.io/repos/github/jpoullet2000/atlasclient/badge.svg?branch=master        :target: https://coveralls.io/github/jpoullet2000/atlasclient?branch=master.. image:: https://readthedocs.org/projects/atlasclient/badge/?version=latest        :target: https://atlasclient.readthedocs.io/en/latest/?badge=latest        :alt: Documentation Status.. image:: https://pyup.io/repos/github/jpoullet2000/atlasclient/shield.svg     :target: https://pyup.io/repos/github/jpoullet2000/atlasclient/     :alt: UpdatesApache Atlas client in Python. Only compatible with Apache Atlas REST API **v2**. * Free software: Apache Software License 2.0* Documentation: https://atlasclient.readthedocs.io.Get started-----------    &gt;&gt;&gt; from atlasclient.client import Atlas    &gt;&gt;&gt; client = Atlas('&lt;atlas.host&gt;', port=21000, username='admin', password='admin')    &gt;&gt;&gt; client.entity_guid(&lt;guid&gt;).status    &gt;&gt;&gt; params = {'typeName': 'DataSet', 'attrName': 'name', 'attrValue': 'data', 'offset': '1', 'limit':'10'}    &gt;&gt;&gt; search_results = client.search_attribute(**params)     &gt;&gt;&gt; for s in search_results:    ...    for e in s.entities:    ...         print(e.name)    ...         print(e.guid)Features--------* Lazy loading: requests are only performed when data are required and not yet available* Resource object relationships: REST API from sub-resources are done transparently for the user, for instance the user does not have to know that it needs to trigger a different REST request for getting the classifications of a specific entity.  TODO features  -------------* allow multiprocessingCredits---------This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template... _Cookiecutter: https://github.com/audreyr/cookiecutter.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage=======History=======1.0.0 (2019-08-10)------------------* Adds the helper functions to parse the qualified name* Updates the version to 1.x to get some confidence from community as the module is pretty stable now0.1.8 (2019-08-08)------------------* Add support for Atlas' Admin Metrics REST API0.1.7 (2019-07-08)------------------* Add support for Atlas' DSL Saved Search (#81)* Fixes list lookups for searching0.1.6 (2019-04-26)------------------* Call of DependentClass inflate (#79) 0.1.5 (2019-04-24)------------------* Add support for Post type Basic Search (#76) 0.1.4 (2019-04-16)------------------* fixes (BasicSearch, when no result in _data, etc) 0.1.3 (2019-04-05)------------------* HTTP Auth* Basic search inflate* relationshipAttributes0.1.2 (2018-03-27)------------------* Bug fixes* Response is returned after entity creation (easier to figure out the guid)0.1.1 (2018-03-07)------------------* Bug fixes* Most of the resources have been implemented (except RelationshipREST)* Basic authentication (only the Basic token is sent on the network)0.1.0 (2018-01-09)------------------* First push.</longdescription>
</pkgmetadata>