<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># TryLeap Python APIThe py_leap_api Python package provides a simple interface for interacting with the TryLeap service, a cloud-based platform for generating images using artificial intelligence.## InstallationYou can install the py_leap_api package using pip:```bashpip install py_leap_api```## Getting StartedFirst, you'll need to create an account on the TryLeap website and obtain an API key.Once you have an API key, you can use the TryLeap class to interact with the service. Here's a simple example that creates a model, uploads some images, and generates some images based on a prompt:```pythonfrom py_leap_api.leap import TryLeap# Create a TryLeap object with your API keyapi_key = &quot;your-api-key&quot;leap = TryLeap(api=api_key)# Create a modelmodel = await leap.create_model(&quot;My Model&quot;)print(model)# add the model idleap.set_model(model=model[&quot;id&quot;])# Upload some imagesurls = [    &quot;https://example.com/image1.png&quot;,    &quot;https://example.com/image2.png&quot;,    &quot;https://example.com/image3.png&quot;,]await leap.upload_images_url(urls)# Train the modelqueue = await leap.training_model()print(queue)```Ideally if you have a webhook url you can provide it to training_model in order to know when the training finished.Otherwise you can fetch the status that return from the function.```python# Generate some imagesprompt = &quot;a cat sitting on a couch&quot;response = await leap.generate_image(prompt, number_images=3)# Retrieve the output imagesoutput_images = await leap.output_images()```# LicenseThis library is licensed under the MIT License. See the LICENSE file for details.</longdescription>
</pkgmetadata>