<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-separatedvaluesfield===========================.. image:: https://secure.travis-ci.org/thoas/django-separatedvaluesfield.png?branch=master    :alt: Build Status    :target: http://travis-ci.org/thoas/django-separatedvaluesfieldAlternative to CommaSeparatedIntegerField_ built-in field that supportsMultipleChoiceField_, custom separator and returns values as list.Installation------------Install package from PyPi_::    pip install django-separatedvaluesfieldOr download the archive from GitHub_ and proceed to a manual installation::    curl -L https://github.com/thoas/django-separatedvaluesfield/tarball/master | tar zx    cd thoas-django-separatedvaluesfield    python setup.py installAdd ``SeparatedValuesField`` to your Django model:.. code:: python    # models.py    from django.db import models    from separatedvaluesfield.models import SeparatedValuesField    class Project(models.Model):        name = models.CharField(max_length=150)        languages = SeparatedValuesField(            max_length=150,            token=',',            choices=(                ('en', 'English'),                ('fr', 'French')))If your choices values are not strings, add the ``cast`` option with the typeyou want to apply on values (defaults to ``django.utils.six.text_type``):.. code:: python    # models.py    from django.db import models    from separatedvaluesfield.models import SeparatedValuesField    class Project(models.Model):        name = models.CharField(max_length=150)        languages = SeparatedValuesField(            max_length=150,            cast=int,            token=',',            choices=(                (1, 'English'),                (2, 'French')))If you are running Django &lt;= 1.6, synchronize your database using ``syncdb``::    python manage.py syncdbIf you are running Django &gt;= 1.7, synchronize your database using ``migrate``::    python manage.py migrateThe ``SeparatedValuesField`` behaves like a ``CharField`` which separates values witha token (default is ``,``).This field is transformed as a MultipleChoiceField_ when you arecreating a ``forms.ModelForm`` with your model.Usage-----.. code:: pycon    &gt;&gt;&gt; from myapp.models import Project    &gt;&gt;&gt; project = Project(name='Project with strings', languages=['fr', 'en'])    &gt;&gt;&gt; project.save() # save 'fr,en' in database for the column &quot;languages&quot;    &gt;&gt;&gt; project.pk    1    &gt;&gt;&gt; project = Project.objects.get(pk=1)    &gt;&gt;&gt; project.languages    ['fr', 'en']    # If you added &quot;cast&quot; option to the field to cast to 'int'    &gt;&gt;&gt; project = Project(name='Project with integers', languages=[u'1', u'2'])    &gt;&gt;&gt; project.save() # save '1,2' in database for the column &quot;languages&quot;    &gt;&gt;&gt; project = Project.objects.get(pk=1)    &gt;&gt;&gt; project.languages    [1, 2]Contribute----------1. Fork the repository2. Clone your fork3. Create a dedicated branch (never ever work in ``master``)4. Create your development environment with ``make dev``5. Activate your environment with ``source .venv/bin/activate``6. Make modifications7. Write tests and execute them with ``make test``8. Be sure all test pass with ``tox``9. If all tests pass, submit a pull request.. _CommaSeparatedIntegerField: https://docs.djangoproject.com/en/dev/ref/models/fields/#commaseparatedintegerfield.. _PyPi: https://pypi.python.org/.. _GitHub: https://github.com/thoas/django-separatedvaluesfield.. _MultipleChoiceField: https://docs.djangoproject.com/en/dev/ref/forms/fields/#multiplechoicefield</longdescription>
</pkgmetadata>