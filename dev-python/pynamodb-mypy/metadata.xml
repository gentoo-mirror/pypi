<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pynamodb-mypyA plugin for mypy which gives it deeper understanding of PynamoDB (beyond what's possible through type stubs).# UsageAdd it to the `plugins` option of the `[mypy]` section in your mypy.ini:```ini[mypy]plugins = pynamodb_mypy```# Nullable attributesWhen declaring attributes with `null=True`, the value types would become optional. For example:```pyfrom pynamodb.attributes import UnicodeAttributefrom pynamodb.models import Modelclass MyModel(Model):  my_key = UnicodeAttribute()  my_value = UnicodeAttribute(null=True)...my_model = MyModel.get('key')if my_model.my_value.lower() == 'foo':  # error: Item &quot;None&quot; of &quot;Optional[str]&quot; has no attribute &quot;lower&quot;   print(&quot;Value is foo&quot;)```would have to be changed to, e.g.:```pyif my_model.my_value and my_model.my_value.lower() == 'foo':   print(&quot;Value is foo&quot;)```# Typed model initializersWhen declaring models, the `__init__` method would be typed to accept only the attributes declared in the model. For example:```pyfrom pynamodb.models import Modelfrom pynamodb.attributes import NumberAttributefrom pynamodb.attributes import UnicodeAttributeclass MyModel(Model):  my_key = UnicodeAttribute(hash_key=True)  my_value = NumberAttribute(null=True)# Existing attributes would be enforced:_ = MyModel(my_key='key', my_value=42, my_other_value='other_value')  # error: Unexpected keyword argument &quot;my_other_value&quot; for &quot;MyModel&quot;# Typing would be enforced:_ = MyModel(my_key='key', my_value='42')  # error: Argument 2 to &quot;MyModel&quot; has incompatible type &quot;str&quot;; expected &quot;Optional[int]&quot;# Nullability will be enforced::_ = MyModel(my_key='key', my_value=None)_ = MyModel(my_key=None, my_value=None)  # error: Argument &quot;my_key&quot; to &quot;MyModel&quot; has incompatible type &quot;None&quot;; expected &quot;str&quot;# The hash key and range key can also be passed as positional arguments:_ = MyModel('key')_ = MyModel(42)  # error: Argument 1 to &quot;MyModel&quot; has incompatible type &quot;int&quot;; expected &quot;str&quot;```</longdescription>
</pkgmetadata>