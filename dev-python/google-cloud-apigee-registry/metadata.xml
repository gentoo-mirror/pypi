<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Client for Apigee Registry API=====================================|preview| |pypi| |versions|`Apigee Registry API`_: allows teams to upload and share machine-readable descriptions of APIs that are in use and in development.- `Client Library Documentation`_- `Product Documentation`_.. |preview| image:: https://img.shields.io/badge/support-preview-orange.svg   :target: https://github.com/googleapis/google-cloud-python/blob/main/README.rst#stability-levels.. |pypi| image:: https://img.shields.io/pypi/v/google-cloud-apigee-registry.svg   :target: https://pypi.org/project/google-cloud-apigee-registry/.. |versions| image:: https://img.shields.io/pypi/pyversions/google-cloud-apigee-registry.svg   :target: https://pypi.org/project/google-cloud-apigee-registry/.. _Apigee Registry API: https://cloud.google.com/apigee/docs/api-hub/get-started-registry-api.. _Client Library Documentation: https://cloud.google.com/python/docs/reference/apigeeregistry/latest.. _Product Documentation:  https://cloud.google.com/apigee/docs/api-hub/get-started-registry-apiQuick Start-----------In order to use this library, you first need to go through the following steps:1. `Select or create a Cloud Platform project.`_2. `Enable billing for your project.`_3. `Enable the Apigee Registry API.`_4. `Setup Authentication.`_.. _Select or create a Cloud Platform project.: https://console.cloud.google.com/project.. _Enable billing for your project.: https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project.. _Enable the Apigee Registry API.:  https://cloud.google.com/apigee/docs/api-hub/get-started-registry-api.. _Setup Authentication.: https://googleapis.dev/python/google-api-core/latest/auth.htmlInstallation~~~~~~~~~~~~Install this library in a `virtualenv`_ using pip. `virtualenv`_ is a tool tocreate isolated Python environments. The basic problem it addresses is one ofdependencies and versions, and indirectly permissions.With `virtualenv`_, it's possible to install this library without needing systeminstall permissions, and without clashing with the installed systemdependencies... _`virtualenv`: https://virtualenv.pypa.io/en/latest/Code samples and snippets~~~~~~~~~~~~~~~~~~~~~~~~~Code samples and snippets live in the `samples/` folder.Supported Python Versions^^^^^^^^^^^^^^^^^^^^^^^^^Our client libraries are compatible with all current `active`_ and `maintenance`_ versions ofPython.Python &gt;= 3.7.. _active: https://devguide.python.org/devcycle/#in-development-main-branch.. _maintenance: https://devguide.python.org/devcycle/#maintenance-branchesUnsupported Python Versions^^^^^^^^^^^^^^^^^^^^^^^^^^^Python &lt;= 3.6If you are using an `end-of-life`_version of Python, we recommend that you update as soon as possible to an actively supported version... _end-of-life: https://devguide.python.org/devcycle/#end-of-life-branchesMac/Linux^^^^^^^^^.. code-block:: console    pip install virtualenv    virtualenv &lt;your-env&gt;    source &lt;your-env&gt;/bin/activate    &lt;your-env&gt;/bin/pip install google-cloud-apigee-registryWindows^^^^^^^.. code-block:: console    pip install virtualenv    virtualenv &lt;your-env&gt;    &lt;your-env&gt;\Scripts\activate    &lt;your-env&gt;\Scripts\pip.exe install google-cloud-apigee-registryNext Steps~~~~~~~~~~-  Read the `Client Library Documentation`_ for Apigee Registry API   to see other available methods on the client.-  Read the `Apigee Registry API Product documentation`_ to learn   more about the product and see How-to Guides.-  View this `README`_ to see the full list of Cloud   APIs that we cover... _Apigee Registry API Product documentation:  https://cloud.google.com/apigee/docs/api-hub/get-started-registry-api.. _README: https://github.com/googleapis/google-cloud-python/blob/main/README.rst</longdescription>
</pkgmetadata>