<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># whois-parser[![PyPI version](https://badge.fury.io/py/whois-parser.svg)](https://badge.fury.io/py/whois-parser)[![Python CI](https://github.com/ninoseki/whois-parser/actions/workflows/test.yml/badge.svg)](https://github.com/ninoseki/whois-parser/actions/workflows/test.yml)[![Coverage Status](https://coveralls.io/repos/github/ninoseki/whois-parser/badge.svg?branch=main)](https://coveralls.io/github/ninoseki/whois-parser?branch=main)Yet another whois parser for Python. üêç- Parse a whois record by using [PyParsing](https://github.com/pyparsing/pyparsing/) not Regex.- Return a parsed record as [dataclass](https://docs.python.org/3/library/dataclasses.html) not dict.## Installation```bashpip install whois-parser```## Usage```pythonimport shfrom whois_parser import WhoisParser# get whois recordhostname = &quot;google.co.jp&quot;whois = sh.Command(&quot;whois&quot;)raw_text = whois(hostname)# parse whois recordparser = WhoisParser()record = parser.parse(raw_text, hostname=hostname)print(record)# =&gt; WhoisRecord(raw_text=&quot;...&quot;, registrant=Registrant(organization='„Ç∞„Éº„Ç∞„É´ÂêàÂêå‰ºöÁ§æ', email=None, name=None, telephone=None), admin=Admin(organization=None, email=None, name=None, telephone=None), tech=Tech(organization=None, email=None, name=None, telephone=None), abuse=Abuse(email=None, telephone=None), statuses=['Connected (2022/03/31)'], name_servers=['ns1.google.com', 'ns2.google.com', 'ns3.google.com', 'ns4.google.com'], domain='google.co.jp', registrar=None, expires_at=None, registered_at=datetime.datetime(2001, 3, 22, 0, 0), updated_at=datetime.datetime(2021, 4, 1, 1, 5, 22, tzinfo=&lt;StaticTzInfo 'JST'&gt;))```## Customize / ContributionWhois's responses will follow a semi-free text format. Thus, unfortunately, this library does not support all the formats in the wild.You can create customized parsers to suit your needs. References are placed in `whois-parser/parsers/`.Any contribution is welcome.</longdescription>
</pkgmetadata>