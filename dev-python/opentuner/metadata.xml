<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>OpenTuner=========Program autotuning has been demonstrated in many domains to achievebetter or more portable performance. However, autotuners themselves areoften not very portable between projects because using a domain informedsearch space representation is critical to achieving good results andbecause no single search technique performs best for all problems.OpenTuner is a new framework for building domain-specificmulti-objective program autotuners. OpenTuner supports fullycustomizable configuration representations, an extensible techniquerepresentation to allow for domain-specific techniques, and an easy touse interface for communicating with the tuned program. A key capabilityinside OpenTuner is the use of ensembles of disparate search techniquessimultaneously, techniques which perform well will receive largertesting budgets and techniques which perform poorly will be disabled.Installation------------OpenTuner requires python 3.7+ and sqlite3 (or your`supported &lt;http://docs.sqlalchemy.org/en/rel_0_8/dialects/index.html&gt;`__database backend of choice). Install with:::   sudo pip install opentuneror::   pip install --user opentunerDevelopment installation------------------------For development or running examples out of a git checkout, we recommendusing `miniconda3 &lt;https://docs.conda.io/en/latest/miniconda.html&gt;`__.::   conda create --name=opentuner python=3.8   conda activate opentuner   pip install -r requirements.txt -r optional-requirements.txt   python setup.py developChecking Installation---------------------To check an installation you can run tests:::   pytest tests/*Or run an example program:::   ./examples/rosenbrock/rosenbrock.pyTutorials----------  `Optimizing Block Matrix   Multiplication &lt;http://opentuner.org/tutorial/gettingstarted/&gt;`__-  `Creating OpenTuner   Techniques &lt;http://opentuner.org/tutorial/techniques/&gt;`__.Papers-------  `OpenTuner: An Extensible Framework for Program   Autotuning &lt;http://groups.csail.mit.edu/commit/papers/2014/ansel-pact14-opentuner.pdf&gt;`__.   Jason Ansel, Shoaib Kamil, Kalyan Veeramachaneni, Jonathan   Ragan-Kelley, Jeffrey Bosboom, Una-May Oâ€™Reilly, Saman Amarasinghe.   International Conference on Parallel Architectures and Compilation   Techniques. Edmonton, Canada. August, 2014.   `Slides &lt;http://groups.csail.mit.edu/commit/papers/2014/ansel-pact14-opentuner-slides.pdf&gt;`__.   `Bibtex &lt;http://groups.csail.mit.edu/commit/bibtex.cgi?key=ansel:pact:2014&gt;`__.Contributing Code-----------------The preferred way to contribute code to OpenTuner is to fork the projecton github and `submit a pullrequest &lt;https://www.openshift.com/wiki/github-workflow-for-submitting-pull-requests&gt;`__.Support-------OpenTuner is supported in part by the United States Department of Energy`X-Stack &lt;http://science.energy.gov/ascr/research/computer-science/ascr-x-stack-portfolio/&gt;`__program as part of `D-TEC &lt;http://www.dtec-xstack.org/&gt;`__.</longdescription>
</pkgmetadata>