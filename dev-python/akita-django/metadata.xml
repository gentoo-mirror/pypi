<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Akita Django IntegrationThis package extends `django.test.Client` in order to instrument Djangointegration tests, capturing requests and responses to the service under test.You can drop in `akita_django.test.Client` everywhere you use Django's `Client`,and Akita will use your integration tests to build a spec for your service.Why build specs?  A spec shows your service's APIs.  Using Akita to build specsfrom your integration tests makes it clear what APIs your code implements --and you can diff specs, showing what impact a code change will have on yourcustomers.  For more info, see [Catching Breaking ChangesFaster](https://docs.akita.software/docs) in the Akita docs.## See it in ActionTake a look at the [Akibox DjangoTutorial](https://github.com/akitasoftware/akibox-django-rest-framework), whichimplements a toy Dropbox-like file server and tests it using the Akita DjangoIntegration.# MiddlewareThis package also provides a Django Middleware class that sends requests and responses to the Akita CLI, running in Daemon mode. See [Django on Heroku](https://docs.akita.software/docs/django-on-heroku) in the Akita docs for more information.</longdescription>
</pkgmetadata>