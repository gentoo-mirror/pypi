<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Scicat Dataset Ingestor![github workflow](https://github.com/jkotan/scingestor/actions/workflows/tests.yml/badge.svg) [![docs](https://img.shields.io/badge/Documentation-webpages-ADD8E6.svg)](https://jkotan.github.io/scingestor/index.html) [![Pypi Version](https://img.shields.io/pypi/v/scingestor.svg)](https://pypi.python.org/pypi/scingestor) [![Python Versions](https://img.shields.io/pypi/pyversions/scingestor.svg)](https://pypi.python.org/pypi/scingestor/)The `scingestor` python package provides a support for scripts which ingest RawDatasets and OrigDatablocks into the SciCat metadata server.## scicat_dataset_ingestorSciCat Dataset ingestor server ingests scan metadata just after a scan is finished. It can be executed by```scicat_dataset_ingestor -c ~/.scingestor.yaml```### Configuration variablesThe configuration written in YAML can contain the following variables* **scicat_url** *(str)* , default: `&quot;http://localhost:8881&quot;`* **ingestor_credential_file** *(str)* , default: `None`* **beamtime_dirs** *(list\&lt;str\&gt;)* , default: `[]`* **beamtime_base_dir** *(str)* , default: `&quot;&quot;`* **ingestor_var_dir** *(str)* , default: `&quot;&quot;`* **ingestor_username** *(str)* , default: `&quot;ingestor&quot;`* **dataset_pid_prefix** *(str)* , default: `&quot;&quot;`* **dataset_update_strategy** (`&quot;no&quot;`, `&quot;patch&quot;`, `&quot;create&quot;`, `&quot;mixed&quot;`) , default: `&quot;patch&quot;`* **relative_path_in_datablock** *(bool)* , default: `False`* **scandir_blacklist** *(list\&lt;str\&gt;)* , default: `[&quot;/gpfs/current/scratch_bl&quot;, &quot;/gpfs/current/processed&quot;, &quot;/gpfs/current/shared&quot;]`* **beamtimeid_blacklist_file** *(str)* , default: `None`* **beamtime_type_blacklist** *(list\&lt;str\&gt;)* , default: `[&quot;P&quot;]`* **chmod_json_files** *(str)* , default: `None`* **max_scandir_depth** *(int)*, default: `-1`* **oned_in_metadata** *(bool)* , default: `False`* **max_oned_size** *(int)* , default: `None`* **scan_metadata_postfix** *(str)* , default: `&quot;.scan.json&quot;`* **datablock_metadata_postfix** *(str)* , default: `&quot;.origdatablock.json&quot;`* **attachment_metadata_postfix** *(str)* , default: `&quot;.attachment.json&quot;`* **metadata_in_var_dir** *(bool)* , default: `False`* **use_corepath_as_scandir** *(bool)* , default: `False`* **beamtime_filename_postfix** *(str)* , default: `&quot;beamtime-metadata-&quot;`* **beamtime_filename_prefix** *(str)* , default: `&quot;.json&quot;`* **datasets_filename_pattern** *(str)* , default: `&quot;scicat-datasets-{beamtimeid}.lst&quot;`* **ingested_datasets_filename_pattern** *(str)* , default: `&quot;scicat-ingested-datasets-{beamtimeid}.lst&quot;`* **file_dataset_metadata_generator** *(str)* , default: `&quot;nxsfileinfo metadata  -o {metapath}/{scanname}{scanpostfix}  -b {beamtimefile} -p {beamtimeid}/{scanname}  -w {ownergroup} -c {accessgroups} {scanpath}/{scanname}.{ext}&quot;`* **dataset_metadata_generator** *(str)* , default: `&quot;nxsfileinfo metadata  -o {metapath}/{scanname}{scanpostfix}  -c {accessgroups} -w {ownergroup} -b {beamtimefile} -p {beamtimeid}/{scanname}&quot;`* **datablock_metadata_generator** *(str)* , default: `&quot;nxsfileinfo origdatablock  -s *.pyc,*{datablockpostfix},*{scanpostfix},*~  -p {pidprefix}/{beamtimeid}/{scanname}  -w {ownergroup} -c {accessgroups} -o {metapath}/{scanname}{datablockpostfix} &quot;`* **datablock_metadata_stream_generator** *(str)* , default: `&quot;nxsfileinfo origdatablock  -s *.pyc,*{datablockpostfix},*{scanpostfix},*~  -w {ownergroup} -c {accessgroups} -p {pidprefix}/{beamtimeid}/{scanname} &quot;`* **datablock_metadata_generator_scanpath_postfix** *(str)* , default: `&quot; {scanpath}/{scanname} &quot;`* **attachment_metadata_generator** *(str)* , default: `&quot;nxsfileinfo attachment  -w {ownergroup} -c {accessgroups} -o {metapath}/{scanname}{attachmentpostfix} &quot;`* **plot_file_extension_list** *(list\&lt;str\&gt;)* , default: `[&quot;png&quot;, &quot;nxs&quot;, &quot;h5&quot;, &quot;ndf&quot;, &quot;nx&quot;, &quot;fio&quot;]`* **master_file_extension_list** *(list\&lt;str\&gt;)* , default: `[&quot;nxs&quot;, &quot;h5&quot;, &quot;ndf&quot;, &quot;nx&quot;, &quot;fio&quot;]`* **chmod_generator_switch** *(str)* , default: `&quot; -x {chmod} &quot;`* **relative_path_generator_switch** *(str)* , default: `&quot; -r {relpath} &quot;`* **oned_dataset_generator_switch** *(str)* , default: `&quot; --oned &quot;`* **max_oned_dataset_generator_switch** *(str)* , default: `&quot; --max-oned-size {maxonedsize} &quot;`* **override_attachment_signals_generator_switch** *(bool)* , default: `&quot; --override &quot;`* **hidden_attributes_generator_switch** *(str)* , default: `&quot; -n {hiddenattributes} &quot;`* **hidden_attributes** *(str)* , default: `&quot;nexdatas_source,nexdatas_strategy,units&quot;`* **attachment_signals_generator_switch** *(str)* , default: `&quot; -s {signals} &quot;`* **attachment_axes_generator_switch** *(str)* , default: `&quot; -e {axes} &quot;`* **attachment_frame_generator_switch** *(str)* , default: `&quot; -m {frame} &quot;`* **attachment_signal_names** *(str)* , default: `&quot;&quot;`* **attachment_axes_names** *(str)* , default: `&quot;&quot;`* **attachment_image_frame_number** *(str)* , default: `&quot;&quot;`* **ingest_dataset_attachment** *(bool)* , default: `False`* **override_attachment_signals** *(bool)* , default:``False`* **log_generator_commands** *(bool)* , default: `False`* **add_empty_units_generator_switch** *(str)* , default: `&quot; --add-empty-units &quot;`* **add_empty_units** *(bool)* , default: `True`* **metadata_copy_map_file** *(str)* , default: `None`* **metadata_copy_map_file_generator_switch** *(str)* , default: `&quot; --copy-map-file {copymapfile} &quot;`* **inotify_timeout** *(float)* , default: `0.1`* **get_event_timeout** *(float)* , default: `0.01`* **ingestion_delay_time** *(float)* , default: `5.0`* **max_request_tries_number** *(int)* , default: `100`* **recheck_dataset_list_interval** *(int)* , default: `1000`* **recheck_beamtime_file_interval** *(int)* , default: `1000`* **request_headers** *(dict\&lt;str,str\&gt;)* , default: `{&quot;Content-Type&quot;: &quot;application/json&quot;, &quot;Accept&quot;: &quot;application/json&quot;}`* **scicat_datasets_path** *(str)* , default: `&quot;RawDatasets&quot;`* **scicat_proposals_path** *(str)* , default: `&quot;Proposals&quot;`* **scicat_datablocks_path** *(str)*, default: `&quot;OrigDatablocks&quot;`* **scicat_attachments_path** *(str)*, default: `&quot;Datasets/{pid}/Attachments&quot;`* **scicat_users_login_path** *(str)*, default: `&quot;Users/login&quot;`* **owner_access_groups_from_proposal** *(bool)*, default: `False`* **metadata_keywords_without_checks** *(list\&lt;str\&gt;)*, default: `[&quot;techniques&quot;, &quot;classification&quot;, &quot;createdBy&quot;, &quot;updatedBy&quot;, &quot;datasetlifecycle&quot;, &quot;numberOfFiles&quot;, &quot;size&quot;, &quot;createdAt&quot;, &quot;updatedAt&quot;, &quot;history&quot;, &quot;creationTime&quot;, &quot;version&quot;, &quot;scientificMetadata&quot;, &quot;endTime&quot;]`e.g.```beamtime_dirs:  - &quot;{homepath}/gpfs/current&quot;  - &quot;{homepath}/gpfs/commissioning&quot;scicat_url: http://localhost:8881ingestor_credential_file: &quot;{homepath}/gpfs/pwd&quot;```### Pattern keywords for configuration variablesThe  **datasets_filename_pattern**, **ingested_datasets_filename_pattern**  and **ingestor_var_dir** can contain the *{beamtimeid}* and *{hostname}* keywords,  e.g. `&quot;scicat-ingested-datasets-{beamtimeid}.lst&quot;` or `&quot;scicat-ingested-datasets-{hostname}-{beamtimeid}.lst&quot;` which is instantiated during the ingestor execution.The  **beamtime_dirs**, **beamtime_base_dir**, **ingestor_var_dir**, **ingestor_credential_file**, **scandir_blacklist** can contain the *{homepath}* keyword.Similarly, **file_dataset_metadata_generator**, **dataset_metadata_generator**, **datablock_metadata_generator**,  **datablock_metadata_stream_generator**, **datablock_metadata_generator_scanpath_postfix**, **attachment_metadata_generator**, **chmod_generator_switch**, **relative_path_generator_switch** can contain the following keywords: *{beamtimeid}* , *{scanname}*, *{chmod}*, *{scanpath}*, *{metapath}*, *{relpath}*, *{beamtimeid}*, *{beamline}*, *{pidprefix}*, *{beamtimefile}*, *{scanpostfix}*, *{datablockpostfix}*, *{ownergroup}*, *{accessgroups}*, *{hostname}*, *{homepath}*, *{hiddenattributes}*, *{ext}*## scicat_dataset_ingestRe-ingestion script for SciCat RawDatasets and OrigDatablocks is usually launched at the end of the beamtime.```scicat_dataset_ingest -c ~/.scingestor.yaml```Its configuration written YAML like for `scicat_dataset_ingestor`## scicat_ingestGeneral ingestion script for SciCat Models could be used for manual scicat model ingestion, e.g. Sample, Instrument or DerivedDataset.```scicat_ingest  -m Samples  -c ~/.scingestor.yaml  ./metadata.json```Its configuration written YAML like for `scicat_dataset_ingestor`## Installation### Required packages* python3 &gt;= 3.7* nxstools &gt;= 3.38.0* inotifyx (python3 version)* requests* setuptools* pyyaml* pytest (to run tests)* sphinx (to build the documentation)### Install from sourcesThe code from https://github.com/jkotan/scingestor can be built with```python3 setup.py install```To build the documentation use```python3 setup.py build_sphinx```The resulting documentation can be found below `build/sphinx/html` in the rootdirectory of the source distribution.Finally, the package can be tested using```python3 -m pytest test```### Install in conda or pip environmentThe code can be installed in your conda environment by```conda create -n myenv python=3.9conda activate myenvpip install inotifyx-py3pip install scingestor```or in your pip environment by```python3 -m venv myvenv. myvenv/bin/activatepip install inotifyx-py3pip install scingestor```### Debian and Ubuntu packagesDebian  `bullseye`, `buster`  or Ubuntu  `jammy`, `focal` packages can be found in the HDRI repository.To install the debian packages, add the PGP repository key```sudo sucurl -s http://repos.pni-hdri.de/debian_repo.pub.gpg  | gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/debian-hdri-repo.gpg --importchmod 644 /etc/apt/trusted.gpg.d/debian-hdri-repo.gpg```and then download the corresponding source list, e.g.for `bullseye````cd /etc/apt/sources.list.dwget http://repos.pni-hdri.de/bullseye-pni-hdri.list```or `jammy````cd /etc/apt/sources.list.dwget http://repos.pni-hdri.de/jammy-pni-hdri.list```respectively.Finally,```apt-get updateapt-get install python3-scingestor```</longdescription>
</pkgmetadata>