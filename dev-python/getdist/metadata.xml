<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===================GetDist===================:GetDist: MCMC sample analysis, plotting and GUI:Author: Antony Lewis:Homepage: https://getdist.readthedocs.io:Source: https://github.com/cmbant/getdist:Reference: https://arxiv.org/abs/1910.13970.. image:: https://travis-ci.com/cmbant/getdist.svg?branch=master   :target: https://app.travis-ci.com/cmbant/getdist.. image:: https://img.shields.io/pypi/v/GetDist.svg?style=flat   :target: https://pypi.python.org/pypi/GetDist/.. image:: https://readthedocs.org/projects/getdist/badge/?version=latest   :target: https://getdist.readthedocs.io/en/latest.. image:: https://mybinder.org/badge_logo.svg   :target: https://mybinder.org/v2/gh/cmbant/getdist/master?filepath=docs%2Fplot_gallery.ipynb.. image:: https://img.shields.io/badge/arXiv-1910.13970-b31b1b.svg?color=0B6523   :target: https://arxiv.org/abs/1910.13970Description============GetDist is a Python package for analysing Monte Carlo samples, including correlated samplesfrom Markov Chain Monte Carlo (MCMC).* **Point and click GUI** - select chain files, view plots, marginalized constraints, LaTeX tables and more* **Plotting library** - make custom publication-ready 1D, 2D, 3D-scatter, triangle and other plots* **Named parameters** - simple handling of many parameters using parameter names, including LaTeX labels and prior bounds* **Optimized Kernel Density Estimation** - automated optimal bandwidth choice for 1D and 2D densities (Botev et al. Improved Sheather-Jones method), with boundary and bias correction* **Convergence diagnostics** - including correlation length and diagonalized Gelman-Rubin statistics* **LaTeX tables** for marginalized 1D constraintsSee the `Plot Gallery and tutorial &lt;http://getdist.readthedocs.io/en/latest/plot_gallery.html&gt;`_(`run online &lt;https://mybinder.org/v2/gh/cmbant/getdist/master?filepath=docs%2Fplot_gallery.ipynb&gt;`_)and `GetDist Documentation &lt;http://getdist.readthedocs.io/en/latest/index.html&gt;`_.Getting Started================Install getdist using pip::    $ pip install getdistor from source files using::    $ python setup.py installor::    $ pip install -e /path/to/source/You can test if things are working using the unit test by running::    $ python -m unittest getdist.tests.getdist_testCheck the dependencies listed in the next section are installed. You can then use the getdist module from your scripts, oruse the GetDist GUI (*getdist-gui* command).Once installed, the best way to get up to speed is probably to read throughthe `Plot Gallery and tutorial &lt;http://getdist.readthedocs.io/en/latest/plot_gallery.html&gt;`_.Dependencies=============* Python 3.7+* matplotlib* scipy* PySide6 or PySide2 - optional, only needed for GUI* Working LaTeX installation (not essential, only for some plotting/table functions)Python distributions like Anaconda have most of what you need (except for LaTeX).To use the `GUI &lt;https://getdist.readthedocs.io/en/latest/gui.html&gt;`_ you need PySide.See the `GUI docs &lt;https://getdist.readthedocs.io/en/latest/gui.html#installation&gt;`_ for suggestions on how to install.Algorithm details==================Details of kernel density estimation (KDE) algorithms and references are give in the GetDist notes`arXiv:1910.13970 &lt;https://arxiv.org/pdf/1910.13970&gt;`_.Samples file format===================GetDist can be used in scripts and interactively with standard numpy arrays(as in the `examples &lt;http://getdist.readthedocs.io/en/latest/plot_gallery.html&gt;`_).Scripts and the `GetDist GUI &lt;http://getdist.readthedocs.io/en/latest/gui.html&gt;`_ can also read parameter sample/chain files in plain text format(or in the format output by the `Cobaya &lt;https://cobaya.readthedocs.io&gt;`__ sampling program).In general plain text files of the form::  xxx_1.txt  xxx_2.txt  ...  xxx.paramnames  xxx.rangeswhere &quot;xxx&quot; is some root file name.The .txt files are separate chain files (there can also be just one xxx.txt file). Each row of each sample .txt file is in the format  *weight like param1 param2 param3* ...The *weight* gives the number of samples (or importance weight) with these parameters. *like* gives -log(likelihood), and *param1, param2...* are the values of the parameters at the sample point. The first two columns can be 1 and 0 if they are not known or used.The .paramnames file lists the names of the parameters, one per line, optionally followed by a LaTeX label. Names cannot include spaces, and if they end in &quot;*&quot; they are interpreted as derived (rather than MCMC) parameters, e.g.:: x1   x_1 y1   y_1 x2   x_2 xy*  x_1+y_1The .ranges file gives hard bounds for the parameters, e.g.:: x1  -5 5 x2   0 NNote that not all parameters need to be specified, and &quot;N&quot; can be used to denote that a particular upper or lower limit is unbounded. The ranges are used to determine densities and plot bounds if there are samples near the boundary; if there are no samples anywhere near the boundary the ranges have no affect on plot bounds, which are chosen appropriately for the range of the samples.There can also optionally be a .properties.ini file, which can specify *burn_removed=T* to ensure no burn in is removed, or *ignore_rows=x* to ignore the firstfraction *x* of the file rows (or if *x &gt; 1*, the specified number of rows).Loading samples===================To load an MCSamples object from text files do::     from getdist import loadMCSamples     samples = loadMCSamples('/path/to/xxx', settings={'ignore_rows':0.3})Here *settings* gives optional parameter settings for the analysis. *ignore_rows* is useful for MCMC chains where you want todiscard some fraction from the start of each chain as burn in (use a number &gt;1 to discard a fixed number of sample lines rather than a fraction).The MCSamples object can be passed to plot functions, or used to get many results. For example, to plot marginalized parameter densitiesfor parameter names *x1* and *x2*::    from getdist import plots    g = plots.get_single_plotter()    g.plot_2d(samples, ['x1', 'x2'])When you have many different chain files in the same directory,plotting can work directly with the root file names. For example to compare *x* and *y* constraintsfrom two chains with root names *xxx* and *yyy*::    from getdist import plots    g = plots.get_single_plotter(chain_dir='/path/to/', analysis_settings={'ignore_rows':0.3})    g.plot_2d(['xxx','yyy'], ['x', 'y'])MCSamples objects can also be constructed directly from numpy arrays in memory, see the examplein the `Plot Gallery &lt;https://getdist.readthedocs.io/en/latest/plot_gallery.html&gt;`_.GetDist script===================If you have chain files on on disk, you can also quickly calculate convergence and marginalized statistics using the *getdist* script:    usage: getdist [-h] [--ignore_rows IGNORE_ROWS] [-V] [ini_file] [chain_root]    GetDist sample analyser    positional arguments:      *ini_file*              .ini file with analysis settings (optional, if omitted uses defaults      *chain_root*            Root name of chain to analyse (e.g. chains/test), required unless file_root specified in ini_file    optional arguments:      -h, --help            show this help message and exit      --ignore_rows IGNORE_ROWS                            set initial fraction of chains to cut as burn in                            (fraction of total rows, or &gt;1 number of rows);                            overrides any value in ini_file if set      --make_param_file MAKE_PARAM_FILE                        Produce a sample distparams.ini file that you can edit                        and use when running GetDist      -V, --version         show program's version number and exitwhere *ini_file* is optionally a .ini file listing *key=value* parameter option values, and chain_root is the root file name of the chains.For example::   getdist distparams.ini chains/test_chainThis produces a set of files containing parameter means and limits (.margestats), N-D likelihood contour boundaries and best-fit sample (.likestats),convergence diagnostics (.converge), parameter covariance and correlation (.covmat and .corr), and optionally various simple plotting scripts.If no *ini_file* is given, default settings are used. The *ignore_rows* option allows some of the start of each chain file to be removed as burn in.To customize settings you can run::   getdist --make_param_file distparams.inito produce the setting file distparams.ini, edit it, then run with your custom settings.GetDist GUI===================Run *getdist-gui* to run the graphical user interface. This requires PySide, but will run on Windows, Linux and Mac.It allows you to open a folder of chain files, then easily select, open, plot and compare, as well as viewing standard GetDist outputs and tables.See the `GUI Readme &lt;http://getdist.readthedocs.io/en/latest/gui.html&gt;`_.Using with CosmoMC and Cobaya=============================This GetDist package is general, but is mainly developed for analysing chains from the `CosmoMC &lt;https://cosmologist.info/cosmomc&gt;`_and `Cobaya &lt;https://cobaya.readthedocs.io/&gt;`_ sampling programs.No need to install this package separately if you have a full CosmoMC installation; the Cobaya installation will also install GetDist as a dependency.Detailed help is available for plotting Planck chainsand using CosmoMC parameter grids in the `Readme &lt;https://cosmologist.info/cosmomc/readme_python.html&gt;`_.Citation===================You can refer to the notes::     @article{Lewis:2019xzd,      author         = &quot;Lewis, Antony&quot;,      title          = &quot;{GetDist: a Python package for analysing Monte Carlo                        samples}&quot;,      year           = &quot;2019&quot;,      eprint         = &quot;1910.13970&quot;,      archivePrefix  = &quot;arXiv&quot;,      primaryClass   = &quot;astro-ph.IM&quot;,      SLACcitation   = &quot;%%CITATION = ARXIV:1910.13970;%%&quot;,      url            = &quot;https://getdist.readthedocs.io&quot;     }and references therein as appropriate.===================.. image:: https://raw.githubusercontent.com/CobayaSampler/cobaya/master/img/Sussex_white.svg   :alt: University of Sussex   :target: https://www.sussex.ac.uk/astronomy/   :height: 200px   :width: 200px.. image:: https://raw.githubusercontent.com/CobayaSampler/cobaya/master/img/ERC_white.svg   :alt: European Research Council   :target: https://erc.europa.eu/   :height: 200px   :width: 200px.. image:: https://cdn.cosmologist.info/antony/STFC_white.svg   :alt: STFC   :target: https://stfc.ukri.org/   :height: 200px   :width: 200px</longdescription>
</pkgmetadata>