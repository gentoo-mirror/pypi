<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># heartandsole: Python library for analysis of running data files[![PyPI Latest Release](https://img.shields.io/pypi/v/heartandsole.svg)](https://pypi.org/project/heartandsole/)[![License](https://img.shields.io/pypi/l/heartandsole.svg)](https://github.com/aaron-schroeder/heartandsole/blob/master/LICENSE)[![Supported Python versions](https://img.shields.io/pypi/pyversions/heartandsole.svg)](https://www.python.org/downloads/)## Table of Contents                                                                    - [Introduction](#introduction)- [Dependencies](#dependencies)- [Installation](#installation)- [Example](#example)- [License](#license)- [Documentation](#documentation)- [Contact](#contact)## Introductionheartandsole is designed to work with running activity files.It reads data from `.fit`, `.tcx`, `.gpx`, and `.csv` files, converts it topandas data structures, then performs calculations and summarizes the data,for example:&lt;!-- - running power (based on Dr. Philip Friere Skiba's GOVSS algorithm)- average running power- normalized running power (based on information publicly available about  TrainingPeaks' NP速 and NGP速, and Dr. Philip Friere Skiba's GOVSS algorithm)- intensity (based on information publicly available about TrainingPeaks' IF速)- training stress (based on information publicly available about  TrainingPeaks' TSS速 and Dr. Philip Friere Skiba's GOVSS algorithm)- average heart rate --&gt;- elevation gain- elapsed time- timer time- distance from GPS coordinates## Dependencies[Pandas](http://pandas.pydata.org/) and [NumPy](http://www.numpy.org/) are required.A number of optional dependencies enable various features, such asreading data from specific activity file formats and performing geospatialcalculations: - [fitparse](https://github.com/dtcooper/python-fitparse) allows data   to be read in from `.fit` files. - [activereader](https://github.com/aaron-schroeder/activereader) allows data   to be read in from `.tcx` and `.gpx` files. - [pandas-xyz](https://github.com/aaron-schroeder/pandas-xyz) allows geospatial   calculations, like converting GPS coordinates to distance and determining   elevation gain along a route.## Installation`pip install heartandsole` to install.## Exampleheartandsole provides the `Activity` class. Activities can be constructed manually with a required records DataFrame and optional summary Series and laps DataFrame, or they can be constructeddirectly from various activity file formats using `Activity.from_*` classmethods.```pythonfrom heartandsole import Activity# Reading from a fit file requires the fitparse package to be# installed.activity = heartandsole.Activity.from_fit('my_activity.fit')# Various field accessors provide methods related to specific data fields# commonly found in activity files.print(activity.time.elapsed(source='records'))print(activity.time.timer(source='summary'))# Geospatial calculations require pandas-xyz to be installed.print(activity.elevation.gain(source='records'))  # scalarprint(activity.distance.records_from_position())  # Series```## License[![License](https://img.shields.io/pypi/l/heartandsole.svg)](https://github.com/aaron-schroeder/heartandsole/blob/master/LICENSE)This project is licensed under the MIT License. See[LICENSE](https://github.com/aaron-schroeder/heartandsole/blob/master/LICENSE)file for details.## DocumentationThe official documentation is hosted on readthedocs.io: https://heartandsole.readthedocs.io/en/stable.## BackgroundMy impetus for this project was to implement a version of Philip Friere Skiba's GOVSS algorithm (with tweaks to better align with the underlying research). The end result will be a free, open-source version of proprietary calculationsfound in platforms like Strava and Training Peaks (eventually - bear with me).My hope is that other runners will benefit as I have from taking these secretalgorithms out of their black box, by understanding the science behind these calculations, and training smarter.This package was originally forked from Michael Traver's [fitanalysis package](https://github.com/mtraver/python-fitanalysis), but the twoprojects diverged significantly enough for me to move my fork to a separate repository. I am indebted to Michael for writing such a clean, useful,easy-to-understand package that served as heartandsole's starting point.## ContactYou can get in touch with me at the following places:- Website: [trailzealot.com](https://trailzealot.com)- LinkedIn: [linkedin.com/in/aarondschroeder](https://www.linkedin.com/in/aarondschroeder/)- Twitter: [@trailzealot](https://twitter.com/trailzealot)- Instagram: [@trailzealot](https://instagram.com/trailzealot)- GitHub: [github.com/aaron-schroeder](https://github.com/aaron-schroeder)</longdescription>
</pkgmetadata>