<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![](https://maltiverse.com/assets/images/logo/logo_letters_black.png)# python-maltiversePython library for [maltiverse.com](https://www.maltiverse.com/) API.This python package is meant to ease request to the Maltiverse IoC search engine API which formal definition can be found here:https://app.swaggerhub.com/apis-docs/maltiverse/api/1.0.0-oas3## [1 - Installation](#table-of-contents)```pip install maltiverse```## [2 - Usage](#table-of-contents)## [2.1 - Authentication](#table-of-contents)Authentication in maltiverse follows a OAuth 2.0 http bearer model with JWT token. JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.We can create a Maltiverse account in the website and use those credentials to login like this:```pythonfrom maltiverse import Maltiverseapi = Maltiverse()api.login(email=&quot;email&quot;, password=&quot;password&quot;)```Alternatively Maltiverse provides a permanent API Key that is required for some scenarios. This API Key can be generated in profile page once registered by clicking &quot;Generate API Key&quot; button. Copy your API key and pass it to the constructor with parameter auth_token```pythonfrom maltiverse import Maltiverseapi = Maltiverse(auth_token=&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAzZSBSZXNlYXJjaCBUZWFtIiwi&quot;)```From this point request will be sent with authentication JWT parameter if required.+ ip_get()+ hostname_get()+ url_get()+ sample_get()## [2.2 - IPv4](#table-of-contents)## [2.2.1 - GET](#table-of-contents)Retrieves an IPv4 address in JSON format```pythonimport jsonfrom maltiverse import Maltiverseapi = Maltiverse()result = api.ip_get(&quot;110.189.222.98&quot;)print(json.dumps(result, indent=4, sort_keys=True))```Output```json{    &quot;address&quot;: &quot;No.31 ,jingrong street,beijing\n100032&quot;,    &quot;as_name&quot;: &quot;AS4134 Chinanet&quot;,    &quot;asn_cidr&quot;: &quot;110.184.0.0/13&quot;,    &quot;asn_country_code&quot;: &quot;CN&quot;,    &quot;asn_date&quot;: &quot;2009-05-11 00:00:00&quot;,    &quot;asn_registry&quot;: &quot;apnic&quot;,    &quot;blacklist&quot;: [        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Mail Spammer&quot;,            &quot;first_seen&quot;: &quot;2017-11-30 12:39:45&quot;,            &quot;last_seen&quot;: &quot;2017-11-30 12:39:45&quot;,            &quot;source&quot;: &quot;Blocklist.de&quot;        },        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Malicious Host&quot;,            &quot;first_seen&quot;: &quot;2020-01-28 00:45:48&quot;,            &quot;last_seen&quot;: &quot;2020-01-29 07:10:12&quot;,            &quot;source&quot;: &quot;CIArmy&quot;        },        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Malicious Host&quot;,            &quot;first_seen&quot;: &quot;2020-01-29 00:18:08&quot;,            &quot;last_seen&quot;: &quot;2020-02-19 06:34:10&quot;,            &quot;source&quot;: &quot;Alienvault Ip Reputation Database&quot;        },        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Mail Spammer&quot;,            &quot;first_seen&quot;: &quot;2020-03-22 11:18:35&quot;,            &quot;last_seen&quot;: &quot;2020-03-22 11:18:35&quot;,            &quot;source&quot;: &quot;Barracuda&quot;        },        {            &quot;count&quot;: 5,            &quot;description&quot;: &quot;Scanning IPs&quot;,            &quot;first_seen&quot;: &quot;2020-01-26 09:01:00&quot;,            &quot;last_seen&quot;: &quot;2020-02-01 10:26:00&quot;,            &quot;source&quot;: &quot;IBM X-Force Exchange&quot;        },        {            &quot;count&quot;: 32,            &quot;description&quot;: &quot;Spam&quot;,            &quot;first_seen&quot;: &quot;2017-07-14 06:44:00&quot;,            &quot;last_seen&quot;: &quot;2020-03-21 07:52:00&quot;,            &quot;source&quot;: &quot;IBM X-Force Exchange&quot;        }    ],    &quot;cidr&quot;: [        &quot;110.184.0.0/13&quot;    ],    &quot;classification&quot;: &quot;malicious&quot;,    &quot;country_code&quot;: &quot;CN&quot;,    &quot;creation_time&quot;: &quot;2017-11-30 12:39:45&quot;,    &quot;email&quot;: [        &quot;anti-spam@ns.chinanet.cn.net&quot;,        &quot;scipadmin2013@189.cn&quot;    ],    &quot;ip_addr&quot;: &quot;110.189.222.98&quot;,    &quot;location&quot;: {        &quot;lat&quot;: 30.6667,        &quot;lon&quot;: 104.0667    },    &quot;modification_time&quot;: &quot;2020-02-19 06:34:10&quot;,    &quot;registrant_name&quot;: &quot;CHINANET Sichuan province network\nData Communication Division\nChina Telecom&quot;,    &quot;tag&quot;: [        &quot;mail&quot;,        &quot;spam&quot;    ],    &quot;type&quot;: &quot;ip&quot;}```## [2.3 - Hostname](#table-of-contents)## [2.3.1 - GET](#table-of-contents)Retrieves a Hostname in JSON format```pythonimport jsonfrom maltiverse import Maltiverseapi = Maltiverse()result = api.hostname_get(&quot;59022.flatblastard.com&quot;)print(json.dumps(result, indent=4, sort_keys=True))```Output```json{    &quot;as_name&quot;: &quot;AS47142 PP Andrey Kiselev&quot;,    &quot;blacklist&quot;: [        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Ponmocup&quot;,            &quot;first_seen&quot;: &quot;2020-03-22 08:14:16&quot;,            &quot;last_seen&quot;: &quot;2020-03-22 08:14:16&quot;,            &quot;source&quot;: &quot;Dyndns.org&quot;        }    ],    &quot;classification&quot;: &quot;malicious&quot;,    &quot;creation_time&quot;: &quot;2020-03-22 08:14:17&quot;,    &quot;domain&quot;: &quot;flatblastard.com&quot;,    &quot;domain_consonants&quot;: 11,    &quot;domain_lenght&quot;: 22,    &quot;entropy&quot;: 3.8796640049025934,    &quot;hostname&quot;: &quot;59022.flatblastard.com&quot;,    &quot;modification_time&quot;: &quot;2020-03-22 08:14:17&quot;,    &quot;resolved_ip&quot;: [        {            &quot;ip_addr&quot;: &quot;91.207.4.51&quot;,            &quot;timestamp&quot;: &quot;2020-03-22 08:14:17&quot;        },        {            &quot;ip_addr&quot;: &quot;184.168.131.241&quot;,            &quot;timestamp&quot;: &quot;2019-12-05 10:08:14&quot;        },        {            &quot;ip_addr&quot;: &quot;50.63.202.16&quot;,            &quot;timestamp&quot;: &quot;2018-11-21 07:43:52&quot;        }    ],    &quot;tag&quot;: [        &quot;ponmocup&quot;,        &quot;malware&quot;    ],    &quot;tld&quot;: &quot;com&quot;,    &quot;type&quot;: &quot;hostname&quot;}```## [2.4 - Url](#table-of-contents)## [2.4.1 - GET](#table-of-contents)Retrieves a URL in JSON format```pythonimport jsonfrom maltiverse import Maltiverseapi = Maltiverse()result = api.url_get(&quot;https://alleom.com/weqmo&quot;)print(json.dumps(result, indent=4, sort_keys=True))```Output```json{    &quot;blacklist&quot;: [        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Phishing Other&quot;,            &quot;first_seen&quot;: &quot;2020-03-22 08:53:10&quot;,            &quot;last_seen&quot;: &quot;2020-03-22 08:53:10&quot;,            &quot;source&quot;: &quot;Phishtank&quot;        },        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;Social Engineering&quot;,            &quot;first_seen&quot;: &quot;2020-03-22 08:53:10&quot;,            &quot;labels&quot;: [                &quot;malicious-activity&quot;            ],            &quot;last_seen&quot;: &quot;2020-03-22 08:53:10&quot;,            &quot;source&quot;: &quot;Google Safebrowsing&quot;        }    ],    &quot;classification&quot;: &quot;malicious&quot;,    &quot;creation_time&quot;: &quot;2020-03-22 08:53:10&quot;,    &quot;domain&quot;: &quot;alleom.com&quot;,    &quot;hostname&quot;: &quot;alleom.com&quot;,    &quot;modification_time&quot;: &quot;2020-03-22 08:53:10&quot;,    &quot;tag&quot;: [        &quot;phishing&quot;    ],    &quot;tld&quot;: &quot;com&quot;,    &quot;type&quot;: &quot;url&quot;,    &quot;url&quot;: &quot;https://alleom.com/weqmo&quot;,    &quot;urlchecksum&quot;: &quot;7b0ef6e5d95e2ee2c2602135c39f3fe09fe8f1eee7f5769266a0dbe718696ec3&quot;}```## [2.5 - Sample](#table-of-contents)## [2.5.1 - GET](#table-of-contents)Retrieves information about a sample/file in JSON format.   + sample_get: Retrieves a sample by its SHA256 hash.  + sample_get_md5: Retrieves a sample by its MD5 hash.```pythonimport jsonfrom maltiverse import Maltiverseapi = Maltiverse()result = api.sample_get(&quot;b4e29d41ca04fccfa5d92be5bae506c556c6c880a4f5e9932f1e4a0766a2fd15&quot;)print(json.dumps(result, indent=4, sort_keys=True))``````pythonimport jsonfrom maltiverse import Maltiverseapi = Maltiverse()result = api.sample_get_md5(&quot;e09f2eaebc86f54b48e4fb5101454535&quot;)print(json.dumps(result, indent=4, sort_keys=True))```Output```json{    &quot;antivirus&quot;: [        {            &quot;description&quot;: &quot;AIT:Trojan.Nymeria.3070&quot;,            &quot;name&quot;: &quot;MicroWorld-eScan&quot;        },        {            &quot;description&quot;: &quot;TrojanPWS.AutoIt.Zbot.S&quot;,            &quot;name&quot;: &quot;CAT-QuickHeal&quot;        },        {            &quot;description&quot;: &quot;Dropper-AutoIt.i&quot;,            &quot;name&quot;: &quot;McAfee&quot;        },        {            &quot;description&quot;: &quot;Unsafe&quot;,            &quot;name&quot;: &quot;Cylance&quot;        },        {            &quot;description&quot;: &quot;malicious.ebc86f&quot;,            &quot;name&quot;: &quot;Cybereason&quot;        },        {            &quot;description&quot;: &quot;heuristic&quot;,            &quot;name&quot;: &quot;Invincea&quot;        },        {            &quot;description&quot;: &quot;ML.Attribute.HighConfidence&quot;,            &quot;name&quot;: &quot;Symantec&quot;        },        {            &quot;description&quot;: &quot;a variant of Win32/TrojanDropper.Autoit.RF&quot;,            &quot;name&quot;: &quot;ESET-NOD32&quot;        },        {            &quot;description&quot;: &quot;Malicious&quot;,            &quot;name&quot;: &quot;APEX&quot;        },        {            &quot;description&quot;: &quot;AIT:Trojan.Nymeria.3070&quot;,            &quot;name&quot;: &quot;BitDefender&quot;        },        {            &quot;description&quot;: &quot;malicious (high confidence)&quot;,            &quot;name&quot;: &quot;Endgame&quot;        },        {            &quot;description&quot;: &quot;Dropper.DR/AutoIt.Gen8&quot;,            &quot;name&quot;: &quot;F-Secure&quot;        },        {            &quot;description&quot;: &quot;BehavesLike.Win32.TrojanAitInject.wc&quot;,            &quot;name&quot;: &quot;McAfee-GW-Edition&quot;        },        {            &quot;description&quot;: &quot;malicious.moderate.ml.score&quot;,            &quot;name&quot;: &quot;Trapmine&quot;        },        {            &quot;description&quot;: &quot;Generic.mg.e09f2eaebc86f54b&quot;,            &quot;name&quot;: &quot;FireEye&quot;        },        {            &quot;description&quot;: &quot;AIT:Trojan.Nymeria.3070 (B)&quot;,            &quot;name&quot;: &quot;Emsisoft&quot;        },        {            &quot;description&quot;: &quot;DR/AutoIt.Gen8&quot;,            &quot;name&quot;: &quot;Avira&quot;        },        {            &quot;description&quot;: &quot;Unsafe.AI_Score_71%&quot;,            &quot;name&quot;: &quot;eGambit&quot;        },        {            &quot;description&quot;: &quot;Trojan:AutoIt/Prcablt.SD!MTB&quot;,            &quot;name&quot;: &quot;Microsoft&quot;        },        {            &quot;description&quot;: &quot;AIT:Trojan.Nymeria.DBFE&quot;,            &quot;name&quot;: &quot;Arcabit&quot;        },        {            &quot;description&quot;: &quot;AIT:Trojan.Nymeria.3070&quot;,            &quot;name&quot;: &quot;GData&quot;        },        {            &quot;description&quot;: &quot;malware (ai score=88)&quot;,            &quot;name&quot;: &quot;MAX&quot;        },        {            &quot;description&quot;: &quot;Trojan-Dropper.Win32.Autoit&quot;,            &quot;name&quot;: &quot;Ikarus&quot;        },        {            &quot;description&quot;: &quot;Autoit/TrojanDropper.RF!tr&quot;,            &quot;name&quot;: &quot;Fortinet&quot;        },        {            &quot;description&quot;: &quot;AI:Packer.08C9A85A16&quot;,            &quot;name&quot;: &quot;BitDefenderTheta&quot;        },        {            &quot;description&quot;: &quot;HEUR/QVM10.1.0DC9.Malware.Gen&quot;,            &quot;name&quot;: &quot;Qihoo-360&quot;        }    ],    &quot;av_ratio&quot;: 36,    &quot;blacklist&quot;: [        {            &quot;count&quot;: 1,            &quot;description&quot;: &quot;AIT:Trojan.Nymeria&quot;,            &quot;first_seen&quot;: &quot;2020-03-22 11:15:06&quot;,            &quot;last_seen&quot;: &quot;2020-03-22 11:15:06&quot;,            &quot;source&quot;: &quot;Hybrid-Analysis&quot;        }    ],    &quot;classification&quot;: &quot;malicious&quot;,    &quot;creation_time&quot;: &quot;2020-03-22 11:15:06&quot;,    &quot;filename&quot;: [        &quot;steam-fix.exe&quot;    ],    &quot;filetype&quot;: &quot;PE32 executable (GUI) Intel 80386, for MS Windows&quot;,    &quot;md5&quot;: &quot;e09f2eaebc86f54b48e4fb5101454535&quot;,    &quot;modification_time&quot;: &quot;2020-03-22 11:15:06&quot;,    &quot;process_list&quot;: [        {            &quot;name&quot;: &quot;steam-fix.exe&quot;,            &quot;normalizedpath&quot;: &quot;C:\\steam-fix.exe&quot;,            &quot;sha256&quot;: &quot;b4e29d41ca04fccfa5d92be5bae506c556c6c880a4f5e9932f1e4a0766a2fd15&quot;,            &quot;uid&quot;: &quot;00045091-00002896&quot;        },        {            &quot;name&quot;: &quot;svchost.exe&quot;,            &quot;normalizedpath&quot;: &quot;%TEMP%\\svchost.exe&quot;,            &quot;sha256&quot;: &quot;2cb251a4b4d0d0dde9af047873474e8fcf3d8100324150970da1cd0ef615fe22&quot;,            &quot;uid&quot;: &quot;00045270-00000844&quot;        },        {            &quot;name&quot;: &quot;steam-idle.exe&quot;,            &quot;normalizedpath&quot;: &quot;%TEMP%\\steam-idle.exe&quot;,            &quot;sha256&quot;: &quot;026036ed63d90e292f90aa0fc7c51e985956776727fa736855ec8a7ea37d4d5f&quot;,            &quot;uid&quot;: &quot;00045293-00003096&quot;        }    ],    &quot;score&quot;: 10.0,    &quot;sha1&quot;: &quot;9f3ed8c9378d957d68010d752f3142e710239a90&quot;,    &quot;sha256&quot;: &quot;b4e29d41ca04fccfa5d92be5bae506c556c6c880a4f5e9932f1e4a0766a2fd15&quot;,    &quot;size&quot;: 3661312,    &quot;type&quot;: &quot;sample&quot;}```</longdescription>
</pkgmetadata>