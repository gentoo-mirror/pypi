<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>MCRcon======This library provides a straightforward implementation of Minecraft's`Rcon protocol`_ in Python to provide a client for handling Remote Commands(RCON) to a Minecraft server... _Rcon protocol: http://wiki.vg/RconInstallation############The library is availble on PYPI and can be installed with pip::    pip install mcrconUsage#####The recommend way to run this client is using the python 'with' statement.This ensures that the socket is correctly closed when you are done with itrather than being left open.Example::    In [1]: from mcrcon import MCRcon    In [2]: with MCRcon(&quot;10.1.1.1&quot;, &quot;sekret&quot;) as mcr:       ...:     resp = mcr.command(&quot;/whitelist add bob&quot;)       ...:     print(resp)While you can use it without the 'with' statement, you have to connectmanually, and ideally disconnect::    In [3]: mcr = MCRcon(&quot;10.1.1.1&quot;, &quot;sekret&quot;)    In [4]: mcr.connect()    In [5]: resp = mcr.command(&quot;/whitelist add bob&quot;)    In [6]: print(resp)    In [7]: mcr.disconnect()Command Line Usage##################After installing the package a cli will be included that can be used.Help can be gotten by doing::    mcrcon --helpYou can connect from the console with commands like the following::    mcrcon 10.1.1.1You will either be prompted for your password, or you can set it as followsas an environment variable::    export RCON_PASSWORD=sekretAnd then you can run commands on the server interactively::    &gt; /whitelist add bob</longdescription>
</pkgmetadata>