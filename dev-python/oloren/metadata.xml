<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Oloren Orchestrator - Python Extension Library#### Installation```bashpip install oloren```A requirement is that you use Python version &gt; 3.7 as the code uses dataclasses which were introduced in that version.If for some reason you want to use it with Python 3.6 you can install the backport of dataclasses for Python 3.6 with:```bashpip install dataclasses```#### Getting StartedCheck out this minimal example to get started:```pythonimport oloren as oloimport pandas as pd@olo.register(description=&quot;Basic math operations on two numbers.&quot;)def operation(operation=olo.Choice([&quot;Add&quot;, &quot;Subtract&quot;, &quot;Multiply&quot;, &quot;Divide&quot;]), a=olo.Num(), b=olo.Num()):    if operation == &quot;Add&quot;:        return a + b    elif operation == &quot;Subtract&quot;:        return a - b    elif operation == &quot;Multiply&quot;:        return a * b    elif operation == &quot;Divide&quot;:        return a / b@olo.register(description=&quot;Convert CSV file to JSON&quot;)def dataframe_to_json(csv_file=olo.File()):    return pd.read_csv(csv_file).to_json()@olo.register(num_outputs=2)def twooutputs(s=olo.String(), num=olo.Num()):    return s, numif __name__ == &quot;__main__&quot;:    olo.run(&quot;starterextension&quot;)```The key requirements are that each argument of your function has a default value that is set to one of the specialOloren types. These types subclass their relevant returned data types (e.g. string, int, float) so your autocompletewill work as normal.#### Documentationhttps://oloren-ai.github.io/python-extension-lib/index.html</longdescription>
</pkgmetadata>