<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-easy-maps================This app makes it easy to display a map for any given address indjango_ templates. No manual geocoding, html/js copy-pasting or Djangomodel changes are needed.Authored by `Mikhail Korobov &lt;http://kmike.ru/&gt;`_, and some great`contributors &lt;https://github.com/kmike/django-easy-maps/contributors&gt;`_... image:: https://img.shields.io/pypi/v/django-easy-maps.svg    :target: https://pypi.python.org/pypi/django-easy-maps/.. image:: https://img.shields.io/pypi/dm/django-easy-maps.svg    :target: https://pypi.python.org/pypi/django-easy-maps/.. image:: https://img.shields.io/github/license/bashu/django-easy-maps.svg    :target: https://pypi.python.org/pypi/django-easy-maps/.. image:: https://img.shields.io/travis/bashu/django-easy-maps.svg    :target: https://travis-ci.com/github/bashu/django-easy-maps/Installation============First install the module, preferably in a virtual environment. It can be installed from PyPI:.. code-block:: shell    pip install django-easy-mapsSetup=====You'll need to add ``easy_maps`` to ``INSTALLED_APPS`` in your project's ``settings.py`` file:.. code-block:: python    INSTALLED_APPS += [        'easy_maps',    ]Then run ``./manage.py migrate`` to create the required database tables.Configuration=============The only mandatory configuration is the ``EASY_MAPS_GOOGLE_KEY`` variable:.. code-block:: python    EASY_MAPS_GOOGLE_KEY = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ___0123456789'If you need a place to center the map at when no address is insertedyet, add the latitude and longitude to the ``EASY_MAPS_CENTER`` variable inyour ``settings.py`` like the following:.. code-block:: python    EASY_MAPS_CENTER = (-41.3, 32)Other optional settings:.. code-block:: python    # Optional    EASY_MAPS_ZOOM = 8  # Default zoom level, see https://developers.google.com/maps/documentation/javascript/tutorial#MapOptions for more information.    EASY_MAPS_LANGUAGE = 'ru'  # See https://developers.google.com/maps/faq#languagesupport for supported languages.Please see the ``example`` application. This application is used tomanually test the functionalities of this package. This also serves asa good example.You need Django 1.8 or above to run that. It might run on older versions but that is not tested.Usage=====First of all, load the ``easy_map_tags`` in every template where you want to use it:.. code-block:: html+django    {% load easy_maps_tags %}Use:.. code-block:: html+django    {% easy_map &lt;address&gt; [&lt;width&gt; &lt;height&gt;] [&lt;zoom&gt;] [using &lt;template_name&gt;] %}For example:.. code-block:: html+django    {% load easy_maps_tags %}    &lt;!-- Default map with 300x400 dimensions --&gt;    {% easy_map &quot;Russia, Ekaterinburg, Mira 32&quot; 300 400 %}    &lt;!-- Variable address, custom detail level and custom template --&gt;    {% easy_map address 200 200 5 using &quot;map.html&quot; %}The coordinates for map will be obtained using google geocoder on firstaccess. Then they'll be cached in DB. Django's template caching can be usedlater in order to prevent DB access on each map render:.. code-block:: html+django    {% load easy_maps_tags cache %}    {% cache 600 my_map firm.address %}        {% easy_map firm.address 300 400 %}    {% endcache %}Templates---------If the default map template is not sufficient then a custom map template can beused. For example:.. code-block:: html+django    {% easy_map address using &quot;map.html&quot; %}    {% easy_map address 200 300 5 using &quot;map.html&quot; %}The template will have ``map`` (``easy_maps.Address`` instanceauto-created for passed address on first access), ``width``, ``height``and ``zoom`` variables. The outer template context is passed to the renderedtemplate as well.You can start your own template from scratch or just override some blocks in thedefault template.Please refer to https://developers.google.com/maps/documentation/javascript/ fordetailed Google Maps JavaScript API help.Widgets-------``django-easy-maps`` provides a basic widget that displays a map under the addressfield. It can be used in the admin for map previews. For example:.. code-block:: python    from django import forms    from django.contrib import admin    from easy_maps.widgets import AddressWithMapWidget    from .models import Firm    class FirmAdmin(admin.ModelAdmin):        class form(forms.ModelForm):            class Meta:                widgets = {                    'address': AddressWithMapWidget({'class': 'vTextField'})                }    admin.site.register(Firm, FirmAdmin)``address`` field should be either a ``CharField`` or ``TextField``.Contributing------------If you've found a bug, implemented a feature or customized the template andthink it is useful then please consider contributing. Patches, pull requests orjust suggestions are welcome!License-------``django-easy-maps`` is released under the MIT license... _django: https://www.djangoproject.com</longdescription>
</pkgmetadata>