<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># db-hammer##### [[中文](https://github.com/liuzhuogood/db-hammer/blob/master/README.md)] [[English](https://github.com/liuzhuogood/db-hammer/blob/master/README-EN.md)] **[db-hammer](https://github.com/liuzhuogood/db-hammer)** 是个简单数据库工具库，在 Python DB-API上提供一些高级方法；方便大家经常做数据库查询。提供方便的导出数据功能，可高性能、稳定的导出超大表数据。目前已对 MySQL、Oracle、MSSQL、PostgreSQL 数据进行封装，封装其他结构化数据库也很简单。### 安装``` shellpip3 install db-hammer```### Python Console``` python&gt;&gt;&gt; from db_hammer.mysql import MySQLConnection&gt;&gt;&gt; db_conf = {&quot;host&quot;: &quot;10.0.0.10&quot;,&quot;user&quot;: &quot;dbuser&quot;,&quot;pwd&quot;: &quot;dbpassword&quot;,&quot;database&quot;: &quot;database&quot;}&gt;&gt;&gt; db = MySQLConnection(**db_conf):&gt;&gt;&gt; r = db.select_dict_list(&quot;select * from t_student&quot;)&gt;&gt;&gt; r[{'name': '小明', 'sex': '男', 'age': 18, 'address': '湖南省长沙岳麓区', 'mobile': '13012345678'}, {'name': '小花', 'sex': '女', 'age': 16, 'address': '江苏省南京市鼓楼区', 'mobile': '13100000001'}]```### Python With``` pythonfrom db_hammer.mysql import MySQLConnectiondb_conf = {&quot;host&quot;: &quot;10.0.0.10&quot;,&quot;user&quot;: &quot;dbuser&quot;,&quot;password&quot;: &quot;dbpassword&quot;,&quot;database&quot;: &quot;database&quot;}with MySQLConnection(**db_conf) as db:    i_sql = db.gen_insert_dict_sql(dict_data={        &quot;name&quot;: &quot;小白&quot;,        &quot;sex&quot;: &quot;男&quot;,        &quot;age&quot;: &quot;20&quot;,        &quot;address&quot;: &quot;上海市虹口区&quot;,    }, table_name=&quot;t_student&quot;)    db.execute(i_sql)    db.commit()    rs = db.select_dict_list(sql=&quot;select * from t_student&quot;)    print(rs)```### 连接其他数据库``` pythonfrom db_hammer.oracle import OracleConnectionfrom db_hammer.postgresql import PostgreSQLConnectionfrom db_hammer.mssql import MsSQLConnectiondb_oracle = OracleConnection(**db_conf)db_psql = PostgreSQLConnection(**db_conf)db_mssql = MsSQLConnection(**db_conf)```### 导出数据库数据``` pythonwith MySQLConnection(**mysql_conf) as db:    db.export_data_file(sql=&quot;select * from exam_rule_b&quot;, dir_path=&quot;./export_data&quot;, file_mode=&quot;csv&quot;)```根据SQL:`select * from exam_rule_b`导出到`./export_data`，默认为分割文件，导出文件类型支持：`txt`、`csv`、`gz`，可以传入文件编码格式：`encoding`游标方式导出，实际测试大表导出，20个G都没有问题。且导出性能较高，使用`gz`格式导出时，自动压缩，且很多工具支持直接读取`gz`文本。### 开启日志``` pythonimport logginglogging.basicConfig(level=logging.DEBUG,                    format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',                    datefmt='%Y-%m-%d %H:%M:%S')```### 常用数据库方法列表``` python# 根据sql获取页数select_page_size(sql: str, page_size=50)# 获取分页列表数据,列表字典形式返回select_page_list(sql: str, page_size=50, page_start=1, **kwargs)# 获取分页列表数据,列表字典形式返回select_dict_page_list(sql: str, page_size=50, page_start=1, **kwargs)# 获取第一列第一行的值select_value(sql: str)# 获取列表数据,列表方式返回select_list(sql: str)# 获取所有列表数据，列表字典形式返回select_dict_list(sql: str)# 获取第一行数据，字典形式返回select_dict(sql: str)# 执行SQL,并返回影响行数execute(sql: str)# 关闭连接close()# 回滚事务rollback()# 提交事务commit()# 根据字典生成 Insert SQLgen_insert_dict_sql(dict_data: dict, table_name: str)# 根据字典来生成 Update SQLgen_update_dict_sql(dict_data: dict, table_name: str, where: str)# 根据sql语句把数据生成 Insert SQLselect_insert_sql(sql: str, table_name: str)```## 其他小工具``` python# 执行本地命令db_hammer.util.cmd# 简单的日期转换db_hammer.util.date# 获取文件和目录工具（好用）db_hammer.util.file# 简单保存键值工具db_hammer.util.keep# 一个简单的收发邮件工具db_hammer.util.sim_email```</longdescription>
</pkgmetadata>