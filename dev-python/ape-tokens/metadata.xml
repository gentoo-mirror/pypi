<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Quick StartA series of utilities for working with tokens, based on the [`py-tokenlists`](https://github.com/ApeWorX/py-tokenlists).## Dependencies- [python3](https://www.python.org/downloads) version 3.8 up to 3.11.## Installation### via `pip`You can install the latest release via [`pip`](https://pypi.org/project/pip/):```bashpip install ape-tokens```### via `setuptools`You can clone the repository and use [`setuptools`](https://github.com/pypa/setuptools) for the most up-to-date version:```bashgit clone https://github.com/ApeWorX/ape-tokens.gitcd ape-tokenspython3 setup.py install```## Quick Usage### CLI UsageFirst, install a token list, such as the `1inch` token list, which contains many tokens that you can use:```bashape tokens install tokens.1inch.eth```To see all the tokens you can use, run command:```bashape tokens list-tokens```To see other available CLI commands, run:```bashape tokens --help```### Python UsageOne of the main reasons to use the `ape-tokens` plugin is to have nicer UX for providing token amounts to contract transactions.For example, let's say you have a smart-contract named `MyContract` with a function `provideLinkToken()` that takes a decimal value of `LINK` tokens.The following is an example script that deploys the contract and makes a transaction by expressing the value of LINK as `8.23 LINK`:```pythonfrom ape import accounts, projectmy_account = accounts[0]contract = my_account.deploy(project.MyContract)contract.provideLinkTokens(&quot;8.23 LINK&quot;)```Alternatively, if you need the converted value returned to you, you can use the `convert` tool from the root `ape` namespace:```pythonfrom ape import convertconvert(&quot;100.1234 BAT&quot;, int)```Lastly, to get information about a token, including its contract address, you can do so by importing the `tokens` member from the root `ape_tokens` namespace:```pythonfrom ape_tokens import tokensbat = tokens[&quot;BAT&quot;]print(bat.address)```</longdescription>
</pkgmetadata>