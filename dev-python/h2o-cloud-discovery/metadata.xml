<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `h2o-cloud-discovery`[![licence](https://img.shields.io/github/license/h2oai/cloud-discovery-py?style=flat-square)](https://github.com/h2oai/cloud-discovery-py/blob/main/LICENSE)[![pypi](https://img.shields.io/pypi/v/h2o-cloud-discovery?style=flat-square)](https://pypi.org/project/h2o-cloud-discovery/)H2O Cloud Discovery Client.## Installation```shpip install h2o-cloud-discovery```## UsagePackage provides two main functions.  Synchronous `h2o_discovery.discover()`and asynchronous `h2o_discovery.discover_async()`.  Both functions returna discovery object that can be used to obtain the information the H2O Cloudenvironment, its services and clients.Both accept a `environment` argument that can be used to specify the H2O Cloudenvironment for which the discovery should be performed. It's handy when forlocal development.Alternatively, the `H2O_CLOUD_ENVIRONMENT` environment variable can be used.```pythonimport h2o_discoverydiscovery = h2o_discovery.discover()# Print the H2O Cloud environment that was discovered.print(discovery.environment.h2o_cloud_environment)# Connect to the my service.my_service_client = my_service.client(address=discovery.services[&quot;my-service&quot;].uri)```## Examples### Example: Use with H2O.ai MLOps Python Client within the Wave App```pythonimport h2o_authnimport h2o_discoveryimport h2o_mlops_client as mlopsfrom h2o_wave import Q, app, uifrom h2o_wave import main@app(&quot;/&quot;)async def serve(q: Q):    discovery = await h2o_discovery.discover_async()    token_provider = h2o_authn.AsyncTokenProvider(        refresh_token=q.auth.refresh_token,        issuer_url=discovery.environment.issuer_url,        client_id=discovery.clients[&quot;platform&quot;].oauth2_client_id,    )    mlops_client = mlops.Client(        gateway_url=discovery.services[&quot;mlops-api&quot;].uri,        token_provider=token_provider,    )    ...```## DevelopmentProject is managed using [Hatch](https://hatch.pypa.io/latest/).### TestingFor quick development tests use:```shhatch run devtest:pytest```Full test matrix can be run using:```shhatch env remove test &amp;&amp; hatch run test:pytest```### Linting```shhatch run lint:check```Formating and imports can be fixed using:```shhatch run lint:fix```</longdescription>
</pkgmetadata>