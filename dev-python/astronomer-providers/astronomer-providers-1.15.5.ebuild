# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_9,3_10,3_11} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Apache Airflow Providers containing Deferrable Operators & Sensors from Astronomer"

HOMEPAGE="https://github.com/astronomer/astronomer-providers/"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/a/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all amazon apache-hive apache-livy cncf-kubernetes databricks dbt-cloud docs google http microsoft-azure mypy openlineage sftp snowflake tests"
DEPENDENCIES="dev-python/apache-airflow[${PYTHON_USEDEP}]
	dev-python/aiohttp[${PYTHON_USEDEP}]
	dev-python/aiofiles[${PYTHON_USEDEP}]
	dev-python/asgiref[${PYTHON_USEDEP}]
	dev-python/markupsafe[${PYTHON_USEDEP}]
	all? ( dev-python/aiobotocore[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-amazon[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-apache-hive[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-apache-livy[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-cncf-kubernetes[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-databricks[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-google[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-http[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-snowflake[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-sftp[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-microsoft-azure[${PYTHON_USEDEP}] )
	all? ( dev-python/asyncssh[${PYTHON_USEDEP}] )
	all? ( dev-python/apache-airflow-providers-dbt-cloud[${PYTHON_USEDEP}] )
	all? ( dev-python/gcloud-aio-bigquery[${PYTHON_USEDEP}] )
	all? ( dev-python/gcloud-aio-storage[${PYTHON_USEDEP}] )
	all? ( dev-python/kubernetes-asyncio[${PYTHON_USEDEP}] )
	all? ( dev-python/impyla[${PYTHON_USEDEP}] )
	all? ( dev-python/openlineage-airflow[${PYTHON_USEDEP}] )
	all? ( dev-python/paramiko[${PYTHON_USEDEP}] )
	all? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	all? ( dev-python/snowflake-sqlalchemy[${PYTHON_USEDEP}] )
	all? ( dev-python/databricks-sql-connector[${PYTHON_USEDEP}] )
	amazon? ( dev-python/apache-airflow-providers-amazon[${PYTHON_USEDEP}] )
	amazon? ( dev-python/aiobotocore[${PYTHON_USEDEP}] )
	apache-hive? ( dev-python/apache-airflow-providers-apache-hive[${PYTHON_USEDEP}] )
	apache-hive? ( dev-python/impyla[${PYTHON_USEDEP}] )
	apache-livy? ( dev-python/apache-airflow-providers-apache-livy[${PYTHON_USEDEP}] )
	apache-livy? ( dev-python/paramiko[${PYTHON_USEDEP}] )
	cncf-kubernetes? ( dev-python/apache-airflow-providers-cncf-kubernetes[${PYTHON_USEDEP}] )
	cncf-kubernetes? ( dev-python/kubernetes-asyncio[${PYTHON_USEDEP}] )
	databricks? ( dev-python/apache-airflow-providers-databricks[${PYTHON_USEDEP}] )
	databricks? ( dev-python/databricks-sql-connector[${PYTHON_USEDEP}] )
	dbt-cloud? ( dev-python/apache-airflow-providers-dbt-cloud[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-autoapi[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	google? ( dev-python/apache-airflow-providers-google[${PYTHON_USEDEP}] )
	google? ( dev-python/gcloud-aio-storage[${PYTHON_USEDEP}] )
	google? ( dev-python/gcloud-aio-bigquery[${PYTHON_USEDEP}] )
	google? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	http? ( dev-python/apache-airflow-providers-http[${PYTHON_USEDEP}] )
	microsoft-azure? ( dev-python/apache-airflow-providers-microsoft-azure[${PYTHON_USEDEP}] )
	mypy? ( dev-python/mypy[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-aiofiles[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-boto[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-certifi[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-croniter[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-Deprecated[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-docutils[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-freezegun[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-paramiko[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-protobuf[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-python-dateutil[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-python-slugify[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-pytz[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-redis[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-requests[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-setuptools[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-termcolor[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-tabulate[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-toml[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-Markdown[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-PyMySQL[${PYTHON_USEDEP}] )
	mypy? ( dev-python/types-PyYAML[${PYTHON_USEDEP}] )
	openlineage? ( dev-python/openlineage-airflow[${PYTHON_USEDEP}] )
	sftp? ( dev-python/apache-airflow-providers-sftp[${PYTHON_USEDEP}] )
	sftp? ( dev-python/asyncssh[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/apache-airflow-providers-snowflake[${PYTHON_USEDEP}] )
	snowflake? ( dev-python/snowflake-sqlalchemy[${PYTHON_USEDEP}] )
	tests? ( dev-python/aioresponses[${PYTHON_USEDEP}] )
	tests? ( dev-python/asynctest[${PYTHON_USEDEP}] )
	tests? ( dev-python/parameterized[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-asyncio[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	tests? ( dev-python/pre-commit[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
