<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pytest-check-linkspytest plugin that checks URLs for HTML-containing files.[![Tests](https://github.com/jupyterlab/pytest-check-links/workflows/Tests/badge.svg)](https://github.com/jupyterlab/pytest-check-links/actions?query=workflow%3ATests+branch%3Amaster)[![PyPI version](https://badge.fury.io/py/pytest-check-links.svg)](https://badge.fury.io/py/pytest-check-links)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pytest-check-links)## Supported files- `.html`- `.rst`- `.md` (TODO: select renderer)- `.ipynb` (requires `nbconvert`)## Install```pip install pytest-check-links```## Use```pytest --check-links mynotebook.ipynb```## Configure#### --links-ext&gt; default: `md,rst,html,ipynb`A comma-separated list of extensions to check#### --check-anchorsAlso check whether links with `#anchors` HTML files (either local, or withserved with `html` in the `Content-Type`) actually exist, and point to _exactly one_named anchor.#### --check-links-ignoreA regular expression that matches URIs that should not be checked.Can be specified multiple times for multiple ignore patterns.This can be used for files that have a lot of links to GitHub pages,such as a Changelog. GitHub has rate limiting, which would normally cause these files to take up to an hour to complete for larger repositories. For example:```pytest --check-links --check-links-ignore &quot;https://github.com/.*/pull/.*&quot; CHANGELOG.md```### CacheCaching requires the installation of `requests-cache`.```pip install requests-cache```If enabled, each occurance of a link will be checked, no matter how many timesit appears in a collection of files to check.#### --check-links-cacheCache requests when checking links. Caching is disabled by default, and this optionmust be provided, even if other cache configuration options are provided.#### --check-links-cache-name&gt; default: `.pytest-check-links-cache`Name of link cache, either the base name of a file or similar, depending on backend.#### --check-links-cache-backend&gt; default: `sqlite3`Cache persistence backend. The other known backends are:- `memory`- `redis`- `mongodb`See the [requests-cache documentation](https://requests-cache.readthedocs.io)for more information.#### --check-links-cache-expire-after&gt; default: `None` (unlimited)Time to cache link responses (seconds).#### --check-links-cache-backend-optBackend-specific options for link cache, provided as `key:value`. These are passeddirectly to the `requests_cache.CachedSession` constructor, as they vary dependingon the backend.Values will be parsed as JSON first, so to overload the default of caching allHTTP response codes (which requires a list of `int`s):```bash--check-links-backend-opt allowable_codes:[200]```## Code Styling`pytest-check-links` has adopted automatic code formatting so you shouldn'tneed to worry too much about your code style.As long as your code is valid,the pre-commit hook should take care of how it should look.You can invoke the pre-commit hook by hand at any time with:```bashpre-commit run```which should run any autoformatting on your codeand tell you about any errors it couldn't fix automatically.You may also install [black integration](https://black.readthedocs.io/en/stable/integrations/editors.html)into your text editor to format code automatically.If you have already committed files before setting up the pre-commithook with `pre-commit install`, you can fix everything up using`pre-commit run --all-files`. You need to make the fixing commityourself after that.Some of the hooks only run on CI by default, but you can invoke them byrunning with the `--hook-stage manual` argument.## TODO- pick a markdown renderer (probably commonmark) or make the markdown renderer pluggable- options for validating links (allow absolute links, only remote or local, etc.)- find URLs in Python docstrings</longdescription>
</pkgmetadata>