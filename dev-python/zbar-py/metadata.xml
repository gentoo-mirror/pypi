<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>zbar-py=======Introduction------------Author: `Zachary Pincus &lt;http://zplab.wustl.edu&gt;`__ zpincus@gmail.comContributions: Rounak Singh rounaksingh17@gmail.com (example code andzbar.misc).zbar-py is a module (compatible with both Python 2.7 and 3+) thatprovides an interface to the `zbar &lt;http://zbar.sourceforge.net&gt;`__bar-code reading library, which can read most barcode formats as well asQR codes. Input images must be 2D numpy arrays of type uint8 (i.e. 2Dgreyscale images).The zbar library itself packaged along with zbar-py (it's built as apython extension), so no external dependencies are required. Buildingzbar requires the iconv library to be present, which you almostcertainly have, except if you're on windows. Then you probably will needto download or build the iconv DLL.`Here &lt;http://mlocati.github.io/articles/gettext-iconv-windows.html&gt;`__are pre-built 32- and 64-bit binaries for same.The python code is under the MIT license, and zbar itself is licensedunder the GNU LGPL version 2.1.Prerequisites:---------------  iconv -- c library required for building zbar-py; see above-  numpy -- for running zbar-py-  pygame -- for examples using a webcamSimple examples:----------------More sophisticated examples can be found in 'examples' directory.-  Scan for barcodes in a 2D numpy array:.. code:: python    import zbar    image = read_image_into_numpy_array(...) # whatever function you use to read an image file into a numpy array    scanner = zbar.Scanner()    results = scanner.scan(image)    for result in results:        print(result.type, result.data, result.quality, result.position)-  Scan for UPC-A barcodes and perform checksum validity test:.. code:: python    import zbar    import zbar.misc    image = read_image_into_numpy_array(...) # get an image into a numpy array    scanner = zbar.Scanner()    results = scanner.scan(image)    for result in results:        if result.type == 'UPC-A':            print(result.data, zbar.misc.upca_is_valid(result.data.decode('ascii')))</longdescription>
</pkgmetadata>