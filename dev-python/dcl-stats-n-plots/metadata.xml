<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>dcl_stats_n\_plots================&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt;This repository is part of the **DCLwidgets** series. These repositoriesare dedicated to foster the joint development of tools and resources bythe [Defense Circuits Lab](https://www.defense-circuits-lab.com/). Theintended use of each tool may vary greatly from very lab- and/oranalysis-specific problems, to tools and resources that may be of usealso for other researchers. The common goal for each repository,however, is to provide the tool as an interactive, userfriendly, andintuitive GUI (usually based on[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/), hence thename), such that the user needs little to no coding expertise.List of all repositories of the DCLwidgets series: &lt;br&gt;- [dcl_stats_n\_plots](https://github.com/DSegebarth/dcl_stats_n_plots/):  A widget to compute statistics and plot the data with several options  to customize the plot- [DCL_to_NWB](https://github.com/DSegebarth/DCL_to_NWB/): A widget to  convert datasets acquired in the DCL into the NWB file format- [BSc_MS](https://github.com/DSegebarth/BSc_MS/): A widget to annotate  the corners of a maze within video files and save the corresponding x-  and y-coordinates------------------------------------------------------------------------## About this widgetThe purpose of this widget is to make everyday life in the lab a littleeasier, as it helps you to compute statistical tests and to createhighly customizable plots that visualize your data. The widget alsoenables you to select exactly which statistical results you would liketo annotate within the plots. This way, statistical analysis andvisualization of your data is what it should be - simple &amp; fast!Please get in touch if you have any feedback, questions, or featurerequests for us!------------------------------------------------------------------------## Installation### Using conda:Although the `dcl_stats_n_plots` package itself is only available on[PiPy](https://pypi.org/project/dcl-stats-n-plots/), we yet recommendinstallation via conda - especially if you would like to use the GUI.Simply recreate the conda environment on your local machine by runningthe following command in your command line or terminal (e.g. Anacondaprompt). You can find the corresponding “environment.yml” file in theGitHub repo([here](https://github.com/DSegebarth/dcl_stats_n_plots/blob/master/environment.yml)).Just make sure to place the file either in the current working directory(usually displayed at the beginning of each line in your terminal), orto provide the entire filepath (e.g. something like:“C:\Users\dsege\Downloads\environment.yml”):With the “environment.yml” file in your current working directory: &lt;br&gt;&gt; conda env create -file environment.ymlWith the “environment.yml” file in a different directory: &lt;br&gt;&gt; conda env create -file PATH\TO\THE\FILE\environment.ymlThis will install all dependencies that are required to use`dcl_stats_n_plost`, including its GUI version.&lt;div&gt;&gt; **Note**&gt;&gt; This installation was so far only tested on Linux (Ubuntu 20.04.4)&gt; using conda 22.9.0&lt;/div&gt;&lt;div&gt;&gt; **Note**&gt;&gt; If you would like to contribute to the development of&gt; `dcl_stats_n_plost` you are more than welcome! On top of the regular&gt; user installation, you will, however, also need to install `nbdev` in&gt; the same environment. Simply follow all the steps above and once you&gt; have verified that everything was installed correcty, simply run in&gt; the same conda environment:&gt;&gt; &gt; conda install -c fastai nbdev&gt;&gt; If you are new to `nbdev`, you´d probably also want to check out their&gt; comprehensive tutorials and walkthroughs&gt; [here](https://nbdev.fast.ai/tutorials/). I will also add some more&gt; contribution guidelines to this repository soon. In the meantime, feel&gt; free to get in touch! :-)&lt;/div&gt;### Using pip:Despite the `dcl_stats_n_plots` package itself is only available viapypi.org, we still highly recommend to follow the installationguidelines “using conda” above, especially if you´d like to use its GUIfunctionalities. If you´d still want to go down this route, here´s yourinstall command:&gt; pip install dcl-stats-n-plots## How to use.. the documentation, including the comprehensive tutorials, iscurrently being updated ..## Next stepsThere are some major reorganizations planned:1)  This repository will be shifted / forked / re-created under the    recently established GitHub organisations page of the Defense    Circuits Lab, i.e. somewhere    [here](https://github.com/orgs/Defense-Circuits-Lab/repositories)2)  When this migration is performed, the new repository (ideally also    the package) will be renamed to `stats_n_plots` as the prefix to    link it to the DCL will no longer be required3)  Once the migration was successfully completed, the documentation    will be updated to eventually match the “refactored” version, which    actually already includes some new statistical tests compared to the    old version, as well as additional functions inteded to improve    usability (like exporting &amp; importing your current plotting    settings)4)  Finally, once the documentation regarding the usage of    `dcl_stats_n_plots` was updated, I will add some information and    guidelines for contribution to this packageOnce the steps listed above are all completed, there are plenty of ideasfor how to continue developing this package further:- integrate tests (especially with the improved CI of nbdev v2 and also  once additional contributors join)- add additional statistical tests &amp; plots (e.g. Kolmogorov-Smirnov test  for goodness of fit for cumulative probability functions, or linear &amp;  linear mixed effect models, ..)- add additional customization options (optional hue column, fonts, ..)- improve how configs are export and imported, ideally to include all  settings (type of plot, color scheme, …)- create DCL-default configs- fix bugs ;-)</longdescription>
</pkgmetadata>