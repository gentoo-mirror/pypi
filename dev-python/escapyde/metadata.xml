<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># escapydeYet another ANSI escape sequence library for Python - now modernised!## InstallationThe package is readily available on PyPI. There are no dependencies, but Python 3.9 or newer is required.On Windows:```shpy -m pip install escapyde```On other platforms:```shpip3 install escapyde```## ChangelogYou can find the project changelog [here][changelog].## UsageFor basic usage, pre-made colours are available for your convenience.Use them with the pipe operator on strings you want to colour. Theyend the colour changes automatically, too!```pyimport escapydefrom escapyde.examples.text import SKULLsome_text = &quot;Hello, world!&quot;print(f&quot;I want to print this red: {escapyde.FRED | some_text}, and this yellow: {escapyde.FYELLOW | 'Hi!'}.&quot;)print(f&quot;Here's a cyan skull:\n{escapyde.FCYAN | SKULL}&quot;)```You can also colour backgrounds,```pyimport escapydesome_more_text = &quot;This should have a blue background.&quot;print(f&quot;{escapyde.BBLUE | some_more_text}&quot;)```combine formatting options,```pyimport escapydeeven_more_text = &quot;Lorem Ipsum dolor sit amet.&quot;print(f&quot;{escapyde.FRED | escapyde.BWHITE | even_more_text}&quot;)```and even mix formatting options on the fly (although at present you need toseparate strings with parentheses):```pyimport escapydeprint(f&quot;{(escapyde.FRED | 'Hello') | (escapyde.FBLUE | 'World')}&quot;)```It is possible to use custom foreground and background colours via the`escapyde.AnsiEscape` class; these can be either valid ANSI literals orRGB values:```pyfrom escapyde.ansi import AnsiEscapefrom escapyde.colours import sequence_tablefg_white = sequence_table['fg_white']  # You can alternatively use raw integers, eg. 37 for whitegold = AnsiEscape(foreground_colour=(0xDB, 0xAC, 0x34))white_gold = AnsiEscape(foreground_colour=fg_white, background_colour=(219, 172, 34))print(gold | &quot;This is gold!&quot;)print(white_gold | &quot;This is white text on gold background!&quot;)```The class defaults to the default colours of the terminal,so you don't need to set both values.Finally, if you have a string with multiple substrings you wish to recolour, there's a function for that:```pyfrom escapyde.ansi import AnsiEscape, escape_formatmapping = {    'match': AnsiEscape(foreground_colour=(255, 0, 0)),    'case': AnsiEscape(foreground_colour=(255, 255, 0)),    'print': AnsiEscape(foreground_colour=(0, 255, 0)),}text = &quot;&quot;&quot;stuff = [3, 1, 4]match stuff:    case [3, *rest]:        print(&quot;It's pi-like&quot;)    case _:        print(&quot;Not like pi&quot;)&quot;&quot;&quot;print(escape_format(string=text, escape_map=mapping, case_sensitive=True))```## Screenshots![A screenshot of the example run on IPython on Windows.][old_screenshot]![A screenshot of the newer examples run on IPython on Windows.][new_screenshot]![A screenshot of the newer examples run on IPython on Windows.][new_screenshot_2][changelog]: ./CHANGELOG.md[old_screenshot]: ./docs/assets/readme_screenshot.png &quot;Not bad, not bad at all.&quot;[new_screenshot]: ./docs/assets/readme_20230608.png &quot;That's colour over there!&quot;[new_screenshot_2]: ./docs/assets/readme_20230608_2.png &quot;That's colour over there!&quot;</longdescription>
</pkgmetadata>