<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>To install Capstone, you should run `pip install capstone`.If you would like to build Capstone with just the source distribution, withoutpip, just run `python setup.py install` in the folder with setup.py in it.In order to use this source distribution, you will need an environment that cancompile C code. On Linux, this is usually easy, but on Windows, this involvesinstalling Visual Studio and using the &quot;Developer Command Prompt&quot; to perform theinstallation. See BUILDING.txt for more information.By default, attempting to install the python bindings will trigger a build ofthe capstone native core. If this is undesirable for whatever reason, forinstance, you already have a globally installed copy of libcapstone, you mayinhibit the build by setting the environment variable LIBCAPSTONE_PATH. Theexact value is not checked, just setting it will inhibit the build. Duringexecution, this variable may be set to the path of a directory containing aspecific version of libcapstone you would like to use.If you don't want to build your own copy of Capstone, you can use a precompiledbinary distribution from PyPI. Saying `pip install capstone` shouldautomatically obtain an appropriate copy for your system. If it does not, pleaseopen an issue at https://github.com/aquynh/capstone and tag @rhelmot - shewill fix this, probably!--------------------------------------------------------------------------------Capstone is a disassembly framework with the target of becoming the ultimatedisasm engine for binary analysis and reversing in the security community.Created by Nguyen Anh Quynh, then developed and maintained by a small community,Capstone offers some unparalleled features:- Support multiple hardware architectures: ARM, ARM64 (ARMv8), Mips, PPC, Sparc,  SystemZ, XCore and X86 (including X86_64).- Having clean/simple/lightweight/intuitive architecture-neutral API.- Provide details on disassembled instruction (called “decomposer” by others).- Provide semantics of the disassembled instruction, such as list of implicit  registers read &amp; written.- Implemented in pure C language, with lightweight wrappers for C++, C#, Go,  Java, NodeJS, Ocaml, Python, Ruby &amp; Vala ready (available in main code,  or provided externally by the community).- Native support for all popular platforms: Windows, Mac OSX, iOS, Android,  Linux, *BSD, Solaris, etc.- Thread-safe by design.- Special support for embedding into firmware or OS kernel.- High performance &amp; suitable for malware analysis (capable of handling various  X86 malware tricks).- Distributed under the open source BSD license.Further information is available at http://www.capstone-engine.org[License]This project is released under the BSD license. If you redistribute the binaryor source code of Capstone, please attach file LICENSE.TXT with your products.</longdescription>
</pkgmetadata>