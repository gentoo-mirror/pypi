<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>text2num========|docs|``text2num`` is a python package that provides functions and parser classes for:- Parsing of numbers expressed as words in French, English, Spanish, Portuguese, German and Catalan and convert them to integer values.- Detection of ordinal, cardinal and decimal numbers in a stream of French, English, Spanish and Portuguese words and get their decimal digit representations. NOTE: Spanish does not support ordinal numbers yet.- Detection of ordinal, cardinal and decimal numbers in a German text (BETA). NOTE: No support for 'relaxed=False' yet (behaves like 'True' by default).Compatibility-------------Tested on python 3.7. Requires Python &gt;= 3.6.License-------This sofware is distributed under the MIT license of which you should have received a copy (see LICENSE file in this repository).Installation------------``text2num`` does not depend on any other third party package.To install text2num in your (virtual) environment::    pip install text2numThat's all folks!Usage examples--------------Parse and convert~~~~~~~~~~~~~~~~~French examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num('quatre-vingt-quinze', &quot;fr&quot;)    95    &gt;&gt;&gt; text2num('nonante-cinq', &quot;fr&quot;)    95    &gt;&gt;&gt; text2num('mille neuf cent quatre-vingt dix-neuf', &quot;fr&quot;)    1999    &gt;&gt;&gt; text2num('dix-neuf cent quatre-vingt dix-neuf', &quot;fr&quot;)    1999    &gt;&gt;&gt; text2num(&quot;cinquante et un million cinq cent soixante dix-huit mille trois cent deux&quot;, &quot;fr&quot;)    51578302    &gt;&gt;&gt; text2num('mille mille deux cents', &quot;fr&quot;)    ValueError: invalid literal for text2num: 'mille mille deux cent'English examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num(&quot;fifty-one million five hundred seventy-eight thousand three hundred two&quot;, &quot;en&quot;)    51578302    &gt;&gt;&gt; text2num(&quot;eighty-one&quot;, &quot;en&quot;)    81Russian examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num(&quot;пятьдесят один миллион пятьсот семьдесят восемь тысяч триста два&quot;, &quot;ru&quot;)    51578302    &gt;&gt;&gt; text2num(&quot;миллиард миллион тысяча один&quot;, &quot;ru&quot;)    1001001001    &gt;&gt;&gt; text2num(&quot;один миллиард один миллион одна тысяча один&quot;, &quot;ru&quot;)    1001001001    &gt;&gt;&gt; text2num(&quot;восемьдесят один&quot;, &quot;ru&quot;)    81Spanish examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num(&quot;ochenta y uno&quot;, &quot;es&quot;)    81    &gt;&gt;&gt; text2num(&quot;nueve mil novecientos noventa y nueve&quot;, &quot;es&quot;)    9999    &gt;&gt;&gt; text2num(&quot;cincuenta y tres millones doscientos cuarenta y tres mil setecientos veinticuatro&quot;, &quot;es&quot;)    53243724Portuguese examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num(&quot;trinta e dois&quot;, &quot;pt&quot;)    32    &gt;&gt;&gt; text2num(&quot;mil novecentos e seis&quot;, &quot;pt&quot;)    1906    &gt;&gt;&gt; text2num(&quot;vinte e quatro milhões duzentos mil quarenta e sete&quot;, &quot;pt&quot;)    24200047German examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num(&quot;einundfünfzigmillionenfünfhundertachtundsiebzigtausenddreihundertzwei&quot;, &quot;de&quot;)    51578302    &gt;&gt;&gt; text2num(&quot;ein und achtzig&quot;, &quot;de&quot;)    81Catalan examples:.. code-block:: python    &gt;&gt;&gt; from text_to_num import text2num    &gt;&gt;&gt; text2num('noranta-cinc', &quot;ca&quot;)    95    &gt;&gt;&gt; text2num('huitanta-u', &quot;ca&quot;)    81    &gt;&gt;&gt; text2num('mil nou-cents noranta-nou', &quot;ca&quot;)    1999    &gt;&gt;&gt; text2num(&quot;cinquanta-un milions cinc-cents setanta-vuit mil tres-cents dos&quot;, &quot;ca&quot;)    51578302    &gt;&gt;&gt; text2num('mil mil dos-cents', &quot;ca&quot;)    ValueError: invalid literal for text2num: 'mil mil dos-cents'Find and transcribe~~~~~~~~~~~~~~~~~~~Any numbers, even ordinals.French:.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; sentence = (    ...     &quot;Huit cent quarante-deux pommes, vingt-cinq chiens, mille trois chevaux, &quot;    ...     &quot;douze mille six cent quatre-vingt-dix-huit clous.\n&quot;    ...     &quot;Quatre-vingt-quinze vaut nonante-cinq. On tolère l'absence de tirets avant les unités : &quot;    ...     &quot;soixante seize vaut septante six.\n&quot;    ...     &quot;Nombres en série : douze quinze zéro zéro quatre vingt cinquante-deux cent trois cinquante deux &quot;    ...     &quot;trente et un.\n&quot;    ...     &quot;Ordinaux: cinquième troisième vingt et unième centième mille deux cent trentième.\n&quot;    ...     &quot;Décimaux: douze virgule quatre-vingt dix-neuf, cent vingt virgule zéro cinq ; &quot;    ...     &quot;mais soixante zéro deux.&quot;    ... )    &gt;&gt;&gt; print(alpha2digit(sentence, &quot;fr&quot;, ordinal_threshold=0))    842 pommes, 25 chiens, 1003 chevaux, 12698 clous.    95 vaut 95. On tolère l'absence de tirets avant les unités : 76 vaut 76.    Nombres en série : 12 15 004 20 52 103 52 31.    Ordinaux: 5ème 3ème 21ème 100ème 1230ème.    Décimaux: 12,99, 120,05 ; mais 60 02.    &gt;&gt;&gt; sentence = &quot;Cinquième premier second troisième vingt et unième centième mille deux cent trentième.&quot;    &gt;&gt;&gt; print(alpha2digit(sentence, &quot;fr&quot;, ordinal_threshold=3))    5ème premier second troisième 21ème 100ème 1230ème.English:.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; text = &quot;On May twenty-third, I bought twenty-five cows, twelve chickens and one hundred twenty five point forty kg of potatoes.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;en&quot;)    'On May 23rd, I bought 25 cows, 12 chickens and 125.40 kg of potatoes.'Russian:.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; # дробная часть не обрабатывает уточнения вроде &quot;пять десятых&quot;, &quot;двенадцать сотых&quot;, &quot;сколько-то стотысячных&quot; и т.п., поэтому их лучше опускать    &gt;&gt;&gt; text = &quot;Двадцать пять коров, двенадцать сотен цыплят и сто двадцать пять точка сорок кг картофеля.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;ru&quot;)    '25 коров, 1200 цыплят и 125.40 кг картофеля.'    &gt;&gt;&gt; text = &quot;каждый пятый на первый второй расчитайсь!&quot;    &gt;&gt;&gt; alpha2digit(text, 'ru', ordinal_threshold=0)    'каждый 5ый на 1ый 2ой расчитайсь!'Spanish (ordinals not supported yet):.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; text = &quot;Compramos veinticinco vacas, doce gallinas y ciento veinticinco coma cuarenta kg de patatas.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;es&quot;)    'Compramos 25 vacas, 12 gallinas y 125.40 kg de patatas.'    &gt;&gt;&gt; text = &quot;Tenemos mas veinte grados dentro y menos quince fuera.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;es&quot;)    'Tenemos +20 grados dentro y -15 fuera.'Portuguese:.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; text = &quot;Comprámos vinte e cinco vacas, doze galinhas e cento vinte e cinco vírgula quarenta kg de batatas.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;pt&quot;)    'Comprámos 25 vacas, 12 galinhas e 125,40 kg de batatas.'    &gt;&gt;&gt; text = &quot;Temos mais vinte graus dentro e menos quinze fora.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;pt&quot;)    'Temos +20 graus dentro e -15 fora.'    &gt;&gt;&gt; text = &quot;Ordinais: quinto, terceiro, vigésimo, vigésimo primeiro, centésimo quarto&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;pt&quot;)    'Ordinais: 5º, terceiro, 20ª, 21º, 104º'German (BETA, Note: 'relaxed' parameter is not supported yet and 'True' by default):.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; text = &quot;Ich habe fünfundzwanzig Kühe, zwölf Hühner und einhundertfünfundzwanzig kg Kartoffeln gekauft.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;de&quot;)    'Ich habe 25 Kühe, 12 Hühner und 125 kg Kartoffeln gekauft.'    &gt;&gt;&gt; text = &quot;Die Temperatur beträgt minus fünfzehn Grad.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;de&quot;)    'Die Temperatur beträgt -15 Grad.'    &gt;&gt;&gt; text = &quot;Die Telefonnummer lautet plus dreiunddreißig neun sechzig null sechs zwölf einundzwanzig.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;de&quot;)    'Die Telefonnummer lautet +33 9 60 0 6 12 21.'    &gt;&gt;&gt; text = &quot;Der zweiundzwanzigste Januar zweitausendzweiundzwanzig.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;de&quot;)    '22. Januar 2022'    &gt;&gt;&gt; text = &quot;Es ist ein Buch mit dreitausend Seiten aber nicht das erste.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;de&quot;, ordinal_threshold=0)    'Es ist ein Buch mit 3000 Seiten aber nicht das 1..'    &gt;&gt;&gt; text = &quot;Pi ist drei Komma eins vier und so weiter, aber nicht drei Komma vierzehn :-p&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;de&quot;, ordinal_threshold=0)    'Pi ist 3,14 und so weiter, aber nicht 3 Komma 14 :-p'Catalan:.. code-block:: python    &gt;&gt;&gt; from text_to_num import alpha2digit    &gt;&gt;&gt; text = (&quot;Huit-centes quaranta-dos pomes, vint-i-cinc gossos, mil tres cavalls, dotze mil sis-cents noranta-huit claus.\n Vuitanta-u és igual a huitanta-u.\n Nombres en sèrie: dotze quinze zero zero quatre vint cinquanta-dos cent tres cinquanta-dos trenta-u.\n Ordinals: cinquè tercera vint-i-uena centè mil dos-cents trentena.\n Decimals: dotze coma noranta-nou, cent vint coma zero cinc; però seixanta zero dos.&quot;)    &gt;&gt;&gt; print(alpha2digit(text, &quot;ca&quot;, ordinal_threshold=0))    842 pomes, 25 gossos, 1003 cavalls, 12698 claus.    81 és igual a 81.    Nombres en sèrie: 12 15 004 20 52 103 52 31.    Ordinals: 5è 3a 21a 100è 1230a.    Decimals: 12,99, 120,05; però 60 02.    &gt;&gt;&gt; text = &quot;Cinqué primera segona tercer vint-i-ué centena mil dos-cents trenté.&quot;    &gt;&gt;&gt; print(alpha2digit(text, &quot;ca&quot;, ordinal_threshold=3))    5é primera segona tercer 21é 100a 1230é.    &gt;&gt;&gt; text = &quot;Compràrem vint-i-cinc vaques, dotze gallines i cent vint-i-cinc coma quaranta kg de creïlles.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;ca&quot;)    'Compràrem 25 vaques, 12 gallines i 125,40 kg de creïlles.'    &gt;&gt;&gt; text = &quot;Fa més vint graus dins i menys quinze fora.&quot;    &gt;&gt;&gt; alpha2digit(text, &quot;ca&quot;)    'Fa +20 graus dins i -15 fora.'Read the complete documentation on `ReadTheDocs &lt;http://text2num.readthedocs.io/&gt;`_.Contribute----------Join us on https://github.com/allo-media/text2num.. |docs| image:: https://readthedocs.org/projects/text2num/badge/?version=latest    :target: https://text2num.readthedocs.io/en/latest/?badge=latest    :alt: Documentation Status</longdescription>
</pkgmetadata>