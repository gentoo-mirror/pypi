<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Metacells 0.8.0 - Single-cell RNA Sequencing Analysis===========================================================.. image:: https://readthedocs.org/projects/metacells/badge/?version=latest    :target: https://metacells.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusThe metacells package implements the improved metacell algorithm [1]_ for single-cell RNA sequencing (scRNA-seq) dataanalysis within the ``scipy https://www.scipy.org/`` framework. The original metacell algorithm [2]_ was implemented inR. The python package contains various algorithmic improvements and is scalable for larger data sets (millions ofcells).Metacell Analysis-----------------Naively, scRNA_seq data is a set of cell profiles, where for each one, for each gene, we get a count of the mRNAmolecules that existed in the cell for that gene. This serves as an indicator of how &quot;expressed&quot; or &quot;active&quot; the geneis.As in any real world technology, the raw data may suffer from technical artifacts (counting the molecules of two cellsin one profile, counting the molecules from a ruptured cells, counting only the molecules from the cell nucleus, etc.).This requires pruning the raw data to exclude such artifacts.The current technology scRNA-seq data is also very sparse (typically &lt;&lt;10% the RNA molecules are counted). Thisintroduces large sampling variance on top of the original signal, which itself contains significant inherent biologicalnoise.Analyzing scRNA-seq data therefore requires processing the profiles in bulk. Classically, this has been done by directlyclustering the cells using various methods.In contrast, the metacell approach groups together profiles of the &quot;same&quot; biological state into groups of cells of the&quot;same&quot; biological state, with the *minimal* number of profiles needed for computing robust statistics (in particular,mean gene expression). Each such group is a single &quot;metacell&quot;.By summing profiles of cells of the &quot;same&quot; state together, each metacell greatly reduces the sampling variance, andprovides a more robust estimation of the transcription state. Note a metacell is *not* a cell type (multiple metacellsmay belong to the same &quot;type&quot;, or even have the &quot;same&quot; state, if the data sufficiently over-samples this state). Also, ametacell is *not* a parametric model of the cell state. It is merely a more robust description of some cell state.The metacells should therefore be further analyzed as if they were cells, using additional methods to classify celltypes, detect cell trajectories and/or lineage, build parametric models for cell behavior, etc. Using metacells as inputfor such analysis techniques should benefit both from the more robust, less noisy input; and also from the (~100-fold)reduction in the number of cells to analyze when dealing with large data (e.g. analyzing millions of individual cells).Installation------------In short: ``pip install metacells``. Note that ``metacells`` requires many &quot;heavy&quot; dependencies, most notably ``numpy``,``pandas``, ``scipy``, ``scanpy``, which ``pip`` should automatically install for you. If you are running inside a``conda`` environment, you might prefer to use it to first install these dependencies, instead of having ``pip`` installthem from ``PyPI``.Note that ``metacells`` only runs natively on Linux and MacOS. To run it on a Windows computer, you must activate`Windows Subsystem for Linux &lt;https://docs.microsoft.com/en-us/windows/wsl&gt;`_ and install ``metacells`` within it.The metacells package contains extensions written in C++. The ``metacells`` distribution provides pre-compiled Pythonwheels for both Linux and MacOS, so installing it using ``pip`` should not require a C++ compilation step.Note that for X86 CPUs, these pre-compiled wheels were built to use AVX2 (Haswell/Excavator CPUs or newer), and will notwork on older CPUs which are limited to SSE. Also, these wheels will not make use of any newer instructions (such asAVX512), even if available. While these wheels may not the perfect match for the machine you are running on, they areexpected to work well for most machines.To see the native capabilities of your machine, you can ``grep flags /proc/cpuinfo | head -1`` which will give you along list of supported CPU features in an arbitrary order, which may include ``sse``, ``avx2``, ``avx512``, etc. You cantherefore simply ``grep avx2 /proc/cpuinfo | head -1`` to test whether AVX2 is/not supported by your machine.You can avoid installing the pre-compiled wheel by running ``pip install metacells --install-option='--native'``. Thiswill force ``pip`` to compile the C++ extensions locally on your machine, optimizing for its native capabilities,whatever these may be. This will take much longer but may give you faster results (note: the results will **not** beexactly the same as when running the precompiled wheel due to differences in floating-point rounding). Also, thisrequires you to have a C++ compiler which supports C++14 installed (either ``g++`` or ``clang``). Installing a C++compiler depends on your specific system (using ``conda`` may make this less painful).Vignettes---------The `generated documentation &lt;https://metacells.readthedocs.io/en/latest&gt;`_ contains the following vignettes:`Basic Metacells Vignette &lt;https://metacells.readthedocs.io/en/latest/Metacells_Vignette.html&gt;`_,`Manual Analysis Vignette &lt;https://metacells.readthedocs.io/en/latest/Manual_Analysis.html&gt;`_,and `Seurat Analysis Vignette &lt;https://metacells.readthedocs.io/en/latest/Seurat_Analysis.html&gt;`_.You can also access their very latest version in the`Github repository &lt;https://github.com/tanaylab/metacells/tree/master/docs&gt;`_.References----------Please cite the references appropriately in case they are used:.. [1] ORCID ProfileOren Ben-Kiki, Akhiad Bercovitch, Aviezer Lifshitz, Amos Tanay: A divide and   conquer metacell algorithm for scalable scRNA-seq analysis.   `10.1101/2021.08.08.453314 &lt;https://doi.org/10.1101/2021.08.08.453314&gt;`_.. [2] Baran, Y., Bercovich, A., Sebe-Pedros, A. et al. MetaCell: analysis of single-cell RNA-seq   data using K-nn graph partitions. Genome Biol 20, 206 (2019).   `10.1186/s13059-019-1812-2 &lt;https://doi.org/10.1186/s13059-019-1812-2&gt;`_License (MIT)-------------Copyright Â© 2020, 2021 Weizmann Institute of SciencePermission is hereby granted, free of charge, to any person obtaining a copy of this software and associateddocumentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation therights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permitpersons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of theSoftware.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THEWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS ORCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OROTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.History=======0.5---* First published version.0.6---* More robust graph partition.* Allow forcing feature genes.* Rename &quot;project&quot; to &quot;convey&quot; to prepare for addition of atlas projection functionality.0.7.0-----* Switch to new project template.* Fix some edge cases in the pipeline.* Switch to using ``psutil`` for detecting system resources.* Fix binary wheel issues.* Give up on using travis-ci.0.8.0-----* Add inner fold factor computation for metacells quality control.* Add deviant fold factor computation for metacells quality control.* Add projection of query data onto an atlas.* Self-adjusting pile sizes.* Add convenience function for computing data for MCView.* Better control over filtering using absolute fold factors.* Fix edge case in computing noisy lonely genes.* Additional outliers certificates.* Stricter deviants detection policy</longdescription>
</pkgmetadata>