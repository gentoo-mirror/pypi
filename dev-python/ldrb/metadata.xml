<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![CI](https://github.com/finsberg/ldrb/actions/workflows/main.yml/badge.svg)](https://github.com/finsberg/ldrb/actions/workflows/main.yml)[![github pages](https://github.com/finsberg/ldrb/actions/workflows/github-pages.yml/badge.svg)](https://github.com/finsberg/ldrb/actions/workflows/github-pages.yml)# Laplace-Dirichlet Rule-Based (LDRB) algorithm for assigning myocardial fiber orientationsA software for assigning myocardial fiber orientations based on the Laplace Dirichlet Ruled-Based algorithm.&gt; Bayer, J.D., Blake, R.C., Plank, G. and Trayanova, N.A., 2012.&gt; A novel rule-based algorithm for assigning myocardial fiber orientation&gt;to computational heart models. Annals of biomedical engineering, 40(10),pp.2243-2254.(https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3518842/)```python# Generate an example geometry using https://github.com/ComputationalPhysiology/cardiac_geometriesimport cardiac_geometries  # pip install cardiac-geometriesimport ldrbgeo = cardiac_geometries.mesh.create_biv_ellipsoid(char_length=0.2)# Decide on the angles you want to useangles = dict(    alpha_endo_lv=30,  # Fiber angle on the LV endocardium    alpha_epi_lv=-30,  # Fiber angle on the LV epicardium    beta_endo_lv=0,  # Sheet angle on the LV endocardium    beta_epi_lv=0,  # Sheet angle on the LV epicardium    alpha_endo_sept=60,  # Fiber angle on the Septum endocardium    alpha_epi_sept=-60,  # Fiber angle on the Septum epicardium    beta_endo_sept=0,  # Sheet angle on the Septum endocardium    beta_epi_sept=0,  # Sheet angle on the Septum epicardium    alpha_endo_rv=80,  # Fiber angle on the RV endocardium    alpha_epi_rv=-80,  # Fiber angle on the RV epicardium    beta_endo_rv=0,  # Sheet angle on the RV endocardium    beta_epi_rv=0,  # Sheet angle on the RV epicardium)# Convert markers to correct formatmarkers = {    &quot;base&quot;: geo.markers[&quot;BASE&quot;][0],    &quot;lv&quot;: geo.markers[&quot;ENDO_LV&quot;][0],    &quot;rv&quot;: geo.markers[&quot;ENDO_RV&quot;][0],    &quot;epi&quot;: geo.markers[&quot;EPI&quot;][0],}# Choose space for the fiber fields# This is a string on the form {family}_{degree}fiber_space = &quot;P_2&quot;# Compute the microstructurefiber, sheet, sheet_normal = ldrb.dolfin_ldrb(    mesh=geo.mesh, fiber_space=fiber_space, ffun=geo.ffun, markers=markers, **angles)# Store files using a built in xdmf viewer that also works for functions# defined in quadrature spacesldrb.fiber_to_xdmf(fiber, &quot;fiber&quot;)# And visualize it in Paraview```![_](https://github.com/finsberg/ldrb/raw/main/docs/_static/figures/biv_fiber.png)# Installation## pipIn order to install the software you need to haveinstalled [FEniCS](https://fenicsproject.org) (versions older than 2016are not supported)The package can be installed with pip.```python -m pip install ldrb```or if you need the most recent version you can install the source```python -m pip install git+https://github.com/finsberg/ldrb.git```## Conda`ldrb` is also available on `conda````conda install -c conda-forge ldrb```## DockerIf you don't already have FEniCS installed you can use one of the provided [docker images](https://github.com/finsberg/ldrb/pkgs/container/ldrb), e.g```docker pull ghcr.io/finsberg/ldrb:latest```to pull the image and use the following command to start a container and sharing your current directory```docker run --rm -v $PWD:/home/shared -w /home/shared -it ghcr.io/finsberg/ldrb:latest```# DocumentationDocumentation is hosted at http://finsberg.github.io/ldrb# Getting startedCheck out the [demos](http://finsberg.github.io/ldrb/demo_lv.html)# License`ldrb` is licensed under the GNU LGPL, version 3 or (at your option) any later version.`ldrb` is Copyright (2011-2019) by the authors and Simula Research Laboratory.# ContributorsHenrik Finsberg (henriknf@simula.no)</longdescription>
</pkgmetadata>