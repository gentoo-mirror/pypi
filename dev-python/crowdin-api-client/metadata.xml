<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[&lt;p align='center'&gt;&lt;img src='https://support.crowdin.com/assets/logos/crowdin-dark-symbol.png' data-canonical-src='https://support.crowdin.com/assets/logos/crowdin-dark-symbol.png' width='150' height='150' align='center'/&gt;&lt;/p&gt;](https://crowdin.com)# Crowdin Python client [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fcrowdin%2Fcrowdin-api-client-python&amp;text=The%20Crowdin%20Python%20client%20is%20a%20lightweight%20interface%20to%20the%20Crowdin%20API)&amp;nbsp;[![GitHub Repo stars](https://img.shields.io/github/stars/crowdin/crowdin-api-client-python?style=social&amp;cacheSeconds=1800)](https://github.com/crowdin/crowdin-api-client-python/stargazers)The Crowdin Python client is a lightweight interface to the Crowdin API. It provides common services for making API requests.Crowdin API is a full-featured RESTful API that helps you to integrate localization into your development process. The endpoints that we use allow you to easily make calls to retrieve information and to execute actions needed.&lt;div align=&quot;center&quot;&gt;[**`API Client Docs`**](https://crowdin.github.io/crowdin-api-client-python/) &amp;nbsp;|&amp;nbsp;[**`Crowdin API`**](https://developer.crowdin.com/api/v2/) &amp;nbsp;|&amp;nbsp;[**`Crowdin Enterprise API`**](https://developer.crowdin.com/enterprise/api/v2/)[![PyPI](https://img.shields.io/pypi/v/crowdin-api-client?cacheSeconds=3600)](https://pypi.org/project/crowdin-api-client/)[![Downloads](https://pepy.tech/badge/crowdin-api-client)](https://pepy.tech/project/crowdin-api-client)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/crowdin-api-client?cacheSeconds=3600)](https://pypi.org/project/crowdin-api-client/)![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/crowdin/crowdin-api-client-python/python-package.yml?branch=main&amp;logo=github)[![codecov](https://codecov.io/gh/crowdin/crowdin-api-client-python/branch/main/graph/badge.svg?token=sOUWIcNjWO)](https://codecov.io/gh/crowdin/crowdin-api-client-python)[![GitHub issues](https://img.shields.io/github/issues/crowdin/crowdin-api-client-python?cacheSeconds=3600)](https://github.com/crowdin/crowdin-api-client-python/issues)[![License](https://img.shields.io/github/license/crowdin/crowdin-api-client-python?cacheSeconds=3600)](https://github.com/crowdin/crowdin-api-client-python/blob/master/LICENSE)&lt;/div&gt;## Installation```consolepip install crowdin-api-client```## Quick Start### Create and list projects```pythonfrom crowdin_api import CrowdinClientclass FirstCrowdinClient(CrowdinClient):    TOKEN = &quot;__token__&quot;    ORGANIZATION = &quot;organizationName&quot; # Optional, for Crowdin Enterprise only    TIMEOUT = 60  # Optional, sets http request timeout.    RETRY_DELAY = 0.1  # Optional, sets the delay between failed requests     MAX_RETRIES = 5  # Optional, sets the number of retries    HEADERS = {&quot;Some-Header&quot;: &quot;&quot;}  # Optional, sets additional http request headers    PAGE_SIZE = 25  # Optional, sets default page size    EXTENDED_REQUEST_PARAMS = {&quot;some-parameters&quot;: &quot;&quot;}  # Optional, sets additional parameters for requestclient = FirstCrowdinClient()# Create Projectproject_response = client.projects.add_project(name=&quot;New project&quot;, sourceLanguageId=&quot;en&quot;)# Get list of Projectsprojects = client.projects.list_projects()# Get list of Projects with offset and limitprojects = client.projects.list_projects(offset=10, limit=20)# Get list of Projects by pageprojects = client.projects.list_projects(page=2) # offset=25, limit=25```Alternatively, you can create an instance of the CrowdinClient class with params like this:```pythonfrom crowdin_api import CrowdinClient# use the lower-case version of any of the constants above,# at least provide tokenclient = CrowdinClient(token='__token__')# ... continue as above```### Add a file```pythonfrom crowdin_api import CrowdinClientclient = CrowdinClient(token='__token__')file_name = '__path_to_the_file__'storage = client.storages.add_storage(open(file_name, 'rb'))my_file = client.source_files.add_file(__project_id__, storage['data']['id'], file_name)print(my_file)```### Fetch all recordsIt is possible to fetch all records from paginatable methods (where we have limit and offset in arguments).```pythonfrom crowdin_api import CrowdinClientclient = CrowdinClient(token='__token__')# get all projectsprint(client.projects.with_fetch_all().list_projects())# get projects but not more than 1000print(client.projects.with_fetch_all(1000).list_projects())```## Seeking AssistanceIf you find any problems or would like to suggest a feature, please read the [How can I contribute](https://github.com/crowdin/crowdin-api-client-python/blob/main/CONTRIBUTING.md#how-can-i-contribute) section in our contributing guidelines.## ContributingIf you would like to contribute please read the [Contributing](https://github.com/crowdin/crowdin-api-client-python/blob/main/CONTRIBUTING.md) guidelines.## License&lt;pre&gt;The Crowdin Python client is licensed under the MIT License.See the LICENSE file distributed with this work for additionalinformation regarding copyright ownership.Except as contained in the LICENSE file, the name(s) of the above copyrightholders shall not be used in advertising or otherwise to promote the sale,use or other dealings in this Software without prior written authorization.&lt;/pre&gt;</longdescription>
</pkgmetadata>