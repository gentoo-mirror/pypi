<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `Iuliia`&gt; Transliterate Cyrillic → Latin in every possible way[![PyPI Version][pypi-image]][pypi-url][![Build Status][build-image]][build-url][![Code Coverage][coverage-image]][coverage-url][![Code Quality][quality-image]][quality-url]Transliteration means representing Cyrillic data (mainly names and geographic locations) with Latin letters. It is used for international passports, visas, green cards, driving licenses, mail and goods delivery etc.`Iuliia` makes transliteration as easy as:```python&gt;&gt;&gt; import iuliia&gt;&gt;&gt; iuliia.translate(&quot;Юлия Щеглова&quot;, schema=iuliia.WIKIPEDIA)'Yuliya Shcheglova'```## Why use `Iuliia`-   [20 transliteration schemas](https://github.com/nalgeon/iuliia/blob/master/README.md#supported-schemas) (rule sets), including all main international and Russian standards.-   Correctly implements not only the base mapping, but all the special rules for letter combinations and word endings (AFAIK, Iuliia is the only library which does so).-   Simple API and zero third-party dependencies.For schema details and other information, see [iuliia.ru](https://iuliia.ru/) (in Russian).[Issues and limitations](https://github.com/nalgeon/iuliia/blob/master/README.md#issues-and-limitations)## Installation```shpip install iuliia```## UsageList all supported schemas:```python&gt;&gt;&gt; import iuliia&gt;&gt;&gt; import iuliia&gt;&gt;&gt; for name, schema in iuliia.Schemas.items():...     print(&quot;{0:&lt;20}{1}&quot;.format(name, schema.description))...ala_lc              ALA-LC transliteration schema.ala_lc_alt          ALA-LC transliteration schema.bgn_pcgn            BGN/PCGN transliteration schemabgn_pcgn_alt        BGN/PCGN transliteration schemabs_2979             British Standard 2979:1958 transliteration schemabs_2979_alt         British Standard 2979:1958 transliteration schemagost_16876          GOST 16876-71 (aka GOST 1983) transliteration schemagost_16876_alt      GOST 16876-71 (aka GOST 1983) transliteration schemagost_52290          GOST R 52290-2004 transliteration schemagost_52535          GOST R 52535.1-2006 transliteration schemagost_7034           GOST R 7.0.34-2014 transliteration schemagost_779            GOST 7.79-2000 (aka ISO 9:1995) transliteration schemagost_779_alt        GOST 7.79-2000 (aka ISO 9:1995) transliteration schemaicao_doc_9303       ICAO DOC 9303 transliteration schemaiso_9_1954          ISO/R 9:1954 transliteration schemaiso_9_1968          ISO/R 9:1968 transliteration schemaiso_9_1968_alt      ISO/R 9:1968 transliteration schemamosmetro            Moscow Metro map transliteration schemamvd_310             MVD 310-1997 transliteration schemamvd_310_fr          MVD 310-1997 transliteration schemamvd_782             MVD 782-2000 transliteration schemascientific          Scientific transliteration schematelegram            Telegram transliteration schemaungegn_1987         UNGEGN 1987 V/18 transliteration schemawikipedia           Wikipedia transliteration schemayandex_maps         Yandex.Maps transliteration schemayandex_money        Yandex.Money transliteration schema```Transliterate using specified schema:```python&gt;&gt;&gt; source = &quot;Юлия Щеглова&quot;&gt;&gt;&gt; iuliia.translate(source, schema=iuliia.ICAO_DOC_9303)'Iuliia Shcheglova'```Or pick schema by name```python&gt;&gt;&gt; schema = iuliia.Schemas.get(&quot;wikipedia&quot;)&gt;&gt;&gt; iuliia.translate(source, schema)'Yuliya Shcheglova'```Command line:```sh$ iuliia icao_doc_9303 &quot;Юлия Щеглова&quot;Iuliia Shcheglova```## Development setup```sh$ python3 -m venv env$ . env/bin/activate$ make deps schemas$ tox```Development tasks:```$ make helpUsage: make [task]task                 help------               ----changelog            Generate changelogcoverage             Run tests with coveragedeps                 Install dependencieslint                 Lint and static-check codepull                 Pull code and schemaspush                 Push commits and tagsschemas              Update schemastest                 Run testshelp                 Show help message```## ContributingPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.Make sure to add or update tests as appropriate.Use [Black](https://black.readthedocs.io/en/stable/) for code formatting and [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0-beta.4/) for commit messages.## [Changelog](CHANGELOG.md)## License[MIT](https://choosealicense.com/licenses/mit/)&lt;!-- Markdown link &amp; img dfn's --&gt;[pypi-image]: https://img.shields.io/pypi/v/iuliia?style=flat-square[pypi-url]: https://pypi.org/project/iuliia/[build-image]: https://img.shields.io/travis/nalgeon/iuliia-py?style=flat-square[build-url]: https://travis-ci.org/nalgeon/iuliia-py[coverage-image]: https://img.shields.io/coveralls/github/nalgeon/iuliia-py?style=flat-square[coverage-url]: https://coveralls.io/github/nalgeon/iuliia-py[quality-image]: https://img.shields.io/codeclimate/maintainability/nalgeon/iuliia-py?style=flat-square[quality-url]: https://codeclimate.com/github/nalgeon/iuliia-py</longdescription>
</pkgmetadata>