<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======djoser======.. image:: https://img.shields.io/pypi/v/djoser.svg   :target: https://pypi.org/project/djoser.. image:: https://img.shields.io/travis/sunscrapers/djoser/master.svg   :target: https://travis-ci.org/sunscrapers/djoser.. image:: https://img.shields.io/codecov/c/github/sunscrapers/djoser.svg   :target: https://codecov.io/gh/sunscrapers/djoser.. image:: https://api.codacy.com/project/badge/Grade/c9bf80318d2741e5bb63912a5e0b32dc   :alt: Codacy Badge   :target: https://app.codacy.com/app/dekoza/djoser?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=sunscrapers/djoser&amp;utm_campaign=Badge_Grade_Dashboard.. image:: https://img.shields.io/pypi/dm/djoser   :target: https://img.shields.io/pypi/dm/djoserREST implementation of `Django &lt;https://www.djangoproject.com/&gt;`_ authenticationsystem. **djoser** library provides a set of `Django Rest Framework &lt;https://www.django-rest-framework.org/&gt;`_views to handle basic actions such as registration, login, logout, passwordreset and account activation. It works with`custom user model &lt;https://docs.djangoproject.com/en/dev/topics/auth/customizing/&gt;`_.Instead of reusing Django code (e.g. ``PasswordResetForm``), we reimplementedfew things to fit better into `Single Page App &lt;https://en.wikipedia.org/wiki/Single-page_application&gt;`_architecture.Developed by `SUNSCRAPERS &lt;http://sunscrapers.com/&gt;`_ with passion &amp; patience... image:: https://asciinema.org/a/94J4eG2tSBD2iEfF30a6vGtXw.png  :target: https://asciinema.org/a/94J4eG2tSBD2iEfF30a6vGtXwRequirements============To be able to run **djoser** you have to meet following requirements:- Python (3.6, 3.7, 3.8, 3.9)- Django (2.2, 3.1)- Django REST Framework 3.11.1If you need to support other versions, please use djoser&lt;2.Installation============Simply install using ``pip``:.. code-block:: bash    $ pip install djoserAnd continue with the steps described at`configuration &lt;https://djoser.readthedocs.io/en/latest/getting_started.html#configuration&gt;`_guide.Documentation=============Documentation is available to study at`https://djoser.readthedocs.io &lt;https://djoser.readthedocs.io&gt;`_and in ``docs`` directory.Contributing and development============================To start developing on **djoser**, clone the repository:.. code-block:: bash    $ git clone git@github.com:sunscrapers/djoser.gitWe use `poetry &lt;https://python-poetry.org/&gt;`_ as dependency management and packaging tool... code-block:: bash    $ cd djoser    $ poetry install -E testThis will create a virtualenv with all development dependencies.To run the test just type:.. code-block:: bash    $ poetry run py.test testprojectWe also preapred a convenient ``Makefile`` to automate commands above:.. code-block:: bash    $ make init    $ make testTo activate the virtual environment run.. code-block:: bash    $ poetry shellWithout poetry--------------New versions of ``pip`` can use ``pyproject.toml`` to build the package and install its dependencies... code-block:: bash    $ pip install .[test].. code-block:: bash    $ cd testproject    $ ./manage.py testTox---If you need to run tests against all supported Python and Django versions then invoke:.. code-block:: bash    $ poetry run tox -p allExample project---------------You can also play with test project by running following commands:.. code-block:: bash    $ make migrate    $ make runserverCommiting your code-------------------Before sending patches please make sure you have `pre-commit &lt;https://pre-commit.com/&gt;`_ activated in your local git repository:.. code-block:: bash    $ pre-commit installThis will ensure that your code is cleaned before you commit it.Some steps (like black) automatically fix issues but the show their status as FAILED.Just inspect if eveything is OK, git-add the files and retry the commit.Other tools (like flake8) require you to manually fix the issues.Similar projects================List of projects related to Django, REST and authentication:- `django-rest-framework-simplejwt &lt;https://github.com/davesque/django-rest-framework-simplejwt&gt;`_- `django-oauth-toolkit &lt;https://github.com/evonove/django-oauth-toolkit&gt;`_- `django-rest-auth &lt;https://github.com/Tivix/django-rest-auth&gt;`_ (not maintained)- `django-rest-framework-digestauth &lt;https://github.com/juanriaza/django-rest-framework-digestauth&gt;`_ (not maintained)Please, keep in mind that while using custom authentication and TokenCreateSerializervalidation, there is a path that **ignores intentional return of None** from authenticate()and try to find User using parameters. Probably, that will be changed in the future.</longdescription>
</pkgmetadata>