<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/citrusvanilla/tinyflux/blob/master/artwork/tinyfluxdb-light.png?raw=true#gh-dark-mode-only    :width: 500px   .. image:: https://github.com/citrusvanilla/tinyflux/blob/master/artwork/tinyfluxdb-dark.png?raw=true#gh-light-mode-only    :width: 500pxTinyFlux is the tiny time series database optimized for your happiness :)TinyFlux is a time series version of `TinyDB &lt;https://tinydb.readthedocs.io/en/latest/index.html&gt;`__ that is also written in Python and has no external dependencies.  It's a great companion for small analytics workflows and apps, as well as at-home IOT data stores.  TinyFlux has 100% coverage, tens of thousands of downloads, and no open issues.|Build Status| |Coverage| |Version| |Downloads|Quick Links***********- `Example Code Snippets`_- `Full Example Notebooks and Scripts &lt;https://github.com/citrusvanilla/tinyflux/tree/master/examples&gt;`__- `Documentation &lt;http://tinyflux.readthedocs.org/&gt;`__- `Changelog &lt;https://tinyflux.readthedocs.io/en/latest/changelog.html&gt;`__- `Contributing`_Installation************TinyFlux is hosted at `PyPI &lt;https://pypi.org/project/tinyflux/&gt;`__ and is easily downloadable with ``pip``. TinyFlux has been tested with Python 3.7 - 3.12 and PyPy-3.9 on Linux and Windows platforms... code-block:: bash    $ pip install tinyfluxIntroduction************TinyFlux is:- **time-centric:** Python datetime objects are first-class citizens and queries are optimized for time, above all else.- **optimized for your happiness:** TinyFlux is designed to be simple and  fun to use by providing a simple and clean API that can be learned in 5 minutes.- **tiny:** The current source code has 4,000 lines of code (with about 50%  documentation) and 4,000 lines of tests.  TinyFlux is about 150kb, unzipped.- **written in pure Python:** TinyFlux needs neither an external server nor any dependencies.- **works on Python 3.7+ and PyPy-3.9:** TinyFlux works on all modern versions of Python and PyPy.- **100% test coverage:** No explanation needed.To get started, head over to the `TinyFlux docs &lt;https://tinyflux.readthedocs.io/&gt;`__.  Examples can be found in the `examples directory &lt;https://github.com/citrusvanilla/tinyflux/tree/master/examples&gt;`__.  You can also discuss topics related to TinyFlux including general development, extensions, or showcase your TinyFlux-based projects on the `GitHub discussion forum &lt;https://github.com/citrusvanilla/tinyflux/discussions&gt;`__.Example Code Snippets*********************Writing to TinyFlux===================.. code-block:: python    &gt;&gt;&gt; from datetime import datetime, timezone    &gt;&gt;&gt; from tinyflux import TinyFlux, Point    &gt;&gt;&gt; db = TinyFlux('/path/to/db.csv')    &gt;&gt;&gt; p = Point(    ...     time=datetime(2022, 5, 1, 16, 0, tzinfo=timezone.utc),    ...     tags={&quot;room&quot;: &quot;bedroom&quot;},    ...     fields={&quot;temp&quot;: 72.0}    ... )    &gt;&gt;&gt; db.insert(p, compact_key_prefixes=True)Querying TinyFlux=================.. code-block:: python    &gt;&gt;&gt; from tinyflux import FieldQuery, TagQuery, TimeQuery    &gt;&gt;&gt; # Search for a tag value.    &gt;&gt;&gt; Tag = TagQuery()    &gt;&gt;&gt; db.search(Tag.room == 'bedroom')    [Point(time=2022-05-01T16:00:00+00:00, measurement=_default, tags=room:bedroom, fields=temp:72.0)]    &gt;&gt;&gt; # Search for a field value.    &gt;&gt;&gt; Field = FieldQuery()    &gt;&gt;&gt; db.select(&quot;tag.room&quot;, Field.temp &gt; 60.0)    [&quot;bedroom&quot;]    &gt;&gt;&gt; # Search for a time value.    &gt;&gt;&gt; Time = TimeQuery()    &gt;&gt;&gt; time_start = Time &gt;= datetime(2019, 1, 1, tzinfo=timezone.utc)    &gt;&gt;&gt; time_end = Time &lt; datetime(2023, 1, 1, tzinfo=timezone.utc)    &gt;&gt;&gt; db.count(time_start &amp; time_end)    1Full Example Notebooks and Workflows************************************The `examples &lt;https://github.com/citrusvanilla/tinyflux/tree/master/examples&gt;`__ directory of this repository contains three common uses cases for TinyFlux and the associated boilerplate to get you started:1. `Loading a TinyFlux DB from a CSV &lt;https://github.com/citrusvanilla/tinyflux/blob/master/examples/1_initializing_and_loading_new_db.ipynb&gt;`__2. `Local Analytics Workflow with a TinyFlux Database &lt;https://github.com/citrusvanilla/tinyflux/blob/master/examples/2_analytics_workflow.ipynb&gt;`__3. `TinyFlux as a MQTT Datastore for IoT Devices &lt;https://github.com/citrusvanilla/tinyflux/blob/master/examples/3_iot_datastore_with_mqtt.py&gt;`__4. `TinyFlux at the Edge (with Backup Strategy) &lt;https://github.com/citrusvanilla/tinyflux/blob/master/examples/4_backing_up_tinyflux_at_the_edge.py&gt;`__Tips****Checkout some tips for working with TinyFlux `here &lt;https://tinyflux.readthedocs.io/en/latest/tips.html&gt;`__.TinyFlux Across the Internet****************************Articles, tutorials, and other instances of TinyFlux:- `&quot;Introducing TinyFlux: The Tiny Time Series Database for Python-based IoT &amp; Analytics Applications&quot; &lt;https://citrusvanilla.medium.com/introducing-tinyflux-the-tiny-time-series-database-for-python-based-iot-analytics-applications-c3ef3c3bedf&gt;`__: A Medium.com article announcing the release of TinyFlux- `&quot;Storing Time Series Data in Python Using TinyFluxDB&quot; &lt;http://www.steves-internet-guide.com/storing-time-series-data-python-using-tinyflux-db/&gt;`__: A tutorial from `Steve's Internet Guide &lt;http://www.steves-internet-guide.com/&gt;`__, a portal for learning MQTT and IoT development for PythonContributing************New ideas, new developer tools, improvements, and bugfixes are always welcome.  Follow these guidelines before getting started:1. Make sure to read `Getting Started &lt;https://tinyflux.readthedocs.io/en/latest/getting-started.html&gt;`__ and the `Contributing Tooling and Conventions &lt;https://tinyflux.readthedocs.io/en/latest/contributing-tooling.html&gt;`__ section of the documentation.2. Check GitHub for `existing open issues &lt;https://github.com/citrusvanilla/tinyflux/issues&gt;`__, `open a new issue &lt;https://github.com/citrusvanilla/tinyflux/issues/new&gt;`__ or `start a new discussion &lt;https://github.com/citrusvanilla/tinyflux/discussions/new&gt;`__.3. To get started on a pull request, fork the repository on GitHub, create a new branch, and make updates.4. Write unit tests, ensure the code is 100% covered, update documentation where necessary, and format and style the code correctly.5. Send a pull request... |Build Status| image:: https://github.com/citrusvanilla/tinyflux/actions/workflows/build.yml/badge.svg   :target: https://github.com/citrusvanilla/tinyflux/actions.. |Coverage| image:: https://codecov.io/gh/citrusvanilla/tinyflux/branch/master/graph/badge.svg?token=IEGQ4E57VA   :target: https://app.codecov.io/gh/citrusvanilla/tinyflux.. |Version| image:: http://img.shields.io/pypi/v/tinyflux.svg   :target: https://pypi.python.org/pypi/tinyflux/.. |Downloads| image:: https://img.shields.io/pypi/dm/tinyflux.svg   :target: https://pypi.python.org/pypi/tinyflux/</longdescription>
</pkgmetadata>