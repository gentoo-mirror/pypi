<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PTYng -- Pseudo-terminal utilities==================================Fork of ``pty`` aiming for enhancement of the full ``stdlib`` Python API.    As encountered in practice, ``pty.spawn`` requires ``KeyboardInterrupt``    or else to break hanging from ``select.select`` as in ``pty._copy`` then    raise ``OSError`` to ``pty.spawn`` and to return from the function.    Thus, ``ptyng`` introduced ``_is_zombie`` to check if the spawned child    process is already dead (or, a 'zombie'), through which ``pty.spawn``    will automatically return from function call as normal/trivial scenerios    expected.Download--------Standalone releases are available on PyPI:http://pypi.python.org/pypi/ptyng/Development-----------The main development takes place in the Python standard library: seethe `Python developer's guide &lt;http://docs.python.org/devguide/&gt;`_.In particular, new features should be submitted to the`Python bug tracker &lt;http://bugs.python.org/&gt;`_.Documentation-------------Refer to the`standard pty &lt;http://docs.python.org/dev/library/pty.html&gt;`_documentation.    ``ptyng.spawn`` now supports ``timeout`` argument. If the timeout    expires, the spawned child process will be killed and waited for.    Another ``env`` argument can be used to set the runtime environment    variables for the spawned child process, default is ``os.environ``.</longdescription>
</pkgmetadata>