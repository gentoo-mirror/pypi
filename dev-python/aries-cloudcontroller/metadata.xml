<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;br /&gt;  &lt;img    alt=&quot;Hyperledger Aries logo&quot;    src=&quot;https://raw.githubusercontent.com/didx-xyz/aries-cloudcontroller-python/main/assets/aries-logo.png&quot;    height=&quot;250px&quot;  /&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Aries Cloud Controller Python&lt;/b&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img    alt=&quot;Pipeline Status&quot;    src=&quot;https://github.com/didx-xyz/aries-cloudcontroller-python/actions/workflows/python-publish.yml/badge.svg?branch=main&quot;  /&gt;        &lt;a href=&quot;https://pypi.org/project/aries-cloudcontroller/&quot;&gt;        &lt;img alt=&quot;aries-cloudcontroller version&quot; src=&quot;https://badge.fury.io/py/aries-cloudcontroller.svg&quot;/&gt;      &lt;/a&gt;  &lt;a    href=&quot;https://raw.githubusercontent.com/didx-xyz/aries-cloudcontroller-python/main/LICENSE&quot;    &gt;&lt;img      alt=&quot;License&quot;      src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot;  /&gt;&lt;/a&gt;  &lt;a href=&quot;https://www.python.org/&quot;    &gt;&lt;img      alt=&quot;Python&quot;      src=&quot;https://img.shields.io/badge/%3C%2F%3E-Python-%230074c1.svg&quot;  /&gt;&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#usage&quot;&gt;Usage&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#available-apis&quot;&gt;Available APIs&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#contributing&quot;&gt;Contributing&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt; &lt;/p&gt;Aries Cloud Controller Python is a client library written in Python for interacting with an [Aries Cloud Agent Python](https://github.com/hyperledger/aries-cloudagent-python) instance. It is generated based on the OpenAPI definition provided by ACA-Py, giving a fully-typed rich API for interacting the cloud agent.Each Cloud Controller version maps to a specific ACA-Py version, which is outlined in the table below. Although not strictly adhered to in the past, a new ACA-Py version will result in a new Minor version bump for the Cloud Controller, as there are often times breaking changes.| Aries Cloud Controller Version | Aries Cloud Agent Python Version || ------------------------------ | -------------------------------- || 0.5.1-0.5.2                    | 0.7.3                            || 0.6.0-0.6.3                    | 0.7.4                            || 0.7.0                          | 0.7.5                            |## FeaturesAries Cloud Controller Python is a fully featured client for interacting with ACA-Py.- Fully Typed wrapper around Aries Cloud Agent Python- Supports latest ACA-Py version (0.7.5)- Client is auto generated based on OpenAPI definitions, allowing us to keep up to date with new releases.- Supports multi-tenant APIs and authentication- Async API## UsageAries Cloud Controller Python is published to PyPi and can be installed using pip:```shpip install aries-cloudcontroller```### Creating a client```pythonfrom aries_cloudcontroller import AcaPyClientclient = AcaPyClient(    base_url=&quot;http://localhost:8000&quot;,    api_key=&quot;myApiKey&quot;)```**Admin insecure mode**If you are running ACA-Py with the admin insecure flag and don't have the API key, you must set the `admin_insecure` property:```pythonclient = AcaPyClient(    base_url=&quot;http://localhost:8000&quot;,    # Explicitly mark that no api key is used    admin_insecure=True)```**Multitenancy**To provision the agent in the context of specific tenant of the agent, the `tenant_jwt` property must be set:```pythonclient = AcaPyClient(    base_url=&quot;http://localhost:8000&quot;,    tenant_jwt=&quot;eyXXX&quot;)```### Interacting with the clientOnce you have the client set up, you're ready to interact with it. Because the API is fully typed, the best way to know what is available is by looking at the ACA-Py swagger UI, and the available properties on the client.For example to create and receive an invitation the following methods can be called:```pythoninvitation = await client.connection.create_invitation(    body=CreateInvitationRequest(my_label=&quot;Cloud Controller&quot;))connection = await client.connection.receive_invitation(body=result.invitation)```## Available APIsCurrently the following top-level APIs are available in the client. Each api maps to the topics as used by the ACA-Py swagger UI.- `action_menu`- `basicmessage`- `connection`- `credential_definition`- `credentials`- `default`- `did_exchange`- `discover_features`- `discover_features_v2_0`- `endorse_transaction`- `introduction`- `issue_credential_v1_0`- `issue_credential_v2_0`- `jsonld`- `ledger`- `mediation`- `multitenancy`- `out_of_band`- `present_proof_v1_0`- `present_proof_v2_0`- `resolver`- `revocation`- `schema`- `server`- `trustping`- `wallet`## ContributingIf you would like to contribute to the framework, please read [CONTRIBUTING](/CONTRIBUTING.md) guidelines. These documents will provide more information to get you started!## LicenseAries Cloud Controller Python is licensed under the [Apache License Version 2.0 (Apache-2.0)](/LICENSE).</longdescription>
</pkgmetadata>