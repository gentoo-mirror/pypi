<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- buttons --&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://www.python.org/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/python-v3-brightgreen.svg&quot;            alt=&quot;python&quot;&gt;&lt;/a&gt; &amp;nbsp;    &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/license-MIT-brightgreen.svg&quot;            alt=&quot;MIT license&quot;&gt;&lt;/a&gt; &amp;nbsp;    &lt;a href=&quot;https://github.com/rafa-rod/pyettj/actions/workflows/pipeline.yml&quot;&gt;        &lt;img src=&quot;https://github.com/rafa-rod/pyettj/actions/workflows/pipeline.yml/badge.svg&quot;            alt=&quot;CI/CD&quot;&gt;&lt;/a&gt; &amp;nbsp;    &lt;a href=&quot;https://codecov.io/gh/rafa-rod/pyettj&quot;&gt;        &lt;img src=&quot;https://codecov.io/gh/rafa-rod/pyettj/branch/main/graph/badge.svg?token=TRU9VIoqZB&quot;/&gt;    &lt;/a&gt;    &lt;a href=&quot;https://badge.fury.io/py/pyettj&quot;&gt;        &lt;img src=&quot;https://badge.fury.io/py/pyettj.svg&quot; alt=&quot;PyPI version&quot; height=&quot;18&quot;&gt;    &lt;/a&gt;    &lt;/p&gt;&lt;!-- content --&gt;**pyettj** é uma biblioteca Python para capturar dados públicos das curvas de juros, curva a termo ou estrutura a termo da taxa de juros (ETTJ) da B3 (Brasil, Bolsa e Balcão).## InstalaçãoBasta acionar o comando abaixo:```shpip install pyettj```## Exemplo de UsoPara caputar todos os dados disponíveis, basta informar a data:```pythonimport pyettj.ettj as ettjdata = '18/05/2021'ettj_dataframe = ettj.get_ettj(data)```Caso deseje apenas uma curva específica, basta informá-la:```pythonimport pyettj.ettj as ettjdata = '18/05/2021'ettj_dataframe = ettj.get_ettj(data, curva=&quot;PRE&quot;)```Se for necessário usar proxy, passe a informação à função:Caso deseje apenas uma curva específica, basta informá-la:```pythonimport pyettj.ettj as ettjimport getpassUSER = getpass.getuser() #usar getpassPWD = getpass.getpass(&quot;Senha de rede: &quot;)PROXY = &quot;servidor&quot;PORTA = 4300proxies = {&quot;http&quot;:f'http://{USER}:{PWD}@{PROXY}:{PORTA}',           &quot;https&quot;:f'https://{USER}:{PWD}@{PROXY}{PORTA}'}ettj_dataframe = ettj.get_ettj(data, curva=&quot;PRE&quot;, proxies=proxies)```E para plotar o gráfico da curva, invoque a função de plotagem da biblioteca:```pythoncurva = &quot;DI x pré 252&quot;ettj.plot_ettj(ettj_dataframe, curva, data)```&lt;center&gt;&lt;img src=&quot;https://github.com/rafa-rod/pyettj/blob/main/media/pre.png&quot; style=&quot;width:60%;&quot;/&gt;&lt;/center&gt;Para coletar várias datas, chame a função `listar_dias_uteis` informando as datas iniciais e finais. Assim, ela retornará somente os dias úteis neste intervalo.```pythonimport pandas as pdde = '13/05/2021'ate ='18/05/2021'datas = ettj.listar_dias_uteis(de, ate)todas_datas = pd.DataFrame()for dat in datas:    dados=ettj.get_ettj(dat)    todas_datas=pd.concat([dados, todas_datas])```A variável `todas_datas` possuirá todas as curvas em cada data do intervalo. Para identificar as datas, basta o comando:```pythontodas_datas.Data.unique().tolist()```Você pode obter dados os dados da ANBIMA - Estrutura a Termo das Taxas de Juros Estimada disponível em: https://www.anbima.com.br/informacoes/est-termo/CZ.asp```pythonimport pyettj.modelo_ettj as modelo_ettjparametros_curva, ettj, taxa, erros = modelo_ettj.get_ettj_anbima(&quot;15/09/2022&quot;)```A partir dos parâmetros estimados pela ANBIMA, você pode obter usar a equação de Svensson:```pythoncurva = parametros_curva.loc[&quot;PREFIXADOS&quot;, :].str.replace(&quot;,&quot;,&quot;.&quot;).astype(float)beta1, beta2, beta3, beta4 = curva[:4]lambda1, lambda2 = curva[4:]t = 21/252 #em anostaxa = modelo_ettj.svensson(beta1, beta2, beta3, beta4, lambda1, lambda2, t)print(taxa)```Para coletar as taxas em diversas maturidades:```pythonmaturidades = [1,21,42,63,126,252,504,1008,1260,1890,2520]taxas = []for x in maturidades:    taxa = modelo_ettj.svensson(beta1, beta2, beta3, beta4, lambda1, lambda2, x/252)    taxas.append(taxa)pd.DataFrame(np.array([taxas]), columns=[x/252 for x in maturidades]).T.multiply(100).plot()```Caso você não possua os parâmetros da curva Svensson, pode-se estimá-los conforme script a seguir:```pythondata = '20/03/2023'ettj_dataframe = ettj.get_ettj(data, curva=&quot;PRE&quot;)t = ettj_dataframe[ettj_dataframe.columns[0]].divide(252).valuesy = ettj_dataframe[ettj_dataframe.columns[1]].divide(100).valuesbeta1, beta2, beta3, beta4, lambda1, lambda2 = modelo_ettj.calibrar_curva_svensson(t, y)maturidades = [1,21,42,63,126,252,504,1008,1260,1890,2520]taxas = []for x in maturidades:    taxa = modelo_ettj.svensson(beta1, beta2, beta3, beta4, lambda1, lambda2, x/252)    taxas.append(taxa)ettj_pre = pd.DataFrame(np.array([taxas]), columns=[x/252 for x in maturidades]).T.multiply(100)plt.figure(figsize=(10,5))plt.plot(ettj_pre)plt.title(&quot;ETTJ PREFIXADA&quot;)plt.show()```&lt;center&gt;&lt;img src=&quot;https://github.com/rafa-rod/pyettj/blob/main/media/pre_estimada.png&quot; style=&quot;width:60%;&quot;/&gt;&lt;/center&gt;</longdescription>
</pkgmetadata>