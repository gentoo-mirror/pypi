<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![icon](./resources/icon.png)[![PyPI version](https://badge.fury.io/py/agraffe.svg)](https://badge.fury.io/py/agraffe)![Test](https://github.com/odd12258053/agraffe/workflows/Test/badge.svg)Agraffe, build API with ASGI in Serverless services (e.g AWS lambda, Google Cloud Functions and Azure Functions).## Support Services- [x] Google Cloud Functions  - Python 3.7, 3.8, 3.9, 3.10, 3.11(preview)- [x] AWS lambda (with API Gateway HTTP API or REST API, or with Function URL)  - Python 3.7, 3.8, 3.9- [x] Azure Functions  - Python 3.7, 3.8, 3.9, 3.10(preview)## RequirementsPython 3.7+## Installation```sh$ pip install agraffe```## ExampleCreate it- Create a file `main.py` with:```pythonimport contextlibfrom agraffe import Agraffefrom fastapi import FastAPI, Request@contextlib.asynccontextmanagerasync def lifespan(app):    yield {'message': 'hello'}app = FastAPI(lifespan=lifespan)@app.get(&quot;/&quot;)def read_root():    return {&quot;Hello&quot;: &quot;World&quot;}@app.get(&quot;/items/{item_id}&quot;)def read_item(item_id: int, q: str | None = None):    return {&quot;item_id&quot;: item_id, &quot;q&quot;: q}@app.get(&quot;/lifespan&quot;)def lifespan_(request: Request):    return {&quot;count&quot;: request.state.message}entry_point = Agraffe.entry_point(app)``````python# or, for on GCPfrom agraffe.services.google_cloud_functions import HttpCycledef entry_point(request):    return Agraffe(app, HttpCycle)(request=request)```Deploy it- Deploy the api with:```sh$ gcloud functions deploy {FUNCTION NAME} --entry-point entry_point --runtime python310 --trigger-http --allow-unauthenticated```See `/example` for other services.## LicenseThis project is licensed under the terms of the MIT license.</longdescription>
</pkgmetadata>