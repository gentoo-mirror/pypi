<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Helper for MaxiAll the Functions I could need multiple times## Instructions1. Install:```pip install helper-for-maxi```2. Import package:```pythonfrom helper import *ORimport helperhelper.*# You can replace * with what you need!``` ## Currently Implemented Classes / FunctionsappendClipboard()```pythonimport helperhelper.appendClipboard(text: str)ORfrom helper import appendClipboardappendClipboard(text: str)# copies text## Copies / Appends the given text to the windows clipboard using the utf-8 encoding## Parameters# ----------# text: str#     The text that is copied / appended to the clipboard```betterColorInput()```pythonimport helperhelper.betterColorInput(text: str, beforeColor: Optional[Terminal.color.foreground] = Terminal.color.RESET, delay: float = .01)ORfrom helper import betterColorInputbetterColorInput(text: str, beforeColor: Optional[Terminal.color.foreground] = Terminal.color.RESET, delay: float = .01)# Gets an input# # Prints the given text letter by letter using the specified delay and gets an input() in cyan after# # Parameters# ----------# text: Optional[str]#     The text that is printed letter by letter#     DEFAULT: None# # beforeColor: Optional[Terminal.color.foreground]#     The color to change back to after getting the input#     DEFAULT: None# # delay: Optional[float]#     Changes the time between each printed letter#     DEFAULT: .01```betterInput()```pythonimport helperhelper.betterInput(text: str = &quot;&quot;, delay: float = .01)ORfrom helper import betterInputbetterInput(text: str = &quot;&quot;, delay: float = .01)# Gets an input# # Prints the given text letter by letter using the specified delay and gets an input() after# # Parameters# ----------# text: Optional[str]#     The text that is printed letter by letter#     DEFAULT: &quot;&quot;# # delay: Optional[float]#     Changes the time between each printed letter#     DEFAULT: .01```betterPrint()```pythonimport helperhelper.betterPrint(text: str, delay: float = .01)ORfrom helper import betterPrintbetterPrint(text: str, delay: float = .01)# Prints text# # Prints the given text letter by letter to the command line using the specified delay# # Parameters# ----------# text: str#     The text that is printed letter by letter# # delay: Optional[float]#     Changes the time between each printed letter#     DEFAULT: .01# # newLine: Optional[bool]#     whether to add a new line at the end or not#     DEFAULT: True```colorInput()```pythonimport helperhelper.colorInput(text: str = &quot;&quot;, beforeColor: Optional[Terminal.color.foreground] = Terminal.color.RESET)ORfrom helper import colorInputcolorInput(text: str = &quot;&quot;, beforeColor: Optional[Terminal.color.foreground] = Terminal.color.RESET)# Gets an input# # executes the input() function in cyan and changes the color back to beforeColor if given# # Parameters# ----------# text: Optional[str]#     The text that is printed before getting the input#     DEFAULT: None# beforeColor: Optional[Terminal.color.foreground]#     The color that was used before (if u want it to change back)#     DEFAULT: None```outputStdout()```pythonimport helperhelper.outputStdout(outputValue)ORfrom helper import outputStdoutoutputStdout(outputValue)# Outputs to stdout# # Outputs the given outputValue to stdout and flushes the stream after# # Parameters# ----------# outputValue: Any#     The value that's written to stdout```Terminal```pythonimport helperhelper.Terminal._  # _ = subclassORfrom helper import TerminalTerminal._         # _ = subclass# Functions &amp; Stuff for the Windows Terminal# # Contains classes and Functions to use for/in the Windows Terminal# # Subclasses# ----------# color:#     returns escape sequences to manipulate the color of the Terminal when printed```</longdescription>
</pkgmetadata>