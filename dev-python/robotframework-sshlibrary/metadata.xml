<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SSHLibrary===============.. contents::Introduction------------SSHLibrary_ is a `Robot Framework`_ testlibrary for SSH and SFTP.  The project is hosted on GitHub_and downloads can be found from PyPI_.SSHLibrary is operating system independent and supports Python 2.7 as wellas Python 3.4 or newer. In addition to the normal Python_ interpreter,it also works with `Jython 2.7`_.The library has the following main usages:- Executing commands on the remote machine, either with blocking or  non-blocking behavior.- Writing and reading in an interactive shell.- Transferring files and directories over SFTP.- Ensuring that files and directories exist on the remote machine... image:: https://img.shields.io/pypi/l/robotframework-sshlibrary.svg   :target: http://www.apache.org/licenses/LICENSE-2.0.. image:: https://api.travis-ci.org/robotframework/SSHLibrary.png   :target: http://travis-ci.org/robotframework/SSHLibraryDocumentation-------------See `keyword documentation`_ for available keywords and more informationabout the library in general.For general information about using test libraries with Robot Framework, see`Robot Framework User Guide`_.Installation------------The recommended installation method is using pip_::    pip install --upgrade robotframework-sshlibraryRunning this command installs also the latest Robot Framework, paramiko_and scp_ versions. The minimum supported paramiko version is ``1.15.3`` andminimum supported scp version is ``0.13.0``.The ``--upgrade`` option can be omitted when installing the library for thefirst time.With recent versions of ``pip`` it is possible to install directly from theGitHub_ repository. To install latest source from the master branch, usethis command::    pip install git+https://github.com/robotframework/SSHLibrary.gitAlternatively you can download the source distribution from PyPI_, extractit, and install it using one of the following depending are you usingPython or Jython::    python setup.py install    jython setup.py installA benefit of using pip is that it automatically installs scp, paramikoand Cryptography_ modules (or PyCrypto_ if paramiko version &lt; 2.0)that SSHLibrary requires on Python.On Jython, SSHLibrary requires Trilead SSH JAR distribution. You need to download`Trilead SSH JAR distribution`_ and add it to CLASSPATH.On Windows operating system, when using Python version &lt; 3.0, SSHLibrary willrequire win_inet_pton_. The minimum supported win_inet_pton version is ``1.1.0``.For creating SSH tunnels robotbackgroundlogger_ &gt; 1.2 is also a requirement.Docker~~~~~~When installing SSHLibrary in a container (eg. Alpine Linux) there are more dependenciesthat must be installed: gcc_, make_, openssl-dev_, musl-dev_ and libffi-dev_. Thesepackages can be installed using::    apk add gcc make openssl-dev musl-dev libffi-devUsage-----To use SSHLibrary in Robot Framework tests, the library needs to first beimported using the Library setting as any other library.When using Robot Framework, it is generally recommended to write aseasy-to-understand tests as possible. The keywords provided bySSHLibrary are pretty low level and it is typically a good idea towrite tests using Robot Framework's higher level keywords that utilizeSSHLibrary keywords internally. This is illustrated by the following examplewhere SSHLibrary keywords like ``Open Connection`` and ``Login`` are groupedtogether in a higher level keyword like ``Open Connection And Log In``... code:: robotframework    *** Settings ***    Documentation          This example demonstrates executing a command on a remote machine    ...                    and getting its output.    ...    ...                    Notice how connections are handled as part of the suite setup and    ...                    teardown. This saves some time when executing several test cases.    Library                SSHLibrary    Suite Setup            Open Connection And Log In    Suite Teardown         Close All Connections    *** Variables ***    ${HOST}                localhost    ${USERNAME}            test    ${PASSWORD}            test    *** Test Cases ***    Execute Command And Verify Output        [Documentation]    Execute Command can be used to run commands on the remote machine.        ...                The keyword returns the standard output by default.        ${output}=         Execute Command    echo Hello SSHLibrary!        Should Be Equal    ${output}          Hello SSHLibrary!    *** Keywords ***    Open Connection And Log In       Open Connection     ${HOST}       Login               ${USERNAME}        ${PASSWORD}Support-------If the provided documentation is not enough, there are various support forumsavailable:- `robotframework-users`_ mailing list- ``#sshlibrary`` and ``#sshlibrary-dev`` channels in  Robot Framework `Slack community`_- SSHLibrary `issue tracker`_ for bug reports and concrete enhancement  requests- `Other support forums`_ including paid support.. _Robot Framework: http://robotframework.org.. _Robot Framework User Guide: http://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#using-test-libraries.. _SSHLibrary: https://github.com/robotframework/SSHLibrary.. _GitHub: https://github.com/robotframework/SSHLibrary.. _Python: http://python.org.. _pip: http://pip-installer.org.. _PyPI: https://pypi.python.org/pypi/robotframework-sshlibrary.. _Keyword Documentation: http://robotframework.org/SSHLibrary/SSHLibrary.html.. _Jython 2.7: http://jython.org.. _paramiko: http://www.paramiko.org.. _scp: https://github.com/jbardin/scp.py.. _Cryptography: https://cryptography.io.. _PyCrypto: http://www.pycrypto.org.. _Trilead SSH JAR distribution: http://search.maven.org/remotecontent?filepath=com/trilead/trilead-ssh2/1.0.0-build221/trilead-ssh2-1.0.0-build221.jar.. _win_inet_pton: https://github.com/hickeroar/win_inet_pton.. _robotbackgroundlogger: https://github.com/robotframework/robotbackgroundlogger.. _gcc: https://pkgs.alpinelinux.org/packages?name=gcc&amp;branch=edge.. _make: https://pkgs.alpinelinux.org/packages?name=make&amp;branch=edge.. _openssl-dev: https://pkgs.alpinelinux.org/packages?name=openssl-dev&amp;branch=edge.. _musl-dev: https://pkgs.alpinelinux.org/packages?name=musl-dev&amp;branch=edge.. _libffi-dev: https://pkgs.alpinelinux.org/packages?name=libffi-dev&amp;branch=edge.. _robotframework-users: http://groups.google.com/group/robotframework-users.. _Slack community: https://robotframework-slack-invite.herokuapp.com.. _issue tracker: https://github.com/robotframework/SSHLibrary/issues.. _Other support forums: http://robotframework.org/#support</longdescription>
</pkgmetadata>