<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- PROJECT SHIELDS --&gt;&lt;!--*** I'm using markdown &quot;reference style&quot; links for readability.*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).*** See the bottom of this document for the declaration of the reference variables*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.*** https://www.markdownguide.org/basic-syntax/#reference-style-links--&gt;&lt;!-- TABLE OF CONTENTS --&gt;## Table of Contents* [About the Project](#about-the-project)* [Installation](#installation)* [Usage](#usage)* [Future Work](#Futurework)* [Contact](#contact)&lt;!-- ABOUT THE PROJECT --&gt;## About The ProjectA very elegant and simple library to evaluate models.This module builds the BarPlot, BoxPlot, CountPlot, DistPlot, HeatMap, PairPlot and ViolinPlot only with one line of code. A folder is created 'Plots' where the pdf files of all the plots are stored. Along with this, a pdf file will be generated 'FinalPlots.pdf' which contains all the plots with which EDA can be performed easily.This module will evaulate the Classification problems and Regression problems with 12 and 6 algorithms respectively. The Classification algorithms are KNN,LogisticRegression,DecisionTreeClassifier, RandomForestClassifier, SupportVectorClassifier, QuadraticDiscriminantSnalysis, SGDClassifier, AdaBoost, CalibratedClassifier, MultinomialNB, BernoulliNB, GaussianNB.The Regression algorithms are LinearRegression, PolynomialRegression, RidgeRegression, LassoRegression, SupportVectorRegressor, GradientBoostingRegression.We also have implemented the Adjusted R Squared method as the Regression Metric Evaluation.In Classification , Highest Accuracy is Highlighted in Yellow colour.In Regression , Least Error is Highlighted in Yellow colour.## Installation1. Clone the repo```gh repo clone Anand-gokul/pyevals```2. Install using pip or pip3```commandlinepip3 install pyevals(or)pip install pyevals```&lt;!-- USAGE EXAMPLES --&gt;## Usage```pythonimport pyevals# For Exploratory Data Analysis (or) For building the plotspyevals.BuildPlots(data,CategoricalFeatures,ContinuousFeatures)'''CategoricalFeatures and the ContinuousFeatures are the lists of the Categoricaland Continuous Features of the dataset respectively. '''# For ClassificationObject = pyevals.build(x_train,x_test,y_train,y_test,'classification')Object.evaluate()# For RegressionObject = pyevals.build(x_train,x_test,y_train,y_test,'regression')Object.evaluate()```## Future WorkIn this version we are only providing the reports and the plots as many as possible. We are working on improving the plots for better EDA.We will try to implement hyperparameter optimization techniques to get the better results. We will also try to implement other algorithms in classification and regression soon. &lt;!-- CONTACT --&gt;## ContactGithublink - https://github.com/Anand-gokul/pyevalsSai Gokul Krishna Reddy Talla - [@Krish](https://www.linkedin.com/in/gokul-talla) - gokulkrishna.talla@gmail.comAnanda Datta Sai Phanindra Tangirala - [@Anand](https://www.linkedin.com/in/ananda-datta-sai-phanindra-tangirala-62a4b5185) - tangiralaphanindra@gmail.comAnirudh Palaparthi - [@Anirudh](https://www.linkedin.com/in/pnbbanirudh/) - aniruddhapnbb@gmail.com</longdescription>
</pkgmetadata>