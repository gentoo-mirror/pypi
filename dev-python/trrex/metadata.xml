<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div  align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/mesejo/trex&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mesejo/trex/images/trrex_logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;trrex logo&quot;/&gt;&lt;/a&gt;&lt;/div&gt;&amp;nbsp;&lt;div align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/trrex/&quot;&gt;&lt;img src=&quot;https://github.com/mesejo/trex/workflows/trrex/badge.svg&quot; alt=&quot;Trrex&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pepy.tech/project/trrex&quot;&gt;&lt;img src=&quot;https://pepy.tech/badge/trrex&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/trrex/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/status/trrex.svg&quot; alt=&quot;Package Status&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/mesejo/trex&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/mesejo/trex/branch/master/graph/badge.svg&quot; alt=&quot;Code Coverage Status&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://badge.fury.io/py/trrex&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/trrex.svg&quot; alt=&quot;PyPI Version&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://trrex.readthedocs.io&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/trrex/badge/?version=latest&quot; alt=&quot;Documentation Status&quot;&gt;&lt;/a&gt;&lt;/div&gt;# Efficient keyword mining with regular expressionsThis package includes a pure Python function that enables you to represent a set of keywords (strings) as an efficient regular expression. With this regular expression, you can perform various operations, such as replacing and extracting keywords. The name of the package comes from the internal trie used to build the regular expression (**tr**ie to **re**ge**x**)## Install trrexUse pip,```bashpip install trrex```## Usage```pythonimport trrex as tximport repattern = tx.make(['baby', 'bat', 'bad'])hits = re.findall(pattern, 'The baby was scared by the bad bat.')# hits = ['baby', 'bat', 'bad']```### pandas```pythonimport trrex as tximport pandas as pdframe = pd.DataFrame({    &quot;txt&quot;: [&quot;The baby&quot;, &quot;The bat&quot;]})pattern = tx.make(['baby', 'bat', 'bad'], prefix=r&quot;\b(&quot;, suffix=r&quot;)\b&quot;) # need to specify capturing groupsframe[&quot;match&quot;] = frame[&quot;txt&quot;].str.extract(pattern)hits = frame[&quot;match&quot;].tolist()print(hits)# hits = ['baby', 'bad']```## Why use trrex?- trrex builds a *better* regex pattern, than the simple regex union, therefore searching (and replacing) keywords isabout 300 times faster than a regex union pattern, and about 2.5 times faster than FlashText algorithm. See below for a performancecomparison:![Performance comparison](https://github.com/mesejo/trex/blob/images/find_comparison.png?raw=true)- Plays well with others, can be integrated easily with pandas, spacy and any other regex engine. See the [documentation](https://trrex.readthedocs.io/en/latest/integration.html)for examples.- Pure Python, no other dependencies## IssuesIf you have any issues with this repository, please don't hesitate to [raise them](https://github.com/mesejo/trex/issues/new). It is actively maintained, and we will do our best to help you.## AcknowledgmentsThis project is based on the following resources:- [Speed up regex](https://stackoverflow.com/questions/42742810/speed-up-millions-of-regex-replacements-in-python-3)- [Triegex](https://github.com/ZhukovAlexander/triegex)## Liked the work?If you've found this repository helpful, why not give it a star? It's an easy way to show your appreciation and support for the project. Plus, it helps others discover it too!</longdescription>
</pkgmetadata>