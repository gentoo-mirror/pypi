<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Introwhaleman It is a simple tool to build , push and tag docker images.using config .ini file to configure the tool. its annoying sometimes we tagging the image over and over again.with this we can simply use config for tagging and versioning for each project/dockerfile## Installation```bashpip install whaleman```## Usageby default name of the config file is docker.inithe content of the config file is```ini[registry]name = index.docker.io # name of the registry URL , default is index.docker.iologin = True # if you want to login to the registry , default is False# username for the registry # default is None or grab from env var with name DOCKER_USERNAMEdocker_username = myusername # password for the registry , use quotes if you have symbol in the password.# default is None or grab from env var with name DOCKER_PASSWORDdocker_password = &quot;mypassword&quot;  [image]name = soberdev/homepage # this is name of the image, requiredtag = 0.1.8 # this is the version of the image or initial version, required```or if you want to create a config file simply run:```bashwhaleman createconfig```the createconfig takes arguments, by default it will create a config file with name docker.inibut you can create a config file with any name you want with the argument -n```bashwhaleman createconfig -n myconfig.ini```### DockerHostby default whaleman will try grab the value from env variables **DOCKER_HOST** if the environment is empty, then default to **unix://var/run/docker.sock**### Run the toolpatch choices are **keep, micro, minor and major****keep** will not update the version```bashwhaleman build &lt;patch&gt;```build the image and patch the version, after done will auto increment the version in the config fileyou can build and push the image to the registry with the positional argument **push**```bashwhaleman build &lt;patch&gt; push```change the registry uri dynamically```bashwhaleman build &lt;patch&gt; push -r your.registry.url```or you can use any config file and custom dockerfilename```bashwhaleman build &lt;patch&gt; push -f myconfig.ini -df mydockerfile.Dockerfile```## For more information```bashwhaleman -h``````bashwhaleman build -h``````bashwhaleman createconfig -h```## Logging Leveldefault is INFO, but you can change it with the argument -l```bashwhaleman -l DEBUG build &lt;patch&gt;```</longdescription>
</pkgmetadata>