<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django Instant[![pub package](https://img.shields.io/pypi/v/django-instant)](https://pypi.org/project/django-instant/) [![Django CI](https://github.com/synw/django-instant/actions/workflows/django.yml/badge.svg)](https://github.com/synw/django-instant/actions/workflows/django.yml)Websockets for Django with [Centrifugo](https://github.com/centrifugal/centrifugo).* Push events into public or private channels.* Handle the events in javascript client-side.:sunny: Compatible: plug it on an existing Django instance _without any modification in your main stack_### ExamplePush events in channels from anywhere in the code:  ```pythonfrom instant.producers import publish  # Publish to a public channelpublish(&quot;public&quot;, &quot;Message for everyone&quot;)# Publish to a private channel with an event class setpublish(&quot;$users&quot;, &quot;Message in logged in users channel&quot;, event_class=&quot;important&quot;)# Publish to a group channelpublish(&quot;$group1&quot;, &quot;Message for users in group1&quot;)# Publish to the staff channel with an extra json data payloaddata = {&quot;field1&quot;:&quot;value1&quot;,&quot;field2&quot;:[1,2]}publish(&quot;$staff&quot;, &quot;Message for staff&quot;, data=data)  ```## Quick start### Install the Django package```pip install django-instant```Add `&quot;instant&quot;` to `INSTALLED_APPS` and update `urls.py`:```pythonurlpatterns = [    # ...    path(&quot;instant/&quot;, include(&quot;instant.urls&quot;)),]```### Install the websockets server#### Using the installerUse the Centrifugo installer management command (for Linux and MacOs):```python manage.py installws```This will download a Centrifugo binary release and install it under a *centrifugo* directory. It willgenerate the Django settings to use.#### Install manualyInstall the Centrifugo websockets server: see the [detailled doc](https://centrifugal.github.io/centrifugo/server/install/)  &lt;details&gt;&lt;br /&gt;Download a release https://github.com/centrifugal/centrifugo/releases/latestand generate a configuration file:```./centrifugo genconfig```The generated `config.json` file looks like this:```javascript{  &quot;v3_use_offset&quot;: true,  &quot;token_hmac_secret_key&quot;: &quot;46b38493-147e-4e3f-86e0-dc5ec54f5133&quot;,  &quot;admin_password&quot;: &quot;ad0dff75-3131-4a02-8d64-9279b4f1c57b&quot;,  &quot;admin_secret&quot;: &quot;583bc4b7-0fa5-4c4a-8566-16d3ce4ad401&quot;,  &quot;api_key&quot;: &quot;aaaf202f-b5f8-4b34-bf88-f6c03a1ecda6&quot;,  &quot;allowed_origins&quot;: []}```&lt;/details&gt;### Configure the Django settingsUse the parameters from the installer's output or from Centrifugo's `config.json` file to update your Django's `settings.py`:```pythonCENTRIFUGO_HOST = &quot;http://localhost&quot;CENTRIFUGO_PORT = 8001CENTRIFUGO_HMAC_KEY = &quot;46b38493-147e-4e3f-86e0-dc5ec54f5133&quot;CENTRIFUGO_API_KEY = &quot;aaaf202f-b5f8-4b34-bf88-f6c03a1ecda6&quot;SITE_NAME = &quot;My site&quot; # used in the messages to identify where they come from```### Create channelsGo into the admin to create channels or create them programatically:```pythonfrom instant.models import ChannelChannel.objects.create(name=&quot;superuser&quot;, level=Channel.Level.Superuser) ```Api: channel create parameters:- `name`: the channel name. Required and unique- `level`: access authorization level for a channel: *Public, Users, Groups, Staff, Superuser*. Default: *Superuser*- `is_active`: a boolean to disable a channel- `groups`: a list of authorized Django groups for a channel## Avalailable endpoints`/instant/login/`: takes a username and password as parameter and will login theuser in Django and return a Centrifugo connection token`/instant/get_token/`: get a Centrifugo connection token for a logged in userThe two methods above return some connection information: a token forthe websockets connection, a Django csrf token and a list of authorizedchannels for the user:```javascript{  &quot;csrf_token&quot;: &quot;fvO61oyhcfzrW3SjPCYxYfzDAQFO6Yz7yaAQkxDbhC0NhlwoP1cecqLEYv8SCDLK&quot;,  &quot;ws_token&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnZ2ciLCJleHAiOjE2M..&quot;,  &quot;channels&quot;: [    {      &quot;name&quot;: &quot;public&quot;,      &quot;level&quot;: &quot;public&quot;    },    {      &quot;name&quot;: &quot;$users&quot;,      &quot;level&quot;: &quot;users&quot;    },    {      &quot;name&quot;: &quot;$group1&quot;,      &quot;level&quot;: &quot;groups&quot;    }  ]}````/instant/subscribe/`: get tokens for Centrifugo channels subscriptions ([doc](https://centrifugal.github.io/centrifugo/server/private_channels/))## Publish methodThe required parameters are `channel` and either `message` or `data````pythonpublish(&quot;$users&quot;, &quot;A message&quot;, data={        &quot;foo&quot;: &quot;bar&quot;}, event_class=&quot;important&quot;, bucket=&quot;notifications&quot;)```The other parameters are optional## Javascript clientSeveral options are available for the client side### Use the official Centrifugo js clientManage your websockets connection manually with the official Centrifugo js library: [Centrifuge-js](https://github.com/centrifugal/centrifuge-js)### Use the embeded client in a script tagIn a Django template:```html{% load static %}&lt;script src=&quot;{% static 'instant/index.min.js' %}&quot;&gt;&lt;/script&gt;&lt;script&gt;  const instant = $instant.useInstant();&lt;/script&gt;```[Api doc](https://github.com/synw/djangoinstant#usage)### Use the npm clientA dedicated [client](https://github.com/synw/djangoinstant) is available from npmto handle the messages and connections client side in javascript or typescript## ExampleAn [example](https://github.com/synw/django-instant-example) with a backend and a frontend is available## TestsTo run the tests:```bashtox```</longdescription>
</pkgmetadata>