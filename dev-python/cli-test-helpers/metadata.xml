<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>cli-test-helpers |latest-version|=================================|check-status| |test-status| |publish-status| |python-support| |license| |docs-status|Useful helpers for writing tests for your Python CLI program.Writing tests for a command line interface (CLI) tool `may not seem strictlystraight-forward`_ when you think in terms of unit tests. Especially, when youuse the `argparse`_ module or the `click`_ package, control of the applicationentry point is a bit taken away from you.But it's not all that bad. This package is here to help. The `examples`_ giveyou some guidance on how to get started, and the helpers allow you to deal withcommon cases, such as mocking CLI arguments and environment variable values... |latest-version| image:: https://img.shields.io/pypi/v/cli-test-helpers.svg   :target: https://pypi.org/project/cli-test-helpers   :alt: Latest version on PyPI.. |check-status| image:: https://github.com/painless-software/python-cli-test-helpers/actions/workflows/check.yml/badge.svg   :target: https://github.com/painless-software/python-cli-test-helpers/actions/workflows/check.yml   :alt: Code checks status.. |test-status| image:: https://github.com/painless-software/python-cli-test-helpers/actions/workflows/test.yml/badge.svg   :target: https://github.com/painless-software/python-cli-test-helpers/actions/workflows/test.yml   :alt: Test suite status.. |publish-status| image:: https://github.com/painless-software/python-cli-test-helpers/actions/workflows/publish.yml/badge.svg   :target: https://github.com/painless-software/python-cli-test-helpers/actions/workflows/publish.yml   :alt: Latest release Status.. |python-support| image:: https://img.shields.io/pypi/pyversions/cli-test-helpers.svg   :target: https://pypi.org/project/cli-test-helpers   :alt: Python versions.. |license| image:: https://img.shields.io/pypi/l/cli-test-helpers.svg   :target: https://github.com/painless-software/python-cli-test-helpers/blob/main/LICENSE   :alt: Software license.. |docs-status| image:: https://img.shields.io/readthedocs/python-cli-test-helpers/latest.svg   :target: https://readthedocs.org/projects/python-cli-test-helpers/   :alt: Documentation Status.. _may not seem strictly straight-forward: https://stackoverflow.com/questions/13493288/.. _argparse: https://docs.python.org/3/library/argparse.html.. _click: https://click.palletsprojects.com/.. _documentation: https://python-cli-test-helpers.readthedocs.io/.. _examples: https://github.com/painless-software/python-cli-test-helpers/tree/main/examples.. links-markerDocumentation-------------See the `documentation`_ for installation instructions and a tutorial.Examples--------The `examples`_ folder contains hands-on example projects you can start to usedirectly.Development-----------This project uses Tox to run its test suite. Install and use it locally likethis:.. code-block:: shell    python3 -m pip install tox 'virtualenv&lt;20.22'.. note::   Virtualenv 20.22 dropped support for Python 2.7 and &lt;3.6, which most   notably makes Tox fail to detect the PyPy2 executable... code-block:: shell    tox list            # list available environments    tox -e ruff,py311   # run a few environments    tox -e py           # run tests with local default Python    tox                 # run entire suiteThe included example projects can be tested independently with their dedicatedenvironments, e.g... code-block:: shell    tox -e example-docopt</longdescription>
</pkgmetadata>