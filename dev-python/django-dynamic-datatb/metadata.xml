<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># [Django Dynamic DataTables](https://appseed.us/developer-tools/django-dynamic-datatables/)`Open-Source` library for **Django** that provides a `powerful data table interface` (paginated information) with minimum effort - actively supported by [AppSeed](https://appseed.us/).- [Django Dynamic Services](https://github.com/app-generator/django-dynamic-services) - `sample project that uses the library`- [Django - Build Services without Coding](https://www.youtube.com/watch?v=EtMCK5AmdQI) - `video presentation`&lt;br /&gt; &gt; Features- Modern Stack: `Django` &amp; `VanillaJS`- `DT` layer provided by [Simple-DataTables](https://github.com/fiduswriter/Simple-DataTables)- `Server-side` pagination- Search, Filters- Exports in PDF, CSV formats- `MIT License` (commercial use allowed) &lt;br /&gt;![Django Dynamic DataTables - Open-Source tool provided by AppSeed.](https://user-images.githubusercontent.com/51070104/194712823-b8bf1a9e-f5d8-47b3-b7e6-a46a29f3acbe.gif)&lt;br /&gt;## How to use it&lt;br /&gt;&gt; **Step #1** - `Install the package` ```bash$ pip install django-dynamic-datatb// OR$ pip install git+https://github.com/app-generator/django-dynamic-datatb.git```&lt;br /&gt;&gt; **Step #2** - Update Configuration, `add new imports````pythonimport os, inspectimport django_dyn_dt```&lt;br /&gt;&gt; **Step #3** - Update Configuration, `include the new APPs````pythonINSTALLED_APPS = [    'django_dyn_dt',  # &lt;-- NEW App]```&lt;br /&gt;&gt; **Step #4** - Update Configuration, include the new `TEMPLATES` DIR```pythonTEMPLATE_DIR_DATATB = os.path.join(BASE_DIR, &quot;django_dyn_dt/templates&quot;) # &lt;-- NEW AppTEMPLATES = [    {        &quot;BACKEND&quot;: &quot;django.template.backends.django.DjangoTemplates&quot;,        &quot;DIRS&quot;: [TEMPLATE_DIR_DATATB],                                  # &lt;-- NEW Include        &quot;APP_DIRS&quot;: True,        &quot;OPTIONS&quot;: {        },    },]```&lt;br /&gt;&gt; **Step #5** - Update Configuration, update `STATICFILES_DIRS` DIR```python DYN_DB_PKG_ROOT = os.path.dirname( inspect.getfile( django_dyn_dt ) ) # &lt;-- NEW AppSTATICFILES_DIRS = (    os.path.join(DYN_DB_PKG_ROOT, &quot;templates/static&quot;),)```&lt;br /&gt;&gt; **Step #6** - `Register the model` in `settings.py` (DYNAMIC_DATATB section)This sample code assumes that `app1` exists and model `Book` is defined and migrated.```pythonDYNAMIC_DATATB = {    # SLUG -&gt; Import_PATH     'books'  : &quot;app1.models.Book&quot;,}```&lt;br /&gt;&gt; **Step #7** - `Update routing`, include APIs ```pythonfrom django.contrib import adminfrom django.urls import path, include         # &lt;-- NEW: 'include` directive addedurlpatterns = [    path(&quot;admin/&quot;, admin.site.urls),    path('', include('django_dyn_dt.urls')),  # &lt;-- NEW: API routing rules]    ```    &lt;br /&gt;&gt; **Step #8** - Use the Dynamic Datatable module If the managed model is `Books`, the dynamic interface is `/datatb/books/` and all features available. &lt;br /&gt;![Django Dynamic DataTables - Open-Source Tool for Developers.](https://user-images.githubusercontent.com/51070104/194706034-b691226d-f9fa-4c05-a828-fc947670c573.jpg)&lt;br /&gt;### Links &amp; resources - [DRF](https://www.django-rest-framework.org/) - HOMEpage- More [Developer Tools](https://appseed.us/developer-tools/) provided by `AppSeed`- Ask for [Support](https://appseed.us/support/) via `Email` &amp; `Discord` &lt;br /&gt;---[Django Dynamic DataTables](https://appseed.us/developer-tools/django-dynamic-datatables/) - Open-source library provided by **[AppSeed](https://appseed.us/)**</longdescription>
</pkgmetadata>