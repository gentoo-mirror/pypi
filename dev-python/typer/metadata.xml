<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://typer.tiangolo.com&quot;&gt;&lt;img src=&quot;https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg&quot; alt=&quot;Typer&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;Typer, build great CLIs. Easy to code. Based on Python type hints.&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tiangolo/typer/actions?query=workflow%3ATest&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://github.com/tiangolo/typer/workflows/Test/badge.svg&quot; alt=&quot;Test&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/tiangolo/typer/actions?query=workflow%3APublish&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://github.com/tiangolo/typer/workflows/Publish/badge.svg&quot; alt=&quot;Publish&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/typer&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://coverage-badge.samuelcolvin.workers.dev/tiangolo/typer.svg&quot; alt=&quot;Coverage&quot;&gt;&lt;a href=&quot;https://pypi.org/project/typer&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/typer?color=%2334D058&amp;label=pypi%20package&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;/p&gt;---**Documentation**: &lt;a href=&quot;https://typer.tiangolo.com&quot; target=&quot;_blank&quot;&gt;https://typer.tiangolo.com&lt;/a&gt;**Source Code**: &lt;a href=&quot;https://github.com/tiangolo/typer&quot; target=&quot;_blank&quot;&gt;https://github.com/tiangolo/typer&lt;/a&gt;---Typer is a library for building &lt;abbr title=&quot;command line interface, programs executed from a terminal&quot;&gt;CLI&lt;/abbr&gt; applications that users will **love using** and developers will **love creating**. Based on Python 3.6+ type hints.The key features are:* **Intuitive to write**: Great editor support. &lt;abbr title=&quot;also known as auto-complete, autocompletion, IntelliSense&quot;&gt;Completion&lt;/abbr&gt; everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.* **Easy to use**: It's easy to use for the final users. Automatic help, and automatic completion for all shells.* **Short**: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.* **Start simple**: The simplest example adds only 2 lines of code to your app: **1 import, 1 function call**.* **Grow large**: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.## FastAPI of CLIs&lt;a href=&quot;https://fastapi.tiangolo.com&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png&quot; style=&quot;width: 20%;&quot;&gt;&lt;/a&gt;**Typer** is &lt;a href=&quot;https://fastapi.tiangolo.com&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;FastAPI&lt;/a&gt;'s little sibling.And it's intended to be the FastAPI of CLIs.## RequirementsPython 3.6+**Typer** stands on the shoulders of a giant. Its only internal dependency is &lt;a href=&quot;https://click.palletsprojects.com/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;Click&lt;/a&gt;.## Installation&lt;div class=&quot;termy&quot;&gt;```console$ pip install &quot;typer[all]&quot;---&gt; 100%Successfully installed typer```&lt;/div&gt;**Note**: that will include &lt;a href=&quot;https://rich.readthedocs.io/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;Rich&lt;/a&gt;. Rich is the recommended library to *display* information on the terminal, it is optional, but when installed, it's deeply integrated into **Typer** to display beautiful output.## Example### The absolute minimum* Create a file `main.py` with:```Pythonimport typerdef main(name: str):    print(f&quot;Hello {name}&quot;)if __name__ == &quot;__main__&quot;:    typer.run(main)```### Run itRun your application:&lt;div class=&quot;termy&quot;&gt;```console// Run your application$ python main.py// You get a nice error, you are missing NAME&lt;font color=&quot;#F4BF75&quot;&gt;Usage: &lt;/font&gt;main.py [OPTIONS] NAME&lt;font color=&quot;#A5A5A1&quot;&gt;Try &lt;/font&gt;&lt;font color=&quot;#44919F&quot;&gt;&amp;apos;main.py &lt;/font&gt;&lt;font color=&quot;#44919F&quot;&gt;&lt;b&gt;--help&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#44919F&quot;&gt;&amp;apos;&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt; for help.&lt;/font&gt;&lt;font color=&quot;#F92672&quot;&gt;â•­â”€ Error â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#F92672&quot;&gt;â”‚&lt;/font&gt; Missing argument &amp;apos;NAME&amp;apos;.                          &lt;font color=&quot;#F92672&quot;&gt;â”‚&lt;/font&gt;&lt;font color=&quot;#F92672&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;// You get a --help for free$ python main.py --help&lt;b&gt; &lt;/b&gt;&lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;Usage: &lt;/b&gt;&lt;/font&gt;&lt;b&gt;main.py [OPTIONS] NAME                       &lt;/b&gt;&lt;b&gt;                                                     &lt;/b&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Arguments â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#F92672&quot;&gt;*&lt;/font&gt;    name      &lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;TEXT&lt;/b&gt;&lt;/font&gt;  [default: None] &lt;font color=&quot;#A6194C&quot;&gt;[required]&lt;/font&gt;   â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Options â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--install-completion&lt;/b&gt;&lt;/font&gt;          Install completion  â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               for the current     â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               shell.              â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--show-completion&lt;/b&gt;&lt;/font&gt;             Show completion for â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               the current shell,  â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               to copy it or       â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               customize the       â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               installation.       â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--help&lt;/b&gt;&lt;/font&gt;                        Show this message   â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               and exit.           â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;// When you create a package you get âœ¨ auto-completion âœ¨ for free, installed with --install-completion// Now pass the NAME argument$ python main.py CamilaHello Camila// It works! ðŸŽ‰```&lt;/div&gt;**Note**: auto-completion works when you create a Python package and run it with `--install-completion` or when you use &lt;a href=&quot;https://typer.tiangolo.com/typer-cli/&quot; class=&quot;internal-link&quot; target=&quot;_blank&quot;&gt;Typer CLI&lt;/a&gt;.## Example upgradeThis was the simplest example possible.Now let's see one a bit more complex.### An example with two subcommandsModify the file `main.py`.Create a `typer.Typer()` app, and create two subcommands with their parameters.```Python hl_lines=&quot;3  6  11  20&quot;import typerapp = typer.Typer()@app.command()def hello(name: str):    print(f&quot;Hello {name}&quot;)@app.command()def goodbye(name: str, formal: bool = False):    if formal:        print(f&quot;Goodbye Ms. {name}. Have a good day.&quot;)    else:        print(f&quot;Bye {name}!&quot;)if __name__ == &quot;__main__&quot;:    app()```And that will:* Explicitly create a `typer.Typer` app.    * The previous `typer.run` actually creates one implicitly for you.* Add two subcommands with `@app.command()`.* Execute the `app()` itself, as if it was a function (instead of `typer.run`).### Run the upgraded exampleCheck the new help:&lt;div class=&quot;termy&quot;&gt;```console$ python main.py --help&lt;b&gt; &lt;/b&gt;&lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;Usage: &lt;/b&gt;&lt;/font&gt;&lt;b&gt;main.py [OPTIONS] COMMAND [ARGS]...          &lt;/b&gt;&lt;b&gt;                                                     &lt;/b&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Options â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--install-completion&lt;/b&gt;&lt;/font&gt;          Install completion  â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               for the current     â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               shell.              â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--show-completion&lt;/b&gt;&lt;/font&gt;             Show completion for â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               the current shell,  â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               to copy it or       â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               customize the       â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               installation.       â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--help&lt;/b&gt;&lt;/font&gt;                        Show this message   â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                               and exit.           â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Commands â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;goodbye                                     &lt;/b&gt;&lt;/font&gt;      â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;hello                                       &lt;/b&gt;&lt;/font&gt;      â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;// You have 2 subcommands (the 2 functions): goodbye and hello```&lt;/div&gt;Now check the help for the `hello` command:&lt;div class=&quot;termy&quot;&gt;```console$ python main.py hello --help&lt;b&gt; &lt;/b&gt;&lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;Usage: &lt;/b&gt;&lt;/font&gt;&lt;b&gt;main.py hello [OPTIONS] NAME                 &lt;/b&gt;&lt;b&gt;                                                     &lt;/b&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Arguments â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#F92672&quot;&gt;*&lt;/font&gt;    name      &lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;TEXT&lt;/b&gt;&lt;/font&gt;  [default: None] &lt;font color=&quot;#A6194C&quot;&gt;[required]&lt;/font&gt;   â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Options â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--help&lt;/b&gt;&lt;/font&gt;          Show this message and exit.       â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;```&lt;/div&gt;And now check the help for the `goodbye` command:&lt;div class=&quot;termy&quot;&gt;```console$ python main.py goodbye --help&lt;b&gt; &lt;/b&gt;&lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;Usage: &lt;/b&gt;&lt;/font&gt;&lt;b&gt;main.py goodbye [OPTIONS] NAME               &lt;/b&gt;&lt;b&gt;                                                     &lt;/b&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Arguments â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#F92672&quot;&gt;*&lt;/font&gt;    name      &lt;font color=&quot;#F4BF75&quot;&gt;&lt;b&gt;TEXT&lt;/b&gt;&lt;/font&gt;  [default: None] &lt;font color=&quot;#A6194C&quot;&gt;[required]&lt;/font&gt;   â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•­â”€ Options â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--formal&lt;/b&gt;&lt;/font&gt;    &lt;font color=&quot;#AE81FF&quot;&gt;&lt;b&gt;--no-formal&lt;/b&gt;&lt;/font&gt;      [default: no-formal] â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚ &lt;/font&gt;&lt;font color=&quot;#A1EFE4&quot;&gt;&lt;b&gt;--help&lt;/b&gt;&lt;/font&gt;                       Show this message    â”‚&lt;font color=&quot;#A5A5A1&quot;&gt;â”‚                              and exit.            â”‚&lt;/font&gt;&lt;font color=&quot;#A5A5A1&quot;&gt;â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯&lt;/font&gt;// Automatic --formal and --no-formal for the bool option ðŸŽ‰```&lt;/div&gt;Now you can try out the new command line application:&lt;div class=&quot;termy&quot;&gt;```console// Use it with the hello command$ python main.py hello CamilaHello Camila// And with the goodbye command$ python main.py goodbye CamilaBye Camila!// And with --formal$ python main.py goodbye --formal CamilaGoodbye Ms. Camila. Have a good day.```&lt;/div&gt;### RecapIn summary, you declare **once** the types of parameters (*CLI arguments* and *CLI options*) as function parameters.You do that with standard modern Python types.You don't have to learn a new syntax, the methods or classes of a specific library, etc.Just standard **Python 3.6+**.For example, for an `int`:```Pythontotal: int```or for a `bool` flag:```Pythonforce: bool```And similarly for **files**, **paths**, **enums** (choices), etc. And there are tools to create **groups of subcommands**, add metadata, extra **validation**, etc.**You get**: great editor support, including **completion** and **type checks** everywhere.**Your users get**: automatic **`--help`**, **auto-completion** in their terminal (Bash, Zsh, Fish, PowerShell) when they install your package or when using &lt;a href=&quot;https://typer.tiangolo.com/typer-cli/&quot; class=&quot;internal-link&quot; target=&quot;_blank&quot;&gt;Typer CLI&lt;/a&gt;.For a more complete example including more features, see the &lt;a href=&quot;https://typer.tiangolo.com/tutorial/&quot;&gt;Tutorial - User Guide&lt;/a&gt;.## Optional DependenciesTyper uses &lt;a href=&quot;https://click.palletsprojects.com/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;Click&lt;/a&gt; internally. That's the only dependency.But you can also install extras:* &lt;a href=&quot;https://rich.readthedocs.io/en/stable/index.html&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;rich&lt;/code&gt;&lt;/a&gt;: and Typer will show nicely formatted errors automatically.* &lt;a href=&quot;https://github.com/sarugaku/shellingham&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;shellingham&lt;/code&gt;&lt;/a&gt;: and Typer will automatically detect the current shell when installing completion.    * With `shellingham` you can just use `--install-completion`.    * Without `shellingham`, you have to pass the name of the shell to install completion for, e.g. `--install-completion bash`.You can install `typer` with `rich` and `shellingham` with `pip install typer[all]`.## LicenseThis project is licensed under the terms of the MIT license.</longdescription>
</pkgmetadata>