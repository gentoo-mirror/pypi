<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/clarete/forbiddenfruit.png?branch=master)](https://travis-ci.org/clarete/forbiddenfruit)# Forbidden Fruit![Forbidden Fruit](logo.png)This project allows Python code to extend built-in types.If that's a good idea or not, you tell me. The first need this projectattended was allowing a [Python assertionlibrary](https://github.com/gabrielfalcao/sure) to implement a similarAPI to [RSpecExpectations](https://github.com/rspec/rspec-expectations) and[should.js](https://shouldjs.github.io/). But people got creative andused it to among other things [spy onthings](https://github.com/ikamensh/flynt/blob/43a64ac1a030be79741402d8920a6da253a96670/src/flynt/file_spy.py)or to [integrateprofiling](https://github.com/localstack/localstack/blob/e38eae0d1fe442924f4256d4bc87710a4cb6f142/localstack/utils/analytics/profiler.py).## Tiny ExampleIt basically allows you to patch built-in objects, declared in C throughpython. Just like this:1. Add a new method to the `int` class:```pythonfrom forbiddenfruit import cursedef words_of_wisdom(self):    return self * &quot;blah &quot;curse(int, &quot;words_of_wisdom&quot;, words_of_wisdom)assert (2).words_of_wisdom() == &quot;blah blah &quot;```2. Add a `classmethod` to the `str` class:```pythonfrom forbiddenfruit import cursedef hello(self):    return &quot;blah&quot;curse(str, &quot;hello&quot;, classmethod(hello))assert str.hello() == &quot;blah&quot;```### Reversing a curseIf you want to free your object from a curse, you can use the `reverse()`function. Just like this:```pythonfrom forbiddenfruit import curse, reversecurse(str, &quot;test&quot;, &quot;blah&quot;)assert 'test' in dir(str)# Time to reverse the cursereverse(str, &quot;test&quot;)assert 'test' not in dir(str)```**Beware:** `reverse()` only deletes attributes. If you `curse()`'d to replacea pre-existing attribute, `reverse()` won't re-install the existing attribute.### Context Manager / Decorator`cursed()` acts as a context manager to make a `curse()`, and then `reverse()`it on exit. It uses[`contextlib.contextmanager()`](https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager),so on Python 3.2+ it can also be used as a function decorator. Like so:```pythonfrom forbiddenfruit import cursedwith cursed(str, &quot;test&quot;, &quot;blah&quot;):    assert str.test == &quot;blah&quot;assert &quot;test&quot; not in dir(str)@cursed(str, &quot;test&quot;, &quot;blah&quot;)def function():    assert str.test == &quot;blah&quot;function()assert &quot;test&quot; not in dir(str)```## CompatibilityForbbiden Fruit is tested on CPython 2.7, 3.0, and 3.3-3.7.Since Forbidden Fruit is fundamentally dependent on the C API,this library won't work on other python implementations, suchas Jython, pypy, etc.## LicenseCopyright (C) 2013,2019  Lincoln Clarete &lt;lincoln@clarete.li&gt;This software is available under two different licenses at yourchoice:### GPLv3This program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.### MITPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall beincluded in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OFMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE ANDNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERSBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN ANACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR INCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.### Logo byKimberly Chandler, from The Noun Project### Changelog#### 0.1.4  * Add cursed() context manager/decorator  * Conditionally build test C extension  * Allow cursing dunder methods with non functions  * Fix dual licensing issues. Distribute both GPLv3 &amp; MIT license    files.</longdescription>
</pkgmetadata>