<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-scim2============|tests| |coverage| |docs|This is a provider-side implementation of the SCIM 2.0 [1]_specification for use in Django.Note that currently the only supported database is Postgres.Installation------------Install with pip::$ pip install django-scim2Then add the ``django_scim`` app to ``INSTALLED_APPS`` in your Django's settings::    INSTALLED_APPS = (        ...        'django_scim',    )By default, ``request.user.is_anonymous()`` is checked to determine if the SCIMrequest should be allowed or denied.If you have specific authentication needs, look into overriding the default &quot;isauthenticated predicate&quot; (i.e. see ``GET_IS_AUTHENTICATED_PREDICATE`` fordetails) or subclassing the middleware that performs the check(``AUTH_CHECK_MIDDLEWARE``).Add the necessary url patterns to your root urls.py file. Please note that thenamespace is mandatory and must be named `scim`::    urlpatterns = [        ...        path('scim/v2/', include('django_scim.urls')),    ]Finally, add settings appropriate for you app to your settings.py file::    SCIM_SERVICE_PROVIDER = {        'NETLOC': 'localhost',        'AUTHENTICATION_SCHEMES': [            {                'type': 'oauth2',                'name': 'OAuth 2',                'description': 'Oauth 2 implemented with bearer token',            },        ],    }Other SCIM settings can be provided but those listed above are required.PyPI----https://pypi.python.org/pypi/django-scim2Source------https://github.com/15five/django-scim2Documentation-------------.. |docs| image:: https://readthedocs.org/projects/django-scim2/badge/  :target: https://django-scim2.readthedocs.io/  :alt: Documentation Statushttps://django-scim2.readthedocs.io/Development-----------This project uses Poetry to manage dependencies, etc. Thus to install thenecessary tools when developing, run:```poetry install```Tests-----.. |tests| image:: https://github.com/15five/django-scim2/workflows/CI%2FCD/badge.svg    :target: https://github.com/15five/django-scim2/actionshttps://github.com/15five/django-scim2/actionsTests are typically run locally with `tox` (https://tox.wiki/). Tox will testall supported versions of Python and Django.```tox```To run the test suite with a single version of Python (the version you createdthe virtualenv with), run:```poetry run pytest tests/```Coverage--------.. |coverage| image:: https://codecov.io/gh/15five/django-scim2/graph/badge.svg    :target: https://codecov.io/gh/15five/django-scim2https://codecov.io/gh/15five/django-scim2/```tox -e coverage```License-------This library is released under the terms of the **MIT license**. Full details in ``LICENSE.txt`` file.Extensibility-------------This library was forked and developed to be highly extensible. A number ofadapters can be defined to control what different endpoints do to your resources.Please see the documentation for more details.PLEASE NOTE: This app does not implement authorization and authentication.Such tasks are left for other apps such as `Django OAuth Toolkit`_ to implement... _`Django OAuth Toolkit`: https://github.com/evonove/django-oauth-toolkitDevelopment Speed-----------------Since this project is relatively stable, time is only dedicated to it onFridays. Thus if you issue a PR, bug, etc, please note that it may take a weekbefore we get back to you. Thanks you for your patience.Credits-------This project was forked from https://bitbucket.org/atlassian/django_scim.. [1] http://www.simplecloud.info/, https://tools.ietf.org/html/rfc7644</longdescription>
</pkgmetadata>