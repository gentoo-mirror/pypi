<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-email-verifier===================The simplest possible way to verify an email address in Python.Meta----- Author: WHOIS API, Inc.- Email: support@whoisxmlapi.com- Site: https://emailverification.whoisxmlapi.com/Prerequisites-------------To use this library, you'll need to create a free Email Verification API account:https://emailverification.whoisxmlapi.com/If you haven't done this yet, please do so now.Documentation-------------Documentation available `here &lt;https://emailverification.whoisxmlapi.com/docs&gt;`_.Installation------------To install ``email-verifier`` using `pypi &lt;https://pypi.org/&gt;`_, simply run:.. code-block:: console    $ pip install email-verifierIn the root of your project directory.Usage-----Once you have `email-verified` installed, you can use it to easily verify anyemail address... code-block:: python    from emailverifier import Client    from emailverifier import exceptions    client = Client('Your-api-key')    try:        data = client.get(&quot;support@whoisxmlapi.com&quot;)    except exceptions.HttpException:        # If you get here, it means service returned HTTP error code        pass    except exceptions.GeneralException:        # If you get here, it means you cannot connect to the service        pass    except exceptions.UndefinedVariableException:        # If you get here, it means you forgot to specify the API key        pass    except exceptions.InvalidArgumentException:        # If you get here, it means you specified invalid argument        # (options should be a dictionary)        pass    except:        pass        # Something else happened related. Maybe you hit CTRL-C        # while the program was running, the kernel is killing your process, or        # something else all together.    print(data)    # Use data.json_string to get raw data in JSON.    # You can access any response field as a class property    # by converting field name from &quot;camelCase&quot; to &quot;snake_case&quot;    print(&quot;Email address: &quot; + data.email_address)    print(&quot;Format: &quot; + str(data.format_check))    print(&quot;DNS: &quot; + str(data.dns_check))    print(&quot;SMTP: &quot; + str(data.smtp_check))    print(&quot;Catch all: &quot; + str(data.catch_all_check))    print(&quot;Disposable: &quot; + str(data.disposable_check))    print(&quot;Free: &quot; + str(data.free_check))    print(&quot;Last audit date: &quot; + str(data.audit.audit_updated_date))Here's the sort of data you might get back when performing a email verificationrequest:.. code-block:: json    {      &quot;emailAddress&quot;: &quot;support@whoisxmlapi.com&quot;,      &quot;formatCheck&quot;: &quot;true&quot;,      &quot;smtpCheck&quot;: &quot;true&quot;,      &quot;dnsCheck&quot;: &quot;true&quot;,      &quot;freeCheck&quot;: &quot;false&quot;,      &quot;disposableCheck&quot;: &quot;false&quot;,      &quot;catchAllCheck&quot;: &quot;true&quot;,      &quot;mxRecords&quot;: [        &quot;ALT1.ASPMX.L.GOOGLE.com&quot;,        &quot;ALT2.ASPMX.L.GOOGLE.com&quot;,        &quot;ASPMX.L.GOOGLE.com&quot;,        &quot;ASPMX2.GOOGLEMAIL.com&quot;,        &quot;ASPMX3.GOOGLEMAIL.com&quot;,        &quot;mx.yandex.net&quot;      ],      &quot;audit&quot;: {        &quot;auditCreatedDate&quot;: &quot;2018-04-19 18:12:45.000 UTC&quot;,        &quot;auditUpdatedDate&quot;: &quot;2018-04-19 18:12:45.000 UTC&quot;      }    }</longdescription>
</pkgmetadata>