<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![CircleCI](https://circleci.com/gh/nf1s/fastapi-camelcase.svg?style=shield)](https://circleci.com/gh/nf1s/fastapi-camelcase) [![codecov](https://codecov.io/gh/nf1s/fastapi-camelcase/branch/master/graph/badge.svg)](https://codecov.io/gh/nf1s/fastapi-camelcase) [![Downloads](https://pepy.tech/badge/fastapi-camelcase)](https://pepy.tech/project/fastapi-camelcase) ![GitHub Pipenv locked Python version](https://img.shields.io/github/pipenv/locked/python-version/nf1s/fastapi-camelcase) ![GitHub](https://img.shields.io/github/license/nf1s/fastapi-camelcase)# Fastapi CamelcasePackage for providing a class for camelizing request and response bodies for fastapiwhile keeping your python code snake cased.Full documentation can be found [here](https://nf1s.github.io/fastapi-camelcase/)## How to install```bashpip install fastapi-camelcase```## Dependencies    pydantic    pyhumps## How to use```python# using CamelModel instead of Pydantic BaseModelfrom fastapi_camelcase import CamelModelclass User(CamelModel):    first_name: str    last_name: str    age: int```## How to use (full example)```pythonimport uvicornfrom fastapi import FastAPIfrom fastapi_camelcase import CamelModelclass User(CamelModel):    first_name: str    last_name: str    age: intapp = FastAPI()@app.get(&quot;/user/get&quot;, response_model=User)async def get_user():    return User(first_name=&quot;John&quot;, last_name=&quot;Doe&quot;, age=30)@app.post(&quot;/user/create&quot;, response_model=User)async def create_user(user: User):    return userif __name__ == &quot;__main__&quot;:    uvicorn.run(app, host=&quot;0.0.0.0&quot;, port=8000)```</longdescription>
</pkgmetadata>