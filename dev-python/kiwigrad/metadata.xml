<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Kiwigrad&lt;h1 align=&quot;center&quot;&gt;&lt;img src=&quot;logo.png&quot; width=&quot;300&quot;&gt;&lt;/h1&gt;&lt;br&gt;[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity) [![PyPI version fury.io](https://badge.fury.io/py/kiwigrad.svg)](https://pypi.python.org/pypi/kiwigrad/)Kiwigrad? yes, it is another version of [micrograd](https://github.com/karpathy/micrograd) that was created just for fun and experimentation.## Install To install the current release,```consolepip install kiwigrad```## Kiwigrad LibraryKiwigrad library is a modified version of the [micrograd](https://github.com/karpathy/micrograd) package with additional features. The main features added to Kiwigrad are:* Methods for saving and loading the weights of a trained model.* Support for RNN1 feedforward neural networks.### Example ImplementationHere's an example implementation of a MLP net using Kiwigrad:```python from kiwigrad import * class PotNet(MLP):    def __init__(self):        layers = [            Layer(nin=2, nout=16, bias=True, activation=&quot;relu&quot;),            Layer(nin=16, nout=16, bias=True, activation=&quot;relu&quot;),            Layer(nin=16, nout=1, bias=True, activation=&quot;linear&quot;)        ]        super().__init__(layers=layers)model = PotNet()```</longdescription>
</pkgmetadata>