<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyTorch Datasets[![PyPI version](https://badge.fury.io/py/pt-datasets.svg)](https://badge.fury.io/py/pt-datasets)[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)[![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-3916/)![](assets/term.png)## OverviewThis repository is meant for easier and faster access to commonly usedbenchmark datasets. Using this repository, one can load the datasets in aready-to-use fashion for PyTorch models. Additionally, this can be used to loadthe low-dimensional features of the aforementioned datasets, encoded using PCA,t-SNE, or UMAP.## Datasets- MNIST- Fashion-MNIST- EMNIST-Balanced- CIFAR10- SVHN- MalImg- AG News- IMDB- Yelp- 20 Newsgroups- KMNIST- Wisconsin Diagnostic Breast Cancer- [COVID19 binary classification](https://github.com/lindawangg/COVID-Net)- [COVID19 multi-classification](https://github.com/lindawangg/COVID-Net)_Note on COVID19 datasets: Training models on this is not intended to producemodels for direct clinical diagnosis. Please do not use the model output forself-diagnosis, and seek help from your local health authorities._## UsageIt is recommended to use a virtual environment to isolate the project dependencies.```shell script$ virtualenv env --python=python3  # we use python 3$ pip install pt-datasets  # install the package```We can then use this package for loading ready-to-use data loaders,```pythonfrom pt_datasets import load_dataset, create_dataloader# load the training and test datatrain_data, test_data = load_dataset(name=&quot;cifar10&quot;)# create a data loader for the training datatrain_loader = create_dataloader(    dataset=train_data, batch_size=64, shuffle=True, num_workers=1)...# use the data loader for trainingmodel.fit(train_loader, epochs=10)```We can also encode the dataset features to a lower-dimensional space,```pythonimport seaborn as snsimport matplotlib.pyplot as pltfrom pt_datasets import load_dataset, encode_features# load the training and test datatrain_data, test_data = load_dataset(name=&quot;fashion_mnist&quot;)# get the numpy array of the features# the encoders can only accept np.ndarray typestrain_features = train_data.data.numpy()# flatten the tensorstrain_features = train_features.reshape(    train_features.shape[0], -1)# get the labelstrain_labels = train_data.targets.numpy()# get the class namesclasses = train_data.classes# encode training features using t-SNEencoded_train_features = encode_features(    features=train_features,    seed=1024,    encoder=&quot;tsne&quot;)# use seaborn stylingsns.set_style(&quot;darkgrid&quot;)# scatter plot each feature w.r.t classfor index in range(len(classes)):    plt.scatter(        encoded_train_features[train_labels == index, 0],        encoded_train_features[train_labels == index, 1],        label=classes[index],        edgecolors=&quot;black&quot;    )plt.legend(loc=&quot;upper center&quot;, title=&quot;Fashion-MNIST classes&quot;, ncol=5)plt.show()```![](assets/tsne_fashion_mnist.png)## CitationWhen using the Malware Image classification dataset, kindly use the followingcitations,- BibTex```@article{agarap2017towards,    title={Towards building an intelligent anti-malware system: a deep learning approach using support vector machine (SVM) for malware classification},    author={Agarap, Abien Fred},    journal={arXiv preprint arXiv:1801.00318},    year={2017}}```- MLA```Agarap, Abien Fred. &quot;Towards building an intelligent anti-malware system: adeep learning approach using support vector machine (svm) for malwareclassification.&quot; arXiv preprint arXiv:1801.00318 (2017).```If you use this library, kindly cite it as,```@misc{agarap2020pytorch,    author       = &quot;Abien Fred Agarap&quot;,    title        = &quot;{PyTorch} datasets&quot;,    howpublished = &quot;\url{https://gitlab.com/afagarap/pt-datasets}&quot;,    note         = &quot;Accessed: 20xx-xx-xx&quot;}```## License```PyTorch Datasets utility repositoryCopyright (C) 2020-2023  Abien Fred AgarapThis program is free software: you can redistribute it and/or modifyit under the terms of the GNU Affero General Public License as publishedby the Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU Affero General Public License for more details.You should have received a copy of the GNU Affero General Public Licensealong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.```</longdescription>
</pkgmetadata>