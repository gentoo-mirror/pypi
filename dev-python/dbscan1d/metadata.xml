<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DBSCAN1D[![Coverage](https://codecov.io/gh/d-chambers/dbscan1d/branch/master/graph/badge.svg)](https://codecov.io/gh/d-chambers/dbscan1d)[![Supported Versions](https://img.shields.io/pypi/pyversions/dbscan1d.svg)](https://pypi.python.org/pypi/dbscan1d)[![PyPI](https://pepy.tech/badge/dbscan1d)](https://pepy.tech/project/dbscan1d)[![Licence](https://www.gnu.org/graphics/lgplv3-88x31.png)](https://www.gnu.org/licenses/lgpl.html)dbscan1d is a 1D implementation of the [DBSCAN algorithm](https://en.wikipedia.org/wiki/DBSCAN). It was created to efficientlypreform clustering on large 1D arrays.[Sci-kit Learn's DBSCAN implementation](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html) doesnot have a special case for 1D, where calculating the full distance matrix is wasteful. It is much better to simply sortthe input array and performing efficient bisects for finding closest points. Here are the results of running the simpleprofile script included with the package. In every case DBSCAN1D is much faster than scikit learn's implementation.![image](https://github.com/d-chambers/dbscan1d/raw/master/profile_results.png)## InstallationSimply use pip to install dbscan1d:```bashpip install dbscan1d```It only requires numpy.## Quickstartdbscan1d is designed to be interchangable with sklearn's implementation in almostall cases. The exception is that the `weights` parameter is not yet supported.```pythonfrom sklearn.datasets import make_blobsfrom dbscan1d.core import DBSCAN1D# make blobs to test clusteringX = make_blobs(1_000_000, centers=2, n_features=1)[0]# init dbscan objectdbs = DBSCAN1D(eps=.5, min_samples=4)# get labels for each pointlabels = dbs.fit_predict(X)# show core point indicesdbs.core_sample_indices_# get values of core pointsdbs.components_```## Notes- dbscan1d can return different group numbers than sklearn for non-core points which are withineps distances of core points for two separate groups. For example: `--C1--C1--P--C2--C2`Here C1 and C2 are core points for group 1 and group 2, respectively. If P is within eps of both C1 andC2, dbscan1d will assign it the same label as the core point that is closest. Sklearn doesn't always do this.</longdescription>
</pkgmetadata>