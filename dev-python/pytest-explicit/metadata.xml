<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pytest-Explicit[![pypi version](https://img.shields.io/pypi/v/pytest-explicit)](https://pypi.org/project/pytest-explicit/)[![python versions](https://img.shields.io/pypi/pyversions/pytest-explicit)](https://pypi.org/project/pytest-explicit/)[![package state](https://img.shields.io/pypi/status/pytest-explicit)](https://pypi.org/project/pytest-explicit/)[![pypi release](https://img.shields.io/github/workflow/status/taliamax/pytest-explicit/release)](https://github.com/taliamax/pytest-explicit/actions/workflows/release.yaml)[![pypi downloads](https://img.shields.io/pypi/dm/pytest-explicit)](https://pypi.org/project/pytest-explicit/)[![license](https://img.shields.io/pypi/l/pytest-explicit)](https://github.com/taliamax/pytest-explicit/blob/main/LICENSE)## Some tests you just don't want to runHey, I get it. Sometimes we write tests, but we don't actually want to waitfor them to finish executing. Whether they're slow tests, they need somedependencies you don't have, or they aren't related to the work youdo, there's some tests that just weren't meant to be run by devs in the ageof CI/CD platforms. That's where `pytest-explicit` comes in.This plugin allows developers to specify test markers that should be ignoredby default when running `pytest`, but also quickly bypass this behaviourfor CI/CD. Just add a `--run-all` flag to your pytest command for your testpipeline, and this plugin won't skip anything!## ConfiguringIf all you want to do is skip slow tests by default, you can stop readingnow. Out-of-the-box, `pytest-explicit` will make any test marked `slow`require you to pass the `--run-slow` (or `--run-all`) for them to takeup precious developer time.Need more ignored tests? Just add the `explicit-only` option to yourpytest config file, and `pytest-explicit` will pick up the markersspecified and dynamically add `--run-&lt;marker&gt;` CLI options to pytest. Here'sa sample `setup.cfg` file below!```ini[tool:pytest]markers =    slow: Marks a slow test    memory_intensive: Marks a test that needs at least 16 gb RAM to run    smoke: Marks a test that gives early alert to the health of the apptestpaths = testsexplicit-only =    slow    memory_intensive```With this configuration file, any test marked with either `slow` or`memory_intensive` won't run unless the appropriate CLI flags are passed!</longdescription>
</pkgmetadata>