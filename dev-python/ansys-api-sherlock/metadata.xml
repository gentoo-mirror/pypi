<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>### ansys-api-sherlock gRPC Interface PackageThis Python package contains the auto-generated gRPC Python interface files forSherlock.#### InstallationProvided that wheels have been published to public PyPI, you can install the latest packagewith this command:```pip install ansys-api-sherlock```Otherwise, in the PySherlock documentation, see the instructions for downloading and installingthis package in`Install packages &lt;https://sherlock.docs.pyansys.com/version/dev/getting_started/installation.html&gt;`_.#### Build packagesTo build the gRPC packages, run these commands:```pip install buildpython -m build```The preceding commands create both the source distribution containing only the PROTO filesand the wheel containing the PROTO files and build Python interface files.Note that the interface files are identical regardless of the version of Pythonused to generate them, but the last pre-built wheel for ``grpcio~=1.17`` wasPython 3.7. To improve your build time, use Python 3.7 when building thewheel.#### Manual deploymentAfter building the packages, manually deploy them with these commands:```pip install twinetwine upload dist/*```Note that this is automatically done through CI/CD.#### Automatic deploymentThis repository contains a ``.github`` directory with the ``ci.yml`` workflowfile. This file uses GitHub Actions to automatically build thesource and wheel packages for these gRPC Python interface files. By default,these are built on PRs, the main branch, and on tags when pushing. Artifactsare uploaded for each PR.To publicly release wheels to PyPI, ensure that your branch is up to date and thenpush tags. For example, to push tags for version ``v0.5.0``, you would use these commands:```bashgit tag v0.5.0git push --tags```</longdescription>
</pkgmetadata>