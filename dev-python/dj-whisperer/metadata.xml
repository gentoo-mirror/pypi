<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django Whisperer[![Build status](https://img.shields.io/bitbucket/pipelines/akinonteam/dj-whisperer)](https://bitbucket.org/akinonteam/dj-whisperer/addon/pipelines/home)[![Documentation status](https://readthedocs.org/projects/dj-whisperer/badge/?version=latest)](https://dj-whisperer.readthedocs.io/en/latest/?badge=latest)![PyPI](https://img.shields.io/pypi/v/dj-whisperer)![PyPI - Django version](https://img.shields.io/pypi/djversions/dj-whisperer)![PyPI - Python version](https://img.shields.io/pypi/pyversions/dj-whisperer)![PyPI - License](https://img.shields.io/pypi/l/dj-whisperer)Whisperer informs subscribed users via an URL when a specific event occurs.## InstallationInstallation using pip:```pip install dj-whisperer````whisperer` package has to be added to `INSTALLED_APPS` and `migrate` command has to be run.```pythonINSTALLED_APPS = (    # other apps here...    'whisperer',)```## Sample ScenarioLet's give an example using `Package` model. When an event occurs related to a package, subscribed users are gonna be informed. To do so, firstly which events to subscribe must be determined. In order to learn when a package created:```pythonfrom django.db.models.signals import post_savefrom whisperer.events import WhispererEvent, registryfrom whisperer.tasks import deliver_eventclass PackageCreateEvent(WhispererEvent):    serializer_class = PackageSerializer    event_type = 'package-created'registry.register(PackageCreateEvent)def signal_receiver(instance, created=False, **kwargs):    if created:        deliver_event(instance, 'package-created')post_save.connect(signal_receiver, Package)```When database transaction succeeds, in short when `transaction.on_commit()`, `deliver_event` must be triggered.Subscribed users now can be informed that a package created if they have created a `Webhook`.```pythonimport requestsrequests.post(    url='https://your-app.com/whisperer/hooks/',    headers={        'Authorization': 'Token &lt;secret-login-token&gt;',    },    json={        'event_type': 'package-created',        'secret_key': 'secret',        'target_url': 'https://example.com/',    })```When a package created, `uuid`, `type` &amp; `data` passed through `PackageSerializer` will be posted to https://example.com/.```pythonimport requestsrequests.post(    url='https://example.com/',    headers={        'Content-Type': 'application/json',        'X-Whisperer-Event': 'package-created',    },    json={        'event': {            'type': 'package-created',            'uuid': 'da81e85139824c6187dd1e58a7d3f971',        },        'data': {            'id': 61,            'transfer_id': 49,            'order_number': '248398923123',            '.....': '......',        }    })```In order to cancel the subscription:```pythonimport requestsrequests.delete(    url='https://your-app.com/whisperer/hooks/&lt;webhook-id&gt;/',    headers={        'Authorization': 'Token &lt;secret-login-token&gt;',    })```</longdescription>
</pkgmetadata>