<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># 🐍 python-vaporetto 🛥[Vaporetto](https://github.com/daac-tools/vaporetto) is a fast and lightweight pointwise prediction based tokenizer.This is a Python wrapper for Vaporetto.[![PyPI](https://img.shields.io/pypi/v/vaporetto)](https://pypi.org/project/vaporetto/)[![Build Status](https://github.com/daac-tools/python-vaporetto/actions/workflows/CI.yml/badge.svg)](https://github.com/daac-tools/python-vaporetto/actions)[![Documentation Status](https://readthedocs.org/projects/python-vaporetto/badge/?version=latest)](https://python-vaporetto.readthedocs.io/en/latest/?badge=latest)## Installation### Install pre-built package from PyPIRun the following command:```$ pip install vaporetto```### Build from sourceYou need to install the Rust compiler following [the documentation](https://www.rust-lang.org/tools/install) beforehand.daachorse uses `pyproject.toml`, so you also need to upgrade pip to version 19 or later.```$ pip install --upgrade pip```After setting up the environment, you can install daachorse as follows:```$ pip install git+https://github.com/daac-tools/python-vaporetto```## Example Usagepython-vaporetto does not contain model files.To perform tokenization, follow [the document of Vaporetto](https://github.com/daac-tools/vaporetto) to download distribution models or train your own models beforehand.Check the version number as shown below to use compatible models:```python&gt;&gt;&gt; import vaporetto&gt;&gt;&gt; vaporetto.VAPORETTO_VERSION'0.6.3'```Examples:```python# Import vaporetto module&gt;&gt;&gt; import vaporetto# Load the model file&gt;&gt;&gt; with open('tests/data/vaporetto.model', 'rb') as fp:...     model = fp.read()# Create an instance of the Vaporetto&gt;&gt;&gt; tokenizer = vaporetto.Vaporetto(model, predict_tags = True)# Tokenize&gt;&gt;&gt; tokenizer.tokenize_to_string('まぁ社長は火星猫だ')'まぁ/名詞/マー 社長/名詞/シャチョー は/助詞/ワ 火星/名詞/カセー 猫/名詞/ネコ だ/助動詞/ダ'&gt;&gt;&gt; tokens = tokenizer.tokenize('まぁ社長は火星猫だ')&gt;&gt;&gt; len(tokens)6&gt;&gt;&gt; tokens[0].surface()'まぁ'&gt;&gt;&gt; tokens[0].tag(0)'名詞'&gt;&gt;&gt; tokens[0].tag(1)'マー'&gt;&gt;&gt; [token.surface() for token in tokens]['まぁ', '社長', 'は', '火星', '猫', 'だ']```## Note for distributed modelsThe distributed models are compressed in zstd format. If you want to load these compressed models,you must decompress them outside the API.```python&gt;&gt;&gt; import vaporetto&gt;&gt;&gt; import zstandard  # zstandard package in PyPI&gt;&gt;&gt; dctx = zstandard.ZstdDecompressor()&gt;&gt;&gt; with open('tests/data/vaporetto.model.zst', 'rb') as fp:...    with dctx.stream_reader(fp) as dict_reader:...        tokenizer = vaporetto.Vaporetto(dict_reader.read(), predict_tags = True)```## Note for KyTea's modelsYou can also use KyTea's models as follows:```python&gt;&gt;&gt; with open('path/to/jp-0.4.7-5.mod', 'rb') as fp:  # doctest: +SKIP...     tokenizer = vaporetto.Vaporetto.create_from_kytea_model(fp.read())```Note: Vaporetto does not support tag prediction with KyTea's models.## [Speed Comparison](https://github.com/daac-tools/python-vaporetto/wiki/Speed-Comparison)## LicenseLicensed under either of * Apache License, Version 2.0   ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0) * MIT license   ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)at your option.## ContributionSee [the guidelines](./CONTRIBUTING.md).</longdescription>
</pkgmetadata>