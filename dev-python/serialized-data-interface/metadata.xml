<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Serialized Data Interface Libraryhttps://pypi.org/project/serialized-data-interface/This libraries enables its user to create serialized and validated Juju Operator interfaces.An interface Schema will be defined through YAML e.g:```yamlv1:  provides:    type: object    properties:      access-key:        type: string      namespace:        type: ['string', 'null']      port:        type: number      secret-key:        type: string      secure:        type: boolean      service:        type: string    required:      - access-key      - port      - secret-key      - secure      - service```When our charms interchange data, this library will validate the data through the schema on bothends.# UsageIn our charm metadata we would add the following lines to define our schema and the supportedversions:```yamlprovides:  oidc-client:    interface: oidc-client    schema: https://raw.githubusercontent.com/canonical/operator-schemas/oidc-schemas/oidc-client.yaml    versions: [v1]```In this case SDI will pull the schema from Github during deployment. If we want to deploy our charmin environments where Github isn't available we can pull the schemas during our build process byadding some lines like this in our `tox.ini` file:```[testenv:build]commands =    charmcraft build    python3 -m serialized_data_interface.local_sdi```# Real World Example- Minio with Provider Interface  - https://github.com/canonical/minio-operator/- Argo Controller with Requirer Interface:  - https://github.com/canonical/argo-operators/# TODO- Currently only provides data to App relations, should also support unit relations.</longdescription>
</pkgmetadata>