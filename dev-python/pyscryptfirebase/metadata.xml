<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyscryptfirebaseA Python wrapper of Firebase's custom scrypt implementation.  A combined fork of scrypt and Firebase scrypt.Firebase scrypt for password hashing: https://github.com/firebase/scryptPython library for scrypt: https://bitbucket.org/mhallin/py-scrypt/src/default/Instructions============Note that if you have the Python module `scrypt` installed, you will need to remove it to use this library.This library is a fork of `scrypt` and uses a modified C extension by the same name as `scrypt`.  Using bothlibraries at the same time will cause a naming collision on the C module `_scrypt`.Install dependencies according to your Python version and OS:```# Debian/Ubuntu$ sudo apt-get install build-essential libssl-dev python-dev# Fedora, RHEL$ sudo yum install gcc openssl-devel python-devel# Alpine Linux (Docker Containers)$ apk add gcc openssl-dev python-dev# (If you're on Python3, install the Python3 versions of the above packages)# Mac# Without setting the flags below, install will fail to find the necessary files$ brew install openssl$ export CFLAGS=&quot;-I$(brew --prefix openssl)/include $CFLAGS&quot;$ export LDFLAGS=&quot;-L$(brew --prefix openssl)/lib $LDFLAGS&quot;```Then install `pyscriptfirebase`:```$ pip install pyscriptfirebase```Example========This module is intended to give the same output as the scrypt password hashing function that Firebaseuses.Firebase Scrypt Utility example:```# Params from the project's password hash parametersbase64_signer_key=&quot;jxspr8Ki0RYycVU8zykbdLGjFQ3McFUH0uiiTvC8pVMXAn210wjLNmdZJzxUECKbm0QsEmYUSDzZvpjeJ9WmXA==&quot;base64_salt_separator=&quot;Bw==&quot;rounds=8memcost=14# Params from the exported accountbase64_salt=&quot;42xEC+ixf3L2lw==&quot;# The users raw text passwordpassword=&quot;user1password&quot;# Generate the hash# Expected output:# lSrfV15cpx95/sZS2W9c9Kp6i/LVgQNDNC/qzrCnh1SAyZvqmZqAjTdn3aoItz+VHjoZilo78198JAdRuid5lQ==echo `./scrypt &quot;$base64_signer_key&quot; &quot;$base64_salt&quot; &quot;$base64_salt_separator&quot; &quot;$rounds&quot; &quot;$memcost&quot; -P &lt;&lt;&lt; &quot;$password&quot;`````pyscryptfirebase` example:```import base64import pyscryptfirebasebase64_signer_key = base64.b64decode(&quot;jxspr8Ki0RYycVU8zykbdLGjFQ3McFUH0uiiTvC8pVMXAn210wjLNmdZJzxUECKbm0QsEmYUSDzZvpjeJ9WmXA==&quot;)base64_salt_separator = base64.b64decode(&quot;Bw==&quot;)rounds = 8memcost = 14base64_salt = base64.b64decode(&quot;42xEC+ixf3L2lw==&quot;)password = &quot;user1password&quot;# Expected output:# lSrfV15cpx95/sZS2W9c9Kp6i/LVgQNDNC/qzrCnh1SAyZvqmZqAjTdn3aoItz+VHjoZilo78198JAdRuid5lQ==output = pyscryptfirebase.encrypt(    base64_signer_key,    base64_salt,    base64_salt_separator,    rounds,    memcost,    password)encoded_output = base64.b64encode(result)print(encoded_output)```</longdescription>
</pkgmetadata>