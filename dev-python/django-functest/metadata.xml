<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============django-functest===============.. image:: https://github.com/django-functest/django-functest/workflows/Python%20package/badge.svg   :target: https://github.com/django-functest/django-functest/actions?query=workflow%3A%22Python+package%22+branch%3Amaster.. image:: https://readthedocs.org/projects/django-functest/badge/?version=latest   :target: https://django-functest.readthedocs.org/en/latest/Helpers for creating high-level functional tests in Django, with a unified APIfor WebTest and Selenium tests.    Exploring django-functest makes me angry! Why? Because I've wasted so much    time writing low-level, boilerplate-filled tests for the past few years    instead of using it —    `jerivas &lt;https://github.com/stephenmcd/mezzanine/issues/1012#issuecomment-666802439&gt;`_What is `WebTest&lt;https://docs.pylonsproject.org/projects/webtest/en/latest/index.html&gt;`__?Imagine a text-based, HTML-only browser that doesn’t load CSS, Javascript etc,operates directly on a WSGI interface in a synchronous fashion for performanceand robustness, and is controlled programmatically.What is `Selenium &lt;https://www.selenium.dev/&gt;`__? A tool that opens full browserslike Firefox and Chrome (with an isolated profile), and provides an API forcontrolling them.For an idea of what writing tests with django-functest looks like in practice,you might be interested in the video in our `writing tests interactivelydocumentation&lt;https://django-functest.readthedocs.io/en/latest/interactive.html&gt;`_.Documentation-------------The full documentation is at https://django-functest.readthedocs.org.Installation------------Python 3.7 and later, Django 2.0 and later are required.::   pip install django-functestSee also the `dependencies documentation&lt;http://django-functest.readthedocs.io/en/latest/installation.html#dependencies&gt;`_for important compatibility information.Features--------* A simplified API for writing functional tests in Django (tests that check the  behaviour of entire views, or sets of views, e.g. a checkout process).* A unified API that abstracts over both `WebTest  &lt;http://webtest.pythonpaste.org/en/latest/&gt;`__ and `Selenium  &lt;https://pypi.python.org/pypi/selenium&gt;`__ - write two tests at once!* Many of the gotchas and difficulties of using WebTest and Selenium ironed out  for you.* Well tested - as well as its own test suite, which is run against Firefox  and Chrome, it is also used by `Wolf &amp; Badger  &lt;https://www.wolfandbadger.com/&gt;`_ for tests covering many business critical  functionalities.* Supports running with pytest (using pytest-django) as well as Django’s  ``manage.py test``Typical usage-------------In your tests.py:.. code-block:: python   from django.test import LiveServerTestCase, TestCase   from django_functest import FuncWebTestMixin, FuncSeleniumMixin, FuncBaseMixin   class ContactTestBase(FuncBaseMixin):       # Abstract class, doesn't inherit from TestCase       def test_contact_form(self):           self.get_url(&quot;contact_form&quot;)           self.fill(               {                   &quot;#id_name&quot;: &quot;Joe&quot;,                   &quot;#id_message&quot;: &quot;Hello&quot;,               }           )           self.submit(&quot;input[type=submit]&quot;)           self.assertTextPresent(&quot;Thanks for your message&quot;)   class ContactWebTest(ContactTestBase, FuncWebTestMixin, TestCase):       pass   class ContactSeleniumTest(ContactTestBase, FuncSeleniumMixin, LiveServerTestCase):       passIn this way, you can write a single test with a high-level API, and run it intwo ways - using a fast, WSGI-based method which emulates typical HTTP usage of abrowser, and using a full browser that actually executes Javascript (if present)etc.The approach taken by django-functest is ideal if your web app is mostly a&quot;classic&quot; app with server-side rendered HTML combined with a careful sprinklingof Javascript to enhance the UI, which you also need to be able to test. If suchan approach seems old-fashioned to you, have a look at `htmx.org&lt;https://htmx.org/&gt;`_ or `hotwire &lt;https://hotwired.dev/&gt;`_ and get with the newkids! (OK most of are actually quite old but we make fast web sites...)Under the hood, the WSGI-based method uses and builds upon `WebTest&lt;http://webtest.pythonpaste.org/en/latest/&gt;`_ and `django-webtest&lt;https://pypi.python.org/pypi/django-webtest&gt;`_.django-functest provides its functionality as mixins, so that you can have yourown base class for tests.Contributing and tests----------------------See `CONTRIBUTING.rst &lt;CONTRIBUTING.rst&gt;`_ for information about running the test suite andcontributing to django-functest.Paid support------------Some of the maintainers are able to provide support on a paid basis for thisOpen Source project. This includes the following kinds of things:* Paying for bug fixes or new features (with the understanding that these  changes will become freely available as part of the project and are not  'owned' by the person who paid for them).* Debugging or other support for integrating django-functest into your project.* Writing a test suite for you from scratch using django-functest.If you are interested in these, you can contact the following developers:* Luke Plant - long time Django expert and contributor - `info and status &lt;https://lukeplant.me.uk/development-work.html&gt;`_.Credits-------This library was written originally by `spookylukey &lt;https://github.com/spookylukey/&gt;`_,further improved by developers at `Wolf &amp; Badger&lt;https://www.wolfandbadger.com/&gt;`_, and released with the kind permission of thatcompany.Tools used in rendering this package:*  Cookiecutter_*  `cookiecutter-djangopackage`_.. _Cookiecutter: https://github.com/audreyr/cookiecutter.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage</longdescription>
</pkgmetadata>