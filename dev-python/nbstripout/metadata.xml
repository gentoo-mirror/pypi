<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/kynan/nbstripout/actions/workflows/tests.yml/badge.svg    :target: https://github.com/kynan/nbstripout/actions/workflows/tests.yml.. image:: https://img.shields.io/pypi/dm/nbstripout    :target: https://pypi.org/project/nbstripout.. image:: https://img.shields.io/pypi/v/nbstripout    :target: https://pypi.org/project/nbstripout.. image:: https://img.shields.io/conda/vn/conda-forge/nbstripout    :target: https://anaconda.org/conda-forge/nbstripout.. image:: https://img.shields.io/pypi/pyversions/nbstripout    :target: https://pypi.org/project/nbstripout.. image:: https://img.shields.io/pypi/format/nbstripout    :target: https://pypi.org/project/nbstripout.. image:: https://img.shields.io/pypi/l/nbstripout    :target: https://raw.githubusercontent.com/kynan/nbstripout/master/LICENSE.txt.. image:: https://img.shields.io/github/stars/kynan/nbstripout?style=social    :target: https://github.com/kynan/nbstripout/stargazers.. image:: https://img.shields.io/github/forks/kynan/nbstripout?style=social    :target: https://github.com/kynan/nbstripout/network/membersnbstripout: strip output from Jupyter and IPython notebooks~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Opens a notebook, strips its output, and writes the outputless version to theoriginal file.Useful mainly as a git filter or pre-commit hook for users who don't want totrack output in VCS.This does mostly the same thing as the `Clear All Output` command in thenotebook UI.Based on https://gist.github.com/minrk/6176788.Python 3 only=============As of version 0.6.1, nbstripout supports Python 3 *only*. If you need to usePython 2.7, install nbstripout 0.3.10 ::    pip install nbstripout==0.3.10Screencast==========This screencast demonstrates the use and working principles behind thenbstripout utility and how to use it as a Git filter:.. image:: https://i.imgur.com/7oQHuJ5.png    :target: https://www.youtube.com/watch?v=BEMP4xacrVcInstallation============You can download and install the latest version of ``nbstripout`` from PyPI_,the Python package index, as follows: ::    pip install --upgrade nbstripoutWhen using the Anaconda_ Python distribution, install ``nbstripout`` via theconda_ package manager from conda-forge_: ::    conda install -c conda-forge nbstripoutUsage=====Strip output from IPython / Jupyter / Zeppelin notebook (modifies the file in-place): ::    nbstripout FILE.ipynb [FILE2.ipynb ...]    nbstripout FILE.zplnForce processing of non ``.ipynb`` files: ::    nbstripout -f FILE.ipynb.bakFor using Zeppelin mode while processing files with other extensions use: ::    nbstripout -m zeppelin -f &lt;file.ext&gt;Write to stdout e.g. to use as part of a shell pipeline: ::    cat FILE.ipynb | nbstripout &gt; OUT.ipynb    cat FILE.zpln | nbstripout -m zeppelin &gt; OUT.zplnor ::    nbstripout -t FILE.ipynb | other-commandSet up the git filter and attributes as described in the manual installationinstructions below: ::    nbstripout --installSet up the git filter using ``.gitattributes`` ::    nbstripout --install --attributes .gitattributesSet up the git filter in your global ``~/.gitconfig`` ::    nbstripout --install --globalSet up the git filter in your system-wide ``$(prefix)/etc/gitconfig`` (most installations will require you to ``sudo``) ::    [sudo] nbstripout --install --systemRemove the git filter and attributes: ::    nbstripout --uninstallRemove the git filter from your global ``~/.gitconfig`` and attributes ::    nbstripout --uninstall --globalRemove the git filter from your system-wide ``$(prefix)/etc/gitconfig`` and attributes ::    [sudo] nbstripout --uninstall --systemRemove the git filter and attributes from ``.gitattributes``: ::    nbstripout --uninstall --attributes .gitattributesCheck if ``nbstripout`` is installed in the current repository(exits with code 0 if installed, 1 otherwise): ::    nbstripout --is-installedPrint status of ``nbstripout`` installation in the current repository andconfiguration summary of filter and attributes if installed(exits with code 0 if installed, 1 otherwise): ::    nbstripout --statusDo a dry run and only list which files would have been stripped: ::    nbstripout --dry-run FILE.ipynb [FILE2.ipynb ...]Print the version: ::    nbstripout --versionShow this help page: ::    nbstripout --helpConfiguration files+++++++++++++++++++The following table shows in which files the ``nbstripout`` filter andattribute configuration is written to for given extra flags to ``--install``and ``--uninstall``:======================================== =========================== ===============================flags                                    filters                     attributes======================================== =========================== ===============================none                                     ``.git/config``             ``.git/info/attributes````--global``                             ``~/.gitconfig``            ``~/.config/git/attributes````--system``                             ``$(prefix)/etc/gitconfig`` ``$(prefix)/etc/gitattributes````--attributes=.gitattributes``          ``.git/config``             ``.gitattributes````--global --attributes=.gitattributes`` ``~/.gitconfig``            ``.gitattributes``======================================== =========================== ===============================Install globally++++++++++++++++Usually, ``nbstripout`` is installed per repository so you can choose where touse it or not. You can choose to set the attributes in ``.gitattributes`` andcommit this file to your repository, however there is no way to have git set upthe filters automatically when someone clones a repository. This is by design,to prevent you from executing arbitrary and potentially malicious code whencloning a repository.To install ``nbstripout`` for all your repositories such that you no longerneed to run the installation once per repository, install as follows: ::    mkdir -p ~/.config/git  # This folder may not exist    nbstripout --install --global --attributes=~/.config/git/attributesThis will set up the filters and diff driver in your ``~/.gitconfig`` andinstruct git to apply them to any ``.ipynb`` file in any repository.Note that you need to uninstall with the same flags: ::    nbstripout --uninstall --global --attributes=~/.config/git/attributesInstall system-wide+++++++++++++++++++To install ``nbstripout`` system-wide so that it applies to all repositoriesfor all users, install as follows (most installations will require you to ``sudo``): ::    [sudo] nbstripout --install --systemThis will set up the filters and diff driver in ``$(prefix)/etc/gitconfig`` andinstruct git to apply them to any ``.ipynb`` file in any repository for any user.Note that you need to uninstall with the same flags: ::    [sudo] nbstripout --uninstall --systemApply retroactively+++++++++++++++++++``nbstripout`` can be used to rewrite an existing Git repository using``git filter-branch`` to strip output from existing notebooks. This invocationuses ``--index-filter`` and operates on all ipynb-files in the repo: ::    git filter-branch -f --index-filter '        git checkout -- :*.ipynb        find . -name &quot;*.ipynb&quot; -exec nbstripout &quot;{}&quot; +        git add . --ignore-removal    'If the repository is large and the notebooks are in a subdirectory it will runfaster with ``git checkout -- :&lt;subdir&gt;/*.ipynb``. You will get a warning forcommits that do not contain any notebooks, which can be suppressed by pipingstderr to ``/dev/null``.This is a potentially slower but simpler invocation using ``--tree-filter``: ::    git filter-branch -f --tree-filter 'find . -name &quot;*.ipynb&quot; -exec nbstripout &quot;{}&quot; +'Removing empty cells++++++++++++++++++++Drop empty cells i.e. cells where ``source`` is either empty or only containswhitespace ::    nbstripout --drop-empty-cellsRemoving `init` cells+++++++++++++++++++++By default ``nbstripout`` will keep cells with `init_cell: true` metadata. To disablethis behavior use ::    nbstripout --strip-init-cellsRemoving entire cells+++++++++++++++++++++In certain conditions it might be handy to remove not only the output, but the entire cell, e.g. when developing exercises.To drop all cells tagged with &quot;solution&quot; run:    nbstripout --drop-tagged-cells=&quot;solution&quot;The option accepts a list of tags separated by whitespace.Keeping some output+++++++++++++++++++Do not strip the execution count/prompt number ::    nbstripout --keep-countDo not strip outputs that are smaller that a given max size (useful for removing large outputs like images) ::    nbstripout --max-size 1kDo not strip the output ::    nbstripout --keep-outputTo mark special cells so that the output is not stripped, you can either:1.  Set the ``keep_output`` tag on the cell. To do this, enable the tags    toolbar (View &gt; Cell Toolbar &gt; Tags) and then add the ``keep_output`` tag    for each cell you would like to keep the output for.2.  Set the ``&quot;keep_output&quot;: true`` metadata on the cell.  To do this, select    the &quot;Edit Metadata&quot; Cell Toolbar, and then use the &quot;Edit Metadata&quot; button    on the desired cell to enter something like::        {          &quot;keep_output&quot;: true,        }You can also keep output for an entire notebook. This is useful if you want tostrip output by default in an automated environment (e.g. CI pipeline), but wantto be able to keep outputs for some notebooks. To do so, add the option above tothe *notebook* metadata instead. (You can also explicitly remove outputs froma particular cell in these notebooks by adding a cell-level metadata entry.)Another use-case is to preserve initialization cells that might loadcustomized CSS etc. critical for the display of the notebook.  Tosupport this, we also keep output for cells with::    {      &quot;init_cell&quot;: true,    }This is the same metadata used by the `init_cell nbextension`__.__ https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/init_cellStripping metadata++++++++++++++++++The following metadata is stripped by default:* Notebook metadata: ``signature``, ``widgets``* Cell metadata: ``ExecuteTime``, ``collapsed``, ``execution``, ``scrolled``Additional metadata to be stripped can be configured via either*   ``git config (--global/--system) filter.nbstripout.extrakeys``, e.g. ::        git config --global filter.nbstripout.extrakeys '          metadata.celltoolbar          metadata.kernelspec          metadata.language_info.codemirror_mode.version          metadata.language_info.pygments_lexer          metadata.language_info.version          metadata.toc          metadata.notify_time          metadata.varInspector          cell.metadata.heading_collapsed          cell.metadata.hidden          cell.metadata.code_folding          cell.metadata.tags          cell.metadata.init_cell'*   the ``--extra-keys`` flag, which takes a string as an argument, e.g. ::        --extra-keys &quot;metadata.celltoolbar cell.metadata.heading_collapsed&quot;Note: Previous versions of Jupyter used ``metadata.kernel_spec`` for kernelmetadata. Prefer stripping ``kernelspec`` entirely: only stripping someattributes inside ``kernelspec`` may lead to errors  when opening the notebookin Jupyter (see `#141 &lt;https://github.com/kynan/nbstripout/issues/141&gt;`_).Excluding files and folders+++++++++++++++++++++++++++To exclude specific files or folders from being processed by the ``nbstripout``filters, add the path and exception to your filter specificationsdefined in ``.git/info/attributes`` or ``.gitattributes``: ::    docs/** filter= diff=This will disable ``nbstripout`` for any file in the ``docs`` directory.: ::    notebooks/Analysis.ipynb filter= diff=This will disable ``nbstripout`` for the file ``Analysis.ipynb`` located inthe ``notebooks`` directory.To check which attributes a given file has with the current config, run ::    git check-attr -a -- path/to/fileFor a file to which the filter applies you will see the following: ::    $ git check-attr -a -- foo.ipynb    foo.ipynb: diff: ipynb    foo.ipynb: filter: nbstripoutFor a file in your excluded folder you will see the following: ::    $ git check-attr -a -- docs/foo.ipynb    foo.ipynb: diff:    foo.ipynb: filter:Manual filter installation==========================Set up a git filter and diff driver using nbstripout as follows: ::    git config filter.nbstripout.clean '/path/to/nbstripout'    git config filter.nbstripout.smudge cat    git config filter.nbstripout.required true    git config diff.ipynb.textconv '/path/to/nbstripout -t'This will add a section to the ``.git/config`` file of the current repository.If you want the filter to be installed globally for your user, add the``--global`` flag to the ``git config`` invocations above to have theconfiguration written to your ``~/.gitconfig`` and apply to all repositories.If you want the filter to be installed system-wide, add the ``--system`` flagto the ``git config`` invocations above to have the configuration written to``$(prefix)/etc/gitconfig`` and apply to all repositories for all users.Create a file ``.gitattributes`` (if you want it versioned with the repository)or ``.git/info/attributes`` (to apply it only to the current repository) withthe following content: ::    *.ipynb filter=nbstripout    *.ipynb diff=ipynbThis instructs git to use the filter named _nbstripout_ and the diff drivernamed _ipynb_ set up in the git config above for every ``.ipynb`` file in therepository.If you want the attributes be set for ``.ipynb`` files in any of your gitrepositories, add those two lines to ``~/.config/git/attributes``. Note thatthis file and the ``~/.config/git`` directory may not exist.If you want the attributes be set for ``.ipynb`` files in any gitrepository on your system, add those two lines to ``$(prefix)/etc/gitattributes``.Note that this file may not exist.Using ``nbstripout`` as a pre-commit hook=========================================`pre-commit`_ is a framework for managing git `pre-commit hooks`_.Once you have `pre-commit`_ installed, add the follwong to the``.pre-commit-config.yaml`` in your repository: ::    repos:    - repo: https://github.com/kynan/nbstripout      rev: 0.6.1      hooks:        - id: nbstripoutThen run ``pre-commit install`` to activate the hook... warning::  In this mode, ``nbstripout`` is used as a git hook to strip any ``.ipynb``  files before committing. This also modifies your working copy!  In its regular mode, ``nbstripout`` acts as a filter and only modifies what  git gets to see for committing or diffing. The working copy stays intact... _pre-commit: https://pre-commit.com.. _pre-commit hooks: https://git-scm.com/docs/githooksTroubleshooting===============Known issues++++++++++++Certain Git workflows are not well supported by `nbstripout`:* Local changes to notebook files that are made invisible to Git due to the  `nbstripout` filter do still cause conflicts when attempting to sync upstream  changes (`git pull`, `git merge` etc.). This is because Git has no way of  resolving a conflict caused by a non-stripped local file being merged with a  stripped upstream file. Adressing this issue is out of scope for `nbstripout`.  Read more and find workarounds in `#108`_... _#108: https://github.com/kynan/nbstripout/issues/108Show files processed by nbstripout filter+++++++++++++++++++++++++++++++++++++++++Git has `no builtin support &lt;https://stackoverflow.com/a/52065333/396967&gt;`_for listing files a clean or smudge filter operates on. As a workaround,change the setup of your filter in ``.git/config``, ``~/.gitconfig`` or``$(prefix)/etc/gitconfig`` as follows to see the filenames either filter operates on: ::    [filter &quot;nbstripout&quot;]        clean  = &quot;f() { echo &gt;&amp;2 \&quot;clean: nbstripout $1\&quot;; nbstripout; }; f %f&quot;        smudge = &quot;f() { echo &gt;&amp;2 \&quot;smudge: cat $1\&quot;; cat; }; f %f&quot;        required = trueMercurial usage===============Mercurial does not have the equivalent of smudge filters.  One can usean encode/decode hook but this has some issues.  An alternativesolution is to provide a set of commands that first run ``nbstripout``,then perform these operations. This is the approach of the `mmf-setup`_package... _mmf-setup: http://bitbucket.org/mforbes/mmf_setup.. _Anaconda: https://www.continuum.io/anaconda-overview.. _conda: http://conda.pydata.org.. _conda-forge: http://conda-forge.github.io.. _PyPI: https://pypi.io</longdescription>
</pkgmetadata>