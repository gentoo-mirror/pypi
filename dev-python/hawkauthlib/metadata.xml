<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=================================================================hawkauthlib:  library for implementing Hawk Access Authentication=================================================================This is a low-level library for implementing Hawk Access Authentication, asimple HTTP request-signing scheme described in:    https://npmjs.org/package/hawkTo access resources using Hawk Access Authentication, the client must haveobtained a set of Hawk credentials including an id and a secret key.  They usethese credentials to make signed requests to the server.When accessing a protected resource, the server will generate a 401 challengeresponse with the scheme &quot;Hawk&quot; as follows::    &gt; GET /protected_resource HTTP/1.1    &gt; Host: example.com    &lt; HTTP/1.1 401 Unauthorized    &lt; WWW-Authenticate: HawkThe client will use their Hawk credentials to build a request signature andinclude it in the Authorization header like so::    &gt; GET /protected_resource HTTP/1.1    &gt; Host: example.com    &gt; Authorization: Hawk id=&quot;h480djs93hd8&quot;,    &gt;                     ts=&quot;1336363200&quot;,    &gt;                     nonce=&quot;dj83hs9s&quot;,    &gt;                     mac=&quot;bhCQXTVyfj5cmA9uKkPFx1zeOXM=&quot;    &lt; HTTP/1.1 200 OK    &lt; Content-Type: text/plain    &lt;    &lt; For your eyes only:  secret data!This library provices the low-level functions necessary to implement suchan authentication scheme.  For Hawk Auth clients, it provides the followingfunction:    * sign_request(req, id, key, algorithm=&quot;sha256&quot;):  sign a request using      Hawk Access Auth.For Hawk Auth servers, it provides the following functions:    * get_id(req):  get the claimed Hawk Auth id from the request.    * check_signature(req, key, algorithm=&quot;sha256&quot;):  check that the request      was signed with the given key.The request objects passed to these functions can be any of a variety ofcommon object types:    * a WSGI environment dict    * a webob.Request object    * a requests.Request object    * a string or file-like object of request dataA typical use for a client program might be to install the sign_requestfunction as an authentication hook when using the requests library, like this::    import requests    import functools    import hawkauthlib    # Hook up sign_request() to be called on every request.    def auth_hook(req):        hawkauthlib.sign_request(req, id=&quot;&lt;AUTH-ID&gt;&quot;, key=&quot;&lt;AUTH-KEY&gt;&quot;)        return req    session = requests.session(hooks={&quot;pre_request&quot;: auth_hook})    # Then use the session as normal, and the auth is applied transparently.    session.get(&quot;http://www.secret-data.com/get-my-data&quot;)A typical use for a server program might be to verify requests using a WSGImiddleware component, like this::    class HawkAuthMiddleware(object):        # ...setup code goes here...        def __call__(self, environ, start_response):            # Find the identity claimed by the request.            id = hawkauthlib.get_id(environ)            # Look up their secret key.            key = self.SECRET_KEYS[id]            # If the signature is invalid, error out.            if not hawkauthlib.check_signature(environ, key):                start_response(&quot;401 Unauthorized&quot;,                               [(&quot;WWW-Authenticate&quot;, &quot;Hawk&quot;)])                return [&quot;&quot;]            # Otherwise continue to the main application.            return self.application(environ, start_response)The following features of the Hawk protocol are not yet supported:  * Bewits.  * Timestamp adjustment.  * Calculating or verifying the server's response signature.  * Calculating or verifying payload hashes.2.0.0 - 2016-01-16================== * Py27, Py35 compatible0.1.1 - 2013-11-12================== * Let key be any binary string; id must still be ascii.0.1.0 - 2013-08-19================== * Initial release; this is essentially the macauthlib codebase, ported   over to the new Hawk auth specification.</longdescription>
</pkgmetadata>