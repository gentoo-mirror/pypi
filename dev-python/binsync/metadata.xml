<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BinSync&lt;p align=&quot;center&quot;&gt;   &lt;img src=&quot;https://i.imgur.com/qdesKpg.png&quot; style=&quot;width: 30%;&quot; alt=&quot;BinSync Logo&quot;/&gt;&lt;/p&gt;BinSync is a decompiler collaboration tool built on the Git versioning system to enable fined-grained reverseengineering collaboration regardless of decompiler. BinSync is built by [mahaloz](https://github.com/mahaloz), the [angr](https://angr.io) team, and the [SEFCOM](https://sefcom.asu.edu) research lab. It's also duein large part to its use by the [Shellphish](https://shellphish.net) hacking team. All good decompilers share common objects called Reverse Engineering Artifacts (REAs). These REAs are thecenter of BinSync's syncing ability. Here are the supported REAs:- Function headers (symbol, args, type)- Stack Variables (symbol, type)- Structs- CommentsNote: all types support user-created types like structs.&lt;p align=&quot;center&quot;&gt;   &lt;img src=&quot;./assets/images/binja_sync.gif&quot; alt=&quot;Binja Sync&quot;/&gt;&lt;/p&gt;**Join our discord below for more online help**:[![Discord](https://img.shields.io/discord/900841083532087347?label=Discord&amp;style=plastic)](https://discord.gg/wZSCeXnEvR)## Quick StartFor all installs, it's best to use our two-part installer with Python:```bashpip3 install binsync &amp;&amp; binsync --install ```BinSync is also available in the Binary Ninja plugin manager.For full install information, please read our [Quickstart Docs](https://binsync.net/docs/home)## Supported Platforms- IDA Pro: **&gt;= 7.3**- Binary Ninja: **&gt;= 2.4**- angr-management: **&gt;= 9.0**- Ghidra: **&gt;= 10.1**All versions require **Python &gt;= 3.4** and **Git** installed on your system. Ghidra support is still very much in early stage, so only expect the minimal features like artifact name syncing and comments.## Decompiler Support ProgressAlthough we support the decompilers in the earlier section, not every decompiler is supported at the same level of syncing. To understand the difference between artifact support, pull, push, and auto push, read our [decompiler use introduction](https://binsync.net/docs/dec-introduction/).### IDA Pro| Operations&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Function Headers&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Stack Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Global Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Structs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Enums&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Comments&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ||------------------------------------|------------------------------------------|------------------------------------|-------------------------------------|---------------------------------|-------------------------------|----------------------------------|| Symbols                           | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:                 | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:              || Types                             | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:                 | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:              || Pull                              | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:                 | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:              || Push                              | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:                 | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:              || Auto Push                          | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:                 | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:              |&lt;p align=&quot;center&quot;&gt;   &lt;img src=&quot;./assets/images/ida_sync.gif&quot; alt=&quot;IDA Sync&quot;/&gt;&lt;/p&gt;### Binary Ninja| Operations&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Function Headers&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Stack Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Global Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Structs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Enums&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Comments&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ||------------------------------------|------------------------------------------|------------------------------------|-------------------------------------|---------------------------------|-------------------------------|----------------------------------|| Symbols                           | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:             | :heavy_check_mark:         | :heavy_check_mark:       | :heavy_check_mark:              || Types                             | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:             | :heavy_check_mark:         | :heavy_check_mark:       | :heavy_check_mark:              || Pull                              | :heavy_check_mark:                      | :heavy_check_mark:                | :heavy_check_mark:             | :heavy_check_mark:         | :heavy_check_mark:       | :heavy_check_mark:              || Push                              | :heavy_check_mark:                       | :heavy_check_mark:               | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:       | :heavy_check_mark:          || Auto Push                         | :heavy_check_mark:                       | :heavy_check_mark:               | :heavy_check_mark:             | :heavy_check_mark:           | :heavy_check_mark:       | :heavy_check_mark:          |&lt;p align=&quot;center&quot;&gt;   &lt;img src=&quot;./assets/images/binja_sync.gif&quot; alt=&quot;Binja Sync&quot;/&gt;&lt;/p&gt;### Ghidra| Operations&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Function Headers&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Stack Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Global Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Structs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Enums&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Comments&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ||------------------------------------|------------------------------------------|------------------------------------|-------------------------------------|---------------------------------|-------------------------------|----------------------------------|| Symbols                           | :heavy_check_mark:                      | :heavy_check_mark:                | :x:                            | :x:                        | :x:                      | :heavy_check_mark:              || Types                             | :heavy_check_mark:                      | :heavy_check_mark:                | :x:                            | :x:                        | :x:                      | :heavy_check_mark:              || Pull                              | :heavy_check_mark:                      | :heavy_check_mark:                | :x:                            | :x:                        | :x:                      | :heavy_check_mark:              || Push                              | :x:                                 | :x:                          | :x:                            | :x:                        | :x:                      | :x:                         || Auto Push                         | :x:                                 | :x:                          | :x:                            | :x:                        | :x:                      | :x:                         |&lt;p align=&quot;center&quot;&gt;   &lt;img src=&quot;./assets/images/ghidra_sync.gif&quot; alt=&quot;Ghidra Sync&quot;/&gt;&lt;/p&gt;### angr-management| Operations&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Function Headers&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Stack Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Global Vars&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Structs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Enums&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | Comments&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ||------------------------------------|------------------------------------------|------------------------------------|-------------------------------------|---------------------------------|-------------------------------|----------------------------------|| Symbols                           | :heavy_check_mark:                      | :heavy_check_mark:                | :x:                            | :x:                        | :x:                      | :heavy_check_mark:              || Types                             | :heavy_check_mark:                      | :heavy_check_mark:                | :x:                            | :x:                        | :x:                      | :heavy_check_mark:              || Pull                              | :heavy_check_mark:                      | :heavy_check_mark:                | :x:                            | :x:                        | :x:                      | :heavy_check_mark:              || Push                              | :heavy_check_mark:                       | :heavy_check_mark:               | :x:                            | :x:                        | :x:                      | :heavy_check_mark:          || Auto Push                         | :heavy_check_mark:                       | :heavy_check_mark:               | :x:                            | :x:                        | :x:                      | :heavy_check_mark:          |</longdescription>
</pkgmetadata>