# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Python client for Sentry (https://sentry.io)"

HOMEPAGE="https://github.com/getsentry/sentry-python"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="aiohttp arq asyncpg beam bottle celery celery-redbeat chalice clickhouse-driver django falcon fastapi flask grpcio httpx huey loguru openai opentelemetry opentelemetry-experimental pure-eval pymongo pyspark quart rq sanic sqlalchemy starlette starlite tornado"
DEPENDENCIES=">=dev-python/urllib3-1.26.11[${PYTHON_USEDEP}]
	dev-python/certifi[${PYTHON_USEDEP}]
	aiohttp? ( >=dev-python/aiohttp-3.5[${PYTHON_USEDEP}] )
	arq? ( dev-python/arq[${PYTHON_USEDEP}] )
	asyncpg? ( dev-python/asyncpg[${PYTHON_USEDEP}] )
	beam? ( dev-python/apache-beam[${PYTHON_USEDEP}] )
	bottle? ( >=dev-python/bottle-0.12.13[${PYTHON_USEDEP}] )
	celery? ( dev-python/celery[${PYTHON_USEDEP}] )
	celery-redbeat? ( dev-python/celery-redbeat[${PYTHON_USEDEP}] )
	chalice? ( dev-python/chalice[${PYTHON_USEDEP}] )
	clickhouse-driver? ( dev-python/clickhouse-driver[${PYTHON_USEDEP}] )
	django? ( >=dev-python/django-1.8[${PYTHON_USEDEP}] )
	falcon? ( dev-python/falcon[${PYTHON_USEDEP}] )
	fastapi? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	flask? ( >=dev-python/flask-0.11[${PYTHON_USEDEP}] )
	flask? ( >=dev-python/blinker-1.1[${PYTHON_USEDEP}] )
	flask? ( dev-python/markupsafe[${PYTHON_USEDEP}] )
	grpcio? ( >=dev-python/grpcio-1.21.1[${PYTHON_USEDEP}] )
	httpx? ( >=dev-python/httpx-0.16.0[${PYTHON_USEDEP}] )
	huey? ( dev-python/huey[${PYTHON_USEDEP}] )
	loguru? ( >=dev-python/loguru-0.5[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	openai? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	opentelemetry? ( dev-python/opentelemetry-distro[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-distro[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-aiohttp-client[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-django[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-fastapi[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-flask[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-requests[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-sqlite3[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-urllib[${PYTHON_USEDEP}] )
	pure-eval? ( dev-python/pure-eval[${PYTHON_USEDEP}] )
	pure-eval? ( dev-python/executing[${PYTHON_USEDEP}] )
	pure-eval? ( dev-python/asttokens[${PYTHON_USEDEP}] )
	pymongo? ( >=dev-python/pymongo-3.1[${PYTHON_USEDEP}] )
	pyspark? ( dev-python/pyspark[${PYTHON_USEDEP}] )
	quart? ( dev-python/Quart[${PYTHON_USEDEP}] )
	quart? ( >=dev-python/blinker-1.1[${PYTHON_USEDEP}] )
	rq? ( >=dev-python/rq-0.6[${PYTHON_USEDEP}] )
	sanic? ( dev-python/sanic[${PYTHON_USEDEP}] )
	sqlalchemy? ( >=dev-python/sqlalchemy-1.2[${PYTHON_USEDEP}] )
	starlette? ( >=dev-python/starlette-0.19.1[${PYTHON_USEDEP}] )
	starlite? ( dev-python/starlite[${PYTHON_USEDEP}] )
	tornado? ( >=dev-python/tornado-5.0[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
