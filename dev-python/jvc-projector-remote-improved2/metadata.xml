<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># JVC Projector Remote ImprovedThis implements new features, improvements, and optimizations inspired by https://github.com/bezmi/jvc_projector. This was made with NZ models in mind. Almost every function will work with NX models but I do not guarantee operability for them.This is designed to work with my Home Assistant plugin: https://github.com/iloveicedgreentea/jvc_homeassistant## Installation```# Assuming you have a venv with &gt;=python3.10pip install jvc-projector-remote-improved2```## Quick StartSet your network password if you have an NZ model first.```pythonjvc = JVCProjector(host=&quot;ipaddr&quot;, connect_timeout=10, password=&quot;password&quot;)# Commands are passed as a single string delimited by a comma# open menucmd = jvc.exec_command(&quot;menu, menu&quot;)# press left buttoncmd = jvc.exec_command(&quot;menu, left&quot;)# set picture mode to frame adapt HDRcmd = jvc.exec_command(&quot;picture_mode, frame_adapt_hdr&quot;)# turn oncmd = jvc.power_on()```## UsageSee [quick-start](#quick-start) for importingThe commands are structured to use simple command keywords and parameters. This makes it simple to remember commands. All names with spaces will have an underscore instead.```pythonCommand: low_latencyParameter: offcode: jvc.exec_command(&quot;low_latency, off&quot;)``````pythonCommand: picture_modeParameter: hdr_pluscode: jvc.exec_command(&quot;picture_mode, hdr_plus&quot;)```You can also run multiple commands in a row by just giving it a list of commands```pythonjvc.exec_command([&quot;picture_mode, hdr_plus&quot;, &quot;motion_enhance, off&quot;])```Use `print_commands()` to get all the latest support commands. This is dynamically generated at runtime so it is always up to date.## Currently Supported Commands- Power on/off- Lens Memory/Installation Modes- Input HDMI 1 or 2- Power and Low Latency Status- Low Latency Mode on/off- Menu and arrow buttons (Menu, LRUD, back)- Masking- Laser power low/med/high- Laser Dimming off/auto1/auto2- E-shift on/off- Aperture off/auto1/auto2- Anamorphic modes- And many others## Gaming/Film ModesI recommend setting up picture mode presets for each mode. Low latency toggle annoyingly will not work unless certain things are disabled first. It will not disable things for you. SDR Gaming: user1||natural, low latency on, etcHDR Gaming: hdr10, low latency on, etcSDR Film: natural||user1, low latency off, laser mode 3, motion enhance highHDR Film: frame adapt HDR, low latency off, laser mode 3, hdr quantization to auto(wide)Then use the commands to switch between picture modes.## Supported Models- NZ7/NZ8/NZ9 (Network password is required)- NX5/NX7/NX9- Most likely any other D-ILA projector, and possibly older models with ethernet cables.## Home Assistant```yaml# configuration.yamlremote:  - platform: jvc_projectors    name: nz7    password: password    host: 192.168.1.2    scan_interval: 30```## Development```shell# Create venvpython3 -m venv .venvsource .venv/bin/activate``````shell# Edit envcp .env.template .env# edit .env with values```## Supported Commands`$command,$parameter`example: &quot;anamorphic,off&quot;example: &quot;anamorphic,d&quot;example: &quot;laser_dim,auto3&quot;```Currently Supported Commands:        anamorphic        aperture        enhance        eshift        graphic_mode        input        installation_mode        laser_dim        laser_power        low_latency        mask        menu        motion_enhance        picture_mode        powerCurrently Supported Parameters:anamorphic:        off        a        b        c        daperture:        off        auto1        auto2aspect_ratio:        zoom        auto        nativeenhance:        zero        one        two        three        four        five        six        seven        eight        nine        teneshift:        off        ongraphic_mode:        standard        hires1        hires2input:        hdmi1        hdmi2installation_mode:        mode1        mode2        mode3        mode4        mode5        mode6        mode7        mode8        mode9        mode10laser_dim:        off        auto1        auto2        auto3laser_power:        low        med        highlow_latency:        off        onmask:        on        offmenu:        menu        up        down        back        left        right        okmotion_enhance:        off        low        highpicture_mode:        film        cinema        natural        hdr        THX        frame_adapt_hdr        frame_adapt_hdr2        frame_adapt_hdr3        filmmaker        user1        user2        user3        user4        user5        user6        hlg        hdr_plus        pana_pqpower:        off        on```### Adding new commandsAll commands are stored in Enums within `commands.py` so simply adding them to that file in the proper Enum will automatically propagate to code. Add them using [this guide](http://pro.jvc.com/pro/attributes/PRESENT/manual/2018_ILA-FPJ_Ext_Command_List_v1.2.pdf) as a reference.### TestingJVC_TEST_POWER: true/false to test power functionsJVC_TEST_FUNCTIONS: true/false to test various button functionsYou can run the test at the local device or run a mock server I made (WIP) to test commands```shell# Venv in one windowpython mock/mochrie.py``````shell# Run tests in other windowsource .envexport JVC_HOST=127.0.0.1make test```</longdescription>
</pkgmetadata>