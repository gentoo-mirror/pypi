<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ADBC[![Test-测试](https://github.com/kaluluosi/async-adbc/actions/workflows/test.yml/badge.svg)](https://github.com/kaluluosi/async-adbc/actions/workflows/test.yml)ADBC是ADB Client的纯python异步实现，ADBC直接跟ADB Server通信不需要靠进程调用命令行来执行ADB命令。有以下特性：1. 支持async/await和同步调用2. 封装了一些性能测试相关的方法，供性能采集工具使用3. 以`service（服务）`为单位封装命令方法，能够跟 `adb`和`android shell`命令更加一致。## 安装```shellpip install async-adbc```## 快速入门### 使用`ADBClient``ADBClient`对应的是`adb`命令&gt;**note**&gt;当连接设备只有一个的时候，`adb`命令可以省略`-s &lt;serialno&gt;`，但是`ADBClient`不会包含这种默认设备的命令方法。因为`async-adbc`认为`adb`和`device`应该职责分明不应有太多的潜规则。因此用户想要操作某个设备一定要使用`Device`对象下的方法，`Device`下的方法相当于是帮我们默认传递了`-s &lt;serialno&gt;`。```pythonfrom async_adbc import ADBClientadbc = ADBClient() # 默认连接 127.0.0.1:5037 ，也就是本机的adb serverversion = awaitadbc.version() # 对应 `adb version`print(version)# 获取Android设备对象，对应 `adb devices`devices = adbc.devices()for device in devices:    print(device.serialno)```### 使用`Device``Device`对象是对Android设备的抽象，所有需要指定 `-s &lt;serialno&gt;` 的操作都被封装到 `Device` 类中。```pythonfrom async_adbc import ADBClientadbc = ADBClient()# 获取Android设备对象，对应 `adb devices`default_device = adbc.device() # 获取 `adb devices` 的第一个设备product_model = await defualt_device.prop.get(&quot;ro.product.model&quot;)print(product_model)# `device.pm` 对应 `adb shell pm`packages = await default_device.pm.list_packages()print(packages)# `device.shell` 对应 `adb shell`ret = await default_device.shell(&quot;echo hello&quot;)print(ret)# 封装了 `fps` ，用来获取安卓游戏的帧率，方案参考了`solopi`fps_stat = await default_device.fps.stat(&quot;PKG_NAME&quot;)print(fps_stat)# 封装了 `mem`，用来获取安卓设备的内存信息mem_stat = await default_device.mem.stat(&quot;PKB_NAME&quot;)print(mem_stat)# 还有流量、温度等等工具的封装...```## 参考1. adb协议 https://github.com/kaluluosi/adbDocumentation/blob/master/README.zh-cn.md2. ppadb https://github.com/Swind/pure-python-adb</longdescription>
</pkgmetadata>