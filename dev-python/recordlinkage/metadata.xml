<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/J535D165/recordlinkage/master/docs/images/recordlinkage-banner-transparent.svg&quot;&gt;&lt;br&gt;&lt;/div&gt;# RecordLinkage: powerful and modular Python record linkage toolkit[![Pypi Version](https://badge.fury.io/py/recordlinkage.svg)](https://pypi.python.org/pypi/recordlinkage/)[![Github Actions CI Status](https://github.com/J535D165/recordlinkage/workflows/tests/badge.svg?branch=master)](https://github.com/J535D165/recordlinkage/actions)[![Code Coverage](https://codecov.io/gh/J535D165/recordlinkage/branch/master/graph/badge.svg)](https://codecov.io/gh/J535D165/recordlinkage)[![Documentation Status](https://readthedocs.org/projects/recordlinkage/badge/?version=latest)](https://recordlinkage.readthedocs.io/en/latest/?badge=latest)[![Zenodo DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3559042.svg)](https://doi.org/10.5281/zenodo.3559042)**RecordLinkage** is a powerful and modular record linkage toolkit tolink records in or between data sources. The toolkit provides most ofthe tools needed for record linkage and deduplication. The packagecontains indexing methods, functions to compare records and classifiers.The package is developed for research and the linking of small or mediumsized files.This project is inspired by the [Freely Extensible Biomedical RecordLinkage (FEBRL)](https://sourceforge.net/projects/febrl/) project, whichis a great project. In contrast with FEBRL, the recordlinkage projectuses [pandas](http://pandas.pydata.org/) and[numpy](http://www.numpy.org/) for data handling and computations. Theuse of *pandas*, a flexible and powerful data analysis and manipulationlibrary for Python, makes the record linkage process much easier andfaster. The extensive *pandas* library can be used to integrate yourrecord linkage directly into existing data manipulation projects.One of the aims of this project is to make an easily extensible recordlinkage framework. It is easy to include your own indexing algorithms,comparison/similarity measures and classifiers.## Basic linking exampleImport the `recordlinkage` module with all important tools for recordlinkage and import the data manipulation framework **pandas**.``` pythonimport recordlinkageimport pandas```Load your data into pandas DataFrames.``` pythondf_a = pandas.DataFrame(YOUR_FIRST_DATASET)df_b = pandas.DataFrame(YOUR_SECOND_DATASET)```Comparing all record can be computationally intensive. Therefore, wemake set of candidate links with one of the built-in indexing techniqueslike **blocking**. In this example, only pairs of records that agree onthe surname are returned.``` pythonindexer = recordlinkage.Index()indexer.block('surname')candidate_links = indexer.index(df_a, df_b)```For each candidate link, compare the records with one of the comparisonor similarity algorithms in the Compare class.``` pythonc = recordlinkage.Compare()c.string('name_a', 'name_b', method='jarowinkler', threshold=0.85)c.exact('sex', 'gender')c.date('dob', 'date_of_birth')c.string('str_name', 'streetname', method='damerau_levenshtein', threshold=0.7)c.exact('place', 'placename')c.numeric('income', 'income', method='gauss', offset=3, scale=3, missing_value=0.5)# The comparison vectorsfeature_vectors = c.compute(candidate_links, df_a, df_b)```Classify the candidate links into matching or distinct pairs based ontheir comparison result with one of the [classificationalgorithms](https://recordlinkage.readthedocs.io/en/latest/ref-classifiers.html).The following code classifies candidate pairs with a Logistic Regressionclassifier. This (supervised machine learning) algorithm requirestraining data.``` pythonlogrg = recordlinkage.LogisticRegressionClassifier()logrg.fit(TRAINING_COMPARISON_VECTORS, TRAINING_PAIRS)logrg.predict(feature_vectors)```The following code shows the classification of candidate pairs with theExpectation-Conditional Maximisation (ECM) algorithm. This variant ofthe Expectation-Maximisation algorithm doesn't require training data(unsupervised machine learning).``` pythonecm = recordlinkage.ECMClassifier()ecm.fit_predict(feature_vectors)```## Main FeaturesThe main features of this Python record linkage toolkit are:-   Clean and standardise data with easy to use tools-   Make pairs of records with smart indexing methods such as    **blocking** and **sorted neighbourhood indexing**-   Compare records with a large number of comparison and similarity    measures for different types of variables such as strings, numbers    and dates.-   Several classifications algorithms, both supervised and unsupervised    algorithms.-   Common record linkage evaluation tools-   Several built-in datasets.## DocumentationThe most recent documentation and API reference can be found at[recordlinkage.readthedocs.org](http://recordlinkage.readthedocs.org/en/latest/).The documentation provides some basic usage examples like[deduplication](http://recordlinkage.readthedocs.io/en/latest/notebooks/data_deduplication.html)and[linking](http://recordlinkage.readthedocs.io/en/latest/notebooks/link_two_dataframes.html)census data. More examples are coming soon. If you do have interestingexamples to share, let us know.## InstallationThe Python Record linkage Toolkit requires Python 3.6 or higher. Install thepackage easily with pip``` shpip install recordlinkage```Python 2.7 users can use version \&lt;= 0.13, but it is advised to usePython \&gt;= 3.5.The toolkit depends on popular packages like[Pandas](https://github.com/pydata/pandas),[Numpy](http://www.numpy.org), [Scipy](https://www.scipy.org/) and,[Scikit-learn](http://scikit-learn.org/). A complete list ofdependencies can be found in the [installationmanual](https://recordlinkage.readthedocs.io/en/latest/installation.html)as well as recommended and optional dependencies.## LicenseThe license for this record linkage tool is BSD-3-Clause.## CitationPlease cite this package when being used in an academic context. Ensurethat the DOI and version match the installed version. Citatation stylescan be found on the publishers website[10.5281/zenodo.3559042](https://doi.org/10.5281/zenodo.3559042).``` text@software{de_bruin_j_2019_3559043,  author       = {De Bruin, J},  title        = {{Python Record Linkage Toolkit: A toolkit for                   record linkage and duplicate detection in Python}},  month        = dec,  year         = 2019,  publisher    = {Zenodo},  version      = {v0.14},  doi          = {10.5281/zenodo.3559043},  url          = {https://doi.org/10.5281/zenodo.3559043}}```## Need help?Stuck on your record linkage code or problem? Any other questions? Don'thestitate to send me an email (&lt;jonathandebruinos@gmail.com&gt;).</longdescription>
</pkgmetadata>