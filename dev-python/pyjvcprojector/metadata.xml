<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyjvcprojectorA python library for controlling a JVC Projector over a network connection.https://pypi.org/project/pyjvcprojector/## Features### Convenience functions:* `JvcProjector::power_on()` turns on power.* `JvcProjector::power_off()` turns off power.* `JvcProjector::get_power()` gets power state (_standby, on, cooling, warming, error_)* `JvcProjector::get_input()` get current input (_hdmi1, hdmi2_).* `JvcProjector::get_signal()` get signal state (_signal, nosignal_).* `JvcProjector::get_state()` returns {_power, input, signal_}.* `JvcProjector::get_info()` returns {_model, mac address_}.### Send remote control codesA wrapper for calling `JvcProjector::op(f&quot;RC{code}&quot;)`* `JvcProjector::remote(code)` sends remote control command.### Send raw command codes* `JvcProjector::ref(code)` sends reference commands to read data. `code` is formatted `f&quot;{cmd}&quot;`.* `JvcProjector::op(code)` sends operation commands to write data. `code` is formatted `f&quot;{cmd}{val}&quot;`.## Installation```pip install pyjvcprojector```## Usage```pythonimport asynciofrom jvcprojector.projector import JvcProjectorfrom jvcprojector import constasync def main():    jp = JvcProjector(&quot;127.0.0.1&quot;)    await jp.connect()    print(&quot;Projector info:&quot;)    print(await jp.get_info())    if await jp.get_power() != const.ON:        await jp.power_on()        print(&quot;Waiting for projector to warmup...&quot;)        while await jp.get_power() != const.ON:            await asyncio.sleep(3)    print(&quot;Current state:&quot;)    print(await jp.get_state())    #    # Example sending remote code    #    print(&quot;Showing info window&quot;)    await jp.remote(const.REMOTE_INFO)    await asyncio.sleep(5)    print(&quot;Hiding info window&quot;)    await jp.remote(const.REMOTE_BACK)    #    # Example sending reference command (reads value from function)    #    print(&quot;Picture mode info:&quot;)    print(await jp.ref(&quot;PMPM&quot;))    #    # Example sending operation command (writes value to function)    #    # await jp.ref(&quot;PMPM01&quot;)  # Sets picture mode to Film    await jp.disconnect()```</longdescription>
</pkgmetadata>