<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>mappyfile=========| |Version| |Docs| |Build Status| |Coveralls| |Appveyor Build Status| |Downloads|A pure Python parser for working with MapServer MapFiles, built using `Lark &lt;https://github.com/erezsh/lark&gt;`_An online formatter demonstrating the libraries capabilities can be found at: http://mappyfile.geographika.net/A presentation on mappyfile was given at `FOSS4G Europe 2017 &lt;https://europe.foss4g.org/2017/Home&gt;`_ - slides are available `for download here &lt;/docs/_static/foss4ge2017_mappyfile_sgirvin.pdf&gt;`_... image:: https://raw.githubusercontent.com/geographika/mappyfile/master/docs/images/class_parsed_small.pngRequirements------------* Python 2.7 or Python 3.xInstallation------------mappyfile is available on PyPI (Python Package Index), and can be installed using pip:.. code-block:: console    pip install mappyfileThis will also install its required dependences Lark (lark-parser), and jsonschema. Documentation-------------Full documentation is available at http://mappyfile.readthedocs.io/en/latest/Usage-----From within Python scripts:.. code-block:: python    import mappyfile    mapfile = mappyfile.open(&quot;./docs/examples/raster.map&quot;)        # update the map name    mapfile[&quot;name&quot;] = &quot;MyNewMap&quot;    new_layer_string = &quot;&quot;&quot;    LAYER        NAME 'land'        TYPE POLYGON        DATA '../data/vector/naturalearth/ne_110m_land'        CLASS            STYLE                COLOR 107 208 107                OUTLINECOLOR 2 2 2                WIDTH 1            END        END    END    &quot;&quot;&quot;    layers = mapfile[&quot;layers&quot;]    new_layer = mappyfile.loads(new_layer_string)    layers.insert(0, new_layer) # insert the new layer at any index in the Mapfile    for l in layers:        print(&quot;{} {}&quot;.format(l[&quot;name&quot;], l[&quot;type&quot;]))    print(mappyfile.dumps(mapfile, indent=1, spacer=&quot;\t&quot;))Three command line tools are available - ``format``, ``validate``, and ``schema``:.. code-block:: bat    mappyfile format raster.map formatted_raster.map    mappyfile validate D:\ms-ogc-workshop\ms4w\apps\ms-ogc-workshop\**\*.map    mappyfile schema mapfile-schema-7-6.json --version=7.6Authors-------* Seth Girvin `@geographika &lt;https://github.com/geographika&gt;`_* Erez Shinan `@erezsh &lt;https://github.com/erezsh&gt;`_Contributors------------* Julien Enselme `@jenselme &lt;https://github.com/jenselme&gt;`_* Lo√Øc Gasser `@loicgasser &lt;https://github.com/loicgasser&gt;`_* Ian Turton `@ianturton &lt;https://github.com/ianturton&gt;`_* `@thorag76 &lt;https://github.com/thorag76&gt;`_..    .. include:: docs/HISTORY.rst.. |Version| image:: https://img.shields.io/pypi/v/mappyfile.svg   :target: https://pypi.python.org/pypi/mappyfile.. |Docs| image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat   :target: http://mappyfile.readthedocs.io/en/latest/.. |Build Status| image:: https://travis-ci.org/geographika/mappyfile.svg?branch=master   :target: https://travis-ci.org/geographika/mappyfile.. |Appveyor Build Status| image:: https://ci.appveyor.com/api/projects/status/mk33l07478gfytwh?svg=true   :target: https://ci.appveyor.com/project/SethG/mappyfile.. |Coveralls| image:: https://coveralls.io/repos/github/geographika/mappyfile/badge.svg?branch=master    :target: https://coveralls.io/github/geographika/mappyfile?branch=master.. |Downloads| image:: http://pepy.tech/badge/mappyfile    :target: http://pepy.tech/project/mappyfile</longdescription>
</pkgmetadata>