<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># zeebe Python gRPC gateway filesThis package contains two gRPC Gateway Files needed to build a zeebe-client or a zeebe-worker (https://zeebe.io/)with Python.Both files were generated following the instructions on this (now outdated) blog post:https://zeebe.io/blog/2018/11/grpc-generating-a-zeebe-python-client/## How to install and use this package?```bashpip install zeebe-grpc``````pythonimport jsonimport loggingimport grpcfrom zeebe_grpc import gateway_pb2, gateway_pb2_grpcwith grpc.insecure_channel(&quot;localhost:26500&quot;) as channel:    stub = gateway_pb2_grpc.GatewayStub(channel)    # print the topology of the zeebe cluster    topology = stub.Topology(gateway_pb2.TopologyRequest())    print(topology)    # deploy a process definition    with open(&quot;bpmn/echo.bpmn&quot;, &quot;rb&quot;) as process_definition_file:        process_definition = process_definition_file.read()        process = gateway_pb2.ProcessRequestObject(            name=&quot;echo.bpmn&quot;,            definition=process_definition        )    stub.DeployProcess(        gateway_pb2.DeployProcessRequest(            processes=[process]        )    )    # start a process instance    variables = {        &quot;message&quot;: &quot;This is a Message&quot;    }    stub.CreateProcessInstance(        gateway_pb2.CreateProcessInstanceRequest(            bpmnProcessId=&quot;ECHO&quot;,            version=-1,            variables=json.dumps(variables)        )    )    # start a worker    activate_jobs_response = stub.ActivateJobs(        gateway_pb2.ActivateJobsRequest(            type=&quot;echo&quot;,            worker=&quot;Python worker&quot;,            timeout=60000,            maxJobsToActivate=32        )    )    for response in activate_jobs_response:        for job in response.jobs:            try:                print(job.variables)                stub.CompleteJob(gateway_pb2.CompleteJobRequest(jobKey=job.key, variables=json.dumps({})))                logging.info(&quot;Job Completed&quot;)            except Exception as e:                stub.FailJob(gateway_pb2.FailJobRequest(jobKey=job.key))                logging.info(f&quot;Job Failed {e}&quot;)```## How to (re)build the Python gRPC?```bashwget https://raw.githubusercontent.com/zeebe-io/zeebe/0.21.1/gateway-protocol/src/main/proto/gateway.proto -O ./zeebe_grpc/gateway.protopython -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. ./zeebe_grpc/gateway.proto```</longdescription>
</pkgmetadata>