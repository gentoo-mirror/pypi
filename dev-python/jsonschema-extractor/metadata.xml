<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>====================jsonschema-extractor====================jsonschema-extractor is a library and extensible framework forextracting `json schema &lt;http://json-schema.org/&gt;`_ from various object andprimitives... image:: https://github.com/toumorokoshi/jsonschema-extractor/actions/workflows/python-package.yaml/badge.svg    :target: https://github.com/toumorokoshi/jsonschema-extractor/actions/workflows/python-package.yamlOut of the box support exists for:- `attrs &lt;https://attrs.readthedocs.io/&gt;`_- `typing &lt;https://docs.python.org/3/library/typing.html&gt;`_-----Usage-----.. code-block:: python    from typing import List    import jsonschema_extractor    assert jsonschema_extractor.extract(List[int]) == {        &quot;type&quot;: &quot;array&quot;,        &quot;items&quot;: {&quot;type&quot;: &quot;integer&quot;}    }-------------Attrs-example-------------.. code-block:: python    import attr    from attr.validators import instance_of    import jsonschema_extractor    @attr.define    class Example(object):        integer: int = attr.field()        foo = attr.field(metadata={&quot;jsonschema&quot;: {&quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;uuid&quot;}})        validator_list: List[float] = attr.field()        string: str = attr.field(            default=&quot;foo&quot;,            metadata={&quot;description&quot;: &quot;This is an description.&quot;}        )    assert extractor.extract(Example) == {        &quot;type&quot;: &quot;object&quot;,        &quot;title&quot;: &quot;Example&quot;,        &quot;properties&quot;: {            &quot;string&quot;: {&quot;description&quot;: &quot;This is an description.&quot;, &quot;type&quot;: &quot;string&quot;},            &quot;integer&quot;: {&quot;type&quot;: &quot;integer&quot;},            &quot;validator_list&quot;: {&quot;items&quot;: {&quot;type&quot;: &quot;number&quot;}, &quot;type&quot;: &quot;array&quot;},            &quot;foo&quot;: {&quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;uuid&quot;},        },        &quot;required&quot;: [&quot;integer&quot;, &quot;foo&quot;, &quot;validator_list&quot;],    }</longdescription>
</pkgmetadata>