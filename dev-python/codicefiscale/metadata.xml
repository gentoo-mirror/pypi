<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python library for Italian fiscal codecodicefiscale is a Python library for working with Italian fiscal code numbersofficially known as Italy's Codice Fiscale.Copyright (C) 2009-2016 Emanuele RoccaHomepage: https://github.com/ema/pycodicefiscaleThis library is free software; you can redistribute it and/ormodify it under the terms of the GNU Lesser General PublicLicense as published by the Free Software Foundation; eitherversion 2.1 of the License, or (at your option) any later version.This library is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNULesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with this library; if not, write to the Free SoftwareFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USAcodicefiscale Module Documentation==================================A quick example---------------&gt;&gt;&gt; import datetime&gt;&gt;&gt; from codicefiscale import build&gt;&gt;&gt;&gt;&gt;&gt; build('Rocca', 'Emanuele', datetime.datetime(1983, 11, 18), 'M', 'D969')'RCCMNL83S18D969H'Module Contents---------------``build(surname, name, birthday, sex, municipality) -&gt; string``    Computes the fiscal code for the given person data.    eg: build('Rocca', 'Emanuele', datetime.datetime(1983, 11, 18), 'M', 'D969')         -&gt; RCCMNL83S18D969H    ``control_code(input_string) -&gt; int``    Computes the control code for the given input_string string. The expected    input_string is the first 15 characters of a fiscal code.    eg: control_code('RCCMNL83S18D969') -&gt; 'H'    ``get_birthday(code) -&gt; string``    Birthday of the person whose fiscal code is 'code', in the format DD-MM-YY.     Unfortunately it's not possible to guess the four digit birth year, given    that the Italian fiscal code uses only the last two digits (1983 -&gt; 83).    Therefore, this function returns a string and not a datetime object.    eg: birthday('RCCMNL83S18D969H') -&gt; 18-11-83    ``get_sex(code) -&gt; string``    The sex of the person whose fiscal code is 'code'.    eg: sex('RCCMNL83S18D969H') -&gt; 'M'        sex('CNTCHR83T41D969D') -&gt; 'F'    ``isvalid(code) -&gt; bool``    This function checks if the given fiscal code is syntactically valid.    eg: isvalid('RCCMNL83S18D969H') -&gt; True        isvalid('RCCMNL83S18D969') -&gt; False</longdescription>
</pkgmetadata>