<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pydantic Mongo[![Build Status](https://github.com/jefersondaniel/pydantic-mongo/actions/workflows/test.yml/badge.svg)](https://github.com/jefersondaniel/pydantic-mongo/actions) [![Maintainability](https://api.codeclimate.com/v1/badges/5c92ea54aefa29f919cf/maintainability)](https://codeclimate.com/github/jefersondaniel/pydantic-mongo/maintainability) [![Test Coverage](https://api.codeclimate.com/v1/badges/5c92ea54aefa29f919cf/test_coverage)](https://codeclimate.com/github/jefersondaniel/pydantic-mongo/test_coverage) [![Version](https://badge.fury.io/py/pydantic-mongo.svg)](https://pypi.python.org/pypi/pydantic-mongo) [![Downloads](https://img.shields.io/pypi/dm/pydantic-mongo.svg)](https://pypi.python.org/pypi/pydantic-mongo)Document object mapper for pydantic and pymongo## Usage### Install:```bashpip install pydantic-mongo```### Example Code```pythonfrom pydantic import BaseModelfrom pydantic_mongo import AbstractRepository, ObjectIdFieldfrom pymongo import MongoClientfrom bson import ObjectIdclass Foo(BaseModel):   count: int   size: float = Noneclass Bar(BaseModel):   apple = 'x'   banana = 'y'class Spam(BaseModel):   id: ObjectIdField = None   foo: Foo   bars: List[Bar]class SpamRepository(AbstractRepository[Spam]):   class Meta:      collection_name = 'spams'client = MongoClient(os.environ[&quot;MONGODB_URL&quot;])database = client[os.environ[&quot;MONGODB_DATABASE&quot;]]spam = Spam(foo=Foo(count=1, size=1.0),bars=[Bar()])spam_repository = SpamRepository(database=database)# Insert / Updatespam_repository.save(spam)# Insert / Update many itemsspam_repository.save_many([spam])# Deletespam_repository.delete(spam)# Find One By Idresult = spam_repository.find_one_by_id(spam.id)# Find One By Id using string if the id attribute is a ObjectIdFieldresult = spam_repository.find_one_by_id(ObjectId('611827f2878b88b49ebb69fc'))# Find One By Queryresult = spam_repository.find_one_by({'foo.count': 1})# Find By Queryresults = spam_repository.find_by({'foo.count': {'$gte': 1}})# Paginate using cursor based paginationedges = spam_repository.paginate({'foo.count': {'$gte': 1}}, limit=1)more_edges = spam_repository.paginate({'foo.count': {'$gte': 1}}, limit=1, after=edges[-1].cursor)last_model = more_edges[-1].node```</longdescription>
</pkgmetadata>