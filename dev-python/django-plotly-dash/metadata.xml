<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-plotly-dash[![PyPI version](https://badge.fury.io/py/django-plotly-dash.svg)](https://badge.fury.io/py/django-plotly-dash)[![Downloads](https://img.shields.io/pypi/dw/django-plotly-dash.svg)](https://img.shields.io/pypi/dw/django-plotly-dash.svg)![Develop Branch Build Status](https://travis-ci.org/GibbsConsulting/django-plotly-dash.svg?branch=master)[![Coverage Status](https://coveralls.io/repos/github/GibbsConsulting/django-plotly-dash/badge.svg?branch=master)](https://coveralls.io/github/GibbsConsulting/django-plotly-dash?branch=master)[![Documentation Status](https://readthedocs.org/projects/django-plotly-dash/badge/?version=latest)](https://django-plotly-dash.readthedocs.io/en/latest/?badge=latest)Expose [plotly dash](https://plot.ly/products/dash/) apps as [Django](https://www.djangoproject.com/) tags. Multiple Dash apps canthen be embedded into a single web page, persist and share internal state, and also have access to thecurrent user and session variables.See the source for this project here:&lt;https://github.com/GibbsConsulting/django-plotly-dash&gt;This README file provides a short guide to installing and using the package, and alsooutlines how to run the demonstration application.More detailed informationcan be found in the online documentation at&lt;https://readthedocs.org/projects/django-plotly-dash&gt;An online version of the demo can be found at &lt;https://djangoplotlydash.com&gt;## InstallationFirst, install the package. This will also install plotly and some dash packages if they are not already present.    pip install django_plotly_dashThen, add `django_plotly_dash` to `INSTALLED_APPS` in your Django `settings.py` file    INSTALLED_APPS = [        ...        'django_plotly_dash.apps.DjangoPlotlyDashConfig',        ...        ]The application's routes need to be registered within the routing structure by an appropriate ``include`` statement ina ``urls.py`` file. Note: `django_plotly_dash` is not a name of your application, it is referring to the inner namespace of this library. Please do not skip this step:    urlpatterns = [        ...        path('django_plotly_dash/', include('django_plotly_dash.urls')),    ]The name within the URL is not important and can be changed.For the final installation step, a migration is needed to update thedatabase:    ./manage.py migrateIf using version 3.0 or later of Django, then the use of frames withinHTML documents has to be enabled by adding to the ``settings.py`` file:    X_FRAME_OPTIONS = 'SAMEORIGIN'Further configuration, including live updating to share applicationstate, is described in the [online documentation](https://django-plotly-dash.readthedocs.io/en/latest/).## DemonstrationThe source repository contains a demo application. To clone the repo and lauch the demo:```bashgit clone https://github.com/GibbsConsulting/django-plotly-dash.gitcd django-plotly-dash./make_env                # sets up a virtual environment for development                          #   with direct use of the source code for the package./prepare_redis           # downloads a redis docker container                          #   and launches it with default settings                          #   *THIS STEP IS OPTIONAL*./prepare_demo            # prepares and launches the demo                          #   using the Django debug server at http://localhost:8000```## UsageTo use existing dash applications, first register them using the `DjangoDash` class. Thisreplaces the `Dash` class of the `dash` package.Taking a very simple example inspired by the excellent [getting started](https://dash.plot.ly/) documentation:```pythonimport dashfrom dash import dcc, htmlfrom django_plotly_dash import DjangoDashapp = DjangoDash('SimpleExample')app.layout = html.Div([    dcc.RadioItems(        id='dropdown-color',        options=[{'label': c, 'value': c.lower()} for c in ['Red', 'Green', 'Blue']],        value='red'    ),    html.Div(id='output-color'),    dcc.RadioItems(        id='dropdown-size',        options=[{'label': i, 'value': j} for i, j in [('L','large'), ('M','medium'), ('S','small')]],        value='medium'    ),    html.Div(id='output-size')])@app.callback(    dash.dependencies.Output('output-color', 'children'),    [dash.dependencies.Input('dropdown-color', 'value')])def callback_color(dropdown_value):    return &quot;The selected color is %s.&quot; % dropdown_value@app.callback(    dash.dependencies.Output('output-size', 'children'),    [dash.dependencies.Input('dropdown-color', 'value'),     dash.dependencies.Input('dropdown-size', 'value')])def callback_size(dropdown_color, dropdown_size):    return &quot;The chosen T-shirt is a %s %s one.&quot; %(dropdown_size,                                                  dropdown_color)```Note that the `DjangoDash` constructor requires a name to be specified. This name is then used to identify the dash app intemplates:```jinja2{% load plotly_dash %}{% plotly_app name=&quot;SimpleExample&quot; %}```The registration code needs to be in a locationthat will be imported into the Django process before any model or template tag attempts to use it. The example Django applicationin the demo subdirectory achieves this through an import in the main `urls.py` file; any `views.py` would also be sufficient.Whilst this example allows for the direct use of existing `Dash` applications, it does not provide for the sharing or updating ofinternal state. The [online documentation](https://django-plotly-dash.readthedocs.io/en/latest/) provides details on using theseand other additional features.## DevelopmentThe `make_env` script sets up the development environment, and pulls in the packagesspecified in the `dev_requirements.txt` file. The `check_code` script invokes the test suite (using `pytest`) as wellas invoking `pylint` on both the package and the associated demo.</longdescription>
</pkgmetadata>