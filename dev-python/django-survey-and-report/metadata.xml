<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/Pierre-Sassoulas/django-survey.svg?branch=master)](https://travis-ci.org/Pierre-Sassoulas/django-survey)[![Coverage Status](https://coveralls.io/repos/github/Pierre-Sassoulas/django-survey/badge.svg?branch=master)](https://coveralls.io/github/Pierre-Sassoulas/django-survey?branch=master)[![PyPI version](https://badge.fury.io/py/django-survey-and-report.svg)](https://badge.fury.io/py/django-survey-and-report)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)# Django surveyA django survey app that can export results as CSV or PDF using your native language.`django-survey-and-report` on pypi. Based on and compatible with `django-survey`. Youwill be able to migrate your data from an ancient version of `django-survey`, but it hasbeen ported to python 3, and you can export results as CSV or PDF using your nativelanguage.Professional support for django-survey-and-report is available as part of the[Tidelift Subscription](https://tidelift.com/subscription/pkg/pypi-django-survey-and-report?utm_source=pypi-django-survey-and-report&amp;utm_medium=referral&amp;utm_campaign=enterprise)## Table of contents- [Language available](#language-available)- [Getting started](#getting-started)- [Making a survey](#making-a-survey)- [Generating a pdf report from the survey's result](#generating-a-pdf-report-from-the-surveys-result)  - [Basic example](#basic-example)  - [Sankey's diagram](#sankey-diagram)  - [Advanced example](#advanced-example)  - [Implementing a custom treatment](#implementing-a-custom-treatment)- [Credit](#credits)## Language availableThe software is developed in english. Other available languages are :- [x] Brazilian-Portuguese thanks to [Rafael Capaci](https://github.com/capaci)- [x] Chinese thanks to [朱聖黎 (Zhu Sheng Li)](https://github.com/digglife/)- [x] French thanks to [Pierre Sassoulas](https://github.com/Pierre-Sassoulas/)- [x] German thanks to [Georg Elsas](https://github.com/gjelsas)- [x] Indonesian thanks to [Dhana Dhira](https://github.com/ddhira123)- [x] Japanese thanks to [Nobukuni Suzue](https://github.com/nsuzue/)- [x] Spanish thanks to [Javier Ordóñez](https://github.com/ordonja/)- [x] Russian thanks to [Vlad M.](https://github.com/manchos/)- [x] Polish thanks to [Daniel Horner](https://github.com/d-horner/)- [x] Dutch thanks to [John Guyver](https://github.com/JohnGuyver117)- [x] Turkish thanks to [Hüseyin Emre Armağan](https://github.com/Telomeraz)- [x] Greek thanks to [Sotirios Zogos](https://github.com/sotiriszogos)## Getting startedAdd `django-survey-and-report` to your requirements and get it with pip.```bashecho 'django-survey-and-report' &gt;&gt; requirements.txtpip install -r requirements.txt```Add `bootstrapform` and `survey` in the `INSTALLED_APPS` in your settings :```pythonINSTALLED_APPS = [# Your own installed apps here]from pathlib import PathCSV_DIRECTORY = Path(&quot;csv&quot;) # Define the directory where csv are exportedTEX_DIRECTORY = Path(&quot;tex&quot;) # Define the directory where tex files and pdf are exportedINSTALLED_APPS += ['bootstrapform','survey']```Add a URL entry to your project’s urls.py, for example:```pythonfrom django.conf import settingsfrom django.conf.urls import includetry:    from django.conf.urls import urlexcept ImportError:    # Django 4.0 replaced url by something else    # See https://stackoverflow.com/a/70319607/2519059    from django.urls import re_path as urlurlpatterns = [    # Your own url pattern here]if 'survey' in settings.INSTALLED_APPS:    urlpatterns += [        url(r'^survey/', include('survey.urls'))    ]```Note: you can use whatever you wish as the URL prefix.You can also change some options:```python# Permit to open the csv in Excel without problem with separator# Using this trick : https://superuser.com/a/686415/567417EXCEL_COMPATIBLE_CSV = True# The separator for questions (Default to &quot;,&quot;)CHOICES_SEPARATOR = &quot;|&quot;# What is shown in export when the user do not answer (Default to &quot;Left blank&quot;)USER_DID_NOT_ANSWER = &quot;NAA&quot;# Path to the Tex configuration file (default to an internal file that should be sufficient)from pathlib import PathTEX_CONFIGURATION_FILE = Path(&quot;tex&quot;, &quot;tex.conf&quot;)# Default color for exported pdf pie (default to &quot;red!50&quot;)SURVEY_DEFAULT_PIE_COLOR = &quot;blue!50&quot;```To uninstall `django-survey-and-report`, simply comment out or remove the 'survey' linein your `INSTALLED_APPS`.If you want to use the pdf rendering you need to install `xelatex`. If you're using theSankey's diagram generation you will also have to install `python-tk` (for python 2.7)or `python3-tk` (for python 3.x).## Making a surveyUsing the admin interface you can create surveys, add questions, give questionscategories, and mark them as required or not. You can define choices for answers usingcomma separated words.![Creating of a question](doc/creating_questions.png &quot;Creating of a question&quot;)The front-end survey view then automatically populates based on the questions that havebeen defined and published in the admin interface. We use bootstrap3 to render them.![Answering a survey](doc/answering_questions.png &quot;Answering a survey&quot;)Submitted responses can be viewed via the admin backend, in an exported csv or in a pdfgenerated with latex.## Generating a pdf report from the survey's resultThere is a default configuration for PDF generation, but you might want to change`TEX_CONFIGURATION_FILE` for better results (in particular for language other thanenglish).You can manage the way the report is created in a yaml file, globally, survey by survey,or question by question. In order to render pdf you will need to install `xelatex`. Youwill also need python3-tk for sankey's diagram.The results are generated for the server only when needed, but you can force it as adeveloper with:```bashpython manage.py exportresult -h```Following is an example of a configuration file. you can generate one with:```bashpython manage.py generatetexconf -h```### Basic example```yamlgeneric:  document_option: 11pt&quot;Test survëy&quot;:  document_class: report  questions:    &quot;Lorem ipsum dolor sit amët, &lt;strong&gt; consectetur &lt;/strong&gt; adipiscing elit.&quot;:      chart:        type: polar        text: pin    &quot;Dolor sit amët, consectetur&lt;strong&gt;  adipiscing&lt;/strong&gt;  elit.&quot;:      chart:        type: cloud        text: inside```The pdf is then generated using the very good pgf-pie library.![The generated pdf for the polar and pin options](doc/report.png &quot;The generated pdf for the polar and pin options&quot;)![The generated pdf for the cloud and inside options](doc/report_2.png &quot;The generated pdf for the cloud and inside options&quot;)### Sankey diagramIf you installed python3-tk, you can also show the relation between two questions usinga sankey diagram :```yaml&quot;Lorem ipsum dolor sit amët, &lt;strong&gt; consectetur &lt;/strong&gt; adipiscing elit.&quot;:  chart:    type: sankey    question: &quot;Dolor sit amët, consectetur&lt;strong&gt;  adipiscing&lt;/strong&gt;  elit.&quot;```You get this as a result:![The generated pdf for the sankey example](doc/sankey.png &quot;The generated pdf for the sankey example&quot;)### Advanced exampleYou can also limit the answers shown by cardinality, filter them, group them togetherand choose the color for each answer or group of answers.If you use this configuration for the previous question:```yaml&quot;Test survëy&quot;:  &quot;Dolor sit amët, consectetur&lt;strong&gt;  adipiscing&lt;/strong&gt;  elit.&quot;:    multiple_charts:      &quot;Sub Sub Section with radius=3&quot;:        color:          Yës: blue!50          No: red!50          Whatever: red!50!blue!50        radius: 3      &quot;Sub Sub Section with text=pin&quot;:        group_together:          Nah:            - No            - Whatever          K.:            - Yës        color:          Nah: blue!33!red!66          K.: blue!50        text: pin    chart:      radius: 1      type: cloud      text: inside```You get this as a result:![The generated pdf for the multiple charts example](doc/multicharts.png &quot;The generated pdf for the multiple charts example&quot;)### Implementing a custom treatmentIf you want to make your own treatment you can use your own class, for example.Configuration:```yaml&quot;Test survëy&quot;:  questions:    &quot;Ipsum dolor sit amët, &lt;strong&gt; consectetur &lt;/strong&gt;  adipiscing elit.&quot;:      chart:        type: survey.tests.exporter.tex.CustomQuestion2TexChild```Code in `survey.tests.exporter.tex.CustomQuestion2TexChild`:```pythonfrom survey.exporter.tex.question2tex_chart import Question2TexChartclass CustomQuestion2TexChild(Question2TexChart):    def get_results(self):        self.type = &quot;polar&quot;        return &quot;&quot;&quot;        2/There were no answer at all,        3/But we have a custom treatment to show some,        2/You can make minor changes too !&quot;&quot;&quot;```Result:![The generated pdf for the custom example](doc/custom.png &quot;The generated pdf for the custom example&quot;)For a full example of a configuration file look at `example_conf.yaml` in doc, you canalso generate your configuration file with `python manage.py generatetexconf -h`, itwill create the default skeleton for every survey and question.To guide you during the python development, you can read:- The default reporter for PieChart in `Question2TexChart` :  https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_chart.py#L13- The Sankey reporter in `Question3TexSankey` :  https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_sankey.py#L15- The Raw reporter in `Question2TexRax` :  https://github.com/Pierre-Sassoulas/django-survey/blob/master/survey/exporter/tex/question2tex_raw.py.Do not hesitate to make a pull request with your new exporter if it can be of interestfor others I'll integrate it.## CreditsBased on [jessykate's django-survey](https://github.com/jessykate/django-survey), andcontribution by jibaku, joshualoving, and ijasperyang in forks of jessykate's project.We use [anazalea's pySankey](https://github.com/anazalea/pySankey) for sankey's diagramduring reporting.</longdescription>
</pkgmetadata>