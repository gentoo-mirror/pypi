<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img align=&quot;left&quot; width=&quot;82&quot; height=&quot;82&quot; src=&quot;assets/logo.svg&quot;&gt;# topicwizard&lt;br&gt;Pretty and opinionated topic model visualization in Python.[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/x-tabdeveloping/topic-wizard/blob/main/examples/basic_usage.ipynb)[![PyPI version](https://badge.fury.io/py/topic-wizard.svg)](https://pypi.org/project/topic-wizard/)[![pip downloads](https://img.shields.io/pypi/dm/topic-wizard.svg)](https://pypi.org/project/topic-wizard/)[![python version](https://img.shields.io/badge/Python-%3E=3.8-blue)](https://github.com/centre-for-humanities-computing/tweetopic)[![Code style: black](https://img.shields.io/badge/Code%20Style-Black-black)](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html)&lt;br&gt;https://user-images.githubusercontent.com/13087737/234209888-0d20ede9-2ea1-4d6e-b69b-71b863287cc9.mp4## New in version 0.4.0 ðŸŒŸ ðŸŒŸ- Introduced topic pipelines that make it easier and safer to use topic models in downstream tasks and interpretation.## New in version 0.3.1 ðŸŒŸ ðŸŒŸ- You can now investigate relations of pre-existing labels to your topics and words :mag:## New in version 0.3.0 ðŸŒŸ  - Exclude pages, that are not needed :bird: - Self-contained interactive figures :gift: - Topic name inference is now default behavior and is done implicitly.## Features-   Investigate complex relations between topics, words, documents and groups/genres/labels-   Sklearn, Gensim and BERTopic compatible :nut_and_bolt:-   Highly interactive web app-   Interactive and composable Plotly figures-   Automatically infer topic names, oooor...-   Name topics manually-   Easy deployment :earth_africa:## InstallationInstall from PyPI:```bashpip install topic-wizard```## Usage ([documentation](https://x-tabdeveloping.github.io/topic-wizard/))### Step 0:Have a corpus ready for analysis, in this example I am going to use 20 newgroups from scikit-learn.```pythonfrom sklearn.datasets import fetch_20newsgroupsnewsgroups = fetch_20newsgroups(subset=&quot;all&quot;)corpus = newsgroups.data# Sklearn gives the labels back as integers, we have to map them back to# the actual textual label.group_labels = [newsgroups.target_names[label] for label in newsgroups.target]```### Step 1:Train a scikit-learn compatible topic model.(If you want to use non-scikit-learn topic models, check [compatibility](https://x-tabdeveloping.github.io/topic-wizard/usage.compatibility.html))```pythonfrom sklearn.decomposition import NMFfrom sklearn.feature_extraction.text import CountVectorizerfrom sklearn.pipeline import make_pipeline# Create topic pipelinepipeline = make_pipeline(    CountVectorizer(stop_words=&quot;english&quot;, min_df=10),    NMF(n_components=30),)# Then fit it on the given textspipeline.fit(corpus)```From version 0.4.0 you can also use TopicPipelines, which are almost functionally identical but come with a set of built-in conveniences andsafeties.```pythonfrom topicwizard.pipeline import make_topic_pipelinepipeline = make_topic_pipeline(    CountVectorizer(stop_words=&quot;english&quot;, min_df=10),    NMF(n_components=30),)```### Step 2a:Visualize with the topicwizard webapp :bulb:```pythonimport topicwizardtopicwizard.visualize(corpus, pipeline=pipeline)```From version 0.3.0 you can also disable pages you do not wish to display thereby sparing a lot of time for yourself:```python# A large corpus takes a looong time to compute 2D projections for so# so you can speed up preprocessing by disabling it alltogether.topicwizard.visualize(corpus, pipeline=pipeline, exclude_pages=[&quot;documents&quot;])```![topics screenshot](assets/screenshot_topics.png)![words screenshot](assets/screenshot_words.png)![words screenshot](assets/screenshot_words_zoomed.png)![documents screenshot](assets/screenshot_documents.png)From version 0.3.1 you can investigate groups/labels by passing them along to the webapp.```pythontopicwizard.visualize(corpus, pipeline=pipeline, group_labels=group_labels)```![groups screenshot](docs/_static/screenshot_groups.png)Ooooor...### Step 2b:Produce high quality self-contained HTML plots and create your own dashboards/reports :strawberry:### Map of words```pythonfrom topicwizard.figures import word_mapword_map(corpus, pipeline=pipeline)```![word map screenshot](assets/word_map.png)### Timelines of topic distributions```pythonfrom topicwizard.figures import document_topic_timelinedocument_topic_timeline(    &quot;Joe Biden takes over presidential office from Donald Trump.&quot;,    pipeline=pipeline,)```![document timeline](assets/document_topic_timeline.png)### Wordclouds of your topics :cloud:```pythonfrom topicwizard.figures import topic_wordcloudstopic_wordclouds(corpus, pipeline=pipeline)```![wordclouds](assets/topic_wordclouds.png)#### And much more... ([documentation](https://x-tabdeveloping.github.io/topic-wizard/))</longdescription>
</pkgmetadata>