<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># databricks-utils[![Python version](https://img.shields.io/badge/python-3.6-blue.svg)](https://shields.io/)[![Pyspark version](https://img.shields.io/badge/pyspark-2.3.1-blue.svg)](https://shields.io/)[![Build Status](https://travis-ci.org/e2fyi/databricks-utils.svg?branch=master)](https://travis-ci.org/e2fyi/databricks-utils)`databricks-utils` is a python package that provide several utility classes/functhat improve ease-of-use in databricks notebook.### Installation```bashpip install databricks-utils```### Features- `S3Bucket` class to easily interact with a [S3 bucket](https://aws.amazon.com/s3/) via [`dbfs`](https://docs.databricks.com/user-guide/dbfs-databricks-file-system.html) and databricks spark.- `vega_embed` to render charts from [Vega](https://vega.github.io/vega/) and [Vega-Lite](https://vega.github.io/vega-lite/) specifications.### DocumentationAPI documentation can be found at [https://e2fyi.github.io/databricks-utils/](https://e2fyi.github.io/databricks-utils/).### Quick start**S3Bucket**  ```pythonimport jsonfrom databricks_utils.aws import S3Bucket# need to attach notebook's dbutils# before S3Bucket can be usedS3Bucket.attach_dbutils(dbutils)# create an instance of the s3 bucketbucket = (S3Bucket(&quot;somebucketname&quot;, &quot;SOMEACCESSKEY&quot;, &quot;SOMESECRETKEY&quot;)          .allow_spark(sc) # local spark context          .mount(&quot;somebucketname&quot;)) # mount location name (resolves as `/mnt/somebucketname`)# show list of files/folders in the bucket &quot;resource&quot; folderbucket.ls(&quot;resource/&quot;)# read in a json file from the bucketdata = json.load(open(bucket.local(&quot;resource/somefile.json&quot;, &quot;r&quot;)))# read from parquet via sparkdataframe = spark.read.parquet(bucket.s3(&quot;resource/somedf.parquet&quot;))# umountbucket.umount()```**Vega**  [Vega](https://vega.github.io/vega/) and [Vega-Lite](https://vega.github.io/vega-lite/)are high-level grammars of interactive graphics. They provide concise JSONsyntax for rapidly generating visualizations to support analysis.```pythonfrom databricks_utils.vega import vega_embed# vega-lite spec for a bar chartspec = {  &quot;data&quot;: {    &quot;values&quot;: [      {&quot;a&quot;: &quot;A&quot;,&quot;b&quot;: 28}, {&quot;a&quot;: &quot;B&quot;,&quot;b&quot;: 55}, {&quot;a&quot;: &quot;C&quot;,&quot;b&quot;: 43},      {&quot;a&quot;: &quot;D&quot;,&quot;b&quot;: 91}, {&quot;a&quot;: &quot;E&quot;,&quot;b&quot;: 81}, {&quot;a&quot;: &quot;F&quot;,&quot;b&quot;: 53},      {&quot;a&quot;: &quot;G&quot;,&quot;b&quot;: 19}, {&quot;a&quot;: &quot;H&quot;,&quot;b&quot;: 87}, {&quot;a&quot;: &quot;I&quot;,&quot;b&quot;: 52}    ]  },  &quot;mark&quot;: &quot;bar&quot;,  &quot;encoding&quot;: {    &quot;x&quot;: {&quot;field&quot;: &quot;a&quot;, &quot;type&quot;: &quot;ordinal&quot;},    &quot;y&quot;: {&quot;field&quot;: &quot;b&quot;, &quot;type&quot;: &quot;quantitative&quot;}  }}# plot out the vega chart in databricks notebookdisplayHTML(vega_embed(spec=spec))```### Developer```bash# add a version to git tag and publish to pypi. add_tag.sh &lt;VERSION&gt;```</longdescription>
</pkgmetadata>