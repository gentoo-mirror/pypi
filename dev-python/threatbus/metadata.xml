<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  Threat Bus&lt;/h1&gt;&lt;h4 align=&quot;center&quot;&gt;A threat intelligence dissemination layer for open-source security tools.[![PyPI Status][pypi-badge]][pypi-url][![Build Status][ci-badge]][ci-url][![Total alerts][lgtm-alerts-badge]][lgtm-alerts-url][![Language grade: Python][lgtm-quality-badge]][lgtm-quality-url][![Development Status][beta-badge]][latest-release-url][![Latest Release][latest-release-badge]][latest-release-url][![License][license-badge]][license-url][_Getting Started_](#getting-started) &amp;mdash;[_Contributing Guidelines_][contributing-url] &amp;mdash;[_Writing Plugins_](#plugin-development) &amp;mdash;[_License_](#license) &amp;mdash;[_Documentation_][docs]&lt;/h4&gt;&lt;div align=&quot;center&quot;&gt;[![Chat][chat-badge]][chat-url]&lt;/div&gt;## Key Features- **Connect Open-Source Security Tools**: Threat Bus is a pub-sub broker for  threat intelligence data. With *Threat Bus* you can seamlessly integrate  threat intel platforms like [OpenCTI][opencti] or [MISP][misp] with detection  tools and databases like [Zeek][zeek] or [VAST][vast].- **Native STIX-2**: Threat Bus transports indicators and sightings encoded as  per the [STIX-2](https://oasis-open.github.io/cti-documentation/stix/intro)  open format specification.- **Plugin-based Architecture**: The project is plugin-based and can be extended  easily. Read about the different [plugin types][plugin-types] and  [how to write your own][plugin-development].  We welcome contributions to adopt new open source tools!- **Official Plugins**: We maintain many plugins right in the official Threat  Bus repository. Check out our integrations for [MISP][misp], [Zeek][zeek],  [CIFv3][cif], and generally apps that connect via [ZeroMQ][zmq], like  [vast-threatbus][vast-threatbus] and our  [OpenCTI connector][opencti-connector].- **Snapshotting**: The snapshot feature allows subscribers to directly request  threat intelligence data for a certain time range from other applications.  Threat Bus handles the point-to-point communication of all involved apps.## Getting StartedThe `config.yaml.example` file provides a working configuration for Threat Buswith all existing application plugins enabled together with the RabbitMQbackbone.The following example shows how to connect [Zeek][zeek] via Threat Bus. Thereare more integrations available, so make sure to check out all[Threat Bus projects on PyPI](https://pypi.org/search/?q=threatbus).The example assumes that `threatbus` is available in your PATH. See thesection on [Installation](#installation) below for more information on how toget there.*Start Threat Bus*```shthreatbus```*Start with a specially named config file*The `config.yaml.example` file in this directory gives an overview ofthe available config keys and their default values.```shthreatbus -c /path/to/your/special-config.yaml```*Environment variables take precedence over config file values. Prefixeverything with `THREATBUS_`*```shexport THREATBUS_LOGGING__CONSOLE=truethreatbus -c /path/to/your/special-config.yaml```Note that you must use a double underscores `__` in your env to refer to nestedconfig variables.*Start Zeek as Threat Bus app*```shzeek -i &lt;INTERFACE&gt; -C ./apps/zeek/threatbus.zeek```*Start Zeek and request a snapshot*```shzeek -i &lt;INTERFACE&gt; -C ./apps/zeek/threatbus.zeek &quot;Tenzir::snapshot_intel=30 days&quot;```Threat Bus also ships as pre-built Docker image and is available on[Docker Hub](https://hub.docker.com/r/tenzir/threatbus).*Use the Threat Bus Docker container*```shdocker run tenzir/threatbus:latest --help```*Start Threat Bus container with a custom config file*```shdocker run -p 47661:47661 -v $PWD/my-custom-config.yaml:/opt/tenzir/threatbus/my-custom-config.yaml tenzir/threatbus:latest -c my-custom-config.yaml```Tip: Threat Bus checks for config files with default names. If you mount yourconfig file to `/opt/tenzir/threatbus/config.yaml`, you can start theapplication without specifying the config file location with the `-c` parameter.## InstallationInstall `threatbus` and all plugins that you require. Optionally, use a virtualenvironment.Note that Threat Bus requires at least Python 3.7+, earlier versions are not supported.```virtualenv venv                       # optionalsource venv/bin/activate              # optionalpip install threatbuspip install threatbus-inmem           # inmemory backbone pluginpip install threatbus-rabbitmq        # RabbitMQ backbone pluginpip install threatbus-misp[zmq]       # MISP application pluginpip install threatbus-zeek            # Zeek application pluginpip install threatbus-zmq             # ZeroMQ application pluginpip install threatbus-&lt;plugin_name&gt;```### TestingUse the `Makefile` to run unit and integration tests.```make unit-testsmake integration-tests```The integration tests require a local [Zeek][zeek] and[Docker](https://www.docker.com/) installation.## DevelopmentSetup a virtual environment and install `threatbus` and some plugins with thein development mode:```virtualenv venvsource venv/bin/activatemake dev-mode```### Configuration &amp; ExtensionA plugin must define a `setup.py`. Whenever a plugin is installed, you have toadd a corresponding configuration section to `threatbus`' `config.yaml`. Thatsection has to be named after the `name` in the entrypoint declaration of theplugin's `setup.py` file.Please adhere to the [plugin naming conventions](https://pluggy.readthedocs.io/en/latest/#a-complete-example)and always prefix your plugin name with `threatbus-`.Plugins can either be *apps* or *backbones*. Application plugins (apps) add newfunctionality to Threat Bus and allow communication to a specific app and/orvia a specific protocol (e.g., ZeroMQ or Zeek/broker). Backbone plugins add anew storage and distribution backend to Threat Bus (e.g., in-memory orRabbitMQ).Example:- plugin folder structure:  ```sh  plugins  ├── apps  |   └── threatbus-myapp  │       ├── setup.py  |       └── threatbus_myapp.py  └── backbones      └── threatbus-inmem          ├── setup.py          └── threatbus_inmem.py  ```- `setup.py`  ```py  from setuptools import setup  setup(    name=&quot;threatbus-myapp&quot;,    install_requires=&quot;threatbus&quot;,    entry_points={&quot;threatbus.app&quot;: [&quot;myapp = threatbus_myapp&quot;]},    py_modules=[&quot;threatbus_myapp&quot;],  )  ```- `config.yaml` entry for `threatbus`  ```yaml  ...  plugins:    apps:      myapp:      ...  ```### Threat Bus APIPlugins specifications are available in `threatbus/appspecs.py` and`threatbus/backbonespecs.py`, respectively. For any plugin, you should at leastimplement the `run` function.App plugins are provided two callback functions to use for subscriptionmanagement. Internally, Threat Bus will propagate subscription requests to allinstalled backbone plugins.The subscription callback allows applications to request an optional snapshottime delta. Threat Bus will forward snapshot requests to all those apps thathave implemented the snapshot feature (see `threatbus/appspecs.py`).### ImplementationPlease use the[StoppableWorker](https://github.com/tenzir/threatbus/blob/master/threatbus/stoppable_worker.py)base class to model your plugin's busy work. Plugins should never block the mainthread of the application. Implementing that class also facilitates a gracefulshutdown.All officially maintained Threat Bus plugins implement `StoppableWorker`. Referto any of the existing plugins for an example.## LicenseThreat Bus comes with a [3-clause BSD license][license-url].[opencti]: https://www.opencti.io/[opencti-connector]: https://github.com/OpenCTI-Platform/connectors/tree/master/stream/threatbus[misp]: https://github.com/misp/misp[vast]: https://github.com/tenzir/vast[docs]: https://docs.tenzir.com/threatbus[zeek]: https://www.zeek.org[cif]: https://github.com/csirtgadgets/bearded-avenger[zmq]: https://zeromq.org/[misp-zmq-config]: https://github.com/MISP/misp-book/tree/master/misp-zmq#misp-zeromq-configuration[plugin-types]: https://docs.tenzir.com/threatbus/plugins/overview[plugin-development]: https://docs.tenzir.com/threatbus/plugins/plugin-development[vast-threatbus]: https://github.com/tenzir/threatbus/tree/master/apps/vast[pypi-badge]: https://img.shields.io/pypi/v/threatbus.svg[pypi-url]: https://pypi.org/project/threatbus[contributing-url]: https://github.com/tenzir/.github/blob/master/contributing.md[latest-release-badge]: https://img.shields.io/github/commits-since/tenzir/threatbus/latest.svg?color=green[latest-release-url]: https://github.com/tenzir/threatbus/releases[ci-url]: https://github.com/tenzir/threatbus/actions?query=branch%3Amaster[ci-badge]: https://github.com/tenzir/threatbus/workflows/Python%20Egg/badge.svg?branch=master[chat-badge]: https://img.shields.io/badge/Slack-Tenzir%20Community%20Chat-brightgreen?logo=slack&amp;color=purple&amp;style=flat[chat-url]: http://slack.tenzir.com[license-badge]: https://img.shields.io/badge/license-BSD-blue.svg[license-url]: https://github.com/tenzir/threatbus/blob/master/COPYING[beta-badge]: https://img.shields.io/badge/stage-beta-blue[lgtm-alerts-badge]: https://img.shields.io/lgtm/alerts/g/tenzir/threatbus.svg?logo=lgtm&amp;logoWidth=18[lgtm-alerts-url]: https://lgtm.com/projects/g/tenzir/threatbus/alerts/[lgtm-quality-badge]: https://img.shields.io/lgtm/grade/python/g/tenzir/threatbus.svg?logo=lgtm&amp;logoWidth=18[lgtm-quality-url]: https://lgtm.com/projects/g/tenzir/threatbus/context:python</longdescription>
</pkgmetadata>