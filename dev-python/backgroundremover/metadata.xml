<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BackgroundRemover![Background Remover](https://raw.githubusercontent.com/nadermx/backgroundremover/main/examplefiles/backgroundremoverexample.png)&lt;img alt=&quot;background remover video&quot; src=&quot;https://raw.githubusercontent.com/nadermx/backgroundremover/main/examplefiles/backgroundremoverprocessed.gif&quot; height=&quot;200&quot; /&gt;&lt;br&gt;BackgroundRemover is a command line tool to remove background from [image](https://github.com/nadermx/backgroundremover#image) and [video](https://github.com/nadermx/backgroundremover#video) using AI, made by [nadermx](https://john.nader.mx) to power [https://BackgroundRemoverAI.com](https://backgroundremoverai.com). If you wonder why it was made read this [short blog post](https://johnathannader.com/my-first-open-source-project/).&lt;br&gt;### Requirements* python &gt;= 3.6* python3.6-dev #or what ever version of python you use* torch and torchvision stable version (https://pytorch.org)* ffmpeg 4.4+#### How to install torch and fmpegGo to https://pytorch.org and scroll down to `INSTALL PYTORCH` section and follow the instructions.For example:```PyTorch Build: Stable (1.7.1)Your OS: WindowsPackage: PipLanguage: PythonCUDA: None```To install ffmpeg and python-dev```sudo apt install ffmpeg python3.6-dev```### InstallationTo Install backgroundremover, install it from pypi```bashpip install --upgrade pippip install backgroundremover```Please note that when you first run the program, it will check to see if you have the u2net models, if you do not, it will pull them from this repoIt is also possible to run this without installing it via pip, just clone the git to local start a virtual env and install requirements and run```bashpython -m backgroundremover.cmd.cli -i &quot;video.mp4&quot; -mk -o &quot;output.mov&quot;```and for windows```bashpython.exe -m backgroundremover.cmd.cli -i &quot;video.mp4&quot; -mk -o &quot;output.mov&quot;```### Installation using Docker```bashgit clone https://github.com/nadermx/backgroundremover.gitcd backgroundremoverdocker build -t bgremover .alias backgroundremover='docker run -it --rm -v &quot;$(pwd):/tmp&quot; bgremover:latest'```### Usage as a cli## ImageRemove the background from a local file image```bashbackgroundremover -i &quot;/path/to/image.jpeg&quot; -o &quot;output.png&quot;```### Advance usage for image background removalSometimes it is possible to achieve better results by turning on alpha matting. Example:```bashbackgroundremover -i &quot;/path/to/image.jpeg&quot; -a -ae 15 -o &quot;output.png&quot;```change the model for different background removal methods between `u2netp`, `u2net`, or `u2net_human_seg````bashbackgroundremover -i &quot;/path/to/image.jpeg&quot; -m &quot;u2net_human_seg&quot; -o &quot;output.png&quot;```## Video### remove background from video and make transparent mov```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -tv -o &quot;output.mov&quot;```### remove background from local video and overlay it over other video```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -tov &quot;/path/to/videtobeoverlayed.mp4&quot; -o &quot;output.mov&quot;```### remove background from local video and overlay it over an image```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -toi &quot;/path/to/videtobeoverlayed.mp4&quot; -o &quot;output.mov&quot;```### remove background from video and make transparent gif```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -tg -o &quot;output.gif&quot;```### Make matte key file (green screen overlay)Make a matte file for premiere```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -mk -o &quot;output.matte.mp4&quot;```### Advance usage for videoChange the framerate of the video (default is set to 30)```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -fr 30 -tv -o &quot;output.mov&quot;```Set total number of frames of the video (default is set to -1, ie the remove background from full video)```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -fl 150 -tv -o &quot;output.mov&quot;```Change the gpu batch size of the video (default is set to 1)```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -gb 4 -tv -o &quot;output.mov&quot;```Change the number of workers working on video (default is set to 1)```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -wn 4 -tv -o &quot;output.mov&quot;```change the model for different background removal methods between `u2netp`, `u2net`, or `u2net_human_seg` and limit the frames to 150```bashbackgroundremover -i &quot;/path/to/video.mp4&quot; -m &quot;u2net_human_seg&quot; -fl 150 -tv -o &quot;output.mov&quot;```## Todo- convert logic from video to image to utilize more GPU on image removal- clean up documentation a bit more- add ability to adjust and give feedback images or videos to datasets- add ability to realtime background removal for videos, for streaming- finish flask server api- add ability to use other models than u2net, ie your own- other### Pull requestsAccepted### If you like this libraryGive a link to our project [BackgroundRemoverAI.com](https://backgroundremoverai.com) or this git, telling people that you like it or use it.### Reason for projectWe made it our own package after merging together parts of others, adding in a few features of our own via posting parts as bounty questions on superuser, etc.  As well as asked on hackernews earlier to open source the image part, so decided to add in video, and a bit more.### References- https://arxiv.org/pdf/2005.09007.pdf- https://github.com/NathanUA/U-2-Net- https://github.com/pymatting/pymatting- https://github.com/danielgatis/rembg- https://github.com/ecsplendid/rembg-greenscreen- https://superuser.com/questions/1647590/have-ffmpeg-merge-a-matte-key-file-over-the-normal-video-file-removing-the-backg- https://superuser.com/questions/1648680/ffmpeg-alphamerge-two-videos-into-a-gif-with-transparent-background/1649339?noredirect=1#comment2522687_1649339- https://superuser.com/questions/1649817/ffmpeg-overlay-a-video-after-alphamerging-two-others/1649856#1649856### License- Copyright (c) 2021-present [Johnathan Nader](https://github.com/nadermx)- Copyright (c) 2020-present [Lucas Nestler](https://github.com/ClashLuke)- Copyright (c) 2020-present [Dr. Tim Scarfe](https://github.com/ecsplendid)- Copyright (c) 2020-present [Daniel Gatis](https://github.com/danielgatis)Code Licensed under [MIT License](./LICENSE.txt)Models Licensed under [Apache License 2.0](./models/license)</longdescription>
</pkgmetadata>