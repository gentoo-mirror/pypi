<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>About-----python-monkey-business is a package that provides a decorator formonkey-patching python functions at runtime.Installation------------Using pip::    pip install python-monkey-businessOr, to install from source::    pip install -e git+https://github.com/theatlantic/python-monkey-business.git#egg=python-monkey-businessIf the source is already checked out, use setuptools::    python setup.py developUsage-----To use python-monkey-business to swap out a function in a class or module at runtime:.. code-block:: python    import monkeybiz    from foomodule import FooClass    import barmodule    # This replaces FooClass.bar with our method    @monkeybiz.patch(FooClass)    def bar(original_fn, *args, **kwargs):        print &quot;Patched!&quot;        return original_fn(*args, **kwargs)    # This replaces barmodule.baz with our function    @monkeybiz.patch(barmodule)    def baz(original_fn, *args, **kwargs):        #...The first argument to ``monkeybiz.patch`` can be either a module, a class,or a list of modules and/or classes. The decorator also takes optional``name`` and ``avoid_doublewrap`` keyword arguments. If ``name`` is omitted,the name of the function being patched will be the name of the function beingdecorated. If ``avoid_doublewrap`` is True (the default), then functions andmethods can only be patched once using this function.Use ``monkeybiz.unpatch()`` to revert a monkey-patched function to its original.License-------This code is licensed under the `Simplified BSDLicense &lt;http://opensource.org/licenses/BSD-2-Clause&gt;`_. View the``LICENSE`` file under the root directory for complete license andcopyright information.</longdescription>
</pkgmetadata>