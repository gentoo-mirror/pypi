<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://lundberg.github.io/respx/&quot;&gt;&lt;img width=&quot;350&quot; height=&quot;208&quot; src=&quot;https://raw.githubusercontent.com/lundberg/respx/master/docs/img/respx.png&quot; alt='RESPX'&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;strong&gt;RESPX&lt;/strong&gt; &lt;em&gt;- Mock HTTPX with awesome request patterns and response side effects.&lt;/em&gt;&lt;/p&gt;---[![tests](https://img.shields.io/github/workflow/status/lundberg/respx/test?label=tests&amp;logo=github&amp;logoColor=white&amp;style=for-the-badge)](https://github.com/lundberg/respx/actions/workflows/test.yml)[![codecov](https://img.shields.io/codecov/c/github/lundberg/respx?logo=codecov&amp;logoColor=white&amp;style=for-the-badge)](https://codecov.io/gh/lundberg/respx)[![PyPi Version](https://img.shields.io/pypi/v/respx?logo=pypi&amp;logoColor=white&amp;style=for-the-badge)](https://pypi.org/project/respx/)[![Python Versions](https://img.shields.io/pypi/pyversions/respx?logo=python&amp;logoColor=white&amp;style=for-the-badge)](https://pypi.org/project/respx/)## DocumentationFull documentation is available at[lundberg.github.io/respx](https://lundberg.github.io/respx/)## QuickStartRESPX is a simple, _yet powerful_, utility for mocking out the[HTTPX](https://www.python-httpx.org/), _and[HTTP Core](https://www.encode.io/httpcore/)_, libraries.Start by [patching](https://lundberg.github.io/respx/guide/#mock-httpx) `HTTPX`, using`respx.mock`, then add request[routes](https://lundberg.github.io/respx/guide/#routing-requests) to mock[responses](https://lundberg.github.io/respx/guide/#mocking-responses).```pythonimport httpximport respxfrom httpx import Response@respx.mockdef test_example():    my_route = respx.get(&quot;https://example.org/&quot;).mock(return_value=Response(204))    response = httpx.get(&quot;https://example.org/&quot;)    assert my_route.called    assert response.status_code == 204```&gt; Read the [User Guide](https://lundberg.github.io/respx/guide/) for a complete&gt; walk-through.### pytest + httpxFor a neater `pytest` experience, RESPX includes a `respx_mock` _fixture_ for easy`HTTPX` mocking, along with an optional `respx` _marker_ to fine-tune the mock[settings](https://lundberg.github.io/respx/api/#configuration).```pythonimport httpximport pytestdef test_default(respx_mock):    respx_mock.get(&quot;https://foo.bar/&quot;).mock(return_value=httpx.Response(204))    response = httpx.get(&quot;https://foo.bar/&quot;)    assert response.status_code == 204@pytest.mark.respx(base_url=&quot;https://foo.bar&quot;)def test_with_marker(respx_mock):    respx_mock.get(&quot;/baz/&quot;).mock(return_value=httpx.Response(204))    response = httpx.get(&quot;https://foo.bar/baz/&quot;)    assert response.status_code == 204```## InstallationInstall with pip:```console$ pip install respx```Requires Python 3.7+ and HTTPX 0.21+. See[Changelog](https://github.com/lundberg/respx/blob/master/CHANGELOG.md) for older HTTPXcompatibility.</longdescription>
</pkgmetadata>