<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Guvicorn_loggerThis lib colored, normalizes and joins logs between Uvicorn and Gunicorn.There is a common problem when using Uvicorn for Dev and Gunicorn for Prod, normally the logs generated by Uvicorn wokers are not captured by Gunicorn.This lib facilitates this configuration...#### Easy config```pythonfrom guvicorn_logger import Loggerlogger = Logger().configure()```#### Example```pythonlogger.info(&quot;Message - Info&quot;)logger.error(&quot;Message - Error&quot;)logger.warning(&quot;Message - Warning&quot;)logger.critical(&quot;Message - Critical&quot;)```#### Output- Framework (Uvicorn, Gunicorn, Fastapi)![alt text](https://raw.githubusercontent.com/carlos-rian/guvicorn_logger/main/docs/img/framework-web.JPG)### FastAPI | asgi-correlation-id```pythonfrom asgi_correlation_id import CorrelationIdMiddlewarefrom fastapi import FastAPIfrom guvicorn_logger import Loggerapp = FastAPI()app.add_middleware(CorrelationIdMiddleware)logger = Logger(correlation_id=True).configure()@app.get(&quot;/&quot;)def main():    logger.info(&quot;Message - Info&quot;)    logger.error(&quot;Message - Error&quot;)    logger.warning(&quot;Message - Warning&quot;)    logger.critical(&quot;Message - Critical&quot;)```#### Output![alt text](https://raw.githubusercontent.com/carlos-rian/guvicorn_logger/main/docs/img/fastapi.png)</longdescription>
</pkgmetadata>