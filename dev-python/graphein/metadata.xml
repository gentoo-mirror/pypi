<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/a-r-j/graphein-binder/master?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252Fa-r-j%252Fgraphein%26urlpath%3Dlab%252Ftree%252Fgraphein%252Fnotebooks%26branch%3Dmaster)[![PyPI version](https://badge.fury.io/py/graphein.svg)](https://badge.fury.io/py/graphein)![supported python versions](https://img.shields.io/pypi/pyversions/graphein)[![Docs](https://assets.readthedocs.org/static/projects/badges/passing-flat.svg)](http://www.graphein.ai)[![DOI:10.1101/2020.07.15.204701](https://zenodo.org/badge/DOI/10.1101/2020.07.15.204701.svg)](https://doi.org/10.1101/2020.07.15.204701)[![Project Status: Active – The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active) [![Project Status: Active – The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active)[![CodeFactor](https://www.codefactor.io/repository/github/a-r-j/graphein/badge)](https://www.codefactor.io/repository/github/a-r-j/graphein)[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=a-r-j_graphein&amp;metric=alert_status)](https://sonarcloud.io/dashboard?id=a-r-j_graphein)[![Bugs](https://sonarcloud.io/api/project_badges/measure?project=a-r-j_graphein&amp;metric=bugs)](https://sonarcloud.io/dashboard?id=a-r-j_graphein)[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=a-r-j_graphein&amp;metric=sqale_rating)](https://sonarcloud.io/dashboard?id=a-r-j_graphein)[![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=a-r-j_graphein&amp;metric=reliability_rating)](https://sonarcloud.io/dashboard?id=a-r-j_graphein)[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/graphein)[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)&lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://www.graphein.ai/#gh-light-mode-only&quot;&gt;    &lt;img src=&quot;./imgs/graphein.png&quot; width=&quot;100%&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://www.graphein.ai/#gh-dark-mode-only&quot;&gt;    &lt;img src=&quot;./imgs/graphein_dark.png&quot; width=&quot;100%&quot;/&gt;  &lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;/br&gt;[Documentation](http://www.graphein.ai) | [Paper](https://www.biorxiv.org/content/10.1101/2020.07.15.204701v1) | [Tutorials](http://graphein.ai/notebooks_index.html) | [Installation](#installation)Protein &amp; Interactomic Graph LibraryThis package provides functionality for producing geometric representations of protein and RNA structures, and biological interaction networks. We provide compatibility with standard PyData formats, as well as graph objects designed for ease of use with popular deep learning libraries.## What's New?|   |   |   ||---|---|---|| 1.7.0 | [FoldComp Datasets](http://graphein.ai/notebooks/foldcomp.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/foldcomp.ipynb)   || 1.7.0 | [Creating Datasets from the PDB](http://graphein.ai/notebooks/creating_datasets_from_the_pdb.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/creating_datasets_from_the_pdb.ipynb)   || 1.6.0 | [Protein Tensor Module](http://graphein.ai/notebooks/protein_tensors.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/protein_tensors.ipynb)   || 1.5.0 | [Protein Graph Creation from AlphaFold2!](http://graphein.ai/notebooks/alphafold_protein_graph_tutorial.html)  | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/residue_graphs.ipynb) || 1.5.0 | [RNA Graph Construction from Dotbracket notation](http://graphein.ai/modules/graphein.rna.html) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/rna_graph_tutorial.ipynb) || 1.4.0 | [Constructing molecular graphs](http://graphein.ai/notebooks/molecule_tutorial.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/molecule_tutorial.ipynb)   || 1.3.0 | [Ready-to-go Dataloaders for PyTorch Geometric](http://graphein.ai/notebooks/dataloader_tutorial.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/dataloader_tutorial.ipynb)   || 1.2.0 | [Extracting subgraphs from protein graphs](http://graphein.ai/notebooks/subgraphing_tutorial.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/subgraphing_tutorial.ipynb)   || 1.2.0 | [Protein Graph Analytics](http://graphein.ai/notebooks/protein_graph_analytics.html)  |  [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/protein_graph_analytics.ipynb) || 1.2.0 | [Graphein CLI](http://graphein.ai/getting_started/usage.html)  |   || 1.2.0 |[Protein Graph Visualisation!](http://graphein.ai/notebooks/interactive_plotly_example.html) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/interactive_plotly_example.ipynb)| 1.1.0 | [Protein - Protein Interaction Network Support &amp; Structural Interactomics (Using AlphaFold2!)](http://graphein.ai/notebooks/ppi_tutorial.html) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/ppi_graph.ipynb) || 1.0.0 | [High and Low-level API for massive flexibility - create your own bespoke workflows!](http://graphein.ai/notebooks/residue_graphs.html) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/residue_graphs.ipynb) |## Example usageGraphein provides both a programmatic API and a command-line interface for constructing graphs.### CLIGraphein configs can be specified as `.yaml` files to batch process graphs from the commandline.[Docs](http://graphein.ai/getting_started/usage.html)```bashgraphein -c config.yaml -p path/to/pdbs -o path/to/output```### Creating a Protein Graph|   |   |   ||---|---|---|[Tutorial (Residue-level)](http://graphein.ai/notebooks/residue_graphs.html) | [Tutorial (Atomic)](http://graphein.ai/notebooks/atom_graph_tutorial.html) | [Docs](http://graphein.ai/modules/graphein.protein.html#module-graphein.protein.graphs)| [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/residue_graphs.ipynb) | [![Open In Colab(https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/atom_graph_tutorial.ipynb) | |```pythonfrom graphein.protein.config import ProteinGraphConfigfrom graphein.protein.graphs import construct_graphconfig = ProteinGraphConfig()g = construct_graph(config=config, pdb_code=&quot;3eiy&quot;)```### Creating a Protein Graph from the AlphaFold Protein Structure Database|   |   ||---|---|| [Tutorial](http://graphein.ai/notebooks/alphafold_protein_graph_tutorial.html) | [Docs](http://graphein.ai/modules/graphein.protein.html#module-graphein.protein.graphs) || [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/residue_graphs.ipynb)|```pythonfrom graphein.protein.config import ProteinGraphConfigfrom graphein.protein.graphs import construct_graphfrom graphein.protein.utils import download_alphafold_structureconfig = ProteinGraphConfig()fp = download_alphafold_structure(&quot;Q5VSL9&quot;, aligned_score=False)g = construct_graph(config=config, path=fp)```### Creating a Protein Mesh|   |   ||---|---|| [Tutorial](http://graphein.ai/notebooks/protein_mesh_tutorial.html) | [Docs](http://graphein.ai/modules/graphein.protein.html#module-graphein.protein.meshes) || [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/protein_mesh_tutorial.ipynb) | |```pythonfrom graphein.protein.config import ProteinMeshConfigfrom graphein.protein.meshes import create_meshverts, faces, aux = create_mesh(pdb_code=&quot;3eiy&quot;, config=config)```### Creating Molecular GraphsGraphein can create molecular graphs from smiles strings as well as `.sdf`, `.mol2`, and `.pdb` files|   |   ||---|---|| [Tutorial](http://graphein.ai/notebooks/molecule_tutorial.html) | [Docs](http://graphein.ai/modules/graphein.molecule.html) || [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/molecule_tutorial.ipynb) | |```pythonfrom graphein.molecule.config import MoleculeGraphConfigfrom graphein.molecule.graphs import construct_graphg = create_graph(smiles=&quot;CC(=O)OC1=CC=CC=C1C(=O)O&quot;, config=config)```### Creating an RNA Graph|   |   ||---|---||[Tutorial](http://graphein.ai/notebooks/rna_notebooks.html) | [Docs](http://graphein.ai/modules/graphein.rna.html) ||[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/rna_graph_tutorial.ipynb) | |```pythonfrom graphein.rna.graphs import construct_rna_graph# Build the graph from a dotbracket &amp; optional sequencerna = construct_rna_graph(dotbracket='..(((((..(((...)))..)))))...',                          sequence='UUGGAGUACACAACCUGUACACUCUUUC')```### Creating a Protein-Protein Interaction Graph|   |   ||---|---|| [Tutorial](http://graphein.ai/notebooks/ppi_tutorial.html) | [Docs](http://graphein.ai/modules/graphein.ppi.html) || [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/ppi_graph.ipynb)|```pythonfrom graphein.ppi.config import PPIGraphConfigfrom graphein.ppi.graphs import compute_ppi_graphfrom graphein.ppi.edges import add_string_edges, add_biogrid_edgesconfig = PPIGraphConfig()protein_list = [&quot;CDC42&quot;, &quot;CDK1&quot;, &quot;KIF23&quot;, &quot;PLK1&quot;, &quot;RAC2&quot;, &quot;RACGAP1&quot;, &quot;RHOA&quot;, &quot;RHOB&quot;]g = compute_ppi_graph(config=config,                      protein_list=protein_list,                      edge_construction_funcs=[add_string_edges, add_biogrid_edges]                     )```### Creating a Gene Regulatory Network Graph|   |   ||---|---||[Tutorial](http://graphein.ai/notebooks/grn_tutorial.html) | [Docs](http://graphein.ai/modules/graphein.grn.html) || [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/a-r-j/graphein/blob/master/notebooks/grn_tutorial.ipynb) |```pythonfrom graphein.grn.config import GRNGraphConfigfrom graphein.grn.graphs import compute_grn_graphfrom graphein.grn.edges import add_regnetwork_edges, add_trrust_edgesconfig = GRNGraphConfig()gene_list = [&quot;AATF&quot;, &quot;MYC&quot;, &quot;USF1&quot;, &quot;SP1&quot;, &quot;TP53&quot;, &quot;DUSP1&quot;]g = compute_grn_graph(    gene_list=gene_list,    edge_construction_funcs=[        partial(add_trrust_edges, trrust_filtering_funcs=config.trrust_config.filtering_functions),        partial(add_regnetwork_edges, regnetwork_filtering_funcs=config.regnetwork_config.filtering_functions),    ],)```## Installation### PipThe simplest install is via pip. *N.B this does not install ML/DL libraries which are required for conversion to their data formats and for generating protein structure meshes with PyTorch 3D.* [Further details](http://graphein.ai//getting_started/installation.html)```bashpip install graphein # For base installpip install graphein[extras] # For additional featurisation dependenciespip install graphein[dev] # For dev dependenciespip install graphein[all] # To get the lot```However, there are a number of (optional) utilities ([DSSP](https://anaconda.org/salilab/dssp), [PyMol](https://pymol.org/2/), [GetContacts](https://getcontacts.github.io/)) that are not available via PyPI:```conda install -c salilab dssp # Required for computing secondary structural featuresconda install -c schrodinger pymol # Required for PyMol visualisations &amp; mesh generation# GetContacts - used as an alternative way to compute intramolecular interactionsconda install -c conda-forge vmd-pythongit clone https://github.com/getcontacts/getcontacts# Add folder to PATHecho &quot;export PATH=\$PATH:`pwd`/getcontacts&quot; &gt;&gt; ~/.bashrcsource ~/.bashrcTo test the installation, run:cd getcontacts/example/5xndget_dynamic_contacts.py --topology 5xnd_topology.pdb \                        --trajectory 5xnd_trajectory.dcd \                        --itypes hb \                        --output 5xnd_hbonds.tsv```### Conda environmentThe dev environment includes GPU Builds (CUDA 11.1) for each of the deep learning libraries integrated into graphein.```bashgit clone https://www.github.com/a-r-j/grapheincd grapheinconda env create -f environment-dev.ymlpip install -e .```A lighter install can be performed with:```bashgit clone https://www.github.com/a-r-j/grapheincd grapheinconda env create -f environment.ymlpip install -e .```### DockerfileWe provide two `docker-compose` files for CPU (`docker-compose.cpu.yml`) and GPU usage (`docker-compose.yml`) locally. For GPU usage please ensure that you have [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html) installed. Ensure that you install the locally mounted volume after entering the container (`pip install -e .`). This will also setup the dev environment locally.To build (GPU) run:```docker-compose up -d --build # start the containerdocker-compose down # stop the container```## Citing GrapheinPlease consider citing graphein if it proves useful in your work.```bibtex@inproceedings{jamasb2022graphein,  title={Graphein - a Python Library for Geometric Deep Learning and Network Analysis on Biomolecular Structures and Interaction Networks},  author={Arian Rokkum Jamasb and Ramon Vi{\~n}as Torn{\'e} and Eric J Ma and Yuanqi Du and Charles Harris and Kexin Huang and Dominic Hall and Pietro Lio and Tom Leon Blundell},  booktitle={Advances in Neural Information Processing Systems},  editor={Alice H. Oh and Alekh Agarwal and Danielle Belgrave and Kyunghyun Cho},  year={2022},  url={https://openreview.net/forum?id=9xRZlV6GfOX}}```</longdescription>
</pkgmetadata>