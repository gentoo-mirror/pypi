<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dash JBrowse[Dash](https://dash.plotly.com/introduction) is a popular open-source frameworkfor building data-driven web apps. It is built on top of ReactJS, and provides a[toolkit](https://dash.plotly.com/plugins) for converting React components intodash components that can be used in Dash apps written in Python, R, Julia, F# orMatlab.Dash JBrowse's `LinearGenomeView` is a Dash component that wraps the[JBrowse React Linear Genome View](https://jbrowse.org/storybook/lgv/main/) andmakes it possible to embed an interactive genome browser into any Dashapplication. Now supporting the `CircularGenomeView` as well.![Dash JBrowse LGV configured with human data](https://raw.githubusercontent.com/GMOD/dash_jbrowse/main/images/demo.png)![Dash JBrowse CGV configured with human data](https://raw.githubusercontent.com/GMOD/dash_jbrowse/main/images/demo2.png)## Quickstart```$ pip install dash_jbrowse```Basic linear genome view with an assembly```import dashimport dash_jbrowsefrom dash import htmlprint(dash_jbrowse.__version__)app = dash.Dash(__name__)my_assembly = {    &quot;name&quot;: &quot;GRCh38&quot;,    &quot;sequence&quot;: {        &quot;type&quot;: &quot;ReferenceSequenceTrack&quot;,        &quot;trackId&quot;: &quot;GRCh38-ReferenceSequenceTrack&quot;,        &quot;adapter&quot;: {            &quot;type&quot;: &quot;BgzipFastaAdapter&quot;,            &quot;fastaLocation&quot;: {                &quot;uri&quot;: &quot;https://s3.amazonaws.com/jbrowse.org/genomes/GRCh38/fasta/GRCh38.fa.gz&quot;,            },            &quot;faiLocation&quot;: {                &quot;uri&quot;: &quot;https://s3.amazonaws.com/jbrowse.org/genomes/GRCh38/fasta/GRCh38.fa.gz.fai&quot;,            },            &quot;gziLocation&quot;: {                &quot;uri&quot;: &quot;https://s3.amazonaws.com/jbrowse.org/genomes/GRCh38/fasta/GRCh38.fa.gz.gzi&quot;,            },        },    },    &quot;aliases&quot;: [&quot;hg38&quot;],    &quot;refNameAliases&quot;: {        &quot;adapter&quot;: {            &quot;type&quot;: &quot;RefNameAliasAdapter&quot;,            &quot;location&quot;: {                &quot;uri&quot;: &quot;https://s3.amazonaws.com/jbrowse.org/genomes/GRCh38/hg38_aliases.txt&quot;,            },        },    },}app.layout = html.Div(    [        dash_jbrowse.LinearGenomeView(            id=&quot;lgv-hg38&quot;,            assembly=my_assembly        ),    ],    id='test')if __name__ == &quot;__main__&quot;:    app.run_server(debug=True)```An example of the CGV can be found in [usage_cgv.py](usage_cgv.py).## Installation### PyPI```$ pip install dash_jbrowse```### Install with virtual venvAfter cloning this repository, install virtualenv```$ pip install virtualenv``````$ cd dash_jbrowse$ python3 -m venv ./venv$ source venv/bin/activate$ pip install -r requirements.txt```Then you can run the example app found in usage.py```python usage.py```## User GuideThe views can be customized in many ways, but the only properties that arerequired to launch it are the id required for dash call backs and the assembly.- `id` (string, required): the id used for dash callbacks. A basic example of  this component using dash callbacks can be found under the examples directory)- `assembly` (object, required): the configuration object of the assembly being  used for the browser. More information about the configuration of the assembly  can be found  [here](https://jbrowse.org/jb2/docs/config_guide/#configuring-assemblies)._top level assembly config_```json{  &quot;name&quot;: &quot;assemblyName&quot;,  &quot;aliases&quot;: [],  &quot;sequence&quot;: {},  &quot;refNameAliases&quot;: {}}```- `tracks` (list, optional) - list of track configuration objects._top level track config_```json{  &quot;trackId&quot;: &quot;test-id&quot;,  &quot;name&quot;: &quot;track name&quot;,  &quot;assemblyNames&quot;: [],  &quot;category&quot;: []}```- `defaultSession` (object, optional) - information about the current app state  such as what views are open_default session config_```json{  &quot;name&quot;: &quot;this session&quot;,  &quot;view&quot;: {    &quot;id&quot;: &quot;linearGenomeView&quot;,    &quot;type&quot;: &quot;LinearGenomeView&quot;  }}```Note: `&quot;type&quot;: &quot;CircularGenomeView&quot;` for CGV- `location` (string or object, optional) - initial  [location](https://jbrowse.org/jb2/docs/user_guide/#using-the-location-search-box)  for when the browser first loads, e.g '1:500-1000' or location object_location object_```json{  &quot;refName&quot;: 1,  &quot;start&quot;: 500,  &quot;end&quot;: 1000}```Note:- Use 0-based coordinates in the location object.- The location field is only used for LGV and not CGV.Checkout the storybook[JBrowse React Linear Genome View docs](https://jbrowse.org/storybook/lgv/main/?path=/story/default-sessions--page)or the[JBrowse React Circular Genome View docs](https://jbrowse.org/storybook/cgv/v1.5.9/?path=/story/getting-started--page)for more configuration examples.## Advanced Customization### Text SearchingAdding text searching to the JBrowse React Linear Genome View (not currentlyavailable for the CGV) requires a couple of extra steps. We first need to createan index via the[JBrowse CLI tools](https://jbrowse.org/jb2/docs/cli/#jbrowse-text-index). Oncean index is created, we can add a text search adapter to the list of aggregatetext search adapters in this component or to the configuration object of atrack.- `aggregateTextSearchAdapters` (object, optional) - configuration of an index  used for text searchingAggregate text search adapter to use in the component.```json{  &quot;type&quot;: &quot;TrixTextSearchAdapter&quot;,  &quot;textSearchAdapterId&quot;: &quot;adapter-id&quot;,  &quot;ixFilePath&quot;: {    &quot;uri&quot;: &quot;url/path/to/my/ix/file&quot;,    &quot;locationType&quot;: &quot;UriLocation&quot;  },  &quot;ixxFilePath&quot;: {    &quot;uri&quot;: &quot;url/path/to/my/ixx/file&quot;,    &quot;locationType&quot;: &quot;UriLocation&quot;  },  &quot;metaFilePath&quot;: {    &quot;uri&quot;: &quot;url/path/to/my/meta.json/file&quot;,    &quot;locationType&quot;: &quot;UriLocation&quot;  }}```On a track configuration.```json{  &quot;trackId&quot;: &quot;yourtrack&quot;,  &quot;name&quot;: &quot;Track name&quot;,  &quot;adapter&quot;: {    &quot;type&quot;: &quot;Gff3TabixAdapter&quot;,    &quot;gffGzLocation&quot;: {      &quot;uri&quot;: &quot;yourfile.gff.gz&quot;,      &quot;locationType&quot;: &quot;UriLocation&quot;    },    &quot;index&quot;: {      &quot;location&quot;: {        &quot;uri&quot;: &quot;yourfile.gff.gz.tbi&quot;,        &quot;locationType&quot;: &quot;UriLocation&quot;      }    }  },  &quot;textSearching&quot;: {    &quot;textSearchAdapter&quot;: {      &quot;type&quot;: &quot;TrixTextSearchAdapter&quot;,      &quot;textSearchAdapterId&quot;: &quot;hg19-index&quot;,      &quot;ixFilePath&quot;: {        &quot;uri&quot;: &quot;https://jbrowse.org/genomes/hg19/trix/hg19.ix&quot;,        &quot;locationType&quot;: &quot;UriLocation&quot;      },      &quot;ixxFilePath&quot;: {        &quot;uri&quot;: &quot;https://jbrowse.org/genomes/hg19/trix/hg19.ixx&quot;,        &quot;locationType&quot;: &quot;UriLocation&quot;      },      &quot;metaFilePath&quot;: {        &quot;uri&quot;: &quot;https://jbrowse.org/genomes/hg19/trix/meta.json&quot;,        &quot;locationType&quot;: &quot;UriLocation&quot;      },      &quot;assemblyNames&quot;: [&quot;hg19&quot;]    },    &quot;indexingAttributes&quot;: [&quot;Name&quot;, &quot;ID&quot;],    &quot;indexingFeatureTypesToExclude&quot;: [&quot;CDS&quot;, &quot;exon&quot;]  }}```### Custom themes are also available.- `configuration` - (object, optional) - color scheme configuration```json{  &quot;theme&quot;: {    &quot;palette&quot;: {      &quot;primary&quot;: {        &quot;main&quot;: &quot;#311b92&quot;      },      &quot;secondary&quot;: {        &quot;main&quot;: &quot;#0097a7&quot;      },      &quot;tertiary&quot;: {        &quot;main&quot;: &quot;#f57c00&quot;      },      &quot;quaternary&quot;: {        &quot;main&quot;: &quot;#d50000&quot;      },      &quot;bases&quot;: {        &quot;A&quot;: { &quot;main&quot;: &quot;#98FB98&quot; },        &quot;C&quot;: { &quot;main&quot;: &quot;#87CEEB&quot; },        &quot;G&quot;: { &quot;main&quot;: &quot;#DAA520&quot; },        &quot;T&quot;: { &quot;main&quot;: &quot;#DC143C&quot; }      }    }  }}```![&quot;Dash LGV component with a custom theme.&quot;](https://raw.githubusercontent.com/GMOD/dash_jbrowse/main/images/custom_theme.png)## Academic UseThis package was written with funding from the [NHGRI](https://genome.gov/) aspart of the JBrowse project. If you use it in an academic project that youpublish, please cite the most recent JBrowse paper, which will be linked from[jbrowse.org](https://jbrowse.org/).## Resources- More information about `Dash` can be found in this  [post](https://medium.com/plotly/dash-is-react-for-python-r-and-julia-c75822d1cc24)- Examples of the `LinearGenomeView` component can be found in the  [usage.py](usage.py), and [browser.py](./examples/browser.py)- Examples of the `CircularGenomeView` component can be found in the  [usage.py](usage_cgv.py)- [JBrowse React Linear Genome View](https://jbrowse.org/storybook/lgv/main/) -  documentation and examples of the React LGV component.- [JBrowse React Circular Genome View](https://jbrowse.org/storybook/cgv/main/?path=/story/getting-started--page) -  documentation and examples of the React CGV component.- [Config Guide](https://jbrowse.org/jb2/docs/config_guide/) - a guide to  configuring assemblies, tracks, text searching and more.- [JBrowse CLI tools](https://jbrowse.org/jb2/docs/cli/) - installation and  documentation- [TextSearching](https://jbrowse.org/jb2/docs/config_guide/#text-searching) -  documentation of text indexing and text search adapters## Contact usWe **really** love talking to our users. Please reach out with any thoughts youhave on what we are building!- Report a bug or request a feature at  https://github.com/GMOD/dash_jbrowse/issues/new- Join our developers chat at https://gitter.im/GMOD/jbrowse2- Send an email to our mailing list at `gmod-ajax@lists.sourceforge.net`</longdescription>
</pkgmetadata>