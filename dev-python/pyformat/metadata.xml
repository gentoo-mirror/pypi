<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========pyformat========.. image:: https://travis-ci.org/myint/pyformat.svg?branch=master    :target: https://travis-ci.org/myint/pyformat    :alt: Build status*pyformat* formats Python code to follow a consistent style.Features========- Formats code to follow the PEP 8 style guide (using autopep8_).- Removes unused imports (using autoflake_).- Formats docstrings to follow PEP 257 (using docformatter_).- Makes strings all use the same type of quote where possible (using unify_).Installation============From pip::    $ pip install --upgrade pyformatExample=======After running::    $ pyformat --in-place example.pyThis code:.. code-block:: python   def launch_rocket   ():       &quot;&quot;&quot;Launch   the   rocket. Go colonize space.&quot;&quot;&quot;   def factorial(x):       '''       Return x factorial.       This uses math.factorial.       '''       import math       import re       import os       return math.factorial( x );   def print_factorial(x):       &quot;&quot;&quot;Print x factorial&quot;&quot;&quot;       print( factorial(x)  )   def main():       &quot;&quot;&quot;Main       function&quot;&quot;&quot;       print_factorial(5)       if factorial(10):         launch_rocket()Gets formatted into this:.. code-block:: python   def launch_rocket():       &quot;&quot;&quot;Launch the rocket.       Go colonize space.       &quot;&quot;&quot;   def factorial(x):       &quot;&quot;&quot;Return x factorial.       This uses math.factorial.       &quot;&quot;&quot;       import math       return math.factorial(x)   def print_factorial(x):       &quot;&quot;&quot;Print x factorial.&quot;&quot;&quot;       print(factorial(x))   def main():       &quot;&quot;&quot;Main function.&quot;&quot;&quot;       print_factorial(5)       if factorial(10):           launch_rocket().. _autoflake: https://github.com/myint/autoflake.. _autopep8: https://github.com/hhatto/autopep8.. _docformatter: https://github.com/myint/docformatter.. _unify: https://github.com/myint/unify</longdescription>
</pkgmetadata>