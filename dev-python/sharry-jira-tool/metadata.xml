<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>########################⚠️⚠️⚠️ Summary ⚠️⚠️⚠️########################⚠️⚠️⚠️ The :code:`sharry-jira-tool` PyPI package is deprecated use :code:`jira-assistant` instead ⚠️⚠️⚠️Jira Tool - userful tool to sort jira stories=============================================|pypi| |python 3.11| |python 3.11 (Mac OS)| |CodeQL| |Documentation|.. |PyPI| image:: https://img.shields.io/pypi/v/sharry-jira-tool.svg?style=flat-square    :target https://pypi.org/project/sharry-jira-tool/    :alt: pypi version.. |python 3.11| image:: https://github.com/SharryXu/jira-tool/actions/workflows/python-3-11-test.yml/badge.svg    :target: https://github.com/SharryXu/jira-tool/actions/workflows/python-3-11-test.yml    :alt: python 3.11.. |python 3.11 (Mac OS)| image:: https://github.com/SharryXu/jira-tool/actions/workflows/python-3-11-macos-test.yml/badge.svg    :target: https://github.com/SharryXu/jira-tool/actions/workflows/python-3-11-macos-test.yml    :alt: python 3.11 (Mac OS).. |CodeQL| image:: https://github.com/sharryxu/jira-tool/workflows/CodeQL/badge.svg    :target: https://github.com/SharryXu/jira-tool/actions/workflows/CodeQL.yml    :alt: CodeQL .. |Documentation| image:: https://readthedocs.org/projects/jira-tool/badge/?version=latest    :target: https://jira-tool.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusInstallation============`jira-tool` can be installed from PyPI using `pip` (note that the package name is different from the importable name)::    pip install -U sharry-jira-toolDownload========jira-tool is available on PyPIhttps://pypi.org/project/sharry-jira-toolCode====The code and issue tracker are hosted on GitHub:https://github.com/SharryXu/jira-toolFeatures========* Parsing the excel file which usually been downloaded from the Jira platform.* Sorting the excel records using some specific logic.* Generating the target excel file which contains the result.* The excel file structure can be customized by JSON file.A Simple Example================You can run below command in the PowerShell (Windows OS) or Shell (UNIX OS) to process the excel files... code-block:: console    sort-excel-file source.xlsxAfter that, you can find the output file in the same folder along with the source file. For more details, please check the help message like below:.. code-block:: console    sort-excel-file -hCurrently, we are using the `jira access token`__ to do the validation and that means we need you to generate your own access token from the website first... __: https://confluence.atlassian.com/enterprise/using-personal-access-tokens-1026032365.html.. code-block:: console    update-jira-info --token &lt;access_token&gt; --url &lt;jira_url&gt;If you want to use your own definition files before processing the excel, you can run below command to access some templates which can help you understand the definition file... code-block:: console    generate-template excel-definitionFor more details, please check the help message like below:.. code-block:: console    generate-template -hCode Example For Developer==========================Here's a simple program, just to give you an idea about how to use this package... code-block:: python  import pathlib  from jira_tool import process_excel_file  HERE = pathlib.Path().resolve()  process_excel_file(HERE / &quot;source.xlsx&quot;, HERE / &quot;target.xlsx&quot;)If you want to customize the definition file to adapt the new Excel, you can do below steps.1. Creating the definition file like below. Inside the :code:`PreProcessSteps` list, you can determine the procedure which will be triggered before sorting and also inside the :code:`SortStrategyPriority` list, you can decide the sort algorithms' order... code-block:: json  [      {          &quot;PreProcessSteps&quot;: [              {                  &quot;Name&quot;: &quot;FilterOutStoryWithoutId&quot;,                  &quot;Enabled&quot;: true,                  &quot;Config&quot;: {}              },              {                  &quot;Name&quot;: &quot;RetrieveJiraInformation&quot;,                  &quot;Enabled&quot;: true,                  &quot;Config&quot;: {}              },              {                  &quot;Name&quot;: &quot;FilterOutStoryBasedOnJiraStatus&quot;,                  &quot;Enabled&quot;: true,                  &quot;Config&quot;: {                      &quot;JiraStatuses&quot;: [                          &quot;SPRINT COMPLETE&quot;,                          &quot;PENDING RELEASE&quot;,                          &quot;PRODUCTION TESTING&quot;,                          &quot;CLOSED&quot;                      ]                  }              }          ],          &quot;SortStrategies&quot;: [            {                &quot;Name&quot;: &quot;InlineWeights&quot;,                &quot;Priority&quot;: 1,                &quot;Enabled&quot;: true,                &quot;Config&quot;: {}            },            {                &quot;Name&quot;: &quot;SortOrder&quot;,                &quot;Priority&quot;: 2,                &quot;Enabled&quot;: true,                &quot;Config&quot;: {}            },            {                &quot;Name&quot;: &quot;SortOrder&quot;,                &quot;Priority&quot;: 3,                &quot;Enabled&quot;: true,                &quot;Config&quot;: {                    &quot;ParentScopeIndexRange&quot;: &quot;12-19&quot;                }            },            {                &quot;Name&quot;: &quot;RaiseRanking&quot;,                &quot;Priority&quot;: 4,                &quot;Enabled&quot;: true,                &quot;Config&quot;: {                    &quot;ParentScopeIndexRange&quot;: &quot;12-19&quot;                }            }        ]      },      {          &quot;Columns&quot;: [              {                  &quot;Index&quot;: 1,                  &quot;Name&quot;: &quot;entryDate&quot;,                  &quot;Type&quot;: &quot;datetime&quot;,                  &quot;RequireSort&quot;: false,                  &quot;SortOrder&quot;: false,                  &quot;ScopeRequireSort&quot;: false,                  &quot;ScopeSortOrder&quot;: false,                  &quot;InlineWeights&quot;: 0,                  &quot;RaiseRanking&quot;: 0,                  &quot;ScopeRaiseRanking&quot;: 0              }          ]      }  ]2. Indicating the definition file location to the :code:`process_excel_file` method like below... code-block:: python  process_excel_file(      HERE / &quot;source.xlsx&quot;,       HERE / &quot;target.xlsx&quot;,       excel_definition_file=HERE / &quot;definition_file.json&quot;  )Meantime, you can follow the same way to customize the milestone priority file.1. Configuration file.. code-block:: json  [      {        &quot;Priority&quot;: 1,        &quot;Sprints&quot;: [&quot;R134 S1&quot;, &quot;M109&quot;]      }  ]2. Code example.. code-block:: python  process_excel_file(      HERE / &quot;source.xlsx&quot;,       HERE / &quot;target.xlsx&quot;,       sprint_schedule_file=HERE / &quot;milestone_priority.json&quot;  )Author======The jira-tool module was written by Sharry Xu &lt;sharry.xu@outlook.com&gt; in 2022.Starting with version 0.1.13, the main function of this project has been totally finished.Contact=======Our mailing list is available at `sharry.xu@outlook.com`.License=======All contributions after December 1, 2022 released under MIT license.</longdescription>
</pkgmetadata>