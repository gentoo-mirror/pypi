<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PDDOCPureData documentation generatorThis is a generator that creates *-help.pd files from single **pddoc**-formatted files and another .pd file from XML that contains objects, short descriptions and links to help files.---Requires: pycairo_    | _   --- | ---  **pd_doc2pd** | Converts pddoc file to PureData help patch  **pd_doc2html** | Converts pddoc file to HTML file  **pd_makelibrary** | Creates XML file for set of pddoc files  **pd_lib2pd** | Converts XML file to PureData patch with objects links to help files  **pd_cat2pd** | Converts XML file with category info to separate patch with object links ---## 1. XML file```xml&lt;library xmlns:xi=&quot;http://www.w3.org/2001/XInclude&quot; name=&quot;--your-library-name--&quot; version=&quot;1.0&quot;&gt;  &lt;category name=&quot;--category--&quot;&gt;    &lt;entry descr=&quot;Object description&quot; name=&quot;the_object&quot; ref_view=&quot;object&quot;&gt;      &lt;xi:include href=&quot;the_object.pddoc&quot; parse=&quot;xml&quot;/&gt;    &lt;/entry&gt;  &lt;/category&gt; &lt;meta&gt;    &lt;version&gt; % &lt;/version&gt;    &lt;authors&gt;      &lt;author&gt; % &lt;/author&gt;    &lt;/authors&gt;  &lt;/meta&gt; &lt;/library&gt;```### library- **name** (required)### category- **name** (required)### entry- **name** (required)- **ref_view** (required):    - object    - link      (for UI objects)XML file for category:```xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;category-info version=&quot;1.0&quot;&gt;description&lt;/category-info&gt;```---## 2. pddoc file```xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;pddoc version=&quot;1.0&quot;&gt;    &lt;object name=&quot;the_object&quot;&gt;        &lt;title&gt;the_object&lt;/title&gt;        &lt;meta&gt;            &lt;authors&gt;                &lt;author&gt; % &lt;/author&gt;            &lt;/authors&gt;            &lt;description&gt;% &lt;/description&gt;            &lt;license&gt; % &lt;/license&gt;            &lt;library&gt; % &lt;/library&gt;            &lt;category&gt; % &lt;/category&gt;            &lt;keywords&gt; % &lt;/keywords&gt;            &lt;since&gt; % &lt;/since&gt;        &lt;/meta&gt;        &lt;info&gt;            &lt;par&gt; Paragraph text &lt;/par&gt;        &lt;/info&gt;        &lt;arguments&gt;            &lt;argument name=&quot;ARG_NAME&quot; type=&quot;symbol&quot;&gt;argument name&lt;/argument&gt;        &lt;/arguments&gt;        &lt;properties&gt;            &lt;property name=&quot;@property_name&quot; type=&quot;symbol&quot;&gt;property name&lt;/property&gt;        &lt;/properties&gt;        &lt;inlets&gt;            &lt;inlet&gt;                &lt;xinfo on=&quot;bang&quot;&gt;detailed description&lt;/xinfo&gt;            &lt;/inlet&gt;        &lt;/inlets&gt;        &lt;outlets&gt;            &lt;outlet&gt;description&lt;/outlet&gt;        &lt;/outlets&gt;        &lt;example&gt;            &lt;pdascii&gt;&lt;![CDATA[[message_box(                                 |[object_box]]]&gt;            &lt;/pdascii&gt;        &lt;/example&gt;    &lt;/object&gt;&lt;/pddoc&gt;```### header:- `&lt;pddoc&gt;`    - **version** (required)- `&lt;object&gt;`    - **name** (required)- `&lt;title&gt;`- `&lt;meta&gt;`    - `&lt;authors&gt;`    - `&lt;description&gt;`    - `&lt;license&gt;`    - `&lt;library&gt;`    - `&lt;category&gt;`    - `&lt;keywords&gt;`    - `&lt;since&gt;`### info```xml&lt;info&gt;    &lt;par&gt; Paragraph text &lt;/par&gt;&lt;/info&gt;```### arguments- **name** (required)- **type** (required):    - int    - float    - symbol    - atom - int, float or symbol    - list - list of atoms### properties```xml&lt;properties&gt;    &lt;property name=&quot;PROP&quot; type=&quot;TYPE&quot;&gt;description&lt;/property&gt;&lt;/properties&gt;```- **name** (required)- **type** (required):    - int    - float    - symbol    - atom - int, float or symbol    - list - list of atoms    - alias - alias for other property    - flag - property that is **True** when specified, otherwise **False**- **readonly**- **units** - value unit from list:    - herz    - kiloherz    - decibell (db)    - millisecond (msec)    - second (sec)    - bpm    - percent    - sample    - semitone    - cent    - radian    - degree- **minvalue** - minimum allowed value- **maxvalue** - maximum allowed value- **default** - default value, if not specified- **enum** - space separated list of allowed values    ```xml     &lt;property enum=&quot;A B C&quot;/&gt;    ```### inlets```xml&lt;inlets dynamic=&quot;true&quot;&gt;    &lt;inlet type=&quot;TYPE&quot; number=&quot;XXX&quot;&gt;        &lt;xinfo on=&quot;symbol&quot;&gt;&lt;/xinfo&gt;    &lt;/inlet&gt;&lt;/inlets&gt;```- **dynamic** *(optional)* - if True, external has dynamic number of inlets, otherwise fixed.- **type** *(optional)* - inlet type:    - control    - audio- **number** *(optional)* - manually specified inlet number: number, or &quot;n&quot;, or &quot;n+1&quot;, or &quot;n-1&quot;, or &quot;...&quot;- **on** *(optional)* - describe reaction on input data type. Data types:    - atom    - int    - float    - list    - symbol    - pointer    - any    - data - for additional data types    - data:set    - data:dict    - data:mlist    - data:string    - data:fifo### outlets```xml&lt;outlets&gt;    &lt;outlet&gt;        description    &lt;/outlet&gt;&lt;/outlets&gt;```### example```&lt;example&gt;    &lt;pdascii&gt;&lt;![CDATA[[message_box(                                 |[object_box]]]&gt;    &lt;/pdascii&gt;&lt;/example&gt;```- [*value*( - message box- [*value*] - object box- [T] - toggle- [B] - bang- [obj1] X [obj2] - cross connection- [obj1 #a] - object with id:a- [X a-&gt;b] - connect object #a to object with id:b- [X a:1-&gt;b:0] - connect second outlet of object #a to first inlet of object #b</longdescription>
</pkgmetadata>