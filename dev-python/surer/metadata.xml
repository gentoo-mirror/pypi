<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>surer=====.. image:: https://img.shields.io/pypi/dm/surer   :target: https://pypi.org/project/surer.. image:: https://github.com/getmoto/surer/workflows/Sure%20Tests/badge.svg   :target: https://github.com/getmoto/surer/actions?query=workflow%3A%22Sure+Tests%22.. image:: https://img.shields.io/readthedocs/sure   :target: https://surer.readthedocs.io/.. image:: https://img.shields.io/github/license/getmoto/surer?label=Github%20License   :target: https://github.com/getmoto/surer/blob/master/LICENSE.. image:: https://img.shields.io/pypi/v/surer   :target: https://pypi.org/project/surer.. image:: https://img.shields.io/pypi/l/surer?label=PyPi%20License   :target: https://pypi.org/project/surer.. image:: https://img.shields.io/pypi/format/surer   :target: https://pypi.org/project/surer.. image:: https://img.shields.io/pypi/status/surer   :target: https://pypi.org/project/surer.. image:: https://img.shields.io/pypi/pyversions/surer   :target: https://pypi.org/project/surer.. image:: https://img.shields.io/pypi/implementation/surer   :target: https://pypi.org/project/surerAn idiomatic testing library for python with powerful and flexible assertions, created by `Gabriel Falc√£o &lt;https://github.com/gabrielfalcao&gt;`_.Sure's developer experience is inspired and modeled after `RSpec Expectations&lt;http://rspec.info/documentation/3.5/rspec-expectations/&gt;`_ and`should.js &lt;https://github.com/shouldjs/should.js&gt;`_.This is a fork of Gabriel's `sure` library, maintained at `http://github.com/getmoto/surer`. It provides support for more recent Python-versions, but does not differ in functionality.Installing----------.. code:: bash    $ pip install surerDocumentation-------------Available in the `website &lt;https://surer.readthedocs.io/en/latest/&gt;`__ or under the``docs`` directory.You can also build the documentation locally using sphinx:.. code:: bash    make docsHere is a tease---------------Equality~~~~~~~~(number).should.equal(number)^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code:: python    import surer    (4).should.be.equal(2 + 2)    (7.5).should.eql(3.5 + 4)    (3).shouldnt.be.equal(5)Assert dictionary and its contents^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code:: python    {'foo': 'bar'}.should.equal({'foo': 'bar'})    {'foo': 'bar'}.should.have.key('foo').which.should.equal('bar')&quot;A string&quot;.lower().should.equal(&quot;a string&quot;) also works^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code:: python    &quot;Awesome ASSERTIONS&quot;.lower().split().should.equal(['awesome', 'assertions'])</longdescription>
</pkgmetadata>