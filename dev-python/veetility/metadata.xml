<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Getting StartedA library to help create python pipelines for processing Tracer Data[Full Online Documentation](https://vaynermedia-london.github.io/veetility/)This is primarily for working with Social Media Organic and Paid Advertisement Data but also containsgeneric functions for writing to postgreSQL and snowflake databases, creating notifications in SlackChannels and writing to Google Sheets## Library Installation```pip install veetility```To upgrade the library after an update```pip install veetility --upgrade```## Initialisation of the UtilityFunctions classAn instance of the &quot;UtilityFunctions&quot; class can be initiated with the ability to read/write with google sheets and also to read/write to tables in a postgreSQL database. However none of theseare mandatory.### Google Sheets AuthenticationIn order to use the functions that read/write from google sheets then a dictionaryneeds to be passed to the &quot;gspread_auth_dict&quot; argument. This dictionary can be obtained from a google API credentials JSON file.The instructions for creating this JSON file can be found from the [gspread documentation](https://docs.gspread.org/en/latest/oauth2.html)Then copy the JSON information in curly brackets as a python dictionary into the gspread.service_account_from_dict() authentication method. The &quot;client_email&quot; parameter in the JSON material is the email address of the google sheetclient we have created. **This email address must be given read or write access to any google sheet you want to interact with.**### PostgreSQL connection parametersThe following correction parameters need to be passed in during initialisation of the class instance1. db_name e.g. &quot;vayner_external_XXXXXXXXXXX&quot;2. db_host e.g. &quot;dashboard-vayner-XXXXXXXXXXXXXXXXXXXX.rds.amazonaws.com&quot;3. db_port e.g. &quot;5432&quot; (this is the default for postgreSQL)4. db_user e.g. &quot;tom.jones&quot;5. db_password e.g. &quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;## Setup in codeIt is advisable to put the parameters into a config.py file (cf) which can then be imported intothe main script```import config as cffrom veetility import utility_functionsutil = utility_functions.UtilityFunctions(cf.google_sheet_auth_dict,cf.db_user,                                           cf.db_password,cf.db_host,                                          cf.db_port, cf.db_name)```## Usage in codeOnce an instance of the class UtilityFunctions has been created, e.g. &quot;util&quot; then functions (methods) of the class can be used e.g. &quot;write_to_gsheet()&quot;.This can write a pandas.DataFrame to any google sheet the &quot;client_email&quot; has been given &quot;editor&quot; access to.First pass in the name of the Google Sheet workbook, then the tab of the workbook, then the pandas.DataFrame```util.write_to_gsheet(&quot;Indeed Data Error Tracking&quot;,&quot;PaidNoBoostedMatch&quot;,                         paid_no_boosted_match)```</longdescription>
</pkgmetadata>