<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![pipeline status](https://gitlab.com/coopdevs/odoo-somconnexio-python-client/badges/master/pipeline.svg)](https://gitlab.com/coopdevs/odoo-somconnexio-python-client/commits/master)[![coverage report](https://gitlab.com/coopdevs/odoo-somconnexio-python-client/badges/master/coverage.svg)](https://gitlab.com/coopdevs/odoo-somconnexio-python-client/commits/master):warning: WORK IN PROGRESS :warning:This library is a Python wrapper for accessing Somconnexio's Odoo (Odoo v12 with customizations).More info about the customizations in [SomConnexio Odoo module](https://gitlab.com/coopdevs/odoo-somconnexio).## Resources* SubscriptionRequest - Customer order* CRMLead - Service order* Provider - Service providers* DiscoveryChannel* Partner - Customer information* Contract - Contract information## Installation```commandline$ pip install odoo-somconnexio-python-client```## Configuration EnvironmentYou need define the Odoo API-KEY and URL as environment variables. You need define:```ODOO_BASEURL=&lt;YOUR ODOO HOST&gt;/apiODOO_APIKEY=&lt;YOUR ODOO API KEY&gt;```If this envvars are not defined, a exception will be raised with the name of the envvar not defined.More info about the API-KEY in [Auth API Key](https://github.com/OCA/server-auth/tree/12.0/auth_api_key) Odoo module.## Usage#### Search providers by service```python&gt;&gt;&gt; from odoo_somconnexio_python_client.resources.provider import Provider&gt;&gt;&gt;&gt;&gt;&gt; mobile_providers = Provider.mobile_list()&gt;&gt;&gt; mobile_providers[0].id123&gt;&gt;&gt; mobile_providers[0].name&quot;SomConnexi√≥&quot;```#### Get Partner with ref```python&gt;&gt;&gt; from odoo_somconnexio_python_client.resources.partner import Partner&gt;&gt;&gt;&gt;&gt;&gt; partner = Partner.get(1234)&gt;&gt;&gt; partner.id123&gt;&gt;&gt; partner.ref&quot;1234&quot;```#### Search Partner by VAT number```python&gt;&gt;&gt; from odoo_somconnexio_python_client.resources.partner import Partner&gt;&gt;&gt;&gt;&gt;&gt; partner = Partner.search_by_vat(vat=&quot;XXXX&quot;)&gt;&gt;&gt; partner.id123&gt;&gt;&gt; partner.ref&quot;1234&quot;```#### Search Contracts by partner's VAT number```python&gt;&gt;&gt; from odoo_somconnexio_python_client.resources.contract import Contract&gt;&gt;&gt;&gt;&gt;&gt; contracts = Contract.search_by_customer_vat(vat=&quot;XXXX&quot;)&gt;&gt;&gt; contracts[0].id123&gt;&gt;&gt; contracts[0].phone_number&quot;972445566&quot;```### Create new mapperCreate a class that exposes a dict object with the next structure:#### Create a SubscriptionRequest```json{  &quot;name&quot;: &quot;string&quot;,  &quot;email&quot;: &quot;string&quot;,  &quot;ordered_parts&quot;: 0,  &quot;share_product&quot;: 0,  &quot;address&quot;: {    &quot;street&quot;: &quot;string&quot;,    &quot;street2&quot;: &quot;string&quot;,    &quot;zip_code&quot;: &quot;string&quot;,    &quot;city&quot;: &quot;string&quot;,    &quot;country&quot;: &quot;string&quot;,    &quot;state&quot;: &quot;string&quot;  },  &quot;lang&quot;: &quot;string&quot;,  &quot;iban&quot;: &quot;string&quot;,  &quot;vat&quot;: &quot;string&quot;,  &quot;coop_agreement&quot;: &quot;string&quot;,  &quot;voluntary_contribution&quot;: 0,  &quot;nationality&quot;: &quot;string&quot;,  &quot;payment_type&quot;: &quot;string&quot;}```#### Create a CRMLead```json{  &quot;iban&quot;: &quot;string&quot;,  &quot;subscription_request_id&quot;: 0,  &quot;partner_id&quot;: 0,  &quot;lead_line_ids&quot;: [    {      &quot;product_code&quot;: &quot;string&quot;,      &quot;broadband_isp_info&quot;: {        &quot;phone_number&quot;: &quot;string&quot;,        &quot;type&quot;: &quot;string&quot;,        &quot;delivery_address&quot;: {          &quot;street&quot;: &quot;string&quot;,          &quot;street2&quot;: &quot;string&quot;,          &quot;zip_code&quot;: &quot;string&quot;,          &quot;city&quot;: &quot;string&quot;,          &quot;country&quot;: &quot;string&quot;,          &quot;state&quot;: &quot;string&quot;        },        &quot;previous_provider&quot;: 0,        &quot;previous_owner_vat_number&quot;: &quot;string&quot;,        &quot;previous_owner_name&quot;: &quot;string&quot;,        &quot;previous_owner_first_name&quot;: &quot;string&quot;,        &quot;service_address&quot;: {          &quot;street&quot;: &quot;string&quot;,          &quot;street2&quot;: &quot;string&quot;,          &quot;zip_code&quot;: &quot;string&quot;,          &quot;city&quot;: &quot;string&quot;,          &quot;country&quot;: &quot;string&quot;,          &quot;state&quot;: &quot;string&quot;        },        &quot;previous_service&quot;: &quot;string&quot;,        &quot;keep_phone_number&quot;: true,        &quot;change_address&quot;: true      },      &quot;mobile_isp_info&quot;: {        &quot;phone_number&quot;: &quot;string&quot;,        &quot;type&quot;: &quot;string&quot;,        &quot;delivery_address&quot;: {          &quot;street&quot;: &quot;string&quot;,          &quot;street2&quot;: &quot;string&quot;,          &quot;zip_code&quot;: &quot;string&quot;,          &quot;city&quot;: &quot;string&quot;,          &quot;country&quot;: &quot;string&quot;,          &quot;state&quot;: &quot;string&quot;        },        &quot;previous_provider&quot;: 0,        &quot;previous_owner_vat_number&quot;: &quot;string&quot;,        &quot;previous_owner_name&quot;: &quot;string&quot;,        &quot;previous_owner_first_name&quot;: &quot;string&quot;,        &quot;icc&quot;: &quot;string&quot;,        &quot;icc_donor&quot;: &quot;string&quot;,        &quot;previous_contract_type&quot;: &quot;string&quot;      }    }  ]}```## Development### Setup environment1. Install `pyenv````shcurl https://pyenv.run | bash```2. Build the Python version```shpyenv install  3.8.13```3. Create a virtualenv```shpyenv virtualenv 3.8.13 odoo-somconnexio-python-client```4. Install dependencies```shpyenv exec pip install -r requirements-dev.txt```5. Install pre-commit hooks```shpyenv exec pre-commit install```### Test the HTTP requestWe are using the HTTP recording plugin of Pytest: [pytest-recording](https://pytest-vcr.readthedocs.io/).With VRC we can catch the HTTP responses and then, execute the tests using them.To add a new test:* Expose the needed envvars. Look for them at the [Configuration Environment section](#configuration-environment)* Execute the tests using `pytest` command:* If you are writing a new test that is making requests, you should run:```$ pytest --record-mode=once path/to/your/test```* You might need to record requests for an specific tests. In that case make sure to only run the tests affected and run```$ pytest --record-mode=rewrite path/to/your/test```* Add the new `cassetes` to the commit and push them.* The CI uses the cassetes to emulate the HTTP response in the test.### Run test suite```commandline$ tox```### FormattingWe use [Black](https://github.com/psf/black) as formatter.First to commit, tun the `black` command:```commandline$ black .All done! ‚ú® üç∞ ‚ú®29 files left unchanged.```### Release processUpdate CHANGELOG.md following this steps:1. Add any entries missing from merged merge requests.1. Duplicate the `[Unreleased]` header.1. Replace the second `Unreleased` with a version number followed by the current date. Copy the exact format from previous releases.Then, you can release and publish the package to PyPi:1. Update the `__version__` var in `__init__.py` matching the version you specified in the CHANGELOG.1. Open a merge request with these changes for the team to approve1. Merge it, add a git tag on that merge commit and push it.1. Once the pipeline has successfully passed, go approve the `publish` step.</longdescription>
</pkgmetadata>