<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Amplitude data wrapper[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)This is a wrapper for [Amplitude](https://amplitude.com/) APIs. You can use it to query and export data from your account and use the taxonomy API.Built with [requests](https://requests.readthedocs.io/en/latest/) and [tqdm](https://github.com/tqdm/tqdm)**Why use this package instead of other wrappers?**This package supports regions and so you can use it with Amplitude accounts in the EU and USA.This package also supports using a proxy so you can keep your project API keys and API secrets confidential.## Supported Amplitude APIs and docs- [Amplitude data wrapper](#amplitude-data-wrapper)  - [Supported Amplitude APIs and docs](#supported-amplitude-apis-and-docs)    - [Dashboard Rest API](#dashboard-rest-api)    - [Privacy API](#privacy-api)    - [Cohort API](#cohort-api)    - [Export API](#export-api)    - [Taxonomy API](#taxonomy-api)See examples below and in [example.py](example.py)Install with```pip install amplitude-data-wrapper```### Dashboard Rest API[Results from an existing chart](https://developers.amplitude.com/docs/dashboard-rest-api#results-from-an-existing-chart)Get data from EU account by setting `region=1`.```pythonimport amplitude_data_wrapper.analytics_api as ampr = amp.get_chart(chart_id, api_key, api_secret, region=1)r.status_code  # 200r.text # print data```Get data from US account by setting `region=2`.```pythonr = amp.get_chart(chart_id, api_key, api_secret, region=2)r.status_code  # 200r.text # print data```Get data from EU account with a proxy by setting region and proxy using a dictionary.```pythonproxies = {&quot;http&quot;: &quot;http://myproxy.domain.org/path&quot;}r = amp.get_chart(chart_id, api_key, api_secret, region=1, proxy=proxies)r.status_code  # 200r.text # print data```[Event segmentation](https://developers.amplitude.com/docs/dashboard-rest-api#event-segmentation) lets you export events with segments and filters.```pythonour_event_dict = {    &quot;event_type&quot;: &quot;pageview&quot;,    &quot;group_by&quot;: [{&quot;type&quot;: &quot;event&quot;, &quot;value&quot;: &quot;app&quot;}, {&quot;type&quot;: &quot;event&quot;, &quot;value&quot;: &quot;team&quot;}],}data = amp.get_event_segmentation(    api_key=api_key,    secret=api_secret,    start=&quot;20220601&quot;,    end=&quot;20220602&quot;,    event=our_event_dict,    metrics=&quot;uniques&quot;,    interval=1,    limit=1000,)```[User search](https://developers.amplitude.com/docs/dashboard-rest-api#user-search) lets you search for a user with a specific Amplitude ID, Device ID, User ID, or User ID prefix.```pythonuser = amp.find_user(    user=example_id_eu,     api_key=api_key,     secret=api_secret,    region=1)```### Privacy APIDelete user data with a [deletion job](https://developers.amplitude.com/docs/user-deletion#deletion-job)```pythondeleteme = amp.delete_user_data(    user[&quot;matches&quot;][0][&quot;amplitude_id&quot;],    email=email,    api_key=api_key,    secret=api_secret,    region=1,    ignore_invalid_id=True,    delete_from_org=False,)```[Get a list of deletion jobs](https://developers.amplitude.com/docs/user-deletion#get)```pythontobe_deleted = amp.get_deletion_jobs(    start=&quot;2022-06-01&quot;,    end=&quot;2022-07-01&quot;,    api_key=api_key,    secret=api_secret,    region=1,)```### Cohort API[Getting one cohort](https://developers.amplitude.com/docs/behavioral-cohorts-api#getting-one-cohort)```pythonproxies = {&quot;http&quot;: &quot;http://myproxy.domain.org/path&quot;}file_path = &quot;path-to/cohortdata.csv&quot;kull = amp.get_cohort(    api_key,    api_secret,    cohort_id,    filename=file_path,    props=1,    region=1,    proxy=proxies,)```### Export API[Export API - Export your project's event data](https://developers.amplitude.com/docs/export-api#export-api---export-your-projects-event-data)```pythonstart = &quot;20220601T00&quot;end = &quot;20220601T01&quot;data = amp.export_project_data(    start=start,    end=end,    api_key=api_key,    secret=api_secret,    filename=&quot;path-to/projectdata_eu.zip&quot;,    region=1,)```### Taxonomy API[Get all event types](https://developers.amplitude.com/docs/taxonomy-api#get-all-event-types)```pythontypes = amp.get_all_event_types(    api_key=api_key,     secret=api_secret,     region=1)```</longdescription>
</pkgmetadata>