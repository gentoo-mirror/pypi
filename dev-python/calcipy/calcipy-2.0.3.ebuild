# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Python package to simplify development"

HOMEPAGE="https://github.com/kyleking/calcipy"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="ddict doc flake8 lint nox pylint stale tags test types"
DEPENDENCIES="stale? ( dev-python/arrow[${PYTHON_USEDEP}] )
	tags? ( dev-python/arrow[${PYTHON_USEDEP}] )
	lint? ( dev-python/autopep8[${PYTHON_USEDEP}] )
	lint? ( dev-python/bandit[${PYTHON_USEDEP}] )
	dev-python/beartype[${PYTHON_USEDEP}]
	stale? ( dev-python/bidict[${PYTHON_USEDEP}] )
	doc? ( dev-python/commitizen[${PYTHON_USEDEP}] )
	dev-python/corallium[${PYTHON_USEDEP}]
	flake8? ( dev-python/dlint[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-adjustable-complexity[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-annotations-complexity[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-expression-complexity[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-printf-formatting[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-sql[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8-string-format[${PYTHON_USEDEP}] )
	dev-python/griffe[${PYTHON_USEDEP}]
	stale? ( dev-python/httpx[${PYTHON_USEDEP}] )
	dev-python/invoke[${PYTHON_USEDEP}]
	doc? ( dev-python/mkdocs[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-build-plantuml-plugin[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-gen-files[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-git-revision-date-localized-plugin[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-include-markdown-plugin[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-literate-nav[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-material[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocs-section-index[${PYTHON_USEDEP}] )
	doc? ( dev-python/mkdocstrings[${PYTHON_USEDEP}] )
	types? ( dev-python/mypy[${PYTHON_USEDEP}] )
	nox? ( dev-python/nox-poetry[${PYTHON_USEDEP}] )
	doc? ( dev-python/pandas[${PYTHON_USEDEP}] )
	tags? ( dev-python/pandas[${PYTHON_USEDEP}] )
	lint? ( dev-python/pip-check[${PYTHON_USEDEP}] )
	dev-python/pydantic[${PYTHON_USEDEP}]
	doc? ( dev-python/pylint[${PYTHON_USEDEP}] )
	pylint? ( dev-python/pylint[${PYTHON_USEDEP}] )
	doc? ( dev-python/pymdown-extensions[${PYTHON_USEDEP}] )
	stale? ( dev-python/pyrate_limiter[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-randomly[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-watcher[${PYTHON_USEDEP}] )
	ddict? ( dev-python/python-box[${PYTHON_USEDEP}] )
	doc? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	tags? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	lint? ( dev-python/ruff[${PYTHON_USEDEP}] )
	dev-python/semver[${PYTHON_USEDEP}]
	tags? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	doc? ( dev-python/transitions[${PYTHON_USEDEP}] )
	nox? ( dev-python/virtualenv[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
