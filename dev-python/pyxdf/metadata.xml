<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Latest PyPI Release](https://img.shields.io/pypi/v/pyxdf)](https://pypi.org/project/pyxdf/)[![Latest Conda Release](https://img.shields.io/conda/vn/conda-forge/pyxdf)](https://anaconda.org/conda-forge/pyxdf)![Python 3.5+](https://img.shields.io/badge/python-3.5+-green.svg)![License](https://img.shields.io/github/license/xdf-modules/xdf-python)pyXDF=====pyXDF is a Python importer for [XDF](https://github.com/sccn/xdf) files.## Sample usage``` pythonimport pyxdfimport matplotlib.pyplot as pltimport numpy as npdata, header = pyxdf.load_xdf('test.xdf')for stream in data:    y = stream['time_series']    if isinstance(y, list):        # list of strings, draw one vertical line for each marker        for timestamp, marker in zip(stream['time_stamps'], y):            plt.axvline(x=timestamp)            print(f'Marker &quot;{marker[0]}&quot; @ {timestamp:.2f}s')    elif isinstance(y, np.ndarray):        # numeric data, draw as lines        plt.plot(stream['time_stamps'], y)    else:        raise RuntimeError('Unknown stream format')plt.show()```## InstallationThe latest stable version can be installed with `pip install pyxdf`.For the latest development version, use `pip install git+https://github.com/xdf-modules/pyxdf.git`.## For maintainersA new release is automatically uploaded to PyPI. Therefore, as soon as a new release is created on GitHub (using a tag labeled e.g. `v1.16.3`), a PyPI package is created with the version number matching the release tag.</longdescription>
</pkgmetadata>