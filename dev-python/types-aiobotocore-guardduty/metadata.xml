<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;types-aiobotocore-guardduty&quot;&gt;&lt;/a&gt;# types-aiobotocore-guardduty[![PyPI - types-aiobotocore-guardduty](https://img.shields.io/pypi/v/types-aiobotocore-guardduty.svg?color=blue)](https://pypi.org/project/types-aiobotocore-guardduty)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-guardduty.svg?color=blue)](https://pypi.org/project/types-aiobotocore-guardduty)[![Docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_guardduty/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-guardduty?color=blue)](https://pypistats.org/packages/types-aiobotocore-guardduty)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[aiobotocore.GuardDuty 2.5.1](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/guardduty.html#GuardDuty)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in[types-aiobotocore-guardduty docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_guardduty/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [types-aiobotocore-guardduty](#types-aiobotocore-guardduty)  - [How to install](#how-to-install)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `types-aiobotocore` for `GuardDuty` service.```bash# install with aiobotocore type annotationspython -m pip install 'types-aiobotocore[guardduty]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'types-aiobotocore-lite[guardduty]'# standalone installationpython -m pip install types-aiobotocore-guardduty```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y types-aiobotocore-guardduty```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `types-aiobotocore[guardduty]` in your environment:```bashpython -m pip install 'types-aiobotocore[guardduty]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `aiobotocore` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `types-aiobotocore-lite[guardduty]` in your environment:```bashpython -m pip install 'types-aiobotocore-lite[guardduty]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `types-aiobotocore` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `types-aiobotocore` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[guardduty]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed  `types-aiobotocore`Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `types-aiobotocore[guardduty]` with services you use in your  environment:```bashpython -m pip install 'types-aiobotocore[guardduty]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `types-aiobotocore[guardduty]` in your environment:```bashpython -m pip install 'types-aiobotocore[guardduty]'````Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `types-aiobotocore[guardduty]` in your environment:```bashpython -m pip install 'types-aiobotocore[guardduty]'```Optionally, you can install `types-aiobotocore` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`GuardDutyClient` provides annotations for`session.create_client(&quot;guardduty&quot;)`.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_guardduty import GuardDutyClientsession = get_session()async with session.create_client(&quot;guardduty&quot;) as client:    client: GuardDutyClient    # now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`types_aiobotocore_guardduty.paginator` module contains type annotations forall paginators.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_guardduty import GuardDutyClientfrom types_aiobotocore_guardduty.paginator import (    DescribeMalwareScansPaginator,    ListCoveragePaginator,    ListDetectorsPaginator,    ListFiltersPaginator,    ListFindingsPaginator,    ListIPSetsPaginator,    ListInvitationsPaginator,    ListMembersPaginator,    ListOrganizationAdminAccountsPaginator,    ListThreatIntelSetsPaginator,)session = get_session()async with session.create_client(&quot;guardduty&quot;) as client:    client: GuardDutyClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    describe_malware_scans_paginator: DescribeMalwareScansPaginator = client.get_paginator(        &quot;describe_malware_scans&quot;    )    list_coverage_paginator: ListCoveragePaginator = client.get_paginator(&quot;list_coverage&quot;)    list_detectors_paginator: ListDetectorsPaginator = client.get_paginator(&quot;list_detectors&quot;)    list_filters_paginator: ListFiltersPaginator = client.get_paginator(&quot;list_filters&quot;)    list_findings_paginator: ListFindingsPaginator = client.get_paginator(&quot;list_findings&quot;)    list_ip_sets_paginator: ListIPSetsPaginator = client.get_paginator(&quot;list_ip_sets&quot;)    list_invitations_paginator: ListInvitationsPaginator = client.get_paginator(&quot;list_invitations&quot;)    list_members_paginator: ListMembersPaginator = client.get_paginator(&quot;list_members&quot;)    list_organization_admin_accounts_paginator: ListOrganizationAdminAccountsPaginator = (        client.get_paginator(&quot;list_organization_admin_accounts&quot;)    )    list_threat_intel_sets_paginator: ListThreatIntelSetsPaginator = client.get_paginator(        &quot;list_threat_intel_sets&quot;    )```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`types_aiobotocore_guardduty.literals` module contains literals extracted fromshapes that can be used in user code for type checking.```pythonfrom types_aiobotocore_guardduty.literals import (    AdminStatusType,    AutoEnableMembersType,    CoverageFilterCriterionKeyType,    CoverageSortKeyType,    CoverageStatisticsTypeType,    CoverageStatusType,    CriterionKeyType,    DataSourceStatusType,    DataSourceType,    DescribeMalwareScansPaginatorName,    DestinationTypeType,    DetectorFeatureResultType,    DetectorFeatureType,    DetectorStatusType,    EbsSnapshotPreservationType,    FeatureAdditionalConfigurationType,    FeatureStatusType,    FeedbackType,    FilterActionType,    FindingPublishingFrequencyType,    FindingStatisticTypeType,    FreeTrialFeatureResultType,    IpSetFormatType,    IpSetStatusType,    ListCoveragePaginatorName,    ListDetectorsPaginatorName,    ListFiltersPaginatorName,    ListFindingsPaginatorName,    ListIPSetsPaginatorName,    ListInvitationsPaginatorName,    ListMembersPaginatorName,    ListOrganizationAdminAccountsPaginatorName,    ListThreatIntelSetsPaginatorName,    OrderByType,    OrgFeatureAdditionalConfigurationType,    OrgFeatureStatusType,    OrgFeatureType,    PublishingStatusType,    ResourceTypeType,    ScanCriterionKeyType,    ScanResultType,    ScanStatusType,    ScanTypeType,    ThreatIntelSetFormatType,    ThreatIntelSetStatusType,    UsageFeatureType,    UsageStatisticTypeType,    GuardDutyServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    RegionName,)def check_value(value: AdminStatusType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`types_aiobotocore_guardduty.type_defs` module contains structures and shapesassembled to typed dictionaries for additional type checking.```pythonfrom types_aiobotocore_guardduty.type_defs import (    AcceptAdministratorInvitationRequestRequestTypeDef,    AcceptInvitationRequestRequestTypeDef,    AccessControlListTypeDef,    AccessKeyDetailsTypeDef,    AccountDetailTypeDef,    FreeTrialFeatureConfigurationResultTypeDef,    BlockPublicAccessTypeDef,    DnsRequestActionTypeDef,    AddonDetailsTypeDef,    AdminAccountTypeDef,    AdministratorTypeDef,    ArchiveFindingsRequestRequestTypeDef,    DomainDetailsTypeDef,    RemoteAccountDetailsTypeDef,    BucketPolicyTypeDef,    CityTypeDef,    CloudTrailConfigurationResultTypeDef,    ConditionTypeDef,    SecurityContextTypeDef,    VolumeMountTypeDef,    CountryTypeDef,    CoverageFilterConditionTypeDef,    CoverageSortCriteriaTypeDef,    CoverageStatisticsTypeDef,    CreateFilterResponseTypeDef,    CreateIPSetRequestRequestTypeDef,    CreateIPSetResponseTypeDef,    UnprocessedAccountTypeDef,    DestinationPropertiesTypeDef,    CreatePublishingDestinationResponseTypeDef,    CreateSampleFindingsRequestRequestTypeDef,    CreateThreatIntelSetRequestRequestTypeDef,    CreateThreatIntelSetResponseTypeDef,    DNSLogsConfigurationResultTypeDef,    FlowLogsConfigurationResultTypeDef,    S3LogsConfigurationResultTypeDef,    S3LogsConfigurationTypeDef,    DataSourceFreeTrialTypeDef,    DeclineInvitationsRequestRequestTypeDef,    DefaultServerSideEncryptionTypeDef,    DeleteDetectorRequestRequestTypeDef,    DeleteFilterRequestRequestTypeDef,    DeleteIPSetRequestRequestTypeDef,    DeleteInvitationsRequestRequestTypeDef,    DeleteMembersRequestRequestTypeDef,    DeletePublishingDestinationRequestRequestTypeDef,    DeleteThreatIntelSetRequestRequestTypeDef,    SortCriteriaTypeDef,    DescribeOrganizationConfigurationRequestRequestTypeDef,    DescribePublishingDestinationRequestRequestTypeDef,    DestinationTypeDef,    DetectorAdditionalConfigurationResultTypeDef,    DetectorAdditionalConfigurationTypeDef,    DisableOrganizationAdminAccountRequestRequestTypeDef,    DisassociateFromAdministratorAccountRequestRequestTypeDef,    DisassociateFromMasterAccountRequestRequestTypeDef,    DisassociateMembersRequestRequestTypeDef,    VolumeDetailTypeDef,    EbsVolumesResultTypeDef,    TagTypeDef,    EnableOrganizationAdminAccountRequestRequestTypeDef,    ThreatIntelligenceDetailTypeDef,    FilterConditionTypeDef,    FindingStatisticsTypeDef,    GeoLocationTypeDef,    GetAdministratorAccountRequestRequestTypeDef,    GetDetectorRequestRequestTypeDef,    GetFilterRequestRequestTypeDef,    GetIPSetRequestRequestTypeDef,    GetIPSetResponseTypeDef,    GetInvitationsCountResponseTypeDef,    GetMalwareScanSettingsRequestRequestTypeDef,    GetMasterAccountRequestRequestTypeDef,    MasterTypeDef,    GetMemberDetectorsRequestRequestTypeDef,    GetMembersRequestRequestTypeDef,    MemberTypeDef,    GetRemainingFreeTrialDaysRequestRequestTypeDef,    GetThreatIntelSetRequestRequestTypeDef,    GetThreatIntelSetResponseTypeDef,    UsageCriteriaTypeDef,    HighestSeverityThreatDetailsTypeDef,    HostPathTypeDef,    IamInstanceProfileTypeDef,    ProductCodeTypeDef,    InvitationTypeDef,    InviteMembersRequestRequestTypeDef,    KubernetesAuditLogsConfigurationResultTypeDef,    KubernetesAuditLogsConfigurationTypeDef,    KubernetesUserDetailsTypeDef,    LineageObjectTypeDef,    ListDetectorsRequestListDetectorsPaginateTypeDef,    ListDetectorsRequestRequestTypeDef,    ListDetectorsResponseTypeDef,    ListFiltersRequestListFiltersPaginateTypeDef,    ListFiltersRequestRequestTypeDef,    ListFiltersResponseTypeDef,    ListFindingsResponseTypeDef,    ListIPSetsRequestListIPSetsPaginateTypeDef,    ListIPSetsRequestRequestTypeDef,    ListIPSetsResponseTypeDef,    ListInvitationsRequestListInvitationsPaginateTypeDef,    ListInvitationsRequestRequestTypeDef,    ListMembersRequestListMembersPaginateTypeDef,    ListMembersRequestRequestTypeDef,    ListOrganizationAdminAccountsRequestListOrganizationAdminAccountsPaginateTypeDef,    ListOrganizationAdminAccountsRequestRequestTypeDef,    ListPublishingDestinationsRequestRequestTypeDef,    ListTagsForResourceRequestRequestTypeDef,    ListTagsForResourceResponseTypeDef,    ListThreatIntelSetsRequestListThreatIntelSetsPaginateTypeDef,    ListThreatIntelSetsRequestRequestTypeDef,    ListThreatIntelSetsResponseTypeDef,    LocalIpDetailsTypeDef,    LocalPortDetailsTypeDef,    LoginAttributeTypeDef,    ScanEc2InstanceWithFindingsTypeDef,    MemberAdditionalConfigurationResultTypeDef,    MemberAdditionalConfigurationTypeDef,    RemotePortDetailsTypeDef,    PrivateIpAddressDetailsTypeDef,    SecurityGroupTypeDef,    OrganizationAdditionalConfigurationResultTypeDef,    OrganizationAdditionalConfigurationTypeDef,    OrganizationS3LogsConfigurationResultTypeDef,    OrganizationS3LogsConfigurationTypeDef,    OrganizationEbsVolumesResultTypeDef,    OrganizationEbsVolumesTypeDef,    OrganizationKubernetesAuditLogsConfigurationResultTypeDef,    OrganizationKubernetesAuditLogsConfigurationTypeDef,    OrganizationTypeDef,    OwnerTypeDef,    PaginatorConfigTypeDef,    RdsDbUserDetailsTypeDef,    ResourceDetailsTypeDef,    ResponseMetadataTypeDef,    ScanConditionPairTypeDef,    ScannedItemCountTypeDef,    ThreatsDetectedItemCountTypeDef,    ScanFilePathTypeDef,    ScanResultDetailsTypeDef,    TriggerDetailsTypeDef,    ServiceAdditionalInfoTypeDef,    StartMalwareScanRequestRequestTypeDef,    StartMalwareScanResponseTypeDef,    StartMonitoringMembersRequestRequestTypeDef,    StopMonitoringMembersRequestRequestTypeDef,    TagResourceRequestRequestTypeDef,    TotalTypeDef,    UnarchiveFindingsRequestRequestTypeDef,    UntagResourceRequestRequestTypeDef,    UpdateFilterResponseTypeDef,    UpdateFindingsFeedbackRequestRequestTypeDef,    UpdateIPSetRequestRequestTypeDef,    UpdateThreatIntelSetRequestRequestTypeDef,    CreateMembersRequestRequestTypeDef,    AccountLevelPermissionsTypeDef,    CoverageEksClusterDetailsTypeDef,    ListOrganizationAdminAccountsResponseTypeDef,    GetAdministratorAccountResponseTypeDef,    BucketLevelPermissionsTypeDef,    FindingCriteriaTypeDef,    ContainerTypeDef,    CoverageFilterCriterionTypeDef,    GetCoverageStatisticsResponseTypeDef,    CreateMembersResponseTypeDef,    DeclineInvitationsResponseTypeDef,    DeleteInvitationsResponseTypeDef,    DeleteMembersResponseTypeDef,    DisassociateMembersResponseTypeDef,    InviteMembersResponseTypeDef,    StartMonitoringMembersResponseTypeDef,    StopMonitoringMembersResponseTypeDef,    UpdateMemberDetectorsResponseTypeDef,    CreatePublishingDestinationRequestRequestTypeDef,    DescribePublishingDestinationResponseTypeDef,    UpdatePublishingDestinationRequestRequestTypeDef,    KubernetesDataSourceFreeTrialTypeDef,    MalwareProtectionDataSourceFreeTrialTypeDef,    GetFindingsRequestRequestTypeDef,    ListPublishingDestinationsResponseTypeDef,    DetectorFeatureConfigurationResultTypeDef,    DetectorFeatureConfigurationTypeDef,    EbsVolumeDetailsTypeDef,    ScanEc2InstanceWithFindingsResultTypeDef,    EksClusterDetailsTypeDef,    RdsDbInstanceDetailsTypeDef,    EvidenceTypeDef,    FilterCriterionTypeDef,    GetFindingsStatisticsResponseTypeDef,    GetMasterAccountResponseTypeDef,    GetMembersResponseTypeDef,    ListMembersResponseTypeDef,    GetUsageStatisticsRequestRequestTypeDef,    VolumeTypeDef,    ListInvitationsResponseTypeDef,    KubernetesConfigurationResultTypeDef,    KubernetesConfigurationTypeDef,    ProcessDetailsTypeDef,    MalwareProtectionConfigurationTypeDef,    MemberFeaturesConfigurationResultTypeDef,    MemberFeaturesConfigurationTypeDef,    NetworkInterfaceTypeDef,    VpcConfigTypeDef,    OrganizationFeatureConfigurationResultTypeDef,    OrganizationFeatureConfigurationTypeDef,    OrganizationScanEc2InstanceWithFindingsResultTypeDef,    OrganizationScanEc2InstanceWithFindingsTypeDef,    OrganizationKubernetesConfigurationResultTypeDef,    OrganizationKubernetesConfigurationTypeDef,    RemoteIpDetailsTypeDef,    ScanConditionTypeDef,    ScanThreatNameTypeDef,    ScanTypeDef,    UsageAccountResultTypeDef,    UsageDataSourceResultTypeDef,    UsageFeatureResultTypeDef,    UsageResourceResultTypeDef,    CoverageResourceDetailsTypeDef,    PermissionConfigurationTypeDef,    CreateFilterRequestRequestTypeDef,    GetFilterResponseTypeDef,    GetFindingsStatisticsRequestRequestTypeDef,    ListFindingsRequestListFindingsPaginateTypeDef,    ListFindingsRequestRequestTypeDef,    UpdateFilterRequestRequestTypeDef,    CoverageFilterCriteriaTypeDef,    DataSourcesFreeTrialTypeDef,    MalwareProtectionConfigurationResultTypeDef,    FilterCriteriaTypeDef,    EcsTaskDetailsTypeDef,    KubernetesWorkloadDetailsTypeDef,    RuntimeContextTypeDef,    DataSourceConfigurationsTypeDef,    InstanceDetailsTypeDef,    LambdaDetailsTypeDef,    OrganizationMalwareProtectionConfigurationResultTypeDef,    OrganizationMalwareProtectionConfigurationTypeDef,    AwsApiCallActionTypeDef,    KubernetesApiCallActionTypeDef,    NetworkConnectionActionTypeDef,    PortProbeDetailTypeDef,    RdsLoginAttemptActionTypeDef,    ScanResourceCriteriaTypeDef,    ThreatDetectedByNameTypeDef,    DescribeMalwareScansResponseTypeDef,    UsageStatisticsTypeDef,    CoverageResourceTypeDef,    PublicAccessTypeDef,    GetCoverageStatisticsRequestRequestTypeDef,    ListCoverageRequestListCoveragePaginateTypeDef,    ListCoverageRequestRequestTypeDef,    AccountFreeTrialInfoTypeDef,    DataSourceConfigurationsResultTypeDef,    UnprocessedDataSourcesResultTypeDef,    DescribeMalwareScansRequestDescribeMalwareScansPaginateTypeDef,    DescribeMalwareScansRequestRequestTypeDef,    EcsClusterDetailsTypeDef,    KubernetesDetailsTypeDef,    RuntimeDetailsTypeDef,    CreateDetectorRequestRequestTypeDef,    UpdateDetectorRequestRequestTypeDef,    UpdateMemberDetectorsRequestRequestTypeDef,    OrganizationDataSourceConfigurationsResultTypeDef,    OrganizationDataSourceConfigurationsTypeDef,    PortProbeActionTypeDef,    GetMalwareScanSettingsResponseTypeDef,    UpdateMalwareScanSettingsRequestRequestTypeDef,    ScanDetectionsTypeDef,    GetUsageStatisticsResponseTypeDef,    ListCoverageResponseTypeDef,    S3BucketDetailTypeDef,    GetRemainingFreeTrialDaysResponseTypeDef,    GetDetectorResponseTypeDef,    MemberDataSourceConfigurationTypeDef,    CreateDetectorResponseTypeDef,    DescribeOrganizationConfigurationResponseTypeDef,    UpdateOrganizationConfigurationRequestRequestTypeDef,    ActionTypeDef,    EbsVolumeScanDetailsTypeDef,    ResourceTypeDef,    GetMemberDetectorsResponseTypeDef,    ServiceTypeDef,    FindingTypeDef,    GetFindingsResponseTypeDef,)def get_structure() -&gt; AcceptAdministratorInvitationRequestRequestTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for`aiobotocore` updates. It delivers drop-in type annotations for you and makessure that:- All available `aiobotocore` services are covered.- Each public class and method of every `aiobotocore` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`types-aiobotocore-guardduty` version is the same as related `aiobotocore`version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_guardduty/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>