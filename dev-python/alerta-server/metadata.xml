<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Alerta Release 9.0==================[![Actions Status](https://github.com/alerta/alerta/workflows/CI%20Tests/badge.svg)](https://github.com/alerta/alerta/actions)[![Slack chat](https://img.shields.io/badge/chat-on%20slack-blue?logo=slack)](https://slack.alerta.dev)[![Coverage Status](https://coveralls.io/repos/github/alerta/alerta/badge.svg?branch=master)](https://coveralls.io/github/alerta/alerta?branch=master)[![Docker Pulls](https://img.shields.io/docker/pulls/alerta/alerta-web.svg)](https://hub.docker.com/r/alerta/alerta-web)The Alerta monitoring tool was developed with the following aims in mind:*   distributed and de-coupled so that it is **SCALABLE***   minimal **CONFIGURATION** that easily accepts alerts from any source*   quick at-a-glance **VISUALISATION** with drill-down to detail![webui](/docs/images/alerta-webui-v7.jpg?raw=true)----Requirements------------Release 9 only supports Python 3.8 or higher.The only mandatory dependency is MongoDB or PostgreSQL. Everything else is optional.- Postgres version 11 or better- MongoDB version 4.4 or betterInstallation------------To install MongoDB on Debian/Ubuntu run:    $ sudo apt-get install -y mongodb-org    $ mongodTo install MongoDB on CentOS/RHEL run:    $ sudo yum install -y mongodb    $ mongodTo install the Alerta server and client run:    $ pip install alerta-server alerta    $ alertad runTo install the web console run:    $ wget https://github.com/alerta/alerta-webui/releases/latest/download/alerta-webui.tar.gz    $ tar zxvf alerta-webui.tar.gz    $ cd dist    $ python3 -m http.server 8000    &gt;&gt; browse to http://localhost:8000### DockerAlerta and MongoDB can also run using Docker containers, see [alerta/docker-alerta](https://github.com/alerta/docker-alerta).Configuration-------------To configure the ``alertad`` server override the default settings in ``/etc/alertad.conf``or using ``ALERTA_SVR_CONF_FILE`` environment variable::    $ ALERTA_SVR_CONF_FILE=~/.alertad.conf    $ echo &quot;DEBUG=True&quot; &gt; $ALERTA_SVR_CONF_FILEDocumentation-------------More information on configuration and other aspects of alerta can be foundat &lt;http://docs.alerta.io&gt;Development-----------To run in development mode, listening on port 5000:    $ export FLASK_APP=alerta FLASK_DEBUG=1    $ pip install -e .    $ flask runTo run in development mode, listening on port 8080, using Postgres andreporting errors to [Sentry](https://sentry.io):    $ export FLASK_APP=alerta FLASK_DEBUG=1    $ export DATABASE_URL=postgres://localhost:5432/alerta5    $ export SENTRY_DSN=https://8b56098250544fb78b9578d8af2a7e13:fa9d628da9c4459c922293db72a3203f@sentry.io/153768    $ pip install -e .[postgres]    $ flask run --debugger --port 8080 --with-threads --reloadTroubleshooting---------------Enable debug log output by setting `DEBUG=True` in the API serverconfiguration:```DEBUG=TrueLOG_HANDLERS = ['console','file']LOG_FORMAT = 'verbose'LOG_FILE = '$HOME/alertad.log'```It can also be helpful to check the web browser developer console forJavaScript logging, network problems and API error responses.Tests-----To run the *all* the tests there must be a local Postgresand MongoDB database running. Then run:    $ TOXENV=ALL make testTo just run the Postgres or MongoDB tests run:    $ TOXENV=postgres make test    $ TOXENV=mongodb make testTo run a single test run something like:    $ TOXENV=&quot;mongodb -- tests/test_search.py::QueryParserTestCase::test_boolean_operators&quot; make test    $ TOXENV=&quot;postgres -- tests/test_queryparser.py::PostgresQueryTestCase::test_boolean_operators&quot; make testCloud Deployment----------------Alerta can be deployed to the cloud easily using Heroku &lt;https://github.com/alerta/heroku-api-alerta&gt;,AWS EC2 &lt;https://github.com/alerta/alerta-cloudformation&gt;, or Google Cloud Platform&lt;https://github.com/alerta/gcloud-api-alerta&gt;License-------    Alerta monitoring system and console    Copyright 2012-2023 Nick Satterly    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);    you may not use this file except in compliance with the License.    You may obtain a copy of the License at        http://www.apache.org/licenses/LICENSE-2.0    Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</longdescription>
</pkgmetadata>