<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================================================================================pyexcel-text - Let you focus on data, instead of text formats================================================================================.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel.github.io/master/images/patreon.png   :target: https://www.patreon.com/pyexcel.. image:: https://api.travis-ci.org/pyexcel/pyexcel-text.svg?branch=master   :target: http://travis-ci.org/pyexcel/pyexcel-text.. image:: https://codecov.io/gh/pyexcel/pyexcel-text/branch/master/graph/badge.svg   :target: https://codecov.io/gh/pyexcel/pyexcel-text.. image:: https://img.shields.io/gitter/room/gitterHQ/gitter.svg   :target: https://gitter.im/pyexcel/LobbyIt is a plugin to `pyexcel &lt;https://github.com/pyexcel/pyexcel&gt;`__ and extendsits capbility to present and write data in text fromats mainly through `tabulate`:* &quot;plain&quot;* &quot;simple&quot;* &quot;grid&quot;* &quot;pipe&quot;* &quot;orgtbl&quot;* &quot;rst&quot;* &quot;mediawiki&quot;* &quot;latex&quot;* &quot;latex_booktabs&quot;* &quot;json&quot;* &quot;html&quot;Since v0.2.7, `json` and `ndjson` input are also supported.Usage======What's new?--------------.. code-block:: python    &gt;&gt;&gt; import pyexcel as pe    &gt;&gt;&gt; sheet = pe.Sheet()    &gt;&gt;&gt; sheet.json = '[[1,2],[2,3]]'    &gt;&gt;&gt; sheet    pyexcel sheet:    +---+---+    | 1 | 2 |    +---+---+    | 2 | 3 |    +---+---+    &gt;&gt;&gt; highspeedrail = pe.Sheet()    &gt;&gt;&gt; highspeedrail.json = &quot;&quot;&quot;    ... [{&quot;year&quot;: 1903, &quot;country&quot;: &quot;Germany&quot;, &quot;speed&quot;: &quot;206.7km/h&quot;},    ... {&quot;year&quot;: 1964, &quot;country&quot;: &quot;Japan&quot;, &quot;speed&quot;: &quot;210km/h&quot;},    ... {&quot;year&quot;: 2008, &quot;country&quot;: &quot;China&quot;, &quot;speed&quot;: &quot;350km/h&quot;}]    ... &quot;&quot;&quot;    &gt;&gt;&gt; highspeedrail.name = 'High Speed Train Speed Break Through (Source: Wikipedia)'    &gt;&gt;&gt; highspeedrail    High Speed Train Speed Break Through (Source: Wikipedia):    +---------+-----------+------+    | country | speed     | year |    +---------+-----------+------+    | Germany | 206.7km/h | 1903 |    +---------+-----------+------+    | Japan   | 210km/h   | 1964 |    +---------+-----------+------+    | China   | 350km/h   | 2008 |    +---------+-----------+------+    &gt;&gt;&gt; henley_on_thames_facts = pe.Sheet()    &gt;&gt;&gt; henley_on_thames_facts.json = &quot;&quot;&quot;    ... {&quot;area&quot;: &quot;5.58 square meters&quot;,    ... &quot;population&quot;: &quot;11,619&quot;,    ... &quot;civial parish&quot;: &quot;Henley-on-Thames&quot;,    ... &quot;latitude&quot;: &quot;51.536&quot;,    ... &quot;longitude&quot;: &quot;-0.898&quot;    ... }&quot;&quot;&quot;    &gt;&gt;&gt; henley_on_thames_facts    pyexcel sheet:    +--------------------+------------------+----------+-----------+------------+    | area               | civial parish    | latitude | longitude | population |    +--------------------+------------------+----------+-----------+------------+    | 5.58 square meters | Henley-on-Thames | 51.536   | -0.898    | 11,619     |    +--------------------+------------------+----------+-----------+------------+    &gt;&gt;&gt; ccs_insight = pe.Sheet()    &gt;&gt;&gt; ccs_insight.name = &quot;Worldwide Mobile Phone Shipments (Billions), 2017-2021&quot;    &gt;&gt;&gt; ccs_insight.json = &quot;&quot;&quot;    ... {&quot;year&quot;: [&quot;2017&quot;, &quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;],    ... &quot;smart phones&quot;: [1.53, 1.64, 1.74, 1.82, 1.90],    ... &quot;feature phones&quot;: [0.46, 0.38, 0.30, 0.23, 0.17]}&quot;&quot;&quot;    &gt;&gt;&gt; ccs_insight    pyexcel sheet:    +----------------+--------------+------+    | feature phones | smart phones | year |    +----------------+--------------+------+    | 0.46           | 1.53         | 2017 |    +----------------+--------------+------+    | 0.38           | 1.64         | 2018 |    +----------------+--------------+------+    | 0.3            | 1.74         | 2019 |    +----------------+--------------+------+    | 0.23           | 1.82         | 2020 |    +----------------+--------------+------+    | 0.17           | 1.9          | 2021 |    +----------------+--------------+------+Here is a variant of json:    &gt;&gt;&gt; highspeedrail2 = pe.Sheet()    &gt;&gt;&gt; highspeedrail2.ndjson = &quot;&quot;&quot;    ... {&quot;year&quot;: 1903, &quot;country&quot;: &quot;Germany&quot;, &quot;speed&quot;: &quot;206.7km/h&quot;}    ... {&quot;year&quot;: 1964, &quot;country&quot;: &quot;Japan&quot;, &quot;speed&quot;: &quot;210km/h&quot;}    ... {&quot;year&quot;: 2008, &quot;country&quot;: &quot;China&quot;, &quot;speed&quot;: &quot;350km/h&quot;}    ... &quot;&quot;&quot;.strip()    &gt;&gt;&gt; highspeedrail2.name = 'High Speed Train Speed Break Through (Source: Wikipedia)'    &gt;&gt;&gt; highspeedrail2    High Speed Train Speed Break Through (Source: Wikipedia):    +---------+-----------+------+    | country | speed     | year |    +---------+-----------+------+    | Germany | 206.7km/h | 1903 |    +---------+-----------+------+    | Japan   | 210km/h   | 1964 |    +---------+-----------+------+    | China   | 350km/h   | 2008 |    +---------+-----------+------+    &gt;&gt;&gt; henley_on_thames_facts2 = pe.Sheet()    &gt;&gt;&gt; henley_on_thames_facts2.ndjson = &quot;&quot;&quot;    ... {&quot;area&quot;: &quot;5.58 square meters&quot;}    ... {&quot;population&quot;: &quot;11,619&quot;}    ... {&quot;civial parish&quot;: &quot;Henley-on-Thames&quot;}    ... {&quot;latitude&quot;: &quot;51.536&quot;}    ... {&quot;longitude&quot;: &quot;-0.898&quot;}    ... &quot;&quot;&quot;.strip()    &gt;&gt;&gt; henley_on_thames_facts2    pyexcel sheet:    +---------------+--------------------+    | area          | 5.58 square meters |    +---------------+--------------------+    | population    | 11,619             |    +---------------+--------------------+    | civial parish | Henley-on-Thames   |    +---------------+--------------------+    | latitude      | 51.536             |    +---------------+--------------------+    | longitude     | -0.898             |    +---------------+--------------------+    &gt;&gt;&gt; ccs_insight2 = pe.Sheet()    &gt;&gt;&gt; ccs_insight2.name = &quot;Worldwide Mobile Phone Shipments (Billions), 2017-2021&quot;    &gt;&gt;&gt; ccs_insight2.ndjson = &quot;&quot;&quot;    ... {&quot;year&quot;: [&quot;2017&quot;, &quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;]}    ... {&quot;smart phones&quot;: [1.53, 1.64, 1.74, 1.82, 1.90]}    ... {&quot;feature phones&quot;: [0.46, 0.38, 0.30, 0.23, 0.17]}    ... &quot;&quot;&quot;.strip()    &gt;&gt;&gt; ccs_insight2    pyexcel sheet:    +----------------+------+------+------+------+------+    | year           | 2017 | 2018 | 2019 | 2020 | 2021 |    +----------------+------+------+------+------+------+    | smart phones   | 1.53 | 1.64 | 1.74 | 1.82 | 1.9  |    +----------------+------+------+------+------+------+    | feature phones | 0.46 | 0.38 | 0.3  | 0.23 | 0.17 |    +----------------+------+------+------+------+------+Simple------------.. code-block:: python    &gt;&gt;&gt; import pyexcel as pe    &gt;&gt;&gt; content = [    ...     [&quot;Column 1&quot;, &quot;Column 2&quot;, &quot;Column 3&quot;],    ...     [1, 2, 3],    ...     [4, 5, 6],    ...     [7, 8, 9]    ... ]    &gt;&gt;&gt; sheet = pe.Sheet(content)    &gt;&gt;&gt; print(sheet.simple)    pyexcel sheet:    --------  --------  --------    Column 1  Column 2  Column 3    1         2         3    4         5         6    7         8         9    --------  --------  --------    &gt;&gt;&gt; sheet.name_columns_by_row(0)    &gt;&gt;&gt; print(sheet.simple)    pyexcel sheet:      Column 1    Column 2    Column 3    ----------  ----------  ----------             1           2           3             4           5           6             7           8           9Grid-------.. code-block:: python    &gt;&gt;&gt; print(sheet.grid)    pyexcel sheet:    +------------+------------+------------+    |   Column 1 |   Column 2 |   Column 3 |    +============+============+============+    |          1 |          2 |          3 |    +------------+------------+------------+    |          4 |          5 |          6 |    +------------+------------+------------+    |          7 |          8 |          9 |    +------------+------------+------------+Mediawiki-------------.. code-block:: python    &gt;&gt;&gt; multiple_sheets = {    ...      'Sheet 1':    ...          [    ...              [1.0, 2.0, 3.0],    ...              [4.0, 5.0, 6.0],    ...              [7.0, 8.0, 9.0]    ...          ],    ...      'Sheet 2':    ...          [    ...              ['X', 'Y', 'Z'],    ...              [1.0, 2.0, 3.0],    ...              [4.0, 5.0, 6.0]    ...          ],    ...      'Sheet 3':    ...          [    ...              ['O', 'P', 'Q'],    ...              [3.0, 2.0, 1.0],    ...              [4.0, 3.0, 2.0]    ...          ]    ...  }    &gt;&gt;&gt; book = pe.Book(multiple_sheets)    &gt;&gt;&gt; book.save_as(&quot;myfile.mediawiki&quot;)    &gt;&gt;&gt; myfile = open(&quot;myfile.mediawiki&quot;)    &gt;&gt;&gt; print(myfile.read())    Sheet 1:    {| class=&quot;wikitable&quot; style=&quot;text-align: left;&quot;    |+ &lt;!-- caption --&gt;    |-    | align=&quot;right&quot;| 1 || align=&quot;right&quot;| 2 || align=&quot;right&quot;| 3    |-    | align=&quot;right&quot;| 4 || align=&quot;right&quot;| 5 || align=&quot;right&quot;| 6    |-    | align=&quot;right&quot;| 7 || align=&quot;right&quot;| 8 || align=&quot;right&quot;| 9    |}    Sheet 2:    {| class=&quot;wikitable&quot; style=&quot;text-align: left;&quot;    |+ &lt;!-- caption --&gt;    |-    | X   || Y   || Z    |-    | 1.0 || 2.0 || 3.0    |-    | 4.0 || 5.0 || 6.0    |}    Sheet 3:    {| class=&quot;wikitable&quot; style=&quot;text-align: left;&quot;    |+ &lt;!-- caption --&gt;    |-    | O   || P   || Q    |-    | 3.0 || 2.0 || 1.0    |-    | 4.0 || 3.0 || 2.0    |}    &gt;&gt;&gt; myfile.close()Html----------.. code-block:: python    &gt;&gt;&gt; book.save_as(&quot;myfile.html&quot;)    &gt;&gt;&gt; myfile = open(&quot;myfile.html&quot;)    &gt;&gt;&gt; print(myfile.read()) # doctest: +SKIP    Sheet 1:    &lt;table&gt;    &lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;1&lt;/td&gt;&lt;td style=&quot;text-align: right;&quot;&gt;2&lt;/td&gt;&lt;td style=&quot;text-align: right;&quot;&gt;3&lt;/td&gt;&lt;/tr&gt;    &lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;4&lt;/td&gt;&lt;td style=&quot;text-align: right;&quot;&gt;5&lt;/td&gt;&lt;td style=&quot;text-align: right;&quot;&gt;6&lt;/td&gt;&lt;/tr&gt;    &lt;tr&gt;&lt;td style=&quot;text-align: right;&quot;&gt;7&lt;/td&gt;&lt;td style=&quot;text-align: right;&quot;&gt;8&lt;/td&gt;&lt;td style=&quot;text-align: right;&quot;&gt;9&lt;/td&gt;&lt;/tr&gt;    &lt;/table&gt;    Sheet 2:    &lt;table&gt;    &lt;tr&gt;&lt;td&gt;X  &lt;/td&gt;&lt;td&gt;Y  &lt;/td&gt;&lt;td&gt;Z  &lt;/td&gt;&lt;/tr&gt;    &lt;tr&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;/tr&gt;    &lt;tr&gt;&lt;td&gt;4.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;6.0&lt;/td&gt;&lt;/tr&gt;    &lt;/table&gt;    Sheet 3:    &lt;table&gt;    &lt;tr&gt;&lt;td&gt;O  &lt;/td&gt;&lt;td&gt;P  &lt;/td&gt;&lt;td&gt;Q  &lt;/td&gt;&lt;/tr&gt;    &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;    &lt;tr&gt;&lt;td&gt;4.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;2.0&lt;/td&gt;&lt;/tr&gt;    &lt;/table&gt;Please note tabulate 0.7.7 gives an extra tbody tag around tr tag.Dependencies============* tabulateChange log================================================================================0.2.7 - 30.07.2017--------------------------------------------------------------------------------Updated:********************************************************************************#. Read specific data structure from pure json format: two dimensional   array, a dicionary of list or two dimensional list and a list of records.#. Read newline delimited json. two dimensional arrays, a a dicionary of list   or two dimensional list and a list of records are supported.0.2.6 - 19.06.2017--------------------------------------------------------------------------------Updated:********************************************************************************#. Support pyexcel v0.5.0. Plugin interface updated to Renderer#. removed deprecated save_as and save_to_memory functions0.2.5 - 28.10.2016--------------------------------------------------------------------------------Updated:********************************************************************************#. Support pyexcel v0.4.00.2.4 - 28.10.2016--------------------------------------------------------------------------------Added:********************************************************************************#. support pyexcel v0.3.00.2.3 - 14.07.2016--------------------------------------------------------------------------------Added:********************************************************************************#. json format: serialize date and datetimeUpdated:********************************************************************************#. if a sheet has row_names, its json output become records(a list of dictionary)   instead of a dictionary of row name vs the rest of row values.0.2.2 - 01.06.2016--------------------------------------------------------------------------------#. quick bug fix, see `issue #27 &lt;https://github.com/pyexcel/pyexcel-text/issues/27&gt;`_ 0.2.1 - 01.06.2016--------------------------------------------------------------------------------#. compactibility with pyexcel-io 0.2.0 and pyexcel 0.2.20.2.0 - 23.04.2016--------------------------------------------------------------------------------It is a complete re-write of the whole extension.Added********************************************************************************#. html support#. support pyexcel 0.2.0's generator output#. pypy and pypy3 in test targets#. support file stream and dot notation, e.g. pyexcel.Sheet.rst will return rst text representation of it.Updated********************************************************************************#. `#8 &lt;https://github.com/pyexcel/pyexcel-text/issues/8&gt;`_, write_header as an option(False) to disable header writing#. the json output of multiple sheet book will be sorted by its sheet names.#. No longer, pyexcel-text is pyexcel-io plugin but pyexcel.sources plugin.0.1.1 - 30.01.2016--------------------------------------------------------------------------------Updated********************************************************************************#. `#2 &lt;https://github.com/pyexcel/pyexcel-text/issues/2&gt;`_, fix a typo in setup.py0.1.0 - 17.01.2016--------------------------------------------------------------------------------Updated********************************************************************************#. support pyexcel 0.2.00.0.3 - 12.06.2015--------------------------------------------------------------------------------Updated********************************************************************************#. `#1 &lt;https://github.com/pyexcel/pyexcel-text/issues/1&gt;`_, align api interface    with other pyexcel plugins, e.g. save_as, save_book_as0.0.2 - 30.11.2014--------------------------------------------------------------------------------Updated********************************************************************************#. support pyexcel 0.0.90.0.` - 20.11.2014--------------------------------------------------------------------------------Initial release</longdescription>
</pkgmetadata>