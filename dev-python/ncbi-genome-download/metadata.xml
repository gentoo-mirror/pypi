<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># NCBI Genome Downloading Scripts[![PyPI release](https://img.shields.io/pypi/v/ncbi-genome-download.svg)](https://pypi.python.org/pypi/ncbi-genome-download/)Some script to download bacterial and fungal genomes from NCBI after theyrestructured their FTP a while ago.Idea shamelessly stolen from [Mick Watson's Kraken downloaderscripts](http://www.opiniomics.org/building-a-kraken-database-with-new-ftp-structure-and-no-gi-numbers/)that can also be found in [Mick's GitHubrepo](https://github.com/mw55309/Kraken_db_install_scripts). However, Mick'sscripts are ~~written in Perl~~ specific to actually building a Kraken database(as advertised).So this is a set of scripts that focuses on the actual genome downloading.## Installation```bashpip install ncbi-genome-download```Alternatively, clone this repository from GitHub, then run (in a python virtual environment)```bashpip install .```If this fails on older versions of Python, try updating your `pip` tool first:```bashpip install --upgrade pip```and then rerun the `ncbi-genome-download` install.Alternatively, `ncbi-genome-download` is packaged in `conda`.Refer the the Anaconda/[miniconda](https://conda.io/miniconda.html) site toinstall a distribution (highly recommended). With that installed one can do:```bashconda install -c bioconda ncbi-genome-download````ncbi-genome-download` is only developed and tested on Python releases stillunder active support by the Python project. At the moment, this means versions3.7, 3.8, 3.9, 3.10 and 3.11.Specifically, no attempt at testing under Python versions older than 3.7 isbeing made.If your system is stuck on an older version of Python, consider using a tool like[Homebrew](http://brew.sh) to obtain a more up-to-date version.`ncbi-genome-download` 0.2.12 was the last version to support Python 2.## UsageTo download all bacterial RefSeq genomes in GenBank format from NCBI, run the following:```bashncbi-genome-download bacteria```Downloading multiple groups is also possible:```bashncbi-genome-download bacteria,viral```**Note**: To see all available groups, see `ncbi-genome-download --help`, orsimply use `all` to check all groups. Naming a more specific group will reducethe download size and the time needed to find the sequences to download.If you're on a reasonably fast connection, you might want to try runningmultiple downloads in parallel:```bashncbi-genome-download bacteria --parallel 4```To download all fungal GenBank genomes from NCBI in GenBank format, run:```bashncbi-genome-download --section genbank fungi```To download all viral RefSeq genomes in FASTA format, run:```bashncbi-genome-download --formats fasta viral```It is possible to download multiple formats by supplying a list of formats orsimply downloading all formats:```bashncbi-genome-download --formats fasta,assembly-report viralncbi-genome-download --formats all viral```To download only completed bacterial RefSeq genomes in GenBank format, run:```bashncbi-genome-download --assembly-levels complete bacteria```It is possible to download multiple assembly levels at once by supplying a list:```bashncbi-genome-download --assembly-levels complete,chromosome bacteria```To download only bacterial reference genomes from RefSeq in GenBank format, run:```bashncbi-genome-download --refseq-categories reference bacteria```To download bacterial RefSeq genomes of the genus _Streptomyces_, run:```bashncbi-genome-download --genera Streptomyces bacteria```**Note**: This is a simple string match on the organism name provided by NCBI only.You can also use this with a slight trick to download genomes of a certainspecies as well:```bashncbi-genome-download --genera &quot;Streptomyces coelicolor&quot; bacteria```**Note**: The quotes are important. Again, this is a simple string match on the organismname provided by the NCBI.Multiple genera is also possible:```bashncbi-genome-download --genera &quot;Streptomyces coelicolor,Escherichia coli&quot; bacteria```You can also put genus names into a file, one organism per line, e.g.:```bashStreptomycesAmycolatopsis```Then, pass the path to that file (e.g. `my_genera.txt`) to the `--genera`option, like so:```bashncbi-genome-download --genera my_genera.txt bacteria```**Note**: The above command will download all _Streptomyces_ and _Amycolatopsis_genomes from RefSeq.You can make the string match fuzzy using the `--fuzzy-genus` option. This canbe handy if you need to match a value in the middle of the NCBI organism name,like so:```bashncbi-genome-download --genera coelicolor --fuzzy-genus bacteria```**Note**: The above command will download all bacterial genomes containing&quot;coelicolor&quot; anywhere in their organism name from RefSeq.To download bacterial RefSeq genomes based on their NCBI species taxonomy ID, run:```bashncbi-genome-download --species-taxids 562 bacteria```**Note**: The above command will download all RefSeq genomes belonging to_Escherichia coli_.To download a specific bacterial RefSeq genomes based on its NCBI taxonomy ID, run:```bashncbi-genome-download --taxids 511145 bacteria```**Note**: The above command will download the RefSeq genome belonging to_Escherichia coli str. K-12 substr. MG1655_.It is also possible to download multiple species taxids or taxids by supplyingthe numbers in a comma-separated list:```bashncbi-genome-download --taxids 9606,9685 --assembly-level chromosome vertebrate_mammalian```**Note**: The above command will download the reference genomes for cat and human.In addition, you can put multiple species taxids or taxids into a file, one per lineand pass that filename to the `--species-taxids` or `--taxids` parameters, respectively.Assuming you had a file `my_taxids.txt` with the following contents:```text96069685```You could download the reference genomes for cat and human like this:```bashncbi-genome-download --taxids my_taxids.txt --assembly-levels chromosome vertebrate_mammalian```It is possible to also create a human-readable directory structure in parallelto mirroring the layout used by NCBI:```bashncbi-genome-download --human-readable bacteria```This will use links to point to the appropriate files in the NCBI directory structure,so it saves file space. Note that links are not supported on some Windows filesystems and some older versions of Windows.It is also possible to re-run a previous download with the `--human-readable` option.In this case, `ncbi-genome-download` will not download any new genome files, andjust create human-readable directory structure. Note that if any files have beenchanged on the NCBI side, a file download will be triggered.There is a &quot;dry-run&quot; option to show which accessions would be downloaded, givenyour filters:```bashncbi-genome-download --dry-run bacteria```If you want to filter for the &quot;relation to type material&quot; column of theassembly summary file, you can use the `--type-materials` option. Possiblevalues are &quot;any&quot;, &quot;all&quot;, &quot;type&quot;, &quot;reference&quot;, &quot;synonym&quot;, &quot;proxytype&quot;, and/or&quot;neotype&quot;. &quot;any&quot; will include assemblies with no relation to type materialvalue defined, &quot;all&quot; will download only assemblies with a defined value.Multiple values can be given, separated by comma:```bashncbi-genome-download --type-materials type,reference```By default, ncbi-genome-download caches the assembly summary files for therespective taxonomic groups for one day. You can skip using the cache file byusing the `--no-cache` option. The output of `--help` also shows the cachedirectory, should you want to remove any of the cached files.To get an overview of all options, run```bashncbi-genome-download --help```### As a methodYou can also use it as a method call. Pass the pythonised keyword arguments(`_` instead of `-`) as described above or in the `--help`:```pythonimport ncbi_genome_download as ngdngd.download()```**Note**: To specify a taxonomic group, like _bacteria_, use the `group` keyword.### Contributed Scripts: `gimme_taxa.py`This script lets you find out what TaxIDs to pass to `ngd`, and will write asimple one-item-per-line file to pass in to it. It utilises the `ete3` toolkit,so refer to their site to install the dependency if it's not already satisfied.You can query the database using a particular TaxID, or a scientific name. Theprimary function of the script is to return all the child taxa of the specifiedparent taxa. The script has various options for what information is written inthe output.A basic invocation may look like:```bash# Fetch all descendent taxa for Escherichia (taxid 561):python gimme_taxa.py -o ~/mytaxafile.txt 561# Alternatively, just provide the taxon namepython gimme_taxa.py -o all_descendent_taxids.txt Escherichia# You can provide multiple taxids and/or namespython gimme_taxa.py -o all_descendent_taxids.txt 561,Methanobrevibacter```On first use, a small sqlite database will be created in your home directoryby default (change the location with the `--database` flag). You can update thisdatabase by using the `--update` flag. Note that if the database is not in yourhome directory, you must specify it with `--database` or a new database will becreated in your home directory.To see all help:```bashpython gimme_taxa.pypython gimme_taxa.py -hpython gimme_taxa.py --help```## LicenseAll code is available under the Apache License version 2, see the[`LICENSE`](LICENSE) file for details.</longdescription>
</pkgmetadata>