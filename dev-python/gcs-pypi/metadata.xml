<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>gcs_pypi========.. image:: https://github.com/jackton1/gcspypi/workflows/Python%20package/badge.svg   :target: https://github.com/jackton1/gcspypi/workflows/Python%20package/badge.svg   :alt: Python packagegcs_pypi is a CLI for creating a Python Package Repository in an GCS bucket.Getting started---------------Installation^^^^^^^^^^^^Install gcs_pypi using pip:.. code-block:: bash   pip install gcs_pypiUsage-----GCS Bucket^^^^^^^^^^* Create a new bucketIAM (Role &amp; Service Account)~~~~~~~~~~~~~~~~~~~~~~~~~~~~Setup service account with the following permissions.. code-block:: text   storage.buckets.get   storage.buckets.getIamPolicy   storage.buckets.update   storage.objects.create   storage.objects.delete   storage.objects.get   storage.objects.getIamPolicy   storage.objects.list   storage.objects.setIamPolicyRecommended that you create a custom Role which can be inherited by the service accountExample*  Create Role &quot;PYPI&quot;*  Assign Permissions.. code-block:: text   storage.buckets.get   storage.buckets.getIamPolicy   storage.buckets.update   storage.objects.create   storage.objects.delete   storage.objects.get   storage.objects.getIamPolicy   storage.objects.list   storage.objects.setIamPolicy*  Create a Service Account e.g pypi*  Select the &quot;PYPI&quot; Role created above*  Add a condition to limit access to only that GCS bucket.. code-block:: yaml   resource.name == &quot;mybucket&quot;Visit `Cloud IAM Conditions &lt;https://cloud.google.com/iam/docs/conditions-overview?_gac=1.79817061.1587676512.CjwKCAjw-YT1BRAFEiwAd2WRtsely2bRUq6KF3rxDzHVoCLbdZoy-AqW0raFx96lJeQ6O2Ie8q6IMhoCrskQAvD_BwE&amp;_ga=2.40552928.-350153010.1574411744&gt;`_  for more informationDistributing packages^^^^^^^^^^^^^^^^^^^^^You can now use ``gcspypi`` to create Python packages and upload them to your GCS bucket.To hide packages from the public, you can use the ``--private`` option to prevent the packages frombeing accessible directly via the GCS bucket (they will only be accessible via your Domain oralternatively you can specify a secret subdirectory using the ``--secret`` option:.. code-block:: bash   cd /path/to/your-project/   gcspypi --bucket mybucket [--private] [--secret SECRET]Cache Header^^^^^^^^^^^^Set cache-control header for index.html.. code-block:: bash   $ gsutil setmeta -h &quot;cache-control:public, must-revalidate, proxy-revalidate, max-age=0&quot; gs://[BUCKET]/index.htmlInstalling packages^^^^^^^^^^^^^^^^^^^Install your packages using ``pip`` by pointing the ``--extra-index-url`` to your Custom domain (optionally followed by a secret subdirectory):.. code-block:: bash   pip install your-project --extra-index-url https://pypi.example.com/SECRET/Alternatively, you can configure the index URL in ``~/.pip/pip.conf``\ :.. code-block::   [global]   extra-index-url = https://pypi.example.com/SECRET/Credits~~~~~~~* `s3pypi &lt;https://github.com/novemberfiveco/s3pypi&gt;`_</longdescription>
</pkgmetadata>