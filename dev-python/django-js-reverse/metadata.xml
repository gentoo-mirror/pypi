<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=================Django JS Reverse=================.. image:: https://img.shields.io/pypi/v/django-js-reverse.svg   :target: https://pypi.python.org/pypi/django-js-reverse/.. image:: https://img.shields.io/travis/ierror/django-js-reverse/master.svg   :target: https://travis-ci.org/ierror/django-js-reverse.. image:: https://img.shields.io/coveralls/ierror/django-js-reverse/master.svg   :alt: Coverage Status   :target: https://coveralls.io/r/ierror/django-js-reverse?branch=master.. image:: https://img.shields.io/github/license/ierror/django-js-reverse.svg    :target: https://raw.githubusercontent.com/ierror/django-js-reverse/develop/LICENSE.. image:: https://img.shields.io/pypi/wheel/django-js-reverse.svg**Javascript url handling for Django that doesn’t hurt.**Overview--------Django JS Reverse is a small django app that makes url handling of`named urls &lt;https://docs.djangoproject.com/en/dev/topics/http/urls/#naming-url-patterns&gt;`__ in javascript easy and non-annoying..For example you can retrieve a named url:urls.py:::    url(r'^/betterliving/(?P&lt;category_slug&gt;[-\w]+)/(?P&lt;entry_pk&gt;\d+)/$', 'get_house', name='betterliving_get_house'),in javascript like:::    Urls.betterliving_get_house('house', 12)Result:::    /betterliving/house/12/Changelog_________0.9.0    New: Support for Python 3.7    New: Support for Django 2.2    New: Unit Tests Script prefix with no slash, changed URL Conf`#72 &lt;https://github.com/ierror/django-js-reverse/issues/72&gt;`__    Thank you `graingert &lt;https://github.com/graingert&gt;`__    Fix: &quot;ROOT_URLCONF not taken into account&quot; `#73 &lt;https://github.com/ierror/django-js-reverse/issues/73&gt;`__ `#74 &lt;https://github.com/ierror/django-js-reverse/issues/74&gt;`__    Thank you `LuukOost &lt;https://github.com/LuukOost&gt;`__ and `graingert &lt;https://github.com/graingert&gt;`__    Refactoring: &quot;move template logic to view&quot; `#64 &lt;https://github.com/ierror/django-js-reverse/issues/64&gt;`__    Thank you `graingert &lt;https://github.com/graingert&gt;`__    Fix: &quot;Now using LooseVersion instead of StrictVersion to avoid issues with rc releases&quot; `#67 &lt;https://github.com/ierror/django-js-reverse/issues/64&gt;`__    Thank you `kavdev &lt;https://github.com/kavdev&gt;`__0.8.2    Fix: A bug fix in Django 2.0.6 has broken django-js-reverse `#65 &lt;https://github.com/ierror/django-js-reverse/issues/65&gt;`__    Thank you `kavdev &lt;https://github.com/kavdev&gt;`__0.8.1    Fix: The tests folder of the `#53 &lt;https://github.com/ierror/django-js-reverse/issues/53&gt;`__ was still present in the build. =&gt; Added cleanup to the release make command.0.8.0    New: Support for Django 2.0: `#58 &lt;https://github.com/ierror/django-js-reverse/issues/58&gt;`__    Thank you `wlonk &lt;https://github.com/wlonk&gt;`__    Fix: `#53 &lt;https://github.com/ierror/django-js-reverse/issues/53&gt;`__ - Don't install the tests folder as a separate folder.  Moved inside the django_js_reverse namespace.`Full changelog &lt;https://raw.githubusercontent.com/ierror/django-js-reverse/master/CHANGELOG&gt;`__Requirements------------+----------------+------------------------------------------+| Python version | Django versions                          |+================+==========================================+| 3.7            | 2.2, 2.1, 2.0, 1.11, 1.10, 1.9, 1.8      |+----------------+------------------------------------------+| 3.6            | 2.2, 2.1, 2.0, 1.11, 1.10, 1.9, 1.8      |+----------------+------------------------------------------+| 3.5            | 2.2, 2.1, 2.0, 1.11, 1.10, 1.9, 1.8      |+----------------+------------------------------------------+| 3.4            | 2.0, 1.11, 1.10, 1.9, 1.8, 1.7, 1.6, 1.5 |+----------------+------------------------------------------+| 2.7            | 1.11, 1.10, 1.9, 1.8, 1.7, 1.6, 1.5      |+----------------+------------------------------------------+Installation------------Install using ``pip`` …::    pip install django-js-reverse… or clone the project from github.::    git clone https://github.com/ierror/django-js-reverse.gitAdd ``'django_js_reverse'`` to your ``INSTALLED_APPS`` setting.::    INSTALLED_APPS = (        ...        'django_js_reverse',    )Usage as static file--------------------First generate static file by::    ./manage.py collectstatic_js_reverseIf you change some urls or add an app and want to update the reverse.js file,run the command again.After this add the file to your template::    &lt;script src=&quot;{% static 'django_js_reverse/js/reverse.js' %}&quot;&gt;&lt;/script&gt;Usage with views----------------Include none-cached view …::    urlpatterns = patterns('',        url(r'^jsreverse/$', 'django_js_reverse.views.urls_js', name='js_reverse'),    )… or a cached one that delivers the urls javascript::    from django_js_reverse.views import urls_js    urlpatterns = patterns('',        url(r'^jsreverse/$', cache_page(3600)(urls_js), name='js_reverse'),    )Include javascript in your template::    &lt;script src=&quot;{% url js_reverse %}&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;or, if you are using Django &gt; 1.5::    &lt;script src=&quot;{% url 'js_reverse' %}&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;Usage as template tag_____________________You can place the js_reverse JavaScript inline into your templates,however use of inline JavaScript is not recommended, because itwill make it impossible to deploy a secure Content Security Policy.See `django-csp &lt;https://django-csp.readthedocs.io/&gt;`__::    {% load js_reverse %}    &lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;        {% js_reverse_inline %}    &lt;/script&gt;Use the urls in javascript--------------------------If your url names are valid javascript identifiers ([$A-Z\_][-Z\_$]\*)iyou can access them by the Dot notation:::    Urls.betterliving_get_house('house', 12)If the named url contains invalid identifiers use the Square bracketnotation instead:::    Urls['betterliving-get-house']('house', 12)    Urls['namespace:betterliving-get-house']('house', 12)You can also pass javascript objects to match keyword aguments like theexamples bellow:::    Urls['betterliving-get-house']({ category_slug: 'house', entry_pk: 12 })    Urls['namespace:betterliving-get-house']({ category_slug: 'house', entry_pk: 12 })Options-------Optionally, you can overwrite the default javascript variable ‘Urls’ usedto access the named urls by django setting::    JS_REVERSE_JS_VAR_NAME = 'Urls'Optionally, you can change the name of the global object the javascript variableused to access the named urls is attached to. Default is :code:`this`::    JS_REVERSE_JS_GLOBAL_OBJECT_NAME = 'window'Optionally, you can disable the minfication of the generated javascript fileby django setting::    JS_REVERSE_JS_MINIFY = FalseBy default all namespaces are included::    JS_REVERSE_EXCLUDE_NAMESPACES = []To exclude any namespaces from the generated javascript file, add them to the `JS_REVERSE_EXCLUDE_NAMESPACES` setting::    JS_REVERSE_EXCLUDE_NAMESPACES = ['admin', 'djdt', ...]If you want to include only specific namespaces add them to the `JS_REVERSE_INCLUDE_ONLY_NAMESPACES` settingtips:* Use &quot;&quot; (empty string) for urls without namespace* Use &quot;foo\0&quot; to include urls just from &quot;foo&quot; namaspace and not from any subnamespaces (e.g. &quot;foo:bar&quot;)::    JS_REVERSE_INCLUDE_ONLY_NAMESPACES = ['poll', 'calendar', ...]If you run your application under a subpath, the collectstatic_js_reverse needs to take care of this.Define the prefix in your django settings:::   JS_REVERSE_SCRIPT_PREFIX = '/myprefix/'By default collectstatic_js_reverse writes its output (reverse.js) to your project's STATIC_ROOT.You can change the output path:::    JS_REVERSE_OUTPUT_PATH = 'some_path'Running the test suite----------------------::    make testLicense-------`MIT &lt;https://raw.github.com/ierror/django-js-reverse/develop/LICENSE&gt;`__Contact-------`@i_error &lt;https://twitter.com/i_error&gt;`__--------------Enjoy!</longdescription>
</pkgmetadata>