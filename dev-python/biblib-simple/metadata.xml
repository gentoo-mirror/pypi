<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Biblib------This repository was forked from [Austin Clementsrepository](https://github.com/aclements/biblib) to createa [PyPi package](https://pypi.org/project/biblib-simple/).Biblib provides a simple, standalone Python3 package for parsingBibTeX bibliographic databases, as well as algorithms for manipulatingBibTeX entries in BibTeX-y ways.There are a lot of BibTeX parsers out there.  Most of them arecomplete nonsense based on some imaginary grammar made up by themodule's author that is almost, but not quite, entirely unlikeBibTeX's actual grammar.  *BibTeX has a grammar*.  It's even prettysimple, though it's probably not what you think it is.  The hardestpart of BibTeX's grammar is that it's only written down in one place:the BibTeX source code.Biblib's parser is derived directly from the WEB source code forBibTeX and hence (barring bugs in translation) should be fullycompatible with BibTeX's own parser.Features--------* BibTeX-compatible `.bib` file parser* BibTeX-compatible name parser for fields like `author`* Crossref resolution* BibTeX-compatible title casing* Translator for common TeX markup (like accents) to Unicode (which  can, in turn, be used in HTML and other formats).Installation------------Since biblib has no external dependencies or C modules, you can usebiblib in your project by simply unpacking it under your source treeand adding    sys.path.append('biblib')before importing it.Biblib can also be installed system-wide with    python3 setup.py installExamples--------There are a few simple examples of biblib's use in `examples/`.  Torun these dircetly from the source tree, use, for example    PYTHONPATH=$PWD ./examples/bibparse test.bibRecognized grammar------------------For reference, the `.bib` parser implements a grammar equivalent tothe following PEG.  All literals are matched case-*insensitively*.    bib_db = comment (command_or_entry comment)*    comment = [^@]*    ws = [ \t\n]*    ident = ![0-9] (![ \t&quot;#%'(),={}] [\x20-\x7f])+    command_or_entry = '@' ws (comment / preamble / string / entry)    comment = 'comment'    preamble = 'preamble' ws ( '{' ws preamble_body ws '}'                             / '(' ws preamble_body ws ')' )    preamble_body = value    string = 'string' ws ( '{' ws string_body ws '}'                         / '(' ws string_body ws ')' )    string_body = ident ws '=' ws value    entry = ident ws ( '{' ws key ws entry_body? ws '}'                     / '(' ws key_paren ws entry_body? ws ')' )    key = [^, \t}\n]*    key_paren = [^, \t\n]*    entry_body = (',' ws ident ws '=' ws value ws)* ','?    value = piece (ws '#' ws piece)*    piece        = [0-9]+        / '{' balanced* '}'        / '&quot;' (!'&quot;' balanced)* '&quot;'        / ident    balanced        = '{' balanced* '}'        / [^{}]</longdescription>
</pkgmetadata>