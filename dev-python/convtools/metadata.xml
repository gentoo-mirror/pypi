<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># convtools**convtools** is a specialized Python library designed for defining datatransformations dynamically using a declarative approach. It automaticallygenerates custom Python code for the user in the background.### ChatGPT's take on it :)Introducing ConvTools, the revolutionary Python library for dynamic datatransformations! With its declarative approach, transforming data has neverbeen easier. Say goodbye to manual coding, ConvTools automaticallygenerates the code for you, saving you time and effort. Whether you'reworking with large datasets or need to make real-time updates, ConvTools isthe solution you've been searching for. Get ready to experience the powerof efficient and effortless data transformation![![License](https://img.shields.io/github/license/westandskif/convtools.svg)](https://github.com/westandskif/convtools/blob/master/LICENSE.txt)[![codecov](https://codecov.io/gh/westandskif/convtools/branch/master/graph/badge.svg)]( https://codecov.io/gh/westandskif/convtools)[![Tests status](https://github.com/westandskif/convtools/workflows/tests/badge.svg)](https://github.com/westandskif/convtools/actions/workflows/pytest.yml)[![Docs status](https://readthedocs.org/projects/convtools/badge/?version=latest)](https://convtools.readthedocs.io/en/latest/?badge=latest)[![PyPI](https://badge.fury.io/py/convtools.svg)](https://pypi.org/project/convtools/)[![Twitter](https://img.shields.io/twitter/url?label=convtools&amp;style=social&amp;url=https%3A%2F%2Ftwitter.com%2Fconvtools)](https://twitter.com/convtools)[![Downloads](https://static.pepy.tech/badge/convtools)](https://pepy.tech/project/convtools)[![Python versions](https://img.shields.io/pypi/pyversions/convtools.svg)](https://pypi.org/project/convtools/)____## Installation`pip install convtools`## Documentation**[convtools.readthedocs.io](https://convtools.readthedocs.io/en/latest/)**## Group by example```pythonfrom convtools import conversion as cinput_data = [    {&quot;a&quot;: 5, &quot;b&quot;: &quot;foo&quot;},    {&quot;a&quot;: 10, &quot;b&quot;: &quot;foo&quot;},    {&quot;a&quot;: 10, &quot;b&quot;: &quot;bar&quot;},    {&quot;a&quot;: 10, &quot;b&quot;: &quot;bar&quot;},    {&quot;a&quot;: 20, &quot;b&quot;: &quot;bar&quot;},]conv = (    c.group_by(c.item(&quot;b&quot;))    .aggregate(        {            &quot;b&quot;: c.item(&quot;b&quot;),            &quot;a_first&quot;: c.ReduceFuncs.First(c.item(&quot;a&quot;)),            &quot;a_max&quot;: c.ReduceFuncs.Max(c.item(&quot;a&quot;)),        }    )    .pipe(        c.aggregate({            &quot;b_values&quot;: c.ReduceFuncs.Array(c.item(&quot;b&quot;)),            &quot;mode_a_first&quot;: c.ReduceFuncs.Mode(c.item(&quot;a_first&quot;)),            &quot;median_a_max&quot;: c.ReduceFuncs.Median(c.item(&quot;a_max&quot;)),        })    )    .gen_converter())assert conv(input_data) == {    'b_values': ['foo', 'bar'],    'mode_a_first': 10,    'median_a_max': 15.0}```##### Built-in reducers like `c.ReduceFuncs.First`    * Sum    * SumOrNone    * Max    * MaxRow    * Min    * MinRow    * Count    * CountDistinct    * First    * Last    * Average    * Median    * Percentile    * Mode    * TopK    * Array    * ArrayDistinct    * ArraySorted    DICT REDUCERS ARE IN FACT AGGREGATIONS THEMSELVES, BECAUSE VALUES GET REDUCED.    * Dict    * DictArray    * DictSum    * DictSumOrNone    * DictMax    * DictMin    * DictCount    * DictCountDistinct    * DictFirst    * DictLast    AND LASTLY YOU CAN DEFINE YOUR OWN REDUCER BY PASSING ANY REDUCE FUNCTION    OF TWO ARGUMENTS TO ``c.reduce``.## What's the point if there are tools like Pandas / Polars?* convtools doesn't need to wrap data in a container to provide functionality,  it simply runs the python code it generates on **any input*** convtools is lightweight (_though optional `black` is highly recommended for  pretty-printing generated code out of curiosity_)* convtools fosters building pipelines on top of iterators, allowing for stream  processing* convtools supports nested aggregations* convtools is a set of primitives for code generation, so it's just different.## Support* westandskif (Nikita Almakov) - [Link to support](https://boosty.to/westandskif)## Reporting a Security VulnerabilitySee the [security policy](https://github.com/westandskif/convtools/security/policy).</longdescription>
</pkgmetadata>