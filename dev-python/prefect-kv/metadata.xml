<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># prefect-kv&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.python.org/pypi/prefect-kv/&quot; alt=&quot;PyPI version&quot;&gt;        &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/prefect-kv?color=0052FF&amp;labelColor=090422&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/madkinsz/prefect-kv/&quot; alt=&quot;Stars&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/stars/madkinsz/prefect-kv?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://pepy.tech/badge/prefect-kv/&quot; alt=&quot;Downloads&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/prefect-kv?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/madkinsz/prefect-kv/pulse&quot; alt=&quot;Activity&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/madkinsz/prefect-kv?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;br&gt;    &lt;a href=&quot;https://prefect-community.slack.com&quot; alt=&quot;Slack&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&amp;labelColor=090422&amp;logo=slack&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://discourse.prefect.io/&quot; alt=&quot;Discourse&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&amp;labelColor=090422&amp;logo=discourse&quot; /&gt;&lt;/a&gt;&lt;/p&gt;## Welcome!A simple key-value store for use with Prefect.## Getting Started### Python setupRequires an installation of Python 3.7+.We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).### InstallationInstall `prefect-kv` with `pip`:```bashpip install prefect-kv```### Using a key-value storeThe entire store is saved to Prefect's API each time a key is updated.Each time a key is read, the entire store is loaded from Prefect's API.This exposes a simple way to persist and retrieve values across flow runs and tasks, independently of your dataflow.```pythonfrom prefect_kv import KVStore# Create a new KV store named 'demo-store'store = KVStore(name=&quot;demo-store&quot;)# Set a value in the storestore.set(&quot;foo&quot;, &quot;test&quot;)# Get a value from the storeprint(store.get(&quot;foo&quot;))# Get a value from the store with a defaultprint(store.get(&quot;does-not-exist, &quot;that's okay!&quot;))# Set a value in the store using item syntaxstore[&quot;bar&quot;] = &quot;another test&quot;# Get a value from the store using item syntaxprint(store[&quot;bar&quot;])# View the whole storeprint(f&quot;Here's the whole thing: {store.dict()}&quot;)```If you exit the process and create a new store object with same name, you will still be able to access your values:```pythonfrom prefect_kv import KVStore# Get the existing KV store named 'demo-store'store = KVStore(name=&quot;demo-store&quot;)print(store[&quot;foo&quot;])print(store[&quot;bar&quot;])```## ResourcesIf you encounter any bugs while using `prefect-kv`, feel free to open an issue in the [prefect-kv](https://github.com/madkinsz/prefect-kv) repository.If you have any questions or issues while using `prefect-kv`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).Feel free to ⭐️ or watch [`prefect-kv`](https://github.com/madkinsz/prefect-kv) for updates too!## DevelopmentIf you'd like to install a version of `prefect-kv` for development, clone the repository and perform an editable install with `pip`:```bashgit clone https://github.com/madkinsz/prefect-kv.gitcd prefect-kv/pip install -e &quot;.[dev]&quot;# Install linting pre-commit hookspre-commit install```</longdescription>
</pkgmetadata>