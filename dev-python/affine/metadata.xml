<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Affine======Matrices describing 2D affine transformation of the plane... image:: https://github.com/rasterio/affine/actions/workflows/ci.yml/badge.svg?branch=main    :target: https://github.com/rasterio/affine/actions/workflows/ci.yml.. image:: https://codecov.io/gh/rasterio/affine/branch/main/graph/badge.svg    :target: https://codecov.io/gh/rasterio/affineThe Affine package is derived from Casey Duncan's Planar package. Please seethe copyright statement in `affine/__init__.py &lt;affine/__init__.py&gt;`__.Usage-----The 3x3 augmented affine transformation matrix for transformations in twodimensions is illustrated below.::  | x' |   | a  b  c | | x |  | y' | = | d  e  f | | y |  | 1  |   | 0  0  1 | | 1 |Matrices can be created by passing the values ``a, b, c, d, e, f`` to the``affine.Affine`` constructor or by using its ``identity()``,``translation()``, ``scale()``, ``shear()``, and ``rotation()`` class methods... code-block:: pycon  &gt;&gt;&gt; from affine import Affine  &gt;&gt;&gt; Affine.identity()  Affine(1.0, 0.0, 0.0,         0.0, 1.0, 0.0)  &gt;&gt;&gt; Affine.translation(1.0, 5.0)  Affine(1.0, 0.0, 1.0,         0.0, 1.0, 5.0)  &gt;&gt;&gt; Affine.scale(2.0)  Affine(2.0, 0.0, 0.0,         0.0, 2.0, 0.0)  &gt;&gt;&gt; Affine.shear(45.0, 45.0)  # decimal degrees  Affine(1.0, 0.9999999999999999, 0.0,         0.9999999999999999, 1.0, 0.0)  &gt;&gt;&gt; Affine.rotation(45.0)     # decimal degrees  Affine(0.7071067811865476, -0.7071067811865475, 0.0,         0.7071067811865475, 0.7071067811865476, 0.0)These matrices can be applied to ``(x, y)`` tuples to obtain transformedcoordinates ``(x', y')``... code-block:: pycon  &gt;&gt;&gt; Affine.translation(1.0, 5.0) * (1.0, 1.0)  (2.0, 6.0)  &gt;&gt;&gt; Affine.rotation(45.0) * (1.0, 1.0)  (1.1102230246251565e-16, 1.414213562373095)They may also be multiplied together to combine transformations... code-block:: pycon  &gt;&gt;&gt; Affine.translation(1.0, 5.0) * Affine.rotation(45.0)  Affine(0.7071067811865476, -0.7071067811865475, 1.0,         0.7071067811865475, 0.7071067811865476, 5.0)Usage with GIS data packages----------------------------Georeferenced raster datasets use affine transformations to map from imagecoordinates to world coordinates. The ``affine.Affine.from_gdal()`` classmethod helps convert `GDAL GeoTransform&lt;https://gdal.org/user/raster_data_model.html#affine-geotransform&gt;`__,sequences of 6 numbers in which the first and fourth are the x and y offsetsand the second and sixth are the x and y pixel sizes.Using a GDAL dataset transformation matrix, the world coordinates ``(x, y)``corresponding to the top left corner of the pixel 100 rows down from theorigin can be easily computed... code-block:: pycon  &gt;&gt;&gt; geotransform = (-237481.5, 425.0, 0.0, 237536.4, 0.0, -425.0)  &gt;&gt;&gt; fwd = Affine.from_gdal(*geotransform)  &gt;&gt;&gt; col, row = 0, 100  &gt;&gt;&gt; fwd * (col, row)  (-237481.5, 195036.4)The reverse transformation is obtained using the ``~`` operator... code-block:: pycon  &gt;&gt;&gt; rev = ~fwd  &gt;&gt;&gt; rev * fwd * (col, row)  (0.0, 99.99999999999999)</longdescription>
</pkgmetadata>