<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># fastapi-cloudevents[![](https://github.com/sasha-tkachev/fastapi-cloudevents/actions/workflows/main.yaml/badge.svg)](https://github.com/sasha-tkachev/fastapi-cloudevents/actions/workflows/main.yaml)[![](https://img.shields.io/badge/coverage-100%25-brightgreen)](https://github.com/sasha-tkachev/fastapi-cloudevents/blob/main/tests/test_docs.py#L35)[FastAPI](https://fastapi.tiangolo.com/) plugin for [CloudEvents](https://cloudevents.io/) IntegrationAllows to easily consume and produce CloudEvents over REST API. Automatically parses CloudEvents both in the binary and structured format andprovides an interface very similar to the regular FastAPI interface. No morehustling with `to_structured` and `from_http` function calls! ```python@app.post(&quot;/&quot;)async def on_event(event: CloudEvent) -&gt; CloudEvent:    pass```See more examples below### Install```shell scriptpip install fastapi-cloudevents```   ## Examples### [Simple Example](examples/simple_server)```pythonimport uvicornfrom fastapi import FastAPIfrom fastapi_cloudevents import CloudEvent, install_fastapi_cloudeventsapp = FastAPI()app = install_fastapi_cloudevents(app)@app.post(&quot;/&quot;)async def on_event(event: CloudEvent) -&gt; CloudEvent:    return CloudEvent(        type=&quot;my.response-type.v1&quot;,        data=event.data,        datacontenttype=event.datacontenttype,    )if __name__ == &quot;__main__&quot;:    uvicorn.run(app, host=&quot;0.0.0.0&quot;, port=8000)```The rout accepts both binary CloudEvents```shell scriptcurl http://localhost:8000 -i -X POST -d &quot;Hello World!&quot; \  -H &quot;Content-Type: text/plain&quot; \  -H &quot;ce-specversion: 1.0&quot; \  -H &quot;ce-type: my.request-type.v1&quot; \  -H &quot;ce-id: 123&quot; \  -H &quot;ce-source: my-source&quot;```And structured CloudEvents ```shell scriptcurl http://localhost:8000 -i -X POST -H &quot;Content-Type: application/json&quot; \  -d '{&quot;data&quot;:&quot;Hello World&quot;, &quot;source&quot;:&quot;my-source&quot;, &quot;id&quot;:&quot;123&quot;, &quot;type&quot;:&quot;my.request-type.v1&quot;,&quot;specversion&quot;:&quot;1.0&quot;}'```Both of the requests will yield a response in the same format:```textHTTP/1.1 200 OKdate: Fri, 05 Aug 2022 23:50:52 GMTserver: uvicorncontent-length: 13content-type: application/jsonce-specversion: 1.0ce-id: 25cd28f0-0605-4a76-b1d8-cffbe3375413ce-source: http://localhost:8000/ce-type: my.response-type.v1ce-time: 2022-08-05T23:50:52.809697+00:00&quot;Hello World&quot;```### [CloudEvent Type Routing](examples/type_routing)```pythonfrom typing import Literal, Unionimport uvicornfrom fastapi import FastAPIfrom pydantic import Fieldfrom typing_extensions import Annotatedfrom fastapi_cloudevents import (CloudEvent, CloudEventSettings, ContentMode,                                 install_fastapi_cloudevents)app = FastAPI()app = install_fastapi_cloudevents(    app, settings=CloudEventSettings(default_response_mode=ContentMode.structured))class MyEvent(CloudEvent):    type: Literal[&quot;my.type.v1&quot;]class YourEvent(CloudEvent):    type: Literal[&quot;your.type.v1&quot;]OurEvent = Annotated[Union[MyEvent, YourEvent], Field(discriminator=&quot;type&quot;)]_source = &quot;dummy:source&quot;@app.post(&quot;/&quot;)async def on_event(event: OurEvent) -&gt; CloudEvent:    if isinstance(event, MyEvent):        return CloudEvent(            type=&quot;my.response-type.v1&quot;,            data=f&quot;got {event.data} from my event!&quot;,            datacontenttype=&quot;text/plain&quot;,        )    else:        return CloudEvent(            type=&quot;your.response-type.v1&quot;,            data=f&quot;got {event.data} from your event!&quot;,            datacontenttype=&quot;text/plain&quot;,        )if __name__ == &quot;__main__&quot;:    uvicorn.run(app, host=&quot;0.0.0.0&quot;, port=8002)```### [Structured Response Example](examples/structured_response_server)To send the response in the http CloudEvent structured format, you MAY use the `BinaryCloudEventResponse` class ```pythonimport uvicornfrom fastapi import FastAPIfrom fastapi_cloudevents import (CloudEvent, StructuredCloudEventResponse,                                 install_fastapi_cloudevents)app = FastAPI()app = install_fastapi_cloudevents(app)@app.post(&quot;/&quot;, response_class=StructuredCloudEventResponse)async def on_event(event: CloudEvent) -&gt; CloudEvent:    return CloudEvent(        type=&quot;com.my-corp.response.v1&quot;,        data=event.data,        datacontenttype=event.datacontenttype,    )if __name__ == &quot;__main__&quot;:    uvicorn.run(app, host=&quot;0.0.0.0&quot;, port=8001)``` ```shell scriptcurl http://localhost:8001 -i -X POST -d &quot;Hello World!&quot; \  -H &quot;Content-Type: text/plain&quot; \  -H &quot;ce-specversion: 1.0&quot; \  -H &quot;ce-type: my.request-type.v1&quot; \  -H &quot;ce-id: 123&quot; \  -H &quot;ce-source: my-source&quot;``````textHTTP/1.1 200 OKdate: Fri, 05 Aug 2022 23:51:26 GMTserver: uvicorncontent-length: 247content-type: application/json{&quot;data&quot;:&quot;Hello World!&quot;,&quot;source&quot;:&quot;http://localhost:8001/&quot;,&quot;id&quot;:&quot;3412321f-85b3-4f7f-a551-f4c23a05de3a&quot;,&quot;type&quot;:&quot;com.my-corp.response.v1&quot;,&quot;specversion&quot;:&quot;1.0&quot;,&quot;time&quot;:&quot;2022-08-05T23:51:26.878723+00:00&quot;,&quot;datacontenttype&quot;:&quot;text/plain&quot;}```## More Examples* [Custom Default Source](examples/custom_default_source)* [Mixed Usage of events and regular models](examples/events_and_basemodels_mixed)</longdescription>
</pkgmetadata>