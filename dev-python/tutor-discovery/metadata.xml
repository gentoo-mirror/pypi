<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Course Discovery plugin for `Tutor &lt;https://docs.tutor.overhang.io&gt;`_=====================================================================This is a plugin for `Tutor &lt;https://docs.tutor.overhang.io&gt;`_ that integrates the `Course Discovery &lt;https://github.com/edx/course-discovery/&gt;`__ application in an Open edX platform. it is useful for integration with, for example, `Ecommerce &lt;https://github.com/edx/ecommerce&gt;`__ or an external course catalog.Installation------------This plugin requires tutor&gt;=3.6.0. If you have installed tutor from a pre-compiled binary, it already comes bundled with the discovery plugin. Otherwise::    pip install tutor-discoveryThen, to enable this plugin, run::    tutor plugins enable discoveryYou will have to re-generate the environment::    tutor config saveThen, run migrations::    tutor local initThis last step is unnecessary if you run instead ``tutor local launch``.Operations----------Creating a user~~~~~~~~~~~~~~~The discovery user interface will be available at http://discovery.local.overhang.io for a local test instance, and at ``DISCOVERY_HOST`` (by default: http(s)://discovery.&lt;your lms host&gt;) in production. In order to run commands from the UI, a user must be created::    tutor local run discovery ./manage.py createsuperuserThen, you must login with this user at http://discovery.local.overhang.io/admin.Alternatively, you can login with oauth2 using a pre-existing user created on the LMS/CMS by accessing http(s)://discovery.&lt;your lms host&gt;/login. To do so, the proper domain names must exist and point to the production server.Index configuration~~~~~~~~~~~~~~~~~~~Discovery uses separate indices for different models (the names are: course, course_run, person and program by default). And you can overwrite thesesnames by configuring ``DISCOVERY_INDEX_OVERRIDES``::    DISCOVERY_INDEX_OVERRIDES:      course_discovery.apps.course_metadata.search_indexes.documents.course: your-course-index-name      course_discovery.apps.course_metadata.search_indexes.documents.course_run: your-course-run-index-name      course_discovery.apps.course_metadata.search_indexes.documents.person: your-person-index-name      course_discovery.apps.course_metadata.search_indexes.documents.program: your-program-index-nameRe-indexing courses~~~~~~~~~~~~~~~~~~~::    tutor local run discovery ./manage.py refresh_course_metadata --partner_code=openedx    tutor local run discovery ./manage.py update_index --disable-change-limitCaching programs~~~~~~~~~~~~~~~~In order to cache programs in the LMS, you will need to manually create a catalog integration. This step should be performed just once::    tutor local run lms ./manage.py lms create_catalog_integrations --enabled \        --internal_api_url=&quot;&quot; \        --service_username=lms_catalog_service_userThen::    tutor local run lms ./manage.py lms cache_programsThis last step should be performed every time you create new or make changes to existing programs.Debugging---------To debug the course discovery service, you are encouraged to mount the course-discovery repo from the host in the development container:    tutor dev start --mount /path/to/course-discovery/ discoveryYou can then access the development server at http://discovery.local.overhang.io:8381. Feel free to add breakpoints (``import pdb; pdb.set_trace()``) anywhere in your source code to debug your application.Once a local repository is mounted in the image, you will have to install nodejs dependencies and collect static assets::    tutor dev run discovery npm install --development    tutor dev run discovery make static.devTroubleshooting---------------This Tutor plugin is maintained by RÃ©gis Behmo from `Overhang.IO &lt;https://overhang.io&gt;`__. Community support is available from the official `Open edX forum &lt;https://discuss.openedx.org&gt;`__. Do you need help with this plugin? See the `troubleshooting &lt;https://docs.tutor.overhang.io/troubleshooting.html&gt;`__ section from the Tutor documentation.`Max retries exceeded with url`~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~When running in production with HTTPS enabled, you may face this error during the `init` phase of `tutor local launch`:```requests.exceptions.ConnectionError: HTTPSConnectionPool(host='&lt;LMS_HOST&gt;', port=443): Max retries exceeded with url: /api/courses/v1/courses/?page=1&amp;page_size=10&amp;username=discovery```This error may be due to an incorrect DNS resolution of the LMS DNS record. With some cloud providers (for instance: [DigitalOcean](https://digitalocean.com/)) the `/etc/hosts` file on the host automatically contains the following entry::    127.0.1.1 &lt;LMS HOST&gt;This entry may be present if you named your server with the LMS hostname.License-------This work is licensed under the terms of the `GNU Affero General Public License (AGPL) &lt;https://github.com/overhangio/tutor/blob/master/LICENSE.txt&gt;`_.</longdescription>
</pkgmetadata>