<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/firefly-cpp/sport-activities-features/main/.github/logo/sport_activities.png&quot;&gt;&lt;/p&gt;---# sport-activities-features --- A minimalistic toolbox for extracting features from sports activity files written in Python---[![PyPI Version](https://img.shields.io/pypi/v/sport-activities-features.svg)](https://pypi.python.org/pypi/sport-activities-features)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/sport-activities-features.svg)[![Documentation Status](https://readthedocs.org/projects/sport-activities-features/badge/?version=latest)](https://sport-activities-features.readthedocs.io/en/latest/?badge=latest)![PyPI - Downloads](https://img.shields.io/pypi/dm/sport-activities-features.svg)[![Downloads](https://pepy.tech/badge/sport-activities-features)](https://pepy.tech/project/sport-activities-features)![GitHub repo size](https://img.shields.io/github/repo-size/firefly-cpp/sport-activities-features?style=flat-square)[![GitHub license](https://img.shields.io/github/license/firefly-cpp/sport-activities-features.svg)](https://github.com/firefly-cpp/sport-activities-features/blob/master/LICENSE)![GitHub commit activity](https://img.shields.io/github/commit-activity/w/firefly-cpp/sport-activities-features.svg)[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/firefly-cpp/sport-activities-features.svg)](http://isitmaintained.com/project/firefly-cpp/sport-activities-features &quot;Average time to resolve an issue&quot;)[![Percentage of issues still open](http://isitmaintained.com/badge/open/firefly-cpp/sport-activities-features.svg)](http://isitmaintained.com/project/firefly-cpp/sport-activities-features &quot;Percentage of issues still open&quot;)[![All Contributors](https://img.shields.io/badge/all_contributors-6-orange.svg?style=flat-square)](#contributors-)[![Fedora package](https://img.shields.io/fedora/v/python3-sport-activities-features?color=blue&amp;label=Fedora%20Linux&amp;logo=fedora)](https://src.fedoraproject.org/rpms/python-sport-activities-features)[![AUR package](https://img.shields.io/aur/version/python-sport-activities-features?color=blue&amp;label=Arch%20Linux&amp;logo=arch-linux)](https://aur.archlinux.org/packages/python-sport-activities-features)[![DOI](https://img.shields.io/badge/DOI-10.1109/INES52918.2021.9512927-blue)](https://doi.org/10.1109/INES52918.2021.9512927)* **Documentation:** https://sport-activities-features.readthedocs.io/en/latest* **Tested OS:** Windows, Ubuntu, Fedora, Alpine, Arch, macOS. **However, that does not mean it does not work on others.**## Unleashing the Power of Sports Activity Analysis: A Framework Beyond Ordinary Metrics 🚀Prepare to dive into the thrilling world of sports activity analysis, where hidden geographic, topological, and personalized data await their grand unveiling. In this captivating journey, we embark on a quest to extract the deepest insights from the wealth of information generated by monitoring sports activities. Brace yourself for a framework that transcends the limitations of conventional analysis techniques. 💪🔍Traditional approaches often rely on integral metrics like total duration, total distance, and average heart rate, but they fall victim to the dreaded &quot;overall metrics problem.&quot; These metrics fail to capture the essence of sports activities, omitting crucial components and leading to potentially flawed and misleading conclusions. They lack the ability to recognize distinct stages and phases of the activity, such as the invigorating warm-up, the endurance-testing main event, and the heart-pounding intervals. ⏱️🚴♀️📈Fortunately, our sport-activities-framework rises above these limitations, revealing a comprehensive panorama of your sports activity files. This framework combines the power of identification and extraction methods to unlock a treasure trove of valuable data. Picture this :camera: : effortlessly identifying the number of hills, extracting average altitudes of these remarkable formations, measuring the total distance conquered on those inclines, and even deriving climbing ratios for a true measure of accomplishment (total distance of hills vs. total distance). But that's just the tip of the iceberg! The framework seamlessly integrates a multitude of extensions, including historical weather parsing, statistical evaluations, and ex-post visualizations that bring your data to life. 🗻📊🌦️For those seeking to venture further, we invite you to explore the realms of scientific papers on data mining that delve into these captivating topics. Discover how our framework complements the world of generating and predicting automated sport training sessions, creating a harmonious synergy between theory and practice. 📚🔬💡## Detailed insights 🔍Prepare to be astounded by the capabilities of the sport-activities-features framework. It effortlessly handles TCX &amp; GPX activity files and harnesses the power of the [Overpass API](https://wiki.openstreetmap.org/wiki/Overpass_API) nodes. Presenting the range of functions at your disposal:- **Unleash the integral metrics**: From total distance to total duration and even calorie count, witness the extraction of these vital statistics with a single glance. 📏⏰🔥 ([See example](examples/integral_metrics_extraction.py))- **Conquer the peaks**: Ascend to new heights by extracting topographic features like the number of hills, their average altitudes, the total distance covered on these majestic slopes, and the thrilling climbing ratio. Prepare for a breathtaking adventure! ⛰️📈🧗♂️ ([See example](examples/hill_data_extraction.py))- **Embark on a visual journey**: Immerse yourself in the beauty of your accomplishments as you plot the identified hills on a mesmerizing map. Witness the landscape come alive before your eyes. 🗺️🏞️🖌️ ([See example](examples/draw_map_with_identified_hills.py))- **Embrace the rhythm of intervals**: Explore the intervals within your sports activities, uncovering their numbers, durations, distances, and heart rates. Unveil the heartbeat of your performance! 🏃♀️📊💓 ([See example](examples/draw_map_with_identified_intervals.py))- **Calculate the training loads**: Dive deep into the intricate world of training loads and discover the Banister TRIMP and Lucia TRIMP methods. Gain invaluable insights into optimizing your training regimen. 📈⚖️🏋️♂️ ([See example](examples/calculate_training_load.py))- **Weather the storm**: Unlock the power of historical weather data from external services, adding a fascinating layer of context to your sports activities. ☀️🌧️⛈️- **Unveil the secrets within coordinates**: Explore the integral metrics of your activities within specific geographical areas, uncovering valuable data on distance, heart rate, and speed. Peer into the depths of your performance! 🌍📍📉 ([See example](examples/extract_data_inside_area.py))- **Embrace randomness**: Extract activities from CSV files and indulge in the excitement of randomly selecting a specific number of activities. Embrace the element of surprise! 🎲📂🎉 ([See example](examples/extract_random_activities_from_csv.py))- **Conquer the dead ends**: Unravel the mysteries of your sports activities by identifying the dead ends. Prepare to navigate the uncharted territories of your performance! 🚧🗺️🔍 ([See example](examples/dead_end_extraction.py))- **Unlock the format**: Seamlessly convert TCX files to GPX, opening doors to even more possibilities. Adapt and conquer! ⚙️🔄✨ ([See example](examples/convert_tcx_to_gpx.py))And that's just the beginning! The sport-activities-framework holds countless other features, awaiting your exploration. Brace yourself for an exhilarating journey of discovery, where the ordinary becomes extraordinary, and your sports activities come alive like never before. 🌟🔥🏃♂️The framework comes with two (testing) [benchmark datasets](https://github.com/firefly-cpp/sports-activity-dataset-collections), which are freely available to download from: [DATASET1](http://iztok-jr-fister.eu/static/publications/Sport5.zip), [DATASET2](http://iztok-jr-fister.eu/static/css/datasets/Sport.zip).## Installation### pipInstall sport-activities-features with pip:```shpip install sport-activities-features```### Alpine LinuxTo install sport-activities-features on Alpine, use:```sh$ apk add py3-sport-activities-features```### Fedora LinuxTo install sport-activities-features on Fedora, use:```sh$ dnf install python3-sport-activities-features```### Arch LinuxTo install sport-activities-features on Arch Linux, please use an [AUR helper](https://wiki.archlinux.org/title/AUR_helpers):```sh$ yay -Syyu python-sport-activities-features```## APIThere is a simple API for remote work with the sport-activities-features package available [here](https://github.com/alenrajsp/sport-activities-features-api).## Historical weather dataWeather data parsed is collected from the [Visual Crossing Weather API](https://www.visualcrossing.com/).Please note that this is an external unaffiliated service, and users must register to use the API.The service has a free tier (1000 Weather reports/day) but is otherwise operating on a pay-as-you-go model.For pricing and terms of use, please read the [official documentation](https://www.visualcrossing.com/weather-data-editions) of the API provider.## Overpass API &amp; Open Elevation API integrationWithout performing activities, we can use the [OpenStreetMap](https://www.openstreetmap.org/) for the identification of hills,total ascent, and descent. This is done using the [Overpass API](https://wiki.openstreetmap.org/wiki/Overpass_API)which is a read-only API that allows querying of OSM map data. In addition to that altitude, data is retrieved by using the[Open-Elevation API](https://open-elevation.com/) which is an open-source and free alternative to the Google Elevation API.Both of the solutions can be used by using free publicly acessible APIs ([Overpass](https://wiki.openstreetmap.org/wiki/Overpass_API), [Open-Elevation](https://open-elevation.com/#public-api)) or can be self hosted on a server or as a Docker container ([Overpass](https://wiki.openstreetmap.org/wiki/Overpass_API/Installation), [Open-Elevation](https://github.com/Jorl17/open-elevation/blob/master/docs/host-your-own.md)).## CODE EXAMPLES:### Reading files#### (*.TCX)```pythonfrom sport_activities_features.tcx_manipulation import TCXFile# Class for reading TCX filestcx_file=TCXFile()data = tcx_file.read_one_file(&quot;path_to_the_file&quot;) # Represents data as dictionary of lists# Alternative choicedata = tcx_file.read_one_file(&quot;path_to_the_file&quot;, numpy_array= True) # Represents data as dictionary of numpy.arrays```#### (*.GPX)```pythonfrom sport_activities_features.gpx_manipulation import GPXFile# Class for reading GPX filesgpx_file=GPXFile()# Read the file and generate a dictionary with data = gpx_file.read_one_file(&quot;path_to_the_file&quot;) # Represents data as dictionary of lists# Alternative choicedata = gpx_file.read_one_file(&quot;path_to_the_file&quot;, numpy_array= True) # Represents data as dictionary of numpy.arrays```### Extraction of topographic features```pythonfrom sport_activities_features.hill_identification import HillIdentificationfrom sport_activities_features.tcx_manipulation import TCXFilefrom sport_activities_features.topographic_features import TopographicFeaturesfrom sport_activities_features.plot_data import PlotData# Read TCX filetcx_file = TCXFile()activity = tcx_file.read_one_file(&quot;path_to_the_file&quot;)# Detect hills in dataHill = HillIdentification(activity['altitudes'], 30)Hill.identify_hills()all_hills = Hill.return_hills()# Extract features from dataTop = TopographicFeatures(all_hills)num_hills = Top.num_of_hills()avg_altitude = Top.avg_altitude_of_hills(activity['altitudes'])avg_ascent = Top.avg_ascent_of_hills(activity['altitudes'])distance_hills = Top.distance_of_hills(activity['positions'])hills_share = Top.share_of_hills(distance_hills, activity['total_distance'])```### Extraction of intervals```pythonimport syssys.path.append('../')from sport_activities_features.interval_identification import IntervalIdentificationByPower, IntervalIdentificationByHeartratefrom sport_activities_features.tcx_manipulation import TCXFile# Reading the TCX filetcx_file = TCXFile()activity = tcx_file.read_one_file(&quot;path_to_the_data&quot;)# Identifying the intervals in the activity by powerIntervals = IntervalIdentificationByPower(activity[&quot;distances&quot;], activity[&quot;timestamps&quot;], activity[&quot;altitudes&quot;], 70)Intervals.identify_intervals()all_intervals = Intervals.return_intervals()# Identifying the intervals in the activity by heart rateIntervals = IntervalIdentificationByHeartrate(activity[&quot;timestamps&quot;], activity[&quot;altitudes&quot;], activity[&quot;heartrates&quot;])Intervals.identify_intervals()all_intervals = Intervals.return_intervals()```### Parsing of Historical weather data from an external service```pythonfrom sport_activities_features import WeatherIdentificationfrom sport_activities_features import TCXFile# Read TCX filetcx_file = TCXFile()tcx_data = tcx_file.read_one_file(&quot;path_to_file&quot;)# Configure visual crossing api keyvisual_crossing_api_key = &quot;weather_api_key&quot; # https://www.visualcrossing.com/weather-api# Explanation of elements - https://www.visualcrossing.com/resources/documentation/weather-data/weather-data-documentation/weather = WeatherIdentification(tcx_data['positions'], tcx_data['timestamps'], visual_crossing_api_key)weatherlist = weather.get_weather(time_delta=30)tcx_weather = weather.get_average_weather_data(timestamps=tcx_data['timestamps'],weather=weatherlist)# Add weather to TCX datatcx_data.update({'weather':tcx_weather})```The weather list is of the following type:```json     [        {            &quot;temperature&quot;: 14.3,            &quot;maximum_temperature&quot;: 14.3,            &quot;minimum_temperature&quot;: 14.3,            &quot;wind_chill&quot;: null,            &quot;heat_index&quot;: null,            &quot;solar_radiation&quot;: null,            &quot;precipitation&quot;: 0.0,            &quot;sea_level_pressure&quot;: 1021.6,            &quot;snow_depth&quot;: null,            &quot;wind_speed&quot;: 6.9,            &quot;wind_direction&quot;: 129.0,            &quot;wind_gust&quot;: null,            &quot;visibility&quot;: 40.0,            &quot;cloud_cover&quot;: 54.3,            &quot;relative_humidity&quot;: 47.6,            &quot;dew_point&quot;: 3.3,            &quot;weather_type&quot;: &quot;&quot;,            &quot;conditions&quot;: &quot;Partially cloudy&quot;,            &quot;date&quot;: &quot;2016-04-02T17:26:09+00:00&quot;,            &quot;location&quot;: [                46.079871179535985,                14.738618675619364            ],            &quot;index&quot;: 0        }, ...    ]```### Extraction of integral metrics```pythonimport syssys.path.append('../')from sport_activities_features.tcx_manipulation import TCXFile# Read TCX filetcx_file = TCXFile()integral_metrics = tcx_file.extract_integral_metrics(&quot;path_to_the_file&quot;)print(integral_metrics)```### Weather data extraction```pythonfrom sport_activities_features.weather_identification import WeatherIdentificationfrom sport_activities_features.tcx_manipulation import TCXFile#read TCX filetcx_file = TCXFile()tcx_data = tcx_file.read_one_file(&quot;path_to_the_file&quot;)#configure visual crossing api keyvisual_crossing_api_key = &quot;API_KEY&quot; # https://www.visualcrossing.com/weather-api#return weather objectsweather = WeatherIdentification(tcx_data['positions'], tcx_data['timestamps'], visual_crossing_api_key)weatherlist = weather.get_weather()```### Using Overpass queried Open Street Map nodes```pythonimport overpyfrom sport_activities_features.overpy_node_manipulation import OverpyNodesReader# External service Overpass API (https://wiki.openstreetmap.org/wiki/Overpass_API) (can be self-hosted)overpass_api = &quot;https://lz4.overpass-api.de/api/interpreter&quot;# External service Open Elevation API (https://api.open-elevation.com/api/v1/lookup) (can be self-hosted)open_elevation_api = &quot;https://api.open-elevation.com/api/v1/lookup&quot;# OSM Way (https://wiki.openstreetmap.org/wiki/Way)open_street_map_way = 164477980overpass_api = overpy.Overpass(url=overpass_api)# Get an example Overpass wayq = f&quot;&quot;&quot;(way({open_street_map_way});&lt;;);out geom;&quot;&quot;&quot;query = overpass_api.query(q)# Get nodes of an Overpass waynodes = query.ways[0].get_nodes(resolve_missing=True)# Extract basic data from nodes (you can, later on, use Hill Identification and Hill Data Extraction on them)overpy_reader = OverpyNodesReader(open_elevation_api=open_elevation_api)# Returns {#         'positions': positions, 'altitudes': altitudes, 'distances': distances, 'total_distance': total_distance#         }data = overpy_reader.read_nodes(nodes)```### Extraction of data inside the area```pythonimport numpy as npimport syssys.path.append('../')from sport_activities_features.area_identification import AreaIdentificationfrom sport_activities_features.tcx_manipulation import TCXFile# Reading the TCX file.tcx_file = TCXFile()activity = tcx_file.read_one_file('path_to_the_data')# Converting the read data to arrays.positions = np.array([*activity['positions']])distances = np.array([*activity['distances']])timestamps = np.array([*activity['timestamps']])heartrates = np.array([*activity['heartrates']])# Area coordinates should be given in clockwise orientation in the form of 3D array (number_of_hulls, hull_coordinates, 2).# Holes in area are permitted.area_coordinates = np.array([[[10, 10], [10, 50], [50, 50], [50, 10]],                             [[19, 19], [19, 21], [21, 21], [21, 19]]])# Extracting the data inside the given area.area = AreaIdentification(positions, distances, timestamps, heartrates, area_coordinates)area.identify_points_in_area()area_data = area.extract_data_in_area()```### Identify interruptions```pythonfrom sport_activities_features.interruptions.interruption_processor import InterruptionProcessorfrom sport_activities_features.tcx_manipulation import TCXFile&quot;&quot;&quot;Identify interruption events from a TCX or GPX file.&quot;&quot;&quot;# read TCX file (also works with GPX files)tcx_file = TCXFile()tcx_data = tcx_file.read_one_file(&quot;path_to_the_data&quot;)&quot;&quot;&quot;Time interval = time before and after the start of an eventMin speed = Threshold speed to trigger an event/interruption (trigger when under min_speed)overpass_api_url = Set to something self-hosted, or use a public instance from https://wiki.openstreetmap.org/wiki/Overpass_API&quot;&quot;&quot;interruptionProcessor = InterruptionProcessor(time_interval=60, min_speed=2,                                              overpass_api_url=&quot;url_to_overpass_api&quot;)&quot;&quot;&quot;If classify is set to true, also discover if interruptions are close to intersections. Returns a list of [ExerciseEvent]&quot;&quot;&quot;events = interruptionProcessor.events(tcx_data, True)```### Overpy (Overpass API) node manipulationGenerate TCXFile parsed like data object from overpy.Node objects```pythonimport overpyfrom sport_activities_features.overpy_node_manipulation import OverpyNodesReader# External service Overpass API (https://wiki.openstreetmap.org/wiki/Overpass_API) (can be self-hosted)overpass_api = &quot;https://lz4.overpass-api.de/api/interpreter&quot;# External service Open Elevation API (https://api.open-elevation.com/api/v1/lookup) (can be self-hosted)open_elevation_api = &quot;https://api.open-elevation.com/api/v1/lookup&quot;# OSM Way (https://wiki.openstreetmap.org/wiki/Way)open_street_map_way = 164477980overpass_api = overpy.Overpass(url=overpass_api)# Get an example Overpass wayq = f&quot;&quot;&quot;(way({open_street_map_way});&lt;;);out geom;&quot;&quot;&quot;query = overpass_api.query(q)# Get nodes of an Overpass waynodes = query.ways[0].get_nodes(resolve_missing=True)# Extract basic data from nodes (you can, later on, use Hill Identification and Hill Data Extraction on them)overpy_reader = OverpyNodesReader(open_elevation_api=open_elevation_api)# Returns {#         'positions': positions, 'altitudes': altitudes, 'distances': distances, 'total_distance': total_distance#         }data = overpy_reader.read_nodes(nodes)```### Missing elevation data extraction```pythonfrom sport_activities_features import ElevationIdentificationfrom sport_activities_features import TCXFiletcx_file = TCXFile()tcx_data = tcx_file.read_one_file('path_to_file')elevations = ElevationIdentification(tcx_data['positions'])&quot;&quot;&quot;Adds tcx_data['elevation'] = eg. [124, 21, 412] for each position&quot;&quot;&quot;tcx_data.update({'elevations':elevations})```### Example of a visualization of the area detection![Area Figure](https://i.imgur.com/Iz8Ga3B.png)### Example of visualization of dead-end identification![Dead End Figure](https://imgur.com/LgZzCFS.png)## LicenseThis package is distributed under the MIT License. This license can be found online at &lt;http://www.opensource.org/licenses/MIT&gt;.## DisclaimerThis framework is provided as-is, and there are no guarantees that it fits your purposes or that it is bug-free. Use it at your own risk!## Cite usI. Jr. Fister, L. Lukač, A. Rajšp, I. Fister, L. Pečnik and D. Fister, &quot;[A minimalistic toolbox for extracting features from sport activity files](http://iztok-jr-fister.eu/static/publications/294.pdf)&quot;, 2021 IEEE 25th International Conference on Intelligent Engineering Systems (INES), 2021, pp. 121-126, doi: [10.1109/INES52918.2021.9512927](http://dx.doi.org/10.1109/INES52918.2021.9512927).## Further read[1] [Awesome Computational Intelligence in Sports](https://github.com/firefly-cpp/awesome-computational-intelligence-in-sports)## Contributors ✨Thanks go to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;&lt;!-- prettier-ignore-start --&gt;&lt;!-- markdownlint-disable --&gt;&lt;table&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alenrajsp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/27721714?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;alenrajsp&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;alenrajsp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=alenrajsp&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=alenrajsp&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;#example-alenrajsp&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=alenrajsp&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;#ideas-alenrajsp&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3Aalenrajsp&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;#maintenance-alenrajsp&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.iztok-jr-fister.eu/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1633361?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Iztok Fister Jr.&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Iztok Fister Jr.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=firefly-cpp&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3Afirefly-cpp&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=firefly-cpp&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;#example-firefly-cpp&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=firefly-cpp&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;#ideas-firefly-cpp&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;#mentoring-firefly-cpp&quot; title=&quot;Mentoring&quot;&gt;🧑🏫&lt;/a&gt; &lt;a href=&quot;#platform-firefly-cpp&quot; title=&quot;Packaging/porting to new platform&quot;&gt;📦&lt;/a&gt; &lt;a href=&quot;#maintenance-firefly-cpp&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt; &lt;a href=&quot;#data-firefly-cpp&quot; title=&quot;Data&quot;&gt;🔣&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/luckyLukac&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/73126820?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;luckyLukac&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;luckyLukac&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-luckyLukac&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=luckyLukac&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3AluckyLukac&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=luckyLukac&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;#example-luckyLukac&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rhododendrom&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3198785?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;rhododendrom&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;rhododendrom&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=rhododendrom&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;#design-rhododendrom&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=rhododendrom&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;#ideas-rhododendrom&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lukapecnik&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23029992?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Luka Pečnik&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luka Pečnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=lukapecnik&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=lukapecnik&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=lukapecnik&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3Alukapecnik&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/spelap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19300429?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;spelap&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;spelap&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=spelap&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://carlosal1015.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/21283014?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oromion&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oromion&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-carlosal1015&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/KoprivcLuka&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45632449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Luka Koprivc&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luka Koprivc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3AKoprivcLuka&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/garyjellyarms&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/79595804?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nejc Graj&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nejc Graj&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3Agaryjellyarms&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Mtvrt123&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50879568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;MlinaricNejc&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MlinaricNejc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3AMtvrt123&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/KukovecRok&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33880044?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tatookie&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tatookie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=KukovecRok&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/issues?q=author%3AKukovecRok&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=KukovecRok&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;#example-KukovecRok&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt; &lt;a href=&quot;#maintenance-KukovecRok&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/zala-lahovnik&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/105444201?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Zala Lahovnik&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Zala Lahovnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=zala-lahovnik&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/firefly-cpp/sport-activities-features/commits?author=zala-lahovnik&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;!-- markdownlint-restore --&gt;&lt;!-- prettier-ignore-end --&gt;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind are welcome!</longdescription>
</pkgmetadata>