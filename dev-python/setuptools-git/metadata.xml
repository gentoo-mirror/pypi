<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>About-----This is a plugin for setuptools that enables git integration. Onceinstalled, Setuptools can be told to include in a package distributionall the files tracked by git. This is an alternative to explicitinclusion specifications with ``MANIFEST.in``.A package distribution here refers to a package that you create usingsetup.py, for example::  $&gt; python setup.py sdist  $&gt; python setup.py bdist_rpm  $&gt; python setup.py bdist_eggThis package was formerly known as gitlsfiles. The name change is theresult of an effort by the setuptools plugin developers to provide auniform naming convention.Installation------------With easy_install::  $&gt; easy_install setuptools_gitAlternative manual installation::  $&gt; tar -zxvf setuptools_git-X.Y.Z.tar.gz  $&gt; cd setuptools_git-X.Y.Z  $&gt; python setup.py installWhere X.Y.Z is a version number.Usage-----To activate this plugin, you must first package your python modulewith ``setup.py`` and use setuptools. The former is well documented inthe `distutils manual &lt;http://docs.python.org/dist/dist.html&gt;`_.To use setuptools instead of distutils, just edit ``setup.py`` andchange:.. code-block:: python  from distutils.core import setupto:.. code-block:: python  from setuptools import setup, find_packagesWhen Setuptools builds a source package, it always includes all filestracked by your revision control system, if it knows how to learn whatthose files are.When Setuptools builds a binary package, you can ask it to include allfiles tracked by your revision control system, by adding these argumentto your invocation of `setup()`:.. code-block:: python  setup(...,        packages=find_packages(),        include_package_data=True,        ...)which will detect that a directory is a package if it contains a``__init__.py`` file.  Alternatively, you can do without ``__init__.py``files and tell Setuptools explicitly which packages to process:.. code-block:: python  setup(...,        packages=[&quot;a_package&quot;, &quot;another_one&quot;],        include_package_data=True,        ...)This plugin lets setuptools know what files are tracked by your gitrevision control tool.  Setuptools ships with support for cvs andsubversion.  Other plugins like this one are available for bzr, darcs,monotone, mercurial, and many others.It might happen that you track files with your revision control systemthat you don't want to include in your packages.  In that case, youcan prevent setuptools from packaging those files with a directive inyour ``MANIFEST.in``, for example::  exclude .gitignore  recursive-exclude images *.xcf *.blendIn this example, we prevent setuptools from packaging ``.gitignore`` andthe Gimp and Blender source files found under the ``images`` directory.Files to exclude from the package can also be listed in the `setup()`directive.  To do the same as the MANIFEST.in above, do:.. code-block:: python  setup(...,        exclude_package_data={'': ['.gitignore'],                              'images': ['*.xcf', '*.blend']},        ...)Here is another example:.. code-block:: python  setup(...,        exclude_package_data={'': ['.gitignore', 'artwork/*'],                              'model': ['config.py']},        ...)Gotchas-------Be aware that for this module to work properly, git and the gitmeta-data must be available. That means that if someone tries to makea package distribution out of a non-git distribution of yours, say atarball, setuptools will lack the information necessary to know whichfiles to include. A similar problem will happen if someone clonesyour git repository but does not install this plugin.Resolving those problems is out of the scope of this plugin; youshould add relevant warnings to your documentation if those situationsare a concern to you.You can make sure that anyone who clones your git repository and usesyour setup.py file has this plugin by adding a `setup_requires`argument:.. code-block:: python  setup(...,        setup_requires=[ &quot;setuptools_git &gt;= 0.3&quot;, ],        ...)Changes-------1.2;  2017-02-17~~~~~~~~~~~~~~~~  - Add ability to get version from git tags (https://github.com/msabramo/setuptools-git/pull/9)  - Return early if a directory isn't managed by git (https://github.com/msabramo/setuptools-git/pull/10)  - Support universal wheels (https://github.com/msabramo/setuptools-git/pull/11)  - Optimize directory scanning to skip ignored directories (https://github.com/msabramo/setuptools-git/pull/12)References----------* `How to distribute Python modules with Distutils  &lt;http://docs.python.org/dist/dist.html&gt;`_* `Setuptools complete manual  &lt;http://peak.telecommunity.com/DevCenter/setuptools&gt;`_Thanks to `Zooko O'Whielacronx`_ for many improvements to the documentation... _Zooko O'Whielacronx: https://bitbucket.org/zooko</longdescription>
</pkgmetadata>