# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Forecasting timeseries with PyTorch - dataloaders, normalizers, metrics and models"

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all-extras dev docs github-actions graph mqf2 tuning"
DEPENDENCIES="<=dev-python/numpy-3.0.0[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/lightning[${PYTHON_USEDEP}]
	<dev-python/scipy-2.0[${PYTHON_USEDEP}]
	<dev-python/pandas-3.0.0[${PYTHON_USEDEP}]
	<dev-python/scikit-learn-2.0[${PYTHON_USEDEP}]
	all-extras? ( dev-python/cpflows[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/optuna-integration[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/pytorch_optimizer[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	tuning? ( dev-python/optuna[${PYTHON_USEDEP}] )
	tuning? ( dev-python/optuna-integration[${PYTHON_USEDEP}] )
	tuning? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	mqf2? ( dev-python/cpflows[${PYTHON_USEDEP}] )
	graph? ( dev-python/networkx[${PYTHON_USEDEP}] )
	dev? ( dev-python/pydocstyle[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/invoke[${PYTHON_USEDEP}] )
	dev? ( dev-python/mypy[${PYTHON_USEDEP}] )
	dev? ( dev-python/pylint[${PYTHON_USEDEP}] )
	dev? ( dev-python/ruff[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-sugar[${PYTHON_USEDEP}] )
	dev? ( dev-python/coverage[${PYTHON_USEDEP}] )
	dev? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	dev? ( dev-python/ipykernel[${PYTHON_USEDEP}] )
	dev? ( dev-python/nbconvert[${PYTHON_USEDEP}] )
	dev? ( dev-python/black[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	dev? ( dev-python/pydata-sphinx-theme[${PYTHON_USEDEP}] )
	dev? ( dev-python/nbsphinx[${PYTHON_USEDEP}] )
	dev? ( dev-python/recommonmark[${PYTHON_USEDEP}] )
	dev? ( <dev-python/ipywidgets-9.0.0[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-dotenv[${PYTHON_USEDEP}] )
	dev? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	dev? ( dev-python/pandoc[${PYTHON_USEDEP}] )
	docs? ( >dev-python/sphinx-3.2[${PYTHON_USEDEP}] )
	docs? ( dev-python/pydata-sphinx-theme[${PYTHON_USEDEP}] )
	docs? ( dev-python/nbsphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/pandoc[${PYTHON_USEDEP}] )
	docs? ( dev-python/nbconvert[${PYTHON_USEDEP}] )
	docs? ( dev-python/recommonmark[${PYTHON_USEDEP}] )
	docs? ( dev-python/docutils[${PYTHON_USEDEP}] )
	github-actions? ( dev-python/pytest-github-actions-annotate-failures[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
