<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python SDK for Media Cloud AI workersBased on [mcai_worker_sdk](https://gitlab.com/media-cloud-ai/sdks/rs_mcai_worker_sdk), this SDK uses the [PyO3 crate](https://github.com/PyO3/pyo3) to export a compiled module compatible with CPython ABI.## DocumentationPlease, check the docs [here](https://media-cloud-ai.gitlab.io/sdks/py_mcai_worker_sdk/mcai_worker_sdk/) and [here](https://media-cloud-ai.gitlab.io/sdks/py_mcai_worker_sdk/mcai_worker_sdk_media/) for the SDK with the media feature enabled.## BuildBefore using the Python module you should build it as a CPython library. This will require a virtualenv (where the module will be installed) and [maturin](https://github.com/PyO3/maturin) to compile the module.```bashvirtualenv venv # Create your environmentsource venv/bin/activate # Launch it```You can then either build the module in development mode (this will build and install the module in your virtualenv):```bashmaturin develop --features extension-module # Build and install the module```Or build the wheel file and install it manually via `pip`:```bashmaturin build --features extension-module # Build the wheel file to install the modulepip install path/to/generated/wheel/file```You will now be able to import the module in your Python's scripts by doing:```pythonimport mcai_worker_sdk as mcai```Check out [maturin's docs](https://www.maturin.rs/distribution.html#build-wheels) for more information on building the module!### Supported versionWe intempt to support as many distribution and architecture as we can, however if `pip` doesn't find any compatible version for your installation it will download the source and try to compile them directly.This operation supposes that you have at least __Rust 1.62__.We currently support the following version of Python implementations:- [x] CPython 3.8 : manylinux- [x] CPython 3.9 : manylinux, macosx x86_64- [x] CPython 3.10 : manylinux, macosx x86_64, macosx arm64- [x] CPython 3.11 : manylinux, macosx arm54- [x] Pypy 3.8 : manylinux- [x] Pypy 3.9 : manylinuxAnd the following core architectures:- [x] x86_64## TestTo run tests you must have `json-strong-typing` installed:```bashpip install json-strong-typing```Then launch tests basically:```bashcargo testcargo test --features media```### Running examples#### Build the Python moduleIn your virtual environment:```bashmaturin develop```#### Simple worker```bashRUST_LOG=debug \SOURCE_ORDERS=&quot;examples/message.json&quot; \PYTHON_WORKER_FILENAME=&quot;worker.py&quot; \SOURCE_PATH=&quot;README.md&quot; \DESTINATION_PATH=&quot;README.md.out&quot; \python worker.py```#### Media workerFirst set the media filename:```bashexport SOURCE_PATH=&quot;/folder/filename.ext&quot;```Then run the SDK with these parameters:```bashRUST_LOG=debug \SOURCE_ORDERS=&quot;examples/message.json&quot; \PYTHON_WORKER_FILENAME=&quot;media_worker.py&quot; \DESTINATION_PATH=&quot;results.json&quot; \cargo run --features media```</longdescription>
</pkgmetadata>