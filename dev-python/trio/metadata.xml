<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://raw.githubusercontent.com/python-trio/trio/9b0bec646a31e0d0f67b8b6ecc6939726faf3e17/logo/logo-with-background.svg   :width: 200px   :align: rightThe Trio project's goal is to produce a production-quality, `permissivelylicensed &lt;https://github.com/python-trio/trio/blob/master/LICENSE&gt;`__,async/await-native I/O library for Python. Like all async libraries,its main purpose is to help you write programs that do **multiplethings at the same time** with **parallelized I/O**. A web spider thatwants to fetch lots of pages in parallel, a web server that needs tojuggle lots of downloads and websocket connections at the same time, aprocess supervisor monitoring multiple subprocesses... that sort ofthing. Compared to other libraries, Trio attempts to distinguishitself with an obsessive focus on **usability** and**correctness**. Concurrency is complicated; we try to make it *easy*to get things *right*.Trio was built from the ground up to take advantage of the `latestPython features &lt;https://www.python.org/dev/peps/pep-0492/&gt;`__, anddraws inspiration from `many sources&lt;https://github.com/python-trio/trio/wiki/Reading-list&gt;`__, inparticular Dave Beazley's `Curio &lt;https://curio.readthedocs.io/&gt;`__.The resulting design is radically simpler than older competitors like`asyncio &lt;https://docs.python.org/3/library/asyncio.html&gt;`__ and`Twisted &lt;https://twistedmatrix.com/&gt;`__, yet just as capable. Trio isthe Python I/O library I always wanted; I find it makes buildingI/O-oriented programs easier, less error-prone, and just plain morefun. `Perhaps you'll find the same&lt;https://github.com/python-trio/trio/wiki/Testimonials&gt;`__.This project is young and still somewhat experimental: the overalldesign is solid and the existing features are fully tested anddocumented, but you may encounter missing functionality or roughedges. We *do* encourage you do use it, but you should `read andsubscribe to issue #1&lt;https://github.com/python-trio/trio/issues/1&gt;`__ to get warning and achance to give feedback about any compatibility-breaking changes.Vital statistics:* Supported environments: Linux, macOS, or Windows running some kind of Python  3.8-or-better (either CPython or PyPy3 is fine). \*BSD and illumos likely  work too, but are not tested.* Install: ``python3 -m pip install -U trio`` (or on Windows, maybe  ``py -3 -m pip install -U trio``). No compiler needed.* Tutorial and reference manual: https://trio.readthedocs.io* Changelog: https://trio.readthedocs.io/en/latest/history.html* Bug tracker and source code: https://github.com/python-trio/trio* Real-time chat: https://gitter.im/python-trio/general* Discussion forum: https://trio.discourse.group* License: MIT or Apache 2, your choice* Contributor guide: https://trio.readthedocs.io/en/latest/contributing.html* Code of conduct: Contributors are requested to follow our `code of  conduct  &lt;https://trio.readthedocs.io/en/latest/code-of-conduct.html&gt;`_  in all project spaces.</longdescription>
</pkgmetadata>