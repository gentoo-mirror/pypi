<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI](https://img.shields.io/pypi/v/naff)](https://pypi.org/project/naff/)[![Downloads](https://static.pepy.tech/personalized-badge/dis-snek?period=total&amp;units=abbreviation&amp;left_color=grey&amp;right_color=green&amp;left_text=pip%20installs)](https://pepy.tech/project/dis-snek)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![pre-commit](https://img.shields.io/github/actions/workflow/status/NAFTeam/NAFF/precommit.yml?branch=master&amp;label=pre-commit&amp;logo=github)](https://github.com/NAFTeam/NAFF/actions/workflows/precommit.yml)[![CodeQL](https://img.shields.io/github/actions/workflow/status/NAFTeam/NAFF/codeql-analysis.yml?branch=master&amp;label=CodeQL&amp;logo=Github)](https://github.com/NAFTeam/NAFF/actions/workflows/codeql-analysis.yml)[![Discord](https://img.shields.io/discord/870046872864165888?color=%235865F2&amp;label=Server&amp;logo=discord&amp;logoColor=%235865F2)](https://discord.gg/hpfNhH8BsY)[![Documentation Status](https://readthedocs.org/projects/naff-docs/badge/?version=latest)](https://naff-docs.readthedocs.io/en/latest/?version=latest)# What is this?This is `NAFF`, a python API wrapper for Discord.NAFF is intended to be fast, easy to use, and easily modified to suit your needs.### Features:- ✅ 100% coverage of the application commands API- ✅ Dynamic cache with TTL support- ✅ Modern and Pythonic API- ✅ Proper rate-limit handling- ✅ Feature parity with most other Discord API wrappers## Is this just another `Discord.py` fork?While this library shares features and some stylistic choices with `discord.py`, it is completely separate from them. We think `discord.py` is a fantastic library, but we disagree with the direction and design decisions that were made by it.## How do I use this?Here is a basic example:```pythonfrom naff import Client, Button, ButtonStyles, CommandTypes, context_menu, prefixed_command, listenbot = Client(sync_interactions=True)@listen()async def on_startup():    print(&quot;Ready&quot;)    print(f&quot;This bot is owned by {bot.owner}&quot;)@prefixed_command()async def test_button(ctx):    await ctx.send(&quot;Blurple button example!&quot;, components=Button(ButtonStyles.BLURPLE, &quot;Click me&quot;))@context_menu(name=&quot;User menu&quot;, context_type=CommandTypes.USER, scopes=[931832853770149918])async def user_context(ctx):    await ctx.send(&quot;Context menu example!&quot;, ephemeral=True)bot.start(&quot;TOKEN&quot;)```For more examples check out [our examples repo](https://github.com/NAFTeam/examples) or the [docs](https://naff.info). You also can [explore projects with the `NAFF` topic](https://github.com/topics/naff) or older [`dis-snek` topic](https://github.com/topics/dis-snek).If you get stuck join our [Discord server](https://discord.gg/hpfNhH8BsY).## &quot;Can I contribute to this project?&quot;Of course, we welcome all contributions to this library. Just ensure you follow our [requirements](/CONTRIBUTING.md).If youre stuck for things to contribute, check out our [GitHub Projects](https://github.com/orgs/NAFTeam/projects/1) for inspiration.## Links:- Support Server: https://discord.gg/hpfNhH8BsY- Documentation:  https://naff-docs.readthedocs.io/en/latest/</longdescription>
</pkgmetadata>