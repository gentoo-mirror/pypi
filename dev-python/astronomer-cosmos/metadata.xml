<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. |fury| image:: https://badge.fury.io/py/astronomer-cosmos.svg    :target: https://badge.fury.io/py/astronomer-cosmos.. |ossrank| image:: https://img.shields.io/endpoint?url=https://ossrank.com/shield/2121    :target: https://ossrank.com/p/2121-astronomer-cosmos.. |downloads| image:: https://img.shields.io/pypi/dm/astronomer-cosmos.svg    :target: https://img.shields.io/pypi/dm/astronomer-cosmos.. |pre-commit| image:: https://results.pre-commit.ci/badge/github/astronomer/astronomer-cosmos/main.svg   :target: https://results.pre-commit.ci/latest/github/astronomer/astronomer-cosmos/main   :alt: pre-commit.ci status.. image:: https://raw.githubusercontent.com/astronomer/astronomer-cosmos/main/docs/_static/cosmos-logo.svg===========================================================|fury| |ossrank| |downloads| |pre-commit|Run your dbt Core projects as `Apache Airflow &lt;https://airflow.apache.org/&gt;`_ DAGs and Task Groups with a few lines of code. Benefits include:- Run dbt projects against Airflow connections instead of dbt profiles- Native support for installing and running dbt in a virtual environment to avoid dependency conflicts with Airflow- Run tests immediately after a model is done to catch issues early- Utilize Airflow's data-aware scheduling to run models immediately after upstream ingestion- Turn each dbt model into a task/task group complete with retries, alerting, etc.Quickstart__________Check out the Quickstart guide on our `docs &lt;https://astronomer.github.io/astronomer-cosmos/#quickstart&gt;`_.Example Usage___________________You can render an Airflow Task Group using the ``DbtTaskGroup`` class. Here's an example with the jaffle_shop project:.. code-block:: python    from pendulum import datetime    from airflow import DAG    from airflow.operators.empty import EmptyOperator    from cosmos.providers.dbt.task_group import DbtTaskGroup    with DAG(        dag_id=&quot;extract_dag&quot;,        start_date=datetime(2022, 11, 27),        schedule=&quot;@daily&quot;,    ):        e1 = EmptyOperator(task_id=&quot;pre_dbt&quot;)        dbt_tg = DbtTaskGroup(            dbt_project_name=&quot;jaffle_shop&quot;,            conn_id=&quot;airflow_db&quot;,            profile_args={                &quot;schema&quot;: &quot;public&quot;,            },        )        e2 = EmptyOperator(task_id=&quot;post_dbt&quot;)        e1 &gt;&gt; dbt_tg &gt;&gt; e2This will generate an Airflow Task Group that looks like this:.. image:: https://raw.githubusercontent.com/astronomer/astronomer-cosmos/main/docs/jaffle_shop_task_group.pngCommunity_________- Join us on the Airflow `Slack &lt;https://join.slack.com/t/apache-airflow/shared_invite/zt-1vo1rxgc3-EfsbdDzqrV51fddWOc6GOQ&gt;`_ at #airflow-dbtChangelog_________We follow `Semantic Versioning &lt;https://semver.org/&gt;`_ for releases.Check `CHANGELOG.rst &lt;https://github.com/astronomer/astronomer-cosmos/blob/main/CHANGELOG.rst&gt;`_for the latest changes.Contributing Guide__________________All contributions, bug reports, bug fixes, documentation improvements, enhancements are welcome.A detailed overview an how to contribute can be found in the `Contributing Guide &lt;https://astronomer.github.io/astronomer-cosmos/contributing&gt;`_.As contributors and maintainers to this project, you are expected to abide by the`Contributor Code of Conduct &lt;https://github.com/astronomer/astronomer-cosmos/blob/main/CODE_OF_CONDUCT.md&gt;`_.License_______`Apache License 2.0 &lt;https://github.com/astronomer/astronomer-cosmos/blob/main/LICENSE&gt;`_</longdescription>
</pkgmetadata>