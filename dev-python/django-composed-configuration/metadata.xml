<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-composed-configuration[![PyPI](https://img.shields.io/pypi/v/django-composed-configuration)](https://pypi.org/project/django-composed-configuration/)Turnkey Django settings for data management applications.## InstallationAdd to your project's requirements:```django-composed-configuration[dev,prod]```In your project's `settings.py`:```pythonfrom composed_configuration import (    ComposedConfiguration,    ConfigMixin,    DevelopmentBaseConfiguration,    ProductionBaseConfiguration,)class _ProjectMixin(ConfigMixin):    # Define additional project-specific settings or overrides here    pass    @staticmethod    def mutate_configuration(configuration: ComposedConfiguration) -&gt; None:        # Perform any non-overriding mutation of existing settings here        # The &quot;configuration&quot; variable contains the flattened settings        # For example:        #   configuration.INSTALLED_APPS += ['my_extra_app']        passclass DevelopmentConfiguration(_ProjectMixin, DevelopmentBaseConfiguration):    passclass ProductionConfiguration(_ProjectMixin, ProductionBaseConfiguration):    pass```At runtime:* continue to set the `DJANGO_SETTINGS_MODULE` environment variable (pointing to `settings.py`)* also set `DJANGO_CONFIGURATION`, with a value of  either `DevelopmentConfiguration` or `ProductionConfiguration`</longdescription>
</pkgmetadata>