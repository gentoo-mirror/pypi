# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_9,3_10,3_11} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="BentoML: The Unified Model Serving Framework"

HOMEPAGE=""
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/b/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all aws grpc grpc-channelz grpc-reflection io io-file io-image io-json io-pandas monitor-otlp tracing tracing-jaeger tracing-otlp tracing-zipkin triton"
DEPENDENCIES="dev-python/Jinja2[${PYTHON_USEDEP}]
	dev-python/PyYAML[${PYTHON_USEDEP}]
	dev-python/aiohttp[${PYTHON_USEDEP}]
	dev-python/attrs[${PYTHON_USEDEP}]
	dev-python/cattrs[${PYTHON_USEDEP}]
	dev-python/circus[${PYTHON_USEDEP}]
	dev-python/click[${PYTHON_USEDEP}]
	dev-python/click-option-group[${PYTHON_USEDEP}]
	dev-python/cloudpickle[${PYTHON_USEDEP}]
	dev-python/deepmerge[${PYTHON_USEDEP}]
	dev-python/fs[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/opentelemetry-api[${PYTHON_USEDEP}]
	dev-python/opentelemetry-sdk[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation-aiohttp-client[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}]
	dev-python/opentelemetry-semantic-conventions[${PYTHON_USEDEP}]
	dev-python/opentelemetry-util-http[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/pathspec[${PYTHON_USEDEP}]
	dev-python/pip-tools[${PYTHON_USEDEP}]
	dev-python/pip-requirements-parser[${PYTHON_USEDEP}]
	dev-python/prometheus-client[${PYTHON_USEDEP}]
	dev-python/psutil[${PYTHON_USEDEP}]
	dev-python/pynvml[${PYTHON_USEDEP}]
	dev-python/python-dateutil[${PYTHON_USEDEP}]
	dev-python/python-multipart[${PYTHON_USEDEP}]
	dev-python/python-json-logger[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	dev-python/rich[${PYTHON_USEDEP}]
	dev-python/schema[${PYTHON_USEDEP}]
	dev-python/simple-di[${PYTHON_USEDEP}]
	dev-python/starlette[${PYTHON_USEDEP}]
	dev-python/uvicorn[${PYTHON_USEDEP}]
	dev-python/watchfiles[${PYTHON_USEDEP}]
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	all? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	aws? ( dev-python/fs-s3fs[${PYTHON_USEDEP}] )
	grpc? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	grpc? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	grpc? ( dev-python/grpcio-health-checking[${PYTHON_USEDEP}] )
	grpc? ( dev-python/opentelemetry-instrumentation-grpc[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	grpc-channelz? ( dev-python/grpcio-channelz[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	grpc-reflection? ( dev-python/grpcio-reflection[${PYTHON_USEDEP}] )
	io? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	io? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	io? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	io? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	io-file? ( dev-python/filetype[${PYTHON_USEDEP}] )
	io-image? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	io-image? ( dev-python/Pillow[${PYTHON_USEDEP}] )
	io-json? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	io-pandas? ( dev-python/pandas[${PYTHON_USEDEP}] )
	io-pandas? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	monitor-otlp? ( dev-python/opentelemetry-exporter-otlp-proto-http[${PYTHON_USEDEP}] )
	tracing? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	tracing? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	tracing? ( dev-python/bentoml[${PYTHON_USEDEP}] )
	tracing-jaeger? ( dev-python/opentelemetry-exporter-jaeger[${PYTHON_USEDEP}] )
	tracing-otlp? ( dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}] )
	tracing-zipkin? ( dev-python/opentelemetry-exporter-zipkin[${PYTHON_USEDEP}] )
	triton? ( dev-python/tritonclient[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
