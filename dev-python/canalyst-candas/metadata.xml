<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Canalyst Data Science LibraryCanalyst's Python SDK is intended as a full featured data science library facilitating dataframe manipulation, data model mapping, and interactive scenario analysis of core Model, ModelSet, and ModelMap objects.# Python Version RequirementThis package requires Python version `&gt;=3.7`. Recommended Python version `&gt;=3.8`.# Usage## Install Required PackagesRun `pip install -r requirements.txt` to install the requried packages.## To Preview Sample DataThe Python SDK supports a preview of sample data for three tickers: DIS US, TSLA US, or NFLX US.  ```import canalyst_candas as cdmodel = cd.SampleModel(ticker=&quot;DIS US&quot;) df = model.model_frame()```## ConfigurationThe Python SDK supports three ways of providing configuration, in order of precedence:   1. [Creating a `Config` instance](#using-config)   2. [Using environment variables](#using-environment-variables)   3. [Using a configuration file](#using-configuration-file)`Config` is used to store a user's configuration information. On initial `canalyst_candas` import, it will attempt to retrieve the configuration.### Using `Config`A `Config` instance can be created with the desired configurations.In Python/iPython or Jupyter Notebook. Replace `&lt;..&gt;` with values```import syssys.path.append('&lt;path to sdk-python&gt;/src')import canalyst_candas as cdfrom canalyst_candas.configuration.config import Config# if you want to set a default directory, otherwise `default_dir` will be a temporary directory# from pathlib import Path# home = Path.home()# default_dir = f&quot;{home}/&lt;any place under your home directory&gt;&quot;config_info = {  &quot;canalyst_api_key&quot;: &quot;&lt;Canalyst API key&gt;&quot;,  &quot;s3_access_key_id&quot;: &quot;&lt;S3 Access Key ID&gt;&quot;,  &quot;s3_secret_key&quot;: &quot;&lt;S3 Secret Key&gt;&quot;,  &quot;fred_key&quot;: &quot;&lt;Fred key&gt;&quot;,  &quot;default_dir&quot;: &quot;&quot;,  &quot;mds_host&quot;: &quot;&quot;,  &quot;wp_host&quot;: &quot;&quot;,  &quot;verify_ssl&quot;: &quot;True&quot;,}config = Config(config=config_info)ticker = &quot;&lt;ticker you want test with&gt;&quot;model = cd.Model(ticker=ticker, config=config)model_set = cd.ModelSet(ticker_list=[ticker], config=config)cd.ModelMap(  ticker=ticker,  config=config,  time_series_name=time_series,  col_for_labels=&lt;label&gt;,  common_size_tree=True,  notebook=False,  auto_download=False,)```### Using Environment VariablesEnvironment variables can be set in your terminal. The SDK looks for- CANALYST_API_KEY- S3_ACCESS_KEY_ID- S3_SECRET_KEY- FRED_KEY (optional)- DEFAULT_DIR (optional; default is a temporary directory)- MDS_HOST (optional; default is production Model Data System)- WP_HOST (optional; default is production Web Portal)- VERIFY_SSL (optional: default is &quot;True&quot;)In Python/iPython or Jupyter Notebook. Replace `&lt;..&gt;` with values```import syssys.path.append('&lt;path to sdk-python&gt;/src')import canalyst_candas as cdticker = &quot;&lt;ticker to test with&gt;&quot;time_series = &quot;&lt;time series to test with&gt;&quot;label = &quot;&lt;label of interest&gt;model = cd.Model(ticker=ticker)model_set = cd.ModelSet(ticker_list=[ticker])cd.ModelMap(  ticker=ticker,  time_series_name=time_series,  col_for_labels=&lt;label&gt;,  common_size_tree=True,  notebook=False,  auto_download=False,)```### Using a Configuration FileWhen `canalyst_candas` is imported and if there is not already an existing configuration file, a configuration file, `keys.json`, is created in the user's home directory, `C:\Users\&lt;username&gt;\canalyst\keys.json` on Windows or `/User/&lt;username&gt;/canalyst/keys.json` on a Unix-based OS (e.g. Mac, Linux). The configuration file can be moved but must be under a user's home directory and must be in directly under a 'canalyst' folder. Examples of valid locations:Windows- `C:\Users\&lt;username&gt;\canalyst\keys.json`- `C:\Users\&lt;username\Downloads\canalyst\keys.json'`  Unix-based OS- `/Users/&lt;username/canalyst/keys.json`- `/Users/&lt;username&gt;/Downloads/canalyst/keys.json`The contents of `keys.json`:```{    &quot;canalyst_api_key&quot;: &quot;&quot;,    &quot;canalyst_s3_id&quot;: &quot;&quot;,    &quot;canalyst_s3_key&quot;: &quot;&quot;,    &quot;fred_key&quot;: &quot;&quot;,    &quot;default_dir&quot;: &quot;&quot;,    &quot;mds_host&quot;: &quot;&quot;,    &quot;wp_host&quot;: &quot;&quot;,    &quot;verify_ssl&quot;: &quot;&quot;,    &quot;proxies&quot;: &quot;&quot;}```Fill in 1. `canalyst_api_key`: Canalyst API token. Get it at https://app.canalyst.com/settings/api-tokens2. `canalyst_s3_id`:  AWS S3 Access Key ID3. `canalyst_s3_key`:  AWS S3 Secret Key4. (Optional) `default_dir`: your chosen directory for where downloads will go. The default is a temporary directory.In Python/iPython or Jupyter Notebook. Replace `&lt;..&gt;` with values```import syssys.path.append('&lt;path to sdk-python&gt;/src')import canalyst_candas as cdticker = &quot;&lt;ticker to test with&gt;&quot;time_series = &quot;&lt;time series to test with&gt;&quot;label = &quot;&lt;label of interest&gt;model = cd.Model(ticker=ticker)model_set = cd.ModelSet(ticker_list=[ticker])cd.ModelMap(  ticker=ticker,  time_series_name=time_series,  col_for_labels=&lt;label&gt;,  common_size_tree=True,  notebook=False,  auto_download=False,)```## Proxy SupportThe Candas library allows for proxies to be passed in as part of the request. The proxies are to be formatted as a python dictionary:`{&quot;http&quot;: &quot;http://http_proxy.com:8000&quot;, &quot;https&quot;: &quot;https://https_proxy.com:8001&quot;}`If you only have one proxy, the `http` and `https` keys can have the same proxy link.This dictionary is to be passed in as part of the config object: ```    &quot;proxies&quot;: {        &quot;http&quot;: &quot;http://18.206.117.131:3128&quot;,        &quot;https&quot;: &quot;http://18.206.117.131:3128&quot;      }```</longdescription>
</pkgmetadata>