<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Hieroskopia[![codecov](https://codecov.io/gh/simetrikinc/hieroskopia/branch/master/graph/badge.svg)](https://codecov.io/gh/simetrikinc/hieroskopia)The hiereskopia package is a library to infer properties like date formats or numeric separators in pandas series of type object or string. ## Support ### Date-times:- Support to dates and datetime format- This library receive a series as input and try to return a dictionary with the format found in the series Based on the 1989 C (__Default__) , Snowflake Standard or Java Simple date time format code. ### Numeric:- This library receive a series as input and try to return a dictionary with the three digit and decimal character separator## Usage#### Infer datetime or date````Python&gt;&gt;&gt; from hieroskopia import InferDatetime&gt;&gt;&gt; InferDatetime.infer(pd.Series([&quot;2019-11-27&quot;,                     &quot;2019/11/28&quot;,                     &quot;2018-11-08&quot;]))&gt;&gt;&gt; {'formats': ['%Y-%m-%d', '%Y/%m/%d'], 'type':'date'}````Using `return_format` parameter  ````Python&gt;&gt;&gt; from hieroskopia import InferDatetime&gt;&gt;&gt; InferDatetime.infer(pd.Series([&quot;2019-11-27&quot;,                     &quot;2019/11/28&quot;,                     &quot;2018-11-08&quot;]), return_format='snowflake')&gt;&gt;&gt; {'formats': ['yyyy-mm-dd', 'yyyy/mm/dd'], 'type':'date'}````````Python&gt;&gt;&gt; from hieroskopia import InferDatetime&gt;&gt;&gt; InferDatetime.infer(pd.Series([&quot;2019-11-27&quot;,                     &quot;2019/11/28&quot;,                     &quot;2018-11-08&quot;]), return_format='java')&gt;&gt;&gt; {'formats': ['yyyy-MM-dd', 'yyyy/MM/dd'], 'type':'date'}````The above method works with a best guess approach to detect a format in a object type series and try to return a `datetime.strftime`/`strptime`, `Snowflake Date format`, `Java Simple Date Format` format that will cover or parse the majorityof the samples.#### Infer numeric````Python&gt;&gt;&gt; from hieroskopia import InferNumeric&gt;&gt;&gt; InferNumeric.infer(pd.Series(['767313628196.2', '76731362819.546', '767313628196']))&gt;&gt;&gt; {'three_digit_separator': '', 'decimal_separator': '.', 'type':'float'}````The above method will try to detect and return certain properties in a object type serieslike `datatype`, `three_digit_separator` or `decimal_separator` character that will cover the majority of the samples.</longdescription>
</pkgmetadata>