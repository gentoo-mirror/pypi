<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># NetBox Virtual Circuit PluginA plugin for [NetBox](https://github.com/netbox-community/netbox) that supportsVirtual Circuit management.## DefinitionsA Virtual Circuit is a circuit created by routing two or more VLANs together.Each Virtual Circuit is identified by a name, a numeric ID (0-32767), along witha context. Each Virtual Circuit must be assigned one of the following operationalstatuses:- Pending Configuration- Configured- Pending Deletion- Configuration ErrorWhen a VLAN is assigned to a Virtual Circuit, it can not exist in another VirtualCircuit without first being removed.## InstallingSince the plugin is published on[PyPI](https://pypi.org/project/netbox-virtual-circuit-plugin/), simply issue:```pythonpip install netbox-virtual-circuit-plugin```to download and install it.To enable to plugin, add the plugin's name to the `PLUGINS` list in`configuration.py` like so:```pythonPLUGINS = ['netbox_virtual_circuit_plugin'] # Note that the name here use underscore, not hyphen.```Don't forget to restart NetBox to load the new plugin.You might also have to manually run the database migrations for Netbox to create the appropriate tables for virtual circuits.```bashpython3 manage.py migrate```For more information about installing plugins, refer to [NetBox's documentation.](https://netbox.readthedocs.io/en/stable/plugins/)## CompatibilityBelow is a table describing the compatibility of various NetBox versions with NetBox Virtual Circuit Plugin versions.|                   | Netbox 2.8 | NetBox 2.9 | Netbox 2.10 | Netbox 2.11 | Netbox 3.0 | Netbox 3.1 || ----------------- | ---------- | ---------- | ----------- | ----------- | ---------- | ---------- || `1.0.x`           | ✓          | ✗          | ✗           | x           | x          | x          || `1.1.x` to `1.5.x`| ✗          | ✓          | ✗           | x           | x          | x          || `1.6.x`           | ✗          | ✗          | ✓           | x           | x          | x          || `1.7.x`           | ✗          | ✗          | x           | ✓           | x          | x          || `2.0.0`           | ✗          | ✗          | x           | ✓           | x          | ✓          |## UsingOnce the plugin is installed correctly as instructed above, one can find the**Virtual Circuit** section under **Plugins** navigation tab via NetBox UIthat is ready to use with correct *admin* permission.As for REST API use cases, the 2 group endpoints are exposed at:- `/api/plugins/virtual-circuit/virtual-circuits`- `/api/plugins/virtual-circuit/vlans`While the former one is for creating/retrieving/modifying/deleting VirtualCircuits, the later one is for assigning and managing Virtual-Circuit-to-VLANconnections. For more information, refer to `/api/docs` as it also conformsto Swagger Specification for hosted visual documentations.## DevelopingPlugins are essentially self-contained Django apps which integrate with NetBoxto provide custom functionality. For more information, see [NetBoxdocumentation](https://netbox.readthedocs.io/en/stable/plugins/development/).To help setup the development environment, it comes with a CLI helperbased on `Makefile`, including the following commands:```changelog        Generate a changelog file from GitHub Issue Trackerclean            Clean up build artifactsdeploy           Run a local development deployment of the plugin with NetBoxdocker           Build a local docker imagegithub-tag       Create and push a tag with the current versionhelp             Print usage informationmigrate          Run makemigrations in Django and produce a migration file locallyrelease          Package and distribute the current release to PyPItest             Run unit testsversion          Print the version```That said, one can simply build and run a local development image of the pluginwith NetBox with a single line:```make build &amp;&amp; make deploy```The application will be available after a few minutes at`http://0.0.0.0:8000/`. The default credentials are:- Username: **admin**- Password: **admin**- API Token: **0123456789abcdef0123456789abcdef01234567**Below are several screenshots of the UI:![Navigation view](docs/images/1_navigation.png)![Add a Virtual Circuit](docs/images/2_add.png)![List all Virtual Circuits](docs/images/3_list.png)![Assign a VLAN to a Virtual Circuit](docs/images/4_assign_vlan.png)![Virtual Circuit Single View (2 VLANs assigned)](docs/images/5_assigned_vlans.png)![List of all connections](docs/images/6_connections.png)## ContributingIf you experience a bug, would like to ask a question, or request a feature,open a new issue and provide as much context as possible. All contributions,questions, and feedback are welcomed and appreciated.## LicenseNetBox Virtual Circuit Plugin is licensed under GPLv3. See [LICENSE](LICENSE)for more info.</longdescription>
</pkgmetadata>