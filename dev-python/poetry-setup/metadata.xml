<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># poetry-setup![poetry-setup logo](assets/logo.png)[![Build Status](https://travis-ci.org/orsinium/poetry-setup.svg?branch=master)](https://travis-ci.org/orsinium/poetry-setup) [![Beta](https://img.shields.io/pypi/status/poetry-setup.svg)](https://pypi.org/project/poetry-setup/) [![Apache-2.0](https://img.shields.io/github/license/orsinium/poetry-setup.svg)](https://github.com/orsinium/poetry-setup/blob/master/LICENSE)Make your [poetry](https://poetry.eustace.io/) project backward compatible.This tool generate some files from [pyproject.toml](https://poetry.eustace.io/docs/pyproject/):* [setup.py](https://packaging.python.org/tutorials/packaging-projects/#creating-setup-py)* [requirements.txt](https://pip.pypa.io/en/stable/user_guide/#requirements-files)* [constraints.txt](https://pip.pypa.io/en/stable/user_guide/#constraints-files) (from optional dependencies)![files scheme](assets/scheme.png)## InstallationI'm recommend use [pipsi](https://github.com/mitsuhiko/pipsi) for all console scripts like this.Install via pipsi:```bashpipsi install poetry-setup```Install via pip:```bashpip install poetry-setup```Install via poetry:```bashpoetry install poetry-setup```## Usage```bashpoetry-setup [path/to/project/]```Generate for project in current dir:```bashpoetry-setup```Generate for project in `example` dir:```bashpoetry-setup example```## What about pipenv?Pipenv can generate `Pipfile` from `requirements.txt`.## Run test```bashpipenv installpipenv shellpython -m pytest tests.py```</longdescription>
</pkgmetadata>