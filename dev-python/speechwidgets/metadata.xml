<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># speechwidgetsJupyter widgets for speech processing- **`SpectrogramPlayer`**  - Based on the React component, [react-audio-spectrogram-player](https://github.com/nicolvisser/react-audio-spectrogram-player). See the [demo](https://react-audio-spectrogram-player.netlify.app).  ![preview](./preview.png)## InstallationYou can install using `pip`:```bashpip install speechwidgets```If you are using Jupyter Notebook 5.2 or earlier, you may also need to enablethe nbextension:```bashjupyter nbextension enable --py [--sys-prefix|--user|--system] speechwidgets```## Usage```pyfrom speechwidgets import SpectrogramPlayer```### Basic usage:```pySpectrogramPlayer(    wav_file_path='./19-198-0001.wav',    width=800,    spec_height=200,    navigator=True,    nav_height=60,)```### Advanced usage:```pySpectrogramPlayer(    wav_file_path='./19-198-0001.wav',    width=800,    spec_height=200,    navigator=False,    settings=False,    colormap=&quot;greys&quot;,    # for dark mode notebooks:    dark=False, # set to True    transparent=False, # optionally set to True        # mel spec parameters:    n_fft=2048,    win_length=400,    hop_length=160,    f_min=50,     n_mels=80,    power=1.0,        # amplitude to db parameter:    top_db=80 )```### Annotations:```pyword_intervals = [['0.54', '0.84', 'this'],        ['0.84', '1.1', 'little'],        ['1.1', '1.4', 'work']]``````pys = SpectrogramPlayer(    wav_file_path='./19-198-0001.wav',    width=800,    spec_height=200)``````pys.annotate(data=word_intervals, title=&quot;Word Intervals&quot;, height=20, stroke_width=0.5)```You can call the `annotate` method  multiple times with different data. `title`, `height` and `stroke_width` are optional arguments.See `examples/` folder on github for full code examples.## Development InstallationCreate a dev environment:```bashconda create -n speechwidgets-dev -c conda-forge nodejs python=3.10 jupyterlabconda activate speechwidgets-dev```Install the python dependencies. This will also build the TS package.```bashpip install -e &quot;.[test, examples]&quot;```When developing your extensions, you need to manually enable your extensions with thenotebook / lab frontend. For lab, this is done by the command:```jupyter labextension develop --overwrite .npm installnpm run build```For classic notebook, you need to run:```jupyter nbextension install --sys-prefix --symlink --overwrite --py speechwidgetsjupyter nbextension enable --sys-prefix --py speechwidgets```Note that the `--symlink` flag doesn't work on Windows, so you will here have to runthe `install` command every time that you rebuild your extension. For certain installationsyou might also need another flag instead of `--sys-prefix`, but we won't cover the meaningof those flags here.### How to see your changes#### Typescript:If you use JupyterLab to develop then you can watch the source directory and run JupyterLab at the same time in differentterminals to watch for changes in the extension's source and automatically rebuild the widget.```bash# Watch the source directory in one terminal, automatically rebuilding when needednpm run watch# Run JupyterLab in another terminaljupyter lab```After a change wait for the build to finish and then refresh your browser and the changes should take effect.#### Python:If you make a change to the python code then you will need to restart the notebook kernel to have it take effect.</longdescription>
</pkgmetadata>