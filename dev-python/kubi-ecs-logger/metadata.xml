<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img align=&quot;left&quot; src=&quot;https://github.com/kumina/kubi_ecs_logger/blob/master/logo.png&quot;&gt;This Python module makes logging easy for your application.  The logger outputs JSON formatted logs for ingesting into Elastic.  The module implements the ECS (Elastic Common Schema) specification thatcan be found at for quick reference: [ECS Field Reference](https://www.elastic.co/guide/en/ecs/current/ecs-field-reference.html#ecs-field-reference)## InstallYou can install the package from PyPi like this:```bashpip install kubi-ecs-logger```This package is only for Python 3.6 or newer.## Usage```python # Import from kubi_ecs_logger import Logger, Severity# Set some defaults in the start of your app# If in development mode the lib will output formatted json.Logger().dev = True# The minimum level of severity for outputing. E.g. If set to INFO then DEBUG logs will not # be printed to standard outLogger().severity_output_level = Severity.INFO# Set default key/value pairs for the different classes that will always be appended before final outputLogger().defaults = {    &quot;event&quot;: {        &quot;test&quot;: &quot;test value&quot;    }}# Log loaded configurationLogger().event(    category=&quot;configuration&quot;,    action=&quot;configuration loaded&quot;,    dataset=&quot;The configuration is loaded from config.yaml&quot;).out(severity=Severity.INFO)# Output# {#   &quot;@timestamp&quot;: &quot;2019-07-11T15:11:03.193759+00:00&quot;,#   &quot;event&quot;: {#     &quot;action&quot;: &quot;configuration loaded&quot;,#     &quot;category&quot;: &quot;configuration&quot;,#     &quot;dataset&quot;: &quot;The configuration is loaded from config.yaml&quot;,#     &quot;test&quot;: &quot;test value&quot;  # From defaults#   },#   &quot;logline&quot;: {#     &quot;level&quot;: &quot;INFO&quot;#   }# }# Here is a little bit bigger exampleLogger() \    .event(category=&quot;requests&quot;, action=&quot;request received&quot;) \    .url(path=&quot;/test&quot;, domain=&quot;test.com&quot;) \    .source(ip=&quot;123.251.512.152&quot;) \    .http_response(status_code=200) \    .out(severity=Severity.INFO)# And here is the output of this one# {#   &quot;@timestamp&quot;: &quot;2019-07-11T15:15:48.896921+00:00&quot;,#   &quot;event&quot;: {#     &quot;action&quot;: &quot;request received&quot;,#     &quot;category&quot;: &quot;requests&quot;,#     &quot;test&quot;: &quot;test value&quot;  # From defaults#   },#   &quot;httpresponse&quot;: {#     &quot;status_code&quot;: &quot;200&quot;#   },#   &quot;logline&quot;: {#     &quot;level&quot;: &quot;INFO&quot;#   },#   &quot;source&quot;: {#     &quot;ip&quot;: &quot;123.251.512.152&quot;#   },#   &quot;url&quot;: {#     &quot;domain&quot;: &quot;test.com&quot;,#     &quot;path&quot;: &quot;/test&quot;#   }# }```## Dependencies| name        | version ||-------------|---------|| marshmallow | 3.15.0  |</longdescription>
</pkgmetadata>