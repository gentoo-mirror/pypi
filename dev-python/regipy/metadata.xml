<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://travis-ci.com/mkorman90/regipy.svg?branch=master    :target: https://travis-ci.com/mkorman90/regipyregipy==========Regipy is a python library for parsing offline registry hives!Features:* Use as a library* Recurse over the registry hive, from root or a given path and get all subkeys and values* Read specific subkeys and values* Apply transaction logs on a registry hive* Command Line Tools:    * Dump an entire registry hive to json    * Apply transaction logs on a registry hive    * Compare registry hives    * Execute plugins from a robust plugin system (i.e: amcache, shimcache, extract computer name...):Project page: https://github.com/mkorman90/regipyUsing as a library:--------------------.. code:: python    from regipy.registry import RegistryHive    reg = RegistryHive('/Users/martinkorman/Documents/TestEvidence/Registry/Vibranium-NTUSER.DAT')    # Iterate over a registry hive recursively:    for entry in reg.recurse_subkeys(as_json=True):        print(entry)    # Iterate over a key and get all subkeys and their modification time:    for sk in reg.get_key('Software').get_subkeys():        print(sk.name, convert_wintime(sk.header.last_modified).isoformat())    # Get values from a specific registry key:    reg.get_key('Software\Microsoft\Internet Explorer\BrowserEmulation').get_values(as_json=True)    # Use plugins:    from regipy.plugins.ntuser.ntuser_persistence import NTUserPersistencePlugin    NTUserPersistencePlugin(reg, as_json=True).run()    # Run all supported plugins on a registry hive:    run_relevant_plugins(reg, as_json=True)Install^^^^^^^Install regipy and the command line tools dependencies:``pip install regipy[cli]``NOTE: using pip with ``regipy[cli]`` instead of the plain ``regipy`` is asignificant change from version 1.9.xFor using regipy as a library, install only ``regipy`` which comes with fewerdependencies:``pip install regipy``</longdescription>
</pkgmetadata>