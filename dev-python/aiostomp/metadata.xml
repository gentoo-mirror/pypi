<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.com/pedrokiefer/aiostomp.png?branch=master)](https://travis-ci.com/pedrokiefer/aiostomp)[![Coverage Status](https://coveralls.io/repos/github/pedrokiefer/aiostomp/badge.svg?branch=master)](https://coveralls.io/github/pedrokiefer/aiostomp?branch=master)[![PyPI version](https://badge.fury.io/py/aiostomp.svg)](https://badge.fury.io/py/aiostomp)# AiostompSimple asyncio stomp 1.1 client for python 3.6.Heavely inspired on [torstomp](https://github.com/wpjunior/torstomp).## Installwith pip:```bashpip install aiostomp```## Usage```pythonimport sysimport loggingimport asynciofrom aiostomp import AioStomplogging.basicConfig(    format=&quot;%(asctime)s - %(filename)s:%(lineno)d - &quot;    &quot;%(levelname)s - %(message)s&quot;,    level='DEBUG')async def run():    client = AioStomp('localhost', 61613, error_handler=report_error)    client.subscribe('/queue/channel', handler=on_message)    await client.connect()    client.send('/queue/channel', body=u'Thanks', headers={})async def on_message(frame, message):    print('on_message:', message)    return Trueasync def report_error(error):    print('report_error:', error)def main(args):    loop = asyncio.get_event_loop()    loop.run_until_complete(run())    loop.run_forever()if __name__ == '__main__':    main(sys.argv)```## DevelopmentWith empty virtualenv for this project, run this command:```bashmake setup```and run all tests =)```bashmake test```## ContributingFork, patch, test, and send a pull request.</longdescription>
</pkgmetadata>