<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Licence](https://img.shields.io/badge/License-MIT-9cf.svg?style=flat-square)](https://choosealicense.com/licenses/mit/)[![Test](https://img.shields.io/github/actions/workflow/status/akikuno/cstag/test.yml?branch=main&amp;label=Test&amp;color=brightgreen&amp;style=flat-square)](https://github.com/akikuno/cstag/actions)[![Python](https://img.shields.io/pypi/pyversions/cstag.svg?label=Python&amp;color=blue&amp;style=flat-square)](https://pypi.org/project/cstag/)[![PyPI](https://img.shields.io/pypi/v/cstag.svg?label=PyPI&amp;color=orange&amp;style=flat-square)](https://pypi.org/project/cstag/)[![Bioconda](https://img.shields.io/conda/v/bioconda/cstag?label=Bioconda&amp;color=orange&amp;style=flat-square)](https://anaconda.org/bioconda/cstag)# cstag`cstag` is a Python module to manipulate [minimap2's CS tag](https://github.com/lh3/minimap2#cs).- `cstag.shorten()`: to convert a cs tag from long to short format- `cstag.lengthen()`: to convert a cs tag from short to long format- `cstag.consensus()`: to generate a consensus cs tag from multiple cs tags- `cstag.mask()`: to mask low-quality bases in a cs tag- `cstag.to_html()`: to output html report&lt;!-- - `cstag.to_mids()`: to convert cs tag into [compressed MIDS format](https://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.3001507#:~:text=S6%20Fig.%20Compressed%20MIDS%20conversion.) (under-development:construction_worker:) --&gt;See [documentation](https://akikuno.github.io/cstag/cstag/) for more information.## InstallationFrom [PyPI](https://pypi.org/project/cstag/):```bashpip install cstag```From [Bioconda](https://anaconda.org/bioconda/cstag):```bashconda install -c bioconda cstag```## Examples### Shorten/Lengthen```pythonimport cstag# Convert a cs tag from long to shortcs = &quot;cs:Z:=ACGT*ag=CGT&quot;cstag.shorten(cs)# =&gt; cs:Z::4*ag:3# Convert a cs tag from short to longcs = &quot;cs:Z::4*ag:3&quot;cigar = &quot;8M&quot;seq = &quot;ACGTACGT&quot;cstag.lengthen(cs, cigar, seq)# =&gt; cs:Z:=ACGT*ag=CGT```### Call consensus```pythonimport cstagcs_list = [&quot;cs:Z:=ACGT&quot;, &quot;cs:Z:=AC*gt=T&quot;, &quot;cs:Z:=C*gt=T&quot;, &quot;cs:Z:=C*gt=T&quot;, &quot;cs:Z:=ACT+ccc=T&quot;]cigar_list = [&quot;4M&quot;, &quot;4M&quot;, &quot;1S3M&quot;, &quot;3M&quot;, &quot;3M3I1M&quot;]pos_list = [1, 1, 1, 2, 1]cstag.consensus(cs_list, cigar_list, pos_list)# =&gt; cs:Z:=AC*gt*T```### Mask low-quality bases in a cs tag```pythonimport cstagcs = &quot;cs:Z:=ACGT*ac+gg-cc=T&quot;cigar = &quot;5M2I2D1M&quot;qual = &quot;AA!!!!AA&quot;phred_threshold = 10cstag.mask(cs, cigar, qual, phred_threshold)# =&gt; cs:Z:=ACNN*an+ng-cc=T```### Output HTML report```pythonimport cstagfrom pathlib import Pathcs = &quot;cs:Z:=AC+GGG=T-ACGT*at~gt10cg=GNNN&quot;description = &quot;Example&quot;cstag_html = cstag.to_html(cs, description)Path(&quot;report.html&quot;).write_text(cstag_html)# =&gt; Output &quot;report.html&quot;```The `report.html` is :point_down:&lt;img width=&quot;414&quot; alt=&quot;example_report&quot; src=&quot;https://user-images.githubusercontent.com/15861316/158910398-67f480d2-8742-412a-b528-40e545c46513.png&quot;&gt;</longdescription>
</pkgmetadata>