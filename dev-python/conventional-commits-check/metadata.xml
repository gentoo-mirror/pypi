<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Conventional Commits Check&lt;img src=&quot;https://raw.githubusercontent.com/AliYmn/conventional-commits-check/master/images/result.png&quot;&gt;`conventional-commits-check` is a Python pre-commit hook that enforces Conventional Commits rules on your commit messages and automatically adds relevant emojis based on the commit type.Conventional Commits is a lightweight convention that provides a set of rules for creating an explicit commit history. This pre-commit hook helps ensure your commit messages adhere to the convention and provides additional context with emojis.# Automatic Emoji InsertionAutomatic emoji insertion at the beginning of the Commit 🎉```json{    &quot;feat&quot;: &quot;✨&quot;,    &quot;fix&quot;: &quot;🐛&quot;,    &quot;docs&quot;: &quot;📚&quot;,    &quot;style&quot;: &quot;💎&quot;,    &quot;refactor&quot;: &quot;🧹&quot;,    &quot;perf&quot;: &quot;🚀&quot;,    &quot;test&quot;: &quot;🧪&quot;,    &quot;build&quot;: &quot;🏗️&quot;,    &quot;ci&quot;: &quot;👷&quot;,    &quot;chore&quot;: &quot;♻️&quot;,    &quot;revert&quot;: &quot;⏪&quot;,}```# Customization```bashtouch conventional_commits_check_config.yaml`````NOTE` : Please do not leave it blank if you create it.To add custom commit types and emojis, update your `conventional_commits_check_config.yaml` file with the additional_commands and additional_emojis fields. Here's an example:```yamladditional_commands:  database: &quot;^database(\\(.+\\))?:&quot;  design: &quot;^design(\\(.+\\))?:&quot;additional_emojis:  database: &quot;🗃️&quot;  design: &quot;🎨&quot;````# Customization Current EmojiThis is how you can change the emojis of existing commands.```yamladditional_commands:  fix: &quot;^fix(\\(.+\\))?:&quot;  feat: &quot;^feat(\\(.+\\))?:&quot;additional_emojis:  fix: &quot;🗃️&quot;  feat: &quot;🎨&quot;````## Features- Checks if commit messages follow the Conventional Commits rules.- Adds an emoji to the commit message based on the commit type.- Blocks commits with non-conforming messages.## InstallationFollow these steps to add the `conventional-commits-check` pre-commit hook to your project:1. In your project's root directory, open the existing `.pre-commit-config.yaml` file (or create one if it doesn't exist) and add the following content:```yamlrepos:  - repo: https://github.com/AliYmn/conventional-commits-check    rev: v0.3.0  # Use the latest release version    hooks:      - id: conventional-commits-check        stages: [commit-msg]```2. Update the pre-commit hooks in your project:```bashpre-commit install --hook-type commit-msg -f```3. Install the conventional-commits-check package:```bashpip install -U conventional-commits-check```4. You may need to update the pre-commit package;```bashpre-commit autoupdate```# UsageOnce the hook is added to your project, it will automatically run every time you create a commit. The hook will check the commit messages according to the Conventional Commits rules and add the corresponding emojis. If a commit message does not follow the rules, the commit will be blocked.</longdescription>
</pkgmetadata>