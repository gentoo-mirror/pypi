<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python bindings for moteus brushless controller #These bindings permit communication and control of moteus brushlesscontrollers.## To use ##```pip3 install moteus  # or 'moteus-pi3hat' on a pi3hat```See a simple example of the API in use at: [simple.py](examples/simple.py)## Theory ##Interactions with a controller are mediated through the`moteus.Controller` object.  When constructed with the constructorargument `transport=None` (the default) it attempts to find somesuitable link on your host system, typically the first fdcanusb orsocketcan bus it locates.Single controller imperative operation can be conducted by using`await Controller.set_stop()`, `await Controller.set_position()`, and`await Controller.query()`.## Bus-optimized usage ##To optimize bus usage, it is possible to command multiple controllerssimultaneously.  In this mode, a &quot;transport&quot; must be manuallyconstructed.```import asyncioimport mathimport moteusasync def main():    transport = moteus.Fdcanusb()    c1 = moteus.Controller(id = 1)    c2 = moteus.Controller(id = 2)    while True:        print(await transport.cycle([          c1.make_position(position=math.nan, query=True),          c2.make_position(position=math.nan, query=True),        ]))asyncio.run(main())```All of the &quot;set_&quot; methods have a &quot;make_&quot; variant which is suitable topass to a Transport's `cycle` method.This mechanism only improves performance for non-fdcanusb links, suchas a pi3hat.An example use of this mechanism can be found at:[pi3hat_multiservo.py](examples/pi3hat_multiservo.py)## Position mode commands ##`Controller.set_position` and `Controller.make_position` havearguments which exactly mirror the fields documented in`docs/reference.md`.  Omitting them (or specifying None), results inthem being omitted from the resulting register based command.* position* velocity* feedforward_torque* kp_scale* maximum_torque* stop_position* watchdog_timeoutFinally, the `query` argument controls whether information is queriedfrom the controller or not.## Controlling resolution ##The resolution of commands, and of returned query data, is controlledby optional constructor arguments to `Controller`.  By default, thecommands are all F32, and the query requests a subset of fields asINT16.  Here is an example of setting those.```pr = moteus.PositionResolution()pr.position = moteus.INT16pr.velocity = moteus.INT16pr.kp_scale = moteus.F32pr.kd_scale = moteus.F32qr = moteus.QueryResolution()qr.mode = mp.INT8qr.position = mp.F32qr.velocity = mp.F32qr.torque = mp.F32c = moteus.Controller(position_resolution=pr, query_resolution=qr)```</longdescription>
</pkgmetadata>