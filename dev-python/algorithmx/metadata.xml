<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AlgorithmX Python![build](https://github.com/algrx/algorithmx-python/workflows/build/badge.svg)[![PyPI version](https://badge.fury.io/py/algorithmx.svg)](https://pypi.org/project/algorithmx)&lt;img src=&quot;https://raw.githubusercontent.com/algrx/algorithmx/master/img/logo.svg?sanitize=true&quot; align=&quot;left&quot; hspace=&quot;10&quot; width=&quot;80px&quot;&gt;**AlgorithmX Python** is a library for network visualization and algorithm simulation, built on &lt;ahref=&quot;https://github.com/algrx/algorithmx&quot;&gt;AlgorithmX&lt;/a&gt;. It can be used through a HTTP/WebSocketserver, or as a widget in Jupyter Notebooks and JupyterLab.&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/algrx/algorithmx/master/img/example.svg?sanitize=true&quot; align=&quot;center&quot; width=&quot;600px&quot;&gt;## Resources- &lt;a href=&quot;https://algrx.github.io/&quot;&gt;Website&lt;/a&gt;- &lt;a href=&quot;https://algrx.github.io/docs/python/&quot;&gt;Documentation&lt;/a&gt;## InstallationPython 3.7.0 or higher is required. Using pip:```python -m pip install algorithmx```### Jupyter WidgetIn classic Jupyter notebooks, the widget will typically be enabled by default. To enable itmanually, run```jupyter nbextension enable --sys-prefix --py algorithmx```with the &lt;a href=&quot;https://jupyter-notebook.readthedocs.io/en/stable/extending/frontend_extensions.html#installing-and-enabling-extensions&quot;&gt;appropriate flag&lt;/a&gt;. To enable in JupyterLab, run```python -m jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-buildpython -m jupyter lab build```## Example UsageIf you wish to use the library through a HTTP/WebSocket server, follow the template below:```pythonimport algorithmxserver = algorithmx.http_server(port=5050)canvas = server.canvas()def start():    canvas.nodes([1, 2]).add()    canvas.edge((1, 2)).add()canvas.onmessage('start', start)server.start()```The graphics can be found at `http://localhost:5050/`.If you are using Jupyter, try adding the following code to a cell:```pythonfrom algorithmx import jupyter_canvascanvas = jupyter_canvas()canvas.nodes([1, 2]).add()canvas.edge((1, 2)).add()canvas```## Development### Manual installMake sure you have Python 3.7 of higher, then run```# build jscd jsnpm run buildcd ..# install dependenciespython -m pip install -r dev-requirements.txtpython -m pip install --no-deps --editable &quot;.[jupyter,networkx]&quot;```### HTTP ServerDocker: `Docker-compose up http-server`Manually: `python examples/basic_http_server.py`Then open `localhost:5050` in a browser.### Jupyter notebookDocker: `docker-compose up notebook`Manually:```python -m jupyter nbextenion listpython -m jupyter notebook```Then try opening `examples/basic_notebook.ipynb`.### Jupyter labDocker: `docker-compose up jupyter-lab`Manually:```python -m jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-buildpython -m jupyter lab buildpython -m jupyter labextension listpython -m jupyter lab```Then try opening `examples/basic_notebook.ipynb`.### Build and test packageClean any previous builds with `rm -rf build dist`.Docker: `docker-compose up --build build`Manually:```python -m mypy .python -m pytest tests -vvpython setup.py build sdist bdist_wheel```The bundle can be found in `dist/`.### Distribute- Set up pre-commit hooks: `pre-commit install`- Publish to PyPI: `./scripts/deploy.sh`</longdescription>
</pkgmetadata>