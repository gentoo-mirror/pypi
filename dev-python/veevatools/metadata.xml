<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Downloads](https://pepy.tech/badge/veevatools)](https://pepy.tech/project/veevatools)# IntroductionThis python package is a set of Salesforce.com, Veeva Network, Veeva Vault, and Veeva Nitro libraries, scripts, and functions used to help expedite the development of Veeva Tools.&lt;br/&gt;&lt;br/&gt;# Installation / RequirementsEnsure you have **at least Python version 3.10** installed.To Check your installation version, type the following commands in the terminal (MacOs) / command prompt (Windows):```python --version```To install python, go to https://www.python.org/ then navigate to the download page of your Operating System.![Screenshot 2022-06-24 140724](https://user-images.githubusercontent.com/59848012/175649491-0eafdef7-acd2-4631-85cb-f9dee8630b04.png)You will need to have Packager Installer for Python (pip) installed. To install pip, run the following command in the terminal (MacOs) / command prompt (Windows):```curl https://bootstrap.pypa.io/get-pip.py -o get-pip.pypython3 get-pip.py```To install the Veeva Tools library:```pip install veevatools```To upgrade to the latest version of Veeva Tools library:```pip install veevatools --upgrade```# OverviewThe Veeva Tools package currently contains 3 major components:## Salesforce library### Authentication:```pythonfrom salesforce import Sffrom pandas import pdsf = Sf()sf.authenticate(    sfUsername='yourname@salesforce.com',    sfPassword='password123',    sfOrgId='00D2C0000008jIK',    isSandbox= false    )```&gt; Sidenote on Pandas DataFrames: &lt;br/&gt;Pandas DataFrame (pd) is used to prepare the data for import (i.e. create, update methods) and additional export methods such as pd.to_excel() in order to save the output into an Excel file.&lt;br/&gt;Additionally, Complex data manipuation (joins, merges, groupbys, filters)and data analytics (describe, statistical analysis) can all be performed using Pandas. &lt;br /&gt;To learn more about Pandas DataFrames, go to the [Pandas documentation](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html)&lt;br \&gt;&gt; Or just Google tutorials on Pandas DataFrames. [This YouTube playlist by Corey Schafer](https://www.youtube.com/watch?v=ZyhVh-qRZPA&amp;list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS&amp;ab_channel=CoreySchafer)provides an excellent starting point into the world of Pandas!&lt;br/&gt;### Data methods:The salesforce class (Sf) contains methods that can help you interact with data and metadata components:&lt;br/&gt;#### **Query**```pythonaccount_recordtypes = sf.query(&quot;SELECT Id, Name, SobjectType from RecordType WHERE SobjectType = 'Account'&quot;)]account_recordtypes````Return -&gt; pd.DataFrame():`|    |                 Id |                      Name | SobjectType ||---:|-------------------:|--------------------------:|------------:||  0 | 012f4000001ArT3AAK |          Professional_vod |     Account ||  1 | 012f4000001ArT4AAK |           Institution_vod |     Account ||  2 | 012f4000001ArT5AAK |                   MCO_vod |     Account ||  3 | 012f4000001ArT6AAK |          Organization_vod |     Account ||  4 | 012f4000001ArWzAAK |              Hospital_vod |     Account |&gt; Sidenote: &lt;br /&gt;You can use any Pandas (pd) methods on the return value of the query output. For example &lt;br/&gt;```account_recordtypes.to_excel(&quot;Account RecordTypes.xlsx&quot;)``` &lt;br/&gt;Will save the results of the DataFrame into an Excel file.&lt;br/&gt;### **Create**```python## Takes a DataFrame of CRM records and creates records in CRMaccount_records = pd.DataFrame([{'FirstName': 'Test', 'LastName': 'Account'}, {'FirstName': 'Test2', 'LastName': 'Account2'}])result = sf.create('Account', account_records)result````Return -&gt; pd.DataFrame():`|   | success | created |                 Id ||--:|--------:|--------:|-------------------:|| 0 |    True |    True | 0010r00000tF7L1AAK || 1 |    True |    True | 0010r00000tF7L2AAK |&lt;br/&gt;### Update```python### Takes a dataframe that contains at least the Id column### and any other column to be updated, for example, FirstNameupdate_account_name = pd.DataFrame(    [{'FirstName': 'Updated', 'Id': '0010r00000tF7L1AAK'},     {'FirstName': 'Name', 'Id': '0010r00000tF7L2AAK'}]    )result = sf.update('Account', update_account_name)result````Return -&gt; pd.DataFrame()`|   | success | created |                 Id ||--:|--------:|--------:|-------------------:|| 0 |    True |   False | 0010r00000tF7L1AAK || 1 |    True |   False | 0010r00000tF7L2AAK |&lt;br/&gt;### Upsert```python### Takes a dataframe that contains an external ID column### and any other column to be updated, for example, Name### if the external ID matches an existing record,### the account is updated, otherwise, a new record is createdupsert_account = pd.DataFrame(    [{'NET_External_Id__c': '242977178138969088', 'Name': 'Updated Hospital Name'},     {'NET_External_Id__c': '555579769212255555', 'Name': 'Create New Hospital'}]    )result = sf.upsert(object_api='Account', external_id_field_api='NET_External_Id__c', record_dataframe=upsert_account)result````Return -&gt; pd.DataFrame()`|   | success | created |                 id ||--:|--------:|--------:|-------------------:|| 0 |    True |   False | 001f400000PKOrwAAH || 1 |    True |    True | 0010r00000tF7stAAC |&lt;br/&gt;### Delete```python### Takes a dataframe that contains the Id column### deletes records listed based on their SFID.delete_account = pd.DataFrame([{'Id': '0010r00000tF7stAAC'}, {'Id': '001f400000PKOrwAAH'}])result = sf.delete(object_api='Account', record_dataframe=delete_account)result````Return -&gt; pd.DataFrame()`|   | success | created |                 Id ||--:|--------:|--------:|-------------------:|| 0 |    True |   False | 0010r00000tF7stAAC || 1 |    True |   False | 001f400000PKOrwAAH |&lt;br/&gt;### Read Metadata```python###```&lt;br/&gt;### Create Metadata```python###```&lt;br/&gt;### Update Metadata```python###```&lt;br/&gt;### Rename Metadata```python###```&lt;br/&gt;### Delete Metadata```python###```&lt;br/&gt;### List MetaData```python###```</longdescription>
</pkgmetadata>