<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://travis-ci.org/jbn/nbmerge.svg?branch=master    :target: https://travis-ci.org/jbn/nbmerge.. image:: https://ci.appveyor.com/api/projects/status/69kj3prrrieyp8q2/branch/master?svg=true    :target: https://ci.appveyor.com/project/jbn/nbmerge/branch/master .. image:: https://coveralls.io/repos/github/jbn/nbmerge/badge.svg?branch=master    :target: https://coveralls.io/github/jbn/nbmerge?branch=master .. image:: https://img.shields.io/pypi/dm/nbmerge.svg    :target: https://pypi.python.org/pypi/nbmerge.. image:: https://img.shields.io/pypi/v/nbmerge.svg    :target: https://pypi.python.org/pypi/nbmerge.. image:: https://img.shields.io/badge/license-MIT-blue.svg    :target: https://raw.githubusercontent.com/jbn/nbmerge/master/LICENSE.. image:: https://img.shields.io/pypi/pyversions/nbmerge.svg    :target: https://pypi.python.org/pypi/nbmerge==================================================``nbmerge``: merge / concatenate Jupyter notebooks==================================================Installation============.. code:: sh    pip install nbmergeUsage=====For the usage as originally specified by `@fperez &lt;https://github.com/fperez&gt;`__'s gist, .. code:: sh    nbmerge file_1.ipynb file_2.ipynb file_3.ipynb &gt; merged.ipynbAlternatively, nbmerge can cursively collect all files in the currentdirectory and below, recursively. After collection, it sorts themlexicographically. You can use a regular expression as a file namepredicate. All ``.ipynb_checkpoints`` are automatically ignored. And, youcan use the ``-i`` option to ignore any notebook prefixed with an underscore(think pseudo-private in python). For example, the following command collects all notebooks in your projectthat have the word ``intro`` in the file name and saves it to a merged filenamed ``_merged.ipynb``,.. code:: sh    nbmerge --recursive -i -p &quot;.*intro.*&quot; -o _merged.ipynbFinally, you can also instruct the script to demarcate the boundarybetween each original file with the ``-b`` / ``-boundary [BOUNDARY]`` flag.The ``src_nb`` value in the metadata for the first cell in each originalnotebook will then contain the path of the original notebook, relative tothe cwd at the point of script execution.Lineage=======`@fperez &lt;https://github.com/fperez&gt;`__ wrote an`nbmerge.py &lt;https://gist.github.com/fperez/e2bbc0a208e82e450f69&gt;`__script which &quot;Merge[s]/concatenate[s] multiple IPython notebooks intoone.&quot; I use it a lot. Evidently, `other people do,too &lt;https://github.com/search?utf8=%E2%9C%93&amp;q=nbmerge.py&amp;type=Code&gt;`__.In early 2016, he opened an `issue to add the script as an nbconverttool &lt;https://github.com/jupyter/nbconvert/issues/253&gt;`__, but nothingcame of it. However, he and `@Carreau &lt;https://github.com/carreau&gt;`__ came upwith good (i.e. unsurprising) `semantics for metadata merging andnotebooknaming &lt;https://github.com/jupyter/nbconvert/issues/253#issuecomment-187492911&gt;`__:.. code:: python    metadata = {}    for n in reversed(notebooks):        metadata.update(n.metadata)I don't think it's possible to implement the merger as a preprocessor.Preprocessors are stateless, so you can't implement a reduce operation.Instead, I wrote (er, packaged up) this library as an`nbstripoutput &lt;https://github.com/kynan/nbstripout&gt;`__-like package . It fits in a ``Makefile`` script just fine. Right now, only the basic (originally fperez's) functionality is implemented. However, I'm going to follow `kynan's &lt;https://github.com/kynan&gt;`__ lead and slowly pull in functionalitysimilar to his ``nbstripout`` package.</longdescription>
</pkgmetadata>