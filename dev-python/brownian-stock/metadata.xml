<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Brownian[![Python application](https://github.com/toritoritori29/brownian/actions/workflows/python-app.yml/badge.svg?branch=main)](https://github.com/toritoritori29/brownian/actions/workflows/python-app.yml)Brownianは日本株取引に対応した株取引フレームワークです。JQuantsからのデータダウンロード, 取引モデルの作成, バックテスト, 実取引まで網羅的にサポートします.## Usage### データのダウンロード以下のサブコマンドを実行すると指定したディレクトリ以下にJQuantesから取得した情報をCSVで保存します. ```brownian download &lt;保存先のディレクトリ名&gt;```実行する際には以下２つの環境変数をセットする必要があります.* J_QUANTS_USERNAME: J-Quantsのユーザー名 * J_QUANTS_PASSWORD: J-Quantsのパスワード## DBの更新・CSVの生成以下のコマンドを実行すると, ダウンロードしたデータを集計してSQLiteデータベース上に格納します.またデータベースから銘柄毎の株価情報・決算情報を集計しCSVを生成します. ## ディレクトリの構成### raw_stockJQuantsから取得した日毎の株価情報### raw_statementsJQuantsから取得した日毎の決算情報## stock`genereate`コマンドで生成した銘柄毎の株価情報.　株価は調整済みの数字.## Install各種コマンドのインストール前にvenvをactivateしてください.```bashpython3 -m venv .venvsource .venv/bin/activate```## Test```pytest```# For Developer## Prerequires* pyenv* poetry == 1.4.2* gh## Set upRun following commands.```pyenv install -s 3.10.4 &amp;&amp; poetry env use 3.10.4poetry install ```## Utility commands.* To test.```poetry run pytest```* Lint and format```poetry run invoke lintpoetry run invoke format```</longdescription>
</pkgmetadata>