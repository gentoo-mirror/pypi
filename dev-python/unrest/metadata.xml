<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># UnRest - &lt;small&gt;Simple sqlalchemy rest api generation.&lt;/small&gt;[![Build Status](https://travis-ci.org/Kozea/unrest.svg?branch=master)](https://travis-ci.org/Kozea/unrest)[![Coverage Status](https://coveralls.io/repos/github/Kozea/unrest/badge.svg?branch=master)](https://coveralls.io/github/Kozea/unrest?branch=master)```pythonfrom unrest import UnRest# First, initialize UnRest with your web applicationrest = UnRest(app)# Then declare your endpointrest(Person)```This should provide you a `/api/person` and a `/api/person/&lt;login&gt;` route accessible in GET only.To activate data modification, set the methods array like this:```pythonrest(Person, only=['name', 'sex', 'age'], methods=['GET', 'PUT', 'POST', 'DELETE', 'PATCH']) # or simply methods=rest.all```You will get both routes (collection and member) on the five methods. Please see [the wikipedia page](https://en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URI_and_HTTP_methods) for their signification.You can also override the default methods like this:```pythonperson = rest(Person)@person.declare('GET')def get(payload, login=None):    # Pre get hook    if login:        login = login.upper()    rv = person.get(payload, login=login)    # Post get hook    return {        'occurences': rv['occurences'],        'objects': [            {'login': person['login'].lower()} for person in rv['objects']        ]    }```## DocumentationFull documentation can be found at [kozea.github.io/unrest](https://kozea.github.io/unrest/)## ExampleConsider this simple web application:```pythonfrom datetime import timedeltafrom flask import Flaskfrom flask_sqlalchemy import SQLAlchemyfrom sqlalchemy.orm import relationshipfrom sqlalchemy.sql.schema import Column, ForeignKeyfrom sqlalchemy.types import Integer, Interval, Numeric, Stringfrom unrest import UnRest# Flask applicationapp = Flask(__name__)app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = Falseapp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/unrest.db'# Model definitiondb = SQLAlchemy(app)class Tree(db.Model):    id = Column(Integer, primary_key=True)    name = Column(String)    @property    def fruit_colors(self):        return ', '.join([fruit.color for fruit in self.fruits])class Fruit(db.Model):    fruit_id = Column(Integer, primary_key=True)    color = Column(String(50))    size = Column(Numeric)    age = Column(Interval)    tree_id = Column(Integer, ForeignKey('tree.id'))    tree = relationship(Tree, backref='fruits')# Drop everything just in casedb.drop_all()# Create modeldb.create_all()# Data insertionpine = Tree(name='pine')maple = Tree(name='maple')oak = Tree(name='oak')db.session.add(pine)db.session.add(maple)db.session.add(oak)db.session.add(Fruit(color='grey', size=12, age=timedelta(days=12, hours=1, minutes=15), tree=pine))db.session.add(Fruit(color='darkgrey', size=23, age=timedelta(days=49, seconds=230, milliseconds=213), tree=pine))db.session.add(Fruit(color='brown', size=2.12, age=timedelta(0), tree=pine))db.session.add(Fruit(color='red', size=.5, age=timedelta(minutes=40), tree=maple))db.session.add(Fruit(color='orangered', size=100, age=timedelta(hours=2, microseconds=12), tree=maple))db.session.commit()db.session.remove()# Declare rest endpointsrest = UnRest(app, db.session)# Authorize every methodsrest(Tree, methods=rest.all, allow_batch=True)# Don't authorize batch for fruitsrest(Fruit, methods=rest.all)# Run the appapp.run(debug=True)```You will now have:## GET### With primary keys arguments```json$ curl -s http://localhost:5000/api/tree/1200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {            &quot;id&quot;: 1,            &quot;name&quot;: &quot;pine&quot;        }    ]}``````json$ curl -s http://localhost:5000/api/fruit/1200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {            &quot;fruit_id&quot;: 1,            &quot;color&quot;: &quot;grey&quot;,            &quot;size&quot;: 12.0,            &quot;age&quot;: 1041300.0,            &quot;tree_id&quot;: 1        }    ]}```### Without argument```json$ curl -s http://localhost:5000/api/tree200 OK{    &quot;occurences&quot;: 3,    &quot;objects&quot;: [        {            &quot;id&quot;: 1,            &quot;name&quot;: &quot;pine&quot;        },        {            &quot;id&quot;: 2,            &quot;name&quot;: &quot;maple&quot;        },        {            &quot;id&quot;: 3,            &quot;name&quot;: &quot;oak&quot;        }    ]}``````json$ curl -s http://localhost:5000/api/fruit200 OK{    &quot;occurences&quot;: 5,    &quot;objects&quot;: [        {            &quot;fruit_id&quot;: 1,            &quot;color&quot;: &quot;grey&quot;,            &quot;size&quot;: 12.0,            &quot;age&quot;: 1041300.0,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 2,            &quot;color&quot;: &quot;darkgrey&quot;,            &quot;size&quot;: 23.0,            &quot;age&quot;: 4233830.213,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 3,            &quot;color&quot;: &quot;brown&quot;,            &quot;size&quot;: 2.12,            &quot;age&quot;: 0.0,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 4,            &quot;color&quot;: &quot;red&quot;,            &quot;size&quot;: 0.5,            &quot;age&quot;: 2400.0,            &quot;tree_id&quot;: 2        },        {            &quot;fruit_id&quot;: 5,            &quot;color&quot;: &quot;orangered&quot;,            &quot;size&quot;: 100.0,            &quot;age&quot;: 7200.000012,            &quot;tree_id&quot;: 2        }    ]}```## PUT### With primary keys arguments```json$ curl -s http://localhost:5000/api/tree/1 -X PUT -H &quot;Content-Type: application/json&quot; -d '{  &quot;name&quot;: &quot;cedar&quot;}'200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {            &quot;id&quot;: 1,            &quot;name&quot;: &quot;cedar&quot;        }    ]}```Get it again to be sure:```json$ curl -s http://localhost:5000/api/tree/1200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {            &quot;id&quot;: 1,            &quot;name&quot;: &quot;cedar&quot;        }    ]}```### Without argument```json$ curl -s http://localhost:5000/api/tree -X PUT -H &quot;Content-Type: application/json&quot; -d '{  &quot;objects&quot;: [{&quot;id&quot;: 2, &quot;name&quot;: &quot;cedar&quot;}, {&quot;id&quot;: 22, &quot;name&quot;: &quot;mango&quot;}]}'200 OK{    &quot;occurences&quot;: 2,    &quot;objects&quot;: [        {            &quot;id&quot;: 2,            &quot;name&quot;: &quot;cedar&quot;        },        {            &quot;id&quot;: 22,            &quot;name&quot;: &quot;mango&quot;        }    ]}```Get it again to be sure:```json$ curl -s http://localhost:5000/api/tree200 OK{    &quot;occurences&quot;: 2,    &quot;objects&quot;: [        {            &quot;id&quot;: 2,            &quot;name&quot;: &quot;cedar&quot;        },        {            &quot;id&quot;: 22,            &quot;name&quot;: &quot;mango&quot;        }    ]}```Check that when `allow_batch` is not set we can't put all:```json$ curl -s http://localhost:5000/api/fruit -X PUT -H &quot;Content-Type: application/json&quot; -d '{  &quot;objects&quot;: [    {&quot;fruit_id&quot;: 2, &quot;color&quot;: &quot;red&quot;},    {&quot;fruit_id&quot;: 22, &quot;color&quot;: &quot;blue&quot;}  ]}'406 Not Acceptable{  &quot;message&quot;: &quot;You must set allow_batch to True if you want to use batch methods.&quot;}```## POST### With primary keys arguments```json$ curl -s http://localhost:5000/api/tree/1 -X POST -H &quot;Content-Type: application/json&quot;501 Not Implemented{  &quot;message&quot;: &quot;POST on id corresponds to collection creation. It's not implemented by default. If you want to update an item use the PUT method instead&quot;}```### Without argument```json$ curl -s http://localhost:5000/api/fruit -X POST -H &quot;Content-Type: application/json&quot; -d '{  &quot;color&quot;: &quot;forestgreen&quot;, &quot;size&quot;: 3.14, &quot;age&quot;: 1.5926, &quot;tree_id&quot;: 3}'200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {            &quot;fruit_id&quot;: 6,            &quot;color&quot;: &quot;forestgreen&quot;,            &quot;size&quot;: 3.14,            &quot;age&quot;: 1.5926,            &quot;tree_id&quot;: 3        }    ]}```Now we should have a total of 6 fruits:```json$ curl -s http://localhost:5000/api/fruit200 OK{    &quot;occurences&quot;: 6,    &quot;objects&quot;: [        {            &quot;fruit_id&quot;: 1,            &quot;color&quot;: &quot;grey&quot;,            &quot;size&quot;: 12.0,            &quot;age&quot;: 1041300.0,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 2,            &quot;color&quot;: &quot;darkgrey&quot;,            &quot;size&quot;: 23.0,            &quot;age&quot;: 4233830.213,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 3,            &quot;color&quot;: &quot;brown&quot;,            &quot;size&quot;: 2.12,            &quot;age&quot;: 0.0,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 4,            &quot;color&quot;: &quot;red&quot;,            &quot;size&quot;: 0.5,            &quot;age&quot;: 2400.0,            &quot;tree_id&quot;: 2        },        {            &quot;fruit_id&quot;: 5,            &quot;color&quot;: &quot;orangered&quot;,            &quot;size&quot;: 100.0,            &quot;age&quot;: 7200.000012,            &quot;tree_id&quot;: 2        },        {            &quot;fruit_id&quot;: 6,            &quot;color&quot;: &quot;forestgreen&quot;,            &quot;size&quot;: 3.14,            &quot;age&quot;: 1.5926,            &quot;tree_id&quot;: 3        }    ]}```## DELETE### With primary keys arguments```json$ curl -s http://localhost:5000/api/fruit/3 -X DELETE200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {            &quot;fruit_id&quot;: 3,            &quot;color&quot;: &quot;brown&quot;,            &quot;size&quot;: 2.12,            &quot;age&quot;: 0.0,            &quot;tree_id&quot;: 1        }    ]}```Now we should have only 5 fruits remaining:```json$ curl -s http://localhost:5000/api/fruit200 OK{    &quot;occurences&quot;: 5,    &quot;objects&quot;: [        {            &quot;fruit_id&quot;: 1,            &quot;color&quot;: &quot;grey&quot;,            &quot;size&quot;: 12.0,            &quot;age&quot;: 1041300.0,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 2,            &quot;color&quot;: &quot;darkgrey&quot;,            &quot;size&quot;: 23.0,            &quot;age&quot;: 4233830.213,            &quot;tree_id&quot;: 1        },        {            &quot;fruit_id&quot;: 4,            &quot;color&quot;: &quot;red&quot;,            &quot;size&quot;: 0.5,            &quot;age&quot;: 2400.0,            &quot;tree_id&quot;: 2        },        {            &quot;fruit_id&quot;: 5,            &quot;color&quot;: &quot;orangered&quot;,            &quot;size&quot;: 100.0,            &quot;age&quot;: 7200.000012,            &quot;tree_id&quot;: 2        },        {            &quot;fruit_id&quot;: 6,            &quot;color&quot;: &quot;forestgreen&quot;,            &quot;size&quot;: 3.14,            &quot;age&quot;: 1.5926,            &quot;tree_id&quot;: 3        }    ]}```### Without argumentBatch delete is not allowed on fruit:```json$ curl -s http://localhost:5000/api/fruit -X DELETE501 Not Implemented{  &quot;message&quot;: &quot;You must set allow_batch to True if you want to use batch methods.&quot;}```But is on tree:```json$ curl -s http://localhost:5000/api/tree -X DELETE200 OK{    &quot;occurences&quot;: 3,    &quot;objects&quot;: [        {            &quot;id&quot;: 1,            &quot;name&quot;: &quot;pine&quot;        },        {            &quot;id&quot;: 2,            &quot;name&quot;: &quot;maple&quot;        },        {            &quot;id&quot;: 3,            &quot;name&quot;: &quot;oak&quot;        }    ]}``````json$ curl -s http://localhost:5000/api/tree200 OK{    &quot;occurences&quot;: 0,    &quot;objects&quot;: []}```## PATCH### With primary keys arguments```json$ curl -s http://localhost:5000/api/fruit/1 -X PATCH -H &quot;Content-Type: application/json&quot; -d '{  &quot;color&quot;: &quot;blue&quot;}'200 OK{    &quot;occurences&quot;: 1,    &quot;objects&quot;: [        {          &quot;fruit_id&quot;: 1,          &quot;color&quot;: &quot;blue&quot;,          &quot;size&quot;: 12.0,          &quot;age&quot;: 1041300.0,          &quot;tree_id&quot;: 1        }    ]}```### Without argument```json$ curl -s http://localhost:5000/api/tree -X PATCH -H &quot;Content-Type: application/json&quot; -d '{  &quot;objects&quot;: [{&quot;id&quot;: 2, &quot;name&quot;: &quot;cedar&quot;}, {&quot;id&quot;: 3, &quot;name&quot;: &quot;mango&quot;}]}'200 OK{    &quot;occurences&quot;: 2,    &quot;objects&quot;: [        {            &quot;id&quot;: 2,            &quot;name&quot;: &quot;cedar&quot;        },        {            &quot;id&quot;: 3,            &quot;name&quot;: &quot;mango&quot;        }    ]}```Check that when `allow_batch` is not set we can't put all:```json$ curl -s http://localhost:5000/api/fruit -X PATCH -H &quot;Content-Type: application/json&quot; -d '{  &quot;objects&quot;: [    {&quot;fruit_id&quot;: 1, &quot;color&quot;: &quot;blue&quot;},    {&quot;fruit_id&quot;: 3, &quot;age&quot;: 1038540.0},    {&quot;fruit_id&quot;: 4, &quot;color&quot;: &quot;rainbow&quot;, &quot;size&quot;: 8},    {&quot;fruit_id&quot;: 5, &quot;size&quot;: 10, &quot;tree_id&quot;: 1}  ]}'406 Not Acceptable{  &quot;message&quot;: &quot;You must set allow_batch to True if you want to use batch methods.&quot;}```otherwise all the specified attributes would have been patched.</longdescription>
</pkgmetadata>