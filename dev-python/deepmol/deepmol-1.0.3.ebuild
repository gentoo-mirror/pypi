# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="DeepMol: a python-based machine and deep learning framework for drug discovery"

HOMEPAGE=""
LICENSE="BSD 2-Clause License"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all boruta cached_property chembl_structure_pipeline deep_learning deepchem dgl dgllife dill flake8 gensim h5py imblearn joblib kaleido kneed machine_learning mypy numpy optuna pillow plotly preprocessing pytest pytest-cov rdkit-pypi scikit-learn scikit-multilearn seaborn shap smilespe tensorflow tensorflow-probability test torch torch_geometric tox umap-learn"
DEPENDENCIES="dev-python/rdkit-pypi[${PYTHON_USEDEP}]
	dev-python/cached-property[${PYTHON_USEDEP}]
	dev-python/seaborn[${PYTHON_USEDEP}]
	dev-python/joblib[${PYTHON_USEDEP}]
	dev-python/pillow[${PYTHON_USEDEP}]
	dev-python/h5py[${PYTHON_USEDEP}]
	all? ( dev-python/dill[${PYTHON_USEDEP}] )
	all? ( dev-python/numpy[${PYTHON_USEDEP}] )
	all? ( dev-python/dgllife[${PYTHON_USEDEP}] )
	all? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	all? ( dev-python/h5py[${PYTHON_USEDEP}] )
	all? ( dev-python/pillow[${PYTHON_USEDEP}] )
	all? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all? ( dev-python/shap[${PYTHON_USEDEP}] )
	all? ( dev-python/kneed[${PYTHON_USEDEP}] )
	all? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	all? ( dev-python/dgl[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	all? ( dev-python/flake8[${PYTHON_USEDEP}] )
	all? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	all? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	all? ( dev-python/plotly[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	all? ( dev-python/joblib[${PYTHON_USEDEP}] )
	all? ( dev-python/tox[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )
	all? ( dev-python/smilespe[${PYTHON_USEDEP}] )
	all? ( dev-python/gensim[${PYTHON_USEDEP}] )
	all? ( dev-python/deepchem[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	all? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	all? ( dev-python/mypy[${PYTHON_USEDEP}] )
	all? ( dev-python/boruta[${PYTHON_USEDEP}] )
	all? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	all? ( dev-python/rdkit-pypi[${PYTHON_USEDEP}] )
	boruta? ( dev-python/boruta[${PYTHON_USEDEP}] )
	cached_property? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	chembl_structure_pipeline? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/dill[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/numpy[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/dgllife[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/pillow[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/optuna[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/shap[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/dgl[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/joblib[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/torch[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/smilespe[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/deepchem[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/h5py[${PYTHON_USEDEP}] )
	deep_learning? ( dev-python/rdkit-pypi[${PYTHON_USEDEP}] )
	deepchem? ( dev-python/deepchem[${PYTHON_USEDEP}] )
	dgl? ( dev-python/dgl[${PYTHON_USEDEP}] )
	dgllife? ( dev-python/dgllife[${PYTHON_USEDEP}] )
	dill? ( dev-python/dill[${PYTHON_USEDEP}] )
	flake8? ( dev-python/flake8[${PYTHON_USEDEP}] )
	gensim? ( dev-python/gensim[${PYTHON_USEDEP}] )
	h5py? ( dev-python/h5py[${PYTHON_USEDEP}] )
	imblearn? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	joblib? ( dev-python/joblib[${PYTHON_USEDEP}] )
	kaleido? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	kneed? ( dev-python/kneed[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/dill[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/numpy[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/umap-learn[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/plotly[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/h5py[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/pillow[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/smilespe[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/shap[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/kneed[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/joblib[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/rdkit-pypi[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/kaleido[${PYTHON_USEDEP}] )
	machine_learning? ( dev-python/optuna[${PYTHON_USEDEP}] )
	mypy? ( dev-python/mypy[${PYTHON_USEDEP}] )
	numpy? ( dev-python/numpy[${PYTHON_USEDEP}] )
	optuna? ( dev-python/optuna[${PYTHON_USEDEP}] )
	pillow? ( dev-python/pillow[${PYTHON_USEDEP}] )
	plotly? ( dev-python/plotly[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/dill[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/imblearn[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/boruta[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/numpy[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/h5py[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/chembl-structure-pipeline[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/pillow[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/smilespe[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/gensim[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/joblib[${PYTHON_USEDEP}] )
	preprocessing? ( dev-python/rdkit-pypi[${PYTHON_USEDEP}] )
	pytest? ( dev-python/pytest[${PYTHON_USEDEP}] )
	pytest-cov? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	rdkit-pypi? ( dev-python/rdkit-pypi[${PYTHON_USEDEP}] )
	scikit-learn? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	scikit-multilearn? ( dev-python/scikit-multilearn[${PYTHON_USEDEP}] )
	seaborn? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	shap? ( dev-python/shap[${PYTHON_USEDEP}] )
	smilespe? ( dev-python/smilespe[${PYTHON_USEDEP}] )
	tensorflow? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	tensorflow-probability? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	test? ( dev-python/dill[${PYTHON_USEDEP}] )
	test? ( dev-python/flake8[${PYTHON_USEDEP}] )
	test? ( dev-python/cached-property[${PYTHON_USEDEP}] )
	test? ( dev-python/tox[${PYTHON_USEDEP}] )
	test? ( dev-python/numpy[${PYTHON_USEDEP}] )
	test? ( dev-python/h5py[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pillow[${PYTHON_USEDEP}] )
	test? ( dev-python/smilespe[${PYTHON_USEDEP}] )
	test? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	test? ( dev-python/joblib[${PYTHON_USEDEP}] )
	test? ( dev-python/rdkit-pypi[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/mypy[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch_geometric? ( dev-python/torch-geometric[${PYTHON_USEDEP}] )
	tox? ( dev-python/tox[${PYTHON_USEDEP}] )
	umap-learn? ( dev-python/umap-learn[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
