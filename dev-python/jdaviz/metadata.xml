<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: docs/logos/jdaviz.svg    :width: 400    :alt: Jdaviz logo    :align: center.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.5513927.svg    :target: https://doi.org/10.5281/zenodo.5513927    :alt: Zenodo DOI.. image:: https://github.com/spacetelescope/jdaviz/workflows/CI/badge.svg    :target: https://github.com/spacetelescope/jdaviz/actions    :alt: GitHub Actions CI Status.. image:: https://codecov.io/gh/spacetelescope/jdaviz/branch/main/graph/badge.svg    :target: https://codecov.io/gh/spacetelescope/jdaviz.. image:: https://readthedocs.org/projects/jdaviz/badge/?version=latest    :target: https://jdaviz.readthedocs.io/en/latest/?badge=latest    :alt: Documentation Status.. image:: https://img.shields.io/badge/powered%20by-AstroPy-orange.svg?style=flat    :target: https://www.astropy.org    :alt: Powered by Astropy``jdaviz`` is a package of astronomical data analysis visualization tools based on the Jupyter platform. It is one tool that is a part of STScI's larger `Data Analysis Tools Ecosystem &lt;https://jwst-docs.stsci.edu/jwst-post-pipeline-data-analysis&gt;`_. These GUI-based tools link datavisualization and interactive analysis.  They are designed to workwithin a Jupyter notebook cell, as a standalone desktop application,or as embedded windows within a website -- all with nearly-identicaluser interfaces. ``jdaviz`` is under active development, and users whoencounter bugs in existing features are encouraged to open issues in thisrepository.``jdaviz`` provides data viewers and analysis plugins that can be flexiblycombined as desired to create interactive applications that fit your workflow.Three named preset configurations for common use cases are provided. **Specviz**is a tool for visualization and quick-look analysis of 1D astronomical spectra.**Mosviz** is a visualization tool for many astronomical spectra,typically the output of a multi-object spectrograph (e.g., JWSTNIRSpec), and includes viewers for 1D and 2D spectra as well ascontextual information like on-sky views of the spectrograph slit.**Cubeviz** provides a view of spectroscopic data cubes (like those to beproduced by JWST MIRI), along with 1D spectra extracted from the cube.**Imviz** provides visualization and quick-look analysis for 2D astronomicalimages.This tool is designed with instrument modes from the James Webb Space Telescope (JWST) in mind, butthe tool should be flexible enough to read in data from many astronomical telescopes.  The documentation provides a complete `table of all supported modes &lt;https://jdaviz.readthedocs.io/en/latest/#jwst-instrument-modes-in-jdaviz&gt;`_.Installing----------You may want to consider installing ``jdaviz`` in a new virtual or conda environment to avoid version conflicts with other packages you may have installed, for example:.. code-block:: bash   conda create -n jdaviz-env python=3.9   conda activate jdaviz-envInstalling the released version can be done using pip:.. code-block:: bash   pip install jdaviz --upgradeFor details on installing and using Jdaviz, see the`Jdaviz Installation &lt;https://jdaviz.readthedocs.io/en/latest/installation.html&gt;`_.Quick Start-----------Once installed, ``jdaviz`` can be run either as a standalone web application or in a Jupyter notebook.As a Web Application++++++++++++++++++++``jdaviz`` provides a command-line tool to start the web application. To see the syntax and usage,from a terminal, type:.. code-block:: bash    jdaviz --help    jdaviz specviz /path/to/data/spectral_fileFor more information on the command line interfaces for each tool, see the`Jdaviz docs &lt;https://jdaviz.readthedocs.io/en/latest/index.html&gt;`_.In a Jupyter Notebook+++++++++++++++++++++The power of ``jdaviz`` is that it can integrated into your Jupyter notebook workflow:.. code-block:: python    from jdaviz import Specviz    specviz = Specviz()    specviz.appTo learn more about the various ``jdaviz`` application configurations and loading data, see the`specviz &lt;https://jdaviz.readthedocs.io/en/latest/specviz/import_data.html&gt;`_, `cubeviz &lt;https://jdaviz.readthedocs.io/en/latest/cubeviz/import_data.html&gt;`_, `mosviz &lt;https://jdaviz.readthedocs.io/en/latest/mosviz/import_data.html&gt;`_, or `imviz &lt;https://jdaviz.readthedocs.io/en/latest/imviz/import_data.html&gt;`_ tools.``jdaviz`` also provides a directory of `sample notebooks &lt;https://jdaviz.readthedocs.io/en/latest/sample_notebooks.html&gt;`_ to test the application, located in the ``notebooks`` sub-directoryof the git repository.  ``CubevizExample.ipynb`` is provided as an example that loads a JWST data cube with the``Cubeviz`` configuration.  To run the provided example, start the Jupyter kernel with the notebook path:.. code-block:: bash    jupyter notebook /path/to/jdaviz/notebooks/CubevizExample.ipynbHelp----If you uncover any issues or bugs, you can`open a GitHub issue &lt;https://github.com/spacetelescope/jdaviz/issues/new/choose&gt;`_if they are not already reported. For faster responses, however, we encourage you tosubmit a `JWST Help Desk Ticket &lt;https://jwsthelp.stsci.edu&gt;`_.License &amp; Attribution---------------------This project is Copyright (c) JDADF Developers and licensed underthe terms of the BSD 3-Clause license. This package is based uponthe `Astropy package template &lt;https://github.com/astropy/package-template&gt;`_which is licensed under the BSD 3-clause licence. See the`licenses &lt;https://github.com/spacetelescope/jdaviz/tree/main/licenses&gt;`_folder for more information.Cite ``jdaviz`` via our Zenodo record: https://doi.org/10.5281/zenodo.5513927.Contributing------------We love contributions! jdaviz is open source,built on open source, and we'd love to have you hang out in our community.**Imposter syndrome disclaimer**: We want your help. No, really.There may be a little voice inside your head that is telling you that you're notready to be an open source contributor; that your skills aren't nearly goodenough to contribute. What could you possibly offer a project like this one?We assure you - the little voice in your head is wrong. If you can write code atall, you can contribute code to open source. Contributing to open sourceprojects is a fantastic way to advance one's coding skills. Writing perfect codeisn't the measure of a good developer (that would disqualify all of us!); it'strying to create something, making mistakes, and learning from thosemistakes. That's how we all improve, and we are happy to help others learn.Being an open source contributor doesn't just mean writing code, either. You canhelp out by writing documentation, tests, or even giving feedback about theproject (and yes - that includes giving feedback about the contributionprocess). Some of these contributions may be the most valuable to the project asa whole, because you're coming to the project with fresh eyes, so you can seethe errors and assumptions that seasoned contributors have glossed over.Note: This disclaimer was originally written by`Adrienne Lowe &lt;https://github.com/adriennefriend&gt;`_ for a`PyCon talk &lt;https://www.youtube.com/watch?v=6Uj746j9Heo&gt;`_, and was adapted byjdaviz based on its use in the README file for the`MetPy project &lt;https://github.com/Unidata/MetPy&gt;`_.</longdescription>
</pkgmetadata>