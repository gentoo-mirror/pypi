<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|dclab|=======|PyPI Version| |Build Status| |Coverage Status| |Docs Status|This is a Python library for the post-measurement analysis ofreal-time deformability cytometry (RT-DC) datasets; an essential part of`Shape-Out &lt;https://github.com/ZELLMECHANIK-DRESDEN/ShapeOut2&gt;`__.Documentation-------------The documentation, including the code reference and examples, is available at`dclab.readthedocs.io &lt;https://dclab.readthedocs.io/en/stable/&gt;`__.Installation------------::    pip install dclab[all]For more options, please check out the `documentation&lt;https://dclab.readthedocs.io/en/latest/sec_getting_started.html#installation&gt;`__.Information for developers--------------------------Contributing~~~~~~~~~~~~The main branch for developing dclab is master.If you want to make small changes like one-liners,documentation, or default values in the configuration,you may work on the master branch. If you want to changemore, please (fork dclab and) create a separate branch,e.g. ``my_new_feature_dev``, and create a pull-requestonce you are done making your changes.Please make sure to edit the `Changelog &lt;https://github.com/DC-analysis/dclab/blob/master/CHANGELOG&gt;`__.**Very important:** Please always try to use ::    git pull --rebaseinstead of::    git pullto prevent non-linearities in the commit history.Tests~~~~~dclab is tested using pytest. If you have the time, please write testmethods for your code and put them in the ``tests`` directory. To runthe tests, install `pytest` and run::    pytest testsDocs~~~~The docs are built with `sphinx &lt;https://www.sphinx-doc.org&gt;`_. Please makesure they compile when you change them (this also includes function doc strings)::    cd docs    pip install -r requirements.txt    sphinx-build . _build  # open &quot;index.html&quot; in the &quot;_build&quot; directoryPEP8~~~~We use flake8 to enforce coding style::    pip install flake8    flake8 dclab    flake8 docs    flake8 examples    flake8 testsIncrementing version~~~~~~~~~~~~~~~~~~~~Dclab gets its version from the latest git tag.If you think that a new version should be published,create a tag on the master branch (if you have the necessarypermissions to do so)::    git tag -a &quot;0.1.3&quot;    git push --tags originAppveyor and GitHub Actions will then automatically build source package and wheelsand publish them on PyPI... |dclab| image:: https://raw.github.com/DC-analysis/dclab/master/docs/logo/dclab.png.. |PyPI Version| image:: https://img.shields.io/pypi/v/dclab.svg   :target: https://pypi.python.org/pypi/dclab.. |Build Status| image:: https://img.shields.io/github/actions/workflow/status/DC-analysis/dclab/check.yml   :target: https://github.com/DC-analysis/dclab/actions?query=workflow%3AChecks.. |Coverage Status| image:: https://img.shields.io/codecov/c/github/DC-analysis/dclab/master.svg   :target: https://codecov.io/gh/DC-analysis/dclab.. |Docs Status| image:: https://readthedocs.org/projects/dclab/badge/?version=latest   :target: https://readthedocs.org/projects/dclab/builds/</longdescription>
</pkgmetadata>