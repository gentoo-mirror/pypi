<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sqlalchemy-redshift===================Amazon Redshift dialect for SQLAlchemy.Installation------------The package is available on PyPI::    pip install sqlalchemy-redshift.. warning::    This dialect requires either ``redshift_connector`` or ``psycopg2``    to work properly. It does not provide    it as required, but relies on you to select the distribution you need:    * psycopg2 - standard distribution of psycopg2, requires compilation so few system dependencies are required for it    * psycopg2-binary - already compiled distribution (no system dependencies are required)    * psycopg2cffi - pypy compatible version    See `Psycopg2's binary install docs &lt;http://initd.org/psycopg/docs/install.html#binary-install-from-pypi&gt;`_    for more context on choosing a distribution.Usage-----The DSN format is similar to that of regular Postgres::    &gt;&gt;&gt; import sqlalchemy as sa    &gt;&gt;&gt; sa.create_engine('redshift+psycopg2://username@host.amazonaws.com:5439/database')    Engine(redshift+psycopg2://username@host.amazonaws.com:5439/database)See the `RedshiftDDLCompiler documentation&lt;https://sqlalchemy-redshift.readthedocs.org/en/latest/ddl-compiler.html&gt;`_for details on Redshift-specific features the dialect supports.Running Tests-------------Tests are ran via tox and can be run with the following command::    $ toxHowever, this will not run integration tests unless the followingenvironment variables are set:* REDSHIFT_HOST* REDSHIFT_PORT* REDSHIFT_USERNAME* PGPASSWORD (this is the redshift instance password)* REDSHIFT_DATABASE* REDSHIFT_IAM_ROLE_ARNNote that the IAM role specified will need to be associated withredshift cluster and have the correct permissions to create databasesand tables as well drop them. Exporting these environment variables inyour shell and running ``tox`` will run the integration tests againsta real redshift instance. Practice caution when running these testsagainst a production instance.Continuous Integration (CI)---------------------------Project CI is built using AWS CodePipeline and CloudFormation. Please see the ``ci/`` folder and included ``README.txt``for details on how to spin up the project's CI.Releasing---------To perform a release, you will need to be an admin for the project onGitHub and on PyPI. Contact the maintainers if you need that access.You will need to have a `~/.pypirc` with your PyPI credentials andalso the following settings::    [zest.releaser]    create-wheels = yesTo perform a release, run the following::    python -m venv ~/.virtualenvs/dist    workon dist    pip install -U pip setuptools wheel    pip install -U tox zest.releaser    fullrelease  # follow prompts, use semver ish with versions.The releaser will handle updating version data on the package and inCHANGES.rst along with tagging the repo and uploading to PyPI.0.8.14 (2023-04-07)-------------------- Override new upstream postgres method that fails against redshift (`Pull #266 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/266&gt;`_)- Fix table reflection broken for non-superusers  (`Pull #276 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/276&gt;`_)- Fix Broken Reflection for 1.4 FutureEngine  (`Pull #277 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/277&gt;`_)0.8.13 (2023-03-28)-------------------- Add spectrum support  (`Pull #263 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/263&gt;`_)- Drop support for Python 3.50.8.12 (2022-12-08)-------------------- Fix SQLAlchemy's &quot;supports_statement_cache&quot; (`Pull #259 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/259&gt;`_)0.8.11 (2022-07-27)-------------------- Disable redshift_connector dialect statement cache (`Pull #257 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/257&gt;`_)0.8.10 (2022-07-21)-------------------- Support HLLSKETCH Redshift datatypes  (`Pull #246 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/246&gt;`_)- Disable supports_statement_cache  (`Pull #249 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/249&gt;`_)- Fix doc, lint CI dependency issues  (`Pull #250 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/250&gt;`_)- Fix redshift_connector dialect column encoding  (`Pull #255 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/255&gt;`_)0.8.9 (2021-12-15)------------------- Support inspection of Redshift datatypes  (`Pull #242 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/242&gt;`_)0.8.8 (2021-11-03)------------------- Remove support for Python 2.7; now requires python ``&gt;=3.4``  (`Pull #234 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/234&gt;`_)- Support GEOMETRY, SUPER Redshift datatypes  (`Pull #235 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/235&gt;`_)0.8.7 (2021-10-27)------------------- Initial SQLAlchemy 2.0.x support  (`Pull #237 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/237&gt;`_)0.8.6 (2021-09-22)------------------- Add RedshiftDialect_redshift_connector  (`Pull #232 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/232&gt;`_)- Create RedshiftDialectMixin class. Add RedshiftDialect_psycopg2cffi.  (`Pull #231 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/231&gt;`_)0.8.5 (2021-08-23)------------------- Support TIMETZ datatype  (`Pull #229 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/229&gt;`_)- Fix RelationKey unquoted issue  (`Pull #228 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/228&gt;`_)0.8.4 (2021-07-15)------------------- Improve reflection performance by fetching/caching metadata per schema  rather than for the entire database  (`Pull #223 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/223&gt;`_)0.8.3 (2021-07-07)------------------- SQLAlchemy 1.4.x support  (`Pull #221 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/221&gt;`_)0.8.2 (2021-01-08)------------------- Allow supplying multiple role ARNs in COPY and UNLOAD commands. This allows  the first role to assume other roles as explained  `here &lt;https://docs.aws.amazon.com/redshift/latest/mgmt/authorizing-redshift-service.html#authorizing-redshift-service-chaining-roles&gt;`_.0.8.1 (2020-07-15)------------------- Support AWS partitions for role-based access control in COPY and UNLOAD  commands. This allows these commands to be used, e.g. in GovCloud.0.8.0 (2020-06-30)------------------- Add option to drop materialized view with CASCADE  (`Pull #204 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/204&gt;`_)- Fix invalid SQLAlchemy version comparison  (`Pull #206 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/206&gt;`_)0.7.9 (2020-05-29)------------------- Fix for supporting SQLAlchemy 1.3.11+  (`Issue #195 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/195&gt;`_)0.7.8 (2020-05-27)------------------- Added support for materialized views  (`Issue #202 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/202&gt;`_)- Fix reflection of unique constraints  (`Issue #199 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/199&gt;`_)- Support for altering column comments in Alembic migrations  (`Issue #191 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/191&gt;`_)0.7.7 (2020-02-02)------------------- Import Iterable from collections.abc for Python 3.9 compatibility  (`Issue #189 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/189&gt;`_)- Add support for Parquet format in ``UNLOAD`` command  (`Issue #187 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/187&gt;`_)0.7.6 (2020-01-17)------------------- Fix unhashable type error for sortkey reflection in SQLAlchemy &gt;= 1.3.11  (`Issue #180 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/180&gt;`_)- Expose supported types for import from the dialect  (`Issue #181 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/181&gt;`_)- Reflect column comments  (`Issue #186 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/186&gt;`_)0.7.5 (2019-10-09)------------------- Extend psycopg2 package version check to also support psycopg2-binary and psycopg2cffi  (`Issue #178 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/178&gt;`_)0.7.4 (2019-10-08)------------------- Drop hard dependency on psycopg2 but require package to be present on runtime  (`Issue #165 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/165&gt;`_)- Switch from info to keyword arguments on columns for ``SQLAlchemy &gt;= 1.3.0``  (`Issue #161 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/161&gt;`_)- Add support for column info on redshift late binding views  (`Issue #159 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/159&gt;`_)- Add support for ``MAXFILESIZE`` argument to ``UNLOAD``.  (`Issue #123 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/123&gt;`_)- Add support for the `CREATE LIBRARY`_ command.  (`Issue #124 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/124&gt;`_)- Add support for the `ALTER TABLE APPEND`_ command.  (`Issue #162 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/162&gt;`_)- Add support for the ``CSV`` format to `UnloadFromSelect`.  (`Issue #169 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/169&gt;`_)- Update the list of reserved words (adds &quot;az64&quot; and &quot;language&quot;)  (`Issue #176 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/176&gt;`_).. _CREATE LIBRARY: https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_LIBRARY.html.. _ALTER TABLE APPEND: https://docs.aws.amazon.com/redshift/latest/dg/r_ALTER_TABLE_APPEND.html0.7.3 (2019-01-16)------------------- Add support for ``REGION`` argument to ``COPY`` and ``UNLOAD`` commands.  (`Issue #90 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/90&gt;`_)0.7.2 (2018-12-11)------------------- Update tests to adapt to changes in Redshift and SQLAlchemy  (`Issue #140 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/140&gt;`_)- Add `header` option to `UnloadFromSelect` command  (`Issue #156 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/156&gt;`_)- Add support for Parquet and ORC file formats in the COPY command  (`Issue #151 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/150&gt;`_)- Add official support for Python 3.7  (`Issue #153 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/153&gt;`_)- Avoid manipulating search path in table metadata fetch by using system tables  directly (`Issue #147 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/147&gt;`_)0.7.1 (2018-01-17)------------------- Fix incompatibility of reflection code with SQLAlchemy 1.2.0+  (`Issue #138 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/138&gt;`_)0.7.0 (2017-10-03)------------------- Do not enumerate `search_path` with external schemas (`Issue #120  &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/120&gt;`_)- Return constraint name from get_pk_constraint and get_foreign_keys- Use Enums for Format, Compression and Encoding.  Deprecate string parameters for these parameter types  (`Issue #133 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/133&gt;`_)- Update included certificate with the `transitional ACM cert bundle  &lt;https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-transitioning-to-acm-certs.html&gt;`_  (`Issue #130 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/130&gt;`_)0.6.0 (2017-05-04)------------------- Support role-based access control in COPY and UNLOAD commands  (`Issue #88 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/88&gt;`_)- Increase max_identifier_length to 127 characters  (`Issue #96 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/96&gt;`_)- Fix a bug where table names containing a period caused an error on reflection  (`Issue #97 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/97&gt;`_)- Performance improvement for reflection by caching table constraint info  (`Issue #101 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/101&gt;`_)- Support BZIP2 compression in COPY command  (`Issue #110 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/110&gt;`_)- Allow tests to tolerate new default column encodings in Redshift  (`Issue #114 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/114&gt;`_)- Pull in set of reserved words from Redshift docs  (`Issue #94 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/94&gt;` _)0.5.0 (2016-04-21)------------------- Support reflecting tables with foriegn keys to tables in non-public schemas  (`Issue #70 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/70&gt;`_)- Fix a bug where DISTKEY and SORTKEY could not be used on column names containing  spaces or commas. This is a breaking behavioral change for a command like  `__table_args__ = {'redshift_sortkey': ('foo, bar')}`. Previously, this would sort  on the columns named `foo` and `bar`. Now, it sorts on the column named `foo, bar`.  (`Issue #74 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/74&gt;`_)0.4.0 (2015-11-17)------------------- Change the name of the package to `sqlalchemy_redshift` to match the naming  convention for other dialects; the `redshift_sqlalchemy` package now emits  a `DeprecationWarning` and references `sqlalchemy_redshift`.  The `redshift_sqlalchemy` compatibility package will be removed  in a future release.  (`Issue #58 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/58&gt;`_)- Fix a bug where reflected tables could have incorrect column order for some  `CREATE TABLE` statements, particularly for columns with an `IDENTITY`  constraint.  (`Issue #60 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/60&gt;`_)- Fix a bug where reflecting a table could raise a ``NoSuchTableError``  in cases where its schema is not on the current ``search_path``  (`Issue #64 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/64&gt;`_)- Add python 3.5 to the list of versions for integration tests.  (`Issue #61 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/61&gt;`_)0.3.1 (2015-10-08)------------------- Fix breakages to CopyCommand introduced in 0.3.0:  Thanks `solackerman &lt;https://github.com/solackerman&gt;`_.  (`Issue #53 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/53&gt;`_)  - When `format` is omitted, no `FORMAT AS ...` is appended to the query. This    makes the default the same as a normal redshift query.  - fix STATUPDATE as a COPY parameter0.3.0 (2015-09-29)------------------- Fix view support to be more in line with SQLAlchemy standards.  `get_view_definition` output no longer includes a trailing semicolon and  views no longer raise an exception when reflected as `Table` objects.  (`Issue #46 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/46&gt;`_)- Rename RedShiftDDLCompiler to RedshiftDDLCompiler.  (`Issue #43 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/43&gt;`_)- Update commands  (`Issue #52 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/52&gt;`_)  - Expose optional TRUNCATECOLUMNS in CopyCommand.  - Add all other COPY parameters to CopyCommand.  - Move commands to their own module.  - Support inserts into ordered columns in CopyCommand.0.2.0 (2015-09-04)------------------- Use SYSDATE instead of NOW().  Thanks `bouk &lt;https://github.com/bouk&gt;`_.  (`Issue #15 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/15&gt;`_)- Default to SSL with hardcoded AWS Redshift CA.  (`Issue #20 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/20&gt;`_)- Refactor of CopyCommand including support for specifying format and  compression type. (`Issue #21 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/21&gt;`_)- Explicitly require SQLAlchemy &gt;= 0.9.2 for 'dialect_options'.  (`Issue #13 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/13&gt;`_)- Refactor of UnloadFromSelect including support for specifying all documented  redshift options.  (`Issue #27 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/27&gt;`_)- Fix unicode issue with SORTKEY on python 2.  (`Issue #34 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/34&gt;`_)- Add support for Redshift ``DELETE`` statements that refer other tables in  the ``WHERE`` clause.  Thanks `haleemur &lt;https://github.com/haleemur&gt;`_.  (`Issue #35 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/35&gt;`_)- Raise ``NoSuchTableError`` when trying to reflect a table that doesn't exist.  (`Issue #38 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/38&gt;`_)0.1.2 (2015-08-11)------------------- Register postgresql.visit_rename_table for redshift's  alembic RenameTable.  Thanks `bouk &lt;https://github.com/bouk&gt;`_.  (`Issue #7 &lt;https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/7&gt;`_)0.1.1 (2015-05-20)------------------- Register RedshiftImpl as an alembic 3rd party dialect.0.1.0 (2015-05-11)------------------- First version of sqlalchemy-redshift that can be installed from PyPI</longdescription>
</pkgmetadata>