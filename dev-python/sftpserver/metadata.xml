<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sftpserver==========``sftpserver`` is a simple single-threaded SFTP server based onParamiko's SFTPServer.I needed a simple server that could be used as a stub for testingPython SFTP clients so I whipped out one.Installation------------Using ``pip``::    $ [sudo] pip install sftpserverExamples--------::    $ sftpserver    Usage: sftpserver [options]    -k/--keyfile should be specified    Options:      -h, --help            show this help message and exit      --host=HOST           listen on HOST [default: localhost]      -p PORT, --port=PORT  listen on PORT [default: 3373]      -l LEVEL, --level=LEVEL                            Debug level: WARNING, INFO, DEBUG [default: INFO]      -k FILE, --keyfile=FILE                            Path to private key, for example /tmp/test_rsa.key    $ sftpserver -k /tmp/test_rsa.key -l DEBUGGenerating a test private key::    $ openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout /tmp/test_rsa.keyConnecting with a Python client to our server:&gt;&gt;&gt; import paramiko&gt;&gt;&gt; pkey = paramiko.RSAKey.from_private_key_file('/tmp/test_rsa.key')&gt;&gt;&gt; transport = paramiko.Transport(('localhost', 3373))&gt;&gt;&gt; transport.connect(username='admin', password='admin', pkey=pkey)&gt;&gt;&gt; sftp = paramiko.SFTPClient.from_transport(transport)&gt;&gt;&gt; sftp.listdir('.')['loop.py', 'stub_sftp.py']</longdescription>
</pkgmetadata>