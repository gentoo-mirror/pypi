<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># banana-cliThe goal of the Banana CLI is to bring an npm-like experience to ML development loops. This version includes:- `banana init` to create a project with boilerplate- `banana install` to install packages from the requirements.txt- `banana dev` to run a dev server with hot-reload[Here's a demo video](https://www.loom.com/share/86d4e7b0801549b9ab2f7a1acce772aa)---This is a v0 release using SemVer; it is not stable and the interface can break at any time.---## To use it1. Install the CLI with pip```bashpip3 install banana-cli```2. Create a new project directory with ```bashbanana init my-appcd my-app```3. Start the dev server```bashbanana dev```4. Call your API (from a separate terminal)```bashcurl -X POST -H &quot;Content-Type: application/json&quot; -d '{&quot;prompt&quot;: &quot;Hello I am a [MASK] model.&quot;}' http://localhost:8000/``` ## Hot-Reload Dev ServerThe interactive dev server works like a react, next, or nodemon server: it selectively hot reloads components when you save changes to different parts of your `app.py` file.The init() function is ran on startup and for every change to init().The handler() function is ran on every change to handler(), without needing to wait for a long init()## Play with it:4. Try changing the handler, see what happens!5. Try changing the init, see what happens!## Experimental features:- `banana dev --auto-compat=True` to make your GPU code compatible with a CPU machine, by ignoring to(&quot;cuda&quot;) calls## Future Development:- Lock in a stable interface- Add the following commands  - `banana build` -&gt; verify production build  - `banana test` -&gt; unit test against local test cases  - `banana deploy` -&gt; manually deploy from CLI  - `banana deploy --canary --ttl=10` -&gt; run a temporary deployment to Banana's cluster for on-GPU testin- Port to Rust. [Why Rust?](https://giphy.com/gifs/aFbTasXn1GINgiEbzr)</longdescription>
</pkgmetadata>