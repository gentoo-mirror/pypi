<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python ``raise`` as a Function==============================Raise exceptions with a function instead of a statement.Provides a minimal and portable interface for raising exceptionswith all the advantages of functions over syntax.Versioning----------This library's version numbers follow the `SemVer 2.0.0specification &lt;https://semver.org/spec/v2.0.0.html&gt;`_.Installation------------::    pip install raiseUsage-----Import ``raise_``:.. code:: python    from raise_ import raise_Raise an exception:.. code:: python    raise_(Exception('foo'))Raise an exception with a traceback:.. code:: python    raise_(Exception('foo'), traceback)Raise in a ``lambda``:.. code:: python    lambda x: x if x &gt; 0 else raise_(ValueError('x is too small!')) And of course because ``raise_`` is a function, you can combineit with ``functools.partial`` and other functional programminglibraries and techniques for many more uses.Surprises---------``raise_`` clears ``__traceback__`` if you don't pass in a traceback,same as if you passed in ``None``. If you want the Python 3 behaviorof reusing the ``__traceback__``, you should explicitly pass it in:.. code:: python    raise_(exception, exception.__traceback__)Or, if you want to gracefully degrade on Python implementationswhich do not have ``__traceback__`` on their exceptions:.. code:: python    raise_(exception, getattr(exception, '__traceback__', None))Portability-----------Portable to all releases of both Python 3 and Python 2.(The oldest tested is 2.5, but it will likely work on allPython 2 versions and probably on even earlier versions.)For implementations of Python that do not support raisingwith a custom traceback, a &quot;no traceback&quot; variant isincluded in the source that can be installed manually.</longdescription>
</pkgmetadata>