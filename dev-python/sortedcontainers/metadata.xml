<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Sorted Containers========================`Sorted Containers`_ is an Apache2 licensed `sorted collections library`_,written in pure-Python, and fast as C-extensions.Python's standard library is great until you need a sorted collectionstype. Many will attest that you can get really far without one, but the momentyou **really need** a sorted list, sorted dict, or sorted set, you're facedwith a dozen different implementations, most using C-extensions without greatdocumentation and benchmarking.In Python, we can do better. And we can do it in pure-Python!.. code-block:: python    &gt;&gt;&gt; from sortedcontainers import SortedList    &gt;&gt;&gt; sl = SortedList(['e', 'a', 'c', 'd', 'b'])    &gt;&gt;&gt; sl    SortedList(['a', 'b', 'c', 'd', 'e'])    &gt;&gt;&gt; sl *= 10_000_000    &gt;&gt;&gt; sl.count('c')    10000000    &gt;&gt;&gt; sl[-3:]    ['e', 'e', 'e']    &gt;&gt;&gt; from sortedcontainers import SortedDict    &gt;&gt;&gt; sd = SortedDict({'c': 3, 'a': 1, 'b': 2})    &gt;&gt;&gt; sd    SortedDict({'a': 1, 'b': 2, 'c': 3})    &gt;&gt;&gt; sd.popitem(index=-1)    ('c', 3)    &gt;&gt;&gt; from sortedcontainers import SortedSet    &gt;&gt;&gt; ss = SortedSet('abracadabra')    &gt;&gt;&gt; ss    SortedSet(['a', 'b', 'c', 'd', 'r'])    &gt;&gt;&gt; ss.bisect_left('c')    2All of the operations shown above run in faster than linear time. The abovedemo also takes nearly a gigabyte of memory to run. When the sorted list ismultiplied by ten million, it stores ten million references to each of &quot;a&quot;through &quot;e&quot;. Each reference requires eight bytes in the sortedcontainer. That's pretty hard to beat as it's the cost of a pointer to eachobject. It's also 66% less overhead than a typical binary tree implementation(e.g. Red-Black Tree, AVL-Tree, AA-Tree, Splay-Tree, Treap, etc.) for whichevery node must also store two pointers to children nodes.`Sorted Containers`_ takes all of the work out of Python sorted collections -making your deployment and use of Python easy. There's no need to install a Ccompiler or pre-build and distribute custom extensions. Performance is afeature and testing has 100% coverage with unit tests and hours of stress... _`Sorted Containers`: http://www.grantjenks.com/docs/sortedcontainers/.. _`sorted collections library`: http://www.grantjenks.com/docs/sortedcontainers/Testimonials------------**Alex Martelli**, `Fellow of the Python Software Foundation`_&quot;Good stuff! ... I like the `simple, effective implementation`_ idea ofsplitting the sorted containers into smaller &quot;fragments&quot; to avoid the O(N)insertion costs.&quot;**Jeff Knupp**, `author of Writing Idiomatic Python and Python Trainer`_&quot;That last part, &quot;fast as C-extensions,&quot; was difficult to believe. I would needsome sort of `Performance Comparison`_ to be convinced this is true. The authorincludes this in the docs. It is.&quot;**Kevin Samuel**, `Python and Django Trainer`_I'm quite amazed, not just by the code quality (it's incredibly readable andhas more comment than code, wow), but the actual amount of work you put atstuff that is *not* code: documentation, benchmarking, implementationexplanations. Even the git log is clean and the unit tests run out of the boxon Python 2 and 3.**Mark Summerfield**, a short plea for `Python Sorted Collections`_Python's &quot;batteries included&quot; standard library seems to have a batterymissing. And the argument that &quot;we never had it before&quot; has worn thin. It istime that Python offered a full range of collection classes out of the box,including sorted ones.`Sorted Containers`_ is used in popular open source projects such as:`Zipline`_, an algorithmic trading library from Quantopian; `Angr`_, a binaryanalysis platform from UC Santa Barbara; `Trio`_, an async I/O library; and`Dask Distributed`_, a distributed computation library supported by ContinuumAnalytics... _`Fellow of the Python Software Foundation`: https://en.wikipedia.org/wiki/Alex_Martelli.. _`simple, effective implementation`: http://www.grantjenks.com/docs/sortedcontainers/implementation.html.. _`author of Writing Idiomatic Python and Python Trainer`: https://jeffknupp.com/.. _`Python and Django Trainer`: https://www.elephorm.com/formateur/kevin-samuel.. _`Python Sorted Collections`: http://www.qtrac.eu/pysorted.html.. _`Zipline`: https://github.com/quantopian/zipline.. _`Angr`: https://github.com/angr/angr.. _`Trio`: https://github.com/python-trio/trio.. _`Dask Distributed`: https://github.com/dask/distributedFeatures--------- Pure-Python- Fully documented- Benchmark comparison (alternatives, runtimes, load-factors)- 100% test coverage- Hours of stress testing- Performance matters (often faster than C implementations)- Compatible API (nearly identical to older blist and bintrees modules)- Feature-rich (e.g. get the five largest keys in a sorted dict: d.keys()[-5:])- Pragmatic design (e.g. SortedSet is a Python set with a SortedList index)- Developed on Python 3.7- Tested on CPython 2.7, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7 and PyPy, PyPy3.. image:: https://api.travis-ci.org/grantjenks/python-sortedcontainers.svg?branch=master   :target: http://www.grantjenks.com/docs/sortedcontainers/.. image:: https://ci.appveyor.com/api/projects/status/github/grantjenks/python-sortedcontainers?branch=master&amp;svg=true   :target: http://www.grantjenks.com/docs/sortedcontainers/Quickstart----------Installing `Sorted Containers`_ is simple with `pip&lt;https://pypi.org/project/pip/&gt;`_::    $ pip install sortedcontainersYou can access documentation in the interpreter with Python's built-in `help`function. The `help` works on modules, classes and methods in `SortedContainers`_... code-block:: python    &gt;&gt;&gt; import sortedcontainers    &gt;&gt;&gt; help(sortedcontainers)    &gt;&gt;&gt; from sortedcontainers import SortedDict    &gt;&gt;&gt; help(SortedDict)    &gt;&gt;&gt; help(SortedDict.popitem)Documentation-------------Complete documentation for `Sorted Containers`_ is available athttp://www.grantjenks.com/docs/sortedcontainers/User Guide..........The user guide provides an introduction to `Sorted Containers`_ and extensiveperformance comparisons and analysis.- `Introduction`_- `Performance Comparison`_- `Load Factor Performance Comparison`_- `Runtime Performance Comparison`_- `Simulated Workload Performance Comparison`_- `Performance at Scale`_.. _`Introduction`: http://www.grantjenks.com/docs/sortedcontainers/introduction.html.. _`Performance Comparison`: http://www.grantjenks.com/docs/sortedcontainers/performance.html.. _`Load Factor Performance Comparison`: http://www.grantjenks.com/docs/sortedcontainers/performance-load.html.. _`Runtime Performance Comparison`: http://www.grantjenks.com/docs/sortedcontainers/performance-runtime.html.. _`Simulated Workload Performance Comparison`: http://www.grantjenks.com/docs/sortedcontainers/performance-workload.html.. _`Performance at Scale`: http://www.grantjenks.com/docs/sortedcontainers/performance-scale.htmlCommunity Guide...............The community guide provides information on the development of `SortedContainers`_ along with support, implementation, and history details.- `Development and Support`_- `Implementation Details`_- `Release History`_.. _`Development and Support`: http://www.grantjenks.com/docs/sortedcontainers/development.html.. _`Implementation Details`: http://www.grantjenks.com/docs/sortedcontainers/implementation.html.. _`Release History`: http://www.grantjenks.com/docs/sortedcontainers/history.htmlAPI Documentation.................The API documentation provides information on specific functions, classes, andmodules in the `Sorted Containers`_ package.- `Sorted List`_- `Sorted Dict`_- `Sorted Set`_.. _`Sorted List`: http://www.grantjenks.com/docs/sortedcontainers/sortedlist.html.. _`Sorted Dict`: http://www.grantjenks.com/docs/sortedcontainers/sorteddict.html.. _`Sorted Set`: http://www.grantjenks.com/docs/sortedcontainers/sortedset.htmlTalks------ `Python Sorted Collections | PyCon 2016 Talk`_- `SF Python Holiday Party 2015 Lightning Talk`_- `DjangoCon 2015 Lightning Talk`_.. _`Python Sorted Collections | PyCon 2016 Talk`: http://www.grantjenks.com/docs/sortedcontainers/pycon-2016-talk.html.. _`SF Python Holiday Party 2015 Lightning Talk`: http://www.grantjenks.com/docs/sortedcontainers/sf-python-2015-lightning-talk.html.. _`DjangoCon 2015 Lightning Talk`: http://www.grantjenks.com/docs/sortedcontainers/djangocon-2015-lightning-talk.htmlResources---------- `Sorted Containers Documentation`_- `Sorted Containers at PyPI`_- `Sorted Containers at Github`_- `Sorted Containers Issue Tracker`_.. _`Sorted Containers Documentation`: http://www.grantjenks.com/docs/sortedcontainers/.. _`Sorted Containers at PyPI`: https://pypi.org/project/sortedcontainers/.. _`Sorted Containers at Github`: https://github.com/grantjenks/python-sortedcontainers.. _`Sorted Containers Issue Tracker`: https://github.com/grantjenks/python-sortedcontainers/issuesSorted Containers License-------------------------Copyright 2014-2019 Grant JenksLicensed under the Apache License, Version 2.0 (the &quot;License&quot;);you may not use this file except in compliance with the License.You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</longdescription>
</pkgmetadata>