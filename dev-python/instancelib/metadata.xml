<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**&lt;h3 align=&quot;center&quot;&gt;A generic dataset interface for Machine Learning models**&lt;/h3&gt;[![PyPI](https://img.shields.io/pypi/v/instancelib)](https://pypi.org/project/instancelib/)[![Python_version](https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue)](https://pypi.org/project/instancelib/)[![License](https://img.shields.io/pypi/l/instancelib)](https://www.gnu.org/licenses/lgpl-3.0.en.html)---`instancelib` provides a **generic architecture** for datasets. &amp;copy; Michiel Bron, 2021## Quick tour**Load dataset**: Load the dataset in an environment```pythonimport instancelib as iltext_env = il.read_excel_dataset(&quot;./datasets/testdataset.xlsx&quot;,                                  data_cols=[&quot;fulltext&quot;],                                  label_cols=[&quot;label&quot;])ds = text_env.dataset # A `dict-like` interface for instanceslabels = text_env.labels # An object that stores all labelslabelset = labels.labelset # All labels that can be given to instancesins = ds[20] # Get instance with identifier key  `20`ins_data = ins.data # Get the raw data for instance 20ins_vector = ins.vector # Get the vector representation for 20 if anyins_labels = labels.get_labels(ins)``` **Dataset manipulation**: Divide the dataset in a train and test set```pythontrain, test = text_env.train_test_split(ds, train_size=0.70)print(20 in train) # May be true or false, because of random sampling```**Train a model**:```pythonfrom sklearn.pipeline import Pipeline from sklearn.naive_bayes import MultinomialNB from sklearn.feature_extraction.text import TfidfTransformer, CountVectorizerpipeline = Pipeline([     ('vect', CountVectorizer()),     ('tfidf', TfidfTransformer()),     ('clf', MultinomialNB()),     ])model = il.SkLearnDataClassifier.build(pipeline, text_env)model.fit_provider(train, labels)predictions = model.predict(test)```## InstallationSee [installation.md](docs/installation.md) for an extended installation guide.| Method | Instructions ||--------|--------------|| `pip` | Install from [PyPI](https://pypi.org/project/instancelib/) via `pip install instancelib`. || Local | Clone this repository and install via `pip install -e .` or locally run `python setup.py install`.## DocumentationFull documentation of the latest version is provided at [https://instancelib.readthedocs.org](https://instancelib.readthedocs.org).## Example usageSee [usage.py](usage.py) to see an example of how the package can be used.## Releases`instancelib` is officially released through [PyPI](https://pypi.org/project/instancelib/).See [CHANGELOG.md](CHANGELOG.md) for a full overview of the changes for each version.## Citation```bibtex@misc{instancelib,  title = {Python package instancelib},  author = {Michiel Bron},  howpublished = {\url{https://github.com/mpbron/instancelib}},  year = {2021}}```## Library usageThis library is used in the following projects:- [python-allib](https://github.com/mpbron/allib). A typed Active Learning framework for Python for both Classification and Technology-Assisted Review systems.- [text_explainability](https://marcelrobeer.github.io/text_explainability/). A generic explainability architecture for explaining text machine learning models- [text_sensitivity](https://marcelrobeer.github.io/text_sensitivity/). Sensitivity testing (fairness &amp; robustness) for text machine learning models.## Maintenance### Contributors- [Michiel Bron](https://www.uu.nl/staff/MPBron) (`@mpbron`)### TodoTasks yet to be done:* Implement support for ONNX models* Implement support for Python DataLoaders* Make the external dataset interface more user friendly* Redesign LabelProvider to support more attribute levels* CI/CD tests</longdescription>
</pkgmetadata>