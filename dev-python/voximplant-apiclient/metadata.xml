<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Voximplant API client library=============================Version 1.0~~~~~~~~~~~Prerequisites-------------In order to use the Voximplant Python SDK, you need the following:#. A developer account. If you don't have one, `sign up here &lt;https://voximplant.com/sign-up/&gt;`_.#. A private API key. There are 2 options to obtain it:    #. Either generate it in the `Voximplant Control panel &lt;https://manage.voximplant.com/settings/service_accounts&gt;`_   #. Or call the `CreateKey &lt;https://voximplant.com/docs/references/httpapi/managing_role_system#createkey&gt;`_ HTTP API method with the specified `authentication parameters &lt;https://voximplant.com/docs/references/httpapi/auth_parameters&gt;`_. You'll receive a response with the **result** field in it. Save the **result** value in a file (since we don't store the keys, save it securely on your side).#. Python 2.x or 3.x runtime with ``pip`` and ``setuptools``\ &gt;=18.5 installedHow to use----------Go to your project folder and install the SDK using ``pip``\ :.. code-block:: bash   python -m pip install --user voximplant-apiclientThen import the SDK in your script.. code-block:: python   from voximplant.apiclient import VoximplantAPINext, specify the path to the JSON service account file either in the constructor or using the environment.**constructor**\ :.. code-block:: python   api = VoximplantAPI(&quot;/path/to/credentials.json&quot;)**env**\ :.. code-block:: bash   export VOXIMPLANT_CREDENTIALS=/path/to/credentials.jsonExamples--------Start a scenario^^^^^^^^^^^^^^^^.. code-block:: python   from voximplant.apiclient import VoximplantAPI, VoximplantException   if __name__ == &quot;__main__&quot;:       api = VoximplantAPI(&quot;credentials.json&quot;)       # Start a scenario of the user 1       RULE_ID = 1       SCRIPT_CUSTOM_DATA = &quot;mystr&quot;       USER_ID = 1       try:           res = api.start_scenarios(RULE_ID, script_custom_data=SCRIPT_CUSTOM_DATA, user_id=USER_ID)           print(res)       except VoximplantException as e:           print(&quot;Error: {}&quot;.format(e.message))Send an SMS^^^^^^^^^^^.. code-block:: python   from voximplant.apiclient import VoximplantAPI, VoximplantException   if __name__ == &quot;__main__&quot;:       api = VoximplantAPI(&quot;credentials.json&quot;)       # Send the SMS with the &quot;Test message&quot; text from the phone number 447443332211 to the phone number 447443332212       SOURCE = &quot;447443332211&quot;       DESTINATION = &quot;447443332212&quot;       SMS_BODY = &quot;Test message&quot;       try:           res = api.send_sms_message(SOURCE, DESTINATION, SMS_BODY)           print(res)       except VoximplantException as e:           print(&quot;Error: {}&quot;.format(e.message))Get a call history item^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: python   from voximplant.apiclient import VoximplantAPI, VoximplantException   import pytz   import datetime   if __name__ == &quot;__main__&quot;:       api = VoximplantAPI(&quot;credentials.json&quot;)       # Get the first call session history record from the 2012-01-01 00:00:00 UTC to the 2014-01-01 00:00:00 UTC       FROM_DATE = datetime.datetime(2012, 1, 1, 0, 0, 0, pytz.utc)       TO_DATE = datetime.datetime(2014, 1, 1, 0, 0, 0, pytz.utc)       COUNT = 1       try:           res = api.get_call_history(FROM_DATE, TO_DATE, count=COUNT)           print(res)       except VoximplantException as e:           print(&quot;Error: {}&quot;.format(e.message))</longdescription>
</pkgmetadata>