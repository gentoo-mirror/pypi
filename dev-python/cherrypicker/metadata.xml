<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Cherrypicker------------*Flatten complex data.*``cherrypicker`` aims to make common ETL tasks (filtering data andrestructuring it into flat tables) easier, by taking inspiration from jQueryand applying it in a Pythonic way to generic data objects... code-block:: bash    pip install cherrypicker``cherrypicker`` provides a chainable filter and extraction interface toallow you to easily pick out objects from complex structures and place them ina flat table. It fills a similar role to jQuery in JavaScript, enabling you tonavigate complex structures without the need for lots of complex nested forloops or list comprehensions.Examples++++++++.. code-block:: python    &gt;&gt;&gt; from cherrypicker import CherryPicker    &gt;&gt;&gt; import json    &gt;&gt;&gt; with open('climate.json', 'r') as fp:    ...     data = json.load(fp)    &gt;&gt;&gt; picker = CherryPicker(data).. code-block:: python    &gt;&gt;&gt; picker['id', 'city'].get()    [[1, 'Amsterdam'], [2, 'Athens'], [3, 'Atlanta GA'], ...].. code-block:: python    &gt;&gt;&gt; picker(city='B*')['info'](    ...     population=lambda n: n &gt; 2000000,    ...     area=lambda a: a &lt; 2000    ... )['area', 'population'].get()    [[1568, 8300000], [891, 3700000], [203, 2800000]]More complex filtering and flattening of nested structures is possible. Learnmore in the documentation: https://cherrypicker.readthedocs.io.</longdescription>
</pkgmetadata>