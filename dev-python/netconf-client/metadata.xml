<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Build Status](https://github.com/ADTRAN/netconf_client/workflows/CI%20Checks/badge.svg)[![PyPI version](https://badge.fury.io/py/netconf-client.svg)](https://badge.fury.io/py/netconf-client)[![Documentation Status](https://readthedocs.org/projects/netconf-client/badge/?version=latest)](https://netconf-client.readthedocs.io/en/latest/?badge=latest)# netconf_clientA NETCONF client for Python 3.6+.## Basic Usage```pythonfrom netconf_client.connect import connect_sshfrom netconf_client.ncclient import Managersession = connect_ssh(host=&quot;localhost&quot;, port=830, username=&quot;admin&quot;, password=&quot;password&quot;)mgr = Manager(session, timeout=120)mgr.edit_config(config=&quot;&quot;&quot;&lt;config&gt; ... &lt;/config&gt;&quot;&quot;&quot;)print(mgr.get(filter=&quot;&quot;&quot;&lt;filter&gt; ... &lt;/filter&gt;&quot;&quot;&quot;).data_xml)```More complete documentation can be found in the [User Guide]## Comparison with `ncclient`Compared to [ncclient](https://github.com/ncclient/ncclient),`netconf_client` has several advantages: - It's simpler (at the time of writing: 789 LoC vs 2889 LoC) - lxml can be bypassed, which can work around issues where lxml   breaks namespaces of e.g. identityrefs - Support for TLS sessionsAnd a few disadvantages: - Support for non-RFC-compliant devices isn't really included in   `netconf_client` - `netconf_client` does a lot less error checking and assumes you're   sending valid messages to the server (however this can be useful   for testing edge-case behavior of a server)[User Guide]: https://netconf-client.readthedocs.io/en/latest/</longdescription>
</pkgmetadata>