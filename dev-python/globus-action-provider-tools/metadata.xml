<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Action Provider Tools Introduction==================================.. image:: https://github.com/globus/action-provider-tools/workflows/Action%20Provider%20Tools%20CI/badge.svg   :target: https://github.com/globus/action-provider-tools/workflows/Action%20Provider%20Tools%20CI/badge.svg   :alt: CI Status.. image:: https://readthedocs.org/projects/action-provider-tools/badge/?version=latest   :target: https://action-provider-tools.readthedocs.io/en/latest/?badge=latest   :alt: Documentation Status.. image:: https://badge.fury.io/py/globus-action-provider-tools.svg    :target: https://badge.fury.io/py/globus-action-provider-tools    :alt: PyPi Package.. image:: https://img.shields.io/pypi/pyversions/globus-action-provider-tools    :target: https://pypi.org/project/globus-action-provider-tools/    :alt: Compatible Python Versions.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/globus/action-provider-tools/workflows/Action%20Provider%20Tools%20CI/badge.svg    :alt: Code StyleThis is an experimental toolkit to help developers build Action Providers foruse in Globus Automate including for invocation via Globus Flows.As this is experimental, no support is implied or provided for any sort of useof this package. It is published for ease of distribution among those planningto use it for its intended, experimental, purpose.Basic Usage-----------Install the base toolkit with ``pip install globus_action_provider_tools``You can then import the toolkit's standalone components from``globus_action_provider_tools``. This is useful in instances where you want touse pieces of the library to perform a function (such as token validation viathe TokenChecker or API schema validation via the ActionStatus or ActionRequest)and plug into other web frameworks... code-block:: python    from flask import Flask    from globus_action_provider_tools import ActionProviderDescription    description = ActionProviderDescription(        globus_auth_scope=&quot;https://auth.globus.org/scopes/00000000-0000-0000-0000-000000000000/action_all&quot;,        title=&quot;My Action Provider&quot;,        admin_contact=&quot;support@example.org&quot;,        synchronous=True,        input_schema={            &quot;$id&quot;: &quot;whattimeisitnow.provider.input.schema.json&quot;,            &quot;$schema&quot;: &quot;http://json-schema.org/draft-07/schema#&quot;,            &quot;title&quot;: &quot;Exmaple Action Provider&quot;,            &quot;type&quot;: &quot;object&quot;,            &quot;properties&quot;: {&quot;message&quot;: {&quot;type&quot;: &quot;string&quot;}},            &quot;required&quot;: [&quot;message&quot;],            &quot;additionalProperties&quot;: False,        },        api_version=&quot;1.0&quot;,        subtitle=&quot;Just an example&quot;,        description=&quot;&quot;,        keywords=[&quot;example&quot;, &quot;testing&quot;],        visible_to=[&quot;public&quot;],        runnable_by=[&quot;all_authenticated_users&quot;],        administered_by=[&quot;support@example.org&quot;],    )To install the Flask helpers as well for use specifically in developing Flaskbased Action Providers, install this library using ``pip installglobus_action_provider_tools[flask]``Reporting Issues----------------If you're experiencing a problem using globus_action_provider_tools, or have anidea for how to improve the toolkit, please open an issue in the repository andshare your feedback.Testing, Development, and Contributing--------------------------------------Welcome and thank you for taking the time to contribute!The ``globus_action_provider_tools`` package is developed using poetry so to getstarted you'll need to install `poetry &lt;https://python-poetry.org/&gt;`_. Onceinstalled, clone the repository and run ``make install`` to install the packageand its dependencies locally in a virtual environment (typically ``.venv``).And that's it, you're ready to dive in and make code changes. Once you'resatisfied with your changes, be sure to run ``make autoformat`` to run theproject's autoformatters on your changes and ``make test`` to validate thereare no breaking changes introduced. Both these steps must be run for us toaccept incoming changes. Once you feel your work is ready to be submitted, feelfree to create a PR.PyPi Releases-------------Please follow the steps below when creating a new release of the toolkit:- Create a new release branch    - git checkout -b release/X.Y.Z- Update the project's dependencies    - poetry update- Update the project version (follow semantic versioning) in pyproject.toml    - poetry version patch|minor|major- Update the project version in `globus_action_provider_tools/__init__.py`- Create a pull request into the main branch, wait for CI tests to complete- Merge the passing pull request- Create and publish a git tag for the new release    - git tag v$(poetry version -s)    - git push --tags- Create a new GH release that references the recently created tag. Provide  release notes with information on the changeset. Once the release is created,  there's a GH workflow that will build the toolkit and publish it to pypi.Links-----| Full Documentation: https://action-provider-tools.readthedocs.io| Rendered Redoc: https://globus.github.io/action-provider-tools/| Source Code: https://github.com/globus/action-provider-tools| Release History + Changelog: https://github.com/globus/action-provider-tools/releases</longdescription>
</pkgmetadata>