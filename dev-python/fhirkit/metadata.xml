<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># FHIRkit[![PyPI version](https://badge.fury.io/py/FHIRkit.svg)](https://badge.fury.io/py/FHIRkit)Handle FHIR resources in a more efficient, and pythonic way## Why FHIRKitFHIRKit is a wrapper around [Pydantic](https://github.com/samuelcolvin/pydantic) that will help you parse FHIR JSON data. It comes with some utility functions to display resources ðŸ‘€ and validate codes in those resources âœ….After implementing calls to terminology servers over and over again ðŸ˜¥, we realized that Python developpers and data scientists want code like this:```pythontarget_code = SCTCoding(code=&quot;298364001&quot;)vs = target_code.descendants() # create a valueset by retrieving all descendants of a SNOMED-CT codeobs = Observation.parse_file(&quot;my_observation.json&quot;)assert obs.code in vs, f&quot;Observation has an invalid code={obs.code}, please provide a {target_code}&quot;## AssertionError# Observation has an invalid code=&quot;55406008 | Hyperalgesia |&quot;, please provide a &quot;298364001 | Finding of head region |&quot;```Calls to terminology servers are handled for you and boilerplate code is reduced to simple Python operations ðŸŽ‰.**The goals of this package in a nutshell:**- Parse FHIR/JSON(https://build.fhir.org/json.html) resources using predefined Pydantic models. These models automatically handle all inconveniences like [choice data types](https://www.hl7.org/fhir/formats.html#choice)s and datetime parsing for you.- Perform validations and lookups for `code`, `coding`, `CodeableConcept` elements and expand `ValueSets` resources in a _pythonic_ way.- Make FHIR Resources and FHIR Elements readable when printing them in the command-line or displaying them in a Jupyter Notebook. FHIRkit has some handy defaults for `__str__ `, `__repr__` and `__repr_html__` that take care of your development and debug experience. No huge nested dicts in your terminal or notebook.- Turn a bunch of FHIR resources with the same type in a [FHIR DataFrame](https://github.com/Tiro-health/fhir-dataframes) _(still under development)_</longdescription>
</pkgmetadata>