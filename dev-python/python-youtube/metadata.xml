<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python YouTubeA Python wrapper around for YouTube Data API V3... image:: https://github.com/sns-sdks/python-youtube/workflows/Test/badge.svg    :target: https://github.com/sns-sdks/python-youtube/actions.. image:: https://img.shields.io/badge/Docs-passing-brightgreen    :target: https://sns-sdks.github.io/python-youtube/    :alt: Documentation Status.. image:: https://codecov.io/gh/sns-sdks/python-youtube/branch/master/graph/badge.svg    :target: https://codecov.io/gh/sns-sdks/python-youtube.. image:: https://img.shields.io/pypi/v/python-youtube.svg    :target: https://img.shields.io/pypi/v/python-youtube======THANKS======Inspired by `Python-Twitter &lt;https://github.com/bear/python-twitter&gt;`_.Thanks a lot for Python-Twitter Developers.============Introduction============Library provides an easy way to use YouTube Data API V3...     Recently, we are working on the new structure for the library. `Read docs &lt;docs/docs/introduce-new-structure.md&gt;`_ to get more detail.=============Documentation=============You can view the latest ``python-youtube`` documentation at: https://sns-sdks.github.io/python-youtube/.Also view the full ``YouTube DATA API`` docs at: https://developers.google.com/youtube/v3/docs/.==========Installing==========You can install this lib from PyPI:.. code:: shell    pip install --upgrade python-youtube    # ‚ú®üç∞‚ú®=====Using=====The API is exposed via the ``pyyoutube.Api`` class.-----------INSTANTIATE-----------There provide two method to create instance the ``pyyoutube.Api``.You can just initialize with an api key:.. code-block:: python    &gt;&gt;&gt; from pyyoutube import Api    &gt;&gt;&gt; api = Api(api_key=&quot;your api key&quot;)If you want to get some authorization data. you need to initialize with an access token:.. code-block:: python    &gt;&gt;&gt; from pyyoutube import Api    &gt;&gt;&gt; api = Api(access_token='your api key')You can read the docs to see how to get an access token.Or you can ask for user to do oauth flow:.. code-block:: python    &gt;&gt;&gt; from pyyoutube import Api    &gt;&gt;&gt; api = Api(client_id=&quot;client key&quot;, client_secret=&quot;client secret&quot;)    # Get authorization url    &gt;&gt;&gt; api.get_authorization_url()    ('https://accounts.google.com/o/oauth2/v2/auth?response_type=code&amp;client_id=id&amp;redirect_uri=https%3A%2F%2Flocalhost%2F&amp;scope=scope&amp;state=PyYouTube&amp;access_type=offline&amp;prompt=select_account', 'PyYouTube')    # user to do    # copy the response url    &gt;&gt;&gt; api.generate_access_token(authorization_response=&quot;link for response&quot;)    AccessToken(access_token='token', expires_in=3599, token_type='Bearer')Now you can use the instance to get data from YouTube.------------CHANNEL DATA------------The library provides several ways to get channel's data.If a channel is not found, the property ``items`` will return with blank list.You can use channel id:.. code-block:: python    &gt;&gt;&gt; channel_by_id = api.get_channel_info(channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw&quot;)    &gt;&gt;&gt; channel_by_id.items    [Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw')]    &gt;&gt;&gt; channel_by_id.items[0].to_dict()    {'kind': 'youtube#channel',     'etag': '&quot;j6xRRd8dTPVVptg711_CSPADRfg/AW8QEqbNRoIJv9KuzCIg0CG6aJA&quot;',     'id': 'UC_x5XG1OV2P6uZZ5FSM9Ttw',     'snippet': {'title': 'Google Developers',      'description': 'The Google Developers channel features talks from events, educational series, best practices, tips, and the latest updates across our products and platforms.',      'customUrl': 'googlecode',      'publishedAt': '2007-08-23T00:34:43.000Z',      'thumbnails': {'default': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s88-c-k-c0xffffffff-no-rj-mo',        'width': 88,        'height': 88},       'medium': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s240-c-k-c0xffffffff-no-rj-mo',        'width': 240,        'height': 240},       'high': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s800-c-k-c0xffffffff-no-rj-mo',        'width': 800,        'height': 800},       'standard': None,       'maxres': None},      'defaultLanguage': None,      'localized': {'title': 'Google Developers',       'description': 'The Google Developers channel features talks from events, educational series, best practices, tips, and the latest updates across our products and platforms.'},      'country': 'US'},      ...      }You can pass a channel id with comma-separated id string or a list, tuple or set of ids to get multiple channels.Many methods also provide this functionality.with ids:.. code-block:: python    &gt;&gt;&gt; channel_by_ids = api.get_channel_info(channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw,UCa-vrCLQHviTOVnEKDOdetQ&quot;)    &gt;&gt;&gt; channel_by_ids.items    [Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw'),     Channel(kind='youtube#channel', id='UCa-vrCLQHviTOVnEKDOdetQ')]You can also use channel name:.. code-block:: python    &gt;&gt;&gt; channel_by_username = api.get_channel_info(for_username=&quot;GoogleDevelopers&quot;)    &gt;&gt;&gt; channel_by_username.items[0]    Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw')If you have authorized, you can get your channels:.. code-block:: python    &gt;&gt;&gt; channel_by_mine = api_with_authorization.get_channel_info(mine=True)    &gt;&gt;&gt; channel_by_mine.items[0]    Channel(kind='youtube#channel', id='UCa-vrCLQHviTOVnEKDOdetQ').. note::    To get your channel, you must do authorization first, otherwise you will get an error.--------PLAYLIST--------There are methods to get playlists by playlist id, channel id or get your own playlists.Get playlists by id:.. code-block:: python    &gt;&gt;&gt; playlists_by_id = api.get_playlist_by_id(playlist_id=&quot;PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw&quot;)    &gt;&gt;&gt; playlists_by_id.items    [Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw')]Get playlists by channel (If you want to get all of atarget channel's playlists, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; playlists_by_channel = api.get_playlists(channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw&quot;)    &gt;&gt;&gt; playlists_by_channel.items    [Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw'),     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIJO83u2UmyC8ud41AvUnhgj'),     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsILfV1LiUhDjbh1jkFjQWrYB'),     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKNr3Wfhm8o0TSojW7hEPPY'),     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIJ8ItHmK4bRlY4GCzMgXLAJ')]Get your playlists(this requires authorization):.. code:: python    playlists_by_mine = api.get_playlists(mine=True)-------------PLAYLIST ITEM-------------Similarly, you can get playlist items by playlist item id or playlist id.Get playlist items by id:.. code-block:: python    &gt;&gt;&gt; playlist_item_by_id = api.get_playlist_item_by_id(playlist_item_id=&quot;UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA&quot;    ...     &quot;1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2&quot;)    &gt;&gt;&gt; playlist_item_by_id.items    [PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2')]Get playlist items by playlist id (If you want to get target playlist all items, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; playlist_item_by_playlist = api.get_playlist_items(playlist_id=&quot;PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw&quot;, count=2)    &gt;&gt;&gt; playlist_item_by_playlist.items    [PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2'),     PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy4yODlGNEE0NkRGMEEzMEQy')]    &gt;&gt;&gt; playlist_item_by_id.items[0].snippet.resourceId    ResourceId(kind='youtube#video', videoId='CvTApw9X8aA')-----VIDEO-----You can get a video's information by several methods.Get videos by video id(s):.. code-block:: python    &gt;&gt;&gt; video_by_id = api.get_video_by_id(video_id=&quot;CvTApw9X8aA&quot;)    &gt;&gt;&gt; video_by_id    VideoListResponse(kind='youtube#videoListResponse')    &gt;&gt;&gt; video_by_id.items    [Video(kind='youtube#video', id='CvTApw9X8aA')]Get videos by chart (If you want to get all videos, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; video_by_chart = api.get_videos_by_chart(chart=&quot;mostPopular&quot;, region_code=&quot;US&quot;, count=2)    &gt;&gt;&gt; video_by_chart.items    [Video(kind='youtube#video', id='RwnN2FVaHmw'),     Video(kind='youtube#video', id='hDeuSfo_Ys0')]Get videos by your rating (this requires authorization, also if you want to get all videos, just provide the parameter ``count=None``):.. code:: python    videos_by_rating = api.get_videos_by_myrating(rating=&quot;like&quot;, count=2)--------------COMMENT THREAD--------------You can get comment thread information by id or some filter.Get comment thread by id(s):.. code-block:: python    &gt;&gt;&gt; ct_by_id = api.get_comment_thread_by_id(comment_thread_id='Ugz097FRhsQy5CVhAjp4AaABAg,UgzhytyP79_Pwa    ... Dd4UB4AaABAg')    &gt;&gt;&gt; ct_by_id.items    [CommentThread(kind='youtube#commentThread', id='Ugz097FRhsQy5CVhAjp4AaABAg'),     CommentThread(kind='youtube#commentThread', id='UgzhytyP79_PwaDd4UB4AaABAg')]Get all comment threads related to a channel (including comment threads for the channel's video, also if you want to get all comment threads, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; ct_by_all = api.get_comment_threads(all_to_channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw&quot;, count=2)    &gt;&gt;&gt; ct_by_all.items    [CommentThread(kind='youtube#commentThread', id='UgwlB_Cza9WtzUWahYN4AaABAg'),     CommentThread(kind='youtube#commentThread', id='UgyvoQJ2LsxCBwGEpMB4AaABAg')]Get comment threads only for the channel (If you want to get all comment threads, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; ct_by_channel = api.get_comment_threads(channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw&quot;, count=2)    &gt;&gt;&gt; ct_by_channel.items    [CommentThread(kind='youtube#commentThread', id='UgyUBI0HsgL9emxcZpR4AaABAg'),     CommentThread(kind='youtube#commentThread', id='Ugzi3lkqDPfIOirGFLh4AaABAg')]Get comment threads only for the video (If you want to get all comment threads, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; ct_by_video = api.get_comment_threads(video_id=&quot;D-lhorsDlUQ&quot;, count=2)    &gt;&gt;&gt; ct_by_video.items    [CommentThread(kind='youtube#commentThread', id='UgydxWWoeA7F1OdqypJ4AaABAg'),     CommentThread(kind='youtube#commentThread', id='UgxKREWxIgDrw8w2e_Z4AaABAg')]-------COMMENT-------You can get comment information by id or use the top-level comment id to get replies... note::    The reply has the same structure as a comment.Get comments by id(s):.. code-block:: python    &gt;&gt;&gt; comment_by_id = api.get_comment_by_id(comment_id='UgxKREWxIgDrw8w2e_Z4AaABAg,UgyrVQaFfEdvaSzstj14Aa    ... ABAg')    &gt;&gt;&gt; comment_by_id.items    [Comment(kind='youtube#comment', id='UgxKREWxIgDrw8w2e_Z4AaABAg', snippet=CommentSnippet(authorDisplayName='Hieu Nguyen', likeCount=0)),     Comment(kind='youtube#comment', id='UgyrVQaFfEdvaSzstj14AaABAg', snippet=CommentSnippet(authorDisplayName='Mani Kanta', likeCount=0))]Get replies by comment id (If you want to get all comments, just provide the parameter ``count=None``):.. code-block:: python    &gt;&gt;&gt; comment_by_parent = api.get_comments(parent_id=&quot;UgwYjZXfNCUTKPq9CZp4AaABAg&quot;)    &gt;&gt;&gt; comment_by_parent.items    [Comment(kind='youtube#comment', id='UgwYjZXfNCUTKPq9CZp4AaABAg.8yxhlQJogG18yz_cXK9Kcj', snippet=CommentSnippet(authorDisplayName='Marlon L√≥pez', likeCount=0))]--------------VIDEO CATEGORY--------------You can get video category with id or region.Get video categories with id(s):.. code-block:: python    &gt;&gt;&gt; video_category_by_id = api.get_video_categories(category_id=&quot;17,18&quot;)    &gt;&gt;&gt; video_category_by_id.items    [VideoCategory(kind='youtube#videoCategory', id='17'),     VideoCategory(kind='youtube#videoCategory', id='18')]Get video categories with region code:.. code-block:: python    &gt;&gt;&gt; video_categories_by_region = api.get_video_categories(region_code=&quot;US&quot;)    &gt;&gt;&gt; video_categories_by_region.items    [VideoCategory(kind='youtube#videoCategory', id='1'),     VideoCategory(kind='youtube#videoCategory', id='2'),     VideoCategory(kind='youtube#videoCategory', id='10'),     VideoCategory(kind='youtube#videoCategory', id='15'),     ...]-------------SUBSCRIPTIONS-------------You can get subscription information by id, by point channel, or your own... note::    If you want to get the subscriptions not set to public, you need do authorization first and get the access token.    You can see the demo `A demo for get my subscription &lt;examples/subscription.py&gt;`_.To get subscription info by id(s), this needs your token to have the permission for the subscriptions belonging to a channel or user:.. code-block:: python    &gt;&gt;&gt; r = api.get_subscription_by_id(    ...         subscription_id=[    ...             &quot;zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo&quot;,    ...             &quot;zqShTXi-2-Rya5uUxEp3ZsPI3fZrFQnSXNQCwvHBGGo&quot;])    &gt;&gt;&gt; r    SubscriptionListResponse(kind='youtube#subscriptionListResponse')    &gt;&gt;&gt; r.items    [Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo', snippet=SubscriptionSnippet(title='PyCon 2015', description='')),     Subscription(kind='youtube#subscription', id='zqShTXi-2-Rya5uUxEp3ZsPI3fZrFQnSXNQCwvHBGGo', snippet=SubscriptionSnippet(title='ikaros-life', description='This is a test channel.'))]Get your own subscriptions, this need you do authorization first or give the authorized access token:.. code-block:: python    &gt;&gt;&gt; r = api.get_subscription_by_me(    ...         mine=True,    ...         parts=[&quot;id&quot;, &quot;snippet&quot;],    ...         count=2    ... )    &gt;&gt;&gt; r    SubscriptionListResponse(kind='youtube#subscriptionListResponse')    &gt;&gt;&gt; r.items    [Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwtJ-Aho6DZeutqZiP4Q79Q', snippet=SubscriptionSnippet(title='Next Day Video', description='')),     Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo', snippet=SubscriptionSnippet(title='PyCon 2015', description=''))]Get public channel's subscriptions:.. code-block:: python    &gt;&gt;&gt; r = api.get_subscription_by_channel(    ...      channel_id=&quot;UCAuUUnT6oDeKwE6v1NGQxug&quot;,    ...      parts=&quot;id,snippet&quot;,    ...      count=2    ... )    &gt;&gt;&gt; r    SubscriptionListResponse(kind='youtube#subscriptionListResponse')    &gt;&gt;&gt; r.items    [Subscription(kind='youtube#subscription', id='FMP3Mleijt-52zZDGkHtR5KhwkvCcdQKWWWIA1j5eGc', snippet=SubscriptionSnippet(title='TEDx Talks', description=&quot;TEDx is an international community that organizes TED-style events anywhere and everywhere -- celebrating locally-driven ideas and elevating them to a global stage. TEDx events are produced independently of TED conferences, each event curates speakers on their own, but based on TED's format and rules.\n\nFor more information on using TED for commercial purposes (e.g. employee learning, in a film, or in an online course), please submit a media request using the link below.&quot;)),     Subscription(kind='youtube#subscription', id='FMP3Mleijt_ZKvy5M-HhRlsqI4wXY7VmP5g8lvmRhVU', snippet=SubscriptionSnippet(title='TED Residency', description='The TED Residency program is an incubator for breakthrough ideas. It is free and open to all via a semi-annual competitive application. Those chosen as TED Residents spend four months at TED headquarters in New York City, working on their idea. Selection criteria include the strength of their idea, their character, and their ability to bring a fresh perspective and positive contribution to the diverse TED community.'))]----------ACTIVITIES----------You can get activities by channel id. You can also get your own activities after you have completed authorization.Get public channel activities:.. code-block:: python    &gt;&gt;&gt; r = api.get_activities_by_channel(channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw&quot;, count=2)    &gt;&gt;&gt; r    ActivityListResponse(kind='youtube#activityListResponse')    &gt;&gt;&gt; r.items    [Activity(kind='youtube#activity', id='MTUxNTc3NzM2MDAyODIxOTQxNDM0NjAwMA==', snippet=ActivitySnippet(title='2019 Year in Review - The Developer Show', description='Here to bring you the latest developer news from across Google this year is Developer Advocate Timothy Jordan. In this last week of the year, we‚Äôre taking a look back at some of the coolest and biggest announcements we covered in 2019! \n\nFollow Google Developers on Instagram ‚Üí https://goo.gle/googledevs\n\nWatch more #DevShow ‚Üí https://goo.gle/GDevShow\nSubscribe to Google Developers ‚Üí https://goo.gle/developers')),     Activity(kind='youtube#activity', id='MTUxNTc3MTI4NzIzODIxOTQxNDM0NzI4MA==', snippet=ActivitySnippet(title='GDE Promo - Lara Martin', description='Meet Lara Martin, a Flutter/Dart Google Developers Expert and get inspired by her journey. Watch now for a preview of her story! #GDESpotlights #IncludedWithGoogle\n\nLearn about the GDE program ‚Üí https://goo.gle/2qWOvAy\n\nGoogle Developers Experts ‚Üí https://goo.gle/GDE\nSubscribe to Google Developers ‚Üí https://goo.gle/developers'))]Get your activities:.. code-block:: python    &gt;&gt;&gt; r = api_with_token.get_activities_by_me()    &gt;&gt;&gt; r.items    [Activity(kind='youtube#activity', id='MTUxNTc0OTk2MjI3NDE0MjYwMDY1NjAwODA=', snippet=ActivitySnippet(title='ÂçéÂ±±Êó•Âá∫', description='ÂÜ∑ÂÜ∑ÁöÑÂ±±Â§¥')),     Activity(kind='youtube#activity', id='MTUxNTc0OTk1OTAyNDE0MjYwMDY1NTc2NDg=', snippet=ActivitySnippet(title='Êµ∑‰∏äÊó•Âá∫', description='ÁæéÁæéÁæé'))]Get your video captions:.. code-block:: python    &gt;&gt;&gt; r = api.get_captions_by_video(video_id=&quot;oHR3wURdJ94&quot;, parts=[&quot;id&quot;, &quot;snippet&quot;])    &gt;&gt;&gt; r    CaptionListResponse(kind='youtube#captionListResponse')    &gt;&gt;&gt; r.items    [Caption(kind='youtube#caption', id='SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:40:49.981Z')),     Caption(kind='youtube#caption', id='fPMuDm722CIRcUAT3NTPQHQZJZJxt39kU7JvrHk8Kzs=', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:39:46.991Z'))]If you already have caption id(s), you can get video caption by id(s):.. code-block:: python    &gt;&gt;&gt; r = api.get_captions_by_video(video_id=&quot;oHR3wURdJ94&quot;, parts=[&quot;id&quot;, &quot;snippet&quot;], caption_id=&quot;SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I&quot;)    &gt;&gt;&gt; r    CaptionListResponse(kind='youtube#captionListResponse')    &gt;&gt;&gt; r.items    [Caption(kind='youtube#caption', id='SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:40:49.981Z'))]----------------CHANNEL SECTIONS----------------You can get channel sections by self id or belonged channel id or your own channel.Get channel sections by channel id:.. code-block:: python    &gt;&gt;&gt; r = api.get_channel_sections_by_channel(channel_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw&quot;)    &gt;&gt;&gt;&gt; r    ChannelSectionResponse(kind='youtube#channelSectionListResponse')    &gt;&gt;&gt; r.items    [ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.B8DTd9ZXJqM'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.MfvRjkWLxgk'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.fEjJOXRoWwg'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.PvTmxDBxtLs'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.pmcIOsL7s98'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.c3r3vYf9uD0'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.ZJpkBl-mXfM'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.9_wU0qhEPR8'),     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.npYvuMz0_es')]Get authorized user's channel sections:.. code-block:: python    &gt;&gt;&gt; r = api.get_channel_sections_by_channel(mine=True)    &gt;&gt;&gt; r.items    [ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.jNQXAC9IVRw'),     ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.LeAltgu_pbM'),     ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.nGzAI5pLbMY')]Get channel section detail info by id:.. code-block:: python    &gt;&gt;&gt; r = api.get_channel_section_by_id(section_id=&quot;UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE&quot;)    &gt;&gt;&gt; r    ChannelSectionResponse(kind='youtube#channelSectionListResponse')    &gt;&gt;&gt; r1.items    [ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE')]-------------I18N RESOURCE-------------You can get a list of content regions that the YouTube website supports:.. code-block:: python    &gt;&gt;&gt; r = api.get_i18n_regions(parts=[&quot;snippet&quot;])    &gt;&gt;&gt; r.items    [I18nRegion(kind='youtube#i18nRegion', id='DZ', snippet=I18nRegionSnippet(gl='DZ', name='Algeria')),     I18nRegion(kind='youtube#i18nRegion', id='AR', snippet=I18nRegionSnippet(gl='AR', name='Argentina')),     I18nRegion(kind='youtube#i18nRegion', id='AU', snippet=I18nRegionSnippet(gl='AU', name='Australia'))     ...]You can get a list of application languages that the YouTube website supports:.. code-block:: python    &gt;&gt;&gt; r = api.get_i18n_languages(parts=[&quot;snippet&quot;])    &gt;&gt;&gt; r.items    [I18nLanguage(kind='youtube#i18nLanguage', id='af', snippet=I18nLanguageSnippet(hl='af', name='Afrikaans')),     I18nLanguage(kind='youtube#i18nLanguage', id='az', snippet=I18nLanguageSnippet(hl='az', name='Azerbaijani')),     I18nLanguage(kind='youtube#i18nLanguage', id='id', snippet=I18nLanguageSnippet(hl='id', name='Indonesian')),     ...]-------MEMBER-------The API request must be authorized by the channel owner.You can retrieve a list of members (formerly known as &quot;sponsors&quot;) for a channel:.. code-block:: python    &gt;&gt;&gt; r = api_with_token.get_members(parts=[&quot;snippet&quot;])    &gt;&gt;&gt; r.items    [MemberListResponse(kind='youtube#memberListResponse'),     MemberListResponse(kind='youtube#memberListResponse')]----------------MEMBERSHIP LEVEL----------------The API request must be authorized by the channel owner.You can retrieve a list membership levels for a channel:.. code-block:: python    &gt;&gt;&gt; r = api_with_token.get_membership_levels(parts=[&quot;snippet&quot;])    &gt;&gt;&gt; r.items    [MembershipsLevelListResponse(kind='youtube#membershipsLevelListResponse'),     MembershipsLevelListResponse(kind='youtube#membershipsLevelListResponse')]-------------------------VIDEO ABUSE REPORT REASON-------------------------You can retrieve a list of reasons that can be used to report abusive videos:.. code-block:: python    &gt;&gt;&gt; r = api_with_token.get_video_abuse_report_reason(parts=[&quot;snippet&quot;])    &gt;&gt;&gt; r.items    [VideoAbuseReportReason(kind='youtube#videoAbuseReportReason'),     VideoAbuseReportReason(kind='youtube#videoAbuseReportReason')]------SEARCH------You can use those methods to search the video,playlist,channel data. For more info, you can see the `Search Request Docs &lt;https://developers.google.com/youtube/v3/docs/search/list&gt;`_ .You can search different type of resource with keywords:.. code-block:: python    &gt;&gt;&gt; r = api.search_by_keywords(q=&quot;surfing&quot;, search_type=[&quot;channel&quot;,&quot;video&quot;, &quot;playlist&quot;], count=5, limit=5)    &gt;&gt;&gt; r.items    [SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult')]You can search your app send videos:.. code-block:: python    &gt;&gt;&gt; r = api_with_token.search_by_developer(q=&quot;news&quot;, count=1)    &gt;&gt;&gt; r.items    [SearchResult(kind='youtube#searchResult')]You can search your videos:.. code-block:: python    &gt;&gt;&gt; r = api_with_token.search_by_mine(q=&quot;news&quot;, count=1)    &gt;&gt;&gt; r.items    [SearchResult(kind='youtube#searchResult')]Or you can build your request using the ``search`` method:.. code-block:: python    &gt;&gt;&gt; r = api.search(    ...     location=&quot;21.5922529, -158.1147114&quot;,    ...     location_radius=&quot;10mi&quot;,    ...     q=&quot;surfing&quot;,    ...     parts=[&quot;snippet&quot;],    ...     count=5,    ...     published_after=&quot;2020-02-01T00:00:00Z&quot;,    ...     published_before=&quot;2020-03-01T00:00:00Z&quot;,    ...     safe_search=&quot;moderate&quot;,    ...     search_type=&quot;video&quot;)    &gt;&gt;&gt; r.items    [SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult')]    &gt;&gt;&gt; r = api.search(    ...     event_type=&quot;live&quot;,    ...     q=&quot;news&quot;,    ...     count=3,    ...     parts=[&quot;snippet&quot;],    ...     search_type=&quot;video&quot;,    ...     topic_id=&quot;/m/09s1f&quot;,    ...     order=&quot;viewCount&quot;)    &gt;&gt;&gt; r.items    [SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult'),     SearchResult(kind='youtube#searchResult')]====TODO====The following apis are now available:- OAuth Flow- Channel Info- Playlist Info- PlaylistItem Info- Video Info- Comment Thread Info- Comment Info- Video Categories Info- Subscriptions Info- Activities Info- Captions Info- Channel Sections Info- Search Requests and simple usage.- Members Info- Membership Level InfoDoing- Update, Insert and so on.</longdescription>
</pkgmetadata>