<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![build](https://github.com/shubhamraj2202/stock-computing-service/actions/workflows/ci-tests.yml/badge.svg)[![codecov](https://codecov.io/gh/shubhamraj2202/stock-computing-service/branch/main/graph/badge.svg?token=ciJFM9MV99)](https://codecov.io/gh/shubhamraj2202/stock-computing-service)# Summary1. This project to Extract/Transform/Load Data from free API provider named [AlphaVantage](https://www.alphavantage.co/documentation/) in to a Database2. Provides API service to sync the data, also retrieve from database and get statisttics # Tech Stack- Python for backend- FastAPI for runnning api services- Postgres Database- Docker to set up image for deployment and local development- GCP Kubernatess for provisioning of deployments/service# Setup project for development:`source setup.sh`# Run using command line:`uvicorn financial.main:app --host 0.0.0.0 --port 8000`- Go to Browser: http://0.0.0.0:8000/docs to test the APIs# Build Docker Image`docker image build -t stock-computing-service .``docker buildx build --platform linux/amd64 -f ./Dockerfile -t image .`# Run via Docker using any of the below options:1. `docker run stock-computing-service`2. `docker-compose up`# Upload to docker hub`docker tag stock-computing-service-app shubhamraj2202/stock-computing-service-app:latest`  `docker push shubhamraj2202/stock-computing-service-app:latest`# Delete from docker`docker rmi shubhamraj2202/stock-computing-service-app:latest`# DockerHubhttps://hub.docker.com/repository/docker/shubhamraj2202/stock-computing-service-app# PyPihttps://pypi.org/project/stock-computing-service/# Maintaining API keyFor local development, the API key can be accessed via environment variable `FINANCIAL_KEY`- Run `export FINANCIAL_KEY=&quot;YourAPIKEY&quot;` on shell.  For production environment, the API key should be stored in a secret management service like Vault, GCP Secret Manager /AWS# TODO Provision: Script to take initial setup of envInstall Google Cloud CLI https://cloud.google.com/sdk/docs/installgcloud initgcloud auth logingcloud auth application-default logingcloud components install gke-gcloud-auth-pluginexport GOOGLE_PROJECT=stock-computing-servicepulumi new gcp-pythonpulumi config set gcp:project stock-computing-servicepulumi config set gcp:region us-west1gcloud container clusters get-credentials gke-cluster-f0853e1 --zone us-west1-acd infrapulumi stack init dev## Reference: https://github.com/pulumi/examples/blob/master/gcp-py-gke/README.md</longdescription>
</pkgmetadata>