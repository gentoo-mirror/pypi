<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-lidarlite/badge/?version=latest    :target: https://docs.circuitpython.org/projects/lidarlite/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_LIDARLite/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_LIDARLite/actions/    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackA CircuitPython &amp; Python library for Garmin LIDAR Lite sensors over I2C**Does not work with Lidar Lite v4 at this time, no ETA when it may be added - PRs accepted!**Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Installing from PyPI====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-lidarlite/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-lidarliteTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-lidarliteTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-lidarliteUsage Examples==============V3 Example----------.. code-block:: pythonimport timeimport boardimport busioimport adafruit_lidarlite# Create library object using our Bus I2C porti2c = busio.I2C(board.SCL, board.SDA)# Default configuration, with only i2c wiressensor = adafruit_lidarlite.LIDARLite(i2c)while True:        try:                # We print tuples so you can plot with Mu Plotter                print((sensor.distance,))        except RuntimeError as e:                # If we get a reading error, just print it and keep truckin'                print(e)        time.sleep(0.01) # you can remove this for ultra-fast measurements!V3 HP Example-------------.. code-block:: python    import time    import busio    import board    import adafruit_lidarlite    i2c = busio.I2C(board.SCL, board.SDA)    sensor = adafruit_lidarlite.LIDARLite(i2c, sensor_type=adafruit_lidarlite.TYPE_V3HP)    while True:        try:            print(f&quot;Sensor ID#: {sensor.unit_id}&quot;)            print(f&quot;Distance = {sensor.distance}&quot;)            print(f&quot;  Strength: {sensor.signal_strength}&quot;)        except RuntimeError as e:            print(e)        try:            print(f&quot;Status: 0b{sensor.status:b}&quot;)            print(f&quot;  Busy: {bool(sensor.status &amp; adafruit_lidarlite.STATUS_BUSY_V3HP)}&quot;)            print(f&quot;  Overflow: {bool(sensor.status &amp; adafruit_lidarlite.STATUS_SIGNAL_OVERFLOW_V3HP)}&quot;)            print(f&quot;  Health: 0b{sensor.health_status:b}&quot;)            print(f&quot;  Power Control: 0b{sensor.power_control:b}&quot;)            print(f&quot;  I2C Config: 0b{sensor.i2c_config:b}&quot;)            print(f&quot;  Test Command: 0b{sensor.test_command:b}&quot;)            print(f&quot;  Correlation: 0b{sensor.correlation_data}&quot;)        except RuntimeError as e:            print(e)        print()        time.sleep(1)Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/lidarlite/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_LIDARLite/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>