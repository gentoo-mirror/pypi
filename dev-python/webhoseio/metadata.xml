<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>webhose.io client for Python============================A simple way to access the [Webhose.io](https://webhose.io) API from your Python code```python    import webhoseio    webhoseio.config(token=YOUR_API_KEY)    output = webhoseio.query(&quot;filterWebData&quot;, {&quot;q&quot;:&quot;github&quot;})    print output['posts'][0]['text'] # Print the text of the first post    print output['posts'][0]['published'] # Print the text of the first post publication date        # Get the next batch of posts    output = webhoseio.get_next()    print output['posts'][0]['thread']['site'] # Print the site of the first post    ```API Key-------To make use of the webhose.io API, you need to obtain a token that would beused on every request. To obtain an API key, create an account athttps://webhose.io/auth/signup, and then go intohttps://webhose.io/dashboard to see your token.Installing----------You can install from source:``` bash    $ git clone https://github.com/Webhose/webhoseio-python    $ cd webhoseio-python    $ python setup.py install     ``` Or use pip install:  ``` bash    $ sudo pip install webhoseio ```  Use the API-----------To get started, you need to import the library, and set your access token.(Replace YOUR_API_KEY with your actual API key).```python    &gt;&gt;&gt; import webhoseio    &gt;&gt;&gt; webhoseio.config(token=YOUR_API_KEY)      ```**API Endpoints**The first parameter the query() function accepts is the API endpoint string. Available endpoints:* filterWebData - access to the news/blogs/forums/reviews API* productSearch - access to data about eCommerce products/services* darkWebAPI - access to the dark web (coming soon)Now you can make a request and inspect the results:```python    &gt;&gt;&gt; output = webhoseio.query(&quot;filterWebData&quot;, {&quot;q&quot;:&quot;github&quot;})    &gt;&gt;&gt; output['totalResults']    15565094    len(output['posts'])    100    &gt;&gt;&gt; output['posts'][0]['language']    u'english'    &gt;&gt;&gt; output['posts'][0]['title']    u'Putting quotes around dictionary keys in JS'```For your convenience, the ouput object is iterable, so you can loop over itand get all the results of this batch (up to 100). ```python    &gt;&gt;&gt; total_words = 0    &gt;&gt;&gt; for post in output['posts']:    ...     total_words += len(post['text'].split(&quot; &quot;))    ...    &gt;&gt;&gt; print(total_words)    8822```    Full documentation------------------* ``config(token)``  * token - your API key* ``query(end_point_str, params)``  * end_point_str:     * filterWebData - access to the news/blogs/forums/reviews API    * productSearch - access to data about eCommerce products/services    * darkWebAPI - access to the dark web (coming soon)  * params: A key value dictionary. The most common key is the &quot;q&quot; parameter that hold the filters Boolean query. [Read about the available filters](https://webhose.io/documentation).* ``get_next()`` - a method to fetch the next page of results.        Polling-------If you want to make repeated searches, performing an action whenever there arenew results, use code like this:``` python    r = webhoseio.query(&quot;filterWebData&quot;, {&quot;q&quot;:&quot;skyrim&quot;})    while True:        for post in r['posts']:            perform_action(post)        time.sleep(300)        r = webhoseio.get_next()```        </longdescription>
</pkgmetadata>