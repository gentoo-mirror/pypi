<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Fringes[![PyPI](https://img.shields.io/pypi/v/fringes)](https://pypi.org/project/fringes/)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/fringes)[![Read the Docs](https://img.shields.io/readthedocs/fringes)](https://fringes.readthedocs.io)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![PyPI - License](https://img.shields.io/pypi/l/fringes)](https://github.com/comimag/fringes/blob/main/LICENSE.txt)[![PyPI - Downloads](https://img.shields.io/pypi/dm/fringes)](https://pypistats.org/packages/fringes)![Liberapay receiving](https://img.shields.io/liberapay/receives/comimag.svg?logo=liberapay)[![Static Badge](https://img.shields.io/badge/liberapay-donate-yellow?logo=liberapay)](https://liberapay.com/comimag/donate)&lt;!---[![Liberapay](https://liberapay.com/assets/widgets/donate.svg)](https://liberapay.com/comimag/payment/)![GitHub top language](https://img.shields.io/github/languages/top/comimag/fringes)![GitHub issues](https://img.shields.io/github/issues/comimag/fringes)![GitHub](https://img.shields.io/github/license/comimag/fringes)---&gt;&lt;!---link to  paper, please cite---&gt;User-friendly tool to configure, encode and decode fringe patterns with phase shifting algorithms.![Coding Scheme](https://raw.githubusercontent.com/comimag/fringes/main/docs/getting_started/coding-scheme.gif)\Phase Shift Coding Scheme.## InstallationYou can install `fringes` directly from [PyPi](https://pypi.org/) via `pip`:```pip install fringes```## UsageYou instantiate, parameterize and deploy the `Fringes` class:```pythonimport fringes as frng  # import modulef = frng.Fringes()      # instantiate classf.glossary              # get glossaryf.X = 1920              # set width of the fringe patternsf.Y = 1080              # set height of the fringe patternsf.K = 2                 # set number of setsf.N = 4                 # set number of shiftsf.v = [9, 10]           # set spatial frequenciesf.T                     # get number of frames                            I = f.encode()          # encode fringe patternsA, B, x = f.decode(I)   # decode fringe patterns```All [parameters](https://fringes.readthedocs.io/en/latest/user_guide/params.html)are accesible by the respective attributes of the `Fringes` instance(a glossary of them is obtained by the attribute `glossary`).They are implemented as class properties (managed attributes).Note that some attributes have subdependencies, hence dependent attributes might change as well.Circular dependencies are resolved automatically.For generating the fringe pattern sequence `I`, use the method `encode()`.\It returns a [NumPy array](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html) in videoshape (frames `T`, width `X`, height `Y`, color channels `C`).For analyzing (recorded) fringe patterns, use the method `decode()`.\It returns the Numpy arrays brightness `A`, modulation `B` and coordinate `x`.&gt; Note:\For the compitationally expensive ``decoding`` we make use of the just-in-time compiler [Numba](https://numba.pydata.org/).During the first execution, an initial compilation is executed. This can take several tens of seconds up to single digit minutes, depending on your CPU.However, for any subsequent execution, the compiled code is cached and the code of the function runs much faster, approaching the speeds of code written in C.## Graphical User InterfaceDo you need a GUI? `Fringes` has a sister project which is called `Fringes-GUI`:https://pypi.org/project/fringes-gui/## DocumentationThe documentation can be found here:https://fringes.readthedocs.io## LicenseCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License</longdescription>
</pkgmetadata>