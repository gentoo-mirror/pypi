<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>id==&lt;!--- @begin-badges@ ---&gt;![CI](https://github.com/di/id/workflows/CI/badge.svg)[![PyPI version](https://badge.fury.io/py/id.svg)](https://pypi.org/project/id)[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/di/id/badge)](https://api.securityscorecards.dev/projects/github.com/di/id)[![SLSA](https://slsa.dev/images/gh-badge-level3.svg)](https://slsa.dev/)&lt;!--- @end-badges@ ---&gt;`id` is a Python tool for generating OIDC identities. It can automaticallydetect and produce OIDC credentials on an number of environments, including GitHub Actionsand Google Cloud.## Installation`id` requires Python 3.7 or newer, and can be installed directly via `pip`:```consolepython -m pip install id```## UsageYou can run `id` as a Python module via `python -m`:```consolepython -m id --help```Top-level:&lt;!-- @begin-id-help@ --&gt;```usage: id [-h] [-V] [-v] audiencea tool for generating OIDC identitiespositional arguments:  audience       the OIDC audience to useoptional arguments:  -h, --help     show this help message and exit  -V, --version  show program's version number and exit  -v, --verbose  run with additional debug logging; supply multiple times to                 increase verbosity (default: 0)```&lt;!-- @end-id-help@ --&gt;For Python API usage, there is a single importable function, `detect_credential`:```pycon&gt;&gt;&gt; from id import detect_credential&gt;&gt;&gt; detect_credential(audience='something')'&lt;OIDC token&gt;'```This function requires an `audience` parameter, which is used when generatingthe OIDC token. This should be set to the intended audience for the token.## Supported environments`id` currently supports ambient credential detection in the following environments:* [GitHub Actions](https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect)* Google Cloud  * [Cloud Run](https://cloud.google.com/run/docs/securing/service-identity)  * [Google Kubernetes Engine](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity)  * [Compute Engine](https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances)  * and more## Licensing`id` is licensed under the Apache 2.0 License.## ContributingSee [the contributing docs](https://github.com/di/id/blob/main/CONTRIBUTING.md) for details.### SLSA ProvenanceThis project emits a SLSA provenance on its release! This enables you to verify the integrityof the downloaded artifacts and ensured that the binary's code really comes from this source code.To do so, please follow the instructions [here](https://github.com/slsa-framework/slsa-github-generator#verification-of-provenance).</longdescription>
</pkgmetadata>