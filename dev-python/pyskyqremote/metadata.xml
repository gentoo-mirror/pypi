<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![CodeFactor](https://www.codefactor.io/repository/github/rogerselwyn/skyq_remote/badge)](https://www.codefactor.io/repository/github/rogerselwyn/skyq_remote)![GitHub release](https://img.shields.io/github/v/release/RogerSelwyn/skyq_remote) [![maintained](https://img.shields.io/maintenance/yes/2023.svg)](#)[![maintainer](https://img.shields.io/badge/maintainer-%20%40RogerSelwyn-blue.svg)](https://github.com/RogerSelwyn)[![Community Forum](https://img.shields.io/badge/community-forum-brightgreen.svg)](https://community.home-assistant.io/t/custom-component-skyq-media-player/140306)# pyskyqremotePython module for accessing SkyQ box and EPG, and sending commands## IntroductionThis library enables access to SkyQ devices, primarily focused on the UK, but should also work for Italy and Germany.## InstallingTo install:```pip install pyskyqremote```## Usage### Base```from pyskyqremote.skyq_remote import SkyQRemoteself.client = SkyQRemote('192.168.1.99')```Optional parameters:* epg_cache_len - Default = 20* port - Default = 49160* json_port - Default = 9006### Get device information```device = self.client.get_device_information()```Will return an object such as below for device informatiom:```{   'ASVersion':'Q112.000.21.00-AS_asdev',   'IPAddress':'192.168.1.22',   'countryCode':'GBR',   'usedCountryCode':'GBR',   'hardwareModel':'ES240',   'hardwareName':'Falcon',   'deviceType': 'GATEWAYSTB',   'gateway': true,   'gatewayIPAddress': '192.168.1.20',   'manufacturer':'Sky',   'modelNumber':'Q112.000.21.00L (53wk8j8)',   'serialNumber':'0627086857 2',   'versionNumber':'32B12D',   'bouquet': 4101,   'subbouquet': 9,   'wakeReason': 'ECO',   'systemUptime': 28346,   'hdrCapable': true,   'uhdCapable': true,   'presentLocalTimeOffset': 3600,   'utc': 1660486276,   'futureLocalTimeOffset': 0,   'futureTransitionUtc': 1667091599}```### Get device information (JSON)```device = self.client.get_device_information().as_json()```Will return a JSON structure such as below for device information:```{   &quot;__type__&quot;:&quot;__device__&quot;,   &quot;attributes&quot;:{      &quot;ASVersion&quot;:&quot;Q112.000.21.00-AS_asdev&quot;,      &quot;IPAddress&quot;:&quot;192.168.x.xx&quot;,      &quot;countryCode&quot;:&quot;GBR&quot;,      &quot;usedCountryCode&quot;:&quot;GBR&quot;,      &quot;hardwareModel&quot;:&quot;ES240&quot;,      &quot;hardwareName&quot;:&quot;Falcon&quot;,      &quot;deviceType&quot;: &quot;GATEWAYSTB&quot;,      &quot;gateway&quot;: true,      &quot;gatewayIPAddress&quot;: &quot;192.168.1.20&quot;,      &quot;manufacturer&quot;:&quot;Sky&quot;,      &quot;modelNumber&quot;:&quot;Q112.000.21.00L (53wk8j8)&quot;,      &quot;serialNumber&quot;:&quot;##########&quot;,      &quot;versionNumber&quot;:&quot;32B12D&quot;,      &quot;bouquet&quot;: 4101,      &quot;subbouquet&quot;: 9,      &quot;wakeReason&quot;: &quot;ECO&quot;,      &quot;systemUptime&quot;: 28346,      &quot;hdrCapable&quot;: true,      &quot;uhdCapable&quot;: true,      &quot;presentLocalTimeOffset&quot;: 3600,      &quot;utc&quot;: 1660486276,      &quot;futureLocalTimeOffset&quot;: 0,      &quot;futureTransitionUtc&quot;: 1667091599   }}```### Decode device information (JSON)```from pyskyqremote.media import device_decoderdevice = device_decoder(device_json)```Will decode the JSON structure to a python object.### Get power status```status = self.client.power_status()```Will return &quot;POWERED OFF&quot;, &quot;STANDBY or &quot;ON&quot;### Get current state```status = self.client.get_current_state()```Will return an object such as below with current transport status information (`state` is the same as the previously returned single attribute):```{    'CurrentTransportState':'PLAYING',    'CurrentTransportStatus':'OK',    'CurrentSpeed':'1',    'state':'PLAYING'}```### Get current state (JSON)```status = self.client.get_current_state().as_json()```Will return an object such as below with current transport status information (`state` is the same as the previously returned single attribute):```{   &quot;__type__&quot;:&quot;__transportinfo__&quot;,   &quot;attributes&quot;:{      &quot;CurrentTransportState&quot;:&quot;PLAYING&quot;,      &quot;CurrentTransportStatus&quot;:&quot;OK&quot;,      &quot;CurrentSpeed&quot;:&quot;1&quot;,      &quot;state&quot;:&quot;PLAYING&quot;}```### Get the active application```app = self.client.get_active_application()```Will return an object such as below for the running application name:```{   'appid':'com.bskyb.beehive',   'title':'Beehive Bedlam'}```### Get the active application (JSON)```app = self.client.get_active_application().as_json()```Will return a JSON structure such as below for the running application name:```{   &quot;__type__&quot;:&quot;__app__&quot;,   &quot;attributes&quot;:{      &quot;appid&quot;:&quot;com.bskyb.beehive&quot;,      &quot;title&quot;:&quot;Beehive Bedlam&quot;   }}```### Get current media```app = self.client.get_current_media()```Will return an object such as below for live programme:```{   'channel':'Sky Comedy HD',   'channelno':'153',   'image_url':'https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb1143.png',   'sid':1143,   'pvrid':None,   'live':True}```or for recording```{   'channel':None,   'channelno':'None',   'image_url':None,   'sid':None,   'pvrid':'P12345ABC'   'live':False}```### Get current media (JSON)```media = self.client.get_current_media().as_json()```Will return a JSON structure such as below for live programme:```{   &quot;__type__&quot;:&quot;__media__&quot;,   &quot;attributes&quot;:{      &quot;channel&quot;:&quot;BBC One South&quot;,      &quot;channelno&quot;:&quot;101&quot;,      &quot;image_url&quot;:&quot;https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png&quot;,      &quot;sid&quot;:2153,      &quot;pvrid&quot;:null,      &quot;live&quot;:true   }}```or for recording```{   &quot;__type__&quot;:&quot;__media__&quot;,   &quot;attributes&quot;:{      &quot;channel&quot;:null,      &quot;channelno&quot;:null,      &quot;image_url&quot;:null,      &quot;sid&quot;:null,      &quot;pvrid&quot;:&quot;P12345ABC&quot;,      &quot;live&quot;:false   }}```### Decode current media (JSON)```from pyskyqremote.media import media_decodermedia = media_decoder(media_json)```Will decode the JSON structure to a python object.### Get EPG information```epg = self.client.get_epg_data(sid, epgDate, days)```Will return an object with an array of events including the specified number of days. Defaults to 2 days.```{   'sid':2153,   'channelno':'101',   'channelname':'BBC One South',   'channelimage_url':'https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png',   'programmes':[      {         'progammeuuid':'57a11caf-1ebd-4c01-a40b-7fdfe5c5fad0',         'starttime':datetime.datetime(2020,4,16,21,50,tzinfo=datetime.timezone.utc),         'endtime':datetime.datetime(2020,4,16,22,50,tzinfo=datetime.timezone.utc),         'title':'New: Tonight Show Starring. Jimmy Fallon',         'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',         'season':7,         'episode':119,         'image_url':'https://images.metadata.sky.com/pd-image/57a11caf-1ebd-4c01-a40b-7fdfe5c5fad0/16-9',         'channelname':'BBC One South',         'status':'LIVE',         'eid':'E4b8-19b'      },      {         'progammeuuid':'d2d67048-673a-4ea8-8a32-3ad386e306d2',         'starttime':datetime.datetime(2020,4,16,22,50,tzinfo=datetime.timezone.utc),         'endtime':datetime.datetime(2020,4,16,23,50,tzinfo=datetime.timezone.utc),         'title':'New: Late Late Show With...',         'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',         'season':2020,         'episode':89,         'image_url':'https://images.metadata.sky.com/pd-image/d2d67048-673a-4ea8-8a32-3ad386e306d2/16-9',         'channelname':'BBC One South',         'status':'LIVE',         'eid':'E4b8-19b'      },      {...}   ]}```### Get EPG information (JSON)```epg = self.client.get_epg_data(sid, epgDate, days).as_json()```Will return a JSON structure with an array of events including the specified number of days. Defaults to 2 days.```{   &quot;__type__&quot;:&quot;__channel__&quot;,   &quot;attributes&quot;:{      &quot;sid&quot;:2153,      &quot;channelno&quot;:&quot;101&quot;,      &quot;channelname&quot;:&quot;BBC One South&quot;,      &quot;channelimage_url&quot;:&quot;https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png&quot;   },   &quot;programmes&quot;:[      {         &quot;__type__&quot;:&quot;__programme__&quot;,         &quot;attributes&quot;:{            &quot;programmeuuid&quot;:&quot;62ad0457-1a6a-4b45-9ef7-6e144639d734&quot;,            &quot;starttime&quot;:&quot;2020-04-27T21:45:00+0000&quot;,            &quot;endtime&quot;:&quot;2020-04-27T22:10:00+0000&quot;,            &quot;title&quot;:&quot;Man Like Mobeen&quot;,            &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,            &quot;season&quot;:3,            &quot;episode&quot;:5,            &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/62ad0457-1a6a-4b45-9ef7-6e144639d734/16-9&quot;,            &quot;channelname&quot;:&quot;BBC One South&quot;,            &quot;status&quot;:&quot;LIVE&quot;,            &quot;eid&quot;:&quot;E4b8-19b&quot;        }      },      {         &quot;__type__&quot;:&quot;__programme__&quot;,         &quot;attributes&quot;:{            &quot;programmeuuid&quot;:&quot;a975bdeb-c19b-4de2-9557-c6d2757bdae7&quot;,            &quot;starttime&quot;:&quot;2020-04-27T22:10:00+0000&quot;,            &quot;endtime&quot;:&quot;2020-04-27T22:50:00+0000&quot;,            &quot;title&quot;:&quot;Have I Got A Bit More News For You&quot;,            &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,            &quot;season&quot;:59,            &quot;episode&quot;:4,            &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/a975bdeb-c19b-4de2-9557-c6d2757bdae7/16-9&quot;,            &quot;channelname&quot;:&quot;BBC One South&quot;            &quot;status&quot;:&quot;LIVE&quot;,            &quot;eid&quot;:&quot;E4b8-19b&quot;         }      },      {...},   ]}```### Decode EPG information (JSON)```from pyskyqremote.channel import channel_decoderchannel = channel_decoder(channel_json)```Will decode the JSON structure to a python object.### Get programme at a point in time on a dayNote that at the end of a day, the programme may appear on the next day's schedule.```programme = self.client.get_programme_from_epg(sid, epgDate, queryDate)```Will return an object such as below:```{   'progammeuuid':'9fbdcefe-312c-4681-b996-00637e85313a',   'starttime':datetime.datetime(2020,4,17,8,30,tzinfo=datetime.timezone.utc),   'endtime':datetime.datetime(2020,4,17,9,0,tzinfo=datetime.timezone.utc),   'title':'Parks And Recreation',   'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',   'season':4,   'episode':5,   'image_url':'https://images.metadata.sky.com/pd-image/9fbdcefe-312c-4681-b996-00637e85313a/16-9',   'channelname':'Channel 5 HD',   'status':'LIVE',   'eid':'E4b8-19b'}```### Get programme at a point in time on a day (JSON)Note that at the end of a day, the programme may appear on the next day's schedule.```programme = self.client.get_programme_from_epg(sid, epgDate, queryDate).as_json()```Will return a JSON structure such as below:```{   &quot;__type__&quot;:&quot;__programme__&quot;,   &quot;attributes&quot;:{      &quot;programmeuuid&quot;:&quot;e11d9e93-0eec-4855-88f5-6ade9946d5dd&quot;,      &quot;starttime&quot;:&quot;2020-04-28T21:00:00+0000&quot;,      &quot;endtime&quot;:&quot;2020-04-28T21:30:00+0000&quot;,      &quot;title&quot;:&quot;BBC News at Ten&quot;,      &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,      &quot;season&quot;:null,      &quot;episode&quot;:null,      &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/e11d9e93-0eec-4855-88f5-6ade9946d5dd/16-9&quot;,      &quot;channelname&quot;:&quot;BBC ONE HD&quot;,      &quot;status&quot;:&quot;LIVE&quot;,      &quot;eid':&quot;E4b8-19b&quot;   }}```### Decode programme information (JSON)```from pyskyqremote.programme import programme_decoderprogramme = programme_decoder(programmeJSON)```### Get current live TV programme on a channel```currentTV = self.client.get_current_live_tv_programme(sid)```Will return an object such as below:```{   'progammeuuid':'9fbdcefe-312c-4681-b996-00637e85313a',   'starttime':datetime.datetime(2020,4,17,8,30,tzinfo=datetime.timezone.utc),   'endtime':datetime.datetime(2020,4,17,9,0,tzinfo=datetime.timezone.utc),   'title':'Parks And Recreation',   'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',   'season':4,   'episode':5,   'image_url':'https://images.metadata.sky.com/pd-image/9fbdcefe-312c-4681-b996-00637e85313a/16-9',   'channelname':'Channel 5 HD',   'status':'LIVE',   'eid':'E4b8-19b'}```### Get current live TV programme on a channel (JSON)```currentTV = self.client.get_current_live_tv_programme(sid).as_json()```Will return a JSON structure such as below:```{   &quot;__type__&quot;:&quot;__programme__&quot;,   &quot;attributes&quot;:{      &quot;programmeuuid&quot;:&quot;e11d9e93-0eec-4855-88f5-6ade9946d5dd&quot;,      &quot;starttime&quot;:&quot;2020-04-28T21:00:00+0000&quot;,      &quot;endtime&quot;:&quot;2020-04-28T21:30:00+0000&quot;,      &quot;title&quot;:&quot;BBC News at Ten&quot;,      &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,      &quot;season&quot;:null,      &quot;episode&quot;:null,      &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/e11d9e93-0eec-4855-88f5-6ade9946d5dd/16-9&quot;,      &quot;channelname&quot;:&quot;BBC ONE HD&quot;,      &quot;status&quot;:&quot;LIVE&quot;,      &quot;eid&quot;:&quot;E4b8-19b&quot;  }}```### Get recordings```recordings = self.client.get_recordings(&lt;status=&quot;all&quot;&gt;, &lt;limit=1000&gt;, &lt;offset=0&gt;)```Will return an object such as below for the number of recordings specified by limit with the specified offset and with the provided status:```{   'programmes':[      {        'programmeuuid':'54bfc205-c56e-4583-b03f-59c31f97f8c7',        'starttime':datetime.datetime(2020,4,17,8,30,tzinfo=datetime.timezone.utc),        'endtime':datetime.datetime(2020,4,17,9,30,tzinfo=datetime.timezone.utc),        'title':'New: Batwoman',        'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',        'summary': 'Lorum ipsum...',        'season':1,        'episode':19,        'image_url':'https://images.metadata.sky.com/pd-image/54bfc205-c56e-4583-b03f-59c31f97f8c7/16-9',        'channelname':'E4 HD',        'status':'RECORDED',        'deletetime': '2020-09-02T20:00:59Z',        'failurereason': None,        'source': 'LIVE',        'pvrid':'P29014192',        'eid':'E869-67b1',      },      {        'programmeuuid':'af9ecd2c-5026-4050-9c15-37598fe26713',        'starttime':null,        'endtime':'null,        'title':'Home and Away',        'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',        'summary': 'Lorum ipsum...',        'season':35,        'episode':4,        'image_url':'https://images.metadata.sky.com/pd-image/af9ecd2c-5026-4050-9c15-37598fe26713/16-9',        'channelname':'Channel 5 HD',        'status':'SCHEDULED',        'deletetime': None,        'failurereason': None,        'source': 'LIVE',        'pvrid':'P29014192',        'eid':'E869-67b1'      },      {        'programmeuuid':'575736fd-0719-4249-88cc-babd6e232bfa',        'starttime':datetime.datetime(2020,4,17,8,30,tzinfo=datetime.timezone.utc),        'endtime':datetime.datetime(2020,4,17,9,30,tzinfo=datetime.timezone.utc),        'title':'Lorraine',        'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',        'summary': 'Lorum ipsum...',        'season':35,        'episode':4,        'image_url':'https://images.metadata.sky.com/pd-image/575736fd-0719-4249-88cc-babd6e232bfa/16-9',        'channelname':'ITV HD',        'status':'PART REC',        'deletetime': None,        'failurereason': 'Start Missed',        'source': 'VOD',        'pvrid':'P29014192',        'eid':'E869-67b1'      },      {…}      }   ]}```### Get recordings (JSON)```recordings = self.client.get_recordings(&lt;status=&quot;all&quot;&gt;, &lt;limit=1000&gt;, &lt;offset=0&gt;).as_json()```Will return an object such as below for the number of recordings specified by limit with the specified offset and with the provided status:```{   &quot;__type__&quot;:&quot;__recordings__&quot;,   &quot;attributes&quot;:{   },   &quot;recordings&quot;:[      {         &quot;__type__&quot;:&quot;__recording__&quot;,         &quot;attributes&quot;:{            &quot;programmeuuid&quot;:&quot;54bfc205-c56e-4583-b03f-59c31f97f8c7&quot;,            &quot;starttime&quot;:&quot;2020-08-02T19:58:00+0000&quot;,            &quot;endtime&quot;:&quot;2020-08-02T21:01:59+0000&quot;,            &quot;title&quot;:&quot;New: Batwoman&quot;,            &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,            &quot;summary&quot;:&quot;Lorum ipsum...&quot;,            &quot;season&quot;:1,            &quot;episode&quot;:19,            &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/54bfc205-c56e-4583-b03f-59c31f97f8c7/16-9&quot;,            &quot;channelname&quot;:&quot;E4 HD&quot;,            &quot;status&quot;:&quot;RECORDED&quot;,            &quot;deletetime&quot;:&quot;2020-09-02T20:00:59+0000&quot;,            &quot;failurereason&quot;:&quot;null&quot;,            &quot;source&quot;:&quot;LIVE&quot;,            &quot;pvrid&quot;:&quot;P29014192&quot;,            &quot;eid&quot;:&quot;E869-67b1&quot;        }      },      {         &quot;__type__&quot;:&quot;__recording__&quot;,         &quot;attributes&quot;:{            &quot;programmeuuid&quot;:&quot;af9ecd2c-5026-4050-9c15-37598fe26713&quot;,            &quot;starttime&quot;:&quot;null&quot;,            &quot;endtime&quot;:&quot;null&quot;,            &quot;title&quot;:&quot;Home and Away&quot;,            &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,            &quot;summary&quot;:&quot;Lorum ipsum...&quot;,            &quot;season&quot;:35,            &quot;episode&quot;:4,            &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/af9ecd2c-5026-4050-9c15-37598fe26713/16-9&quot;,            &quot;channelname&quot;:&quot;Channel 5 HD&quot;,            &quot;status&quot;:&quot;SCHEDULED&quot;,            &quot;deletetime&quot;:&quot;null&quot;,            &quot;failurereason&quot;:&quot;null&quot;,            &quot;source&quot;:&quot;LIVE&quot;,            &quot;pvrid&quot;:&quot;P29014192&quot;,            &quot;eid&quot;:&quot;E869-67b1&quot;     },     {        &quot;__type__&quot;:&quot;__recording__&quot;,        &quot;attributes&quot;:{           &quot;programmeuuid&quot;:&quot;af9ecd2c-5026-4050-9c15-37598fe26713&quot;,           &quot;starttime&quot;:&quot;2020-08-02T19:58:00+0000&quot;,           &quot;endtime&quot;:&quot;2020-08-02T21:01:59+0000&quot;,           &quot;title&quot;:&quot;Home and Away&quot;,           &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,           &quot;summary&quot;:&quot;Lorum ipsum...&quot;,           &quot;season&quot;:35,           &quot;episode&quot;:4,           &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/af9ecd2c-5026-4050-9c15-37598fe26713/16-9&quot;,           &quot;channelname&quot;:&quot;Channel 5 HD&quot;,           &quot;status&quot;:&quot;PART REC&quot;,           &quot;deletetime&quot;:&quot;null&quot;,           &quot;failurereason&quot;:&quot;Start Missed&quot;,           &quot;source&quot;:&quot;VOD&quot;,           &quot;pvrid&quot;:&quot;P29014192&quot;,           &quot;eid&quot;:&quot;E869-67b1&quot;    },      {...}      }   ]}```### Get recording```recording = self.client.getRecording(pvrid)```Will return an object such as below:```{   'progammeuuid':'9fbdcefe-312c-4681-b996-00637e85313a',   'starttime':datetime.datetime(2020,4,17,8,30,tzinfo=datetime.timezone.utc),   'endtime':datetime.datetime(2020,4,17,9,0,tzinfo=datetime.timezone.utc),   'channelname':'ITV HD',   'title':'Van Der Valk',   'synopsis':'1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.',   'season':4,   'episode':5,   'image_url':'https://images.metadata.sky.com/pd-image/ddcd727f-487f-4558-8365-7bed4fe41c87/16-9',   'status':'RECORDED',   'deletetime': None,   'failurereason': None,   'pvrid':'P29014192',   'eid':'E869-67b1'}```### Get recording (JSON)```recording = self.client.getRecording(pvrid).as_json()```Will return an object such as below:```{   &quot;__type__&quot;:&quot;__recording__&quot;,   &quot;attributes&quot;:{      &quot;programmeuuid&quot;:&quot;e11d9e93-0eec-4855-88f5-6ade9946d5dd&quot;,      &quot;starttime&quot;:&quot;2020-04-28T21:00:00+0000&quot;,      &quot;endtime&quot;:&quot;2020-04-28T21:30:00+0000&quot;,      &quot;channelname&quot;:&quot;ITV HD&quot;,      &quot;title&quot;:&quot;BBC News at Ten&quot;,      &quot;synopsis&quot;:&quot;1/6. Following ambulance staff during a historical period of uncertainty for the NHS. Contains some strong language and upsetting scenes.&quot;,      &quot;season&quot;:null,      &quot;episode&quot;:null,      &quot;image_url&quot;:&quot;https://images.metadata.sky.com/pd-image/e11d9e93-0eec-4855-88f5-6ade9946d5dd/16-9&quot;,      &quot;status&quot;:&quot;RECORDED&quot;,      &quot;deletetime&quot;: null,      &quot;failurereason&quot;: null,      &quot;pvrid&quot;:&quot;P29014192&quot;,      &quot;eid&quot;:&quot;E869-67b1&quot;   }}```### Decode recording information (JSON)```from pyskyqremote.programme import recorded_programme_decoderrecording = recorded_programme_decoder(recording_json)```### Get quota```quota = self.client.get_quota()```Will return an object such as below:```{   'quotamax':1604285,   'quotaused':171083}```### Get quota (JSON)```recording = self.client.get_quota().as_json()```Will return an object such as below:```{   &quot;__type__&quot;:&quot;__quota__&quot;,   &quot;attributes&quot;:{     &quot;quotaMax&quot;:1604285,     &quot;quotaUsed&quot;:171083   }}```### Book Recording```response = self.client.book_recording(eid, &lt;series=False&gt;)```Will return True for success or False for failure. Set series to True for series link or False for no series link.### Book PPV Recording```response = self.client.book_ppv_recording(eid, offerref)```Will return True for success or False for failure.### Series Link Recording```response = self.client.series_link(pvrid, &lt;linkon=True&gt;)```Will return True for success or False for failure. Set on to True for linking, False for unlinking.### Keep Recording```response = self.client.recording_keep(pvrid, &lt;keepon=True&gt;)```Will return True for success or False for failure. Set on to True to keep, False to unkeep.### Lock Recording```response = self.client.recording_lock(pvrid, &lt;lockon=True&gt;)```Will return True for success or False for failure. Set on to True to lock, False to unlock.### Delete Recording (or scheduled recording)```response = self.client.recording_delete(pvrid, &lt;deleteon=True&gt;)```Will return True for success or False for failure. Set on to True to delete, False to undelete. Cannot undelete scheduled recording.### Erase Recording```response = self.client.recording_erase(pvrid)```Will return True for success or False for failure.### Erase all Recordings including scheduled recordings```response = self.client.recording_erase_all()```Will return True for success or False for failure.### Set Last Played Position```response = self.client.recording_set_last_played_position(pvrid, pos)```Will return True for success or False for failure. Only works on the main Sky Q box.### Get Channel List```channelList = self.client.get_channel_list()```Will return an object with an array of channels.```{   'channels':[      {         'channelno':'101',         'channelname':'BBC ONE',         'channelsid'='2153',         'channelimage_url'='https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png',         'channeltype':'video',         'channelnoint':101,         'sf':'sd'      },      {         'channelno':'0102',         'channelname':'BBC R2',         'channelsid'='2153',         'channelimage_url'='https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png',         'channeltype':'audio',         'channelnoint':102,         'sf':'au'      },      {...}   ]}```### Get Channel List (JSON)```channelList = self.client.get_channel_list().as_json()```Will return a JSON structure with an array of channels.```{   &quot;__type__&quot;:&quot;__channellist__&quot;,   &quot;attributes&quot;:{   },   &quot;channels&quot;:[      {         &quot;__type__&quot;:&quot;__channel__&quot;,         &quot;attributes&quot;:{            &quot;channelno&quot;:&quot;101&quot;,            &quot;channelname&quot;:&quot;BBC ONE&quot;,            &quot;channelsid&quot;:&quot;2153&quot;,            &quot;channelimage_url&quot;:&quot;https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png&quot;,            &quot;channeltype&quot;:&quot;video&quot;,            &quot;channelnoint&quot;:101,            &quot;sf&quot;:&quot;sd&quot;         }      },      {         &quot;__type__&quot;:&quot;__channel__&quot;,         &quot;attributes&quot;:{            &quot;channelno&quot;:&quot;0102&quot;,            &quot;channelname&quot;:&quot;BBC R2&quot;,            &quot;channelsid&quot;:&quot;2153&quot;,            &quot;channelimage_url&quot;:&quot;https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png&quot;,            &quot;channeltype&quot;:&quot;audio&quot;,            &quot;channelnoint&quot;:102,            &quot;sf&quot;:&quot;au&quot;         }      },      {...},   ]}```### Get Channel Information (for a specific channel number)```channelInfo = self.client.get_channel_info(channel_no)```Will return an object such as below:```{   'channelno'='101',   'channelname'='BBC One South',   'channelsid'='2153',   'channelimage_url'='https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png',   'channeltype'='video',   'channelnoint'=101,   'sf'='sd'}```### Get Channel Information (for a specific channel number) (JSON)```channelInfo = self.client.get_channel_info(channel_no).as_json()```Will return an object such as below:```{   &quot;__type__&quot;:&quot;__channel__&quot;,   &quot;attributes&quot;:{      &quot;channelno&quot;:&quot;101&quot;,      &quot;channelname&quot;:&quot;BBC One South&quot;,      &quot;channelsid&quot;:&quot;2153&quot;,      &quot;channelimage_url&quot;:&quot;https://d2n0069hmnqmmx.cloudfront.net/epgdata/1.0/newchanlogos/600/600/skychb2153.png&quot;,      &quot;channeltype&quot;:&quot;video&quot;,      &quot;channelnoint&quot;:101,      &quot;sf&quot;:&quot;sd&quot;   }}```### Get Favourite List```favouriteList = self.client.get_favourite_list()```Will return an object with an array of favourites.```{   'favourites':[      {         'lcn': 1,         'channelno':'101',         'channelname':'BBC ONE',         'sid'='2153'      },      {         'lcn': 2,         'channelno':'0102',         'channelname':'BBC R2',         'sid'='2153'      },      {...}   ]}```### Get Favorite List (JSON)```favouriteList = self.client.get_favourite_list().as_json()```Will return a JSON structure with an array of channels.```{   &quot;__type__&quot;:&quot;__favouritelist__&quot;,   &quot;attributes&quot;:{   },   &quot;favourites&quot;:[      {         &quot;__type__&quot;:&quot;__favourite__&quot;,         &quot;attributes&quot;:{            &quot;lcn&quot;: 1,            &quot;channelno&quot;:&quot;101&quot;,            &quot;channelname&quot;:&quot;BBC ONE&quot;,            &quot;sid&quot;:&quot;2153&quot;         }      },      {         &quot;__type__&quot;:&quot;__favourite__&quot;,         &quot;attributes&quot;:{            &quot;lcn&quot;: 2,            &quot;channelno&quot;:&quot;0102&quot;,            &quot;channelname&quot;:&quot;BBC R2&quot;,            &quot;sid&quot;:&quot;2153&quot;         }      },      {...},   ]}```### Decode EPG information (JSON)```from pyskyqremote.channel import ChannelDecoderchannel = ChannelDecoder(channelJSON)```Will decode the JSON structure to a python object.### Send key press```self.client.press(sequence)```Allows the sending of a sequence of key presses which are submitted at 1/2 second intervalsValid values are:```powerselectbackupdismisschannelupchanneldowninteractivesidebarhelpservicessearchtvguidehomeitextupdownleftrightredgreenyellowblue0123456789,playpausestoprecordfastforwardrewindboxofficesky```</longdescription>
</pkgmetadata>