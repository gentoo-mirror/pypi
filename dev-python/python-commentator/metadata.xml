<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Commentatorby [Emery Berger](https://emeryberger.com)Commentator is a Python program that generates comments and optionaltranslations for Python code. It uses OpenAI's GPT-3 language model toadd high-level explanatory comments and docstrings to Python code.[![PyPI Latest Release](https://img.shields.io/pypi/v/python-commentator.svg)](https://pypi.org/project/python-commentator/)[![Downloads](https://pepy.tech/badge/python-commentator)](https://pepy.tech/project/python-commentator) [![Downloads](https://pepy.tech/badge/python-commentator/month)](https://pepy.tech/project/python-commentator) ![Python versions](https://img.shields.io/pypi/pyversions/python-commentator.svg?style=flat-square)## UsageTo use Commentator, you must first set up an OpenAI API key. If youalready have an API key, you can set it as an environment variablecalled `OPENAI_API_KEY`. Otherwise, you can pass your API key as anargument to the `commentator` command. (If you do not have one yet,you can get a key here: https://openai.com/api/.)```$ export OPENAI_API_KEY=&lt;your-api-key&gt;```or```$ commentator --api-key &lt;your-api-key&gt; FILE1 ...```Commentator takes a path to a Python file and an optional languageparameter. If language is specified, Commentator translates eachdocstring and comment in the code to the specified language. Thedefault language is English.## InstallationTo install Commentator, you can use pip:```$ pip install python-commentator```## ExampleSuppose you have a file called `example.py` with the following code:```def absolutely(n):    if n &lt; 0:        return -n    else:        return n```Run Commentator on this file to add comments and type annotations:```$ commentator example.py```The resulting code might be:```def absolutely(n: int) -&gt; int:    &quot;&quot;&quot;    Return the absolute value of a number.        Args:    - n (int): the number whose absolute value we want to find        Returns:    - int: the absolute value of n    &quot;&quot;&quot;    if n &lt; 0:        # If n is negative        # Return the negative version of n (i.e. its absolute value)        return -n    else:        # Otherwise (if n is non-negative)        # Return n as-is (it already is its absolute value)        return n```Note that Commentator has added a docstring and type annotations.</longdescription>
</pkgmetadata>