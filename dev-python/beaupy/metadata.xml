<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BeauPy![beaupy](https://user-images.githubusercontent.com/47027005/185082011-cb588f57-d38f-42d8-8312-3981ae1bc479.png)&gt; A Python library of interactive CLI elements you have been looking for---[![Tests](https://github.com/petereon/beaupy/actions/workflows/python-test.yml/badge.svg)](https://github.com/petereon/beaupy/actions/workflows/python-test.yml)[![Lint](https://github.com/petereon/beaupy/actions/workflows/python-lint.yml/badge.svg)](https://github.com/petereon/beaupy/actions/workflows/python-lint.yml)[![codecov](https://codecov.io/gh/petereon/beaupy/branch/master/graph/badge.svg?token=HSG6MGTXBC)](https://codecov.io/gh/petereon/beaupy)[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=petereon_beaupy&amp;metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=petereon_beaupy)[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=petereon_beaupy&amp;metric=security_rating)](https://sonarcloud.io/summary/new_code?id=petereon_beaupy)![PyPI - Downloads](https://img.shields.io/pypi/dm/beaupy?color=g&amp;label=%F0%9F%93%A5%20Downloads)![example](https://raw.githubusercontent.com/petereon/beaupy/master/example.gif)For documentation but more and prettier see [**here**](https://petereon.github.io/beaupy/)## AcknowledgmentBeauPy stands on the shoulders of giants. It is based on another library with which it shares some of the source code, [`cutie`](https://github.com/kamik423/cutie), developed by [Kamik423](https://github.com/Kamik423). It has begun as a fork but has since diverged into it's own thing and as such, detached from the original repository.## Overview**BeauPy** implements a number of common interactive elements:| Function                                                                                                  | Functionality                                                                              ||:----------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------|| [`select`](https://petereon.github.io/beaupy/api/#select)                        | Prompt to pick a choice from a list                                                        || [`select_multiple`](https://petereon.github.io/beaupy/api/#select_multiple)      | Prompt to select one or multiple choices from a list                                       || [`confirm`](https://petereon.github.io/beaupy/api/#confirm)                      | Prompt with a question and yes/no options                                                  || [`prompt`](https://petereon.github.io/beaupy/api/#prompt)                        | Prompt that takes free input with optional validation, type conversion and input hiding |TUI elements shown in the above gif are the result of the follwing code:```pythonimport timefrom beaupy import confirm, prompt, select, select_multiplefrom beaupy.spinners import *from rich.console import Consoleconsole = Console()# Confirm a dialogif confirm(&quot;Will you take the ring to Mordor?&quot;):    names = [        &quot;Frodo Baggins&quot;,        &quot;Samwise Gamgee&quot;,        &quot;Legolas&quot;,        &quot;Aragorn&quot;,        &quot;[red]Sauron[/red]&quot;,    ]    console.print(&quot;Who are you?&quot;)    # Choose one item from a list    name = select(names, cursor=&quot;ü¢ß&quot;, cursor_style=&quot;cyan&quot;)    console.print(f&quot;Al√°men√´, {name}&quot;)            item_options = [        &quot;The One Ring&quot;,        &quot;Dagger&quot;,        &quot;Po-tae-toes&quot;,        &quot;Lightsaber (Wrong franchise! Nevermind, roll with it!)&quot;,    ]    console.print(&quot;What do you bring with you?&quot;)    # Choose multiple options from a list    items = select_multiple(item_options, tick_character='üéí', ticked_indices=[0], maximal_count=3)        potato_count = 0    if &quot;Po-tae-toes&quot; in items:        # Prompt with type conversion and validation        potato_count = prompt('How many potatoes?', target_type=int, validator=lambda count: count &gt; 0)        # Spinner to show while doing some work    spinner = Spinner(DOTS, &quot;Packing things...&quot;)    spinner.start()        time.sleep(2)        spinner.stop()    # Get input without showing it being typed    if &quot;friend&quot; == prompt(&quot;Speak, [blue bold underline]friend[/blue bold underline], and enter&quot;, secure=True).lower():                # Custom spinner animation        spinner_animation = ['‚ñâ‚ñâ', '‚ñå‚ñê', '  ', '‚ñå‚ñê', '‚ñâ‚ñâ']        spinner = Spinner(spinner_animation, &quot;Opening the Door of Durin...&quot;)        spinner.start()                time.sleep(2)                spinner.stop()    else:        spinner_animation = ['üêôüåä    ‚öîÔ∏è ', 'üêô üåä   ‚öîÔ∏è ', 'üêô  üåä  ‚öîÔ∏è ', 'üêô   üåä ‚öîÔ∏è ', 'üêô    üåä‚öîÔ∏è ']        spinner = Spinner(spinner_animation, &quot;Getting attacked by an octopus...&quot;)        spinner.start()                time.sleep(2)                spinner.stop()    if 'The One Ring' in items:        console.print(&quot;[green]You throw The One Ring to a lava from an eagle![/green]&quot;)    else:        console.print(&quot;[red]You forgot the ring and brought Middle-Earth to its knees![/red]&quot;)    console.print(f&quot;And you brought {potato_count} taters!&quot;)      ```For more information refer to [more examples](https://petereon.github.io/beaupy/examples/) or definitive, but much less exciting [API documentation](https://petereon.github.io/beaupy/api/)## InstallationFrom PyPI:```shpip install beaupy```From source:```shgit clone https://github.com/petereon/beaupy.gitpoetry buildpip install ./dist/beaupy-{{some-version}}-py3-none-any.whl```## RoadmapThis repository has a [associated GitHub project](https://github.com/users/petereon/projects/3/views/1) where work that is currently done can be seen.## ContributingIf you would like to contribute, please feel free to suggest features or implement them yourself.Also **please report any issues and bugs you might find!**### DevelopmentTo start development you can clone the repository:```shgit clone https://github.com/petereon/beaupy.git```Change the directory to the project directory:```shcd ./beaupy/```This project uses [`poetry`](https://python-poetry.org/) as a dependency manager. You can install the dependencies using:```shpoetry install```For testing, this project relies on [`ward`](https://github.com/darrenburns/ward). It is included as a development dependency, soafter installing the dependencies you can simply execute the following:```shpoetry run poe test```Making sure the code follows quality standards and formatting can be ensured by executing```shpoetry run poe lint```You can also have the tests and lints run after every saved change by executing a respective watch command```shpoetry run poe test:watch```or```shpoetry run poe lint:watch```After you have made your changes, create a pull request towards a master branch of this repositoryLooking forward to your pull requests!## CompatibilityInternal logic of `beaupy` is supported for all the major platforms (Windows, Linux, macOS).- For user input from console, `beaupy` relies on [petereon/yakh](https://github.com/petereon/yakh), which is tested against all the major platforms and Python versions.- For printing to console `beaupy` relies on [Textualize/rich](https://github.com/Textualize/rich), which [claims to support](https://github.com/Textualize/rich#compatibility) all the major platforms.## Known Issues- Version `2.x.x`: arrow keys reportedly don't always work on Windows. Resolved in `3.x.x`- Version `3.5.0`: only first 5 options are displayed for `select` and `select_multiple`. Resolved in `3.5.2`## Awesome projects using `beaupy`- [therealOri/Genter](https://github.com/therealOri/Genter): A strong password generator and built in password manager made with python3!- [therealOri/byte](https://github.com/therealOri/byte): Steganography Image/Data Injector. For artists or people to inject their own Datamark &quot;Watermark&quot; into their images/art or files!## LicenseThe project is licensed under the [MIT License](LICENSE).</longdescription>
</pkgmetadata>