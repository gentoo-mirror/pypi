<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Amazon EKS Upgrade Utility&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aws-samples/eks-cluster-upgrade/actions/workflows/validate.yaml&quot;&gt;&lt;img alt=&quot;Validation Status&quot; src=&quot;https://github.com/aws-samples/eks-cluster-upgrade/actions/workflows/validate.yaml/badge.svg?branch=main&amp;event=push&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/aws-samples/eks-cluster-upgrade/actions/workflows/e2e-test.yaml&quot;&gt;&lt;img alt=&quot;E2E Cluster Upgrade&quot; src=&quot;https://github.com/aws-samples/eks-cluster-upgrade/actions/workflows/e2e-test.yaml/badge.svg?branch=main&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/github/aws-samples/eks-cluster-upgrade?branch=main&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://codecov.io/github/aws-samples/eks-cluster-upgrade/coverage.svg?branch=main&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/eksupgrade/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/eksupgrade&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/eksupgrade&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://pepy.tech/badge/eksupgrade&quot;&gt;&lt;/a&gt;&lt;/p&gt;Amazon EKS cluster upgrade is a utility that automates the upgrade process for Amazon EKS clusters.## Checks post v0.9.0The pre/post-flight checks are removed in favor of guiding the user to evaluate their clusters with existing tools which handle this better such as **[eksup](https://github.com/clowdhaus/eksup)**. The existing pre/post checks will be replaced with relevant checks specific to the upgrade (based on previous understanding the cluster is eligible for such an upgrade).### Cluster Upgrade1. Control plane upgrade - This is handled entirely by AWS once the version upgrade has been requested.2. Identification of Managed and Self-managed node - The worker nodes are identified as EKS managed and Self-managed to perform upgrade.3. Managed Node group update - Updates managed node group to the specified version.4. Self-managed Node group update   - Launch new nodes with upgraded version and wait until they require ready status for next step.   - Mark existing nodes as unschedulable.   - If pod disruption budget (PDB) is present then check for force eviction flag (--force) which is given by user, only then evict the pods or continue with the flow.## Pre-RequisitesBefore running `eksupgrade`, you will need to have permission for both AWS and the Kubernetes cluster itself.1. Install `eksupgrade` locally:```shpython -m pip install eksupgrade```2. Ensure you have the necessary AWS permissions; an example policy of required permissions is listed below:```json{  &quot;Version&quot;: &quot;2012-10-17&quot;,  &quot;Statement&quot;: [    {      &quot;Sid&quot;: &quot;iam&quot;,      &quot;Effect&quot;: &quot;Allow&quot;,      &quot;Action&quot;: [        &quot;iam:GetRole&quot;,        &quot;sts:GetAccessKeyInfo&quot;,        &quot;sts:GetCallerIdentity&quot;,        &quot;sts:GetSessionToken&quot;      ],      &quot;Resource&quot;: &quot;*&quot;    },    {      &quot;Sid&quot;: &quot;ec2&quot;,      &quot;Effect&quot;: &quot;Allow&quot;,      &quot;Action&quot;: [        &quot;autoscaling:CreateLaunchConfiguration&quot;,        &quot;autoscaling:Describe*&quot;,        &quot;autoscaling:SetDesiredCapacity&quot;,        &quot;autoscaling:TerminateInstanceInAutoScalingGroup&quot;,        &quot;autoscaling:UpdateAutoScalingGroup&quot;,        &quot;ec2:Describe*&quot;,        &quot;ssm:*&quot;      ],      &quot;Resource&quot;: &quot;*&quot;    },    {      &quot;Sid&quot;: &quot;eks&quot;,      &quot;Effect&quot;: &quot;Allow&quot;,      &quot;Action&quot;: [        &quot;eks:Describe*&quot;,        &quot;eks:List*&quot;,        &quot;eks:UpdateAddon&quot;,        &quot;eks:UpdateClusterVersion&quot;,        &quot;eks:UpdateNodegroupVersion&quot;      ],      &quot;Resource&quot;: &quot;*&quot;    }  ]}```3. Update your local kubeconfig to authenticate to the cluster:```shaws eks update-kubeconfig --name &lt;CLUSTER-NAME&gt; --region &lt;REGION&gt;```## UsageTo view the arguments and options, run:```sheksupgrade --help``````sh Usage: eksupgrade [OPTIONS] CLUSTER_NAME CLUSTER_VERSION REGION Run eksupgrade against a target cluster.╭─ Arguments ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮│ *    cluster_name         TEXT  The name of the cluster to be upgraded [default: None] [required]                                                                                                                                                        ││ *    cluster_version      TEXT  The target Kubernetes version to upgrade the cluster to [default: None] [required]                                                                                                                                       ││ *    region               TEXT  The AWS region where the target cluster resides [default: None] [required]                                                                                                                                               │╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮│ --max-retry                                    INTEGER  The most number of times to retry an upgrade [default: 2]                                                                                                                                        ││ --force                 --no-force                      Force the upgrade (e.g. pod eviction with PDB) [default: no-force]                                                                                                                               ││ --preflight             --no-preflight                  Run pre-upgrade checks without upgrade [default: no-preflight]                                                                                                                                   ││ --parallel              --no-parallel                   Upgrade all nodegroups in parallel [default: no-parallel]                                                                                                                                        ││ --latest-addons         --no-latest-addons              Upgrade addons to the latest eligible version instead of default [default: no-latest-addons]                                                                                                     ││ --disable-checks        --no-disable-checks             Disable the pre-upgrade and post-upgrade checks during upgrade scenarios [default: no-disable-checks]                                                                                            ││ --interactive           --no-interactive                If enabled, prompt the user for confirmations [default: interactive]                                                                                                                             ││ --version                                               Display the current eksupgrade version                                                                                                                                                           ││ --install-completion                                    Install completion for the current shell.                                                                                                                                                        ││ --show-completion                                       Show completion for the current shell, to copy it or customize the installation.                                                                                                                 ││ --help                                                  Show this message and exit.                                                                                                                                                                      │╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯```## Support &amp; FeedbackThis project is maintained by AWS Solution Architects and Consultants. It is not part of an AWS service and support is provided best-effort by the maintainers. To post feedback, submit feature ideas, or report bugs, please use the [Issues section](https://github.com/aws-samples/eks-cluster-upgrade/issues) of this repo. If you are interested in contributing, please see the [Contribution guide](https://github.com/aws-samples/eks-cluster-upgrade/blob/main/CONTRIBUTING.md).## SecuritySee [CONTRIBUTING](CONTRIBUTING.md#security-issue-notifications) for more information.## LicenseThis library is licensed under the MIT-0 License. See the [LICENSE](LICENSE) file.</longdescription>
</pkgmetadata>