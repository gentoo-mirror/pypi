<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Downloads](https://static.pepy.tech/badge/pyspm)](https://pepy.tech/project/pyspm)[![PyPi version](https://img.shields.io/pypi/v/pySPM)](https://pypi.python.org/pypi/pySPM/)[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.998575.svg)](https://doi.org/10.5281/zenodo.998575)# pySPMpySPM is a Python library in order to read, handle and plot Scanning Probe Microscopy (SPM) images as well as ToF-SIMS data.Supported SPM file formats:* Nanoscan .xml file format* Bruker* Iontof ToF-SIMS fileformats:    * ITA    * ITM    * ITS* Nanonis SXM file## ImportantThis library is offered as it is and is still in development. Please note that readingthe raw data was done by reverseengineering and guessing and not with a manual as the file format is proprietary. Itseems to work well with the dataused by the developer of this library, but there is **NO GUARANTEE** that this librarywill work correctly with your ownspecific data.If you find bugs and issues, please report them to thedeveloper: https://github.com/scholi/pySPM/issues## Installation### From PyPI```bashpip install pySPM```### From GitHub#### With poetry```bashpoetry add git+https://github.com/scholi/pySPM.git```#### With pip```bashpip install git+https://github.com/scholi/pySPM.git```### Optional dependencies`PyQT5` for GUI controls.## DocumentationThe documentation is still in its early stage[read the documentation](https://nbviewer.jupyter.org/github/scholi/pySPM/blob/master/doc/pySPM%20Documentation.ipynb)There is alsoa [short introduction to pySPM for ToF-SIMS data](https://nbviewer.jupyter.org/github/scholi/pySPM/blob/master/doc/Introduction%20to%20pySPM%20for%20ToF-SIMS%20data.ipynb)## CitingIf you use this library for your work, please think about citing it.[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.998575.svg)](https://doi.org/10.5281/zenodo.998575)Olivier Scholder. (2018, November 28). scholi/pySPM: pySPM v0.2.16 (Version v0.2.16).Zenodo. http://doi.org/10.5281/zenodo.998575## News### ITA files are writableFrom now on you can, not only view the ita files, but you can also write them bysupplying the parameter_readable=False_ to _pySPM.ITA_ or _pySPM.ITM_. For the moment this is still anon-user-friendly procedure, but you canedit each ITStr Block with the ```edit_block()``` function. Be careful, because if thenew data has a different sizethan the old one, a new block is created, but the old one is also kept. This means thatyour ITA file size will grow.You can also add new channels and images with the more user-friendlyfunction ```pySPM.ITA.add_new_images()```.:warning: It is highly advised to copy the ita file before making any change. You canuse the following code to copy theita in a temporary ita before making any change.```pythonfrom shutil import copyfileimport pySPMfilename = &quot;scanfile.ita&quot;copyfile(src=filename, dst=&quot;temp.ita&quot;)A = pySPM.ITA(&quot;temp.ita&quot;, readonly=False)```### New toolsThe library comes with three scripts to make your life easier. Those scripts are locatedin your python folder in theScripts directory. You can also run them from the command line.#### stabilityAllows you to select a measurement folder and display the Emission Current andSuppressor voltage in function of thetime/scan number.This allows you to verify the stability of your source during your measurements.![stability_screenshot](doc/images/Capture_stability.png)see the [wiki](../../wiki/stability) for more info#### plotterAllows you to plot the parameter logged by your logfile. If SurfaceLab is running thisscript will detect which logfileis beeing saved and will display the values live (the plot is refreshed every 3s inorder add the new data). You canalso provide as first argument the logfile path (or in windows you can drag&amp;drop thelogfile over the plotter app).![plotter_screenshot](doc/images/Capture_plotter.png)see the [wiki](../../wiki/plotter) for more info#### timerIf you are using SurfaceLab, this app will display a small progressbar of yourmeasurement and will calculate theremaining time in function of the elapsed time, the total number of scans and theelapsed number of scan.![timer_screenshot](doc/images/Capture_timer.png)see the [wiki](../../wiki/timer) for more info#### spectraThis tool can display spectra, visualize rapidly peaks assignment and perform fast masscalibration.You can give an ITA filename as argument or if none a GUI filedialog will ask you forone. You will then see yourspectrum.You can navigate with the scroll of the mouse to zoom in &amp; out. You can use thekeyboard &lt;kbd&gt;+&lt;/kbd&gt; and &lt;kbd&gt;-&lt;/kbd&gt;to shift your spectra by Â±1 Dalton. You can use left-mouse-button and drag to shift yourspectra. You can perform veryquick mass calibration by Right-Mouse-Click on one measurement peak (hold the mouse) themove to the element mark youwant to assign your peak and release the mouse. The mass calibration values should thenbe updated on the left table andthe mass calibration performed live so that you can see immediately the changes.![spectra_screenshot](doc/images/Capture_spectra.png)see the [wiki](../../wiki/spectra) for more info</longdescription>
</pkgmetadata>