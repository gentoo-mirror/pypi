<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>huber=====Ethernet driver and command-line tool for Huber baths.&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;http://www.huber-online.com/images/product_img/group_3.06.jpg&quot; /&gt;&lt;/p&gt;Installation============```pip install huber```Usage=====### Command LineFor basic tasks, this driver includes a command-line interface. Read the helpfor more.```huber --help```### PythonFor more complex projects, use python to automate your workflow. *Thisdriver solely uses asynchronous Python ≥3.5.*```pythonimport asynciofrom huber import Bathasync def get():    with Bath('192.168.1.100') as bath:        print(await bath.get())asyncio.run(get())```If the bath is communicating, this should print a dictionary of the form:```python{    'on': False,               # Temperature control (+pump) active    'temperature': {        'bath': 23.49,         # Internal (bath) temperature, °C        'setpoint': 20.0       # Temperature setpoint, °C    },    'pump': {        'pressure': 0.0,       # Pump head pressure, mbar        'speed': 0,            # Pump speed, rpm        'setpoint': 0          # Pump speed setpoint, rpm    },    'status': {        'circulating': False,  # True if device is circulating        'controlling': False,  # True if temperature control is active        'error': False,        # True if an uncleared error is present        'pumping': False,      # True if pump is on        'warning': False       # True if an uncleared warning is present    },    'fill': 0.0,               # Oil level, [0, 1]    'maintenance': 338,        # Time until maintenance alarm, days    'warning': {               # Only present if warning is detected        'code': -1,        'condition': '',        'recovery': '',        'type': ''    },    'error': {                 # Only present if error is detected        'code': -1,        'condition': '',        'recovery': '',        'type': ''    }}```The main `get` method strings together multiple TCP requests, and can take &gt;0.5sto run. If you don't want all the data, you should instead use the following:```pythonawait bath.get_setpoint()             # °Cawait bath.get_bath_temperature()     # °Cawait bath.get_process_temperature()  # °C (optionally installed)await bath.get_pressure()             # mbarawait bath.get_pump_speed()           # rpmawait bath.get_fill_level()           # [0, 1]await bath.get_next_maintenance()     # daysawait bath.get_status()               # boolean dictionaryawait bath.get_warning()              # None or dictionaryawait bath.get_error()                # None or dictionary```You can also start, stop, set temperature setpoint, and set pump speed.```pythonawait bath.start()await bath.stop()await bath.set_setpoint(50)      # °Cawait bath.set_pump_speed(2000)  # rpmawait bath.clear_warning()await bath.clear_error()```Implementation==============This uses the PB method described in[the manual](http://www.huber-online.com/download/manuals/Handbuch_Datenkommunikation_PB_en.pdf).Note that this does not take advantage of the PB package commands, which wouldcut down on the data transmission at the cost of extra bath configuration.This also does not take advantage of the high-accuracy PB data transmission,as its resolution is unnecessary in most use cases.</longdescription>
</pkgmetadata>