<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ![bpytop](https://github.com/aristocratos/bpytop/raw/master/Imgs/logo.png)&lt;a href=&quot;https://repology.org/project/bpytop/versions&quot;&gt;    &lt;img src=&quot;https://repology.org/badge/vertical-allrepos/bpytop.svg&quot; alt=&quot;Packaging status&quot; align=&quot;right&quot;&gt;&lt;/a&gt;![Linux](https://img.shields.io/badge/-Linux-grey?logo=linux)![OSX](https://img.shields.io/badge/-OSX-black?logo=apple)![FreeBSD](https://img.shields.io/badge/-FreeBSD-red?logo=freebsd)![Usage](https://img.shields.io/badge/Usage-System%20resource%20monitor-yellow)![Python](https://img.shields.io/badge/Python-v3.7%5E-green?logo=python)![bpytop_version](https://img.shields.io/github/v/tag/aristocratos/bpytop?label=version)[![pypi_version](https://img.shields.io/pypi/v/bpytop?label=pypi)](https://pypi.org/project/bpytop)[![Test Status](https://img.shields.io/github/workflow/status/aristocratos/bpytop/Testing?label=tests)](https://github.com/aristocratos/bpytop/actions?query=workflow%3Atesting)[![Donate](https://img.shields.io/badge/-Donate-yellow?logo=paypal)](https://paypal.me/aristocratos)[![Sponsor](https://img.shields.io/badge/-Sponsor-red?logo=github)](https://github.com/sponsors/aristocratos)[![Coffee](https://img.shields.io/badge/-Buy%20me%20a%20Coffee-grey?logo=Ko-fi)](https://ko-fi.com/aristocratos)[![bpytop](https://img.shields.io/badge/-snapcraft.io-black)](https://snapcraft.io/bpytop)[![bpytop](https://snapcraft.io//bpytop/badge.svg)](https://snapcraft.io/bpytop)## Index* [News](#news)* [Documents](#documents)* [Description](#description)* [Features](#features)* [Themes](#themes)* [Support and funding](#support-and-funding)* [Prerequisites](#prerequisites) (Read this if you are having issues!)* [Dependencies](#dependencies)* [Screenshots](#screenshots)* [Installation](#installation)* [Configurability](#configurability)* [License](#license)## News### C++ Version##### 18 September 2021![btop++](https://raw.githubusercontent.com/aristocratos/btop/main/Img/logo.png)The Linux version of btop++ is complete. Released as version 1.0.0Get it at https://github.com/aristocratos/btopThe development plan right now:* 1.1.0 Mac OsX support* 1.2.0 FreeBSD support* 1.3.0 Support for GPU monitoring* 1.X.0 Other platforms and features...##### 2 May 2021I've started work on the third iteration of bashtop-&gt;bpytop.It's being written in C++ and will simply be called `btop`.I'm aiming at releasing a beta version around August this year and will publish the repo when I've got the core functionality and structure ready for anybody that wanna help out.This project is gonna take some time until it has complete feature parity with bpytop, since all system information gathering will likely have to be written from scratch without any external libraries.And will need some help in the form of code contributions to get complete support for BSD and OSX.If you got suggestions of C++ libraries that are multi-platform and are as extensive as [psutil](https://github.com/giampaolo/psutil) are for python, feel free to open up a new thread in Discussions, it could help speed up the development a lot.Will post any updates about this project here until the repo is made available.## Documents#### [CHANGELOG.md](https://github.com/aristocratos/bpytop/blob/master/CHANGELOG.md)#### [CONTRIBUTING.md](https://github.com/aristocratos/bpytop/blob/master/CONTRIBUTING.md)#### [CODE_OF_CONDUCT.md](https://github.com/aristocratos/bpytop/blob/master/CODE_OF_CONDUCT.md)## DescriptionResource monitor that shows usage and stats for processor, memory, disks, network and processes.Python port and continuation of [bashtop](https://github.com/aristocratos/bashtop).## Features* Easy to use, with a game inspired menu system.* Full mouse support, all buttons with a highlighted key is clickable and mouse scroll works in process list and menu boxes.* Fast and responsive UI with UP, DOWN keys process selection.* Function for showing detailed stats for selected process.* Ability to filter processes, multiple filters can be entered.* Easy switching between sorting options.* Send SIGTERM, SIGKILL, SIGINT to selected process.* UI menu for changing all config file options.* Auto scaling graph for network usage.* Shows message in menu if new version is available* Shows current read and write speeds for disks## ThemesBpytop uses the same theme files as bashtop so any theme made for bashtop will work.See [themes](https://github.com/aristocratos/bpytop/tree/master/themes) folder for available themes.The `make install` command places the default themes in `/usr/local/share/bpytop/themes`.If installed with `pip3` the themes will be located in a folder called `bpytop-themes` in the python3 site-packages folder.User created themes should be placed in `$HOME/.config/bpytop/themes`.Let me know if you want to contribute with new themes.## Support and fundingYou can sponsor this project through github, see [my sponsors page](https://github.com/sponsors/aristocratos) for options.Or donate through [paypal](https://paypal.me/aristocratos) or [ko-fi](https://ko-fi.com/aristocratos).Any support is greatly appreciated!## Prerequisites#### Mac Os XWill not display correctly in the standard terminal (unless truecolor is set to False)!Recommended alternative [iTerm2](https://www.iterm2.com/)Will also need to be run as superuser to display stats for processes not owned by user.OsX on Apple Silicon (arm) requires psutil version 5.8.0 to work and currently has no temperature monitoring.Upgrade psutil with `sudo pip3 install psutil --upgrade`#### Linux, Mac Os X and FreeBSDFor correct display, a terminal with support for:* 24-bit truecolor ([See list of terminals with truecolor support](https://gist.github.com/XVilka/8346728))* 256-color terminals are supported through 24-bit to 256-color conversion when setting &quot;truecolor&quot; to False in the options or with &quot;-lc/--low-color&quot; argument.* Wide characters (Are sometimes problematic in web-based terminals)Also needs a UTF8 locale and a font that covers:* Unicode Block “Braille Patterns” U+2800 - U+28FF* Unicode Block “Geometric Shapes” U+25A0 - U+25FF* Unicode Block &quot;Box Drawing&quot; and &quot;Block Elements&quot; U+2500 - U+259F#### Notice (Text rendering issues)If you are having problems with the characters in the graphs not looking like they do in the screenshots,it's likely a problem with your systems configured fallback font not having support for braille characters.See [Terminess Powerline](https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Terminus/terminus-ttf-4.40.1) for an example of a font that includes the braille symbols.See comments by @sgleizes [link](https://github.com/aristocratos/bpytop/issues/100#issuecomment-684036827) and @XenHat [link](https://github.com/aristocratos/bpytop/issues/100#issuecomment-691585587) in issue #100 for possible solutions.If text are misaligned and you are using Konsole or Yakuake, turning off &quot;Bi-Directional text rendering&quot; is a possible fix.Characters clipping in to each other or text/border misalignments is not bugs caused by bpytop, but most likely a fontconfig or terminal problem where the braille characters making up the graphs aren't rendered correctly.Look to the creators of the terminal emulator you use to fix these issues if the previous mentioned fixes don't work for you.#### Notice (SSH)Dropbear seems to not be able to set correct locale. So if accessing bpytop over ssh, OpenSSH is recommended.## Dependencies**[Python3](https://www.python.org/downloads/)** (v3.7 or later)**[psutil module](https://github.com/giampaolo/psutil)** (v5.7.0 or later)## Optionals for additional stats(Optional OSX) **[coretemp](https://github.com/hacker1024/coretemp)** (recommended), or **[osx-cpu-temp](https://github.com/lavoiesl/osx-cpu-temp)** (less accurate) needed to show CPU temperatures.## ScreenshotsMain UI showing details for a selected process.![Screenshot 1](https://github.com/aristocratos/bpytop/raw/master/Imgs/main.png)Main UI in mini mode.![Screenshot 2](https://github.com/aristocratos/bpytop/raw/master/Imgs/mini.png)Main menu.![Screenshot 3](https://github.com/aristocratos/bpytop/raw/master/Imgs/menu.png)Options menu.![Screenshot 4](https://github.com/aristocratos/bpytop/raw/master/Imgs/options.png)## InstallationI only maintain the PyPi package, so will not take responsibility for issues caused by any other install method!### PyPi (will always have latest version)&gt; Install or update to latest version``` bashpip3 install bpytop --upgrade```### Mac OsX&gt;Install with Homebrew```bashbrew install bpytop```&gt;Optional coretemp (Shows temperatures for cpu cores)```bashbrew install hacker1024/hacker1024/coretemp```&gt;Alternatively install with MacPorts```bashport install bpytop```OsX on Apple Silicon (arm) requires psutil version 5.8.0 to work and currently has no temperature monitoring.Upgrade psutil with `sudo pip3 install psutil --upgrade`### Arch LinuxAvailable in the Arch Linux [community] repository as `bpytop`&gt;Installation```bashsudo pacman -S bpytop```### Debian basedAvailable in [official Debian repository](https://tracker.debian.org/pkg/bpytop) since Debian 11&gt;Installation```bashsudo apt install bpytop```Available for debian/ubuntu from [Azlux's repository](http://packages.azlux.fr/)### FreeBSD packageAvailable in [FreeBSD ports](https://www.freshports.org/sysutils/bpytop/)&gt;Install pre-built package``` bashsudo pkg install bpytop```### Fedora/CentOS 8 package[Available](https://src.fedoraproject.org/rpms/bpytop) in the Fedora and [EPEL-8 repository](https://fedoraproject.org/wiki/EPEL).&gt;Installation``` bashsudo dnf install bpytop```### Gentoo / Calculate LinuxAvailable from [adrien-overlay](https://github.com/aaaaadrien/adrien-overlay)&gt;Installation``` bashsudo emerge -av sys-process/bpytop```### Mageia Cauldron (Mageia 8)Available in Mageia Cauldron and then Mageia 8 when it is released.&gt;Installation``` bashsudo urpmi bpytopsudo dnf install bpytop```### MX LinuxAvailable in the MX Test Repo as `bpytop`Please use MX Package Installer MX Test Repo tab to install.http://mxrepo.com/mx/testrepo/pool/test/b/bpytop/### Void LinuxAvailable in void repo and void-packages ports tree&gt;Installation``` bashsudo xbps-install bpytop```### Snap package(Note! There is some issues caused by the snap sandboxing)by @kz6fittycenthttps://github.com/kz6fittycent/bpytop-snap&gt;Install the package``` bashsudo snap install bpytop```The config folder will be located in `~/snap/bpytop/current/.config/bpytop`## Manual installation#### Dependencies installation Linux&gt;Install python3 and git with a package manager of you choice&gt;Install psutil python module (sudo might be required)``` bashpython3 -m pip install psutil```#### Dependencies installation OSX&gt;Install homebrew if not already installed``` bash/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;```&gt;Install python3 if not already installed``` bashbrew install python3 git```&gt;Install psutil python module``` bashpython3 -m pip install psutil```&gt;Install optional dependency coretemp (recommended), or osx-cpu-temp (less accurate)``` bashbrew install hacker1024/hacker1024/coretemp`````` bashbrew install osx-cpu-temp```#### Dependencies installation FreeBSD&gt;Install with pkg and pip``` bashsudo pkg install git python3 py37-psutil```#### Manual installation Linux, OSX and FreeBSD&gt;Clone and install``` bashgit clone https://github.com/aristocratos/bpytop.gitcd bpytopsudo make install```&gt;to uninstall it``` bashsudo make uninstall```## ConfigurabilityAll options changeable from within UI.Config files stored in &quot;$HOME/.config/bpytop&quot; folder#### bpytop.cfg: (auto generated if not found)&quot;/etc/bpytop.conf&quot; will be used as default seed for config file creation if it exists. (&quot;/usr/local/etc/bpytop.conf&quot; on BSD)```bash#? Config file for bpytop v. 1.0.64#* Color theme, looks for a .theme file in &quot;/usr/[local/]share/bpytop/themes&quot; and &quot;~/.config/bpytop/themes&quot;, &quot;Default&quot; for builtin default theme.#* Prefix name by a plus sign (+) for a theme located in user themes folder, i.e. color_theme=&quot;+monokai&quot;color_theme=&quot;monokai&quot;#* If the theme set background should be shown, set to False if you want terminal background transparencytheme_background=False#* Sets if 24-bit truecolor should be used, will convert 24-bit colors to 256 color (6x6x6 color cube) if false.truecolor=True#* Manually set which boxes to show. Available values are &quot;cpu mem net proc&quot;, separate values with whitespace.shown_boxes=&quot;cpu mem net proc&quot;#* Update time in milliseconds, increases automatically if set below internal loops processing time, recommended 2000 ms or above for better sample times for graphs.update_ms=2000#* Processes update multiplier, sets how often the process list is updated as a multiplier of &quot;update_ms&quot;.#* Set to 2 or higher to greatly decrease bpytop cpu usage. (Only integers)proc_update_mult=2#* Processes sorting, &quot;pid&quot; &quot;program&quot; &quot;arguments&quot; &quot;threads&quot; &quot;user&quot; &quot;memory&quot; &quot;cpu lazy&quot; &quot;cpu responsive&quot;,#* &quot;cpu lazy&quot; updates top process over time, &quot;cpu responsive&quot; updates top process directly.proc_sorting=&quot;cpu lazy&quot;#* Reverse sorting order, True or False.proc_reversed=False#* Show processes as a treeproc_tree=False#* Which depth the tree view should auto collapse processes attree_depth=3#* Use the cpu graph colors in the process list.proc_colors=True#* Use a darkening gradient in the process list.proc_gradient=True#* If process cpu usage should be of the core it's running on or usage of the total available cpu power.proc_per_core=False#* Show process memory as bytes instead of percentproc_mem_bytes=True#* Sets the CPU stat shown in upper half of the CPU graph, &quot;total&quot; is always available, see:#* https://psutil.readthedocs.io/en/latest/#psutil.cpu_times for attributes available on specific platforms.#* Select from a list of detected attributes from the options menucpu_graph_upper=&quot;total&quot;#* Sets the CPU stat shown in lower half of the CPU graph, &quot;total&quot; is always available, see:#* https://psutil.readthedocs.io/en/latest/#psutil.cpu_times for attributes available on specific platforms.#* Select from a list of detected attributes from the options menucpu_graph_lower=&quot;total&quot;#* Toggles if the lower CPU graph should be inverted.cpu_invert_lower=True#* Set to True to completely disable the lower CPU graph.cpu_single_graph=False#* Shows the system uptime in the CPU box.show_uptime=True#* Check cpu temperature, needs &quot;osx-cpu-temp&quot; on MacOS X.check_temp=True#* Which sensor to use for cpu temperature, use options menu to select from list of available sensors.cpu_sensor=Auto#* Show temperatures for cpu cores also if check_temp is True and sensors has been foundshow_coretemp=True#* Which temperature scale to use, available values: &quot;celsius&quot;, &quot;fahrenheit&quot;, &quot;kelvin&quot; and &quot;rankine&quot;temp_scale=&quot;celsius&quot;#* Show CPU frequency, can cause slowdowns on certain systems with some versions of psutilshow_cpu_freq=True#* Draw a clock at top of screen, formatting according to strftime, empty string to disable.draw_clock=&quot;%H:%M&quot;#* Update main ui in background when menus are showing, set this to false if the menus is flickering too much for comfort.background_update=True#* Custom cpu model name, empty string to disable.custom_cpu_name=&quot;&quot;#* Optional filter for shown disks, should be full path of a mountpoint, separate multiple values with a comma &quot;,&quot;.#* Begin line with &quot;exclude=&quot; to change to exclude filter, otherwise defaults to &quot;most include&quot; filter. Example: disks_filter=&quot;exclude=/boot, /home/user&quot;disks_filter=&quot;exclude=/boot&quot;#* Show graphs instead of meters for memory values.mem_graphs=True#* If swap memory should be shown in memory box.show_swap=True#* Show swap as a disk, ignores show_swap value above, inserts itself after first disk.swap_disk=True#* If mem box should be split to also show disks info.show_disks=True#* Filter out non physical disks. Set this to False to include network disks, RAM disks and similar.only_physical=True#* Read disks list from /etc/fstab. This also disables only_physical.use_fstab=True#* Toggles if io stats should be shown in regular disk usage viewshow_io_stat=True#* Toggles io mode for disks, showing only big graphs for disk read/write speeds.io_mode=False#* Set to True to show combined read/write io graphs in io mode.io_graph_combined=False#* Set the top speed for the io graphs in MiB/s (10 by default), use format &quot;device:speed&quot; separate disks with a comma &quot;,&quot;.#* Example: &quot;/dev/sda:100, /dev/sdb:20&quot;io_graph_speeds=&quot;&quot;#* Set fixed values for network graphs, default &quot;10M&quot; = 10 Mibibytes, possible units &quot;K&quot;, &quot;M&quot;, &quot;G&quot;, append with &quot;bit&quot; for bits instead of bytes, i.e &quot;100mbit&quot;net_download=&quot;100Mbit&quot;net_upload=&quot;100Mbit&quot;#* Start in network graphs auto rescaling mode, ignores any values set above and rescales down to 10 Kibibytes at the lowest.net_auto=True#* Sync the scaling for download and upload to whichever currently has the highest scalenet_sync=False#* If the network graphs color gradient should scale to bandwidth usage or auto scale, bandwidth usage is based on &quot;net_download&quot; and &quot;net_upload&quot; valuesnet_color_fixed=False#* Starts with the Network Interface specified here.net_iface=&quot;br0&quot;#* Show battery stats in top right if battery is presentshow_battery=True#* Show init screen at startup, the init screen is purely cosmeticalshow_init=False#* Enable check for new version from github.com/aristocratos/bpytop at start.update_check=True#* Set loglevel for &quot;~/.config/bpytop/error.log&quot; levels are: &quot;ERROR&quot; &quot;WARNING&quot; &quot;INFO&quot; &quot;DEBUG&quot;.#* The level set includes all lower levels, i.e. &quot;DEBUG&quot; will show all logging info.log_level=DEBUG```#### Command line options:``` textusage: bpytop.py [-h] [-b BOXES] [-lc] [-v] [--debug]optional arguments:  -h, --help            show this help message and exit  -b BOXES, --boxes BOXES                        which boxes to show at start, example: -b &quot;cpu mem net proc&quot;  -lc, --low-color      disable truecolor, converts 24-bit colors to 256-color  -v, --version         show version info and exit  --debug               start with loglevel set to DEBUG overriding value set in config```## LICENSE[Apache License 2.0](https://github.com/aristocratos/bpytop/blob/master/LICENSE)</longdescription>
</pkgmetadata>