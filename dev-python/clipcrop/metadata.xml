<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># clipcrop- Extract sections of images from your image by using OpenAI's CLIP and YoloSmall implemented on HuggingFace Transformers- Added new capability for segmentation using CLIP and Detr segmentation models# Installation```pythonpip install clipcrop```## Clip CropExtract sections of images from your image by using OpenAI's CLIP and YoloSmall implemented on HuggingFace Transformers ### Implementation```pythonfrom clipcrop import clipcropcc = clipcrop.ClipCrop(&quot;/content/sample.jpg&quot;)DFE, DM, CLIPM, CLIPP = cc.load_models()result = cc.extract_image(DFE, DM, CLIPM, CLIPP, &quot;text content&quot;, num=2)# gives a list of dicitonary of top images and its relative similarity score and you can override this by setting num = 5  to get top 5 etc while initiating the class```&lt;!-- ### Result&lt;p style=&quot;font-style: italic;&quot;&gt;clipcrop = ClipCrop(&quot;/content/nm.jpg&quot;, &quot;woman in white frock&quot;)&lt;/p&gt;&lt;p float=&quot;left&quot;&gt;&lt;img src=&quot;/nm.jpg&quot; width=&quot;600&quot; height=&quot;350&quot;&gt;&lt;img src=&quot;/clipcrop.jpeg&quot; width=&quot;150&quot; height=&quot;300&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;font-style: italic;&quot;&gt;cc = ClipCrop('/content/rd.jpg', 'woman walking', 2)&lt;/p&gt;&lt;p float=&quot;left&quot;&gt;&lt;img src=&quot;/rd.jpg&quot; width=&quot;600&quot; height=&quot;350&quot;&gt;&lt;img src=&quot;/rmc.jpeg&quot; width=&quot;150&quot; height=&quot;300&quot;&gt;&lt;/p&gt; --&gt;### CaptchaSolve captacha images using CLIP and Object detection models.```pythonfrom clipcrop import clipcrop# second arguement is the text prompt eg:image of carscc = clipcrop.ClipCrop(image_path)#loading models, processors, feature extractorsDFE, DM, CLIPM, CLIPP = cc.load_models()#generally keep high threshold to avoid noisesresult = cc.captcha(CLIPM, CLIPP, 4)```## Clip SegmentationSegment out images using Detr Panoptic segmentation pipeline and leverage CLIP models to derive the most probable one for your query### Implementation```pythonfrom clipcrop import clipcropclipseg = clipcrop.ClipSeg(&quot;/content/input.png&quot;, &quot;black colored car&quot;)segmentor, clipmodel, clipprocessor = clipseg.load_models()result = clipseg.segment_image(segmentor, clipmodel, clipprocessor)# gives a list of dicitonary of top images and its relative similarity score and you can override this by setting num = 5  to get top 5 etc```### Remove Background```pythonfrom clipcrop import clipcropclipseg = clipcrop.ClipSeg(&quot;/content/input.png&quot;, &quot;black colored car&quot;)result = clipseg.remove_background()```### Other projects- [SnapCode : Extract code blocks from images mixed with normal text](https://github.com/Vishnunkumar/snapcode)- [HuggingFaceInference: Inference of different uses cases of finetued models](https://github.com/Vishnunkumar/huggingfaceinference)</longdescription>
</pkgmetadata>