<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ðŸ“© myl-discoverymyl-discovery is a Python library designed to detect email settings of a givenemail address or domain.## ðŸ“¥ InstallationTo install myl-discovery, run the following command:```bashpip install myl-discovery```## ðŸ“– UsageAfter installing the package, you can use the `autodiscover` function todiscover the email settings for a domain. Here's an example:```pythonfrom myldiscovery import autodiscoversettings = autodiscover(&quot;yourdomain.com&quot;)  # or me@yourdomain.comprint(settings)# For Exchange autodiscovery you need to provide credentialssettings = autodiscover(    'me@yourdomain.com',    username='WORKGROUP\me',    password='mypassword1234')```## ðŸ“„ OutputThe `autodiscover` function returns a dictionary with the detected settings.The dictionary contains two keys, `imap` and `smtp`, each containing adictionary with the keys `server`, `port`, and `starttls`.Here's an example:```json{  &quot;imap&quot;: {    &quot;server&quot;: &quot;imap.yourdomain.com&quot;,    &quot;port&quot;: 993,    &quot;starttls&quot;: false  },  &quot;smtp&quot;: {    &quot;server&quot;: &quot;smtp.yourdomain.com&quot;,    &quot;port&quot;: 587,    &quot;starttls&quot;: true  }}```## ðŸ§© Autodiscover Functionsmyl-discovery exposes several functions to discover email settings:- `autodiscover`: This function wraps the below function do automatically detectthe right settings. (See Autodiscover strategy for more information)- `autodiscover_srv`: This function attempts to resolve SRV records forthe domain to discover IMAP and SMTP servers.- `autodiscover_exchange`: This function attempts to use the ExchangeAutodiscover service to discover email settings. It requires a username andpassword.- `autodiscover_autoconfig`: This function attempts to fetch and parse anautoconfig XML file from a URL specified in the domain's TXT records.- `autodiscover_port_scan`: This function performs a port scan on the domainto discover open IMAP and SMTP ports.## ðŸ§  Autodiscover StrategyThe `autodiscover` function uses the following strategy to discoveremail settings:1. It first attempts to use `autodiscover_autoconfig` to discover settingsfrom an autoconfig/autodiscover URL specified in the domain's TXT records.2. If that fails, it attempts to use `autodiscover_srv` to discover settingsfrom the domain's SRV records.3. If that fails and a password is provided, it attempts to use`autodiscover_exchange` to discover settings using theExchange Autodiscover service (only if credentials were provided)4. If all else fails, it uses `autodiscover_port_scan` to discover settings byperforming a port scan on the domain.## ðŸ’» CLI usageIf you do not intend to use the Python library and just want to detect theconnection settings of an arbitrary email, myl-discovery also ships with aCLI tool.### ðŸ“¥ Installation```shellpipx install myl-discovery```### ðŸ“– Usage```$ myl-discovery --helpusage: myl-discovery [-h] [-j] [-d] [-u USERNAME] [-p PASSWORD] EMAILpositional arguments:  EMAILoptions:  -h, --help            show this help message and exit  -j, --json  -d, --debug  -u USERNAME, --username USERNAME                        Username (Exchange only)  -p PASSWORD, --password PASSWORD                        Password (Exchange only)```Example:```$ myl-discovery user01@gmail.com Service          Host                           Port       Encryption imap             imap.gmail.com                 993        tls smtp             smtp.gmail.com                 587        tls```## ðŸ“œ Licensemyl-discovery is licensed under the [GNU General Public License v3.0](LICENSE).</longdescription>
</pkgmetadata>