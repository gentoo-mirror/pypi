<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;200&quot; src=&quot;https://app.tickerdax.com/assets/images/logo/logo.svg&quot; alt=&quot;icon&quot;/&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;TickerDax Client&lt;/h1&gt;&lt;br&gt;&lt;/br&gt;A python package that interfaces with the tickerdax.com REST and websockets API. It handles common data operationslike batch downloading data, streaming real-time data, and caching data locally to minimize network requests.## InstallationYou can install this package with pip by running the command below.```shellpip install tickerdax```## Docker DependencyThis client interfaces with a redis docker container. In order for the package to work, you must first installdocker. Here are instructions per platform.### Mac[Instructions](https://docs.docker.com/desktop/install/mac-install/)### Linux[Instructions](https://docs.docker.com/desktop/install/linux-install/)### WindowsNote on windows you must first install [WSL](https://docs.microsoft.com/en-us/windows/wsl/install) then you can install docker.[Instructions](https://docs.docker.com/desktop/install/windows-install/)## Python ExamplesHere is a basic example of getting historical data using the python SDK.### Get historical data```pythonfrom pprint import pprintfrom datetime import datetime, timezonefrom tickerdax.client import TickerDaxclient = TickerDax()pprint(client.get_route(    route='order-book/predictions/v1/50',    symbols=[&quot;BTC&quot;],    start=datetime.now(tz=timezone.utc),    end=datetime.now(tz=timezone.utc)))```Note that if this data doesn't exist in your cache, the data will be fetched from the REST API. Allsubsequent calls to the same data will only be from the cache and not the REST API.This is designed give you lighting fast responses and ultimately deliver data to you a cheaper cost.### Stream realtime dataThis is how you can stream data to your cache. This will run indefinitely and fillyour local cache as new data is available.```pythonclient.stream(    routes={        'order-book/predictions/v1/50': ['BTC', 'LTC'],    },)```In another process you can call `client.get_route()` as many times you like or whenever yourapp re-evaluates. The data will be available once it is updated by the stream.## DocumentationRead the user documentation [here](https://docs.tickerdax.com).</longdescription>
</pkgmetadata>