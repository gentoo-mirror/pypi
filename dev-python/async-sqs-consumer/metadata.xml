<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Async SQS consumerPython asynchronous (**async** / **await**) worker for consuming messagesfrom AWS SQS.This is a hobby project, if you find the project interestingany contribution is welcome.## UsageYou must create an instance of the worker with the url of the queue.Aws credentials are taken from environment variables, you must set thefollowing environment variables. Or you can provide a Context object with theaws credentials `async_sqs_consumer.types.Context`- `AWS_ACCESS_KEY_ID`- `AWS_SECRET_ACCESS_KEY`Example:You can get the queue url with the follow aws cli command`aws sqs get-queue-url --queue-name xxxxxx````python# test_worker.pyfrom async_sqs_consumer.worker import (    Worker,)worker = Worker(    queue_url=&quot;https://sqs.us-east-1.amazonaws.com/xxxxxxx/queue_name&quot;)@worker.task(&quot;report&quot;)async def report(text: str) -&gt; None:    print(text)if __name__: &quot;__main__&quot;:    worker.start()```Now you can initialize the worker `python test_worker.py`Now you need to post a message for the worker to process```pythonimport jsonimport boto3import uuidclient = boto3.client(&quot;sqs&quot;)client.send_message(    QueueUrl=&quot;https://sqs.us-east-1.amazonaws.com/xxxxxxx/queue_name&quot;,    MessageBody=json.dumps(        {            &quot;task&quot;: &quot;report&quot;,            &quot;id&quot;: uuid.uuid4().hex,            &quot;args&quot;: [&quot;hello world&quot;],        }    ),)```Or you can use aioboto3```pythonimport asyncioimport jsonimport aioboto3import uuidasync def main() -&gt; None:    session = aioboto3.Session()    async with session.client(&quot;sqs&quot;) as client:        await client.send_message(            QueueUrl=&quot;https://sqs.us-east-1.amazonaws.com/xxxxxxx/queue_name&quot;,            MessageBody=json.dumps(                {                    &quot;task&quot;: &quot;report&quot;,                    &quot;id&quot;: uuid.uuid4().hex,                    &quot;args&quot;: [&quot;hello world&quot;],                }            ),        )if __name__ == &quot;__main__&quot;:    asyncio.run(main())```To publish the messages they must have the following structure```json{    &quot;type&quot;: &quot;object&quot;,    &quot;properties&quot;: {        &quot;task&quot;: {&quot;type&quot;: &quot;string&quot;},        &quot;id&quot;: {&quot;type&quot;: &quot;string&quot;},        &quot;args&quot;: {&quot;type&quot;: &quot;array&quot;},        &quot;kwargs&quot;: {&quot;type&quot;: &quot;object&quot;},        &quot;retries&quot;: {&quot;type&quot;: &quot;number&quot;},        &quot;eta&quot;: {&quot;type&quot;: &quot;string&quot;},        &quot;expires&quot;: {&quot;type&quot;: &quot;string&quot;},    },    &quot;required&quot;: [&quot;task&quot;, &quot;id&quot;],}```</longdescription>
</pkgmetadata>