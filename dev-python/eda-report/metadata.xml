<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `eda-report` - Automated Exploratory Data Analysis[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Tim-Abwao/eda-report/HEAD?filepath=eda-report-basics.ipynb)[![PyPI version](https://badge.fury.io/py/eda-report.svg)](https://badge.fury.io/py/eda-report)[![Python 3.8 - 3.11](https://github.com/Tim-Abwao/eda-report/actions/workflows/test-python3.8-3.11.yml/badge.svg)](https://github.com/Tim-Abwao/eda-report/actions/workflows/test-python3.8-3.11.yml)[![Documentation Status](https://readthedocs.org/projects/eda-report/badge/?version=latest)](https://eda-report.readthedocs.io/en/latest/?badge=latest)[![codecov](https://codecov.io/gh/Tim-Abwao/eda-report/branch/main/graph/badge.svg?token=KNQD8XZCWG)](https://codecov.io/gh/Tim-Abwao/eda-report)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)A Python program to help automate the exploratory data analysis and reporting process.Input data is analyzed using [pandas][pandas] and [SciPy][scipy]. Graphs are plotted using [matplotlib][matplotlib]. The results are then nicely packaged as a *Word (.docx)* document using [python-docx][python-docx].## InstallationYou can install the package from [PyPI][eda-report-pypi] using:```bashpip install eda-report```## Basic Usage### 1. Graphical User InterfaceThe `eda-report` command launches a graphical window to help select and analyze a `csv`/`excel` file:```basheda-report```![screencast of the gui][screencast]You will be prompted to set a *report title*, *group-by variable (optional)*, *graph color* and *output filename*, after which the contents of the input file will be analyzed, and the results will be saved in a *Word (.docx)* document.&gt;**NOTE:** For help with `Tk` - related issues, consider visiting [TkDocs][tkdocs].### 2. Command Line InterfaceTo analyze a file named `input.csv`, just supply its path to the `eda-report` command:```basheda-report -i input.csv```Or even:```basheda-report -i input.csv -o output.docx -c cyan --title 'EDA Report'```For more details on the optional arguments, pass the `-h` or `--help` flag to view the *help message*:```basheda-report -h```&lt;details&gt;```bashusage: eda-report [-h] [-i INFILE] [-o OUTFILE] [-t TITLE] [-c COLOR]                  [-g GROUPBY]Automatically analyze data and generate reports. A graphical user interfacewill be launched if none of the optional arguments is specified.optional arguments:  -h, --help            show this help message and exit  -i INFILE, --infile INFILE                        A .csv or .xlsx file to analyze.  -o OUTFILE, --outfile OUTFILE                        The output name for analysis results (default: eda-                        report.docx)  -t TITLE, --title TITLE                        The top level heading for the report (default:                        Exploratory Data Analysis Report)  -c COLOR, --color COLOR                        The color to apply to graphs (default: cyan)  -g GROUPBY, -T GROUPBY, --groupby GROUPBY, --target GROUPBY                        The variable to use for grouping plotted values. An                        integer value is treated as a column index, whereas a                        string is treated as a column label.```&lt;/details&gt;### 3. Interactive Mode#### 3.1 Analyze data```python&gt;&gt;&gt; eda_report.summarize(iris_data)                        OVERVIEW                        ========Numeric features: sepal_length, sepal_width, petal_length, petal_widthCategorical features: species          Summary Statistics (Numeric features)          -------------------------------------              count    mean     std  min  25%   50%  75%  max  skewness  kurtosissepal_length  150.0  5.8433  0.8281  4.3  5.1  5.80  6.4  7.9    0.3149   -0.5521sepal_width   150.0  3.0573  0.4359  2.0  2.8  3.00  3.3  4.4    0.3190    0.2282petal_length  150.0  3.7580  1.7653  1.0  1.6  4.35  5.1  6.9   -0.2749   -1.4021petal_width   150.0  1.1993  0.7622  0.1  0.3  1.30  1.8  2.5   -0.1030   -1.3406          Summary Statistics (Categorical features)          -----------------------------------------        count unique     top freq relative freqspecies   150      3  setosa   50        33.33%          Pearson's Correlation (Top 20)          ------------------------------petal_length &amp; petal_width --&gt; very strong positive correlation (0.96)sepal_length &amp; petal_length --&gt; very strong positive correlation (0.87)sepal_length &amp; petal_width --&gt; very strong positive correlation (0.82)sepal_width &amp; petal_length --&gt; moderate negative correlation (-0.43)sepal_width &amp; petal_width --&gt; weak negative correlation (-0.37)sepal_length &amp; sepal_width --&gt; very weak negative correlation (-0.12)```#### 3.2 Plot statistical graphs```python&gt;&gt;&gt; fig = ep.regression_plot(mpg_data[&quot;acceleration&quot;], mpg_data[&quot;horsepower&quot;],...                          labels=(&quot;Acceleration&quot;, &quot;Horsepower&quot;))&gt;&gt;&gt; fig.savefig(&quot;regression-plot.png&quot;)```&lt;img src=&quot;https://raw.githubusercontent.com/Tim-Abwao/eda-report/dev/docs/source/_static/regression-plot.png&quot; width=400px style=&quot;display: block; margin: auto;&quot;&gt;#### 3.3 Generate a report```python&gt;&gt;&gt; eda_report.get_word_report(iris_data)Analyze variables:  100%|███████████████████████████████████| 5/5Plot variables:     100%|███████████████████████████████████| 5/5Bivariate analysis: 100%|███████████████████████████████████| 6/6 pairs.[INFO 16:14:53.648] Done. Results saved as 'eda-report.docx'&lt;eda_report.document.ReportDocument object at 0x7f196753bd60&gt;```Visit the [official documentation][docs] for more info.[docs]: https://eda-report.readthedocs.io/[eda-report-pypi]: https://pypi.org/project/eda-report/[matplotlib]: https://matplotlib.org/[pandas]: https://pandas.pydata.org/[python-docx]: https://python-docx.readthedocs.io/[scipy]: https://scipy.org/[screencast]: https://raw.githubusercontent.com/Tim-Abwao/eda-report/dev/docs/source/_static/screencast.gif[tkdocs]: https://tkdocs.com/index.html</longdescription>
</pkgmetadata>