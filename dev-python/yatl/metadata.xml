<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Yet Another Template LanguageThis is the web2py template language described [here](http://web2py.com/books/default/chapter/29/05/the-views) made available as stand alone package so it can be used anywhere.Basically it is pure Python within &quot;{{&quot; ... &quot;}}&quot; delimiters and blocks are terminated with &quot;pass&quot; if termination is not obvious. There is no indentation constraints.For example:```from yatl import render, SPANexample = &quot;&quot;&quot;&lt;div&gt; {{ for k in range(num): }}&lt;span&gt;{{=SPAN(k, _class='number')}} is {{if k % 2 == 0:}}even{{else:}}odd{{pass}}&lt;/span&gt;{{ pass }}&lt;/div&gt;&quot;&quot;&quot;print(render(example, context=dict(num=10, SPAN=SPAN), delimiters=&quot;{{ }}&quot;))```In the example SPAN is an optional helper.Output is escaped by default unless marked up with the XML helper as in {{=XML('1 &lt; 2')}}.Note that the helpers included here are similar but not identical to the web2py ones.They are 99% compatible but the implementation is different.Any Python expressions is allowed in templates, including function and class defintions:```example = &quot;&quot;&quot;{{ def link(x): }}&lt;a href=&quot;{{=x}}&quot;&gt;{{=x}}&lt;/a&gt;{{ pass }}&lt;ul&gt;  {{ for k in range(num): }}  &lt;li&gt;     {{= link('http://example.com/%s' % k) }}  &lt;/li&gt;  {{ pass }}&lt;/ul&gt;&quot;&quot;&quot;print(render(example, context=dict(num=10), delimiters=&quot;{{ }}&quot;))```## CachingIf you implement a caching reader as the one below, you mak yatl even faster:```CACHE = {}def reader(filename):    if filename in CACHE:        return CACHE[filename]    with open(filename) as fp;        CACHE[filename] = content = fp.read()    return content      output = yatl.render(reader(filename), path=path, reader=reader)```</longdescription>
</pkgmetadata>