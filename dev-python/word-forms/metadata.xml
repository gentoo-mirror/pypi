<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/gutfeeling/word_forms/raw/master/logo.png&quot; alt=&quot;word forms logo&quot; width=&quot;500&quot;&gt;## Accurately generate all possible forms of an English wordWord forms can accurately generate all possible forms of an English word. It can conjugate verbs. It can connect differentparts of speeches e.g noun to adjective, adjective to adverb, noun to verb etc. It can pluralize singular nouns. It does this all in one function. Enjoy!## ExamplesSome very timely examples :-P```python&gt;&gt;&gt; from word_forms.word_forms import get_word_forms&gt;&gt;&gt; get_word_forms(&quot;president&quot;)&gt;&gt;&gt; {'n': {'presidents', 'presidentships', 'presidencies', 'presidentship', 'president', 'presidency'},     'a': {'presidential'},     'v': {'preside', 'presided', 'presiding', 'presides'},     'r': {'presidentially'}}&gt;&gt;&gt; get_word_forms(&quot;elect&quot;)&gt;&gt;&gt; {'n': {'elects', 'electives', 'electors', 'elect', 'eligibilities', 'electorates', 'eligibility', 'elector', 'election', 'elections', 'electorate', 'elective'},     'a': {'eligible', 'electoral', 'elective', 'elect'},     'v': {'electing', 'elects', 'elected', 'elect'},     'r': set()}&gt;&gt;&gt; get_word_forms(&quot;politician&quot;)&gt;&gt;&gt; {'n': {'politician', 'politics', 'politicians'},     'a': {'political'},     'v': set(),     'r': {'politically'}}&gt;&gt;&gt; get_word_forms(&quot;am&quot;)&gt;&gt;&gt; {'n': {'being', 'beings'},     'a': set(),     'v': {'was', 'be', &quot;weren't&quot;, 'am', &quot;wasn't&quot;, &quot;aren't&quot;, 'being', 'were', 'is', &quot;isn't&quot;, 'been', 'are', 'am not'},     'r': set()}&gt;&gt;&gt; get_word_forms(&quot;ran&quot;)&gt;&gt;&gt; {'n': {'run', 'runniness', 'runner', 'runninesses', 'running', 'runners', 'runnings', 'runs'},     'a': {'running', 'runny'},     'v': {'running', 'run', 'ran', 'runs'},     'r': set()}&gt;&gt;&gt; get_word_forms('continent', 0.8) # with configurable similarity threshold&gt;&gt;&gt; {'n': {'continents', 'continency', 'continences', 'continent', 'continencies', 'continence'},     'a': {'continental', 'continent'},     'v': set(),     'r': set()}```As you can see, the output is a dictionary with four keys. &quot;r&quot; stands for adverb, &quot;a&quot; for adjective, &quot;n&quot; for nounand &quot;v&quot; for verb. Don't ask me why &quot;r&quot; stands for adverb. This is what WordNet uses, so this is why I use it too :-)Help can be obtained at any time by typing the following:```python&gt;&gt;&gt; help(get_word_forms)```## Why?In Natural Language Processing and Search, one often needs to treat words like &quot;run&quot; and &quot;ran&quot;, &quot;love&quot; and &quot;lovable&quot;or &quot;politician&quot; and &quot;politics&quot; as the same word. This is usually done by algorithmically reducing each word into abase word and then comparing the base words. The process is called Stemming.For example, the [Porter Stemmer](http://text-processing.com/demo/stem/) reduces both &quot;love&quot; and &quot;lovely&quot;into the base word &quot;love&quot;.Stemmers have several shortcomings. Firstly, the base word produced by the Stemmer is not always a valid English word.For example, the Porter Stemmer reduces the word &quot;operation&quot; to &quot;oper&quot;. Secondly, the Stemmers have a high false negative rate.For example, &quot;run&quot; is reduced to &quot;run&quot; and &quot;ran&quot; is reduced to &quot;ran&quot;. This happens because the Stemmers use a set ofrational rules for finding the base words, and as we all know, the English language does not always behave very rationally.Lemmatizers are more accurate than Stemmers because they produce a base form that is present in the dictionary (also called the Lemma). So the reduced word is always a valid English word. However, Lemmatizers also have false negatives because they are not very good at connecting words across different parts of speeches. The [WordNet Lemmatizer](http://textanalysisonline.com/nltk-wordnet-lemmatizer) included with NLTK fails at almost all such examples. &quot;operations&quot; is reduced to &quot;operation&quot;  and &quot;operate&quot; is reduced to &quot;operate&quot;.Word Forms tries to solve this problem by finding all possible forms of a given English word. It can perform verb conjugations, connect noun forms to verb forms, adjective forms, adverb forms, plularize singular forms etc.## Bonus: A simple lemmatizerWe also offer a very simple lemmatizer based on ``word_forms``. Here is how to use it.```python&gt;&gt;&gt; from word_forms.lemmatizer import lemmatize&gt;&gt;&gt; lemmatize(&quot;operations&quot;)'operant'&gt;&gt;&gt; lemmatize(&quot;operate&quot;)'operant'```Enjoy!## CompatibilityTested on Python 3## InstallationUsing `pip`:```pip install -U word_forms```### From sourceOr you can install it from source:1. Clone the repository:```git clone https://github.com/gutfeeling/word_forms.git```2. Install it using `pip` or `setup.py````pip install -e word_forms% orcd word_formspython setup.py install```## Acknowledgement1. [The XTAG project](http://www.cis.upenn.edu/~xtag/) for information on [verb conjugations](word_forms/en-verbs.txt).2. [WordNet](http://wordnet.princeton.edu/)## MaintainerHi, I am Dibya and I maintain this repository. I would love to hear from you. Feel free to get in touch with meat dibyachakravorty@gmail.com.## Contributors- Tom Aarsen @CubieDev is a major contributor and is singlehandedly responsible for v2.0.0.- Sajal Sharma @sajal2692 ia a major contributor.## ContributionsWord Forms is not perfect. In particular, a couple of aspects can be improved.1. It sometimes generates non dictionary words like &quot;runninesses&quot; because the pluralization/singularization algorithm isnot perfect. At the moment, I am using [inflect](https://pypi.python.org/pypi/inflect) for it.If you like this package, feel free to contribute. Your pull requests are most welcome.</longdescription>
</pkgmetadata>