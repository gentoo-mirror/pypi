<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aiotg=====Asynchronous Python API for building Telegram bots, featuring:- Easy and declarative API- Hassle-free setup - no need for SSL certificates or static IP- Built-in support for analytics via chatbase.com- Automatic handling of Telegram API throttling or timeoutsInstall it with pip:.. code:: sh    pip install aiotgThen you can create a new bot in few lines:.. code:: python    from aiotg import Bot, Chat    bot = Bot(api_token=&quot;...&quot;)    @bot.command(r&quot;/echo (.+)&quot;)    def echo(chat: Chat, match):        return chat.reply(match.group(1))    bot.run()Now run it with a proper API\_TOKEN and it should reply to /echo commands... note:: Type annotations are not required but will help your editor/IDE to provide code completion.The example above looks like a normal synchronous code but it actually returns a coroutine.If you want to make an external request (and that's what bots usually do) just use aiohttp and async/await syntax:.. code:: python    import aiohttp    from aiotg import Bot, Chat    bot = Bot(api_token=&quot;...&quot;)    @bot.command(&quot;bitcoin&quot;)    async def bitcoin(chat: Chat, match):        url = &quot;https://apiv2.bitcoinaverage.com/indices/global/ticker/BTCUSD&quot;        async with aiohttp.ClientSession() as session:            response = await session.get(url)            info = await response.json()            await chat.send_text(str(info[&quot;averages&quot;][&quot;day&quot;]))    bot.run()But what if you just want to write a quick integration and don't need to provide a conversational interface? We've got you covered!You can send messages (or any other media) by constructing a Chat object with user_id or channel name. We even saved you some extra keystrokes by providing handy Channel constructors:.. code:: python    ...    channel = bot.channel(&quot;@yourchannel&quot;)    private = bot.private(&quot;1111111&quot;)    async def greeter():        await channel.send_text(&quot;Hello from channel!&quot;)        await private.send_text(&quot;Why not greet personally?&quot;)    ...Examples---------------- `Async IO &lt;https://github.com/szastupov/aiotg/blob/master/examples/async.py&gt;`__- `Send image &lt;https://github.com/szastupov/aiotg/blob/master/examples/getimage.py&gt;`__- `Post to channel &lt;https://github.com/szastupov/aiotg/blob/master/examples/post_to_channel.py&gt;`__- `Webhooks mode &lt;https://github.com/szastupov/aiotg/blob/master/examples/webhook.py&gt;`__- `Sender id &lt;https://github.com/szastupov/aiotg/blob/master/examples/whoami.py&gt;`__For a real world example, take a look at`WhatisBot &lt;https://github.com/szastupov/whatisbot/blob/master/main.py&gt;`__ or `Music Catalog Bot &lt;https://github.com/szastupov/musicbot&gt;`__.For more information on how to use the project, see the project's `documentation &lt;http://szastupov.github.io/aiotg/index.html&gt;`__.</longdescription>
</pkgmetadata>