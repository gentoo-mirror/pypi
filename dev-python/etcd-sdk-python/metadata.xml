<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyetcd[![version](https://img.shields.io/pypi/v/etcd-sdk-python.svg?color=blue)](https://pypi.org/project/etcd-sdk-python/)[![Supported Python Versions](https://img.shields.io/pypi/pyversions/etcd-sdk-python?logo=python&amp;logoColor=blue)](https://pypi.org/project/etcd-sdk-python/)[![Downloads](https://pepy.tech/badge/etcd-sdk-python)](https://pepy.tech/project/etcd-sdk-python)[![Downloads](https://pepy.tech/badge/etcd-sdk-python/month)](https://pepy.tech/project/etcd-sdk-python/month)[![license](https://img.shields.io/hexpm/l/plug.svg?color=green)](https://github.com/xuanyang-cn/pyetcd/blob/main/LICENSE)Python client for the etcd API v3, supported python &gt;= 3.7, under active maintenance## Install```shellpip install etcd-sdk-python```## Road maps and TODOs### Road maps|version|release date|target|status||:-----:|:----------:|------|:----:||0.0.1  |Apr 10,2023 |enable &gt;= python3.7|DONE  ||0.0.2  |Jun 6,2023 ||DONE||0.0.3  |ND |set up github actions, run pass unittests, set up merging rules, ensure quality|WIP|### TODOs for v0.0.2|functions|version|status||---------|:-----:|:----:||make ut work|0.0.2|BACKLOG||make tox.ini work|0.0.2|BACKLOG||enable running ut for pull requests|0.0.2|BACKLOG||enable running lint for pull requests|0.0.2|BACKLOG||enable publishing dev packages for merge|0.0.2|BACKLOG||Add mergify to help merging PRs|0.0.2|BACKLOG|## Basic usage:```pythonimport pyetcdetcd = pyetcd.client()etcd.get('foo')etcd.put('bar', 'doot')etcd.delete('bar')# lockslock = etcd.lock('thing')lock.acquire()# do somethinglock.release()with etcd.lock('doot-machine') as lock:    # do something# transactionsetcd.transaction(    compare=[        etcd.transactions.value('/doot/testing') == 'doot',        etcd.transactions.version('/doot/testing') &gt; 0,    ],    success=[        etcd.transactions.put('/doot/testing', 'success'),    ],    failure=[        etcd.transactions.put('/doot/testing', 'failure'),    ])# watch keywatch_count = 0events_iterator, cancel = etcd.watch(&quot;/doot/watch&quot;)for event in events_iterator:    print(event)    watch_count += 1    if watch_count &gt; 10:        cancel()# watch prefixwatch_count = 0events_iterator, cancel = etcd.watch_prefix(&quot;/doot/watch/prefix/&quot;)for event in events_iterator:    print(event)    watch_count += 1    if watch_count &gt; 10:        cancel()# recieve watch events via callback functiondef watch_callback(event):    print(event)watch_id = etcd.add_watch_callback(&quot;/anotherkey&quot;, watch_callback)# cancel watchetcd.cancel_watch(watch_id)# recieve watch events for a prefix via callback functiondef watch_callback(event):    print(event)watch_id = etcd.add_watch_prefix_callback(&quot;/doot/watch/prefix/&quot;, watch_callback)# cancel watchetcd.cancel_watch(watch_id)```## CreditsMany thx to  [python-etcd3](https://github.com/kragniz/python-etcd3)</longdescription>
</pkgmetadata>