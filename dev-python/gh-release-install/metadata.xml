<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Github release installer[![CI](https://github.com/jooola/gh-release-install/actions/workflows/ci.yml/badge.svg)](https://github.com/jooola/gh-release-install/actions/workflows/ci.yml)[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/gh-release-install.svg)](https://pypi.org/project/gh-release-install/)[![PyPI Package Version](https://img.shields.io/pypi/v/gh-release-install.svg)](https://pypi.org/project/gh-release-install/)`gh-release-install` is a CLI helper to install Github releases on your system.It can be used for pretty much anything, to install a formatter in your CI, deploysome binary using an orcherstration tool, or on your desktop.This project was mainly created to...```sh# ...turn this mess:wget --quiet --output-document=- &quot;https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz&quot; \    | tar --extract --xz --directory=/usr/local/bin --strip-components=1 --wildcards 'shellcheck*/shellcheck' \    &amp;&amp; chmod +x /usr/local/bin/shellcheckwget --quiet --output-document=/usr/local/bin/shfmt &quot;https://github.com/mvdan/sh/releases/download/v3.2.1/shfmt_v3.2.1_linux_amd64&quot;Â \    &amp;&amp; chmod +x /usr/local/bin/shfmt# Into this:pip3 install gh-release-installgh-release-install \      &quot;koalaman/shellcheck&quot; \      &quot;shellcheck-{tag}.linux.x86_64.tar.xz&quot; --extract &quot;shellcheck-{tag}/shellcheck&quot; \      &quot;/usr/bin/shellcheck&quot;gh-release-install \      &quot;mvdan/sh&quot; \      &quot;shfmt_{tag}_linux_amd64&quot; \      &quot;/usr/bin/shfmt&quot;```Features:- Download releases from Github.- Extract zip or tarball on the fly.- Pin to a desired version or get the `latest` version.- Keep track of the local tools version using a version file.## InstallationInstall the package from pip:```shpip install gh-release-installgh-release-install --help```Or with with pipx:```shpipx install gh-release-installgh-release-install --help```## Usage```shusage: gh-release-install [-h] [--extract &lt;filename&gt;] [--version &lt;version&gt;]                          [--version-file &lt;filename&gt;]                          [--checksum &lt;hash&gt;:&lt;digest|asset&gt;] [-v] [-q]                          REPOSITORY ASSET DESTINATIONInstall GitHub release file on your system.positional arguments:  REPOSITORY            Github REPOSITORY org/repo to get the release from.  ASSET                 Release ASSET filename. May contain variables such as                        '{version}' or '{tag}'.  DESTINATION           Path to save the downloaded file. If DESTINATION is a                        directory, the asset name will be used as filename in                        that directory. May contain variables such as                        '{version}' or '{tag}'.optional arguments:  -h, --help            show this help message and exit  --extract &lt;filename&gt;  Extract the &lt;filename&gt; from the release asset archive                        and install the extracted file instead. May contain                        variables such as '{version}' or '{tag}'. (default:                        None)  --version &lt;version&gt;   Desired release version to install. When using 'latest'                        the installer will guess the latest version from the                        Github API. (default: latest)  --version-file &lt;filename&gt;                        Track the version installed on the system using a file.                        May contain variables such as '{destination}'. (default:                        None)  --checksum &lt;hash&gt;:&lt;digest|asset&gt;                        Asset checksum used to verify the downloaded ASSET.                        &lt;hash&gt; can be one of md5, sha1, sha224, sha256, sha384,                        sha512. &lt;digest|asset&gt; can either be the expected                        checksum, or the filename of an checksum file in the                        release assets. (default: None)  -v, --verbose         Increase the verbosity. (default: 0)  -q, --quiet           Disable logging. (default: None)template variables:    {tag}               Release tag name.    {version}           Release tag name without leading 'v'.    {destination}       DESTINATION path, including the asset filename if path                        is a directory.examples:    gh-release-install 'mvdan/sh' \        'shfmt_{tag}_linux_amd64' \        '/usr/local/bin/shfmt' \        --version 'v3.3.1'    gh-release-install 'prometheus/prometheus' \        'prometheus-{version}.linux-amd64.tar.gz' \        --extract 'prometheus-{version}.linux-amd64/prometheus' \        '/usr/local/bin/prometheus' \        --version-file '{destination}.version' \        --checksum 'sha256:sha256sums.txt'```</longdescription>
</pkgmetadata>