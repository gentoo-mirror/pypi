<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Python package](https://github.com/terrierteam/ir_measures/actions/workflows/push.yml/badge.svg)](https://github.com/terrierteam/ir_measures/actions/workflows/push.yml)# ir_measures**New: Explore IR measures using our demo at [demo.ir-measur.es](https://demo.ir-measur.es/)!**Check out our documentation website: [ir-measur.es](https://ir-measur.es/)Provides a common interface to many IR measure tools.Provided by the [Terrier Team @ Glasgow](http://terrierteam.dcs.gla.ac.uk/). Find us at [terrierteam/ir_measures](https://github.com/terrierteam/ir_measures).## Getting StartedInstall via pip```bashpip install ir-measures```## Python API```pythonimport ir_measuresfrom ir_measures import * # imports all supported measures, e.g., AP, nDCG, RR, Pqrels = {    'Q0': {&quot;D0&quot;: 0, &quot;D1&quot;: 1},    &quot;Q1&quot;: {&quot;D0&quot;: 0, &quot;D3&quot;: 2}}run = {    'Q0': {&quot;D0&quot;: 1.2, &quot;D1&quot;: 1.0},    &quot;Q1&quot;: {&quot;D0&quot;: 2.4, &quot;D3&quot;: 3.6}}# aggregated resultsir_measures.calc_aggregate([AP, nDCG, RR, nDCG@10, P(rel=2)@10], qrels, run)# {AP: 0.75, nDCG: 0.8154648767857288, RR: 0.75, nDCG@10: 0.8154648767857288, P(rel=2)@10: 0.05}# by queryfor m in ir_measures.iter_calc([AP, nDCG, RR, nDCG@10, P(rel=2)@10], qrels, run):    print(m)# Metric(query_id='Q0', measure=AP, value=0.5)# Metric(query_id='Q0', measure=RR, value=0.5)# Metric(query_id='Q0', measure=nDCG, value=0.6309297535714575)# Metric(query_id='Q0', measure=nDCG@10, value=0.6309297535714575)# Metric(query_id='Q1', measure=AP, value=1.0)# Metric(query_id='Q1', measure=RR, value=1.0)# Metric(query_id='Q1', measure=nDCG, value=1.0)# Metric(query_id='Q1', measure=nDCG@10, value=1.0)# Metric(query_id='Q0', measure=P(rel=2)@10, value=0.0)# Metric(query_id='Q1', measure=P(rel=2)@10, value=0.1)```Qrels can be provided in the following formats:```python# dict of dictqrels = {    'Q0': {        &quot;D0&quot;: 0,        &quot;D1&quot;: 1,    },    &quot;Q1&quot;: {        &quot;D0&quot;: 0,        &quot;D3&quot;: 2    }}# dataframeimport pandas as pdqrels = pd.DataFrame([    {'query_id': &quot;Q0&quot;, 'doc_id': &quot;D0&quot;, 'relevance': 0},    {'query_id': &quot;Q0&quot;, 'doc_id': &quot;D1&quot;, 'relevance': 1},    {'query_id': &quot;Q1&quot;, 'doc_id': &quot;D0&quot;, 'relevance': 0},    {'query_id': &quot;Q1&quot;, 'doc_id': &quot;D3&quot;, 'relevance': 2},])# any iterable of namedtuples (e.g., list, generator, etc)qrels = [    ir_measures.Qrel(&quot;Q0&quot;, &quot;D0&quot;, 0),    ir_measures.Qrel(&quot;Q0&quot;, &quot;D1&quot;, 1),    ir_measures.Qrel(&quot;Q1&quot;, &quot;D0&quot;, 0),    ir_measures.Qrel(&quot;Q1&quot;, &quot;D3&quot;, 2),]# TREC-formatted qrels fileqrels = ir_measures.read_trec_qrels('qrels.txt')# qrels from the ir_datasets package (https://ir-datasets.com/)import ir_datasetsqrels = ir_datasets.load('trec-robust04').qrels_iter()```Runs can be provided in the following formats:```python# dict of dictrun = {    'Q0': {        &quot;D0&quot;: 1.2,        &quot;D1&quot;: 1.0,    },    &quot;Q1&quot;: {        &quot;D0&quot;: 2.4,        &quot;D3&quot;: 3.6    }}# dataframeimport pandas as pdrun = pd.DataFrame([    {'query_id': &quot;Q0&quot;, 'doc_id': &quot;D0&quot;, 'score': 1.2},    {'query_id': &quot;Q0&quot;, 'doc_id': &quot;D1&quot;, 'score': 1.0},    {'query_id': &quot;Q1&quot;, 'doc_id': &quot;D0&quot;, 'score': 2.4},    {'query_id': &quot;Q1&quot;, 'doc_id': &quot;D3&quot;, 'score': 3.6},])# any iterable of namedtuples (e.g., list, generator, etc)run = [    ir_measures.ScoredDoc(&quot;Q0&quot;, &quot;D0&quot;, 1.2),    ir_measures.ScoredDoc(&quot;Q0&quot;, &quot;D1&quot;, 1.0),    ir_measures.ScoredDoc(&quot;Q1&quot;, &quot;D0&quot;, 2.4),    ir_measures.ScoredDoc(&quot;Q1&quot;, &quot;D3&quot;, 3.6),]```## Command Line Interfaceir_measures also functions as a command line interface, with syntax similar totrec_eval.Example:```bashir_measures /path/to/qrels /path/to/run P@10 'P(rel=2)@5 nDCG@15 Judged@10' NumQ NumRel NumRet NumRelRetP@10    0.4382P(rel=2)@5  0.0827nDCG@15 0.4357Judged@10   0.9812NumQ    249.0000NumRel  17412.0000NumRet  241339.0000NumRet(rel=1)   10272.0000```Syntax:```ir_measures qrels run measures... [-q] [-n] [-p 4]``` - `qrels`: a TREC-formatted QRELS file - `run`: a TREC-formatted results file - `measures`: one or more measure name strings. Note that in bash, `()` must be in single quotes. For simplicity, you can provide multiple meaures in a single quotation, which are split on whitespace. - `-q`: provide results for each query individually - `-n`: when used with `-q`, skips summary statistics - `-p`: number of decimal places to report results (default: 4)## Documentation - [Measures](https://ir-measur.es/en/latest/measures.html) - [Providers](https://ir-measur.es/en/latest/providers.html)## Credits - Sean MacAvaney, University of Glasgow - Craig Macdonald, University of Glasgow - Charlie Clarke, University of Waterloo - Benjamin Piwowarski, CNRS</longdescription>
</pkgmetadata>