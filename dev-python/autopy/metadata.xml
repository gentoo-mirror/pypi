<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>For more information, see the [GitHub Repository](https://github.com/autopilot-rs/autopy).[![Supported Python versions](https://img.shields.io/pypi/pyversions/autopy.svg)](https://pypi.python.org/pypi/autopy/)[![Total downloads](https://pepy.tech/badge/autopy)](https://pepy.tech/project/autopy)[![Travis Build Status](https://travis-ci.org/autopilot-rs/autopy.svg?branch=master)](https://travis-ci.org/autopilot-rs/autopy)[![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/2p5xap3tv4qkwsd1?svg=true)](https://ci.appveyor.com/project/msanders/autopy)AutoPy Introduction and Tutorial=================================## IntroductionAutoPy is a simple, cross-platform GUI automation library for Python. Itincludes functions for controlling the keyboard and mouse, finding colors andbitmaps on-screen, and displaying alerts.Currently supported on macOS, Windows, and X11 with the XTest extension.## Getting Started### Requirements* Python 2.7, or Python 3.5 and up.* Rust 1.23.0-nightly 2019-02-06 or later (unless using a binary wheel  distribution).* macOS 10.6 and up.* Windows 7 and up.* X11 with the XTest extension.### InstallationFirst, see if a binary wheel is available for your machine by running:    $ pip install -U autopyIf that fails, install [rustup](https://rustup.rs) and then run:    $ rustup default nightly-2019-10-05    $ pip install -U setuptools-rust    $ pip install -U autopyAnother option is to build from the latest source on the GitHub repository:    $ git clone git://github.com/autopilot-rs/autopy-rs.git    $ cd autopy    $ make    $ make install**Note**: AutoPy currently requires the `2019-10-05` Rust nightly in order tobuild from source. This is to maintain compatibility with an older version ofPyO3, as the latest version has dropped Python 2 support. Python 2 support willlikely be dropped from AutoPy as well sometime later this year, depending onhow necessary it is to upgrade to a more recent version of PyO3 or Rust. In themeantime, it may be necessary to install the required nightly via the followingwhen building locally:```rustup install nightly 2019-10-05 --force```This is due to rustup complaining that it doesn't include certain componentssuch as `rustfmt`.Additional instructions for installing from source on Windows are available[here](https://github.com/autopilot-rs/autopy/blob/master/scripts/windows-setup.md).### Hello WorldThe following is the source for a &quot;hello world&quot; script in autopy. Running thiscode will cause an alert dialog to appear on every major platform:```pythonimport autopydef hello_world():    autopy.alert.alert(&quot;Hello, world&quot;)hello_world()```![Cross platform alerts](https://github.com/autopilot-rs/autopy/raw/gh-pages/alerts.png)## Tutorials### Controlling the MouseAutoPy includes a number of functions for controlling the mouse. For a fulllist, consult the [APIReference](https://www.autopy.org/documentation/api-reference/mouse.html). E.g.,to immediately &quot;teleport&quot; the mouse to the top left corner of the screen:&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.mouse.move(1, 1)To move the mouse a bit more realistically, we could use:&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.mouse.smooth_move(1, 1)Even better, we could write our own function to move the mouse across the screenas a sine wave:```pythonimport autopyimport mathimport timeimport randomimport sysTWO_PI = math.pi * 2.0def sine_mouse_wave():    &quot;&quot;&quot;    Moves the mouse in a sine wave from the left edge of    the screen to the right.    &quot;&quot;&quot;    width, height = autopy.screen.size()    height /= 2    height -= 10  # Stay in the screen bounds.    for x in range(int(width)):        y = int(height * math.sin((TWO_PI * x) / width) + height)        autopy.mouse.move(x, y)        time.sleep(random.uniform(0.001, 0.003))sine_mouse_wave()```&lt;a href=&quot;https://www.autopy.org/documentation/sine-wave&quot;&gt;&lt;img src=&quot;https://github.com/autopilot-rs/autopy/raw/gh-pages/sine-move-mouse-thumbnail.jpg&quot; alt=&quot;Demonstration video&quot;/&gt;&lt;/a&gt;### Controlling the KeyboardThe following will enter the keys from the string &quot;Hello, world!&quot; in thecurrently focused input at 100 WPM:```pythonimport autopyautopy.key.type_string(&quot;Hello, world!&quot;, wpm=100)```Alternatively, individual keys can be entered using the following:```pythonimport autopyautopy.key.tap(autopy.key.Code.TAB, [autopy.key.Modifier.META])autopy.key.tap(&quot;w&quot;, [autopy.key.Modifier.META])```### Working with BitmapsAll of autopy's bitmap routines can be found in the module `autopy.bitmap`. Auseful way to explore autopy is to use Python's built-in `help()` function, forexample in `help(autopy.bitmap.Bitmap)`. AutoPy's functions are documented withdescriptive docstrings, so this should show a nice overview.&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.bitmap.capture_screen()&lt;Bitmap object at 0x12278&gt;This takes a screenshot of the main screen, copies it to a bitmap, displays itsmemory address, and then immediately destroys it. Let's do something moreuseful, like look at its pixel data:&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.bitmap.capture_screen().get_color(1, 1)15921906AutoPy uses a coordinate system with its origin starting at the top-left, sothis should return the color of pixel at the top-left corner of the screen. Thenumber shown looks a bit unrecognizable, but we can format it with Python'sbuilt-in `hex` function:&gt;&gt;&gt; import autopy&gt;&gt;&gt; hex(autopy.bitmap.capture_screen().get_color(1, 1))'0xF2F2F2'Alternatively, we can use:&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.color.hex_to_rgb(autopy.screen.get_color(1, 1))(242, 242, 242)which converts that hex value to a tuple of `(r, g, b)` values. (Note that`autopy.screen.get_color()`, used here, is merely a more convenient andefficient version of `autopy.bitmap.capture_screen().get_color()`.)To save the screen capture to a file, we can use:&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.bitmap.capture_screen().save('screengrab.png')The filetype is either parsed automatically from the filename, or given as anoptional parameter. Currently only jpeg and png files are supported.&gt;&gt;&gt; import autopy&gt;&gt;&gt; autopy.bitmap.Bitmap.open('needle.png')&lt;Bitmap object at 0x1001d5378&gt;Aside from analyzing a bitmap's pixel data, the main use for loading a bitmap isfinding it on the screen or inside another bitmap. For example, the followingprints the coordinates of the first image found in a bitmap (scanned from leftto right, top to bottom):```pythonimport autopydef find_image_example():    needle = autopy.bitmap.Bitmap.open('needle.png')    haystack = autopy.bitmap.Bitmap.open('haystack.png')    pos = haystack.find_bitmap(needle)    if pos:        print(&quot;Found needle at: %s&quot; % str(pos))find_image_example()```It's also possible to do a bounded search by passing a tuple `((x, y), (width,height))`:```pythonhaystack.find_bitmap(needle, rect=((10, 10), (100, 100)))```## Projects using AutoPy- [AutoPyDriverServer](https://github.com/daluu/autopydriverserver), AutoPy  through WebDriver or a webdriver-compatible server.- [guibot](https://github.com/intra2net/guibot), A tool for GUI automation using  a variety of computer vision and desktop control backends.- [spynner](https://github.com/kiorky/spynner), Programmatic web browsing  module with AJAX support for Python.- [SUMO](https://github.com/eclipse/sumo), An open source, highly portable,  microscopic and continuous road traffic simulation package designed to handle  large road networks.## API ReferenceHope you enjoy using autopy! For a more in depth overview, see the [APIReference](https://www.autopy.org/documentation/api-reference/).## ContributingIf you are interested in this project, please consider contributing. Here are afew ways you can help:- [Report issues](https://github.com/autopilot-rs/autopy/issues).- Fix bugs and [submit pull requests](https://github.com/autopilot-rs/autopy/pulls).- Write, clarify, or fix documentation.- Suggest or add new features.## LicenseThis project is licensed under either the [Apache-2.0](LICENSE-APACHE) or[MIT](LICENSE-MIT) license, at your option.Unless you explicitly state otherwise, any contribution intentionally submittedfor inclusion in the work by you, as defined in the Apache-2.0 license, shall bedual licensed as above, without any additional terms or conditions.</longdescription>
</pkgmetadata>