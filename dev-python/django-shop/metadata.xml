<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-SHOP**Django-SHOP** aims to be a the easy, fun and fast e-commerce counterpart to[django-CMS](https://www.django-cms.org/).[![Build Status](https://travis-ci.org/awesto/django-shop.svg?branch=master)](https://travis-ci.org/awesto/django-shop?branch=master)[![PyPI version](https://img.shields.io/pypi/v/django-shop.svg)](https://pypi.python.org/pypi/django-shop)[![Python versions](https://img.shields.io/pypi/pyversions/django-shop.svg)](https://pypi.python.org/pypi/django-shop)[![Join the chat at https://gitter.im/awesto/django-shop](https://badges.gitter.im/awesto/django-shop.svg)](https://gitter.im/awesto/django-shop?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)[![Software license](https://img.shields.io/pypi/l/django-shop.svg)](https://pypi.python.org/pypi/django-shop)[![Twitter Follow](https://img.shields.io/twitter/follow/djangoSHOP.svg?style=social&amp;label=djangoSHOP)](https://twitter.com/djangoSHOP)Here you can find the [full documentation for django-SHOP](https://django-shop.readthedocs.io/en/latest/).## Build the database model out of the product's properties – not vice versaMost e-commerce systems are shipped with a predefined database model for products. But products canvary a lot, and it simply is impossible to create a model which fits for all of them. This isesspecially true for products with a hierarchy of variants. In many popular e-commerce platforms,you either have far too many attributes per product, and/or the really required attributes aremissing.In **django-SHOP** implementations, the product models reflect their pysical properties making itpossible to create complete and deep hierarchies of variations, but without having to fiddle withunneeded properties. It furthermore avoids the need for an[Entity Attribute Value Model](https://en.wikipedia.org/wiki/Entity–attribute–value_model), whichis considered a database anti-pattern, because it produces far too many table joins, when filteringby property.## Don't build pages using hard-coded templates – compose themWith the advent of frameworks, such as Angular, React, Vue and Aurelia, building web-applicationsshifted from a page-centric to a component-based approach.In **django-SHOP**, you are in full control over the page's layout, since all components areencapsulated and independent from each other. This means that instead of adopting the Catalog, Cart,Checkout and Order pages, use the **django-CMS** plugin system to compose everything required forthose pages.## All Views are either HTML or RESTful servicesBrowser based navigation is important, but nowadays it's only one of many channels clients use tocommunicate with a web-server. Consider Single Page Applications or other native clients, where weuse RESTful APIs instead of pure HTTP.This substantially reduces the payload having to be transferred. It furthermore gives the client asmoother user experience, since only the content has to be updated, rather than having to do fullpage reloads.## Programmable cart modifiersDuring checkout, taxes have to be applied or attributed. Depending on the shipping destination, theproduct group and other factors, this computation can either be simple or quite demanding.**Django-SHOP** offers a pluggable interface to create modifiers which calculate the cart's totals,taxes and other costs.This same interface can be extended to compute the weight and shipping costs. It also can be usedfor subtracting discounts or to add additional charges. ## Programmable workflow for fulfilment and deliveryFulfilling and shipping orders probably requires the most individual adaption for an e-commerce business. **Django-SHOP** offers a programmable interface for order by using a finitestate machine to adopt the workflow. Each order may have several states, but the only actionsallowed are limited to explicitly defined state transitions.## It's modularWhenever possible, extra features should be added by third party libraries. This implies that**django-SHOP** aims to provide an API, which allows merchants to add every feature they desire.Currently there are third party libraries for several Payment Service Providers, such as[PayPal](https://developer.paypal.com/docs/api/overview/), [Stripe](https://stripe.com/docs/api),[BS-PayOne](https://www.bspayone.com/DE/en) and [Viveum](https://www.viveum.com/?lang=en).An open interface allows you to add any other provider.Shipping Service Providers may be added as third party library as well. With[SendCloud](https://docs.sendcloud.sc/), ship your orders using one or more parcel servicesavailable for your region.## Start by building your own demoInstead of providing an accessible online demo, **django-SHOP** can be set up in less than threeminutes and preconfigured to your needs. Having access to the product models, you can immediatlystart to play arround with, rename, and modify them to reflect the properties of your products.This is the easiest way to get a shop up and running out of the box with the flexibility of awebsite that you could have built from scratch.If you want to start with a fresh demo, please use the prepared[Cookiecutter template for django-SHOP](https://github.com/awesto/cookiecutter-django-shop)and follow the instructions. ## Audience of django-SHOP usersSpecifically, we aim at providing a clean, modular and Pythonic/Djangonic implementation of ane-commerce framework, that a moderately experienced Django developer should be able to pick upand run easily. Pure Django models are used to describe each product type, and so the Django admincan be used to build a minimalistic editor for each of them.## ConsultancyWe provide full consultancy support and are available for building complete e-commerce systems basedon **django-SHOP**. Please contact office@awesto.com for further questions.## DocumentationRead the full documentation on Read-the-docs:[https://django-shop.readthedocs.io/en/latest/](https://django-shop.readthedocs.io/en/latest/)</longdescription>
</pkgmetadata>