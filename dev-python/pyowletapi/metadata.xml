<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># IntroductionInspiration and API reverse engineering taken from various projects:https://github.com/BastianPoe/owlet_apihttps://github.com/mbevand/owlet_monitor## InstallTo install via pip run command ```pip install pyowletapi```## To doTidy up exception loggingCreate test routines## Useimport the api and sock objects```pythonfrom pyowletapi.api import OwletAPIfrom pyowlet.sock import Sock```create an api object passing your region, username and password, the OwletAPI will also take a aiohttp session as a keyword argument```pythonapi = OwletAPI('europe', username, password)```you can then authenticate against the Owlet servers using this object and create a list of sock objects```pythonawait api.authenticate()socks = {device['device']['dsn']: Sock(api, device['device']) for device in devices}```to get current reading from sock call the update_properties function on each sock object```pythondevice.update_properties()```This will return a dictionary, the key 'raw_properties' contains the raw response as a dict and the 'properties' key is a more cut down dict version of the response showing only the most relevant data and the 'tokens' key will return a dictionary if the api tokens have changed since the last call</longdescription>
</pkgmetadata>