<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django Admin Notice[![PyPI][pypi-image]][pypi-url][![License][license-image]][license-url][![Tests][tests-image]][tests-url][pypi-image]: https://img.shields.io/pypi/v/django-admin-notice[pypi-url]: https://pypi.org/project/django-admin-notice/[license-image]: https://img.shields.io/pypi/l/django-admin-notice[license-url]: https://github.com/DoctorJohn/django-admin-notice/blob/master/LICENSE[tests-image]: https://github.com/DoctorJohn/django-admin-notice/workflows/Tests/badge.svg[tests-url]: https://github.com/DoctorJohn/django-admin-notice/actionsShow a floating notice banner above the Django admin interface.Particularly useful for indicating the current deployment environment.## InstallationInstall django-admin-notice via the Python Package Index (PyPI):`pip install django-admin-notice`Add `admin_notice` to your `INSTALLED_APPS` somewhere before `django.contrib.admin`.```pythonINSTALLED_APPS = [    &quot;admin_notice&quot;,  # &lt;-- Add this somewhere before &quot;django.contrib.admin&quot;    &quot;django.contrib.admin&quot;,    # ... other apps]```Add `admin_notice.context_processors.notice` to the templates `context_processors`.Having `django.template.context_processors.request` is required as well.```pythonTEMPLATES = [    {        &quot;OPTIONS&quot;: {            &quot;context_processors&quot;: [                &quot;django.template.context_processors.request&quot;,  # &lt;-- have this                &quot;admin_notice.context_processors.notice&quot;,  # &lt;-- Add this                # ... other context processors            ]        },    },]```## SettingsSet the `ADMIN_NOTICE_TEXT` to the text you want to show above the admin interface.No message is shown if this setting is missing or empty.```pythonADMIN_NOTICE_TEXT = &quot;Production environment&quot;```Optionally specify a custom text color and background for your notice.The default text color is `white` and the default background `red`.```pythonADMIN_NOTICE_TEXT_COLOR = &quot;white&quot;ADMIN_NOTICE_BACKGROUND = &quot;red&quot;```### TipsIt's a common use case to indicate the projects deployment environment.The following configuration shows how to obtain the `django-admin-notice`configuration from environment variables and how to configure a fallback.```pythonfrom os import environADMIN_NOTICE_TEXT = environ.get(&quot;ADMIN_NOTICE_TEXT&quot;, &quot;Local environment&quot;)ADMIN_NOTICE_TEXT_COLOR = environ.get(&quot;ADMIN_NOTICE_TEXT_COLOR&quot;, &quot;white&quot;)ADMIN_NOTICE_BACKGROUND = environ.get(&quot;ADMIN_NOTICE_BACKGROUND&quot;, &quot;green&quot;)```## ExampleRun `python manage.py runserver` after following the *Installation* sectionto see a fully working example project.## Contributing### Setup1. Clone the repository and enter the cloned folder2. (optional) Create and activate a dedicated Python virtual environment3. Run `pip install -e &quot;.[dev]&quot;` to install the projects requirements4. (optional) Run `pre-commit install` to install the pre-commit hook### Pre-commit hookOur pre-commit hook formats and lints the code.### Formatting and linting- Run `black admin_notice tests` to format the code- Run `flake8 admin_notice tests` to lint the code### Testing- Run `py.test --cov admin_notice tests` to run the tests in the current Python env- Run `tox` to run the tests in all supported Python and Django environments### MakefileAll commands listed above have shortcut make recipes.Take a look at the `Makefile` to learn more.</longdescription>
</pkgmetadata>