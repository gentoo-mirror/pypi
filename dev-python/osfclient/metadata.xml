<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: LOGO/osf-cli-logo-v1-small.png   :alt: osfclient   :align: right*********osfclient*********|travisbadge|The ``osfclient`` is a python library and a command-line client for up-and downloading files to and from your `Open ScienceFramework &lt;//osf.io&gt;`__ projects. The *Open Science Framework* (OSF) isan open source project which facilitates the open collaboration ofresearchers on the web, by sharing data and other research outputs.As such the OSF hosts large data sets, associated with papers orscientific projects, that can be freely downloaded. The *osfclient*allows people to store and retrieve large datasets associated to theirscientific projects and papers on the OSF via the command lineinterface. If you are completely new to the OSF you can `read theirintroductory materials &lt;https://cos.io/our-products/osf&gt;`__This is a very new project, it has some rough edges... |travisbadge| image:: https://travis-ci.org/osfclient/osfclient.svg?branch=master   :target: https://travis-ci.org/osfclient/osfclientInstalling==========To use ``osfclient`` install it via pip:::    $ pip install osfclientFor details on participating in the development of ``osfclient`` checkout the `Contributingsection &lt;https://github.com/osfclient/osfclient#contributing&gt;`__.Usage=====This project provides two things: a python library and a command-lineprogram for interacting with files stored in the`OSF &lt;https://osf.io/&gt;`__.The python library forms the basis for the command-line program. If youwant programmatic access to your files use the library, otherwise tryout the command-line program.Read the full documentation: https://osfclient.readthedocs.io/en/latest/Below are some examples on how to use it:::    # get help and see available commands, get help on a specific command    $ osf -h    $ osf &lt;command&gt; -h    # setup a local folder for an existing project    $ osf init    # list all files for the project    $ osf ls    # fetch all files for the project    $ osf clone    # fetch an individual file from a project    $ osf fetch remote/path.txt local/file.txt    # get web view url for an individual file from a project    $ osf geturl remote/path.txt    # add a new file    $ osf upload local/file.txt remote/path.txt    # add a new directory    $ osf upload -r local/directory/ remote/directoryIf the project is private you will need to provide authenticationdetails.  You can provide either username &amp; password credentials or aPersonal Access Token (PAT).  You can provide these by setting eitherthe ``OSF_USERNAME`` and ``OSF_PASSWORD`` environment variables or bysetting the ``OSF_TOKEN`` environment variable. The password will beretrieved from the ``OSF_PASSWORD`` environment variable or you willbe asked directly by the tool when you run it.You can set default values for the username and project by using aconfiguration file in the current directory. This is what ``osf init``does for you. To set the username and project ID create``.osfcli.config``:::    [osf]    username = yourOSFaccount@example.com    project = 9zpcyTo avoid having to provide credentials on each use, you can provideeither your password or a PAT in your config with the following keys:::    # basic auth (username/password)    password = this-password-is-fake    # token auth    token = kej2R9IU6Gr2uThsswSNdP1cd0cu9eaCerVXjVf7zNwfXHyT0QzMZtX0PGTYmp9FzaixwqAfter which you can simply run ``osf ls`` to list the contents of theproject.Contributing============Contributions from everyone and anyone are welcome. Fork thisrepository, make your changes, add a test to cover them and create aPull Request. Then one of the maintainers will review your changes. Whenall comments have been addressed and all tests pass your changes will bemerged.To setup a development version:::    $ git clone https://github.com/YOURNAMEHERE/osfclient    $ git remote add upstream https://github.com/osfclient/osfclient    $ cd osfclient    $ pip install -r devRequirements.txt -c constraints.txt    $ pip install -e . -c constraints.txtThere are a few secret keys relevant to this project, like passwords topypi.org, test.pypi.org, and the osfclient email account. We store these in anencrypted git repo on `Keybase &lt;//keybase.io&gt;`__. If you need access to thisrepo, contact any of the following maintainters on Keybase:- Tim Head (@betatim)- Ben Lindsay (@benlindsay)- Fitz Elliott (@felliott)- Longze Chen (@cslzchen)For more details and instructions: `CONTRIBUTING.md &lt;CONTRIBUTING.md&gt;`__</longdescription>
</pkgmetadata>