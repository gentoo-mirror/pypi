# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="a framework for automated feature engineering"

HOMEPAGE=""
LICENSE="BSD 3-clause"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="autonormalize complete dask dev docs nlp premium sklearn spark sql test tsfresh updater"
DEPENDENCIES="dev-python/cloudpickle[${PYTHON_USEDEP}]
	dev-python/holidays[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/pandas[${PYTHON_USEDEP}]
	dev-python/psutil[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/woodwork[${PYTHON_USEDEP}]
	autonormalize? ( dev-python/autonormalize[${PYTHON_USEDEP}] )
	complete? ( dev-python/featuretools[${PYTHON_USEDEP}] )
	dask? ( dev-python/dask[${PYTHON_USEDEP}] )
	dask? ( dev-python/distributed[${PYTHON_USEDEP}] )
	dask? ( dev-python/woodwork[${PYTHON_USEDEP}] )
	dev? ( dev-python/ruff[${PYTHON_USEDEP}] )
	dev? ( dev-python/black[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/featuretools[${PYTHON_USEDEP}] )
	docs? ( dev-python/ipython[${PYTHON_USEDEP}] )
	docs? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	docs? ( dev-python/jupyter-client[${PYTHON_USEDEP}] )
	docs? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	docs? ( dev-python/Sphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/nbsphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/nbconvert[${PYTHON_USEDEP}] )
	docs? ( dev-python/pydata-sphinx-theme[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-inline-tabs[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	docs? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	docs? ( dev-python/nlp-primitives[${PYTHON_USEDEP}] )
	docs? ( dev-python/autonormalize[${PYTHON_USEDEP}] )
	docs? ( dev-python/click[${PYTHON_USEDEP}] )
	docs? ( dev-python/featuretools[${PYTHON_USEDEP}] )
	nlp? ( dev-python/nlp-primitives[${PYTHON_USEDEP}] )
	premium? ( dev-python/premium-primitives[${PYTHON_USEDEP}] )
	sklearn? ( dev-python/featuretools-sklearn-transformer[${PYTHON_USEDEP}] )
	spark? ( dev-python/woodwork[${PYTHON_USEDEP}] )
	spark? ( dev-python/pyspark[${PYTHON_USEDEP}] )
	spark? ( dev-python/numpy[${PYTHON_USEDEP}] )
	sql? ( dev-python/featuretools-sql[${PYTHON_USEDEP}] )
	test? ( dev-python/boto3[${PYTHON_USEDEP}] )
	test? ( dev-python/composeml[${PYTHON_USEDEP}] )
	test? ( dev-python/graphviz[${PYTHON_USEDEP}] )
	test? ( dev-python/moto[${PYTHON_USEDEP}] )
	test? ( dev-python/pip[${PYTHON_USEDEP}] )
	test? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	test? ( dev-python/pympler[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	test? ( dev-python/smart-open[${PYTHON_USEDEP}] )
	test? ( dev-python/urllib3[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-timeout[${PYTHON_USEDEP}] )
	tsfresh? ( dev-python/featuretools-tsfresh-primitives[${PYTHON_USEDEP}] )
	updater? ( dev-python/alteryx-open-src-update-checker[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
