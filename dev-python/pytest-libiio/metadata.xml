<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=============pytest-libiio=============.. image:: https://img.shields.io/pypi/v/pytest-libiio.svg    :target: https://pypi.org/project/pytest-libiio    :alt: PyPI version.. image:: https://img.shields.io/pypi/pyversions/pytest-libiio.svg    :target: https://pypi.org/project/pytest-libiio    :alt: Python versions.. image:: https://travis-ci.org/tfcollins/pytest-libiio.svg?branch=master    :target: https://travis-ci.org/tfcollins/pytest-libiio    :alt: See Build Status on Travis CI.. image:: https://coveralls.io/repos/github/tfcollins/pytest-libiio/badge.svg?branch=master    :target: https://coveralls.io/github/tfcollins/pytest-libiio?branch=master    :alt: See Coverage Status on Coveralls.. image:: https://readthedocs.org/projects/pytest-libiio/badge/?version=latest    :target: https://pytest-libiio.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusA pytest plugin to manage interfacing with libiio contexts----pytest-libiio is pytest plugin to manage interfacing with libiio contexts. This plugin is handy for leveraging the (new) zeroconf features of libiio to find, filter, and map libiio contexts to tests. It was created for `pyadi-iio &lt;https://pypi.org/project/pyadi-iio/&gt;`_ testing but is used in other applications that need an organized way to handle libiio contexts without hardcoding URIs or lots of boilerplate code.Requirements------------* libiio and pylibiio* pytest* pyyamlFor development the following are also needed:* tox* pytest-mock* pre-commit* isort* flake8* codespell* blackInstallation------------You can install &quot;pytest-libiio&quot; via `pip`_ from `PyPI`_::    $ pip install pytest-libiioUsage-----This plugin is used to make the access of libiio contexts easier and to provide a unified API through fixtures.Accessing contexts^^^^^^^^^^^^^^^^^^Get list of context descriptions of all found contained.. code-block:: python  import pytest  import iio  def test_libiio_device(context_desc):      hardware = [&quot;pluto&quot;, &quot;adrv9361&quot;, &quot;fmcomms2&quot;]      for ctx_desc in context_desc:          if ctx_desc[&quot;hw&quot;] in hardware:              ctx = iio.Context(ctx_desc[&quot;uri&quot;])      if not ctx:          pytest.skip(&quot;No required hardware found&quot;)Require certain hardware through marks.. code-block:: python  import pytest  import iio  @pytest.mark.iio_hardware(&quot;adrv9361&quot;)  def test_libiio_device(context_desc):      for ctx_desc in context_desc:          ctx = iio.Context(ctx_desc[&quot;uri&quot;])          ...Future ideas------------Mock testing is common with libiio's python library since hardware is needed otherwise. In future releases we hope to extend features in pytest-mock through this plugin to make mocking libiio more streamlined.Contributing------------Contributions are very welcome. Tests can be run with `tox`_, please ensurethe coverage at least stays the same before you submit a pull request.License-------Distributed under the terms of the `BSD-3`_ license, &quot;pytest-libiio&quot; is free and open source softwareIssues------If you encounter any problems, please `file an issue`_ along with a detailed description... _`Cookiecutter`: https://github.com/audreyr/cookiecutter.. _`@hackebrot`: https://github.com/hackebrot.. _`MIT`: http://opensource.org/licenses/MIT.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin.. _`file an issue`: https://github.com/tfcollins/pytest-libiio/issues.. _`pytest`: https://github.com/pytest-dev/pytest.. _`tox`: https://tox.readthedocs.io/en/latest/.. _`pip`: https://pypi.org/project/pip/.. _`PyPI`: https://pypi.org/project</longdescription>
</pkgmetadata>