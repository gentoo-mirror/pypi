<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SymPy[![pypi version](https://img.shields.io/pypi/v/sympy.svg)](https://pypi.python.org/pypi/sympy)[![Build status](https://secure.travis-ci.org/sympy/sympy.svg?branch=master)](https://travis-ci.org/sympy/sympy)[![Join the chat at https://gitter.im/sympy/sympy](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sympy/sympy?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)[![Zenodo Badge](https://zenodo.org/badge/18918/sympy/sympy.svg)](https://zenodo.org/badge/latestdoi/18918/sympy/sympy)[![Downloads](https://pepy.tech/badge/sympy/month)](https://pepy.tech/project/sympy)[![GitHub Issues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/sympy/sympy/issues)[![Git Tutorial](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project)[![Powered by NumFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;colorA=E1523D&amp;colorB=007D8A)](https://numfocus.org)[![Commits since last release](https://img.shields.io/github/commits-since/sympy/sympy/latest.svg?longCache=true&amp;style=flat-square&amp;logo=git&amp;logoColor=fff)](https://github.com/sympy/sympy/releases)[![SymPy Banner](https://github.com/sympy/sympy/raw/master/banner.svg)](https://sympy.org/)See the [AUTHORS](AUTHORS) file for the list of authors.And many more people helped on the SymPy mailing list, reported bugs,helped organize SymPy's participation in the Google Summer of Code, theGoogle Highly Open Participation Contest, Google Code-In, wrote andblogged about SymPy...License: New BSD License (see the [LICENSE](LICENSE) file for details) covers allfiles in the sympy repository unless stated otherwise.Our mailing list is at&lt;https://groups.google.com/forum/?fromgroups#!forum/sympy&gt;.We have a community chat at [Gitter](https://gitter.im/sympy/sympy). Feelfree to ask us anything there. We have a very welcoming and helpfulcommunity.## DownloadThe recommended installation method is through Anaconda,&lt;https://www.anaconda.com/download/&gt;You can also get the latest version of SymPy from&lt;https://pypi.python.org/pypi/sympy/&gt;To get the git version do    $ git clone https://github.com/sympy/sympy.gitFor other options (tarballs, debs, etc.), see&lt;https://docs.sympy.org/dev/install.html&gt;.## Documentation and UsageFor in-depth instructions on installation and building thedocumentation, see the [SymPy Documentation Style Guide](https://docs.sympy.org/dev/documentation-style-guide.html).Everything is at:&lt;https://docs.sympy.org/&gt;You can generate everything at the above site in your local copy ofSymPy by:    $ cd doc    $ make htmlThen the docs will be in &lt;span class=&quot;title-ref&quot;&gt;\_build/html&lt;/span&gt;. Ifyou don't want to read that, here is a short usage:From this directory, start Python and:``` python&gt;&gt;&gt; from sympy import Symbol, cos&gt;&gt;&gt; x = Symbol('x')&gt;&gt;&gt; e = 1/cos(x)&gt;&gt;&gt; print(e.series(x, 0, 10))1 + x**2/2 + 5*x**4/24 + 61*x**6/720 + 277*x**8/8064 + O(x**10)```SymPy also comes with a console that is a simple wrapper around theclassic python console (or IPython when available) that loads the SymPynamespace and executes some common commands for you.To start it, issue:    $ bin/isympyfrom this directory, if SymPy is not installed or simply:    $ isympyif SymPy is installed.## InstallationSymPy has a hard dependency on the [mpmath](http://mpmath.org/) library(version \&gt;= 0.19). You should install it first, please refer to thempmath installation guide:&lt;https://github.com/fredrik-johansson/mpmath#1-download--installation&gt;To install SymPy using PyPI, run the following command:    $ pip install sympyTo install SymPy using Anaconda, run the following command:    $ conda install -c anaconda sympyTo install SymPy from GitHub source, first clone SymPy using `git`:    $ git clone https://github.com/sympy/sympy.gitThen, in the `sympy` repository that you cloned, simply run:    $ python setup.py installSee &lt;https://docs.sympy.org/dev/install.html&gt; for more information.## ContributingWe welcome contributions from anyone, even if you are new to opensource. Please read our [Introduction to Contributing](https://github.com/sympy/sympy/wiki/Introduction-to-contributing)page and the [SymPy Documentation Style Guide](https://docs.sympy.org/dev/documentation-style-guide.html). If youare new and looking for some way to contribute, a good place to start isto look at the issues tagged [Easy to Fix](https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue+label%3A%22Easy+to+Fix%22).Please note that all participants in this project are expected to followour Code of Conduct. By participating in this project you agree to abideby its terms. See [CODE\_OF\_CONDUCT.md](CODE_OF_CONDUCT.md).## TestsTo execute all tests, run:    $./setup.py testin the current directory.For the more fine-grained running of tests or doctests, use `bin/test`or respectively `bin/doctest`. The master branch is automatically testedby Travis CI.To test pull requests, use[sympy-bot](https://github.com/sympy/sympy-bot).## Regenerate Experimental &lt;span class=&quot;title-ref&quot;&gt;LaTeX&lt;/span&gt; Parser/LexerThe parser and lexer were generated with the [ANTLR4](http://antlr4.org)toolchain in `sympy/parsing/latex/_antlr` and checked into the repo.Presently, most users should not need to regenerate these files, butif you plan to work on this feature, you will need the `antlr4`command-line tool (and you must ensure that it is in your `PATH`).One way to get it is:    $ conda install -c conda-forge antlr=4.10.1Alternatively, follow the instructions on the ANTLR website and downloadthe `antlr-4.10.1-complete.jar`. Then export the `CLASSPATH` as instructedand instead of creating `antlr4` as an alias, make it an executable filewith the following contents:``` bash#!/bin/bashjava -jar /usr/local/lib/antlr-4.10.1-complete.jar &quot;$@&quot;```After making changes to `sympy/parsing/latex/LaTeX.g4`, run:    $ ./setup.py antlr## CleanTo clean everything (thus getting the same tree as in the repository):    $ ./setup.py cleanYou can also clean things with git using:    $ git clean -Xdfwhich will clear everything ignored by `.gitignore`, and:    $ git clean -dfto clear all untracked files. You can revert the most recent changes ingit with:    $ git reset --hardWARNING: The above commands will all clear changes you may have made,and you will lose them forever. Be sure to check things with `gitstatus`, `git diff`, `git clean -Xn`, and `git clean -n` before doing anyof those.## BugsOur issue tracker is at &lt;https://github.com/sympy/sympy/issues&gt;. Pleasereport any bugs that you find. Or, even better, fork the repository onGitHub and create a pull request. We welcome all changes, big or small,and we will help you make the pull request if you are new to git (justask on our mailing list or Gitter Channel). If you further have any queries, you can find answerson Stack Overflow using the [sympy](https://stackoverflow.com/questions/tagged/sympy) tag.## Brief HistorySymPy was started by Ondřej Čertík in 2005, he wrote some code duringthe summer, then he wrote some more code during summer 2006. In February2007, Fabian Pedregosa joined the project and helped fix many things,contributed documentation, and made it alive again. 5 students (MateuszPaprocki, Brian Jorgensen, Jason Gedge, Robert Schwarz, and Chris Wu)improved SymPy incredibly during summer 2007 as part of the GoogleSummer of Code. Pearu Peterson joined the development during the summer2007 and he has made SymPy much more competitive by rewriting the corefrom scratch, which has made it from 10x to 100x faster. Jurjen N.E. Boshas contributed pretty-printing and other patches. Fredrik Johansson haswritten mpmath and contributed a lot of patches.SymPy has participated in every Google Summer of Code since 2007. Youcan see &lt;https://github.com/sympy/sympy/wiki#google-summer-of-code&gt; forfull details. Each year has improved SymPy by bounds. Most of SymPy'sdevelopment has come from Google Summer of Code students.In 2011, Ondřej Čertík stepped down as lead developer, with AaronMeurer, who also started as a Google Summer of Code student, taking hisplace. Ondřej Čertík is still active in the community but is too busywith work and family to play a lead development role.Since then, a lot more people have joined the development and somepeople have also left. You can see the full list in doc/src/aboutus.rst,or online at:&lt;https://docs.sympy.org/dev/aboutus.html#sympy-development-team&gt;The git history goes back to 2007 when development moved from svn to hg.To see the history before that point, look at&lt;https://github.com/sympy/sympy-old&gt;.You can use git to see the biggest developers. The command:    $ git shortlog -nswill show each developer, sorted by commits to the project. The command:    $ git shortlog -ns --since=&quot;1 year&quot;will show the top developers from the last year.## CitationTo cite SymPy in publications use&gt; Meurer A, Smith CP, Paprocki M, Čertík O, Kirpichev SB, Rocklin M,&gt; Kumar A, Ivanov S, Moore JK, Singh S, Rathnayake T, Vig S, Granger BE,&gt; Muller RP, Bonazzi F, Gupta H, Vats S, Johansson F, Pedregosa F, Curry&gt; MJ, Terrel AR, Roučka Š, Saboo A, Fernando I, Kulal S, Cimrman R,&gt; Scopatz A. (2017) SymPy: symbolic computing in Python. *PeerJ Computer&gt; Science* 3:e103 &lt;https://doi.org/10.7717/peerj-cs.103&gt;A BibTeX entry for LaTeX users is``` bibtex@article{10.7717/peerj-cs.103, title = {SymPy: symbolic computing in Python}, author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and \v{C}ert\'{i}k, Ond\v{r}ej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, Amit and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Rou\v{c}ka, \v{S}t\v{e}p\'{a}n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony}, year = 2017, month = Jan, keywords = {Python, Computer algebra system, Symbolics}, abstract = {            SymPy is an open-source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provides additional examples and further outlines details of the architecture and features of SymPy.         }, volume = 3, pages = {e103}, journal = {PeerJ Computer Science}, issn = {2376-5992}, url = {https://doi.org/10.7717/peerj-cs.103}, doi = {10.7717/peerj-cs.103}}```SymPy is BSD licensed, so you are free to use it whatever you like, beit academic, commercial, creating forks or derivatives, as long as youcopy the BSD statement if you redistribute it (see the LICENSE file fordetails). That said, although not required by the SymPy license, if itis convenient for you, please cite SymPy when using it in your work andalso consider contributing all your changes back, so that we canincorporate it and all of us will benefit in the end.</longdescription>
</pkgmetadata>