<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pydantic-yaml-parser&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt;&lt;div&gt;[![](https://github.com/hamelsmu/pydantic-yaml-parser/actions/workflows/test.yaml/badge.svg)](https://github.com/hamelsmu/pydantic-yaml-parser/actions/workflows/test.yaml)&lt;/div&gt;## Install``` shpip install pydantic_yaml_parser```## Background &amp; Usage### 1. Loading YAML into Pydantic modelsTo load YAML into a Pydantic model, you have to first convert the YAMLstring to a dict. For example, given the below yaml file:``` pythonyaml_string=&quot;&quot;&quot;setting_1: Hellosetting_2:    - kind: name      sublist:          - first          - second&quot;&quot;&quot;```You might define a Pydantic model to represent it like this:``` pythonfrom pydantic import BaseModelfrom typing import Listclass Setting2(BaseModel):    kind: str    sublist: Listclass Test(BaseModel):    setting_1: str    setting_2: List[Setting2]```You can load the yaml file into a dict, and into the Pydantic model likeso using [pyyaml](https://pyyaml.org/wiki/PyYAMLDocumentation):``` pythonimport yamlyml_dict = yaml.safe_load(yaml_string)# use `parse_obj` to load a dictTest.parse_obj(yml_dict)```    Test(setting_1='Hello', setting_2=[Setting2(kind='name', sublist=['first', 'second'])])### 2. The Pydantic validation error messageHowever, letâ€™s say there is an error in your yaml file such that youaccidentally set `sublist` to `false`, instead of setting `sublist` to`list` type, you will get an error message that looks like this:``` pythonyaml_string=&quot;&quot;&quot;setting_1: oksetting_2:    - kind: name      sublist: false&quot;&quot;&quot;yaml_dict_error = yaml.safe_load(yaml_string)`````` pythonTest.parse_obj(yaml_dict_error)```    ValidationError: 1 validation error for Test    setting_2 -&gt; 0 -&gt; sublist      value is not a valid list (type=type_error.list)This error message is a bit confusing, especially for those with noprior experience with pydantic!### 3. Human readable error messages with `pydantic_yaml_parser`When you use `pydantic_yaml_parser` you get an error message that ismuch clearer:``` pythonfrom pydantic_yaml_parser.yaml import YamlModelclass Test(YamlModel):    setting_1: str    setting_2: List[Setting2]`````` pythonTest.from_dict(yaml_dict_error)```    ValueError: Configuration error(s) for YAML:     - value is not a valid list: `sublist` for element 0 in the list for `setting_2`## Further ReadingFor more examples of error validation see [thesedocs](00_yaml.ipynb#error-validation).</longdescription>
</pkgmetadata>