<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># xvideos-dl&lt;div align=&quot;center&quot;&gt;[![Build status](https://github.com/lonsty/xvideos-dl/workflows/build/badge.svg?branch=master&amp;event=push)](https://github.com/lonsty/xvideos-dl/actions?query=workflow%3Abuild)[![Python Version](https://img.shields.io/pypi/pyversions/xvideos-dl.svg)](https://pypi.org/project/xvideos-dl/)[![Dependencies Status](https://img.shields.io/badge/dependencies-up%20to%20date-brightgreen.svg)](https://github.com/lonsty/xvideos-dl/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20author%3Aapp%2Fdependabot)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Security: bandit](https://img.shields.io/badge/security-bandit-green.svg)](https://github.com/PyCQA/bandit)[![Pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/lonsty/xvideos-dl/blob/master/.pre-commit-config.yaml)[![Semantic Versions](https://img.shields.io/badge/%F0%9F%9A%80-semantic%20versions-informational.svg)](https://github.com/lonsty/xvideos-dl/releases)[![License](https://img.shields.io/github/license/lonsty/xvideos-dl)](https://github.com/lonsty/xvideos-dl/blob/master/LICENSE)CLI to download videos from https://xvideos.com&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lonsty/xvideos-dl/blob/master/README_CN.md&quot;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/div&gt;## Features- [X] Download a single video (requires the URL of the video playback page)- [X] Download all videos in the favorites (requires the URL of the favorite page)- [X] Download all videos uploaded by the user (requires the URL of the user's homepage)- [X] Download all videos published by the channel (requires the URL of the channel homepage)- [X] Segmented high-speed download, breakpoint download, progress and status display- [x] Download high quality videos, 1080p or higher## Usage‚ö†Ô∏è**Requires:**- `Python`: &gt;= 3.6.1- [`ffmpeg`](https://ffmpeg.org/download.html)  - Ubuntu/Debian: `sudo apt install ffmpeg`  - MacOS: `brew install ffmpeg`- `Cookie`: When you run it for the first time, you will be prompted to enter the cookie, log in https://xvideos.com with your account, copy and paste a long string of cookie (must has `session_token=xxx`), then enjoy it.Cookie is stored in *~/.xvideos/cookie* (or *C:\Users\&lt;USER&gt;\.xvideos\cookie*).- Install xvideos-dl```bashpip install -U xvideos-dl```- Get CLI help```bashxvideos-dl --help```- Download single / favorites / uploaded / published videos in one command:```bashxvideos-dl https://www.xvideos.com/video37177493/asian_webcam_2_camsex4u.life https://www.xvideos.com/favorite/71879935/_ https://www.xvideos.com/profiles/mypornstation https://www.xvideos.com/channels/av69tv  ```![demo](demo_2.jpeg)## Release History### 1.3.0- Added support for downloading higher quality videos.   CLI will download the highest quality video by default, which may be 1080p or higher, depending on the videos provided by XVIDEOS.  So the download speed will be slower, if you want to be faster, you can use `-q low` or `-q middle`.### 1.2.0- Support for Python 3.6.1+### 1.1.2Bugfix:- Fixed a bug that would not retry when the network connection failed.### 1.1.1New Feature:- Add parameters to control the start and end of the video in the download list.Others:- When running the same command repeatedly, quickly skip the downloaded video.- Catch exceptions: 404 not found, forbidden downloading...### 1.1.0New Features:- Download all videos uploaded by users.- Download all videos posted by the channel.- Download single, playlist, user uploaded and channel posted videos in one command.- Optimize download status display.### 1.0.1New Features:- Download videos from favorites.- Show download speed.### 1.0.0Initial release on PyPY.&lt;hr&gt;## For Contributors### Initial1. Fork and clone this repo:```bashgit clone https://github.com/lonsty/xvideos-dl```2. If you don't have `Poetry` installed run:```bashmake download-poetry```3. Initialize poetry and install `pre-commit` hooks:```bashmake install```### Makefile usage[`Makefile`](https://github.com/lonsty/xvideos-dl/blob/master/Makefile) contains many functions for fast assembling and convenient work.&lt;details&gt;&lt;summary&gt;1. Download Poetry&lt;/summary&gt;&lt;p&gt;```bashmake download-poetry```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;2. Install all dependencies and pre-commit hooks&lt;/summary&gt;&lt;p&gt;```bashmake install```If you do not want to install pre-commit hooks, run the command with the NO_PRE_COMMIT flag:```bashmake install NO_PRE_COMMIT=1```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;3. Check the security of your code&lt;/summary&gt;&lt;p&gt;```bashmake check-safety```This command launches a `Poetry` and `Pip` integrity check as well as identifies security issues with `Safety` and `Bandit`. By default, the build will not crash if any of the items fail. But you can set `STRICT=1` for the entire build, or you can configure strictness for each item separately.```bashmake check-safety STRICT=1```or only for `safety`:```bashmake check-safety SAFETY_STRICT=1```multiple```bashmake check-safety PIP_STRICT=1 SAFETY_STRICT=1```&gt; List of flags for `check-safety` (can be set to `1` or `0`): `STRICT`, `POETRY_STRICT`, `PIP_STRICT`, `SAFETY_STRICT`, `BANDIT_STRICT`.&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;4. Check the codestyle&lt;/summary&gt;&lt;p&gt;The command is similar to `check-safety` but to check the code style, obviously. It uses `Black`, `Darglint`, `Isort`, and `Mypy` inside.```bashmake check-style```It may also contain the `STRICT` flag.```bashmake check-style STRICT=1```&gt; List of flags for `check-style` (can be set to `1` or `0`): `STRICT`, `BLACK_STRICT`, `DARGLINT_STRICT`, `ISORT_STRICT`, `MYPY_STRICT`.&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;5. Run all the codestyle formaters&lt;/summary&gt;&lt;p&gt;Codestyle uses `pre-commit` hooks, so ensure you've run `make install` before.```bashmake codestyle```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;6. Run tests&lt;/summary&gt;&lt;p&gt;```bashmake test```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;7. Run all the linters&lt;/summary&gt;&lt;p&gt;```bashmake lint```the same as:```bashmake test &amp;&amp; make check-safety &amp;&amp; make check-style```&gt; List of flags for `lint` (can be set to `1` or `0`): `STRICT`, `POETRY_STRICT`, `PIP_STRICT`, `SAFETY_STRICT`, `BANDIT_STRICT`, `BLACK_STRICT`, `DARGLINT_STRICT`, `ISORT_STRICT`, `MYPY_STRICT`.&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;8. Build docker&lt;/summary&gt;&lt;p&gt;```bashmake docker```which is equivalent to:```bashmake docker VERSION=latest```More information [here](https://github.com/lonsty/xvideos-dl/tree/master/docker).&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;9. Cleanup docker&lt;/summary&gt;&lt;p&gt;```bashmake clean_docker```or to remove all build```bashmake clean```More information [here](https://github.com/lonsty/xvideos-dl/tree/master/docker).&lt;/p&gt;&lt;/details&gt;## üìà ReleasesYou can see the list of available releases on the [GitHub Releases](https://github.com/lonsty/xvideos-dl/releases) page.We follow [Semantic Versions](https://semver.org/) specification.We use [`Release Drafter`](https://github.com/marketplace/actions/release-drafter). As pull requests are merged, a draft release is kept up-to-date listing the changes, ready to publish when you‚Äôre ready. With the categories option, you can categorize pull requests in release notes using labels.For Pull Request this labels are configured, by default:|               **Label**               |  **Title in Releases**  || :-----------------------------------: | :---------------------: ||       `enhancement`, `feature`        |       üöÄ Features       || `bug`, `refactoring`, `bugfix`, `fix` | üîß Fixes &amp; Refactoring  ||       `build`, `ci`, `testing`        | üì¶ Build System &amp; CI/CD ||              `breaking`               |   üí• Breaking Changes   ||            `documentation`            |    üìù Documentation     ||            `dependencies`             | ‚¨ÜÔ∏è Dependencies updates |You can update it in [`release-drafter.yml`](https://github.com/lonsty/xvideos-dl/blob/master/.github/release-drafter.yml).GitHub creates the `bug`, `enhancement`, and `documentation` labels for you. Dependabot creates the `dependencies` label. Create the remaining labels on the Issues tab of your GitHub repository, when you need them.## üõ° License[![License](https://img.shields.io/github/license/lonsty/xvideos-dl)](https://github.com/lonsty/xvideos-dl/blob/master/LICENSE)This project is licensed under the terms of the `MIT` license. See [LICENSE](https://github.com/lonsty/xvideos-dl/blob/master/LICENSE) for more details.## üìÉ Citation```@misc{xvideos-dl,  author = {xvideos-dl},  title = {CLI to download videos from https://xvideos.com},  year = {2021},  publisher = {GitHub},  journal = {GitHub repository},  howpublished = {\url{https://github.com/lonsty/xvideos-dl}}}```## CreditsThis project was generated with [`python-package-template`](https://github.com/TezRomacH/python-package-template).</longdescription>
</pkgmetadata>