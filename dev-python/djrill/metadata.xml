<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Djrill: Mandrill Transactional Email for Django===============================================..  This README is reused in multiple places:    * Github: project page, exactly as it appears here    * Docs: shared-intro section gets included in docs/index.rst            quickstart section gets included in docs/quickstart.rst    * PyPI: project page (via setup.py long_description),            with several edits to freeze it to the specific PyPI release            (see long_description_from_readme in setup.py)    You can use docutils 1.0 markup, but *not* any Sphinx additions... default-role:: literal.. _shared-intro:.. This shared-intro section is also included in docs/index.rstDjrill integrates the `Mandrill &lt;http://mandrill.com&gt;`_ transactionalemail service into Django.  **PROJECT STATUS: INACTIVE**  As of April, 2016, Djrill is no longer actively maintained (other  than security updates). It is likely to keep working unless/until  Mandrill changes their APIs, but Djrill will not be updated for  newer Django versions or Mandrill changes.  (`more info &lt;https://github.com/brack3t/Djrill/issues/111&gt;`_)  You may be interested in  `django-anymail &lt;https://github.com/anymail/django-anymail&gt;`_,  a Djrill fork that supports Mailgun, Postmark, SendGrid, and other  transactional ESPs (including limited support for Mandrill).In general, Djrill &quot;just works&quot; with Django's built-in `django.core.mail`package. It includes:* Support for HTML, attachments, extra headers, and other features of  `Django's built-in email &lt;https://docs.djangoproject.com/en/stable/topics/email/&gt;`_* Mandrill-specific extensions like tags, metadata, tracking, and MailChimp templates* Optional support for Mandrill inbound email and other webhook notifications,  via Django signalsDjrill is released under the BSD license. It is tested against Django 1.4--1.9(including Python 3 with Django 1.6+, and PyPy support with Django 1.5+).Djrill uses `semantic versioning &lt;http://semver.org/&gt;`_... END shared-intro.. image:: https://travis-ci.org/brack3t/Djrill.png?branch=v2.1       :target: https://travis-ci.org/brack3t/Djrill       :alt:    build status on Travis-CI**Resources*** Full documentation: https://djrill.readthedocs.org/en/v2.1/* Package on PyPI: https://pypi.python.org/pypi/djrill* Project on Github: https://github.com/brack3t/DjrillDjrill 1-2-3------------.. _quickstart:.. This quickstart section is also included in docs/quickstart.rst1. Install Djrill from PyPI:   .. code-block:: console        $ pip install djrill2. Edit your project's ``settings.py``:   .. code-block:: python        INSTALLED_APPS = (            ...            &quot;djrill&quot;        )        MANDRILL_API_KEY = &quot;&lt;your Mandrill key&gt;&quot;        EMAIL_BACKEND = &quot;djrill.mail.backends.djrill.DjrillBackend&quot;        DEFAULT_FROM_EMAIL = &quot;you@example.com&quot;  # if you don't already have this in settings3. Now the regular `Django email functions &lt;https://docs.djangoproject.com/en/stable/topics/email/&gt;`_   will send through Mandrill:   .. code-block:: python        from django.core.mail import send_mail        send_mail(&quot;It works!&quot;, &quot;This will get sent through Mandrill&quot;,            &quot;Djrill Sender &lt;djrill@example.com&gt;&quot;, [&quot;to@example.com&quot;])   You could send an HTML message, complete with custom Mandrill tags and metadata:   .. code-block:: python        from django.core.mail import EmailMultiAlternatives        msg = EmailMultiAlternatives(            subject=&quot;Djrill Message&quot;,            body=&quot;This is the text email body&quot;,            from_email=&quot;Djrill Sender &lt;djrill@example.com&gt;&quot;,            to=[&quot;Recipient One &lt;someone@example.com&gt;&quot;, &quot;another.person@example.com&quot;],            headers={'Reply-To': &quot;Service &lt;support@example.com&gt;&quot;} # optional extra headers        )        msg.attach_alternative(&quot;&lt;p&gt;This is the HTML email body&lt;/p&gt;&quot;, &quot;text/html&quot;)        # Optional Mandrill-specific extensions:        msg.tags = [&quot;one tag&quot;, &quot;two tag&quot;, &quot;red tag&quot;, &quot;blue tag&quot;]        msg.metadata = {'user_id': &quot;8675309&quot;}        # Send it:        msg.send().. END quickstartSee the `full documentation &lt;https://djrill.readthedocs.org/en/v2.1/&gt;`_for more features and options.</longdescription>
</pkgmetadata>