<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Leval![License](https://img.shields.io/github/license/valohai/leval)[![Coverage](https://img.shields.io/codecov/c/github/valohai/leval)](https://app.codecov.io/gh/valohai/leval)[![CI](https://github.com/valohai/leval/actions/workflows/ci.yml/badge.svg)](https://github.com/valohai/leval/actions/workflows/ci.yml)[![PyPI](https://img.shields.io/pypi/v/leval)](https://pypi.org/project/leval)&gt; A limited expression evaluatorA little more suited for dynamic usage than `ast.literal_eval()`while remaining as safe as the functions you pass in.Under the hood, it uses the `ast` module to parse the expression,then walks the AST in Python to evaluate the result. You canalso specify a depth limit for the complexity of the expression,as well as a time limit for the evaluation.## Example usage### Simple APIFor many use cases, the `simple_eval()` function is sufficient.You can specify a depth limit and a time limit, and optional mappingsof variables and functions.The `values` mapping can also be keyed by a tuple of strings, whichis what attribute accesses are folded to.Operations are generally limited to numbers only in the simple API.```pythonfrom leval.simple import simple_evalassert simple_eval('1 + 2') == 3assert simple_eval('x &lt; -80 or x &gt; 125 or x == 85', values={'x': 85})assert simple_eval('abs(x) &gt; 80', values={'x': -85}, functions={'abs': abs})assert simple_eval('x.y.z + 8', values={('x', 'y', 'z'): 34}) == 42```### Advanced APIUnder the hood, `simple_eval` simply1. initializes an evaluation universe, which defines the functions, variables   and operations available2. creates an Evaluator to evaluate the expression with the given universeBoth of these classes are designed to be easily subclassable. There are examplesin the `test_leval.py` file.</longdescription>
</pkgmetadata>