<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>gatilegrid===========[![Build Status](https://travis-ci.org/geoadmin/lib-gatilegrid.svg?branch=master)](https://travis-ci.org/geoadmin/lib-gatilegrid)## Geoadmin custom tile grid for web mapping applicationsgatilegrid is compatible with python 2.7, 3.5, 3.6 and 3.7## Installation```bash$ pip install gatilegrid```### UsageSeveral tile grids are supported, namely 21781, 2056, 3857 and 4326. Here is an exemple using 21781.For 4326, an additional parameter is available (`tmsCompatible=True`).```pythonfrom gatilegrid import getTileGridfrom gatilegrid import GeoadminTileGridLV03 as GeoadminTileGridzoom = 18tileCol = 6tileRow = 7# Get and initialize the grid (top-left and bottom-left are availble)gagrid = getTileGrid(21781)(originCorner='top-left')# With extent constraintoffset = 100000gagridExtent = GeoadminTileGrid(extent=[gagrid.MINX + offset, gagrid.MINY + offset,                                        gagrid.MAXX - offset, gagrid.MAXY - offset])bounds = [xmin, ymin, xmax, ymax] = gagrid.tileBounds(zoom, tileCol, tileRow)print(bounds)&gt;&gt;&gt; [496800.0, 247600.0, 509600.0, 260400.0]print(gagrid.tileAddressTemplate)&gt;&gt;&gt; {zoom}/{tileCol}/{tileRow}topLeftCorner = [xmin, ymax]tileAddress = [tileCol, tileRow] = gagrid.tileAddress(zoom, topLeftCorner)print(tileAddress)&gt;&gt;&gt; [6, 7]# Get the parent tilesparentZoom = 1gagrid.getParentTiles(zoom, tileCol, tileRow, parentZoom)&gt;&gt;&gt; [[1, 0, 0]]# It also works if the point is within the tilepointInTile = [topLeftCorner[0] + 200.0, topLeftCorner[1] - 200.0]print(gagrid.tileAddress(zoom, pointInTile))&gt;&gt;&gt; [7, 6]# Resolution in metersprint(gagrid.getResolution(zoom))&gt;&gt;&gt; 50.0# Scale dpi dependent (defaults to 96)print(gagrid.getScale(zoom, dpi=96.0))&gt;&gt;&gt; 188976.0# Tile size in metersprint(gagrid.tileSize(zoom))&gt;&gt;&gt; 12800.0# Number of tiles at zoomprint(gagrid.numberOfTilesAtZoom(zoom))&gt;&gt;&gt; 950# Extent dependentprint(gagridExtent.numberOfTilesAtZoom(zoom))&gt;&gt;&gt; 253# Get the closest zoom for a given resolutionprint(gagrid.getClosestZoom(245))&gt;&gt;&gt; 16# Get the ceiling zoom for a given resolutionprint(gagrid.getCeilingZoom(245))&gt;&gt;&gt; 17# Generate tilesSpecminZoom = 16maxZoom = zoomtilesSpecGenerator = gagrid.iterGrid(minZoom, maxZoom)for i, t in enumerate(tilesSpecGenerator):    (tileBounds, zoom, tileCol, tileRow) = t    print(t)    if i == 1:        break&gt;&gt;&gt; ([420000.0, 286000.0, 484000.0, 350000.0], 16, 0, 0)&gt;&gt;&gt; ([484000.0, 286000.0, 548000.0, 350000.0], 16, 1, 0)# Extent dependenttilesSpecGeneratorExtent = gagridExtent.iterGrid(minZoom, maxZoom)for i, t in enumerate(tilesSpecGeneratorExtent):    (tileBounds, zoom, tileCol, tileRow) = t    print(t)    if i = 1:        break&gt;&gt;&gt; ([484000.0, 222000.0, 548000.0, 286000.0], 16, 1, 1)&gt;&gt;&gt; ([548000.0, 222000.0, 612000.0, 286000.0], 16, 2, 1)```This module also provides a simple grid API for grid cells addressing.```pythonfrom gatilegrid import Gridextent = [485349.96, 75250.055, 833849.959, 295950.054]resolutionX = 100.0resolutionY = -100.0grid = Grid(extent, resolutionX, resolutionY)# We use singed resolution to define the origin.# Here the origin is at the top-left corner.print(grid.origin)&gt;&gt;&gt; [485349.96, 295950.054]# The Grid class defines a series of useful propertiesprint(grid.cellArea)&gt;&gt;&gt; 10000.0print(grid.nbCellsX)&gt;&gt;&gt; 3485print(grid.nbCellsY)&gt;&gt;&gt; 2207print(grid.isTopLeft)&gt;&gt;&gt; Trueprint(grid.isBottomRight)&gt;&gt;&gt; False[col, row] = grid.cellAddressFromPointCoordinate([500000, 100000])print(col)&gt;&gt;&gt; 146print(row)&gt;&gt;&gt; 1959# Get the extent of the cell using its addresscellExtent = grid.cellExtent(col, row)print(cellExtent)&gt;&gt;&gt; [499949.96, 99950.054, 500049.96, 100050.054]# Get an address range using an extent[minCol, minRow, maxCol, maxRow] = grid.getExtentAddress([500000, 100000, 550000, 150000])print(minCol)&gt;&gt;&gt; 146print(minRow)&gt;&gt;&gt; 1459print(maxCol)&gt;&gt;&gt; 646print(maxRow)&gt;&gt;&gt; 1959```### Tests```source .venv/bin/activatepython setup.py test```### Publish a new version of the moduleEdit `$HOME/.pypirc` and add (username and password in keepass):```[distutils]index-servers =  pypi  pypitest[pypi]repository=https://upload.pypi.org/legacy/username=iwi***password=[pypitest]repository=https://test.pypi.org/legacy/username=iwi***password=```Bump version in `setup.py`.Build, check and upload the new module to the test repository:```pip install --upgrade twine wheel setuptoolspython setup.py sdist bdist_wheeltwine upload --repository testpypi dist/*```Test local install from test repository.```pip install -i https://test.pypi.org/simple/ gatilegrid```If everything is ok, push the new version to the default repository.```twine upload --repository pypi dist/*```Test the newly created module.Create a RELEASE in github.#### CONTRIBUTORS:- [Loic Gasser](https://github.com/loicgasser)- [Marc Monnerat](https://github.com/procrastinatio)- [Nadine Piveteau](https://github.com/nadine-piveteau)- [Marcel Clausen](https://github.com/ltclm)- [Gilbert Jeinziner](https://github.com/gjn)</longdescription>
</pkgmetadata>