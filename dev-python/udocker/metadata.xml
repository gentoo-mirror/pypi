<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI version](https://badge.fury.io/py/udocker.svg)](https://badge.fury.io/py/udocker)[![Build Status](https://jenkins.eosc-synergy.eu/buildStatus/icon?job=indigo-dc%2Fudocker%2Fmaster)](https://jenkins.eosc-synergy.eu/job/indigo-dc/job/udocker/job/master/)[![SQAaaS badge](https://github.com/EOSC-synergy/SQAaaS/raw/master/badges/badges_150x116/badge_software_gold.png)](https://api.eu.badgr.io/public/assertions/70dSTwYKQpmEv7dFy6TF3w &quot;SQAaaS gold badge achieved&quot;)---![logo](docs/logo-small.png)udocker is a basic user tool to execute simple docker containers in userspace without requiring root privileges. Enables download and executionof docker containers by non-privileged users in Linux systems wheredocker is not available. It can be used to pull and execute dockercontainers in Linux batch systems and interactive clusters that aremanaged by other entities such as grid infrastructures or externallymanaged batch or interactive systems.udocker does not require any type of privileges nor the deployment ofservices by system administrators. It can be downloaded and executedentirely by the end user. The limited root functionality provided bysome of the udocker execution modes is either simulated or providedvia user namespaces.udocker is a wrapper around several tools and libraries to mimic asubset of the docker capabilities including pulling images and runningcontainers with minimal functionality.## DocumentationThe full documentation is available at:* [udocker documentation](https://indigo-dc.github.io/udocker/)  * [Installation manual](https://indigo-dc.github.io/udocker/installation_manual.html)  * [User manual](https://indigo-dc.github.io/udocker/user_manual.html)  * [Reference card](https://indigo-dc.github.io/udocker/reference_card.html)## How does it workudocker is written in Python, it has a minimal set of dependencies sothat can be executed in a wide range of Linux systems.udocker does not make use of docker nor requires its presence.udocker &quot;executes&quot; the containers by simply providing a chroot likeenvironment over the extracted container. The current implementationsupports different methods to mimic chroot thus enabling execution ofcontainers under a chroot like environment without requiring privileges.udocker transparently supports several methods to execute the containersbased on external tools and libraries such as:* PRoot* Fakechroot* runc* crun* SingularityWith the exception of Singularity the tools and libraries to supportexecution are downloaded and deployed by udocker during the installationprocess. This installation is performed in the user home directoryand does not require privileges. The udocker related files such aslibraries, executables, documentation, licenses, container images andextracted directory trees are placed by default under `$HOME/.udocker`.## Advantages* Can be deployed by the end-user* Does not require privileges for installation* Does not require privileges for execution* Does not require compilation, just transfer the Python code* Encapsulates several tools and execution methods* Includes the required tools already statically compiled to work  across systems* Provides a docker like command line interface* Supports a subset of docker commands:  search, pull, import, export, load, save, login, logout, create and run* Understands docker container metadata* Allows loading of docker and OCI containers* Supports NVIDIA GPGPU applications* Can execute in systems and environments where Linux namespaces  support is unavailable* Runs both on new and older Linux distributions including:  CentOS 6, CentOS 7, CentOS 8, Ubuntu 14, Ubuntu 16, Ubuntu 18, Ubuntu 20,  Ubuntu 21, Alpine, Fedora, etc## Python 2 and Python 3Since v1.3.0, udocker supports Python 2.6, 2.7 and Python &gt;= 3.6.The original udocker v1.1.x for Python 2 is no longer maintainedbut is still available[here](https://github.com/indigo-dc/udocker/tree/v1.1.8).## Syntax```txt        Commands:          search &lt;repo/expression&gt;      :Search dockerhub for container images          pull &lt;repo/image:tag&gt;         :Pull container image from dockerhub          create &lt;repo/image:tag&gt;       :Create container from a pulled image          run &lt;container&gt;               :Execute container          images -l                     :List container images          ps -m -s                      :List created containers          name &lt;container_id&gt; &lt;name&gt;    :Give name to container          rmname &lt;name&gt;                 :Delete name from container          rename &lt;name&gt; &lt;new_name&gt;      :Change container name          clone &lt;container_id&gt;          :Duplicate container          rm &lt;container-id&gt;             :Delete container          rmi &lt;repo/image:tag&gt;          :Delete image          import &lt;tar&gt; &lt;repo/image:tag&gt; :Import tar file (exported by docker)          import - &lt;repo/image:tag&gt;     :Import from stdin (exported by docker)          export -o &lt;tar&gt; &lt;container&gt;   :Export container directory tree          export - &lt;container&gt;          :Export container directory tree          load -i &lt;imagefile&gt;           :Load image from file (saved by docker)          load                          :Load image from stdin (saved by docker)          save -o &lt;imagefile&gt; &lt;repo/image:tag&gt;  :Save image with layers to file          inspect -p &lt;repo/image:tag&gt;   :Return low level information on image          verify &lt;repo/image:tag&gt;       :Verify a pulled or loaded image          protect &lt;repo/image:tag&gt;      :Protect repository          unprotect &lt;repo/image:tag&gt;    :Unprotect repository          protect &lt;container&gt;           :Protect container          unprotect &lt;container&gt;         :Unprotect container          mkrepo &lt;top-repo-dir&gt;         :Create another repository in location          setup                         :Change container execution settings          login                         :Login into docker repository          logout                        :Logout from docker repository          help                          :This help          run --help                    :Command specific help          version                       :Shows udocker version        Options common to all commands must appear before the command:          -D                            :Debug          --quiet                       :Less verbosity          --repo=&lt;directory&gt;            :Use repository at directory          --insecure                    :Allow insecure non authenticated https          --allow-root                  :Allow execution by root NOT recommended```## ExamplesSome examples of usage:Search container images in dockerhub.```bashudocker search  fedoraudocker search  ubuntuudocker search  indigodatacloud```Pull from dockerhub and list the pulled images.```bashudocker pull   fedora:29udocker pull   busyboxudocker pull   iscampos/openqcdudocker images```Pull from a registry other than dockerhub.```bashudocker search  quay.io/bioudocker search  --list-tags  quay.io/biocontainers/scikit-bioudocker pull    quay.io/biocontainers/scikit-bio:0.2.3--np112py35_0udocker images```Create a container from a pulled image, assign a name to the createdcontainer and run it. A created container can be run multiple timesuntil it is explicitely removed.```bashudocker create --name=myfed  fedora:29udocker run  myfed  cat /etc/redhat-release```The three steps of pulling, creating and running can be also achievedin a single command, however this will be much slower for multipleinvocations of the same container, as a new container will be createdfor each invocation. This approach will also consume more storage space.The following example creates a new container for each invocation.```bashudocker run  fedora:29  cat /etc/redhat-release```Execute mounting the host /home/u457 into the container directory /home/cuser.Notice that you can &quot;mount&quot; any host directory inside the container.Depending on the execution mode the &quot;mount&quot; is implemented differently andmay have restrictions.```bashudocker run -v /home/u457:/home/cuser -w /home/user myfed  /bin/bashudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash```Place a script in your host /tmp and execute it in the container. Noticethat the behavior of `--entrypoint` changed from the previous versionsfor better compatibility with docker.```bashudocker run  -v /tmp  --entrypoint=&quot;&quot; myfed  /bin/bash -c 'cd /tmp; ./myscript.sh'udocker run  -v /tmp  --entrypoint=/bin/bash  myfed  -c 'cd /tmp; ./myscript.sh'```Execute mounting the host /var, /proc, /sys and /tmp in the same containerdirectories. Notice that the content of these container directories willbe obfuscated.```bashudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash```Install software inside the container.```bashudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin```Run as some user. The usernames should exist in the container.```bashudocker run --user 1000:1001  myfed  /bin/idudocker run --user root   myfed  /bin/idudocker run --user jorge  myfed  /bin/id```Running Firefox.```bashudocker run --bindhome --hostauth --hostenv \   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox```Change execution engine mode from PRoot to Fakechroot and run.```bashudocker setup  --execmode=F3  myfedudocker run --bindhome --hostauth --hostenv \   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox```Change execution engine mode to accelerated PRoot.```bashudocker setup  --execmode=P1  myfed```Change execution engine to runc.```bashudocker setup  --execmode=R1  myfed```Change execution engine to Singularity. Requires the availability ofSingularity in the host system.```bash./udocker setup  --execmode=S1  myfed```Install software running as root emulation in Singularity:```bashudocker setup  --execmode=S1  myfedudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin```## SecurityBy default udocker via PRoot offers the emulation of the root user. Thisemulation mimics a real root user (e.g getuid will return 0). This is justan emulation no root privileges are involved. This feature makes possiblethe execution of some tools that do not require actual privileges but whichrefuse to work if the username or id are not root or 0. This enables forinstance software installation using rpm, yum or dnf inside the container.udocker does not offer robust isolation features such as the ones offeredby docker. Therefore if the containers content is not trusted then thesecontainers should not be executed with udocker as they will run inside theuser environment. For this reason udocker should not be run by privilegedusers.Container images and filesystems will be unpacked and stored in the userhome directory under `$HOME/.udocker` or other location of choice. Thereforethe containers data will be subjected to the same filesystem protections asother files owned by the user. If the containers have sensitive informationthe files and directories should be adequately protected by the user.udocker does not require privileges and runs under the identity of the userinvoking it. Users can downloaded udocker and execute it without requiringsystem administrators intervention.udocker also provides execution with runc, crun and Singularity, these modesmake use of rootless namespaces and enable a normal user to execute as rootwith the limitations that apply to user namespaces and to these tools.When executed by normal unprivileged users, udocker limits privilegeescalation issues since it does not use or require system privileges.## General LimitationsSince root privileges are not involved any operation that reallyrequires such privileges will not be possible. The following  areexamples of operations that are not possible:* accessing host protected devices and files* listening on TCP/IP privileged ports (range below 1024)* mount file-systems* the su command will not work* change the system time* changing routing tables, firewall rules, or network interfacesIf the containers require such privilege capabilities then dockershould be used instead.udocker is not meant to create containers. Creation of containersis better performed using docker and dockerfiles.udocker does not provide all the docker features, and is not intendedas a docker replacement.udocker is mainly oriented at providing a run-time environment forcontainers execution in user space. udocker is particularly suited torun user applications encapsulated in docker containers.Debugging inside of udocker with the PRoot engine will not work due tothe way PRoot implements the chroot environment## Execution mode specific limitationsudocker offers multiple execution modes leveraging several external toolssuch as PRoot (P mode), Fakechroot (F mode), runC (R mode), crun (R mode)and Singularity (S mode).When using execution Fakechroot modes such as F2, F3 and F4 the createdcontainers cannot be moved across hosts. In this case convert back to a Pnmode before transfer.This is not needed if the hosts are part of an homogeneous cluster wherethe mount points and directory structure is the same. This limitationapplies whenever the absolute realpath to the container directory changes.The default accelerated mode of PRoot (mode P1) may exhibit problems in Linuxkernels above 4.0 due to kernel changes and upstream issues, in this case usemode P2 or any of the other execution modes.```bash./udocker setup  --execmode=P2  my-container-id```The Fakechroot modes (Fn modes) require shared libraries compiled againstthe libc shipped with the container. udocker provides these libraries forseveral Linux distributions, these shared libraries are installed byudocker under:```bash$HOME/.udocker/lib/libfakechroot-*```The runc and crun modes (R modes) require a kernel with user namespaces enabled.The singularity mode (S mode) requires the availability of Singularity inthe host system. Singularity is not shipped with udocker.## Metadata generationThe `codemeta.json` metadata file was initially generated with `codemetapy`package:```bashcodemetapy udocker --with-orcid --affiliation &quot;LIP Lisbon&quot; \  --buildInstructions &quot;https://https://github.com/indigo-dc/udocker/blob/master/docs/installation_manual.md#3-source-code-and-build&quot; \  --citation &quot;https://doi.org/10.1016/j.cpc.2018.05.021&quot; \  --codeRepository &quot;https://github.com/indigo-dc/udocker&quot; \  --contIntegration &quot;https://jenkins.eosc-synergy.eu/job/indigo-dc/job/udocker/job/master/&quot; --contributor &quot;Mario David&quot; \  --copyrightHolder &quot;LIP&quot;  --copyrightYear &quot;2016&quot; --creator &quot;Jorge Gomes&quot; \  --dateCreated &quot;2021-05-26&quot; --maintainer &quot;Jorge Gomes&quot; \  --readme &quot;https://github.com/indigo-dc/udocker/blob/master/README.md&quot; \  --referencePublication &quot;https://doi.org/10.1016/j.cpc.2018.05.021&quot; \  --releaseNotes &quot;https://github.com/indigo-dc/udocker/blob/master/changelog&quot; \  -O codemeta.json```Further updates may be needed to add the correct values in the metadata file.## ContributingSee: [Contributing](CONTRIBUTING.md)## CitingSee: [Citing](CITING.md)When citing udocker please use the following:* Jorge Gomes, Emanuele Bagnaschi, Isabel Campos, Mario David,  Luís Alves, João Martins, João Pina, Alvaro López-García, Pablo Orviz,  Enabling rootless Linux Containers in multi-user environments: The udocker  tool, Computer Physics Communications, Available online 6 June 2018,  ISSN 0010-4655, &lt;https://doi.org/10.1016/j.cpc.2018.05.021&gt;## LicensingRedistribution, commercial use and code changes must regard all licensesshipped with udocker. These include the [udocker license](LICENSE) and theindividual licences of the external tools and libraries packaged for usewith udocker. For further information see the[software licenses section](https://indigo-dc.github.io/udocker/installation_manual.html#62-software-licenses)of the installation manual.## Acknowledgements* Docker &lt;https://www.docker.com/&gt;* PRoot &lt;https://proot-me.github.io/&gt;* Fakechroot &lt;https://github.com/dex4er/fakechroot/wiki&gt;* runC &lt;https://runc.io/&gt;* crun &lt;https://github.com/containers/crun&gt;* Singularity &lt;https://www.sylabs.io/&gt;* Open Container Initiative &lt;https://www.opencontainers.org/&gt;* INDIGO DataCloud &lt;https://www.indigo-datacloud.eu&gt;* DEEP-Hybrid-DataCloud &lt;https://deep-hybrid-datacloud.eu&gt;* EOSC-hub &lt;https://eosc-hub.eu&gt;* EGI-ACE &lt;https://www.egi.eu/projects/egi-ace/&gt;* EOSC-Synergy &lt;https://www.eosc-synergy.eu/&gt;* LIP [https://www.lip.pt](https://www.lip.pt/?section=home&amp;page=homepage&amp;lang=en)* INCD [https://www.incd.pt](https://www.incd.pt/?lang=en)This work was performed in the framework of the H2020 project INDIGO-Datacloud(RIA 653549) and further developed with co-funding by the projects EOSC-hub(Horizon 2020) under Grant number 777536 and DEEP-Hybrid-DataCloud(Horizon 2020) under Grant number 777435. Software Quality Assurance isperformed with the support of by the project EOSC-Synergy (Horizon 2020).The authors wish to acknowleadge the support of INCD-Infraestrutura Nacional deComputação Distribuída (funded by FCT, P2020, Lisboa2020, COMPETE and FEDERunder the project number 22153-01/SAICT/2016).# Changelog## udocker (1.3.8)* build udockertools 1.2.9 and set it as default* add Fn support for Ubuntu:22* remove files to be installed* set Fn preference to use runc## udocker (1.3.7)* Remove deprecated unit tests. udocker is the same as version 1.3.6## udocker (1.3.6)* re-implement udocker namespace solves #380* login fails all the time solves #379* Ignore image loading if already exists solves #378## udocker (1.3.5)* fix python backwards compatibility issues  * closes: #374* fix incorrectly reported errors by image verification* fix image search returning empty results* fix issue with logical links in the udocker executable path* add check to verify if container name exists before creation  or cloning* add --force option to create and clone to allow creation  of container even if the intended name given by --name exists* prevent closing of file descriptors upon engine invocation  improves PMI process management interface interoperability* fix issues in import and export while using pipes.* fix image name parsing where &quot;library&quot; component is missing  * closes: #359## udocker (1.3.4)* fix 2 unit tests## udocker (1.3.3)* image list does not truncate long names - solve #349* fix conditional warning in verify image* fix and improve udocker high level tests## udocker (1.3.2)* fix missing f (format) for string* fix bugs with dict .items()* solving several pylint issues* remove use2to3, fix issue #358## udocker (1.3.1)* Add --entrypoint to run --help* Set docker hub registry registry-1.docker.io* Fix repository name in search --list-tags* Improve tests: udocker_test.sh and udocker_test-run.sh* Documentation revision and improvements* Add licenses and licenses notice to documentation* Add test instructions* Issues with --allow-root in Python 3.8* Add security policy SECURITY.md* Remove old Python 2 tests* Fix configuration hierarchy, configuration files* Update documentation: README, user and install manuals* Fix sqa and config## udocker (1.3.0)* Prepare to move the stable code for Python 3 and Python 2 &gt;= 2.6 to master* Installation procedure changed since 1.1.x series see the `installation_manual`* Improve user and installation documentation* Extract documentation upon installation* Add codemeta.json, metadata for the software* Add support for `faccessat2()` in Pn and Fn execution modes* Fix support for `newfstatat()` in Pn execution modes* Add Fn libraries for Fedora 34 and Ubuntu 21.04* Remove broken links in FileUtil.remove()* update minimum udocker tools tarball to 1.2.8* Cmd and entrypoint metadata and arguments processing changed to mimic docker* Improve removal of files and links in install and filebind restore* Add follow location option to GetURL()* Implement use of `--entrypoint=&lt;cmd&gt;` to force execution of command  * closes: #306* Implement use of `--entrypoint=&quot;&quot;` to bypass entrypoint in metadata  * closes: #306## udocker (1.2.9)* method Unshare.unshare os.strerror() takes one argument,  * closes: #254* Add unit test for #254* Method chown udocker.utils.fileutil FileUtil  * closes: #276* Several fixes of unit tests and pylint* Fix confusion between exit code 0 and inferred False* Dereference on `safe_prefixes`* untar exclude dev* Fix rmi for referenced layers* Set default for `PROOT_TMP_DIR`* sysdir mountpoint not found and set tmpdir* Update installation instructions* Improve `oskernel_isgreater()`* Improve `osinfo()`* Fix repository login/logout* Improve keystore logic* Fix pull /v2## udocker (1.2.8b2)* Fix Rn modes to enable containers execution from readonly dirs* Documentation centralized installation and readonly setups* Fix handling of dockerhub repository names in /v2* Improve documentation and algn with 1.1.8b2* Add credits* Fix delete of paths with symlinks  * closes: #267, #265* Fix issues with login credentials  * closes: #310* Fix pull images from docker hub in Termux  * closes: #307* Fix issues on running udocker in googlecolab  * closes: #286* Fix execution with Pn modes in alternate /tmp  * closes: #284* Add conditional delay-directory-restore to untar layers* Add exclude of whiteouts on layer untar* Add --nobanner to udocker run## udocker (1.2.7)* Major restructuring of the code* Major restructuring of the unit tests* Porting to Python 3, still supports python 2.7* all fixes up to previous 1.1.7 version have been applied* added scripts tests udocker: `utils/udocker_test.sh utils/udocker_test-run.sh`## udocker (1.1.7)* Fix P1 when Linux 4.8.0 SECCOMP is backported, affects newer CentOS 7  * closes: #282* Check for file ownership on remove wrongly follows symlinks  * closes: #266, #267* udocker unexpectedly uses P1 exec mode instead of P2  * closes: #274* Allow passing of `PROOT_TMP_DIR` environment variable  * closes: #284## udocker (1.1.6)* Complete fix for of ELF paths in modes Fn for $ORIGIN:$ORIGIN  * closes: #255## udocker (1.1.5)* Preliminary fix for of ELF paths in modes Fn for $ORIGIN:$ORIGIN* Add Fn libraries for Ubuntu20, Fedora32, Fedora33* Add Fn libraries for Alpine 3.12, 3.13## udocker (1.1.4-1)* Fix run --location* Fix udocker integrated help* Fix naming of containers* Improve parsing of image names* Documentation improvements* `os._exit` from Unshare.unshare()* Disable `FAKECHROOT_DISALLOW_ENV_CHANGES` in F4 mode## udocker (1.1.4)* Use hub.docker.com as default registry* Search using v1 and v2 APIs* Implement API /v2/search/repositories* Adjust search results to screen size* List container size with ps -s* List container execution modes with ps -m* Added support for nameat() and statx() in Pn and Fn modes* Added Fn libraries for Ubuntu18, Ubuntu19, Fedora29, Fedora30, Fedora31, CentOS8* Added Fn libraries for Alpine 3.8, 3.9, 3.10, 3.11* Added support for sha512 hashes* Added support for opaque whiteouts* Added search --list-tags to available tags for a given repository* Add CLI support for image names in format host/repository:tag* Support for fake root in Sn execution modes via --user=root* Improve verify of loaded/pulled images* Improve handling of mountpoints* Added --containerauth to enable direct use of the container passwd and group* Added support for file mount bindings in singularity* Added `UDOCKER_USE_PROOT_EXECUTABLE` env var to select proot location* Added `UDOCKER_USE_RUNC_EXECUTABLE` env var to select runc location* Added `UDOCKER_USE_SINGULARITY_EXECUTABLE` env var to select singularity* Added `UDOCKER_DEFAULT_EXECUTION_MODE` env var to select default execution mode* Added R2 and R3 execution modes for PRoot overlay execution in runc* Added setup --purge for cleanup of mountpoints and files* Added setup --fixperms to fix container file permissions* Added run --env-file= to load file with environment variables* Improve file and directory binding support for Singularity and runc* Add command rename for renaming of containers* Create processes without shell context* Safer parsing of config files and removal of directories* Improve installation* Improved fix of SECCOMP accelerated mode for P1 mode* Added loading and handling of container images in OCI format* Fixes for udocker in ARM aarch64* Fix processing of --dri in Sn mode  * closes: #241* Improve handling of container and host authentication  * partially addresses: #239* Fixes to address authentication and redirects in pull  * closes: #225, #230* Added minimal support to load OCI images  * closes: #111* Added Pn support for newer distributions  * closes: #192* Improve the installation of udockertools  * closes: #220, #228* Read environment variables from file with --env-file=  * closes: #212* Prepare for pypy  * closes: #211* Fixes for verification of container images  * closes: #209* Fix command line processing for &quot;-&quot; in argument  * closes: #202* Fix file protections on extraction making files u+r  * closes: #202, #206* Fix comparison of kernel versions having non-integers  * closes: #183* Support for both manifest V2 schema 1 and schema 2  * closes: #218, #225* Further improved pathname translation in Fn modes  * closes: #160* Implement save images in docker format  * closes: #74* useradd and groupadd not working in containers  * closes: #141* fix return code when exporting to stdin  * closes: #202## udocker (1.1.3)* Support for nvidia drivers on ubuntu  * closes: #162* Installation improvements  * closes: #166* Fix issue on Fn mode symlink convertion  * partially addresses: #160## udocker (1.1.2)* Improve parsing of quotes in the command line  * closes: #98* Fix version command to exit with 0  * closes: #107* Add kill-on-exit to proot on Pn modes* Improve download of udocker utils* Handle authentication headers when pulling  * closes: #110* Handle of redirects when pulling* Fix registries table* Support search quay.io* Fix auth header when no standard Docker registry is used* Add registry detection on image name* Add --version option* Force python2 as interpreter  * closes: #131* Fix handling of volumes in metadata* Handle empty metadata* Fix http proxy functionality  * closes: #115* Ignore --no-trunc and --all in the images command  * closes: #108* Implement verification of layers in manifest* Add --nvidia to support GPUs and related drivers* Send download messages to stderr* Enable override of curl executable* Fix building on CentOS 6  * closes: #157* Mitigation for upstream limitation in runC without tty  * closes: #132* Fix detection of executable with symlinks in container  * closes: #118* Updated runC to v1.0.0-rc5* Experimental support for Alpine in Fn modes* Improve pathname translation in Fn modes for mounted dirs  * partially addresses: #160## udocker (1.1.1)* New execution engine using singularity* Updated documentation with OpenMPI information and examples* Additional unit tests* Redirect messages to stderr* Improved parsing of quotes in the command line  * closes: #87* Allow override of the HOME environment variable* Allow override of libfakechroot.so at the container level* Automatic selection of libfakechroot.so from container info* Improve automatic install* Enable resetting prefix paths in Fn modes in remote hosts* Do not set `AF_UNIX_PATH` in Fn modes when the host /tmp is a volume* Export containers in both docker and udocker format* Import containers docker and udocker format* Load, import and export to/from stdin/stdout* Clone existing containers* Support for TCP/IP port remap in execution modes Pn* Fix run with basenames failing  * closes: #89* Allow run as root flag  * closes: #91## udocker (1.1.0)* Support image names prefixed by registry similarly to docker* Add execution engine selection logic* Add fr execution engine based on shared library interception* Add rc execution engine based on rootless namespaces* Improve proot tmp files cleanup on non ext filesystems* Improve search returning empty on Docker repositories* Improve runC execution portability* Add environment variable `UDOCKER_KEYSTORE`  * closes: #75* Prevent creation of .udocker when `UDOCKER_KEYSTORE` is used  * closes: #75## udocker (1.0.4)* Documentation fixes## udocker (1.0.3)* Support for import Docker containers in newer metadata structure* Improve the command line parsing* Improve temporary file handling and removal* Support for additional execution engines to be provided in the future* Improved parsing of entrypoint and cmd metadata  * closes: #53* Increase name alias length  * closes: #52* Add support for change dir into volume directories  * closes: #51* Fix deletion of files upon container import  * closes: #50* Fix exporting of host environment variables to the containers  * closes: #48* Change misleading behavior of import tarball from move to copy  * closes: #44* Fix validation of volumes specification  * closes: #43## udocker (1.0.2)* Improve download on repositories that fail authentication on /v2* Improve run verification of binaries with recursive symbolic links* Improve accelerated seccomp on kernels &gt;= 4.8.0  * closes: #40## udocker (1.0.1)* Minor bugfixes* Executable name changed from udocker.py to udocker* Added support for login into docker repositories* Added support for private repositories* Added support for listing of v2 repositories catalog* Added checksum verification for sha256 layers* Improved download handling for v1 and v2 repositories* Improved installation tarball structure* Insecure flag fixed* Address seccomp change introduced on kernels &gt;= 4.8.0* Utilities for packaging* Improved verbose levels, messaging and output  * closes: #24, #23* Fully implement support for registry selection --registry parameter  * closes: #29* Provide support for private repositories e.g. gitlab registries  * closes: #30* Provide --insecure command line parameter for SSL requests  * closes: #31## udocker (1.0.0)* Initial version</longdescription>
</pkgmetadata>