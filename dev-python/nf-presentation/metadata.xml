<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Создатель презентаций NanoFootball.comФормирует из `dict` объекта упражнения, тренировки или события презентацию PowerPoint, которую получит пользователь. Требует около трех секунд на одно упражнение. Таким образом создание презентации из шести упражнений займет 10-20 секунд.# Установка## Для Линукс систем    pip install nf_presentation## Для Виндоус системНа данный момент pipwin перестал работать, так что установка кринжеватая. Но быстрая:Сначала установим библиотеку `cairocffi`, которую нужно скачать вручную с http://www.lfd.uci.edu/~gohlke/pythonlibs/#cairocffiВыбрать под свою версию питона, например `cairocffi‑1.3.0‑cp310‑cp310‑win_amd64.whl` (для систем х64 и питона 3.10(это можно узнать по записи `cp310`))     pip install cairocffi‑1.3.0‑cp310‑cp310‑win_amd64.whl //или другой ваш файл    pip install nf_presentationПроверить, что все установилось можно так:    python     &gt;&gt; import nf_presentationЕсли все прошло гладко, значит ты молодец, установка прошла успешно. В противном случае вылезет такая ошибка    OSError: no library called &quot;cairo-2&quot; was found    no library called &quot;cairo&quot; was found    no library called &quot;libcairo-2&quot; was found    cannot load library 'libcairo.so.2': error 0x7e    cannot load library 'libcairo.2.dylib': error 0x7e    cannot load library 'libcairo-2.dll': error 0x7eЗначит `cairocffi` все еще неправильно установлена, попробуй удалить ее `pip uninstall cairocffi` и попробуй еще раз. И да прибудет с тобой сила# ИспользованиеБазовый код выглядит так:    import nf_presentation    # для тренировки    pptx_bytes= nf_presentation.from_training(input_data=training_data_dict)    # для события    pptx_bytes= nf_presentation.from_event(input_data=event_data_dict)    # или для одного упражнения    pptx_bytes= nf_presentation.from_single_exercise(        input_data=exercise_data_dict,        render_options={            'scheme_1':True,            'scheme_2':False,            'video_1':True,            'video_2':False,            'animation_1':True            })    response=HttpResponse(pptx_bytes, content-type='application/vnd.ms-powerpoint'    resonse['Content-Disposition']='attachement;filename=&quot;out.pptx&quot;'    return response`pptx_bytes` это массив байтов, которые уже можно передать пользователям NanoFootball## Запись в файл или потокДля работы локально иногда может потребовать записать данные файл, для этого достаточно добавить аргумент `output_file`.    import nf_presentation        nf_presentation.from_training(input_data=training_data_dict, output_file='out.pptx')Теперь `create_pptx()` вернет None## Тестовые данныеВ пакет встроенны тестовые данные, и работоспособность пакета можно указав `input_data='test'`    import nf_presentation    pptx_bytes= nf_presentation.from_training(input_data='test')    # или для одного упражнения    pptx_bytes= nf_presentation.from_singe_exercise(input_data='test')Для вывода во временный файл достаточно назначить аргумент `output_file` вывода во временный файл можно использовать поток, как в примере выше    import nf_presentation    nf_presentation.from_singe_exercise(output_file='from_test_data.pptx')# ТестированиеВ корневой скачанной папке запустить `python -m unittest`# Проблемы1. Больше всего времени уходит на создание схемы. А все потому что он выкачивает из интернета ссылки на файлы, если бы я знал, где локально хранятся файлы, это можно было бы в разы ускорить2. Описание пока вообще не рендерится3. Упражнения которые приходят из событий по структуре отличаются от упражнений в списке упражнений## TODO1. [x] починил схему в упражнении http://nanofootball.com/exercises/exercise?id=9793&amp;nfb=1&amp;type=nfb_folders   1. [ ] отловил похожие ошибки с полигонами      1. [x] 2675      2. [ ]    2. [ ] Побавить замены в схемах по regex,      1. [ ] для ворот, а может быть для всех картинок вообще добавить preserverAspectRatio      2. [ ] для fill2. [ ] Скачивание должно стоять и внутри упражнения тоже4. [ ] Использование анимаций в from_event()   1. [ ] Можно ли получить исходный формат exercise_info как в nanofootball.com/exercises16. [ ] Цели в левой таблице-&gt; текст по центру колонки17. [ ] Слайды создаются из двустороннего шаблона18. [ ] Цвета19. [ ] Cоздать презентацию для каждого упражнения, дабы отловить возможные ошибки20. [ ] Показывать ошибку, если файл не найдеy в assets, и картинка по умолчанию)## Текущие проблемыНекоторые схемы получаются искаженными, даже в упражнении из тестовых данных. Там одни из ворот почему-то вытянуты по диагонали. Слава богу, в похожей схеме из другого упражнения все нормально. Так что сравнив схемы там и там, можно решить проблемуВ данный момент изображения создаются из других изображений(ворот, игроков и прочее). И эти ворота игроки скачиваются из интернета. Было бы неплохо, если бы можно было искать эти файлы локально, на сервере. Это помогло бы ускорить процесс. ### Битый SVGВ аттрибуте shchemeData упражения хранится svg фай схемы. Можно было бы легко пользоваться этими свг, и переделать их в пнг. Но есть проблема. Эти SVG битые. Аттрибуты записаны некорректно. То есть с точки зрения браузера они написаны верно, а с точки зрения форматирования svg - нет. Дело в том, что для браузера не существует различий между прописными с строчными буквами, например viewBox и viewbox для браузера выглядят одинаково, но для любой программы читающей изображения(в том числе cairoSVG) viewbox без большой буквы будет считаться ошибкой и пропущен обработчиком.Поэтому важно поправить данные полях схем, перед передачей в субпрограмму, которая из этой свг сделает PNG&gt; При обработке SVG данных из schemeData упражнения будут сделаны такие замены&gt; 1. viewbox -&gt; viewBox&gt; 2. markerwidth -&gt; markerWidth&gt; 3. refx -&gt; refX&gt; 4. к некоторым внешним svg приписывается параметр preserveAspectRatio, чтобы они правильно отображались&gt; 5. строки типа style='...; fill=&quot;$0000000a1&quot;' cairo не читает, цвет и прорачность выносится за тег style, можно использовать формат записи такой style=&quot;... fill: rgba(255, 255, 0, 0.1)&quot;, его каиро понимает&gt; 4. ...&gt; &gt; Все такие замены набиваются руками и лежат в nf_presentation.settings.svg_replacements&gt; так же можно воспользоваться фукцией nf_presentation.settings.add_svg_replacement(old,fix), чтобы добавить новую подстановку. Потому что в дальнейшем список таких замен будет только расширяться, и если картинка на выходе не совсем походит на ту, что на сайте, скорее всего нужно поправить какой-то битый аттрибут.### Зависимости SVGВ каждой картинке схемы из базы данных хранится ссылки на другие файлы, к счастью CairoSVG может использовать веб ссылки для картинок, чтобы создать потом png файл&gt; При обрботке svg схемы все ссылки /static/schemeDrawer/img/... будут заменяться на http://nanofootball.com/static/schemeDrawer/img/...&gt; &gt; Подразумевается что все картинки доступны по адресу http://nanofootball.com/static/schemeDrawer/img/...### Зависимости перекодировщика SVG -&gt; PNG Модуль cairosvg, который собсно и перегружает картинки имеет в зависимостях cairocffi, которые на виндоус надо устанавливать отдельно, а в линуксе пока вообще хз что. Кажется это довольно грузная зависимость для сервера NF&gt; В данный момент подразумевается, что при установке пакета nf-presentation устанавливается CairoSVG, которая в свою очередь автоматически установит cairocffi на линкус систему. Подразумевается, что наш НФ сервер работает на линуксе</longdescription>
</pkgmetadata>