<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Markdown-IncludeThis is an extension to [Python-Markdown](https://pythonhosted.org/Markdown/)which provides an &quot;include&quot; function, similar to that found inLaTeX (and also the C pre-processor and Fortran). I originally wrote it for my[FORD](https://github.com/cmacmackin/ford) Fortran auto-documentation generator.## InstallationThis module can now be installed using ``pip``.    pip install markdown-include## TestsUse the unittest module```bashpython -m unittest discover unittests/```## UsageThis module can be used in a program in the following way:```pythonimport markdownhtml = markdown.markdown(source, extensions=['markdown_include.include'])```Markdown-Include can also be included in MkDocs projects like below:```yamlmarkdown_extensions:    - markdown_include.include:        base_path: docs```The syntax for use within your Markdown files is ``{!filename!}``. Thisstatement will be replaced by the contents of ``filename``. Markdown-Includewill work recursively, so any included files within ``filename`` will also beincluded. This replacement is done prior to any otherMarkdown processing, so any Markdown syntax that you want can be used withinyour included files. Note that this is a change from the previous version.It was felt that this syntax was less likely to conflict with any codefragments present in the Markdown.By default, all file-names are evaluated relative to the location from whichMarkdown is being called. If you would like to change the directory relative towhich paths are evaluated, then this can be done by specifying the extensionsetting ``base_path``.### Line RangesYou can also define specific lines or line ranges to include by specifying `lines`:```Markdown{!filename!lines=1  3 8-10  2}````lines` takes a sequence of integers separated by spaces (one or more), or it can alsotake line ranges specified with a start line and an end line separated by a dash (`-`).In the example above, it would read the file called `filename` and include the lines`1`, `3`, `8`, `9`, `10`, `2`.Notice that line `9` was not explicitly set. But it was still included as part of therange `8-10`.Also, notice that line `2` is set *after* the range `8-10`. This means that theline `2` in `filename` will be included *after* (below) the range `8-10`.You can use this to include lines in a different order than the original file. But italso means that if you want to preserve the original order, you have to pay attentionto the order in which you specify the lines.## ConfigurationThe following settings can be specified when initialising the plugin.- __base_path__: Default location from which to evaluate relative  paths for the include statement. (Default: the run-directory.)- __encoding__: Encoding of the files used by the include statement. (Default: utf-8.)- __inheritHeadingDepth__ : If true, increases headings on include  file by amount of previous heading. Combiens with headingOffset  option, below. (Default: False.)- __headingOffset__: Increases heading depth by a specific ammount, in  addition to the inheritHeadingDepth Option. (Default: 0)- __throwException__: When true, if the extension is unable to find an  included file it will throw an exception which the user can  catch. If false (default), a warning will be printed and Markdown  will continue parsing the file.## ExamplesAn example of setting the base path and file encoding is given below:```pythonimport markdownfrom markdown_include.include import MarkdownInclude# Markdown Extensionsmarkdown_include = MarkdownInclude(    configs={'base_path':'/srv/content/', 'encoding': 'iso-8859-1'})html = markdown.markdown(source, extensions=[markdown_include])```Included files can inherit the heading depth of the location``inheritHeadingDepth``, as well as receive a specific offset, ``headingOffset``For example, consider the  files```markdownSource file# Heading Level 1 of main file{!included_file.md!}## Heading Level 2 of main file{!included_file.md!}```and included_file.md```markdown# This heading will be one level deeper from the previous headingMore included file content.End of included content.```Then running the script```pythonimport markdownfrom markdown_include.include import MarkdownInclude# Markdown Extensionsmarkdown_include = MarkdownInclude(    configs={'inheritHeadingDepth':True})html = markdown.markdown(source, extensions=[markdown_include])```produces```html&lt;p&gt;Source file&lt;/p&gt;&lt;h1&gt;Heading Level 1 of main file&lt;/h1&gt;&lt;h2&gt;This heading will be one level deeper from the previous heading&lt;/h2&gt;&lt;p&gt;More included file content.&lt;/p&gt;&lt;p&gt;End of included content.&lt;/p&gt;&lt;h2&gt;Heading Level 2 of main file&lt;/h2&gt;&lt;h3&gt;This heading will be one level deeper from the previous heading&lt;/h3&gt;&lt;p&gt;More included file content.&lt;/p&gt;&lt;p&gt;End of included content.&lt;/p&gt;```## ChangeLog### Version 0.7.0Modified to work with Python-Markdown 3.4. This makes the pluginincompatible with versions &lt; 3.0.### Version 0.6.0- Added ability ot offset headers in the included file so they fall under the header level in which the include occurs- Add option to throw exception when can't find an include file (instead of printing a warning)- Fixed stripping of last character in file, so only occurs if it is a new-line- Some behind-the-scenes improvement to code and documentation### Version 0.5.1Bugfix for a syntax error.### Version 0.5Corrected some errors in documentation and merged in commits of[diegobz](https://github.com/diegobz) to add support for encoding and tidy upthe source code.### Version 0.4Fixed problem related to passing configurations to the extension.### Version 0.3Added support for Python 3.### Version 0.2Changed the API to be less likely to conflict with other syntax.### Version 0.1Initial release.</longdescription>
</pkgmetadata>