<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================pydrill===============================.. image:: https://img.shields.io/travis/PythonicNinja/pydrill.svg        :target: https://travis-ci.org/PythonicNinja/pydrill.. image:: https://img.shields.io/pypi/v/pydrill.svg        :target: https://pypi.python.org/pypi/pydrill.. image:: https://readthedocs.org/projects/pydrill/badge/?version=latest        :target: https://readthedocs.org/projects/pydrill/?badge=latest        :alt: Documentation Status.. image:: https://coveralls.io/repos/PythonicNinja/pydrill/badge.svg?branch=master&amp;service=github  :target: https://coveralls.io/github/PythonicNinja/pydrill?branch=masterPython Driver for `Apache Drill &lt;https://drill.apache.org/&gt;`_.*Schema-free SQL Query Engine for Hadoop, NoSQL and Cloud Storage** Free software: MIT license* Documentation: https://pydrill.readthedocs.org.Features--------* Python 2/3 compatibility,* Support for all rest API calls inluding profiles/options/metrics `docs with full list &lt;http://pydrill.readthedocs.io/en/latest/readme.html#supported-api-calls&gt;`_.* Mapping Results to internal python types,* Compatibility with Pandas data frame,* Drill Authentication using PAM,Installation------------Version from https://pypi.python.org/pypi/pydrill::    $ pip install pydrillLatest version from git::    $ pip install git+git://github.com/PythonicNinja/pydrill.gitSample usage------------::    from pydrill.client import PyDrill    drill = PyDrill(host='localhost', port=8047)    if not drill.is_active():        raise ImproperlyConfigured('Please run Drill first')    yelp_reviews = drill.query('''      SELECT * FROM      `dfs.root`.`./Users/macbookair/Downloads/yelp_dataset_challenge_academic_dataset/yelp_academic_dataset_review.json`      LIMIT 5    ''')    for result in yelp_reviews:        print(&quot;%s: %s&quot; %(result['type'], result['date']))    # pandas dataframe    df = yelp_reviews.to_dataframe()    print(df[df['stars'] &gt; 3])=======History=======0.3.4 (2017-04-24)------------------* Updated pypi listing long_description0.3.3 (2017-04-24)------------------* Fix pypi installation0.3.2 (2017-04-18)------------------* Support for dtype on to_dataframe0.3.1 (2017-03-06)------------------* Support for Drill Authentication using PAM0.3 (2017-02-15)----------------* requests response encoding (utf-8)* support Python 3.6 support0.1.1 (2016-05-21)------------------* Anaconda requirements fixed0.1.0 (2016-05-19)------------------* First minor release* Updated docs0.0.2 (2016-04-24)------------------* First release on PyPI.* Implementation of metrics/storage/options/stats* Builds are tested by docker container with Apache Drill running* support for pandas with ResultQuery.to_dataframe0.0.1 (2015-12-28)------------------* Project start</longdescription>
</pkgmetadata>