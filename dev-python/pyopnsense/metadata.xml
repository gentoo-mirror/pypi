<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==========pyopnsense==========You can see the full rendered docs at: http://pyopnsense.readthedocs.io/en/latest/A python API client for the OPNsense API. This provides a python interface forinteracting with the OPNsense API.Installation============pyopnsense is available via pypi so all you need to do is run::   pip install -U pyopnsenseto get the latest pyopnsense release on your system. If you need to use adevelopment version of pyopnsense you can clone the repo and install it locallywith::  git clone https://github.com/mtreinish/pyopnsense &amp;&amp; pip install -e pyopnsensewhich will install pyopnsense in your python environment in editable mode fordevelopment... _usage:Usage=====To use pyopnsense you need a couple pieces of information, the API key and theAPI secret. Both can be created/found from the OPNsense web UI by navigatingto: `System-&gt;Access-&gt;Users` under `API keys`.More information on this can be found in the OPNsense documentation:https://docs.opnsense.org/development/how-tos/api.htmlOnce you have the API key and API secret you can use pyopnsense to interactwith your OPNsense installation. You can do this by passing your credentialsto a client class. For example:.. code-block:: python    from pyopnsense import diagnostics    api_key = 'XXXXXX'    api_secret = 'XXXXXXXXXXXXXXX'    opnsense_url = 'http://192.168.1.1/api'    timeout = 5    netinsight_client = diagnostics.NetworkInsightClient(        api_key, api_secret, opnsense_url, timeout)    print(netinsight_client.get_interfaces())which will print a dictionary mapping physical devices to their interface label.This same formula can be used to access each individual API endpoint you needto access. The basic structure of the library is setup to roughly mirror theendpoint tree of the OPNsense API. Each client module maps to the base endpointand then there is a client class in those modules for the next level up offthat.You can find more detail on how to use the clients in the API referencedocumentation found here:http://pyopnsense.readthedocs.io/en/latest/api.html</longdescription>
</pkgmetadata>