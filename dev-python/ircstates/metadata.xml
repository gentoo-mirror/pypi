<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ircstates[![Build Status](https://travis-ci.org/jesopo/ircstates.svg?branch=master)](https://travis-ci.org/jesopo/ircstates)## rationaleI wanted a bare-bones reference implementation of taking byte input, parsing itinto tokens and then managing an IRC client session state from it.with this library, you can have client session state managed for you and putadditional arbitrary functionality on top of it.## usage### simple```pythonimport ircstatesserver = ircstates.Server(&quot;freenode&quot;)lines  = server.recv(b&quot;:server 001 nick :hello world!\r\n&quot;)lines += server.recv(b&quot;:nick JOIN #chan\r\n&quot;)for line in lines:    server.parse_tokens(line)chan = server.channels[&quot;#chan&quot;]```### socket to state```pythonimport ircstates, irctokens, socketNICK = &quot;nickname&quot;CHAN = &quot;#chan&quot;HOST = &quot;127.0.0.1&quot;PORT = 6667server  = ircstates.Server(&quot;freenode&quot;)sock    = socket.socket()sock.connect((HOST, PORT))def _send(raw: str):    sock.sendall(f&quot;{raw}\r\n&quot;.encode(&quot;utf8&quot;))_send(&quot;USER test 0 * test&quot;)_send(f&quot;NICK {NICK}&quot;)while True:    recv_data  = sock.recv(1024)    recv_lines = server.recv(recv_data)    for line in recv_lines:        server.parse_tokens(line)        print(f&quot;&lt; {line.format()}&quot;)        # user defined behaviors...        if line.command == &quot;PING&quot;:            _send(f&quot;PONG :{line.params[0]}&quot;)```### get a user's channels```python&gt;&gt;&gt; server.users{'nickname': User(nickname='nickname')}&gt;&gt;&gt; user = server.users[&quot;nickname&quot;]&gt;&gt;&gt; userUser(nickname='nickname')&gt;&gt;&gt; user.channels{'#chan'}```### get a channel's users```python&gt;&gt;&gt; server.channels{'#chan': Channel(name='#chan')}&gt;&gt;&gt; channel = server.channels[&quot;#chan&quot;]&gt;&gt;&gt; channelChannel(name='#chan')&gt;&gt;&gt; channel.users{'jess': ChannelUser(#chan jess)}```### get a user's modes in channel```python&gt;&gt;&gt; channel = server.channels[&quot;#chan&quot;]&gt;&gt;&gt; channel_user = channel.users[&quot;nickname&quot;]&gt;&gt;&gt; channel_userChannelUser(#chan jess +ov)&gt;&gt;&gt; channel_user.modes{'o', 'v'}```## contactCome say hi at `#irctokens` on irc.libera.chat</longdescription>
</pkgmetadata>