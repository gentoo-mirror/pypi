<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cp2k-output-tools[![Build Status](https://github.com/cp2k/cp2k-output-tools/actions/workflows/test.yml/badge.svg)](https://github.com/cp2k/cp2k-output-tools/actions) [![codecov](https://codecov.io/gh/cp2k/cp2k-output-tools/branch/develop/graph/badge.svg)](https://codecov.io/gh/cp2k/cp2k-output-tools) [![PyPI](https://img.shields.io/pypi/pyversions/cp2k-output-tools)](https://pypi.org/project/cp2k-output-tools/)Modular CP2K output file parsers, mostly in the form of regular expressions plus other tools to mangle various CP2K output:  * `cp2kparse` ... parse CP2K output (for restart &amp; input files look at the [cp2k-input-tools](https://github.com/cp2k/cp2k-input-tools) project) and allow easy selection of common values.  * `xyz_restart_parser` ... when restarts occur during an MD you may end up with duplicated frames in the trajectory, this tool filters them (and can easily handle huge files)  * `cp2k_bs2csv` ... convert a CP2K band structure file to multiple (one-per-set) CSV files for easier plotting. There is also an API available if you need to import bandstructure data into your application.  * `cp2k_pdos` ... apply a convolution with Gaussians on a regular grid on the CP2K PDOS output and generate a CSV file for further processing or plotting. The same grid is used for all input files with the min/max of the grid automatically determined, but no summation of the different projections is done.## Requirements* Python 3.6+* regex 2021+* click 8+* numpy 1.19+* optional: ruamel.yamlFor development: https://poetry.eustace.io/ https://pytest.org/## Usage: cp2kparseThere is a simple command-line interface `cp2kparse`:```console$ cp2kparse --helpUsage: cp2kparse [OPTIONS] [FILE|-]  Parse the CP2K output FILE and return a structured outputOptions:  -f, --format [json|yaml|highlight]                                  Output format (json or yaml are structure                                  formats, highlight shows which lines of the                                  output have been matched)  --color [auto|always]           When to colorize output  -s, --safe-keys                 generate 'safe' key names (e.g. without                                  spaces, dashes, ..)  -S, --statistics                print some statistics to stderr  -k, --key &lt;PATH&gt;                Path, ex.: 'energies/total force_eval'  --help                          Show this message and exit.$ cp2kparse calc.out{  &quot;cp2k&quot;: {    &quot;cp2kflags: libint fftw3 libxc xsmm spglib&quot;: &quot; &quot;,    &quot;data directory path&quot;: &quot;/data/tiziano/cp2k/data&quot;,    &quot;input file name&quot;: &quot;Si-supercell-001.inp&quot;,    &quot;is freely available from&quot;: &quot;https://www.cp2k.org/&quot;,    &quot;program compiled at&quot;: &quot;Mon Sep 16 14:42:43 CEST 2019&quot;,    &quot;program compiled for&quot;: &quot;local&quot;,    &quot;program compiled on&quot;: &quot;tcpc18&quot;,    &quot;source code revision number&quot;: &quot;git:43f50e2&quot;,    &quot;version string&quot;: &quot;CP2K version 7.0 (Development Version)&quot;  },  &quot;dbcsr&quot;: {    &quot;cpu multiplication driver&quot;: &quot;XSMM&quot;,    &quot;maximum elements for images&quot;: &quot;UNLIMITED&quot;,    &quot;multiplication size stacks&quot;: 3,    &quot;multiplication stack size&quot;: 1000,    &quot;multiplicative factor virtual images&quot;: 1,    &quot;multrec recursion limit&quot;: 512,    &quot;use multiplication densification&quot;: true  },  &quot;energies&quot;: {    &quot;total force_eval&quot;: -251.6873903110507  },  &quot;global&quot;: {    &quot;all-to-all communication in single precision&quot;: false,    &quot;basis set file name&quot;: &quot;BASIS_MOLOPT&quot;,    &quot;coordinate file name&quot;: &quot;__STD_INPUT__&quot;,    &quot;cpu model name&quot;: &quot;Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz&quot;,    &quot;cpuid&quot;: 1002,    &quot;ffts using library dependent lengths&quot;: false,    &quot;force environment number&quot;: 1,    &quot;global print level&quot;: &quot;MEDIUM&quot;,    &quot;method name&quot;: &quot;CP2K&quot;,    &quot;mm potential file name&quot;: &quot;MM_POTENTIAL&quot;,    &quot;mpi i/o enabled&quot;: true,    &quot;number of threads for this process&quot;: 1,    &quot;potential file name&quot;: &quot;POTENTIAL&quot;,    &quot;preferred diagonalization lib.&quot;: &quot;SL&quot;,    &quot;preferred fft library&quot;: &quot;FFTW3&quot;,    &quot;project name&quot;: &quot;Si-supercell-001&quot;,    &quot;run type&quot;: &quot;ENERGY_FORCE&quot;,    &quot;this output is from process&quot;: 0,    &quot;total number of message passing processes&quot;: 1  },  &quot;mulliken population analysis&quot;: {    &quot;per atom&quot;: [      {        &quot;charge&quot;: 7e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999993      },      {        &quot;charge&quot;: 0.0,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.0      },      {        &quot;charge&quot;: -0.0,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.0      },      {        &quot;charge&quot;: -1e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000001      },      {        &quot;charge&quot;: -0.0,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.0      },      {        &quot;charge&quot;: -1e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000001      },      {        &quot;charge&quot;: -1e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000001      },      {        &quot;charge&quot;: -0.0,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.0      },      {        &quot;charge&quot;: 0.000137,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999863      },      {        &quot;charge&quot;: -2e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.00002      },      {        &quot;charge&quot;: -0.000133,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000133      },      {        &quot;charge&quot;: 2.1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999979      },      {        &quot;charge&quot;: -0.000133,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000133      },      {        &quot;charge&quot;: 2.1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999979      },      {        &quot;charge&quot;: 0.000137,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999863      },      {        &quot;charge&quot;: -2e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.00002      },      {        &quot;charge&quot;: -3.9e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000039      },      {        &quot;charge&quot;: 3.6e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999964      },      {        &quot;charge&quot;: -1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.00001      },      {        &quot;charge&quot;: 1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.99999      },      {        &quot;charge&quot;: -3.9e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000039      },      {        &quot;charge&quot;: 3.6e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999964      },      {        &quot;charge&quot;: -1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.00001      },      {        &quot;charge&quot;: 1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.99999      },      {        &quot;charge&quot;: -3.9e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000039      },      {        &quot;charge&quot;: 3.6e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999964      },      {        &quot;charge&quot;: -3.9e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000039      },      {        &quot;charge&quot;: 3.6e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999964      },      {        &quot;charge&quot;: -1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.00001      },      {        &quot;charge&quot;: 1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.99999      },      {        &quot;charge&quot;: -1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.00001      },      {        &quot;charge&quot;: 1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.99999      },      {        &quot;charge&quot;: 6e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999994      },      {        &quot;charge&quot;: 3.5e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999965      },      {        &quot;charge&quot;: 3.3e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999967      },      {        &quot;charge&quot;: 9e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999991      },      {        &quot;charge&quot;: 3.3e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999967      },      {        &quot;charge&quot;: 9e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999991      },      {        &quot;charge&quot;: 3e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999997      },      {        &quot;charge&quot;: -0.000312,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000312      },      {        &quot;charge&quot;: 3e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999997      },      {        &quot;charge&quot;: -0.000311,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000311      },      {        &quot;charge&quot;: 3.4e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999966      },      {        &quot;charge&quot;: 1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.99999      },      {        &quot;charge&quot;: 3.4e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999966      },      {        &quot;charge&quot;: 1e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.99999      },      {        &quot;charge&quot;: 6e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999994      },      {        &quot;charge&quot;: 3.5e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999965      },      {        &quot;charge&quot;: -9e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000009      },      {        &quot;charge&quot;: -3.3e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000033      },      {        &quot;charge&quot;: 0.000308,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999692      },      {        &quot;charge&quot;: -4e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000004      },      {        &quot;charge&quot;: -3.6e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000036      },      {        &quot;charge&quot;: -7e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000007      },      {        &quot;charge&quot;: -9e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000009      },      {        &quot;charge&quot;: -3.3e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000033      },      {        &quot;charge&quot;: -8e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000008      },      {        &quot;charge&quot;: -3.3e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000033      },      {        &quot;charge&quot;: -3.5e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000035      },      {        &quot;charge&quot;: -6e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000006      },      {        &quot;charge&quot;: 0.000308,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 3.999692      },      {        &quot;charge&quot;: -4e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000004      },      {        &quot;charge&quot;: -8e-06,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000008      },      {        &quot;charge&quot;: -3.3e-05,        &quot;element&quot;: &quot;Si&quot;,        &quot;kind&quot;: 1,        &quot;population&quot;: 4.000033      }    ],    &quot;total&quot;: {      &quot;charge&quot;: 0.0,      &quot;population&quot;: 256.0    }  },  &quot;program info&quot;: {    &quot;ended at&quot;: &quot;2019-09-17 17:02:35.738&quot;,    &quot;process id&quot;: &quot;23773&quot;,    &quot;ran by&quot;: &quot;tiziano&quot;,    &quot;ran on&quot;: &quot;tcpc18&quot;,    &quot;started at&quot;: &quot;2019-09-17 17:01:19.273&quot;,    &quot;started by&quot;: &quot;tiziano&quot;,    &quot;started in&quot;: &quot;/users/tiziano/work/phonopy/example/Si-CP2K&quot;,    &quot;started on&quot;: &quot;tcpc18&quot;,    &quot;stopped in&quot;: &quot;/users/tiziano/work/phonopy/example/Si-CP2K&quot;  }}```and an API:```pythonfrom cp2k_output_tools import parse_iterwith open(&quot;calc.out&quot;, &quot;r&quot;) as fhandle:    for match in parse_iter(fhandle.read()):        print(match.values)```## Usage: xyz_restart_cleaner```console$ xyz_restart_cleaner orig_trajectory.xyz new_trajectory.xyzfound restart point @1, dropping 1 frames, flushing 1flushing remaining 2 frames```## Usage: cp2k_bs2csvGiven a `.bs` file as written by CP2K the script will generate CSV files with the same name and suffixes `.set-X.csv` in the same directory as the source file:```console$ cp2k_bs2csv WO3.bswriting point set WO3.bs.set-1.csv (total number of k-points: 11)with the following special points:     GAMMA: 0.00000000 / 0.00000000 / 0.00000000         X: 0.00000000 / 0.50000000 / 0.00000000writing point set WO3.bs.set-2.csv (total number of k-points: 11)with the following special points:         X: 0.00000000 / 0.50000000 / 0.00000000         M: 0.50000000 / 0.50000000 / 0.00000000writing point set WO3.bsset-3.csv (total number of k-points: 11)with the following special points:         M: 0.50000000 / 0.50000000 / 0.00000000     GAMMA: 0.00000000 / 0.00000000 / 0.00000000writing point set WO3.bs.set-4.csv (total number of k-points: 11)with the following special points:     GAMMA: 0.00000000 / 0.00000000 / 0.00000000         R: 0.50000000 / 0.50000000 / 0.50000000writing point set WO3.bs.set-5.csv (total number of k-points: 11)with the following special points:         R: 0.50000000 / 0.50000000 / 0.50000000         X: 0.00000000 / 0.50000000 / 0.00000000writing point set WO3.bs.set-6.csv (total number of k-points: 11)with the following special points:         R: 0.50000000 / 0.50000000 / 0.50000000         M: 0.50000000 / 0.50000000 / 0.00000000$ lsWO3.cp2k-8.bs            WO3.cp2k-8.bs.set-2.csv  WO3.cp2k-8.bs.set-4.csv  WO3.cp2k-8.bs.set-6.csvWO3.cp2k-8.bs.set-1.csv  WO3.cp2k-8.bs.set-3.csv  WO3.cp2k-8.bs.set-5.csv```## Development```console$ poetry install$ poetry run pytest -v```</longdescription>
</pkgmetadata>