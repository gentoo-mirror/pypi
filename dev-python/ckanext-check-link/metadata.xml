<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Tests](https://github.com/DataShades/ckanext-check-link/workflows/Tests/badge.svg?branch=main)](https://github.com/DataShades/ckanext-check-link/actions)# ckanext-check-linkLink checker for CKAN.Provides API, CLI commands, and views for:* checking availability of the file, refereed by resource* checking availability of any arbitrary link.* storing results of these checks* visualizing stored results&lt;!-- * downloading a report based on the stored results --&gt;### Index* [Requirements](#requirements)* [Installation](#installation)* [Config settings](#config-settings)* [UI](#ui)* [CLI](#cli)* [API](#api)## RequirementsCompatibility with core CKAN versions:| CKAN version | Compatible? ||--------------|-------------|| 2.9          | yes         || 2.10         | yes         |## Installation1. Install `ckanext-check-link`   ```   pip install ckanext-check-link   ```1. Add `check_link` to the `ckan.plugins` setting in your CKAN config file.## Config settings```ini# Allow any logged-in user to check links. This implies specific security issues,# thus disabled by default.# (optional, default: false).ckanext.check_link.user_can_check_url = yes# URL for the &quot;Link availability&quot; page.# (optional, default: /check-link/report/global)ckanext.check_link.report.base_template = /ckan-admin/link-state# A base template that is extended by the &quot;Link availability&quot; page.# (optional, default: check_link/base_admin.html)ckanext.check_link.report.base_template = check_link/base.html```## UI### Link availability#### Endpoint: `check_link.report`#### Path: `/check-link/report/global`Paginated listing of all the &quot;broken&quot; links. Access is controlled by the`check_link_view_report_page` auth function, which can be bypassed only bysysadmin.## CLICLI commands are registered under `ckan check-link` route.### `check-packages`Check every resource inside each package.The scope can be narrowed via arbitrary number of arguments, specifying the package's ID or name.```sh# check all the public packages$ ckan check-link check-packages# check all the active packages$ ckan check-link check-packages --include-private# check all the public and draft pacakges$ ckan check-link check-packages --include-draft# check only two specified packages$ ckan check-link check-packages pkg-id-one pkg-name-two```## APITBA## License[AGPL](https://www.gnu.org/licenses/agpl-3.0.en.html)</longdescription>
</pkgmetadata>