<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Greenbone Logo](https://www.greenbone.net/wp-content/uploads/gb_new-logo_horizontal_rgb_small.png)# Greenbone Vulnerability Management Python Library &lt;!-- omit in toc --&gt;[![GitHub releases](https://img.shields.io/github/release-pre/greenbone/python-gvm.svg)](https://github.com/greenbone/python-gvm/releases)[![PyPI release](https://img.shields.io/pypi/v/python-gvm.svg)](https://pypi.org/project/python-gvm/)[![code test coverage](https://codecov.io/gh/greenbone/python-gvm/branch/main/graph/badge.svg)](https://codecov.io/gh/greenbone/python-gvm)[![Build and test](https://github.com/greenbone/python-gvm/actions/workflows/ci-python.yml/badge.svg)](https://github.com/greenbone/python-gvm/actions/workflows/ci-python.yml)The Greenbone Vulnerability Management Python API library (**python-gvm**) is acollection of APIs that help with remote controlling Greenbone Community Editioninstallations and Greenbone Enterprise Appliances. The library essentiallyabstracts accessing the communication protocols Greenbone Management Protocol(GMP) and Open Scanner Protocol (OSP).## Table of Contents &lt;!-- omit in toc --&gt;- [Documentation](#documentation)- [Installation](#installation)  - [Version](#version)  - [Requirements](#requirements)  - [Install using pip](#install-using-pip)- [Example](#example)- [Support](#support)- [Maintainer](#maintainer)- [Contributing](#contributing)- [License](#license)## DocumentationThe documentation for python-gvm can be found at[https://greenbone.github.io/python-gvm/](https://greenbone.github.io/python-gvm/).Please always take a look at the documentation for further details. This**README** just gives you a short overview.## Installation### VersionPlease consider to always use the **newest** version of `gvm-tools` and `python-gvm`.We frequently update this projects to add features and keep them free from bugs.This is why installing `python-gvm` using pip is recommended.**To use `python-gvm` with an old GMP version (7, 8, 9) you must use a release version****that is `&lt;21.05`. In the `21.05` release the support of these versions have been dropped.**### RequirementsPython 3.7 and later is supported.### Install using pippip 19.0 or later is required.You can install the latest stable release of python-gvm from the Python PackageIndex using [pip](https://pip.pypa.io/):    python3 -m pip install --user python-gvm## Example```python3from gvm.connections import UnixSocketConnectionfrom gvm.protocols.gmp import Gmpfrom gvm.transforms import EtreeTransformfrom gvm.xml import pretty_printconnection = UnixSocketConnection()transform = EtreeTransform()with Gmp(connection, transform=transform) as gmp:    # Retrieve GMP version supported by the remote daemon    version = gmp.get_version()    # Prints the XML in beautiful form    pretty_print(version)    # Login    gmp.authenticate('foo', 'bar')    # Retrieve all tasks    tasks = gmp.get_tasks()    # Get names of tasks    task_names = tasks.xpath('task/name/text()')    pretty_print(task_names)```## SupportFor any question on the usage of python-gvm please use the[Greenbone Community Portal](https://community.greenbone.net/c/gmp). If youfound a problem with the software, please[create an issue](https://github.com/greenbone/gvm-tools/issues)on GitHub.## MaintainerThis project is maintained by [Greenbone AG](https://www.greenbone.net/).## ContributingYour contributions are highly appreciated. Please[create a pull request](https://github.com/greenbone/python-gvm/pulls) on GitHub.For bigger changes, please discuss it first in the[issues](https://github.com/greenbone/python-gvm/issues).For development you should use [poetry](https://python-poetry.org)to keep you python packages separated in different environments. First installpoetry via pip```shellpython3 -m pip install --user poetry```Afterwards run```shellpoetry install```in the checkout directory of python-gvm (the directory containing the`pyproject.toml` file) to install all dependencies including the packages onlyrequired for development.The python-gvm repository uses [autohooks](https://github.com/greenbone/autohooks)to apply linting and auto formatting via git hooks. Please ensure the git hooksare active.    $ poetry install    $ poetry run autohooks activate --force## LicenseCopyright (C) 2017-2022 [Greenbone AG](https://www.greenbone.net/)Licensed under the [GNU General Public License v3.0 or later](LICENSE).</longdescription>
</pkgmetadata>