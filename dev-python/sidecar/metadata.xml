<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Sidecar[![Build Status](https://travis-ci.org/jupyter-widgets/jupyterlab-sidecar.svg?branch=master)](https://travis-ci.org/jupyter-widgets/jupyterlab-sidecar)[![codecov](https://codecov.io/gh/jupyter-widgets/jupyterlab-sidecar/branch/master/graph/badge.svg)](https://codecov.io/gh/jupyter-widgets/jupyterlab-sidecar)A sidecar output widget for JupyterLab## Installation```bashpip install sidecar```or```bashconda install sidecar```If you use JupyterLab &lt;=2:```bashjupyter labextension install @jupyter-widgets/jupyterlab-managerjupyter labextension install @jupyter-widgets/jupyterlab-sidecar```## UsageThe sidecar widget is used as a context manager, just like ipywidgets' outputwidget.```pythonfrom sidecar import Sidecarfrom ipywidgets import IntSlidersc = Sidecar(title='Sidecar Output')sl = IntSlider(description='Some slider')with sc:    display(sl)```When a single output is displayed in a Sidecar, it is allowed to occupy all ofthe vertical space available. If more content is displayed, the natural heightis used instead.![sidecar](sidecar.gif)## Development```bash# Create a new conda environmentconda create -n jupyterlab-sidecar -c conda-forge jupyterlab ipywidgets nodejs -y# Activate the conda environmentconda activate jupyterlab-sidecar# Install package in development modepip install -e .# Link your development version of the extension with JupyterLabjupyter labextension develop . --overwrite# Rebuild extension Typescript source after making changesjlpm run build```You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.```bash# Watch the source directory in one terminal, automatically rebuilding when neededjlpm run watch# Run JupyterLab in another terminaljupyter lab```With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).By default, the jlpm run build command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:```bashjupyter lab build --minimize=False```## Uninstall```bashpip uninstall sidecar```or```bashconda uninstall sidecar```</longdescription>
</pkgmetadata>