<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Music Downloader Telegram Bot aka scdlbot=========================================.. image:: https://img.shields.io/badge/telegram-@scdlbot-blue.svg        :target: https://t.me/scdlbot        :alt: Telegram Bot.. image:: https://img.shields.io/github/license/gpchelkin/scdlbot.svg        :target: https://github.com/gpchelkin/scdlbot/blob/master/LICENSE        :alt: MIT License.. image:: https://readthedocs.org/projects/scdlbot/badge/?version=latest        :target: https://scdlbot.readthedocs.io/        :alt: Documentation Status.. image:: https://img.shields.io/pypi/v/scdlbot.svg        :target: https://pypi.org/project/scdlbot        :alt: PyPI Version.. image:: https://github.com/gpchelkin/scdlbot/workflows/build/badge.svg?branch=master&amp;event=push        :target: https://github.com/gpchelkin/scdlbot/actions/workflows/build.yml        :alt: GitHub Actions Build Status.. image:: https://github.com/gpchelkin/scdlbot/actions/workflows/codeql-analysis.yml/badge.svg?branch=master&amp;event=push        :target: https://github.com/gpchelkin/scdlbot/actions/workflows/codeql-analysis.yml        :alt: GitHub Actions CodeQL Status.. image:: https://deepsource.io/gh/gpchelkin/scdlbot.svg/?label=active+issues&amp;show_trend=true        :target: https://deepsource.io/gh/gpchelkin/scdlbot/?ref=repository-badge        :alt: DeepSource Active Issues.. image:: https://deepsource.io/gh/gpchelkin/scdlbot.svg/?label=resolved+issues&amp;show_trend=true        :target: https://deepsource.io/gh/gpchelkin/scdlbot/?ref=repository-badge        :alt: DeepSource Resolved Issues.. image:: https://codeclimate.com/github/gpchelkin/scdlbot/badges/issue_count.svg        :target: https://codeclimate.com/github/gpchelkin/scdlbot        :alt: Code Climate Issue Count.. image:: https://api.codacy.com/project/badge/Grade/7dfb6d8e7a094987b303e9283fc7368c        :target: https://app.codacy.com/gh/gpchelkin/scdlbot        :alt: Codacy Build Status.. image:: https://codebeat.co/badges/57243b9d-2269-4f31-a35b-6aedd11626d2        :target: https://codebeat.co/projects/github-com-gpchelkin-scdlbot-master        :alt: Codebeat Quality.. image:: https://www.codefactor.io/repository/github/gpchelkin/scdlbot/badge        :target: https://www.codefactor.io/repository/github/gpchelkin/scdlbot        :alt: CodeFactorTelegram Bot for downloading MP3 rips of tracks/sets fromSoundCloud, Bandcamp, YouTube with tags and artwork.* Free software: `MIT License &lt;https://github.com/gpchelkin/scdlbot/blob/master/LICENSE&gt;`__* Documentation: https://scdlbot.readthedocs.io.. contents:: :depth: 2scdlbot Usage in Telegram-------------------------Send ``/start`` or ``/help`` command to botor refer directly to the `help message &lt;scdlbot/texts/help.tg.md&gt;`__.Please report all bugs and issues and suggest your improvementsto `issues &lt;https://github.com/gpchelkin/scdlbot/issues&gt;`__.Supported sites and mainly used packages^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^scdlbot is standing on the shoulders of giants:-  `Telegram Bot API &lt;https://core.telegram.org/bots/api&gt;`__:   `python-telegram-bot &lt;https://github.com/python-telegram-bot/python-telegram-bot&gt;`__-  `SoundCloud &lt;https://soundcloud.com&gt;`__:   `scdl &lt;https://github.com/flyingrub/scdl&gt;`__-  `Bandcamp &lt;https://bandcamp.com&gt;`__:   `bandcamp-dl &lt;https://github.com/iheanyi/bandcamp-dl&gt;`__-  `YouTube &lt;https://www.youtube.com/&gt;`__, `Yandex.Music &lt;https://music.yandex.com/&gt;`__,   `Mixcloud &lt;https://www.mixcloud.com/&gt;`__, and almost `everything from this list &lt;https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md&gt;`__:   `yt-dlp &lt;https://github.com/yt-dlp/yt-dlp&gt;`__Run your own scdlbot--------------------Installation &amp; Configuration^^^^^^^^^^^^^^^^^^^^^^^^^^^^Requirements&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;Those should be available in your ``PATH``:-  `Python 3.9+ &lt;https://www.python.org&gt;`__   (`pyenv &lt;https://github.com/pyenv/pyenv&gt;`__ and `poetry &lt;https://python-poetry.org/&gt;`__ are recommended)-  `FFmpeg 4.0+ &lt;https://ffmpeg.org/download.html&gt;`__ if not running on Heroku   (fresh builds for   `Windows &lt;https://www.gyan.dev/ffmpeg/builds/#release-builds&gt;`__,   `macOS &lt;https://evermeet.cx/ffmpeg/&gt;`__   and `Linux &lt;https://johnvansickle.com/ffmpeg/&gt;`__ are recommended)-  `Heroku CLI &lt;https://cli.heroku.com&gt;`__ is recommended if you want to deploy to HerokuInstall / Update stable from `PyPI &lt;https://pypi.org/project/scdlbot&gt;`__ (recommended)&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;::    pip3 install scdlbot --upgrade...or get unstable from `Git source repository &lt;https://github.com/gpchelkin/scdlbot&gt;`__&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;::    git clone https://github.com/gpchelkin/scdlbot.git    cd scdlbot    pip3 install --requirement requirements.txt    # Update:    git pull    pip3 install --requirement requirements.txtConfigure Bot&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;Download or copy configuration file sample and set upconfig environment variables in it:::    # If you've installed from PyPI - download sample config somewhere:    curl -o .env https://raw.githubusercontent.com/gpchelkin/scdlbot/master/.env.sample    # If you've got Git source - just copy sample config:    cp .env.sample .env    # Use your favourite editor. Sample config is self-documented:    nano .envTelegram Bot Settings&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;Send the commands from respective filenames in ``telegram_settings`` dir to `@BotFather &lt;https://t.me/BotFather&gt;`__, choose your bot and copy corresponding values in order to use the bot conveniently.Disable privacy mode if you want bot to read and check every message in group for links.Otherwise, it would work only for commands.Running Locally or at Dedicated Server^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Using `Heroku Local &lt;https://devcenter.heroku.com/articles/heroku-local#run-your-app-locally-using-the-heroku-local-command-line-tool&gt;`__ (preferred)&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;You will need `Heroku CLI &lt;https://cli.heroku.com/&gt;`__ installed.::    # If you've installed from PyPI - download Procfile first (otherwise already present in Git repository):    curl -O https://raw.githubusercontent.com/gpchelkin/scdlbot/master/Procfile    # For long polling mode (when WEBHOOK_ENABLE=0):    heroku local -e .env worker    # For webhook mode (when WEBHOOK_ENABLE=1):    heroku local -e .env webUsing Python only&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;::    export $(grep -v '^#' .env | xargs)    python3 -m scdlbot    # or in one line:    env $(grep -v '^#' .env | xargs) python3 -m scdlbot    # If you've installed package from PyPI into the system,    # you can also replace 'python3 -m scdlbot' with only 'scdlbot'Deploying to `Heroku &lt;https://heroku.com/&gt;`__^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^|Deploy|Register on Heroku, press the button above andconfigure variables for deploying.When app is deployed you **must** set only one dyno working on&quot;Resources&quot; tab in your app settings depending on `which way of gettingupdates &lt;https://core.telegram.org/bots/api#getting-updates&gt;`__ you havechosen and set in config variables: ``worker`` for polling or ``web``for webhook.Manually&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;You can do the same as the button above but using `HerokuCLI &lt;https://cli.heroku.com/&gt;`__, not as much of a fun. Assuming you are in``scdlbot`` repository directory:::    heroku login    # Create app with Python 3 buildpack and set it for upcoming builds:    heroku create --buildpack heroku/python    heroku buildpacks:set heroku/python    # Add FFmpeg buildpack needed for youtube-dl &amp; scdl:    heroku buildpacks:add --index 1 https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest.git --app scdlbot    # Deploy app to Heroku:    git push heroku master    # Set config vars automatically from your local .env file    heroku plugins:install heroku-config    heroku config:push    # Or set them manually:    heroku config:set TG_BOT_TOKEN=&quot;&lt;TG_BOT_TOKEN&gt;&quot; STORE_CHAT_ID=&quot;&lt;STORE_CHAT_ID&gt;&quot; ...If you use webhook, start web dyno and stop worker dyno:::    heroku ps:scale web=1 worker=0    heroku ps:stop workerIf you use polling, start worker dyno and stop web dyno:::    heroku ps:scale worker=1 web=0    heroku ps:stop webSome useful commands:::    # Attach to logs:    heroku logs -t    # Test run ffprobe    heroku run &quot;ffprobe -version&quot;Deploying to `Dokku &lt;https://github.com/dokku/dokku&gt;`__^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Use Dokku (your own Heroku) installed on your own server.App is tested and fully ready for deployment with polling(no webhook yet).https://github.com/dokku/dokku-letsencrypt::    export DOKKU=&lt;your_dokku_server&gt;    scp .env $DOKKU:~    ssh $DOKKU        export DOKKU=&lt;your_dokku_server&gt;        dokku apps:create scdlbot        dokku certs:generate scdlbot scdlbot.$DOKKU        dokku config:set scdlbot $(cat .env | xargs)        logout    git remote add dokku dokku@$DOKKU:scdlbot    git push dokku master    ssh $DOKKU        dokku ps:scale scdlbot worker=1 web=0        dokku ps:restart scdlbot.. |Deploy| image:: https://www.herokucdn.com/deploy/button.svg    :target: https://heroku.com/deploy</longdescription>
</pkgmetadata>