<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># WurlitzerCapture C-level stdout/stderr pipes in Python via `os.dup2`.For more details on why this is needed, please read [this blog post](https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/).## Install    pip install wurlitzer## UsageCapture stdout/stderr in pipes:```pythonfrom wurlitzer import pipeswith pipes() as (out, err):    call_some_c_function()stdout = out.read()```Capture stdout/stderr in StringIO:```pythonfrom io import StringIOfrom wurlitzer import pipes, STDOUTout = StringIO()with pipes(stdout=out, stderr=STDOUT):    call_some_c_function()stdout = out.getvalue()```Forward C-level stdout/stderr to Python sys.stdout/stderr,which may already be forwarded somewhere by the environment, e.g. IPython:```pythonfrom wurlitzer import sys_pipeswith sys_pipes():    call_some_c_function()```Or even simpler, enable it as an IPython extension:```%load_ext wurlitzer```To forward all C-level output to IPython during execution.## AcknowledgmentsThis package is based on stuff we learned with @takluyver and @karies while working on capturing output from the [Cling Kernel](https://github.com/root-mirror/cling/tree/master/tools/Jupyter/kernel) for Jupyter.## Wurlitzer?![Wurlitzer](https://en.wikipedia.org/wiki/Wurlitzer) makes pipe organs. Get it? Pipes? Naming is hard.</longdescription>
</pkgmetadata>