<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>============PyMongoArrow============:Info: A companion library to PyMongo that makes it easy to move data       between MongoDB and Apache Arrow. See       `GitHub &lt;https://github.com/mongodb-labs/mongo-arrow/tree/main/bindings/python&gt;`_       for the latest source.:Documentation: Available at `mongo-arrow.readthedocs.io &lt;https://mongo-arrow.readthedocs.io/en/latest/&gt;`_.:Author: Prashant Mital**PyMongoArrow** is a companion library to PyMongo that contains toolsfor loading MongoDB query result sets as Apache Arrow tables, PandasDataFrames or NumPy arrays... code-block:: pycon  &gt;&gt;&gt; from pymongoarrow.monkey import patch_all  ... patch_all()  ... from pymongoarrow.api import Schema  ... schema = Schema({&quot;_id&quot;: int, &quot;qty&quot;: float})  ... from pymongo import MongoClient  ... client = MongoClient()  ... client.db.data.insert_many(  ...     [{&quot;_id&quot;: 1, &quot;qty&quot;: 25.4}, {&quot;_id&quot;: 2, &quot;qty&quot;: 16.9}, {&quot;_id&quot;: 3, &quot;qty&quot;: 2.3}]  ... )  ... data_frame = client.db.test.find_pandas_all({}, schema=schema)  ... data_frame     _id   qty  0    1  25.4  1    2  16.9  2    3   2.3  ... arrow_table = client.db.test.find_arrow_all({}, schema=schema)  # The schema may also be omitted  ... arrow_table = client.db.test.find_arrow_all({})  ... arrow_table  pyarrow.Table  _id: int64  qty: double  ... ndarrays = client.db.test.find_numpy_all({}, schema=schema)  ... ndarrays  {'_id': array([1, 2, 3]), 'qty': array([25.4, 16.9,  2.3])}**PyMongoArrow** is the recommended way tomaterialize MongoDB query result sets as contiguous-in-memory, typed arrayssuited for in-memory analytical processing applications.Installing PyMongoArrow=======================PyMongoArrow is available on PyPI::  $ python -m pip install pymongoarrowTo use PyMongoArrow with MongoDB Atlas' ``mongodb+srv://`` URIs, you willneed to also install PyMongo with the ``srv`` extra::  $ python -m pip install 'pymongo[srv]' pymongoarrowTo use PyMongoArrow APIs that return query result sets as pandasDataFrame instances, you will also need to have the ``pandas`` packageinstalled::     $ python -m pip install pandasNote:  ``pymongoarrow`` is not supported or tested on big-endian systems(e.g. Linux s390x).Development Install===================See the instructions on `Read the Docs`_.Documentation=============Full documentation is available on `Read the Docs`_... _Read the Docs: https://mongo-arrow.readthedocs.io/en/latest</longdescription>
</pkgmetadata>