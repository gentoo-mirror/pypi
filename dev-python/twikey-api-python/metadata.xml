<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://cdn.twikey.com/img/logo.png&quot; height=&quot;64&quot;/&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;Twikey API client for Python&lt;/h1&gt;Want to allow your customers to pay in the most convenient way, then Twikey is right what you need.Recurring or occasional payments via (Recurring) Credit Card, SEPA Direct Debit or any other payment method by bringing your own payment service provider or by leveraging your bank contract.Twikey offers a simple and safe multichannel solution to negotiate and collect recurring (or even occasional) payments.Twikey has integrations with a lot of accounting and CRM packages. It is the first and only provider to operate on aEuropean level for Direct Debit and can work directly with all major Belgian and Dutch Banks. However you can use thepayment options of your favorite PSP to allow other customers to pay as well.## Requirements ##To use the Twikey API client, the following things are required:+ Get yourself a [Twikey account](https://www.twikey.com).+ Python &gt;= 3.0+ Up-to-date OpenSSL (or other SSL/TLS toolkit)## Pip Installation ##The easiest way to install the Twikey API client is with [pip](https://pip.pypa.io).    $ pip install twikey-api-python## How to create anything ##The api works the same way regardless if you want to create a mandate, a transaction, an invoice or even a paylink.the following steps should be implemented:1. Use the Twikey API client to create or import your item.2. Once available, our platform will send an asynchronous request to the configured webhook   to allow the details to be retrieved. As there may be multiple items ready for you a &quot;feed&quot; endpoint is provided   which acts like a queue that can be read until empty till the next time.3. The customer returns, and should be satisfied to see that the action he took is completed.Find our full documentation online on [api.twikey.com](https://api.twikey.com).## Getting started ##Initializing the Twikey API client using the Requests library. and configure your API key which you can find in the [Twikey merchant interface](https://www.twikey.com).```pythonimport twikeyAPIKEY = 'apikey_as_found_in_twikey'twikeyClient = twikey.TwikeyClient(APIKEY, &quot;apiurl_as_found_in_twikey&quot;)``` ## DocumentsInvite a customer to sign a SEPA mandate using a specific behaviour template (ct) that allows you to configure the behaviour or flow that the customer will experience. This 'ct' can be found in the template section of the settings.```pythonimport twikeyct = 123 # See settings/profile in twikeyinvite = twikey.TwikeyClient.document.create({   &quot;ct&quot;: ct,   &quot;email&quot;: &quot;info@twikey.com&quot;,   &quot;firstname&quot;: &quot;Info&quot;,   &quot;lastname&quot;: &quot;Twikey&quot;})```_After creation, the link available in invite['url'] can be used to redirect the customer into the signing flow or even send him a link through any other mechanism. Ideally you store the mandatenumber for future usage (eg. sending transactions)._### FeedOnce signed, a webhook is sent (see below) after which you can fetch the detail through the document feed, which you can actuallythink of as reading out a queue. Since it'll return you the changes since the last time you called it.```pythonimport twikeyclass MyDocumentFeed(twikey.DocumentFeed):    def newDocument(self, doc, evt_time):        print(&quot;new &quot;, doc[&quot;MndtId&quot;])    def updatedDocument(self, original_mandate_number, doc, reason, evt_time):        print(&quot;update &quot;, doc[&quot;MndtId&quot;], &quot;b/c&quot;, reason[&quot;Rsn&quot;])    def cancelDocument(self, doc_number, reason, evt_time):        print(&quot;cancelled &quot;, doc_number, &quot;b/c&quot;, reason[&quot;Rsn&quot;])twikey.TwikeyClient.document.feed(MyDocumentFeed())```## TransactionsSend new transactions and act upon feedback from the bank.```pythonimport twikeytx = twikey.TwikeyClient.transaction.create({   &quot;mndtId&quot; : &quot;CORERECURRENTNL16318&quot;,   &quot;message&quot; : &quot;Test Message&quot;,   &quot;ref&quot; : &quot;Merchant Reference&quot;,   &quot;amount&quot; : 10.00,    &quot;place&quot; : &quot;Here&quot;})```### Feed```pythonimport twikeyclass MyFeed(twikey.TransactionFeed):    def transaction(self, transaction):        print(&quot;TX &quot;, transaction.ref, transaction.state)twikey.TwikeyClient.transaction.feed(MyFeed())```## Webhook ##When wants to inform you about new updates about documents or payments a `webhookUrl` specified in your api settings be called.  ```pythonimport Flask import urllibimport twikeyAPIKEY = 'apikey_as_found_in_twikey'app = Flask(__name__)@app.route('/webhook', methods=['GET'])def webhook(request):   payload = urllib.parse.unquote(request.query_string)   received_sign = request.headers.get('X-Signature')   if not received_sign:      return False   if twikey.Webhook.verify_signature(payload,received_sign,APIKEY):      # trigger feed fetching      return 'Successfully', 200   return 'Forbidden', 403if __name__ == '__main__':   #setup dev server   app.debug = True   app.run(host = &quot;0.0.0.0&quot;,port=8000)```## API documentation ##If you wish to learn more about our API, please visit the [Twikey Api Page](https://api.twikey.com).API Documentation is available in English.## Want to help us make our API client even better? ##Want to help us make our API client even better? Wetake [pull requests](https://github.com/twikey/twikey-api-python/pulls). ## Support ##Contact: [www.twikey.com](https://www.twikey.com)</longdescription>
</pkgmetadata>