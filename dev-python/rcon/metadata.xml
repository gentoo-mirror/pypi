<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Documentation Status](https://readthedocs.org/projects/rcon/badge/?version=latest)](https://rcon.readthedocs.io/en/latest/)# rconAn RCON client implementation.* [Source RCON protocol](https://developer.valvesoftware.com/wiki/Source_RCON_Protocol)* [BattlEye RCon protocol](https://www.battleye.com/downloads/BERConProtocol.txt)## Requirements`rcon` requires Python 3.10 or higher.## DocumentationDocumentation is available on [readthedocs](https://rcon.readthedocs.io/en/latest/).## InstallationInstall rcon from the [AUR](https://aur.archlinux.org/packages/python-rcon/) or via:    pip install rcon## Quick startThe `RCON` protocols are used to remotely control game servers, i.e. executecommands on a game server and receive the respective results.### Source RCON```pythonfrom rcon.source import Clientwith Client('127.0.0.1', 5000, passwd='mysecretpassword') as client:    response = client.run('some_command', 'with', 'some', 'arguments')print(response)```#### Async supportIf you prefer to use Source RCON in an asynchronous environment, you can use `rcon()`.```pythonfrom rcon.source import rconresponse = await rcon(    'some_command', 'with', 'some', 'arguments',    host='127.0.0.1', port=5000, passwd='mysecretpassword')print(response)```### BattlEye RCon```pythonfrom rcon.battleye import Clientwith Client('127.0.0.1', 5000, passwd='mysecretpassword') as client:    response = client.run('some_command', 'with', 'some', 'arguments')print(response)```#### Handling server messagesSince the BattlEye RCon server will also send server messages to the client alongside command responses, you can register an event handler to process those messages:```pythonfrom rcon.battleye import Clientfrom rcon.battleye.proto import ServerMessagedef my_message_handler(server_message: ServerMessage) -&gt; None:    &quot;&quot;&quot;Print server messages.&quot;&quot;&quot;        print('Server message:', server_message)with Client(        '127.0.0.1',        5000,        passwd='mysecretpassword',        message_handler=my_message_handler) as client:    response = client.run('some_command', 'with', 'some', 'arguments')print('Response:', response)```Have a look at `rcon.battleye.proto.ServerMessage` for details on the respective objects.</longdescription>
</pkgmetadata>