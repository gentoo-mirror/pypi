<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![](https://github.com/arkhn/pyfhirstore/workflows/fhirstore/badge.svg)# fhirstorePython library to manipulate fhir resources leveraging mongoDB as storage layer.## Installation```bashpip install fhirstore```## Usage```pythonfrom pymongo import MongoClientfrom fhirstore import FHIRStoreclient = MongoClient()store = FHIRStore(client, &quot;&lt;my_database&gt;&quot;)# Dropping collectionsstore.reset()# Parse json schema and create collectionsstore.bootstrap(depth=5)# OR# Get existing collections from the databasestore.resume(depth=5)# Create resourcesstore.create({    &quot;resourceType&quot;: &quot;Patient&quot;,    &quot;id&quot;: &quot;pat1&quot;,    &quot;gender&quot;: &quot;male&quot;})# Read resourcespatient = store.read(&quot;Patient&quot;, &quot;pat1&quot;)# Update resourcesupdated_patient = store.update(&quot;Patient&quot;, &quot;pat1&quot;, {&quot;gender&quot;: &quot;other&quot;})# Delete resourcesdeleted_patients_count = store.delete(&quot;Patient&quot;, &quot;pat1&quot;)deleted_patients_count = store.delete(&quot;Patient&quot;, resource_id=&quot;pyrogResouceId&quot;)```## Bootstrap the database1. Start the database2. Drop and re-create all collections based on the provided schema```bashdocker-compose up -dpython main.py```## Development setup1. Create a virtual environment and enter it2. Install python dependncies```bashvirtualenv .. ./bin/activatepip install -r requirements.txtpip install -r requirements-dev.txt```## TestTest can be run using :```bashpython -m pytest```Make sure dev dependencies are installed.## BenchmarkA benchmark based on example FHIR resources publicly available at can be run using :```bashpython benchmark/benchmark.py```Note that you will need to have a MongoDB up in order for the benchmark to run. You can use the docker-compose file of this repository by running `docker-compose up` before launching the benchmark.On a machine with 16GB RAM and an i7 (2.5GHz) processor, the results of the benchamrk were:```--- WRITES ---insertions per second (on average): 267.17average: 3.74 millisecondsmedian: 1.66 millisecondsmin: 1.07 millisecondsmax: 724.65 millisecondsspread: 0.00028004697751347234--- READS ---reads per second (on average): 378.93average: 2.63 millisecondsmedian: 1.50 millisecondsmin: 0.88 millisecondsmax: 481.18 millisecondsspread: 0.0002154728657872756```On the same machine, here are the results for the same benchmark using a different library, [fhirbase](https://github.com/fhirbase/fhirbase.py). The latter relies on postgreSQL rather than MongoDB as its storage layer. Also, it only supports FHIR resources 3.3.0 and below.```--- WRITES ---insertions per second (on average): 152.38average: 6.56 millisecondsmedian: 4.43 millisecondsmin: 3.08 millisecondsmax: 158.88 millisecondsspread: 7.568139030481407e-05--- READS ---reads per second (on average): 261.07average: 3.83 millisecondsmedian: 3.03 millisecondsmin: 2.17 millisecondsmax: 102.06 millisecondsspread: 1.4565324857334904e-05```## PublishFirst, you need to have `twine` installedd```pip install --user --upgrade twine```Make sure you have bumped the version number in `setup.py`, then run the following:```python setup.py sdist bdist_wheelpython -m twine upload dist/*```</longdescription>
</pkgmetadata>