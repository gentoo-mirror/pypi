<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI](https://img.shields.io/pypi/v/dataclassframe)](https://pypi.org/project/many_requests/)![Python](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9-blue)[![Build Status](https://travis-ci.com/joshlk/many_requests.svg?branch=main)](https://travis-ci.com/joshlk/many_requests)[![Documentation](https://readthedocs.org/projects/pip/badge/?version=latest&amp;style=flat)](https://joshlk.github.io/many_requests)# many_requestsDead easy interface for executing many HTTP requests asynchronously.It has been tested in the wild with over 10 million requests.Automatically handles errors and executes retries.Built on-top of [Trio](https://github.com/python-trio/trio) and [asks](https://github.com/theelous3/asks). Interface heavily inspired by [Requests](https://github.com/psf/requests) and [joblib](https://github.com/joblib/joblib).Also provides helper functions for executing [embarrassingly parallel](https://en.wikipedia.org/wiki/Embarrassingly_parallel) async coroutines.To install:```bashpip install many-requests```## Example UsageExecute 10 GET requests for example.org:```pythonfrom many_requests import ManyRequestsresponses = ManyRequests(n_workers=5, n_connections=5)(                method='GET',                url=['https://example.org' for i in range(10)])```Query HackNews API for 10 items and parse JSON output:```pythonresponses = ManyRequests(n_workers=5, n_connections=5, json=True)(                method='GET',                url=[f'https://hacker-news.firebaseio.com/v0/item/{i}.json?print=pretty' for i in range(10)])```To use basic authentication with all requests:```pythonfrom asks import BasicAuthusername = 'user'password = 'pw'responses = ManyRequests(n_workers=5, n_connections=5)(                method='GET',                url=['https://example.org' for i in range(10)],                auth=BasicAuth((username, password)))```To execute embarrassingly parallel async coroutines, for example 10 `trio.sleep` calls:```pythonfrom many_requests import EasyAsync, delayedimport triooutputs = EasyAsync(n_workers = 4)(delayed(trio.sleep)(i) for i in range(10))```</longdescription>
</pkgmetadata>