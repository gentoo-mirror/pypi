<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Welcome to pentapy[![status](https://joss.theoj.org/papers/57c3bbdd7b7f3068dd1e669ccbcf107c/status.svg)](https://joss.theoj.org/papers/57c3bbdd7b7f3068dd1e669ccbcf107c)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2587158.svg)](https://doi.org/10.5281/zenodo.2587158)[![PyPI version](https://badge.fury.io/py/pentapy.svg)](https://badge.fury.io/py/pentapy)[![Build Status](https://github.com/GeoStat-Framework/pentapy/workflows/Continuous%20Integration/badge.svg?branch=main)](https://github.com/GeoStat-Framework/pentapy/actions)[![Coverage Status](https://coveralls.io/repos/github/GeoStat-Framework/pentapy/badge.svg?branch=main)](https://coveralls.io/github/GeoStat-Framework/pentapy?branch=main)[![Documentation Status](https://readthedocs.org/projects/pentapy/badge/?version=latest)](https://geostat-framework.readthedocs.io/projects/pentapy/en/latest/?badge=latest)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/GeoStat-Framework/GeoStat-Framework.github.io/raw/master/docs/source/pics/pentapy.png&quot; alt=&quot;pentapy-LOGO&quot; width=&quot;251px&quot;/&gt;&lt;/p&gt;## Purposepentapy is a toolbox to deal with pentadiagonal matrices in Python.Pentadiagonal linear equation systems arise in many areas of science and engineering:e.g. when solving differential equations, in interpolation problems, or in numerical schemes like finite difference.## InstallationThe package can be installed via [pip][pip_link].On Windows you can install [WinPython][winpy_link] to get Python and pip running.    pip install pentapyThere are pre-built wheels for Linux, MacOS and Windows for most Python versions.To get the scipy solvers running, you have to install scipy or you can use thefollowing extra argument:    pip install pentapy[all]Instead of &quot;all&quot; you can also typ &quot;scipy&quot; or &quot;umfpack&quot; to get one of these specific packages.## CitationIf you use `pentapy` in your publication, please cite it:&gt; Müller, (2019). pentapy: A Python toolbox for pentadiagonal linear systems. Journal of Open Source Software, 4(42), 1759, https://doi.org/10.21105/joss.01759To cite a certain release, have a look at the Zenodo site: https://doi.org/10.5281/zenodo.2587158## ReferencesThe solver is based on the algorithms PTRANS-I and PTRANS-IIpresented by [Askar et al. 2015][ref_link].## Documentation and ExamplesYou can find the documentation under [https://pentapy.readthedocs.org][doc_link].### Solving a pentadiagonal linear equation systemThis is an example of how to solve a LES with a pentadiagonal matrix.```pythonimport numpy as npimport pentapy as ppsize = 1000# create a flattened pentadiagonal matrixM_flat = (np.random.random((5, size)) - 0.5) * 1e-5V = np.random.random(size) * 1e5# solve the LES with M_flat as row-wise flattened matrixX = pp.solve(M_flat, V, is_flat=True)# create the corresponding matrix for checkingM = pp.create_full(M_flat, col_wise=False)# calculate the errorprint(np.max(np.abs(np.dot(M, X) - V)))```This should give something like:```python4.257890395820141e-08```### PerformanceIn the following a couple of solvers for pentadiagonal systems are compared:* Solver 1: Standard linear algebra solver of Numpy [``np.linalg.solve``](https://www.numpy.org/devdocs/reference/generated/numpy.linalg.solve.html)* Solver 2: [``scipy.sparse.linalg.spsolve``](http://scipy.github.io/devdocs/generated/scipy.sparse.linalg.spsolve.html)* Solver 3: Scipy banded solver [``scipy.linalg.solve_banded``](scipy.github.io/devdocs/generated/scipy.linalg.solve_banded.html)* Solver 4: pentapy.solve with ``solver=1``* Solver 5: pentapy.solve with ``solver=2``&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GeoStat-Framework/pentapy/main/examples/perfplot_simple.png&quot; alt=&quot;Performance&quot; width=&quot;600px&quot;/&gt;&lt;/p&gt;The implementations of pentapy are almost one order of magnitude faster than thescipy algorithms for banded or sparse matrices.The performance plot was created with [``perfplot``](https://github.com/nschloe/perfplot).Have a look at the script: [``examples/03_perform_simple.py``](https://github.com/GeoStat-Framework/pentapy/blob/main/examples/03_perform_simple.py).## Requirements:- [NumPy &gt;= 1.14.5](https://www.numpy.org)### Optional- [SciPy](https://www.scipy.org/)- [scikit-umfpack](https://github.com/scikit-umfpack/scikit-umfpack)## ContactYou can contact us via &lt;info@geostat-framework.org&gt;.## License[MIT][licence_link] © 2019 - 2023[ref_link]: http://dx.doi.org/10.1155/2015/232456[pip_link]: https://pypi.org/project/pentapy[winpy_link]: https://winpython.github.io/[licence_link]: https://github.com/GeoStat-Framework/pentapy/blob/main/LICENSE[doc_link]: https://pentapy.readthedocs.org</longdescription>
</pkgmetadata>