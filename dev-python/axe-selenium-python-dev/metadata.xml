<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>axe-selenium-python-dev=======================axe-selenium-python-dev was forked from https://github.com/mozilla-services/axe-selenium-python on date 29/10/2020 all credits to them, there was no official pypi distribution availablewhich supports axe-core 3.3.2 so took the opportunity to create this to support others like us This version of axe-selenium-python-dev supports all changes in repo https://github.com/mozilla-services/axe-selenium-python before date 29/10/2020**This version of axe-selenium-python-dev is using axe-core@3.3.2.**.. image:: https://img.shields.io/badge/license-MPL%202.0-blue.svg   :target: https://github.com/mozilla-services/axe-selenium-python/blob/master/LICENSE.txt   :alt: License.. image:: https://img.shields.io/pypi/v/axe-selenium-python-dev.svg   :target: https://pypi.org/project/axe-selenium-python-dev/   :alt: PyPIRequirements------------You will need the following prerequisites in order to use axe-selenium-python:- selenium &gt;= 3.0.0- Python 2.7 or 3.6- The appropriate driver for the browser you intend to use, downloaded and added to your path, e.g. geckodriver for Firefox:  - `geckodriver &lt;https://github.com/mozilla/geckodriver/releases&gt;`_ downloaded and `added to your PATH &lt;https://stackoverflow.com/questions/40208051/selenium-using-python-geckodriver-executable-needs-to-be-in-path#answer-40208762&gt;`_Installation------------To install axe-selenium-python-dev:.. code-block:: bash  $ pip install axe-selenium-python-devUsage------.. code-block:: python  from selenium import webdriver  from axe_selenium_python import Axe  def test_google():      driver = webdriver.Firefox()      driver.get(&quot;http://www.google.com&quot;)      axe = Axe(driver)      # Inject axe-core javascript into page.      axe.inject()      # Run axe accessibility checks.      results = axe.run()      # Write results to file      axe.write_results(results, 'a11y.json')      driver.close()      # Assert no violations are found      assert len(results[&quot;violations&quot;]) == 0, axe.report(results[&quot;violations&quot;])The method ``axe.run()`` accepts two parameters: ``context`` and ``options``.For more information on ``context`` and ``options``, view the `aXe documentation here &lt;https://github.com/dequelabs/axe-core/blob/master/doc/API.md#parameters-axerun&gt;`_.Resources---------- `Issue Tracker &lt;http://github.com/mozilla-services/axe-selenium-python/issues&gt;`_- `Code &lt;http://github.com/mozilla-services/axe-selenium-python/&gt;`_- `pytest-axe &lt;http://github.com/mozilla-services/pytest-axe/&gt;`_CHANGELOG^^^^^^^^^^^^^^version 2.4.0*************- Remove unused build modulesversion 2.3.0*************- Axe-core node modules min file updated from 2.3.1 to 3.3.2 version 2.2.0*************- Axe-core node modules 3.3.2 path updatedversion 2.1.0*************- Axe-core node modules 3.3.2 path updatedversion 2.0.0*************- Axe-core node modules 3.3.2 updatedversion 1.2.0*************- Updated to install node modulesversion 1.1.1*************- Updated readmeversion 1.1.0*************- Created package.json file to maintain axe-core dependencyversion 1.0.0*************- Forked https://github.com/mozilla-services/axe-selenium-python updated code and initial pypi deploy</longdescription>
</pkgmetadata>