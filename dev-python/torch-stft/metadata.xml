<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.com/pseeth/pytorch-stft.svg?branch=master)](https://travis-ci.com/pseeth/pytorch-stft)# STFT/iSTFT in PyTorchAn STFT/iSTFT written up in PyTorch using 1D Convolutions. Requirements are a recent version PyTorch, numpy, and librosa (for loading audio in test_stft.py). Thanks to Shrikant Venkataramani for sharing code this was based off of and Rafael Valle for catching bugs and adding the proper windowing logic. Uses Python 3.## InstallationInstall easily with pip:```pip install torch_stft```## Usage```import torchfrom torch_stft import STFTimport numpy as npimport librosa import matplotlib.pyplot as pltaudio = librosa.load(librosa.util.example_audio_file(), duration=10.0, offset=30)[0]device = 'cpu'filter_length = 1024hop_length = 256win_length = 1024 # doesn't need to be specified. if not specified, it's the same as filter_lengthwindow = 'hann'audio = torch.FloatTensor(audio)audio = audio.unsqueeze(0)audio = audio.to(device)stft = STFT(    filter_length=filter_length,     hop_length=hop_length,     win_length=win_length,    window=window).to(device)magnitude, phase = stft.transform(audio)output = stft.inverse(magnitude, phase)output = output.cpu().data.numpy()[..., :]audio = audio.cpu().data.numpy()[..., :]print(np.mean((output - audio) ** 2)) # on order of 1e-16```Output of [`compare_stft.py`](compare_stft.py):![images/stft.png](images/stft.png)## TestsTest it by just cloning this repo and running```pip install -r requirements.txtpython -m pytest .```Unfortunately, since it's implemented with 1D Convolutions, some filter_length/hop_length combinations can result in out of memory errors on your GPU when run on sufficiently large input.## ContributingPull requests welcome.</longdescription>
</pkgmetadata>