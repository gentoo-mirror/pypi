<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BiqQueryEmulator Managerthis package is wrapper of [bigquery-emulator](https://github.com/goccy/bigquery-emulator) which provides us BigQuery mock working in local machine.using this package, you can- do unit test of your sql- download the schema of big query, and use it to make test data## usage1. following [instruction](https://github.com/goccy/bigquery-emulator#install),  download `bigquery-emulator` command.2. install this package. ```pip install bqemulatormanager```3. test your sql.```pythonimport bqemulatormanager as bqemimport pandas as pdmanager = bqem.Manager(project='test', schema_path='resources/schema_example.yaml')with manager:    data = pd.DataFrame([        {'id': 1, 'name': 'sato'},        {'id': 2, 'name': 'yamada'}    ])    manager.load(data, 'dataset1.table_a')    sql = 'SELECT id, name FROM `dataset1.table_a`'    df = manager.query(sql)print(df)```unit test example is [here](https://github.com/gyuta/bqemulatormanager/blob/main/examples/testing.py).### automatically detect schemaWhen called `Manager.load`, `SchemaManager` search correspond table schema from `schema_path` (default is `bqem_master_schema.yaml`).If schema definition cannot be found, `SchemaManager` request it from BigQuery in production environment and update master schema file.</longdescription>
</pkgmetadata>