<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-logging-loki===================[![PyPI version](https://img.shields.io/pypi/v/python-logging-loki.svg)](https://pypi.org/project/python-logging-loki/)[![Python version](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue.svg)](https://www.python.org/)[![License](https://img.shields.io/pypi/l/python-logging-loki.svg)](https://opensource.org/licenses/MIT)[![Build Status](https://travis-ci.org/GreyZmeem/python-logging-loki.svg?branch=master)](https://travis-ci.org/GreyZmeem/python-logging-loki)Python logging handler for Loki.  https://grafana.com/lokiInstallation============```bashpip install python-logging-loki```Usage=====```pythonimport loggingimport logging_lokihandler = logging_loki.LokiHandler(    url=&quot;https://my-loki-instance/loki/api/v1/push&quot;,     tags={&quot;application&quot;: &quot;my-app&quot;},    auth=(&quot;username&quot;, &quot;password&quot;),    version=&quot;1&quot;,)logger = logging.getLogger(&quot;my-logger&quot;)logger.addHandler(handler)logger.error(    &quot;Something happened&quot;,     extra={&quot;tags&quot;: {&quot;service&quot;: &quot;my-service&quot;}},)```Example above will send `Something happened` message along with these labels:- Default labels from handler- Message level as `serverity`- Logger's name as `logger` - Labels from `tags` item of `extra` dictThe given example is blocking (i.e. each call will wait for the message to be sent).  But you can use the built-in `QueueHandler` and` QueueListener` to send messages in a separate thread.  ```pythonimport logging.handlersimport logging_lokifrom multiprocessing import Queuequeue = Queue(-1)handler = logging.handlers.QueueHandler(queue)handler_loki = logging_loki.LokiHandler(    url=&quot;https://my-loki-instance/loki/api/v1/push&quot;,     tags={&quot;application&quot;: &quot;my-app&quot;},    auth=(&quot;username&quot;, &quot;password&quot;),    version=&quot;1&quot;,)logging.handlers.QueueListener(queue, handler_loki)logger = logging.getLogger(&quot;my-logger&quot;)logger.addHandler(handler)logger.error(...)```Or you can use `LokiQueueHandler` shortcut, which will automatically create listener and handler.```pythonimport logging.handlersimport logging_lokifrom multiprocessing import Queuehandler = logging_loki.LokiQueueHandler(    Queue(-1),    url=&quot;https://my-loki-instance/loki/api/v1/push&quot;,     tags={&quot;application&quot;: &quot;my-app&quot;},    auth=(&quot;username&quot;, &quot;password&quot;),    version=&quot;1&quot;,)logger = logging.getLogger(&quot;my-logger&quot;)logger.addHandler(handler)logger.error(...)```</longdescription>
</pkgmetadata>