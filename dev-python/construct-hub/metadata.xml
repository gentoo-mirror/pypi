<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Construct HubThis project maintains a [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) construct librarythat can be used to deploy instances of the Construct Hub in any AWS Account.This software backs the public instance of the[ConstructHub](https://constructs.dev), and can be used to deploy a self-hostedinstance with personalized configuration.## :question: Getting Started&gt; :warning: Disclaimer&gt;&gt; The [public instance of ConstructHub](https://constructs.dev) is Generally Available.&gt;&gt; Self-hosted ConstructHub instances are however in active development and&gt; should be considered *experimental*. Breaking changes to the public API of&gt; this package are expected to be released without prior notice, and the&gt; infrastructure and operational posture of ConstructHub instances may also&gt; significantly change.&gt;&gt; You are welcome to deploy self-hosted instances of ConstructHub for evaluation&gt; purposes, and we welcome any feedback (good or bad) from your experience in&gt; doing so.### Quick StartOnce you have installed the `construct-hub` library in your project, thesimplest way to get started is to create an instance of the `ConstructHub`construct:```pythonimport { App, Stack } from '@aws-cdk/core';import { ConstructHub } from 'construct-hub';// The usual... you might have used `cdk init app` instead!const app = new App();const stack = new Stack(app, 'StackName', { /* ... */ });// Now to business!new ConstructHub(stack, 'ConstructHub');```### Personalization#### Using a custom domain nameIn order to use a custom domain for your ConstructHub instance instead of thedefault CloudFront domain name, specify the `domain` property with the followingelements:Attribute                     | Description------------------------------|---------------------------------------------------------------------`zone`                        | A Route53 Hosted Zone, where DNS records will be added.`cert`                        | An Amazon Certificate Manager certificate, which must be in the `us-east-1` region.`monitorCertificateExpiration`| Set to `false` if you do not want an alarm to be created when the certificate is close to expiry.Your self-hosted ConstructHub instance will be served from the root of theprovided `zone`, so the certificate must match this name.#### Alternate package sourcesBy default, ConstructHub has a single package source configured: the public`npmjs.com` registry. Self-hosted instances typically should list packages fromalternate sources, either in addition to packages from `npmjs.com`, or insteadof those.The `packageSources` property can be used to replace the default set of packagesources configured on the instance. ConstructHub provides `IPackageSource`implementations for the public `npmjs.com` registry as well as for privateCodeArtifact repositories:```pythonimport * as codeartifact from '@aws-cdk/aws-codeartifact';import { App, Stack } from '@aws-cdk/core';import { sources, ConstructHub } from 'construct-hub';// The usual... you might have used `cdk init app` instead!const app = new App();const stack = new Stack(app, 'StackName', { /* ... */ });// Now to business!const registry = new codeartifact.CfnRegistry(stack, 'Registry', {  // ....});new ConstructHub(stack, 'ConstructHub', {  packageSources: [    new sources.NpmJs(), // Remove if you do NOT want npmjs.com packages    new sources.CodeArtifact({ registry }),  ],});```You may also implement a custom `IPackageSource` if you want to index packagesfrom alternate locations. In this case, the component you provide will beresponsible for sending notifications to an SQS Queue about newly discoveredpackages. You may refer to the [sources.NpmJs](src/package-sources/npmjs.ts) and [sources.CodeArtifact](src/package-sources/code-artifact.ts)implementations as a reference for hos this can be done.By default, download counts of NPM packages will be fetched periodically fromNPM's public API by a Lambda. Since this is not desirable if you are using aprivate package registry, this is automatically disabled if you specify your ownvalue for `packageSources`. (But this can be re-enabled through the`fetchPackageStats` property if needed).#### Package deny listCertain packages may be undesirable to show in your self-hosted ConstructHubinstance. In order to prevent a package from ever being listed in construct hub,the `denyList` property can be configured with a set of `DenyListRule` objectsthat specify which package or package versions should never be lested:```pythonimport { App, Stack } from '@aws-cdk/core';import { ConstructHub } from 'construct-hub';// The usual... you might have used `cdk init app` instead!const app = new App();const stack = new Stack(app, 'StackName', { /* ... */ });// Now to business!new ConstructHub(stack, 'ConstructHub', {  denyList: [    // Denying _all_ versions of the &quot;sneaky-hackery&quot; package    { packageName: 'sneaky-hackery', reason: 'Mines bitcoins wherever it gets installed' },    // Denying _a specific_ version of the &quot;bad-release&quot; package    { packageName: 'bad-release', version: '1.2.3', reason: 'CVE-####-#####' },  ],});```#### Redirecting from additional domainsYou can add additional domains that will be redirected to your primary ConstructHub domain:```pythonimport * as r53 from '@aws-cdk/aws-route53';const myDomainZone = r53.HostedZone.fromHostedZoneAttributes(this, 'MyDomainZone', {  hostedZoneId: 'AZ1234',  zoneName: 'my.domain.com',});new ConstructHub(this, 'ConstructHub', {  additionalDomains: [ { hostedZone: myDomainZone } ]});```This will set up full domain redirect using Amazon S3 and Amazon CloudFront. Allrequests will be redirected to your primary Construct Hub domain.#### Decrease deployment footprintBy default, ConstructHub executes the documentation rendering process in thecontext of isolated subnets. This is a defense-in-depth mechanism to mitigatethe risks associated with downloading aribtrary (un-trusted) *npm packages* andtheir dependency closures.This layer of security implies the creation of a number of resources that canincrease the operating cost of your self-hosted instance: several VPC endpointsare created, an internal CodeArtifact repository needs to be provisioned, etc...While we generally recommend leaving these features enabled, if your self-hostedConstructHub instance only indexes *trusted* packages (as could be the case foran instance that does not list packages from the public `npmjs.com` registry),you may set the `isolateLambdas` setting to `false`.## :gear: Operating a self-hosted instance1. [Application Overview](./docs/application-overview.md) provides a high-level   description of the components that make a ConstructHub instance. This is a   great starting point for people who consider operating a self-hosted instance   of ConstructHub; and for new operators on-boarding the platform.2. [Operator Runbook](./docs/operator-runbook.md) is a series of diagnostics and   troubleshooting guides indended for operators to have a quick and easy way to   navigate a ConstructHub instance when they are reacting to an alarm or bug   report.### :baby_chick: Deployment CanariesConstruct Hub provides several built-in validation mechanisms to make sure thedeployment of your instance is continuously operating as expected.These mechanisms come in the form of canary testers that are part of theConstructHub deployment stack. Each canary runs periodically and performs adifferent check, triggering a different CloudWatch alarm in case it detects afailure.We recommend that you use staged deployments, and block promotions to theproduction stage in case any preivous stage triggers an alarm within a specifictimeframe.#### Discovery CanaryWhen configuring an `NpmJs` package source, a package discovery canary can beenabled using the `enableCanary` property (and optionally configured using the`canaryPackage` and `canarySla` properties). This feature is activated bydefault and monitors availability of releases of the `construct-hub-probe` npmpackage in the ConstructHub instance.Probe packages, such as `construct-hub-probe` are published frequently (e.g:every 3 hours or more frequently), and can be used to ensure the ConstructHubinstance correctly discovers, indexes and represents those packages.If a different package or SLA should be used, you can configure the `NpmJs`package source manually like so:```pythonimport * as codeartifact from '@aws-cdk/aws-codeartifact';import { App, Stack } from '@aws-cdk/core';import { sources, ConstructHub } from 'construct-hub';const app = new App();const stack = new Stack(app, 'StackName', { /* ... */ });new ConstructHub(stack, 'ConstructHub', {  // ...  packageSources: [    // ...    new sources.NpmJs({      enableCanary: true, // This is the default      canaryPackage: '@acme/my-constructhub-probe',      canarySla: Duration.minutes(30),    }),    // ...  ],  // ...});```In case the new package isn't fully available in the predefined SLA, a**high severity** CloudWatch alarm will trigger, which will in turn triggerthe configured action for low severity alarms.&gt; See [Monitoring &amp; Alarms](./docs/application-overview.md#monitoring--alarming)The operator runbook contains [instructions](./docs/operator-runbook.md) on howto diagnose and mitigate the root cause of the failure.### :nail_care: Customizing the frontendThere are a number of customizations available in order to make your privateconstruct hub better tailored to your organization.#### Package TagsConfiguring package tags allows you to compute additional labels to be appliedto packages. These can be used to indicate to users which packages are owned bytrusted organizations, or any other arbitrary conditions, and can be referencedwhile searching.For example:```pythonnew ConstructHub(this, &quot;ConstructHub&quot;, {  ...myProps,  packageTags: [{    id: 'official',    condition: TagCondition.field('name').eq('construct-hub'),    keyword: {      label: 'Official',      color: '#00FF00',    },    highlight: {      label: 'Vended by AWS',      color: '#00FF00',    }  }]});```The above example will result in packages with the `name` of `construct-hub` toreceive the `Official` tag, which is colored green and displayed amongst thelist of keywords. Additionally the `highlight` key shows this as a highlighteditem on the package's card.The `searchFilter` key can also be used to show tags as search filters groupedtogether.```pythonconst authorsGroup = new PackageTagGroup(&quot;authors&quot;, {  label: &quot;Authors&quot;,  tooltip: &quot;Information about the authors filter&quot;,  filterType: FilterType.checkbox(),});const isAws = TagCondition.field('name').eq('construct-hub');new ConstructHub(this, &quot;ConstructHub&quot;, {  ...myProps,  packageTags: [{    id: 'AWS',    condition: isAws,    searchFilter: {      group: authorsGroup,      display: 'AWS',    },  }, {    id: 'Community',    condition: TagCondition.not(isAws),    searchFilter: {      group: authorsGroup,      display: 'AWS',    },  }]});```The above will show a list of `Authors` filters on the search results pagewith a checkbox for each `AWS` and `Community` packages, allowing users tofilter results by the presence of these tags.Combinations of conditions are also supported:```pythonnew ConstructHub(this, &quot;ConstructHub&quot;, {  ...myProps,  packageTags: [{    label: 'Official',    color: '#00FF00',    condition: TagCondition.or(      TagCondition.field('name').eq('construct-hub'),      TagCondition.field('name').eq('construct-hub-webapp'),    ),  }]});// or more succintly if you have a long listcondition: TagCondition.or(  ...['construct-hub', 'construct-hub-webapp', '...',]    .map(name =&gt; TagCondition.field('name').eq(name))),```You can assert against any value within package json including nested ones.```pythonTagCondition.field('constructHub', 'nested', 'key').eq('value');// checkspackageJson?.constructHub?.nested?.key === value;```You can also assert that a string occurs at least a certain number of timeswithin the package's README.```pythonTagCondition.readme().includes('ECS');TagCondition.readme().includes('fargate', { atLeast: 3, caseSensitive: false });```#### Package LinksConfiguring package links allows you to replace the `Repository`, `License`,and `Registry` links on the package details page with whatever you choose.For example:```pythonnew ConstructHub(this, &quot;ConstructHub&quot;, {  ...myProps,  packageLinks: [{    linkLabel: 'Service Level Agreement',    configKey: 'SLA',  }, {    linkLabel: 'Contact',    configKey: 'Contact',    linkText: 'Email Me!',    allowedDomains: ['me.com'],  }]});```This would allow publishers to add the following to their package.json:```json&quot;constructHub&quot;: {  &quot;packageLinks&quot;: {    &quot;SLA&quot;: &quot;https://support.mypackage.com&quot;,    &quot;Contact&quot;: &quot;me.com/contact&quot;  }}```Then the links on the corresponding package page would show these items asconfigured.#### Home PageThe home page is divided into sections, each with a header and list of packages.Currently, for a given section you can display either the most recently updatedpackages, or a curated list of packages.For example:```pythonnew ConstructHub(this, &quot;ConstructHub&quot;, {  ...myProps,  featuredPackages: {    sections: [      {        name: &quot;Recently updated&quot;,        showLastUpdated: 4      },      {        name: &quot;From the AWS CDK&quot;,        showPackages: [          {            name: &quot;@aws-cdk/core&quot;          },          {            name: &quot;@aws-cdk/aws-s3&quot;,            comment: &quot;One of the most popular AWS CDK libraries!&quot;          },          {            name: &quot;@aws-cdk/aws-lambda&quot;          },          {            name: &quot;@aws-cdk/pipelines&quot;            comment: &quot;The pipelines L3 construct library abstracts away many of the details of managing software deployment within AWS.&quot;          }        ]      }    ]  }});```#### Browse CategoriesThe Construct Hub home page includes a section that displays a set of buttonsthat represent browsing categories (e.g. &quot;Databases&quot;, &quot;Monitoring&quot;,&quot;Serverless&quot;, etc).You can use the `categories` option to configure these categories. Each categoryis defined by a `title` and a `url`, which will be the link associated with thebutton.```pythonnew ConstructHub(this, &quot;ConstructHub&quot;, {  ...myProps,  categories: [    { title: 'Databases', url: '?keywords=databases' },    { title: 'Monitoring', url: '?q=monitoring' },    { title: 'Partners', url: '?tags=aws-partner' }  ]});```#### Feature FlagsFeature flags for the web app can be used to enable or disable experimentalfeatures. These can be customized through the `featureFlags` property - formore information about the available flags, check the documentation for[https://github.com/cdklabs/construct-hub-webapp/](https://github.com/cdklabs/construct-hub-webapp/).## :raised_hand: ContributingIf you are looking to contribute to this project, but don't know where to start,have a look at our [contributing guide](CONTRIBUTING.md)!## :cop: SecuritySee [CONTRIBUTING](CONTRIBUTING.md#security-issue-notifications) for moreinformation.## :balance_scale: LicenseThis project is licensed under the Apache-2.0 License.</longdescription>
</pkgmetadata>