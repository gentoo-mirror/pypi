<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>flake8-mypy===========|Build Status|A plugin for `Flake8 &lt;http://flake8.pycqa.org/&gt;`__ integrating`mypy &lt;http://mypy-lang.org/&gt;`__. The idea is to enable limited typechecking as a linter inside editors and other tools that already support*Flake8* warning syntax and config.NOTE: This plugin requires *mypy* &gt;=0.500, as of Mar 1st no releasedversion satisfies this yet. You can use master in the mean time.List of warnings----------------*flake8-mypy* reserves **T4** for all current and future codes, T beingthe natural letter for typing-related errors. There are other pluginsgreedily reserving the entire letter **T**. To this I say:``¯\_(ツ)_/¯``.**T400**: any typing note.**T484**: any typing error (after PEP 484, geddit?).**T498**: internal *mypy* error.**T499**: internal *mypy* traceback, stderr output, or an unmatchedline.I plan to support more fine-grained error codes for specific *mypy*errors in the future.Two levels of type checking---------------------------*mypy* shines when given a full program to analyze. You can then useoptions like ``--follow-imports`` or ``--disallow-untyped-calls`` toexercise the full transitive closure of your modules, catching errorsstemming from bad API usage or incompatible types. That being said,those checks take time, and require access to the entire codebase. Forsome tools, like an editor with an open file, or a code review tool,achieving this is not trivial. This is where a more limited approachinside a linter comes in.*Flake8* operates on unrelated files, it doesn't perform full programanalysis. In other words, it doesn't follow imports. This is a curse anda blessing. We cannot find complex problems and the number of warningswe can safely show without risking false positives is lower. In return,we can provide useful warnings with great performance, usable forrealtime editor integration.As it turns out, in this mode of operation, *mypy* is still able toprovide useful information on the annotations within and at least usageof stubbed standard library and third party libraries. However, for besteffects, you will want to use separate configuration for *mypy*'sstandalone mode and for usage as a *Flake8* plugin.Configuration-------------Due to the reasoning above, by default *flake8-mypy* will operate withoptions equivalent to the following:.. code:: ini    [mypy]    # Specify the target platform details in config, so your developers are    # free to run mypy on Windows, Linux, or macOS and get consistent    # results.    python_version=3.6    platform=linux    # flake8-mypy expects the two following for sensible formatting    show_column_numbers=True    show_error_context=False    # do not follow imports (except for ones found in typeshed)    follow_imports=skip    # since we're ignoring imports, writing .mypy_cache doesn't make any sense    cache_dir=/dev/null    # suppress errors about unsatisfied imports    ignore_missing_imports=True    # allow untyped calls as a consequence of the options above    disallow_untyped_calls=False    # allow returning Any as a consequence of the options above    warn_return_any=False    # treat Optional per PEP 484    strict_optional=True    # ensure all execution paths are returning    warn_no_return=True    # lint-style cleanliness for typing needs to be disabled; returns more errors    # than the full run.    warn_redundant_casts=False    warn_unused_ignores=False    # The following are off by default since they're too noisy.    # Flip them on if you feel adventurous.    disallow_untyped_defs=False    check_untyped_defs=FalseIf you disagree with the defaults above, you can specify your own *mypy*configuration by providing the ``--mypy-config=`` command-line option to*Flake8* (with the .flake8/setup.cfg equivalent being called``mypy_config``). The value of that option should be a path to amypy.ini or setup.cfg compatible file. For full configuration syntax,follow `mypydocumentation &lt;http://mypy.readthedocs.io/en/latest/config_file.html&gt;`__.For the sake of simplicity and readability, the config you provide willfully replace the one listed above. Values left out will be using*mypy*'s own defaults.Remember that for the best user experience, your linter integration modeshouldn't generally display errors that a full run of *mypy* wouldn't.This would be confusing.Note: chaing the ``follow_imports`` option might have surprisingeffects. If the file you're linting with Flake8 has other files aroundit, then in &quot;silent&quot; or &quot;normal&quot; mode those files will be used to followimports. This includes imports from`typeshed &lt;https://github.com/python/typeshed/&gt;`__.Tests-----Just run:::    python setup.py testOMG, this is Python 3 only!---------------------------Yes, so is *mypy*. Relax, you can run *Flake8* with all popular plugins**as a tool** perfectly fine under Python 3.5+ even if you want toanalyze Python 2 code. This way you'll be able to parse all of the newsyntax supported on Python 3 but also *effectively all* the Python 2syntax at the same time.By making the code exclusively Python 3.5+, I'm able to focus on thequality of the checks and re-use all the nice features of the newreleases (check out`pathlib &lt;docs.python.org/3/library/pathlib.html&gt;`__) instead of wastingcycles on Unicode compatibility, etc.License-------MITChange Log----------17.8.0~~~~~~-  avoid raising errors in the default config which don't happen during   a full run (disable warn\_unused\_ignores and warn\_redundant\_casts)-  always run type checks from a temporary directory to avoid clashing   with unrelated files in the same directory17.3.3~~~~~~-  suppress *mypy* messages about relative imports17.3.2~~~~~~-  bugfix: using *Flake8* with absolute paths now correctly matches   *mypy* messages-  bugfix: don't crash on relative imports in the form   ``from . import X``17.3.1~~~~~~-  switch ``follow_imports`` from &quot;silent&quot; to &quot;skip&quot; to avoid name   clashing files being used to follow imports within   `typeshed &lt;https://github.com/python/typeshed/&gt;`__-  set MYPYPATH by default to give stubs from typeshed higher priority   than local sources17.3.0~~~~~~-  performance optimization: skip running *mypy* over files that contain   no annotations or imports from ``typing``-  bugfix: when running over an entire directory, T484 is now correctly   used instead of T49917.2.0~~~~~~-  first published version-  date-versionedAuthors-------Glued together by `Łukasz Langa &lt;mailto:lukasz@langa.pl&gt;`__... |Build Status| image:: https://travis-ci.org/ambv/flake8-mypy.svg?branch=master   :target: https://travis-ci.org/ambv/flake8-mypy</longdescription>
</pkgmetadata>