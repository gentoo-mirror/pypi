<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Unicode SlugifyUnicode Slugify is a slugifier that generates unicode slugs.  It was originallyused in the Firefox Add-ons web site to generate slugs for add-ons and add-oncollections. Many of these add-ons and collections had unicode characters andrequired more than simple transliteration.## Usage```pythonfrom slugify import slugify, SLUG_OK# Default usage : lower, spaces replaced with &quot;-&quot;, only alphanum and &quot;-_~&quot; chars, keeps unicodeslugify(u'Bän...g (bang)')# u'bäng-bang'# Keep capital letters and spacesslugify(u'Bän...g (bang)', lower=False, spaces=True)# u'Bäng bang'# Replace non ascii chars with their &quot;best&quot; representationslugify(u'北京 (capital of China)', only_ascii=True)# u'bei-jing-capital-of-china'# Allow some extra charsslugify(u'北京 (capital of China)', ok=SLUG_OK+'()', only_ascii=True)# u'bei-jing-(capital-of-china)'# &quot;snake_case&quot; exampledef snake_case(s):    # As &quot;-&quot; is not in allowed Chars, first one (`_`) is used for space replacement    return slugify(s, ok='_', only_ascii=True)snake_case(u'北京 (capital of china)')# u'bei_jing_capital_of_china'# &quot;CamelCase&quot; exampledef camel_case(s):    return slugify(s.title(), ok='', only_ascii=True, lower=False)camel_case(u'北京 (capital of china)')# u'BeiJingCapitalOfChina'```## ThanksTomaz Solc, unidecode, https://pypi.python.org/pypi/Unidecode</longdescription>
</pkgmetadata>