<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;picture&gt;  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/1651790/221885742-80a9ba15-55f5-40df-80cb-934e60c02665.png&quot;&gt;  &lt;img alt=&quot;NebulaGraph Data Intelligence Suite(ngdi)&quot; src=&quot;https://user-images.githubusercontent.com/1651790/221876073-61ef4edb-adcd-4f10-b3fc-8ddc24918ea1.png&quot;&gt;&lt;/picture&gt;&lt;p align=&quot;center&quot;&gt;    &lt;em&gt;Data Intelligence Suite with 4 line code to run Graph Algo on NebulaGraph&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;LICENSE&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://badge.fury.io/py/ngdi&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://badge.fury.io/py/ngdi.svg&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-360/&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/python-3.6%2B-blue.svg&quot; alt=&quot;Python&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pdm.fming.dev&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/pdm-managed-blueviolet&quot; alt=&quot;pdm-managed&quot;&gt;&lt;/a&gt;&lt;/p&gt;---**Documentation**: &lt;a href=&quot;https://github.com/wey-gu/nebulagraph-di#documentation&quot; target=&quot;_blank&quot;&gt;https://github.com/wey-gu/nebulagraph-di#documentation&lt;/a&gt;**Source Code**: &lt;a href=&quot;https://github.com/wey-gu/nebulagraph-di&quot; target=&quot;_blank&quot;&gt;https://github.com/wey-gu/nebulagraph-di&lt;/a&gt;---NebulaGraph Data Intelligence Suite for Python (ngdi) is a powerful Python library that offers APIs for data scientists to effectively read, write, analyze, and compute data in NebulaGraph.With the support of single-machine engine(NetworkX), or distributed computing environment using Spark we could perform Graph Analysis and Algorithms on top of NebulaGraph in less than 10 lines of code, in unified and intuitive API.## Quick Start in 5 Minutes- Setup env with Nebula-Up following [this guide](https://github.com/wey-gu/nebulagraph-di/blob/main/docs/Environment_Setup.md).- Install ngdi with pip from the Jupyter Notebook with http://localhost:8888 (password: `nebula`).- Open the demo notebook and run cells one by one.- Check the [API Reference](https://github.com/wey-gu/nebulagraph-di/blob/main/docs/API.md)## Installation```bashpip install ngdi```## Usage### Call from nGQLSee more details in [docs](https://github.com/wey-gu/nebulagraph-di/blob/main/docs/ngdi_API_Gateway.md)```cypherRETURN ngdi(&quot;pagerank&quot;, [&quot;follow&quot;], [&quot;degree&quot;], &quot;spark&quot;,    {space: &quot;basketballplayer&quot;, max_iter: 10}, {write_mode: &quot;insert&quot;})```### Spark Engine ExamplesSee also: [examples/spark_engine.ipynb](https://github.com/wey-gu/nebulagraph-di/blob/main/examples/spark_engine.ipynb)Run Algorithm on top of NebulaGraph:&gt; Note, there is also query mode, refer to [examples](https://github.com/wey-gu/nebulagraph-di/blob/main/examples/spark_engine.ipynb) or [docs](https://github.com/wey-gu/nebulagraph-di/blob/main/docs/API.md) for more details.```pythonfrom ngdi import NebulaReader# read data with spark engine, scan modereader = NebulaReader(engine=&quot;spark&quot;)reader.scan(edge=&quot;follow&quot;, props=&quot;degree&quot;)df = reader.read()# run pagerank algorithmpr_result = df.algo.pagerank(reset_prob=0.15, max_iter=10)```Write back to NebulaGraph:```pythonfrom ngdi import NebulaWriterfrom ngdi.config import NebulaGraphConfigconfig = NebulaGraphConfig()properties = {&quot;louvain&quot;: &quot;cluster_id&quot;}writer = NebulaWriter(    data=df_result, sink=&quot;nebulagraph_vertex&quot;, config=config, engine=&quot;spark&quot;)writer.set_options(    tag=&quot;louvain&quot;, vid_field=&quot;_id&quot;, properties=properties,    batch_size=256, write_mode=&quot;insert&quot;,)writer.write()```Then we could query the result in NebulaGraph:```cypherMATCH (v:louvain)RETURN id(v), v.louvain.cluster_id LIMIT 10;```### NebulaGraph Engine Examples(not yet implemented)Basically the same as Spark Engine, but with `engine=&quot;nebula&quot;`.```diff- reader = NebulaReader(engine=&quot;spark&quot;)+ reader = NebulaReader(engine=&quot;nebula&quot;)```## Documentation[Environment Setup](https://github.com/wey-gu/nebulagraph-di/blob/main/docs/Environment_Setup.md)[API Reference](https://github.com/wey-gu/nebulagraph-di/blob/main/docs/API.md)## How it worksngdi is an unified abstraction layer for different engines, the current implementation is based on Spark, NetworkX, DGL and NebulaGraph, but it's easy to extend to other engines like Flink, GraphScope, PyG etc.```          ┌───────────────────────────────────────────────────┐          │   Spark Cluster                                   │          │    .─────.    .─────.    .─────.    .─────.       │          │   ;       :  ;       :  ;       :  ;       :      │       ┌─▶│   :       ;  :       ;  :       ;  :       ;      │       │  │    ╲     ╱    ╲     ╱    ╲     ╱    ╲     ╱       │       │  │     `───'      `───'      `───'      `───'        │  Algo Spark                                                  │    Engine└───────────────────────────────────────────────────┘       │  ┌────────────────────────────────────────────────────┬──────────┐       └──┤                                                    │          │          │   NebulaGraph Data Intelligence Suite(ngdi)        │ ngdi-api │◀─┐          │                                                    │          │  │          │                                                    └──────────┤  │          │     ┌────────┐    ┌──────┐    ┌────────┐   ┌─────┐            │  │          │     │ Reader │    │ Algo │    │ Writer │   │ GNN │            │  │ ┌───────▶│     └────────┘    └──────┘    └────────┘   └─────┘            │  │ │        │          │            │            │          │               │  │ │        │          ├────────────┴───┬────────┴─────┐    └──────┐        │  │ │        │          ▼                ▼              ▼           ▼        │  │ │        │   ┌─────────────┐ ┌──────────────┐ ┌──────────┐┌──────────┐   │  │ │     ┌──┤   │ SparkEngine │ │ NebulaEngine │ │ NetworkX ││ DGLEngine│   │  │ │     │  │   └─────────────┘ └──────────────┘ └──────────┘└──────────┘   │  │ │     │  └──────────┬────────────────────────────────────────────────────┘  │ │     │             │        Spark                                          │ │     │             └────────Reader ────────────┐                           │ │  Spark                   Query Mode           │                           │ │  Reader                                       │                           │ │Scan Mode                                      ▼                      ┌─────────┐ │     │  ┌───────────────────────────────────────────────────┬─────────┤ ngdi-udf│◀─────────────┐ │     │  │                                                   │         └─────────┤              │ │     │  │  NebulaGraph Graph Engine         Nebula-GraphD   │   ngdi-GraphD     │              │ │     │  ├──────────────────────────────┬────────────────────┼───────────────────┘              │ │     │  │                              │                    │                                  │ │     │  │  NebulaGraph Storage Engine  │                    │                                  │ │     │  │                              │                    │                                  │ │     └─▶│  Nebula-StorageD             │    Nebula-Metad    │                                  │ │        │                              │                    │                                  │ │        └──────────────────────────────┴────────────────────┘                                  │ │                                                                                               │ │    ┌───────────────────────────────────────────────────────────────────────────────────────┐  │ │    │ RETURN ngdi(&quot;pagerank&quot;, [&quot;follow&quot;], [&quot;degree&quot;], &quot;spark&quot;, {space: &quot;basketballplayer&quot;}) │──┘ │    └───────────────────────────────────────────────────────────────────────────────────────┘ │  ┌─────────────────────────────────────────────────────────────┐ │  │ from ngdi import NebulaReader                               │ │  │                                                             │ │  │ # read data with spark engine, scan mode                    │ │  │ reader = NebulaReader(engine=&quot;spark&quot;)                       │ │  │ reader.scan(edge=&quot;follow&quot;, props=&quot;degree&quot;)                  │ └──│ df = reader.read()                                          │    │                                                             │    │ # run pagerank algorithm                                    │    │ pr_result = df.algo.pagerank(reset_prob=0.15, max_iter=10)  │    │                                                             │    └─────────────────────────────────────────────────────────────┘  ```### Spark Engine Prerequisites- Spark 2.4, 3.0(not yet tested)- [NebulaGraph 3.4+](https://github.com/vesoft-inc/nebula)- [NebulaGraph Spark Connector 3.4+](https://repo1.maven.org/maven2/com/vesoft/nebula-spark-connector/)- [NebulaGraph Algorithm 3.1+](https://repo1.maven.org/maven2/com/vesoft/nebula-algorithm/)### NebulaGraph Engine Prerequisites- [NebulaGraph 3.4+](https://github.com/vesoft-inc/nebula)- [NebulaGraph Python Client 3.4+](https://github.com/vesoft-inc/nebula-python)- [NetworkX](https://networkx.org/)## LicenseThis project is licensed under the terms of the Apache License 2.0.</longdescription>
</pkgmetadata>