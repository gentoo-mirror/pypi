<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Mlflow-WatsonMLA plugin that integrates [WatsonML](http://ibm-wml-api-pyclient.mybluemix.net) with MLflow pipeline.``mlflow_watsonml`` enables mlflow users to deploy mlflow pipeline models into WatsonML.Command line APIs of the plugin (also accessible through mlflow's python package) makes the deployment process seamless.## InstallationPlugin package which is available in pypi and can be installed using```bashpip install mlflow-watsonml```## What does it doInstalling this package uses python's entrypoint mechanism to register the plugin into MLflow's plugin registry. This registry will be invoked each time you launch MLflow script or command line argument.## AuthenticationIn order to connect to WatsonML, refer to [.env.template](.env.template)### Create deploymentThe `create` command line argument and ``create_deployment`` pythonAPIs does the deployment of a model built with MLflow to WatsonML.##### CLI```shell scriptmlflow deployments create -t watsonml -m &lt;model-uri&gt; --name &lt;deployment-name&gt; -C &quot;software_spec_type=runtime-22.2-py3.10&quot;```##### Python API```pythonfrom mlflow.deployments import get_deploy_clienttarget_uri = 'watsonml'plugin = get_deploy_client(target_uri)plugin.create_deployment(    name=&lt;deployment-name&gt;,     model_uri=&lt;model-uri&gt;,     config={&quot;software_spec_type&quot;: &quot;runtime-22.2-py3.10&quot;})```### Update deploymentUpdate API can used to modify the configuration parameters such as number of workers, version etc., of an already deployed model.WatsonML will make sure the user experience is seamless while changing the model in a live environment.##### CLI```shell scriptmlflow deployments update -t watsonml --name &lt;deployment name&gt; -C &quot;software_spec_type=runtime-22.1-py3.10&quot;```##### Python API```pythonplugin.update_deployment(name=&lt;deployment name&gt;, config={&quot;software_spec_type&quot;: &quot;runtime-22.1-py3.10&quot;})```### Delete deploymentDelete an existing deployment. Exception will be raised if the model is not already deployed.##### CLI```shell scriptmlflow deployments delete -t watsonml --name &lt;deployment name / version number&gt;```##### Python API```pythonplugin.delete_deployment(name=&lt;deployment name&gt;)```### List all deploymentsLists the names of all the models deployed on the configured WatsonML.##### CLI```shell scriptmlflow deployments list -t watsonml```##### Python API```pythonplugin.list_deployments()```### Get deployment detailsGet API fetches the details of the deployed model. By default, Get API fetches all the versions of the deployed model.##### CLI```shell scriptmlflow deployments get -t watsonml --name &lt;deployment name&gt;```##### Python API```pythonplugin.get_deployment(name=&lt;deployment name&gt;)```### Run Prediction on deployed modelPredict API enables to run prediction on the deployed model.For the prediction inputs, DataFrame and JSON formats are supported. The python API supports all of these three formats. When invoked via command line, one needs to pass the json file path that contains the inputs.##### CLI```shell scriptmlflow deployments predict -t watsonml --name &lt;deployment name&gt; --input-path &lt;input file path&gt; --output-path &lt;output file path&gt;```output-path is an optional parameter. Without output path parameter result will be printed in console.##### Python API```pythonplugin.predict(name=&lt;deployment name&gt;, df=&lt;prediction input&gt;)```### Plugin helpRun the following command to get the plugin help string.##### CLI```shell scriptmlflow deployments help -t watsonml```</longdescription>
</pkgmetadata>