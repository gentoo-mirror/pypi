<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pydevicetreeThis is a Python 3 library for parsing, querying, and modifying Devicetree Source v1 files asdescribed in the [Devicetree Specification v0.2](https://github.com/devicetree-org/devicetree-specification/releases/tag/v0.2).## Installpydevicetree supports Python &gt;= 3.5 and can be installed with pip from the [Python Package Index](https://pypi.org/project/pydevicetree/).`pip install pydevicetree`## Tutorial### The DevicetreeLet's say you have a file design.dts with the contents```/dts-v1/;/ {#address-cells = &lt;1&gt;;#size-cells = &lt;1&gt;;compatible = &quot;my,design&quot;;aliases {serial0 = &quot;/soc/uart@10000000&quot;;};chosen {stdout-path = &quot;/soc/uart@10000000:115200&quot;;};cpus {#address-cells = &lt;1&gt;;#size-cells = &lt;0&gt;;cpu@0 {compatible = &quot;sifive,rocket0&quot;, &quot;riscv&quot;;device_type = &quot;cpu&quot;;reg = &lt;0&gt;;riscv,isa = &quot;rv32imac&quot;;status = &quot;okay&quot;;timebase-frequency = &lt;1000000&gt;;sifive,dtim = &lt;&amp;dtim&gt;;interrupt-controller {#interrupt-cells = &lt;1&gt;;compatible = &quot;riscv,cpu-intc&quot;;interrupt-controller;};};};soc {#address-cells = &lt;1&gt;;#size-cells = &lt;1&gt;;compatible = &quot;my,design-soc&quot;;ranges;dtim: dtim@20000000 {compatible = &quot;sifive,dtim0&quot;;reg = &lt;0x20000000 0x10000000&gt;;reg-names = &quot;mem&quot;;};uart: uart@10000000 {compatible = &quot;sifive,uart0&quot;;reg = &lt;0x10000000 0x1000&gt;;reg-names = &quot;control&quot;;};};};```### Parsing the TreeParsing the tree is as easy as 1, 2...```&gt;&gt;&gt; from pydevicetree import Devicetree&gt;&gt;&gt; tree = Devicetree.parseFile(&quot;design.dts&quot;)&gt;&gt;&gt; tree&lt;Devicetree my,design&gt;```### Querying the Tree#### By `compatible` string```&gt;&gt;&gt; tree.match(&quot;sifive,rocket0&quot;)[&lt;Node cpu&gt;]```#### By path```&gt;&gt;&gt; tree.get_by_path(&quot;/soc/dtim&quot;)&lt;Node dtim@20000000&gt;```Devicetree aliases are allowed in paths```&gt;&gt;&gt; tree.get_by_path(&quot;serial0&quot;)&lt;Node uart@10000000&gt;```#### Getting `Node` propertiesThe value (or first value of a list/array) of a property can be retrieved with `Node.get_field()````&gt;&gt;&gt; tree.match(&quot;sifive,rocket0&quot;)[0].get_field(&quot;timebase-frequency&quot;)1000000```The list or array of values assigned to a property can be retrieved with `Node.get_fields()````&gt;&gt;&gt; tree.match(&quot;sifive,rocket0&quot;)[0].get_fields(&quot;compatible&quot;)&lt;StringList ['sifive,rocket0', 'riscv']&gt;```There are helper methods `Node.get_reg()` and `Node.get_ranges()` for the `reg` and `ranges`Devicetree properties.```&gt;&gt;&gt; tree.get_by_path(&quot;/soc/dtim&quot;).get_reg()&lt;RegArray [536870912, 268435456]&gt;&gt;&gt;&gt; tree.get_by_path(&quot;/soc/dtim&quot;).get_reg().get_by_name(&quot;mem&quot;)(536870912, 268435456)&gt;&gt;&gt; &quot;0x%x&quot; % tree.get_by_path(&quot;/soc/dtim&quot;).get_reg().get_by_name(&quot;mem&quot;)[0]'0x20000000'```#### Getting `chosen` properties`Devicetree.chosen()` provides quick access to the properties of the `chosen` node```&gt;&gt;&gt; tree.chosen(&quot;stdout-path&quot;)&lt;StringList ['/soc/uart@10000000:115200']&gt;```### Converting back to DevicetreeAny tree or subtree can be converted back to Devicetree by calling `Node.to_dts()` or simplyby `print`ing it:```&gt;&gt;&gt; print(tree.match(&quot;sifive,rocket0&quot;)[0])cpu@0 {        #size-cells = &lt;0&gt;;        compatible = &quot;sifive,rocket0&quot;, &quot;riscv&quot;;        device_type = &quot;cpu&quot;;        reg = &lt;0x0&gt;;        riscv,isa = &quot;rv32imac&quot;;        status = &quot;okay&quot;;        timebase-frequency = &lt;1000000&gt;;        sifive,dtim = &lt;&amp;dtim&gt;;        interrupt-controller {                #interrupt-cells = &lt;1&gt;;                compatible = &quot;riscv,cpu-intc&quot;;                interrupt-controller;        };};```</longdescription>
</pkgmetadata>