<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Flappy Bird for Gymnasium![Python versions](https://img.shields.io/pypi/pyversions/flappy-bird-gymnasium)[![PyPI](https://img.shields.io/pypi/v/flappy-bird-gymnasium)](https://pypi.org/project/flappy-bird-gymnasium/)[![License](https://img.shields.io/github/license/markub3327/flappy-bird-gymnasium)](https://github.com/markub3327/flappy-bird-gymnasium/blob/master/LICENSE)This repository contains the implementation of two Gymnasium environments forthe Flappy Bird game. The implementation of the game's logic and graphics wasbased on the [flappy-bird-gym](https://github.com/Talendar/flappy-bird-gym) project, by[@Talendar](https://github.com/Talendar). ## State spaceThe &quot;FlappyBird-rgb-v0&quot; environment, yields RGB-arrays (images)representing the game's screen. The &quot;FlappyBird-v0&quot; environment, on the otherhand, yields simple numerical information about the game's state asobservations.### `FlappyBird-v0`* the last pipe's horizontal position* the last top pipe's vertical position* the last bottom pipe's vertical position* the next pipe's horizontal position* the next top pipe's vertical position* the next bottom pipe's vertical position* the next next pipe's horizontal position* the next next top pipe's vertical position* the next next bottom pipe's vertical position* player's vertical position* player's vertical velocity* player's rotation### `FlappyBird-rgb-v0`The RGB image of size 288, 512 pixels. The pixel values are from range [0, 255]. The image does not contain score of bird.## Action space* 0 - **do nothing*** 1 - **flap**## Rewards* +0.1 - **every frame it stays alive*** +1.0 - **successfully passing a pipe*** -1.0 - **dying**&lt;br&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img align=&quot;center&quot;        src=&quot;https://github.com/markub3327/flappy-bird-gymnasium/blob/main/imgs/yellow_bird_playing.gif?raw=true&quot;        width=&quot;200&quot;/&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;img align=&quot;center&quot;        src=&quot;https://github.com/markub3327/flappy-bird-gymnasium/blob/main/imgs/red_bird_start_screen.gif?raw=true&quot;        width=&quot;200&quot;/&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;img align=&quot;center&quot;        src=&quot;https://github.com/markub3327/flappy-bird-gymnasium/blob/main/imgs/blue_bird_playing.gif?raw=true&quot;        width=&quot;200&quot;/&gt;&lt;/p&gt;## InstallationTo install `flappy-bird-gymnasium`, simply run the following command:    $ pip install flappy-bird-gymnasium    ## UsageLike with other `gymnasium` environments, it's very easy to use `flappy-bird-gymnasium`.Simply import the package and create the environment with the `make` function.Take a look at the sample code below:```import timeimport flappy_bird_gymnasiumimport gymnasiumenv = gymnasium.make(&quot;FlappyBird-v0&quot;)obs, _ = env.reset()while True:    # Next action:    # (feed the observation to your agent here)    action = env.action_space.sample()    # Processing:    obs, reward, terminated, _, info = env.step(action)        # Rendering the game:    # (remove this two lines during training)    env.render()    time.sleep(1 / 30)  # FPS        # Checking if the player is still alive    if terminated:        breakenv.close()```## PlayingTo play the game (human mode), run the following command:    $ flappy_bird_gymnasium    To see a random agent playing, add an argument to the command:    $ flappy_bird_gymnasium --mode randomTo see a Deep Q Network agent playing, add an argument to the command:    $ flappy_bird_gymnasium --mode dqn</longdescription>
</pkgmetadata>