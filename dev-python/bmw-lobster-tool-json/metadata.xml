<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># LOBSTERThe **L**ightweight **O**pen **B**MW **S**oftware **T**raceability**E**vidence **R**eport allows you to demonstrate software traceabilityand requirements coverage, which is essential for meeting standardssuch as ISO 26262.This package contains a tool extract tracing tags from JSON files. Thetool expects a json file with a list of objects, for which you canspecify members to extract by name. It is extremely simplistic but itmay be good enough to support some use-cases.If you have a more complex file format you will likely need to provideyour own tool for your own files.## Tools* `lobster-json`: Extract activities from JSON files## UsageSome projects store their test vectors in JSON files. This tool can beused to expose these to LOBSTER. Consider this example:```json[    {&quot;name&quot;        : &quot;XOR Test 1&quot;,     &quot;values&quot;      : [false, false],     &quot;expectation&quot; : false,     &quot;tags&quot;        : &quot;example.req_xor&quot;},    {&quot;name&quot;        : &quot;XOR Test 2&quot;,     &quot;values&quot;      : [false, true],     &quot;expectation&quot; : true,     &quot;tags&quot;        : &quot;example.req_xor&quot;},    {&quot;name&quot;          : &quot;Potato Test 1&quot;,     &quot;values&quot;        : [false, false],     &quot;expectation&quot;   : true,     &quot;tags&quot;          : null,     &quot;justification&quot; : &quot;Unlinked on purpose&quot;}]```Here we have a list of three tests. You can configure the`lobster-json` tool to extract the relevant information:```bash$ lobster-json --name-attribute &quot;name&quot; \               --tag-attribute &quot;tags&quot; \               --justification-attribute &quot;justification&quot; \               FILENAME```The name attribute is optional. If your test files do not containnames for the tests then a name is synthesised using the filename andthe index of the test (e.g. foo_1, foo_2, foo_3, etc.).The justification attribute is also optional.The tag attribute is not, and it needs to be present in each testobject.The specification of these attributes can be nested, for example ifyour test objects instead look like this:```json[    {&quot;meta&quot; : {&quot;name&quot; : &quot;XOR Test 1&quot;,               &quot;asil&quot; : &quot;B&quot;,               &quot;req&quot;  : &quot;example.req_xor&quot;},     &quot;test&quot; : {&quot;inputs&quot; : [false, false],               &quot;expect&quot; : false}    },    ...```Then you can get to the data like so:```bash$ lobster-json --name-attribute &quot;meta.name&quot; \               --tag-attribute &quot;meta.req&quot; \               --justification-attribute &quot;meta.just&quot; \               FILENAME```Finally, if your list of tests is nested more deeply in an object, youcan use the `--test-list` flag to identify where it is. For example:```json{ &quot;kind&quot;    : &quot;tests&quot;,  &quot;vectors&quot; : [    {&quot;meta&quot; : {&quot;name&quot; : &quot;XOR Test 1&quot;,               &quot;asil&quot; : &quot;B&quot;,               &quot;req&quot;  : &quot;example.req_xor&quot;},     &quot;test&quot; : {&quot;inputs&quot; : [false, false],               &quot;expect&quot; : false}    },    ...```Then you can use `--test-list=vectors` to identify the correct list.Note: This tool is pretty limited. For the obvious cases it workspretty well, but if you have a more complex test definition in JSONthen you will need to write your own adaptor [using the documentedschema](https://github.com/bmw-software-engineering/lobster/blob/main/docs/schemas.md).## Copyright &amp; License informationThe copyright holder of LOBSTER is the Bayerische Motoren WerkeAktiengesellschaft (BMW AG), and LOBSTER is published under the [GNUAffero General Public License, Version3](https://github.com/bmw-software-engineering/lobster/blob/main/LICENSE.md).</longdescription>
</pkgmetadata>