<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Streamlit - CropperA streamlit custom component for easy image cropping![](./img/demo.gif)## Installation```shell scriptpip install streamlit-cropper```## Example Usage```pythonimport streamlit as stfrom streamlit_cropper import st_cropperfrom PIL import Imagest.set_option('deprecation.showfileUploaderEncoding', False)# Upload an image and set some options for demo purposesst.header(&quot;Cropper Demo&quot;)img_file = st.sidebar.file_uploader(label='Upload a file', type=['png', 'jpg'])realtime_update = st.sidebar.checkbox(label=&quot;Update in Real Time&quot;, value=True)box_color = st.sidebar.color_picker(label=&quot;Box Color&quot;, value='#0000FF')aspect_choice = st.sidebar.radio(label=&quot;Aspect Ratio&quot;, options=[&quot;1:1&quot;, &quot;16:9&quot;, &quot;4:3&quot;, &quot;2:3&quot;, &quot;Free&quot;])aspect_dict = {    &quot;1:1&quot;: (1, 1),    &quot;16:9&quot;: (16, 9),    &quot;4:3&quot;: (4, 3),    &quot;2:3&quot;: (2, 3),    &quot;Free&quot;: None}aspect_ratio = aspect_dict[aspect_choice]if img_file:    img = Image.open(img_file)    if not realtime_update:        st.write(&quot;Double click to save crop&quot;)    # Get a cropped image from the frontend    cropped_img = st_cropper(img, realtime_update=realtime_update, box_color=box_color,                                aspect_ratio=aspect_ratio)        # Manipulate cropped image at will    st.write(&quot;Preview&quot;)    _ = cropped_img.thumbnail((150,150))    st.image(cropped_img)```## References- [streamlit-drawable-canvas](https://github.com/andfanilo/streamlit-drawable-canvas)## AcknowledgmentsBig thanks to zoncrd and yanirs for their contributions</longdescription>
</pkgmetadata>