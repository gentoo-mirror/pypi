<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;Library of the useful &lt;a href=&quot;https://xon.sh/tutorial_macros.html&quot;&gt;macros&lt;/a&gt; for the &lt;a href=&quot;https://xon.sh/&quot;&gt;xonsh shell&lt;/a&gt;.&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  If you like the idea click ‚≠ê on the repo and &lt;a href=&quot;https://twitter.com/intent/tweet?text=Nice%20xontrib%20for%20the%20xonsh%20shell!&amp;url=https://github.com/anki-code/xontrib-macro&quot; target=&quot;_blank&quot;&gt;tweet&lt;/a&gt;.&lt;/p&gt;## InstallationTo install use pip:```bashxpip install xontrib-macro# or: xpip install -U git+https://github.com/anki-code/xontrib-macro```## UsageBy loading the whole module - recommended for interactive usage (type `macro.&lt;Tab&gt;`): ```xshxontrib load macrowith! macro.data.Write('/tmp/hello', replace=True):  # more macros below    world```By importing certain macro - recommended for scripts:```xshfrom xontrib.macro.data import Writewith! Write('/tmp/hello', replace=True):  # more macros below    world```## Macros### Block (xonsh builtin)```pythonfrom xonsh.contexts import Blockwith! Block() as b:    any    text    hereb.macro_block# 'any\ntext\nhere\n\n'b.lines# ['any', 'text', 'here', '']```### data.WriteWrite a file from block ([rich list of parameters](https://github.com/anki-code/xontrib-macro/blob/main/xontrib/macro/data.py#L12)):```xshfrom xontrib.macro.data import Writewith! Write('/tmp/t/hello.xsh', chmod=0o700, replace=True, makedir=True, format={'name': 'world'}, verbose=True):    echo {name}    ## Make directories: /tmp/t## Write to file: /tmp/t/hello.xsh## Set chmod: rw- --- ---## Set exec:  rwx --- ---/tmp/t/hello.xsh# world```There is also `data.Replace()` macro with `mode='w', replace=True, makedir=True, replace_keep='a'`.Note! There is an upstream issue described below in &quot;Known issues&quot; section - the first lines that begin from `#` will be ignored in the block. As workaround to create [shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)) use `Write(..., shebang=&quot;#!/bin/xonsh&quot;)`.### data.JsonBlockMake json block and use it as dict:```pythonfrom xontrib.macro.data import JsonBlockwith! JsonBlock() as j:    {&quot;hello&quot;: &quot;world&quot;}j['hello']# 'world'```### data.XmlBlockSimple XML macro context manager from [xonsh macro tutorial](https://xon.sh/tutorial_macros.html#context-manager-macros). This will return the parsed XML tree from a macro block```xshfrom xontrib.macro.data import XmlBlockwith! XmlBlock() as tree:    &lt;note&gt;      &lt;heading&gt;Hello world!&lt;/heading&gt;      &lt;body&gt;        Hello!      &lt;/body&gt;    &lt;/note&gt;type(tree)# xml.etree.ElementTree.Elementtree.find('body').text# '\n    Hello!\n  '```### run.OnceRun the code once and save mark about it in [XONSH_DATA_DIR](https://xon.sh/envvars.html#xonsh-data-dir). In the next run the code will not be executed if it was not changed. If the code will be changed it will be executed again.Example:```pythonfrom xontrib.macro.run import Oncewith! Once('First install'):    if $(which pacman):        pacman -S vim htop    elif $(which apt):        apt update &amp;&amp; apt install -y vim htop```### docker.RunInDocker```xshfrom xontrib.macro.docker import RunInDocker as dockerwith! docker():  # default: image='ubuntu', executor='bash'    echo hello# hello```### docker.RunInXonshDocker```pythonfrom xontrib.macro.docker import RunInXonshDocker as Doxerwith! Doxer():  # default: image='xonsh/xonsh:slim', executor='/usr/local/bin/xonsh'   echo Installing...   pip install -U -q pip lolcat   echo &quot;We are in docker container now!&quot; | lolcat   # We are in docker container now! (colorized)```This is the same as:```pythondocker run -it --rm xonsh/xonsh:slim xonsh -c @(&quot;&quot;&quot;pip install -U -q pip lolcatecho &quot;We are in docker container now!&quot; | lolcat&quot;&quot;&quot;)```## Known issuesContext Manager Macro picks up comments from outside the block and ignore the initial comments in the block ([4207](https://github.com/xonsh/xonsh/issues/4207)). We can fix it in the xontrib by checking the indentation in the beginning line and the end line. PR is welcome!## CreditsThis package was created with [xontrib cookiecutter template](https://github.com/xonsh/xontrib-cookiecutter).</longdescription>
</pkgmetadata>