<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Anonymize df: a convenient way to anonymize your data for analytics[![PyPI](https://img.shields.io/pypi/v/anonymizedf)](https://pypi.org/project/anonymizedf)[![PyPI - Status](https://img.shields.io/pypi/status/anonymizedf)](https://pypi.org/project/anonymizedf)[![PyPI - License](https://img.shields.io/pypi/l/anonymizedf)](https://github.com/AlexFrid/anonymizedf/blob/master/LICENSE)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)## What is it?**Anonymize df** is a package that helps you quickly and easily generate realisticfake data from a Pandas DataFrame.## What are the expected use cases / why was this made?- You're hiring consultants to work on your data but need to anonymize it first- You're a consultant and created something great that you want to make into a template## InstallationYou can install anonymizedf using pip:```bashpip install anonymizedf```This will also try downloading the tableau hyper api and pandas packagesif you don't have them already.If you don't want to use pip you can also download this repository and execute:```bashpython setup.py install```## Example usage```pythonimport pandas as pdfrom anonymizedf.anonymizedf import anonymize# Import the datadf = pd.read_csv(&quot;https://query.data.world/s/shcktxndtu3ojonm46tb5udlz7sp3e&quot;)# Prepare the data to be anonymizedan = anonymize(df)# Select what data you want to anonymize and your preferred style# Example 1 - just updates dfan.fake_names(&quot;Customer Name&quot;)an.fake_ids(&quot;Customer ID&quot;)an.fake_whole_numbers(&quot;Loyalty Reward Points&quot;)an.fake_categories(&quot;Segment&quot;)an.fake_dates(&quot;Date&quot;)an.fake_decimal_numbers(&quot;Fraction&quot;)# Example 2 - method chainingfake_df = (    an    .fake_names(&quot;Customer Name&quot;, chaining=True)    .fake_ids(&quot;Customer ID&quot;, chaining=True)    .fake_whole_numbers(&quot;Loyalty Reward Points&quot;, chaining=True)    .fake_categories(&quot;Segment&quot;, chaining=True)    .fake_dates(&quot;Date&quot;, chaining=True)    .fake_decimal_numbers(&quot;Fraction&quot;, chaining=True)    .show_data_frame())# Example 3 - multiple assignmentsfake_df = an.fake_names(&quot;Customer Name&quot;)fake_df = an.fake_ids(&quot;Customer ID&quot;)fake_df = an.fake_whole_numbers(&quot;Loyalty Reward Points&quot;)fake_df = an.fake_categories(&quot;Segment&quot;)fake_df = an.fake_dates(&quot;Date&quot;)fake_df = an.fake_decimal_numbers(&quot;Fraction&quot;)fake_df.to_csv(&quot;fake_customers.csv&quot;, index=False)# One thing to note is that you can't directly pass in a list of columns.# If you want to apply the same function to multiple columns there are many ways to do that.# Example 4 - for multiple columnsfor column in column_list:    an.fake_categories(column)```### Example output&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;Customer ID&lt;/th&gt;      &lt;th&gt;Customer Name&lt;/th&gt;      &lt;th&gt;Loyalty Reward Points&lt;/th&gt;      &lt;th&gt;Segment&lt;/th&gt;      &lt;th&gt;Date&lt;/th&gt;      &lt;th&gt;Fraction&lt;/th&gt;      &lt;th&gt;Fake_Customer Name&lt;/th&gt;      &lt;th&gt;Fake_Customer ID&lt;/th&gt;      &lt;th&gt;Fake_Loyalty Reward Points&lt;/th&gt;      &lt;th&gt;Fake_Segment&lt;/th&gt;      &lt;th&gt;Fake_Date&lt;/th&gt;      &lt;th&gt;Fake_Fraction&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;th&gt;0&lt;/th&gt;      &lt;td&gt;AA-10315&lt;/td&gt;      &lt;td&gt;Alex Avila&lt;/td&gt;      &lt;td&gt;76&lt;/td&gt;      &lt;td&gt;Consumer&lt;/td&gt;      &lt;td&gt;01/01/2000&lt;/td&gt;      &lt;td&gt;7.6&lt;/td&gt;      &lt;td&gt;Christian Metcalfe-Reid&lt;/td&gt;      &lt;td&gt;YEJP71011502726136&lt;/td&gt;      &lt;td&gt;558&lt;/td&gt;      &lt;td&gt;Segment 1&lt;/td&gt;      &lt;td&gt;1978-11-09&lt;/td&gt;      &lt;td&gt;29.96&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;1&lt;/th&gt;      &lt;td&gt;AA-10375&lt;/td&gt;      &lt;td&gt;Allen Armold&lt;/td&gt;      &lt;td&gt;369&lt;/td&gt;      &lt;td&gt;Consumer&lt;/td&gt;      &lt;td&gt;02/01/2000&lt;/td&gt;      &lt;td&gt;36.9&lt;/td&gt;      &lt;td&gt;Helen Taylor&lt;/td&gt;      &lt;td&gt;XWOB83170110594048&lt;/td&gt;      &lt;td&gt;286&lt;/td&gt;      &lt;td&gt;Segment 1&lt;/td&gt;      &lt;td&gt;1989-12-29&lt;/td&gt;      &lt;td&gt;72.50&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;2&lt;/th&gt;      &lt;td&gt;AA-10480&lt;/td&gt;      &lt;td&gt;Andrew Allen&lt;/td&gt;      &lt;td&gt;162&lt;/td&gt;      &lt;td&gt;Consumer&lt;/td&gt;      &lt;td&gt;03/01/2000&lt;/td&gt;      &lt;td&gt;16.2&lt;/td&gt;      &lt;td&gt;Joanne Price&lt;/td&gt;      &lt;td&gt;VVCJ28547588747677&lt;/td&gt;      &lt;td&gt;742&lt;/td&gt;      &lt;td&gt;Segment 1&lt;/td&gt;      &lt;td&gt;1982-09-23&lt;/td&gt;      &lt;td&gt;79.77&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;3&lt;/th&gt;      &lt;td&gt;AA-10645&lt;/td&gt;      &lt;td&gt;Anna Andreadi&lt;/td&gt;      &lt;td&gt;803&lt;/td&gt;      &lt;td&gt;Consumer&lt;/td&gt;      &lt;td&gt;04/01/2000&lt;/td&gt;      &lt;td&gt;80.3&lt;/td&gt;      &lt;td&gt;Rhys Jones&lt;/td&gt;      &lt;td&gt;OXCI12190813836802&lt;/td&gt;      &lt;td&gt;206&lt;/td&gt;      &lt;td&gt;Segment 1&lt;/td&gt;      &lt;td&gt;2000-10-14&lt;/td&gt;      &lt;td&gt;7.15&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;4&lt;/th&gt;      &lt;td&gt;AB-10015&lt;/td&gt;      &lt;td&gt;Aaron Bergman&lt;/td&gt;      &lt;td&gt;935&lt;/td&gt;      &lt;td&gt;Consumer&lt;/td&gt;      &lt;td&gt;05/01/2000&lt;/td&gt;      &lt;td&gt;93.5&lt;/td&gt;      &lt;td&gt;Nigel Baldwin-Cook&lt;/td&gt;      &lt;td&gt;JOXS05799252235987&lt;/td&gt;      &lt;td&gt;914&lt;/td&gt;      &lt;td&gt;Segment 1&lt;/td&gt;      &lt;td&gt;2018-01-30&lt;/td&gt;      &lt;td&gt;40.66&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;## Dependencies- [Pandas](https://pandas.pydata.org)- [Faker](https://github.com/joke2k/faker)</longdescription>
</pkgmetadata>