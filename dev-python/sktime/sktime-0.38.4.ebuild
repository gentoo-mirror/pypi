# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A unified framework for machine learning with time series"

HOMEPAGE="https://www.sktime.net"
LICENSE="BSD 3-Clause License"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="alignment all-extras all-extras-pandas2 annotation binder classification clustering compatibility-tests cython-extras dataframe datasets dependencies-lower dependencies-lowest detection dev dl docs forecasting mlflow mlflow-tests mlflow2 networks numpy1 pandas1 param-est regression tests transformations"
DEPENDENCIES="<dev-python/joblib-1.6[${PYTHON_USEDEP}]
	<dev-python/numpy-2.4[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	<dev-python/pandas-2.4.0[${PYTHON_USEDEP}]
	dev-python/scikit-base[${PYTHON_USEDEP}]
	<dev-python/scikit-learn-1.8.0[${PYTHON_USEDEP}]
	<dev-python/scipy-2.0.0[${PYTHON_USEDEP}]
	all-extras? ( dev-python/arch[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/autots[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/cloudpickle[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/dash[${PYTHON_USEDEP}] )
	dataframe? ( dev-python/dask[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/dask[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/dtaidistance[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/dtw-python[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/filterpy[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/gluonts[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/h5py[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/hmmlearn[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/holidays[${PYTHON_USEDEP}] )
	all-extras? ( >=dev-python/matplotlib-3.3.2[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/mne[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/numba[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/pmdarima[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/polars[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/prophet[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/pycatch22[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/pyod[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/pyts[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/ray[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/scikit-optimize[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/scikit-posthocs[${PYTHON_USEDEP}] )
	all-extras? ( >=dev-python/seaborn-0.11[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/seasonal[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/simdkalman[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/skforecast[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/skpro[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/statsforecast[${PYTHON_USEDEP}] )
	all-extras? ( >=dev-python/statsmodels-0.12.1[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/stumpy[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/tbats[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/temporian[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/tslearn[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/u8darts[${PYTHON_USEDEP}] )
	all-extras? ( dev-python/xarray[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/arch[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/autots[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/cloudpickle[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/dash[${PYTHON_USEDEP}] )
	dataframe? ( dev-python/dask[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/dask[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/dtaidistance[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/dtw-python[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/filterpy[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/gluonts[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/h5py[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/hmmlearn[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/holidays[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( >=dev-python/matplotlib-3.3.2[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/mne[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/numba[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/pmdarima[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/polars[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/prophet[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/pycatch22[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/pyod[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/ray[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/scikit-posthocs[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( >=dev-python/seaborn-0.11[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/seasonal[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/simdkalman[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/skforecast[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/skpro[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/statsforecast[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( >=dev-python/statsmodels-0.12.1[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/stumpy[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/tbats[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/temporian[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/tslearn[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/u8darts[${PYTHON_USEDEP}] )
	all-extras-pandas2? ( dev-python/xarray[${PYTHON_USEDEP}] )
	alignment? ( dev-python/dtaidistance[${PYTHON_USEDEP}] )
	alignment? ( dev-python/dtw-python[${PYTHON_USEDEP}] )
	alignment? ( dev-python/numba[${PYTHON_USEDEP}] )
	annotation? ( dev-python/hmmlearn[${PYTHON_USEDEP}] )
	annotation? ( dev-python/numba[${PYTHON_USEDEP}] )
	annotation? ( dev-python/pyod[${PYTHON_USEDEP}] )
	classification? ( dev-python/esig[${PYTHON_USEDEP}] )
	classification? ( dev-python/numba[${PYTHON_USEDEP}] )
	classification? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	classification? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	clustering? ( <dev-python/networkx-3.5[${PYTHON_USEDEP}] )
	clustering? ( dev-python/numba[${PYTHON_USEDEP}] )
	clustering? ( dev-python/tslearn[${PYTHON_USEDEP}] )
	clustering? ( dev-python/ts2vg[${PYTHON_USEDEP}] )
	detection? ( dev-python/hmmlearn[${PYTHON_USEDEP}] )
	detection? ( dev-python/numba[${PYTHON_USEDEP}] )
	detection? ( dev-python/pyod[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/arch[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/autots[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/pmdarima[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/prophet[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/skforecast[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/skpro[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/statsforecast[${PYTHON_USEDEP}] )
	forecasting? ( <dev-python/statsmodels-0.15[${PYTHON_USEDEP}] )
	forecasting? ( dev-python/tbats[${PYTHON_USEDEP}] )
	networks? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	param-est? ( dev-python/seasonal[${PYTHON_USEDEP}] )
	param-est? ( <dev-python/statsmodels-0.15[${PYTHON_USEDEP}] )
	regression? ( dev-python/numba[${PYTHON_USEDEP}] )
	regression? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	transformations? ( dev-python/esig[${PYTHON_USEDEP}] )
	transformations? ( dev-python/filterpy[${PYTHON_USEDEP}] )
	transformations? ( dev-python/holidays[${PYTHON_USEDEP}] )
	transformations? ( dev-python/mne[${PYTHON_USEDEP}] )
	transformations? ( dev-python/numba[${PYTHON_USEDEP}] )
	transformations? ( dev-python/pycatch22[${PYTHON_USEDEP}] )
	transformations? ( dev-python/simdkalman[${PYTHON_USEDEP}] )
	transformations? ( <dev-python/statsmodels-0.15[${PYTHON_USEDEP}] )
	transformations? ( dev-python/stumpy[${PYTHON_USEDEP}] )
	transformations? ( dev-python/temporian[${PYTHON_USEDEP}] )
	transformations? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	dev? ( dev-python/backoff[${PYTHON_USEDEP}] )
	dev? ( dev-python/httpx[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-randomly[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-timeout[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	dev? ( dev-python/wheel[${PYTHON_USEDEP}] )
	docs? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	docs? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	docs? ( >=dev-python/nbsphinx-0.8.6[${PYTHON_USEDEP}] )
	docs? ( dev-python/numpydoc[${PYTHON_USEDEP}] )
	docs? ( dev-python/pydata-sphinx-theme[${PYTHON_USEDEP}] )
	docs? ( <dev-python/sphinx-9.0.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx_design[${PYTHON_USEDEP}] )
	docs? ( <dev-python/sphinx-gallery-0.20.0[${PYTHON_USEDEP}] )
	docs? ( <dev-python/sphinx-issues-6.0.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	tests? ( <dev-python/pytest-8.5[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-randomly[${PYTHON_USEDEP}] )
	tests? ( <dev-python/pytest-timeout-2.5[${PYTHON_USEDEP}] )
	tests? ( <dev-python/pytest-xdist-3.8[${PYTHON_USEDEP}] )
	binder? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	binder? ( <dev-python/pandas-2.0.0[${PYTHON_USEDEP}] )
	binder? ( dev-python/skchange[${PYTHON_USEDEP}] )
	cython-extras? ( dev-python/mrseql[${PYTHON_USEDEP}] )
	cython-extras? ( dev-python/mrsqm[${PYTHON_USEDEP}] )
	cython-extras? ( dev-python/numba[${PYTHON_USEDEP}] )
	datasets? ( dev-python/rdata[${PYTHON_USEDEP}] )
	datasets? ( dev-python/requests[${PYTHON_USEDEP}] )
	dl? ( dev-python/FrEIA[${PYTHON_USEDEP}] )
	dl? ( dev-python/neuralforecast[${PYTHON_USEDEP}] )
	dl? ( dev-python/peft[${PYTHON_USEDEP}] )
	dl? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	dl? ( dev-python/torch[${PYTHON_USEDEP}] )
	dl? ( dev-python/transformers[${PYTHON_USEDEP}] )
	dl? ( dev-python/pykan[${PYTHON_USEDEP}] )
	dl? ( dev-python/pytorch-forecasting[${PYTHON_USEDEP}] )
	dl? ( dev-python/lightning[${PYTHON_USEDEP}] )
	dl? ( dev-python/gluonts[${PYTHON_USEDEP}] )
	dl? ( dev-python/einops[${PYTHON_USEDEP}] )
	dl? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	dl? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	dl? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	dl? ( dev-python/hydra-core[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	mlflow2? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	mlflow-tests? ( dev-python/boto3[${PYTHON_USEDEP}] )
	mlflow-tests? ( dev-python/botocore[${PYTHON_USEDEP}] )
	mlflow-tests? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	mlflow-tests? ( dev-python/moto[${PYTHON_USEDEP}] )
	numpy1? ( <dev-python/numpy-2.0.0[${PYTHON_USEDEP}] )
	pandas1? ( <dev-python/pandas-2.0.0[${PYTHON_USEDEP}] )
	compatibility-tests? ( dev-python/catboost[${PYTHON_USEDEP}] )
	dependencies-lowest? ( ~dev-python/numpy-1.21.0[${PYTHON_USEDEP}] )
	dependencies-lowest? ( ~dev-python/pandas-1.1.0[${PYTHON_USEDEP}] )
	dependencies-lowest? ( ~dev-python/scikit-learn-0.24.0[${PYTHON_USEDEP}] )
	dependencies-lowest? ( ~dev-python/scipy-1.4.0[${PYTHON_USEDEP}] )
	dependencies-lower? ( ~dev-python/numpy-1.25.0[${PYTHON_USEDEP}] )
	dependencies-lower? ( ~dev-python/pandas-2.0.2[${PYTHON_USEDEP}] )
	dependencies-lower? ( ~dev-python/scikit-learn-1.3.0[${PYTHON_USEDEP}] )
	dependencies-lower? ( ~dev-python/scipy-1.10.1[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
