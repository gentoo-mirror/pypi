<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Apache Solr dialect for SQLAlchemy and Apache SupersetA dialect for Apache Solr that can be used with [Apache Superset](https://superset.apache.org).## InstallationThe package can either be installed through PyPi or from the source code.#### Through Python Package Index`pip install sqlalchemy-solr`#### Latest from Source Code`pip install git+https://github.com/aadel/sqlalchemy-solr`## UsageTo connect to Solr with SQLAlchemy, the following URL pattern can be used:```solr://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/solr/&lt;collection&gt;[?use_ssl=true|false]```## Basic ExampleThe following example illustrates the basic usage in a Python project:```engine = create_engine('solr://solr:8983/solr/examples_books')with engine.connect() as connection:    result = connection.execute(text(&quot;SELECT sequence_i, genre_s FROM examples_books&quot;))    for row in result:        print(&quot;Sequence: {}, Genre: {}&quot;.format(row['sequence_i'], row['genre_s']))```## Testing#### Requirements* A Solr instance with a Parallel SQL supported up and running* A Superset instance up and running with this package installed* `pytest` &gt;= 6.2.1 installed on the testing machine#### Procedure1. Change `conftest.py` as appropriate2. Run `pytest`## Resources1. [SQLAlchemy documentation](https://docs.sqlalchemy.org/en/13/index.html)2. [SQLAlchemy dialects](https://docs.sqlalchemy.org/en/13/dialects/index.html)</longdescription>
</pkgmetadata>