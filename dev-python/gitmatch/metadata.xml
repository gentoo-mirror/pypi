<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: http://www.repostatus.org/badges/latest/active.svg    :target: http://www.repostatus.org/#active    :alt: Project Status: Active â€” The project has reached a stable, usable          state and is being actively developed... image:: https://github.com/jwodder/gitmatch/workflows/Test/badge.svg?branch=master    :target: https://github.com/jwodder/gitmatch/actions?workflow=Test    :alt: CI Status.. image:: https://codecov.io/gh/jwodder/gitmatch/branch/master/graph/badge.svg    :target: https://codecov.io/gh/jwodder/gitmatch.. image:: https://img.shields.io/pypi/pyversions/gitmatch.svg    :target: https://pypi.org/project/gitmatch/.. image:: https://img.shields.io/github/license/jwodder/gitmatch.svg    :target: https://opensource.org/licenses/MIT    :alt: MIT License`GitHub &lt;https://github.com/jwodder/gitmatch&gt;`_| `PyPI &lt;https://pypi.org/project/gitmatch/&gt;`_| `Documentation &lt;https://gitmatch.readthedocs.io&gt;`_| `Issues &lt;https://github.com/jwodder/gitmatch/issues&gt;`_``gitmatch`` provides ``gitignore``-style pattern matching of file paths.Simply pass in a sequence of ``gitignore`` patterns and you'll get back anobject for testing whether a given relative path matches the patterns.Installation============``gitmatch`` requires Python 3.7 or higher.  Just use `pip&lt;https://pip.pypa.io&gt;`_ for Python 3 (You have pip, right?) to install it::    python3 -m pip install gitmatchExamples========Basic usage::    &gt;&gt;&gt; import gitmatch    &gt;&gt;&gt; gi = gitmatch.compile([&quot;foo&quot;, &quot;!bar&quot;, &quot;*.dir/&quot;])    &gt;&gt;&gt; bool(gi.match(&quot;foo&quot;))    True    &gt;&gt;&gt; bool(gi.match(&quot;bar&quot;))    False    &gt;&gt;&gt; bool(gi.match(&quot;quux&quot;))    False    &gt;&gt;&gt; bool(gi.match(&quot;foo/quux&quot;))    True    &gt;&gt;&gt; bool(gi.match(&quot;foo/bar&quot;))    True    &gt;&gt;&gt; bool(gi.match(&quot;bar/foo&quot;))    True    &gt;&gt;&gt; bool(gi.match(&quot;bar/quux&quot;))    False    &gt;&gt;&gt; bool(gi.match(&quot;foo.dir&quot;))    False    &gt;&gt;&gt; bool(gi.match(&quot;foo.dir/&quot;))    TrueSee what pattern was matched::    &gt;&gt;&gt; m1 = gi.match(&quot;foo/bar&quot;)    &gt;&gt;&gt; m1 is None    False    &gt;&gt;&gt; bool(m1)    True    &gt;&gt;&gt; m1.pattern    'foo'    &gt;&gt;&gt; m1.path    'foo'    &gt;&gt;&gt; m2 = gi.match(&quot;bar&quot;)    &gt;&gt;&gt; m2 is None    False    &gt;&gt;&gt; bool(m2)    False    &gt;&gt;&gt; m2.pattern    '!bar'    &gt;&gt;&gt; m2.pattern_obj.negative    True    &gt;&gt;&gt; m3 = gi.match(&quot;quux&quot;)    &gt;&gt;&gt; m3 is None    True</longdescription>
</pkgmetadata>