<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># meddlr![GitHub Workflow Status](https://img.shields.io/github/workflow/status/ad12/meddlr/CI)![GitHub](https://img.shields.io/github/license/ad12/meddlr)[![Documentation Status](https://readthedocs.org/projects/meddlr/badge/?version=latest)](https://meddlr.readthedocs.io/en/latest/?badge=latest)[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/pre-commit/pre-commit)[![codecov](https://codecov.io/gh/ad12/meddlr/branch/main/graph/badge.svg?token=U6H83UCGFU)](https://codecov.io/gh/ad12/meddlr)[Getting Started](GETTING_STARTED.md)Meddlr is a config-driven ML framework built to simplify medical image reconstruction and analysis problems.## ‚ö° QuickStart```bash# Install Meddlr with basic dependenciespip install meddlr# Install Meddlr with all dependencies (e.g. pretrained models, benchmarking)pip install 'meddlr[all]'```&gt; _Installing locally_: For local development, fork and clone the repo and run `pip install -e &quot;.[alldev]&quot;`&gt; _Installing from main_: For most up-to-date code without a local install, run `pip install &quot;meddlr @ git+https://github.com/ad12/meddlr@main&quot;`Configure your paths and get going!```pythonimport meddlr as mrimport os# (Optional) Configure and save machine/cluster preferences.# This only has to be done once and will persist across sessions.cluster = mr.Cluster()cluster.set(results_dir=&quot;/path/to/save/results&quot;, data_dir=&quot;/path/to/datasets&quot;)cluster.save()# OR set these as environment variables.os.environ[&quot;MEDDLR_RESULTS_DIR&quot;] = &quot;/path/to/save/results&quot;os.environ[&quot;MEDDLR_DATASETS_DIR&quot;] = &quot;/path/to/datasets&quot;```Detailed instructions are available in [Getting Started](GETTING_STARTED.md).## üêò Model ZooEasily serve and download pretrained models from the model zoo. A (evolving) list of pre-trained models can be found [here](MODEL_ZOO.md), on [HuggingFace ü§ó](https://huggingface.co/arjundd), and in [project folders](projects).To use them, pass the URLs for the config and weights (model) files to `mr.get_model_from_zoo`:```pythonimport meddlr as mrmodel = mr.get_model_from_zoo(  cfg_or_file=&quot;https://huggingface.co/arjundd/vortex-release/resolve/main/mridata_knee_3dfse/Supervised/config.yaml&quot;,  weights_path=&quot;https://huggingface.co/arjundd/vortex-release/resolve/main/mridata_knee_3dfse/Supervised/model.ckpt&quot;,)```## üìì ProjectsCheck out some [projects](projects) built with meddlr!## ‚úèÔ∏è ContributingWant to  add new features, fix a bug, or add your project? We'd love to include them! See [CONTRIBUTING.md](CONTRIBUTING.md) for more information.## AcknowledgementsMeddlr's design for rapid experimentation and benchmarking is inspired by [detectron2](https://github.com/facebookresearch/detectron2).## AboutIf you use Meddlr for your work, please consider citing the following work:```@article{desai2021noise2recon,  title={Noise2Recon: A Semi-Supervised Framework for Joint MRI Reconstruction and Denoising},  author={Desai, Arjun D and Ozturkler, Batu M and Sandino, Christopher M and Vasanawala, Shreyas and Hargreaves, Brian A and Re, Christopher M and Pauly, John M and Chaudhari, Akshay S},  journal={arXiv preprint arXiv:2110.00075},  year={2021}}```</longdescription>
</pkgmetadata>