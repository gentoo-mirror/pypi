<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/seatgeek/thefuzz/actions/workflows/ci.yml/badge.svg    :target: https://github.com/seatgeek/thefuzzTheFuzz=======Fuzzy string matching like a boss. It uses `Levenshtein Distance &lt;https://en.wikipedia.org/wiki/Levenshtein_distance&gt;`_ to calculate the differences between sequences in a simple-to-use package.Requirements============-  Python 3.7 or higher-  `rapidfuzz &lt;https://github.com/maxbachmann/RapidFuzz/&gt;`_For testing~~~~~~~~~~~-  pycodestyle-  hypothesis-  pytestInstallation============Using PIP via PyPI.. code:: bash    pip install thefuzzUsing PIP via Github.. code:: bash    pip install git+git://github.com/seatgeek/thefuzz.git@0.20.0#egg=thefuzzAdding to your ``requirements.txt`` file (run ``pip install -r requirements.txt`` afterwards).. code:: bash    git+ssh://git@github.com/seatgeek/thefuzz.git@0.20.0#egg=thefuzzManually via GIT.. code:: bash    git clone git://github.com/seatgeek/thefuzz.git thefuzz    cd thefuzz    python setup.py installUsage=====.. code:: python    &gt;&gt;&gt; from thefuzz import fuzz    &gt;&gt;&gt; from thefuzz import processSimple Ratio~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.ratio(&quot;this is a test&quot;, &quot;this is a test!&quot;)        97Partial Ratio~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.partial_ratio(&quot;this is a test&quot;, &quot;this is a test!&quot;)        100Token Sort Ratio~~~~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.ratio(&quot;fuzzy wuzzy was a bear&quot;, &quot;wuzzy fuzzy was a bear&quot;)        91    &gt;&gt;&gt; fuzz.token_sort_ratio(&quot;fuzzy wuzzy was a bear&quot;, &quot;wuzzy fuzzy was a bear&quot;)        100Token Set Ratio~~~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.token_sort_ratio(&quot;fuzzy was a bear&quot;, &quot;fuzzy fuzzy was a bear&quot;)        84    &gt;&gt;&gt; fuzz.token_set_ratio(&quot;fuzzy was a bear&quot;, &quot;fuzzy fuzzy was a bear&quot;)        100Partial Token Sort Ratio~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.token_sort_ratio(&quot;fuzzy was a bear&quot;, &quot;wuzzy fuzzy was a bear&quot;)        84    &gt;&gt;&gt; fuzz.partial_token_sort_ratio(&quot;fuzzy was a bear&quot;, &quot;wuzzy fuzzy was a bear&quot;)        100Process~~~~~~~.. code:: python    &gt;&gt;&gt; choices = [&quot;Atlanta Falcons&quot;, &quot;New York Jets&quot;, &quot;New York Giants&quot;, &quot;Dallas Cowboys&quot;]    &gt;&gt;&gt; process.extract(&quot;new york jets&quot;, choices, limit=2)        [('New York Jets', 100), ('New York Giants', 78)]    &gt;&gt;&gt; process.extractOne(&quot;cowboys&quot;, choices)        (&quot;Dallas Cowboys&quot;, 90)You can also pass additional parameters to ``extractOne`` method to make it use a specific scorer. A typical use case is to match file paths:.. code:: python    &gt;&gt;&gt; process.extractOne(&quot;System of a down - Hypnotize - Heroin&quot;, songs)        ('/music/library/good/System of a Down/2005 - Hypnotize/01 - Attack.mp3', 86)    &gt;&gt;&gt; process.extractOne(&quot;System of a down - Hypnotize - Heroin&quot;, songs, scorer=fuzz.token_sort_ratio)        (&quot;/music/library/good/System of a Down/2005 - Hypnotize/10 - She's Like Heroin.mp3&quot;, 61).. |Build Status| image:: https://github.com/seatgeek/thefuzz/actions/workflows/ci.yml/badge.svg   :target: https://github.com/seatgeek/thefuzz</longdescription>
</pkgmetadata>