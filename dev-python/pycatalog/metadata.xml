<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Catalog==============.. image:: https://badge.fury.io/py/pycatalog.svg    :target: https://badge.fury.io/py/pycatalog.. image:: https://travis-ci.org/jsatt/python-catalog.svg?branch=master    :target: https://travis-ci.org/jsatt/python-catalogCatalog is a data structure for storing complex enumeration. It provides a clean definition pattern and several options for member lookup.Supports Python 2.7, 3.3+Install-------::    pip install pycatalogUsage-----::    from catalog import Catalog    class Color(Catalog):        _attrs = 'value', 'label', 'other'        red = 1, 'Red', 'stuff'        blue = 2, 'Blue', 'things'    # Access values as Attributes    &gt; Color.red.value    1    &gt; Color.red.label    'Red'    # Call to look up members by attribute value    &gt; Color('Blue', 'label')    Color.blue    # Calling without attribute specified assumes first attribute defined in `_attrs`    &gt; Color(1)    Color.redAttributes~~~~~~~~~~``_attrs``: Defines names of attributes of members. (default: ``['value']``)``_member_class``: Override the class used to create members. Create a custom  member class by extending ``CatalogMember``.Methods~~~~~~~``_zip``: Return all members as a tuple. If attrs are provided as positional arguments, only thoseattributes will be included, and in that order. Otherwise all attributes are included followed bythe member name.::    &gt; Color._zip()    (('red', 1, 'Red', 'stuff'), ('blue', 2, 'Blue', 'things'))    &gt; Colot._zip('value', 'label')    ((1, 'Red'), (2, 'Blue'))Changelog---------1.2.0 - Add support for Python 2. (Wrong direction. I know)1.1.1 - Add ``_zip`` method1.0.0 - Initial build and packaging</longdescription>
</pkgmetadata>