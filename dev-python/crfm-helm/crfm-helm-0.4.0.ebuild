# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python3_10 )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Benchmark for language models"

HOMEPAGE="https://github.com/stanford-crfm/helm"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="aleph-alpha all anthropic cleva dev google human-evaluation images metrics models mongo openai plots proxy-server scenarios slurm tsinghua yandex"
DEPENDENCIES="dev-python/cattrs[${PYTHON_USEDEP}]
	dev-python/dacite[${PYTHON_USEDEP}]
	dev-python/importlib-resources[${PYTHON_USEDEP}]
	dev-python/Mako[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/pyhocon[${PYTHON_USEDEP}]
	dev-python/retrying[${PYTHON_USEDEP}]
	dev-python/spacy[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/zstandard[${PYTHON_USEDEP}]
	dev-python/sqlitedict[${PYTHON_USEDEP}]
	dev-python/bottle[${PYTHON_USEDEP}]
	dev-python/datasets[${PYTHON_USEDEP}]
	dev-python/pyarrow[${PYTHON_USEDEP}]
	dev-python/nltk[${PYTHON_USEDEP}]
	dev-python/pyext[${PYTHON_USEDEP}]
	dev-python/rouge-score[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/uncertainty-calibration[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	dev-python/transformers[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/torchvision[${PYTHON_USEDEP}]
	dev-python/google-api-python-client[${PYTHON_USEDEP}]
	aleph-alpha? ( dev-python/aleph-alpha-client[${PYTHON_USEDEP}] )
	aleph-alpha? ( dev-python/tokenizers[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	all? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	anthropic? ( dev-python/websocket-client[${PYTHON_USEDEP}] )
	cleva? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	cleva? ( dev-python/pypinyin[${PYTHON_USEDEP}] )
	cleva? ( dev-python/jieba[${PYTHON_USEDEP}] )
	cleva? ( dev-python/opencc[${PYTHON_USEDEP}] )
	cleva? ( dev-python/langdetect[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dev? ( dev-python/black[${PYTHON_USEDEP}] )
	dev? ( dev-python/mypy[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/flake8[${PYTHON_USEDEP}] )
	google? ( dev-python/google-cloud-aiplatform[${PYTHON_USEDEP}] )
	human-evaluation? ( dev-python/scaleapi[${PYTHON_USEDEP}] )
	human-evaluation? ( dev-python/surge-api[${PYTHON_USEDEP}] )
	images? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	images? ( dev-python/pillow[${PYTHON_USEDEP}] )
	metrics? ( dev-python/numba[${PYTHON_USEDEP}] )
	metrics? ( dev-python/pytrec-eval[${PYTHON_USEDEP}] )
	metrics? ( dev-python/sacrebleu[${PYTHON_USEDEP}] )
	metrics? ( dev-python/summ-eval[${PYTHON_USEDEP}] )
	models? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	models? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	models? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	models? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	models? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	models? ( dev-python/crfm-helm[${PYTHON_USEDEP}] )
	mongo? ( dev-python/pymongo[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	openai? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	plots? ( dev-python/colorcet[${PYTHON_USEDEP}] )
	plots? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	plots? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	proxy-server? ( dev-python/gunicorn[${PYTHON_USEDEP}] )
	scenarios? ( dev-python/gdown[${PYTHON_USEDEP}] )
	scenarios? ( dev-python/sympy[${PYTHON_USEDEP}] )
	scenarios? ( dev-python/xlrd[${PYTHON_USEDEP}] )
	slurm? ( dev-python/simple-slurm[${PYTHON_USEDEP}] )
	tsinghua? ( dev-python/icetk[${PYTHON_USEDEP}] )
	yandex? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
