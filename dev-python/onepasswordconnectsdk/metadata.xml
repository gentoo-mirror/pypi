<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># 1Password Connect Python SDK[![Python](https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9-blue)](https://www.python.org)[![PyPI version](https://badge.fury.io/py/onepasswordconnectsdk.svg)](https://badge.fury.io/py/onepasswordconnectsdk)![CI](https://github.com/1Password/connect-sdk-python/workflows/Test/badge.svg)[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://en.wikipedia.org/wiki/MIT_License)[![codecov](https://codecov.io/gh/1Password/connect-sdk-python/branch/main/graph/badge.svg?token=VBPCH0CU2E)](https://codecov.io/gh/1Password/connect-sdk-python)The 1Password Connect SDK provides access to 1Password via [1Password Connect](https://support.1password.com/secrets-automation/) hosted in your infrastructure. The library is intended to be used by Python applications to simplify accessing items in 1Password vaults.## Prerequisites- [1Password Connect](https://support.1password.com/secrets-automation/#step-2-deploy-a-1password-connect-server) deployed in your infrastructure## InstallationTo install the 1Password Connect Python SDK:```bash$ pip install onepasswordconnectsdk```To install a specific release of the 1Password Connect Python SDK:```bash$ pip install onepasswordconnectsdk==1.0.1```## Usage**Import 1Password Connect Python SDK**```pythonimport onepasswordconnectsdk```**Environment Variables**- **OP_CONNECT_TOKEN** â€“ The token to be used to authenticate with the 1Password Connect API.- **OP_CONNECT_HOST** - The hostname of the 1Password Connect API.  Possible values include:    - `http(s)://connect-api:8080` if the Connect server is running in the same Kubernetes cluster as your application.    - `http://localhost:8080` if the Connect server is running in Docker on the same host.    - `http(s)://&lt;ip&gt;:8080` or `http(s)://&lt;hostname&gt;:8080` if the Connect server is running on another host.- **OP_VAULT** - The default vault to fetch items from if not specified.**Create a Client**There are two methods available for creating a client:- `new_client_from_environment`: Builds a new client for interacting with 1Password Connect using the `OP_CONNECT_TOKEN` and `OP_CONNECT_HOST` *environment variables*.- `new_client`: Builds a new client for interacting with 1Password Connect. Accepts the hostname of 1Password Connect and the API token generated for the application.```pythonfrom onepasswordconnectsdk.client import (    Client,    new_client_from_environment,    new_client)# creating client using OP_CONNECT_TOKEN and OP_CONNECT_HOST environment variablesclient_from_env: Client = new_client_from_environment()# creates a client by supplying hostname and 1Password Connect API tokenclient_from_token: Client = new_client(    &quot;{1Password_Connect_Host}&quot;,    &quot;{1Password_Connect_API_Token}&quot;)```**Get Item**Get a specific item by item and vault ids:```pythonclient.get_item(&quot;{item_id}&quot;, &quot;{vault_id}&quot;)```**Get Item By Title**Get a specific item by item title and vault id:```pythonclient.get_item_by_title(&quot;{item_title}&quot;, &quot;{vault_id}&quot;)```**Get All Items**Get a summarized list of all items for a specified vault:```pythonclient.get_items(&quot;{vault_id}&quot;)```**Delete Item**Delete an item by item and vault ids:```pythonclient.delete_item(&quot;{item_id}&quot;, &quot;{vault_id}&quot;)```**Create Item**Create an item in a specified vault:```pythonfrom onepasswordconnectsdk.models import (ItemVault, Field)# Example item creation. Create an item with your desired arguments. item = onepasswordconnectsdk.models.Item(vault=ItemVault(id=&quot;av223f76ydutdngislnkbz6z5u&quot;),                                      id=&quot;kp2td65r4wbuhocwhhijpdbfqq&quot;,                                      title=&quot;newtitle&quot;,                                      category=&quot;LOGIN&quot;,                                      tags=[&quot;1password-connect&quot;],                                      fields=[Field(value=&quot;new_user&quot;,                                                                  purpose=&quot;USERNAME&quot;)],                                      )client.create_item(&quot;{vault_id}&quot;, item)```**Update Item**Update the item identified by the specified item and vault ids. The existing item will be overwritten with the newly supplied item.```pythonfrom onepasswordconnectsdk.models import (ItemVault, Field)# Example item creation. Create an item with your desired arguments. item = onepasswordconnectsdk.models.Item(vault=ItemVault(id=&quot;av223f76ydutdngislnkbz6z5u&quot;),                                      id=&quot;kp2td65r4wbuhocwhhijpdbfqq&quot;,                                      title=&quot;newtitle&quot;,                                      category=&quot;LOGIN&quot;,                                      tags=[&quot;1password-connect&quot;],                                      fields=[Field(value=&quot;new_user&quot;,                                                                  purpose=&quot;USERNAME&quot;)],                                      )client.update_item(&quot;{item_id}&quot;, &quot;{vault_id}&quot;, item)```**Get Specific Vault**Get a vault by vault id:```pythonclient.get_vault(&quot;{vault_id}&quot;)```**Get Vaults**Retrieve all vaults available to the service account:```pythonclient.get_vaults()```**List Files**List summary information on all files stored in a given item, including file ids.```pythonclient.get_files(&quot;{item_id}&quot;, &quot;{vault_id}&quot;)```**Get File Details**Get details on a specific file.```pythonclient.get_file(&quot;{file_id}&quot;, &quot;{item_id}&quot;, &quot;{vault_id}&quot;)```**Download File**Returns the contents of a given file.```pythonclient.download_file(&quot;{file_id}&quot;, &quot;{item_id}&quot;, &quot;{vault_id}&quot;, &quot;{content_path}&quot;)```**Load Configuration**Users can create `classes` or `dicts` that describe fields they wish to get the values from in 1Password. Two convienience methods are provided that will handle the fetching of values for these fields:- **load_dict**: Takes a dictionary with keys specifying the user desired naming scheme of the values to return. Each key's value is a dictionary that includes information on where to find the item field value in 1Password. This returns a dictionary of user specified keys with values retrieved from 1Password- **load**: Takes an object with class attributes annotated with tags describing where to find desired fields in 1Password. Manipulates given object and fills attributes in with 1Password item field values.```python# example dict configuration for onepasswordconnectsdk.load_dict(client, CONFIG)CONFIG = {    &quot;server&quot;: {        &quot;opitem&quot;: &quot;My database item&quot;,        &quot;opfield&quot;: &quot;specific_section.hostname&quot;,        &quot;opvault&quot;: &quot;some_vault_id&quot;,    },    &quot;database&quot;: {        &quot;opitem&quot;: &quot;My database item&quot;,        &quot;opfield&quot;: &quot;.database&quot;,    },    &quot;username&quot;: {        &quot;opitem&quot;: &quot;My database item&quot;,        &quot;opfield&quot;: &quot;.username&quot;,    },    &quot;password&quot;: {        &quot;opitem&quot;: &quot;My database item&quot;,        &quot;opfield&quot;: &quot;.password&quot;,    },}values_dict = onepasswordconnectsdk.load_dict(client, CONFIG)``````python# example class configuration for onepasswordconnectsdk.load(client, CONFIG)class Config:    server: 'opitem:&quot;My database item&quot; opvault:some_vault_id opfield:specific_section.hostname' = None    database: 'opitem:&quot;My database item&quot; opfield:.database' = None    username: 'opitem:&quot;My database item&quot; opfield:.username' = None    password: 'opitem:&quot;My database item&quot; opfield:.password' = NoneCONFIG = Config()values_object = onepasswordconnectsdk.load(client, CONFIG)```## Development**Testing**```bashmake test```## Security1Password requests you practice responsible disclosure if you discover a vulnerability. Please file requests via [**BugCrowd**](https://bugcrowd.com/agilebits). For information about security practices, please visit our [Security homepage](https://bugcrowd.com/agilebits).</longdescription>
</pkgmetadata>