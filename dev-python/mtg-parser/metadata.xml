<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mtg-parser![PyPI](https://img.shields.io/pypi/v/mtg-parser)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mtg-parser)![GitHub](https://img.shields.io/github/license/lheyberger/mtg-parser)## How to installpip install mtg-parser## Quick Start`mtg_parser.parse_deck()` can parse any decklist (textual or online) but if for any reason you want the specialized version, here are the supported websites:* aetherhub.com* archidekt.com* deckstats.net* moxfield.com* mtggoldfish.com* scryfall.com* tappedout.net* tcgplayer.com### From textual decklist`mtg_parser` can parse textual decklists with either MTGO or MTGA formatimport mtg_parserdecklist = &quot;&quot;&quot;1 Atraxa, Praetors' Voice1 Imperial Seal1 Lim-DÃ»l's Vault1 Jeweled Lotus (CMR) 3191 Llanowar Elves (M12) 1823 Brainstorm #Card Advantage #Draw&quot;&quot;&quot;cards = mtg_parser.decklist.parse_deck(decklist)for card in cards:print(card)### From aetherhub.com`mtg_parser` can parse public decks from aetherhub.comimport mtg_parserurl = 'https://aetherhub.com/Deck/&lt;deckname&gt;'cards = mtg_parser.aetherhub.parse_deck(url)for card in cards:print(card)### From archidekt.com`mtg_parser` can parse public decks from archidekt.comimport mtg_parserurl = 'https://www.archidekt.com/decks/&lt;deckid&gt;/'cards = mtg_parser.archidekt.parse_deck(url)for card in cards:print(card)### From deckstats.net`mtg_parser` can parse public decks from deckstats.netimport mtg_parserurl = 'https://deckstats.net/decks/&lt;userid&gt;/&lt;deckid&gt;'cards = mtg_parser.deckstats.parse_deck(url)for card in cards:print(card)### From moxfield.com`mtg_parser` can parse public decks from moxfield.comimport mtg_parserurl = 'https://www.moxfield.com/decks/&lt;deckid&gt;'cards = mtg_parser.moxfield.parse_deck(url)for card in cards:print(card)### From mtggoldfish.com`mtg_parser` can parse public decks from mtggoldfish.comimport mtg_parserurl = 'https://www.mtggoldfish.com/deck/&lt;deckid&gt;'cards = mtg_parser.mtggoldfish.parse_deck(url)for card in cards:print(card)### From scryfall.com`mtg_parser` can parse public decks from scryfall.comimport mtg_parserurl = 'https://scryfall.com/&lt;userid&gt;/decks/&lt;deckid&gt;/'cards = mtg_parser.scryfall.parse_deck(url)for card in cards:print(card)### From tappedout.net`mtg_parser` can parse public decks from tappedout.netimport mtg_parserurl = 'https://tappedout.net/mtg-decks/&lt;deckid&gt;/'cards = mtg_parser.tappedout.parse_deck(url)for card in cards:print(card)### From tcgplayer.com`mtg_parser` can parse public decks from tcgplayer.comimport mtg_parserurl = 'https://decks.tcgplayer.com/magic/&lt;deckpath&gt;'cards = mtg_parser.tcgplayer.parse_deck(url)for card in cards:print(card)</longdescription>
</pkgmetadata>