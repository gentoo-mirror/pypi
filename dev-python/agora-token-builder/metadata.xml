<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Agora Token Generator# Description Token generator for building a token server with Python &amp; the Agora RTM/RTC## Installation------------```pip install agora-token-builder```## Usage------------###### RTC Live Video Calling &amp; Chat SDKBuild token with `int` UID:```pythonfrom agora_token_builder import RtcTokenBuilder#Build token with uidtoken = RtcTokenBuilder.buildTokenWithUid(appId, appCertificate, channelName, uid, role, privilegeExpiredTs)```Build token with `string` UserAccount:```pythonfrom agora_token_builder import RtcTokenBuilder#Build token with userAccounttoken = RtcTokenBuilder.buildTokenWithAccount(appId, appCertificate, channelName, account, role, privilegeExpiredTs)```###### RTM Real-Time Messaging &amp; Chat SDKBuild RTM token.```pythonfrom agora_token_builder import RtmTokenBuildertoken = RtmTokenBuilder.buildToken(appID, appCertificate, userAccount, role, privilegeExpiredTs)```## Variable Definitions```appID```&lt;br&gt;The App ID issued to you by Agora. Apply for a new App ID from the gora Dashboard if it is missing from your kit. See Get an App ID.```appCertificate```&lt;br&gt;Certificate of the application that you registered in the Agora Dashboard. See Get an App Certificate.```channelName```&lt;br&gt;Unique channel name for the AgoraRTC session in the string format```uid```&lt;br&gt;User ID. A 32-bit unsigned integer with a value ranging from 1 to (232-1). optionalUid must be unique.```userAccount```A unique identifier used for to represent a user account. This value will be a string and can contain numbers, letters and any special characters.  ```role```&lt;br&gt;Role_Publisher = 1: A broadcaster (host) in a live-broadcast profile. Role_Subscriber = 2: (Default) A audience in a live-broadcast profile.```privilegeExpireTs```&lt;br&gt;Represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current## LicenseÂ© 2021 Agora.ioThis repository is licensed under the MIT license. See LICENSE for details.</longdescription>
</pkgmetadata>