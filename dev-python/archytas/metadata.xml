<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Archytas: A Tools Interface for AI Agents&lt;img src=&quot;assets/logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; align=&quot;left&quot; style=&quot;padding-right:0.5em;&quot;/&gt;Implementation of the [ReAct (Reason &amp; Action)](https://arxiv.org/abs/2210.03629) framework for Large Language Model (LLM) agents. Mainly targeting OpenAI's GPT-4.Easily create tools from simple python functions or classes with the `@tool` decorator. A tools list can then be passed to the `ReActAgent` which will automagially generate a prompt for the LLM containing usage instructions for each tool, as well as manage the ReAct decision loop while the LLM performs its task.Tools can be anything from internet searches to custom interpreters for your domain. Archytas provides a few built-in demo tools e.g. datetime, fibonacci numbers, and a simple calculator.&lt;div style=&quot;clear:left;&quot;&gt;&lt;/div&gt;# DemoShort demo of using the `PythonTool` to download a COVID-19 dataset, and perform some basic processing/visualization/analysis/etc.&lt;div align=&quot;center&quot;&gt;  &lt;a href=&quot;https://youtu.be/52e4xN8SIi8&quot;&gt;    &lt;img src=&quot;assets/covid_repl_demo.gif&quot; alt=&quot;Watch the video&quot;&gt;  &lt;/a&gt;  &lt;br/&gt;  click to watch original video on youtube&lt;/div&gt;# Quickstart```bash# make sure poetry is installedpip install poetry# clone and installgit clone git@github.com:jataware/archytas.gitcd archytaspoetry install# make sure OPENAI_API_KEY var is set# or pass it in as an argument to the agentexport OPENAI_API_KEY=&quot;sk-...&quot;# run demopoetry run chat-repl```# Simple UsageImport pre-made tools from the tools module```pythonfrom archytas.react import ReActAgent, FailedTaskErrorfrom archytas.tools import PythonToolfrom easyrepl import REPL# create the agent with the tools listsome_tools = [PythonTool, ..., etc.]agent = ReActAgent(tools=some_tools, verbose=True)# REPL to interact with agentfor query in REPL()    try:        answer = agent.react(query)        print(answer)    except FailedTaskError as e:        print(f&quot;Error: {e}&quot;)```# DocumentationSee the [wiki docs](https://github.com/jataware/archytas/wiki) for details.</longdescription>
</pkgmetadata>