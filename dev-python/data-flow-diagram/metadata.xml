<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DFDDFD (Data Flow Diagram) Generator - Commandline tool to generatediagrams as images in various formats (SVG, PNG, JPG, PDF, etc.) fromsource text files.The source for this project is [available here][src].The package page is [available here][pypi].## ScopeThe present tool allows to create diagrams following the &quot;StructuredAnalysis / Stuctured Design&quot; (SA/SD) modelling technique as describedby Edward Yourdon.SA/RT (which is SA/SD with a real-time extension), can be found in thedesign of real-time and embedded systems.Example: [Firmware modelling of the Active DescentSystem](https://www.spyr.ch/ps/ads/qm/node18.html) of the [RosettaLander](https://en.wikipedia.org/wiki/Rosetta_(spacecraft))spacecraft.Surprisingly, SA/RT is also well-suited to the analyse and design ofweb micro-services and IoT architectures.## SummaryData Flow Diagram are used to model the flow and processing ofinformation through a system.```data-flow-diagram example.svgprocessPProcessprocessP2ProcessentityEEntitystoreSStorechannelCChannelE  --&gt; PflowP  ::&gt; P2signalP  &lt;-&gt; Sbidirectional flowP  --- Cundirected flow```![simple example](https://raw.githubusercontent.com/pbauermeister/dfd/master/example.svg &quot;Simple example&quot;)## Syntax and examplesSee the [documentation page][doc].## Dependencies * Python3 * Graphviz## Installing via pip3```[sudo] pip3 install data-flow-diagram```## Installation troubleshootingIf you get an error at runtime like:```ModuleNotFoundError: No module named 'reportlab.graphics._renderPM'```you may have to reinstall reportlab:```[sudo] python3 -m pip install --upgrade --force-reinstall reportlab```## Usage`data-flow-diagram -h` says:```usage: data-flow-diagram [-h] [--output-file OUTPUT_FILE] [--markdown]                         [--format FORMAT] [--percent-zoom PERCENT_ZOOM]                         [--background-color BACKGROUND_COLOR] [--debug]                         [INPUT_FILE]Command-line DFD diagram generator. Converts a textual description into agraphic file.positional arguments:  INPUT_FILE            UML sequence input file; if omitted, stdin is usedoptions:  -h, --help            show this help message and exit  --output-file OUTPUT_FILE, -o OUTPUT_FILE                        output file name; pass '-' to use stdout; if                        omitted, use INPUT_FILE base name with '.svg'                        extension, or stdout  --markdown, -m        consider snippets between opening marker:                        ```data-flow-diagram OUTFILE, and closing marker:                        ``` allowing to generate all diagrams contained in                        an INPUT_FILE that is a markdown file  --format FORMAT, -f FORMAT                        output format: gif, jpg, tiff, bmp, pnm, eps, pdf,                        svg (any supported by Graphviz); default is svg  --no-graph-title      suppress graph title  --no-check-dependencies                        suppress dependencies checking  --debug               emits debug messagesSee https://github.com/pbauermeister/dfd for information, syntax andexamples.```[src]: https://github.com/pbauermeister/dfd[pypi]: https://pypi.org/project/data-flow-diagram[doc]: https://github.com/pbauermeister/dfd/tree/master/doc/README.md</longdescription>
</pkgmetadata>