<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># texasholdem![Pytest Status](https://github.com/SirRender00/texasholdem/actions/workflows/pytest.yml/badge.svg)[![codecov](https://codecov.io/github/SirRender00/texasholdem/branch/main/graph/badge.svg?token=1PH1NHTGXP)](https://codecov.io/github/SirRender00/texasholdem)[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://raw.githubusercontent.com/SirRender00/texasholdem/main/LICENSE)[![Documentation Status](https://readthedocs.org/projects/texasholdem/badge/?version=stable)](https://texasholdem.readthedocs.io/en/stable/?badge=stable)![Pylint Status](https://github.com/SirRender00/texasholdem/actions/workflows/pylint.yml/badge.svg)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)A python package for Texas Hold 'Em Poker providing:- Fast evaluation of hand strengths - Export &amp; import human-readable game history- GUIs to view games and game history- Simple &amp; complex agents - Compliance with World Series of Poker Official Rules- And more| Version Name | Latest Tag | Release Notes | Patch Notes | Documentation | Release Date | End Support Date || ------------ | ---------- | ------------- | ----------- | ------------- | ------------ | ---------------- || 0.9          | v0.9.0     | [Release Notes](https://github.com/SirRender00/texasholdem/releases/tag/v0.9.0) | [Patch Notes](https://github.com/SirRender00/texasholdem/releases/tag/v0.9.0) | [Documentation](https://texasholdem.readthedocs.io/en/0.9/) | 14 March 2023 | || 0.8          | v0.8.1     | [Release Notes](https://github.com/SirRender00/texasholdem/releases/tag/v0.8.0) | [Patch Notes](https://github.com/SirRender00/texasholdem/releases/tag/v0.8.1) | [Documentation](https://texasholdem.readthedocs.io/en/0.8/) | 6 November 2022 | 30 June 2023 || 0.7          | v0.7.3     | [Release Notes](https://github.com/SirRender00/texasholdem/releases/tag/v0.7.0) | [Patch Notes](https://github.com/SirRender00/texasholdem/releases/tag/v0.7.3) | [Documentation](https://texasholdem.readthedocs.io/en/0.7/) | 16 April 2022 | 30 June 2023 |Current Roadmap \[v1.0.0](https://github.com/SirRender00/texasholdem/wiki/Version-1.0.0-Roadmap)## Changelog v0.9### Features- New class `texasholdem.game.move.MoveIterator` which is a special collection of moves which includes attributes such as `action_types` and `raise_range`. Also supports iteration and checking for membership with the `in` operator. Use the `sample()` method to sample from the collection.- New method `texasholdem.game.game.TexasHoldEm.get_available_moves()` which returns a `MoveIterator` of the available moves for the current player.## ContributingWant a new feature, found a bug, or have questions? Feel free to add to our issue board on Github![Open Issues](https://github.com/SirRender00/texasholdem/issues&gt;).We welcome any developer who enjoys the package enough to contribute! Please message me at evyn.machi@gmail.comif you want to be added as a contributor and check out the [Developer's Guide](https://github.com/SirRender00/texasholdem/wiki/Developer's-Guide).## InstallThe package is available on pypi and can be installed with```bashpip install texasholdem```For the latest experimental version```bashpip install texasholdem --pre```## QuickstartPlay a game from the command line and take turns for every player out of the box.```pythonfrom texasholdem.game.game import TexasHoldEmfrom texasholdem.gui.text_gui import TextGUIgame = TexasHoldEm(buyin=500, big_blind=5, small_blind=2, max_players=6)gui = TextGUI(game=game)while game.is_game_running():    game.start_hand()    while game.is_hand_running():        gui.run_step()    path = game.export_history('./pgns')     # save history    gui.replay_history(path)                 # replay history```## OverviewThe following is a quick summary of what's in the package. Please see the [docs](https://texasholdem.readthedocs.io/en/stable/) for all the details.### Game InformationGet game information and take actions through intuitive attributes.```pythonfrom texasholdem import TexasHoldEm, HandPhase, ActionTypegame = TexasHoldEm(buyin=500,                   big_blind=5,                   small_blind=2,                   max_players=9)game.start_hand()assert game.hand_phase == HandPhase.PREFLOPassert HandPhase.PREFLOP.next_phase() == HandPhase.FLOPassert game.chips_to_call(game.current_player) == game.big_blindassert len(game.get_hand(game.current_player)) == 2game.take_action(ActionType.CALL)player_id = game.current_playergame.take_action(ActionType.RAISE, total=10)assert game.player_bet_amount(player_id) == 10assert game.chips_at_stake(player_id) == 20     # total amount in all pots the player is inassert game.chips_to_call(game.current_player) == 10 - game.big_blind```### CardsThe card module represents cards as 32-bit integers for simple and fast handevaluations.```pythonfrom texasholdem import Cardcard = Card(&quot;Kd&quot;)                       # King of Diamondsassert isinstance(card, int)            # Trueassert card.rank == 11                  # 2nd highest rank (0-12)assert card.pretty_string == &quot;[ K â™¦ ]&quot;```### AgentsThe package also comes with basic agents including `call_agent` and `random_agent````pythonfrom texasholdem import TexasHoldEmfrom texasholdem.agents import random_agent, call_agentgame = TexasHoldEm(buyin=500, big_blind=5, small_blind=2)game.start_hand()while game.is_hand_running():    if game.current_player % 2 == 0:        game.take_action(*random_agent(game))    else:        game.take_action(*call_agent(game))```### Game HistoryExport and import the history of hands to files.```pythonfrom texasholdem import TexasHoldEmfrom texasholdem.gui import TextGUIgame = TexasHoldEm(buyin=500, big_blind=5, small_blind=2)game.start_hand()while game.is_hand_running():    game.take_action(*some_strategy(game))# export to filegame.export_history(&quot;./pgns/my_game.pgn&quot;)# import and replaygui = TextGUI()gui.replay_history(&quot;./pgns/my_game.pgn&quot;)```PGN files also support single line and end of line comments starting with &quot;#&quot;.### Poker EvaluatorThe evaluator module returns the rank of the best 5-card hand from a list of 5 to 7 cards.The rank is a number from 1 (strongest) to 7462 (weakest).```pythonfrom texasholdem import Cardfrom texasholdem.evaluator import  evaluate, rank_to_stringassert evaluate(cards=[Card(&quot;Kd&quot;), Card(&quot;5d&quot;)],                board=[Card(&quot;Qd&quot;),                       Card(&quot;6d&quot;),                       Card(&quot;5s&quot;),                       Card(&quot;2d&quot;),                       Card(&quot;5h&quot;)]) == 927assert rank_to_string(927) == &quot;Flush, King High&quot;```### GUIsThe GUI package currently comes with a text-based GUI to play games from the command line. Coming laterwill be web-app based GUIs.</longdescription>
</pkgmetadata>