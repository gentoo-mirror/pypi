<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: docs/source/_static/logo/logo.svg   :width: 600 px   :alt: Fixit|readthedocs-badge| |codecov-badge| |pypi-badge| |pypi-download|.. |readthedocs-badge| image:: https://readthedocs.org/projects/pip/badge/?version=latest&amp;style=flat   :target: https://fixit.readthedocs.io/en/latest/   :alt: Documentation.. |codecov-badge| image:: https://codecov.io/gh/Instagram/Fixit/branch/master/graph/badge.svg   :target: https://codecov.io/gh/Instagram/Fixit/branch/master.. |pypi-badge| image:: https://img.shields.io/pypi/v/fixit.svg   :target: https://pypi.org/project/fixit   :alt: PYPI.. |pypi-download| image:: https://pepy.tech/badge/fixit/month   :target: https://pepy.tech/project/fixit/month   :alt: PYPI Download.. intro-start:title:`A lint framework that writes better Python code for you.`Fixit is a lint framework that complements `Flake8 &lt;https://github.com/PyCQA/flake8&gt;`_.Itâ€™s based on `LibCST &lt;https://github.com/Instagram/LibCST/&gt;`_ which makes it possibleto provide **auto-fixes**.Lint rules are made easy to build through pattern matching, a test toolkit,and utility helpers (e.g. scope analysis) for non-trivial boilerplate.It is optimized for efficiency, easy to customize and comes with many builtin lint rules... intro-endGetting Started---------------To install Fixit::  pip install fixitFixit provides CLI commands.To run built-in Fixit rules on existing code to get code quality suggestions::  python -m fixit.cli.run_rulesTo apply autofix on existing code::  python -m fixit.cli.apply_fixYou can learn more about how to `configure Fixit &lt;https://fixit.readthedocs.io/en/latest/getting_started.html#Configuration-File&gt;`_,`build a lint rule &lt;https://fixit.readthedocs.io/en/latest/build_a_lint_rule.html&gt;`_,`test a lint rule &lt;https://fixit.readthedocs.io/en/latest/test_a_lint_rule.html&gt;`_ from our tutorials.Try it out with our `notebook examples &lt;https://fixit.readthedocs.io/en/latest/getting_started.html&gt;`_.Further Reading---------------- `Static Analysis at Scale: An Instagram Story. &lt;https://instagram-engineering.com/static-analysis-at-scale-an-instagram-story-8f498ab71a0c&gt;`_Development-----------Start by setting up and activating a virtualenv:.. code-block:: shell    git clone git@github.com:Instagram/Fixit.git fixit    cd fixit    python3 -m venv ../fixit-env/  # just an example, put this wherever you want    source ../fixit-env/bin/activate    pip install --upgrade pip  # optional, if you have an old system version of pip    pip install -r requirements.txt -r requirements-dev.txt    # If you're done with the virtualenv, you can leave it by running:    deactivateWe use `isort &lt;https://isort.readthedocs.io/en/stable/&gt;`_ and `black &lt;https://black.readthedocs.io/en/stable/&gt;`_to format code. To format changes to be conformant, run the following in the root:.. code-block:: shell    tox -e autofixTo run all tests, you'll need to install `tox &lt;https://tox.readthedocs.io/en/latest/&gt;`_and do the following in the root: (use py37, py38 to choose from Python version 3.7 or 3.8)::    tox -e py38You can also run individual unit tests by specifying a module likethis::    tox -e py38 -- fixit.common.tests.test_reportTo run all test cases of a specific rule (e.g. ``NoInheritFromObjectRule``)::    tox -e py38 -- fixit.tests.NoInheritFromObjectRuleSee the `unittest documentation &lt;https://docs.python.org/3/library/unittest.html&gt;`_for more examples of how to run tests.We use `Pyre &lt;https://github.com/facebook/pyre-check&gt;`_ for type-checking. Toverify types for the library, do the following in the root::    pyre --preserve-pythonpath checkTo generate documentation, do the following in the root:.. code-block:: shell    tox -e docsLicense=======Fixit is `MIT licensed &lt;LICENSE&gt;`_, as found in the LICENSE file... fb-docs-startPrivacy Policy and Terms of Use===============================- `Privacy Policy &lt;https://opensource.facebook.com/legal/privacy&gt;`_- `Terms of Use &lt;https://opensource.facebook.com/legal/terms&gt;`_.. fb-docs-end</longdescription>
</pkgmetadata>