<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Nordigen PythonThis is official Python client library for [Nordigen](https://nordigen.com/en) APIFor a full list of endpoints and arguments, see the [docs](https://nordigen.com/en/account_information_documenation/api-documention/overview/).Before starting to use API you will need to create a new secret and get your `SECRET_ID` and `SECRET_KEY` from the [Nordigen's Open Banking Portal](https://ob.nordigen.com/user-secrets/).## Requirements* Python &gt;= 3.8## InstallationInstall library via pip package manager:```pip install nordigen```## Example applicationExample code can be found in `main.py` file and Flask application can be found in the `example` directory## Quickstart```pythonfrom uuid import uuid4from nordigen import NordigenClient# initialize Nordigen client and pass SECRET_ID and SECRET_KEYclient = NordigenClient(    secret_id=&quot;SECRET_ID&quot;,    secret_key=&quot;SECRET_KEY&quot;)# Create new access and refresh token# Parameters can be loaded from .env or passed as a string# Note: access_token is automatically injected to other requests after you successfully obtain ittoken_data = client.generate_token()# Use existing tokenclient.token = &quot;YOUR_TOKEN&quot;# Exchange refresh token for new access tokennew_token = client.exchange_token(token_data[&quot;refresh&quot;])# Get institution id by bank name and countryinstitution_id = client.institution.get_institution_id_by_name(    country=&quot;LV&quot;,    institution=&quot;Revolut&quot;)# Get all institution by providing country code in ISO 3166 formatinstitutions = client.institution.get_institutions(&quot;LV&quot;)# Initialize bank sessioninit = client.initialize_session(    # institution id    institution_id=institution_id,    # redirect url after successful authentication    redirect_uri=&quot;https://nordigen.com&quot;,    # additional layer of unique ID defined by you    reference_id=str(uuid4()))# Get requisition_id and link to initiate authorization process with a banklink = init.link # bank authorization linkrequisition_id = init.requisition_id```After successful authorization with a bank you can fetch your data (details, balances, transactions)---## Fetching account metadata, balances, details and transactions```python# Get account id after you have completed authorization with a bank# requisition_id can be gathered from initialize_session responseaccounts = client.requisition.get_requisition_by_id(    requisition_id=init.requisition_id)# Get account id from the list.account_id = accounts[&quot;accounts&quot;][0]# Create account instance and provide your account id from previous stepaccount = client.account_api(id=account_id)# Fetch account metadatameta_data = account.get_metadata()# Fetch detailsdetails = account.get_details()# Fetch balancesbalances = account.get_balances()# Fetch transactionstransactions = account.get_transactions()# Filter transactions by specific date rangetransactions = account.get_transactions(date_from=&quot;2021-12-01&quot;, date_to=&quot;2022-01-21&quot;)```## Premium endpoints```python# Get premium transactions. Country and date parameters are optionalpremium_transactions = account.get_premium_transactions(    country=&quot;LV&quot;,    date_from=&quot;2021-12-01&quot;,    date_to=&quot;2022-01-21&quot;)# Get premium detailspremium_details = account.get_premium_details()```## SupportFor any inquiries please contact support at [support@nordigen.com](support@nordigen.com) or create an issue in repository.</longdescription>
</pkgmetadata>