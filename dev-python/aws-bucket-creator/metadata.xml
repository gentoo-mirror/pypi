<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>AWS Bucket Creator==================Features========aws-bucket-creator creates a bucket, sets tags, logging, encryption, lifecycle, and policyInstallation============aws-bucket-creator is on PyPI so all you need is:.. code:: console   $ pip install aws-bucket-creatorDemonstration=============&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/rubelw//aws_bucket_creator/blob/master/images/demo.gif&quot;&gt;&lt;img src=&quot;https://github.com/rubelw//aws_bucket_creator/raw/master/images/demo.gif&quot; alt=&quot;aws_bucket_creator tutorial&quot; style=&quot;max-width:100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;Example=======Getting help.. code:: console   $ bucket-creator create --help   Usage: bucket-creator upsert [OPTIONS]   primary function for creating a bucket :return:    Options:      -i, --ini TEXT  INI file with needed information  [required]      -v, --version   Print version and exit      --debug         Turn on debugging      --help          Show this message and exit... code:: console   bucket-creator upsert -i config/my.iniOptions    * acl can be: 'private', 'public-read', 'public-read-write', 'authenticated-read', 'aws-exec-read', 'bucket-owner-read','bucket-owner-full-control'    * aes-256 encryption is turned-on by default, and can not be turned off for security reasons    * public_read access can not be turned on for security reasons    * default days before going to standard-ia is 30    * default days before going to glacier is 365Example Ini file.. code:: console    [environment]    region = us-east-1    profile = my_aws_profile    [tags]    ResourceOwner = not_me    Project = some project    DeployedBy = me    [parameters]    bucket_name = test-bucket    acl = bucket-owner-full-control    public_write_access = True    logging_enabled = True    days_to_glacier = 365    days_to_standard_ia = 30    event_lambda_arn = arn:aws:lambda:us-east-1:123456789:function:my-lambda    notification_prefix = input/    notification_suffix = .jpg    bucket_policy = {        &quot;Version&quot;: &quot;2012-10-17&quot;,        &quot;Statement&quot;: [            {                &quot;Sid&quot;: &quot;AllowRoot&quot;,                &quot;Effect&quot;: &quot;Allow&quot;,                &quot;Principal&quot;: {                    &quot;AWS&quot;: [                        &quot;arn:aws:iam::123456789:root&quot;                    ]                },                &quot;Action&quot;: [&quot;s3:*&quot;],                &quot;Resource&quot;: [                    &quot;arn:aws:s3:::test-bucket/*&quot;,                    &quot;arn:aws:s3:::test-bucket&quot;                ]            },            {                &quot;Sid&quot;: &quot;IPAllow&quot;,                &quot;Effect&quot;: &quot;Allow&quot;,                &quot;Principal&quot;: {                    &quot;AWS&quot;: &quot;*&quot;                },                &quot;Action&quot;: &quot;s3:*&quot;,                &quot;Resource&quot;: [                    &quot;arn:aws:s3:::test-bucket/*&quot;,                    &quot;arn:aws:s3:::test-bucket&quot;                ],                &quot;Condition&quot; : {                    &quot;IpAddress&quot; : {                        &quot;aws:SourceIp&quot;: &quot;192.128.1.1/32&quot;                    },                    &quot;NotIpAddress&quot; : {                        &quot;aws:SourceIp&quot;: &quot;192.168.1.1/32&quot;                    }                }            }        ]      }</longdescription>
</pkgmetadata>