<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![codecov](https://codecov.io/gh/redis-performance/redisbench-admin/branch/master/graph/badge.svg)](https://codecov.io/gh/redis-performance/redisbench-admin)![Actions](https://github.com/redis-performance/redisbench-admin/workflows/Run%20Tests/badge.svg?branch=master)![Actions](https://badge.fury.io/py/redisbench-admin.svg)# [redisbench-admin](https://github.com/redis-performance/redisbench-admin)Redis benchmark run helper can help you with the following tasks:- Setup abd teardown of benchmarking infrastructure specified  on [redis-performance/testing-infrastructure](https://github.com/redis-performance/testing-infrastructure)- Setup and teardown of an Redis and Redis Modules DBs for benchmarking- Management of benchmark data and specifications across different setups- Running benchmarks and recording results- Exporting performance results in several formats (CSV, RedisTimeSeries, JSON)- Finding on-cpu, off-cpu, io, and threading performance problems by attaching profiling tools/probers ( perf (a.k.a. perf_events), bpf tooling, vtune )- **[SOON]** Finding performance problems by attaching telemetry probesCurrent supported benchmark tools:- [redis-benchmark](https://github.com/redis/redis)- [memtier_benchmark](https://github.com/RedisLabs/memtier_benchmark)- [redis-benchmark-go](https://github.com/redis-performance/redis-benchmark-go)- [YCSB](https://github.com/RediSearch/YCSB)- [tsbs](https://github.com/RedisTimeSeries/tsbs)- [redisgraph-benchmark-go](https://github.com/RedisGraph/redisgraph-benchmark-go)- [ftsb_redisearch](https://github.com/RediSearch/ftsb)- [ann-benchmarks](https://github.com/RedisAI/ann-benchmarks)## InstallationInstallation is done using pip, the package installer for Python, in the following manner:```bashpython3 -m pip install redisbench-admin```## Profiler daemonYou can use the profiler daemon by itself in the following manner. On the target machine do as follow:```bashpip3 install --upgrade pippip3 install redisbench-admin --ignore-installed PyYAML# install perfapt install linux-tools-common linux-tools-generic linux-tools-`uname -r` -y# ensure perf is workingperf --version# install awsclisnap install aws-cli --classic# configure awsaws configure# start the perf-daemonperf-daemon startWARNING:root:Unable to detected github_actor. caught the following error: No section: 'user'Writting log to /tmp/perf-daemon.logStarting perf-daemon. PID file /tmp/perfdaemon.pid. Daemon workdir: /root/RedisGraph# check daemon is working appropriatellycurl localhost:5000/ping# start a profilecurl -X POST localhost:5000/profiler/perf/start/&lt;pid to profile&gt;# stop a profilecurl -X POST -d '{&quot;aws_access_key_id&quot;:$AWS_ACCESS_KEY_ID,&quot;aws_secret_access_key&quot;:$AWS_SECRET_ACCESS_KEY}' localhost:5000/profiler/perf/stop/&lt;pid to profile&gt;```## Development1. Install [pypoetry](https://python-poetry.org/) to manage your dependencies and trigger tooling.```shpip install poetry```2. Installing dependencies from lock file```poetry install```### Running formaters```shpoetry run black .```### Running linters```shpoetry run flake8```### Running testsA test suite is provided, and can be run with:```sh$ tox```To run a specific test:```sh$ tox -- tests/test_redistimeseries.py```## Licenseredisbench-admin is distributed under the BSD3 license - see [LICENSE](LICENSE)</longdescription>
</pkgmetadata>