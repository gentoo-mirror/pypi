<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># poetry-plugin-pypi-mirror## Description*poetry-plugin-pypi-mirror* is a[plugin](https://python-poetry.org/docs/master/plugins/) for[poetry](https://python-poetry.org/), the Python packaging and dependencymanager. It enables poetry to substitute connections to pypi.org withconnections to a pypi.org mirror or pull-through cache **without requiringproject configuration changes**. This is ideal for situations where anaccess-restricted or otherwise unsuitable-for-general-use pypi.org mirror mustbe used by a subset of project contributors. For example:* A private PyPI mirror internal to a business, required by company policy* A limited-access PyPI mirror in a region where pypi.org is restricted* A regional mirror that is more performant for a few users, and less performant  for everyone elseThese mirrors can be used without this plugin by [adding them as projectrepositories](https://python-poetry.org/docs/repositories/). However, thisrequires the mirror to be included in the project's configuration, and this alsoresults in source entries for the mirror appearing in `poetry.lock`. Since onlya subset of project contributors can use these mirrors, that subset of userswould need to replace and remove references to the mirror repository each timethey want to contribute their changes back to the project. This is suboptimal.## Usage### InstallationFollow poetry's [plugin installation instructions](https://python-poetry.org/docs/master/plugins/#using-plugins), replacing `poetry-plugin` with `poetry-plugin-pypi-mirror`.### Specifying a mirrorTo specify a mirror, you can either define `plugins.pypi_mirror.url` in poetry's[configuration](https://python-poetry.org/docs/configuration/), or setenvironment variable `POETRY_PYPI_MIRROR_URL` to the full URL for a [PEP503](https://peps.python.org/pep-0503/)-compatible mirror. When both are set theenvironment variable will be used.#### Poetry config example```toml[plugins][plugins.pypi_mirror]url = &quot;https://example.org/repository/pypi-proxy/simple/&quot;```... in [either](https://python-poetry.org/docs/configuration/) a project's`poetry.toml` (for per-project configuration), or the user's `config.toml`.#### Environment variable example```shellPOETRY_PYPI_MIRROR_URL=https://example.org/repository/pypi-proxy/simple/ poetry add pendulum```...or...```shellexport POETRY_PYPI_MIRROR_URL=https://example.org/repository/pypi-proxy/simple/poetry add cleo # uses mirror specified in first linepoetry lock     # also uses mirror specified in first line```## Compatibility*poetry-plugin-pypi-mirror* depends on poetry internals which can change betweenpoetry releases. It's important to ensure compatibility between the poetryversion in use and the plugin version in use.| Poetry version(s) | Compatible plugin version(s) ||-------------------|------------------------------|| &gt;= 1.3, &lt; 1.7     | ^0.3.3                       || &gt;= 1.3, &lt; 1.6     | ^0.3.1                       || ~1.2.1            | &lt; 0.3.0                      |## ContributingTo contribute, open a [pullrequest](https://github.com/arcesium/poetry-plugin-pypi-mirror/pulls).### Sign your workAll commits must be signed to be accepted. Your signature certifies that youhave the right to submit your contribution(s) to the project, in accordance withthe principles described in the [Developer Certificate ofOrigin](https://developercertificate.org/).```Developer Certificate of OriginVersion 1.1Copyright (C) 2004, 2006 The Linux Foundation and its contributors.Everyone is permitted to copy and distribute verbatim copies of thislicense document, but changing it is not allowed.Developer's Certificate of Origin 1.1By making a contribution to this project, I certify that:(a) The contribution was created in whole or in part by me and I    have the right to submit it under the open source license    indicated in the file; or(b) The contribution is based upon previous work that, to the best    of my knowledge, is covered under an appropriate open source    license and I have the right under that license to submit that    work with modifications, whether created in whole or in part    by me, under the same open source license (unless I am    permitted to submit under a different license), as indicated    in the file; or(c) The contribution was provided directly to me by some other    person who certified (a), (b) or (c) and I have not modified    it.(d) I understand and agree that this project and the contribution    are public and that a record of the contribution (including all    personal information I submit with it, including my sign-off) is    maintained indefinitely and may be redistributed consistent with    this project or the open source license(s) involved.```To sign your commits, use the template below to generate a signature, and thenadd that signature to your commit message(s):```Signed-off-by: Your Name &lt;Your.Name@example.com&gt;```You must use your true name. Pseudonyms are not permitted.If you have set `git`'s `user.name` and `user.email`, you can sign commitseasily at commit time using `git commit -s`.## See also* [python-poetry/poetry#1632](https://github.com/python-poetry/poetry/issues/1632) - poetry feature request to add support for global repository URL replacement</longdescription>
</pkgmetadata>