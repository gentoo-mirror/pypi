<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  &lt;br&gt;  &lt;img src=&quot;logo.png&quot; alt=&quot;PyPayment&quot; height=&quot;300&quot;&gt;&lt;/a&gt;  &lt;br&gt;  PyPayment  &lt;br&gt;&lt;/h1&gt;&lt;h4 align=&quot;center&quot;&gt;Payment providers API wrapper&lt;/h4&gt;&lt;p class=&quot;badges&quot; align=&quot;center&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/pypayment?color=orange&quot; alt=&quot;PyPI&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/pypayment?color=blueviolet&quot; alt=&quot;Python 3&quot;&gt;    &lt;img src=&quot;https://github.com/TimNekk/pypayment/actions/workflows/tests.yml/badge.svg&quot; alt=&quot;Tests&quot;&gt;    &lt;a href=&quot;https://deepsource.io/gh/TimNekk/pypayment/?ref=repository-badge}&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;DeepSource&quot; title=&quot;DeepSource&quot; src=&quot;https://deepsource.io/gh/TimNekk/pypayment.svg/?label=active+issues&amp;show_trend=true&amp;token=YlQEv_BbbqmICG5Xy3skch_c&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypayment.readthedocs.io&quot;&gt;Documentation&lt;/a&gt; •  &lt;a href=&quot;#providers&quot;&gt;Providers&lt;/a&gt; •  &lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt; •  &lt;a href=&quot;#quickstart&quot;&gt;Quickstart&lt;/a&gt; •  &lt;a href=&quot;#contributing&quot;&gt;Contributing&lt;/a&gt; •  &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt;**PyPayment** is a Python wrapper for API of different payment providers. It is designed to be a simple and easy to use library for developers to integrate payment into their applications.Main idea is to provide a unified interface for different payment providers.For more details see [documentation](https://pypayment.readthedocs.io).## Providers:- [Qiwi P2P](https://p2p.qiwi.com/)- [YooMoney](https://yoomoney.ru/)- [PayOk](https://payok.io/)- [BetaTransfer](https://betatransfer.io/)- [Lava](https://lava.kz/) *(under development)*## InstallationInstall the current version with [PyPI](https://pypi.org/project/pypayment/)```bashpip install -U pypayment```## QuickstartChoose payment provider and authorize. For example, for Qiwi```pythonfrom pypayment import QiwiPaymentQiwiPayment.authorize(&quot;my_secret_key&quot;)```Create a payment and get it's `url````pythonfrom pypayment import Payment, QiwiPaymentpayment: Payment = QiwiPayment(amount=100) # E.x. commission is 10%print(payment.url)  # https://oplata.qiwi.com/form/?invoice_uid=payment_unique_id```Wait for payment to be completed and get it's incomeUse `update()` method to update payment's `status` and `income````pythonfrom pypayment import PaymentStatuswhile payment.status != PaymentStatus.PAID:    input(&quot;Press Enter to update payment status and income&quot;)    payment.update()print(&quot;Payment is completed!&quot;)print(payment.income)  # 90.0```Summary```pythonfrom pypayment import Payment, QiwiPayment, PaymentStatusQiwiPayment.authorize(&quot;my_secret_key&quot;)payment: Payment = QiwiPayment(amount=100) # E.x. commission is 10%print(payment.url)  # https://oplata.qiwi.com/form/?invoice_uid=payment_unique_idwhile payment.status != PaymentStatus.PAID:    input(&quot;Press Enter to update payment status&quot;)    payment.update()print(&quot;Payment is completed!&quot;)print(payment.income)  # 90.0```## ContributingBug reports and/or pull requests are welcome## LicenseThe module is available as open source under the terms of the [Apache License, Version 2.0](https://opensource.org/licenses/Apache-2.0)</longdescription>
</pkgmetadata>