<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-emc2101/badge/?version=latest    :target: https://docs.circuitpython.org/projects/emc2101/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_EMC2101/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_EMC2101/actions    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackCircuitPython driver for EMC2101 brushless fan controllerDependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_* `Register &lt;https://github.com/adafruit/Adafruit_CircuitPython_Register&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://circuitpython.org/libraries&gt;`_.Installing from PyPI=====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-emc2101/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-emc2101To install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-emc2101To install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-emc2101Usage Example=============.. code-block:: python3    import time    import board    from adafruit_emc2101 import EMC2101    i2c = board.I2C()  # uses board.SCL and board.SDA    emc = EMC2101(i2c)    print(&quot;Setting fan speed to 25%&quot;)    emc.manual_fan_speed = 25    time.sleep(2)  # longer sleep to let it spin down from 100%    print(&quot;Fan speed&quot;, emc.fan_speed)Additional examples, including the use of the temperature look up table(LUT) can be found in the examples/ folder:* emc2101_lut_example.py* emc2101_set_pwm_freq.py* emc2101_simpletest.pyFor access to some additional properties, but without configuring the LUT,use the intermediate class EMC2101_EXT:.. code-block:: python3    import time    import board    from adafruit_emc2101 import EMC2101_EXT    i2c = board.I2C()  # uses board.SCL and board.SDA    emc = EMC2101_EXT(i2c)    print(&quot;External limit temp is&quot;, emc.external_temp_high_limit)    print(&quot;Setting external limit temp to 50C&quot;)    emc.external_temp_high_limit = 50When the temperature limits are exceeded the device sets the alert bitin the status register and (if configured to do so) will raise the ALERToutput pin as an interrupt.EMC2101_EXT defines properties for internal and external temperaturelimits, and has register definitions for all registers except the LUTitself. The EMC2101_LUT class includes this as well.The EMC2101_Regs class is intended for internal use, and defines registeraddresses.Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/emc2101/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_EMC2101/blob/master/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>