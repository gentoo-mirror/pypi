# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Open Source Vizier: Distributed service framework for blackbox optimization and research."

HOMEPAGE="https://github.com/google/vizier"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="algorithms benchmarks jax test tf"
DEPENDENCIES="dev-python/attrs[${PYTHON_USEDEP}]
	dev-python/absl-py[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/protobuf[${PYTHON_USEDEP}]
	dev-python/portpicker[${PYTHON_USEDEP}]
	dev-python/grpcio[${PYTHON_USEDEP}]
	dev-python/grpcio-tools[${PYTHON_USEDEP}]
	dev-python/googleapis-common-protos[${PYTHON_USEDEP}]
	dev-python/sqlalchemy[${PYTHON_USEDEP}]
	algorithms? ( dev-python/emukit[${PYTHON_USEDEP}] )
	algorithms? ( dev-python/scipy[${PYTHON_USEDEP}] )
	algorithms? ( dev-python/cvxpy[${PYTHON_USEDEP}] )
	algorithms? ( dev-python/cvxopt[${PYTHON_USEDEP}] )
	algorithms? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	algorithms? ( dev-python/evojax[${PYTHON_USEDEP}] )
	algorithms? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	benchmarks? ( dev-python/ale-py[${PYTHON_USEDEP}] )
	benchmarks? ( dev-python/dopamine-rl[${PYTHON_USEDEP}] )
	benchmarks? ( dev-python/nats-bench[${PYTHON_USEDEP}] )
	benchmarks? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	jax? ( dev-python/jax[${PYTHON_USEDEP}] )
	jax? ( dev-python/jaxlib[${PYTHON_USEDEP}] )
	jax? ( dev-python/jaxopt[${PYTHON_USEDEP}] )
	jax? ( dev-python/flax[${PYTHON_USEDEP}] )
	jax? ( dev-python/optax[${PYTHON_USEDEP}] )
	jax? ( dev-python/chex[${PYTHON_USEDEP}] )
	jax? ( dev-python/tfp-nightly[${PYTHON_USEDEP}] )
	test? ( dev-python/coverage[${PYTHON_USEDEP}] )
	test? ( dev-python/mock[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	tf? ( dev-python/tensorflow[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
