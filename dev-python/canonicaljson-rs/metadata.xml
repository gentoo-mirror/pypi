<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>canonicaljson-rs################Python package leveraging our Canonical JSON implementation in Rust.In order to validate content signatures of our data, Canonical JSON gives us a predictable JSON serialization.And Rust allows us to reuse the same implementation between our server in Python (this package) and our diverse clients (Rust, Android/iOS, JavaScript).Usage=====.. code-block ::    pip install canonicaljson-rs.. code-block :: python    &gt;&gt;&gt; import canonicaljson    &gt;&gt;&gt;    &gt;&gt;&gt; canonicaljson.dumps({&quot;h√©o&quot;: 42})    '{&quot;h\\u00e9o&quot;:42}'* ``canonicaljson.dumps(obj: Any) -&gt; str``* ``canonicaljson.dump(obj: Any, stream: IO) -&gt; str``Development===========We rely on a specific Python builder that automates everything around Rust bindings... code-block ::    pip install maturinIn order to install the package in the current environment:.. code-block ::    maturin developRelease=======Update version in ``Cargo.toml`` and:.. code-block ::    vim Cargo.toml    git ci -am &quot;Bump version&quot;    git tag -a vX.Y.Z    git push vX.Y.ZPublish wheel for your host OS:.. code-block ::    maturin build    maturin publishPublish wheels of all architectures on PyPi:1. Download artifacts from Github Actions run on tag vX.Y.Z. On the bottom of the `Publish wheels` workflow summary page, download the `pypi_files.zip` and extract it locally.2. Run `twine check --strict pypi_files/*.whl`3. Publish on PyPi with `twine upload --skip-existing pypi_files/*.whl`See Also========* https://github.com/gibson042/canonicaljson-spec* The code to build a ``serde_json::Value`` from a ``pyo3::PyObject`` was greatly inspired by Matthias Endler's `hyperjson &lt;https://github.com/mre/hyperjson/&gt;`_Other specs:* https://github.com/Kinto/kinto-signer/blob/6.1.0/kinto_signer/canonicaljson.py* https://searchfox.org/mozilla-central/rev/b2395478c/toolkit/modules/CanonicalJSON.jsm* https://github.com/matrix-org/python-canonicaljsonLicense=======* Mozilla Public License 2.0</longdescription>
</pkgmetadata>