<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ReadMe Generator Python library  The cdspyreadme library is a Python package dedicated for authors who want to submit data in VizieR or AAS.The package builts ReadMe, standardized tables (in ASCII aligned format) or MRT tables from tables whichcan be in different formats (CSV, votable, FITS, astropy table, MRT)by G.Landais (CDS) 24 june 2016## RequirementsThe cdspyreadme library works with Python3 and requires :- astropy- numpy**Notes**: for large tables, we recommend to use the C- anafile package Anafile download: http://cdsarc.unistra.fr/ftp/sw/anafile.tar.gzAnafile documentation: http://cdsarc.unistra.fr/doc/anafile.htx## Installpython3 setup.py install --user## Examples```pythonimport cdspyreadmetablemaker = cdspyreadme.CDSTablesMaker()# add a tabletable = tablemaker.addTable(&quot;table.csv&quot;, description=&quot;my CSV table&quot;)# write table in CDS-ASCII aligned format (required)tablemaker.writeCDSTables()# Customize ReadMe outputtablemaker.title = &quot;catalogue title&quot;tablemaker.author = 'G.Landais'tablemaker.date = 2020tablemaker.abstract = &quot;This is my abstract...&quot;tablemaker.more_description = &quot;Additional information of the data context.&quot;tablemaker.putRef(&quot;II/246&quot;, &quot;2mass catalogue&quot;)tablemaker.putRef(&quot;http://...&quot;, &quot;external link&quot;)# Print ReadMetablemaker.makeReadMe()# Save ReadMe into a filewith open(&quot;ReadMe&quot;, &quot;w&quot;) as fd:    tablemaker.makeReadMe(out=fd)```#### add astropy table```pythonfrom astropy.table import Tableimport cdspyreadmeastropy_table = Table([(1.4845, 1.4835, -1.234),               (24.5,  18.2401, 23.426),               ('HD100', 'HD101', None)],              names=['ra', 'dec','name'])tablemaker = cdspyreadme.CDSTablesMaker()tablemaker.addTable(astropy_table, name=&quot;table1&quot;)# add an other local table (in VOTable) table2 = Table.read(&quot;table.vot&quot;)tablemaker.addTable(table2, name=&quot;table2&quot;)tablemaker.writeCDSTables()tablemaker.makeReadMe()```### use astropy Masked Column to remove values according criteria```pythonfrom astropy.table import Table, MaskedColumnimport cdspyreadmetablemaker = cdspyreadme.CDSTablesMaker()csv = Table.read(&quot;table.csv&quot;)csv.columns[0] = MaskedColumn(csv.columns[0], mask=[(val&gt;10) for val in csv.columns[0]])tablemaker.addTable(csv, name=&quot;data.cds&quot;)tablemaker.writeCDSTables()tablemaker.makeReadMe()```### Sexagesimal columnsFlag sexagesimal columns in ReadMe.The method transforms string columns (ie: ra_sexa, de_sexa) in columns RAh, Ram, RAs, DEsign, DEd, DEm, DEs.```pythonfrom astropy.table import Tableimport cdspyreadmetablemaker = cdspyreadme.CDSTablesMaker()csv = Table.read(&quot;table.csv&quot;)table = tablemaker.addTable(csv, name=&quot;data.cds&quot;)ra = table.get_column(&quot;ra_sexa&quot;)ra.setSexaRa()de = table.get_column(&quot;dec_sexa&quot;)de.setSexaDe()tablemaker.writeCDSTables()tablemaker.makeReadMe()```### add ASCII aligned table```pythonfrom astropy.table import Tableimport cdspyreadmetablemaker = cdspyreadme.CDSTablesMaker()ascii = cdspyreadme.CDSAsciiTable(&quot;table.ascii&quot;, &quot;table1&quot;, description=&quot;ascii table&quot;)table = tablemaker.addTable(ascii)tablemaker.writeCDSTables()tablemaker.makeReadMe()```## MRT exampleThe following example builds MRT table from a CSV table ```pythonfrom astropy.table import Tableimport cdspyreadmetablemaker = cdspyreadme.CDSTablesMaker()tablemaker.title = &quot;catalogue title&quot;tablemaker.author = 'G.Landais'csv = Table.read(&quot;table.csv&quot;)# rename columnscolra = csv[&quot;ra&quot;]colra.name = &quot;RAdeg&quot;colra.description=&quot;Right ascension&quot;colra.unit='deg'...table = tablemaker.addTable(ascii, name='table.mrt', description='csv file')tablemaker.toMRT()```### update column...```pythontable = tablemaker.addTable(...)column = table.get_column(&quot;ra&quot;)#Â modify formatcolumn.set_format(&quot;F10.6&quot;)# modify name and descriptioncolumn.name=&quot;raj2000&quot;column.description=&quot;right ascension in ICRS&quot;tablemaker.writeCDSTables()tablemaker.makeReadMe()```#### FITS update How to add columns description using TCOMMx cards -```pythonfrom astropy.io import fitsfrom astropy.table import Tableimport cdspyreadmetab = Table.read(&quot;catalogue.fits&quot;)fitstable = fits.open(&quot;catalogue.fits&quot;)hdu = fitstable[1]# update description from FITS headerfor i in range(len(tab.columns)):    tab.columns[i].description = hdu.header[&quot;TCOMM&quot;+str(i+1)]fits.close()tablemaker = cdspyreadme.CDSTablesMaker()table = tablemaker.addTable(tab)tablemaker = cdspyreadme.CDSTablesMaker()table = tablemaker.addTable(tab)tablemaker.writeCDSTables()```</longdescription>
</pkgmetadata>