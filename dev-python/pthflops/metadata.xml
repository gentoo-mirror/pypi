<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)  [![Test Pytorch Flops Counter](https://github.com/1adrianb/pytorch-estimate-flops/workflows/Test%20Pytorch%20Flops%20Counter/badge.svg)](https://travis-ci.com/1adrianb/pytorch-estimate-flops)[![PyPI](https://img.shields.io/pypi/v/pthflops.svg?style=flat)](https://pypi.org/project/pthflops/)# pytorch-estimate-flopsSimple pytorch utility that estimates the number of FLOPs for a given network. For now only some basic operations are supported (basically the ones I needed for my models). More will be added soon.All contributions are welcomed.## InstallationYou can install the model using pip:```bashpip install pthflops```or directly from the github repository:```bashgit clone https://github.com/1adrianb/pytorch-estimate-flops &amp;&amp; cd pytorch-estimate-flopspython setup.py install```Note: pytorch 1.8 or newer is recommended.## Example```pythonimport torchfrom torchvision.models import resnet18from pthflops import count_ops# Create a network and a corresponding inputdevice = 'cuda:0'model = resnet18().to(device)inp = torch.rand(1,3,224,224).to(device)# Count the number of FLOPscount_ops(model, inp)```Ignoring certain layers:```pythonimport torchfrom torch import nnfrom pthflops import count_opsclass CustomLayer(nn.Module):    def __init__(self):        super(CustomLayer, self).__init__()        self.conv1 = nn.Conv2d(5, 5, 1, 1, 0)        # ... other layers present inside will also be ignored    def forward(self, x):        return self.conv1(x)# Create a network and a corresponding inputinp = torch.rand(1,5,7,7)net = nn.Sequential(    nn.Conv2d(5, 5, 1, 1, 0),    nn.ReLU(inplace=True),    CustomLayer())# Count the number of FLOPs, jit mode:count_ops(net, inp, ignore_layers=['CustomLayer'])# Note: if you are using python 1.8 or newer with fx instead of jit, the naming convention changed. As such, you will have to pass ['_2_conv1']# Please check your model definition to account for this.# Count the number of FLOPs, fx mode:count_ops(net, inp, ignore_layers=['_2_conv1'])```</longdescription>
</pkgmetadata>