<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cabinetA Python library to easily store data across multiple projects in one or more JSON files.Supports email and event logging.## Features- Read and write data in the JSON files of your choice- Log to a file/directory of your choice without having to configure `logger` each time- Send/receive mail using `cabinet.Cabinet().mail()`## Structure- Data is stored in a `settings.json` file in the location of your choice- Logs are written to `{/path/to/cabinet}/log/LOG_DAILY_YYYY-MM-DD` by default  - this can be changed on a per-log basis## Installation and Setup```bash  python3 -m pip install cabinet  cabinet config```## Configuration- Upon first launch, will prompt you to choose a location for `settings.json`. You can change this at any time with `cabinet config`.### edit() shortcuts- see example below to enable something like `cabinet edit shopping` from the terminal  - or `cabinet.Cabinet().edit(&quot;shopping&quot;)`, rather than `cabinet.Cabinet().edit(&quot;/home/{username}/path/to/shopping.md&quot;)````# example only; these commands will be unique to your setup{  &quot;path&quot;: {    &quot;edit&quot;: {      &quot;shopping&quot;: {        &quot;value&quot;: &quot;/home/{username}/path/to/shopping.md&quot;,      },      &quot;todo&quot;: {        &quot;value&quot;: &quot;/home/{username}/path/to/todo.md&quot;,      }    }  }}```### mail- It is NEVER a good idea to store your password in plaintext; for this reason, I strongly recommend a &quot;throwaway&quot; account that is only used for sending emails- Gmail (as of May 2022) and most other mainstream email providers won't work with this; for support, search for sending mail from your email provider with `smtplib`.- In `settings.json`, add the `email` object to make your settings file look like this example:```{    &quot;email&quot;: {        &quot;from&quot;: &quot;throwaway@example.com&quot;,        &quot;from_pw&quot;: &quot;example&quot;,        &quot;from_name&quot;: &quot;Raspberry Pi&quot;,        &quot;to&quot;: &quot;destination@protonmail.com&quot;,        &quot;smtp_server&quot;: &quot;example.com&quot;,        &quot;imap_server&quot;: &quot;example.com&quot;,        &quot;port&quot;: 123    }}```## Examples### `set````from cabinet import Cabinetcab = Cabinet()cab.set(&quot;employee&quot;, &quot;Tyler&quot;, &quot;salary&quot;, 7.25)```results in this structure in settings.json:```{    &quot;employee&quot;: {        &quot;Tyler&quot;: {            &quot;salary&quot;: 7.25        }    }}```### `get````from cabinet import Cabinetcab = Cabinet()print(cab.get(&quot;employee&quot;, &quot;Tyler&quot;, &quot;salary&quot;))``````&gt; python3 test.py&gt; 7.25```### `edit````from cabinet import Cabinetcab = Cabinet()# if set(&quot;path&quot;, &quot;edit&quot;, &quot;shopping&quot;, &quot;/path/to/shopping.md&quot;) has been called, this will edit the file assigned to that shortcut.# opens file in Vim, saves upon exitcab.edit(&quot;shopping&quot;)# or you can edit a file directly...cab.edit(&quot;/path/to/shopping.md&quot;)```### `mail````from cabinet import mailmail.send('Test Subject', 'Test Body')```### `log````from cabinet import Cabinetcab = Cabinet()# writes to a file named LOG_DAILY_YYYY-MM-DD in the default log folder (or cab.get('path', 'log')) inside a YYYY-MM-DD foldercab.log(&quot;Connection timed out&quot;) # defaults to 'info' if no level is setcab.log(&quot;This function hit a breakpoint&quot;, level=&quot;debug&quot;)cab.log(&quot;Looks like the server is on fire&quot;, level=&quot;critical&quot;)cab.log(&quot;This is fine&quot;, level=&quot;info&quot;)# writes to a file named LOG_TEMPERATUREcab.log(&quot;30&quot;, logName=&quot;LOG_TEMPERATURE&quot;)# writes to a file named LOG_TEMPERATURE in /home/{username}/weathercab.log(&quot;30&quot;, logName=&quot;LOG_TEMPERATURE&quot;, filePath=&quot;/home/{username}/weather&quot;)    # format    # 2021-12-29 19:29:27,896 — INFO — 30```## Dependencies- Python &gt;= 3.6- smtplib## Disclaimers- Although I've done quite a bit of testing, I can't guarantee everything that works on my machine will work on yours. Always back up your data to multiple places to avoid data loss.- If you find any issues, please contact me... or get your hands dirty and raise a PR!``````## Author- Tyler Woodfin  - [GitHub](https://www.github.com/tylerjwoodfin)  - [Website](http://tyler.cloud)</longdescription>
</pkgmetadata>