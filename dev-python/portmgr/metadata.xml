<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dckrmgr### PrerequisitesThe easiest way ist through [pip3](https://pypi.python.org/pypi/pip) (Ubuntu: `apt-get install python3-pip`):* [docker-py](https://github.com/docker/docker-py): `pip3 install docker-py`* [jsonschema](https://pypi.python.org/pypi/jsonschema): `pip3 install jsonschema`### Installation```git clone git@github.com:theascone/dckrmgr.gitmkdir -p /usr/local/src/dckrmv dckrmgr/* /usr/local/src/dckrln -s /usr/local/src/dckr/dckrmgr /usr/local/bin/dckrmgr```### Usage#### Dckrcnf.json**Example:**```{    &quot;name&quot;: &quot;phabricator&quot;,    &quot;image&quot;: {        &quot;name&quot;: &quot;theascone/docker_phabricator&quot;,        &quot;version&quot;: &quot;latest&quot;    },    &quot;hostname&quot;: &quot;phabricator.weiltoast.de&quot;,    &quot;environment&quot;: [        {            &quot;name&quot;: &quot;MYSQL_USER&quot;,              &quot;value&quot;: &quot;phabricator&quot;        },        {            &quot;name&quot;: &quot;MYSQL_PASS&quot;,            &quot;value&quot;: &quot;xyz&quot;        }    ],    &quot;volumes&quot;: [        {            &quot;host_path&quot;: &quot;var_log&quot;,            &quot;container_path&quot;: &quot;/var/log&quot;,            &quot;mode&quot;: &quot;rw&quot;        },        {            &quot;host_path&quot;: &quot;/var/run/docker.sock&quot;,            &quot;container_path&quot;: &quot;/tmp/docker.sock&quot;,            &quot;mode&quot;: &quot;ro&quot;        }    ],    &quot;ports&quot;: [        {            &quot;container_port&quot;: 22,            &quot;host_port&quot;: 22        },        {            &quot;container_port&quot;: 22280,            &quot;host_port&quot;: 22280        }    ],    &quot;links&quot;: [        {            &quot;name&quot;: &quot;mysql_phabricator&quot;,            &quot;alias&quot;: &quot;mysql&quot;        }    ]}```**Equivalents to Docker CLI:**&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;&lt;b&gt;Dckrcnf&lt;/b&gt;&lt;/td&gt;        &lt;td&gt;&lt;b&gt;Docker CLI&lt;/b&gt;&lt;/td&gt;        &lt;td&gt;&lt;b&gt;Comment&lt;/b&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;name&lt;/td&gt;        &lt;td&gt;--name&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;      image(name, version)      &lt;/td&gt;      &lt;td&gt;name:version&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;hostname&lt;/td&gt;      &lt;td&gt;--hostname (-h)&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;environment[(name, value)]&lt;/td&gt;      &lt;td&gt;--env (-e)&lt;/td&gt;      &lt;td&gt;Json Array&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;volumes[(host_path, container_path, mode)]&lt;/td&gt;      &lt;td&gt;--volume (-v) host_path:container_path:mode&lt;/td&gt;      &lt;td&gt;host_path can be relative to location of dckrcnf.json&lt;/td&gt;      &lt;td&gt;Json Array&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;ports[(container_port, host_port)]&lt;/td&gt;      &lt;td&gt;--publish (-p) host_port:container_port&lt;/td&gt;      &lt;td&gt;Json Array&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;links[(name, alias)]&lt;/td&gt;      &lt;td&gt;--link name:alias&lt;/td&gt;      &lt;td&gt;Json Array&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;### dckrmgr```dckrmgr [-h] [-D P_CWD_TOP] [-R] [-t] [-r] [-c] [-s]optional arguments:  -h, --help    show this help message and exit  -D P_CWD_TOP  Set working directory  -R            Use dckrsub.json files to recursively apply operations  -t            Stop container  -r            Remove container  -c            Create container  -s            Start container```</longdescription>
</pkgmetadata>