<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>##################Django-node-assets##################.. image:: https://badge.fury.io/py/django-node-assets.svg    :target: https://badge.fury.io/py/django-node-assets.. image:: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336    :target: https://pycqa.github.io/isort/.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black.. image:: https://github.com/whitespy/django-node-assets/actions/workflows/code_quality_check.yml/badge.svg    :target: https://github.com/whitespy/django-node-assets/actions/workflows/code_quality_check.yml|The Django application that allows to install and to serve static assets via Node.js package manager infrastructure.The application exposes management command to install dependencies from your **package.json** and several static filesfinders to find files from installed node packages and exclude metadata of node packages and unwanted files whenstatic files will be collected via Django`s **collectstatic** management command execution.Features--------- Avoiding vendoring static assets in your repository like jQuery plugins, Bootstrap toolkit, etc- Avoiding mess in **STATIC_ROOT** through exclusion node packages` metatadata and unwanted files- Installing dependencies by Django`s management commandInstallation------------.. code:: bash    $ pip install django-node-assetsConfiguration-------------Add 'django_node_assets' to your INSTALLED_APPS:.. code:: python    INSTALLED_APPS = [        ...        'django_node_assets',    ]Add NodeModulesFinder to STATICFILES_FINDERS:.. code:: python    STATICFILES_FINDERS = [        'django.contrib.staticfiles.finders.FileSystemFinder',        'django.contrib.staticfiles.finders.AppDirectoriesFinder',        'django_node_assets.finders.NodeModulesFinder',    ]Specify absolute path to the package.json file:.. code:: python    NODE_PACKAGE_JSON = '/var/assets/package.json'.. note::    A package.json must have the &quot;dependencies&quot; section and look like:    .. code:: json        {            &quot;dependencies&quot;: {                &quot;jquery&quot;: &quot;^3.2.1&quot;,                &quot;bootstrap&quot;: &quot;^3.3.5&quot;,            }        }    Details here: https://docs.npmjs.com/files/package.json#dependenciesSpecify the absolute path to a directory where the **nmpinstall** management command will install assets:.. code:: python    NODE_MODULES_ROOT = '/var/assets/node_modules'.. note::    A base dir must be called **node_modules**.Override path to the node package manager executable (optional).. code:: python    NODE_PACKAGE_MANAGER_EXECUTABLE = '/usr/local/bin/npm'.. note::    The node package manager must be already installed in your system.Usage-----Call the **nmpinstall** management command to install dependencies specified in the package.json.. code:: bash    $ python manage.py npminstallUse Django`s static template tag to link installed assets.. code:: html    {% load static %}    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;{% static 'bootstrap/dist/css/bootstrap.min.css' %}&quot;&gt;    &lt;!-- Some amazing markup --&gt;    &lt;script src=&quot;{% static 'jquery/dist/jquery.min.js' %}&quot;&gt;&lt;/script&gt;    &lt;script src=&quot;{% static 'bootstrap/dist/js/bootstrap.js' %}&quot;&gt;&lt;/script&gt;</longdescription>
</pkgmetadata>