<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># crankshaft[![GitHub Actions](https://github.com/reapermc/crankshaft/workflows/CI/badge.svg)](https://github.com/reapermc/crankshaft/actions)&gt; Flow control library for the Bolt scripting language.## Introduction**Minecraft version: `1.20.1`**This library implements various flow control APIs, which excel at speeding up prototyping and creating datapacks.```pyfrom crankshaft:api import Listenerfrom crankshaft:events import on_load, on_player_join, on_player_jumpfrom crankshaft:flags import is_sneaking@Listener(on_load)def load():    tellraw @a &quot;datapack loaded!&quot;@Listener(on_player_join)def player_join():    say &quot;I just joined the server!&quot;@Listener(on_player_jump)def player_jump():    if not is_sneaking:        tellraw @a &quot;JUMP!&quot;    else:        tellraw @a &quot;JUMP!... (I was sneaking as well)&quot;```## Installation```bashpip install crankshaft```## Getting startedThe library is designed to be used within any `bolt` script (either a `.mcfunction` or `bolt` file) inside a `bolt` enabled project.```yamlrequire:    - bolt    - crankshaftpipeline:    - mecha```Once you've required `bolt` and `crankshaft`, you are able to import the package's `api` module directly inside your bolt script.Most of the imports come from the `crankshaft:api` module as shown below.```pyfrom crankshaft:api import Listener```Now you're free to use the API!## DocumentationComing soon...&lt;!-- Docs available [here](./docs/home.md). --&gt;---License - [MIT](https://github.com/reapermc/crankshaft/blob/main/LICENSE)</longdescription>
</pkgmetadata>