<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Sphinx eager &quot;.. only::&quot; directive and other selective rendition extensions===========================================================================Project home page: https://github.com/pfalcon/sphinx_selective_excludeThe implementation of &quot;.. only::&quot; directive in Sphinx documentationgeneration tool is known to violate principles of least user surpriseand user expectations in general. Instead of excluding content earlyin the pipeline (pre-processor style), Sphinx defers exclusion untiloutput phase, and what's the worst, various stages processing ignore&quot;only&quot; blocks and their exclusion status, so they may leak unexpectedinformation into ToC, indexes, etc.There's multiple issues submitted upstream on this matter:* https://github.com/sphinx-doc/sphinx/issues/2150* https://github.com/sphinx-doc/sphinx/issues/1717* https://github.com/sphinx-doc/sphinx/issues/1488* etc.They are largely ignored by Sphinx maintainers.This projects tries to rectify situation on users' side. It actuallychanges the way Sphinx processes &quot;only&quot; directive, but does thiswithout forking the project, and instead is made as a standardSphinx extension, which a user may add to their documentation config.Unlike normal extensions, extensions provided in this packagemonkey-patch Sphinx core to work in a way expected by users.eager_only----------The core extension provided by the package is called `eager_only` andis based on the idea by Andrea Cassioli (see bugreports above) toprocess &quot;only&quot; directive as soon as possible during parsing phase.This approach has some drawbacks, like producing warnings like&quot;WARNING: document isn't included in any toctree&quot; if &quot;only&quot; is usedto shape up a toctree, or the fact that changing a documentationbuilder (html/latex/etc.) will almost certainly require completerebuild of documentation. But these are relatively minor issuescomparing to completely broken way &quot;only&quot; works in upstream Sphinx.modindex_exclude----------------&quot;only&quot; directive allows for fine-grained conditional exclusion, butsometimes you may want to exclude entire module(s) at once. Even ifyou wrap an entire module description in &quot;only&quot; directive, like:    .. only: option1        .. module:: my_module            ...You will still have an HTML page generated, albeit empty. It may alsogo into indexes, so will be discoverable by users, leading to lessthan ideal experience. `modindex_exclude` extension is design toresolve this issue, by making sure that any reference of a moduleis excluded from Python module index (&quot;modindex&quot;), as well asgeneral cross-reference index (&quot;genindex&quot;). In the latter case,any symbol belong to a module will be excluded. Unlike `eager_only`extension which appear to have issued with &quot;latexpdf&quot; builder,`modindex_exclude` is useful for PDF, and allows to get cleanerindex for PDF, just the same as for HTML.search_auto_exclude-------------------Even if you exclude soem documents from toctree:: using only::directive, they will be indexed for full-text search, so user mayfind them and get confused. This plugin follows very simple ideathat if you didn't include some documents in the toctree, thenyou didn't want them to be accessible (e.g. for a particularconfiguration), and so will make sure they aren't indexed either.This extension depends on `eager_only` and won't work without it.Note that Sphinx will issue warnings, as usual, for any documentsnot included in a toctree. This is considered a feature, and givesyou a chance to check that document exclusions are indeed rightfor a particular configuration you build (and not that you forgotto add something to a toctree).Summary-------Based on the above, sphinx_selective_exclude offers extension to letyou:* Make &quot;only::&quot; directive work in an expected, intuitive manner, using  `eager_only` extension.* However, if you apply only:: to toctree::, excluded documents will  still be available via full-text search, so you need to use  `search_auto_exclude` for that to work as expected.* Similar to search, indexes may also require special treatment, hence  there's the `modindex_exclude` extension.Most likely, you will want to use all 3 extensions together - if youreally want build subsets of docimentation covering sufficiently differentconfigurations from a single doctree. However, if one of them is enoughto cover your usecase, that's OK to (and why they were separated into3 extensions, to follow KISS and &quot;least surprise&quot; principles and tonot make people deal with things they aren't interested in). In this case,however remember there're other extensions, if you later hit a usecasewhen they're needed.Usage-----To use these extensions, add https://github.com/pfalcon/sphinx_selective_excludeas a git submodule to your project, in documentation folder (whereSphinx conf.py is located). Alternatively, commit sphinx_selective_excludedirectory instead of making it a submodule (you will need to pick upany project updates manually then).Add following lines to &quot;extensions&quot; settings in your conf.py (youlikely already have some standard Sphinx extensions enabled):    extensions = [        ...        'sphinx_selective_exclude.eager_only',        'sphinx_selective_exclude.search_auto_exclude',        'sphinx_selective_exclude.modindex_exclude',    ]As discussed above, you may enable all extensions, or one by one.Please note that to make sure these extensions work well and avoid producingoutput docs with artifacts, it is IMPERATIVE to remove cached doctree ifyou rebuild documentation with another builder (i.e. with different outputformat). Also, to stay on safe side, it's recommended to remove old doctreeanyway before generating production-ready documentation for publishing. Todo that, run something like:    rm -rf _build/doctrees/A typical artificat when not following these simple rules is that contentof some sections may be missing. If you face anything like that, justremember what's written above and remove cached doctrees.</longdescription>
</pkgmetadata>