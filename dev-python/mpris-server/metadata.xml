<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ‚ñ∂Ô∏è Add MPRIS integration to media players`mpris_server` provides adapters to integrate [MPRIS](https://specifications.freedesktop.org/mpris-spec/2.2/) support inyour media player or device. By supporting MPRIS in your app, you will allow Linux users to control all aspects ofplayback from the media controllers they already have installed.Whereas [existing MPRIS libraries for Python](https://github.com/hugosenari/mpris2) implement clients for apps withexisting MPRIS support, `mpris_server` is a library used to implement MPRIS support in apps that don't already have it.If you want to give your media player an MPRIS interface, then `mpris_server` is right for you.`mpris_server` is a fork of [Mopidy-MPRIS](https://github.com/mopidy/mopidy-mpris) that was extended and made into ageneral purpose library.Check out [`üì∫ cast_control`](https://github.com/alexdelorenzo/cast_control) for an app that uses `mpris_server`.## FeaturesImplements the following from the [MPRIS specification](https://specifications.freedesktop.org/mpris-spec/2.2/):* [x] MediaPlayer2* [x] MediaPlayer2.Player* [x] MediaPlayer2.Playlist* [x] MediaPlayer2.TrackListThe library also provides an event handler that emits `org.freedesktop.DBus.Properties.PropertiesChanged` in response tochanges in your media player. This allows for real-time updates from your media player to D-Bus.## Installation### Requirements- Linux / *BSD / [macOS](https://github.com/zbentley/dbus-osx-examples)- [D-Bus](https://www.freedesktop.org/wiki/Software/dbus/)- Python &gt;= 3.7- [PyGObject](https://pypi.org/project/PyGObject/)- `requirements.txt`#### Installing PyGObjectOn Debian-derived distributions like Ubuntu, install `python3-gi` with `apt`. On Arch, you'll want toinstall `python-gobject`.On macOS, install [`pygobject3`](https://formulae.brew.sh/formula/pygobject3) via `brew`. Note that `mpris_server` onmacOS hasn't been tested, but is theoretically possible to use.Use `pip` to install `PyGObject&gt;=3.34.0` if there are no installation candidates available in your vendor's packagerepositories.### PyPI`pip3 install mpris_server`### GitHubClone the repo, run `pip3 install -r requirements.txt`, followed by `python3 setup.py install`.## Usage### Implement `adapters.MprisAdapter`Subclass `adapters.MprisAdapter` and implement each method.After subclassing, pass an instance to an instance of `server.Server`.### Implement `events.EventAdapter`Subclass `adapters.EventAdapter`. This interface has a good default implementation, only override its methods if yourapp calls for it.If you choose to re-implement its methods, call `emit_changes()` with the corresponding interface and a `List[str]`of [properties](https://specifications.freedesktop.org/mpris-spec/2.2/Player_Interface.html) that changed.Integrate the adapter with your application to emit changes in your media player that DBus needs to know about. Forexample, if the user pauses the media player, be sure to call `EventAdapter.on_playpause()` in the app. DBus won't knowabout the change otherwise.### Create the Server and PublishCreate an instance of `server.Server`, pass it an instance of your `MprisAdapter`, and call `publish()` to publish yourmedia player via DBus.```python3mpris = Server('MyMediaPlayer', adapter=my_adapter)mpris.publish() ```Call `loop()` to enter the DBus event loop, or enter the DBus event loop elsewhere in your code.```python3mpris.loop() ```Or:```python3from gi.repository import GLibloop = GLib.MainLoop()loop.run()```### Example```python3from mpris_server.adapters import MprisAdapterfrom mpris_server.events import EventAdapterfrom mpris_server.server import Serverfrom mpris_server import Metadatafrom my_app import app  # custom app you want to integrateclass MyAppAdapter(MprisAdapter):  # Make sure to implement all methods on MprisAdapter, not just metadata()  def metadata(self) -&gt; Metadata:    ...  # and so onclass MyAppEventHandler(EventAdapter):  # EventAdapter has good default implementations for its methods.  # Only override the default methods if it suits your app.  def on_app_event(self, event: str):    # trigger DBus updates based on events in your app    if event == 'pause':      self.on_playpause()    ...  # and so on# create mpris adapter and initialize mpris servermy_adapter = MyAppAdapter()mpris = Server('MyApp', adapter=my_adapter)# initialize app integration with mprisevent_handler = MyAppEventHandler(root=mpris.root, player=mpris.player)app.register_event_handler(event_handler)# publish and servempris.loop()```## SupportWant to support this project and [other open-source projects](https://github.com/alexdelorenzo) like it?&lt;a href=&quot;https://www.buymeacoffee.com/alexdelorenzo&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; height=&quot;60px&quot; style=&quot;height: 60px !important;width: 217px !important;max-width:25%&quot; &gt;&lt;/a&gt;## License`mpris_server` is released under the AGPLv3, see [`LICENSE`](/LICENSE). Message me if you'd like to use this projectwith a different license.</longdescription>
</pkgmetadata>