# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="anomalib - Anomaly Detection Library"

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="core dev docs full loggers notebooks openvino test"
DEPENDENCIES="dev-python/omegaconf[${PYTHON_USEDEP}]
	>=dev-python/rich-13.5.2[${PYTHON_USEDEP}]
	dev-python/jsonargparse[${PYTHON_USEDEP}]
	dev-python/docstring-parser[${PYTHON_USEDEP}]
	dev-python/rich-argparse[${PYTHON_USEDEP}]
	core? ( dev-python/av[${PYTHON_USEDEP}] )
	core? ( dev-python/einops[${PYTHON_USEDEP}] )
	core? ( dev-python/FrEIA[${PYTHON_USEDEP}] )
	core? ( dev-python/imgaug[${PYTHON_USEDEP}] )
	core? ( dev-python/kornia[${PYTHON_USEDEP}] )
	core? ( >=dev-python/matplotlib-3.4.3[${PYTHON_USEDEP}] )
	core? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	core? ( >=dev-python/pandas-1.1.0[${PYTHON_USEDEP}] )
	core? ( dev-python/timm[${PYTHON_USEDEP}] )
	core? ( dev-python/lightning[${PYTHON_USEDEP}] )
	core? ( dev-python/torch[${PYTHON_USEDEP}] )
	core? ( dev-python/torchmetrics[${PYTHON_USEDEP}] )
	core? ( dev-python/open-clip-torch[${PYTHON_USEDEP}] )
	openvino? ( dev-python/openvino[${PYTHON_USEDEP}] )
	openvino? ( dev-python/nncf[${PYTHON_USEDEP}] )
	openvino? ( dev-python/onnx[${PYTHON_USEDEP}] )
	loggers? ( dev-python/comet-ml[${PYTHON_USEDEP}] )
	loggers? ( dev-python/gradio[${PYTHON_USEDEP}] )
	loggers? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	loggers? ( dev-python/wandb[${PYTHON_USEDEP}] )
	loggers? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/GitPython[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/ipykernel[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/ipywidgets[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/notebook[${PYTHON_USEDEP}] )
	docs? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	docs? ( dev-python/nbsphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/pandoc[${PYTHON_USEDEP}] )
	docs? ( <dev-python/sphinx-8.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-autodoc-typehints[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-book-theme[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx_design[${PYTHON_USEDEP}] )
	test? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-mock[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-sugar[${PYTHON_USEDEP}] )
	test? ( dev-python/coverage[${PYTHON_USEDEP}] )
	test? ( dev-python/tox[${PYTHON_USEDEP}] )
	full? ( dev-python/anomalib[${PYTHON_USEDEP}] )
	dev? ( dev-python/anomalib[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
