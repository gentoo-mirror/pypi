<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># statute-utils![Github CI](https://github.com/justmars/statute-utils/actions/workflows/main.yml/badge.svg)Philippine statutory law pattern matching and unit retrieval; utilized in [LawSQL dataset](https://lawsql.com).## DocumentationSee [documentation](https://justmars.github.io/statute-utils).## DevelopmentCheckout code, create a new virtual environment:```shpoetry add statute-utils # python -m pip install statute-utilspoetry update # install dependenciespoetry shell```## Some unit patterns```json title=&quot;Convention used when desiring to exclude appropriation laws.&quot;{  &quot;units&quot;: [    {        &quot;item&quot;: &quot;Container 1&quot;,        &quot;content&quot;: &quot;Appropriation laws are excluded.&quot;,    }  ]}``````json title=&quot;Convention used when no content found.&quot;UNITS_NONE = [    {        &quot;item&quot;: &quot;Container 1&quot;,        &quot;content&quot;: &quot;Individual provisions not detected.&quot;,    }]```## Use in Datasette### Add units to a database from a pre-made fileConsider an example `db.sqlite`:```py title=&quot;Assumes path-to-file.yml exists&quot;&gt;&gt;&gt; from sqlite_utils import Database&gt;&gt;&gt; from statute_utils import Statute&gt;&gt;&gt; f = Path().joinpath(path-to-file.yml)&gt;&gt;&gt; db = Database('db.sqlite')&gt;&gt;&gt; db[&quot;statutes&quot;].insert(Statute.from_file(f).make_row())# this will contain an 'html' column containing a semantic tree structure that can be styled via css```### Copy html/css files1. `tree.html` - Tree-building macros (which can be used for creating an html tree to represent the statute)2. `tree.css` - Sample css rulesets to use for the tree generated with the macrosCopy files to the Jinja environment where these can be reused:```text- /app--|  |--/static      |--tree.css # copy it here  |--/templates      |--tree.html # copy it here  |--db.sqlite```When datasette is served with:```jinjadatasette serve db.sqlite --template-dir=app/templates/ --static static:app/static```It becomes possible to import the macros file into a future files:```jinja title=&quot;app/templates/future.html&quot;{% from 'tree.html' import create_branches %}{{ create_branches(units|from_json) }} {# note that from_json is custom filter added in the Datasette environment as a one-off plugin}```### Add filters / custom functionsCreate a file in the plugins directory:```text- /app- /app--|  |--/static      |--tree.css  |--/templates      |--tree.html  |--/plugins      |--tree.py # new  |--db.sqlite```When datasette is served with:```jinjadatasette serve db.sqlite --plugins-dir=app/plugins/ {# plus the other arguments #}...```It becomes possible to use custom functions and filters found in `tree.py`.</longdescription>
</pkgmetadata>