<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django Lookup TablesEfficient storage and management of lookup tables used throughout an app.**Note:** This package is a work in progress (that's why it's not yet at version 1.0). I am active seeking contributions to help with making it more usable, see [&quot;Contributing&quot;](#contributing) below.# IMPORTANTThis software is still pre-release. Upgrades from one version to the next may create unstabilities in your project. If you have used any version prior to `1.0.0`, please read the [Release Notes for Beta Versions](docs/Betas.md).## InstallationInstall the package:```bash$ pip install django-lookup-tables```Add it to your installed apps:```pythonINSTALLED_APPS = (    ...    'lookup_tables',    ...)```## UsageThe primary use case for lookup tables is to create user-managed lists of options for models to choose from. Consider a model with a field called, for instance, `state`:```pythonfrom django.db import modelsfrom lookup_tables.fields import LookupTableItemFieldCHOICES = (('draft', 'draft'), ('published', 'published'))class Post(models.Model):    title = models.CharField(max_length=100)    state = models.CharField(choices=CHOICES)```While this is easy to build, changing the choices list requires rebuilding and redeploying your application.The above model could instead be written as:```pythonfrom django.db import modelsfrom lookup_tables.models import AbsractLookupTablefrom lookup_tables.fields import LookupFieldclass PostState(AbstractLookupTable):    passclass Post(models.Model):    title = models.CharField(max_length=100)    state = LookupField(PostState)```This will create a lookup table called `PostState` that can be administered by staff users. You can now set this field to any value from the `PostState` model.If you register your model in the app's `admin.py`:```pythonfrom django.contrib import adminfrom lookup_tables.admin import LookupAdminfrom .models import PostState@admin.register(PostState)class PostStateAdmin(LookupAdmin):    pass```... you will be able to modify the values in the table through the &quot;Post State&quot; link in the Django admin.`django-lookup-tables` integrates properly with forms out of the box, so all UI naturally gets up-to-date selection lists just like if you were using a `CharField` with a choices enum or tuple list.Each table has an arbitrary list of items. You can order them by setting the &quot;Sort Order&quot; field to any positive integer.## Using with Admin-Sortable2If you have `django-admin-sortable2` installed, you can take advantage of it's UI enhancements by configuring `django-lookup-tables` to use it. In your `settings.py`:```pythonINSTALLED_APPS = (    ...    'adminsortable2',    'lookup_tables',    ...)LOOKUP_TABLES = {    'USE_ADMIN_SORTABLE2': True,}```## Using with Django REST FrameworkFields on models will render the same way `CharField` does if you use the `drf_fields.LookupSerializerField` field on your serializer like so:```pythonclass PostSerializer(serializers.ModelSerializer):    class Meta:        fields = ('id', 'title', 'state')    state = LookupSerializerField(PostState)```By default, the field will send the `id` of the `LookupTableItem`. If you instead want to send the `name` property, add `DRF_REPRESENTATION_NAME_NOT_ID` to your `settings.py`:```pythonLOOKUP_TABLES = {    # ...    'DRF_REPRESENTATION_NAME_NOT_ID': True,    # ...}```The HTML UI provided by DRF will populate dropdowns, and the `OPTIONS` response handler will supply all key/value pairs available for the field:```jsonOPTIONS /api/posts/1/HTTP 200 OKAllow: GET, PUT, PATCH, DELETE, HEAD, OPTIONSContent-Type: application/jsonVary: Accept{    &quot;name&quot;: &quot;Post Instance&quot;,    &quot;description&quot;: &quot;&quot;,    &quot;renders&quot;: [        &quot;application/json&quot;,        &quot;text/html&quot;    ],    &quot;parses&quot;: [        &quot;application/json&quot;,        &quot;application/x-www-form-urlencoded&quot;,        &quot;multipart/form-data&quot;    ],    &quot;actions&quot;: {        &quot;PUT&quot;: {            &quot;id&quot;: {                &quot;type&quot;: &quot;integer&quot;,                &quot;required&quot;: false,                &quot;read_only&quot;: true,                &quot;label&quot;: &quot;ID&quot;            },            &quot;title&quot;: {                &quot;type&quot;: &quot;string&quot;,                &quot;required&quot;: true,                &quot;read_only&quot;: false,                &quot;label&quot;: &quot;Name&quot;,                &quot;max_length&quot;: 200            },            &quot;state&quot;: {                &quot;type&quot;: &quot;choice&quot;,                &quot;required&quot;: true,                &quot;read_only&quot;: false,                &quot;label&quot;: &quot;State&quot;,                &quot;choices&quot;: [                    {                        &quot;value&quot;: 14,                        &quot;display_name&quot;: &quot;Draft&quot;                    },                    {                        &quot;value&quot;: 18,                        &quot;display_name&quot;: &quot;Published&quot;                    }                ]            }        }    }}```## Sample AppYou can see a sample app using these fields buy running the following:```bash$ python manage.py migrate$ python manage.py loaddata fixtures/base.json$ python manage.py runserver```This app has the following endpoints:```/admin//api/mymodel//api/mymodel/&lt;id&gt;/```The username for the admin user is `admin`, and the password is `pass`.&lt;a name=&quot;contributing&quot;&gt;&lt;/a&gt;## ContributingI am actively seeking contributions to this package. Check the &quot;Issues&quot; section of the repository for my current hit list.If you have suggestions for other features I am open to hearing them. Use the &quot;Issues&quot; section of the repository to start a conversation.</longdescription>
</pkgmetadata>