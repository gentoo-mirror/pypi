<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># freeza-offset&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/HashLoad/freeza-offset/raw/master/assets/freeza-logo.png&quot; alt=&quot;freeza-offset&quot;/&gt;&lt;/p&gt;## What is it?**freeza-offset** is a Python package that provides a simple way to commit the offset consumed by Spark Streaming in Kafka's ConsumerGroup.## Main FeaturesHere are just a few of the things that freeza-offset does well:  - Commits the offset consumed in kafka  - Tracking Spark consumption lag at Kafka  - The offset is not just in control of the spark## Where to get itThe source code is currently hosted on GitHub at:https://github.com/HashLoad/freeza-offsetBinary installers for the latest released version are available at the [Python package index](https://pypi.org/project/freeza-offset) and on conda.```sh# condaconda install freeza-offset``````sh# PyPIpip install freeza-offset``````python# Databricksdbutils.library.installPyPI(&quot;freeza-offset&quot;)```## Dependencies- [kafka-python](https://pypi.org/project/kafka-python)## Installation from sourcesIn the `freeza-offset` directory (same one where you found this file aftercloning the git repo), execute:```shpython setup.py install```## Example:```shellpip install freeza-offset``````pythonfrom pyspark.sql import SparkSessionspark = SparkSession \    .builder \    .appName(&quot;FreezaCommitTest&quot;) \    .getOrCreate()``````pythondf = spark \  .readStream \  .format(&quot;kafka&quot;) \  .option(&quot;kafka.bootstrap.servers&quot;, &quot;kafka1:9092,kafka2:9092,kafka3:9092&quot;) \  .option(&quot;subscribe&quot;, &quot;topic-name&quot;) \  .option(&quot;startingOffsets&quot;, &quot;earliest&quot;) \  .option(&quot;kafka.group.id&quot;, &quot;spark-freeza-runner&quot;) \  .load() ``````pythondf.selectExpr(&quot;key&quot;, &quot;value&quot;)``````pythonqry = df.writeStream \    .format(&quot;console&quot;) \    .option(&quot;truncate&quot;,&quot;false&quot;) \    .start()``````pythonimport freezatr = freeza.start_commiter_thread(    query=qry,    bootstrap_servers=bootstrap_servers,    group_id=&quot;spark-freeza-commiter&quot;)``````pythontr.isAlive()```## Getting HelpFor usage questions, the best place to go to is open [new issue](https://github.com/HashLoad/freeza-offset/issues/new)## Contributing to freeza-offsetAll contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome.## License[MIT](LICENSE)</longdescription>
</pkgmetadata>