<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># hubspot-api-pythonPython [HubSpot API](https://developers.hubspot.com/docs/api/overview) v3 SDK(Client) files and sample appsSample Applications can be found in [Sample apps](https://github.com/HubSpot/sample-apps-list)## DocumentationSee the [API docs](https://developers.hubspot.com/docs/api/overview).## InstallationIf you just want to use the package, run:```bashpip install --upgrade hubspot-api-client```### RequirementsMake sure you have [Python 3.5+](https://docs.python.org/3/) and [pip](https://pypi.org/project/pip/) installed.## Quickstart### Configuring HubSpot client```pythonfrom hubspot import HubSpotapi_client = HubSpot(access_token='your_access_token')# or set your access token laterapi_client = HubSpot()api_client.access_token = 'your_access_token'```You'll need to create a [private app](https://developers.hubspot.com/docs/api/private-apps) to get your access token or you can obtain OAuth2 access token.#### Hapikey support:Please, note that hapikey is no longer supported after v5.1.0. You can get more info about hapikey sunset [here](https://developers.hubspot.com/changelog/upcoming-api-key-sunset). Also, plese, visit a [migration guide](https://developers.hubspot.com/docs/api/migrate-an-api-key-integration-to-a-private-app) if you need help with a migration process.### OAuth API#### Obtain OAuth2 access token:```pythonfrom hubspot.auth.oauth import ApiExceptiontry:    tokens = api_client.auth.oauth.tokens_api.create(        grant_type=&quot;authorization_code&quot;,        redirect_uri='http://localhost',        client_id='client_id',        client_secret='client_secret',        code='code'    )except ApiException as e:    print(&quot;Exception when calling create_token method: %s\n&quot; % e)```### CRM API#### Create contact:```pythonfrom hubspot.crm.contacts import SimplePublicObjectInputfrom hubspot.crm.contacts.exceptions import ApiExceptiontry:    simple_public_object_input = SimplePublicObjectInput(        properties={&quot;email&quot;: &quot;email@example.com&quot;}    )    api_response = api_client.crm.contacts.basic_api.create(        simple_public_object_input=simple_public_object_input    )except ApiException as e:    print(&quot;Exception when creating contact: %s\n&quot; % e)```#### Get contact by id:```pythonfrom hubspot.crm.contacts import ApiExceptiontry:    contact_fetched = api_client.crm.contacts.basic_api.get_by_id('contact_id')except ApiException as e:    print(&quot;Exception when requesting contact by id: %s\n&quot; % e)```#### Get custom objects page:```pythonfrom hubspot.crm.objects import ApiExceptiontry:    my_custom_objects_page = api_client.crm.objects.basic_api.get_page(object_type=&quot;my_custom_object_type&quot;)except ApiException as e:    print(&quot;Exception when requesting custom objects: %s\n&quot; % e)```#### Get all:`get_all` method is available for all objects (Companies, Contacts, Deals and etc).```pythonall_contacts = api_client.crm.contacts.get_all()```Please note that pagination is used under the hood to get all results.## Search:`do_search` method is available for all objects (Companies, Contacts, Deals and etc).### Example Search by date:```pythonimport hubspotfrom dateutil import parserfrom pprint import pprintfrom hubspot.crm.contacts import PublicObjectSearchRequest, ApiExceptionapi_client = hubspot.Client.create(access_token=&quot;YOUR_ACCESS_TOKEN&quot;)# timestamp in millisecondsdate = str(int(parser.isoparse(&quot;XXXX-XX-XXTXX:XX:XX.XXXZ&quot;).timestamp() * 1000))public_object_search_request = PublicObjectSearchRequest(    filter_groups=[        {            &quot;filters&quot;: [                {                    &quot;value&quot;: date,                    &quot;propertyName&quot;: &quot;lastmodifieddate&quot;,                    &quot;operator&quot;: &quot;EQ&quot;                }            ]        }    ], limit=10)try:    api_response = api_client.crm.contacts.search_api.do_search(public_object_search_request=public_object_search_request)    pprint(api_response)except ApiException as e:    print(&quot;Exception when calling search_api-&gt;do_search: %s\n&quot; % e)```### CMS API#### Get audit logs:```pythonfrom hubspot.cms.audit_logs import ApiExceptiontry:    audit_logs_page = api_client.cms.audit_logs.default_api.get_page()except ApiException as e:    print(&quot;Exception when calling cards_api-&gt;create: %s\n&quot; % e)```### Using utils#### Get OAuth url:```pythonfrom hubspot.utils.oauth import get_auth_urlauth_url = get_auth_url(    scopes=('contacts',),    client_id='client_id',    redirect_uri='http://localhost')```#### Validate HubSpot request signature[Example](./sample-apps/webhooks-app/src/routes/webhooks.py) of usage from [Webhooks Sample App](./sample-apps/webhooks-app):```pythonimport osfrom datetime import datetimefrom flask import requestfrom hubspot.utils.signature import SignatureSignature.is_valid(        signature=request.headers[&quot;X-HubSpot-Signature&quot;],        client_secret=os.getenv(&quot;HUBSPOT_CLIENT_SECRET&quot;),        request_body=request.data.decode(&quot;utf-8&quot;),        http_uri=request.base_url,        signature_version=request.headers[&quot;X-HubSpot-Signature-Version&quot;],        timestamp=datetime.now().timestamp())```### Retry middlewareYou can pass an instance of [urllib3.util.retry.Retry](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html) class to configure http client retries.With internal error retry middleware:```pythonfrom hubspot import HubSpotfrom urllib3.util.retry import Retryretry = Retry(    total=3,    backoff_factor=0.3,    status_forcelist=(500, 502, 504),)api_client = HubSpot(retry=retry)```Or with rate limit retry middleware:```pythonfrom hubspot import HubSpotfrom urllib3.util.retry import Retryretry = Retry(    total=5,    status_forcelist=(429,),)api_client = HubSpot(retry=retry)```### Convert response object to dict`to_dict` method is available for most response objects```pythoncontacts = api_client.crm.contacts.basic_api.get_page()for contact in contacts:    print(contact.to_dict())```## Sample AppsPlease, take a look at our [Sample apps](https://github.com/HubSpot/sample-apps-list)## ContributingInstall the package locally:```pip install -e .```Set up the development virtualenv:```make```Run tests:```make test```Run [Black](https://github.com/psf/black) for code formatting:```make fmt```</longdescription>
</pkgmetadata>