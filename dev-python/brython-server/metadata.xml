<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/BrythonServer/brython-server.svg?branch=master)](https://travis-ci.org/BrythonServer/brython-server)# Brython-Server**Brython-Server** is a Flask-based web application focused on providing a simplePython 3 development environment where source files are hosted on Github.You can try [Brython-Server](http://runpython.com)to get a feel for how it works.## Brief InstructionsWhen the page loads, you can begin writing Python 3 code right away. To execute your code, press the **run** button.### Github SupportTo load Python 3 source code hosted on Github, you must should first log in toGithub with the **login** button. Github will ask you to authorize Brython-Serverin the next page. To load your source, paste the Github URL of your source file or repository into the text control at the top of the page. Press `&lt;Enter&gt;` or the **refresh** button to retrieve the source from Github.You may make any changes you want to the source code and re-run it. If you wouldlike to save your work back to Github, just press the **commit** button.### Google Drive SupportThe Google Drive **load** and **save** buttons will activate Google Drive authentication and authorization dialog where you may confirm your desire to letBrython-Server access your Google Drive. This confirmation is required periodically.The Google Drive **load** button directs you to a standard Google Drive file pickingscreen. Only compatible text files are available to pick. Once you have selected a file,the URL for the file will be displayed in the upper left edit window.The Google Drive **save** button will upload any changes you have made to a file sinceyou downloaded it, but only if you own or have edit priveleges on the file. If you didn'tdownload a file first, the **save** button will prompt you for a new file name. In this case, Brython-Server will create a new file with your chosen name in the rootof your Google Drive.If you previously **load**-ed or refreshed an existing file from Google Drive then the**save** button will simply udate your file with any changes you have made since then.Authorizing Google Drive will also add the Brython-Server app to your Google Drive.This will give you a custom **new** file type in Google Drive, and a custom optionunder the Google Drive **Open with** context menu.Note: files that were not created by Brython-Server may not be opened from the **load**button unless you previously opened them with the Google Drive **Open with** contextmenu.Note: working with any Github repository or Google Drive source files will require youto have an account with these services. If you use these services to access filesthat are not modifiable by you, you will be able to edit them locally in theBrython-Server page but will not be able to commit or save any changes back to theiroriginal source unless you have the priveleges to do so.### TurtleBrython-Server supports the Python turtle to the extent that it is supported bythe underlying Brython interpreter. Its usage is simple, but slightly non-standard.For example:```pythonfrom brythonserver import turtlet = turtle.Turtle()t.forward(100)t.right(90)t.forward(100)turtle.done()```### GgameBrython-Server includes built-in support for the Ggame graphics engine. For example,a trivial program from the [Ggame documentation](https://ggame.readthedocs.io/en/latest/introduction.html):```pythonfrom ggame import App, ImageAsset, Sprite# Create a displayed object at 100,100 using an image assetSprite(ImageAsset(&quot;bunny.png&quot;), (100, 100))# Create the app, with a default stageAPP = App()# Run the appAPP.run()```## DeploymentThe best way to install Brython-Server is with pip and virtualenv. Create and activate your virtual environment then install Brython-Server with:```pythonpip install brython-server```### RequirementsThe essential requirements for Brython-Server are met when you install with pip.In addition, for a production install you will need [gunicorn](http://docs.gunicorn.org/en/stable/install.html).Brython-Server will use [Brython](https://github.com/brython-dev/brython) asits Python interpreter and and [Ggame](https://github.com/BrythonServer/ggame) as its graphics engine. The correct versions of each will automatically be usedwhen you install Brython-Server using pip.### Environment VariablesA full Brython-Server installation that is capable of interacting with Githubshould have several environment variables set for production use:Required for Github functionality:* githubtoken  (an optional Github personal access token)* githubsecret (Github oauth secret)* githubclientid (Github oauth client id)Required for Google Drive functionality:* googleclientid (Google Client ID)* googleapikey (Google API Key. Brython Server requires the drive/files   and filePicker APIs)* googleappid (Google Application ID)Required for creating a &quot;personalized&quot; Brython-Server instance:* sitetitle (A string that will be displayed as the &quot;name of the site&quot;)* sitecontact (An e-mail address to use for contact)* siteurl (A full URL to the website)* flasksecret (A Flask application secret key)Note: to generate a unique, random Flask secret key, enter the following ina Python console:```python&gt;&gt;&gt; import os&gt;&gt;&gt; os.urandom(24)```Use the string that results as the value of the flasksecret environment variable.### ExecutionTo run the server in stand-alone development mode (never in production!) execute (for example) from the Python 3 shell:```pythonPython 3.7.0 (default, Oct  4 2018, 21:19:26)[GCC 5.4.0 20160609] on linuxType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; from brythonserver.main import APPUpdate Brython scripts to verion 3.7.3&gt;&gt;&gt; APP.run(host=&quot;0.0.0.0&quot;, port=3000) * Serving Flask app &quot;brythonserver.main&quot; (lazy loading) * Environment: production   WARNING: This is a development server. Do not use it in a production deployment.   Use a production WSGI server instead. * Debug mode: off * Running on http://0.0.0.0:3000/ (Press CTRL+C to quit) ``` To run the server in a production environment, use gunicorn:```bash$ gunicorn -b 0.0.0.0:3000 -w 4   brythonserver.main:APP```## Development EnvironmentTo begin working with Brython Server in development environment:* Clone this repository and cd into it.* Create a virtual environment: `python3 -m venv ./env`* Activate the virtual environment: `source ./env/bin/activate`* Install the dependencies: `pip install -r requirements.txt`### Other DependenciesYour development environment will need black and standardjs to execute the `run_tests` and `run_js_tests` scripts (in the scripts folder).### ExecutionPrior to executing the server in your development environment you will have to perform the following manual steps to populate the Brython distribution fileswhere Brython Server can access them:```bashcd ~/workspace/brython-servermkdir -p brythonserver/static/brythoncd brythonserver/static/brythonpython3 -m brython --update```Now you should be able to run Brython Server in your development environment using a script similar to this:```bashexport githubclientid=&lt;insert your github client id here&gt;export githubsecret=&lt;insert your github secret here&gt;export githubtoken=&lt;insert your personal github token here&gt;export googleclientid='&lt;insert your google client id here&gt;.apps.googleusercontent.com'export googleapikey='&lt;insert your google api key here&gt;'export googleappid='&lt;insert your google app id here&gt;'export sitetitle=&quot;&lt;insert the name of your development site here&gt;&quot;export sitecontact=&lt;insert an e-mail address here&gt;export siteurl=&lt;insert the url for your development page here&gt;export PORT=&lt;use your port number here&gt;source ./brython-server/env/bin/activatecd ./brython-serverpip install -r requirements.txtpushd brythonserver/static/brythonbrython-cli installpopdpython3 wsgi.py```</longdescription>
</pkgmetadata>