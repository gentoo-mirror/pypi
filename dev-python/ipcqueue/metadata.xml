<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>IpcQueue========This package provides SYS V and POSIX message queues to exchange dataamong processes. Both queues have similar functionality with somedifferences. Queues are persistent in the kernel unless either queue isclosed/unlinked or system is shut down. Unlike `multiprocessing.Queue`,the same queue can be joined by different processes according to itsunique name/key, it's not necessary to fork main process. Be careful ifyou use signals in your application, because signal interrupts sendingor receiving message.Installation------------Requires Python CFFI, C compiler and Python header files.::    cd ipcqueue/    python setup.py installUsage-----::    &gt;&gt;&gt; from ipcqueue import posixmq    &gt;&gt;&gt; q = posixmq.Queue('/foo')    &gt;&gt;&gt; q.qsize()    0    &gt;&gt;&gt; q.put([1, 'A'], priority=1)    &gt;&gt;&gt; q.put([2, 'B'], priority=2)    &gt;&gt;&gt; q.put([3, 'C'], priority=1)    &gt;&gt;&gt; q.qsize()    3    &gt;&gt;&gt; q.get()    [2, 'B']    &gt;&gt;&gt; q.get()    [1, 'A']    &gt;&gt;&gt; q.get()    [3, 'C']    &gt;&gt;&gt; q.close()    &gt;&gt;&gt; q.unlink()    &gt;&gt;&gt; from ipcqueue import sysvmq    &gt;&gt;&gt; q = sysvmq.Queue(1)    &gt;&gt;&gt; q.qsize()    &gt;&gt;&gt; q.put([1, 'A'], msg_type=1)    &gt;&gt;&gt; q.put([2, 'B'], msg_type=2)    &gt;&gt;&gt; q.put([3, 'C'], msg_type=2)    &gt;&gt;&gt; q.put([4, 'D'], msg_type=1)    &gt;&gt;&gt; q.qsize()    4    &gt;&gt;&gt; q.get(msg_type=2)    [2, 'B']    &gt;&gt;&gt; q.get()    [1, 'A']    &gt;&gt;&gt; q.get()    [3, 'C']    &gt;&gt;&gt; q.get()    [4, 'D']    &gt;&gt;&gt; q.close()Documentation-------------http://pythonhosted.org/ipcqueueLicense-------3-clause BSD</longdescription>
</pkgmetadata>