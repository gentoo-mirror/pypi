<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;/docs/_static/Artesia_logo.jpg&quot; alt=&quot;Artesia&quot; width=&quot;200&quot; align=&quot;right&quot;&gt;[![PyPi](https://img.shields.io/pypi/v/hydropandas.svg)](https://pypi.python.org/pypi/hydropandas)[![PyPi Supported Python Versions](https://img.shields.io/pypi/pyversions/hydropandas)](https://pypi.python.org/pypi/hydropandas)[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/ArtesiaWater/hydropandas/master)[![hydropandas](https://github.com/ArtesiaWater/hydropandas/workflows/hydropandas/badge.svg)](https://github.com/ArtesiaWater/hydropandas/actions?query=workflow%3Ahydropandas)[![Codacy Badge](https://app.codacy.com/project/badge/Grade/c1b99f474bdc49b0a47e00e4e9f66c2f)](https://www.codacy.com/gh/ArtesiaWater/hydropandas/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ArtesiaWater/hydropandas&amp;utm_campaign=Badge_Grade)[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/c1b99f474bdc49b0a47e00e4e9f66c2f)](https://www.codacy.com/gh/ArtesiaWater/hydropandas/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ArtesiaWater/hydropandas&amp;utm_campaign=Badge_Coverage)[![Documentation Status](https://readthedocs.org/projects/hydropandas/badge/?version=latest)](https://hydropandas.readthedocs.io/en/latest/?badge=latest)[![Format: isort](https://img.shields.io/badge/imports-isort-ef8336)](https://pycqa.github.io/isort/index.html)[![Format: Black](https://img.shields.io/badge/code_style-black-black)](https://github.com/psf/black)[![Linter: flake8](https://img.shields.io/badge/linter-flake8-yellowgreen)](https://flake8.pycqa.org/)[![Linter: ruff](https://img.shields.io/badge/linter-ruff-red)](https://github.com/charliermarsh/ruff)# HydroPandasPython tools for hydrological measurement data.## IntroductionThe HydroPandas package allows users to store observation data at multiple locations in a single object: ObsCollection.An ObsCollection makes it easier to analyse, visualise and export the observation data.An ObsCollection is a pandas DataFrame extended with custom methods and attributes related to hydrological timeseries.The HydroPandas package also provides convenient read functions for Dutch hydrological data from:- [BRO](https://www.broloket.nl)- [DINO](https://www.dinoloket.nl)- FEWS PI-XML- [KNMI](https://www.knmi.nl/kennis-en-datacentrum/achtergrond/data-ophalen-vanuit-een-script)- MODFLOW groundwater models- IMOD groundwater models- [Pastastore](https://github.com/pastas/pastastore)- [waterinfo](https://waterinfo.rws.nl/)- WISKI csv files## InstallInstall the module with pip:`pip install hydropandas`HydroPandas requires `pandas`, `scipy`, `matplotlib`, `tqdm`, `requests` and `colorama`.For some functionality additional packages are required:- `geopandas`: for dealing with shapefiles- `pastastore`: for reading or storing data from PastaStore- `bokeh`, `branca`, `folium`: for interactive maps- `flopy`: for reading data from MODFLOW models- `xarray`: for loading data from REGISFor installing in development mode, clone the repository and install bytyping `pip install -e .` from the module root directory.For installing all the optional packages use `pip install -e .[full]`.## Get in touch- Questions on HydroPandas (&quot;How can I?&quot;) can be asked and answered on [Github Discussions](https://github.com/ArtesiaWater/hydropandas/discussions).- Bugs, feature requests and other improvements can be posted as [Github Issues](https://github.com/ArtesiaWater/hydropandas/issues).- Find out how to contribute to HydroPandas at our [Contribution page](https://hydropandas.readthedocs.io/en/stable/contribute.html).## ExamplesImporting a groundwater time series from the BRO using the BRO-id and the tube number:```pythonimport hydropandas as hpdgw_bro = hpd.GroundwaterObs.from_bro(&quot;GMW000000041261&quot;, 1)```Or import all groundwater time series from the BRO within a certain extent:```pythonoc = hpd.read_bro(extent=(117850, 118180, 439550, 439900))```## The Obs classThe Obs class holds the measurements and metadata for one timeseries. There arecurrently 5 specific Obs classes for different types of measurements:- GroundwaterObs: for groundwater measurements- WaterQualityObs: for groundwater quality measurements- WaterlvlObs: for surface water level measurements- ModelObs: for &quot;observations&quot; from a MODFLOW model- MeteoObs: for meteorological observations- PrecipitationObs: for precipitation observations, subclass of MeteoObs- EvaporationObs: for evaporation observations, subclass of MeteoObsEach of these Obs classes is essentially a pandas DataFrame with additionalmethods and attributes related to the type of measurement that it holds.Each Obs object also contain specific methods to read data from specific sources.## The ObsCollection classThe ObsCollection class, as the name implies, represents a collection of Obsclasses, e.g. 10 timeseries of the groundwater level in a certain area. TheObsCollection is also a pandas DataFrame in which each timeseries is storedin a different row. Each row contains metadata (e.g. latitude and longitudeof the observation point) and the Obs object (DataFrame) that holds themeasurements. It is recommended to let an ObsCollection contain only one Obstype, e.g. to create an ObsCollection for 10 GroundwaterObs, and a separateObsCollection for 5 PrecipitationObs.Like the Obs class, the ObsCollection class contains a bunch of methods forreading data from different sources. See the next section for supported datasources.## Authors- Onno Ebbens, Artesia- Ruben Caljé, Artesia- Davíd Brakenhoff, Artesia- Martin Vonk, Artesia</longdescription>
</pkgmetadata>