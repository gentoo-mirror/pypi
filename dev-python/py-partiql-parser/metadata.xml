<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-partiql-parserA tokenizer/parser/executor for the PartiQL-language, in Python.Much beta, such wow. Feel free to raise any issues you encounter.## S3 Usage```pythonimport jsonfrom py_partiql_parser import S3SelectParseroriginal_json = json.dumps({&quot;a1&quot;: &quot;b1&quot;, &quot;a2&quot;: &quot;b2&quot;})parser = S3SelectParser(source_data={&quot;s3object&quot;: original_json})result = parser.parse(&quot;SELECT * FROM s3object&quot;)```## DynamoDB Usage```pythonimport jsonfrom py_partiql_parser import DynamoDBStatementParseroriginal_json = json.dumps({&quot;a1&quot;: &quot;b1&quot;, &quot;a2&quot;: &quot;b2&quot;})parser = DynamoDBStatementParser(source_data={&quot;table1&quot;, original_json})result = parser.parse(&quot;SELECT * from table1 WHERE a1 = ?&quot;, parameters=[{&quot;S&quot;: &quot;b1&quot;}])```## MeatThe important logic of this library can be found here: https://github.com/bblommers/py-partiql-parser/blob/main/py_partiql_parser/_internal/parser.pyIt is implemented as a naive, dependency-free, TDD-first tokenizer.## Outstanding - Support for functions such as `count(*)` - Support for CSV conversion. A start has been made in `_internal/csv_converter.py` - .. and I'm sure many other things.## NotesThe first iteration of this library was based on the spec, found here: https://partiql.org/assets/PartiQL-Specification.pdfAWS doesn't follow its own spec though, most notably: - a file containing a list (with multiple JSON documents) cannot be queried normally (`select *` returns everything, but you cannot `select key` for each document in the list) - `select values` is not supported</longdescription>
</pkgmetadata>