<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Bump'R: Bump and release versions[![Build Status](https://github.com/noirbizarre/bumpr/actions/workflows/main.yml/badge.svg?tag=0.3.8)](https://github.com/noirbizarre/bumpr/actions/workflows/main.yml)[![codecov](https://codecov.io/gh/noirbizarre/bumpr/branch/master/graph/badge.svg?token=G8u0QBT1Sj)](https://codecov.io/gh/noirbizarre/bumpr)[![Documentation Status](https://readthedocs.org/projects/bumpr/badge/?version=0.3.8)](https://bumpr.readthedocs.io/en/0.3.8/?badge=latest)![PyPI - Last version](https://img.shields.io/pypi/v/bumpr)![PyPI - License](https://img.shields.io/pypi/l/bumpr)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/bumpr)Bump'R is a version bumper and releaser allowing in a single command:- Clean-up release artifact- Bump version and tag it- Build a source distribution and upload on PyPI- Update version for a new development cycleBump'R intend to be customizable with the following features:- Optionnal test suite run before bump- Customizable with a config file- Overridable by command line- Extensible with hooks## CompatibilityBump'R requires Python `&gt;=3.7` (and `&lt;4.0`)## InstallationYou can install Bump'R with pip:```consolepip install bumpr```## UsageYou can use directly the command line to setup every parameter:```consolebumpr fake/__init__.py README.rst -M -ps dev```But Bump'R is designed to work with a configuration file (`bumpr.rc` by defaults).Some features are only availables with the configuration file like:- commit message customization- hooks configuration- multiline test, clean and publish commandsHere's an exemple:```ini[bumpr]file = fake/__init__.pyvcs = gittests = toxpublish = python setup.py sdist register uploadclean =    python setup.py clean    rm -rf *egg-info build distfiles = README.rst[bump]unsuffix = truemessage = Bump version {version}[prepare]suffix = devmessage = Prepare version {version} for next development cycle[changelog]file = CHANGELOG.rstbump = {version} ({date:%Y-%m-%d})prepare = In development[readthedoc]id = fake```This way you only have to specify which part you want to bump on thecommand line:```consolebumpr -M  # Bump the majorbumpr     # Bump the default part aka. patch```## DocumentationThe documentation is hosted on Read the Docs:- [Stable](https://bumpr.readthedocs.io/en/stable/) [![Stable documentation status](https://readthedocs.org/projects/bumpr/badge/?version=stable)](https://bumpr.readthedocs.io/en/stable/?badge=stable)- [Development](https://bumpr.readthedocs.io/en/0.3.8/) [![Latest documentation Status](https://readthedocs.org/projects/bumpr/badge/?version=0.3.8)](https://bumpr.readthedocs.io/en/0.3.8/?badge=latest)</longdescription>
</pkgmetadata>