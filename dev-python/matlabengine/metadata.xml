<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MATLAB Engine API for PythonThe MATLAB&amp;reg; Engine API for Python&amp;reg; provides a package to integrate MATLAB functionality directly with a Python application, creating an interface to call functions from your MATLAB installation from Python code. ---## Requirements### Required MathWorks Products&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;* MATLAB release R2023b### Required 3rd Party Products&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;* Python 3.9, 3.10, or 3.11    * Supported Python versions by MATLAB release can be found [here](https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/support/sysreq/files/python-compatibility.pdf).---## Install### WindowsMATLAB Engine API for Python can be installed directly from the Python Package Index.&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;```bash$ python -m pip install matlabengine==23.2.1```### Linux&amp;reg; Prior to installation, check the default install location of MATLAB by calling ```matlabroot``` in a MATLAB Command Window. By default, Linux installs MATLAB at:&lt;br&gt;&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;```/usr/local/MATLAB/R2023b```When MATLAB is not installed in the default location, the bin/*architecture* directory within the MATLAB root directory must be added to the environment variable LD_LIBRARY_PATH. The path can be added to the environment variable within the shell startup configuration file (for example, .bashrc for bash shell or .tcshrc for tcsh).```bash# in .bashrcexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:&lt;matlabroot&gt;/bin/glnxa64``````bash# in .tcshrcsetenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:&lt;matlabroot&gt;/bin/glnxa64```MATLAB Engine API for Python can be installed directly from the Python Package Index.&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;```bash$ python -m pip install matlabengine==23.2.1```### macOSPrior to installation, check the default install location of MATLAB by calling ```matlabroot``` in a MATLAB Command Window. By default, macOS installs MATLAB at:&lt;br&gt;&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;```/Applications/MATLAB_R2023b.app```When MATLAB is not installed in the default location, the bin/*architecture* directory within the MATLAB root directory must be added to the environment variable DYLD_LIBRARY_PATH. The path can be added to the environment variable within the shell startup configuration file (for example, .bashrc for bash shell or .tcshrc for tcsh).```bash# in .bashrcexport DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:&lt;matlabroot&gt;/bin/maci64``````bash# in .tcshrcsetenv DYLD_LIBRARY_PATH ${DYLD_LIBRARY_PATH}:&lt;matlabroot&gt;/bin/maci64```MATLAB Engine API for Python can be installed directly from the Python Package Index.&lt;!-- MUST_BE_UPDATED_EACH_RELEASE (Search repo for this string) --&gt;```bash$ python -m pip install matlabengine==23.2.1```---## Getting Started* Start Python.* Import the ```matlab.engine``` package into the Python session.* Start a new MATLAB process by calling ```start_matlab```. The ```start_matlab``` function returns a Python object which enables you to pass data and call functions executed by MATLAB.```python&gt;&gt;&gt; import matlab.engine&gt;&gt;&gt; eng = matlab.engine.start_matlab()&gt;&gt;&gt; eng.sqrt(4.0)2.0```* Call either the ```exit``` or ```quit``` function to stop the engine. Exiting Python with an engine running stops the engine and its MATLAB processes.```python&gt;&gt;&gt; eng.quit()```See [Start and Stop MATLAB Engine for Python](https://www.mathworks.com/help/matlab/matlab_external/start-the-matlab-engine-for-python.html) for advanced startup examples.---## ExamplesYou can call any MATLAB function directly and return the results to Python. ```python&gt;&gt;&gt; eng.plus(2, 3)5&gt;&gt;&gt; eng.isprime(37)True&gt;&gt;&gt; eng.gcd(100.0, 80.0, nargout=3)(20.0, 1.0, -1.0)```See [Call MATLAB Functions from Python](https://www.mathworks.com/help/matlab/matlab_external/call-matlab-functions-from-python.html) for more usage examples.---## LimitationsLimitations of the MATLAB Engine API for Python can be found [here](https://www.mathworks.com/help/matlab/matlab_external/limitations-to-the-matlab-engine-for-python.html).---## TroubleshootingSee [Troubleshoot MATLAB Errors in Python](https://www.mathworks.com/help/matlab/matlab_external/troubleshoot-matlab-errors-in-python.html) for troubleshooting assistance.---## LicenseThe license is available in the LICENSE.txt file within this repository.---## SupportTechnical issues or enhancement requests can be submitted [here](https://github.com/mathworks/matlab-engine-for-python/issues). ---Copyright &amp;copy; 2022 MathWorks, Inc. All rights reserved.Linux&amp;reg; is the registered trademark of Linus Torvalds in the U.S. and other countries.Mac OS is a trademark of Apple Inc., registered in the U.S. and other countries.&quot;Python&quot; and the Python logos are trademarks or registered trademarks of the Python Software Foundation, used by MathWorks with permission from the Foundation.</longdescription>
</pkgmetadata>