<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Welcome to PyTestArchPyTestArch is an open source library that allows users to define architectural rules and test their code against them. It is generally inspired by [ArchUnit](https://www.archunit.org/).## Installation GuidePyTestArch is available via [PyPI](https://pypi.org/project/pytestarch/) and can be installed e.g. via pip: `pip install pytestarch`.## Usage GuideThree steps are required to test an architectural rule:1) Create an evaluable representation of the source code you want to test```from pytestarch import get_evaluable_architectureevaluable = get_evaluable_architecture(&quot;/home/dummy/project&quot;, &quot;/home/dummy/project/src&quot;)```This will scan all python files under /home/dummy/project/src for imports and build an internal representation that canlater be queried. The first parameter /home/dummy/project helps PyTestArch to differentiate between internal and external dependencies. This evaluable can be used for multiple architectural rule checks; if you are using [pytest](https://docs.pytest.org/en/7.1.x/),you could use a fixture for this evaluable object.2) Define an architectural rule```from pytestarch import Rulerule = Rule() \        .modules_that() \        .are_named(&quot;src.moduleB&quot;) \        .should_not() \        .be_imported_by_modules_that() \        .are_sub_modules_of(&quot;src.moduleA&quot;) ```This rule represents the architectural requirements that a module named &quot;src.moduleB&quot; should not be imported by any modulethat is a submodule of &quot;src.moduleA&quot;, excluding &quot;src.moduleA&quot; itself.3) Evaluate your code against this rule```rule.assert_applies(evaluable)```That's it!</longdescription>
</pkgmetadata>