<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Event-driven acquisition (EDA)'event-driven-acquisition' is a Python library for advanced microscope control routines to enableacquisitions to react to specific biological events of interest.More information on the project it was first used on can be found in the [bioRxiv article](https://www.biorxiv.org/content/10.1101/2021.10.04.463102v1).See the [Documentation](https://event-driven-acquisition.readthedocs.io/en/latest/index.html) for more details.## Components of EDA### AnalyzersAnalyzers receive an image or images from the microscope. Their task is to reduce the information inthese images to a single or a set of parameters. These parameters are passed on to interpreters.### InterpretersAn interpreter receives parameters from an analyzer and uses these to take a decision for how toproceed with acquisition. This decision is passed on to an actuator. The interpretation can forexample take into account the temporal context of results from the analyzer.### ActuatorsThe responsibility of an actuator is both to handle start/stop of acquisitions and to apply thedecisions from an interpreter to the ongoing acquisition.## Installing Event-driven acquisition1) Install the latest version of [micro-manager2.0](https://micro-manager.org/wiki/Micro-Manager_Nightly_Builds)2) `pip install eda_plugin`3) Install the Micro-Manager plugins:   1) `&gt;&gt;&gt; import eda_plugin`   2) `&gt;&gt;&gt; eda_plugin.install_mm_plugins()`   3) Choose the main Micro-Manager folder in the file dialog (e.g. C:\Program Files\Micro-Manager-2.0)4) Run micro-manager with the zmq server ([pycromanager installation](https://github.com/micro-manager/pycro-manager/blob/master/README.md))5) Run the PythonEventServer from Plugins -&gt; Developer Tools -&gt; Python Event ServerNow you can run one of the examples```pythonimport eda_plugineda_plugin.examples.basic()# or if you have CUDA and tensorflow installededa_plugin.examples.pyro()```Or construct your own EDA loop e.g.```python    import sys    from PyQt5 import QtWidgets    from eda_plugin.utility.event_bus import EventBus    import eda_plugin.utility.settings    from eda_plugin.eda_gui import EDAMainGUI    from eda_plugin.interpreters.frame_rate import BinaryFrameRateInterpreter    from eda_plugin.analysers.image import ImageAnalyser    from eda_plugin.actuators.micro_manager import MMActuator, TimerMMAcquisition    eda_plugin.utility.settings.setup_logging()    app = QtWidgets.QApplication(sys.argv)    event_bus = EventBus()    gui = EDAMainGUI(event_bus, viewer=True)    actuator = MMActuator(event_bus, TimerMMAcquisition)    analyser = ImageAnalyser(event_bus)    interpreter = BinaryFrameRateInterpreter(event_bus)    gui.show()    actuator.gui.show()    interpreter.gui.show()    sys.exit(app.exec_())```</longdescription>
</pkgmetadata>