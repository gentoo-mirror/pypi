<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># len8[![PyPi version](https://img.shields.io/pypi/v/len8.svg)](https://pypi.python.org/pypi/len8/)[![PyPI - Status](https://img.shields.io/pypi/status/len8)](https://pypi.python.org/pypi/len8/)[![GitHub last commit](https://img.shields.io/github/last-commit/parafoxia/len8)](https://github.com/parafoxia/len8)[![License](https://img.shields.io/github/license/parafoxia/len8.svg)](https://github.com/parafoxia/len8/blob/main/LICENSE)[![CI](https://github.com/parafoxia/len8/actions/workflows/ci.yml/badge.svg)](https://github.com/parafoxia/len8/actions/workflows/ci.yml)[![Maintainability](https://api.codeclimate.com/v1/badges/9ec0deb12d512a60e6af/maintainability)](https://codeclimate.com/github/parafoxia/len8/maintainability)[![Test Coverage](https://api.codeclimate.com/v1/badges/9ec0deb12d512a60e6af/test_coverage)](https://codeclimate.com/github/parafoxia/len8/test_coverage)[![Downloads](https://pepy.tech/badge/len8)](https://pepy.tech/project/len8)A utility for keeping line lengths within [PEP 8](https://www.python.org/dev/peps/pep-0008/#maximum-line-length) standards.## Features- An easy-to-use CLI (command-line interface)- Check a single file, directory, or multiple files and directories- Exclude files and directories from being checked- Set different maximum lengths for both code and documentation- Minimal dependencies## Installation**You need Python 3.6.0 or greater to run len8.**To install the latest stable version of len8, use the following command:```shpip install len8```You can also install the latest development version using the following command:```shpip install git+https://github.com/parafoxia/len8```You may need to prefix these commands with a call to the Python interpreter depending on your OS and Python configuration.## QuickstartTo get started checking your Python projects with len8:#### Using the terminal```sh# Check all files in the CWDlen8 .# Check all files in `tests` directory and `stats.py` file in CWDlen8 tests stats.py# Check all files in two particular directorieslen8 my_package tests# Excluding file 'config.py' and directory 'secrets'# By default '.venv', 'venv', and '.nox' are excludedlen8 -x config.py,secrets .# Check 'project' dir and increase maximum allowed line lengths# Note that line lengths for comments and docs stay at 72len8 -l project         # Increase to 88 (black's default)len8 -ll /home/project  # Increase to 99 (max allowed by PEP 8)# Check using custom line lengthslen8 -c 150 .     # Increase code to 150len8 -d 100 .     # Increase docs to 100len8 -ll -d 99 .  # Increase code and docs to 99# Check only one file 'important.py'len8 important.pylen8 ./dir/important.py# Check using multiple flags at oncelen8 -lx ignoreme.py ./project_dir```#### In a Python script```pyfrom len8 import Checker# Instantiate a new Checker, with strict mode set to Truechecker = Checker(strict=True)# Set attributes after instantiationchecker.extend = 2checker.exclude = [&quot;excluded_dir&quot;]checker.strict = False# Set line lengths after instantiationchecker.set_lengths(code=100, docs=80)# Checks everything in the cwdbad_lines = checker.check(&quot;.&quot;)# Because strict mode is set to False and no error is raised, we# print the returned value from the check methodprint(bad_lines)```## Configurationlen8 supports toml configuration files, by default `pyproject.toml` in your projectroot will be used. You may specify a different configuration file via the `--config`cli flag.#### Available configuration options:- `include`: An array of files/directories len8 should check.- `exclude`: An array of files/directories to exclude from checking.- `code-length`: The maximum line length for code.- `docs-length`: The maximum line length for comments and documentation.- `strict`: Whether or not len8 should raise an exception if lines are too long.```toml[tool.len8]include = [&quot;myapp&quot;]exclude = [&quot;secrets&quot;, &quot;testing&quot;]code-length = 88docs-length = 69strict = true```It's easy to take advantage of configuration files from a Python script as well.```pyfrom len8 import Checker, Config# Validchecker = Checker.from_config(&quot;./myconfig.toml&quot;)# Also validcfg = Config(&quot;./myconfig.toml&quot;)checker = Checker.from_config(cfg)```## Contributinglen8 is open to contributions. To find out where to get started, have a look at the [contributing guide](https://github.com/parafoxia/len8/blob/main/CONTRIBUTING.md).## LicenseThe len8 module for Python is licensed under the [BSD 3-Clause License](https://github.com/parafoxia/len8/blob/main/LICENSE).</longdescription>
</pkgmetadata>