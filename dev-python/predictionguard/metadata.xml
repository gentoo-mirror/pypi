<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Prediction Guard - Python ClientThis package provides functionality developed to simplify interfacing with [Prediction Guard](https://www.predictionguard.com/) in Python 3.## DocumentationSee the [API documentation](https://docs.predictionguard.com/python).## InstallationThe package can be installed with `pip`:```bashpip install --upgrade predictionguard```### Requirements- Python 3.6+## Quick StartTo use this library, you must have an access token and specify it as a string when creating the `pg.Client` object. Access tokens can be created through the Prediction Guard platform (link coming soon). This is a basic example that:1. Instantiates a Prediction Guard client2. Defines some example model input/ output3. Creates a prediction proxy endpoint4. Uses the endpoint to make a prediction```pythonimport predictionguard as pg# Initialize a Prediction Guard client.client = Client(token=&lt;your access token&gt;)# Create some examples illustrating the kind of predictions you# want to make (domain/ use case specific).examples = [ {   &quot;input&quot;: {     &quot;phrase&quot;: &quot;I'm so excited about Prediction Guard. It's gonna be awesome!&quot;   },   &quot;output&quot;: {     &quot;sentiment&quot;: &quot;POS&quot;   } }, {   &quot;input&quot;: {     &quot;phrase&quot;: &quot;AI development without Prediction Guard is bad. It's really terrible.&quot;   },   &quot;output&quot;: {     &quot;sentiment&quot;: &quot;NEG&quot;   } }]# Create a prediction &quot;proxy.&quot; This proxy will save your examples, evaluate# SOTA models to find the best one for your use case, and expose the best model# at an endpoint corresponding to the proxy.client.create_proxy(task='sentiment', name='my-sentiment-proxy', examples=examples)# Now your ready to start getting reliable, future proof predictions. No fuss!client.predict(name='test-client-sentiment4', data={ &quot;phrase&quot;: &quot;Isn't this great! I'm so happy I'm using Prediction Guard&quot;})```</longdescription>
</pkgmetadata>