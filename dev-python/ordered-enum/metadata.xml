<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>ordered_enum============[![CI](https://github.com/woodruffw/ordered_enum/actions/workflows/ci.yml/badge.svg)](https://github.com/woodruffw/ordered_enum/actions/workflows/ci.yml)[![Downloads](https://pepy.tech/badge/ordered-enum)](https://pepy.tech/project/ordered-enum)**ordered_enum** is a small library for adding (total) orderings to `enum.Enum`s.It provides two ordering behaviors:* `ordered_enum.OrderedEnum`: total ordering by definition* `ordered_enum.ValueOrderedEnum`: &quot;total&quot; ordering by member values## Installation**ordered_enum** requires Python 3.7 or newer.```bashpip3 install ordered_enum```## UsageTo use **ordered_enum**, just use `OrderedEnum` or `ValueOrderedEnum` as your parent class:```pythonfrom ordered_enum import OrderedEnumclass State(OrderedEnum):    Disabled = 4    Loaded = 3    Waiting = 2    Running = 1    Dead = 0assert(State.Disabled &lt; State.Loaded)assert(sorted([State.Dead, State.Waiting]) == [State.Waiting, State.Dead])````OrderedEnum` doesn't require `@enum.unique` (or unique values at all); it uses the order ofdefinition to impose an ordering between members.If you'd like to impose an ordering based on member values, you can use `ValueOrderedEnum` instead:```pythonimport enumfrom ordered_enum import ValueOrderedEnum@enum.uniqueclass State(ValueOrderedEnum):    Disabled = 4    Loaded = 3    Waiting = 2    Running = 1    Dead = 0assert(State.Disabled &gt; State.Loaded)assert(sorted([State.Waiting, State.Dead]) == [State.Dead, State.Waiting])````ValueOrderedEnum` **does** require unique values, which can be enforced via `@enum.unique`.Failing to make a `ValueOrderedEnum`'s values unique will result in a silently broken ordering.## CaveatsAs mentioned above, `ordered_enum.OrderedEnum` provides an ordering of enum values based on their orderof definition in the class. This means that:1. Enum values doesn't have to be unique for **ordered_enum** to work2. Enum values can be heterogeneously typed2. Moving enum values around changes their orderingTherefore, you should either not depend on a specific ordering **or** ensure that yourorder of definition is the order you'd like.</longdescription>
</pkgmetadata>