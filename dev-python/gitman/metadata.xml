<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## OverviewGitman is a language-agnostic dependency manager using Git. It aims to serve as a submodules replacement and provides advanced options for managing versions of nested Git repositories.[![Demo](https://raw.githubusercontent.com/jacebrowning/gitman/main/docs/demo.gif)](https://asciinema.org/a/3DLos4HIU84P0AfFlZMYcgPus)[![Unix Build Status](https://img.shields.io/travis/com/jacebrowning/gitman/main.svg?label=unix)](https://travis-ci.com/jacebrowning/gitman)[![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/gitman/main.svg?label=window)](https://ci.appveyor.com/project/jacebrowning/gitman)[![Coverage Status](https://img.shields.io/coveralls/jacebrowning/gitman/main.svg)](https://coveralls.io/r/jacebrowning/gitman)[![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/jacebrowning/gitman.svg)](https://scrutinizer-ci.com/g/jacebrowning/gitman/?branch=main)[![PyPI License](https://img.shields.io/pypi/l/gitman.svg)](https://pypi.org/project/gitman)[![PyPI Version](https://img.shields.io/pypi/v/gitman.svg)](https://pypi.org/project/gitman)[![PyPI Downloads](https://img.shields.io/pypi/dm/gitman.svg?color=orange)](https://pypistats.org/packages/gitman)## Setup### Requirements- Python 3.8+- Git 2.8+ (with [stored credentials](http://gitman.readthedocs.io/en/latest/setup/git/))### InstallationInstall this tool globally with [pipx](https://pipxproject.github.io/pipx/) (or pip):```sh$ pipx install gitman```or add it to your [Poetry](https://python-poetry.org/docs/) project:```sh$ poetry add gitman```### ConfigurationGenerate a sample config file:```sh$ gitman init```or manually create one (`gitman.yml` or `.gitman.yml`) in the root of your working tree:```yamllocation: vendor/gitmansources:  - repo: &quot;https://github.com/kstenerud/iOS-Universal-Framework&quot;    name: framework    rev: Mk5-end-of-life  - repo: &quot;https://github.com/jonreid/XcodeCoverage&quot;    name: coverage    links:      - target: Tools/XcodeCoverage  - repo: &quot;https://github.com/dxa4481/truffleHog&quot;    name: trufflehog    rev: master    scripts:      - chmod a+x truffleHog/truffleHog.py  - repo: &quot;https://github.com/FortAwesome/Font-Awesome&quot;    name: fontawesome    rev: master    sparse_paths:      - &quot;webfonts/*&quot;  - repo: &quot;https://github.com/google/material-design-icons&quot;    name: material-design-icons    rev: mastergroups:  - name: code    members:      - framework      - trufflehog  - name: resources    members:      - fontawesome      - material-design-iconsdefault_group: code```Ignore the dependency storage location:```sh$ echo vendor/gitman &gt;&gt; .gitignore```## UsageSee the available commands:```sh$ gitman --help```### Updating DependenciesGet the latest versions of all dependencies:```sh$ gitman update```which will essentially:1. Create a working tree at `&lt;root&gt;`/`&lt;location&gt;`/`&lt;name&gt;`2. Fetch from `repo` and checkout the specified `rev`3. Symbolically link each `&lt;location&gt;`/`&lt;name&gt;` from `&lt;root&gt;`/`&lt;link&gt;` (if specified)4. Repeat for all nested working trees containing a config file5. Record the actual commit SHAs that were checked out (with `--lock` option)6. Run optional post-install scripts for each dependencywhere `rev` can be:- all or part of a commit SHA: `123def`- a tag: `v1.0`- a branch: `main`- a `rev-parse` date: `'main@{2015-06-18 10:30:59}'`Alternatively, get the latest versions of specific dependencies:```sh$ gitman update framework```or named groups:```sh$ gitman update resources```### Restoring Previous VersionsDisplay the versions that are currently installed:```sh$ gitman list```Reinstall these specific versions at a later time:```sh$ gitman install```### Deleting DependenciesRemove all installed dependencies:```sh$ gitman uninstall```## Resources- [Source code](https://github.com/jacebrowning/gitman)- [Issue tracker](https://github.com/jacebrowning/gitman/issues)- [Release history](https://github.com/jacebrowning/gitman/blob/main/CHANGELOG.md)</longdescription>
</pkgmetadata>