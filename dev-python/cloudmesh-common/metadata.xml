<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Cloudmesh Common[![image](https://img.shields.io/pypi/v/cloudmesh-common.svg)](https://pypi.org/project/cloudmesh-common/)[![Python](https://img.shields.io/pypi/pyversions/cloudmesh-common.svg)](https://pypi.python.org/pypi/cloudmesh-common)[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/cloudmesh/cloudmesh-common/blob/main/LICENSE)[![Format](https://img.shields.io/pypi/format/cloudmesh-common.svg)](https://pypi.python.org/pypi/cloudmesh-common)[![Status](https://img.shields.io/pypi/status/cloudmesh-common.svg)](https://pypi.python.org/pypi/cloudmesh-common)[![Travis](https://travis-ci.com/cloudmesh/cloudmesh-common.svg?branch=main)](https://travis-ci.com/cloudmesh/cloudmesh-common) ## Installation and DocumentationPlease note that several packages are available which are pointed to in theinstallation documentation.|  | Links ||---------------|-------|| Documentation | &lt;https://cloudmesh.github.io/cloudmesh-cloud&gt; || Code | &lt;https://github.com/cloudmesh/cloudmesh-cloud&gt; || Installation Instructions | &lt;https://github.com/cloudmesh/get&gt; |## Highlighted featuresThis library contains a number of useful functions and APIs that we highlighthere. They are used to interact with the system and provide a number offunctions to implement command line programs and shells.## ConsoleThe console provides convenient way to print colored messages types in theterminal, such as errors, info, and regular messages* [cloudmesh.common.console](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/console.py)```pythonfrom cloudmesh.common.console import ConsoleConsole.error(&quot;this is an error printed in red wth prefix ERROR:&quot;)Console.msg(&quot;this is a msg printed in black&quot;)Console.ok(&quot;this is an ok message printed in green&quot;)``` ## ShellWe have lots of shell commands that call linux commands, but also have aconvenient execution command that returns the results in a string.For more information we like you to inspect the source code:* [cloudmesh.common.Shell](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/Shell.py)```pythonfrom cloudmesh.common.Shell import Shellshell = Shell()print(shell.terminal_type())# prints after the command is finishedr = shell.execute('pwd') print(r)# prints while the command is executedr = shell.live('pwd') print(r)# open a new terminal and start the command ls in it (for OSX and Gnome)shell.terminal(&quot;ls&quot;)# an example of a build in commandshell.pip(&quot;install cloudmesh-common&quot;)``` We have many such build in commands, please see the source    ## PrinterA convenient way to print dictionaries and lists with repeatedentries as tables, csv, json, yaml. The dictionaries can even be hierarchical.* [cloudmesh.common.Printer](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/Printer.py)Let us assume we have ```pythondata = [    {        &quot;name&quot;: &quot;Gregor&quot;,        &quot;address&quot;: {            &quot;street&quot;: &quot;Funny Lane 11&quot;,            &quot;city&quot;: &quot;Cloudville&quot;        {    },    {        &quot;name&quot;: &quot;Albert&quot;,        &quot;address&quot;: {            &quot;street&quot;: &quot;Memory Lane 1901&quot;,            &quot;city&quot;: &quot;Cloudnine&quot;        }    }]```Then we can print it nicely with ```pythonprint(Printer.flatwrite(self.data,                    sort_keys=[&quot;name&quot;],                    order=[&quot;name&quot;, &quot;address.street&quot;, &quot;address.city&quot;],                    header=[&quot;Name&quot;, &quot;Street&quot;, &quot;City&quot;],                    output=&quot;table&quot;)          )```Other formats such as csv, json, dict are also supported.In addition we have also printers for printing attribute lists. Please consultthe source code.## StopWatchSee: https://colab.research.google.com/drive/1tG7IcP-XMQiNVxU05yazKQYciQ9GpMat#scrollTo=TZAjATZiQh4q&amp;uniqifier=1 for an example### Using Cloudmesh StopWatch Inline```pythonfrom cloudmesh.common.StopWatch import StopWatchimport timeStopWatch.start(&quot;a&quot;)time.sleep(3)StopWatch.stop(&quot;a&quot;)StopWatch.status(&quot;a&quot;, True)StopWatch.benchmark()```### Using Cloudmesh Benchmark wrapped in FunctionsIf it is not wrapped in functions, do not use it this way.``` pythonfrom cloudmesh.common.Benchmark import Benchmarkimport time  def b():  Benchmark.Start()  time.sleep(3)  Benchmark.Stop()def c():  Benchmark.Start()  time.sleep(1)  Benchmark.Stop() b() c()Benchmark.print()```* See also: [cloudmesh.common.StopWatch](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/StopWatch.py)    ## dotdict* [cloudmesh.common.dotdict](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/dotdict.py)One dimensional Dictionaries in dot format. ```pythonfrom cloudmesh.common.dotdict import doctict# convert a simple dict to a dotdictd = dotdict({&quot;name&quot;: &quot;Gregor&quot;})# Now you can sayprint(d[&quot;name&quot;])print(d.name)```## ssh* [cloudmesh.common.ssh](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/ssh)  * managing ssh config files  * managing authorized keys## utilVery useful functions are included in util* [cloudmesh.common.util](https://github.com/cloudmesh/cloudmesh-common/blob/main/cloudmesh/common/util.py)Especially useful are  * generating passwords  * banners  * yn_choices  * path_expansion  * grep (simple line matching)  * HEADING() which without parameter identifies the name of the function and   prints its name within a banner## Changes* added support for terminals with dark background## AcknowledgmentsContinued work was in part funded by the NSFCyberTraining: CIC: CyberTraining for Students and Technologiesfrom Generation Z with the award numbers 1829704 and 2200409.</longdescription>
</pkgmetadata>