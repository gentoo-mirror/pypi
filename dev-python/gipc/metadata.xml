<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>`Changelog &lt;https://github.com/jgehrcke/gipc/blob/master/CHANGELOG.rst&gt;`_ |`gipc @ PyPI &lt;https://pypi.python.org/pypi/gipc&gt;`_ |`gipc @ GitHub &lt;https://github.com/jgehrcke/gipc&gt;`_Overview========gipc (pronunciation as in “gipsy”) enables reliable child process managementand non-blocking inter-process communication in `gevent&lt;https://github.com/gevent/gevent&gt;`_-driven software projects.Using Python's `multiprocessing package&lt;https://docs.python.org/3/library/multiprocessing.html&gt;`_ in the context of acodebase that also uses gevent is error-prone and may break the application invarious `subtle ways&lt;https://gehrcke.de/gipc/#what-are-the-challenges-and-what-is-gipc-s-solution&gt;`_.With gipc, ``multiprocessing.Process``-based child processes can safely becreated anywhere within your gevent-powered application. The API of``multiprocessing.Process`` objects is provided in a gevent-cooperative way.Also, gipc provides a pipe-based transport layer for gevent-cooperativeinter-greenlet and inter-process communication. gipc is lightweight and easy tointegrate.From 2012 to 2018 gipc's home was at `bitbucket.org/jgehrcke/gipc&lt;https://bitbucket.org/jgehrcke/gipc&gt;`_. Since then development has continued onGitHub.Code examples=============Individual example programs can be found in the `examples&lt;https://github.com/jgehrcke/gipc/blob/master/examples&gt;`_ directory.Documentation=============Visit https://gehrcke.de/gipc for installation instructions, API docs, codeexamples, and in-depth information.Platform support================The current version of gipc works on CPython 3.7 through 3.11. It supportsgevent versions 1.5 and newer and supports both, Unix-like systems as well asWindows. On Linux and macOS, gipc also works with PyPy.gipc's continuous integration (CI) pipeline automatically executes a wide rangeof tests on Linux, Darwin (macOS), and Windows.Who uses it?============- `MXCuBE &lt;https://mxcube.github.io/mxcube/&gt;`_ (Macromolecular Xtallography Customized Beamline Environment)- `AIT-Core &lt;https://github.com/NASA-AMMOS/AIT-Core&gt;`_ (AMMOS Instrument Toolkit, developed for a number of ISS missions)- `pyethapp &lt;https://github.com/ethereum/pyethapp&gt;`_- `disco &lt;https://github.com/b1naryth1ef/disco&gt;`_ (Discord Python library)- `bliss &lt;https://bliss.gitlab-pages.esrf.fr/bliss/index.html&gt;`_- `esdocs &lt;https://github.com/jaddison/esdocs&gt;`_- `Wishbone &lt;https://wishbone.readthedocs.io&gt;`_- `Quantopian’s remote Python debugger &lt;https://github.com/quantopian/qdb&gt;`_- `Ajenti &lt;http://ajenti.org/&gt;`_- `HoneyBadgerBFT &lt;https://github.com/initc3/HoneyBadgerBFT-Python&gt;`_- `iDigBio &lt;https://github.com/iDigBio/idb-backend&gt;`_- `Chronology &lt;http://chronology.github.io&gt;`_- `GDriveFS &lt;https://github.com/dsoprea/GDriveFS&gt;`_- `NetCall &lt;https://github.com/aglyzov/netcall&gt;`_- `SiteScan &lt;https://github.com/jasonsheh/SiteScan&gt;`_- `PokeAlarm &lt;https://github.com/PokeAlarm/PokeAlarm&gt;`_- `gipcrpc &lt;https://github.com/studio-ousia/gipcrpc&gt;`_- `etcd-gevent &lt;https://github.com/wjsi/etcd-gevent&gt;`_Are you using gipc in your project? Please drop me a line!How to run the tests?=====================gipc's tests are written for `pytest &lt;http://pytest.org&gt;`_. With therepository's root directory being the current working directory you can run thetests like this::    $ pip install -r requirements-tests.txt    $ cd test &amp;&amp; pytest -vv --cov-report term --cov-report html --cov gipcContact &amp; help==============Your feedback and questions are highly appreciated. Please contact me via mailat jgehrcke@googlemail.com or use the `GitHub issue tracker&lt;https://github.com/jgehrcke/gipc/issues&gt;`_.Author &amp; license================gipc is written and maintained by `Jan-Philip Gehrcke &lt;https://gehrcke.de&gt;`_.It is licensed under the MIT license (see LICENSE file).I am thankful for all contributions (bug reports, code, great questions) from:- Guy Rozendorn- John Ricklefs- Heungsub Lee- Alex Besogonov- Jonathan Kamens- Akhil Acharya- John Porter- James Addison- Oliver Margetts- ... and others</longdescription>
</pkgmetadata>