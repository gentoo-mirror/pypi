<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**********************marshmallow-sqlalchemy**********************|pypi-package| |build-status| |docs| |marshmallow3| |black|Homepage: https://marshmallow-sqlalchemy.readthedocs.io/`SQLAlchemy &lt;http://www.sqlalchemy.org/&gt;`_ integration with the  `marshmallow &lt;https://marshmallow.readthedocs.io/en/latest/&gt;`_ (de)serialization library.Declare your models===================.. code-block:: python    import sqlalchemy as sa    from sqlalchemy.ext.declarative import declarative_base    from sqlalchemy.orm import scoped_session, sessionmaker, relationship, backref    engine = sa.create_engine(&quot;sqlite:///:memory:&quot;)    session = scoped_session(sessionmaker(bind=engine))    Base = declarative_base()    class Author(Base):        __tablename__ = &quot;authors&quot;        id = sa.Column(sa.Integer, primary_key=True)        name = sa.Column(sa.String, nullable=False)        def __repr__(self):            return &quot;&lt;Author(name={self.name!r})&gt;&quot;.format(self=self)    class Book(Base):        __tablename__ = &quot;books&quot;        id = sa.Column(sa.Integer, primary_key=True)        title = sa.Column(sa.String)        author_id = sa.Column(sa.Integer, sa.ForeignKey(&quot;authors.id&quot;))        author = relationship(&quot;Author&quot;, backref=backref(&quot;books&quot;))    Base.metadata.create_all(engine)Generate marshmallow schemas============================.. code-block:: python    from marshmallow_sqlalchemy import SQLAlchemySchema, auto_field    class AuthorSchema(SQLAlchemySchema):        class Meta:            model = Author            load_instance = True  # Optional: deserialize to model instances        id = auto_field()        name = auto_field()        books = auto_field()    class BookSchema(SQLAlchemySchema):        class Meta:            model = Book            load_instance = True        id = auto_field()        title = auto_field()        author_id = auto_field()You can automatically generate fields for a model's columns using `SQLAlchemyAutoSchema`.The following schema classes are equivalent to the above... code-block:: python    from marshmallow_sqlalchemy import SQLAlchemyAutoSchema    class AuthorSchema(SQLAlchemyAutoSchema):        class Meta:            model = Author            include_relationships = True            load_instance = True    class BookSchema(SQLAlchemyAutoSchema):        class Meta:            model = Book            include_fk = True            load_instance = TrueMake sure to declare `Models` before instantiating `Schemas`. Otherwise `sqlalchemy.orm.configure_mappers() &lt;https://docs.sqlalchemy.org/en/latest/orm/mapping_api.html&gt;`_ will run too soon and fail.(De)serialize your data=======================.. code-block:: python    author = Author(name=&quot;Chuck Paluhniuk&quot;)    author_schema = AuthorSchema()    book = Book(title=&quot;Fight Club&quot;, author=author)    session.add(author)    session.add(book)    session.commit()    dump_data = author_schema.dump(author)    print(dump_data)    # {'id': 1, 'name': 'Chuck Paluhniuk', 'books': [1]}    load_data = author_schema.load(dump_data, session=session)    print(load_data)    # &lt;Author(name='Chuck Paluhniuk')&gt;Get it now==========::   pip install -U marshmallow-sqlalchemyRequires Python &gt;= 3.7, marshmallow &gt;= 3.0.0, and SQLAlchemy &gt;= 1.3.0.Documentation=============Documentation is available at https://marshmallow-sqlalchemy.readthedocs.io/ .Project Links=============- Docs: https://marshmallow-sqlalchemy.readthedocs.io/- Changelog: https://marshmallow-sqlalchemy.readthedocs.io/en/latest/changelog.html- Contributing Guidelines: https://marshmallow-sqlalchemy.readthedocs.io/en/latest/contributing.html- PyPI: https://pypi.python.org/pypi/marshmallow-sqlalchemy- Issues: https://github.com/marshmallow-code/marshmallow-sqlalchemy/issuesLicense=======MIT licensed. See the bundled `LICENSE &lt;https://github.com/marshmallow-code/marshmallow-sqlalchemy/blob/dev/LICENSE&gt;`_ file for more details... |pypi-package| image:: https://badgen.net/pypi/v/marshmallow-sqlalchemy    :target: https://pypi.org/project/marshmallow-sqlalchemy/    :alt: Latest version.. |build-status| image:: https://github.com/marshmallow-code/marshmallow-sqlalchemy/actions/workflows/build-release.yml/badge.svg    :target: https://github.com/marshmallow-code/marshmallow-sqlalchemy/actions/workflows/build-release.yml    :alt: Build status.. |docs| image:: https://readthedocs.org/projects/marshmallow-sqlalchemy/badge/   :target: http://marshmallow-sqlalchemy.readthedocs.io/   :alt: Documentation.. |marshmallow3| image:: https://badgen.net/badge/marshmallow/3    :target: https://marshmallow.readthedocs.io/en/latest/upgrading.html    :alt: marshmallow 3 compatible.. |black| image:: https://badgen.net/badge/code%20style/black/000    :target: https://github.com/ambv/black    :alt: code style: black</longdescription>
</pkgmetadata>