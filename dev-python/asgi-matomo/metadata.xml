<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># asgi-matomo[![Packaging status](https://img.shields.io/pypi/v/asgi-matomo?color=%2334D058&amp;label=pypi%20package)](https://pypi.org/project/asgi-matomo)[![CI](https://github.com/spraakbanken/asgi-matomo/workflows/CI/badge.svg)](https://github.com/spraakbanken/asgi-matomo/actions?query=workflow%3ACI)[![codecov](https://codecov.io/gh/spraakbanken/asgi-matomo/branch/main/graph/badge.svg?token=MRJZVCJQF5)](https://codecov.io/gh/spraakbanken/asgi-matomo)Tracking requests with Matomo from ASGI apps.`MatomoMiddleware` adds tracking of all requests to Matomo to ASGI applications (Starlette, FastAPI, Quart, etc.). The intended usage is for api tracking (backends).**Note** If you serve HTML (directly or by templates), it is suggested to track those parts through Matomo's javascript tracking.**Installation**```bashpip install asgi-matomo```## What is trackedCurrently this middleware tracks:- `url`- `ua`: user_agent- `gt_ms`: mesaured as the time before and after this middleware call next in the asgi stack.- `send_image=0` for performance issues- `cvar` with at least `http_status_code` and `http_method` set.- `lang` if `accept-lang` is set- `cip` client ip, **requires** `access_token` to be given.- `action_name` that defaults to path, but can be specified.You can also pass variable to track by adding an `asgi_matomo`  dict in the `state` dict of the ASGI `scope`:```pythonscope = {  &quot;state&quot;: {    &quot;asgi_matomo&quot;: {      &quot;e_a&quot;: &quot;Playing&quot;,      &quot;cvar&quot;: {        &quot;your&quot;: &quot;custom&quot;,        &quot;data&quot;: &quot;here&quot;,      }    }  }}```The keys of the `asgi_matomo` dict is expected to be valid parameter for the [Matomo HTTP Tracking API](https://developer.matomo.org/api-reference/tracking-api). `cvar` is serialized with the standard `json` lib.You can also track time spent on different tasks with `trackers.PerfMsTracker`.```pythonimport asynciofrom starlette.applications import Starlettefrom starlette.responses import JSONResponsefrom starlette.routing import Routefrom starlette.middleware import Middlewarefrom asgi_matomo import MatomoMiddlewarefrom asgi_matomo.trackers import PerfMsTrackerasync def homepage(request):    async with PerfMsTracker(scope=request.scope, key=&quot;pf_srv&quot;):        # fetch/compute data        await asyncio.sleep(1)        data = {&quot;data&quot;: &quot;a&quot;*4000}    return JSONResponse(data)app = Starlette(  routes=[Route(&quot;/&quot;, homepage)],  middleware=[    Middleware(      MatomoMiddleware,      matomo_url=&quot;YOUR MATOMO TRACKING URL&quot;,      idsite=12345, # your service tracking id  )],)```## Examples### Starlette```pythonfrom starlette.applications import Starlettefrom starlette.responses import JSONResponsefrom starlette.routing import Routefrom starlette.middleware import Middlewarefrom asgi_matomo import MatomoMiddlewareasync def homepage(request):    return JSONResponse({&quot;data&quot;: &quot;a&quot; * 4000})app = Starlette(  routes=[Route(&quot;/&quot;, homepage)],  middleware=[    Middleware(      MatomoMiddleware,      matomo_url=&quot;YOUR MATOMO TRACKING URL&quot;,      idsite=12345, # your service tracking id  )],)```### FastAPI```pythonfrom fastapi import FastAPIfrom asgi_matomo import MatomoMiddlewareapp = FastAPI()app.add_middleware(  MatomoMiddleware,  matomo_url=&quot;YOUR MATOMO TRACKING URL&quot;,  idsite=12345, # your service tracking id)@app.get(&quot;/&quot;)def home() -&gt; dict:    return {&quot;data&quot;: &quot;a&quot; * 4000}```## API Reference**Overview**```pythonapp.add_middleware(  MatomoMiddleware,  matomo_url=&quot;YOUR MATOMO TRACKING URL&quot;,  idsite=12345, # your service tracking id  access_token=&quot;SECRETTOKEN&quot;,  assume_https=True,  exclude_paths=[&quot;/health&quot;],  exclude_patterns=[&quot;.*/old.*&quot;],  route_details={    &quot;route&quot;: {      &quot;action_name&quot;: &quot;Name&quot;,    }  })```**Parameters**:- **(Required)** `matomo_url`: The URL to make your tracking calls to.- **(Required)** `idsite`: The tracking id for your service.- _(Optional)_ `access_token`: Access token for Matomo. If this is set `cip` is also tracked. Required for tracking some data.- _(Optional)_ `assume_https`: If `True`, set tracked url scheme to `https`, useful when running behind a proxy. Defaults to `True`.- _(Optional)_ `exclude_paths`: A list of paths to exclude, only excludes path that is equal to a path in this list. These are tried before `exclude_patterns`. Defaults to `None`.- _(Optional)_ `exclude_patterns`: A list of regex patterns that are compiled, and then exclude a path from tracking if any pattern match. Defaults to `None`.These are tried after `exclude_paths`.- _(Optional)_ `route_details`: A dict with custom route-specific tracking data. Defaults to `None`.**Notes**:- Currently only some parts [Matomo Tracking HTTP API](https://developer.matomo.org/api-reference/tracking-api) is supported.## Ideas for further work:- [x] _filtering tracked of urls_- [x] _custom extraction of tracked data_This project keeps a [changelog](https://github.com/spraakbanken/asgi-matomo/CHANGELOG.md).# Releas Notes## Latest Changes## [0.4.1] - 2023-05-29### Added- track urlref. PR [#21](https://github.com/spraakbanken/asgi-matomo/pull/21) by [@kod-kristoff](https://github.com/kod-kristoff).### Changed- respect x-forwarded-for. PR [#18](https://github.com/spraakbanken/asgi-matomo/pull/18) by [@kod-kristoff](https://github.com/kod-kristoff).## [0.4.0] - 2023-05-25* Handle lifespan correctly. PR [#13](https://github.com/spraakbanken/asgi-matomo/pull/13) by [@kod-kristoff](https://github.com/kod-kristoff).* add docs. PR [#11](https://github.com/spraakbanken/asgi-matomo/pull/11) by [@kod-kristoff](https://github.com/kod-kristoff).## [0.3.2] - 2023-05-23* feat: add PerfMsTracker. PR [#10](https://github.com/spraakbanken/asgi-matomo/pull/10) by [@kod-kristoff](https://github.com/kod-kristoff).## [0.3.0] - 2023-05-22### Added- Allow setting route-details</longdescription>
</pkgmetadata>