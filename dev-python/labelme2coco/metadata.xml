<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;h1&gt;  labelme2coco&lt;/h1&gt;&lt;a href=&quot;https://pepy.tech/project/labelme2coco&quot;&gt;&lt;img src=&quot;https://pepy.tech/badge/labelme2coco&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://badge.fury.io/py/labelme2coco&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/labelme2coco.svg&quot; alt=&quot;pypi version&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/fcakyon/labelme2coco/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/fcakyon/labelme2coco/workflows/CI/badge.svg&quot; alt=&quot;ci&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://twitter.com/fcakyon&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/twitter-fcakyon_-blue?logo=twitter&amp;style=flat&quot; alt=&quot;fcakyon twitter&quot;&gt;&lt;h4&gt;  A lightweight package for converting your &lt;a href=&quot;https://github.com/wkentaro/labelme&quot;&gt;labelme&lt;/a&gt; annotations into COCO object detection format.&lt;/h4&gt;&lt;h4&gt;    &lt;img width=&quot;700&quot; alt=&quot;teaser&quot; src=&quot;https://user-images.githubusercontent.com/34196005/148746639-9a7b9c08-2156-42ca-abae-a4e6aad095dd.gif&quot;&gt;&lt;/h4&gt;&lt;/div&gt;## Convert LabelMe annotations to COCO format in one step[labelme](https://github.com/wkentaro/labelme) is a widely used is a graphical image annotation tool that supports classification, segmentation, instance segmentation and object detection formats.However, widely used frameworks/models such as Yolact/Solo, Detectron, MMDetection etc. requires COCO formatted annotations.You can use this package to convert labelme annotations to COCO format.## Getting started### Installation```pip install -U labelme2coco```### Basic Usage```pythonlabelme2coco path/to/labelme/dir``````pythonlabelme2coco path/to/labelme/dir --train_split_rate 0.85```### Advanced Usage```python# import packageimport labelme2coco# set directory that contains labelme annotations and image fileslabelme_folder = &quot;tests/data/labelme_annot&quot;# set export direxport_dir = &quot;tests/data/&quot;# set train split ratetrain_split_rate = 0.85# convert labelme annotations to cocolabelme2coco.convert(labelme_folder, export_dir, train_split_rate)``````python# import functionsfrom labelme2coco import get_coco_from_labelme_folder, save_json# set labelme training data directorylabelme_train_folder = &quot;tests/data/labelme_annot&quot;# set labelme validation data directorylabelme_val_folder = &quot;tests/data/labelme_annot&quot;# set path for coco json to be savedexport_dir = &quot;tests/data/&quot;# create train coco objecttrain_coco = get_coco_from_labelme_folder(labelme_train_folder)# export train coco jsonsave_json(train_coco.json, export_dir+&quot;train.json&quot;)# create val coco objectval_coco = get_coco_from_labelme_folder(labelme_val_folder, coco_category_list=train_coco.json_categories)# export val coco jsonsave_json(val_coco.json, export_dir+&quot;val.json&quot;)```</longdescription>
</pkgmetadata>