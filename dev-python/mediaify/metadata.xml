<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MediaifyMedia encoding made simple!Encode media without the hassle of wrangling ffmpeg and pillow, instead declare your output declaratively![Documentation](https://mediaify.readthedocs.io/)[![Documentation Status](https://readthedocs.org/projects/mediaify/badge/?version=latest)](https://mediaify.readthedocs.io/en/latest/?badge=latest)```pythonimport mediaifywith open('./image.png', 'rb') as f:    data = f.read()image = mediaify.encode_image(data, mediaify.WEBPImageFormat(quality=90))image.save(&quot;./image.webp&quot;)```## Multimedia SupportSupports transcoding of several different media types.- Audio- Image- Animation- Video```pythonwith open(&quot;./audio.mp4&quot;, &quot;rb&quot;) as f:    data = f.read()mediaify.encode_audio(data)&gt;&gt;&gt; AudioFile(audio/mpeg, 2.5MB)with open(&quot;./image.png&quot;, &quot;rb&quot;) as f:    data = f.read()mediaify.encode_image(data)&gt;&gt;&gt; ImageFile(1200x1600, image/png, 35.4KB)with open(&quot;./animation.gif&quot;, &quot;rb&quot;) as f:    data = f.read()mediaify.encode_animation(data)&gt;&gt;&gt; AnimationFile(1280x800, 1.1s 11 frames, 10.0fps, image/gif, 132.8KB)with open(&quot;./examples/input/video.mp4&quot;, &quot;rb&quot;) as f:    data = f.read()mediaify.encode_video(data)&gt;&gt;&gt; VideoFile(1280x720, 60.458s, 24.0fps, audio, video/mp4, 8.5MB)```## CustomisableEncode videos with multiple resolutions, formats, codecs as well as thumbnails and previews easily.```pythonimport mediaifythumbnail = mediaify.ThumbnailEncoding(    encoding=mediaify.WEBPImageFormat(        resize=mediaify.TargetResolutionResize(width=640, height=360),        quality=80,    ),)preview = mediaify.VideoPreviewAnimationEncoding(    encoding=mediaify.WEBPAnimationFormat(        quality=50,        lossless=False,        resize=mediaify.TargetResolutionResize(width=640, height=360)    ),    framerate=5,    frames=60,)video_360p = mediaify.WEBMFormat(    video_codec=mediaify.AV1Codec(crf=50, preset=7),    audio_codec=mediaify.OpusCodec(bitrate=128_000),    resize=mediaify.TargetResolutionResize(width=640, height=360),)video_720p = mediaify.WEBMFormat(    video_codec=mediaify.AV1Codec(crf=45, preset=6),    audio_codec=mediaify.OpusCodec(bitrate=128_000),    resize=mediaify.TargetResolutionResize(width=1280, height=720),)fallback = mediaify.MP4Format(    video_codec=mediaify.H264Codec(crf=21, preset=&quot;medium&quot;),    audio_codec=mediaify.OpusCodec(bitrate=128_000),    resize=mediaify.TargetResolutionResize(width=1280, height=720),)configs = [thumbnail, preview, video_360p, video_720p, fallback]with open('./examples/input/video.mp4', 'rb') as f:    data = f.read()mediaify.batch_encode_video(data, configs)&gt;&gt;&gt; [    ImageFile(640x360, image/webp, 10.1KB),    AnimationFile(640x360, 12.0s 60 frames, 5.0fps, image/webp, 1.8MB),    VideoFile(640x360, 60.45s, 24.0fps, audio, video/webm, 2.2MB),    VideoFile(1280x720, 60.45s, 24.0fps, audio, video/webm, 4.2MB),    VideoFile(1280x720, 60.45s, 24.0fps, audio, video/mp4, 14.2MB),]```# Installation[https://pypi.org/project/mediaify/](https://pypi.org/project/mediaify/)```bashpython -m pip install mediaify```## Dependencies### ffmpegEnsure ffmpeg is installed and on $PATH, try running `ffmpeg` to check- Debain/Ubuntu: `sudo apt-get install ffmpeg`- Other: [https://ffmpeg.org/download.html](https://ffmpeg.org/download.html)### libmagic- Windows: N/A, installed automatically- Debian/Ubuntu: `sudo apt-get install libmagic1`- Homebrew: `brew install libmagic`- macports: `port install file`# RoadmapIf you want any of these features to be developed, just flag an issue and I'll work on it.- New Encoders    - [x] Video        - [X] WEBM        - [X] MP4        - [ ] Video to Animation        - [ ] Video to Audio    - [x] Audio Support- Better Resizing    - [ ] Blackbars    - [ ] Cropping</longdescription>
</pkgmetadata>