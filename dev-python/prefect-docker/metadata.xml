<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># prefect-docker&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.python.org/pypi/prefect-docker/&quot; alt=&quot;PyPI version&quot;&gt;        &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/prefect-docker?color=0052FF&amp;labelColor=090422&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/PrefectHQ/prefect-docker/&quot; alt=&quot;Stars&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/stars/PrefectHQ/prefect-docker?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://pepy.tech/badge/prefect-docker/&quot; alt=&quot;Downloads&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/prefect-docker?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/PrefectHQ/prefect-docker/pulse&quot; alt=&quot;Activity&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/PrefectHQ/prefect-docker?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;br&gt;    &lt;a href=&quot;https://prefect-community.slack.com&quot; alt=&quot;Slack&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&amp;labelColor=090422&amp;logo=slack&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://discourse.prefect.io/&quot; alt=&quot;Discourse&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&amp;labelColor=090422&amp;logo=discourse&quot; /&gt;&lt;/a&gt;&lt;/p&gt;## Welcome!Prefect integrations for working with Docker.Note! The `DockerRegistryCredentials` in `prefect-docker` is a unique block, separate from the `DockerRegistry` in `prefect` core. While `DockerRegistry` implements a few functionality from both `DockerHost` and `DockerRegistryCredentials` for convenience, it does not allow much configuration to interact with a Docker host.Do not use `DockerRegistry` with this collection. Instead, use `DockerHost` and `DockerRegistryCredentials`.## Getting Started### Python setupRequires an installation of Python 3.7+.We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).### InstallationInstall `prefect-docker` with `pip`:```bashpip install prefect-docker```Then, register to [view the block](https://orion-docs.prefect.io/ui/blocks/) on Prefect Cloud:```bashprefect block register -m prefect_docker```Note, to use the `load` method on Blocks, you must already have a block document [saved through code](https://orion-docs.prefect.io/concepts/blocks/#saving-blocks) or [saved through the UI](https://orion-docs.prefect.io/ui/blocks/).### Pull image, and create, start, log, stop, and remove Docker container```pythonfrom prefect import flow, get_run_loggerfrom prefect_docker.images import pull_docker_imagefrom prefect_docker.containers import (    create_docker_container,    start_docker_container,    get_docker_container_logs,    stop_docker_container,    remove_docker_container,)@flowdef docker_flow():    logger = get_run_logger()    pull_docker_image(&quot;prefecthq/prefect&quot;, &quot;latest&quot;)    container = create_docker_container(        image=&quot;prefecthq/prefect&quot;, command=&quot;echo 'hello world!' &amp;&amp; sleep 60&quot;    )    start_docker_container(container_id=container.id)    logs = get_docker_container_logs(container_id=container.id)    logger.info(logs)    stop_docker_container(container_id=container.id)    remove_docker_container(container_id=container.id)    return container```### Use a custom Docker Host to create a Docker container```pythonfrom prefect import flowfrom prefect_docker import DockerHostfrom prefect_docker.containers import create_docker_container@flowdef create_docker_container_flow():    docker_host = DockerHost(        base_url=&quot;tcp://127.0.0.1:1234&quot;,        max_pool_size=4    )    container = create_docker_container(        docker_host=docker_host,        image=&quot;prefecthq/prefect&quot;,        command=&quot;echo 'hello world!'&quot;    )create_docker_container_flow()```## ResourcesIf you encounter any bugs while using `prefect-docker`, feel free to open an issue in the [prefect-docker](https://github.com/PrefectHQ/prefect-docker) repository.If you have any questions or issues while using `prefect-docker`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).Feel free to ⭐️ or watch [`prefect-docker`](https://github.com/PrefectHQ/prefect-docker) for updates too!## DevelopmentIf you'd like to install a version of `prefect-docker` for development, clone the repository and perform an editable install with `pip`:```bashgit clone https://github.com/PrefectHQ/prefect-docker.gitcd prefect-docker/pip install -e &quot;.[dev]&quot;# Install linting pre-commit hookspre-commit install```</longdescription>
</pkgmetadata>