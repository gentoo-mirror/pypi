<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===========popen===========-----------What is it?-----------The ``popen`` package provides a simple shell-like syntax inside python for runningexternal commands.Features:* Chaining (aka. piping) as ``Sh('ls') | 'sort'``* Redirect stderr to stdout as ``Sh('make').include_stderr | 'wc'``* Redirect output to file as ``Sh('ls') &gt; '~/listing.txt'``* Iteration over output lines as ``for line in Sh('ls'):``* Streaming input into commands in the chain as ``Sh.pipe('~/listing.txt').Sh('grep', '-q', 'code').returncode``* Expands special characters (``~*!?``)* Expands env vars (``$HOME``) as ``print Sh('ls', '$USER', '~/*')``* Properly splits strings (``'echo &quot;hole in one&quot;'`` becomes ``['echo', 'hole in one']``)* Or iterable arguments (``Sh('ls', '-l') | ['wc', '-l'] &gt; '/dev/null'``)=====TL;DR=====Installation:.. code-block:: SH    pip install popenExample:.. code-block:: PY    from popen import Sh    for line in Sh('du', '~/') | 'head -n 10' | 'sort -n':        print('GOT', line)=====Usage=====Simples usage, run a command and iterate the output lines:.. code-block:: PY    from popen import Sh    for line in Sh('ls', '-la', '~'):        print linePiping that output to a file:.. code-block:: PY    Sh('ls', '-la', '~') &gt; '~/listing'Note that special characters like ``~`` are expanded, as are environmentvariables (e.g. ``$HOME``).Chaining commands is trivial, here with append instead of write to file:.. code-block:: PY    Sh('ls') | Sh('sort') &gt;&gt; '~/listing'But the right hand side of ``|`` can be very flexible, as it employslexical splitter on string input or takes an iterable:.. code-block:: PY    Sh('ls', '-la', '~') | 'sort -c' | ['uniq', '-c'] | 'tail' | Sh('wc') &gt; '~/listing'To run a command and let output go to ``stdout``, ask for the return code:.. code-block:: PY    cmd = Sh('ls') | 'grep polka'    print cmd.returncodeTo pipe a string into a command, wrap in an iterable:.. code-block:: PY    print Sh.pipe(['this is a \nmulti line\nstring.']) | 'wc'</longdescription>
</pkgmetadata>