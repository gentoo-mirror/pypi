<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>What is NOVAS?--------------NOVAS is an integrated package of functions for computing variouscommonly needed quantities in positional astronomy.  The package cansupply, in one or two function calls, the instantaneous coordinates ofany star or solar system body in a variety of coordinate systems.  At alower level, NOVAS also provides astrometric utility transformations,such as those for precession_, nutation_, aberration_, parallax_, andgravitational `deflection of light`_.  The computations are accurate to**better than one milliarcsecond.** The NOVAS library is an easy-to-usefacility that can be incorporated into data reduction programs,telescope control systems, and simulations.  The U.S. parts of*The Astronomical Almanac* are prepared using NOVAS.This Python package includes both the NOVAS library and the Pythonwrapper that are available from the `NOVAS home page`_ at the UnitedStates Naval Observatory.  This version includes a few bug fixes andpackaging adjustments that are not in the most recent June 2011release of the software from the Naval Observatory itself.  You canfind these changes described at the bottom of this page in theChangelog, and you can also review them yourself at the `projectrepository on GitHub`_.This package has been uploaded to the Python Package Index by BrandonRhodes &lt;brandon@rhodesmill.org&gt;.  Please contact me, and not the busyfolks at the Naval Observatory, about any problems you encounter whentrying to install it — any problems with how it has been packaged aremy fault, not theirs!  For questions about how to use the library, youcan also ask for help on Stack Overflow, where I watch for questionsthat involve Python and astronomy.Quick Examples--------------Importing the library and opening the planetary ephemeris:&gt;&gt;&gt; from novas import compat as novas&gt;&gt;&gt; from novas.compat import eph_manager&gt;&gt;&gt; jd_start, jd_end, number = eph_manager.ephem_open()Converting a calendar date to a Julian date:&gt;&gt;&gt; jd_tt = novas.julian_date(2012, 10, 2, 12.0)&gt;&gt;&gt; jd_tt2456203.0Asking where Mars is located in the sky on a given date,in “astrometric” coordinates of the kind that are usedin printed sky atlases:&gt;&gt;&gt; mars = novas.make_object(0, 4, 'Mars', None)&gt;&gt;&gt; ra, dec, dis = novas.astro_planet(jd_tt, mars)&gt;&gt;&gt; print 'R.A. %d:%02f' % (ra, abs(ra) % 1. * 60.)R.A. 15:36.176177&gt;&gt;&gt; print 'dec. %d:%02f' % (dec, abs(dec) % 1. * 60.)dec. -20:11.951841&gt;&gt;&gt; print 'distance %f AU' % (dis,)distance 1.947674 AUThere is more information at the `NOVAS home page`_and in particular a`full PDF manual that includes a “Sample Calculations” chapter&lt;http://aa.usno.navy.mil/software/novas/novas_c/NOVAS_C3.1_Guide.pdf&gt;`_.Even though the manual is for the C version,you can generally puzzle out how to make the same calls from Pythonif you compare the sample codeto the way that similar calculations are donein the ``test`` package included inside of ``novas``!Installation------------Like other packages listed here on the Python Package Index, thispackage can be installed with the ``pip`` command. You will need toinstall both the library itself as well as a high-accuracy ephemerisdata set, with the DE405 ephemeris being the current default::    $ pip install novas    $ pip install novas_de405Note that the second command may take several minutes to run, dependingon your Internet connection, because the JPL ephemeris that it has todownload is 55 MB in size!If you are managing a Python project that has a ``setup.py`` or a``requirements.txt`` file, then instead of running these ``pip``commands manually you can simply list these two package names alongsidethe other packages that you depend on, and let them be installed as partof your normal project install.Sanity check: running the tests-------------------------------Once the package is installed, you can run its tests with the newtest-discovery feature built-in to Python 2.7. If the tests pass toextremely high accuracy, then the result should be::    $ python -m unittest discover novas    ........................................    ........................................    ...........    ----------------------------------------    Ran 191 tests in 0.022s    OKIf you are using an older version of Python, then you can run the testswith the ``unittest2`` compatibility package instead::    $ pip install unittest2    $ unit2 discover novasRunning the tests this way should also result in a pretty field of dots,followed by the message “OK.”Contents and Documentation--------------------------Successful installation will produce a ``novas`` package that containsseveral namespaces full of functions:``novas.compat``    Main NOVAS functions.``novas.constants``    Important constants.``novas.nutation``    Nutation models.``novas.compat.eph_manager``    Functions from the NOVAS ``eph_manager.c`` module.``novas.compat.solsys``    Functions from the NOVAS ``solsys1.c`` module.``novas.compat.nutation``    Functions from the NOVAS ``nutation.c`` module.You can find more information and documentation on the project'sofficial `NOVAS home page`_ at the Naval Observatory.Changelog---------Version 3.1.1.4 — 2016 December 1~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~* Updated all source code with improvements and rewrites from the new  official version 3.1.1 from the Naval Observatory.Version 3.1.1.3 — 2015 January 23~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~* Fixed a fatal typo in ``astro_star()`` that caused it to always raise  ``ArgumentError: argument 3: &lt;class 'TypeError'&gt;: wrong type``Version 3.1.1.2 — 2013 July 31~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~* The top-level ``__init__.py`` now attempts to load the NOVAS C library  from several different filenames under Python 3, instead of only  trying filenames with an ABI identifier.  (On my Ubuntu 13.04 laptop,  Python 3.3 is *not* in fact including such an identifier, which was  causing an ``ImportError: cannot import name novaslib`` failure.)Version 3.1.1.1 — 2013 March 2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Further fixes have been provided by users, so I am making this interimrelease while the official version still sits at 3.1.* Leo Singer fixed the wrappers for ``cal_date()`` and ``limb_angle()``  so these two NOVAS functions can now be used from Python code.* The example test file ``checkout-stars-full.py`` now uses syntax  compatible with Python 3, eliminating a warning during install.* The ``setup.py`` now specifies the encoding for this readme, so the  package can install on systems where UTF-8 is not the default.Version 3.1.1 — 2012 November 25~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~The Naval Observatory has not released a new version of NOVAS sinceJune 2011, but reports and requests from users convinced me to makeseveral small fixes to the code and make an interim release here onthe Python Package Index:* The library is now Python 3 compatible!* Python code can now access the ``ephem_close()`` routine inside the  ``eph_manager`` module.* Bugfix: the ``eph_manager.state()`` function was always raising an  exception if invoked.* Bugfix: to ``eph_manager.c`` as recommended in the `NOVAS FAQ`_.* Bugfix: to ``novas.c`` as recommended in the `NOVAS FAQ`_.To examine the code changes yourself, you can visit the `projectrepository on GitHub`_.Version 3.1 — 2012 September 19~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Initial release of the library on the Python Package Index.License and Citation--------------------This software was produced by the United States Naval Observatory at theexpense of United States taxpayers, and is therefore not suseptible tocopyright, because a copyright would place taxpayer property underprivate ownership. Since it is not copyrighted, it cannot be licensed;it is simply free.To credit the authors, you are invited to cite their work as follows:**Barron, E. G., Kaplan, G. H., Bangert, J., Bartlett, J. L., Puatua, W., Harris, W., &amp; Barrett, P. (2011)** `&quot;Naval Observatory Vector Astrometry Software (NOVAS) Version 3.1, Introducing a Python Edition,&quot; &lt;http://aa.usno.navy.mil/software/novas/novas_py/novas.pdf&gt;`_ **Bull. AAS, 43, 2011.**The authors of NOVAS ask that if you use their software in your work,that you let them know at help@aa.usno.navy.mil since a record of who isusing their software helps them justify the excellent work that they aredoing by making the software available to the public... _precession: http://asa.usno.navy.mil/SecM/Glossary.html#precession.. _nutation: http://asa.usno.navy.mil/SecM/Glossary.html#nutation.. _aberration: http://asa.usno.navy.mil/SecM/Glossary.html#aberration.. _parallax: http://asa.usno.navy.mil/SecM/Glossary.html#parallax.. _deflection of light: http://asa.usno.navy.mil/SecM/Glossary.html#deflection-light.. _webpage: http://ssd.jpl.nasa.gov/?planet_eph_export.. _unittest2 module: http://pypi.python.org/pypi/unittest2.. _NOVAS home page: http://aa.usno.navy.mil/software/novas/novas_py/novaspy_intro.php.. _NOVAS FAQ: http://aa.usno.navy.mil/software/novas/novas_faq.php.. _project repository on GitHub: https://github.com/brandon-rhodes/python-novas</longdescription>
</pkgmetadata>