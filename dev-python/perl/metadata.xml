<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========================Perl as a Python package========================.. image:: https://travis-ci.org/radiac/python-perl.svg?branch=master    :target: https://travis-ci.org/radiac/python-perl.. image:: https://coveralls.io/repos/radiac/python-perl/badge.svg?branch=master&amp;service=github    :target: https://coveralls.io/github/radiac/python-perl?branch=masterHaven't you always dreamed of having the power of Perl at your fingertips when writingPython?Well, this package is proof that dreams can come true::    &gt;&gt;&gt; import perl    &gt;&gt;&gt; value = &quot;Hello there&quot;    &gt;&gt;&gt; if value =~ /^hello (.+?)$/i:    ...     print(&quot;Found greeting:&quot;, $1)    ...    Found greeting: there    &gt;&gt;&gt; value =~ s/there/world/    &gt;&gt;&gt; print(value)    Hello worldNote: This is very silly and probably shouldn't go anywhere near production code.* Project site: http://radiac.net/projects/python-perl/* Source code: https://github.com/radiac/python-perlInstallation============This requires Python 3.7 or later.Usage=====The module needs to be loaded before Python tries to read code which uses theseenhancements. There are therefore four different ways to use this module:1.  Pass it to Python on the command line::        python3.7 -m perl myscript.py2.  Set it on your script's shebang::        #!/usr/bin/python3.7 -mperl3.  Import it before importing any of your code which uses its syntax - usually in    your ``__init__.py``::        import perl    .. note::        You only need to import it once in your project.        However, because Python needs to read the whole file before it can run the        import, you cannot use ``perl``'s functionality in the same file where you        ``import perl``.4.  Use it on the Python interactive shell (REPL)::        $ python3.7        &gt;&gt;&gt; import perl    or::        $ python3.7 -m perlFeatures========Regular expression matching---------------------------Syntax::    val =~ /pattern/flags    # or    val =~ m/pattern/flagswhere ``pattern`` uses `Python's regex syntax`_, and ``flags`` is a subset of thecharacters ``AILMSXG``, which map Python's single character flags, plus ``g`` whichmimics the global flag from Perl.When run without the global flag, the ``re.Match`` object is returned; any matchedgroups will be available as numbered dollar variables, eg ``$1``, and named groups willbe available on ``$name``.When run with the global flag, the list of ``re.Match`` objects will be returned. Nodollar variables will be set... _Python's regex syntax: https://docs.python.org/3/library/re.html#regular-expression-syntaxExamples::    # Case insensitive match    value =~ /^foo (.+?) bar$/i    print(f&quot;Matched {$1}&quot;)    # Use in a condition    if value =~ /^foo (.+?) bar$/i:        return $1    # Use as a global    matches = value =~ /foo (.+?) bar/gi;Regular expression replacement------------------------------Syntax:    val =~ s/pattern/replacement/flagswhere ``pattern`` uses `Python's regex syntax`_, and ``flags`` is a subset of thecharacters ``AILMSXG``, which map Python's single character flags, plus ``g`` whichmimics the global flag from Perl to replace all occurrences of the match.Examples::    # Case insensitive global replacement    value =~ s/foo/bar/giDollar variables----------------Syntax::    $name    $numberDollar variables act like regular variables - they can be set and used as normal. Theyare primarily intended for use with regular expressions - each regex will remove allprevious dollar variables, to avoid confusion as to whether they matched or not.Contributing============During development, install in a virtual environment::    mkdir python-perl    cd python-perl    git clone &lt;path-to-repo&gt; repo    virtualenv --python=python3.7 venv    . venv/bin/activate    cd repo    pip install -r requirements.txtTo run tests::    cd path/to/repo    . ../venv/bin/activate    pytestTo run the example, use one of the following::    $ ./example.py    $ python3.7 -m perl example.py    $ python3.7 example_importer.py</longdescription>
</pkgmetadata>