<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyyaml-typed[![Build Status](https://travis-ci.org/outcatcher/pyyaml-typed.svg?branch=master)](https://travis-ci.org/outcatcher/pyyaml-typed)[![codecov](https://codecov.io/gh/outcatcher/pyyaml-typed/branch/master/graph/badge.svg)](https://codecov.io/gh/outcatcher/pyyaml-typed)[![PyPI version](https://img.shields.io/pypi/v/pyyaml-typed.svg)](https://pypi.org/project/pyyaml-typed/)![GitHub](https://img.shields.io/github/license/outcatcher/pyyaml-typed)Library providing `dump` and `load` functions for pyyaml supporting `go-yaml`-likedescription of yaml fields as class commentsDataclasses and named tuples can be used without defining field names.Field in comment for them will override default class field nameExample:```python3from tyaml import dump@dataclassclass Something:    my_fld_1: int    # or use `yaml:` comment to rename    field2: str  # yaml: my_fld_2    output = dump([Something(1, &quot;that's&quot;), Something(2, &quot;nice&quot;)])```will create yaml:```yaml- my_fld_1: 1  my_fld_2: &quot;that's&quot;- my_fld_1: 2  my_fld_2: &quot;nice&quot;```and in the opposite direction: ```pythonfrom typing import Listfrom tyaml import loadloaded = load(yml_str, List[Something])loaded == [Something(1, &quot;that's&quot;), Something(2, &quot;nice&quot;)]```</longdescription>
</pkgmetadata>