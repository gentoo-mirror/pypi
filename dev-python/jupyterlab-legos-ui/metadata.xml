<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># jupyterlab_legos_ui![Github Actions Status](https://github.com/dunovank/jupyterlab_legos_ui/workflows/Build/badge.svg)Legos light ui and syntax theme for jupyterlab## Preview![](./jupyterlab_legos_ui.png)## Requirements* JupyterLab &gt;= 3.0## Install***NOTE:*** After installing and launching `jupyter lab`, the theme still needs to be enabled:***Settings &gt; JupyterLab Theme &gt; @dunovank/jupyterlab_legos_ui***```bashpip install jupyterlab_legos_ui```### Uninstall```bashpip uninstall jupyterlab_legos_uijupyter labextension uninstall @dunovank/jupyterlab_legos_ui```## Develop* You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.* The `jlpm` command is JupyterLab's pinned version of [yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use `yarn` or `npm` in lieu of `jlpm` below.* With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).* By default, the `jlpm run build` command (see above) generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:### Build &amp; Watch (Terminal 1)```bash# Clone the repo to your local environment# cd to the jupyterlab_legos_ui dir# Install package in editable (-e) modepip install -e .# Link your dev version of# the extension with JupyterLabjupyter labextension develop . --overwrite# Rebuild extension Typescript# source after making changesjlpm run build# Watch the source# dir in Terminal 1jlpm run watch```### Run JupyterLab (Terminal 2)```bashjupyter lab```## Publish```bashpip install jupyter_packaging twine``````bashpython setup.py sdist bdist_wheel &amp;&amp; twine upload dist/*``````bashjlpm build:lib &amp;&amp; npm publish --access public```&gt; TODO- Bring more fancy ui like in https://github.com/timkpaine/jupyterlab_miami_nights:</longdescription>
</pkgmetadata>