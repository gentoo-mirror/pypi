<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-gronMake JSON grep-able, a Python implementation of[gron](https://github.com/tomnomnom/gron).## Installation`gron` is available on [PyPi](https://pypi.org/project/gron/), to install ituse:```bash$ pip install gron```## DocumentationThe API documentation can be found[here](http://gron.readthedocs.io/en/latest/).## UsageGiven a JSON file with the content:```json{  &quot;one&quot;: 1,  &quot;two&quot;: 2.2,  &quot;three-b&quot;: &quot;3&quot;,  &quot;four&quot;: [1,2,3,4],  &quot;five&quot;: {    &quot;alpha&quot;: [&quot;fo&quot;, &quot;fum&quot;],    &quot;beta&quot;: {      &quot;hey&quot;: &quot;How's tricks?&quot;    }  },  &quot;abool&quot;: true,  &quot;abool2&quot;: false,  &quot;isnull&quot;: null,  &quot;id&quot;: 66912849}```you can use `gron` like this:```bash$ gron tests/data/one.jsonjson = {};json.abool = true;json.abool2 = false;json.five = {};json.five.alpha = [];json.five.alpha[0] = &quot;fo&quot;;json.five.alpha[1] = &quot;fum&quot;;json.five.beta = {};json.five.beta.hey = &quot;How's tricks?&quot;;json.four = [];json.four[0] = 1;json.four[1] = 2;json.four[2] = 3;json.four[3] = 4;json.id = 66912849;json.isnull = null;json.one = 1;json.two = 2.2;json[&quot;three-b&quot;] = &quot;3&quot;;`````Without any arguments `gron` will read from `STDIN`:```bash$ cat tests/data/one.json | gronjson = {};json.abool = true;json.abool2 = false;json.five = {};json.five.alpha = [];json.five.alpha[0] = &quot;fo&quot;;json.five.alpha[1] = &quot;fum&quot;;json.five.beta = {};json.five.beta.hey = &quot;How's tricks?&quot;;json.four = [];json.four[0] = 1;json.four[1] = 2;json.four[2] = 3;json.four[3] = 4;json.id = 66912849;json.isnull = null;json.one = 1;json.two = 2.2;json[&quot;three-b&quot;] = &quot;3&quot;;```</longdescription>
</pkgmetadata>