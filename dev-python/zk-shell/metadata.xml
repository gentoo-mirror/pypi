<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>zk-shell========.. image:: https://travis-ci.org/rgs1/zk_shell.svg?branch=master    :target: https://travis-ci.org/rgs1/zk_shell    :alt: Build Status.. image:: https://coveralls.io/repos/rgs1/zk_shell/badge.png?branch=master    :target: https://coveralls.io/r/rgs1/zk_shell?branch=master    :alt: Coverage Status.. image:: https://badge.fury.io/py/zk_shell.svg    :target: http://badge.fury.io/py/zk_shell    :alt: PyPI version.. image:: https://requires.io/github/rgs1/zk_shell/requirements.svg?branch=master    :target: https://requires.io/github/rgs1/zk_shell/requirements/?branch=master    :alt: Requirements Status.. image:: https://img.shields.io/pypi/pyversions/zk_shell.svg    :target: https://pypi.python.org/pypi/zk_shell    :alt: Python Versions.. image:: https://codeclimate.com/github/rgs1/zk_shell.png    :target: https://codeclimate.com/github/rgs1/zk_shell    :alt: Code Climate**Table of Contents**-  `tl;dr &lt;#tldr&gt;`__-  `Installing &lt;#installing&gt;`__-  `Usage &lt;#usage&gt;`__-  `Dependencies &lt;#dependencies&gt;`__tl;dr~~~~~A powerful &amp; scriptable shell for `ApacheZooKeeper &lt;http://zookeeper.apache.org/&gt;`__Installing~~~~~~~~~~As Dockerfile:::    $ docker build . -f Dockerfile -t zk-shell:1.3.3From PyPI:::    $ pip install zk-shellOr running from the source:::    # Kazoo is needed    $ pip install kazoo    $ git clone https://github.com/rgs1/zk_shell.git    $ cd zk_shell    $ export ZKSHELL_SRC=1; bin/zk-shell    Welcome to zk-shell (0.99.04)    (DISCONNECTED) /&gt;You can also build a self-contained PEX file:::    $ pip install pex    $ pex -v -e zk_shell.cli -o zk-shell.pex .More info about PEX `here &lt;https://pex.readthedocs.org&gt;`__.Usage~~~~~Docker Version::   $ docker run -it zk-shell:1.3.3and use the connect command to connect to your zookeeper instance::    $ zk-shell localhost:2181    (CONNECTED) /&gt; ls    zookeeper    (CONNECTED) /&gt; create foo 'bar'    (CONNECTED) /&gt; get foo    bar    (CONNECTED) /&gt; cd foo    (CONNECTED) /foo&gt; create ish 'barish'    (CONNECTED) /foo&gt; cd ..    (CONNECTED) /&gt; ls foo    ish    (CONNECTED) /&gt; create temp- 'temp' true true    (CONNECTED) /&gt; ls    zookeeper foo temp-0000000001    (CONNECTED) /&gt; rmr foo    (CONNECTED) /&gt;    (CONNECTED) /&gt; tree    .    ├── zookeeper    │   ├── config    │   ├── quotaLine editing and command history is supported via readline (if readlineis available). There's also autocomplete for most commands and theirparameters.Individual files can be copied between the local filesystem andZooKeeper. Recursively copying from the filesystem to ZooKeeper issupported as well, but not the other way around since znodes can havecontent and children.::    (CONNECTED) /&gt; cp file:///etc/passwd zk://localhost:2181/passwd    (CONNECTED) /&gt; get passwd    (...)    unbound:x:992:991:Unbound DNS resolver:/etc/unbound:/sbin/nologin    haldaemon:x:68:68:HAL daemon:/:/sbin/nologinCopying between one ZooKeeper cluster to another is supported, too:::    (CONNECTED) /&gt; cp zk://localhost:2181/passwd zk://othercluster:2183/mypasswdCopying between a ZooKeeper cluster and JSON files is supported as well:::    (CONNECTED) /&gt; cp zk://localhost:2181/something json://!tmp!backup.json/ true trueMirroring paths to between clusters or JSON files is also supported.Mirroring replaces the destination path with the content and structureof the source path.::    (CONNECTED) /&gt; create /source/znode1/znode11 'Hello' false false true    (CONNECTED) /&gt; create /source/znode2 'Hello' false false true    (CONNECTED) /&gt; create /target/znode1/znode12 'Hello' false false true    (CONNECTED) /&gt; create /target/znode3 'Hello' false false true    (CONNECTED) /&gt; tree    .    ├── target    │   ├── znode3    │   ├── znode1    │   │   ├── znode12    ├── source    │   ├── znode2    │   ├── znode1    │   │   ├── znode11    ├── zookeeper    │   ├── config    │   ├── quota    (CONNECTED) /&gt; mirror /source /target    Are you sure you want to replace /target with /source? [y/n]:    y    Mirroring took 0.04 secs    (CONNECTED) /&gt; tree    .    ├── target    │   ├── znode2    │   ├── znode1    │   │   ├── znode11    ├── source    │   ├── znode2    │   ├── znode1    │   │   ├── znode11    ├── zookeeper    │   ├── config    │   ├── quota    (CONNECTED) /&gt; create /target/znode4 'Hello' false false true    (CONNECTED) /&gt; mirror /source /target false false true    Mirroring took 0.03 secs    (CONNECTED) /&gt;Debugging watches can be done with the watch command. It allowsmonitoring all the child watches that, recursively, fire under :::    (CONNECTED) /&gt; watch start /    (CONNECTED) /&gt; create /foo 'test'    (CONNECTED) /&gt; create /bar/foo 'test'    (CONNECTED) /&gt; rm /bar/foo    (CONNECTED) /&gt; watch stats /    Watches Stats    /foo: 1    /bar: 2    /: 1    (CONNECTED) /&gt; watch stop /Searching for paths or znodes which match a given text can be done viafind:::    (CONNECTED) /&gt; find / foo    /foo2    /fooish/wayland    /fooish/xorg    /copy/fooOr a case-insensitive match using ifind:::    (CONNECTED) /&gt; ifind / foo    /foo2    /FOOish/wayland    /fooish/xorg    /copy/FooGrepping for content in znodes can be done via grep:::    (CONNECTED) /&gt; grep / unbound true    /passwd: unbound:x:992:991:Unbound DNS resolver:/etc/unbound:/sbin/nologin    /copy/passwd: unbound:x:992:991:Unbound DNS resolver:/etc/unbound:/sbin/nologinOr via igrep for a case-insensitive version.Non-interactive mode can be used passing commands via ``--run-once``:::    $ zk-shell --run-once &quot;create /foo 'bar'&quot; localhost    $ zk-shell --run-once &quot;get /foo&quot; localhost    barOr piping commands through stdin:::    $ echo &quot;get /foo&quot; | zk-shell --run-from-stdin localhost    barIt's also possible to connect using an SSH tunnel, by specifying a hostto use:::    $ zk-shell --tunnel ssh-host zk-hostDependencies~~~~~~~~~~~~-  Python 2.7, 3.3, 3.4, 3.5 or 3.6-  Kazoo &gt;= 2.2Testing and Development~~~~~~~~~~~~~~~~~~~~~~~Please see `CONTRIBUTING.rst &lt;CONTRIBUTING.rst&gt;`__.</longdescription>
</pkgmetadata>