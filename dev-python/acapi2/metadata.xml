<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Acquia Cloud API v2Python Client library to communicate with the [Acquia Cloud API V2](http://cloud.acquia.com/api-docs).[Pablo Fabregat](http://pablofabregat.com) - [License](LICENSE.txt)[![Build Status](https://travis-ci.org/pmatias/python-acquia-cloud-2.svg?branch=master)](https://travis-ci.org/pmatias/python-acquia-cloud-2) [![Documentation Status](https://readthedocs.org/projects/acapi2/badge/?version=latest)](https://acapi2.readthedocs.io/en/latest/?badge=latest) [![codecov](https://codecov.io/gh/pmatias/python-acquia-cloud-2/branch/2.x/graph/badge.svg)](https://codecov.io/gh/pmatias/python-acquia-cloud-2)## Deprecation notice:The following items will be removed in 2.0.3:* ~~Support for environment variables `ACQUIA_CLOUD_API_KEY` and `ACQUIA_CLOUD_API_SECRET`; how the credentials are provided to the library isresponsibility of the user.~~ I've decided not to remove this, for now.* Tasks object; Acquia API is deprecating this as well, the Notifications objectshould be used instead   ## ExamplesPlease bear in mind that the library is being actively developed andmost of its functionality is just a reduced set of what it should be.Minimal request```pythonacquia = Acquia(api_key, api_secret)application = acquia.application(&quot;a47ac10b-58cc-4372-a567-0e02b2c3d470&quot;)print(application[&quot;name&quot;])```### Using filters```pythonsubscription_name = &quot;MySubsName&quot;filters = &quot;name=&quot; + subscription_nameapplication = acapi.applications(filters=filters).first()dev_environment = application.environments()[&quot;dev&quot;]print(dev_environment[&quot;id&quot;])dev_environment.set_php_version(&quot;7.0&quot;)more_settings = {  &quot;max_execution_time&quot;: 10,  &quot;memory_limit&quot;: 192,  &quot;apc&quot;: 128,  &quot;max_input_vars&quot;: 1000,  &quot;max_post_size&quot;: 256,  &quot;sendmail_path&quot;: &quot;/usr/bin/sendmail&quot;,  &quot;varnish_over_ssl&quot;: False}dev_environment.configure(more_settings)```### Notificationsacapi2 now supports [the notifications endpoint](https://cloudapi-docs.acquia.com/#/Notifications/getNotificationByUuid)Whenever an action is executed (e.g. [a code import](https://cloudapi-docs.acquia.com/#/Environments/postEnvironmentsImportSite)), the API will return a uuid for its correspondant task status (notification), this can be used to check on the status of the task itself&quot;```pythonnotif_uuid = &quot;d82a122d-b7b8-46fc-9999-39cb824fac8d&quot;notification = acquia.notification(notif_uuid)print(notification.data)```You can also check on the [current notifications for a specific application](https://cloudapi-docs.acquia.com/#/Applications/getApplicationNotifications)````pythonfilters = &quot;name=@*myapp*&quot;app = acquia.applications(filters=filters).first()notifications = app.notifications()for uuid, notification in notifications.items():        print(notification.data)````## RoadmapCurrent version: **2.0.3**### 2.0.1* 2.x becomes the default repository branch,* Out of the beta status,* Notifications support,* Code coverage increase,* Clean up the original code a bit.* Support for backups.### 2.0.2* Small release to put back support of credentials in environment variables,which is now being announced as deprecated.### 2.0.3* Tasks endpoint removal (you should use notifications),* Credential environment variables removal,* Wait until a notification completes,* More support for log forwarding### 2.0.4* Minor release: Added support for DB Backup Downloads### 2.0.5* ~~Credential environment variables removal (now for real :) )~~ I've decided not to remove this, for now,* Taken over https://pypi.org/project/http-hmac-python since it dissapeared.* Support for environment cron operations### 2.0.6* Distributions endpoint support,* Messages endpoint support,* Better exceptions handling.## CreditsThis library was originally based on the Acquia API Python Library created by Dave Hall (http://github.com/skwashd/python-acquia-cloud)</longdescription>
</pkgmetadata>