<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pylogx&gt; python logging extensions supporting additional levels, colorization, indentation and more## Features-   Additional log levels (HINT, NOTE, TRACE) for more granularity-   Colorize log messages based on the log level-   Indent log messages-   Log relative time stamps## Documentation-   Check the [pylox documentation](https://github.com/realtimeprojects/pylogx/blob/main/doc/pylogx.md) for more details.## Quickstart### Colorize your log messages        import time        import pylogx        from pylogx import log        pylogx.enable_colors(level=pylogx.Level.NOTE, ups=[pylogx.Level.NOTE])        log.trace(&quot;Have fun with colorized log messages&quot;)        log.note(&quot;This message disappears with the next log message&quot;)        time.sleep(5)        log.note(&quot;Another message disappearing soon..&quot;)        time.sleep(5)        log.success(&quot;Last message is gone&quot;)### Indent your log messages        import logging        from pylogx import log, Indent        formatter = logging.Formatter(fmt=&quot;%(asctime)s %(indent)s%(message)s&quot;)        sh = logging.StreamHandler()        sh.setFormatter(formatter)        log.addHandler(sh)        indent = Indent(indent=&quot; =&gt; &quot;)        log.info(&quot;base level&quot;)        indent.inc()        log.info(&quot;sub level&quot;)        indent.inc()        log.info(&quot;sub sub level&quot;)        indent.dec()        log.info(&quot;sub level&quot;)### Print log messages with relative time stamp        import time        import logging        from pylogx import log, PrettyDelta, Level        pd = PrettyDelta()        prd = PrettyDelta(name=&quot;prettyRelativeDelta&quot;, fmt=&quot;+%M:%S.%f&quot;, relative=True)        log.addFilter(prd)        formatter = logging.Formatter(fmt=&quot;%(prettyDelta)s [%(prettyRelativeDelta)s] %(message)s&quot;)        sh = logging.StreamHandler()        sh.setFormatter(formatter)        log.addHandler(sh)        log.setLevel(Level.INFO)        log.warning(&quot;enjoy relative timestamps&quot;)        time.sleep(1)        log.info(&quot;enjoy relative timestamps&quot;)        time.sleep(2)        log.info(&quot;enjoy relative timestamps&quot;)</longdescription>
</pkgmetadata>