<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ForgeBox[![PyPI version](https://img.shields.io/pypi/v/forgebox)](https://pypi.org/project/forgebox/)![Python version](https://img.shields.io/pypi/pyversions/forgebox)![License](https://img.shields.io/github/license/raynardj/forgebox)![PyPI Downloads](https://img.shields.io/pypi/dm/forgebox)[![pypi build](https://github.com/raynardj/forgebox/actions/workflows/publish.yml/badge.svg)](https://github.com/raynardj/forgebox/actions/workflows/publish.yml)[![Test](https://github.com/raynardj/forgebox/actions/workflows/test.yml/badge.svg)](https://github.com/raynardj/forgebox/actions/workflows/test.yml)&gt; Data science comprehensive toolbox## InstallationEasy simple installation in 1 line```shellpip install forgebox```If not specified, you need anaconda3 for most of the tools.See [nbs](./nbs) for most of the applications## Features ðŸš€ Briefing&gt; This is a tool box with comprehensive **utilies**, to put it simply, I just hope most of my frequetyly used DIY tools in one place and can be easily **installed and imported**### Lazy, fast imports ðŸ¤¯The following command will import many frequent tools for data science, like **pd** for pandas, **np** for numpy, os, json, PIL.Image for image processing```pythonfrom frogebox.imports import *```No more following verbosity```pythonimport pandas as pdimport numpy as npimport osimport json...```### Get a dataframe of file details under a  directory```pythonfrom forgebox.files import file_detail``````pythonfile_detail(&quot;/Users/xiaochen.zhang/.cache/&quot;).sample(5)```&lt;div&gt;&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;path&lt;/th&gt;      &lt;th&gt;file_type&lt;/th&gt;      &lt;th&gt;parent&lt;/th&gt;      &lt;th&gt;depth&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td&gt;36&lt;/td&gt;      &lt;td&gt;/Users/xiaochen.zhang/.cache/torch/transformer...&lt;/td&gt;      &lt;td&gt;json&lt;/td&gt;      &lt;td&gt;transformers&lt;/td&gt;      &lt;td&gt;7&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;13&lt;/td&gt;      &lt;td&gt;/Users/xiaochen.zhang/.cache/torch/transformer...&lt;/td&gt;      &lt;td&gt;json&lt;/td&gt;      &lt;td&gt;transformers&lt;/td&gt;      &lt;td&gt;7&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;51&lt;/td&gt;      &lt;td&gt;/Users/xiaochen.zhang/.cache/langhuan/task_NER...&lt;/td&gt;      &lt;td&gt;json&lt;/td&gt;      &lt;td&gt;task_NER_210121_140513&lt;/td&gt;      &lt;td&gt;7&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;32&lt;/td&gt;      &lt;td&gt;/Users/xiaochen.zhang/.cache/torch/transformer...&lt;/td&gt;      &lt;td&gt;lock&lt;/td&gt;      &lt;td&gt;transformers&lt;/td&gt;      &lt;td&gt;7&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;58&lt;/td&gt;      &lt;td&gt;/Users/xiaochen.zhang/.cache/langhuan/task_Cla...&lt;/td&gt;      &lt;td&gt;json&lt;/td&gt;      &lt;td&gt;task_Classify_210128_164710&lt;/td&gt;      &lt;td&gt;7&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;### HTML in notebook```pythonfrom forgebox.html import DOM, list_group, list_group_kv```This will map a clear HTML table view of wild tree type json structure/ list```pythonbands = [&quot;police&quot;, &quot;headpin&quot;, {&quot;ac&quot;:&quot;dc&quot;}]list_group(bands)()```#### Coding html in python```pythontitle = DOM(&quot;Title example&quot;,&quot;h5&quot;, kwargs={&quot;style&quot;:&quot;color:#3399EE&quot;})ul = DOM(&quot;&quot;,&quot;ul&quot;);for i in range(5):    ul = ul.append(DOM(f&quot;Line {i}&quot;, &quot;li&quot;, kwargs={&quot;style&quot;:&quot;color:#EE33DD&quot;}))title()ul()```&lt;h5 style=&quot;color:#3399EE&quot;&gt;Title example&lt;/h5&gt;&lt;ul&gt;&lt;li style=&quot;color:#EE33DD&quot;&gt;Line 0&lt;/li&gt;&lt;li style=&quot;color:#EE33DD&quot;&gt;Line 1&lt;/li&gt;&lt;li style=&quot;color:#EE33DD&quot;&gt;Line 2&lt;/li&gt;&lt;li style=&quot;color:#EE33DD&quot;&gt;Line 3&lt;/li&gt;&lt;li style=&quot;color:#EE33DD&quot;&gt;Line 4&lt;/li&gt;&lt;/ul&gt;### Interactive Widgets&gt; Interactive widgets work with in jupyter notebooks#### Search box ðŸ”Ž for dataframeThis will create an interactive text input box to search through the pandas dataframe, within the columns you set.if ```manual``` is set to False, the search will respond to **each of your key press**, it's fast but will suffer terrible user experience if the dataframe is huge in size.```pythonfrom forgebox.widgets import search_boxsearch_box(data_df, columns=[&quot;col1&quot;,&quot;col2&quot;], manual=False)```#### paginateYou can browse through a pandas dataframe like fliping pages ðŸ“„.```python# this will import many things like enhanced pandasfrom forgebox.imports import *df  = pd.read_csv(&quot;xxxx.csv&quot;)df.paginate()``````pythonfrom forgebox.widgets import paginatepaginate(your_dataframe, page_len=10)```</longdescription>
</pkgmetadata>