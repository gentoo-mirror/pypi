# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A serverless client for reading and writing Neuroglancer Precomputed volumes both locally and on cloud services."

HOMEPAGE="https://github.com/seung-lab/cloud-volume/"
LICENSE="License :: OSI Approved :: BSD License"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all all-codecs all-viewers blosc boss compresso crackle dask em-codecs fp-codecs fpzip jpeg jxl mesh-viewer png seg-codecs skeleton-viewer test zarr zfpc"
DEPENDENCIES=">=dev-python/boto3-1.4.7[${PYTHON_USEDEP}]
	>=dev-python/chardet-3.0.4[${PYTHON_USEDEP}]
	dev-python/cloud-files[${PYTHON_USEDEP}]
	dev-python/compressed-segmentation[${PYTHON_USEDEP}]
	dev-python/DracoPy[${PYTHON_USEDEP}]
	dev-python/fastremap[${PYTHON_USEDEP}]
	dev-python/gevent[${PYTHON_USEDEP}]
	>=dev-python/google-auth-1.10.0[${PYTHON_USEDEP}]
	dev-python/google-cloud-core[${PYTHON_USEDEP}]
	dev-python/google-cloud-storage[${PYTHON_USEDEP}]
	dev-python/json5[${PYTHON_USEDEP}]
	>dev-python/jsonschema-4.0[${PYTHON_USEDEP}]
	dev-python/microviewer[${PYTHON_USEDEP}]
	>=dev-python/numpy-1.13.3[${PYTHON_USEDEP}]
	dev-python/networkx[${PYTHON_USEDEP}]
	dev-python/python-jsonschema-objects[${PYTHON_USEDEP}]
	dev-python/pathos[${PYTHON_USEDEP}]
	dev-python/protobuf[${PYTHON_USEDEP}]
	dev-python/python-dateutil[${PYTHON_USEDEP}]
	>=dev-python/requests-2.22.0[${PYTHON_USEDEP}]
	dev-python/psutil[${PYTHON_USEDEP}]
	>=dev-python/pysimdjson-3.1.1[${PYTHON_USEDEP}]
	dev-python/simplejpeg[${PYTHON_USEDEP}]
	>=dev-python/six-1.10.0[${PYTHON_USEDEP}]
	>=dev-python/tenacity-4.10.0[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	>=dev-python/urllib3-1.25.7[${PYTHON_USEDEP}]
	dev-python/posix-ipc[${PYTHON_USEDEP}]
	>=dev-python/psutil-5.4.3[${PYTHON_USEDEP}]
	all? ( dev-python/compressed-segmentation[${PYTHON_USEDEP}] )
	all? ( dev-python/compresso[${PYTHON_USEDEP}] )
	all? ( dev-python/crackle-codec[${PYTHON_USEDEP}] )
	all? ( dev-python/imagecodecs[${PYTHON_USEDEP}] )
	all? ( dev-python/simplejpeg[${PYTHON_USEDEP}] )
	all? ( dev-python/pyspng-seunglab[${PYTHON_USEDEP}] )
	all? ( dev-python/fpzip[${PYTHON_USEDEP}] )
	all? ( dev-python/zfpc[${PYTHON_USEDEP}] )
	all? ( dev-python/blosc[${PYTHON_USEDEP}] )
	all? ( dev-python/intern[${PYTHON_USEDEP}] )
	all? ( dev-python/dask[${PYTHON_USEDEP}] )
	all? ( dev-python/vtk[${PYTHON_USEDEP}] )
	all? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	all? ( dev-python/codecov[${PYTHON_USEDEP}] )
	all? ( dev-python/requests-mock[${PYTHON_USEDEP}] )
	all? ( dev-python/scipy[${PYTHON_USEDEP}] )
	all? ( dev-python/pillow[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/compressed-segmentation[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/compresso[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/crackle-codec[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/imagecodecs[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/simplejpeg[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/pyspng-seunglab[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/fpzip[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/zfpc[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/blosc[${PYTHON_USEDEP}] )
	all-codecs? ( dev-python/intern[${PYTHON_USEDEP}] )
	all-viewers? ( dev-python/vtk[${PYTHON_USEDEP}] )
	all-viewers? ( >=dev-python/matplotlib-3.6[${PYTHON_USEDEP}] )
	blosc? ( dev-python/blosc[${PYTHON_USEDEP}] )
	boss? ( dev-python/intern[${PYTHON_USEDEP}] )
	boss? ( dev-python/blosc[${PYTHON_USEDEP}] )
	compresso? ( dev-python/compresso[${PYTHON_USEDEP}] )
	crackle? ( dev-python/crackle-codec[${PYTHON_USEDEP}] )
	dask? ( dev-python/dask[${PYTHON_USEDEP}] )
	em-codecs? ( dev-python/imagecodecs[${PYTHON_USEDEP}] )
	em-codecs? ( dev-python/simplejpeg[${PYTHON_USEDEP}] )
	em-codecs? ( dev-python/pyspng-seunglab[${PYTHON_USEDEP}] )
	fp-codecs? ( dev-python/fpzip[${PYTHON_USEDEP}] )
	fp-codecs? ( dev-python/zfpc[${PYTHON_USEDEP}] )
	fpzip? ( dev-python/fpzip[${PYTHON_USEDEP}] )
	jpeg? ( dev-python/simplejpeg[${PYTHON_USEDEP}] )
	jxl? ( dev-python/imagecodecs[${PYTHON_USEDEP}] )
	mesh-viewer? ( dev-python/vtk[${PYTHON_USEDEP}] )
	png? ( dev-python/pyspng-seunglab[${PYTHON_USEDEP}] )
	seg-codecs? ( dev-python/compressed-segmentation[${PYTHON_USEDEP}] )
	seg-codecs? ( dev-python/compresso[${PYTHON_USEDEP}] )
	seg-codecs? ( dev-python/crackle-codec[${PYTHON_USEDEP}] )
	skeleton-viewer? ( >=dev-python/matplotlib-3.6[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/codecov[${PYTHON_USEDEP}] )
	test? ( dev-python/requests-mock[${PYTHON_USEDEP}] )
	test? ( dev-python/scipy[${PYTHON_USEDEP}] )
	zarr? ( dev-python/blosc[${PYTHON_USEDEP}] )
	zfpc? ( dev-python/zfpc[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
