<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># UniDip Python PortSee reference paper:  http://www.kdd.org/kdd2016/subtopic/view/skinny-dip-clustering-in-a-sea-of-noiseUniDip is a noise robust clustering algorithm for 1 dimensional numeric data. It recursively extracts peaks of density in the data utilizing the Hartigan Dip-test of Unimodality.## Installcoming soon...```pip3.6 install unidip```## Examples### Basic Usage```pythonfrom unidip import UniDip# create bi-modal distributiondat = np.concatenate([np.random.randn(200)-3, np.random.randn(200)+3])# sort data so returned indices are meaningfuldat = np.msort(dat)# get start and stop indices of peaks intervals = UniDip(dat).run()```### Advanced Options* **alpha**: control sensitivity as p-value. Default is 0.05. increase to isolate more peaks with less confidence. Or, decrease to isolate only peaks that are least likely to be noise.* **mrg_dst**: Defines how close intervals must be before they are merged.* **ntrials**: how many trials are run in Hartigan Dip Test more trials adds confidance but takes longer.```pythonintervals = UniDip(dat, alpha=0.001, ntrials=1000, mrg_dst=5).run()```</longdescription>
</pkgmetadata>