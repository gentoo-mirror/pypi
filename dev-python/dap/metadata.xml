<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Implementation of the `Data Access Protocol &lt;http://opendap.org&gt;`_. This is a Python implementation of the Data Access Protocol, ascientific protocol for data access developed by the OPeNDAP team(http://opendap.org). This implementation is developed from scratch,following the latest specification of the protocol (DAP 2.0 DraftCommunity Standard 2005/04/27) and based on my experience withOPeNDAP servers on the wild.Using this module one can access hundreds of scientific datasetsfrom Python programs, accessing data in an efficient, transparentand pythonic way. Arrays are manipulated like normal multi-dimensionalarrays (like numpy.array, e.g.), with the fundamental differencethat data is downloaded on-the-fly when a variable is sliced.Sequential data can be filtered on the server side before beingdownloaded, saving bandwith and time.The module also implements a DAP server, allowing datasets from amultitude of formats (netCDF, Matlab, CSV, GrADS/GRIB files, SQLRDBMS) to be served on the internet. The server specifies a pluginAPI for supporting new data formats in an easy way. The DAP serveris implemented as a WSGI application (see PEP 333), running on avariery of servers, and can be combined with WSGI middleware tosupport authentication, gzip compression and much more.The latest version is available in a `Subversion repository&lt;http://pydap.googlecode.com/svn/trunk/dap#egg=dap-dev&gt;`_.</longdescription>
</pkgmetadata>