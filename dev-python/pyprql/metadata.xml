<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyprql[![CI/CD](https://github.com/prql/pyprql/actions/workflows/pull-request.yaml/badge.svg?branch=main)](https://github.com/prql/pyprql/actions/workflows/pull-request.yaml)[![Documentation Status](https://readthedocs.org/projects/pyprql/badge/?version=latest)](https://pyprql.readthedocs.io/en/latest/?badge=latest)![PyPI](https://img.shields.io/pypi/v/pyprql)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyprql)[![Codestyle: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)&lt;!-- [![codecov](https://codecov.io/gh/prql/PyPrql/branch/main/graph/badge.svg?token=C6J2UI7FR5)](https://codecov.io/gh/prql/PyPrql) --&gt;pyprql contains:- pyprql.pandas_accessor — Pandas integration for PRQL- pyprql.magic — IPython magic for connecting to databases using `%%prql`- pyprql.compile — An export of `prql-python`'s `compile` functionFor docs, check out the [pyprql docs](https://pyprql.readthedocs.io/), and the[PRQL Book][prql_docs].## Installation```shpip install pyprql```## Usage### Pandas integration```pythonimport pandas as pdimport pyprql.pandas_accessordf = (...)results_df = df.prql.query(&quot;select [age,name,occupation] | filter age &gt; 21&quot;)```### Jupyter Magic```pythonIn [1]: %load_ext pyprql.magicIn [2]: %prql postgresql://user:password@localhost:5432/databaseIn [3]: %%prql   ...: from p   ...: group categoryID (   ...:   aggregate [average unitPrice]   ...: )In [4]: %%prql results &lt;&lt;   ...: from p   ...: aggregate [min unitsInStock, max unitsInStock]```### CompilationThis library exposes `prql-python.compile`, so we can simply generate SQL:```pythonimport pyprqlpyprql.compile(&quot;from artists | select track&quot;)print(pyprql.compile(&quot;from artists | select track&quot;))```...returns...```sqlSELECT  trackFROM  artists```For context, `prql-python` is the Python binding for `prql-compiler`, so onlycontains functions for compilation; and this library offers broader pythonintegrations and tooling.## SupportThis project was created by[@charlie-sanders](https://github.com/charlie-sanders/) &amp;[@rbpatt2019](https://github.com/rbpatt2019) and is now maintained by thebroader PRQL team.[prql_docs]: https://prql-lang.org/book</longdescription>
</pkgmetadata>