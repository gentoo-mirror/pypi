<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BLE2MQTT### Control your Bluetooth devices with smart home![ble2mqtt devices](./ble2mqtt.png)## Supported devices:### Any device- Any bluetooth device can work as a presence tracker   You can provide `&quot;threshold&quot;` parameter to the device to set the limit in   second when the device is considered away. The default value is 180 seconds.### Kettles- **Redmond RK-G2xxS series (type: redmond_rk_g200)**  The default key that is used is `&quot;ffffffffffffffff&quot;`  and can be omitted in the config.  In some cases kettles don't accept it. Just use another   key in the config file for the device:   `&quot;key&quot;: &quot;16 random hex numbers&quot;`- **Mi Kettle (type: mikettle)**  Use correct `product_id` for your kettle:  - yunmi.kettle.v1: `131`  - yunmi.kettle.v2: `275` (default)  - yunmi.kettle.v7: `1116`### Multi-Cookers- **Redmond RMC-M225S, RMC-M227S (type: redmond_rmc_m200)**  Notes about the key parameter you can read above for the   Redmond kettles.   *Other RMC multi-cookers may need   adjustments for the list of available programs, it depends  on the device panel.*### Humidity sensors- **Xiaomi MJ_HT_V1 (type: xiaomihtv1)**- **Xiaomi LYWSD02MMC (type: xiaomihtv1)**- **Xiaomi LYWSD03MMC (type: xiaomilywsd)** (due to the connection to the device on   every data fetch, it consumes more battery power. Flashing to the custom  firmware is recommended)- **Xiaomi LYWSD03MMC with custom ATC firmware (xiaomilywsd_atc)**  - supported both atc1441 and pvvx formats- **Qingping CGDK2 (type: qingpingCGDK2)**### Air sensors- **Vson WP6003 (type: wp6003)**### Shades and Blinds- **Generic AM43 (type: am43)**  Manufacturer can be A-OK, Zemismart, etc.- **Soma Shades (type: soma_shades)**### Bulbs- **Avea RGBW bulbs (type: avea_rgbw)**### Dosimeters- **Atom Fast (type: atomfast)**### Heaters- **Ensto EPHBEBT10PR, EPHBEBT15PR (type: ensto_thermostat)**  These devices require [manual pairing](#manual-pairing-in-linux).  After the device is paired on the host device, see the logs for the `key` and   put it to the config.  The adapter uses holiday mode to control temperature as thermostat. You cannot   use this feature in the official app while ble2mqtt is working.### Battery voltage meters- **BM2 car battery voltage meter (type: voltage_bm2)**### Plant sensors:- **LifeControl MCLH-09 (type: mclh09)**  optionally, reconnection interval can be configured with `interval` parameter in secondsBy default, a device works in the passive mode without connection by listening to advertisement packets from a device.To use connection to the device provide `&quot;passive&quot;: false` parameter.**Supported devices in passive mode:**- Xiaomi MJ_HT_V1 (xiaomihtv1)- Xiaomi LYWSD03MMC with custom ATC firmware (xiaomilywsd_atc)- Any device as presence tracker## Manual pairing in LinuxSome devices (e.g. Ensto heaters) require paired connection to work with it. You need to pair the device with linux machine before using it. Find out MAC addresses of your devices. Put the device in pairing mode if it is supported.Open console and run `bluetoothctl` command. It is a command line tool to work with BLE devices.Wait for the prompt ```[bluetooth]#```Print a command to enable scanning. Linux must know the device is present before pairing.```[bluetooth]# scan on```Wait for MAC address of the device appears in the list of found devices.Print a pairing command (replace MAC address to the one from your device)```[bluetooth]# pair 90:fd:00:00:00:01```On successful pairing you'll see a message:```[CHG] Device 90:FD:00:00:00:01 Paired: yesPairing successful```You can proceed with the next configuration steps now.## Selinux issuesIf using SELinux and you are experience issues, see [README.md](selinux/README.md).### Known issues:- *High cpu usage due to underlying library to work with bluetooth***Use this software at your own risk.**## ConfigurationDefault config should be located in `/etc/ble2mqtt.json` or can be overridden with `BLE2MQTT_CONFIG` environment variable.Example run command:```sh BLE2MQTT_CONFIG=./ble2mqtt.json ble2mqtt```The configuration file is a JSON with the following content:```json{    &quot;mqtt_host&quot;: &quot;localhost&quot;,    &quot;mqtt_port&quot;: 1883,    &quot;mqtt_user&quot;: &quot;&quot;,    &quot;mqtt_password&quot;: &quot;&quot;,    &quot;log_level&quot;: &quot;INFO&quot;,    &quot;devices&quot;: [        {            &quot;address&quot;: &quot;11:22:33:aa:cc:aa&quot;,            &quot;type&quot;: &quot;presence&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:cc&quot;,            &quot;type&quot;: &quot;redmond_rk_g200&quot;,            &quot;key&quot;: &quot;ffffffffffffffff&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:c0&quot;,            &quot;type&quot;: &quot;redmond_rmc_m200&quot;,            &quot;key&quot;: &quot;ffffffffffffffff&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:c1&quot;,            &quot;type&quot;: &quot;ensto_thermostat&quot;,            &quot;# see logs after pairing and put the key to config&quot;: &quot;&quot;,            &quot;key&quot;: &quot;00112233&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:cd&quot;,            &quot;type&quot;: &quot;mikettle&quot;,            &quot;product_id&quot;: 275        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:de&quot;,            &quot;type&quot;: &quot;am43&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:dd&quot;,            &quot;type&quot;: &quot;xiaomihtv1&quot;        },        {            &quot;address&quot;: &quot;11:22:34:aa:bb:dd&quot;,            &quot;type&quot;: &quot;xiaomihtv1&quot;,            &quot;passive&quot;: false        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:ee&quot;,            &quot;type&quot;: &quot;xiaomilywsd&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:bb:ff&quot;,            &quot;type&quot;: &quot;xiaomilywsd_atc&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:aa:aa&quot;,            &quot;type&quot;: &quot;atomfast&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:aa:bb&quot;,            &quot;type&quot;: &quot;voltage_bm2&quot;        },        {            &quot;address&quot;: &quot;11:22:33:aa:aa:bv&quot;,            &quot;type&quot;: &quot;mclh09&quot;,            &quot;interval&quot;: 600        }    ]}```You can omit a line, then default value will be used.Extra configuration parameters:- `&quot;base_topic&quot;`- the default value is 'ble2mqtt'- `&quot;mqtt_prefix&quot;`- a prefix to distinguish ble devices from other instances and  programs. The default value is 'b2m_'.- `&quot;hci_adapter&quot;` - an adapter to use. The default value is &quot;hci0&quot;Devices accept `friendly_name` parameter to replace mac address in devicenames for Home Assistant.## Systemd unit file to start on bootPut the following content to the unit file `/etc/systemd/system/ble2mqtt.service````[Unit]Description=ble2mqtt bridge[Service]Type=SimpleExecStart=/usr/local/bin/ble2mqttUser=ble2mqttGroup=ble2mqttWants=bluetooth.target[Install]WantedBy=multi-user.target```The user and group should match the owner and group of the configuration file /etc/ble2mqtt.json.Afterwards you simply have to enable and start the service:```shsudo systemctl daemon-reloadsudo systemctl enable ble2mqttsudo systemctl start ble2mqtt```## Installation on OpenWRTExecute the following commands in the terminal:```shopkg updateopkg install python3-pip python3-asynciopip3 install &quot;bleak&gt;=0.11.0&quot;pip3 install -U ble2mqtt```Create the configuration file in /etc/ble2mqtt.json andappend your devices.Bluetooth must be turned on.```shhciconfig hci0 up```Run the service in background```shble2mqtt 2&gt; /tmp/ble2mqtt.log &amp;```Add a service script to start:```shcat &lt;&lt;EOF &gt; /etc/init.d/ble2mqtt#!/bin/sh /etc/rc.commonSTART=98USE_PROCD=1start_service(){    procd_open_instance    procd_set_param env BLE2MQTT_CONFIG=/etc/ble2mqtt.json    procd_set_param command /usr/bin/ble2mqtt    procd_set_param stdout 1    procd_set_param stderr 1    procd_close_instance}EOFchmod +x /etc/init.d/ble2mqtt/etc/init.d/ble2mqtt enable/etc/init.d/ble2mqtt start```## Running on Xiaomi Zigbee GatewayDue to small CPU power and increasing number of messages from bluetoothdit is recommended to do several workarounds:1. Use passive mode for those sensors for which this is possible. E.g. use   custom ATC firmware for lywsd03mmc sensors1. Restart `bluetoothd` daily and restart ble2mqtt several times a day to    reduce increasing CPU usage.    Put the following lines to the `/etc/crontabs/root` ```10 0,7,17 * * * /etc/init.d/ble2mqtt restart1 4,14 * * * /etc/init.d/bluetoothd restart```## Running in ContainerBuild the image as:```shpodman build -t ble2mqtt:dev .```Start the container and share the config file and DBus for Bluetooth connectivity:```shpodman run \-d \--net=host \-v $PWD/ble2mqtt.json.sample:/etc/ble2mqtt.json:z \-v /var/run/dbus:/var/run/dbus:z \ble2mqtt:dev```Instead of sharing `/var/run/dbus`, you can export `DBUS_SYSTEM_BUS_ADDRESS`.NOTE: `--net=host` is required as it needs to use the bluetooth interfaceNOTE: `podman` is the same as `docker`## Running in Container FULLy&gt; **ATTENTION:** Make sure `bluez` is not running (or not intalled) on your host. Build the image as:```shdocker build -t ble2mqtt:dev .```Start the container and share the config file:```shdocker run \-d \--net=host \--cap-add=NET_ADMIN \-v $PWD/ble2mqtt.json.sample:/etc/ble2mqtt.json:ro \ble2mqtt:dev```Docker compose:```yamlversion: '3.7'services:  ble2mqtt:    image: ble2mqtt:dev    build: ./ble2mqtt    hostname: ble2mqtt    restart: always    environment:      - TZ=Asia/Yekaterinburg    volumes:      - ./ble2mqtt/ble2mqtt.json:/etc/ble2mqtt.json:ro    network_mode: host    cap_add:      - NET_ADMIN```You do not need sharing `/var/run/dbus`, because `dbus` will start in the container.NOTE: `--net=host` and `--cap-add=NET_ADMIN` is required as it needs to use and control the bluetooth interface</longdescription>
</pkgmetadata>