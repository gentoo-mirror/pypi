<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>nbpresent=========|image0| |image1| |image2|    remix your `Jupyter Notebooks &lt;http://jupyter.org&gt;`__ as interactive    slideshows.. figure:: ./screenshot.png   :alt: .. |image0| image:: https://anaconda.org/anaconda-nb-extensions/nbpresent/badges/build.svg   :target: https://anaconda.org/anaconda-nb-extensions/nbpresent/builds.. |image1| image:: https://anaconda.org/anaconda-nb-extensions/nbpresent/badges/installer/conda.svg   :target: https://anaconda.org/anaconda-nb-extensions/nbpresent.. |image2| image:: https://img.shields.io/pypi/v/nbpresent.svg   :target: https://pypi.python.org/pypi/nbpresentUsing-----After `installing &lt;#install&gt;`__ (and potentially enabling) asappropriate for your environment, relaunch the Jupyter Notebook: in themain toolbar, you will get two new buttons that toggle the *Authoring*and *Presenting* modes.User Documentation and Community--------------------------------When *Authoring*, you can click on the ``(?)`` icon to see a number ofin-Notebook guided tours that show all the features, as well as seelinks to community pages:-  `mailing list &lt;https://groups.google.com/forum/#!forum/nbpresent&gt;`__   for general or long-term discussion and announcements-  `issues &lt;https://github.com/Anaconda-Platform/nbpresent/issues&gt;`__   for technical issues, as well as feature requests-  `chat &lt;https://gitter.im/Anaconda-Platform/nbpresent&gt;`__ for quickly   connecting with other usersRelated Projects-----------------  `live\_reveal/RISE &lt;https://github.com/damianavila/RISE&gt;`__, the   original inspiration for this work, based on   `reveal.js &lt;https://github.com/hakimel/reveal.js/&gt;`__.-  `RMarkdown &lt;http://rmarkdown.rstudio.com/ioslides_presentation_format.html&gt;`__   presentationsPublishing----------When you are happy with your presentation, you can download thestandalone HTML file from the *File -&gt; Download as -&gt; Presentation(.html)* menu item.Install-------    Note: installing directly off this repo won't work, as we don't ship    the built JavaScript and CSS assets. See more about    `developing &lt;#develop&gt;`__ below.``pip``~~~~~~~.. code:: shell    pip install nbpresent    python -m nbpresent.installThen either run.. code:: python    %reload_ext nbpresent*every time you start the notebook* or *enable* the extension for everynotebook launch:.. code:: shell    python -m nbpresent.install --enable --user    ``nbpresent.install`` accepts all of the same arguments as    ``jupyter nbextension install``.``conda``~~~~~~~~~.. code:: shell    conda install -c anaconda-nb-extensions nbpresentThis will enable ``nbpresent`` by default.Export------Stock ``nbconvert`` doesn't store quite enough information, so you'llneed to do something like this:.. code:: shell    nbpresent -i notebooks/README.ipynb -o README.htmlThe resulting file can be hosted and viewed (but not edited!) on anysite.If you have installed`nbbrowserpdf &lt;https://github.com/Anaconda-Platform/nbbrowserpdf&gt;`__,you can also export to pdf:.. code:: shell    nbpresent -i notebooks/README.ipynb -f pdf -o README.pdfYou can also pass in and get back streams:.. code:: shell    cmd_that_generates_ipynb | nbpresent -f pdf &gt; README.pdfHere's the whole doc:.. code:: python    !nbpresent --help.. parsed-literal::    usage: nbpresent [-h] [-i IPYNB] [-o OUTFILE] [-f {html,pdf}]        Generate a static nbpresent presentation from a Jupyter Notebook        optional arguments:      -h, --help            show this help message and exit      -i IPYNB, --ipynb IPYNB                            Input file (otherwise read from stdin)      -o OUTFILE, --outfile OUTFILE                            Output file (otherwise write to stdout)      -f {html,pdf}, --out-format {html,pdf}                            Output formatDevelop-------This assumes you have cloned this repository locally:::    git clone https://github.com/Anaconda-Platform/nbpresent.git    cd nbpresentRepo Architecture~~~~~~~~~~~~~~~~~The ``nbpresent`` nbextension is built from ``./src`` into``./nbpresent/static/nbresent`` with: - ``less`` for style - ``es6``(via ``babel``) for javascript - ``browserify`` for packagingThe ``nbpresent`` python module (server component) is stored in the``/nbpresent`` folderGetting Started~~~~~~~~~~~~~~~You'll need conda installed, either from`Anaconda &lt;https://www.continuum.io/downloads&gt;`__ or`miniconda &lt;http://conda.pydata.org/miniconda.html&gt;`__. You can import aPython 3.5 development environment named ``nbpresent`` from``./environment.yml``... code:: shell    conda update env    source activate nbpresentWe *still* use ``npm`` for a lot of dependencies, so then run:.. code:: shell    npm install    npm run buildEnsure development asset loading~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~To ensure that you always get the right assets, install the nbextensionwith the ``symlink``, ``force`` and ``enable`` options:.. code:: shell    python -m nbpresent.install --overwrite --symlink --enable --userIf developing in a `conda &lt;http://conda.pydata.org/docs/&gt;`__environment, you would want to pass in ``--prefix`` instead of``--user``.Chore Automation~~~~~~~~~~~~~~~~+---------+------------+| Task    | Command    |+=========+============+| Build   | ``npm run  || all of  | build``    || the     |            || front   |            || end     |            || assets  |            || with    |            || sourcem |            || aps     |            || for     |            || develop |            || ment    |            |+---------+------------+| Rebuild | ``npm run  || on      | watch``    || every   |            || save    |            |+---------+------------+| Rebuild | ``npm run  || all of  | dist``     || the     |            || front   |            || end     |            || assets, |            || and     |            || optimiz |            || e       |            || it      |            |+---------+------------+| Run the | ``npm run  || CasperJ | test``     || S       |            || and     |            || ``nose` |            || `       |            || tests   |            |+---------+------------+| Check   | ``npm run  || code    | lint``     || style   |            |+---------+------------+| Build   | ``npm run  || the     | pkg:conda` || conda   | `          || package |            |+---------+------------+| Build   | ``npm run  || **and   | pkg:pypi`` || upload* |            || *       |            || the     |            || pypi    |            || package |            |+---------+------------+| Build   | ``npm run  || the     | docs``     || ESDoc   |            || and     |            || Sphinx  |            || documen |            || tation  |            |+---------+------------+Changelog---------3.0.0~~~~~-  Update to notebook 4.22.0.0~~~~~-  Theme editor removed. Significant work required to stabilize to   public release quality.-  Adding some themes extracted from reveal.js1.1.1~~~~~-  fixing enabling on windows with ``nb_config_manager`` 0.1.3-  trimming down conda packages-  more reproducible builds1.1.0 (Unreleased)~~~~~~~~~~~~~~~~~~-  fixing issue with slides without regions and some layouts crashing   editor   `#58 &lt;https://github.com/Anaconda-Platform/nbpresent/issues/58&gt;`__-  adding JS extensibility of themes (partial   `#44 &lt;https://github.com/Anaconda-Platform/nbpresent/issues/44&gt;`__)-  see `Extending   nbpresent &lt;https://github.com/Anaconda-Platform/nbpresent/blob/master/notebooks/Extending%20nbpresent.ipynb&gt;`__1.0.0~~~~~-  `Theme   editor &lt;https://github.com/Anaconda-Platform/nbpresent/pull/41&gt;`__-  Much more consistent UI-  Mnay bug fixes and more testing</longdescription>
</pkgmetadata>