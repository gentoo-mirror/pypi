<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Hotspotty Payment EmailThe goal of this project is about developing a command line tool that take as input a list of commission reports in csvformat exported from the [Commission report](https://app.hotspotty.net/workspace/helium/commission-reports) section ofHotspotty platform and send a gmail e-mail to each user inside the input reports to inform them about therewards they'll receive.## Setup your Google account and get the file credentials.json1. Set up a [Google Cloud Platform](https://cloud.google.com/) project, click on the hamburger menu, and select view all   products. Under the management   section, select [APIs and services](https://console.cloud.google.com/apis/dashboard)2. Next, select [Library](https://console.cloud.google.com/apis/library) and type “Gmail API” in the search bar, and   click on the Gmail API card.3. Finally, select the enable   the [Gmail API](https://console.cloud.google.com/apis/library/gmail.googleapis.com?project=geocaching-366015) button.4. Now, you’ll need to download the client secrets file for your project. Start by selecting create credentials. In this   section, select the Gmail API as your preferred API and user data as the type of data you will be accessing.5. To get the OAuth client ID, select your application type as a Desktop App, set the application name, and select   create. Next, download and store the credentials in your local file system.After downloading the secret file, you should have a file in this format:```json{  &quot;installed&quot;: {    &quot;client_id&quot;: &quot;463225603869-un1ijjk75iguesbh4nhclm74edprhj5p.apps.googleusercontent.com&quot;,    &quot;project_id&quot;: &quot;geocaching-366015&quot;,    &quot;auth_uri&quot;: &quot;https://accounts.google.com/o/oauth2/auth&quot;,    &quot;token_uri&quot;: &quot;https://oauth2.googleapis.com/token&quot;,    &quot;auth_provider_x509_cert_url&quot;: &quot;https://www.googleapis.com/oauth2/v1/certs&quot;,    &quot;client_secret&quot;: &quot;TOCSXX-wXkVvnUSGrqC_OcH722jmnFPZHIE&quot;,    &quot;redirect_uris&quot;: [      &quot;http://localhost&quot;    ]  }}```## How to use the script1. Export a one or more contact commissions as show below in the   [Commission report](https://app.hotspotty.net/workspace/helium/commission-reports) section of Hotspotty:   ![export_contact_commissions.png](docs/img/export_contact_commissions.png)2. See script help to get more details about how to use the script.       ```bash      hotspotty-payment-email --help   ```3. Here below a concrete example which assumes that:   - You have followed stesps described in [Setup you googl account](#setup-you-googl-account) section and you have a      credentials.json file in the local folder.   - You have 2 contact commissions files exported from hotspotty in the local folder called commission-report-1.csv     and commission-report-2.csv and these files have ',' as delimiter.   - You have a jinja emial template called mail_template.html in the local folder.   ```bash    hotspotty-payment-email \     --draft True \     --subject &quot;Hotspot report from 2023/04/01 to 2023/05/01&quot; \     --start 2023-04-01 \     --end 2023-05-01 \     --template &quot;mail_template.html&quot; \     --credentials &quot;credentials.json&quot; \     --delimiter &quot;,&quot; \     --report &quot;commission-report-1.csv&quot; --report &quot;commission-report-2.csv&quot;   ```## Sample template e-mailHere below a sample template e-mail that you can use as a starting point to create your own template e-mail:```html&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;      Hi {{name}},&lt;br&gt;      Below the tokens accrued by your hotspot in the following      period: {{start_date}} - {{end_date}}. Payments will be made to your wallet:      &lt;a href=&quot;https://explorer.solana.com/address/{{wallet_address}}&quot;&gt;{{wallet_address}}&lt;/a&gt; and in total you will receive:      &lt;ul&gt;         {% if amount_hnt &gt; 0 %}             &lt;li&gt;{{amount_hnt}} HNT.&lt;/li&gt;         {% endif %}         {% if amount_iot &gt; 0 %}             &lt;li&gt;{{amount_iot}} IOT.&lt;/li&gt;         {% endif %}      &lt;/ul&gt;&lt;/p&gt;    &lt;p&gt;      Thanks,&lt;br&gt;      Bye bye    &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;```</longdescription>
</pkgmetadata>