<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://raw.githubusercontent.com/scikit-hep/uproot3/master/docs/source/logo-300px.png   :alt: uproot   :target: https://github.com/scikit-hep/uproot3.. inclusion-marker-1-5-do-not-removeuproot (originally Î¼proot, for &quot;micro-Python ROOT&quot;) is a reader and a writer of the `ROOT file format &lt;https://root.cern/&gt;`__ using only Python and Numpy. Unlike the standard C++ ROOT implementation, uproot is only an I/O library, primarily intended to stream data into machine learning libraries in Python. Unlike PyROOT and root_numpy, uproot does not depend on C++ ROOT. Instead, it uses Numpy to cast blocks of data from the ROOT file as Numpy arrays.Python does not necessarily mean slow. As long as the data blocks (&quot;baskets&quot;) are large, this &quot;array at a time&quot; approach can even be faster than &quot;event at a time&quot; C++. Below, the rate of reading data into arrays with uproot is shown to be faster than C++ ROOT (left) and root_numpy (right), as long as the baskets are tens of kilobytes or larger (for a variable number of muons per event in an ensemble of different physics samples; higher is better)... image:: https://raw.githubusercontent.com/scikit-hep/uproot3/master/docs/root-none-muon.png   :width: 350 px.. image:: https://raw.githubusercontent.com/scikit-hep/uproot3/master/docs/rootnumpy-none-muon.png   :width: 350 pxuproot is not maintained by the ROOT project team, so post bug reports here as `GitHub issues &lt;https://github.com/scikit-hep/uproot3/issues&gt;`__, not on a ROOT forum. Thanks!.. inclusion-marker-2-do-not-removeInstallation============Install uproot like any other Python package:.. code-block:: bash    pip install uproot3                      # maybe with sudo or --user, or in virtualenvThe pip installer automatically installs strict dependencies; the conda installer also installs optional dependencies (except for Pandas).Strict dependencies:--------------------- `numpy &lt;https://scipy.org/install.html&gt;`__ (1.13.1+)- `Awkward Array 0.x &lt;https://github.com/scikit-hep/awkward-0.x&gt;`__- `uproot3-methods &lt;https://github.com/scikit-hep/uproot3-methods&gt;`__- `cachetools &lt;https://pypi.org/project/cachetools&gt;`__Optional dependencies:----------------------- `lz4 &lt;https://pypi.org/project/lz4&gt;`__ to read/write lz4-compressed ROOT files- `xxhash &lt;https://pypi.org/project/xxhash/&gt;`__ to read/write lz4-compressed ROOT files- `lzma &lt;https://pypi.org/project/backports.lzma&gt;`__ to read/write lzma-compressed ROOT files in Python 2- `xrootd &lt;https://anaconda.org/conda-forge/xrootd&gt;`__ to access remote files through XRootD- `requests &lt;https://pypi.org/project/requests&gt;`__ to access remote files through HTTP- `pandas &lt;https://pandas.pydata.org&gt;`__ to fill Pandas DataFrames instead of Numpy arrays**Reminder: you do not need C++ ROOT to run uproot.**Tutorial========See the `project homepage &lt;https://github.com/scikit-hep/uproot3&gt;`__ for a `tutorial &lt;https://github.com/scikit-hep/uproot3#tutorial&gt;`__.Run `that tutorial &lt;https://mybinder.org/v2/gh/scikit-hep/uproot3/master?urlpath=lab/tree/binder%2Ftutorial.ipynb&gt;`__ on Binder.**Tutorial contents:*** `Introduction &lt;https://github.com/scikit-hep/uproot3#introduction&gt;`__* `What is Uproot? &lt;https://github.com/scikit-hep/uproot3#what-is-uproot&gt;`__* `Exploring a file &lt;https://github.com/scikit-hep/uproot3#exploring-a-file&gt;`__  - `Compressed objects in ROOT files &lt;https://github.com/scikit-hep/uproot3#compressed-objects-in-root-files&gt;`__  - `Exploring a TTree &lt;https://github.com/scikit-hep/uproot3#exploring-a-ttree&gt;`__  - `Some terminology &lt;https://github.com/scikit-hep/uproot3#some-terminology&gt;`__* `Reading arrays from a TTree &lt;https://github.com/scikit-hep/uproot3#reading-arrays-from-a-ttree&gt;`__* `Caching data &lt;https://github.com/scikit-hep/uproot3#caching-data&gt;`__  - `Automatically managed caches &lt;https://github.com/scikit-hep/uproot3#automatically-managed-caches&gt;`__  - `Caching at all levels of abstraction &lt;https://github.com/scikit-hep/uproot3#caching-at-all-levels-of-abstraction&gt;`__* `Lazy arrays &lt;https://github.com/scikit-hep/uproot3#lazy-arrays&gt;`__  - `Lazy array of many files &lt;https://github.com/scikit-hep/uproot3#lazy-array-of-many-files&gt;`__  - `Lazy arrays with caching &lt;https://github.com/scikit-hep/uproot3#lazy-arrays-with-caching&gt;`__  - `Lazy arrays as lightweight skims &lt;https://github.com/scikit-hep/uproot3#lazy-arrays-as-lightweight-skims&gt;`__  - `Lazy arrays in Dask &lt;https://github.com/scikit-hep/uproot3#lazy-arrays-in-dask&gt;`__* `Iteration &lt;https://github.com/scikit-hep/uproot3#iteration&gt;`__  - `Filenames and entry numbers while iterating &lt;https://github.com/scikit-hep/uproot3#filenames-and-entry-numbers-while-iterating&gt;`__  - `Limiting the number of entries to be read &lt;https://github.com/scikit-hep/uproot3#limiting-the-number-of-entries-to-be-read&gt;`__  - `Controlling lazy chunk and iteration step sizes &lt;https://github.com/scikit-hep/uproot3#controlling-lazy-chunk-and-iteration-step-sizes&gt;`__  - `Caching and iteration &lt;https://github.com/scikit-hep/uproot3#caching-and-iteration&gt;`__* `Changing the output container type &lt;https://github.com/scikit-hep/uproot3#changing-the-output-container-type&gt;`__* `Filling Pandas DataFrames &lt;https://github.com/scikit-hep/uproot3#filling-pandas-dataframes&gt;`__* `Selecting and interpreting branches &lt;https://github.com/scikit-hep/uproot3#selecting-and-interpreting-branches&gt;`__  - `TBranch interpretations &lt;https://github.com/scikit-hep/uproot3#tbranch-interpretations&gt;`__  - `Reading data into a preexisting array &lt;https://github.com/scikit-hep/uproot3#reading-data-into-a-preexisting-array&gt;`__  - `Passing many new interpretations in one call &lt;https://github.com/scikit-hep/uproot3#passing-many-new-interpretations-in-one-call&gt;`__  - `Multiple values per event: fixed size arrays &lt;https://github.com/scikit-hep/uproot3#multiple-values-per-event-fixed-size-arrays&gt;`__  - `Multiple values per event: leaf-lists &lt;https://github.com/scikit-hep/uproot3#multiple-values-per-event-leaf-lists&gt;`__  - `Multiple values per event: jagged arrays &lt;https://github.com/scikit-hep/uproot3#multiple-values-per-event-jagged-arrays&gt;`__  - `Jagged array performance &lt;https://github.com/scikit-hep/uproot3#jagged-array-performance&gt;`__  - `Special physics objects: Lorentz vectors &lt;https://github.com/scikit-hep/uproot3#special-physics-objects-lorentz-vectors&gt;`__  - `Variable-width values: strings &lt;https://github.com/scikit-hep/uproot3#variable-width-values-strings&gt;`__  - `Arbitrary objects in TTrees &lt;https://github.com/scikit-hep/uproot3#arbitrary-objects-in-ttrees&gt;`__  - `Doubly nested jagged arrays (i.e. std::vector&lt;std::vector&lt;T&gt;&gt;) &lt;https://github.com/scikit-hep/uproot3#doubly-nested-jagged-arrays-ie-stdvectorstdvectort&gt;`__* `Parallel array reading &lt;https://github.com/scikit-hep/uproot3#parallel-array-reading&gt;`__* `Histograms, TProfiles, TGraphs, and others &lt;https://github.com/scikit-hep/uproot3#histograms-tprofiles-tgraphs-and-others&gt;`__* `Creating and writing data to ROOT files &lt;https://github.com/scikit-hep/uproot3#creating-and-writing-data-to-root-files&gt;`__  - `Writing histograms &lt;https://github.com/scikit-hep/uproot3#writing-histograms&gt;`__  - `Writing TTrees &lt;https://github.com/scikit-hep/uproot3#writing-ttrees&gt;`__</longdescription>
</pkgmetadata>