<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================requests-mock===============================.. image:: https://badge.fury.io/py/requests-mock.png    :target: https://pypi.org/project/requests-mock/Intro=====`requests-mock` provides a building block to stub out the HTTP `requests`_ portions of your testing code.You should checkout the `docs`_ for more information.The Basics==========Everything in `requests`_ eventually goes through an adapter to do the transport work.`requests-mock` creates a custom `adapter` that allows you to predefine responses when certain URIs are called.There are then a number of methods provided to get the adapter used.A simple example:.. code:: python    &gt;&gt;&gt; import requests    &gt;&gt;&gt; import requests_mock    &gt;&gt;&gt; session = requests.Session()    &gt;&gt;&gt; adapter = requests_mock.Adapter()    &gt;&gt;&gt; session.mount('mock://', adapter)    &gt;&gt;&gt; adapter.register_uri('GET', 'mock://test.com', text='data')    &gt;&gt;&gt; resp = session.get('mock://test.com')    &gt;&gt;&gt; resp.status_code, resp.text    (200, 'data')Obviously having all URLs be `mock://` prefixed isn't going to be useful,so you can use `requests_mock.Mocker` to get the adapter into place.As a context manager:.. code:: python    &gt;&gt;&gt; with requests_mock.Mocker() as m:    ...     m.get('http://test.com', text='data')    ...     requests.get('http://test.com').text    ...    'data'Or as a decorator:.. code:: python    &gt;&gt;&gt; @requests_mock.Mocker()    ... def test_func(m):    ...     m.get('http://test.com', text='data')    ...     return requests.get('http://test.com').text    ...    &gt;&gt;&gt; test_func()    'data'Or as a pytest fixture:.. code:: python    &gt;&gt;&gt; def test_simple(requests_mock):    ...    requests_mock.get('http://test.com', text='data')    ...    assert 'data' == requests.get('http://test.com').textFor more information checkout the `docs`_.Reporting Bugs==============Development and bug tracking is performed on `GitHub`_.Questions=========There is a tag dedicated to `requests-mock` on `StackOverflow`_ where you can ask usage questions.License=======Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you maynot use this file except in compliance with the License. You may obtaina copy of the License at     https://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUTWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See theLicense for the specific language governing permissions and limitationsunder the License... _requests: https://requests.readthedocs.io.. _docs: https://requests-mock.readthedocs.io/.. _GitHub: https://github.com/jamielennox/requests-mock.. _StackOverflow: https://stackoverflow.com/questions/tagged/requests-mock</longdescription>
</pkgmetadata>