<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Charmcraft is for Kubernetes and machine operator developersCharmcraft supports Kubernetes and machine operator development.Charmcraft enables collaboration between charmed operator developers, andpublication on [Charmhub](https://charmhub.io/), home of the Charmed OperatorCollection.Use `charmcraft` to:- Init a new charmed operator file structure- Build your operator into a charmed operator for distribution- Register your charmed operator name on Charmhub- Upload your charmed operators to Charmhub- Release your charmed operators into channelsYou can use charmcraft with operators written in any language but werecommend the [Python Operator Framework onGithub](https://github.com/canonical/operator) which is also [onPyPI](https://pypi.org/project/ops/) for ease of development andcollaboration.Charmcraft and the Charmed Operator Framework extend the operator patternbeyond Kubernetes or machine deployments with [universaloperators](https://juju.is/universal-operators) that drive Linux andWindows apps. The universal operator pattern is very exciting formulti-cloud application management.## InstallThe recommended way to install `charmcraft` is from the stable channel with    sudo snap install charmcraft --classicThere are multiple channels other than `stable`. See the full list with`snap info charmcraft`. We recommend either `latest/stable` or `latest/beta`for everyday charming. With the snap you will always be up to date asCharmhub services and APIs evolve.You can also install `charmcraft` from PyPI, but some system packages (`libffi-dev`, `libapt-pkg-dev` and `libssl-dev`) and a Python package need to be installed first (`python-apt`). For the later in Ubuntu systems you need to check the [Python APT library page](https://launchpad.net/ubuntu/+source/python-apt) and choose the source file that matches your system (e.g. for Impish it's `python-apt_2.2.1.tar.xz`). So the instructions would be:    $ sudo apt install -y libffi-dev libapt-pkg-dev libssl-dev    $ python3 -m venv env    $ source env/bin/activate    (env)$ pip install https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/python-apt/2.2.1/python-apt_2.2.1.tar.xz    (env)$ pip install charmcraft## Initialize a charm operator package file structureUse `charmcraft init` to create a new template charm operator file tree:```bash$ mkdir my-new-charm; cd my-new-charm$ charmcraft initCharm operator package file and directory tree initialized.Now edit the following package files to provide fundamental charm metadata and other information:metadata.yamlconfig.yamlsrc/charm.pyREADME.md```You will now have all the essential files for a charmed operator, includingthe actual `src/charm.py` skeleton and various items of metadata. Charmcraftassumes you want to work in Python so it will add `requirements.txt` withthe Python operator framework `ops`, and other conventional developmentsupport files.## Build your charmWith a correct `metadata.yaml` and with `ops` in `requirements.txt` you canbuild a charmed operator with:```text$ charmcraft packCreated 'test-charm.charm'.````charmcraft pack` will fetch additional files into the tree from PyPI basedon `requirements.txt` and will compile modules using a virtualenv.The charmed operator is just a zipfile with metadata and the operator codeitself:```text$ unzip -l test-charm.charmArchive:  test-charm.charm  Length      Date    Time    Name---------  ---------- -----   ----      221  2020-11-15 08:10   metadata.yaml[...]    25304  2020-11-15 08:14   venv/yaml/__pycache__/scanner.cpython-38.pyc---------                     -------   812617                     84 files```Now, if you have a Kubernetes cluster with the Juju OLM accessible you can issue`juju deploy ./my-new-charm.charm --resource httpbin-image=kennethreitz/httpbin`.For classic machine deployments you can issue `juju deploy ./my-new-charm.charm`.You do not need to publish your operator on Charmhub, you can pass the charmedoperator file around directly to users, or for CI/CD purposes.## Charmhub login and charm name reservations[Charmhub](https://charmhub.io/) is the world's largest repository ofoperators. It makes it easy to share and collaborate on operators. Thecommunity are interested in operators for a very wide range of purposes,including infrastructure-as-code and legacy application management, and ofcourse Kubernetes operators.Use `charmcraft login` and `charmcraft logout` to sign into Charmhub.## Charmhub name registrationYou can register operator names in Charmhub with `charmcraft register &lt;name&gt;`.Many common names have been reserved, you are encouraged to discuss yourinterest in leading or collaborating on a charmed operator in[Charmhub Discourse](https://discourse.charmhub.io/).Charmhub naming policy is the principle of least surprise - a well-knownname should map to an operator that most people would expect to get for thatname.Operators in Charmhub can be renamed as needed, so feel free to register atemporary name, such as &lt;username&gt;-&lt;charmname&gt; as a placeholder.## Operator upload and releaseCharmhub operators are published in channels, like:```textlatest/stablelatest/candidatelatest/betalatest/edge1.3/beta1.3/edge1.2/stable1.2/candidate1.0/stable```Use `charmcraft upload` to get a new revision number for your freshly builtcharmed operator, and `charmcraft release` to release a revision into anyparticular channel for your users.</longdescription>
</pkgmetadata>