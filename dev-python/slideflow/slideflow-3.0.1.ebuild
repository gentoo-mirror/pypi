# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=wheel

inherit python-r1 gs-pypi

DESCRIPTION="Deep learning tools for digital histology [wheel]"

HOMEPAGE="https://github.com/slideflow/slideflow"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/py3/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}-py3-none-any.whl"
SOURCEFILE="${REALNAME}-${REALVERSION}-py3-none-any.whl"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all cellpose cucim dev tf torch"
DEPENDENCIES=">=dev-python/gast-0.3.3[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	>=dev-python/matplotlib-3.2[${PYTHON_USEDEP}]
	dev-python/imageio[${PYTHON_USEDEP}]
	dev-python/opencv-python-headless[${PYTHON_USEDEP}]
	dev-python/shapely[${PYTHON_USEDEP}]
	dev-python/umap-learn[${PYTHON_USEDEP}]
	<dev-python/seaborn-0.14[${PYTHON_USEDEP}]
	dev-python/pandas[${PYTHON_USEDEP}]
	dev-python/pyvips[${PYTHON_USEDEP}]
	dev-python/fpdf2[${PYTHON_USEDEP}]
	dev-python/scikit-image[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/click[${PYTHON_USEDEP}]
	dev-python/protobuf[${PYTHON_USEDEP}]
	dev-python/tensorboard[${PYTHON_USEDEP}]
	dev-python/crc32c[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/tabulate[${PYTHON_USEDEP}]
	dev-python/rasterio[${PYTHON_USEDEP}]
	dev-python/smac[${PYTHON_USEDEP}]
	dev-python/ConfigSpace[${PYTHON_USEDEP}]
	dev-python/rich[${PYTHON_USEDEP}]
	>=dev-python/pillow-6.0.0[${PYTHON_USEDEP}]
	dev-python/imgui[${PYTHON_USEDEP}]
	dev-python/pyopengl[${PYTHON_USEDEP}]
	dev-python/glfw[${PYTHON_USEDEP}]
	dev-python/saliency[${PYTHON_USEDEP}]
	dev-python/pyperclip[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	dev-python/parameterized[${PYTHON_USEDEP}]
	dev-python/zarr[${PYTHON_USEDEP}]
	dev-python/gdown[${PYTHON_USEDEP}]
	dev-python/triangle[${PYTHON_USEDEP}]
	all? ( dev-python/cellpose[${PYTHON_USEDEP}] )
	all? ( dev-python/cucim[${PYTHON_USEDEP}] )
	all? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	all? ( dev-python/sphinx-markdown-tables[${PYTHON_USEDEP}] )
	all? ( dev-python/sphinxcontrib-video[${PYTHON_USEDEP}] )
	all? ( dev-python/pygments-csv-lexer[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	all? ( dev-python/fastai[${PYTHON_USEDEP}] )
	all? ( dev-python/pretrainedmodels[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow-datasets[${PYTHON_USEDEP}] )
	cellpose? ( dev-python/cellpose[${PYTHON_USEDEP}] )
	cucim? ( dev-python/cucim[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx-markdown-tables[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinxcontrib-video[${PYTHON_USEDEP}] )
	dev? ( dev-python/pygments-csv-lexer[${PYTHON_USEDEP}] )
	tf? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	tf? ( dev-python/tensorflow-probability[${PYTHON_USEDEP}] )
	tf? ( dev-python/tensorflow-datasets[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	torch? ( dev-python/pretrainedmodels[${PYTHON_USEDEP}] )
	torch? ( dev-python/cellpose[${PYTHON_USEDEP}] )
	torch? ( dev-python/fastai[${PYTHON_USEDEP}] )
	torch? ( dev-python/pytorch-lightning[${PYTHON_USEDEP}] )
	torch? ( dev-python/timm[${PYTHON_USEDEP}] )
	torch? ( dev-python/segmentation-models-pytorch[${PYTHON_USEDEP}] )
	virtual/allow-pypi-wheels"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
