<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PostgreSQL to Elasticsearch/OpenSearch sync- [PGSync](https://pgsync.com) is a middleware for syncing data from [Postgres](https://www.postgresql.org) to [Elasticsearch](https://www.elastic.co/products/elastic-stack)/[OpenSearch](https://opensearch.org/) or [OpenSearch](https://opensearch.org/).- It allows you to keep [Postgres](https://www.postgresql.org) as your source of truth data source andexpose structured denormalized documents in [Elasticsearch](https://www.elastic.co/products/elastic-stack)/[OpenSearch](https://opensearch.org/).### Requirements- [Python](https://www.python.org) 3.7+- [Postgres](https://www.postgresql.org) 9.6+- [Redis](https://redis.io) 3.1.0- [Elasticsearch](https://www.elastic.co/products/elastic-stack) 6.3.1+ or [OpenSearch](https://opensearch.org/) 1.3.7+- [SQlAlchemy](https://www.sqlalchemy.org) 1.3.4+### Postgres setup    Enable [logical decoding](https://www.postgresql.org/docs/current/logicaldecoding.html) in your   Postgres setting.  - You also need to set up two parameters in your Postgres config postgresql.conf    ```wal_level = logical```    ```max_replication_slots = 1```### InstallationYou can install PGSync from [PyPI](https://pypi.org):    $ pip install pgsync### ConfigCreate a schema for the application named e.g **schema.json**[Example schema](https://github.com/toluaina/pgsync/blob/main/examples/airbnb/schema.json)Example spec.. code-block::    [        {            &quot;database&quot;: &quot;[database name]&quot;,            &quot;index&quot;: &quot;[Elasticsearch or OpenSearch index]&quot;,            &quot;nodes&quot;: {                &quot;table&quot;: &quot;[table A]&quot;,                &quot;schema&quot;: &quot;[table A schema]&quot;,                &quot;columns&quot;: [                    &quot;column 1 from table A&quot;,                    &quot;column 2 from table A&quot;,                    ... additional columns                ],                &quot;children&quot;: [                    {                        &quot;table&quot;: &quot;[table B with relationship to table A]&quot;,                        &quot;schema&quot;: &quot;[table B schema]&quot;,                        &quot;columns&quot;: [                          &quot;column 1 from table B&quot;,                          &quot;column 2 from table B&quot;,                          ... additional columns                        ],                        &quot;relationship&quot;: {                            &quot;variant&quot;: &quot;object&quot;,                            &quot;type&quot;: &quot;one_to_many&quot;                        },                        ...                    },                    {                        ... additional children                    }                ]            }        }    ]### Environment variables Setup environment variables required for the application    SCHEMA='/path/to/schema.json'    ELASTICSEARCH_HOST=localhost    ELASTICSEARCH_PORT=9200    PG_HOST=localhost    PG_USER=i-am-root # this must be a postgres superuser or replication user    PG_PORT=5432    PG_PASSWORD=*****    REDIS_HOST=redis    REDIS_PORT=6379    REDIS_DB=0    REDIS_AUTH=*****### RunningBootstrap the database (one time only)  - $ bootstrap --config schema.jsonRun pgsync as a daemon  - $ pgsync --config schema.json --daemon</longdescription>
</pkgmetadata>