<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pytest-datadirpytest plugin for manipulating test data directories and files.[![Build Status](https://github.com/gabrielcnr/pytest-datadir/workflows/build/badge.svg?branch=master)](https://github.com/gabrielcnr/pytest-datadir/workflows/build/badge.svg?branch=master)[![PyPI](https://img.shields.io/pypi/v/pytest-datadir.svg)](https://pypi.python.org/pypi/pytest-datadir)[![CondaForge](https://img.shields.io/conda/vn/conda-forge/pytest-datadir.svg)](https://anaconda.org/conda-forge/pytest-datadir)![Python Version](https://img.shields.io/badge/python-3.6+-blue.svg)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)# Usagepytest-datadir will look up for a directory with the name of your module or the global 'data' folder.Let's say you have a structure like this:```.├── data/│   └── hello.txt├── test_hello/│   └── spam.txt└── test_hello.py```You can access the contents of these files using injected variables `datadir` (for *test_* folder) or `shared_datadir`(for *data* folder):```pythondef test_read_global(shared_datadir):    contents = (shared_datadir / &quot;hello.txt&quot;).read_text()    assert contents == &quot;Hello World!\n&quot;def test_read_module(datadir):    contents = (datadir / &quot;spam.txt&quot;).read_text()    assert contents == &quot;eggs\n&quot;```pytest-datadir will copy the original file to a temporary folder, so changing the file contents won't change the original data file.Both `datadir` and `shared_datadir` fixtures are `pathlib.Path` objects.# ReleasesFollow these steps to make a new release:1. Create a new branch `release-X.Y.Z` from `master`.2. Update `CHANGELOG.rst`.3. Open a PR.4. After it is **green** and **approved**, push a new tag in the format `X.Y.Z`.Travis will deploy to PyPI automatically.Afterwards, update the recipe in [conda-forge/pytest-datadir-feedstock](https://github.com/conda-forge/pytest-datadir-feedstock).# LicenseMIT.</longdescription>
</pkgmetadata>