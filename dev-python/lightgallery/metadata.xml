<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Lightgallery markdown ExtensionMarkdown extension to wrap images in a lightbox.Will only wrap images by adding **&quot;!&quot;** right after the opening **&quot;[&quot;** bracket of the image.```![!Description](/img/pic1.png)```This will Output :```html&lt;p&gt;  &lt;div class=&quot;lightgallery&quot;&gt;    &lt;a href=&quot;../img/pic1.png&quot; data-sub-html=&quot;Description&quot;&gt;      &lt;img alt=&quot;Description&quot; src=&quot;../img/pic1.png&quot; /&gt;    &lt;/a&gt;  &lt;/div&gt;&lt;/p&gt;```The extension is made to work with [lightgallery.js](https://github.com/sachinchoolur/lightgallery.js) a full featured JavaScript lightgallery/lightbox with no dependencies.*Extension inspired by : [mardown-lightbox](https://github.com/AliciaSchep/markdown-lightbox)***To test the extension:**```pythonimport markdownfrom lightgallery import LightGalleryExtensionprint(markdown.markdown('![!description](/img/pic1.png)', extensions=[LightGalleryExtension()]))```## Install```bash$ pip install lightgallery```## How to make it works with Mkdocs**1.** Create a **theme** folder will the following structure in your Mkdocs folder```theme/|_ css/|_ fonts/|_ img/|_ js/````**2.** Go to [lightgallery.js GitHub](https://github.com/sachinchoolur/lightgallery.js) or [JSDELIVR](https://www.jsdelivr.com/package/npm/lightgallery.js) to download the following files to the **theme** sub-folders as listed below- dist/js/lightgallery.min.js **-&gt;** theme/js/- dist/css/lightgallery.min.css **-&gt;** theme/css/- dist/fonts/lg.* **-&gt;** theme/fonts/- dist/img/loading.gif **-&gt;** theme/img/**3.** Create a **theme/main.hml** file and add the following code to the file```html{% extends &quot;base.html&quot; %}{% block styles %}    {{ super() }}    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ base_url }}/css/lightgallery.min.css&quot;&gt;{% endblock styles %}{% block libs %}    {{ super() }}    &lt;script src=&quot;{{ base_url }}/js/lightgallery.min.js&quot;&gt;&lt;/script&gt;{% endblock libs %}{% block scripts %}    {{ super() }}    &lt;script&gt;    var elements = document.getElementsByClassName(&quot;lightgallery&quot;);    for(var i=0; i&lt;elements.length; i++) {       lightGallery(elements[i]);    }    &lt;/script&gt;{% endblock scripts %}```**4.** Modify the **mkdocs.yml** file to add the following settings```# Documentation and themetheme:  custom_dir: 'theme'``````# Extensionsmarkdown_extensions:  - lightgallery```**5.** Change extension settings in **mkdocs.yml**All settings of the extension are optional and can be omitted.```# Extensionsmarkdown_extensions:  - lightgallery:      show_description_in_lightgallery: true | false      show_description_as_inline_caption: true | false      custom_inline_caption_css_class: 'my-caption-class'```| Setting | Description | Default Value ||-|-|-|| `show_description_in_lightgallery` | Adds the description as caption in lightgallery dialog. | `true` || `show_description_as_inline_caption` | Adds the description as inline caption below the image. | `false` || `custom_inline_caption_css_class` | Custom CSS classes which are applied to the inline caption paragraph. Multiple classes are separated via space. | Empty |## LicenseMIT License</longdescription>
</pkgmetadata>