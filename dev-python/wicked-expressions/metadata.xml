<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># wicked-expressions[![GitHub Actions](https://github.com/reapermc/wicked-expressions/workflows/CI/badge.svg)](https://github.com/reapermc/wicked-expressions/actions)&gt; Extension of bolt-expressions written in Bolt.## IntroductionThis is an extension of the [bolt-expressions](https://github.com/rx-modules/bolt-expressions) package. I highly recommend getting accustom to the original before using this one. This package is meant to build upon it by adding more functionality.```pyfrom wicked_expressions:api import Scoreboard, Var, Floatfoo = Scoreboard('demo')['$foo']bar = Var(Float, 3.14159)foo = 123data_0 = 30if foo == 1:    tellraw @a &quot;foo == 1&quot;else:    tellraw @a &quot;foo != 1&quot;if bar == 3.14159:    tellraw @a &quot;yes :3&quot;else:    tellraw @a &quot;no :&lt;&quot;```## Installation```bashpip install wicked_expressions```## Getting startedThe library is designed to be used within any `bolt` script (either a `.mcfunction` or `bolt` file) inside a `bolt` enabled project.```yamlrequire:    - bolt    - wicked_expressionspipeline:    - mecha```Once you've required `bolt` and `wicked_expressions`, you are able to import the package's `api` module directly inside your bolt script.Most of the imports come from the `wicked_expressions:api` module as shown below.```pyfrom wicked_expressions:api import Scoreboard```Now you're free to use the API. Use simple and complex expressions, compare expressions and have access to many more features of the library!## DocumentationDocs available [here](./docs/home.md).## Features- Most if not all the functionality of [bolt-expressions](https://github.com/rx-modules/bolt-expressions).- Built in score &amp; data comparison using python's comparison operators.- Useful functions and methods especially for bolt library developers such as `.store()` and `.get()`.- Anonymous runtime variables.- DataStash feature allowing per-entity data.---License - [MIT](https://github.com/reapermc/wicked-expressions/blob/main/LICENSE)</longdescription>
</pkgmetadata>