<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>NO MORE UPDATES===============Feel free to fork and update.----Old READMEM2R===.. image:: https://img.shields.io/pypi/v/m2r.svg   :target: https://pypi.python.org/pypi/m2r   :alt: PyPI.. image:: https://img.shields.io/pypi/pyversions/m2r.svg   :target: https://pypi.python.org/pypi/m2r   :alt: PyPI version.. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg   :target: https://miyakogi.github.io/m2r   :alt: Documentation.. image:: https://travis-ci.org/miyakogi/m2r.svg?branch=master   :target: https://travis-ci.org/miyakogi/m2r   :alt: Build Status.. image:: https://codecov.io/gh/miyakogi/m2r/branch/master/graph/badge.svg   :target: https://codecov.io/gh/miyakogi/m2r   :alt: codecov----M2R converts a markdown file including reStructuredText (rst) markups to a validrst format.Why another converter?----------------------I wanted to write sphinx document in markdown, since it's widely used now andeasy to write code blocks and lists. However, converters using pandoc orrecommonmark do not support many rst markups and sphinx extensions. Forexample, rst's reference link like ``see `ref`_`` (this is very convenient inlong document in which same link appears multiple times) will be converted toa code block in HTML like ``see &lt;code&gt;ref&lt;/code&gt;_``\ , which is not expected.Features--------* Basic markdown and some extensions (see below)  * inline/block-level raw html  * fenced-code block  * tables  * footnotes (\ ``[^1]``\ )* Inline- and Block-level rst markups  * single- and multi-line directives (\ ``.. directive::``\ )  * inline-roles (\ ``:code:`print(1)` ...``\ )  * ref-link (\ ``see `ref`_``\ )  * footnotes (\ ``[#fn]_``\ )  * math extension inspired by `recommonmark &lt;https://recommonmark.readthedocs.io/en/latest/index.html&gt;`_* Sphinx extension  * add markdown support for sphinx  * ``mdinclude`` directive to include markdown from md or rst files  * option to parse relative links into ref and doc directives (\ ``m2r_parse_relative_links``\ )* Pure python implementation  * pandoc is not requiredInstallation------------Python 3.7+ is required... code-block::   pip install m2rOr,.. code-block::   python3 -m pip install m2rUsage-----Command Line^^^^^^^^^^^^``m2r`` command converts markdown file to rst format... code-block::   m2r your_document.md [your_document2.md ...]Then you will find ``your_document.rst`` in the same directory.Programmatic Use^^^^^^^^^^^^^^^^Import ``m2r.convert`` function and call it with markdown text.Then it will return converted text... code-block:: python   from m2r import convert   rst = convert('# Title\n\nSentence.')   print(rst)   # Title   # =====   #   # Sentence.Or, use ``parse_from_file`` function to load markdown file and obtain convertedtext... code-block:: python   from m2r import parse_from_file   output = parse_from_file('markdown_file.md')This is an example of setup.py to write README in markdown, and publish it toPyPI as rst format... code-block:: python   readme_file = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'README.md')   try:       from m2r import parse_from_file       readme = parse_from_file(readme_file)   except ImportError:       # m2r may not be installed in user environment       with open(readme_file) as f:           readme = f.read()   setup(       ...,       long_description=readme,       ...,   )Sphinx Integration^^^^^^^^^^^^^^^^^^In your conf.py, add the following lines... code-block:: python   extensions = [       ...,       'm2r',   ]   # source_suffix = '.rst'   source_suffix = ['.rst', '.md']Write index.md and run ``make html``.When ``m2r`` extension is enabled on sphinx and ``.md`` file is loaded, m2rconverts to rst and pass to sphinx, not making new ``.rst`` file.mdinclude directive~~~~~~~~~~~~~~~~~~~Like ``.. include:: file`` directive, ``.. mdinclude:: file`` directive insertsmarkdown file at the line.Note: do not use ``.. include:: file`` directive to include markdown file even ifin the markdown file, please use ``.. mdinclude:: file`` instead.Restrictions------------* In the rst's directives, markdown is not available. Please write in rst.* Column alignment of tables is not supported. (rst does not support this feature)* Heading with overline-and-underline is not supported.  * Heading with underline is OK* Rst heading marks are currently hard-coded and unchangeable.  * H1: ``=``\ , H2: ``-``\ , H3: ``^``\ , H4: ``~``\ , H5: ``&quot;``\ , H6: ``#``If you find any bug or unexpected behaviour, please report it to`Issues &lt;https://github.com/miyakogi/m2r/issues&gt;`_.Example-------See `example document &lt;https://miyakogi.github.io/m2r/example.html&gt;`_ and `itssource code &lt;https://github.com/miyakogi/m2r/blob/master/docs/example.md&gt;`_.I'm using m2r for writing user guide of `WDOM &lt;https://github.com/miyakogi/wdom&gt;`_.So you can see it as another example. Its `HTML ishere &lt;http://wdom-py.readthedocs.io/en/latest/guide/index.html&gt;`_\ , and `itssource code is here &lt;https://github.com/miyakogi/wdom/tree/dev/docs/guide&gt;`_.Demo editor^^^^^^^^^^^Demo editor of m2r is available.If you are interested in m2r, please try it.`https://github.com/miyakogi/m2rdemo &lt;https://github.com/miyakogi/m2rdemo&gt;`_Acknowledgement---------------m2r is written as an extension of`mistune &lt;http://mistune.readthedocs.io/en/latest/&gt;`_\ , which is highly extensiblepure-python markdown parser.Without the mistune, I couldn't write this. Thank you!Licence-------`MIT &lt;https://github.com/miyakogi/m2r/blob/master/LICENSE&gt;`_</longdescription>
</pkgmetadata>