# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Convert data from proprietary formats to NWB format."

HOMEPAGE="https://github.com/catalystneuro/neuroconv"
LICENSE="BSD 3-Clause License"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="abf alphaomega audio aws axona behavior biocam blackrock brukertiff caiman cellexplorer cnmfe compressors dandi deeplabcut docs ecephys ecephys-minimal edf excel extract fiber-photometry full hdf5 icephys image intan kilosort lightningpose maxwell mcsraw mearec medpc micromanagertiff miniscope neuralynx neuroscope openephys ophys ophys-minimal phy plexon sbx scanimage scanimage-legacy sima sleap sorting-analyzer spike2 spikegadgets spikeglx suite2p tdt tdt-fp test text thor tiff video whitematter"
DEPENDENCIES=">=dev-python/numpy-1.22.0[${PYTHON_USEDEP}]
	>=dev-python/numpy-1.26.0[${PYTHON_USEDEP}]
	>=dev-python/pyyaml-5.4[${PYTHON_USEDEP}]
	>=dev-python/h5py-3.9.0[${PYTHON_USEDEP}]
	dev-python/hdmf[${PYTHON_USEDEP}]
	dev-python/hdmf-zarr[${PYTHON_USEDEP}]
	dev-python/pynwb[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.0[${PYTHON_USEDEP}]
	>=dev-python/typing-extensions-4.1.0[${PYTHON_USEDEP}]
	>=dev-python/psutil-5.8.0[${PYTHON_USEDEP}]
	>=dev-python/tqdm-4.60.0[${PYTHON_USEDEP}]
	dev-python/pandas[${PYTHON_USEDEP}]
	>=dev-python/parse-1.20.0[${PYTHON_USEDEP}]
	dev-python/click[${PYTHON_USEDEP}]
	>=dev-python/jsonschema-3.2.0[${PYTHON_USEDEP}]
	dev-python/docstring-parser[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/referencing[${PYTHON_USEDEP}]
	dev-python/numcodecs[${PYTHON_USEDEP}]
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( >=dev-python/parameterized-0.8.1[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	sorting-analyzer? ( dev-python/scipy[${PYTHON_USEDEP}] )
	docs? ( ~dev-python/sphinx-8.2.3[${PYTHON_USEDEP}] )
	docs? ( dev-python/readthedocs-sphinx-search[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-toggleprompt[${PYTHON_USEDEP}] )
	docs? ( ~dev-python/sphinx-copybutton-0.5.2[${PYTHON_USEDEP}] )
	docs? ( ~dev-python/pydata-sphinx-theme-0.16.1[${PYTHON_USEDEP}] )
	docs? ( dev-python/roiextractors[${PYTHON_USEDEP}] )
	docs? ( dev-python/spikeinterface[${PYTHON_USEDEP}] )
	docs? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dandi? ( dev-python/dandi[${PYTHON_USEDEP}] )
	dandi? ( dev-python/dandischema[${PYTHON_USEDEP}] )
	compressors? ( dev-python/hdf5plugin[${PYTHON_USEDEP}] )
	aws? ( dev-python/boto3[${PYTHON_USEDEP}] )
	excel? ( dev-python/openpyxl[${PYTHON_USEDEP}] )
	excel? ( dev-python/xlrd[${PYTHON_USEDEP}] )
	text? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	text? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	audio? ( dev-python/ndx-sound[${PYTHON_USEDEP}] )
	audio? ( dev-python/scipy[${PYTHON_USEDEP}] )
	sleap? ( dev-python/av[${PYTHON_USEDEP}] )
	sleap? ( dev-python/sleap-io[${PYTHON_USEDEP}] )
	sleap? ( dev-python/ndx-pose[${PYTHON_USEDEP}] )
	deeplabcut? ( dev-python/ndx-pose[${PYTHON_USEDEP}] )
	deeplabcut? ( dev-python/tables[${PYTHON_USEDEP}] )
	deeplabcut? ( >=dev-python/tables-3.10.1[${PYTHON_USEDEP}] )
	video? ( dev-python/opencv-python-headless[${PYTHON_USEDEP}] )
	lightningpose? ( dev-python/ndx-pose[${PYTHON_USEDEP}] )
	lightningpose? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	medpc? ( dev-python/ndx-events[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	behavior? ( dev-python/ndx-miniscope[${PYTHON_USEDEP}] )
	ecephys-minimal? ( dev-python/spikeinterface[${PYTHON_USEDEP}] )
	ecephys-minimal? ( dev-python/neo[${PYTHON_USEDEP}] )
	alphaomega? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	axona? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	biocam? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	blackrock? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	cellexplorer? ( dev-python/pymatreader[${PYTHON_USEDEP}] )
	cellexplorer? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	edf? ( dev-python/pyEDFlib[${PYTHON_USEDEP}] )
	edf? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	intan? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	kilosort? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	maxwell? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	mcsraw? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	mearec? ( dev-python/MEArec[${PYTHON_USEDEP}] )
	mearec? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	mearec? ( dev-python/setuptools[${PYTHON_USEDEP}] )
	neuralynx? ( >=dev-python/natsort-7.1.1[${PYTHON_USEDEP}] )
	neuralynx? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	neuroscope? ( >=dev-python/lxml-4.6.5[${PYTHON_USEDEP}] )
	neuroscope? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	openephys? ( >=dev-python/lxml-4.9.4[${PYTHON_USEDEP}] )
	openephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	phy? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	plexon? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	plexon? ( dev-python/zugbruecke[${PYTHON_USEDEP}] )
	spike2? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	spikegadgets? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	spikeglx? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	spikeglx? ( dev-python/ndx-events[${PYTHON_USEDEP}] )
	tdt? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	whitematter? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ecephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	abf? ( dev-python/ndx-dandi-icephys[${PYTHON_USEDEP}] )
	abf? ( dev-python/neo[${PYTHON_USEDEP}] )
	icephys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	image? ( >=dev-python/pillow-10.0.0[${PYTHON_USEDEP}] )
	fiber-photometry? ( dev-python/ndx-fiber-photometry[${PYTHON_USEDEP}] )
	ophys-minimal? ( dev-python/roiextractors[${PYTHON_USEDEP}] )
	brukertiff? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	brukertiff? ( >=dev-python/tifffile-2023.3.21[${PYTHON_USEDEP}] )
	caiman? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	caiman? ( dev-python/scipy[${PYTHON_USEDEP}] )
	cnmfe? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	cnmfe? ( dev-python/scipy[${PYTHON_USEDEP}] )
	extract? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	hdf5? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	micromanagertiff? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	micromanagertiff? ( >=dev-python/tifffile-2023.3.21[${PYTHON_USEDEP}] )
	miniscope? ( >=dev-python/natsort-8.3.1[${PYTHON_USEDEP}] )
	miniscope? ( dev-python/ndx-miniscope[${PYTHON_USEDEP}] )
	miniscope? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	sbx? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	scanimage? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	scanimage? ( dev-python/natsort[${PYTHON_USEDEP}] )
	scanimage-legacy? ( dev-python/scanimage-tiff-reader[${PYTHON_USEDEP}] )
	sima? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	suite2p? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	tdt-fp? ( dev-python/ndx-fiber-photometry[${PYTHON_USEDEP}] )
	tdt-fp? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	tdt-fp? ( dev-python/tdt[${PYTHON_USEDEP}] )
	thor? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	thor? ( >=dev-python/tifffile-2023.3.21[${PYTHON_USEDEP}] )
	tiff? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	tiff? ( >=dev-python/tifffile-2018.10.18[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	ophys? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )
	full? ( dev-python/neuroconv[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
