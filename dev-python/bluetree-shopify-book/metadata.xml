<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Shopify Book ServiceThe Shopify Book Service is a Python library for managing books in a Shopify store. It provides a simple interface for performing CRUD (Create, Read, Update, Delete) operations on books, as well as for setting up and managing metafields for books.## InstallationTo install the Shopify Book Service, run the following command:`pip install bluetree-shopify-book`## UsageTo use the Shopify Book Service, you first need to create an instance of the ShopifyBookService class with your shop's URL and API access token:```from bluetree_shopify_book import ShopifyBookServiceshop_url = &quot;https://yourshopdomain.myshopify.com&quot;admin_api_access_token = &quot;YOUR_ACCESS_TOKEN&quot;book_service = ShopifyBookService(shop_url, admin_api_access_token)```Note that the ShopifyBookService class uses a context manager, so you can use it in a with statement to automatically activate and clear the Shopify session:```with ShopifyBookService(shop_url, admin_api_access_token) as book_service:    # do something with book_service```## Getting a BookTo get a book by ID, use the get_book_by_id() method:```book = book_service.get_book_by_id(8148173881647)```To get a book by ISBN, use the get_book_by_isbn() method:```book = book_service.get_book_by_isbn(&quot;9780141439846&quot;)```## Creating a BookTo create a book, use the create_book() method:```from src.schema import CreateBookInputbook_input = CreateBookInput(    title=&quot;Pride and Prejudice&quot;,    author=&quot;Jane Austen&quot;,    description=&quot;A classic novel about love and social status.&quot;,    price=&quot;12.99&quot;,    sku=&quot;9780141439846&quot;,    published_date=&quot;1813-01-28&quot;,)book = book_service.create_book(book_input)```## To create multiple books concurrently, use the create_books() method:```from src.schema import CreateBookInputbook_inputs = [    CreateBookInput(        title=&quot;Pride and Prejudice&quot;,        author=&quot;Jane Austen&quot;,        description=&quot;A classic novel about love and social status.&quot;,        price=&quot;12.99&quot;,        sku=&quot;9780141439846&quot;,        published_date=&quot;1813-01-28&quot;,    ),    CreateBookInput(        title=&quot;To Kill a Mockingbird&quot;,        author=&quot;Harper Lee&quot;,        description=&quot;A powerful novel about race and justice in the American South.&quot;,        price=&quot;14.99&quot;,        sku=&quot;9780061120084&quot;,        published_date=&quot;1960-07-11&quot;,    ),]books = book_service.create_books(book_inputs)```## Updating a BookTo update a book's price, use the update_book_price() method:```from decimal import Decimalbook_variant_id = 1234567890new_price = Decimal(&quot;14.99&quot;)book = book_service.update_book_price(book_variant_id, new_price)```## Deleting a BookTo delete a book, use the delete_book() method:```book_id = 1234567890book_service.delete_book(book_id)```## Setting up Metafield DefinitionsTo set up default metafield definitions for books, use the setup_default_metafield_definitions() method:```book_service.setup_default_metafield_definitions()```## Getting Metafield DefinitionsTo get all metafield definitions for books, use the _get_metafield_definitions() method:```metafield_definitions = book_service```The MIT License (MIT)Copyright, 2023 Shinsuke Ikegame.Permission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.</longdescription>
</pkgmetadata>