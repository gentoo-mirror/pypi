<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># virustotal-python üêç![PyPI](https://img.shields.io/pypi/v/virustotal-python.svg?style=flat-square)![PyPI Stats](https://img.shields.io/pypi/dm/virustotal-python?color=blue&amp;style=flat-square)[![CI](https://github.com/dbrennand/virustotal-python/actions/workflows/ci.yml/badge.svg)](https://github.com/dbrennand/virustotal-python/actions/workflows/ci.yml)[![Publish](https://github.com/dbrennand/virustotal-python/actions/workflows/publish.yml/badge.svg)](https://github.com/dbrennand/virustotal-python/actions/workflows/publish.yml)A Python library to interact with the public VirusTotal v3 and v2 APIs.&gt; This library is intended to be used with the public VirusTotal APIs. However, it *could* be used to interact with premium API endpoints as well.&gt;&gt; It is highly recommended that you use the VirusTotal v3 API as it is the &quot;default and encouraged way to programmatically interact with VirusTotal&quot;.## Installation üõ†```bash# PyPipip install virustotal-python# Manuallypip install .# Poetrypoetry install --no-dev```## Get a VirusTotal API Key üîë[Sign up](https://www.virustotal.com/gui/join-us) for a VirusTotal account. Then, view your VirusTotal API key.![VirusTotal view API key](images/APIKey.png)## Getting Started```pythonimport virustotal_pythonwith virustotal_python.Virustotal(&quot;&lt;VirusTotal API Key&gt;&quot;) as vtotal:    # Your code here...# Use the (old) VirusTotal version 2 APIwith virustotal_python.Virustotal(    API_KEY=&quot;&lt;VirusTotal API Key&gt;&quot;, API_VERSION=2) as vtotal:    # Your code here...# You can also set proxies and timeouts for requests made by the library# NOTE: To use proxies, you must have the PySocks extra installedwith virustotal_python.Virustotal(    API_KEY=&quot;&lt;VirusTotal API Key&gt;&quot;,    PROXIES={&quot;http&quot;: &quot;http://10.10.1.10:3128&quot;, &quot;https&quot;: &quot;https://10.10.1.10:1080&quot;},    TIMEOUT=5.0,) as vtotal:    # Your code here...# You can also omit the API_KEY parameter and provide your# API key via the environment variable VIRUSTOTAL_API_KEY# Bash: export VIRUSTOTAL_API_KEY=&quot;&lt;VirusTotal API Key&gt;&quot;# PowerShell: $Env:VIRUSTOTAL_API_KEY = &quot;&lt;VirusTotal API Key&gt;&quot;# Then...with virustotal_python.Virustotal() as vtotal:    # Your code here...```## Code Snippets&gt; Further usage examples can be found in [examples](examples).### Send a file for analysis üîé```pythonimport virustotal_pythonimport os.pathfrom pprint import pprintFILE_PATH = &quot;/path/to/file/to/scan.txt&quot;# Create dictionary containing the file to send for multipart encoding uploadfiles = {&quot;file&quot;: (os.path.basename(FILE_PATH), open(os.path.abspath(FILE_PATH), &quot;rb&quot;))}with virustotal_python.Virustotal(&quot;&lt;VirusTotal API Key&gt;&quot;) as vtotal:    resp = vtotal.request(&quot;files&quot;, files=files, method=&quot;POST&quot;)    pprint(resp.json())```### Get information about a file üìÅ```pythonimport virustotal_pythonfrom pprint import pprint# The ID (either SHA-256, SHA-1 or MD5 hash) identifying the fileFILE_ID = &quot;9f101483662fc071b7c10f81c64bb34491ca4a877191d464ff46fd94c7247115&quot;with virustotal_python.Virustotal(&quot;&lt;VirusTotal API Key&gt;&quot;) as vtotal:    resp = vtotal.request(f&quot;files/{FILE_ID}&quot;)    pprint(resp.data)```### Send a URL üîó for analysis and get the report üìÑ```pythonimport virustotal_pythonfrom pprint import pprintfrom base64 import urlsafe_b64encodeurl = &quot;ihaveaproblem.info&quot;with virustotal_python.Virustotal(&quot;&lt;VirusTotal API Key&gt;&quot;) as vtotal:    try:        resp = vtotal.request(&quot;urls&quot;, data={&quot;url&quot;: url}, method=&quot;POST&quot;)        # Safe encode URL in base64 format        # https://developers.virustotal.com/reference/url        url_id = urlsafe_b64encode(url.encode()).decode().strip(&quot;=&quot;)        report = vtotal.request(f&quot;urls/{url_id}&quot;)        pprint(report.object_type)        pprint(report.data)    except virustotal_python.VirustotalError as err:        print(f&quot;Failed to send URL: {url} for analysis and get the report: {err}&quot;)```### Get information about a domain:```pythonimport virustotal_pythonfrom pprint import pprintdomain = &quot;virustotal.com&quot;with virustotal_python.Virustotal(&quot;&lt;VirusTotal API Key&gt;&quot;) as vtotal:    resp = vtotal.request(f&quot;domains/{domain}&quot;)    pprint(resp.data)```## Development[Black](https://github.com/psf/black) is used for code formatting.### Unit TestsInstall the development dependencies using Poetry:```bashpoetry install &amp;&amp; poetry shell```To run the unit tests, run `pytest` from the root of the project:```bashpytest --cov=virustotal_python```### Publishing a new release```bash# Run from the master branchexport VERSION=x.x.xgit commit --allow-empty -m &quot;Publish $VERSION&quot;git tag -a $VERSION -m &quot;Version $VERSION&quot;git push --tags```## Authors &amp; Contributors* [**dbrennand**](https://github.com/dbrennand) - *Author** [**smk762**](https://github.com/smk762) - *Contributor*## ChangelogSee the [CHANGELOG](CHANGELOG.md) for details.## LicenseThis project is licensed under the MIT License - see the [LICENSE](LICENSE) for details.</longdescription>
</pkgmetadata>