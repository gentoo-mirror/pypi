<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>format-sql==========.. image:: https://travis-ci.org/paetzke/format-sql.svg?branch=master  :target: https://travis-ci.org/paetzke/format-sql.. image:: https://coveralls.io/repos/paetzke/format-sql/badge.svg?branch=master  :target: https://coveralls.io/r/paetzke/format-sql?branch=master.. image:: https://badge.fury.io/py/format-sql.svg  :target: https://pypi.python.org/pypi/format-sql/.. image:: https://readthedocs.org/projects/format-sql/badge/?version=latest  :target: https://readthedocs.org/projects/format-sql/?badge=latestMakes your SQL readable... image:: https://paetzke.me/static/images/format-sql.gifAn example:.. code:: python        sql = &quot;&quot;&quot; SELECT country, product, SUM(profit) FROM    sales   left join x on x.id=sales.k GROUP BY country,    product having f &gt; 7 and fk=9 limit 5;    &quot;&quot;&quot;Will result in:.. code:: python        sql = &quot;&quot;&quot;            SELECT                country,                product,                SUM(profit)            FROM                sales                LEFT JOIN x ON                    x.id = sales.k            GROUP BY                country,                product            HAVING                f &gt; 7                AND fk = 9            LIMIT 5; &quot;&quot;&quot;Install ``format-sql`` via ``pip``:.. code:: bash    $ pip install format-sqlYou can then just call ``format-sql`` with files and directories:.. code:: bash    $ format-sql -h    usage: format-sql [-h] [--types TYPES] [-r] [--no-semicolon] [--version]                      [--debug] [--dry-run]                      paths [paths ...]        positional arguments:      paths        optional arguments:      -h, --help       show this help message and exit      --types TYPES    Only process these given file types.      -r, --recursive  Process files found in subdirectories.      --no-semicolon   Try to detect SQL queries with no trailing semicolon.      --version        show program's version number and exit      --debug          Print available debug information.      --dry-run        Print the altered output and do not change the file.For example:.. code:: bash    $ format-sql my-file.pyOr recursively with directory:.. code:: bash    $ format-sql -r my-directory/You can try format-sql online: `http://format-sql.de &lt;http://format-sql.de&gt;`_.</longdescription>
</pkgmetadata>