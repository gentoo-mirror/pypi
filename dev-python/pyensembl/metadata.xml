<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://app.travis-ci.com/github/openvax/pyensembl&quot;&gt;    &lt;img src=&quot;https://app.travis-ci.com/openvax/pyensembl.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://coveralls.io/github/openvax/pyensembl?branch=master&quot;&gt;    &lt;img src=&quot;https://coveralls.io/repos/openvax/pyensembl/badge.svg?branch=master&amp;service=github&quot; alt=&quot;Coverage Status&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.python.org/pypi/pyensembl/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/pyensembl.svg?maxAge=1000&quot; alt=&quot;PyPI&quot; /&gt;&lt;/a&gt;PyEnsembl=======PyEnsembl is a Python interface to [Ensembl](http://www.ensembl.org) reference genome metadata such as exons and transcripts. PyEnsembl downloads [GTF](https://en.wikipedia.org/wiki/Gene_transfer_format) and [FASTA](https://en.wikipedia.org/wiki/FASTA_format) files from the [Ensembl FTP server](ftp://ftp.ensembl.org) and loads them into a local database. PyEnsembl can also work with custom reference data specified using user-supplied GTF and FASTA files. # Example Usage```pythonfrom pyensembl import EnsemblRelease# release 77 uses human reference genome GRCh38data = EnsemblRelease(77)# will return ['HLA-A']gene_names = data.gene_names_at_locus(contig=6, position=29945884)# get all exons associated with HLA-Aexon_ids  = data.exon_ids_of_gene_name('HLA-A')```# InstallationYou can install PyEnsembl using [pip](https://pip.pypa.io/en/latest/quickstart.html):```shpip install pyensembl```This should also install any required packages such as [datacache](https://github.com/openvax/datacache).Before using PyEnsembl, run the following command to download and installEnsembl data:```pyensembl install --release &lt;list of Ensembl release numbers&gt; --species &lt;species-name&gt;```For example, `pyensembl install --release 75 76 --species human` will download and install allhuman reference data from Ensembl releases 75 and 76.Alternatively, you can create the `EnsemblRelease` object from inside a Pythonprocess and call `ensembl_object.download()` followed by `ensembl_object.index()`.## Cache LocationBy default, PyEnsembl uses the platform-specific `Cache` folderand caches the files into the `pyensembl` sub-directory.You can override this default by setting the environment key `PYENSEMBL_CACHE_DIR`as your preferred location for caching:```shexport PYENSEMBL_CACHE_DIR=/custom/cache/dir```or```pythonimport osos.environ['PYENSEMBL_CACHE_DIR'] = '/custom/cache/dir'# ... PyEnsembl API usage```# Non-Ensembl DataPyEnsembl also allows arbitrary genomes via the specificationof local file paths or remote URLs to both Ensembl and non-Ensembl GTFand FASTA files. (Warning: GTF formats can vary, and handling ofnon-Ensembl data is still very much in development.)For example:```pythondata = Genome(    reference_name='GRCh38',    annotation_name='my_genome_features',    gtf_path_or_url='/My/local/gtf/path_to_my_genome_features.gtf')# parse GTF and construct database of genomic featuresdata.index()gene_names = data.gene_names_at_locus(contig=6, position=29945884)```# APIThe `EnsemblRelease` object has methods to let you access all possiblecombinations of the annotation features *gene\_name*, *gene\_id*,*transcript\_name*, *transcript\_id*, *exon\_id* as well as the location ofthese genomic elements (contig, start position, end position, strand).## Genes&lt;dl&gt;&lt;dt&gt;genes(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns a list of Gene objects, optionally restricted to a particular contigor strand.&lt;/dd&gt;&lt;dt&gt;genes_at_locus(contig, position, end=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns a list of Gene objects overlapping a particular position on a contig,optionally extend into a range with the end parameter and restrict toforward or backward strand by passing strand='+' or strand='-'.&lt;/dd&gt;&lt;dt&gt;gene_by_id(gene_id)&lt;/dt&gt;&lt;dd&gt;Return a Gene object for given Ensembl gene ID (e.g. &quot;ENSG00000068793&quot;).&lt;/dd&gt;&lt;dt&gt;gene_names(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns all gene names in the annotation database, optionally restrictedto a particular contig or strand.&lt;/dd&gt;&lt;dt&gt;genes_by_name(gene_name)&lt;/dt&gt;&lt;dd&gt;Get all the unqiue genes with the given name (there might be multipledue to copies in the genome), return a list containing a Gene object for eachdistinct ID.&lt;/dd&gt;&lt;dt&gt;gene_by_protein_id(protein_id)&lt;/dt&gt;&lt;dd&gt;Find Gene associated with the given Ensembl protein ID (e.g. &quot;ENSP00000350283&quot;)&lt;/dd&gt;&lt;dt&gt;gene_names_at_locus(contig, position, end=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Names of genes overlapping with the given locus, optionally restricted by strand.(returns a list to account for overlapping genes)&lt;/dd&gt;&lt;dt&gt;gene_name_of_gene_id(gene_id)&lt;/dt&gt;&lt;dd&gt;Returns name of gene with given genen ID.&lt;/dd&gt;&lt;dt&gt;gene_name_of_transcript_id(transcript_id)&lt;/dt&gt;&lt;dd&gt;Returns name of gene associated with given transcript ID.&lt;/dd&gt;&lt;dt&gt;gene_name_of_transcript_name(transcript_name)&lt;/dt&gt;&lt;dd&gt;Returns name of gene associated with given transcript name.&lt;/dd&gt;&lt;dt&gt;gene_name_of_exon_id(exon_id)&lt;/dt&gt;&lt;dd&gt;Returns name of gene associated with given exon ID.&lt;/dd&gt;&lt;dt&gt;gene_ids(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Return all gene IDs in the annotation database, optionally restricted bychromosome name or strand.&lt;/dd&gt;&lt;dt&gt;gene_ids_of_gene_name(gene_name)&lt;/dt&gt;&lt;dd&gt;Returns all Ensembl gene IDs with the given name.&lt;/dd&gt;&lt;/dl&gt;## Transcripts&lt;dl&gt;&lt;dt&gt;transcripts(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns a list of Transcript objects for all transcript entries in theEnsembl database, optionally restricted to a particular contig or strand.&lt;/dd&gt;&lt;dt&gt;transcript_by_id(transcript_id)&lt;/dt&gt;&lt;dd&gt;Construct a Transcript object for given Ensembl transcript ID (e.g. &quot;ENST00000369985&quot;)&lt;/dd&gt;&lt;dt&gt;transcripts_by_name(transcript_name)&lt;/dt&gt;&lt;dd&gt;Returns a list of Transcript objects for every transcript matching the given name.&lt;/dd&gt;&lt;dt&gt;transcript_names(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns all transcript names in the annotation database.&lt;/dd&gt;&lt;dt&gt;transcript_ids(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns all transcript IDs in the annotation database.&lt;/dd&gt;&lt;dt&gt;transcript_ids_of_gene_id(gene_id)&lt;/dt&gt;&lt;dd&gt;Return IDs of all transcripts associated with given gene ID.&lt;/dd&gt;&lt;dt&gt;transcript_ids_of_gene_name(gene_name)&lt;/dt&gt;&lt;dd&gt;Return IDs of all transcripts associated with given gene name.&lt;/dd&gt;&lt;dt&gt;transcript_ids_of_transcript_name(transcript_name)&lt;/dt&gt;&lt;dd&gt;Find all Ensembl transcript IDs with the given name.&lt;/dd&gt;&lt;dt&gt;transcript_ids_of_exon_id(exon_id)&lt;/dt&gt;&lt;dd&gt;Return IDs of all transcripts associatd with given exon ID.&lt;/dd&gt;&lt;/dl&gt;## Exons&lt;dl&gt;&lt;dt&gt;exon_ids(contig=None, strand=None)&lt;/dt&gt;&lt;dd&gt;Returns a list of exons IDs in the annotation database, optionally restrictedby the given chromosome and strand.&lt;/dd&gt;&lt;dt&gt;exon_by_id(exon_id)&lt;/dt&gt;&lt;dd&gt;Construct an Exon object for given Ensembl exon ID (e.g. &quot;ENSE00001209410&quot;)&lt;/dd&gt;&lt;dt&gt;exon_ids_of_gene_id(gene_id)&lt;/dt&gt;&lt;dd&gt;Returns a list of exon IDs associated with a given gene ID.&lt;/dd&gt;&lt;dt&gt;exon_ids_of_gene_name(gene_name)&lt;/dt&gt;&lt;dd&gt;Returns a list of exon IDs associated with a given gene name.&lt;/dd&gt;&lt;dt&gt;exon_ids_of_transcript_id(transcript_id)&lt;/dt&gt;&lt;dd&gt;Returns a list of exon IDs associated with a given transcript ID.&lt;/dd&gt;&lt;dt&gt;exon_ids_of_transcript_name(transcript_name)&lt;/dt&gt;&lt;dd&gt;Returns a list of exon IDs associated with a given transcript name.&lt;/dd&gt;&lt;/dl&gt;</longdescription>
</pkgmetadata>