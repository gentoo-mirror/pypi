<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;types-aiobotocore-waf&quot;&gt;&lt;/a&gt;# types-aiobotocore-waf[![PyPI - types-aiobotocore-waf](https://img.shields.io/pypi/v/types-aiobotocore-waf.svg?color=blue)](https://pypi.org/project/types-aiobotocore-waf)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-waf.svg?color=blue)](https://pypi.org/project/types-aiobotocore-waf)[![Docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_waf/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-waf?color=blue)](https://pypistats.org/packages/types-aiobotocore-waf)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[aiobotocore.WAF 2.5.1](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/waf.html#WAF)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in[types-aiobotocore-waf docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_waf/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [types-aiobotocore-waf](#types-aiobotocore-waf)  - [How to install](#how-to-install)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `types-aiobotocore` for `WAF` service.```bash# install with aiobotocore type annotationspython -m pip install 'types-aiobotocore[waf]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'types-aiobotocore-lite[waf]'# standalone installationpython -m pip install types-aiobotocore-waf```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y types-aiobotocore-waf```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `types-aiobotocore[waf]` in your environment:```bashpython -m pip install 'types-aiobotocore[waf]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `aiobotocore` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `types-aiobotocore-lite[waf]` in your environment:```bashpython -m pip install 'types-aiobotocore-lite[waf]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `types-aiobotocore` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `types-aiobotocore` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[waf]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed  `types-aiobotocore`Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `types-aiobotocore[waf]` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[waf]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `types-aiobotocore[waf]` in your environment:```bashpython -m pip install 'types-aiobotocore[waf]'````Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `types-aiobotocore[waf]` in your environment:```bashpython -m pip install 'types-aiobotocore[waf]'```Optionally, you can install `types-aiobotocore` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`WAFClient` provides annotations for `session.create_client(&quot;waf&quot;)`.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_waf import WAFClientsession = get_session()async with session.create_client(&quot;waf&quot;) as client:    client: WAFClient    # now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`types_aiobotocore_waf.paginator` module contains type annotations for allpaginators.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_waf import WAFClientfrom types_aiobotocore_waf.paginator import (    GetRateBasedRuleManagedKeysPaginator,    ListActivatedRulesInRuleGroupPaginator,    ListByteMatchSetsPaginator,    ListGeoMatchSetsPaginator,    ListIPSetsPaginator,    ListLoggingConfigurationsPaginator,    ListRateBasedRulesPaginator,    ListRegexMatchSetsPaginator,    ListRegexPatternSetsPaginator,    ListRuleGroupsPaginator,    ListRulesPaginator,    ListSizeConstraintSetsPaginator,    ListSqlInjectionMatchSetsPaginator,    ListSubscribedRuleGroupsPaginator,    ListWebACLsPaginator,    ListXssMatchSetsPaginator,)session = get_session()async with session.create_client(&quot;waf&quot;) as client:    client: WAFClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    get_rate_based_rule_managed_keys_paginator: GetRateBasedRuleManagedKeysPaginator = (        client.get_paginator(&quot;get_rate_based_rule_managed_keys&quot;)    )    list_activated_rules_in_rule_group_paginator: ListActivatedRulesInRuleGroupPaginator = (        client.get_paginator(&quot;list_activated_rules_in_rule_group&quot;)    )    list_byte_match_sets_paginator: ListByteMatchSetsPaginator = client.get_paginator(        &quot;list_byte_match_sets&quot;    )    list_geo_match_sets_paginator: ListGeoMatchSetsPaginator = client.get_paginator(        &quot;list_geo_match_sets&quot;    )    list_ip_sets_paginator: ListIPSetsPaginator = client.get_paginator(&quot;list_ip_sets&quot;)    list_logging_configurations_paginator: ListLoggingConfigurationsPaginator = (        client.get_paginator(&quot;list_logging_configurations&quot;)    )    list_rate_based_rules_paginator: ListRateBasedRulesPaginator = client.get_paginator(        &quot;list_rate_based_rules&quot;    )    list_regex_match_sets_paginator: ListRegexMatchSetsPaginator = client.get_paginator(        &quot;list_regex_match_sets&quot;    )    list_regex_pattern_sets_paginator: ListRegexPatternSetsPaginator = client.get_paginator(        &quot;list_regex_pattern_sets&quot;    )    list_rule_groups_paginator: ListRuleGroupsPaginator = client.get_paginator(&quot;list_rule_groups&quot;)    list_rules_paginator: ListRulesPaginator = client.get_paginator(&quot;list_rules&quot;)    list_size_constraint_sets_paginator: ListSizeConstraintSetsPaginator = client.get_paginator(        &quot;list_size_constraint_sets&quot;    )    list_sql_injection_match_sets_paginator: ListSqlInjectionMatchSetsPaginator = (        client.get_paginator(&quot;list_sql_injection_match_sets&quot;)    )    list_subscribed_rule_groups_paginator: ListSubscribedRuleGroupsPaginator = client.get_paginator(        &quot;list_subscribed_rule_groups&quot;    )    list_web_acls_paginator: ListWebACLsPaginator = client.get_paginator(&quot;list_web_acls&quot;)    list_xss_match_sets_paginator: ListXssMatchSetsPaginator = client.get_paginator(        &quot;list_xss_match_sets&quot;    )```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`types_aiobotocore_waf.literals` module contains literals extracted from shapesthat can be used in user code for type checking.```pythonfrom types_aiobotocore_waf.literals import (    ChangeActionType,    ChangeTokenStatusType,    ComparisonOperatorType,    GeoMatchConstraintTypeType,    GeoMatchConstraintValueType,    GetRateBasedRuleManagedKeysPaginatorName,    IPSetDescriptorTypeType,    ListActivatedRulesInRuleGroupPaginatorName,    ListByteMatchSetsPaginatorName,    ListGeoMatchSetsPaginatorName,    ListIPSetsPaginatorName,    ListLoggingConfigurationsPaginatorName,    ListRateBasedRulesPaginatorName,    ListRegexMatchSetsPaginatorName,    ListRegexPatternSetsPaginatorName,    ListRuleGroupsPaginatorName,    ListRulesPaginatorName,    ListSizeConstraintSetsPaginatorName,    ListSqlInjectionMatchSetsPaginatorName,    ListSubscribedRuleGroupsPaginatorName,    ListWebACLsPaginatorName,    ListXssMatchSetsPaginatorName,    MatchFieldTypeType,    PositionalConstraintType,    PredicateTypeType,    RateKeyType,    TextTransformationType,    WafActionTypeType,    WafOverrideActionTypeType,    WafRuleTypeType,    WAFServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,)def check_value(value: ChangeActionType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`types_aiobotocore_waf.type_defs` module contains structures and shapesassembled to typed dictionaries for additional type checking.```pythonfrom types_aiobotocore_waf.type_defs import (    ExcludedRuleTypeDef,    WafActionTypeDef,    WafOverrideActionTypeDef,    ByteMatchSetSummaryTypeDef,    FieldToMatchTypeDef,    CreateByteMatchSetRequestRequestTypeDef,    CreateGeoMatchSetRequestRequestTypeDef,    CreateIPSetRequestRequestTypeDef,    TagTypeDef,    CreateRegexMatchSetRequestRequestTypeDef,    CreateRegexPatternSetRequestRequestTypeDef,    RegexPatternSetTypeDef,    RuleGroupTypeDef,    CreateSizeConstraintSetRequestRequestTypeDef,    CreateSqlInjectionMatchSetRequestRequestTypeDef,    CreateWebACLMigrationStackRequestRequestTypeDef,    CreateWebACLMigrationStackResponseTypeDef,    CreateXssMatchSetRequestRequestTypeDef,    DeleteByteMatchSetRequestRequestTypeDef,    DeleteByteMatchSetResponseTypeDef,    DeleteGeoMatchSetRequestRequestTypeDef,    DeleteGeoMatchSetResponseTypeDef,    DeleteIPSetRequestRequestTypeDef,    DeleteIPSetResponseTypeDef,    DeleteLoggingConfigurationRequestRequestTypeDef,    DeletePermissionPolicyRequestRequestTypeDef,    DeleteRateBasedRuleRequestRequestTypeDef,    DeleteRateBasedRuleResponseTypeDef,    DeleteRegexMatchSetRequestRequestTypeDef,    DeleteRegexMatchSetResponseTypeDef,    DeleteRegexPatternSetRequestRequestTypeDef,    DeleteRegexPatternSetResponseTypeDef,    DeleteRuleGroupRequestRequestTypeDef,    DeleteRuleGroupResponseTypeDef,    DeleteRuleRequestRequestTypeDef,    DeleteRuleResponseTypeDef,    DeleteSizeConstraintSetRequestRequestTypeDef,    DeleteSizeConstraintSetResponseTypeDef,    DeleteSqlInjectionMatchSetRequestRequestTypeDef,    DeleteSqlInjectionMatchSetResponseTypeDef,    DeleteWebACLRequestRequestTypeDef,    DeleteWebACLResponseTypeDef,    DeleteXssMatchSetRequestRequestTypeDef,    DeleteXssMatchSetResponseTypeDef,    GeoMatchConstraintTypeDef,    GeoMatchSetSummaryTypeDef,    GetByteMatchSetRequestRequestTypeDef,    GetChangeTokenResponseTypeDef,    GetChangeTokenStatusRequestRequestTypeDef,    GetChangeTokenStatusResponseTypeDef,    GetGeoMatchSetRequestRequestTypeDef,    GetIPSetRequestRequestTypeDef,    GetLoggingConfigurationRequestRequestTypeDef,    GetPermissionPolicyRequestRequestTypeDef,    GetPermissionPolicyResponseTypeDef,    GetRateBasedRuleManagedKeysRequestGetRateBasedRuleManagedKeysPaginateTypeDef,    GetRateBasedRuleManagedKeysRequestRequestTypeDef,    GetRateBasedRuleManagedKeysResponseTypeDef,    GetRateBasedRuleRequestRequestTypeDef,    GetRegexMatchSetRequestRequestTypeDef,    GetRegexPatternSetRequestRequestTypeDef,    GetRuleGroupRequestRequestTypeDef,    GetRuleRequestRequestTypeDef,    TimeWindowTypeDef,    GetSizeConstraintSetRequestRequestTypeDef,    GetSqlInjectionMatchSetRequestRequestTypeDef,    GetWebACLRequestRequestTypeDef,    GetXssMatchSetRequestRequestTypeDef,    HTTPHeaderTypeDef,    IPSetDescriptorTypeDef,    IPSetSummaryTypeDef,    ListActivatedRulesInRuleGroupRequestListActivatedRulesInRuleGroupPaginateTypeDef,    ListActivatedRulesInRuleGroupRequestRequestTypeDef,    ListByteMatchSetsRequestListByteMatchSetsPaginateTypeDef,    ListByteMatchSetsRequestRequestTypeDef,    ListGeoMatchSetsRequestListGeoMatchSetsPaginateTypeDef,    ListGeoMatchSetsRequestRequestTypeDef,    ListIPSetsRequestListIPSetsPaginateTypeDef,    ListIPSetsRequestRequestTypeDef,    ListLoggingConfigurationsRequestListLoggingConfigurationsPaginateTypeDef,    ListLoggingConfigurationsRequestRequestTypeDef,    ListRateBasedRulesRequestListRateBasedRulesPaginateTypeDef,    ListRateBasedRulesRequestRequestTypeDef,    RuleSummaryTypeDef,    ListRegexMatchSetsRequestListRegexMatchSetsPaginateTypeDef,    ListRegexMatchSetsRequestRequestTypeDef,    RegexMatchSetSummaryTypeDef,    ListRegexPatternSetsRequestListRegexPatternSetsPaginateTypeDef,    ListRegexPatternSetsRequestRequestTypeDef,    RegexPatternSetSummaryTypeDef,    ListRuleGroupsRequestListRuleGroupsPaginateTypeDef,    ListRuleGroupsRequestRequestTypeDef,    RuleGroupSummaryTypeDef,    ListRulesRequestListRulesPaginateTypeDef,    ListRulesRequestRequestTypeDef,    ListSizeConstraintSetsRequestListSizeConstraintSetsPaginateTypeDef,    ListSizeConstraintSetsRequestRequestTypeDef,    SizeConstraintSetSummaryTypeDef,    ListSqlInjectionMatchSetsRequestListSqlInjectionMatchSetsPaginateTypeDef,    ListSqlInjectionMatchSetsRequestRequestTypeDef,    SqlInjectionMatchSetSummaryTypeDef,    ListSubscribedRuleGroupsRequestListSubscribedRuleGroupsPaginateTypeDef,    ListSubscribedRuleGroupsRequestRequestTypeDef,    SubscribedRuleGroupSummaryTypeDef,    ListTagsForResourceRequestRequestTypeDef,    ListWebACLsRequestListWebACLsPaginateTypeDef,    ListWebACLsRequestRequestTypeDef,    WebACLSummaryTypeDef,    ListXssMatchSetsRequestListXssMatchSetsPaginateTypeDef,    ListXssMatchSetsRequestRequestTypeDef,    XssMatchSetSummaryTypeDef,    PaginatorConfigTypeDef,    PredicateTypeDef,    PutPermissionPolicyRequestRequestTypeDef,    RegexPatternSetUpdateTypeDef,    ResponseMetadataTypeDef,    UntagResourceRequestRequestTypeDef,    UpdateByteMatchSetResponseTypeDef,    UpdateGeoMatchSetResponseTypeDef,    UpdateIPSetResponseTypeDef,    UpdateRateBasedRuleResponseTypeDef,    UpdateRegexMatchSetResponseTypeDef,    UpdateRegexPatternSetResponseTypeDef,    UpdateRuleGroupResponseTypeDef,    UpdateRuleResponseTypeDef,    UpdateSizeConstraintSetResponseTypeDef,    UpdateSqlInjectionMatchSetResponseTypeDef,    UpdateWebACLResponseTypeDef,    UpdateXssMatchSetResponseTypeDef,    ActivatedRuleTypeDef,    ListByteMatchSetsResponseTypeDef,    ByteMatchTupleTypeDef,    LoggingConfigurationTypeDef,    RegexMatchTupleTypeDef,    SizeConstraintTypeDef,    SqlInjectionMatchTupleTypeDef,    XssMatchTupleTypeDef,    CreateRateBasedRuleRequestRequestTypeDef,    CreateRuleGroupRequestRequestTypeDef,    CreateRuleRequestRequestTypeDef,    CreateWebACLRequestRequestTypeDef,    TagInfoForResourceTypeDef,    TagResourceRequestRequestTypeDef,    CreateRegexPatternSetResponseTypeDef,    GetRegexPatternSetResponseTypeDef,    CreateRuleGroupResponseTypeDef,    GetRuleGroupResponseTypeDef,    GeoMatchSetTypeDef,    GeoMatchSetUpdateTypeDef,    ListGeoMatchSetsResponseTypeDef,    GetSampledRequestsRequestRequestTypeDef,    HTTPRequestTypeDef,    IPSetTypeDef,    IPSetUpdateTypeDef,    ListIPSetsResponseTypeDef,    ListRateBasedRulesResponseTypeDef,    ListRulesResponseTypeDef,    ListRegexMatchSetsResponseTypeDef,    ListRegexPatternSetsResponseTypeDef,    ListRuleGroupsResponseTypeDef,    ListSizeConstraintSetsResponseTypeDef,    ListSqlInjectionMatchSetsResponseTypeDef,    ListSubscribedRuleGroupsResponseTypeDef,    ListWebACLsResponseTypeDef,    ListXssMatchSetsResponseTypeDef,    RateBasedRuleTypeDef,    RuleTypeDef,    RuleUpdateTypeDef,    UpdateRegexPatternSetRequestRequestTypeDef,    ListActivatedRulesInRuleGroupResponseTypeDef,    RuleGroupUpdateTypeDef,    WebACLTypeDef,    WebACLUpdateTypeDef,    ByteMatchSetTypeDef,    ByteMatchSetUpdateTypeDef,    GetLoggingConfigurationResponseTypeDef,    ListLoggingConfigurationsResponseTypeDef,    PutLoggingConfigurationRequestRequestTypeDef,    PutLoggingConfigurationResponseTypeDef,    RegexMatchSetTypeDef,    RegexMatchSetUpdateTypeDef,    SizeConstraintSetTypeDef,    SizeConstraintSetUpdateTypeDef,    SqlInjectionMatchSetTypeDef,    SqlInjectionMatchSetUpdateTypeDef,    XssMatchSetTypeDef,    XssMatchSetUpdateTypeDef,    ListTagsForResourceResponseTypeDef,    CreateGeoMatchSetResponseTypeDef,    GetGeoMatchSetResponseTypeDef,    UpdateGeoMatchSetRequestRequestTypeDef,    SampledHTTPRequestTypeDef,    CreateIPSetResponseTypeDef,    GetIPSetResponseTypeDef,    UpdateIPSetRequestRequestTypeDef,    CreateRateBasedRuleResponseTypeDef,    GetRateBasedRuleResponseTypeDef,    CreateRuleResponseTypeDef,    GetRuleResponseTypeDef,    UpdateRateBasedRuleRequestRequestTypeDef,    UpdateRuleRequestRequestTypeDef,    UpdateRuleGroupRequestRequestTypeDef,    CreateWebACLResponseTypeDef,    GetWebACLResponseTypeDef,    UpdateWebACLRequestRequestTypeDef,    CreateByteMatchSetResponseTypeDef,    GetByteMatchSetResponseTypeDef,    UpdateByteMatchSetRequestRequestTypeDef,    CreateRegexMatchSetResponseTypeDef,    GetRegexMatchSetResponseTypeDef,    UpdateRegexMatchSetRequestRequestTypeDef,    CreateSizeConstraintSetResponseTypeDef,    GetSizeConstraintSetResponseTypeDef,    UpdateSizeConstraintSetRequestRequestTypeDef,    CreateSqlInjectionMatchSetResponseTypeDef,    GetSqlInjectionMatchSetResponseTypeDef,    UpdateSqlInjectionMatchSetRequestRequestTypeDef,    CreateXssMatchSetResponseTypeDef,    GetXssMatchSetResponseTypeDef,    UpdateXssMatchSetRequestRequestTypeDef,    GetSampledRequestsResponseTypeDef,)def get_structure() -&gt; ExcludedRuleTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for`aiobotocore` updates. It delivers drop-in type annotations for you and makessure that:- All available `aiobotocore` services are covered.- Each public class and method of every `aiobotocore` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`types-aiobotocore-waf` version is the same as related `aiobotocore` versionand follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_waf/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>