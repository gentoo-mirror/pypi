<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># slash-help[![Downloads](https://static.pepy.tech/personalized-badge/slash-help?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=Downloads)](https://pypi.org/project/slash-help/) [![Discord](https://img.shields.io/discord/890021073465270312?color=blue&amp;label=Discord)](https://discord.gg/Sk5qDBGPsQ)&lt;img src=&quot;https://cdn.discordapp.com/attachments/890021074337660959/892945393988554782/new-slash-help-gif.gif&quot; alt=&quot;slash-help gif&quot;&gt;&lt;/img&gt;discord-py-interactions slash command helpJoin our [Discord server](https://discord.gg/Sk5qDBGPsQ) to ask questions, report bugs, or suggest features!## Install:```shellpip install -U slash-help```Requirements (automatically installed when installing slash-help):- discord-py-interactions (version 3.0.2)- discord.py (version 1.7.3)- dinteractions-Paginator- thefuzz- Levenshtein## Example:&lt;img src=&quot;https://cdn.discordapp.com/attachments/901252023444467733/901252684114440212/mXxyqtOngt.gif&quot;&gt;&lt;/img&gt;## Usage:```pyfrom discord_slash import SlashCommandfrom discord.ext import commandsfrom slash_help import SlashHelpbot = commands.Bot(&quot;your_prefix&quot;, help_command=None)slash = SlashCommand(bot, sync_commands=True)  # sync_commands=True preferredhelp_slash = SlashHelp(bot, slash, &quot;your_bot_token&quot;, dpy_command=True)  # if you want a dpy command as well, and to show dpy commands in the help# and its done!```## More customized:```pyfrom discord_slash import SlashCommandfrom discord.ext import commandsfrom slash_help import SlashHelpbot = commands.Bot(&quot;your_prefix&quot;, help_command=None)slash = SlashCommand(bot, sync_commands=True)  # sync_commands=True preferredhelp_slash = SlashHelp(bot, slash, &quot;your_bot_token&quot;, dpy_command=True, auto_create=False)@bot.command()async def help(ctx, *, command=None):    await help_slash.send_help(ctx, command, prefix=&quot;your_prefix&quot;)  # you can override the prefix here                                                                    # and also in SlashHelp()@slash.slash(name=&quot;help&quot;)async def _help(ctx, command=None):    await help_slash.send_help(ctx, command, guild_id=ctx.guild.id)```## *class* SlashHelp### Arguments:#### Required:- `bot`: `Union[commands.Bot, discord.Client]` - the bot variable- `slash`: `SlashCommand` - the slash variable- `token`: `str` - the bot token, required for fetching slash commands from Discord API#### Optional:- `guild_ids`: `Optional[List[int]] = None` - a list of guild/server IDs to register the help slash command- `guild_id`: `Optional[int] = None` - what guild ID to use for getting guild commands##### Keyword Arguments:- `color`: `Optional[discord.Color] = discord.Color.default()` - the color of the embed- `colour` - alias of `color`- `timeout`: `Optional[int] = 60` - the number of seconds till paginator timeout, specify `None` for no timeout- `fields_per_embed`: `Optional[int] = 4` - the number of fields per embed- `footer`: `Optional[str] = None` - footer for the embeds- `front_description`: `Optional[str] = None` - description in the first embed- `no_category_name`: `Optional[str] = &quot;No Category&quot;` - value for the No Category field- `no_category_description`: `Optional[str] = &quot;No description&quot;` - value for the No Category description field- `extended_buttons`: `Optional[bool] = True` - to use the first and last buttons- `use_select`: `Optional[bool] = True` - whether to use the select- `author_only`: `Optional[bool] = False` - whether to have buttons work only for the author- `use_subcommand`: `Optional[bool] = False` - to have a subcommand `/help bot_name`- `bot_name`: `Optional[str] = None` - needed to use `use_subcommand`- `dpy_command`: `Optional[bool] = False` - whether to make a discord.py command as well- `max_search_results`: `Optional[int] = 12` - maximum search results- `sync_commands`: `Optional[bool] = False` - if you want to get commands every single time- `blacklist`: `Optional[List[str]] = None` - commands or cogs to blacklist, case sensitive- `prefix`: `Optional[str] = None` - overrides `bot.command_prefix`</longdescription>
</pkgmetadata>