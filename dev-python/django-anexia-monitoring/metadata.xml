<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Anexia Monitoring=================[![Linter and tests](https://github.com/anexia-it/anexia-monitoring-django/workflows/Linter%20and%20tests/badge.svg)](https://github.com/anexia-it/anexia-monitoring-django/actions)[![Codecov](https://img.shields.io/codecov/c/gh/anexia-it/anexia-monitoring-django)](https://codecov.io/gh/anexia-it/anexia-monitoring-django)A Django app used to monitor updates for Django and all installed pythonpackages in the running environment. It can be also used to check if thewebsite is alive and working correctly.Django Compatibility Matrix---------------------------If your project uses an older version of Django, you can choose an older version of this project.| This Project | Python Version | Django Version ||--------------|----------------|----------------|| 1.5.*        | 3.7 - 3.10     | 3.2, 4.0, 4.1  || 1.4.*        | 3.7 - 3.10     | 3.2, 4.0       || 1.3.*        | 3.5 - 3.9      | 2.2, 3.1, 3.2  || 1.2.*        | 3.5 - 3.8      | 2.2, 3.0, 3.1  || 1.1.*        | 2.7, 3.4, 3.5  | 1.8, 1.11      |Installation and configuration------------------------------Install the package by using pip```bashpip install django-anexia-monitoring```Add the app the settings installed apps```pythonINSTALLED_APPS = [  ...  # Anexia monitor  'anexia_monitoring',  ...]```In the projects settings.py add the access token configuration:```pythonANX_MONITORING_ACCESS_TOKEN = 'custom_access_token'```Add URL configuration for REST endpoint```pythonfrom anexia_monitoring import urls as monitor_urls...urlpatterns = [  ...  # Anexia monitoring  re_path(r'^', include(monitor_urls)),  ...]```Usage-----The plugin registers some custom REST endpoints which can be used formonitoring. Make sure that the **ANX\_MONITORING\_ACCESS\_TOKEN** isdefined, since this is used for authorization. The endpoints will returna 401 HTTP\_STATUS code if the token is not define or invalid, and a 200status code otherwise.### Version monitoringReturns all a list with platform and module information.**URL:** `/anxapi/v1/modules/?access_token=custom_access_token`Response headers:```textStatus Code: 200 OKAccess-Control-Allow-Origin: *Access-Control-Allow-Credentials: trueAllow: GETContent-Type: application/json```Response body:```json{   &quot;platform&quot;:{      &quot;platform&quot;:&quot;python&quot;,      &quot;framework_installed_version&quot;:&quot;1.11.1&quot;,      &quot;framework_newest_version&quot;:&quot;2.0a1&quot;,      &quot;framework&quot;:&quot;django&quot;,      &quot;platform_version&quot;:&quot;3.5.3 (default, Apr 26 2017, 20:12:19) \n[GCC 4.9.2]&quot;   },   &quot;modules&quot;:[      {         &quot;newest_version&quot;:&quot;1.4.3&quot;,         &quot;newest_version_licences&quot;: [           &quot;MIT&quot;         ],         &quot;name&quot;:&quot;appdirs&quot;,         &quot;installed_version&quot;:&quot;1.4.3&quot;,         &quot;installed_version_licences&quot;: [           &quot;MIT&quot;         ]      },      {         &quot;newest_version&quot;:&quot;0.22.0&quot;,         &quot;newest_version_licences&quot;: [           &quot;MIT&quot;         ],         &quot;name&quot;:&quot;asn1crypto&quot;,         &quot;installed_version&quot;:&quot;0.22.0&quot;,         &quot;installed_version_licences&quot;: [           &quot;MIT&quot;         ],      },      {         &quot;newest_version&quot;:&quot;2.4.0&quot;,         &quot;newest_version_licences&quot;: [           &quot;BSD&quot;         ],         &quot;name&quot;:&quot;Babel&quot;,         &quot;installed_version&quot;:&quot;2.4.0&quot;,         &quot;installed_version_licences&quot;: [           &quot;BSD&quot;         ],      }   ]}```### Live monitoringThis endpoint can be used to verify if the application is alive andworking correctly. It checks if the database connection is working andmakes a query for users. It allows to register custom checks by usingthe dispatched **monitor\_up\_check** event.**URL:** `/anxapi/v1/up/?access_token=custom_access_token`Response headers:```textStatus Code: 200 OKAccess-Control-Allow-Origin: *Access-Control-Allow-Credentials: trueAllow: GETContent-Type: text/plain```Response body:```textOK```#### Custom live monitoring eventThis check can be defined into the app even subscribers```pythonfrom django.dispatch import receiverfrom anexia_monitoring.events import monitor_up_check@receiver(monitor_up_check)def list_of_complete_polls_handler(sender, **kwargs):    &quot;&quot;&quot;    My custom is alive check    &quot;&quot;&quot;    pass```#### Live monitoring settingsThe User table is used in most Django applications and by default the `up` endpoint will make a test query to thistable. If you don't need it you can disable it using the `ANX_MONITORING_TEST_QUERY_USERS` setting.Similar most Django applications also use a database connection which the module tests for connection by default.If you don't need this you can deactivate it by providing the `ANX_MONITORING_TEST_DB_CONNECTIONS` setting.```pythonANX_MONITORING_TEST_QUERY_USERS = FalseANX_MONITORING_TEST_DB_CONNECTIONS = False```List of developers-------------------   Harald Nezbeda, Lead developerProject related external resources-----------------------------------   [Django documentation](https://docs.djangoproject.com/en/2.2/)</longdescription>
</pkgmetadata>