<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>cpplint - static code checker for C++=====================================.. image:: https://img.shields.io/pypi/v/cpplint.svg    :target: https://pypi.python.org/pypi/cpplint.. image:: https://img.shields.io/pypi/pyversions/cpplint.svg    :target: https://pypi.python.org/pypi/cpplint.. image:: https://img.shields.io/pypi/status/cpplint.svg    :target: https://pypi.python.org/pypi/cpplint.. image:: https://img.shields.io/pypi/l/cpplint.svg    :target: https://pypi.python.org/pypi/cpplint.. image:: https://img.shields.io/pypi/dd/cpplint.svg    :target: https://pypi.python.org/pypi/cpplint.. image:: https://img.shields.io/pypi/dw/cpplint.svg    :target: https://pypi.python.org/pypi/cpplint.. image:: https://img.shields.io/pypi/dm/cpplint.svg    :target: https://pypi.python.org/pypi/cpplintCpplint is a command-line tool to check C/C++ files for style issues following `Google's C++ style guide &lt;http://google.github.io/styleguide/cppguide.html&gt;`_.Cpplint is developed and maintained by Google Inc. at `google/styleguide &lt;https://github.com/google/styleguide&gt;`_, also see the `wikipedia entry &lt;http://en.wikipedia.org/wiki/Cpplint&gt;`_While Google maintains cpplint, Google is not (very) responsive to issues and pull requests, this fork aims to be (somewhat) more open to add fixes to cpplint to enable fixes, when those fixes make cpplint usable in wider contexts.Also see discussion here https://github.com/google/styleguide/pull/528.Installation============To install cpplint from PyPI, run:.. code-block:: bash    $ pip install cpplintThen run it with:.. code-block:: bash    $ cpplint [OPTIONS] filesFor full usage instructions, run:.. code-block:: bash    $ cpplint --helpChanges-------The modifications in this fork are minor fixes and cosmetic changes, such as:* python 3 compatibility* more default file extensions* customizable file extensions with the --extensions argument* continuous integration on github* support for recursive file discovery via the --recursive argument* support for excluding files via --exclude* JUnit XML output format* Overriding repository root auto-detection via --repository* Support ``#pragma once`` as an alternative to header include guards* ... and a few more (most of which are open PRs on upstream)Acknowledgements----------------Thanks to Google Inc. for open-sourcing their in-house tool.Thanks to maintainers of the fork* `tkruse &lt;https://github.com/tkruse&gt;`_  * `mattyclarkson &lt;https://github.com/mattyclarkson&gt;`_* `theandrewdavis &lt;https://github.com/theandrewdavis&gt;`_</longdescription>
</pkgmetadata>