<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div &gt;  &lt;a href=&quot;https://evadb.readthedocs.io/&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/georgia-tech-db/eva/master/docs/images/eva/eva-banner.png&quot; alt=&quot;EVA&quot; width=&quot;1000px&quot; margin-left=&quot;-5px&quot;&gt;  &lt;/a&gt;  &lt;div&gt;        &lt;h3&gt;Try It Out!&lt;/h3&gt;        &lt;a href=&quot;https://colab.research.google.com/github/georgia-tech-db/eva/blob/master/tutorials/03-emotion-analysis.ipynb&quot;&gt;            &lt;img src=&quot;https://colab.research.google.com/assets/colab-badge.svg&quot; alt=&quot;Open EVA on Colab&quot;/&gt;        &lt;/a&gt;        &lt;a href=&quot;https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg&quot;&gt;            &lt;img alt=&quot;Slack&quot; src=&quot;https://img.shields.io/badge/slack-eva-ff69b4.svg?logo=slack&quot;&gt;        &lt;/a&gt;            &lt;a href=&quot;https://github.com/georgia-tech-db/eva/discussions&quot;&gt;            &lt;img alt=&quot;Discuss on Github!&quot; src=&quot;https://img.shields.io/badge/-Discuss%20on%20Github!-blueviolet&quot;&gt;        &lt;/a&gt;        &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/evadb.svg&quot;/&gt;        &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?logo=apache&quot;/&gt;        &lt;img alt=&quot;Python Versions&quot; src=&quot;https://img.shields.io/badge/Python--versions-3.7%20|%203.8%20|%203.9%20|%203.10-brightgreen&quot;/&gt;    &lt;/div&gt;&lt;/div&gt;# EVA AI-Relational Database SystemEVA is an open-source **AI-relational database with first-class support for deep learning models**. It aims to support AI-powered database applications that operate on both structured (tables) and unstructured data (videos, text, podcasts, PDFs, etc.) with deep learning models.EVA accelerates AI pipelines using a collection of optimizations inspired by relational database systems including function caching, sampling, and cost-based operator reordering. It comes with a wide range of models for analyzing unstructured data including image classification, object detection, OCR, face detection, etc. It is fully implemented in Python, and licensed under the Apache license.EVA supports a AI-oriented query language for analysing unstructured data. Here are some illustrative applications: * &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/tutorials/03-emotion-analysis.html&quot;&gt;Examining the emotion palette of actors in a movie&lt;/a&gt; * &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/tutorials/02-object-detection.html&quot;&gt;Analysing traffic flow at an intersection &lt;/a&gt; * &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/tutorials/01-mnist.html&quot;&gt;Classifying images based on their content&lt;/a&gt; * &lt;a href=&quot;https://github.com/georgia-tech-db/license-plate-recognition&quot;&gt;Recogizing license plates &lt;/a&gt; * &lt;a href=&quot;https://github.com/georgia-tech-db/toxicity-classification&quot;&gt;Analysing toxicity of social media memes &lt;/a&gt;If you are wondering why you might need a AI-relational database system, start with the page on &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/overview/video.html#&quot;&gt;Video Database Systems&lt;/a&gt;. It describes how EVA lets you easily make use of deep learning models and you can save money spent on inference on large image or video datasets.The &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/overview/installation.html&quot;&gt;Getting Started&lt;/a&gt; page shows how you can use EVA for different computer vision tasks: image classification, object detection, action recognition, and how you can easily extend EVA to support your custom deep learning model in the form of user-defined functions.The &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/tutorials/index.html&quot;&gt;User Guides&lt;/a&gt; section contains Jupyter Notebooks that demonstrate how to use various features of EVA. Each notebook includes a link to Google Colab, where you can run the code by yourself.## Why EVA? ##&lt;details&gt;  &lt;summary&gt;&lt;b&gt;Easily combine SQL and Deep Learning to build next-generation database applications&lt;/b&gt;&lt;/summary&gt;  Easily query videos in user-facing applications with a SQL-like interface for commonly used computer vision models.&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;b&gt;Speed up queries and save money spent on model inference&lt;/b&gt;&lt;/summary&gt;  EVA comes with a collection of built-in sampling, caching, and filtering optimizations inspired by time-tested relational database systems.&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;b&gt;Extensible by design to support custom deep learning models &lt;/b&gt;&lt;/summary&gt;  EVA has first-class support for user-defined functions that wrap around your deep learning models in PyTorch.&lt;/details&gt;## Links* [Documentation](https://evadb.readthedocs.io/)* [Tutorials](https://github.com/georgia-tech-db/eva/blob/master/tutorials/03-emotion-analysis.ipynb)* [Join Slack](https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg)* [Demo](https://ada-00.cc.gatech.edu/eva/playground)## Quick Start1. To install EVA, we recommend using the pip package manager (EVA supports Python versions 3.7+).```shellpip install evadb```2. EVA is based on a client-server architecture. It works in Jupyter notebooks (illustrative notebooks are available in the [Tutorials](https://github.com/georgia-tech-db/eva/blob/master/tutorials/03-emotion-analysis.ipynb) folder) and also supports a terminal-based client. To start the EVA server and a terminal-based client, use the following commands:```shelleva_server &amp;   # launch servereva_client     # launch client```3. Load a video onto the EVA server from the client (we use [ua_detrac.mp4](data/ua_detrac/ua_detrac.mp4) video as an example):```mysqlLOAD VIDEO &quot;data/ua_detrac/ua_detrac.mp4&quot; INTO MyVideo;```4. That's it! You can now run queries over the loaded video:```mysqlSELECT id, data FROM MyVideo WHERE id &lt; 5;```5. Search for frames in the video that contain a car```mysqlSELECT id, data FROM MyVideo WHERE ['car'] &lt;@ FastRCNNObjectDetector(data).labels;```| Source Video  | Query Result ||---------------|--------------||&lt;img alt=&quot;Source Video&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-input.webp&quot; width=&quot;300&quot;&gt; |&lt;img alt=&quot;Query Result&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-output.webp&quot; width=&quot;300&quot;&gt; |6. Search for frames in the video that contain a pedestrian and a car```mysqlSELECT id, data FROM MyVideo WHERE ['pedestrian', 'car'] &lt;@ FastRCNNObjectDetector(data).labels;```7. Search for frames in the video with more than 3 cars```mysqlSELECT id, data FROM MyVideo WHERE ArrayCount(FastRCNNObjectDetector(data).labels, 'car') &gt; 3;```8. You can create a new user-defined function (UDF) that wraps around your custom vision model or an off-the-shelf model like FastRCNN:```mysqlCREATE UDF IF NOT EXISTS MyUDFINPUT  (frame NDARRAY UINT8(3, ANYDIM, ANYDIM))OUTPUT (labels NDARRAY STR(ANYDIM), bboxes NDARRAY FLOAT32(ANYDIM, 4),        scores NDARRAY FLOAT32(ANYDIM))TYPE  ClassificationIMPL  'eva/udfs/fastrcnn_object_detector.py';```9. You can combine multiple user-defined functions in a single query to accomplish more complicated tasks.```mysql   -- Analyse emotions of faces in a video   SELECT id, bbox, EmotionDetector(Crop(data, bbox))    FROM MyVideo JOIN LATERAL UNNEST(FaceDetector(data)) AS Face(bbox, conf)     WHERE id &lt; 15;```## Illustrative EVA Applications ### Traffic Analysis (Object Detection Model)| Source Video  | Query Result ||---------------|--------------||&lt;img alt=&quot;Source Video&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-input.webp&quot; width=&quot;300&quot;&gt; |&lt;img alt=&quot;Query Result&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/traffic-output.webp&quot; width=&quot;300&quot;&gt; |### MNIST Digit Recognition (Image Classification Model)| Source Video  | Query Result ||---------------|--------------||&lt;img alt=&quot;Source Video&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/mnist-input.webp&quot; width=&quot;150&quot;&gt; |&lt;img alt=&quot;Query Result&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/mnist-output.webp&quot; width=&quot;150&quot;&gt; |### Movie Analysis (Face Detection + Emotion Classfication Models)| Source Video  | Query Result ||---------------|--------------||&lt;img alt=&quot;Source Video&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/gangubai-input.webp&quot; width=&quot;400&quot;&gt; |&lt;img alt=&quot;Query Result&quot; src=&quot;https://github.com/georgia-tech-db/eva/releases/download/v0.1.0/gangubai-output.webp&quot; width=&quot;400&quot;&gt; |### [License Plate Recognition](https://github.com/georgia-tech-db/eva-application-template) (Plate Detection + OCR Extraction Models)| Query Result ||--------------|&lt;img alt=&quot;Query Result&quot; src=&quot;https://github.com/georgia-tech-db/license-plate-recognition/blob/main/README_files/README_12_3.png&quot; width=&quot;300&quot;&gt; |### [Meme Toxicity Classification](https://github.com/georgia-tech-db/toxicity-classification) (OCR Extraction + Toxicity Classification Models)| Query Result ||--------------|&lt;img alt=&quot;Query Result&quot; src=&quot;https://raw.githubusercontent.com/georgia-tech-db/toxicity-classification/main/README_files/README_16_2.png&quot; width=&quot;200&quot;&gt; |## CommunityJoin the EVA community on [Slack](https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg) to ask questions and to share your ideas for improving EVA.&lt;a href=&quot;https://join.slack.com/t/eva-db/shared_invite/zt-1i10zyddy-PlJ4iawLdurDv~aIAq90Dg&quot;&gt;                  &lt;img src=&quot;https://raw.githubusercontent.com/georgia-tech-db/eva/master/docs/images/eva/eva-slack.png&quot; alt=&quot;EVA Slack Channel&quot; width=&quot;500&quot;&gt;&lt;/a&gt;### Architecture Diagram of EVA&lt;img src=&quot;https://raw.githubusercontent.com/georgia-tech-db/eva/master/docs/images/eva/eva-arch.png&quot; alt=&quot;EVA Architecture Diagram&quot; width=&quot;500&quot;&gt;## Contributing to EVA[![PyPI Version](https://img.shields.io/pypi/v/evadb.svg)](https://pypi.org/project/evadb)[![CI Status](https://circleci.com/gh/georgia-tech-db/eva.svg?style=svg)](https://circleci.com/gh/georgia-tech-db/eva)[![Coverage Status](https://coveralls.io/repos/github/georgia-tech-db/eva/badge.svg?branch=master)](https://coveralls.io/github/georgia-tech-db/eva?branch=master)[![Documentation Status](https://readthedocs.org/projects/evadb/badge/?version=stable)](https://evadb.readthedocs.io/en/stable/index.html)We welcome all kinds of contributions to EVA.To file a bug or request a feature, please use &lt;a href=&quot;https://github.com/georgia-tech-db/eva/issues&quot;&gt;GitHub issues&lt;/a&gt;. &lt;a href=&quot;https://github.com/georgia-tech-db/eva/pulls&quot;&gt;Pull requests&lt;/a&gt; are welcome.For more information on contributing to EVA, see our[contribution guide](https://evadb.readthedocs.io/en/stable/source/contribute/index.html).## LicenseCopyright (c) 2018-2023 [Georgia Tech Database Group](http://db.cc.gatech.edu/)Licensed under [Apache License](LICENSE).</longdescription>
</pkgmetadata>