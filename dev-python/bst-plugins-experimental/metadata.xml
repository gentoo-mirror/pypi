<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>BuildStream Experimental Plugins********************************A collection of &quot;experimental&quot; plugins for BuildStream 2.0.This repo collects plugins which don't provide the strong API guaranteesrequired by the`buildstream-plugins &lt;https://github.com/apache/buildstream-plugins/&gt;`_project.How to use this repo====================The plugins in this repo do not provide strong API guarantees or backwardscompatibility. You should use a specific commit in your project and update itmanually as needed.You are recommended to import these plugins into your project using the`junction plugins &lt;https://docs.buildstream.build/master/format_project.html#junction-plugins&gt;`_feature of BuildStream 2.0 so you can control exactly what Git commit is used.This is done in several stages documented below:Using via a junction~~~~~~~~~~~~~~~~~~~~First, make sure you have the ``git`` source from`buildstream-plugins`_available and declared in your ``project.conf`` file. If you installedthe `PyPI package &lt;https://pypi.org/project/buildstream-plugins/&gt;`_then you can import it as a`pip plugin &lt;https://docs.buildstream.build/master/format_project.html#pip-plugins&gt;`_::    plugins:    - origin: pip      package-name: buildstream-plugins      sources:      - gitNow, add a`junction element &lt;https://docs.buildstream.build/master/elements/junction.html#module-elements.junction&gt;`_referencing this repo. Here's an example you could save as ``bst-plugins-experimental.bst``in your elements directory::    kind: junction    sources:    - kind: git      url: https://gitlab.com/BuildStream/bst-plugins-experimental      track: masterYou can then run ``bst source track bst-plugins-experimental.bst`` to set the ``ref`` fieldappropriately.Finally you can define specific plugins you want to use in ``project.conf``::    plugins:    - origin: junction      junction: bst-plugins-experimental.bst      sources:      - pypi      elements:      - pep517Alternative methods~~~~~~~~~~~~~~~~~~~You can use Git's 'submodules' feature to import this repo into your project'srepo, then declare the plugins as`local plugins &lt;https://docs.buildstream.build/master/format_project.html#local-plugins&gt;`_.BuildStream also supports`pip plugins &lt;https://docs.buildstream.build/master/format_project.html#pip-plugins&gt;`_which are imported from the host Python environment. While`bst-plugins-experimental &lt;https://pypi.org/project/bst-plugins-experimental/&gt;`_is available on PyPI, the project does not provide any backwards compatibilityor &quot;semantic versioning&quot; guarantees. Make sure you can control exactly what ofthe package version is used if you consume it via Pip.</longdescription>
</pkgmetadata>