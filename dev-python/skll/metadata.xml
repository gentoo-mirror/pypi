<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SciKit-Learn Laboratory-----------------------.. image:: https://gitlab.com/EducationalTestingService/skll/badges/main/pipeline.svg   :target: https://gitlab.com/EducationalTestingService/skll/-/pipelines   :alt: Gitlab CI status.. image:: https://dev.azure.com/EducationalTestingService/SKLL/_apis/build/status/EducationalTestingService.skll   :target: https://dev.azure.com/EducationalTestingService/SKLL/_build?view=runs   :alt: Azure Pipelines status.. image:: https://codecov.io/gh/EducationalTestingService/skll/branch/main/graph/badge.svg  :target: https://codecov.io/gh/EducationalTestingService/skll.. image:: https://img.shields.io/pypi/v/skll.svg   :target: https://pypi.org/project/skll/   :alt: Latest version on PyPI.. image:: https://img.shields.io/pypi/l/skll.svg   :alt: License.. image:: https://img.shields.io/conda/v/ets/skll.svg   :target: https://anaconda.org/ets/skll   :alt: Conda package for SKLL.. image:: https://img.shields.io/pypi/pyversions/skll.svg   :target: https://pypi.org/project/skll/   :alt: Supported python versions for SKLL.. image:: https://img.shields.io/badge/DOI-10.5281%2Fzenodo.12825-blue.svg   :target: http://dx.doi.org/10.5281/zenodo.12825   :alt: DOI for citing SKLL 1.0.0.. image:: https://mybinder.org/badge_logo.svg :target: https://mybinder.org/v2/gh/EducationalTestingService/skll/main?filepath=examples%2FTutorial.ipynbThis Python package provides command-line utilities to make it easier to runmachine learning experiments with scikit-learn.  One of the primary goals ofour project is to make it so that you can run scikit-learn experiments withoutactually needing to write any code other than what you used to generate/extractthe features.Installation~~~~~~~~~~~~You can install using either ``pip`` or ``conda``. See details `here &lt;https://skll.readthedocs.io/en/latest/getting_started.html&gt;`__.Requirements~~~~~~~~~~~~-  Python 3.8, 3.9, 3.10, or 3.11-  `beautifulsoup4 &lt;http://www.crummy.com/software/BeautifulSoup/&gt;`__-  `gridmap &lt;https://pypi.org/project/gridmap/&gt;`__ (only required if you plan   to run things in parallel on a DRMAA-compatible cluster)-  `joblib &lt;https://pypi.org/project/joblib/&gt;`__-  `pandas &lt;http://pandas.pydata.org&gt;`__-  `ruamel.yaml &lt;http://yaml.readthedocs.io/en/latest/overview.html&gt;`__-  `scikit-learn &lt;http://scikit-learn.org/stable/&gt;`__-  `seaborn &lt;http://seaborn.pydata.org&gt;`__-  `tabulate &lt;https://pypi.org/project/tabulate/&gt;`__Command-line Interface~~~~~~~~~~~~~~~~~~~~~~The main utility we provide is called ``run_experiment`` and it can be used toeasily run a series of learners on datasets specified in a configuration filelike:.. code:: ini  [General]  experiment_name = Titanic_Evaluate_Tuned  # valid tasks: cross_validate, evaluate, predict, train  task = evaluate  [Input]  # these directories could also be absolute paths  # (and must be if you're not running things in local mode)  train_directory = train  test_directory = dev  # Can specify multiple sets of feature files that are merged together automatically  featuresets = [[&quot;family.csv&quot;, &quot;misc.csv&quot;, &quot;socioeconomic.csv&quot;, &quot;vitals.csv&quot;]]  # List of scikit-learn learners to use  learners = [&quot;RandomForestClassifier&quot;, &quot;DecisionTreeClassifier&quot;, &quot;SVC&quot;, &quot;MultinomialNB&quot;]  # Column in CSV containing labels to predict  label_col = Survived  # Column in CSV containing instance IDs (if any)  id_col = PassengerId  [Tuning]  # Should we tune parameters of all learners by searching provided parameter grids?  grid_search = true  # Function to maximize when performing grid search  objectives = ['accuracy']  [Output]  # Also compute the area under the ROC curve as an additional metric  metrics = ['roc_auc']  # The following can also be absolute paths  logs = output  results = output  predictions = output  probability = true  models = outputFor more information about getting started with ``run_experiment``, please checkout `our tutorial &lt;https://skll.readthedocs.org/en/latest/tutorial.html&gt;`__, or`our config file specs &lt;https://skll.readthedocs.org/en/latest/run_experiment.html&gt;`__.You can also follow this `interactive Jupyter tutorial &lt;https://mybinder.org/v2/gh/AVajpayeeJr/skll/feature/448-interactive-binder?filepath=examples&gt;`__.We also provide utilities for:-  `converting between machine learning toolkit formats &lt;https://skll.readthedocs.org/en/latest/utilities.html#skll-convert&gt;`__   (e.g., ARFF, CSV)-  `filtering feature files &lt;https://skll.readthedocs.org/en/latest/utilities.html#filter-features&gt;`__-  `joining feature files &lt;https://skll.readthedocs.org/en/latest/utilities.html#join-features&gt;`__-  `other common tasks &lt;https://skll.readthedocs.org/en/latest/utilities.html&gt;`__Python API~~~~~~~~~~If you just want to avoid writing a lot of boilerplate learning code, you canalso use our simple Python API which also supports pandas DataFrames.The main way you'll want to use the API is throughthe ``Learner`` and ``Reader`` classes. For more details on our API, see`the documentation &lt;https://skll.readthedocs.org/en/latest/api.html&gt;`__.While our API can be broadly useful, it should be noted that the command-lineutilities are intended as the primary way of using SKLL.  The API is just a niceside-effect of our developing the utilities.A Note on Pronunciation~~~~~~~~~~~~~~~~~~~~~~~.. image:: doc/skll.png   :alt: SKLL logo   :align: right.. container:: clear  .. image:: doc/spacer.pngSciKit-Learn Laboratory (SKLL) is pronounced &quot;skull&quot;: that's where the learninghappens.Talks~~~~~-  *Simpler Machine Learning with SKLL 1.0*, Dan Blanchard, PyData NYC 2014 (`video &lt;https://www.youtube.com/watch?v=VEo2shBuOrc&amp;feature=youtu.be&amp;t=1s&gt;`__ | `slides &lt;http://www.slideshare.net/DanielBlanchard2/py-data-nyc-2014&gt;`__)-  *Simpler Machine Learning with SKLL*, Dan Blanchard, PyData NYC 2013 (`video &lt;http://vimeo.com/79511496&gt;`__ | `slides &lt;http://www.slideshare.net/DanielBlanchard2/simple-machine-learning-with-skll&gt;`__)Citing~~~~~~If you are using SKLL in your work, you can cite it as follows: &quot;We used scikit-learn (Pedragosa et al, 2011) via the SKLL toolkit (https://github.com/EducationalTestingService/skll).&quot;Books~~~~~SKLL is featured in `Data Science at the Command Line &lt;http://datascienceatthecommandline.com&gt;`__by `Jeroen Janssens &lt;http://jeroenjanssens.com&gt;`__.Changelog~~~~~~~~~See `GitHub releases &lt;https://github.com/EducationalTestingService/skll/releases&gt;`__.Contribute~~~~~~~~~~Thank you for your interest in contributing to SKLL! See `CONTRIBUTING.md &lt;https://github.com/EducationalTestingService/skll/blob/main/CONTRIBUTING.md&gt;`__ for instructions on how to get started.</longdescription>
</pkgmetadata>