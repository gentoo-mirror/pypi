<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pako*The universal package manager library*Often, scripts need to install system dependencies using the native package manager of the user's OS. Typically, this is solved by having some bash script that runs `apt-get`, assuming the user  is on Ubuntu. Smarter scripts use hand crafted code to detect the user's platform and aggregate  a set of dependencies on a few of the more popular platforms. Our approach is different: ```bashpako install libgdbm-devel sdl2-dev```On Ubuntu, this command will run:```bashsudo apt-get install -y libgdbm-dev libsdl2-dev```However, on Solus, this will run:```bashsudo eopkg install -y gdbm-devel sdl2-devel```It works as follows: - Parse package format (devel/debug/normal library or executable) - Look up package managers that exist in PATH - Format parsed package with common package convention of package manager## Installation```bashpip3 install pako```## UsageCommand line:```pako (install|update) [package] [-t, --type format]```Python bindings:```pythonfrom pako import PakoManager, PackageFormatmanager = PakoManager()manager.update()manager.install(['gdbm-dev', 'sdl2-dev'])manager.install(['ssl-dev'], overrides={'eopkg': ['openssl-devel']})```### Non-interactive modeA `no-confirm` flag can be added to calls. This will be translated to the equivalent command line flag such as `apt install -y`.```pythonfrom pako import PakoManager, PackageFormatmanager = PakoManager()manager.install(['example-package'], flags=['no-confirm'])```## Help WantedThis tool can improve to fit a lot of use cases. Feel free to create an issue or pull request for new features and improvements. For instance, we need to figure out the best way to handle cases  where a simple package format won't find the appropriate package.### Add Your Package ManagerAdd your package manager by adding another data block to the dict object in `pako/package_manager_data.py`.</longdescription>
</pkgmetadata>