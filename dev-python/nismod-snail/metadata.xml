<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nismod/snail/tree/master/tutorials&quot;&gt;Tutorials&lt;/a&gt; |&lt;a href=&quot;https://github.com/nismod/snail/issues&quot;&gt;Issues&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;./images/snail.svg&quot; alt=&quot;snail&quot; /&gt;&lt;/p&gt;[![Build](https://github.com/nismod/snail/actions/workflows/build.yml/badge.svg)](https://github.com/nismod/snail/actions/workflows/build.yml)&gt; This code is under early development# ðŸ¤” What is this?This is a Python package to help with analysis of the potential impacts ofclimate hazards and other perils on infrastructure networks.## InstallationInstall using pip:    pip install nismod-snailThis should bring all dependencies with it. If any of these cause difficulties,try using a [conda](https://docs.conda.io/en/latest/miniconda.html) environment:    conda env create -n snail_env \        python=3.8 geopandas shapely rasterio python-igraph    conda activate snail_env    pip install nismod-snailIf all worked okay, you should be able to run python and import snail:    $ python    &gt;&gt;&gt; import snail    &gt;&gt;&gt; help(snail)    Help on package snail:    NAME        snail - snail - the spatial networks impact assessment library## DevelopmentClone this repository using [GitHub Desktop](https://desktop.github.com/) or onthe command line:    git clone git@github.com:nismod/snail.gitChange directory into the root of the project:    cd snailTo create and activate a conda environment with snail's dependencies installed:    conda env create -f .environment.yml    conda activate snail-devRun this to install the source code as a package:    pip install .If you're working on snail itself, install it as &quot;editable&quot; along with test anddevelopment packages:    pip install -e .[dev]Run tests using [pytest](https://docs.pytest.org/en/latest/) and[pytest-cov](https://pytest-cov.readthedocs.io) to check coverage:    pytest --cov=snail --cov-report=term-missingRun a formatter ([black](https://github.com/psf/black)) to fix codeformatting:    black src/snailWhen working on the tutorial notebooks, it is recommended to install andconfigure [nbstripout](https://github.com/kynan/nbstripout) so data and outputsare not committed in the notebook files:    nbstripout --install### C++ libraryThe C++ library in `src/cpp` contains the core routines to find intersections oflines with raster grids.Before working on the C++ library, fetch source code for Catch2 unit testinglibrary (this is included as a git submodule):    git submodule update --init --recursiveBuild the library and run tests:    cmake -Bbuild .    cmake --build build/    ./build/run_testsRun code style auto-formatting:    clang-format -i src/cpp/*.hppRun lints and checks:    clang-tidy --checks 'cppcoreguidelines-*' src/cpp/*.hppThis may need some includes for `pybind11` - which will vary depending on yourpython installation. For example, with python via miniconda:    clang-tidy --checks 'cppcoreguidelines-*' src/cpp/* -- \        -I/home/username/miniconda3/include/python3.7m/ \        -I./pybind11/include/### Integration of C++ and Python using pybind11The `snail.core.intersections` module is built using [`pybind11` with`setuptools`](https://pybind11.readthedocs.io/en/stable/compiling.html#building-with-setuptools)- `src/cpp/intersections.cpp` defines the module interface using the  `PYBIND11_MODULE` macro- `pyproject.toml` defines the build requirements for snail, which includes  pybind11, wheel and setuptools- `setup.py` defines the `Pybind11Extension` module to build - both the C++  files to compile, and the location of the built module within the python  package</longdescription>
</pkgmetadata>