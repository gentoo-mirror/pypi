<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># asyncpgx[![Build passed](https://img.shields.io/github/workflow/status/laukhin/asyncpgx/CI)](https://github.com/laukhin/asyncpgx/actions?query=workflow%3ACI)[![Test coverage](https://img.shields.io/codecov/c/github/laukhin/asyncpgx)](https://codecov.io/gh/laukhin/asyncpgx)[![Version](https://img.shields.io/pypi/v/asyncpgx)](https://pypi.org/project/asyncpgx/)Extensions for asyncpg.Based on the [asyncpg](https://github.com/MagicStack/asyncpg) and highly inspired by the [sqlx](https://github.com/jmoiron/sqlx) packageThis package supports 3.6+ python versions## SetupUse `pip install asyncpgx`## PurposeThis is a thin wrapper on the `asyncpg` package.Our purpose is to provide convenient extensions to the original package.We're trying to delegate as much work as we can to the asyncpg (basically our extension methods are high-level proxies to the underlying ones)and make only converting job.Original asyncpg API stays the same, you can see it in the [asyncpg documentation](https://magicstack.github.io/asyncpg/current/).## Functionality* queries with named parameters, i.e.```pythonimport asyncpgxconnection = await asyncpgx.connect('postgresql://127.0.0.1:5432')await connection.named_fetch('''SELECT field FROM some_table WHERE id &lt;= :id;''', {'id': 1})```* prepared statements with named parameters, i.e.```pythonimport asyncpgxconnection = await asyncpgx.connect('postgresql://127.0.0.1:5432')prepared_statement = await connection.named_prepare('''SELECT field FROM some_table WHERE id &lt;= :id;''')await prepared_statement.named_fetch({'id': 1})```## DocumentationYou can find project documentation [here](https://laukhin.github.io/asyncpgx/index.html)## ChangelogYou can find all releases description [here](https://github.com/laukhin/asyncpgx/releases)</longdescription>
</pkgmetadata>