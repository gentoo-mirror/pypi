<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Wedge Library## Démarrage rapide```bash$ pip install wedge-lib```### Mode maintenance#### Middleware```pythonMIDDLEWARE=[    &quot;w.drf.middlewares.maintenance_mode_middleware.MaintenanceModeMiddleware&quot;,],```#### CommandAjouter la commande maintenance_mode :```pythonfrom w.django.commands.abstract_maintenance_mode_command import (    AbstractMaintenanceModeCommand,)class Command(AbstractMaintenanceModeCommand):    pass```Utilisation :```bash$ python manage.py maintenance_mode &lt;on/off&gt;```### Configuration pour certains services#### MailServiceTBD#### GoogleMapServiceTBD#### YousignServiceTBD## Development### Installation```bash$ pipenv sync --dev```### Update dependencies```bash$ pipenv update --dev```### Run test```bash$ pytest```### En cas d'ajout d'une librairieAfin qu'elle soit également installée sur cs_back, il faut ajouter une ligne dans setup.cfg, sous la partie &quot;install_requires =&quot;Des variables d'environnement doivent être configurées sur Pycharm:- Cliquez sur Edit configurations en haut à droite de votre éditeur- Edit configurations templates...- Python tests - pytest- Cliquez sur environnement variables et ajouter les api key correspondant à :  - GOOGLE_MAP_SECRET  - GOOGLE_MAP_API_KEY- Les valeurs de ces variables peuvent être trouvées sur les secrets du repo ou à Eloïse### Before commitPour éviter de faire échouer le CI, lancer la commande:```bash$ ./before_commit.zsh```### Publier manuellement sur PyPIAprès avoir committer et pousser:1. tagguer une version dans GitHub.2. mettre à jour la version dans le fichier `setup.cfg` avec le tag créé.3. créer le package    ```bash    $ rm -rf build dist wedge_lib.egg-info    $ WEDGELIB_VERSION=&lt;version&gt; python setup.py sdist bdist_wheel    ```4. mettre à jour sur TestPypi    ```bash    $ twine upload --repository testpypi dist/*    ```5. Si tout est ok, mettre à jour sur Pypi    ```bash    $ twine upload dist/*    ```### Utiliser W en mode dev depuis un autre projet (ex: csback)Créer un lien symbolique vers le w qui va être modifié :```bashrm -rf &lt;External Libraries&gt;/site-packages/w``````bashln -s &lt;Absolute path du projet w local&gt;/w &lt;External Libraries&gt;/site-packages/.```Supprimer le lien symbolique et utiliser la version officielle de w :```bashunlink &lt;External Libraries&gt;/site-packages/w``````bashpipenv uninstall wedge-lib &amp;&amp; pipenv install wedge-lib```</longdescription>
</pkgmetadata>