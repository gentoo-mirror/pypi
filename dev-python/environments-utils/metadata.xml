<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Environment utils=========================================================================================|pip| |downloads|Utilities to identify which environments is your python script running within.This include stuff like whether you are in a `Jupyter Notebook`, within a node of a `SLURM` cluster,the architecture of the system you are using and which operative system you are running.How do I install this package?----------------------------------------------As usual, just download it using pip:.. code:: shell    pip install environments_utilsSome examples-----------------------------------is_tmux~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Return a boolean representing if script is running within a TMUX-like terminal... code:: python    from environments_utils import is_tmux    if not is_tmux():        print(&quot;This script is long running, consider starting it within a TMUX-like terminal.&quot;)is_notebook~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Return a boolean representing if script is running within a jupyter notebook... code:: python    from environments_utils import is_notebook    from tqdm import tqdm_notebook, tqdm as tqdm_cli    tqdm = tqdm_notebook if is_notebook() else tqdm_cliis_slurm_node~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Returns whether you are in a `SLURM` cluster node... code:: python    from environments_utils import (        is_slurm_node,        get_slurm_node_id,        get_number_of_available_slurm_nodes    )    if is_slurm_node():        print(            &quot;YAY! I'm in node {} of {}!&quot;,            get_slurm_node_id(),            get_number_of_available_slurm_nodes()        )Operative system identifiers~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Utilities to identify the operative system running the app... code:: python    from environments_utils import is_macos, is_windows, is_linux, is_macos_with_arm    if is_macos():        print(&quot;The OS is macOS&quot;)    if is_windows():        print(&quot;The OS is Windows&quot;)    if is_linux():        print(&quot;The OS is Linux&quot;)    if is_macos_with_arm():        print(&quot;The machine is macOS with ARM processors like M1&quot;)Architectures identifiers~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Utilities to identify the architectures running the app... code:: python    from environments_utils import is_x86, is_x86_64, is_arm    if is_x86():        print(&quot;This is a 32 bit system with x86 architecture.&quot;)    if is_x86_64():        print(&quot;This is a 64 bit system with x86_64 architecture.&quot;)    if is_arm():        print(&quot;This is an ARM machine, such as Mac M1&quot;)Internet connection~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Utility to detect whether the user is connected to internet... code:: python    from environments_utils import is_online    if is_online():        print(&quot;You are online.&quot;)    else:        print(&quot;You are offline&quot;).. |pip| image:: https://badge.fury.io/py/environments-utils.svg    :target: https://badge.fury.io/py/environments-utils    :alt: Pypi project.. |downloads| image:: https://pepy.tech/badge/environments-utils    :target: https://pepy.tech/badge/environments-utils    :alt: Pypi total project downloads </longdescription>
</pkgmetadata>