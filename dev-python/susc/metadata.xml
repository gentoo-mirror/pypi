<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![License](https://img.shields.io/github/license/speedapi/susc)![Version](https://img.shields.io/pypi/v/susc)![Downloads](https://img.shields.io/pypi/dm/susc)![PRs and issues](https://img.shields.io/badge/PRs%20and%20issues-welcome-brightgreen)# SUS compilerThis repository contains the compiler and language server for the SUS description language. Install it with:```pip3 install susc```# What is SpeedAPI?It's a platform-agnostic API and serialization tool specifically geared towards high-throughput realtime applications. You can read more about its features [here](https://github.com/speedapi/info)# Usage### Help```$ susc --help# OR$ python3 -m susc --help```### Compiler  - Compile file(s): `susc source1.sus source2.sus`  - Compile file, override output dir: `susc -o output source.sus`  - Compile file, override output language: `susc -l ts source.sus`### Language server  - Start language server: `susc -s`  - Start language server in stdio mode: `susc -si`### Misc  - Print file with syntax highlighting: `susc -p source.sus`  - Explain a diagnostic code: `susc -x 0010`# Programmatic usage```pythonfrom susc import Filefile = File()# load file:file.load_from_file(&quot;/path/to/file.sus&quot;)# orfile.load_from_file(open(&quot;/path/to/file.sus&quot;))# or load text:file.load_from_text(&quot;compound Test { a: Str; b: Str; }&quot;)things, diagnostics = file.parse()print(things)print(diagnostics)language = &quot;ts&quot;file.write_output(language, &quot;/path/to/output/dir&quot;)```</longdescription>
</pkgmetadata>