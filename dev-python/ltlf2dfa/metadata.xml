<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  &lt;img src=&quot;http://ltlf2dfa.diag.uniroma1.it/static/images/logo-ltlf2dfa.svg&quot;&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.org/project/ltlf2dfa&quot;&gt;    &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/ltlf2dfa&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/ltlf2dfa&quot;&gt;    &lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/ltlf2dfa&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;&quot;&gt;    &lt;img alt=&quot;PyPI - Implementation&quot; src=&quot;https://img.shields.io/pypi/implementation/ltlf2dfa&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/whitemech/ltlf2dfa/blob/master/LICENSE&quot;&gt;    &lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/badge/license-LGPLv3%2B-blue&quot;&gt;  &lt;/a&gt;    &lt;a href=&quot;&quot;&gt;    &lt;img alt=&quot;PyPI - Wheel&quot; src=&quot;https://img.shields.io/pypi/wheel/ltlf2dfa&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;&quot;&gt;    &lt;img alt=&quot;test&quot; src=&quot;https://github.com/whitemech/ltlf2dfa/workflows/test/badge.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;&quot;&gt;    &lt;img alt=&quot;lint&quot; src=&quot;https://github.com/whitemech/ltlf2dfa/workflows/lint/badge.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;&quot;&gt;    &lt;img alt=&quot;docs&quot; src=&quot;https://github.com/whitemech/ltlf2dfa/workflows/docs/badge.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://codecov.io/gh/whitemech/pddl&quot;&gt;    &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/whitemech/ltlf2dfa/branch/master/graph/badge.svg&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;&quot;&gt;    &lt;img alt=&quot;PyPI - Status&quot; src=&quot;https://img.shields.io/pypi/status/ltlf2dfa&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://img.shields.io/badge/flake8-checked-blueviolet&quot;&gt;    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/flake8-checked-blueviolet&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://img.shields.io/badge/mypy-checked-blue&quot;&gt;    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/mypy-checked-blue&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://img.shields.io/badge/isort-checked-yellow&quot;&gt;    &lt;img alt=&quot;isort&quot; src=&quot;https://img.shields.io/badge/isort-checked-yellow&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://img.shields.io/badge/code%20style-black-black&quot;&gt;    &lt;img alt=&quot;black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-black&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://www.mkdocs.org/&quot;&gt;    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/docs-mkdocs-9cf&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;/a&gt;    &lt;a href=&quot;https://zenodo.org/badge/DOI/10.5281/zenodo.3888410.svg&quot;&gt;    &lt;img alt=&quot;&quot; src=&quot;https://zenodo.org/badge/DOI/10.5281/zenodo.3888410.svg&quot;&gt;  &lt;/a&gt;&lt;/p&gt;---LTL&lt;sub&gt;f&lt;/sub&gt;2DFA is a tool that transforms an LTL&lt;sub&gt;f&lt;/sub&gt; or a PLTL&lt;sub&gt;f&lt;/sub&gt; formula into a minimal Deterministic Finite state Automaton (DFA) using [MONA](http://www.brics.dk/mona/).It is also available online at [http://ltlf2dfa.diag.uniroma1.it](http://ltlf2dfa.diag.uniroma1.it).## PrerequisitesThis tool uses MONA for the generation of the DFA. Hence, you should first install MONA with all its dependencies on your system following the instructions [here](http://www.brics.dk/mona/download.html).This tool is also based on the following libraries:- [lark-parser 0.9.0](https://pypi.org/project/lark-parser/)- [sympy 1.6.1](https://pypi.org/project/sympy/)They are automatically added while installing LTL&lt;sub&gt;f&lt;/sub&gt;2DFA.## Install- from [PyPI](https://pypi.org/project/ltlf2dfa/):```pip install ltlf2dfa```- or, from source (`master` branch):```pip install git+https://github.com/whitemech/LTLf2DFA.git```- or, clone the repository and install:```git clone https://github.com/whitemech/LTLf2DFA.gitcd ltlf2dfapip install .```## How To Use- Parse an LTL&lt;sub&gt;f&lt;/sub&gt; formula:```pythonfrom ltlf2dfa.parser.ltlf import LTLfParserparser = LTLfParser()formula_str = &quot;G(a -&gt; X b)&quot;formula = parser(formula_str)       # returns an LTLfFormulaprint(formula)                      # prints &quot;G(a -&gt; X (b))&quot;```- Or, parse a PLTL&lt;sub&gt;f&lt;/sub&gt; formula:```pythonfrom ltlf2dfa.parser.pltlf import PLTLfParserparser = PLTLfParser()formula_str = &quot;H(a -&gt; Y b)&quot;formula = parser(formula_str)       # returns a PLTLfFormulaprint(formula)                      # prints &quot;H(a -&gt; Y (b))&quot;```- Translate a formula to the corresponding DFA automaton:```pythondfa = formula.to_dfa()print(dfa)                          # prints the DFA in DOT format```## Features* Syntax and parsing support for the following formal languages:    * Propositional Logic;    * Linear Temporal Logic on Finite Traces;    * Pure-Past Linear Temporal Logic on Finite Traces.* Conversion from LTL&lt;sub&gt;f&lt;/sub&gt;/PLTL&lt;sub&gt;f&lt;/sub&gt; formula to MONA (First-order Logic)**NOTE**: LTL&lt;sub&gt;f&lt;/sub&gt;2DFA accepts either LTL&lt;sub&gt;f&lt;/sub&gt; formulas or PLTL&lt;sub&gt;f&lt;/sub&gt; formulas, i.e., formulas that have only past, only future or none operators.## TestsTo run tests: `tox`To run only the code tests: `tox -e py3.7`To run only the code style checks: `tox -e flake8`## DocsTo build the docs: `mkdocs build`To view documentation in a browser: `mkdocs serve`and then go to [http://localhost:8000](http://localhost:8000)## LicenseLTL&lt;sub&gt;f&lt;/sub&gt;2DFA is released under the GNU Lesser General Public License v3.0 or later (LGPLv3+).Copyright 2018-2022 WhiteMech @ Sapienza University## CitingIf you are interested in this tool, and you use it in your own work, please consider citing it.## Author[Francesco Fuggitti](https://francescofuggitti.github.io/)# History## 1.0.2 (2022-02-25)* Introduce `PLTLfWeakBefore` and `PLTLfPastRelease` support* Hotfix problem on translation of the Once operator* Increase code coverage## 1.0.1 (2020-07-03)* Introduce optional argument to `to_dfa()` method for DFA in MONA output* Add parsing support for `LTLfLast()` and `PLTLfStart()` keywords* Some fixes* Increase code coverage## 1.0.0.post0 (2020-06-05)* Include *.lark files in the package build* New online version: [http://ltlf2dfa.diag.uniroma1.it/](http://ltlf2dfa.diag.uniroma1.it).## 1.0.0 (2020-05-20)* Refinement of all the grammars. Extensive improvement of the parsing.* Introduce interfaces and class hierarchy for the logic modules.* Several bug fixes and introduce testing.* Introduce of docs.* Introduce Continuous Integration.* Refactor translation feature.* Replace parsing library PLY with Lark.## 0.2.2 (2019-09-25)* Online version: [http://ltlf2dfa.diag.uniroma1.it/](http://ltlf2dfa.diag.uniroma1.it).## 0.2.0 (2019-09-03)## 0.1.3 (2018-07-22)## 0.1.0 (2018-07-18)* First release on PyPI.</longdescription>
</pkgmetadata>