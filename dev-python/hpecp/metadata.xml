<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build &amp; Test](https://github.com/hpe-container-platform-community/hpecp-python-library/workflows/Build%20&amp;%20Test/badge.svg?branch=master&amp;event=push)](https://github.com/hpe-container-platform-community/hpecp-python-library/actions?query=workflow%3A%22Build+%26+Test%22+branch%3Amaster)[![Code Checks](https://github.com/hpe-container-platform-community/hpecp-python-library/workflows/Code%20Checks/badge.svg?branch=master&amp;event=push)](https://github.com/hpe-container-platform-community/hpecp-python-library/actions?query=workflow%3A%22Code+Checks%22+branch%3Amaster)[![Issues](https://img.shields.io/github/issues/hpe-container-platform-community/hpecp-python-library/bug.svg)](https://github.com/hpe-container-platform-community/hpecp-python-library/issues?q=is%3Aissue+is%3Aopen+label%3A&quot;bug&quot;)[![Coverage Status](https://coveralls.io/repos/github/hpe-container-platform-community/hpecp-python-library/badge.png?branch=master)](https://coveralls.io/github/hpe-container-platform-community/hpecp-python-library?branch=master)[![Pyversions](https://img.shields.io/badge/Pyversions-2.7,%203.5,%203.6,%203.7,%203.8,%203.9-green.svg)](https://github.com/hpe-container-platform-community/hpecp-python-library/blob/master/tox.ini#L7)[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![pypi](https://img.shields.io/pypi/v/hpecp.svg)](https://pypi.org/project/hpecp)[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/hpe-container-platform-community/hpecp-python-library)[![Good first issues open](https://img.shields.io/github/issues/hpe-container-platform-community/hpecp-python-library/good%20first%20issue.svg?label=good%20first%20issue)](https://github.com/hpe-container-platform-community/hpecp-python-library/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)---- ## DocumentationSee [here](https://hpe-container-platform-community.github.io/hpecp-python-library/index.html) for User Documentation.## ContributingSee:- [Developing Guide](https://github.com/hpe-container-platform-community/hpecp-python-library/blob/master/DEVELOPING.md)- [Contribution Guide](https://github.com/hpe-container-platform-community/hpecp-python-library/blob/master/CONTRIBUTING.md)## Installation```shellpip3 install -U hpecp```If you encounter an issue installing on Centos 7.7 with Python 2.7 see [here](https://github.com/hpe-container-platform-community/hpecp-python-library/blob/master/docs/README-INSTALL-HPECP-HOSTS.md) for a workaround## CLI examplesYou need to create a config file with your endpoint details - note that you can have multiple profiles:```inicat &gt; ~/.hpecp.conf &lt;&lt;EOF[default]api_host = 127.0.0.1api_port = 8080use_ssl = Trueverify_ssl = Falsewarn_ssl = Falseusername = adminpassword = admin123[tenant1]tenant = /api/v1/tenant/15admin = ad_admin1password = pass123EOF```Setup bash autocomplete:```shsource &lt;(hpecp autocomplete bash)```Autocompletion:```shhpecp TAB```Add gateway:```shhpecp lock create &quot;Install Gateway&quot;hpecp gateway create-with-ssh-key --ip 10.1.0.5 --proxy-node-hostname my.gateway.local --ssh-key-file controller_private.keyhpecp gateway wait-for-state ${GATEWAY_ID} --states [installed] --timeout-secs 1200hpecp lock delete-all```Add K8s worker host:```shhpecp k8sworker create-with-ssh-key \    --ip 10.1.0.10 \    --ssh-key-file controller_private.key \    --persistent-disks /dev/nvme1n1 \    --ephemeral-disks /dev/nvme2n1 \    --wait-for-operation-secs 600```K8s versions:```shhpecp k8scluster k8s-supported-versions --major-filter 1 --minor-filter 17```Create k8s cluster:```shhpecp k8scluster create --name myclus1 --k8shosts-config /api/v2/worker/k8shost/1:master --k8s_version=1.17.0```Get k8s available addons:```shhpecp k8scluster get-available-addons --id $CLUSTER_ID```Add k8s cluster addons:```shhpecp k8scluster add-addons --id $CLUSTER_ID --addons [istio,harbor]```List with columns parameter:```shhpecp k8scluster list --columns [id,description,status]```List with (jmespath) query parameter:```shhpecp catalog list --query &quot;[?state!='installed' &amp;&amp; state!='installing'] | [*].[_links.self.href] | []&quot;  --output text```List --query examples:```shhpecp tenant examples```Tenant create:```shTENANT_ID=$(hpecp tenant create --name tenant1 --description &quot;dev tenant&quot; --k8s-cluster-id $CLUSTER_ID  --tenant-type k8s)hpecp tenant wait-for-status --id $TENANT_ID --status [ready] --timeout-secs 600```Add LDAP role to Tenant:```shADMIN_GROUP=&quot;CN=DemoTenantAdmins,CN=Users,DC=samdom,DC=example,DC=com&quot;ADMIN_ROLE=$(hpecp role list  --query &quot;[?label.name == 'Admin'][_links.self.href]&quot; --output text)hpecp tenant add-external-user-group --tenant-id $TENANT_ID --group $ADMIN_GROUP --role-id $ADMIN_ROLE```Add internal user to Tenant:```shADMIN_USER_ID=$(hpecp user list --query &quot;[?label.name == 'admin'][_links.self.href]&quot; --output text)ADMIN_ROLE=$(hpecp role list  --query &quot;[?label.name == 'Admin'][_links.self.href]&quot; --output text)hpecp tenant assign-user-to-role --tenant-id $TENANT_ID --role-id $ADMIN_ROLE --user-id $ADMIN_USER_ID```Tenant kube config:```shPROFILE=tenant1 hpecp tenant k8skubeconfig &gt; tenant1_kube.conf# get available Kubedirector appskubectl --kubeconfig tenant1_kube.conf -n t1 get kubedirectorapps# list running applicationskubectl --kubeconfig tenant1_kube.conf -n t1 describe kubedirectorclusters```Http call:```shhpecp httpclient get /some/uri```Use a different config file:```shHPECP_CONFIG_FILE=myclus.conf hpecp do-something```Logging with HTTP tracing:```shexport LOG_LEVEL=DEBUGhpecp do-something```More sophisticated CLI examples [here](https://github.com/hpe-container-platform-community/hcp-demo-env-aws-terraform/tree/master/bin/experimental) ## Python Library ExamplesSee docs: https://hpe-container-platform-community.github.io/hpecp-python-library/index.htmlExample:```py3from hpecp import ContainerPlatformClientclient = ContainerPlatformClient(username='admin',                                password='admin123',                                api_host='127.0.0.1',                                api_port=8080,                                use_ssl=True,                                verify_ssl='/certs/hpecp-ca-cert.pem')client.create_session() # Login# Alternatively:# client = ContainerPlatformClient.create_from_config_file().create_session()print(client.k8s_cluster.list(columns=['description', 'id']))```On my environment, this displays:```+-------------+-----------------------+| description |          id           |+-------------+-----------------------+| my cluster  | /api/v2/k8scluster/20 |+-------------+-----------------------+```</longdescription>
</pkgmetadata>