<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Download Steam Reviews[![PyPI status][pypi-image]][pypi][![Build status][build-image]][build][![Updates][dependency-image]][pyup][![Python 3][python3-image]][pyup][![Code coverage][codecov-image]][codecov][![Code Quality][codacy-image]][codacy]This repository contains Python code to download every Steam review for the games of your choice.## InstallationThe code is packaged for [PyPI](https://pypi.org/project/steamreviews/), so that the installation consists in running:```bashpip install steamreviews```## UsageThe Steam API is rate-limited so you should be able to download about 10 reviews per second.NB: If you do not know the appID of a game, look for it on the Steam store. The appID is a unique number in the URL.For instance, for [SpyParty](https://store.steampowered.com/app/329070/SpyParty/), the appID is 329070.![appID for SpyParty](https://i.imgur.com/LNlyUFW.png)### Process a batch of appIDs```pythonimport steamreviewsapp_ids = [329070, 573170]steamreviews.download_reviews_for_app_id_batch(app_ids)```### Process a batch of appIDs, written down in a text file-   For every game of interest, write down its appID in a text file named `idlist.txt`. There should be an appID per line.-   Then proceed as follows: ```pythonimport steamreviewssteamreviews.download_reviews_for_app_id_batch()```### Load reviews for one appID```pythonimport steamreviewsapp_id = 329070review_dict = steamreviews.load_review_dict(app_id)```### Download reviews for one appID```pythonimport steamreviewsapp_id = 573170review_dict, query_count = steamreviews.download_reviews_for_app_id(app_id)```### Download reviews for one appID, with specific request parameters (language, sentiment, store)```pythonimport steamreviewsrequest_params = dict()# Reference: https://partner.steamgames.com/doc/store/localization#supported_languagesrequest_params['language'] = 'english'# Reference: https://partner.steamgames.com/doc/store/getreviewsrequest_params['review_type'] = 'positive'request_params['purchase_type'] = 'steam'app_id = 573170review_dict, query_count = steamreviews.download_reviews_for_app_id(app_id,                                                                    chosen_request_params=request_params)```### Download a few of the most helpful reviews for one appID, which were created in a time-window**Caveat**: with `filter` set to `all`, you will only be able to download **a few** reviews within the specified time-window.```pythonimport steamreviewsrequest_params = dict()# Reference: https://partner.steamgames.com/doc/store/getreviewsrequest_params['filter'] = 'all'  # reviews are sorted by helpfulness instead of chronologyrequest_params['day_range'] = '28'  # focus on reviews which were published during the past four weeksapp_id = 573170review_dict, query_count = steamreviews.download_reviews_for_app_id(app_id,                                                                    chosen_request_params=request_params)```### Download reviews for one appID, which were created within a specific time-window```pythonimport steamreviewsrequest_params = dict()request_params['filter'] = 'recent'request_params['day_range'] = '28'app_id = 573170review_dict, query_count = steamreviews.download_reviews_for_app_id(app_id,                                                                    chosen_request_params=request_params)```### Download reviews for one appID, which were updated within a specific time-window```pythonimport steamreviewsrequest_params = dict()request_params['filter'] = 'updated'request_params['day_range'] = '28'app_id = 573170review_dict, query_count = steamreviews.download_reviews_for_app_id(app_id,                                                                    chosen_request_params=request_params)```## References- [my original Steam-Reviews repository](https://github.com/woctezuma/steam-reviews)- [a snapshot of Steam-Reviews data for hidden gems](https://github.com/woctezuma/steam-reviews-data)&lt;!-- Definitions for badges --&gt;[pypi]: &lt;https://pypi.python.org/pypi/steamreviews&gt;[pypi-image]: &lt;https://badge.fury.io/py/steamreviews.svg&gt;[build]: &lt;https://github.com/woctezuma/download-steam-reviews/actions&gt;[build-image]: &lt;https://github.com/woctezuma/download-steam-reviews/workflows/Python package/badge.svg?branch=master&gt;[publish-image]: &lt;https://github.com/woctezuma/download-steam-reviews/workflows/Upload Python Package/badge.svg?branch=master&gt;[pyup]: &lt;https://pyup.io/repos/github/woctezuma/download-steam-reviews/&gt;[dependency-image]: &lt;https://pyup.io/repos/github/woctezuma/download-steam-reviews/shield.svg&gt;[python3-image]: &lt;https://pyup.io/repos/github/woctezuma/download-steam-reviews/python-3-shield.svg&gt;[codecov]: &lt;https://codecov.io/gh/woctezuma/download-steam-reviews&gt;[codecov-image]: &lt;https://codecov.io/gh/woctezuma/download-steam-reviews/branch/master/graph/badge.svg&gt;[codacy]: &lt;https://www.codacy.com/app/woctezuma/gamedatacrunch&gt;[codacy-image]: &lt;https://api.codacy.com/project/badge/Grade/253164b80b704f00a1fd2b083f1348bb&gt;</longdescription>
</pkgmetadata>