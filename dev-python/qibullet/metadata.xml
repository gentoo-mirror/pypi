<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># qiBullet [![ci](https://github.com/softbankrobotics-research/qibullet/workflows/ci/badge.svg?branch=master)](https://github.com/softbankrobotics-research/qibullet/actions?query=workflow%3Aci) [![codecov](https://codecov.io/gh/softbankrobotics-research/qibullet/branch/master/graph/badge.svg)](https://codecov.io/gh/softbankrobotics-research/qibullet) [![pypi](https://img.shields.io/pypi/v/qibullet.svg)](https://pypi.org/project/qibullet/) [![Downloads](https://pepy.tech/badge/qibullet)](https://pepy.tech/project/qibullet) [![Github discussions](https://img.shields.io/github/discussions/softbankrobotics-research/qibullet?color=blue&amp;logo=github)](https://github.com/softbankrobotics-research/qibullet/discussions) [![docs](https://img.shields.io/badge/docs-online-success?logo=githubpages)](https://softbankrobotics-research.github.io/qibullet/)__Bullet-based__ python simulation for __SoftBank Robotics'__ robots.## InstallationThe following modules are required:* __numpy__* __pybullet__The qiBullet module can be installed via pip, for python 2.7 and python 3:```bashpip install --user qibullet```Additional resources (robot meshes and URDFs) are required in order to be able to spawn a Pepper, NAO or Romeo robot in the simulation. These extra resources will be installed in your home folder:* `/home/username/.qibullet` on Linux and macOS* `C:\Users\username\.qibullet` on WindowsThe installation of the additional resources will automatically be triggered if you try to spawn a Pepper, NAO or Romeo for the first time. If qiBullet finds the additional resources in your local folder, the installation won't be triggered. The robot meshes are under a specific [license](https://github.com/softbankrobotics-research/qibullet/tree/master/qibullet/robot_data/LICENSE), you will need to agree to that license in order to install them. More details on the installation process can be found on the [wiki](https://github.com/softbankrobotics-research/qibullet/wiki).## UsageA robot can be spawned via the SimulationManager class:```pythonimport sysfrom qibullet import SimulationManagerif __name__ == &quot;__main__&quot;:    simulation_manager = SimulationManager()    # Launch a simulation instances, with using a graphical interface.    # Please note that only one graphical interface can be launched at a time    client_id = simulation_manager.launchSimulation(gui=True)    # Selection of the robot type to spawn (True : Pepper, False : NAO)    pepper_robot = True    if pepper_robot:      # Spawning a virtual Pepper robot, at the origin of the WORLD frame, and a      # ground plane      pepper = simulation_manager.spawnPepper(          client_id,          translation=[0, 0, 0],          quaternion=[0, 0, 0, 1],          spawn_ground_plane=True)    else:      # Or a NAO robot, at a default position      nao = simulation_manager.spawnNao(          client_id,          spawn_ground_plane=True)    # This snippet is a blocking call, just to keep the simulation opened    if sys.version_info[0] &gt;= 3:      input(&quot;Press a key to end the simulation&quot;)    else:      raw_input(&quot;Press a key to end the simulation&quot;)        # Stop the simulation    simulation_manager.stopSimulation(client_id)    ```Or using loadRobot from the PepperVirtual class if you already have a simulated environment:```python    pepper = PepperVirtual()    pepper.loadRobot(      translation=[0, 0, 0],      quaternion=[0, 0, 0, 1],      physicsClientId=client_id)```More snippets can be found in the [examples folder](https://github.com/softbankrobotics-research/qibullet/tree/master/examples), or on the [wiki](https://github.com/softbankrobotics-research/qibullet/wiki)&gt; :warning: The camera subscription system of qiBullet 1.4.0 (and lesser) is __deprecated__, use the [new system](https://github.com/softbankrobotics-research/qibullet/wiki/Tutorials:-Virtual-Robot#cameras)## DocumentationThe qiBullet __API documentation__ can be found [here](https://softbankrobotics-research.github.io/qibullet/). In order to build the documentation, the __doxygen__ package has to be installed beforehand and the docs folder has to exist. The submodules should also be checked out:```bashgit submodule initgit submodule update```The documentation can then be generated via the following command:```bashcd docsdoxygen Doxyfile```The repository also contains a [wiki](https://github.com/softbankrobotics-research/qibullet/wiki), providing some tutorials.## CitationsPlease cite qiBullet if you use this repository in your publications:```@article{busy2019qibullet,  title={qiBullet, a Bullet-based simulator for the Pepper and NAO robots},  author={Busy, Maxime and Caniot, Maxime},  journal={arXiv preprint arXiv:1909.00779},  year={2019}}```## Troubleshooting### OpenGL driverIf you encounter the message:&gt; Workaround for some crash in the Intel OpenGL driver on Linux/UbuntuYour computer is using the Intel OpenGL driver. Go to __Software &amp; Updates__, __Additional Drivers__, and select a driver corresponding to your GPU.## LicenseLicensed under the [Apache-2.0 License](LICENSE)</longdescription>
</pkgmetadata>