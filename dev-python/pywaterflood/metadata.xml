<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `pywaterflood`: Waterflood Connectivity Analysis[![PyPI version](https://badge.fury.io/py/pywaterflood.svg)](https://badge.fury.io/py/pywaterflood)[![Conda](https://img.shields.io/conda/v/conda-forge/pywaterflood)](https://anaconda.org/conda-forge/pywaterflood)[![Documentation Status](https://readthedocs.org/projects/pywaterflood/badge/?version=latest)](https://pywaterflood.readthedocs.io/en/latest/?badge=latest)[![DOI](https://zenodo.org/badge/234408267.svg)](https://zenodo.org/badge/latestdoi/234408267)[![License](https://img.shields.io/badge/License-BSD_2--Clause-orange.svg)](https://opensource.org/licenses/BSD-2-Clause)[![codecov](https://codecov.io/gh/frank1010111/pywaterflood/branch/master/graph/badge.svg?token=3XRGLKO7T8)](https://codecov.io/gh/frank1010111/pywaterflood)[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/pre-commit/pre-commit)[![Python version](https://img.shields.io/pypi/pyversions/pywaterflood)](https://www.python.org/downloads/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/pywaterflood)](https://pypi.org/project/pywaterflood/)`pywaterflood` provides tools for capacitance resistance modeling, aphysics-inspired model for estimating well connectivity between injectors andproducers or producers and other producers. It is useful for analyzing andoptimizing waterfloods, CO&lt;sub&gt;2&lt;/sub&gt; floods, and geothermal projects.## OverviewA literature review has been written by Holanda, Gildin, Jensen, Lake and Kabir,entitled &quot;A State-of-the-Art Literature Review on Capacitance Resistance Modelsfor Reservoir Characterization and Performance Forecasting.&quot;[They](https://doi.org/10.3390/en11123368) describe CRM as the following:&gt; The Capacitance Resistance Model (CRM) is a fast way for modeling and&gt; simulating gas and waterflooding recovery processes, making it a useful tool&gt; for improving flood management in real-time. CRM is an input-output and&gt; material balance-based model, and requires only injection and production&gt; history, which are the most readily available data gathered throughout the&gt; production life of a reservoir.There are several CRM versions (see Holanda et al., 2018). Through passingdifferent parameters when creating the CRM instance, you can choose betweenCRMIP, where a unique time constant is used for each injector-producer pair, andCRMP, where a unique time constant is used for each producer. CRMIP is morereliable given sufficient data. With CRMP, you can reduce the number ofunknowns, which is useful if available production data is limited.## Getting startedYou can install this package from PyPI with the line```pip install pywaterflood```Or from conda/mamba with```conda install -c conda-forge pywaterflood```Then, [read the docs](https://pywaterflood.readthedocs.io/) to learn more. If youwant to try it out online before installing it on your computer, you can run[this google colab notebook](https://colab.research.google.com/github/frank1010111/pywaterflood/blob/master/docs/user-guide/7-minutes-to-pywaterflood.ipynb).### A simple example    import pandas as pd    from pywaterflood import CRM    gh_url = &quot;https://raw.githubusercontent.com/frank1010111/pywaterflood/master/testing/data/&quot;    prod = pd.read_csv(gh_url + 'production.csv', header=None).values    inj = pd.read_csv(gh_url + &quot;injection.csv&quot;, header=None).values    time = pd.read_csv(gh_url + &quot;time.csv&quot;, header=None).values[:,0]    crm = CRM(tau_selection='per-pair', constraints='up-to one')    crm.fit(prod, inj, time)    q_hat = crm.predict()    residuals = crm.residual()## ContributingContributions are extremely welcome! Have [an issue to report](https://github.com/frank1010111/bluebonnet/issues/new)?Want to offer new features or documentation? Check out the [contribution guide](https://github.com/frank1010111/pywaterflood/blob/master/CONTRIBUTING.md)to help you set up. Discussions could start anytime at[the discussions section](https://github.com/frank1010111/pywaterflood/discussions).`pywaterflood` uses Rust for computation and python as the high level interface.Luckily, [maturin](https://www.maturin.rs/) is a very convenient tool for workingwith mixed Python-Rust projects.## LicenseThis software library is released under a BSD 2-Clause License.## AcknowledgmentsCapacitance resistance modeling would not have caught on without the persistenceof two professors: Larry Lake and Jerry Jensen. Both of these gentlemen generouslyhelped answer questions in the development of this library. Research funding forthis project came from the Department of Energy grant &quot;Optimizing Sweep based onGeochemical and Reservoir Characterization of the Residual Oil Zone of Hess SeminoleUnit&quot; (PI: Ian Duncan) and the State of Texas Advanced Resource Recovery program(PI: William Ambrose). Further development is supported by Penn State facultypromotion funds and volunteer time.</longdescription>
</pkgmetadata>