<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `nixtlats`:Deep Learning for Time Series Forecasting&gt; [nikstla] (noun, nahuatl) Period of time.&lt;img src=&quot;https://raw.githubusercontent.com/Nixtla/nixtlats/master/nbs/indx_imgs/nixtla_logo.png&quot;&gt;[![CI](https://github.com/Nixtla/nixtlats/actions/workflows/ci.yml/badge.svg?)](https://github.com/Nixtla/nixtlats/actions/workflows/ci.yml)[![Python](https://img.shields.io/pypi/pyversions/nixtlats)](https://pypi.org/project/nixtlats/)[![PyPi](https://img.shields.io/pypi/v/nixtlats?color=blue)](https://pypi.org/project/nixtlats/)[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://github.com/Nixtla/nixtlats/blob/master/LICENSE)State-of-the-art time series forecasting for pytorch.Nixtla is a python library for time series forecasting with deep learning. It provides dataset loading utilities, evaluation functions and pytorch implementations of state of the art deep learning forecasting models.## DocumentationHere is a link to the [documentation](https://nixtla.github.io/nixtlats/).## Installation### Stable versionThis code is a work in progress, any contributions or issues are welcome onGitHub at: https://github.com/Nixtla/nixtlats.You can install the *released version* of `nixtlats` from the [Python package index](https://pypi.org) with:```pythonpip install nixtlats```(installing inside a python virtualenvironment or a conda environment is recommended).### Development version in development modeIf you want to make some modifications to the code and see the effects in real time (without reinstalling), follow the steps below:```bashgit clone https://github.com/Nixtla/nixtlats.gitcd nixtlatspip install -e .```## Current available models* [Exponential Smoothing Recurrent Neural Network (ES-RNN)](https://www.sciencedirect.com/science/article/pii/S0169207019301153): A hybrid model that combines the expressivity of non linear models to capture the trends while it normalizes using a Holt-Winters inspired model for the levels and seasonals.  This model is the winner of the M4 forecasting competition.* [Neural Basis Expansion Analysis (N-BEATS)](https://arxiv.org/abs/1905.10437): A model from Element-AI (Yoshua Bengioâ€™s lab) that has proven to achieve state of the art performance on benchmark large scale forecasting datasets like Tourism, M3, and M4. The model is fast to train an has an interpretable configuration.* [Neural Basis Expansion Analysis with Exogenous Variables (N-BEATSx)](https://arxiv.org/abs/2104.05522): The neural basis expansion with exogenous variables is an extension to the original N-BEATS that allows it to include time dependent covariates.## LicenseThis project is licensed under the MIT License - see the [LICENSE](https://github.com/Nixtla/nixtlats/blob/master/LICENSE) file for details.## How to contributeSee [CONTRIBUTING.md](https://github.com/Nixtla/nixtlats/blob/master/CONTRIBUTING.md).## How to citeIf you use `Nixtla` in a scientific publication, we encourage you to addthe following references to the related papers:```bibtex@article{nixtla_arxiv,  author  = {XXXX},  title   = {{nixtlats: Deep Learning for Time Series Forecasting}},  journal = {arXiv preprint arXiv:XXX.XXX},  year    = {2021}}```&lt;!---## Citing```bibtex@article{,    author = {},    title = {{}},    journal = {},    year = {}}```--&gt;</longdescription>
</pkgmetadata>