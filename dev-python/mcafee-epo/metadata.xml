<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python client for McAfee ePolicy Orchestrator=============================================A straightforward wrapper around the ePO API. Manages authentication,building requests, and interpreting responses. Simply treat the clientobject as a callable function, passing the command name and parameters.Install::    $ pip install mcafee-epoUse::    &gt;&gt;&gt; from mcafee_epo import Client    &gt;&gt;&gt; client = Client('https://localhost:8443', 'user', 'password')    &gt;&gt;&gt; systems = client('system.find', '')Differences from &quot;official&quot; client----------------------------------This library was created in response to the fairly poor clientdistributed by McAfee, which didn't support Python 3 and was generallya mess. (You can find a cleaned up version of their client with Python 3support in the first few commits.)The official library requires copying files into the Python location to&quot;install&quot; it. This library is an actual package installed using ``pip``.The official client uses low level url libraries and numerousworkarounds to make http requests. This library uses the`requests &lt;http://python-requests.org/&gt;`_ library to greatly simplifythe work the previous code was doing while offering better security.The official client uses a dynamic command discovery and dispatchmechanism to make API calls seem like a nested set of objects. Thislibrary forgoes that complexity (which wasn't understood by IDEs anyway)for a more straightforward approach that just accepts command names whencalling.Links------   Releases: https://pypi.org/project/mcafee-epo/-   Code: https://github.com/davidism/mcafee-epo</longdescription>
</pkgmetadata>