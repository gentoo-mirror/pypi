<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://travis-ci.org/trustpilot/python-sanicargs.svg?branch=master)](https://travis-ci.org/trustpilot/python-sanicargs) [![Latest Version](https://img.shields.io/pypi/v/sanicargs.svg)](https://pypi.python.org/pypi/sanicargs) [![Python Support](https://img.shields.io/pypi/pyversions/sanicargs.svg)](https://pypi.python.org/pypi/sanicargs)# SanicargsParses query parameters and json body parameters for [Sanic](https://github.com/channelcat/sanic) using type annotations.## SurveyPlease fill out [this survey](https://docs.google.com/forms/d/e/1FAIpQLSdNLvB7NEJQhUyVdaZpBAgS0f1k9OywZp8xDqhaNY0rl-unZA/viewform?usp=sf_link) if you are using Sanicargs, we are gathering feedback :-)## InstallInstall with pip```$ pip install sanicargs```## UsageUse the `parse_parameters` decorator to parse query parameters (GET) or body parameters (POST) and type cast them together with path params in [Sanic](https://github.com/channelcat/sanic)'s routes or blueprints like in this [example](https://github.com/trustpilot/python-sanicargs/tree/master/examples/simple.py) below:```pythonimport datetimefrom sanic import Sanic, responsefrom sanicargs import parse_parametersapp = Sanic(&quot;test_sanic_app&quot;)@app.route(&quot;/me/&lt;id&gt;/birthdate&quot;, methods=['GET'])@parse_parametersasync def test_datetime(req, id: str, birthdate: datetime.datetime):    return response.json({        'id': id,         'birthdate': birthdate.isoformat()    })if __name__ == &quot;__main__&quot;:  app.run(host=&quot;0.0.0.0&quot;, port=8080, access_log=False, debug=False)```Test it running with ```bash$ curl 'http://0.0.0.0:8080/me/123/birthdate?birthdate=2017-10-30'```### Query parameters* **str** : `ex: ?message=hello world`* **int** : `ex: ?age=100`* **bool** : `ex: ?missing=false`* **datetime.datetime** : `ex: ?currentdate=2017-10-30T10:10:30 or 2017-10-30`* **datetime.date** : `ex: ?birthdate=2017-10-30`* **List[str]** : `ex: ?words=you,me,them,we`### JSON body parameters{  &quot;message&quot;: &quot;hello word&quot;,  &quot;age&quot;: 100,  &quot;missing&quot;: false,  &quot;currentDate&quot;: &quot;2017-10-30&quot;,  &quot;currentDateTime&quot;: &quot;2017-10-30T10:10:30&quot;,  &quot;words&quot;: [&quot;you&quot;, &quot;me&quot;, &quot;them&quot;, &quot;we&quot;]}### Note about datetimesDates and datetimes are parsed without timezone information giving you a &quot;naive datetime&quot; object. See the note on [datetime.timestamp()](https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp) about handling timezones if you require epoch format timestamps.### Important notice about decoratorsThe sequence of decorators is, as usual, important in Python.You need to apply the `parse_parameters` decorator as the first one executed which means closest to the `def`.### `request` is mandatory!You should always have request as the first argument in your function in order to use `parse_parameters`.**Note** that `request` arg can be renamed and even type-annotated as long as it is the first arg.### `parse_query_args` deprecation`parse_query_args` will be deprecated in future version in favor of `parse_parameters`Currently it is still usable as a legacy decorator</longdescription>
</pkgmetadata>