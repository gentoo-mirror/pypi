<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>| |travisci| |version| |versions| |impls| |wheel| |coverage| |br-coverage|.. |travisci| image:: https://api.travis-ci.org/jonathaneunice/intspan.svg    :target: http://travis-ci.org/jonathaneunice/intspan.. |version| image:: http://img.shields.io/pypi/v/intspan.svg?style=flat    :alt: PyPI Package latest release    :target: https://pypi.org/project/intspan.. |versions| image:: https://img.shields.io/pypi/pyversions/intspan.svg    :alt: Supported versions    :target: https://pypi.org/project/intspan.. |impls| image:: https://img.shields.io/pypi/implementation/intspan.svg    :alt: Supported implementations    :target: https://pypi.org/project/intspan.. |wheel| image:: https://img.shields.io/pypi/wheel/intspan.svg    :alt: Wheel packaging support    :target: https://pypi.org/project/intspan.. |coverage| image:: https://img.shields.io/badge/test_coverage-100%25-6600CC.svg    :alt: Test line coverage    :target: https://pypi.org/project/intspan.. |br-coverage| image:: https://img.shields.io/badge/branch_coverage-100%25-6600CC.svg    :alt: Test branch coverage    :target: https://pypi.org/project/intspan``intspan`` is a ``set`` subclass that conveniently represents sets of integers.Sets can be created from, and displayed as, integer spans such as``1-3,14,29,92-97`` rather than exhaustive member listings. Compare::    intspan('1-3,14,29,92-97')    [1, 2, 3, 14, 29, 92, 93, 94, 95, 96, 97]Or worse, the unsorted, non-intuitive listings that crop up with Python'snative unordered sets, such as::    set([96, 1, 2, 3, 97, 14, 93, 92, 29, 94, 95])While they all indicate the same values, ``intspan`` output is much more compactand comprehensible. It better divulges the contiguous nature of segments of thecollection, making it easier for humans to quickly determine the &quot;shape&quot; of thedata and ascertain &quot;what's missing?&quot;When iterating, ``pop()``-ing an item, or converting to a list, ``intspan``behaves as if it were an ordered--in fact, sorted--collection. A keyimplication is that, regardless of the order in which items are added,an ``intspan`` will always be rendered in the most compact, organizedform possible.The main draw is having a convenient way to specify, manage, and see output interms of ranges--for example, rows to process in a spreadsheet. It can also helpyou quickly identify or report which items were *not* successfully processed ina large dataset.There is also an ordered ``intspanlist`` type that helps specify theordering of a set of elements.See the full details on `Read the Docs&lt;http://intspan.readthedocs.org/en/latest/&gt;`_.</longdescription>
</pkgmetadata>