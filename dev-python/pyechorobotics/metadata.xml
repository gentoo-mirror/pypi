<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pyechorobotics=============&lt;picture&gt;  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://brands.home-assistant.io/_/echorobotics/dark_logo@2x.png&quot;&gt;  &lt;img alt=&quot;Echorobotics Logo&quot; src=&quot;https://brands.home-assistant.io/_/echorobotics/logo@2x.png&quot;&gt;&lt;/picture&gt;Allows control and reads status of robot lawn mowers by echorobotics.Used by [Home Assistant Echorobotics integration](https://github.com/functionpointer/home-assistant-echorobotics-integration).Example:```pythonimport sysimport echoroboticsapiimport aiohttpimport asyncioimport loggingasync def main():    async with aiohttp.ClientSession(cookies=echoroboticsapi.create_cookies(user_id=&quot;your-user-id&quot;, user_token=&quot;user-user-token&quot;)) as session:        api = echoroboticsapi.Api(session, robot_ids=[&quot;your-robot-id&quot;])        print(await api.last_statuses())        print(await api.set_mode(&quot;chargeAndWork&quot;))if __name__ == &quot;__main__&quot;:    logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)    loop = asyncio.new_event_loop()    loop.run_until_complete(main())```Unfortunately, the API doesn't tell is which mode (&quot;chargeAndWork&quot;, &quot;work&quot; or &quot;chargeAndStay&quot;) the robot is in.We can make an educated guess though, depending on what we set ourselves, history events and the status.This is what SmartMode does:```pythonimport sysimport echoroboticsapiimport aiohttpimport asyncioimport loggingasync def main():    async with aiohttp.ClientSession(cookies=echoroboticsapi.create_cookies(user_id=&quot;your-user-id&quot;, user_token=&quot;user-user-token&quot;)) as session:        api = echoroboticsapi.Api(session, robot_ids=[&quot;your-robot-id&quot;])        smartmode = echoroboticsapi.SmartMode(&quot;your-robot-id&quot;)        api.register_smart_mode(smartmode)                print(await api.history_list())        print(await api.last_statuses())        print(smartmode.get_robot_mode())if __name__ == &quot;__main__&quot;:    logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)    loop = asyncio.new_event_loop()    loop.run_until_complete(main())```See also src/main.pySmartFetch==========While calling `last_statuses()` and `history_list()` regularly (suggestion every 2min and 15min), this is somewhat wasteful of bandwidth.Especially ``history_list()`` uses some 60KiB of data volume. If calling this every 15mins is an issue for you, you may be interested inSmartFetch.```pythonimport sysimport echoroboticsapiimport aiohttpimport asyncioimport loggingasync def main():    async with aiohttp.ClientSession(cookies=echoroboticsapi.create_cookies(user_id=&quot;your-user-id&quot;, user_token=&quot;user-user-token&quot;)) as session:        api = echoroboticsapi.Api(session, robot_ids=[&quot;your-robot-id&quot;])        smartmode = echoroboticsapi.SmartMode(&quot;your-robot-id&quot;)        api.register_smart_mode(smartmode)        smartfetch = echoroboticsapi.SmartFetch(api)                last_statuses = await smartfetch.smart_fetch()        print(last_statuses)        print(smartmode.get_robot_mode())if __name__ == &quot;__main__&quot;:    logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)    loop = asyncio.new_event_loop()    loop.run_until_complete(main())```Dev notes=========To make a new release, use GitHub website and draft a release manually.Make sure the version number in pyproject.toml matches the new tag.GitHub Actions will publish it to pypi.Adding a new state------------------If a new state is found, it must be added to ``models.py``.Also check ``notify_laststatuses_received()`` in ```smart_mode.py``` if it should be recognized as a specific Mode.Finally, in home-assistant-echorobotics-integration, increment the version number in the manifest.json.Also check the translations in echorobotics/translations, and any custom dashboard code.</longdescription>
</pkgmetadata>