<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![](https://img.shields.io/pypi/pyversions/django-colorfield.svg?color=3776AB&amp;logo=python&amp;logoColor=white)](https://www.python.org/)[![](https://img.shields.io/pypi/djversions/django-colorfield?color=0C4B33&amp;logo=django&amp;logoColor=white&amp;label=django)](https://www.djangoproject.com/)[![](https://img.shields.io/pypi/v/django-colorfield.svg?color=blue&amp;logo=pypi&amp;logoColor=white)](https://pypi.org/project/django-colorfield/)[![](https://pepy.tech/badge/django-colorfield/month)](https://pepy.tech/project/django-colorfield)[![](https://img.shields.io/github/stars/fabiocaccamo/django-colorfield?logo=github)](https://github.com/fabiocaccamo/django-colorfield/stargazers)[![](https://img.shields.io/pypi/l/django-colorfield.svg?color=blue)](https://github.com/fabiocaccamo/django-colorfield/blob/main/LICENSE.txt)[![](https://results.pre-commit.ci/badge/github/fabiocaccamo/django-colorfield/main.svg)](https://results.pre-commit.ci/latest/github/fabiocaccamo/django-colorfield/main)[![](https://img.shields.io/github/actions/workflow/status/fabiocaccamo/django-colorfield/test-package.yml?branch=main&amp;label=build&amp;logo=github)](https://github.com/fabiocaccamo/django-colorfield)[![](https://img.shields.io/codecov/c/gh/fabiocaccamo/django-colorfield?logo=codecov)](https://codecov.io/gh/fabiocaccamo/django-colorfield)[![](https://img.shields.io/codacy/grade/194566618f424a819ce43450ea0af081?logo=codacy)](https://www.codacy.com/app/fabiocaccamo/django-colorfield)[![](https://img.shields.io/codeclimate/maintainability/fabiocaccamo/django-colorfield?logo=code-climate)](https://codeclimate.com/github/fabiocaccamo/django-colorfield/)[![](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)# django-colorfieldsimple color field for your models with a nice color-picker in the admin-interface.![django-colorfield-hex](https://user-images.githubusercontent.com/7900305/104512324-51ed0f80-55ee-11eb-9144-de03d922c2ce.png)![django-colorfield-hexa](https://user-images.githubusercontent.com/7900305/104512063-ec991e80-55ed-11eb-95b6-9174ac3f4f38.png)---## Installation-   Run `pip install django-colorfield`-   Add `colorfield` to `settings.INSTALLED_APPS`-   Run `python manage.py collectstatic`-   Restart your application server---## Usage### SettingsThis package doesn't need any setting.### ModelsJust add color field(s) to your models like this:```pythonfrom colorfield.fields import ColorFieldfrom django.db import modelsclass MyModel(models.Model):    color = ColorField(default='#FF0000')```### Field OptionsThese are the supported custom options: [`format`](#format), [`image_field`](#image_field), [`samples`](#samples)#### formatThe following formats are supported: `hex` *(default)*, `hexa`, `rgb`, `rgba`.```pythonfrom colorfield.fields import ColorFieldfrom django.db import modelsclass MyModel(models.Model):    color = ColorField(format=&quot;hexa&quot;)```#### image_fieldIt is possible to auto-populate the field value getting the color from an image using the `image_field` option.The color will be calculated from the **top-left pixel** color of the image each time the model instance is saved.```pythonfrom colorfield.fields import ColorFieldfrom django.db import modelsclass MyModel(models.Model):    image = models.ImageField(upload_to=&quot;images&quot;)    color = ColorField(image_field=&quot;image&quot;)```#### samplesIt is possible to provide a palette of colors to choose from to the widget using the `samples` option.This option **is not restrictive** (on the contrary of `choices` option), it is also possible to choose another color from the spectrum.![django-colorfield-samples](https://user-images.githubusercontent.com/7900305/104512178-194d3600-55ee-11eb-8cba-91cca156da06.png)```pythonfrom colorfield.fields import ColorFieldfrom django.db import modelsclass MyModel(models.Model):    COLOR_PALETTE = [        (&quot;#FFFFFF&quot;, &quot;white&quot;, ),        (&quot;#000000&quot;, &quot;black&quot;, ),    ]    # not restrictive, allows the selection of another color from the spectrum.    color = ColorField(samples=COLOR_PALETTE)    # restrictive, it is mandatory to choose a color from the palette    color = ColorField(choices=COLOR_PALETTE)```### AdminThe admin will kindly provide a simple [color picker](http://jscolor.com/) for all color fields. :)---## Testing```bash# clone repositorygit clone https://github.com/fabiocaccamo/django-colorfield.git &amp;&amp; cd django-colorfield# create virtualenv and activate itpython -m venv venv &amp;&amp; . venv/bin/activate# upgrade pippython -m pip install --upgrade pip# install requirementspip install -r requirements.txt -r requirements-test.txt# install pre-commit to run formatters and linterspre-commit install --install-hooks# run teststox# orpython runtests.py# orpython -m django test --settings &quot;tests.settings&quot;```---## CreditsOriginally developed by [Jared Forsyth](https://github.com/jaredly)---## LicenseReleased under [MIT License](LICENSE.txt).---## Supporting- :star: Star this project on [GitHub](https://github.com/fabiocaccamo/django-colorfield)- :octocat: Follow me on [GitHub](https://github.com/fabiocaccamo)- :blue_heart: Follow me on [Twitter](https://twitter.com/fabiocaccamo)- :moneybag: Sponsor me on [Github](https://github.com/sponsors/fabiocaccamo)## See also- [`django-admin-interface`](https://github.com/fabiocaccamo/django-admin-interface) - the default admin interface made customizable by the admin itself. popup windows replaced by modals. üßô ‚ö°- [`django-extra-settings`](https://github.com/fabiocaccamo/django-extra-settings) - config and manage typed extra settings using just the django admin. ‚öôÔ∏è- [`django-maintenance-mode`](https://github.com/fabiocaccamo/django-maintenance-mode) - shows a 503 error page when maintenance-mode is on. üöß üõ†Ô∏è- [`django-redirects`](https://github.com/fabiocaccamo/django-redirects) - redirects with full control. ‚Ü™Ô∏è- [`django-treenode`](https://github.com/fabiocaccamo/django-treenode) - probably the best abstract model / admin for your tree based stuff. üå≥- [`python-benedict`](https://github.com/fabiocaccamo/python-benedict) - dict subclass with keylist/keypath support, I/O shortcuts (base64, csv, json, pickle, plist, query-string, toml, xml, yaml) and many utilities. üìò- [`python-codicefiscale`](https://github.com/fabiocaccamo/python-codicefiscale) - encode/decode Italian fiscal codes - codifica/decodifica del Codice Fiscale. üáÆüáπ üí≥- [`python-fontbro`](https://github.com/fabiocaccamo/python-fontbro) - friendly font operations. üß¢- [`python-fsutil`](https://github.com/fabiocaccamo/python-fsutil) - file-system utilities for lazy devs. üßü‚ôÇÔ∏è</longdescription>
</pkgmetadata>