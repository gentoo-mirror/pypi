<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django Fancytree Widget----------------------django-fancytree provides a widget using the fancytree js library torender a forms.ModelMultipleChoiceField as a tree with selectable andcollapsable nodes.See included project 'treewidget' as an example. Widget is used inModelMultipleChoiceField and allows user to select multiple categories.Requirements------------django, django-mptt, jquery, jquery-uiUsage-----::  from fancytree.widgets import FancyTreeWidget  categories = Category.objects.order_by('tree_id', 'lft')  class CategoryForm(forms.Form):      categories = forms.ModelMultipleChoiceField(         queryset=categories,         widget=FancyTreeWidget(queryset=categories)      )In this example Category is a model registered with django-mptt.Widget accepts **queryset** option, which expects pre-ordered queryset by&quot;tree_id&quot; and &quot;lft&quot;.If you want to adjust tree data creation, you can define 'get_doc' method onyour model. Example:::  def get_doc(self, values):    doc = {&quot;title&quot;: name, &quot;key&quot;: self.pk}    if str(self.pk) in values:        doc['select'] = True        doc['expand'] = True    return doc</longdescription>
</pkgmetadata>