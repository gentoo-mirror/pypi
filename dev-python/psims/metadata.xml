<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># psimsPrototype work for a unified API for writing Proteomics Standards Initiative standardized formatsfor mass spectrometry:1. mzML2. mzIdentML3. mzMLbSee the [Documenation](https://mobiusklein.github.io/psims) for more information## InstallationWith pip:```shpip install psims```With conda:```shconda install -c bioconda -c conda-forge -c defaults psims```## mzML Minimal Example```pythonfrom psims.mzml.writer import MzMLWriter# Load the data to writescans = get_scan_data()with MzMLWriter(open(&quot;out.mzML&quot;, 'wb'), close=True) as out:    # Add default controlled vocabularies    out.controlled_vocabularies()    # Open the run and spectrum list sections    with out.run(id=&quot;my_analysis&quot;):        spectrum_count = len(scans) + sum([len(products) for _, products in scans])        with out.spectrum_list(count=spectrum_count):            for scan, products in scans:                # Write Precursor scan                out.write_spectrum(                    scan.mz_array, scan.intensity_array,                    id=scan.id, params=[                        &quot;MS1 Spectrum&quot;,                        {&quot;ms level&quot;: 1},                        {&quot;total ion current&quot;: sum(scan.intensity_array)}                     ])                # Write MSn scans                for prod in products:                    out.write_spectrum(                        prod.mz_array, prod.intensity_array,                        id=prod.id, params=[                            &quot;MSn Spectrum&quot;,                            {&quot;ms level&quot;: 2},                            {&quot;total ion current&quot;: sum(prod.intensity_array)}                         ],                         # Include precursor information                         precursor_information={                            &quot;mz&quot;: prod.precursor_mz,                            &quot;intensity&quot;: prod.precursor_intensity,                            &quot;charge&quot;: prod.precursor_charge,                            &quot;scan_id&quot;: prod.precursor_scan_id,                            &quot;activation&quot;: [&quot;beam-type collisional dissociation&quot;, {&quot;collision energy&quot;: 25}],                            &quot;isolation_window&quot;: [prod.precursor_mz - 1, prod.precursor_mz, prod.precursor_mz + 1]                         })```## CitingIf you use `psims` in an academic project, please cite:    Klein, J. A., &amp; Zaia, J. (2018). psims - A declarative writer for mzML and mzIdentML for Python. Molecular &amp; Cellular Proteomics, mcp.RP118.001070. https://doi.org/10.1074/mcp.RP118.001070</longdescription>
</pkgmetadata>