<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Chest=====|Build Status| |Coverage Status| |Version Status| |Downloads|A dictionary that spills to disk.Chest acts likes a dictionary but it can write its contents to disk.  This isuseful in the following two occasions:1.  Chest can hold datasets that are larger than memory2.  Chest persists and so can be saved and loaded for later useRelated Projects----------------The standard library ``shelve`` is an alternative out-of-core dictionary.``Chest`` offers the following benefits over shelve_:1.  Chest supports any hashable key (not just strings)2.  Chest supports pluggable serialization and file saving schemesAlternatively one might consider a traditional key-value store database likeRedis_.Shove_ is another excellent alternative with support for a variety of stores.How it works------------Chest stores data in two locations1.  An in-memory dictionary2.  On the filesystem in a directory owned by the chestAs a user adds contents to the chest the in-memory dictionary fills up.  Whena chest stores more data in memory than desired (see ``available_memory=``keyword argument) it writes the larger contents of the chest to disk as picklefiles (the choice of ``pickle`` is configurable).  When a user asks for a valuechest checks the in-memory store, then checks on-disk and loads the value intomemory if necessary, pushing other values to disk.Chest is a simple project.  It was intended to provide a simple interface toassist in the storage and retrieval of numpy arrays.  However it's design andimplementation are agnostic to this case and so could be used in a variety ofother situations.With minimal work chest could be extended to serve as a communication pointbetween multiple processes.Known Failings--------------Chest was designed to hold a moderate amount of largish numpy arrays.  Itdoesn't handle the very many small key-value pairs usecase (though could withsmall effort).  In particular chest has the following deficiencies1.  Chest is not multi-process safe.  We should institute a file lock at least    around the ``.keys`` file.2.  Chest does not support mutation of variables on disk.LICENSE-------New BSD. See License_Install-------``chest`` is available through ``conda``::    conda install chest``chest`` is on the Python Package Index (PyPI)::    pip install chestExample-------.. code:: python    &gt;&gt;&gt; from chest import Chest    &gt;&gt;&gt; c = Chest()    &gt;&gt;&gt; # Acts like a normal dictionary    &gt;&gt;&gt; c['x'] = [1, 2, 3]    &gt;&gt;&gt; c['x']    [1, 2, 3]    &gt;&gt;&gt; # Data persists to local files    &gt;&gt;&gt; c.flush()    &gt;&gt;&gt; import os    &gt;&gt;&gt; os.listdir(c.path)    ['.keys', 'x']    &gt;&gt;&gt; # These files hold pickled results    &gt;&gt;&gt; import pickle    &gt;&gt;&gt; pickle.load(open(c.key_to_filename('x')))    [1, 2, 3]    &gt;&gt;&gt; # Though one normally accesses these files with chest itself    &gt;&gt;&gt; c2 = Chest(path=c.path)    &gt;&gt;&gt; c2.keys()    ['x']    &gt;&gt;&gt; c2['x']    [1, 2, 3]    &gt;&gt;&gt; # Chest is configurable, so one can use json, etc. instead of pickle    &gt;&gt;&gt; import json    &gt;&gt;&gt; c = Chest(path='my-chest', dump=json.dump, load=json.load)    &gt;&gt;&gt; c['x'] = [1, 2, 3]    &gt;&gt;&gt; c.flush()    &gt;&gt;&gt; json.load(open(c.key_to_filename('x')))    [1, 2, 3]Dependencies------------``Chest`` supports Python 2.6+ and Python 3.2+ with a common codebase.It currently depends on the ``heapdict`` library.It is a light weight dependency... _shelve: https://docs.python.org/3/library/shelve.html.. _Shove: https://pypi.python.org/pypi/shove/0.5.6.. _License: https://github.com/ContinuumIO/chest/blob/master/LICENSE.txt.. _Redis: http://redis.io/.. |Build Status| image:: https://travis-ci.org/ContinuumIO/chest.png   :target: https://travis-ci.org/ContinuumIO/chest.. |Coverage Status| image:: https://coveralls.io/repos/mrocklin/chest/badge.png   :target: https://coveralls.io/r/mrocklin/chest.. |Version Status| image:: https://pypip.in/v/chest/badge.png   :target: https://pypi.python.org/pypi/chest/.. |Downloads| image:: https://pypip.in/d/chest/badge.png   :target: https://pypi.python.org/pypi/chest/</longdescription>
</pkgmetadata>