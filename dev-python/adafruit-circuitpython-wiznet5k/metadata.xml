<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/wiznet5k/badge/?version=latest    :target: https://docs.circuitpython.org/projects/wiznet5k/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_Wiznet5k/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_Wiznet5k/actions    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackPure-Python interface for WIZNET 5k ethernet modules.Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://circuitpython.org/libraries&gt;`_.Installing from PyPI=====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-wiznet5k/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-wiznet5kTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-wiznet5kTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-wiznet5kUsage Example=============This example demonstrates making a HTTP GET request towifitest.adafruit.com... code-block:: python    import board    import busio    import digitalio    import adafruit_requests as requests    from adafruit_wiznet5k.adafruit_wiznet5k import WIZNET5K    import adafruit_wiznet5k.adafruit_wiznet5k_socket as socket    print(&quot;Wiznet5k WebClient Test&quot;)    TEXT_URL = &quot;http://wifitest.adafruit.com/testwifi/index.html&quot;    JSON_URL = &quot;http://api.coindesk.com/v1/bpi/currentprice/USD.json&quot;    cs = digitalio.DigitalInOut(board.D10)    spi_bus = busio.SPI(board.SCK, MOSI=board.MOSI, MISO=board.MISO)    # Initialize ethernet interface with DHCP    eth = WIZNET5K(spi_bus, cs)    # Initialize a requests object with a socket and ethernet interface    requests.set_socket(socket, eth)    print(&quot;Chip Version:&quot;, eth.chip)    print(&quot;MAC Address:&quot;, [hex(i) for i in eth.mac_address])    print(&quot;My IP address is:&quot;, eth.pretty_ip(eth.ip_address))    print(&quot;IP lookup adafruit.com: %s&quot; %eth.pretty_ip(eth.get_host_by_name(&quot;adafruit.com&quot;)))    #eth._debug = True    print(&quot;Fetching text from&quot;, TEXT_URL)    r = requests.get(TEXT_URL)    print('-'*40)    print(r.text)    print('-'*40)    r.close()    print()    print(&quot;Fetching json from&quot;, JSON_URL)    r = requests.get(JSON_URL)    print('-'*40)    print(r.json())    print('-'*40)    r.close()    print(&quot;Done!&quot;)This example demonstrates a simple web server that allows setting the Neopixel color... code-block:: python    import board    import busio    import digitalio    import neopixel    from adafruit_wiznet5k.adafruit_wiznet5k import WIZNET5K    import adafruit_wiznet5k.adafruit_wiznet5k_wsgiserver as server    from adafruit_wsgi.wsgi_app import WSGIApp    print(&quot;Wiznet5k Web Server Test&quot;)    # Status LED    led = neopixel.NeoPixel(board.NEOPIXEL, 1)    led.brightness = 0.3    led[0] = (0, 0, 255)    # W5500 connections    cs = digitalio.DigitalInOut(board.D10)    spi_bus = busio.SPI(board.SCK, MOSI=board.MOSI, MISO=board.MISO)    # Initialize Ethernet interface with DHCP    eth = WIZNET5K(spi_bus, cs)    # Here we create our application, registering the    # following functions to be called on specific HTTP GET requests routes    web_app = WSGIApp()    @web_app.route(&quot;/led/&lt;r&gt;/&lt;g&gt;/&lt;b&gt;&quot;)    def led_on(request, r, g, b):        print(&quot;LED handler&quot;)        led.fill((int(r), int(g), int(b)))        return (&quot;200 OK&quot;, [], [&quot;LED set!&quot;])    @web_app.route(&quot;/&quot;)    def root(request):        print(&quot;Root handler&quot;)        return (&quot;200 OK&quot;, [], [&quot;Root document&quot;])    @web_app.route(&quot;/large&quot;)    def large(request):        print(&quot;Large pattern handler&quot;)        return (&quot;200 OK&quot;, [], [&quot;*-.-&quot; * 2000])    # Here we setup our server, passing in our web_app as the application    server.set_interface(eth)    wsgiServer = server.WSGIServer(80, application=web_app)    print(&quot;Open this IP in your browser: &quot;, eth.pretty_ip(eth.ip_address))    # Start the server    wsgiServer.start()    while True:        # Our main loop where we have the server poll for incoming requests        wsgiServer.update_poll()        # Maintain DHCP lease        eth.maintain_dhcp_lease()        # Could do any other background tasks here, like reading sensorsDocumentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/wiznet5k/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_Wiznet5k/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.License=============This library was written by `Arduino LLC &lt;https://github.com/arduino-libraries/Ethernet/blob/master/AUTHORS&gt;`_. We've converted it to workwith `CircuitPython &lt;https://circuitpython.org/&gt;`_ and made changes so it works similarly to `CircuitPython's WIZNET5k wrapper for the WIZnet5500 Ethernet interface &lt;https://docs.circuitpython.org/en/latest/shared-bindings/wiznet/wiznet5k.html&gt;`_ and CPython's `Socket low-levelnetworking interface module &lt;https://docs.python.org/3.8/library/socket.html&gt;`_.This open source code is licensed under the LGPL license (see LICENSE for details).</longdescription>
</pkgmetadata>