<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># flake8-import-restrictions[![Build Status](https://github.com/atollk/flake8-import-restrictions/workflows/tox/badge.svg)](https://github.com/atollk/flake8-import-restrictions/actions)[![Build Status](https://github.com/atollk/flake8-import-restrictions/workflows/pylint/badge.svg)](https://github.com/atollk/flake8-import-restrictions/actions)[![Build Status](https://github.com/atollk/flake8-import-restrictions/workflows/black/badge.svg)](https://github.com/atollk/flake8-import-restrictions/actions)[![Build Status](https://github.com/atollk/flake8-import-restrictions/workflows/flake8/badge.svg)](https://github.com/atollk/flake8-import-restrictions/actions)A flake8 plugin used to disallow certain forms of imports.This plugin talks about the `import` syntax (`import X.Y.Z [as foo]`)and the `from` syntax (`from X.Y import Z [as foo]`). It talks about`import` segments (`import X`), `from` segments (`from Y`), and `as`segments (`as Z`).## OptionsFor every error `I20xx` listed below, there are options `--i20xx_include` and `--i20xx_exclude` which are passed a comma separated list of UNIX wildcard patterns each. The errorwill then only be reported on imports of modules that match a include pattern but no exclude pattern.By default, I2000, I2001, I2002, I2021, I2023, I2041, and I2043 include all (`*`) modules. Only I2041 excludes the`typing` module from checks, the other errors have no excludes by default.## General Import Errors### I2000Imports should only happen on module level, not locally.```python# Baddef f():    import os.path    return os.path.join(&quot;a&quot;, &quot;b&quot;)# Goodimport os.pathdef f():    return os.path.join(&quot;a&quot;, &quot;b&quot;)```### I2001Alias identifiers defined from `as` segments should be atleast two characters long.```python# Badimport os.path as p# Goodimport os.path as path```### I2002Alias identifiers should not have the same name as the imported object.```python# Badimport sys as sys# Goodimport sys```## `import` Syntax Errors### I2020When using the `import` syntax, if the imported module is a submodule,i.e. not a top level module, an `as` segment should be present.```python# Badimport os.path# Goodimport sysimport os.path as path```### I2021When using the `import` syntax, each import statement shouldonly import one module.```python# Badimport sys, os# Goodimport sysimport os```### I2022The `import` syntax should not be used.### I2023When using the `import` syntax, do not duplicate module names in the `as`segment.```python# Badimport os.path as path# Goodfrom os import pathimport os.path as ospath```## `from` Syntax Errors### I2040When using the `from` syntax, the `import` segment only contains oneimport.```python# Badfrom os import path, environ# Goodfrom os import pathfrom os import environ```### I2041When using the `from` syntax, only submodules are imported, notmodule elements.```python# Badfrom os.path import join# Goodfrom os import path```### I2042When using the `from` syntax, only module elements are imported,not submodules.```python# Badfrom os import path# Goodfrom os.path import join```### I2043When using the `from` syntax, `import *` should not be used.```python# Badfrom os.path import *# Goodfrom os.path import join```### I2044Relative imports should not be used.```python# Badfrom . import foo# Goodfrom flake8_import_restrictions import foo```### I2045The `from` syntax should not be used.</longdescription>
</pkgmetadata>