<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># stdlibsSimple list of top-level packages in Python's stdlib[![license](https://img.shields.io/pypi/l/stdlibs.svg)](https://github.com/omnilib/stdlibs/blob/master/LICENSE)[![version](https://img.shields.io/pypi/v/stdlibs.svg)](https://pypi.org/project/stdlibs)[![changelog](https://img.shields.io/badge/change-log-blue)](https://stdlibs.omnilib.dev/en/latest/changelog.html)[![documentation](https://readthedocs.org/projects/stdlibs/badge/?version=latest)](https://stdlibs.omnilib.dev)This package provides a static listing of all known modules in the Python standardlibrary, with separate lists available for each major release dating back to Python 2.3.It also includes combined lists of all module names that were ever available in any3.x release, any 2.x release, or both.Note: On Python versions 3.10 or newer, a list of module names for the active runtimeis available `sys.stdlib_module_names`. This package exists to provide an historicalrecord for use with static analysis and other tooling.This package only includes listings for CPython releases. If other runtimes would beuseful, open an issue and start a discussion on how best that can be accomodated.Install-------You can install it from PyPI:```shell-session$ pip install stdlibs```Usage-----The recommended usage is to reference `stdlibs.module_names` — the top-levelnames that are valid in some version of Python 3.x on some platform.  This is asuperset of top-level names you may have, and a superset of those in`sys.stdlib_module_names`.```pycon&gt;&gt;&gt; from stdlibs import module_names&gt;&gt;&gt; print(&quot;os&quot; in module_names)True&gt;&gt;&gt; print(&quot;peg_parser&quot; in module_names)  # 3.9+True```If you need a specific version, those are available as other modules:```pycon&gt;&gt;&gt; from stdlibs.py36 import module_names as module_names_py36&gt;&gt;&gt; print(&quot;os&quot; in module_names_py36)True&gt;&gt;&gt; print(&quot;peg_parser&quot; in module_names_py36)False```If you intend to process more than one version, you may find the string apieasier:```pycon&gt;&gt;&gt; from stdlibs import stdlib_module_names, KNOWN_VERSIONS&gt;&gt;&gt; [v for v in KNOWN_VERSIONS if &quot;dataclasses&quot; in stdlib_module_names(v)]['3.7', '3.8', '3.9', '3.10', '3.11']&gt;&gt;&gt;&gt;&gt;&gt; sorted(stdlib_module_names(&quot;3.7&quot;) - stdlib_module_names(&quot;3.6&quot;))['_abc', '_contextvars', '_py_abc', '_queue', '_uuid', '_xxtestfuzz', 'contextvars', 'dataclasses']&gt;&gt;&gt;&gt;&gt;&gt; from moreorless.click import unified_diff&gt;&gt;&gt; prev = None&gt;&gt;&gt; buf = []&gt;&gt;&gt; for v in KNOWN_VERSIONS:...     cur = ''.join([f&quot;{name}\n&quot; for name in sorted(stdlib_module_names(v))])...     if prev:...         buf.append(unified_diff(prev, cur, f&quot;new-in-{v}&quot;))...     prev = cur&gt;&gt;&gt; print(''.join(''.join(buf).splitlines(True)[:10]), end='')--- a/new-in-2.4+++ b/new-in-2.4@@ -19,7 +19,6 @@ DocXMLRPCServer ERRNO EasyDialogs-FCNTL FILE FL FileDialog```Regenerating------------Add or update the list of releases and download URLs in `stdlibs/fetch.py`, thenexecute the `stdlibs.fetch` module:```shell-session$ make distclean virtualenv$ source .venv/bin/activate(.venv) $ python -m stdlibs.fetch```License-------stdlibs is copyright [Amethyst Reese](https://noswap.com), and licensed underthe MIT license.  I am providing code in this repository to you under an opensource license.  This is my personal repository; the license you receive tomy code is from me and not from my employer. See the `LICENSE` file for details.</longdescription>
</pkgmetadata>