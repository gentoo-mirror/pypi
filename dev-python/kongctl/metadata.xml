<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>A command line client for kong admin API========================================This tool ease kong management like getting routes for service name (not id):.. code-block:: bash    kongctl -s https://localhost:8001 list routes -s example-service    1ba43640-6977-4d6a-9804-6e0032d77bb1: example-service      example.com/    d091d9c4-fde8-4982-b984-8376bd544aaf: example-service      example.com/api/v1You can store your configuration in multiple yaml files and apply them individually. Let's assume you have configuration like this:.. code-block:: yaml    _format_version: &quot;1.1&quot;        services:       - name: orders-service        url: http://kubernetes-inner.host:80/path-to-ns/orders        routes:           - name: orders-root            strip_path: true            hosts:              - orders.example.com                    plugins:           - name: jwt            enabled: false            route:              name: orders-root                        run_on: first            config:               key_claim_name: iss              cookie_names: {}              secret_is_base64: false              maximum_expiration: 0              anonymous:               run_on_preflight: true              uri_param_names:                 - jwtNow you can call the following command to apply it:.. code-block:: bash    kongctl -s https://localhost:8001 ensure order-service.yamlInstallation============.. code-block:: bash    brew tap kepkin/kongctl    brew install kongctlor.. code-block:: bash    pip3 install kongctlQuick guide to usage====================.. code-block:: bash    mkdir ~/.kongctl    cat  &gt; ~/.kongctl/qa-env &lt;&lt; EOF    {      &quot;client&quot;: {        &quot;server&quot;: &quot;https://my-kong.url:8001&quot;,        &quot;auth&quot;: {          &quot;password&quot;: &quot;pass&quot;,          &quot;type&quot;: &quot;basic&quot;,          &quot;user&quot;: &quot;user&quot;        }      },      &quot;var_map&quot;: {        &quot;VAR1&quot;: &quot;VALUE1&quot;,        &quot;VAR2&quot;: &quot;VALUE2&quot;      }    }    EOF    kong -c qa-env list servicesTODO==== - Support for OIDC authorization - Get stubs for create operation - Support all key-auth like plugins - Support update from cmd args - Support yaml - Sort by id? - list command filter option - Autocomplete - Add images instead of code in README (to show color support)</longdescription>
</pkgmetadata>