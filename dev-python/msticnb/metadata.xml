<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># msticnb - Notebooklets for Jupyter NotebooksRead the full documentation at [msticnb.readthedocs](https://msticnb.readthedocs.io/en/latest/)msticnb is a companion package to[msticpy](https://msticpy.readthedocs.io/en/latest/). It is designed tobe used in Jupyter notebooks by security operations engineers and analysts,to give them quick access tocommon notebook patterns such as retrieving summary information abouta host or IP address.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-browser.png&quot;alt=&quot;Notebooklet browser showing list of notebooklets and some details of the user documentation for the selected notebooklet.&quot;title=&quot;Notebooklet browser&quot;height=&quot;300&quot; /&gt;Each notebooklet is equivalent to multiple cells and many lines of codein a traditional notebook. You can import and run a notebooklet with twolines of code (or even 1 line, if you are impatient). Typically, the inputparameters to a notebooklet will be an identifier (e.g. a host name) anda time range (over which to query data). Some notebooklets (primarilypackaged analytics) will take a pandas DataFrame as input.```python    host_summary = nb.nblts.azsent.host.HostSummary()    host_sum_rslt = host_summary.run(        value=&quot;Msticalertswin1&quot;, timespan=time_span    )```You can create your own notebooklets and use them in the same frameworkas the ones already in the package.---## Notebooklets### What are notebooklets?Notebooklets are collections of notebook cells that implement someuseful reusable sequence. They are extensions of, and build upon themsticpy package and are design to streamline authoring of Jupyternotebooks for CyberSec hunters and investigators. The goal ofnotebooklets is to replace repetitive and lengthy boilerplate code innotebooks for common operations.Some examples are:- Get a host summary for a named host (IP address, cloud registration  information, recent alerts)- Get account activity for an account (host and cloud logons and  failures, summary of recent activity)- Triage alerts with Threat Intel data (prioritize your alerts by  correlating with Threat intel sources)### Intended Audience- Cyber security investigators and hunters using Jupyter notebooks for  their work- Security Ops Center (SOC) engineers/SecDevOps building reusable  notebooks for SOC analysts### Why did we create notebooklets?- Notebook code can quickly become complex and lengthy:  - obscures the information you are trying to display  - can be intimidating to non-developers- Code in notebook code cells is not easily re-useable:  - You can copy and paste but how do you sync changes back to the    original notebook?  - Difficult to discover code snippets in notebooks- Notebook code is often fragile:  - Often not parameterized or modular  - Code blocks are frequently dependent on global values assigned    earlier  - Output data is not in any standard format  - Difficult to test### Why aren\'t these part of msticpy?- Msticpy aims to be platform-independent, whereas most if not all  notebooklets assume a data schema that is specific to their data  provider/SIEM.- Msticpy is mostly for discrete functions such as data acquisition,  analysis and visualization. Msticnb implements common SOC scenarios  using this functionality.### Traditional Notebook vs. one using a NotebookletsThe notebook on the left is using mostly inline code (occupying morethan 50% of the notebook). The one on the right is using a singlenotebooklet with only 3 or 4 lines of code.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/NBComparison.png&quot;alt=&quot;Comparing a standard notebook with one using a notebooklet. The standard notebook on the left can require large amounts of code. The notebook on the right uses just 3 lines of code.&quot;title=&quot;With and without notebooklets&quot; height=&quot;500&quot; /&gt;### Characteristics of Notebooklets- They have one or small number of entry points/methods (typically a  \&quot;run\&quot; method)- They are parametrizable (e.g. you can supply hostname, IP Address,  time range, etc.) and they may have runtime options to allow to skip  unwanted processing or include optional processing- They can query, process or visualize data (or any combination)- They return a package of results that can be used later in the  notebook- The code can be imported into a notebook cell to be modified, if  needed.### Limitations- They are normally specific to a data backend/SIEM since the data  schema and layout varies between SIEM vendors.- Notebooklet code layout is typically more complex than standard  notebook code---## Using NotebookletsFor a more detailed explanation of these steps and illustration of otherfeatures see the [Notebookletsnotebook](https://github.com/microsoft/msticnb/blob/master/docs/notebooks/NotebookletsDemo.ipynb)### Install the Package```bashpip install msticnb```### Import and initialize&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-import.png&quot;alt=&quot;Python statement to import msticnb - 'import msticnb as nb'&quot;title=&quot;Importing&quot; height=&quot;70&quot; /&gt;The init method loads data drivers and data providers relevant to thethe chosen data platform.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-init.png&quot;alt=&quot;Python statement to initialize msticnb - nb.init('AzureSentinel')&quot;title=&quot;Initializing msticnb&quot; height=&quot;70&quot; /&gt;### Pick a notebooklet to useYou can pick a notebooklet from the commandline, using autocompletion.You can also search for a notebooklet using keywords and text from thenotebooklet name and documentation.The easiest way is using the nb.browse() method. This lists all of theavailable notebooklets and displays documentation, usage information andsample code snippet for each.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-browser.png&quot;alt=&quot;Notebooklet browser showing list of notebooklets and some details of the user documentation for the selected notebooklet.&quot;title=&quot;Notebooklet browser&quot; height=&quot;500&quot; /&gt;### Instantiate the notebooklet and execute \&quot;run\&quot;Notebooklets usually have a single `run` method, which is the entrypoint for the notebooklet. A notebooklet might have additional methodsto do further drill-down, data retrieval, visualization or otheroperations once the run method has completed. Run typically requiresparameters such as a host or account identifier and a time range overwhich to perform the operations.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-run-cell.png&quot;alt=&quot;Python code cell showing the creation of a notebooklet instance from the WinHostevents notebooklet class. The notebooklet 'run' method is called with parameters supplying the name of the host and a time range.&quot;title=&quot;Running a notebooklet&quot; height=&quot;100&quot; /&gt;The notebooklet displays output directly to the notebook (although thiscan be suppressed) - showing text, data tables and visualizations. Thisdata is all saved to a Results object. The data items are simpleproperties of this results object, for example, DataFrames, plots, orsimple Python dictionaries. You can access these individually and youcan just display the results object using IPython display() or justtyping its name into and emtpy cell and running the cell.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-run.png&quot;alt=&quot;The notebooklet displays output directly to th notebook. The output includes styled tables, text headings and descriptions and interactive timeline visualizations.&quot;title=&quot;Running a notebooklet&quot; height=&quot;600&quot; /&gt;### View extended help for a notebookletYou can access detailed documentation from any notebooklet class orinstance using the show_help() method. This help includes a high-leveldescription and usage information (parameters, available methods,options). It also describes the major output sections that will bedisplayed and the the contents of the return results.Note: the contents of this help are also displayed in the notebooklet browsershown earlier.&lt;img src=&quot;https://github.com/microsoft/msticnb/blob/master/docs/source/_static/msticnb-help.png&quot;alt=&quot;The notebooklet help displays a description, parameter and other usage information and available methods. It also describes the major output sections and the contents of the return results.&quot;title=&quot;Notebooklet help&quot; height=&quot;500&quot; /&gt;## Current Notebooklets### AccountSummaryRetrieves account summary for the selected account.Main operations:- Searches for matches for the account name in Active Directory,  Windows and Linux host logs.- If one or more matches are found it will return a selection widget  that you can use to pick the account.- Selecting the account displays a summary of recent activity and  retrieves any alerts and hunting bookmarks related to the account- The alerts and bookmarks are browsable using the browse_alerts and  browse_bookmarks methods- You can call the find_additional_data method to retrieve and display  more detailed activity information for the account (e.g. host logons,  Azure and Office 365 activity)### EnrichAlertsAlert Enrichment Notebooklet Class.Enriches Azure Sentinel alerts with Threat Intelligence and other data.### HostLogonsSummaryHost Logons Summary Notebooklet class.Queries and displays information about logons to a host including:- Summary of successful logons- Visualizations of logon event times- Geolocation of remote logon sources- Visualizations of various logon elements depending on host type- Data on users with failed and successful logons### HostSummaryHostSummary Notebooklet class.Queries and displays information about a host including:- IP address assignment- Related alerts- Related hunting/investigation bookmarks- Azure subscription/resource data.### WinHostEventsWindows host Security Events Notebooklet class.Queries and displays Windows Security Events including:- All security events summary- Extracting and displaying account management events- Account management event timeline- Optionally parsing packed event data into DataFrame columnsProcess (4688) and Account Logon (4624, 4625) are not included in theevent types processed by this module.### IpAddressSummaryRetrieves common data about an IP Address including:- Tries to determine IP address is external or internal (i.e. owned by the organization)- Azure Heartbeat, Network Analytics or VMComputer records- Geo-IP and Whois data- Threat intel reports- Related alerts and hunting bookmarks- Network flows involving IP address- Azure activity (e.g. sign-ins) originating from IP address### NetworkFlowSummaryNetwork Flow Summary Notebooklet class.Queries network data and plots time lines for network traffic to/from ahost or IP address.- Plot flows events by protocol and direction- Plot flow count by protocol- Display flow summary table- Display flow summary by ASN- Display results on map### TemplateNBTemplate Notebooklet class.A code template for creating additional notebooklets.## See Also[msticpy documentation](https://msticpy.readthedocs.io/en/latest/)</longdescription>
</pkgmetadata>