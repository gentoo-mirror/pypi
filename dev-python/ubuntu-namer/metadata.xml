<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ubuntu-namer&lt;div align=&quot;center&quot;&gt;[![Build status](https://github.com/crypdick/ubuntu-namer/workflows/build/badge.svg?branch=master&amp;event=push)](https://github.com/crypdick/ubuntu-namer/actions?query=workflow%3Abuild)[![Python Version](https://img.shields.io/pypi/pyversions/ubuntu-namer.svg)](https://pypi.org/project/ubuntu-namer/)[![Dependencies Status](https://img.shields.io/badge/dependencies-up%20to%20date-brightgreen.svg)](https://github.com/crypdick/ubuntu-namer/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20author%3Aapp%2Fdependabot)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Security: bandit](https://img.shields.io/badge/security-bandit-green.svg)](https://github.com/PyCQA/bandit)[![Pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/crypdick/ubuntu-namer/blob/master/.pre-commit-config.yaml)[![Semantic Versions](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--versions-e10079.svg)](https://github.com/crypdick/ubuntu-namer/releases)[![License](https://img.shields.io/github/license/crypdick/ubuntu-namer)](https://github.com/crypdick/ubuntu-namer/blob/master/LICENSE)![Coverage Report](assets/images/coverage.svg)`ubuntu-namer` is a Python cli/package port of [ubuntu-name-generator](https://github.com/fcrespo82/ubuntu-name-generator).&lt;/div&gt;## Installation```bashpip install -U ubuntu-namer```or install with `Poetry````bashpoetry add ubuntu-namer```Then you can run```bashubuntu-namer --help```or with `Poetry`:```bashpoetry run ubuntu-namer --help```### Makefile usage[`Makefile`](https://github.com/crypdick/ubuntu-namer/blob/master/Makefile) contains a lot of functions for faster development.&lt;details&gt;&lt;summary&gt;1. Download and remove Poetry&lt;/summary&gt;&lt;p&gt;To download and install Poetry run:```bashmake poetry-download```To uninstall```bashmake poetry-remove```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;2. Install all dependencies and pre-commit hooks&lt;/summary&gt;&lt;p&gt;Install requirements:```bashmake install```Pre-commit hooks coulb be installed after `git init` via```bashmake pre-commit-install```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;3. Codestyle&lt;/summary&gt;&lt;p&gt;Automatic formatting uses `pyupgrade`, `isort` and `black`.```bashmake codestyle# or use synonymmake formatting```Codestyle checks only, without rewriting files:```bashmake check-codestyle```&gt; Note: `check-codestyle` uses `isort`, `black` and `darglint` libraryUpdate all dev libraries to the latest version using one comand```bashmake update-dev-deps```&lt;details&gt;&lt;summary&gt;4. Code security&lt;/summary&gt;&lt;p&gt;```bashmake check-safety```This command launches `Poetry` integrity checks as well as identifies security issues with `Safety` and `Bandit`.```bashmake check-safety```&lt;/p&gt;&lt;/details&gt;&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;5. Type checks&lt;/summary&gt;&lt;p&gt;Run `mypy` static type checker```bashmake mypy```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;6. Tests with coverage badges&lt;/summary&gt;&lt;p&gt;Run `pytest````bashmake test```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;7. All linters&lt;/summary&gt;&lt;p&gt;Of course there is a command to ~~rule~~ run all linters in one:```bashmake lint```the same as:```bashmake test &amp;&amp; make check-codestyle &amp;&amp; make mypy &amp;&amp; make check-safety```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;8. Docker&lt;/summary&gt;&lt;p&gt;```bashmake docker-build```which is equivalent to:```bashmake docker-build VERSION=latest```Remove docker image with```bashmake docker-remove```More information [about docker](https://github.com/crypdick/ubuntu-namer/tree/master/docker).&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;9. Cleanup&lt;/summary&gt;&lt;p&gt;Delete pycache files```bashmake pycache-remove```Remove package build```bashmake build-remove```Delete .DS_STORE files```bashmake dsstore-remove```Remove .mypycache```bashmake mypycache-remove```Or to remove all above run:```bashmake cleanup```&lt;/p&gt;&lt;/details&gt;&lt;details&gt;&lt;summary&gt;10. AWS Lambda&lt;/summary&gt;&lt;p&gt;To make a zip file for AWS Lambda run:```bashmake build-lambda```Then, upload this zip to AWS Lambda.## üìà ReleasesYou can see the list of available releases on the [GitHub Releases](https://github.com/crypdick/ubuntu-namer/releases) page.We follow [Semantic Versions](https://semver.org/) specification.We use [`Release Drafter`](https://github.com/marketplace/actions/release-drafter). As pull requests are merged, a draft release is kept up-to-date listing the changes, ready to publish when you‚Äôre ready. With the categories option, you can categorize pull requests in release notes using labels.### List of labels and corresponding titles|               **Label**               |  **Title in Releases**  || :-----------------------------------: | :---------------------: ||       `enhancement`, `feature`        |       üöÄ Features       || `bug`, `refactoring`, `bugfix`, `fix` | üîß Fixes &amp; Refactoring  ||       `build`, `ci`, `testing`        | üì¶ Build System &amp; CI/CD ||              `breaking`               |   üí• Breaking Changes   ||            `documentation`            |    üìù Documentation     ||            `dependencies`             | ‚¨ÜÔ∏è Dependencies updates |You can update it in [`release-drafter.yml`](https://github.com/crypdick/ubuntu-namer/blob/master/.github/release-drafter.yml).GitHub creates the `bug`, `enhancement`, and `documentation` labels for you. Dependabot creates the `dependencies` label. Create the remaining labels on the Issues tab of your GitHub repository, when you need them.## üõ° License[![License](https://img.shields.io/github/license/crypdick/ubuntu-namer)](https://github.com/crypdick/ubuntu-namer/blob/master/LICENSE)This project is licensed under the terms of the `MIT` license. See [LICENSE](https://github.com/crypdick/ubuntu-namer/blob/master/LICENSE) for more details.## üìÉ Citation```bibtex@misc{ubuntu-namer,  author = {ubuntu-namer},  title = {Awesome `ubuntu-namer` is a Python cli/package created with https://github.com/TezRomacH/python-package-template},  year = {2022},  publisher = {GitHub},  journal = {GitHub repository},  howpublished = {\url{https://github.com/crypdick/ubuntu-namer}}}```## Credits [![üöÄ Your next Python package needs a bleeding-edge project structure.](https://img.shields.io/badge/python--package--template-%F0%9F%9A%80-brightgreen)](https://github.com/TezRomacH/python-package-template)This project was generated with [`python-package-template`](https://github.com/TezRomacH/python-package-template)</longdescription>
</pkgmetadata>