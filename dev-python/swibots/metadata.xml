<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Logo](https://raw.githubusercontent.com/switchcollab/Switch-Bots-Python-Library/main/docs/static/img/switch-logo.png)# SwiBotsPython library for switch appPlease check the [documentation](https://switchcollab.github.io/Switch-Bots-Python-Library) for more information.# Quick startLet's discover **SwiBots in less than 5 minutes**.## Getting StartedYou can start building your first app with SwiBots in less than 5 minutes.1. Install swibots library```bashpip install swibots```2. Open the editor of your choice and create a python file echobot.py (or whatever name you want!), and paste the following code:```python title=&quot;echobot.py&quot;from swibots import (    BotApp,    BotContext,    MessageEvent)TOKEN = &quot;MY SUPER SECRET TOKEN&quot;# initialize the app and register commandsapp = BotApp(    TOKEN, &quot;A cool bot with annotations and everything you could possibly want :)&quot;)@app.on_message()async def message_handler(ctx: BotContext[MessageEvent]):    # easy way to prepare a mesage that is a response of an incomming message    m = await ctx.prepare_response_message(ctx.event.message)    m.message = f&quot;Thank you! I received your message: {ctx.event.message.message}&quot;    # send the message back to the user    await ctx.send_message(m)app.run()```3. Save your file and run it```bashpython echobot.py```4. Open your switch app and send a message to the bot ```Hello world!```5. You will receive a reply from your bot saying ```Thank you! I received your message: Hello world! ```</longdescription>
</pkgmetadata>