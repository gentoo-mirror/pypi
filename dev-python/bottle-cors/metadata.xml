<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># bottle-corsSimple plugin to easily enable [CORS](https://www.moesif.com/blog/technical/cors/Authoritative-Guide-to-CORS-Cross-Origin-Resource-Sharing-for-REST-APIs/) support in [Bottle](https://bottlepy.org/) routes.### Example```pythonfrom bottle import Bottle, request, runfrom truckpad.bottle.cors import CorsPlugin, enable_corsapp = Bottle()@app.get('/')def index():    &quot;&quot;&quot;    CORS is disabled for this route    &quot;&quot;&quot;    return &quot;cors is disabled here&quot;@enable_cors@app.get('/endpoint_1')def endpoint_1():    &quot;&quot;&quot;    CORS is enabled for this route.     OPTIONS requests will be handled by the plugin itself    &quot;&quot;&quot;    return &quot;cors is enabled, OPTIONS handled by plugin&quot;@enable_cors@app.route('/endpoint_2', method=['GET', 'POST', 'OPTIONS'])def endpoint_2():    &quot;&quot;&quot;    CORS is enabled for this route.     OPTIONS requests will be handled by *you*    &quot;&quot;&quot;    if request.method == 'OPTIONS':        # do something here?        pass    return &quot;cors is enabled, OPTIONS handled by you!&quot;app.install(CorsPlugin(origins=['http://list.of.allowed.domains.com', 'https://another.domain.org']))run(app)```</longdescription>
</pkgmetadata>