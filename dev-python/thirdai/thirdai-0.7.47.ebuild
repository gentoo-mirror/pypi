# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=wheel

inherit python-r1 gs-pypi

DESCRIPTION="A faster cpu machine learning library [wheel]"

HOMEPAGE=""
LICENSE="proprietary"
SRC_URI="https://files.pythonhosted.org/packages/cp311/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
SOURCEFILE="${REALNAME}-${REALVERSION}-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="benchmark docs neural-db neural-db-v2 test"
DEPENDENCIES="dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/typing-extensions[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	<=dev-python/pandas-2.1.4[${PYTHON_USEDEP}]
	dev-python/pytrie[${PYTHON_USEDEP}]
	dev-python/PyMuPDF[${PYTHON_USEDEP}]
	dev-python/langchain[${PYTHON_USEDEP}]
	dev-python/bs4[${PYTHON_USEDEP}]
	dev-python/trafilatura[${PYTHON_USEDEP}]
	dev-python/python-docx[${PYTHON_USEDEP}]
	dev-python/url-normalize[${PYTHON_USEDEP}]
	dev-python/nltk[${PYTHON_USEDEP}]
	dev-python/dask[${PYTHON_USEDEP}]
	dev-python/unidecode[${PYTHON_USEDEP}]
	<dev-python/pydantic-2.5[${PYTHON_USEDEP}]
	dev-python/sortedcontainers[${PYTHON_USEDEP}]
	>=dev-python/sqlalchemy-2.0.0[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	dev-python/Office365-REST-Python-Client[${PYTHON_USEDEP}]
	dev-python/simple-salesforce[${PYTHON_USEDEP}]
	dev-python/ipython[${PYTHON_USEDEP}]
	dev-python/pdfplumber[${PYTHON_USEDEP}]
	dev-python/lxml[${PYTHON_USEDEP}]
	dev-python/openai[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	benchmark? ( dev-python/toml[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/psutil[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/boto3[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/gcsfs[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/nltk[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/ray[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/torch[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/unstructured[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/pytrie[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/PyMuPDF[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/langchain[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/bs4[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/trafilatura[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/python-docx[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/url-normalize[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/dask[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	benchmark? ( <dev-python/pydantic-2.5[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/sortedcontainers[${PYTHON_USEDEP}] )
	benchmark? ( >=dev-python/sqlalchemy-2.0.0[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/Office365-REST-Python-Client[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/simple-salesforce[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/ipython[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/pdfplumber[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/lxml[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/openai[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	docs? ( >dev-python/sphinx-5.2.0_p0[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	docs? ( dev-python/pytrie[${PYTHON_USEDEP}] )
	docs? ( dev-python/PyMuPDF[${PYTHON_USEDEP}] )
	docs? ( dev-python/langchain[${PYTHON_USEDEP}] )
	docs? ( dev-python/bs4[${PYTHON_USEDEP}] )
	docs? ( dev-python/trafilatura[${PYTHON_USEDEP}] )
	docs? ( dev-python/python-docx[${PYTHON_USEDEP}] )
	docs? ( dev-python/url-normalize[${PYTHON_USEDEP}] )
	docs? ( dev-python/nltk[${PYTHON_USEDEP}] )
	docs? ( dev-python/dask[${PYTHON_USEDEP}] )
	docs? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	docs? ( <dev-python/pydantic-2.5[${PYTHON_USEDEP}] )
	docs? ( dev-python/sortedcontainers[${PYTHON_USEDEP}] )
	docs? ( >=dev-python/sqlalchemy-2.0.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	docs? ( dev-python/Office365-REST-Python-Client[${PYTHON_USEDEP}] )
	docs? ( dev-python/simple-salesforce[${PYTHON_USEDEP}] )
	docs? ( dev-python/ipython[${PYTHON_USEDEP}] )
	docs? ( dev-python/pdfplumber[${PYTHON_USEDEP}] )
	docs? ( dev-python/lxml[${PYTHON_USEDEP}] )
	docs? ( dev-python/openai[${PYTHON_USEDEP}] )
	docs? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/pytrie[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/PyMuPDF[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/langchain[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/bs4[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/trafilatura[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/python-docx[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/url-normalize[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/nltk[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/dask[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	neural-db? ( <dev-python/pydantic-2.5[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/sortedcontainers[${PYTHON_USEDEP}] )
	neural-db? ( >=dev-python/sqlalchemy-2.0.0[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/Office365-REST-Python-Client[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/simple-salesforce[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/ipython[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/pdfplumber[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/lxml[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/openai[${PYTHON_USEDEP}] )
	neural-db? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	neural-db-v2? ( dev-python/pandas[${PYTHON_USEDEP}] )
	neural-db-v2? ( dev-python/pandera[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-mock[${PYTHON_USEDEP}] )
	test? ( dev-python/boto3[${PYTHON_USEDEP}] )
	test? ( dev-python/moto[${PYTHON_USEDEP}] )
	test? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	test? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	test? ( dev-python/datasets[${PYTHON_USEDEP}] )
	test? ( dev-python/torch[${PYTHON_USEDEP}] )
	test? ( dev-python/toml[${PYTHON_USEDEP}] )
	test? ( dev-python/psutil[${PYTHON_USEDEP}] )
	test? ( dev-python/transformers[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pandas-2.0.0[${PYTHON_USEDEP}] )
	test? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	test? ( dev-python/tokenizers[${PYTHON_USEDEP}] )
	test? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	test? ( dev-python/prometheus-client[${PYTHON_USEDEP}] )
	test? ( dev-python/gcsfs[${PYTHON_USEDEP}] )
	test? ( dev-python/s3fs[${PYTHON_USEDEP}] )
	test? ( dev-python/mock[${PYTHON_USEDEP}] )
	test? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	test? ( dev-python/beir[${PYTHON_USEDEP}] )
	test? ( >dev-python/pyopenssl-22.1.0[${PYTHON_USEDEP}] )
	test? ( dev-python/ray[${PYTHON_USEDEP}] )
	test? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	test? ( dev-python/unstructured[${PYTHON_USEDEP}] )
	test? ( dev-python/pytrie[${PYTHON_USEDEP}] )
	test? ( dev-python/PyMuPDF[${PYTHON_USEDEP}] )
	test? ( dev-python/langchain[${PYTHON_USEDEP}] )
	test? ( dev-python/bs4[${PYTHON_USEDEP}] )
	test? ( dev-python/trafilatura[${PYTHON_USEDEP}] )
	test? ( dev-python/python-docx[${PYTHON_USEDEP}] )
	test? ( dev-python/url-normalize[${PYTHON_USEDEP}] )
	test? ( dev-python/nltk[${PYTHON_USEDEP}] )
	test? ( dev-python/dask[${PYTHON_USEDEP}] )
	test? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	test? ( <dev-python/pydantic-2.5[${PYTHON_USEDEP}] )
	test? ( dev-python/sortedcontainers[${PYTHON_USEDEP}] )
	test? ( >=dev-python/sqlalchemy-2.0.0[${PYTHON_USEDEP}] )
	test? ( dev-python/Office365-REST-Python-Client[${PYTHON_USEDEP}] )
	test? ( dev-python/simple-salesforce[${PYTHON_USEDEP}] )
	test? ( dev-python/ipython[${PYTHON_USEDEP}] )
	test? ( dev-python/pdfplumber[${PYTHON_USEDEP}] )
	test? ( dev-python/lxml[${PYTHON_USEDEP}] )
	test? ( dev-python/openai[${PYTHON_USEDEP}] )
	test? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	test? ( dev-python/pandas[${PYTHON_USEDEP}] )
	test? ( dev-python/pandera[${PYTHON_USEDEP}] )
	virtual/allow-pypi-wheels"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
