<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Pycord======.. image:: https://img.shields.io/discord/881207955029110855?label=discord&amp;style=for-the-badge&amp;logo=discord&amp;color=5865F2&amp;logoColor=white   :target: https://pycord.dev/discord   :alt: Discord server invite.. image:: https://img.shields.io/pypi/v/py-cord.svg?style=for-the-badge&amp;logo=pypi&amp;color=yellowgreen&amp;logoColor=white   :target: https://pypi.python.org/pypi/py-cord   :alt: PyPI version info.. image:: https://img.shields.io/pypi/pyversions/py-cord.svg?style=for-the-badge&amp;logo=python&amp;logoColor=white   :target: https://pypi.python.org/pypi/py-cord   :alt: PyPI supported Python versions.. image:: https://img.shields.io/pypi/dm/py-cord?color=blueviolet&amp;logo=pypi&amp;logoColor=white&amp;style=for-the-badge   :target: https://pypi.python.org/pypi/py-cord   :alt: PyPI downloads.. image:: https://img.shields.io/github/v/release/Pycord-Development/pycord?include_prereleases&amp;label=Latest%20Release&amp;logo=github&amp;sort=semver&amp;style=for-the-badge&amp;logoColor=white   :target: https://github.com/Pycord-Development/pycord/releases   :alt: Latest releaseA fork of discord.py. Pycord is a modern, easy to use, feature-rich, and async ready API wrapper for Discord written in Python.Key Features------------- Modern Pythonic API using ``async`` and ``await``.- Proper rate limit handling.- Optimised for both speed and memory usage.- Full Application Command SupportInstalling----------**Python 3.8 or higher is required**To install the library without full voice support, run the following command:.. code:: sh    # Linux/macOS    python3 -m pip install -U py-cord    # Windows    py -3 -m pip install -U py-cordOtherwise, to get full voice support, run the following command:.. code:: sh    # Linux/macOS    python3 -m pip install -U &quot;py-cord[voice]&quot;    # Windows    py -3 -m pip install -U py-cord[voice]To install additional packages for speedup, run the following command:.. code:: sh    # Linux/macOS    python3 -m pip install -U &quot;py-cord[speed]&quot;    # Windows    py -3 -m pip install -U py-cord[speed]To install the development version, do the following:.. code:: sh    $ git clone https://github.com/Pycord-Development/pycord    $ cd pycord    $ python3 -m pip install -U .[voice]or if you do not want to clone the repository:.. code:: sh    # Linux/macOS    python3 -m pip install git+https://github.com/Pycord-Development/pycord    # Windows    py -3 -m pip install git+https://github.com/Pycord-Development/pycordOptional Packages~~~~~~~~~~~~~~~~~* `PyNaCl &lt;https://pypi.org/project/PyNaCl/&gt;`__ (for voice support)* `aiodns &lt;https://pypi.org/project/aiodns/&gt;`__, `brotlipy &lt;https://pypi.org/project/brotlipy/&gt;`__, `cchardet &lt;https://pypi.org/project/cchardet/&gt;`__ (for aiohttp speedup)* `orjson &lt;https://pypi.org/project/orjson/&gt;`__ (for json speedup)Please note that while installing voice support on Linux, you must install the following packages via your preferred package manager (e.g. ``apt``, ``dnf``, etc) BEFORE running the above commands:* libffi-dev (or ``libffi-devel`` on some systems)* python-dev (e.g. ``python3.10-dev`` for Python 3.10)Quick Example-------------.. code:: py    import discord    bot = discord.Bot()    @bot.slash_command()    async def hello(ctx, name: str = None):        name = name or ctx.author.name        await ctx.respond(f&quot;Hello {name}!&quot;)    @bot.user_command(name=&quot;Say Hello&quot;)    async def hi(ctx, user):        await ctx.respond(f&quot;{ctx.author.mention} says hello to {user.name}!&quot;)    bot.run(&quot;token&quot;)Traditional Commands Example~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: py    import discord    from discord.ext import commands    intents = discord.Intents.default()    intents.message_content = True    bot = commands.Bot(command_prefix=&quot;&gt;&quot;, intents=intents)    @bot.command()    async def ping(ctx):        await ctx.send(&quot;pong&quot;)    bot.run(&quot;token&quot;)You can find more code examples in the ``examples`` directory.Note: Make sure you do not reveal your bot token to anyone, as it can grant access to your bot.Useful Links------------- `Documentation &lt;https://docs.pycord.dev/en/master/index.html&gt;`_- `Learn how to create Discord bots with Pycord &lt;https://guide.pycord.dev&gt;`_- `Our Official Discord Server &lt;https://pycord.dev/discord&gt;`_- `Official Discord Developers Server &lt;https://discord.gg/discord-developers&gt;`_</longdescription>
</pkgmetadata>