<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Quart-Schema============|Build Status| |docs| |pypi| |python| |license|Quart-Schema is a Quart extension that provides schema validation andauto-generated API documentation. This is particularly useful whenwriting RESTful APIs.Quickstart----------Quart-Schema can validate an existing Quart route by decorating itwith ``validate_querystring``, ``validate_request``, or``validate_response``. It can also validate the JSON data sent andreceived over websockets using the ``send_as`` and ``receive_as``methods... code-block:: python    from dataclasses import dataclass    from datetime import datetime    from quart import Quart, websocket    from quart_schema import QuartSchema, validate_request, validate_response    app = Quart(__name__)    QuartSchema(app)    @dataclass    class Todo:        task: str        due: datetime | None    @app.post(&quot;/&quot;)    @validate_request(Todo)    @validate_response(Todo, 201)    async def create_todo(data: Todo) -&gt; tuple[Todo, int]:        ... # Do something with data, e.g. save to the DB        return data, 201    @app.websocket(&quot;/ws&quot;)    async def ws() -&gt; None:        while True:            data = await websocket.receive_as(Todo)            ... # Do something with data, e.g. save to the DB            await websocket.send_as(data, Todo)The documentation is served by default at ``/openapi.json`` accordingto the OpenAPI standard, or at ``/docs`` for a `SwaggerUI&lt;https://swagger.io/tools/swagger-ui/&gt;`_ interface, or ``/redocs`` fora `redoc &lt;https://github.com/Redocly/redoc&gt;`_ interface. Note thatthere is currently no documentation standard for WebSockets.Contributing------------Quart-Schema is developed on `GitHub&lt;https://github.com/pgjones/quart-schema&gt;`_. If you come across anissue, or have a feature request please open an `issue&lt;https://github.com/pgjones/quart-schema/issues&gt;`_. If you want tocontribute a fix or the feature-implementation please do (typo fixeswelcome), by proposing a `merge request&lt;https://github.com/pgjones/quart-schema/merge_requests&gt;`_.Testing~~~~~~~The best way to test Quart-Schema is with `Tox&lt;https://tox.readthedocs.io&gt;`_,.. code-block:: console    $ pip install tox    $ toxthis will check the code style and run the tests.Help----The Quart-Schema `documentation&lt;https://quart-schema.readthedocs.io&gt;`_ is the best places tostart, after that try searching `stack overflow&lt;https://stackoverflow.com/questions/tagged/quart&gt;`_ or ask for help`on gitter &lt;https://gitter.im/python-quart/lobby&gt;`_. If you stillcan't find an answer please `open an issue&lt;https://github.com/pgjones/quart-schema/issues&gt;`_... |Build Status| image:: https://github.com/pgjones/quart-schema/actions/workflows/ci.yml/badge.svg   :target: https://github.com/pgjones/quart-schema/commits/main.. |docs| image:: https://img.shields.io/badge/docs-passing-brightgreen.svg   :target: https://quart-schema.readthedocs.io.. |pypi| image:: https://img.shields.io/pypi/v/quart-schema.svg   :target: https://pypi.python.org/pypi/Quart-Schema/.. |python| image:: https://img.shields.io/pypi/pyversions/quart-schema.svg   :target: https://pypi.python.org/pypi/Quart-Schema/.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg   :target: https://github.com/pgjones/quart-schema/blob/main/LICENSE</longdescription>
</pkgmetadata>