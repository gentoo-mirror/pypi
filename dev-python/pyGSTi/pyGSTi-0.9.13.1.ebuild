# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="pygsti"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=wheel

inherit python-r1 gs-pypi

DESCRIPTION="A python implementation of Gate Set Tomography [wheel]"

HOMEPAGE="https://www.pygsti.info"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/cp310/${LITERALNAME::1}/${LITERALNAME}/${LITERALNAME}-${REALVERSION}-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl"
SOURCEFILE="${LITERALNAME}-${REALVERSION}-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="complete diamond-norm evolutionary-optimization extensions html-reports interpygate linting memory-profiling mongodb msgpack multiprocessor no-mpi notebooks pytorch report-pdf-figures reports testing testing-no-cython testing-no-cython-mpi"
DEPENDENCIES=">=dev-python/numpy-1.15.0[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/plotly[${PYTHON_USEDEP}]
	dev-python/pandas[${PYTHON_USEDEP}]
	dev-python/networkx[${PYTHON_USEDEP}]
	diamond-norm? ( dev-python/cvxopt[${PYTHON_USEDEP}] )
	diamond-norm? ( dev-python/cvxpy[${PYTHON_USEDEP}] )
	evolutionary-optimization? ( dev-python/deap[${PYTHON_USEDEP}] )
	extensions? ( dev-python/cython[${PYTHON_USEDEP}] )
	html-reports? ( dev-python/jinja[${PYTHON_USEDEP}] )
	html-reports? ( dev-python/markupsafe[${PYTHON_USEDEP}] )
	interpygate? ( dev-python/csaps[${PYTHON_USEDEP}] )
	linting? ( dev-python/autopep8[${PYTHON_USEDEP}] )
	linting? ( dev-python/flake8[${PYTHON_USEDEP}] )
	memory-profiling? ( dev-python/psutil[${PYTHON_USEDEP}] )
	mongodb? ( dev-python/pymongo[${PYTHON_USEDEP}] )
	msgpack? ( dev-python/msgpack[${PYTHON_USEDEP}] )
	multiprocessor? ( dev-python/mpi4py[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/ipython[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/notebook[${PYTHON_USEDEP}] )
	notebooks? ( dev-python/jupyter-server[${PYTHON_USEDEP}] )
	pytorch? ( dev-python/torch[${PYTHON_USEDEP}] )
	report-pdf-figures? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	reports? ( dev-python/pyGSTi[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/pytest[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/nbval[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/packaging[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/zmq[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/ply[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/cirq-core[${PYTHON_USEDEP}] )
	testing-no-cython-mpi? ( dev-python/pyGSTi[${PYTHON_USEDEP}] )
	testing-no-cython? ( dev-python/pyGSTi[${PYTHON_USEDEP}] )
	testing? ( dev-python/pyGSTi[${PYTHON_USEDEP}] )
	no-mpi? ( dev-python/pyGSTi[${PYTHON_USEDEP}] )
	complete? ( dev-python/pyGSTi[${PYTHON_USEDEP}] )
	virtual/allow-pypi-wheels"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
