<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `schemainspect`: SQL Schema InspectionSchema inspection for PostgreSQL (and potentially others in the future).Inspects tables, views, materialized views, constraints, indexes, sequences, enums, functions, and extensions. Handles table partitioning and inheritance.**Limitations:** Function inspection only confirmed to work with SQL/PLPGSQL languages so far.## Basic UsageGet an inspection object from an already opened SQLAlchemy session or connection as follows:    from schemainspect import get_inspector    from sqlbag import S    with S('postgresql:///example') as s:        i = get_inspector(s)The inspection object has attributes for tables, views, and all the other things it tracks. At each of these attributes you'll find a dictionary (OrderedDict) mapping from fully-qualified-and-quoted-name-of-thing-in-database to information object.For instance, the information about a table *books* would be accessed as follows:    &gt;&gt;&gt; books_table = i.tables['&quot;public&quot;.&quot;books&quot;']    &gt;&gt;&gt; books_table.name    'books'    &gt;&gt;&gt; books_table.schema    'public'    &gt;&gt;&gt; [each.name for each in books_table.columns]    ['id', 'title', 'isbn']## DocumentationDocumentation is a bit patchy at the moment. Watch this space!## Author CreditsInitial development, maintenance:- [djrobstep](https://github.com/djrobstep)Contributions:- [BenSjoberg](https://github.com/BenSjoberg)- [johto](https://github.com/johto)## InstallInstall with [pip](https://pip.pypa.io):    $ pip install schemainspectTo install psycopg2 (the PostgreSQL driver) at the same time as well:    $ pip install schemainspect[pg]</longdescription>
</pkgmetadata>