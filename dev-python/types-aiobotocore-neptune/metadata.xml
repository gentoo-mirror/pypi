<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;types-aiobotocore-neptune&quot;&gt;&lt;/a&gt;# types-aiobotocore-neptune[![PyPI - types-aiobotocore-neptune](https://img.shields.io/pypi/v/types-aiobotocore-neptune.svg?color=blue)](https://pypi.org/project/types-aiobotocore-neptune)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-neptune.svg?color=blue)](https://pypi.org/project/types-aiobotocore-neptune)[![Docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_neptune/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-neptune?color=blue)](https://pypistats.org/packages/types-aiobotocore-neptune)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[aiobotocore.Neptune 2.5.1](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/neptune.html#Neptune)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in[types-aiobotocore-neptune docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_neptune/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [types-aiobotocore-neptune](#types-aiobotocore-neptune)  - [How to install](#how-to-install)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Waiters annotations](#waiters-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `types-aiobotocore` for `Neptune` service.```bash# install with aiobotocore type annotationspython -m pip install 'types-aiobotocore[neptune]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'types-aiobotocore-lite[neptune]'# standalone installationpython -m pip install types-aiobotocore-neptune```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y types-aiobotocore-neptune```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `types-aiobotocore[neptune]` in your environment:```bashpython -m pip install 'types-aiobotocore[neptune]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `aiobotocore` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `types-aiobotocore-lite[neptune]` in your environment:```bashpython -m pip install 'types-aiobotocore-lite[neptune]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `types-aiobotocore` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `types-aiobotocore` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[neptune]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed  `types-aiobotocore`Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `types-aiobotocore[neptune]` with services you use in your  environment:```bashpython -m pip install 'types-aiobotocore[neptune]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `types-aiobotocore[neptune]` in your environment:```bashpython -m pip install 'types-aiobotocore[neptune]'````Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `types-aiobotocore[neptune]` in your environment:```bashpython -m pip install 'types-aiobotocore[neptune]'```Optionally, you can install `types-aiobotocore` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`NeptuneClient` provides annotations for `session.create_client(&quot;neptune&quot;)`.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_neptune import NeptuneClientsession = get_session()async with session.create_client(&quot;neptune&quot;) as client:    client: NeptuneClient    # now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`types_aiobotocore_neptune.paginator` module contains type annotations for allpaginators.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_neptune import NeptuneClientfrom types_aiobotocore_neptune.paginator import (    DescribeDBClusterEndpointsPaginator,    DescribeDBClusterParameterGroupsPaginator,    DescribeDBClusterParametersPaginator,    DescribeDBClusterSnapshotsPaginator,    DescribeDBClustersPaginator,    DescribeDBEngineVersionsPaginator,    DescribeDBInstancesPaginator,    DescribeDBParameterGroupsPaginator,    DescribeDBParametersPaginator,    DescribeDBSubnetGroupsPaginator,    DescribeEngineDefaultParametersPaginator,    DescribeEventSubscriptionsPaginator,    DescribeEventsPaginator,    DescribeGlobalClustersPaginator,    DescribeOrderableDBInstanceOptionsPaginator,    DescribePendingMaintenanceActionsPaginator,)session = get_session()async with session.create_client(&quot;neptune&quot;) as client:    client: NeptuneClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    describe_db_cluster_endpoints_paginator: DescribeDBClusterEndpointsPaginator = (        client.get_paginator(&quot;describe_db_cluster_endpoints&quot;)    )    describe_db_cluster_parameter_groups_paginator: DescribeDBClusterParameterGroupsPaginator = (        client.get_paginator(&quot;describe_db_cluster_parameter_groups&quot;)    )    describe_db_cluster_parameters_paginator: DescribeDBClusterParametersPaginator = (        client.get_paginator(&quot;describe_db_cluster_parameters&quot;)    )    describe_db_cluster_snapshots_paginator: DescribeDBClusterSnapshotsPaginator = (        client.get_paginator(&quot;describe_db_cluster_snapshots&quot;)    )    describe_db_clusters_paginator: DescribeDBClustersPaginator = client.get_paginator(        &quot;describe_db_clusters&quot;    )    describe_db_engine_versions_paginator: DescribeDBEngineVersionsPaginator = client.get_paginator(        &quot;describe_db_engine_versions&quot;    )    describe_db_instances_paginator: DescribeDBInstancesPaginator = client.get_paginator(        &quot;describe_db_instances&quot;    )    describe_db_parameter_groups_paginator: DescribeDBParameterGroupsPaginator = (        client.get_paginator(&quot;describe_db_parameter_groups&quot;)    )    describe_db_parameters_paginator: DescribeDBParametersPaginator = client.get_paginator(        &quot;describe_db_parameters&quot;    )    describe_db_subnet_groups_paginator: DescribeDBSubnetGroupsPaginator = client.get_paginator(        &quot;describe_db_subnet_groups&quot;    )    describe_engine_default_parameters_paginator: DescribeEngineDefaultParametersPaginator = (        client.get_paginator(&quot;describe_engine_default_parameters&quot;)    )    describe_event_subscriptions_paginator: DescribeEventSubscriptionsPaginator = (        client.get_paginator(&quot;describe_event_subscriptions&quot;)    )    describe_events_paginator: DescribeEventsPaginator = client.get_paginator(&quot;describe_events&quot;)    describe_global_clusters_paginator: DescribeGlobalClustersPaginator = client.get_paginator(        &quot;describe_global_clusters&quot;    )    describe_orderable_db_instance_options_paginator: DescribeOrderableDBInstanceOptionsPaginator = client.get_paginator(        &quot;describe_orderable_db_instance_options&quot;    )    describe_pending_maintenance_actions_paginator: DescribePendingMaintenanceActionsPaginator = (        client.get_paginator(&quot;describe_pending_maintenance_actions&quot;)    )```&lt;a id=&quot;waiters-annotations&quot;&gt;&lt;/a&gt;### Waiters annotations`types_aiobotocore_neptune.waiter` module contains type annotations for allwaiters.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_neptune.client import NeptuneClientfrom types_aiobotocore_neptune.waiter import DBInstanceAvailableWaiter, DBInstanceDeletedWaitersession = get_session()async with session.create_client(&quot;neptune&quot;) as client:    client: NeptuneClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    db_instance_available_waiter: DBInstanceAvailableWaiter = client.get_waiter(        &quot;db_instance_available&quot;    )    db_instance_deleted_waiter: DBInstanceDeletedWaiter = client.get_waiter(&quot;db_instance_deleted&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`types_aiobotocore_neptune.literals` module contains literals extracted fromshapes that can be used in user code for type checking.```pythonfrom types_aiobotocore_neptune.literals import (    ApplyMethodType,    DBInstanceAvailableWaiterName,    DBInstanceDeletedWaiterName,    DescribeDBClusterEndpointsPaginatorName,    DescribeDBClusterParameterGroupsPaginatorName,    DescribeDBClusterParametersPaginatorName,    DescribeDBClusterSnapshotsPaginatorName,    DescribeDBClustersPaginatorName,    DescribeDBEngineVersionsPaginatorName,    DescribeDBInstancesPaginatorName,    DescribeDBParameterGroupsPaginatorName,    DescribeDBParametersPaginatorName,    DescribeDBSubnetGroupsPaginatorName,    DescribeEngineDefaultParametersPaginatorName,    DescribeEventSubscriptionsPaginatorName,    DescribeEventsPaginatorName,    DescribeGlobalClustersPaginatorName,    DescribeOrderableDBInstanceOptionsPaginatorName,    DescribePendingMaintenanceActionsPaginatorName,    SourceTypeType,    NeptuneServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    WaiterName,    RegionName,)def check_value(value: ApplyMethodType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`types_aiobotocore_neptune.type_defs` module contains structures and shapesassembled to typed dictionaries for additional type checking.```pythonfrom types_aiobotocore_neptune.type_defs import (    AddRoleToDBClusterMessageRequestTypeDef,    AddSourceIdentifierToSubscriptionMessageRequestTypeDef,    EventSubscriptionTypeDef,    TagTypeDef,    ApplyPendingMaintenanceActionMessageRequestTypeDef,    AvailabilityZoneTypeDef,    CharacterSetTypeDef,    CloudwatchLogsExportConfigurationTypeDef,    PendingCloudwatchLogsExportsTypeDef,    DBClusterParameterGroupTypeDef,    DBClusterSnapshotTypeDef,    DBParameterGroupTypeDef,    CreateDBClusterEndpointOutputTypeDef,    ServerlessV2ScalingConfigurationTypeDef,    CreateGlobalClusterMessageRequestTypeDef,    DBClusterEndpointTypeDef,    DBClusterMemberTypeDef,    DBClusterOptionGroupStatusTypeDef,    ParameterTypeDef,    DBClusterParameterGroupNameMessageTypeDef,    DBClusterRoleTypeDef,    DBClusterSnapshotAttributeTypeDef,    ServerlessV2ScalingConfigurationInfoTypeDef,    VpcSecurityGroupMembershipTypeDef,    TimezoneTypeDef,    UpgradeTargetTypeDef,    DBInstanceStatusInfoTypeDef,    DBParameterGroupStatusTypeDef,    DBSecurityGroupMembershipTypeDef,    DomainMembershipTypeDef,    EndpointTypeDef,    OptionGroupMembershipTypeDef,    DBParameterGroupNameMessageTypeDef,    DeleteDBClusterEndpointMessageRequestTypeDef,    DeleteDBClusterEndpointOutputTypeDef,    DeleteDBClusterMessageRequestTypeDef,    DeleteDBClusterParameterGroupMessageRequestTypeDef,    DeleteDBClusterSnapshotMessageRequestTypeDef,    DeleteDBInstanceMessageRequestTypeDef,    DeleteDBParameterGroupMessageRequestTypeDef,    DeleteDBSubnetGroupMessageRequestTypeDef,    DeleteEventSubscriptionMessageRequestTypeDef,    DeleteGlobalClusterMessageRequestTypeDef,    FilterTypeDef,    DescribeDBClusterSnapshotAttributesMessageRequestTypeDef,    WaiterConfigTypeDef,    DescribeGlobalClustersMessageDescribeGlobalClustersPaginateTypeDef,    DescribeGlobalClustersMessageRequestTypeDef,    DescribeValidDBInstanceModificationsMessageRequestTypeDef,    DoubleRangeTypeDef,    EmptyResponseMetadataTypeDef,    EventCategoriesMapTypeDef,    EventTypeDef,    FailoverDBClusterMessageRequestTypeDef,    FailoverGlobalClusterMessageRequestTypeDef,    GlobalClusterMemberTypeDef,    ModifyDBClusterEndpointMessageRequestTypeDef,    ModifyDBClusterEndpointOutputTypeDef,    ModifyDBClusterSnapshotAttributeMessageRequestTypeDef,    ModifyDBSubnetGroupMessageRequestTypeDef,    ModifyEventSubscriptionMessageRequestTypeDef,    ModifyGlobalClusterMessageRequestTypeDef,    PaginatorConfigTypeDef,    PendingMaintenanceActionTypeDef,    PromoteReadReplicaDBClusterMessageRequestTypeDef,    RangeTypeDef,    RebootDBInstanceMessageRequestTypeDef,    RemoveFromGlobalClusterMessageRequestTypeDef,    RemoveRoleFromDBClusterMessageRequestTypeDef,    RemoveSourceIdentifierFromSubscriptionMessageRequestTypeDef,    RemoveTagsFromResourceMessageRequestTypeDef,    ResponseMetadataTypeDef,    StartDBClusterMessageRequestTypeDef,    StopDBClusterMessageRequestTypeDef,    AddSourceIdentifierToSubscriptionResultTypeDef,    CreateEventSubscriptionResultTypeDef,    DeleteEventSubscriptionResultTypeDef,    EventSubscriptionsMessageTypeDef,    ModifyEventSubscriptionResultTypeDef,    RemoveSourceIdentifierFromSubscriptionResultTypeDef,    AddTagsToResourceMessageRequestTypeDef,    CopyDBClusterParameterGroupMessageRequestTypeDef,    CopyDBClusterSnapshotMessageRequestTypeDef,    CopyDBParameterGroupMessageRequestTypeDef,    CreateDBClusterEndpointMessageRequestTypeDef,    CreateDBClusterParameterGroupMessageRequestTypeDef,    CreateDBClusterSnapshotMessageRequestTypeDef,    CreateDBInstanceMessageRequestTypeDef,    CreateDBParameterGroupMessageRequestTypeDef,    CreateDBSubnetGroupMessageRequestTypeDef,    CreateEventSubscriptionMessageRequestTypeDef,    TagListMessageTypeDef,    OrderableDBInstanceOptionTypeDef,    SubnetTypeDef,    ModifyDBInstanceMessageRequestTypeDef,    ClusterPendingModifiedValuesTypeDef,    PendingModifiedValuesTypeDef,    CopyDBClusterParameterGroupResultTypeDef,    CreateDBClusterParameterGroupResultTypeDef,    DBClusterParameterGroupsMessageTypeDef,    CopyDBClusterSnapshotResultTypeDef,    CreateDBClusterSnapshotResultTypeDef,    DBClusterSnapshotMessageTypeDef,    DeleteDBClusterSnapshotResultTypeDef,    CopyDBParameterGroupResultTypeDef,    CreateDBParameterGroupResultTypeDef,    DBParameterGroupsMessageTypeDef,    CreateDBClusterMessageRequestTypeDef,    ModifyDBClusterMessageRequestTypeDef,    RestoreDBClusterFromSnapshotMessageRequestTypeDef,    RestoreDBClusterToPointInTimeMessageRequestTypeDef,    DBClusterEndpointMessageTypeDef,    DBClusterParameterGroupDetailsTypeDef,    DBParameterGroupDetailsTypeDef,    EngineDefaultsTypeDef,    ModifyDBClusterParameterGroupMessageRequestTypeDef,    ModifyDBParameterGroupMessageRequestTypeDef,    ResetDBClusterParameterGroupMessageRequestTypeDef,    ResetDBParameterGroupMessageRequestTypeDef,    DBClusterSnapshotAttributesResultTypeDef,    DBEngineVersionTypeDef,    DescribeDBClusterEndpointsMessageDescribeDBClusterEndpointsPaginateTypeDef,    DescribeDBClusterEndpointsMessageRequestTypeDef,    DescribeDBClusterParameterGroupsMessageDescribeDBClusterParameterGroupsPaginateTypeDef,    DescribeDBClusterParameterGroupsMessageRequestTypeDef,    DescribeDBClusterParametersMessageDescribeDBClusterParametersPaginateTypeDef,    DescribeDBClusterParametersMessageRequestTypeDef,    DescribeDBClusterSnapshotsMessageDescribeDBClusterSnapshotsPaginateTypeDef,    DescribeDBClusterSnapshotsMessageRequestTypeDef,    DescribeDBClustersMessageDescribeDBClustersPaginateTypeDef,    DescribeDBClustersMessageRequestTypeDef,    DescribeDBEngineVersionsMessageDescribeDBEngineVersionsPaginateTypeDef,    DescribeDBEngineVersionsMessageRequestTypeDef,    DescribeDBInstancesMessageDescribeDBInstancesPaginateTypeDef,    DescribeDBInstancesMessageRequestTypeDef,    DescribeDBParameterGroupsMessageDescribeDBParameterGroupsPaginateTypeDef,    DescribeDBParameterGroupsMessageRequestTypeDef,    DescribeDBParametersMessageDescribeDBParametersPaginateTypeDef,    DescribeDBParametersMessageRequestTypeDef,    DescribeDBSubnetGroupsMessageDescribeDBSubnetGroupsPaginateTypeDef,    DescribeDBSubnetGroupsMessageRequestTypeDef,    DescribeEngineDefaultClusterParametersMessageRequestTypeDef,    DescribeEngineDefaultParametersMessageDescribeEngineDefaultParametersPaginateTypeDef,    DescribeEngineDefaultParametersMessageRequestTypeDef,    DescribeEventCategoriesMessageRequestTypeDef,    DescribeEventSubscriptionsMessageDescribeEventSubscriptionsPaginateTypeDef,    DescribeEventSubscriptionsMessageRequestTypeDef,    DescribeEventsMessageDescribeEventsPaginateTypeDef,    DescribeEventsMessageRequestTypeDef,    DescribeOrderableDBInstanceOptionsMessageDescribeOrderableDBInstanceOptionsPaginateTypeDef,    DescribeOrderableDBInstanceOptionsMessageRequestTypeDef,    DescribePendingMaintenanceActionsMessageDescribePendingMaintenanceActionsPaginateTypeDef,    DescribePendingMaintenanceActionsMessageRequestTypeDef,    ListTagsForResourceMessageRequestTypeDef,    DescribeDBInstancesMessageDBInstanceAvailableWaitTypeDef,    DescribeDBInstancesMessageDBInstanceDeletedWaitTypeDef,    EventCategoriesMessageTypeDef,    EventsMessageTypeDef,    GlobalClusterTypeDef,    ResourcePendingMaintenanceActionsTypeDef,    ValidStorageOptionsTypeDef,    OrderableDBInstanceOptionsMessageTypeDef,    DBSubnetGroupTypeDef,    DBClusterTypeDef,    DescribeEngineDefaultClusterParametersResultTypeDef,    DescribeEngineDefaultParametersResultTypeDef,    DescribeDBClusterSnapshotAttributesResultTypeDef,    ModifyDBClusterSnapshotAttributeResultTypeDef,    DBEngineVersionMessageTypeDef,    CreateGlobalClusterResultTypeDef,    DeleteGlobalClusterResultTypeDef,    FailoverGlobalClusterResultTypeDef,    GlobalClustersMessageTypeDef,    ModifyGlobalClusterResultTypeDef,    RemoveFromGlobalClusterResultTypeDef,    ApplyPendingMaintenanceActionResultTypeDef,    PendingMaintenanceActionsMessageTypeDef,    ValidDBInstanceModificationsMessageTypeDef,    CreateDBSubnetGroupResultTypeDef,    DBInstanceTypeDef,    DBSubnetGroupMessageTypeDef,    ModifyDBSubnetGroupResultTypeDef,    CreateDBClusterResultTypeDef,    DBClusterMessageTypeDef,    DeleteDBClusterResultTypeDef,    FailoverDBClusterResultTypeDef,    ModifyDBClusterResultTypeDef,    PromoteReadReplicaDBClusterResultTypeDef,    RestoreDBClusterFromSnapshotResultTypeDef,    RestoreDBClusterToPointInTimeResultTypeDef,    StartDBClusterResultTypeDef,    StopDBClusterResultTypeDef,    DescribeValidDBInstanceModificationsResultTypeDef,    CreateDBInstanceResultTypeDef,    DBInstanceMessageTypeDef,    DeleteDBInstanceResultTypeDef,    ModifyDBInstanceResultTypeDef,    RebootDBInstanceResultTypeDef,)def get_structure() -&gt; AddRoleToDBClusterMessageRequestTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for`aiobotocore` updates. It delivers drop-in type annotations for you and makessure that:- All available `aiobotocore` services are covered.- Each public class and method of every `aiobotocore` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`types-aiobotocore-neptune` version is the same as related `aiobotocore`version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_neptune/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>