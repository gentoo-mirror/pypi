<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># [Structured Matrices](http://github.com/wesselb/matrix)[![CI](https://github.com/wesselb/matrix/workflows/CI/badge.svg?branch=master)](https://github.com/wesselb/matrix/actions?query=workflow%3ACI)[![Coverage Status](https://coveralls.io/repos/github/wesselb/matrix/badge.svg?branch=master&amp;service=github)](https://coveralls.io/github/wesselb/matrix?branch=master)[![Latest Docs](https://img.shields.io/badge/docs-latest-blue.svg)](https://wesselb.github.io/matrix)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)Structured matrices## Requirements and InstallationSee [the instructions here](https://gist.github.com/wesselb/4b44bf87f3789425f96e26c4308d0adc).Then simply```bashpip install backends-matrix```## Example```python&gt;&gt;&gt; import lab as B&gt;&gt;&gt; from matrix import Diagonal&gt;&gt;&gt; d = Diagonal(B.rand(2, 3))  # A batch of diagonal marices&gt;&gt;&gt; d&lt;diagonal matrix: batch=(2,), shape=(3, 3), dtype=float64 diag=[[0.427 0.912 0.622]       [0.777 0.048 0.808]]&gt;&gt;&gt;&gt; 2 * d&lt;diagonal matrix: batch=(2,), shape=(3, 3), dtype=float64 diag=[[0.854 1.824 1.243]       [1.553 0.096 1.616]]&gt;  &gt;&gt;&gt; 2 * d + 1&lt;Woodbury matrix: batch=(2,), shape=(3, 3), dtype=float64 diag=&lt;diagonal matrix: batch=(2,), shape=(3, 3), dtype=float64       diag=[[0.854 1.824 1.243]             [1.553 0.096 1.616]]&gt; lr=&lt;low-rank matrix: batch=(), shape=(3, 3), dtype=int64, rank=1     left=[[1]           [1]           [1]]     middle=&lt;diagonal matrix: batch=(), shape=(1, 1), dtype=int64             diag=[1]&gt;&gt;&gt;&gt;&gt;&gt; B.inv(2 * d + 1)&lt;Woodbury matrix: batch=(2,), shape=(3, 3), dtype=float64 diag=&lt;diagonal matrix: batch=(2,), shape=(3, 3), dtype=float64       diag=[[ 1.171  0.548  0.804]             [ 0.644 10.386  0.619]]&gt; lr=&lt;low-rank matrix: batch=(2,), shape=(3, 3), dtype=float64, rank=1     left=&lt;dense matrix: batch=(2,), shape=(3, 1), dtype=float64           mat=[[[ 1.171]                 [ 0.548]                 [ 0.804]]                [[ 0.644]                 [10.386]                 [ 0.619]]]&gt;     middle=&lt;dense matrix: batch=(2,), shape=(1, 1), dtype=float64             mat=[[[-0.284]]                  [[-0.079]]]&gt;     right=&lt;dense matrix: batch=(2,), shape=(3, 1), dtype=float64            mat=[[[ 1.171]                  [ 0.548]                  [ 0.804]]                 [[ 0.644]                  [10.386]                  [ 0.619]]]&gt;&gt;&gt;&gt;&gt;&gt; B.inv(B.inv(2 * d + 1))&lt;Woodbury matrix: batch=(2,), shape=(3, 3), dtype=float64 diag=&lt;diagonal matrix: batch=(2,), shape=(3, 3), dtype=float64       diag=[[0.854 1.824 1.243]             [1.553 0.096 1.616]]&gt; lr=&lt;low-rank matrix: batch=(2,), shape=(3, 3), dtype=float64, rank=1     left=&lt;dense matrix: batch=(2,), shape=(3, 1), dtype=float64           mat=[[[1.]                 [1.]                 [1.]]                [[1.]                 [1.]                 [1.]]]&gt;     middle=&lt;dense matrix: batch=(2,), shape=(1, 1), dtype=float64             mat=[[[1.]]                  [[1.]]]&gt;     right=&lt;dense matrix: batch=(2,), shape=(3, 1), dtype=float64            mat=[[[1.]                  [1.]                  [1.]]                 [[1.]                  [1.]                  [1.]]]&gt;&gt;&gt;&gt;&gt;&gt; B.inv(B.inv(2 * d + 1)) - 1&lt;diagonal matrix: batch=(2,), shape=(3, 3), dtype=float64 diag=[[0.854 1.824 1.243]       [1.553 0.096 1.616]]&gt;```## Matrix TypesAll matrix types are subclasses of `AbstractMatrix`.The following base types are provided:```ZeroDenseDiagonalConstantLowerTriangularUpperTriangular```The following composite types are provided:```LowRankWoodburyKroneckerTiledBlocks```## FunctionsThe following functions are added to LAB.They can be accessed with `B.&lt;function&gt;` where `import lab as B`.```shape_broadcast(*elements)shape_batch(a, *indices)shape_batch_broadcast(*elements)shape_matrix(a, *indices)shape_matrix_broadcast(*elements)broadcast_batch_to(a, *batch)dense(a)fill_diag(a, diag_len)block(*rows)block_diag(*blocks)matmul_diag(a, b, tr_a=False, tr_b=False)pd_inv(a)schur(a)pd_schur(a)iqf(a, b, c)iqf_diag(a, b, c)ratio(a, c)root(a)sample(a, num=1)```</longdescription>
</pkgmetadata>