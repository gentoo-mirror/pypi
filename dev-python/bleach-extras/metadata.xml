<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Python package](https://github.com/jvanasco/bleach_extras/workflows/Python%20package/badge.svg)`bleach_extras` is a package of *unofficial* &quot;extras&quot; and utilities paired foruse with the `bleach` library.The first utility is `TagTreeFilter` which is utilized by `clean_strip_content`and `cleaner_factory__strip_content`.# Compatability`bleach_extras` currently requires `bleach&gt;=3.2.1` and `bleach&lt;5`.Earlier versions of `bleach` have security concerns; latter versions are notcompatible due to API changes (future support is planned).# `TagTreeFilter`, `clean_strip_content`, `cleaner_factory__strip_content``clean_strip_content` is paired to `bleach.clean`; the only intended differenceis to support the concept of stripping the content tree of tags -- not just thetagÂ node itself.  `cleaner_factory__strip_content` is a factory function used tocreate configured `bleach.Cleaner` instances.`bleach` has a `strip` flag that toggles the behavior of &quot;unsafe&quot; tags:`strip = False` will render the tags as escaped HTML encodings, such as thisreplacement:- foo.&lt;div&gt;1&lt;script&gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&lt;/script&gt;2&lt;/div&gt;.bar+ foo.&lt;div&gt;1&amp;lt;script&amp;gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&amp;lt;/script&amp;gt;2&lt;/div&gt;.bar`strip = True` will strip the tags, but leave the HTML within as plaintext:- foo.&lt;div&gt;1&lt;script&gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&lt;/script&gt;2&lt;/div&gt;.bar+ foo.&lt;div&gt;1alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);2&lt;/div&gt;.barMany users of `bleach` want to remove both the tag and contents of unsafe tagsfor a variety of reasons, such as:* escaping the tags make the text safe, but unreadable* leaving the tags' content without the tags negatively affects readability and  comprehension* leaving the tags' content allows a malicious user to still have some sort of  fallback payload which is displayed`clean_strip_content` is a function that mimics `bleach.clean` with a key difference:* tags destined for content stripping are fed into a `Cleaner` instance as allowed* the tags are stripped during the filter process via `TagTreeFilter`An expected transformation is such:- foo.&lt;div&gt;1&lt;script&gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&lt;/script&gt;2&lt;/div&gt;.bar+ foo.12.barLook at that! all the evil payload is gone, including the bitcoin wallet addressthat f---- spammers tried to slip through.## Why do this filtering with `bleach` and not something else ?Parsing/Tokenzing HTML is not very efficient. Performing this outside of `bleach`would require performing these operations on the HTML fragments at least twice.`bleach`'s design implementation encodes/strips 'unsafe' tags during theparsing/tokening process - before the plugin filtering process starts. In orderto filter the tags out correctly, they must be allowed during the generation ofthe DOM tree, then removed during the filter step. This trips a lot of people up;offering this in a public library with tests that can grow is ideal.Example:dangerous = &quot;&quot;&quot;foo.&lt;div&gt;1&lt;script&gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&lt;/script&gt;2&lt;/div&gt;.bar&quot;&quot;&quot;print(bleach.clean(dangerous, tags=['div', ], strip=False))# foo.&lt;div&gt;1&amp;lt;script&amp;gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&amp;lt;/script&amp;gt;2&lt;/div&gt;.barprint(bleach.clean(dangerous, tags=['div', ], strip=True))# foo.&lt;div&gt;1alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);2&lt;/div&gt;.barprint(bleach_extras.clean_strip_content(dangerous, tags=['div'], ))# foo.&lt;div&gt;12&lt;/div&gt;.barcleaner = bleach_extras.cleaner_factory__strip_content(tags=['div'],)print(cleaner.clean(dangerous))# foo.&lt;div&gt;12&lt;/div&gt;.barprint(bleach_extras.clean_strip_content(dangerous, tags=['div', ], strip=True, ))# foo.&lt;div&gt;12&lt;/div&gt;.bar## custom replacement of stripped nodesmaybe you need to replace the evil content with a warning. this &quot;extra&quot; has youcovered!dangerous2 = &quot;&quot;&quot;foo.&lt;div&gt;1&lt;script&gt;alert(&quot;ur komputer hs VIRUS! Giv me ur BITCOIN in 24 hours! Wallet is: abdefg!&quot;);&lt;iframe&gt;iiffrraammee&lt;/iframe&gt;&lt;/script&gt;2&lt;/div&gt;.bar&quot;&quot;&quot;class IFrameFilter2(bleach_extras.TagTreeFilter):tags_strip_content = ('script', 'style', 'iframe')tag_replace_string = &quot;&amp;lt;unsafe garbage/&amp;gt;&quot;print bleach_extras.clean_strip_content(dangerous2, tags=['div', ], filters=[IFrameFilter2, ])# foo.&lt;div&gt;1&amp;amp;lt;unsafe garbage/&amp;amp;gt;2&lt;/div&gt;.bar</longdescription>
</pkgmetadata>