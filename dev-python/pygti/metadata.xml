<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/9/9d/LogoHVV.svg&quot; width=&quot;200&quot; style=&quot;margin-right: 50px&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/GEOFOX-LOGO.jpg/320px-GEOFOX-LOGO.jpg&quot; width=&quot;120&quot;&gt;&lt;/div&gt;&lt;h2 align=&quot;center&quot;&gt;HVV Geofox Python Library&lt;/h2&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;&quot;&gt;&lt;img alt=&quot;Hamburg&quot; src=&quot;https://img.shields.io/badge/city-hamburg-e3000f&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/vigonotion/pygti/issues&quot;&gt;&lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues/vigonotion/pygti&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/vigonotion/pygti/releases&quot;&gt;&lt;img alt=&quot;Release&quot; src=&quot;https://img.shields.io/github/release/vigonotion/pygti&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://api-test.geofox.de/gti/doc/index.jsp&quot;&gt;&lt;img alt=&quot;GTI version: 38&quot; src=&quot;https://img.shields.io/badge/gti%20version-38-green.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://dev.azure.com/vigonotion/pygti/_build/latest?definitionId=1&amp;branchName=master&quot;&gt;&lt;img alt=&quot;Azure Pipelines status&quot; src=&quot;https://dev.azure.com/vigonotion/pygti/_apis/build/status/vigonotion.pygti?branchName=master&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;## AboutThis library is a python wrapper for accessing the geofox api. This api is used to get information about the public transport in Hamburg, Germany.## How to get the api credentialsYou have to apply for credentials via the HVV website. You can see their official guide [here](https://www.hvv.de/de/fahrplaene/abruf-fahrplaninfos/datenabruf) (the page is only available in German).They will send you a contract you will have to sign and send back. After about a week, you will receive your api credentials.## DocumentationThis library uses the same data types and parameters as specified in the [GTI documentation](https://api-test.geofox.de/gti/doc/index.jsp). It features client side validation of the parameters.## InstallationInstall the [package from pypi](https://pypi.org/project/pygti/).```pythonpip install pygti```## UsageSee the examples on how to use the library at [examples.py](https://github.com/vigonotion/pygti/blob/master/examples.py), and see the [GTI documentation](https://api-test.geofox.de/gti/doc/index.jsp) for in-depth explanation of parameters.There is also a [Glitch example](https://pygti-examples.glitch.me/) available. Try it out and if you want to see how it's done, just [remix the app](https://glitch.com/edit/#!/pygti-examples).A minimal working example is shown below:```pythonfrom pygti.gti import GTI, Authimport asyncioimport aiohttpGTI_USER = &quot;&quot; # your api usernameGTI_PASS = &quot;&quot; # your api passwordasync def main():    async with aiohttp.ClientSession() as session:        auth = Auth(session, GTI_USER, GTI_PASS)        gti = GTI(auth)        ir = await gti.init()        # see the examples.py file for more functionality and use of the payloadsasyncio.run(main())```&gt; :exclamation: **If using Python 3.8**: Version 3.6.2 of aiohttp uses a different EventLoopPolicy so running this MWE will currently result in an error displayed in the console! It should not affect the functionality. This should be fixed with a newer version of aiohttp. For a workaround look into the [examples.py](https://github.com/vigonotion/pygti/blob/master/examples.py) file. For more information see this [Issue](https://github.com/aio-libs/aiohttp/issues/4324).## Progress- [x] 1. init- [x] 2. checkName- [x] 3. getRoute- [x] 4. departureList- [x] 5. getTariff- [x] 6. departureCourse- [x] 7. listStations- [x] 8. listLines- [x] 9. getAnnouncements- [x] 10. getIndividualRoute- [x] 11a. getVehicleMap- [x] 11b. getTrackCoordinates- [x] 12. checkPostalCode- [x] 13. getStationInformation- [x] 14. tariffZoneNeighbours- [x] 15. tariffMetaData- [x] 16. singleTicketOptimizer- [x] 17. ticketList## DevelopingSome files in this project are generated based on the WADL and XSD schema files from GTI.To generate them, install the dev dependencies and run the script:```shpip install -r requirements_dev.txtpython script/generate.py```## Contributions are welcome!If you want to contribute to this, please read the [Contribution guidelines](CONTRIBUTING.md)</longdescription>
</pkgmetadata>