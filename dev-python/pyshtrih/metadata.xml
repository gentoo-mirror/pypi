<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PyShtrih--------|Version| |PyVersions| |License|Реализация драйвера семейства ККМ &quot;Штрих&quot; на Python.Содержание----------* `Установка`_* `Поддерживаемое оборудование`_* `Пример использования`_* `Поддерживаемые команды`_* `Лицензия`_Установка---------::    $ pip install pyshtrihПоддерживаемое оборудование---------------------------* ШТРИХ-ФР-К* ШТРИХ-ФР-ПТК* ШТРИХ-КОМБО-ФР-К* ШТРИХ-ПТК* ШТРИХ-LIGHT-ПТК* ШТРИХ-950К* ШТРИХ-ФР-01Ф* ШТРИХ-ON-LINE* ШТРИХ-М-01Ф* ШТРИХ-М-02Ф* ШТРИХ-ЛАЙТ-01Ф* ШТРИХ-ЛАЙТ-02Ф* ШТРИХ-МИНИ-01Ф* РИТЕЙЛ-01ФПример использования--------------------.. code-block:: python    import pyshtrih    def discovery_callback(port, baudrate):        print port, baudrate    if __name__ == '__main__':        devices = pyshtrih.discovery(discovery_callback)        if not devices:            raise Exception(u'Устройства не найдены')        # для простоты примера, предположим, что подключена только одна ККМ        device = devices[0]        device.connect()        print device.model()        print device.full_state()        device.open_check(0)        device.sale(            (u'Позиция 1', 1000, 1000), tax1=1        )        device.sale(            (u'Позиция 2', 1000, 2000), tax1=2        )        device.sale(            (u'Позиция 3', 1000, 3000), tax1=3        )        device.sale(            (u'Позиция 4', 1000, 4000), tax1=4        )        device.close_check(10000)        device.cut(True)        device.disconnect()Поддерживаемые команды----------------------**Внимание!** Набор команд зависит от конкретной модели оборудования.====== ========Код    Название====== ========0x10   Короткий запрос состояния ФР0x11   Запрос состояния ФР0x13   Гудок0x14   Установка параметров обмена0x15   Чтение параметров обмена0x16   Технологическое обнуление0x17   Печать строки0x19   Тестовый прогон0x1A   Запрос денежного регистра0x1B   Запрос операционного регистра0x1E   Запись таблицы0x1F   Чтение таблицы0x21   Программирование времени0x22   Программирование даты0x23   Подтверждение программирования даты0x25   Отрезка чека0x28   Открыть денежный ящик0x29   Протяжка0x2B   Прерывание тестового прогона0x2D   Запрос структуры таблицы0x2E   Запрос структуры поля0x40   Суточный отчет без гашения0x41   Суточный отчет с гашением0x50   Внесение0x51   Выплата0x80   Продажа0x82   Возврат продажи0x85   Закрытие чека0x86   Скидка0x87   Надбавка0x88   Аннулирование чека0x8C   Повтор документа0x8D   Открыть чек0xA0   Отчет ЭКЛЗ по отделам в заданном диапазоне дат0xA2   Отчет ЭКЛЗ по закрытиям смен в заданном диапазоне дат0xB0   Продолжение печати0xC0   Загрузка графики0xC1   Печать графики0xC2   Печать штрих-кода0xE0   Открыть смену0xFC   Получить тип устройства0xFF01 Запрос статуса ФН0xFF03 Запрос срока действия ФН0xFF08 Отменить документ в ФН0xFF0A Найти фискальный документ по номеру0xFF0B Открыть смену в ФН0xFF0C Передать произвольную TLV структуру0xFF35 Начать формирование чека коррекции0xFF36 Сформировать чек коррекции0xFF38 Сформировать отчёт о состоянии расчётов0xFF39 Получить статус информационного обмена0xFF3F Запрос количества ФД на которые нет квитанции0xFF40 Запрос параметров текущей смены0xFF41 Начать открытие смены0xFF42 Начать закрытие смены0xFF43 Закрыть смену в ФН====== ========Лицензия--------MIT лицензия. Подробнее в файле `LICENSE &lt;https://github.com/oleg-golovanov/pyshtrih/blob/master/LICENSE&gt;`_... |Version| image:: https://img.shields.io/pypi/v/pyshtrih.svg    :target: https://pypi.python.org/pypi/pyshtrih.. |PyVersions| image:: https://img.shields.io/pypi/pyversions/pyshtrih.svg    :target: https://pypi.python.org/pypi/pyshtrih.. |License| image:: https://img.shields.io/github/license/oleg-golovanov/pyshtrih.svg    :target: https://github.com/oleg-golovanov/pyshtrih/blob/master/LICENSE</longdescription>
</pkgmetadata>