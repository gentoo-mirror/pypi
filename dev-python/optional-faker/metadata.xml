<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># optional-faker[![Support Ukraine](https://badgen.net/badge/support/UKRAINE/?color=0057B8&amp;labelColor=FFD700)](https://www.gov.uk/government/news/ukraine-what-you-can-do-to-help)[![Build Status](https://github.com/PerchunPak/optional-faker/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/PerchunPak/optional-faker/actions?query=workflow%3Atest)[![codecov](https://codecov.io/gh/PerchunPak/optional-faker/branch/master/graph/badge.svg)](https://codecov.io/gh/PerchunPak/optional-faker)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Python support versions badge (from pypi)](https://img.shields.io/pypi/pyversions/optional-faker)](https://www.python.org/downloads/)Small wrapper around faker, to make values optional!## Example```py&gt;&gt;&gt; from faker import Faker&gt;&gt;&gt; import optional_faker&gt;&gt;&gt;&gt;&gt;&gt; fake = Faker()&gt;&gt;&gt; Faker.seed(444)&gt;&gt;&gt;&gt;&gt;&gt; # `fake.optional` can take any value, and return it, or None.&gt;&gt;&gt; fake.optional(fake.pystr())'qazSMGwqdElzLTggMaPM'&gt;&gt;&gt; fake.optional(fake.pystr())None&gt;&gt;&gt; # or it can take callable, and *args with **kwargs&gt;&gt;&gt; # that will be passed to this callable.&gt;&gt;&gt; fake.optional(fake.pystr, 1, max_chars=10)'hmIEP'&gt;&gt;&gt; fake.optional(fake.pystr, 1, max_chars=10)None&gt;&gt;&gt; # there is no explicit check is callable a faker part,&gt;&gt;&gt; # so you can pass anything.&gt;&gt;&gt; fake.optional(lambda: &quot;my callable!&quot;)'my callable!'&gt;&gt;&gt; fake.optional(lambda: &quot;my callable!&quot;)None```## Installing```bashpip install optional-faker```And then you need to import `optional_faker` anywhere but before creating `Faker` instance.## Installing for local developing```bashgit clone https://github.com/PerchunPak/optional-faker.gitcd optional-faker```### Installing `poetry`Next we need install `poetry` with [recommended way](https://python-poetry.org/docs/master/#installation).If you use Linux, use command:```bashcurl -sSL https://install.python-poetry.org | python -```If you use Windows, open PowerShell with admin privileges and use:```powershell(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -```### Installing dependencies```bashpoetry install```### If something is not clearYou can always write me!## Updating```bashpip install -U optional-faker```### For local developmentFor updating, just re-download repository,if you used `git` for downloading, just run `git pull`.## ThanksThis project was inspired by [faker-optional](https://github.com/lyz-code/faker-optional).This project was generated with [python-template](https://github.com/PerchunPak/python-template).</longdescription>
</pkgmetadata>