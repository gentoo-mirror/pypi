<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Altair ViewerOffline chart viewer for [Altair](http://altair-viz.github.io) visualizations[![github actions](https://github.com/altair-viz/altair_viewer/workflows/build/badge.svg)](https://github.com/altair-viz/altair_viewer/actions?query=workflow%3Abuild)[![github actions](https://github.com/altair-viz/altair_viewer/workflows/lint/badge.svg)](https://github.com/altair-viz/altair_viewer/actions?query=workflow%3Alint)[![code style black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)This package provides tools for viewing Altair charts without a web connection in arbitrary Pythonenvironments. Charts can be displayed either inline in a Jupyter notebook environment, or in aseparate browser window for use in any environment.![Altair Viewer Gif](https://raw.githubusercontent.com/altair-viz/altair_viewer/master/images/viewer.gif)## InstallationAltair Viewer can be installed from the[Python Package Index](http://pypi.org/project/altair_viewer) with ``pip``:```$ pip install altair_viewer```## Usage: General EnvironmentsAltair viewer provides two top-level functions for displaying charts: ``display()`` and ``show()``.Their intended use is slightly different:```pythonimport altair_vieweraltair_viewer.display(chart)`````display(chart)`` is meant for use in interactive computing environments wherea single Python process is used interactively. It will serve a chart viewer at a localhostURL, and any susequent chart created within the session will appear in the same window.The background server will be terminated when the main Python process terminates, so thisis not suitable for standalone scripts.```pythonimport altair_vieweraltair_viewer.show(chart)`````show(chart)`` is meant for use once at the end of a Python script. It does thesame as ``display()``, but automatically opens a browser window, and adds an inputprompt to prevent the script (and the server it creates) from terminating.## Usage: IPython &amp; JupyterWithin Jupyter notebook, IPython terminal, and related environments that support[Mimetype-based display](https://jupyterlab.readthedocs.io/en/stable/user/file_formats.html),altair viewer can be used by enabling the ``altair_viewer`` renderer:```pythonimport altair as altalt.renderers.enable('altair_viewer')```This will cause charts at the end of a Jupyter notebook cell to be rendered in aseparate browser window, as with the ``display()`` and ``show()`` methods.If enabled with ``inline=True``, charts will be rendered inline in the notebook:```pythonimport altair as altalt.renderers.enable('altair_viewer', inline=True)```To display a single inline chart using Altair viewer in an IPython environment withoutglobally enabling the associated renderer, you can use the ``display`` method directly:```pythonimport altair_vieweraltair_viewer.display(chart, inline=True)```Note that the display based on altair viewer will only function correctly as long as thekernel that created the charts is running, as it depends on the background server startedby the kernel. In particular, this means that if you save a notebook and reopen it later,charts will not display until the associated cells are re-run.</longdescription>
</pkgmetadata>