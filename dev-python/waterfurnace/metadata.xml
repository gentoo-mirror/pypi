<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>============waterfurnace============.. image:: https://img.shields.io/pypi/v/waterfurnace.svg   :target: https://pypi.python.org/pypi/waterfurnace.. image:: https://img.shields.io/travis/sdague/waterfurnace.svg   :target: https://travis-ci.org/sdague/waterfurnace.. image:: https://readthedocs.org/projects/waterfurnace/badge/?version=latest   :target: https://waterfurnace.readthedocs.io/en/latest/?badge=latest   :alt: Documentation Status.. image:: https://pyup.io/repos/github/sdague/waterfurnace/shield.svg   :target: https://pyup.io/repos/github/sdague/waterfurnace/   :alt: UpdatesPython interface for waterfurnace geothermal systems.This provides basic sensor readings for waterfurnace geothermal systems byusing the websocket interface that exists for the symphony website. This is nota documented or stable interface, so don't use this for criticalsystems. However, it is useful to record historical usage of your waterfurnacesystem.Usage=====.. code-block:: python   from waterfurnace.waterfurnace import WaterFurnace   wf = WaterFurnace(user, pass)   wf.login()   data = wf.read()The waterfurnace symphony service websocket monitors it's usage, so you need todo a data reading at least every 30 seconds otherwise the websocket is closedon the server side for resource constraints. The symphony website does a pollon the websocket every 5 seconds.Known Issues / limitations==========================* The python websocket code goes into a blocked state after long periods of  usage (always takes days to get to this state). I've yet to discover  why. Help welcome.* If you have multiple waterfurnace units on one account, this will only use  the first.License=======* Free software: Apache Software License 2.0.. * Documentation: https://waterfurnace.readthedocs.io.Credits=======This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template... _Cookiecutter: https://github.com/audreyr/cookiecutter.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage=======History=======1.1.0 (2019-01-07)------------------* Fix retry logic1.0.0 (2018-12-05)------------------* Detect unit automatically* Add series 7 sensors0.7.0 (2018-07-13)------------------* Add workaround timer to handle socket failures0.6.0 (2018-02-21)------------------* Add timeout on socket0.5.0 (2018-02-16)------------------* Update exception handling to be more Home Assistant friendly0.4.0 (2018-02-05)------------------* More exceptions to distinguish errors we are expecting0.3.0 (2018-01-23)------------------* Handle tid rollover0.2.0 (2018-01-19)------------------* Library specific exceptions for login failures.0.1.0 (2018-01-17)------------------* First release on PyPI.</longdescription>
</pkgmetadata>