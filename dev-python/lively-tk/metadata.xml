<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  &lt;a href=&quot;https://wisc-hci.github.io/lively/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5341396/218564862-aeac4437-873f-48cb-b503-15375250f75b.png&quot; alt=&quot;Lively&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;   &lt;a href=&quot;https://badge.fury.io/py/lively_tk&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/lively_tk.svg&quot; alt=&quot;PyPI version&quot; height=&quot;18&quot;&gt;&lt;/a&gt;   &lt;a href=&quot;https://badge.fury.io/js/@people_and_robots%2Flively&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/@people_and_robots%2Flively.svg&quot; alt=&quot;npm version&quot; height=&quot;18&quot;&gt;&lt;/a&gt;    &lt;br&gt;    &lt;a href= &quot;https://wisc-hci.github.io/lively/&quot;&gt;&lt;img alt=&quot;docs: ready&quot; src=&quot;https://img.shields.io/badge/docs-ready-success.svg?logoHeight=10&quot;&gt;&lt;/a&gt;&lt;/p&gt;# Lively v1.1.0You can find the documentation for lively [here](https://wisc-hci.github.io/lively/)# LivelyStudioFor an interface to configure Lively, see [LivelyStudio](https://github.com/Wisc-HCI/LivelyStudio).## AboutLively PackageThe Lively framework provides a highly configurable toolkit for commanding robots in mixed modalities while incorporating liveliness motions. It is adapted from [RelaxedIK](https://github.com/uwgraphics/relaxed_ik_core) framework, and compatible with Python and Javascript/Node.To configure a robot, the easiest method is to use the LivelyStudio interface in the [LivelyStudio](https://github.com/Wisc-HCI/LivelyStudio) repository, which is a system for configuring and programming the robot visually.## DocumentationDocumentation is provided on our [github pages site](https://wisc-hci.github.io/lively/). It provides an API overview and online tutorials.## Getting HelpPlease feel free to post in our [Github Discussions](https://github.com/Wisc-HCI/lively/discussions), or if you found an issue, report it [here](https://github.com/Wisc-HCI/lively/issues). ## Contributing**Python Instructions**To build, download and `cd` to this directory. Then run:```bash# Install Maturinpip3 install maturin# If you just want to install locally or develop:maturin develop```## Deploy to GitHub PageTo deploy, run `yarn deploy` from the `main` branch in the `docs` directory. We will need to redeploy every time we make new changes to the documentataion.**Javascript Instructions**To build, download and `cd` to this directory. Then run:```bash# Build the javascript bundlewasm-pack build --scope people_and_robots --target bundler -- --features jsbindings# Packwasm-pack pack# Publishwasm-pack publish --access=public```## References[^1]:Rakita, Daniel, Bilge Mutlu, and Michael Gleicher. &quot;PROXIMA: An Approach for Time or Accuracy Budgeted Collision Proximity Queries.&quot; Proceedings of Robotics: Science and Systems (RSS). 2022. http://www.roboticsproceedings.org/rss18/p043.pdf</longdescription>
</pkgmetadata>