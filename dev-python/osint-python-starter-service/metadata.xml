<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-starter-serviceThis is a starter service project template.Use this template to create a new service project.## Getting startedFirst you need to provide ENV variables for the service to run.### ENV variablesMain ENV variables:- `CLIENT_ID` - client id of the service- `REST_API_ENABLED` - enable/disable REST API (default: `true`)## Kafka- `CONSUME` - comma separated list of topics to consume- `PRODUCE` - comma separated list of topics to produce- `KAFKA_HOST` - kafka host- `SCHEMA_REGISTRY` - schema registry host- `MAX_POLL_INTERVAL_MS` - max poll interval in ms (default: `600000`)- `SESSION_TIMEOUT_MS` - session timeout in ms (default: `600000`)## UsageCheck the provided examples in the `examples` folder.## Example    from starter_service import StarterService        class ExampleService(StarterService):        def health(self):            &quot;&quot;&quot; Health check endpoint &quot;&quot;&quot;            return &quot;OK&quot;        def ready(self):            &quot;&quot;&quot; Ready check endpoint &quot;&quot;&quot;                return True            def process(self, message):            &quot;&quot;&quot; Process message &quot;&quot;&quot;        @API.post(consumer=&quot;article_raw_en&quot;, producer=&quot;metadata_item_key_en&quot;, doc=&quot;Process raw article and return metadata&quot;)        def handle_message(self, message: dict):            &quot;&quot;&quot; Process raw article and return metadata &quot;&quot;&quot;            return {                &quot;articleId&quot;: message['id'],                &quot;origin&quot;: &quot;string&quot;,                &quot;data&quot;: [                    {                        &quot;type&quot;: &quot;string&quot;,                        &quot;value&quot;: &quot;string&quot;,                        &quot;confidence&quot;: 0,                        &quot;metadata&quot;: {                            &quot;string&quot;: &quot;string&quot;                        }                    }                ]            }        if __name__ == '__main__':            ExampleService()    </longdescription>
</pkgmetadata>