<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Volcengine TOS SDK for PythonThe TOS Python SDK enables Python developers to easily work with TOS(Tinder Object Storage) service in the volcengine.This document will show developers some basic examples about TOS bucket and object operation.## Install### Requirements- Python3# Quick StartThis section introduces how to create a bucket, upload/download/delete an object in TOS service through our SDK.## Create a TOS ClientYou can interact with TOS service after initiating a TOSClient instance.The accesskey and secretkey of your account, endpoint and region are required as params.```pythonimport tosak = &quot;your access key&quot;sk = &quot;your secret key&quot;endpoint = &quot;your endpoint&quot;region = &quot;your region&quot;bucket_name = &quot;your bucket name&quot;object_key = &quot;your object key&quot;client = tos.TosClientV2(ak, sk, endpoint, region)     ```## Create a bucketThe bucket is a kind of unique namespace in TOS, which is a container to store data.This example shows you how to create a bucket.```pythonimport tosak = &quot;your access key&quot;sk = &quot;your secret key&quot;endpoint = &quot;your endpoint&quot;region = &quot;your region&quot;bucket_name = &quot;your bucket name&quot;client = tos.TosClientV2(ak, sk, endpoint, region)client.create_bucket(bucket_name)                            ```## Put ObjectYou can put your file as an object into your own bucket.```python# call put_object to upload you data to the TOS                     client.put_object(bucket_name, object_key, content=&quot;123&quot;)assert resp.status == 200       ```## Get ObjectYou can download objects in the TOS bucket through our SDK.```python# call get_object to download your data from your bucketclient.get_object(bucket_name, object_key)```## Delete ObjectYour can delete your objects in the bucketï¼š```python# call put_object to upload you data to the TOS  resp = client.put_object(bucket_name, key_name, content=&quot;123&quot;)assert resp.status_code == 200   # call delete_object to delete an object in your bucketresp = client.delete_object(bucket_name, key_name)assert resp.status_code == 204```## License[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0.html)</longdescription>
</pkgmetadata>