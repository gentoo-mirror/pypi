<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pybinaryedgePython 3 Wrapper for the BinaryEdge API https://www.binaryedge.io/. See the [APIv2 documentation](https://docs.binaryedge.io/api-v2/) for more information, or the documentation for this library on [Read the Docs](https://pybinaryedge.readthedocs.io/en/latest/index.html).## InstallationTo install this tool, it is recommended to use [virtual environments](https://docs.python.org/3/tutorial/venv.html).You can install it directly from [pypi](https://pypi.org/) with `pip install pybinaryedge`.You can Then you can install it directly from sources :```git clone https://github.com/Te-k/pybinaryedge.gitcd pybinaryedgepip install .```If you use [pipenv](https://pipenv.readthedocs.io/en/latest/), you can run instead :```git clone https://github.com/Te-k/pybinaryedge.gitcd pybinaryedgepipenv install```You need to have an account on the [Binary Edge platform](https://www.binaryedge.io/), create an API key, and configure the CLI tool to use it with `binaryedge config --key KEY`## APISee the documentation on [Read the Docs](https://pybinaryedge.readthedocs.io/en/latest/index.html).Example :```pythonfrom pybinaryedge import BinaryEdgebe = BinaryEdge(API_KEY)# Iterate over the first page of IPs having specific ssh configurationsearch = 'ssh.algorithms.encryption.keyword:&quot;aes256-cbc&quot; ssh.banner.keyword:&quot;SSH-2.0-OpenSSH_LeadSec&quot;'results = be.host_search(search)for ip in results['events']:    print(&quot;%s&quot; %(ip['target']['ip']))```List of functions implemented :* `host(IP)` : [Details about an Host](https://docs.binaryedge.io/api-v2/#v2queryiptarget)* `host_historical(IP)` : [Details about an Host, with data up to 6 months](https://docs.binaryedge.io/api-v2/#v2queryiphistoricaltarget)* `host_search(QUERY, PAGE)` : [List of recent events for the given query](https://docs.binaryedge.io/api-v2/#v2querysearch)* `host_score(IP)` : [IP Scoring of an host.](https://docs.binaryedge.io/api-v2/#v2queryscoreiptarget)* `host_vulnerabilities(IP)` : list of CVE vulnerabilities that may affect a host* `image_ip(IP)` : [Details about Remote Desktops found on an Host](https://docs.binaryedge.io/api-v2/#v2queryimageipip)* `image_search(QUERY, PAGE)` : [Remote Desktops based on a Query](https://docs.binaryedge.io/api-v2/#v2queryimagesearch)* `image_tags()` : [Get the list of possible tags for the images](https://docs.binaryedge.io/api-v2/#v2queryimagetags)* `torrent_ip(IP)` : [Details about torrents transferred by an Host](https://docs.binaryedge.io/api-v2/#v2querytorrentiptarget)* `torrent_historical_ip(IP)` : [Details about torrents transferred by an Host, with data up to 6 months](https://docs.binaryedge.io/api-v2/#v2querytorrenthistoricaltarget)* `dataleaks_email(EMAIL)` : [Verify which dataleaks affect the target email](https://docs.binaryedge.io/api-v2/#v2querydataleaksemailemail)* `dataleaks_organization(DOMAIN)` : [Verify how many emails are affected by dataleaks for a specific domain](https://docs.binaryedge.io/api-v2/#v2querydataleaksorganizationdomain)* `dataleaks_info()` : [Get the list of dataleaks our platform keeps track.](https://docs.binaryedge.io/api-v2/#v2querydataleaksinfo)* `domain_subdomains(DOMAIN, PAGE)` : [Return list of subdomains known from the target domain](https://docs.binaryedge.io/api-v2/#v2querydomainssubdomaintarget)* `domain_dns(DOMAIN, PAGE)` : [Return list of dns results known from the target domain.](https://docs.binaryedge.io/api-v2/#v2querydomainsdnstarget)* `domain_ip(IP, PAGE)`: [Return records that have the specified IP in their A or AAAA records.](https://docs.binaryedge.io/api-v2/#v2querydomainsiptarget)* `sensor_ip(TARGET)`: [Details about an Scanner. List of recent events form the specified host, including details of scanned ports, payloads and tags.](https://docs.binaryedge.io/api-v2/#v2querysensorsiptarget)* `sensor_search(QUERY, PAGE)`: [Events based on a Query.](https://docs.binaryedge.io/api-v2/#v2querysensorssearch)* `sensor_search_status(QUERY, TYPE, DAYS)`: [Statistics of events for the given query.](https://docs.binaryedge.io/api-v2/#v2querysensorssearchstats): `stats(QUERY, TYPE, PAGE)`: [Statistics of recent events for the given query.](https://docs.binaryedge.io/api-v2/#v2querysearchstats)## CLIThis library also implements a CLI binaryedge tool :```usage: binaryedge [-h] {config,ip,search,dataleaks} ...Request BinaryEdge APIpositional arguments:  {config,ip,search,dataleaks}                        Commands    config              Configure pybinary edge    ip                  Query an IP address    search              Search in the database    dataleaks           Search in the leaks database    domains             Search information on a domainoptional arguments:  -h, --help            show this help message and exit```Example :```$ binaryedge config --key KEY$ binaryedge ip -i 149.202.178[.]130{    &quot;events&quot;: [        {            &quot;port&quot;: 27017,            &quot;results&quot;: [                {                    &quot;origin&quot;: {                        &quot;country&quot;: &quot;sg&quot;,                        &quot;ip&quot;: &quot;172.104.173.35&quot;,                        &quot;module&quot;: &quot;grabber&quot;,                        &quot;ts&quot;: 1536782325059,                        &quot;type&quot;: &quot;service-simple&quot;[SNIP]```## Changelog* 0.5 : fix bugs in the doc and code. Add support for `host_vulnerabilities`* 0.4: Add support for [BinaryEdge sensors](https://docs.binaryedge.io/api-v2/#v2querysensorsiptarget)## LicenseThis code is published under MIT license</longdescription>
</pkgmetadata>