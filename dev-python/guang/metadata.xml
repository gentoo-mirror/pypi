<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Guang[![image](https://img.shields.io/badge/Pypi-0.0.8.1.6-green.svg)](https://pypi.org/project/guang)[![image](https://img.shields.io/badge/python-3.6+-blue.svg)](https://www.python.org/)[![image](https://img.shields.io/badge/license-GNU_GPL--v3-blue.svg)](LICENSE)[![image](https://img.shields.io/badge/author-K.y-orange.svg?style=flat-square&amp;logo=appveyor)](https://github.com/beidongjiedeguang)Universal function library of scientific calculation.## Requirements```pythonPython 3CUDA &gt;= 10.0PyTorch &gt;= 1.0Tensorflow &gt;= 1.12.0opencv-pythonpydublibrosapyworldsoundfilepypinyinpomegranatepython-Levenshteinstreamlitpyprobarfire```## Installation```python# Before install `guang`, you need to have all the requirements installed.pip install guang```*Nightly* Build```bashgit clone https://github.com/beidongjiedeguang/guang.gitcd guangpython ./night_workflow.py```## Examples- Convert audio in .mp3/ .wav format to (sample rate=16k, single channel) .wav format  **Use in bash/shell**  ```bash  guang cvt2wav INPUT OUTPUT  ```  **Use as function**  ```python  from guang.Voice.convert import cvt2wav  cvt2wav(input_name, output_name, sr=16000)  # Multi-process  from guang.Voice.convert import multi_cvt2wav   multi_cvt2wav(PATH1, PATH2,sr=16000, n_cpu=None)  ```* **Let the video play at N times speed** (install ffmpeg first)  ```bash  guang av_speed inputname outputname N --cut_frame=False  ```* **Fourier visualization**   ```bash  guang fourier  ```* **Fourier draw anything you want**   &lt;img src=&quot;docs/picture/fourier1.gif&quot; width = &quot;400&quot; height = &quot;300&quot;/&gt;  &lt;img src=&quot;docs/picture/fourier0.gif&quot; width = &quot;400&quot; height = &quot;300&quot;/&gt;* **FFT  convolution**  ```python  from guang.sci import fft  A = np.random.rand(100, 100)  B = np.random.rand(100, 100)  fft.fft_conv2d(A, B)  ```* Use `dict_dotable` to convert a dictionary to dot-able dictionary:  ```python  from guang.Utils.toolsFunc import dict_dotable  a = {'a':{'b':1}}  a = dict_dotable(a)  print(a.a.b)  &gt;&gt; 1  ```* ~~Use `probar` to display current progress~~   has separated to  [pyprobar](https://github.com/beidongjiedeguang/python-progress-bar)  ```python  from guang.Utils.bar import bar, probar  for idx, x in probar(range(10)):      time.sleep(0.8)  &gt;&gt; 100.00% |█████████████████████████████| 0'7.2&quot;|0'7.2&quot; ETC: 12-2 23:59:8  N = 1024  a = np.linspace(2, 5, N)  for idx, i in enumerate(a):      time.sleep(0.01)      bar(idx, N)  &gt;&gt; 100.00% |█████████████████████████████| 0:00:00|0:00:10  ETC: 02-19 20:33:34   ```* `@broadcast`  broadcast a non-broadcast function.  ```python  from guang.Utils.toolsFunc import broadcast  @broadcast  def f(x):      # A function that can map only a single element      if x==1 or x==0:          return x      else:          return f(x-1)+f(x-2)  &gt;&gt; f([2,4,10])  &gt;&gt; array([1, 3, 832040], dtype=object)  ```* `download` download files from google drive.  ```python  from guang.Utils.google import download  url = &quot;https://drive.google.com/open?id=1eU57Fkv1DBEOqi-iOs1AebD02FqVDY23&quot;  outname = &quot;filename.zip&quot;  download(url, outname)  ```* `txt2ph` Convert Chinese characters to phoneme.  ```python  from guang.Voice.txt2pinyin import txt2ph  txt2ph('你好，我是光')  &gt;&gt; [('n', 'i3'), ('h', 'ao3'), ('sp1',), ('uo3',), ('sh', 'ii4'), ('g', 'uang1')]  ```* `reduce_from_duration` Remove files with duration less than `least_time` seconds.   Note that this function does not work in the interactive interpreter because it uses [`multiprocessing.pool.Pool`](https://docs.python.org/zh-cn/3/library/multiprocessing.html#multiprocessing.pool.Pool)  ```python  from guang.Voice.reduce import reduce_from_duration  reduced_list = reduce_from_duration(path_list, least_time=2)  print(len(path_list), len(reduced_list))  &gt;&gt; (6889, 6714)  ```* Find NOT silence part of a sound file: `find_no_silence`  ```python  from guang.Voice.reduce import find_no_silence  start, end, arg_start, arg_end = find_no_silence(filename)  ```* Download wechat files.  ```python  from guang.wechat.Utils.download import downloads  downloads(nickName='caloi', fileType='mp3', d_t=60)  ```* Plots 3D Scatter:  ```python  from guang.Utils.plotly import Scatter3d  from guang.Utils.interesting import Lorenz  trace = Lorenz.Trace()  x,y,z = trace[:,0], trace[:,1], trace[:,2]  fig = Scatter3d()  fig.scatter3d(x,y,z,mode=&quot;lines+markers&quot;,color_line=z,color_marker=None,marker_size=2)  fig.show()  ```  &lt;img src=&quot;docs/picture/Lorenz.gif&quot; width = &quot;400&quot; height = &quot;300&quot;/&gt;* Data dimension reduction:  ```bash  cd guang/ML/manifold  python test_digits.py  ```  &lt;img src=&quot;docs/picture/digits_dimension_reduction.PNG&quot; width = &quot;800&quot; height = &quot;400&quot; /&gt;  ```bash  python test_s_curve  ```  &lt;img src=&quot;docs/picture/s_curve.gif&quot; width = &quot;500&quot; height = &quot;500&quot; /&gt;  &lt;img src=&quot;docs/picture/s_curve_dimension_reduction.PNG&quot; width = &quot;1000&quot; height = &quot;400&quot;/&gt;* :smiley: </longdescription>
</pkgmetadata>