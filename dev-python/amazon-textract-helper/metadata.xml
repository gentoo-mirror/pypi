<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Textractor-Textract-Helperamazon-textract-helper provides a collection of ready to use functions and sample implementations to speed up the evaluation and development for any project using Amazon Textract.It installs a command line tool called ```amazon-textract```# Install```bash&gt; python -m pip install amazon-textract-helper```Make sure your environment is setup with AWS credentials through configuration files or environment variables or an attached role. (https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html)# Test```bash&gt; amazon-textract --helpusage: amazon-textract [-h] (--input-document INPUT_DOCUMENT | --example | --stdin) [--features {FORMS,TABLES} [{FORMS,TABLES} ...]]                       [--pretty-print {WORDS,LINES,FORMS,TABLES} [{WORDS,LINES,FORMS,TABLES} ...]]                       [--pretty-print-table-format {csv,plain,simple,github,grid,fancy_grid,pipe,orgtbl,jira,presto,pretty,psql,rst,mediawiki,moinmoin,youtrack,html,unsafehtml,latex,latex_raw,latex_booktabs,latex_longtable,textile,tsv}]                       [--overlay {WORD,LINE,FORM,KEY,VALUE,TABLE,CELL} [{WORD,LINE,FORM,KEY,VALUE,TABLE,CELL} ...]]                       [--pop-up-overlay-output] [--overlay-output-folder OVERLAY_OUTPUT_FOLDER] [--version] [--no-stdout] [-v | -vv]optional arguments:  -h, --help            show this help message and exit  --input-document INPUT_DOCUMENT                        s3 object (s3://) or file from local filesystem  --example             using the example document to call Textract  --stdin               receive JSON from stdin  --features {FORMS,TABLES} [{FORMS,TABLES} ...]                        features to call Textract with. Will trigger call to AnalyzeDocument instead of DetectDocumentText  --pretty-print {WORDS,LINES,FORMS,TABLES} [{WORDS,LINES,FORMS,TABLES} ...]  --pretty-print-table-format {csv,plain,simple,github,grid,fancy_grid,pipe,orgtbl,jira,presto,pretty,psql,rst,mediawiki,moinmoin,youtrack,html,unsafehtml,latex,latex_raw,latex_booktabs,latex_longtable,textile,tsv}                        which format to output the pretty print information to. Only effects FORMS and TABLES  --overlay {WORD,LINE,FORM,KEY,VALUE,TABLE,CELL} [{WORD,LINE,FORM,KEY,VALUE,TABLE,CELL} ...]                        defines what bounding boxes to draw on the output  --pop-up-overlay-output                        shows image with overlay  --overlay-text        shows image with WORD or LINE text overlay. When both WORD and LINE overlay are specified, WORD text will be overlayed  --overlay-confidence  shows image with confidence overlay  --overlay-output-folder OVERLAY_OUTPUT_FOLDER                        output with bounding boxes to folder  --version             print version information  --no-stdout           no output to stdout  -v                    &gt;=INFO level logging output to stderr  -vv                   &gt;=DEBUG level logging output to stderr```# Sample Commands## Easy Start```bash&gt; amazon-textract --example```this will run the examples document using the DetectDocumentText API.Output will be printed to stdout and look similar to this:```json{&quot;DocumentMetadata&quot;: {&quot;Pages&quot;: 1}, &quot;Blocks&quot;: [{&quot;BlockType&quot;: &quot;PAGE&quot;, &quot;Geometry&quot;: {&quot;BoundingBox&quot;: {&quot;Width&quot;: 1.0, &quot;Height&quot;: 1.0, &quot;Left&quot;: 0.0, &quot;Top&quot;: 0.0}, &quot;Polygon&quot;: [{&quot;X&quot;: 9.33321120033382e-17, &quot;Y&quot;: 0.0}, {&quot;X&quot;: 1.0, &quot;Y&quot;: 1.6069064689339292e-16}, {&quot;X&quot;: 1.0, &quot;Y&quot;: 1.0}],&quot;HTTPHeaders&quot;: {&quot;x-amzn-requestid&quot;: &quot;12345678-1234-1234-1234-123456789012&quot;, &quot;content-type&quot;: &quot;application/x-amz-json-1.1&quot;, &quot;content-length&quot;: &quot;48177&quot;, &quot;date&quot;: &quot;Thu, 01 Apr 2021 21:50:29 GMT&quot;}, &quot;RetryAttempts&quot;: 0}}```It is working.## Call with document on S3```bash&gt; amazon-textract --input-document &quot;s3://somebucket/someprefix/someobjectname.png&quot;```Output similar to Easy Start## Call with document on local file system```bash&gt; amazon-textract --input-document &quot;./somepath/somefilename.png&quot;```Output similar to Easy StartWe will continue to use the ```--example``` parameter to keep it simple and easy to reproduce. S3 and local files work the same way, just instead of --example use --input-document &lt;location&gt;.## Call with STDIN```bash# first create JSONamazon-textract --example &gt; example.json# now use a stored JSON with the ```amazon-textract``` commandcat example.json | amazon-textract --stdin -pretty-print LINES```## Call with FORMS and TABLES```bash&gt; amazon-textract --example --features FORMS TABLES```This will call the [AnalyzeDocument API] (https://docs.aws.amazon.com/textract/latest/dg/API_AnalyzeDocument.html) and output will includeOutput will look similar to &quot;Easy Start&quot; but include FORMS and TABLES information## Pretty print the outputPretty print outputs nicely formatted information for words, lines, forms or tables.For example to print the tables identified by Amazon Textract to stdout, use```bash&gt; amazon-textract --example --features TABLES --pretty-print TABLES```Output will look like this:```text|------------|-----------|---------------------|-----------------|-----------------------||            |           | Previous Employment | History         |                       || Start Date | End Date  | Employer Name       | Position Held   | Reason for leaving    || 1/15/2009  | 6/30/2011 | Any Company         | Assistant Baker | Family relocated      || 7/1/2011   | 8/10/2013 | Best Corp.          | Baker           | Better opportunity    || 8/15/2013  | present   | Example Corp.       | Head Baker      | N/A, current employer |```to pretty print both, FORMS and TABLES:```bash&gt; amazon-textract --example --features FORMS TABLES --pretty-print FORMS TABLES```will output```textPhone Number:: 555-0100Home Address:: 123 Any Street, Any Town, USAFull Name:: Jane DoeMailing Address:: same as home address|------------|-----------|---------------------|-----------------|-----------------------||            |           | Previous Employment | History         |                       || Start Date | End Date  | Employer Name       | Position Held   | Reason for leaving    || 1/15/2009  | 6/30/2011 | Any Company         | Assistant Baker | Family relocated      || 7/1/2011   | 8/10/2013 | Best Corp.          | Baker           | Better opportunity    || 8/15/2013  | present   | Example Corp.       | Head Baker      | N/A, current employer |```## Overlay**At the moment overlay only works with images, we will add support for PDF soon.**The following command runs DetectDocumentText, pretty prints the WORDS in the document to stdout and draws bounding boxes around each WORD and displays the result in a popup window and stores it to a folder called 'overlay-output-folder-name'.```bashamazon-textract --example --pretty-print WORDS --overlay WORD --pop-up-overlay-output --overlay-output-folder overlay-output-folder-name```&lt;img src=&quot;https://github.com/aws-samples/amazon-textract-textractor/blob/master/helper/docs/employmentapp_boxed_WORD_.png&quot; alt=&quot;Sample overlay WORD&quot; width=&quot;50%&quot; height=&quot;50%&quot; border=&quot;1&quot;&gt;The following command runs AnalyzeDocument for FORMS and TABLES, pretty prints FORMS and TABLES to  to stdout and draws bounding boxes around each TABLE-CELL and FORM KEY/VALUE and displays the result in a popup window and stores it to a folder called 'overlay-output-folder-name'.```bash&gt; amazon-textract --example --features TABLES FORMS --pretty-print FORMS TABLES --overlay FORM CELL --pop-up-overlay-output --overlay-output-folder ../mywonderfuloutputfolderfordocs/```&lt;img src=&quot;https://github.com/aws-samples/amazon-textract-textractor/blob/master/helper/docs/employmentapp_boxed_FORM_CELL_.png&quot; alt=&quot;Sample overlay FORM CELL&quot; width=&quot;50%&quot; height=&quot;50%&quot; border=&quot;1&quot;&gt;The following command draws bounding boxes around each WORD, overlays the detected WORD text, and displays the result in a popup window and stores it to a folder called 'overlay-output-folder-name'.```bash&gt; amazon-textract --example --overlay WORD --overlay-text --pop-up-overlay-output --overlay-output-folder overlay-output-folder-name```&lt;img src=&quot;https://github.com/aws-samples/amazon-textract-textractor/blob/master/helper/docs/employmentapp_boxed_WORD_TEXT_OVERLAY.png&quot; alt=&quot;Sample overlay LINE with overlay text and confidence percentage&quot; width=&quot;50%&quot; height=&quot;50%&quot; border=&quot;1&quot;&gt;The following command draws bounding boxes around each LINE, overlays LINE text along with percentage confidence of the detected LINE text, and displays the result in a popup window and stores it to a folder called 'overlay-output-folder-name'.```bash&gt; amazon-textract --example --overlay LINE --overlay-text --overlay-confidence --pop-up-overlay-output --overlay-output-folder overlay-output-folder-name```&lt;img src=&quot;https://github.com/aws-samples/amazon-textract-textractor/blob/master/helper/docs/employmentapp_boxed_LINE_TEXT_OVERLAY.png&quot; alt=&quot;Sample overlay LINE with overlay text and confidence percentage&quot; width=&quot;50%&quot; height=&quot;50%&quot; border=&quot;1&quot;&gt;</longdescription>
</pkgmetadata>