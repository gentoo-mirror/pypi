<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Core CLI v0.7.7## PrerequisitesThe following packages are used across python repositories. A global install of them all is _highly_ recommended.- [Poetry](https://python-poetry.org/docs/#installation)- [Invoke](https://www.pyinvoke.org/installing.html)- [Kubefwd](https://kubefwd.com)A running cluster from [LocalHelm](https://github.com/NEOM-KSA/neos-core-platform/tree/main/demo/helm) with`gateway` service port forwarded. Details on port forwarding below.### WSLIf running on Windows, you may need to install `distutils` to install the service.```bash$ sudo apt-get install python3.10-distutils```## Initial setup```bash$ invoke install-dev```## Code Quality### Tests```bashinvoke testsinvoke tests-coverage```## Linting```bashinvoke check-styleinvoke isort```## Running locally### Port forwardingTo access the gateway api locally, you will need to connect to the pod insidethe cluster using `kubefwd`.```bash$ sudo kubefwd svc -n core -c ~/.kube/config```## NeosctlWhen running locally, if you do not manage your own virtual environments, youcan use poetry to put you in a shell with access to the installed code.```bash$ poetry shell```### Initialize profile```bash$ neosctl -p my-profile profile initInitialising [default] profile.Gateway API url [http://core-gateway.core-gateway:9000/api/gateway]: &lt;http://gateway_api_url:port&gt;Registry API url [http://neos-registry.registry:80/api/registry]: &lt;http://registry_api_url:port&gt;IAM API url [http://core-iam.core-iam:80/api/iam]: &lt;http://iam_api_url:port&gt;Storage API url [http://core-storage.core-storage:9000/api/storage]: &lt;http://storage_api_url:port&gt;Username: &lt;username&gt;``````bash$ cat ~/.neosctl```To work with the same profile across multiple commands you can export theprofile name as an environment variable.```bash$ neosctl -p my-profile product list...$ export NEOSCTL_PROFILE=my-profile$ neosctl product list```### Login```bash$ neosctl -p=&lt;my-profile&gt; auth login```### Commands to work with data products```bash$ neosctl --help$ neosctl product --help$ neosctl metadata --help```To work with the same product across multiple commands you can export theproduct name as an environment variable.```bash$ neosctl product get my-data-product...$ export NEOSCTL_PRODUCT=my-data-product$ neosctl product get```## ReleasesRelease management is handled using `bump2version`. The below commands will taga new release. This will also update the helm chart version, this should not bemanually changed.```bash$ invoke bump-patch$ invoke bump-minor$ invoke bump-major&gt; vX.Y.Z```</longdescription>
</pkgmetadata>