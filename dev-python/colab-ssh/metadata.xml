<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Cover photo of Colab-ssh](docs/assets/cover.png)&gt; A new version of colab-ssh is coming soon, stay tuned.&gt; ðŸŽ‰ Happy to announce that we now have:&gt;  - Youtube demo video&gt;  - Support for Gitlab repositories&gt;  - VSCode integration with which you can open your VSCode right from the notebook.# Colab-sshConnect to Google colab via ssh easily[![Downloads](https://pepy.tech/badge/colab-ssh/week)](https://pepy.tech/project/colab-ssh)[![Downloads](https://pepy.tech/badge/colab-ssh/month)](https://pepy.tech/project/colab-ssh)[![Downloads](https://pepy.tech/badge/colab-ssh)](https://pepy.tech/project/colab-ssh)## What is Colab-ssh ?Colab-ssh is a light-weight library that allows you to connect to Google Colab Notebook using an SSH Tunnel and optionally via VSCode.## Quick startYou can click on the Google Colab button to clone an already setup notebook:[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/WassimBenzarti/colab-ssh/blob/master/docs/Colab_ssh_Initial_project.ipynb)&gt; :warning: Colab-ssh supports Google colaboratory notebooks only, using it on other notebooks may lead to unexpected behavior. ## Getting startedNow you can watch a demo video on how to setup Colab-ssh with cloudflared on Youtube. Click the video below to open it.[![Youtube demo of Colab-ssh](http://img.youtube.com/vi/Q78_MMaNe_U/0.jpg)](http://www.youtube.com/watch?v=Q78_MMaNe_U &quot;Colab-ssh: open Google Colab with VSCode and SSH&quot;)1. Open Google Colab and run this code in one of the code cells```jupyter# Install colab_ssh on google colab!pip install colab_ssh --upgradefrom colab_ssh import launch_ssh_cloudflared, init_git_cloudflaredlaunch_ssh_cloudflared(password=&quot;&lt;PUT_YOUR_PASSWORD_HERE&gt;&quot;)# Optional: if you want to clone a Github or Gitlab repositoryrepository_url=&quot;&lt;PUT_YOUR_REPOSITORY_URL_HERE&gt;&quot;init_git_cloudflared(repository_url)```&gt; Make sure you replace `&lt;PUT_YOUR_PASSWORD_HERE&gt;` with a password of your choice and `&lt;PUT_YOUR_REPOSITORY_URL_HERE&gt;` with the link to your Github/Gitlab repository (if you use the git integration).The output of this snippet will look similar to the following screenshot:![launch_ssh_cloudflared output](docs/assets/launch_ssh_cloudflared.jpg)&gt; :warning: If it's the first time you launch colab-ssh on your machine, it's important to follow the instructions in the **&quot;Client machine configuration&quot; section**. To show the steps that you need to do, **just click &quot;Client machine configuration&quot;**. Don't worry, you don't have to repeat these steps again for each notebook.&gt; :grey_question: Things doesn't work ? or looking for a way to connect using Ngrok ? Check the [colab-ssh ngrok documentation](docs/ngrok/ngrok.md)### Cloning a repository (Optional)If you are a Github/Gitlab fan, you probably want to clone a repository (private or public) repeatedly to the Google Colab Notebook.This is why `init_git` is created.&lt;details&gt;&lt;summary&gt; &lt;b&gt; What `init_git` does&lt;/b&gt;&lt;/summary&gt;- Clones the repository- Uses your personal token (if you provided it) to setup the repository remote URL (this is useful so you don't have to worry about authentication during `git clone` or `git push`). If you clone a private repository without a personal token, you will be asked to put your password (This is only valid for Gitlab, as opposed to Github that recently disabled password authentication).- Checkout the branch of your preference- Sets up the `user.email` and `user.name` for you, in case you need to commit.- Also, it inserts the cloned folder to the `sys.path`. This is helpful when your cloned repository is a python project and you want to import some python modules directly (without specifying the name of the root folder) to your Google Colab Notebook. Example: If you cloned a repository called `example-repo`. A folder should be created containing your cloned repository. If `example-repo` has a python module called `my_module`, instead of writing in your notebook `import example-repo.my_module`, you can simply do `import my_module`.&lt;/details&gt;#### Example:```pythoninit_git_cloudflared(&quot;https://github.com/&lt;OWNER&gt;/&lt;REPO_NAME&gt;.git&quot;,         personal_token=&quot;&lt;YOUR_GITHUB_PERSONAL_TOKEN&gt;&quot;,          branch=&quot;&lt;YOUR_BRANCH&gt;&quot;,         email=&quot;&lt;YOUR_EMAIL&gt;&quot;,         username=&quot;&lt;YOUR_USERNAME&gt;&quot;)```The output of this command will look like this:![init_git_cloudflared output](docs/assets/init_git_cloudflared.jpg)This will display a button inside the cell output (or a url in case of a terminal). This is a direct link to open VSCode installed on your machine.&gt; Link doesn't appear or doesn't work?&gt; - Make sure you have VSCode installed locally for the link to work&gt; - Make sure that you run `launch_ssh_cloudflared` before `init_git_cloudflared`. The reason for that is because `init_git_cloudflared` shows the link based on the tunnel information provided by the function `launch_ssh_cloudflared`.&gt; :warning: Please note that your Gitlab personal access token requires the following scopes: `read_api, read_repository, write_repository`.### Avoiding passwords (Optional)Instead of setting a password, you can access the SSH tunnel using your own pair of keys.&gt; **IMPORTANT**: This feature is only available when you clone your git repository by using the function `init_git_cloudflared()`You need to follow these steps:1. Create a pair of SSH key2. Copy your **public key** (usually it's in the file `~/.ssh/id_rsa.pub`) and make sure you keep your **private key** in a safe place3. In the root of your github repository, create a folder called `.colab_ssh` and a file within it called `authorized_keys`4. Paste your **public key** inside the file `.collab_ssh/authorized_keys`5. Push your changes to the repository and launch the clone again from your Google Colab Notebook&lt;details&gt;&lt;summary&gt;&lt;b&gt;How it works behind the scenes ?&lt;/b&gt;&lt;/summary&gt; We get your **public key** from the repository passed into the `init_git()` function and then we add it to the  `authorized_keys` file (found in `~/.ssh` folder).&lt;/details&gt;### Other useful documentation- [Exposing a Google Colab environment variable](docs/expose-env-variable.md)## API ReferenceCheck the API reference on this [page](docs/api-reference.md).## FAQ&lt;details&gt;&lt;summary&gt; &lt;b&gt; Can I open the Colab notebook automatically without user interaction ?&lt;/b&gt; &lt;/summary&gt;No, you still need to open the Google Colab Notebook interface manually in order to setup this tool. Google Colab doesn't have an API yet to automatically run a notebook for you.&lt;/details&gt;&lt;details&gt;&lt;summary&gt; &lt;b&gt; Some environment variables are available on Google Colab but not available when executing from the terminal ?&lt;/b&gt; &lt;/summary&gt;Check out the documentation for how you can [Expose a Google Colab environment variable](docs/expose-env-variable.md).&lt;/details&gt;# Sponsor this project :)If you want to buy me a cup of coffee, feel free to reach me or use the following IBAN (International Bank Account Number):```TN5904018104003696876646```# ContributionStart by [opening an issue](https://github.com/WassimBenzarti/colab-ssh) so can start working together to enhance the experience of Google Colab users. We would love to hear your ideas!</longdescription>
</pkgmetadata>