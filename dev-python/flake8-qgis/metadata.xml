<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># flake8-qgis[![PyPI version](https://badge.fury.io/py/flake8-qgis.svg)](https://badge.fury.io/py/flake8-qgis)[![Downloads](https://img.shields.io/pypi/dm/flake8-qgis.svg)](https://pypistats.org/packages/flake8-qgis)![CI](https://github.com/GispoCoding/flake8-qgis/workflows/CI/badge.svg)[![Code on Github](https://img.shields.io/badge/Code-GitHub-brightgreen)](https://github.com/GispoCoding/flake8-qgis)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336)](https://pycqa.github.io/isort/)[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/pre-commit/pre-commit)A [flake8](https://flake8.pycqa.org/en/latest/index.html) plugin for QGIS3 python plugins written in Python.Made with Cookiecutter template [cookiecutter-flake8-plugin](https://github.com/MartinThoma/cookiecutter-flake8-plugin).Inspired by [flake8-simplify](https://github.com/MartinThoma/flake8-simplify).## InstallationInstall with `pip`:```bashpip install flake8-qgis```## UsageJust call `flake8 .` in your package or `flake your.py`.## Rules* `QGS101`: Don't use from-imports from qgis protected members ([example](#QGS101))* `QGS102`: Don't use imports from qgis protected members ([example](#QGS102))* `QGS103`: Don't use from-imports from PyQt directly ([example](#QGS103))* `QGS104`: Don't use imports from PyQt directly ([example](#QGS104))* `QGS105`: Don't pass QgisInterface as an argument ([example](#QGS105))* `QGS106`: Don't import gdal directly, import if from osgeo package ([example](#QGS106))You might have good reasons to ignore some rules.To do that, use the standard Flake8 configuration. For example, within the `setup.cfg` file:```python[flake8]ignore = QGS101, QGS102```## Examples### QGS101```python# Badfrom qgs._core import QgsMapLayer, QgsVectorLayerfrom qgis._core import QgsApplication# Goodfrom qgs.core import QgsMapLayer, QgsVectorLayerfrom qgis.core import QgsApplication```### QGS102```python# Badimport qgs._core.QgsVectorLayer as QgsVectorLayer# Goodimport qgs.core.QgsVectorLayer as QgsVectorLayer```### QGS103```python# Badfrom PyQt5.QtCore import pyqtSignal# Goodfrom qgis.PyQt.QtCore import pyqtSignal```### QGS104```python# Badimport PyQt5.QtCore.pyqtSignal as pyqtSignal# Goodimport qgis.PyQt.QtCore.pyqtSignal as pyqtSignal```### QGS105```python# Bad: iface passed as argumentdef some_function(somearg, iface):    # do something with iface# Good: iface importedfrom qgis.utils import ifacedef some_function(somearg):    # do something with iface``````python# in classFactory the passing is OK, since QGIS injects itdef classFactory(iface):    # preferably do not pass the iface to plugin```### QGS106```python# Badimport gdalimport ogr# Goodfrom osgeo import gdal```</longdescription>
</pkgmetadata>