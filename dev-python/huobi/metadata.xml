<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HuobiHuobi Python SDK## Requirements```bashPython&gt;=3.6```## Installaton```bashpip install huobi```## Usage### Rest APIExample: ```python&gt;&gt;&gt; from huobi import HuobiRestClient&gt;&gt;&gt; client = HuobiRestClient(access_key=..., secret_key=...)&gt;&gt;&gt; trades = client.market_history_trade(symbol='ethusdt').data```To see all available methods and their arguments:```python&gt;&gt;&gt; from huobi import HuobiRestClient&gt;&gt;&gt; help(HuobiRestClient)&gt;&gt;&gt; help(HuobiRestClient.symbols)```### Real Time API&gt; Rudimentary websocket subscription supportPlease refer to Huobi's documentation for available subscribe channels.If callback is not a coroutine function, run_in_executor with defaultExecutor will be called.Example:```pythonfrom huobi import subscribe&gt;&gt;&gt; def btc_callback(data):        print(data)&gt;&gt;&gt; async def eth_callback(data):        print(data)&gt;&gt;&gt; task = subscribe({        'market.btcusdt.kline.1min': {            'callback': btc_callback        },        'market.ethusdt.kline.1min': {            'callback': eth_callback        },    })&gt;&gt;&gt; asyncio.get_event_loop().run_until_complete(task)```</longdescription>
</pkgmetadata>