<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h3 align=&quot;center&quot;&gt;AutoML Alex&lt;/h3&gt;&lt;div align=&quot;center&quot;&gt;[![Downloads](https://pepy.tech/badge/automl-alex)](https://pepy.tech/project/automl-alex)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/automl-alex)![PyPI](https://img.shields.io/pypi/v/automl-alex)[![CodeFactor](https://www.codefactor.io/repository/github/alex-lekov/automl_alex/badge)](https://www.codefactor.io/repository/github/alex-lekov/automl_alex)[![Telegram](https://img.shields.io/badge/chat-on%20Telegram-2ba2d9.svg)](https://t.me/automlalex)[![License](https://img.shields.io/badge/license-MIT-blue.svg)](/LICENSE)&lt;/div&gt;---&lt;p align=&quot;center&quot;&gt; State-of-the art Automated Machine Learning python library for Tabular Data&lt;/p&gt;## Works with Tasks:-   [x] Binary Classification-   [x] Regression-   [ ] Multiclass Classification (in progress...)### Benchmark Results&lt;img width=800 src=&quot;https://github.com/Alex-Lekov/AutoML-Benchmark/blob/master/img/Total_SUM.png&quot; alt=&quot;bench&quot;&gt;The bigger, the better   From [AutoML-Benchmark](https://github.com/Alex-Lekov/AutoML-Benchmark/) ### Scheme&lt;img width=800 src=&quot;https://github.com/Alex-Lekov/AutoML_Alex/blob/develop/examples/img/shema.png&quot; alt=&quot;scheme&quot;&gt;# Features- Automated Data Clean (Auto Clean)- Automated **Feature Engineering** (Auto FE)- Smart Hyperparameter Optimization (HPO)- Feature Generation- Feature Selection- Models Selection- Cross Validation- Optimization Timelimit and EarlyStoping- Save and Load (Predict new data)# Installation```pythonpip install automl-alex```# Docs[DocPage](https://alex-lekov.github.io/AutoML_Alex/)# ðŸš€ ExamplesClassifier:```pythonfrom automl_alex import AutoMLClassifiermodel = AutoMLClassifier()model.fit(X_train, y_train, timeout=600)predicts = model.predict(X_test)```Regression:```pythonfrom automl_alex import AutoMLRegressormodel = AutoMLRegressor()model.fit(X_train, y_train, timeout=600)predicts = model.predict(X_test)```DataPrepare:```pythonfrom automl_alex import DataPreparede = DataPrepare()X_train = de.fit_transform(X_train)X_test = de.transform(X_test)```Simple Models Wrapper:```pythonfrom automl_alex import LightGBMClassifiermodel = LightGBMClassifier()model.fit(X_train, y_train)predicts = model.predict_proba(X_test)model.opt(X_train, y_train,    timeout=600, # optimization time in seconds,    )predicts = model.predict_proba(X_test)```More examples in the folder ./examples:- [01_Quick_Start.ipynb](https://github.com/Alex-Lekov/AutoML_Alex/blob/master/examples/01_Quick_Start.ipynb)  [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/Alex-Lekov/AutoML_Alex/blob/master/examples/01_Quick_Start.ipynb)- [02_Data_Cleaning_and_Encoding_(DataPrepare).ipynb](https://github.com/Alex-Lekov/AutoML_Alex/blob/master/examples/02_Data_Cleaning_and_Encoding_(DataPrepare).ipynb)  [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/Alex-Lekov/AutoML_Alex/blob/master/examples/02_Data_Cleaning_and_Encoding_(DataPrepare).ipynb)- [03_Models.ipynb](https://github.com/Alex-Lekov/AutoML_Alex/blob/master/examples/03_Models.ipynb)  [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/Alex-Lekov/AutoML_Alex/blob/master/examples/03_Models.ipynb)- [04_ModelsReview.ipynb](https://github.com/Alex-Lekov/AutoML_Alex/blob/master/examples/04_ModelsReview.ipynb)  [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/Alex-Lekov/AutoML_Alex/blob/master/examples/04_ModelsReview.ipynb)- [05_BestSingleModel.ipynb](https://github.com/Alex-Lekov/AutoML_Alex/blob/master/examples/05_BestSingleModel.ipynb)  [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/Alex-Lekov/AutoML_Alex/blob/master/examples/05_BestSingleModel.ipynb)- [Production Docker template](https://github.com/Alex-Lekov/AutoML_Alex/blob/master/examples/prod_sample)# What's insideIt integrates many popular frameworks:- scikit-learn- XGBoost- LightGBM- CatBoost- Optuna- ...# Works with Features-   [x] Categorical Features-   [x] Numerical Features-   [x] Binary Features-   [ ] Text-   [ ] Datetime-   [ ] Timeseries-   [ ] Image# Note- **With a large dataset, a lot of memory is required!**Library creates many new features. If you have a large dataset with a large number of features (more than 100), you may need a lot of memory.# Realtime DashboardWorks with [optuna-dashboard](https://github.com/optuna/optuna-dashboard)&lt;img width=800 src=&quot;https://github.com/Alex-Lekov/AutoML_Alex/blob/develop/examples/img/dashboard.gif&quot; alt=&quot;Dashboard&quot;&gt;Run```console$ optuna-dashboard sqlite:///db.sqlite3```# Road Map-   [x] Feature Generation-   [x] Save/Load and Predict on New Samples-   [x] Advanced Logging-   [x] Add opt Pruners-   [ ] Docs Site-   [ ] DL Encoders-   [ ] Add More libs (NNs)-   [ ] Multiclass Classification-   [ ] Build pipelines# Contact[Telegram Group](https://t.me/automlalex)</longdescription>
</pkgmetadata>