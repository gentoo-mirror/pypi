<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Moto - Mock AWS Services[![Join the chat at https://gitter.im/awsmoto/Lobby](https://badges.gitter.im/awsmoto/Lobby.svg)](https://gitter.im/awsmoto/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)[![Build Status](https://github.com/getmoto/moto/workflows/TestNDeploy/badge.svg)](https://github.com/getmoto/moto/actions)[![Coverage Status](https://codecov.io/gh/getmoto/moto/branch/master/graph/badge.svg)](https://codecov.io/gh/getmoto/moto)[![Docs](https://readthedocs.org/projects/pip/badge/?version=stable)](http://docs.getmoto.org)[![PyPI](https://img.shields.io/pypi/v/moto.svg)](https://pypi.org/project/moto/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/moto.svg)](#)[![PyPI - Downloads](https://img.shields.io/pypi/dw/moto.svg)](https://pypistats.org/packages/moto)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)## Install```console$ pip install 'moto[ec2,s3,all]'```## In a nutshellMoto is a library that allows your tests to easily mock out AWS Services.Imagine you have the following python code that you want to test:```pythonimport boto3class MyModel:    def __init__(self, name, value):        self.name = name        self.value = value    def save(self):        s3 = boto3.client(&quot;s3&quot;, region_name=&quot;us-east-1&quot;)        s3.put_object(Bucket=&quot;mybucket&quot;, Key=self.name, Body=self.value)```Take a minute to think how you would have tested that in the past.Now see how you could test it with Moto:```pythonimport boto3from moto import mock_s3from mymodule import MyModel@mock_s3def test_my_model_save():    conn = boto3.resource(&quot;s3&quot;, region_name=&quot;us-east-1&quot;)    # We need to create the bucket since this is all in Moto's 'virtual' AWS account    conn.create_bucket(Bucket=&quot;mybucket&quot;)    model_instance = MyModel(&quot;steve&quot;, &quot;is awesome&quot;)    model_instance.save()    body = conn.Object(&quot;mybucket&quot;, &quot;steve&quot;).get()[&quot;Body&quot;].read().decode(&quot;utf-8&quot;)    assert body == &quot;is awesome&quot;```With the decorator wrapping the test, all the calls to s3 are automatically mocked out. The mock keeps the state of the buckets and keys.For a full list of which services and features are covered, please see our [implementation coverage](https://github.com/getmoto/moto/blob/master/IMPLEMENTATION_COVERAGE.md).### DocumentationThe full documentation can be found here:[http://docs.getmoto.org/en/latest/](http://docs.getmoto.org/en/latest/)### Security contact informationTo report a security vulnerability, please use the[Tidelift security contact](https://tidelift.com/security).Tidelift will coordinate the fix and disclosure.</longdescription>
</pkgmetadata>