<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Utility for controlling HID USB RelaysThis utility is a Python version of [usb-relay-hid](https://github.com/pavel-a/usb-relay-hid)# InstallationThe latest version can be installed using pip:```python3 -m pip install pyhid-usb-relay```## Manual InstallationThe library can be manually installed using [poetry](https://python-poetry.org/):```poetry install```From here, you can either run the `pyhid-usb-relay` command with:```poetry run pyhid-usb-relay```If you want to build a wheel for installation, run```poetry build```# Usage## Standalone app outside of python```shellpyhid-usb-relay --help```## Inside a python app/script```import pyhid_usb_relayrelay = pyhid_usb_relay.find()print(relay.state)print(&quot;Toggeling relay&quot;)relay.toggle_state(1)print(relay.state)```# ConfigurationRelay configuration is read from the file`$XDG_CONFIG_HOME/usb-hid-relay/config.yaml` (usually`~/.config/usb-hid-relay/config.yaml`). This YAML file should contain a toplevel dictionary key for each relay serial number to be configured, like so:```yaml5291D:  defaults:    ...  aliases:    ...```The following properties may be defined in the `default` section and apply toall relays on the board:* `invert` - A boolean that indicates if the relay logic should be inverted* `pulse-time` - A floating point number of seconds the relay should remain inthe opposite state when `pyhid-usb-relay toggle --pulse` is calledAliases are created by adding a new key under `aliases` with a `relay` propertyindicating which relay number the alias controls. For example the followingconfig creates an alias called `foo` that may be used in place of relay number2 in the API:```yaml5219D:  aliases:    foo:      relay: 2```Aliases may also define any of the properties listed in `defaults`, in whichcase they only apply when the specific alias is used. Note that theseproperties apply to the _alias_ not the relay number. Using a relay number inthe API will only apply the defaultsAn example configuration is show here:```yaml# Define properties for relay board with serial 5291D5291D:  defaults:    invert: true    # Invert all relays by default    pulse-time: 5.0 # Default pulse time is 5 seconds for this board  aliases:    foo:                # Create an alias called &quot;foo&quot;      relay: 1          # This alias controls relay 1      invert: false     # Don't invert this alias (overrides the default)      pulse-time: 1.0   # Override default pulse-time for this alias```# PermissionsIf you want to access the relay devices as a normal user (which is recommended,since it will respect your local configuration), you will need to modify yourudev rules to allow access to the HID device. You can do this by creating afile named `/etc/udev/rules.d/90-hidusb-relay.rules` with the followingcontents:```# Give all users access to USB HID RelaySUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;16c0&quot;, ATTRS{idProduct}==&quot;05df&quot;, MODE:=&quot;0660&quot;, GROUP=&quot;dialout&quot;```You may need to reload your udev rules with `sudo udevadm control--reload-rules` and unplug and reattach the USB relay board for this to takeeffect**NOTE** This rule allows any user that is part of the `dialout` group toaccess the board. If this is not what you want, you should change the udevrules.# Fixing Serial NumbersThe relays that this tool is designed to control have a quirk that they allreport the same USB Vendor, Product, and Serial Number (The serial number usedby this code is retrieved by the HID API). This can make it hard to distinguishbetween multiple relays attached to the same device using udev rules.The `pyhid-usb-relay` tool can be used to help resolve this by using the`get-serial` subcommand, which will fetch the HID serial number from the devicewith a udev rule that looks like:```SUBSYSTEM==&quot;usb&quot;, ATTR{idVendor}==&quot;16c0&quot;, ATTR{idProduct}==&quot;05df&quot;, ACTION==&quot;add&quot;, PROGRAM=&quot;/usr/local/bin/pyhid-usb-relay get-serial '%E{BUSNUM}' '%E{DEVNUM}'&quot;, ENV{ID_SERIAL}:=&quot;%c&quot;```</longdescription>
</pkgmetadata>