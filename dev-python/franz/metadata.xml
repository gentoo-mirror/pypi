<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># FranzA lite wrapper around [Kafka](https://kafka.apache.org/) and [RabbitMQ](https://www.rabbitmq.com/).# Usage## Installation- `pip install franz` (recommended)- `pip -e git+git@github.com:eshares/franz.git@master#egg=franz`  - Change `@master` to a version or commit if required. ## RabbitMQ### Sending a message```pythonimport randomimport timeimport franzclass FranzData(franz.FranzEvent):    def serialize(self):        return {'data': time.time()}with franz.RabbitProducer(exchange='topic_link') as p:    while True:        key = random.choice(['hello.world', 'hello.bob'])        p.send_message(key, FranzData())        time.sleep(1)```### Consuming messages```pythonimport franzdef callback(ch, method, properties, body):    print('[+] {} from {}'.format(body, method.routing_key))with franz.RabbitConsumer('hello.*', exchange='topic_link') as c:    c.consume_messages(callback)```## Kafka### Sending a message```pythonimport franzfrom myapp.models import SomeModel  # SomeModel must inherit `franz.FranzEvent`instance = SomeModel.objects.get(pk=1)producer = franz.KafkaProducer()producer.send_message('TopicA', instance)```### Consuming messages```pythonimport franzconsumer = franz.KafkaConsumer('TopicA')for message in consumer:    print(message.value)```### Kafka/Docker Resources- [Docker image](https://github.com/spotify/docker-kafka)- [Helpful article](https://howtoprogram.xyz/2016/07/21/using-apache-kafka-docker/)- Create topic```./kafka-topics.sh --create --topic test --replication-factor 1 --partitions 1 --zookeeper 0.0.0.0:2181```- Consuming```./kafka-console-consumer.sh --topic test --from-beginning --zookeeper 0.0.0.0:2181```- Producing```./kafka-console-producer.sh --topic test --broker-list 0.0.0.0:9092```# Testing```bash# setup versionspyenv install 3.5.3pyenv install 3.6.3pyenv install 3.7.0pyenv virtualenv franz 3.5.3pyenv local franz 3.5.3 3.6.3 3.7.0pip install -r requirements-dev.txt# run tests (python 3.5, 3.6, 3.7)tox```</longdescription>
</pkgmetadata>