<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Welcome to Buzio's documentation!=================================.. image:: https://img.shields.io/pypi/v/nine.svg   :target: https://pypi.python.org/pypi/buzio.. image:: https://travis-ci.org/chrismaille/buzio.svg?branch=master    :target: https://travis-ci.org/chrismaille/buzio.. image:: https://img.shields.io/pypi/pyversions/buzio.svg   :target: https://pypi.python.org/pypi/buzio.. image:: https://coveralls.io/repos/github/chrismaille/buzio/badge.svg?branch=master:target: https://coveralls.io/github/chrismaille/buzio?branch=master.. image:: https://readthedocs.org/projects/buzio/badge/?version=latest:target: http://buzio.readthedocs.io/en/latest/?badge=latest:alt: Documentation Status* Read the Docs: http://buzio.readthedocs.io/* Source Code: https://github.com/chrismaille/buzioBuzio_ is a python library tool for printing formatted text in terminal, similar to termcolor_ or colored_.Installing Buzio-----------------Install Buzio using the command::    $ pip install buzioImporting the Library---------------------.. code-block:: python    from buzio import console, formatStrThe ``console`` is a instance of the ``Console`` class initialized with default color themes. You can also import the class and instantiate with your own settings (See the :doc:reference for more info)The ``formatStr`` is also a instance of the ``Console`` class too, but instead of printing in terminal the message, this instance just return the formatted text.The default color themes++++++++++++++++++++++++=================== =======================Method              Text Color=================== =======================console.box         Fore.CYANconsole.error       Fore.REDconsole.info        Fore.CYANconsole.section     Fore.LIGHTYELLOW_EXconsole.success     Fore.GREENconsole.warning     Fore.YELLOW=================== =======================These colors are based in colorama_ constants.Generate fancy formats......................**&quot;Section&quot; example 1**:.. code-block:: pythonfrom buzio import consoleconsole.section(&quot;First Section&quot;)Terminal output::$ &gt;&gt; First Section$ ----------------Humanize Python objects.......................Buzio_ can automatically humanize any python object for printing in terminal:.. code-block:: pythonfrom datetime import datetime, timedeltafrom buzio import consoletoday = datetime.now()yesterday = today - timedelta(days=1)my_dict = {&quot;start day&quot;: yesterday,&quot;end day&quot;: today}console.box(my_dict, date_format=&quot;%a, %b-%d-%Y&quot;)The output on terminal will be (in blue color)::$ *********************************$ *                               *$ *  start day: Thu, Feb-01-2018  *$ *   end day: Fri, Feb-02-2018   *$ *                               *$ *********************************Ask for Input data..................You can use Buzio_ to automatically generate &quot;choose&quot; and &quot;select&quot; questions, based on Python objects:**&quot;Choose&quot; example:**.. code-block:: pythonfrom buzio import consolemy_choices = [&quot;Orange&quot;,&quot;Apple&quot;,&quot;Potato&quot;]console.choose(my_choices)Terminal output::$ 1. Orange$ 2. Apple$ 3. Potato$ $ Select (1-3): ?Run terminal commands.....................You can use Buzio_ to run terminal commands (using Python ``subprocess``) and get the *stdout* result::&gt;&gt;&gt; from buzio import console&gt;&gt;&gt; ret = console.run(&quot;echo HelloWorld!&quot;, get_stdout=True, verbose=True)Cmd: echo HelloWorld!&gt;&gt;&gt; print(ret)HelloWorld!Further reading---------------Please check full documentation in http://buzio.readthedocs.io/.. _Buzio: https://github.com/chrismaille/buzio.. _colored: https://pypi.python.org/pypi/colored.. _termcolor: https://pypi.python.org/pypi/termcolor.. _colorama: https://pypi.python.org/pypi/colorama</longdescription>
</pkgmetadata>