<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pip-licenses============|Build Status| |PyPI - Python Version| |PyPI version| |GitHub Release||Codecov| |GitHub contributors| |BSD License| |PyPI - Downloads|Dump the software license list of Python packages installed with pip.Table of Contents------------------  `Description &lt;#description&gt;`__-  `Installation &lt;#installation&gt;`__-  `Usage &lt;#usage&gt;`__-  `Command-Line Options &lt;#command-line-options&gt;`__   -  `Common options &lt;#common-options&gt;`__      -  `Option: python &lt;#option-python&gt;`__      -  `Option: from &lt;#option-from&gt;`__      -  `Option: order &lt;#option-order&gt;`__      -  `Option: format &lt;#option-format&gt;`__         -  `Markdown &lt;#markdown&gt;`__         -  `reST &lt;#rest&gt;`__         -  `Confluence &lt;#confluence&gt;`__         -  `HTML &lt;#html&gt;`__         -  `JSON &lt;#json&gt;`__         -  `JSON LicenseFinder &lt;#json-licensefinder&gt;`__         -  `CSV &lt;#csv&gt;`__         -  `Plain Vertical &lt;#plain-vertical&gt;`__      -  `Option: summary &lt;#option-summary&gt;`__      -  `Option: output-file &lt;#option-output-file&gt;`__      -  `Option: ignore-packages &lt;#option-ignore-packages&gt;`__      -  `Option: packages &lt;#option-packages&gt;`__   -  `Format options &lt;#format-options&gt;`__      -  `Option: with-system &lt;#option-with-system&gt;`__      -  `Option: with-authors &lt;#option-with-authors&gt;`__      -  `Option: with-maintainers &lt;#option-with-maintainers&gt;`__      -  `Option: with-urls &lt;#option-with-urls&gt;`__      -  `Option: with-description &lt;#option-with-description&gt;`__      -  `Option: with-license-file &lt;#option-with-license-file&gt;`__      -  `Option: filter-strings &lt;#option-filter-strings&gt;`__      -  `Option: filter-code-page &lt;#option-filter-code-page&gt;`__   -  `Verify options &lt;#verify-options&gt;`__      -  `Option: fail-on &lt;#option-fail-on&gt;`__      -  `Option: allow-only &lt;#option-allow-only&gt;`__   -  `More Information &lt;#more-information&gt;`__-  `Dockerfile &lt;#dockerfile&gt;`__-  `About UnicodeEncodeError &lt;#about-unicodeencodeerror&gt;`__-  `License &lt;#license&gt;`__   -  `Dependencies &lt;#dependencies&gt;`__-  `Uninstallation &lt;#uninstallation&gt;`__-  `Contributing &lt;#contributing&gt;`__Description-----------``pip-licenses`` is a CLI tool for checking the software license ofinstalled Python packages with pip.Implemented with the idea inspired by ``composer licenses`` command inComposer (a.k.a PHP package management tool).https://getcomposer.org/doc/03-cli.md#licensesInstallation------------Install it via PyPI using ``pip`` command... code:: bash   # Install or Upgrade to newest available version   $ pip install -U pip-licenses   # If upgrading from pip-licenses 3.x, remove PTable   $ pip uninstall -y PTable**Note for Python 3.7 users:** pip-licenses 4.x discontinued supportearlier than the Python 3.7 EOL schedule. If you want to use it withPython 3.7, install pip-licenses 3.x... code:: bash   # Using old version for the Python 3.7 environment   $ pip install 'pip-licenses&lt;4.0'**Note:** If you are still using Python 2.7, install version less than2.0. No new features will be provided for version 1.x... code:: bash   $ pip install 'pip-licenses&lt;2.0'Usage-----Execute the command with your venv (or virtualenv) environment... code:: bash   # Install packages in your venv environment   (venv) $ pip install Django pip-licenses   # Check the licenses with your venv environment   (venv) $ pip-licenses    Name    Version  License    Django  2.0.2    BSD    pytz    2017.3   MITCommand-Line Options--------------------Common options~~~~~~~~~~~~~~Option: python^^^^^^^^^^^^^^By default, this tools finds the packages from the environmentpip-licenses is launched from, by searching in current python's``sys.path`` folders. In the case you want to search for packages in another environment (e.g. if you want to run pip-licenses from its ownisolated environment), you can specify a path to a python executable.The packages will be searched for in the given python's ``sys.path``,free of pip-licenses dependencies... code:: bash   (venv) $ pip-licenses --with-system | grep pip    pip                       22.3.1       MIT License    pip-licenses              4.1.0        MIT License.. code:: bash   (venv) $ pip-licenses --python=&lt;/path/to/other/env&gt;/bin/python --with-system | grep pip    pip                       23.0.1       MIT License Option: from^^^^^^^^^^^^By default, this tool finds the license from `TroveClassifiers &lt;https://pypi.org/classifiers/&gt;`__ or package Metadata. SomePython packages declare their license only in Trove Classifiers.(See also): `Set license to MIT in setup.py by alisianoi ・ Pull Request#1058 ・pypa/setuptools &lt;https://github.com/pypa/setuptools/pull/1058&gt;`__, `PEP314#License &lt;https://www.python.org/dev/peps/pep-0314/#license&gt;`__For example, even if you check with the ``pip show`` command, thelicense is displayed as ``UNKNOWN``... code:: bash   (venv) $ pip show setuptools   Name: setuptools   Version: 38.5.0   Summary: Easily download, build, install, upgrade, and uninstall Python packages   Home-page: https://github.com/pypa/setuptools   Author: Python Packaging Authority   Author-email: distutils-sig@python.org   License: UNKNOWNThe mixed mode (``--from=mixed``) of this tool works well and looks forlicenses... code:: bash   (venv) $ pip-licenses --from=mixed --with-system | grep setuptools    setuptools    38.5.0   MIT LicenseIn mixed mode, it first tries to look for licenses in the TroveClassifiers. When not found in the Trove Classifiers, the licensedeclared in Metadata is displayed.If you want to look only in metadata, use ``--from=meta``. If you wantto look only in Trove Classifiers, use ``--from=classifier``.To list license information from both metadata and classifier, use``--from=all``.**Note:** If neither can find license information, please check with the``with-authors`` and ``with-urls`` options and contact the softwareauthor.-  The ``m`` keyword is prepared as alias of ``meta``.-  The ``c`` keyword is prepared as alias of ``classifier``.-  The ``mix`` keyword is prepared as alias of ``mixed``.   -  Default behavior in this toolOption: order^^^^^^^^^^^^^By default, it is ordered by package name.If you give arguments to the ``--order`` option, you can output in othersorted order... code:: bash   (venv) $ pip-licenses --order=licenseOption: format^^^^^^^^^^^^^^By default, it is output to the ``plain`` format.Markdown''''''''When executed with the ``--format=markdown`` option, you can output listin markdown format. The ``m`` ``md`` keyword is prepared as alias of``markdown``... code:: bash   (venv) $ pip-licenses --format=markdown   | Name   | Version | License |   |--------|---------|---------|   | Django | 2.0.2   | BSD     |   | pytz   | 2017.3  | MIT     |When inserted in a markdown document, it is rendered as follows:====== ======= =======Name   Version License====== ======= =======Django 2.0.2   BSDpytz   2017.3  MIT====== ======= =======reST''''When executed with the ``--format=rst`` option, you can output list in&quot;`Gridtables &lt;http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#grid-tables&gt;`__&quot;of reStructuredText format. The ``r`` ``rest`` keyword is prepared asalias of ``rst``... code:: bash   (venv) $ pip-licenses --format=rst   +--------+---------+---------+   | Name   | Version | License |   +--------+---------+---------+   | Django | 2.0.2   | BSD     |   +--------+---------+---------+   | pytz   | 2017.3  | MIT     |   +--------+---------+---------+Confluence''''''''''When executed with the ``--format=confluence`` option, you can outputlist in `Confluence (or JIRA) Wikimarkup &lt;https://confluence.atlassian.com/doc/confluence-wiki-markup-251003035.html#ConfluenceWikiMarkup-Tables&gt;`__format. The ``c`` keyword is prepared as alias of ``confluence``... code:: bash   (venv) $ pip-licenses --format=confluence   | Name   | Version | License |   | Django | 2.0.2   | BSD     |   | pytz   | 2017.3  | MIT     |HTML''''When executed with the ``--format=html`` option, you can output list inHTML table format. The ``h`` keyword is prepared as alias of ``html``... code:: bash   (venv) $ pip-licenses --format=html   &lt;table&gt;       &lt;tr&gt;           &lt;th&gt;Name&lt;/th&gt;           &lt;th&gt;Version&lt;/th&gt;           &lt;th&gt;License&lt;/th&gt;       &lt;/tr&gt;       &lt;tr&gt;           &lt;td&gt;Django&lt;/td&gt;           &lt;td&gt;2.0.2&lt;/td&gt;           &lt;td&gt;BSD&lt;/td&gt;       &lt;/tr&gt;       &lt;tr&gt;           &lt;td&gt;pytz&lt;/td&gt;           &lt;td&gt;2017.3&lt;/td&gt;           &lt;td&gt;MIT&lt;/td&gt;       &lt;/tr&gt;   &lt;/table&gt;JSON''''When executed with the ``--format=json`` option, you can output list inJSON format easily allowing post-processing. The ``j`` keyword isprepared as alias of ``json``... code:: json   [     {       &quot;Author&quot;: &quot;Django Software Foundation&quot;,       &quot;License&quot;: &quot;BSD&quot;,       &quot;Name&quot;: &quot;Django&quot;,       &quot;URL&quot;: &quot;https://www.djangoproject.com/&quot;,       &quot;Version&quot;: &quot;2.0.2&quot;     },     {       &quot;Author&quot;: &quot;Stuart Bishop&quot;,       &quot;License&quot;: &quot;MIT&quot;,       &quot;Name&quot;: &quot;pytz&quot;,       &quot;URL&quot;: &quot;http://pythonhosted.org/pytz&quot;,       &quot;Version&quot;: &quot;2017.3&quot;     }   ]JSON LicenseFinder''''''''''''''''''When executed with the ``--format=json-license-finder`` option, you canoutput list in JSON format that is identical to`LicenseFinder &lt;https://github.com/pivotal/LicenseFinder&gt;`__. The``jlf`` keyword is prepared as alias of ``jlf``. This makes pip-licensesa drop-in replacement for LicenseFinder... code:: json   [     {       &quot;licenses&quot;: [&quot;BSD&quot;],       &quot;name&quot;: &quot;Django&quot;,       &quot;version&quot;: &quot;2.0.2&quot;     },     {       &quot;licenses&quot;: [&quot;MIT&quot;],       &quot;name&quot;: &quot;pytz&quot;,       &quot;version&quot;: &quot;2017.3&quot;     }   ]CSV'''When executed with the ``--format=csv`` option, you can output list inquoted CSV format. Useful when you want to copy/paste the output to anExcel sheet... code:: bash   (venv) $ pip-licenses --format=csv   &quot;Name&quot;,&quot;Version&quot;,&quot;License&quot;   &quot;Django&quot;,&quot;2.0.2&quot;,&quot;BSD&quot;   &quot;pytz&quot;,&quot;2017.3&quot;,&quot;MIT&quot;Plain Vertical''''''''''''''When executed with the ``--format=plain-vertical`` option, you canoutput a simple plain vertical output that is similar to Angular CLI's`--extractLicenses flag &lt;https://angular.io/cli/build#options&gt;`__. Thisformat minimizes rightward drift... code:: bash   (venv) $ pip-licenses --format=plain-vertical --with-license-file --no-license-path   pytest   5.3.4   MIT license   The MIT License (MIT)   Copyright (c) 2004-2020 Holger Krekel and others   Permission is hereby granted, free of charge, to any person obtaining a copy of   this software and associated documentation files (the &quot;Software&quot;), to deal in   the Software without restriction, including without limitation the rights to   use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies   of the Software, and to permit persons to whom the Software is furnished to do   so, subject to the following conditions:   The above copyright notice and this permission notice shall be included in all   copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   SOFTWARE.Option: summary^^^^^^^^^^^^^^^When executed with the ``--summary`` option, you can output a summary ofeach license... code:: bash   (venv) $ pip-licenses --summary --from=classifier --with-system    Count  License    2      BSD License    4      MIT License**Note:** When using this option, only ``--order=count`` or``--order=license`` has an effect for the ``--order`` option. And using``--with-authors`` and ``--with-urls`` will be ignored.Option: output-file^^^^^^^^^^^^^^^^^^^When executed with the ``--output-file`` option, write the result to thepath specified by the argument.::   (venv) $ pip-licenses --format=rst --output-file=/tmp/output.rst   created path: /tmp/output.rstOption: ignore-packages^^^^^^^^^^^^^^^^^^^^^^^When executed with the ``--ignore-packages`` option, ignore the packagespecified by argument from list output... code:: bash   (venv) $ pip-licenses --ignore-packages django    Name  Version  License    pytz  2017.3   MITPackage names of arguments can be separated by spaces... code:: bash   (venv) $ pip-licenses --with-system --ignore-packages django pip pip-licenses    Name        Version  License    prettytable 3.5.0    BSD License    pytz        2017.3   MIT    setuptools  38.5.0   UNKNOWN    wcwidth     0.2.5    MIT LicensePackages can also be specified with a version, only ignoring thatspecific version... code:: bash   (venv) $ pip-licenses --with-system --ignore-packages django pytz:2017.3    Name        Version  License    prettytable 3.5.0    BSD License    setuptools  38.5.0   UNKNOWN    wcwidth     0.2.5    MIT LicenseOption: packages^^^^^^^^^^^^^^^^When executed with the ``packages`` option, look at the packagespecified by argument from list output... code:: bash   (venv) $ pip-licenses --packages django    Name   Version  License    Django 2.0.2    BSDPackage names of arguments can be separated by spaces... code:: bash   (venv) $ pip-licenses --with-system --packages prettytable pytz    Name        Version  License    prettytable 3.5.0    BSD License    pytz        2017.3   MITFormat options~~~~~~~~~~~~~~Option: with-system^^^^^^^^^^^^^^^^^^^By default, system packages such as ``pip`` and ``setuptools`` areignored.And ``pip-licenses`` and the implicit dependency ``prettytable`` and``wcwidth`` will also be ignored.If you want to output all including system package, use the``--with-system`` option... code:: bash   (venv) $ pip-licenses --with-system    Name          Version  License    Django        2.0.2    BSD    pip           9.0.1    MIT    pip-licenses  1.0.0    MIT License    prettytable   3.5.0    BSD License    pytz          2017.3   MIT    setuptools    38.5.0   UNKNOWN    wcwidth       0.2.5    MIT LicenseOption: with-authors^^^^^^^^^^^^^^^^^^^^When executed with the ``--with-authors`` option, output with author ofthe package... code:: bash   (venv) $ pip-licenses --with-authors    Name    Version  License  Author    Django  2.0.2    BSD      Django Software Foundation    pytz    2017.3   MIT      Stuart BishopOption: with-maintainers^^^^^^^^^^^^^^^^^^^^^^^^When executed with the ``--with-maintainers`` option, output withmaintainer of the package.**Note:** This option is available for users who want information aboutthe maintainer as well as the author. See`#144 &lt;https://github.com/raimon49/pip-licenses/issues/144&gt;`__Option: with-urls^^^^^^^^^^^^^^^^^For packages without Metadata, the license is output as ``UNKNOWN``. Toget more package information, use the ``--with-urls`` option... code:: bash   (venv) $ pip-licenses --with-urls    Name    Version  License  URL    Django  2.0.2    BSD      https://www.djangoproject.com/    pytz    2017.3   MIT      http://pythonhosted.org/pytzOption: with-description^^^^^^^^^^^^^^^^^^^^^^^^When executed with the ``--with-description`` option, output with shortdescription of the package... code:: bash   (venv) $ pip-licenses --with-description    Name    Version  License  Description    Django  2.0.2    BSD      A high-level Python Web framework that encourages rapid development and clean, pragmatic design.    pytz    2017.3   MIT      World timezone definitions, modern and historicalOption: with-license-file^^^^^^^^^^^^^^^^^^^^^^^^^When executed with the ``--with-license-file`` option, output thelocation of the package's license file on disk and the full contents ofthat file. Due to the length of these fields, this option is best pairedwith ``--format=json``.If you also want to output the file ``NOTICE`` distributed under ApacheLicense etc., specify the ``--with-notice-file`` option additionally.**Note:** If you want to keep the license file path secret, specify``--no-license-path`` option together.Option: filter-strings^^^^^^^^^^^^^^^^^^^^^^Some package data contains Unicode characters which might cause problemsfor certain output formats (in particular ReST tables). If this filteris enabled, all characters which cannot be encoded with a given codepage (see ``--filter-code-page``) will be removed from any input strings(e.g. package name, description).Option: filter-code-page^^^^^^^^^^^^^^^^^^^^^^^^If the input strings are filtered (see ``--filter-strings``), you canspecify the applied code page (default ``latin-1``). A list of allavailable code pages can be found `codecs moduledocument &lt;https://docs.python.org/3/library/codecs.html#standard-encodings&gt;`__.Verify options~~~~~~~~~~~~~~Option: fail-on^^^^^^^^^^^^^^^Fail (exit with code 1) on the first occurrence of the licenses of thesemicolon-separated list. The license name matching is case-insensitive.If ``--from=all``, the option will apply to the metadata license field... code:: bash   (venv) $ pip-licenses --fail-on=&quot;MIT License;BSD License&quot;**Note:** Packages with multiple licenses will fail if at least onelicense is included in the fail-on list. For example:::   # keyring library has 2 licenses   $ pip-licenses --package keyring    Name     Version  License    keyring  23.0.1   MIT License; Python Software Foundation License   # If just &quot;Python Software Foundation License&quot; is specified, it will fail.   $ pip-licenses --package keyring --fail-on=&quot;Python Software Foundation License;&quot;   $ echo $?   1   # Matching is case-insensitive. Following check will fail:   $ pip-licenses --fail-on=&quot;mit license&quot;Option: allow-only^^^^^^^^^^^^^^^^^^Fail (exit with code 1) if none of the package licenses are in thesemicolon-separated list. The license name matching is case-insensitive.If ``--from=all``, the option will apply to the metadata license field... code:: bash   (venv) $ pip-licenses --allow-only=&quot;MIT License;BSD License&quot;**Note:** Packages with multiple licenses will only be allowed if atleast one license is included in the allow-only list. For example:::   # keyring library has 2 licenses   $ pip-licenses --package keyring    Name     Version  License    keyring  23.0.1   MIT License; Python Software Foundation License   # One or both licenses must be specified (order and case does not matter). Following checks will pass:   $ pip-licenses --package keyring --allow-only=&quot;MIT License&quot;   $ pip-licenses --package keyring --allow-only=&quot;mit License&quot;   $ pip-licenses --package keyring --allow-only=&quot;BSD License;MIT License&quot;   $ pip-licenses --package keyring --allow-only=&quot;Python Software Foundation License&quot;   $ pip-licenses --package keyring --allow-only=&quot;Python Software Foundation License;MIT License&quot;   # If none of the license in the allow list match, the check will fail.   $ pip-licenses --package keyring  --allow-only=&quot;BSD License&quot;   $ echo $?   1More Information~~~~~~~~~~~~~~~~Other, please make sure to execute the ``--help`` option.Dockerfile----------You can check the package license used by your app in the isolatedDocker environment... code:: bash   # Clone this repository to local   $ git clone https://github.com/raimon49/pip-licenses.git   $ cd pip-licenses   # Create your app's requirements.txt file   # Other ways, pip freeze &gt; docker/requirements.txt   $ echo &quot;Flask&quot; &gt; docker/requirements.txt   # Build docker image   $ docker build . -t myapp-licenses   # Check the package license in container   $ docker run --rm myapp-licenses    Name          Version  License    Click         7.0      BSD License    Flask         1.0.2    BSD License    Jinja2        2.10     BSD License    MarkupSafe    1.1.1    BSD License    Werkzeug      0.15.2   BSD License    itsdangerous  1.1.0    BSD License   # Check with options   $ docker run --rm myapp-licenses --summary    Count  License    4      BSD    2      BSD-3-Clause   # When you need help   $ docker run --rm myapp-licenses --help**Note:** This Docker image can not check package licenses with C and C++ Extensions. It only works with pure Python package dependencies.If you want to resolve build environment issues, try using not slimimage and more... code:: diff   diff --git a/Dockerfile b/Dockerfile   index bfc4edc..175e968 100644   --- a/Dockerfile   +++ b/Dockerfile   @@ -1,4 +1,4 @@   -FROM python:3.11-slim-bullseye   +FROM python:3.11-bullseyeAbout UnicodeEncodeError------------------------If a ``UnicodeEncodeError`` occurs, check your environment variables``LANG`` and ``LC_TYPE``.Often occurs in isolated environments such as Docker and tox.See useful reports:-  `#35 &lt;https://github.com/raimon49/pip-licenses/issues/35&gt;`__-  `#45 &lt;https://github.com/raimon49/pip-licenses/issues/45&gt;`__License-------`MITLicense &lt;https://github.com/raimon49/pip-licenses/blob/master/LICENSE&gt;`__Dependencies~~~~~~~~~~~~-  `prettytable &lt;https://pypi.org/project/prettytable/&gt;`__ by Luke   Maurits and maintainer of fork version Jazzband team under the   BSD-3-Clause License   -  **Note:** This package implicitly requires      `wcwidth &lt;https://pypi.org/project/wcwidth/&gt;`__.``pip-licenses`` has been implemented in the policy to minimize thedependence on external package.Uninstallation--------------Uninstall package and dependent package with ``pip`` command... code:: bash   $ pip uninstall pip-licenses prettytable wcwidthContributing------------See `contributionguidelines &lt;https://github.com/raimon49/pip-licenses/blob/master/CONTRIBUTING.md&gt;`__... |Build Status| image:: https://github.com/raimon49/pip-licenses/workflows/Python%20package/badge.svg   :target: https://github.com/raimon49/pip-licenses/actions?query=workflow%3A%22Python+package%22.. |PyPI - Python Version| image:: https://img.shields.io/pypi/pyversions/pip-licenses.svg   :target: https://pypi.org/project/pip-licenses/.. |PyPI version| image:: https://badge.fury.io/py/pip-licenses.svg   :target: https://badge.fury.io/py/pip-licenses.. |GitHub Release| image:: https://img.shields.io/github/release/raimon49/pip-licenses.svg   :target: https://github.com/raimon49/pip-licenses/releases.. |Codecov| image:: https://codecov.io/gh/raimon49/pip-licenses/branch/master/graph/badge.svg   :target: https://codecov.io/gh/raimon49/pip-licenses.. |GitHub contributors| image:: https://img.shields.io/github/contributors/raimon49/pip-licenses   :target: https://github.com/raimon49/pip-licenses/graphs/contributors.. |BSD License| image:: http://img.shields.io/badge/license-MIT-green.svg   :target: https://github.com/raimon49/pip-licenses/blob/master/LICENSE.. |PyPI - Downloads| image:: https://img.shields.io/pypi/dm/pip-licenses   :target: https://pypistats.org/packages/pip-licensesCHANGELOG---------.. _420:4.2.0~~~~~-  Implement new option ``--with-maintainers``-  Implement new option ``--python``-  Allow version spec in ``--ignore-packages`` parameters-  When the ``Author`` field is ``UNKNOWN``, the output is automatically   completed from ``Author-email``-  When the ``home-page`` field is ``UNKNOWN``, the output is   automatically completed from ``Project-URL``.. _410:4.1.0~~~~~-  Support case-insensitive license name matching around ``--fail-on``   and ``--allow-only`` parameters.. _403:4.0.3~~~~~-  Escape unicode output (to e.g. ``&amp;#123;``) in the html output.. _402:4.0.2~~~~~-  Add type annotations and code formatter.. _401:4.0.1~~~~~-  Fix &quot;pip-licenses&quot; is missing in output of   ``pip-licenses --with-system`` option.. _400:4.0.0~~~~~-  Support for Python 3.11-  Dropped support Python 3.7-  Migrate Docker base image from Alpine to Debian 11-slim-  Breaking changes   -  Does not work with PTable and depends on prettytable   -  Depend on importlib_metadata rather than pip.. _355:3.5.5~~~~~-  Search for path defined in `PEP   639 &lt;https://peps.python.org/pep-0639/&gt;`__ with   ``--with-license-file`` option-  Dropped support Python 3.6.. _354:3.5.4~~~~~-  Skip directories when detecting license files.. _353:3.5.3~~~~~-  Support pip 21.3 or later.. _352:3.5.2~~~~~-  Ignore spaces around ``--fail-on`` and ``--allow-only`` parameters.. _351:3.5.1~~~~~-  Fix the order in which multiple licenses are output.. _350:3.5.0~~~~~-  Handle multiple licenses better with options ``--fail-on`` and   ``--allow-only``-  Small change in output method for multiple licenses, change the   separator from comma to semicolon   -  Up to 3.4.0: ``Python Software Foundation License, MIT License``   -  3.5.0 or later:      ``Python Software Foundation License; MIT License``.. _340:3.4.0~~~~~-  Implement new option ``--packages``.. _331:3.3.1~~~~~-  Fix license summary refer to ``--from`` option.. _330:3.3.0~~~~~-  Improves the readability of the help command.. _320:3.2.0~~~~~-  Implement new option ``--from=all``-  Change license notation under `SPDX license   identifier &lt;https://spdx.org/licenses/&gt;`__ style.. _310:3.1.0~~~~~-  Implement new option for use in continuous integration   -  ``--fail-on``   -  ``--allow-only``.. _300:3.0.0~~~~~-  Dropped support Python 3.5-  Clarified support for Python 3.9-  Migrate package metadata to ``setup.cfg``-  Breaking changes   -  Change default behavior to ``--from=mixed``.. _230:2.3.0~~~~~-  Implement new option for manage unicode characters   -  ``--filter-strings``   -  ``--filter-code-page``.. _221:2.2.1~~~~~-  Fixed the file that is selected when multiple matches are made with   ``LICENSE*`` with run ``--with-license-file``.. _220:2.2.0~~~~~-  Implement new option ``--with-notice-file``-  Added to find British style file name ``LICENCE`` with run   ``--with-license-file``.. _211:2.1.1~~~~~-  Suppress errors when opening license files.. _210:2.1.0~~~~~-  Implement new option ``--format=plain-vertical``-  Support for outputting license file named ``COPYING *``.. _201:2.0.1~~~~~-  Better license file open handling in Python 3.. _200:2.0.0~~~~~-  Dropped support Python 2.7-  Breaking changes   -  Removed migration path to obsolete options      -  ``--from-classifier``      -  ``--format-markdown``      -  ``--format-rst``      -  ``--format-confluence``      -  ``--format-html``      -  ``--format-json``-  Implement new option ``--no-license-path``.. _1180:1.18.0~~~~~~-  Supports compatibility to work with either PTable or prettytable.. _1170:1.17.0~~~~~~-  Implement new option ``--output-file``-  Clarified support for Python 3.8.. _1161:1.16.1~~~~~~-  Add a help text for ``--format=json-license-finder`` option.. _1160:1.16.0~~~~~~-  Implement new option ``--format=json-license-finder``.. _1152:1.15.2~~~~~~-  Read license file works well with Windows.. _1151:1.15.1~~~~~~-  Skip parsing of license file for packages specified with   ``--ignore-packages`` option.. _1150:1.15.0~~~~~~-  Implement new option ``--format=csv``.. _1140:1.14.0~~~~~~-  Implement new option ``--from=mixed`` as a mixed mode.. _1130:1.13.0~~~~~~-  Implement new option ``--from=meta``, ``from=classifier``-  Dropped support Python 3.4.. _1121:1.12.1~~~~~~-  Fix bug   -  Change warning output to standard error.. _1120:1.12.0~~~~~~-  Supports execution within Docker container-  Warning of deprecated options-  Fix bug   -  Ignore ``OSI Approved`` string with multiple licenses.. _1110:1.11.0~~~~~~-  Implement new option ``--with-license-file``.. _1100:1.10.0~~~~~~-  Implement new option ``--with-description``.. _190:1.9.0~~~~~-  Implement new option ``--summary``.. _180:1.8.0~~~~~-  Implement new option ``--format-json``-  Dropped support Python 3.3.. _171:1.7.1~~~~~-  Fix bug   -  Support pip 10.x.. _170:1.7.0~~~~~-  Implement new option ``--format-confluence``.. _161:1.6.1~~~~~-  Fix bug   -  Support display multiple license with ``--from-classifier`` option-  Improve document   -  Add section of 'Uninstallation' in README.. _160:1.6.0~~~~~-  Implement new option ``--format-html``.. _150:1.5.0~~~~~-  Implement new option ``--format-rst``.. _140:1.4.0~~~~~-  Implement new option ``--format-markdown``-  Include LICENSE file in distribution package.. _130:1.3.0~~~~~-  Implement new option ``--ignore-packages``.. _120:1.2.0~~~~~-  Implement new option ``--from-classifier``.. _110:1.1.0~~~~~-  Improve document   -  Add ToC to README document   -  Add a information of dependencies.. _100:1.0.0~~~~~-  First stable release version.. _020:0.2.0~~~~~-  Implement new option ``--order``   -  Default behavior is ``--order=name``.. _010:0.1.0~~~~~-  First implementation version   -  Support options      -  ``--with-system``      -  ``--with-authors``      -  ``--with-urls``</longdescription>
</pkgmetadata>