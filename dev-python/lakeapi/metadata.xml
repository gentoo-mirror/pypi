<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========Lake API========.. image:: https://img.shields.io/pypi/v/lakeapi.svg        :target: https://pypi.python.org/pypi/lakeapi        :alt: Pypi package status.. image:: https://readthedocs.org/projects/lake-api/badge/?version=latest        :target: https://lake-api.readthedocs.io/en/latest/?version=latest        :alt: Documentation status.. image:: https://github.com/crypto-lake/lake-api/actions/workflows/dev.yml/badge.svg     :target: https://github.com/crypto-lake/lake-api/actions/workflows/dev.yml     :alt: Build statusAPI for accessing Lake crypto market data.Lake is a service providing `historical cryptocurrency market data &lt;https://crypto-lake.com/&gt;`_ in high detail, including `order book data &lt;https://crypto-lake.com/order-book-data/&gt;`_, tick trades and 1m trade candles. It is tuned for convenient quant and machine-learning purposes and so offers high performance, caching and parallelization.* Web: https://crypto-lake.com/* Documentation: https://lake-api.readthedocs.io.* Online example -- executable collab notebook: https://colab.research.google.com/drive/1E7MSUT8xqYTMVLiq_rMBLNcZmI_KusK3Usage-----If you don't have a paid plan with AWS credentials, you can access sample data:.. code-block:: python    import lakeapi    lakeapi.use_sample_data(anonymous_access = True)    df = lakeapi.load_data(        table=&quot;book&quot;,        start=None,        end=None,        symbols=[&quot;BTC-USDT&quot;],        exchanges=[&quot;BINANCE&quot;],    )With paid access, you can query any data:.. code-block:: python    import lakeapi    # Downloads SOL-USDT depth snapshots for last 2 days from Kucoin exchange    df = lakeapi.load_data(        table=&quot;trades&quot;,        start=datetime.datetime.now() - datetime.timedelta(days=2),        end=None,        symbols=[&quot;SOL-USDT&quot;],        exchanges=[&quot;KUCOIN&quot;],    )We recommend putting .lake_cache directory into .gitignore, because Lake API stores cache into this directory in theworking directory.=======History=======0.7.0 (2023-09-18)------------------* let user specify max cache size via `lakeapi.set_cache_size_limit()`0.6.4 (2023-08-05)------------------* too many open files bugfix0.6.3 (2023-08-03)------------------* logging fixes0.6.2 (2023-08-18)------------------* fix dependency constraints causing `TypeError: _path2list() got an unexpected keyword argument 'boto3_session'`0.6.1 (2023-08-15)------------------* fix path2list bug* fix type hints0.6.0 (2023-08-14)------------------* support for python3.110.5.0 (2023-05-21)------------------* support for funding, open_interest and liquidations list_data* improve data type typing0.4.5 (2023-01-09)------------------* grow default cache size limit from 3 GB to 10 GB0.4.3 (2022-12-09)------------------* small documentation improvements0.4.2 (2022-12-09)------------------* fix trades_mpid issue0.4.1 (2022-12-05)------------------* fix warning messages in anonymous mode0.4.0 (2022-11-19)------------------* level_1 data added to typing* s3 user agent set to lakeapi0.3.0 (2022-11-04)------------------* Typing bugfix* Last modified filters for list_data0.2.0 (2022-10-26)------------------* New feature for listing available data.0.1.3 (2022-10-13)------------------* Corrupted cache bugfix0.1.2 (2022-10-10)------------------* Caching and requirements improvements.0.1.1 (2022-10-09)------------------* Python2.7 support and documentation improvements.0.1.0 (2022-10-08)------------------* First release on PyPI.</longdescription>
</pkgmetadata>