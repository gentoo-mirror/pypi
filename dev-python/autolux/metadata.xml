<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=======autolux=======inspired by `lumen &lt;https://github.com/anishathalye/lumen&gt;` but written for\*nix machines. autolux takes a screenshot every few seconds, figures out the'average value' of the resulting image (the **luminence**) and changes thescreen brightness based on the screen's contents.installation------------  pip install autoluxdependencies------------* python2 (not python3)* python-daemon (optional, for running as a service)* imagemagick (for screenshots + determining average brightness)* xdotool (finding focused window)* xbacklight (for setting display brightness)usage-----::    # runs autolux    autoluxor::    # running autolux as a service    autolux --daemonxrandr------if your display does not support hardware adjustment through xbacklight,its possible to use xrandr to adjust the brightness via software.::    # find out the display of your name using xrandr    xrandr --listmonitors    autolux --xrandr eDP1 # my monitor is named eDP1    autolux --xrandr eDP1 --reset # reset brightness to normal    autolux --xrandr eDP1 --adjust -1 # lower brightness by 1    autolux --xrandr eDP1 --adjust +1 # increase brightness by 1model-----initially, autolux uses linear interpolation to figure out the brightness tomap to different luminence inputs. as the brightness is manually adjusted awayfrom its predicted value, autolux records the time of day and luminence valuesthat prompted you to change the brightness level and integrates the newinformation into its model.autolux assumes that time of day and screen content are the sole predictors ofone's preferred brightness, but the model could further be improved by addingin several factors, such as **ambient light** or **user active time** (as astand-in for eye strain). because of these and other unknown confoundingvariables, autolux has an emphasis on quick learning of new preferences and notburning in old ones.visuals-------::    autolux --vis --plot-bright    # show brightness prediction model    # requires matplotlib.. image:: https://i.imgur.com/SjWZPbV.png   :width: 800::    # color is the input luminence. (5K - 65K, lower value is darker screen content)    # x axis is hour (0 - 24, with UTC offset applied)    # y axis is predicted brightness level from the model (0 - 100%)    autolux --vis --plot-luma    # --plot-luma will swap the luma and brightness on the Y axis and colorbar.. image:: https://i.imgur.com/DQKZm8D.png   :width: 800</longdescription>
</pkgmetadata>