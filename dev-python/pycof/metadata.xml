<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PYCOF (PYthon COmmon Functions)## 1. Installation[![Downloads](https://pepy.tech/badge/pycof)](https://pepy.tech/project/pycof)[![PyPI version](https://badge.fury.io/py/pycof.svg)](https://pypi.org/project/pycof/)You can get pycof from [PyPI](https://pypi.org/project/pycof/) with:```bashpip install pycof```The library is supported on Windows, Linux and MacOs.## 2. Usage### 2.1. DocumentationYou can find the full documentation at [https://www.florianfelice.com/pycof](https://www.florianfelice.com/pycof?orgn=github) or by clicking on the name of each function in the next section.It will redirect you the the function's specific documentation.### 2.1. Available functionsThe current version of the library provides:* [**`remote_execute_sql`**](https://www.florianfelice.com/pycof/sql/sql.html#pycof.sql.remote_execute_sql): aggragated function for SQL queries to `SELECT`, `INSERT`, `DELETE` or `COPY`.* [**`read`**](https://www.florianfelice.com/pycof/datamngt/datamngt.html#pycof.data.read): Load any data file, regarless of the format.* [**`send_email`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.send_email): simple function to send email to contacts in a concise way.* [**`verbose_display`**](https://www.florianfelice.com/pycof/format/format.html#pycof.misc.verbose_display): extended function to [print](https://docs.python.org/3/library/functions.html#print) strings, lists, data frames and progression bar if used as a wrapper in `for` loops.* [**`add_zero`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.add_zero): simple function to convert `int` to `str` by adding a 0 is less than 10.* [**`group`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.group): will convert an `int` to a `str` with thousand seperator.* [**`replace_zero`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.replace_zero): will transform 0 values to `-` for display purposes.* [**`week_sunday`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.week_sunday): will return week number of last sunday date of a given date.* [**`display_name`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.display_name): displays the current user name. Will display either `first`, `last` or `full` name.* [**`write`**](https://www.florianfelice.com/pycof/format/format.html#pycof.misc.write): writes a `str` to a specific file (usually .txt) in one line of code.* [**`file_age`**](https://www.florianfelice.com/pycof/format/format.html#pycof.misc.file_age): computes the age (in days, hours, ...) of a given local file.* [**`str2bool`**](https://www.florianfelice.com/pycof/format/format.html#pycof.format.str2bool): converts string to boolean.* And [**`many others`**](https://www.florianfelice.com/pycof)!### 2.2. Config file for credentialsThe function [`remote_execute_sql`](https://www.florianfelice.com/pycof/sql/sql.html#pycof.sql.remote_execute_sql) and [`send_email`](https://www.florianfelice.com/pycof/format/format.html#pycof.format.send_email) will by default look for the credentials located at `/etc/.pycof/config.json`.On Windows, save the config file as `C:/Windows/.pycof/config.json`.The file follows the below structure:```bash{&quot;DB_USER&quot;: &quot;&quot;,&quot;DB_PASSWORD&quot;: &quot;&quot;,&quot;DB_HOST&quot;: &quot;&quot;,&quot;DB_PORT&quot;: &quot;3306&quot;,&quot;DB_DATABASE&quot;: &quot;&quot;,&quot;__COMMENT_1__&quot;: &quot;Email specific, send_email&quot;&quot;EMAIL_USER&quot;: &quot;&quot;,&quot;EMAIL_PASSWORD&quot;: &quot;&quot;,&quot;EMAIL_SMTP&quot;: &quot;smtp.gmail.com&quot;,&quot;EMAIL_PORT&quot;: &quot;587&quot;&quot;__COMMENT_2__&quot;: &quot;IAM specific, if useIAM=True in remote_execute_sql&quot;,&quot;CLUSTER_NAME&quot;: &quot;&quot;,&quot;AWS_ACCESS_KEY_ID&quot;: &quot;&quot;,&quot;AWS_SECRET_ACCESS_KEY&quot;: &quot;&quot;,&quot;REGION&quot;: &quot;eu-west-1&quot;}```On Unix based system, run:```bashsudo nano /etc/.pycof/config.json```and paste the above json after filling the empty strings (pre-filled values are standard default values).*__Reminder:__* To save the file, with nano press `CTRL + O`, confirm with `y` then `CTRL + X` to exit.On Windows, use the path `C:/Windows/.pycof/config.json`.</longdescription>
</pkgmetadata>