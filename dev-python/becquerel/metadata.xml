<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![tests](https://github.com/lbl-anp/becquerel/actions/workflows/tests.yaml/badge.svg)](https://github.com/lbl-anp/becquerel/actions/workflows/tests.yaml)[![Coverage Status](https://coveralls.io/repos/github/lbl-anp/becquerel/badge.svg?branch=main)](https://coveralls.io/github/lbl-anp/becquerel?branch=main)[![PyPI version](https://img.shields.io/pypi/v/becquerel.svg)](https://pypi.org/project/becquerel)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/becquerel.svg)](https://pypi.org/project/becquerel)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)Becquerel is a Python package for analyzing nuclear spectroscopicmeasurements. The core functionalities are reading and writing differentspectrum file types, fitting spectral features, performing detectorcalibrations, and interpreting measurement results. It includes tools forplotting radiation spectra as well as convenient access to tabulated nucleardata, and it will include fits of different spectral features. It reliesheavily on the standard scientific Python stack of numpy, scipy, matplotlib,and pandas. It is intended to be general-purpose enough that it can be usefulto anyone from an undergraduate taking a laboratory course to the advancedresearcher.## Installation```bashpip install becquerel```## Features in development (contributions welcome!)- Reading additional `Spectrum` file types (N42, CHN, CSV)- Writing `Spectrum` objects to various standard formats- Fitting spectral features with Poisson likelihoodIf you are interested in contributing or are want to install the package fromsource, please see the instructions in [`CONTRIBUTING.md`](./CONTRIBUTING.md).## Reporting issuesWhen reporting issues with `becquerel`, please provide a minimum working exampleto help identify the problem and tag the issue as a `bug`.## Feature requestsFor a feature request, please create an issue and label it as a `new feature`.## DependenciesExternal dependencies are listed in `requirements.txt` and will be installedautomatically with the standard `pip` installation. They can also be installedmanually with the package manager of your choice (`pip`, `conda`, etc).The dependencies `beautifulsoup4`, `lxml` and `html5lib` are necessary for[`pandas`][1].Developers require additional requirements which are listed in`requirements-dev.txt`. We use [`pytest`][2] for unit testing, [`black`][3] forcode formatting and are converting to [`numpydoc`][4].[1]: https://pandas.pydata.org/pandas-docs/stable/install.html#dependencies[2]: https://docs.pytest.org/en/latest/[3]: https://black.readthedocs.io/en/stable/[4]: https://numpydoc.readthedocs.io/en/latest/format.html# Contribution guidelinesContributions to `becquerel` are welcome and encouraged, whether it isreporting bugs, requesting features, or contributing code.Please follow these guidelines when contributing to this project.## Developer Instructions```bashpip install -r requirements.txtpip install -r requirements-dev.txtpython setup.py developpip install pre-commitpre-commit install```(It is more convenient to use `develop` so that the code is soft-linkedfrom the installation directory, and the installed package will always usethe current version of code.)We use [`pre-commit`](https://pre-commit.com/) to automatically run black.### Running the tests(Requires `requirements-dev.txt` to be installed)To run the tests using `pytest`, from the root directory of the repo:```bashpytest```(`python setup.py test` is still supported also.)By default, a code coverage report is printed to the terminal.Tests marked `webtest` or `plottest` are by default skipped for the sake ofspeed. To run all tests, clear the pre-configured markers option:```bashpytest -m &quot;&quot;```To produce an HTML code coverage report in directory `htmlcov`with line-by-line highlighting:```bashpytest --cov-report html:htmlcov```## Code Style GuideUse [google standards](https://google.github.io/styleguide/pyguide.html)## LinterThe code style/formatting will be checked with[`black`](https://black.readthedocs.io/en/stable/) and[`flake8`](https://flake8.pycqa.org/en/latest/) in the CI## Checklist for code contributions- [ ] Branch off of `main`- [ ] Develop the feature or fix- [ ] Write tests to cover all use cases- [ ] Ensure all tests pass (`pytest`)- [ ] Ensure test coverage is &gt;95%- [ ] Autoformat (`black .`)- [ ] Spellcheck your code and docstrings- [ ] Push branch to GitHub and create a pull request to `main`## Copyright Noticebecquerel (bq) Copyright (c) 2017-2021, The Regents of the University ofCalifornia, through Lawrence Berkeley National Laboratory (subject to receiptof any required approvals from the U.S. Dept. of Energy) and University ofCalifornia, Berkeley. All rights reserved.If you have questions about your rights to use or distribute this software,please contact Berkeley Lab's Intellectual Property Office atIPO@lbl.gov.NOTICE. This Software was developed under funding from the U.S. Departmentof Energy and the U.S. Government consequently retains certain rights. Assuch, the U.S. Government has been granted for itself and others acting onits behalf a paid-up, nonexclusive, irrevocable, worldwide license in theSoftware to reproduce, distribute copies to the public, prepare derivativeworks, and perform publicly and display publicly, and to permit others to do so.</longdescription>
</pkgmetadata>