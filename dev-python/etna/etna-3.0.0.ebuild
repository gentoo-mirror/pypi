# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="ETNA is the first python open source framework of T-Bank AI Center. It is designed to make working with time series simple, productive, and fun."

HOMEPAGE="https://github.com/etna-team/etna"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all all-dev auto chronos classification clearml docs jupyter prophet release statsforecast style tests timesfm torch wandb"
DEPENDENCIES="<dev-python/scikit-learn-2.0[${PYTHON_USEDEP}]
	<dev-python/pandas-3.0.0[${PYTHON_USEDEP}]
	dev-python/catboost[${PYTHON_USEDEP}]
	dev-python/ruptures[${PYTHON_USEDEP}]
	dev-python/numba[${PYTHON_USEDEP}]
	<dev-python/seaborn-1.0[${PYTHON_USEDEP}]
	<dev-python/statsmodels-0.15[${PYTHON_USEDEP}]
	dev-python/pmdarima[${PYTHON_USEDEP}]
	<dev-python/dill-0.4.0[${PYTHON_USEDEP}]
	dev-python/toml[${PYTHON_USEDEP}]
	>=dev-python/loguru-0.7[${PYTHON_USEDEP}]
	dev-python/hydra-slayer[${PYTHON_USEDEP}]
	dev-python/typer[${PYTHON_USEDEP}]
	dev-python/omegaconf[${PYTHON_USEDEP}]
	dev-python/holidays[${PYTHON_USEDEP}]
	<dev-python/boto3-2.0[${PYTHON_USEDEP}]
	dev-python/botocore[${PYTHON_USEDEP}]
	>=dev-python/scipy-1.12[${PYTHON_USEDEP}]
	<dev-python/bottleneck-2.0.0[${PYTHON_USEDEP}]
	<dev-python/numpy-2.0[${PYTHON_USEDEP}]
	dev-python/joblib[${PYTHON_USEDEP}]
	<dev-python/plotly-6.0[${PYTHON_USEDEP}]
	dev-python/hydra-slayer[${PYTHON_USEDEP}]
	dev-python/matplotlib[${PYTHON_USEDEP}]
	<dev-python/typing-extensions-5.0.0[${PYTHON_USEDEP}]
	dev-python/tbats[${PYTHON_USEDEP}]
	~dev-python/deprecated-1.2.13[${PYTHON_USEDEP}]
	dev-python/types-Deprecated[${PYTHON_USEDEP}]
	prophet? ( dev-python/prophet[${PYTHON_USEDEP}] )
	all? ( dev-python/prophet[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/prophet[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	chronos? ( dev-python/torch[${PYTHON_USEDEP}] )
	timesfm? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch? ( dev-python/lightning[${PYTHON_USEDEP}] )
	all? ( dev-python/lightning[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/lightning[${PYTHON_USEDEP}] )
	torch? ( dev-python/einops[${PYTHON_USEDEP}] )
	all? ( dev-python/einops[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/einops[${PYTHON_USEDEP}] )
	wandb? ( dev-python/wandb[${PYTHON_USEDEP}] )
	all? ( dev-python/wandb[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/wandb[${PYTHON_USEDEP}] )
	clearml? ( dev-python/clearml[${PYTHON_USEDEP}] )
	all? ( dev-python/clearml[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/clearml[${PYTHON_USEDEP}] )
	clearml? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	auto? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all? ( dev-python/optuna[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/optuna[${PYTHON_USEDEP}] )
	statsforecast? ( dev-python/statsforecast[${PYTHON_USEDEP}] )
	all? ( dev-python/statsforecast[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/statsforecast[${PYTHON_USEDEP}] )
	chronos? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/transformers[${PYTHON_USEDEP}] )
	chronos? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	all? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	chronos? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	timesfm? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	all? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	timesfm? ( dev-python/jax[${PYTHON_USEDEP}] )
	all? ( dev-python/jax[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/jax[${PYTHON_USEDEP}] )
	timesfm? ( dev-python/jaxlib[${PYTHON_USEDEP}] )
	all? ( dev-python/jaxlib[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/jaxlib[${PYTHON_USEDEP}] )
	timesfm? ( dev-python/utilsforecast[${PYTHON_USEDEP}] )
	all? ( dev-python/utilsforecast[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/utilsforecast[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-mathjax-offline[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/sphinx-mathjax-offline[${PYTHON_USEDEP}] )
	docs? ( <dev-python/nbsphinx-0.10.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/nbsphinx-0.10.0[${PYTHON_USEDEP}] )
	docs? ( <dev-python/sphinx-7.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/sphinx-7.0[${PYTHON_USEDEP}] )
	docs? ( <dev-python/pydata-sphinx-theme-0.14.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/pydata-sphinx-theme-0.14.0[${PYTHON_USEDEP}] )
	docs? ( <dev-python/myst-parser-2.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/myst-parser-2.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/GitPython[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/GitPython[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx_design[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/sphinx_design[${PYTHON_USEDEP}] )
	tests? ( <dev-python/pytest-8.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/pytest-8.0[${PYTHON_USEDEP}] )
	tests? ( <dev-python/pytest-cov-5.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/pytest-cov-5.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-shard[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/pytest-shard[${PYTHON_USEDEP}] )
	jupyter? ( <dev-python/black-25.0[${PYTHON_USEDEP}] )
	style? ( <dev-python/black-25.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/black-25.0[${PYTHON_USEDEP}] )
	style? ( <dev-python/isort-6.0.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/isort-6.0.0[${PYTHON_USEDEP}] )
	style? ( <dev-python/flake8-4.0.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/flake8-4.0.0[${PYTHON_USEDEP}] )
	style? ( dev-python/pep8-naming[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/pep8-naming[${PYTHON_USEDEP}] )
	style? ( dev-python/flake8-bugbear[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/flake8-bugbear[${PYTHON_USEDEP}] )
	style? ( dev-python/flake8-comprehensions[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/flake8-comprehensions[${PYTHON_USEDEP}] )
	style? ( dev-python/flake8-docstrings[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/flake8-docstrings[${PYTHON_USEDEP}] )
	style? ( <dev-python/mypy-2.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/mypy-2.0[${PYTHON_USEDEP}] )
	style? ( dev-python/types-PyYAML[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/types-PyYAML[${PYTHON_USEDEP}] )
	style? ( dev-python/codespell[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/codespell[${PYTHON_USEDEP}] )
	style? ( dev-python/nbqa[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/nbqa[${PYTHON_USEDEP}] )
	release? ( <dev-python/click-8.1[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/click-8.1[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/click-8.1[${PYTHON_USEDEP}] )
	release? ( <dev-python/semver-3.0.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/semver-3.0.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/semver-3.0.0[${PYTHON_USEDEP}] )
	jupyter? ( <dev-python/ipywidgets-8.0.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/ipywidgets-8.0.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	jupyter? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	jupyter? ( dev-python/nbconvert[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/nbconvert[${PYTHON_USEDEP}] )
	classification? ( dev-python/pyts[${PYTHON_USEDEP}] )
	all? ( dev-python/pyts[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/pyts[${PYTHON_USEDEP}] )
	classification? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	all? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	all-dev? ( dev-python/tsfresh[${PYTHON_USEDEP}] )
	style? ( <dev-python/types-setuptools-66.0.0[${PYTHON_USEDEP}] )
	all-dev? ( <dev-python/types-setuptools-66.0.0[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
