<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Element Unify Python SDKThe Unify Python SDK is a library to interact with Element Unify. This SDK is intended fordevelopers who are building connectors and automation software that interfaces withElement Unify.## User InformationThis section is intended for users of the Unify Python SDK. This includesdevelopers who are building connectors, integrations, and automation that interfaceswith Element Unify. For developers looking to contribute to the SDK, see the[Developer Information](#developer-information) section.## InstallationYou can install the Unify Python SDK from [PyPI](pypi.org/project/unify-sdk):`pip install unify-sdk`### Using the Unify Python SDK with virtualenvThis assumes you have installed an appropriate version virtualenv, python, andother associated tools. This also assumes you have an existing python projectyou'd like to import into, in this case `my-project`.    mkdir path/to/my-project; cd path/to/my-project    virtualenv venv    source venv/bin/activate    echo unify-sdk &gt;&gt; requirements.txtThen, in your python import section add the following line:    from unify.apimanager import ApiManager### DocumentationDeveloper guide is found in the Unify API Documentation Portal under the Unify Python SDK section.1. Navigate to your instance of Element Unify.2. Log in and select your organization.3. From the top-right menu, click on the Support icon and select API Documentation.### Asset AccessIn order to use the Unify Access package, please install psycopg2-binary.    pip install psycopg2-binary## Developer InformationThis section is intended for developers working to extend the Unify Python SDK.### Developer Guide1. Fork this repository.2. Revise files with your contributions.3. Follow styling guides. See [Python style guide](#python-style-guide).4. Check for lint warnings. See [Lint checking](#lint-checking).5. Create a pull request with description of your changes.### Python style guidePlease use the following Python style guide[Google Python Styling guide](https://google.github.io/styleguide/pyguide.html)### Lint checkingWe usy pylint to verify lint warnings, our build system requires a linter scoreof &gt;=9.0 to pass successfully. To locally check you changes```pip install pylintpylint dir/to/the/file.py```</longdescription>
</pkgmetadata>