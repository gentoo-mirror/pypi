<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Storlets========Storlets extend Swift with the ability to run user defined computations- called storlets - near the data in a secure and isolated manner.A storlet is a compiled and packaged code (e.g. a .jar file) that can beuploaded to Swift as any other object.Once uploaded the storlet can be invoked over data objects in Swift.The Storlets API is documented at`&quot;Storlets API v1&quot; &lt;https://storlets.readthedocs.io/en/latest/api/overview_api.html&gt;`__.The project started off as an IBM research project, and was open sourced by IBM in 2014.- The research leading to the development of this code received funding from the European Community's Seventh Framework Programme (FP7/2007-2013) under the grant agreements for the CASPAR, ENSURE and VISION Cloud projects.- Various stages and different aspects of the development of this code received funding from the following European Community's Framework Programme:  - Seventh Framework Programme (FP7/2007-2013) under the grant agreements for the ForgetIT project, where the code is used for offloading digital preservation functionalities to the storage.  - Seventh Framework Programme (FP7/2007-2013) under the grant agreements for COSMOS project, where the code is used for analysis of IoT data.  - Seventh Framework Programme (FP7/2007-2013) under the grant agreements for FI-CORE project where the code is integrated with a holistic cloud deployment solution, and from  - Horizon 2020 (H2020/2014-2020) under the grant agreement for the IOStack project where the code is used as a backend implementing Storage policies and is used for analyticsDocs----The storlerts documentation is auto-generated after every commit and availableonline at https://storlets.readthedocs.io/en/latest/Getting Started for Users-------------------------The fastest way to get started is`&quot;S2AIO - Swift Storlets All In One&quot; &lt;https://storlets.readthedocs.io/en/latest/getting_started.html&gt;`__.For Engine Developers---------------------Getting Started~~~~~~~~~~~~~~~The best way to get started is following this guide:`&quot;Installing a Development Environment&quot; &lt;https://storlets.readthedocs.io/en/latest/engine_dev_installation.html&gt;`__.Tests~~~~~There are two types of tests included in the Storlets repo. #. Unit tests #. Functional testsUnit tests, are, well, unit tests... The functional tests are black box tests validatingend-to-end scenarios using various storlets, including faulty ones. For more informationplease refer to the:`&quot;Development and Testing Guide&quot; &lt;https://storlets.readthedocs.io/en/latest/engine_dev_tests.html&gt;`__.Code Organization~~~~~~~~~~~~~~~~~- Engine/: The code comprising the middleware and the compute engine  - SBus/: A protocol layer between the middleware and the sandbox used to execute storlets    - SBusJavaFacade/: A Java implementation of the protocol    - SBusPythonFacade/: A Python implementation of the protocol    - SBusTransportLayer/: A thin layer in &quot;C&quot; used for passing fds between the middleware and container  - SCommon/: A Java library required for storlets development  - SDaemon/: A generic Java daemon for loading storlets at runtime  - SMSCripts/: Run time scripts for doing Docker management commands  - agent/: Python code for Docker side storlets process management  - swift/: Python swift side code    - etc/: Sample config files    - storlet_gateway/: Run time loadable code for managing storlets execution    - storlet_middleware/: Swift middleware dealing with storlet invocation requests- StorletSamples/: Storlets examples, used for functional testing- doc/source/: Documentation- install/: Installation scripts  - swift/: Scripts for invoking an extenral Swift ansible installation scrpts  - storlets/: Scripts for installing storlets over a Swift cluster- tests/: Unit and functional tests- tools/: Various cluster config dependent tools for automatic and manual testingFor Storlets Developers-----------------------Currently, storlets can be developed in Java only.To get started, follow:`&quot;S2AIO - Swift Storlets All In One&quot; &lt;https://storlets.readthedocs.io/en/latest/getting_started.html&gt;`__.The write and deploy a storlet, follow:`&quot;Writing and deploying storlets&quot; &lt;https://storlets.readthedocs.io/en/latest/writing_and_deploying_storlets.html&gt;`__.For Deployers-------------Instructions for how to deploy Storlets over an existing Swift cluster (not SAIO):`&quot;Deploying storlets over an existing Swift cluster&quot; &lt;https://storlets.readthedocs.io/en/latest/deployer_installation.html&gt;`__.</longdescription>
</pkgmetadata>