<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Plug P100This is a fork of original work of [@K4CZP3R](https://github.com/K4CZP3R/tapo-p100-python)The purpose of this fork is to provide the library as PyPi package. # How to install```pip install plugp100```# Code example```pythonimport asyncioimport osfrom plugp100.api.light_effect_preset import LightEffectPresetfrom plugp100.api.tapo_client import TapoClient, AuthCredentialasync def main():    # create generic tapo api    username = os.getenv('USERNAME', '&lt;tapo_email&gt;')    password = os.getenv('PASSWORD', '&lt;tapo_password&gt;')    credential = AuthCredential(username, password)    client = await TapoClient.connect(credential, &quot;&lt;ip_address&gt;&quot;)    print(await client.get_device_info())    print(await client.get_device_usage())    print(await client.get_energy_usage())    print(await client.get_current_power())    print(await client.get_child_device_list())    print(await client.get_child_device_component_list())    print(await client.set_lighting_effect(LightEffectPreset.Aurora.to_effect()))    # plug = PlugDevice(TapoClient(username, password), &quot;&lt;tapo_device_ip&gt;&quot;)    # light = LightDevice(TapoClient(username, password), &quot;&lt;tapo_device_ip&gt;&quot;)    # ledstrip = LedStripDevice(TapoClient(username, password), &quot;&lt;tapo_device_ip&gt;&quot;)if __name__ == &quot;__main__&quot;:    loop = asyncio.new_event_loop()    loop.run_until_complete(main())    loop.run_until_complete(asyncio.sleep(0.1))    loop.close()```</longdescription>
</pkgmetadata>