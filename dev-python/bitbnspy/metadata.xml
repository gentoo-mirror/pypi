<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>change log==========0.3.1 (2022-07-15)==================- Adding in new history endpoints- Providing support for futures testnet- Updating futures to mainnet- Adding futures documentation- Fixing minor bugs0.2.5 (2022-04-18)==================- Making new post request method for new endpoints- Added endpoints for SWAP Market- Added endpoints for FIP - Added partner APIs- Added payment gateway API- Code refactored and documentation errors fixed- Updated documentation for all endpoints- Updated socket endpoint - Live executed orders endpoint not available - Fixed minor bugs- Porting new V1 endpoints for stop &amp; bracket order status0.2.4 (2021-10-25)==================- Minor spell check- Added market order for cost and quantity- Updated market order- Updated documentation- Updated setup- Added market orders0.2.3 (2021-09-14)==================- Merge branch 'master' of https://github.com/bitbns-official/bitbnspy- updating readme- updated documentation- Merge pull request #68 from its-mohnish/master- updated- Updated readme.md- Updated bitbns to include public endpoints- Merge pull request #67 from sanket-buyhatke/public-endpoints- adding public endpoint - fetchOHLCV- addin public endpoints - fetchTrades- adding public endpoints - fetchOrderBook- adding public endpoints - fetchTickers- Merge pull request #65 from its-mohnish/master- Merge branch 'bitbns-official:master' into master- Adding github headers - final- Adding github headers for direct links- Merge pull request #64 from its-mohnish/master- Update README.md- Update README.md- Update README.md- updating version to 0.2.2- Updating changelog for version 0.2.2- Updating github repo0.2.2 (2021-08-18)==================- Merge branch 'master' of https://github.com/bitbns-official/bitbnspy- 'Updated setup and bitbnspy'- Merge pull request #63 from its-mohnish/master- Removed package_dir- Added Retries- Merge pull request #61 from sanket-buyhatke/master- updated docs websockets to support ticker data- updated websockets to support stream ticker data- Merge pull request #55 from sanket-buyhatke/master- minor changes in documentation - Added socket documentation- Merge pull request #53 from its-mohnish/patch-60.2.1 (2021-06-21)==================- updating additional package- Merge pull request #47 from its-mohnish/master- Delete python-package.yml- Delete sample_test.py- Adding python-package.yml- sample python testing- Merge branch 'master' into master- Merge pull request #36 from its-mohnish/patch-5- Merge pull request #35 from its-mohnish/patch-4- Merge pull request #34 from its-mohnish/patch-3- Merge pull request #33 from its-mohnish/patch-2- Removed unnecessary files, fixed python installation issue- Merge pull request #31 from its-mohnish/patch-1- Merge pull request #37 from sanket-buyhatke/master- adding bug report template for issues===================# Bitbns Python APIThis project is designed to assist you make your own projects that interact with the Bitbns API.  This project seeks to have complete API coverage and WebSockets.&lt;code&gt;&lt;b&gt;Use Python 3.7+&lt;/b&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;h3&gt;Installation&lt;/h3&gt;&lt;code&gt; pip3 install bitbnspy &lt;/code&gt;&lt;h3&gt; Getting Started &lt;/h3&gt;Now we support public and private endpoints. One does not have to provide API Keys in case they just want to use our public endpoints. &lt;br&gt;In case one wants to use both public and private endpoints, they can do so by following the instatiation method for private endpoints.&lt;h4&gt; Instantiation for Public Endpoints &lt;/h2&gt;```from bitbnspy import bitbnsbitbnsObj = bitbns.publicEndpoints()print(bitbnsObj.fetchTickers())```&lt;h4&gt; Instantiation for Private Endpoints &lt;/h2&gt;```from bitbnspy import bitbnskey = 'yourKey'secretKey = 'yourSecretKey'bitbnsObj = bitbns(key, secretKey)print(bitbnsObj.getSellOrderBook('XRPUSDT'))```&lt;br&gt;&lt;h2&gt;API Access&lt;/h2&gt;&lt;div id =&quot;api_summary_table&quot; style =&quot;border:1px solid&quot;&gt;  &lt;table style = &quot;width:55%&quot;&gt;    &lt;tr&gt;      &lt;th&gt;PERMISSIONS&lt;/th&gt;      &lt;th&gt;Read&lt;/th&gt;      &lt;th&gt;Write&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;List Open Orders&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;List Open Stop Limit&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;Api Usages Status&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;Current Coin Balance&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;Deposit History&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;Withdrawal History&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;Order Status&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;Buy Stop Loss Order&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Sell Stop Loss Order&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Buy Order&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Sell Order&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Get Coin Address&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Cancel Order&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Cancel Stop Loss Order&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Platform Status&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;Ticker API&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;      &lt;tr&gt;      &lt;th&gt;Buy OrderBook&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;      &lt;tr&gt;      &lt;th&gt;Sell OrderBook&lt;/th&gt;      &lt;th&gt;&amp;#10003;&lt;/th&gt;      &lt;th&gt;&amp;#x2716;&lt;/th&gt;    &lt;/tr&gt;  &lt;/table&gt;&lt;/div&gt;&lt;br&gt;&lt;h2&gt;Minimum Volume supported by exchange&lt;/h2&gt;&lt;h3&gt; &lt;b&gt; Minimum volume amount per order: &lt;/b&gt;&lt;/h3&gt;  - USDT market = &lt;u&gt;0.1 USDT&lt;/u&gt;  - INR market = &lt;u&gt;10 INR&lt;/u&gt;&lt;h2&gt; Public Endpoints &lt;/h2&gt;&lt;h4&gt;&lt;b&gt; Getting details of tickers &lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.fetchTickers()&lt;/pre&gt;&lt;details&gt;   &lt;summary&gt;     View Response   &lt;/summary&gt;   &lt;pre&gt;{ data: {    'BTC': {       'highest_buy_bid': 3804776.47,        'lowest_sell_bid': 3809634.1,        'last_traded_price': 3809634.1,        'yes_price': 3817924.68,        'volume': {           'max': '3860000.00',            'min': '3728401.38',            'volume': 29.22102567          }       },     'XRP': {    .    .    .    }  }, 'error': None,  'status': 1,}&lt;br&gt;&lt;br&gt;Explanation of fields:status -&gt; 1 if data is returned successfullyerror -&gt; describes the error faced while retrieving data if any  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt; Getting order book &lt;/b&gt;&lt;/h4&gt;Depth of the order book can be specified. Default depth is 20.&lt;pre&gt;bitbnsObj.fetchOrderBook('BTC', 'INR', depth = 10)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{ 'data': {    'asks': [             [3839997.47, 0.14315922],             [3840000, 0.00104478],             .             .          ]    'bids': [             [3836673.24, 0.0002062],             [3836673.23, 0.23805619],             .             .          ]    'timestamp': 1630664703000    }, 'error': None, 'status': 1}&lt;br&gt;&lt;br&gt;Explanation of fields:status -&gt; 1 if data is returned successfullyerror -&gt; describes the error faced while retrieving data if anytimestamp -&gt; The timestamp when screenshot of order book was taken  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt; Getting recent trades &lt;/b&gt;&lt;/h4&gt;Limit (nos of trades to be returned) can also be specified. Default limit is 100&lt;pre&gt;bitbnsObj.fetchTrades('BTC', 'INR', limit = 10)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{ 'data': [          {             'base_volume': 0.00106565,             'price': '3837783.20',             'quote_volume': 4099.96,             'timestamp': 1630664966000,             'tradeId': '2468049',             'type': 'buy'          },          {             .             .             .          }        ], 'error': None, 'status': 1}&lt;br&gt;&lt;br&gt;Explanation of fields:status -&gt; 1 if data is returned successfullyerror -&gt; describes the error faced while retrieving data if any  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt; fetch OHLCV data &lt;/b&gt;&lt;/h4&gt;This endpoint is paginated. Increase page no., to get older data.&lt;pre&gt;bitbnsObj.fetchOHLCV('BTC', 'INR', page = 1)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  'data':[    {      'close': 3727748.31,      'high': 3727748.31,      'low': 3724656.82,      'open': 3727748.31,      'timestamp': '2021-09-01T11:25:04.000Z',      'vol': 1.07505351    },    {      'close': 3727748.31,      'high': 3749981.02,      'low': 3720000,      'open': 3720000,      'timestamp': '2021-09-01T11:20:04.000Z',      'vol': 0.04898758    },    .    .    .  ]  'error': None,  'status': 1}&lt;br&gt;&lt;br&gt;Explanation of fields:status -&gt; 1 if data is returned successfullyerror -&gt; describes the error faced while retrieving data if any  &lt;/pre&gt;&lt;/details&gt;&lt;h2&gt; Private Endpoints &lt;/h2&gt;&lt;h4&gt;&lt;b&gt;Getting Platform Status&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.platformStatus();&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  data: {    BTC: {      status: 1    },    ETH: {      status: 1    },    XRP: {      status: 1    }  },  status: 1,  error: null}Explanation of fields:status -&gt; whether the coin is live on platform   &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting latest price of a symbol&lt;/b&gt;&lt;/h4&gt;Inputting Invalid crypto name would return &quot;undefined&quot; as the price.&lt;pre&gt;bitbnsObj.getTickerApi('BTC')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: {    &quot;BTC&quot;: {      &quot;highest_buy_bid&quot;: 484159.43,      &quot;lowest_sell_bid&quot;: 494800,      &quot;last_traded_price&quot;: 494805.29    }  },  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:highest_buy_bid -&gt; top entry of buy order booklowest_sell_bid -&gt; top entry of sell order booklast_traded_price -&gt; price at which the last trade had happened   &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting latest price of few symbols&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getTickerApi('BTC,ETH')&lt;/pre&gt;&lt;details&gt; &lt;summary&gt;    View Response &lt;/summary&gt; &lt;pre&gt;    {  &quot;data&quot;: {    &quot;BTC&quot;: {      &quot;highest_buy_bid&quot;: 484159.43,      &quot;lowest_sell_bid&quot;: 494800,      &quot;last_traded_price&quot;: 494805.29    },    &quot;ETH&quot;: {      &quot;highest_buy_bid&quot;: 13205.01,      &quot;lowest_sell_bid&quot;: 13440,      &quot;last_traded_price&quot;: 13450    }  },  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:highest_buy_bid -&gt; top entry of buy order booklowest_sell_bid -&gt; top entry of sell order booklast_traded_price -&gt; price at which the last trade had happened &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting latest price of all symbols&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getTickerApi('')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;&lt;pre&gt;  {  &quot;data&quot;: {    &quot;BTC&quot;: {      &quot;highest_buy_bid&quot;: 480059.8,      &quot;lowest_sell_bid&quot;: 489000,      &quot;last_traded_price&quot;: 480059.8    },    &quot;XRP&quot;: {      &quot;highest_buy_bid&quot;: 20,      &quot;lowest_sell_bid&quot;: 20.16,      &quot;last_traded_price&quot;: 20.16    },    &quot;NEO&quot;: {      &quot;highest_buy_bid&quot;: 1301,      &quot;lowest_sell_bid&quot;: 1349.99,      &quot;last_traded_price&quot;: 1331.92    },    &quot;GAS&quot;: {      &quot;highest_buy_bid&quot;: 406.96,      &quot;lowest_sell_bid&quot;: 418.46,      &quot;last_traded_price&quot;: 418.46    },    &quot;ETH&quot;: {      &quot;highest_buy_bid&quot;: 13350,      &quot;lowest_sell_bid&quot;: 13660.5,      &quot;last_traded_price&quot;: 13350    },    &quot;XLM&quot;: {      &quot;highest_buy_bid&quot;: 14.75,      &quot;lowest_sell_bid&quot;: 14.77,      &quot;last_traded_price&quot;: 14.77    },    &quot;RPX&quot;: {      &quot;highest_buy_bid&quot;: 0.77,      &quot;lowest_sell_bid&quot;: 0.82,      &quot;last_traded_price&quot;: 0.8    },    &quot;DBC&quot;: {      &quot;highest_buy_bid&quot;: 0.73,      &quot;lowest_sell_bid&quot;: 0.77,      &quot;last_traded_price&quot;: 0.72    },    &quot;LTC&quot;: {      &quot;highest_buy_bid&quot;: 3680,      &quot;lowest_sell_bid&quot;: 3800,      &quot;last_traded_price&quot;: 3800    },    &quot;XMR&quot;: {      &quot;highest_buy_bid&quot;: 7555,      &quot;lowest_sell_bid&quot;: 8000,      &quot;last_traded_price&quot;: 7600    },    &quot;DASH&quot;: {      &quot;highest_buy_bid&quot;: 13500,      &quot;lowest_sell_bid&quot;: 14500,      &quot;last_traded_price&quot;: 13500    },    &quot;DOGE&quot;: {      &quot;highest_buy_bid&quot;: 0.47,      &quot;lowest_sell_bid&quot;: 0.49,      &quot;last_traded_price&quot;: 0.49    },    &quot;BCH&quot;: {      &quot;highest_buy_bid&quot;: 33600,      &quot;lowest_sell_bid&quot;: 34997,      &quot;last_traded_price&quot;: 34998    },    &quot;SC&quot;: {      &quot;highest_buy_bid&quot;: 0.38,      &quot;lowest_sell_bid&quot;: 0.42,      &quot;last_traded_price&quot;: 0.42    },    &quot;TRX&quot;: {      &quot;highest_buy_bid&quot;: 1.35,      &quot;lowest_sell_bid&quot;: 1.36,      &quot;last_traded_price&quot;: 1.35    },    &quot;ETN&quot;: {      &quot;highest_buy_bid&quot;: 0.38,      &quot;lowest_sell_bid&quot;: 0.39,      &quot;last_traded_price&quot;: 0.39    },    &quot;ONT&quot;: {      &quot;highest_buy_bid&quot;: 126.01,      &quot;lowest_sell_bid&quot;: 136.1,      &quot;last_traded_price&quot;: 136.82    },    &quot;ZIL&quot;: {      &quot;highest_buy_bid&quot;: 2.37,      &quot;lowest_sell_bid&quot;: 2.5,      &quot;last_traded_price&quot;: 2.51    },    &quot;EOS&quot;: {      &quot;highest_buy_bid&quot;: 365.51,      &quot;lowest_sell_bid&quot;: 375.1,      &quot;last_traded_price&quot;: 385    },    &quot;POLY&quot;: {      &quot;highest_buy_bid&quot;: 10.01,      &quot;lowest_sell_bid&quot;: 10.04,      &quot;last_traded_price&quot;: 10.04    },    &quot;DGB&quot;: {      &quot;highest_buy_bid&quot;: 1.6,      &quot;lowest_sell_bid&quot;: 1.83,      &quot;last_traded_price&quot;: 1.82    },    &quot;NCASH&quot;: {      &quot;highest_buy_bid&quot;: 0.35,      &quot;lowest_sell_bid&quot;: 0.36,      &quot;last_traded_price&quot;: 0.36    },    &quot;ADA&quot;: {      &quot;highest_buy_bid&quot;: 4.97,      &quot;lowest_sell_bid&quot;: 5.09,      &quot;last_traded_price&quot;: 4.92    },    &quot;ICX&quot;: {      &quot;highest_buy_bid&quot;: 40.01,      &quot;lowest_sell_bid&quot;: 45.5,      &quot;last_traded_price&quot;: 40.25    },    &quot;VEN&quot;: {      &quot;highest_buy_bid&quot;: 0.96,      &quot;lowest_sell_bid&quot;: 1.15,      &quot;last_traded_price&quot;: 1.15    },    &quot;OMG&quot;: {      &quot;highest_buy_bid&quot;: 239.72,      &quot;lowest_sell_bid&quot;: 267.71,      &quot;last_traded_price&quot;: 267.71    },    &quot;REQ&quot;: {      &quot;highest_buy_bid&quot;: 2.22,      &quot;lowest_sell_bid&quot;: 2.39,      &quot;last_traded_price&quot;: 2.3    },    &quot;DGD&quot;: {      &quot;highest_buy_bid&quot;: 2385,      &quot;lowest_sell_bid&quot;: 3000,      &quot;last_traded_price&quot;: 2385    },    &quot;QLC&quot;: {      &quot;highest_buy_bid&quot;: 3.3,      &quot;lowest_sell_bid&quot;: 3.96,      &quot;last_traded_price&quot;: 3.4    },    &quot;POWR&quot;: {      &quot;highest_buy_bid&quot;: 10.02,      &quot;lowest_sell_bid&quot;: 11.4,      &quot;last_traded_price&quot;: 10.01    },    &quot;WPR&quot;: {      &quot;highest_buy_bid&quot;: 1.18,      &quot;lowest_sell_bid&quot;: 1.25,      &quot;last_traded_price&quot;: 1.17    },    &quot;WAVES&quot;: {      &quot;highest_buy_bid&quot;: 150.1,      &quot;lowest_sell_bid&quot;: 179,      &quot;last_traded_price&quot;: 150    },    &quot;WAN&quot;: {      &quot;highest_buy_bid&quot;: 58.51,      &quot;lowest_sell_bid&quot;: 69.9,      &quot;last_traded_price&quot;: 53.55    },    &quot;ACT&quot;: {      &quot;highest_buy_bid&quot;: 2.21,      &quot;lowest_sell_bid&quot;: 2.68,      &quot;last_traded_price&quot;: 2.21    },    &quot;XEM&quot;: {      &quot;highest_buy_bid&quot;: 5.7,      &quot;lowest_sell_bid&quot;: 7.51,      &quot;last_traded_price&quot;: 10    },    &quot;XVG&quot;: {      &quot;highest_buy_bid&quot;: 0.89,      &quot;lowest_sell_bid&quot;: 0.92,      &quot;last_traded_price&quot;: 0.88    },    &quot;BLZ&quot;: {      &quot;highest_buy_bid&quot;: 7.61,      &quot;lowest_sell_bid&quot;: 7.8,      &quot;last_traded_price&quot;: 7.8    },    &quot;SUB&quot;: {      &quot;highest_buy_bid&quot;: 7.06,      &quot;lowest_sell_bid&quot;: 8.5,      &quot;last_traded_price&quot;: 7.45    },    &quot;LRC&quot;: {      &quot;highest_buy_bid&quot;: 6.5,      &quot;lowest_sell_bid&quot;: 9.95,      &quot;last_traded_price&quot;: 6.7    },    &quot;NEXO&quot;: {      &quot;highest_buy_bid&quot;: 3.91,      &quot;lowest_sell_bid&quot;: 4.19,      &quot;last_traded_price&quot;: 3.91    },    &quot;EFX&quot;: {      &quot;highest_buy_bid&quot;: 0.69,      &quot;lowest_sell_bid&quot;: 0.9,      &quot;last_traded_price&quot;: 0.7    },    &quot;CPX&quot;: {      &quot;highest_buy_bid&quot;: 1.05,      &quot;lowest_sell_bid&quot;: 1.27,      &quot;last_traded_price&quot;: 1.05    },    &quot;ZRX&quot;: {      &quot;highest_buy_bid&quot;: 38.09,      &quot;lowest_sell_bid&quot;: 39.49,      &quot;last_traded_price&quot;: 37.77    },    &quot;REP&quot;: {      &quot;highest_buy_bid&quot;: 1050,      &quot;lowest_sell_bid&quot;: 1200,      &quot;last_traded_price&quot;: 1025    },    &quot;LOOM&quot;: {      &quot;highest_buy_bid&quot;: 5.06,      &quot;lowest_sell_bid&quot;: 6.7,      &quot;last_traded_price&quot;: 6.7    },    &quot;EOSD&quot;: {      &quot;highest_buy_bid&quot;: 3.51,      &quot;lowest_sell_bid&quot;: 3.88,      &quot;last_traded_price&quot;: 3.51    },    &quot;STORM&quot;: {      &quot;highest_buy_bid&quot;: 0.47,      &quot;lowest_sell_bid&quot;: 0.5,      &quot;last_traded_price&quot;: 0.48    },    &quot;GNT&quot;: {      &quot;highest_buy_bid&quot;: 9.25,      &quot;lowest_sell_bid&quot;: 9.26,      &quot;last_traded_price&quot;: 9.26    },    &quot;QTUM&quot;: {      &quot;highest_buy_bid&quot;: 235,      &quot;lowest_sell_bid&quot;: 288.97,      &quot;last_traded_price&quot;: 247.69    },    &quot;QKC&quot;: {      &quot;highest_buy_bid&quot;: 1.86,      &quot;lowest_sell_bid&quot;: 2.34,      &quot;last_traded_price&quot;: 1.76    },    &quot;LSK&quot;: {      &quot;highest_buy_bid&quot;: 230,      &quot;lowest_sell_bid&quot;: 286,      &quot;last_traded_price&quot;: 230    },    &quot;NPXS&quot;: {      &quot;highest_buy_bid&quot;: 0.11,      &quot;lowest_sell_bid&quot;: 0.12,      &quot;last_traded_price&quot;: 0.11    },    &quot;USDT&quot;: {      &quot;highest_buy_bid&quot;: 74.12,      &quot;lowest_sell_bid&quot;: 77,      &quot;last_traded_price&quot;: 74.11    },    &quot;ETC&quot;: {      &quot;highest_buy_bid&quot;: 804.02,      &quot;lowest_sell_bid&quot;: 850,      &quot;last_traded_price&quot;: 804    },    &quot;DENT&quot;: {      &quot;highest_buy_bid&quot;: 0.15,      &quot;lowest_sell_bid&quot;: 0.17,      &quot;last_traded_price&quot;: 0.17    },    &quot;CLOAK&quot;: {      &quot;highest_buy_bid&quot;: 120.51,      &quot;lowest_sell_bid&quot;: 159.92,      &quot;last_traded_price&quot;: 135    },    &quot;KMD&quot;: {      &quot;highest_buy_bid&quot;: 70,      &quot;lowest_sell_bid&quot;: 77,      &quot;last_traded_price&quot;: 77.6    },    &quot;GRS&quot;: {      &quot;highest_buy_bid&quot;: 35,      &quot;lowest_sell_bid&quot;: 39.4,      &quot;last_traded_price&quot;: 38.4    },    &quot;RAM&quot;: {      &quot;highest_buy_bid&quot;: 0.38,      &quot;lowest_sell_bid&quot;: 0.4,      &quot;last_traded_price&quot;: 0.38    },    &quot;LET&quot;: {      &quot;highest_buy_bid&quot;: 0.64,      &quot;lowest_sell_bid&quot;: 0.68,      &quot;last_traded_price&quot;: 0.68    },    &quot;SOUL&quot;: {      &quot;highest_buy_bid&quot;: 2.26,      &quot;lowest_sell_bid&quot;: 2.71,      &quot;last_traded_price&quot;: 2.7    },    &quot;PHX&quot;: {      &quot;highest_buy_bid&quot;: 0.77,      &quot;lowest_sell_bid&quot;: 0.82,      &quot;last_traded_price&quot;: 0.8    },    &quot;VET&quot;: {      &quot;highest_buy_bid&quot;: 0.96,      &quot;lowest_sell_bid&quot;: 1.15,      &quot;last_traded_price&quot;: 1.15    },    &quot;TST&quot;: {      &quot;highest_buy_bid&quot;: 23,      &quot;lowest_sell_bid&quot;: 27.5,      &quot;last_traded_price&quot;: 25    }  },  &quot;status&quot;: 1,  &quot;error&quot;: null}&lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting current balance of crypto asset&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;Inputing &quot;INR&quot; in place of crypto asset would list your inr balance .&lt;pre&gt;bitbnsObj.currentCoinBalance('BTC')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: {    &quot;inorderBTC&quot;: 8.34,    &quot;availableorderBTC&quot;: 15.76  },  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:inorderBTC -&gt; volume which is the order bookavailableorderBTC -&gt; volume which is present in wallet  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get Deposit History&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.depositHistory('BTC', 0)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt; {  data: [    {      type: 'BTC deposited',      typeI: 1,      amount: 0.00159302,      date: '2018-08-21T14:35:02.000Z',      unit: 'BTC',      factor: 100000000,      fee: 0,      delh_btc: 0,      delh_inr: 0,      rate: 0,      del_btc: 159302,      del_inr: 0    },    {      type: 'BTC deposited',      typeI: 1,      amount: 0.00142951,      date: '2018-08-21T14:35:02.000Z',      unit: 'BTC',      factor: 100000000,      fee: 0,      delh_btc: 0,      delh_inr: 0,      rate: 0,      del_btc: 142951,      del_inr: 0    }  ],  status: 1,  error: null}Explanation of fields:type -&gt; type of actiontypeI -&gt; action idamount -&gt; the amount depositeddate -&gt; the time at which this event occuredunit -&gt; the symbol name of coinfactor -&gt; the division factordel_btc -&gt; delta changes in normal wallet of coindel_inr -&gt; delta changes in normal inr walletdelh_btc -&gt; delta changes in hold wallet of coin  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get Withdrawal History&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.withdrawHistory('XRP', 0)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  data: [    {      type: 0,      amount: 1.1,      unit: 'XRP',      hash: '42DAD88011C178DCAA1587ABA4458F4D535B30248650A6C353E5E2527',      fee: 0.1,      to: 'rB1za2ZVgqvrNB7u8LbVN61k5n1ByBUtXCA',      status: '-1',      canSendMail: 0,      cancelable: -1,      refer: 5339918,      expTime: 'XRP withdraw done'    },    {      type: 0,      amount: 100,      unit: 'XRP',      hash: '12520219872260A25457E4D03C8F82F696A23EEA558B693B90FF080C5',      fee: 0.1,      to: 'rLdBnLq5C13ood9wdjY9ZCdgycK8KGevkUj',      status: '-1',      canSendMail: 0,      cancelable: -1,      refer: 6531933,      expTime: 'XRP withdraw done'    }  ],  status: 1,  error: null}  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;List Open Orders&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.listOpenOrders('BTC')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: [    {      &quot;entry_id&quot;: 322,      &quot;btc&quot;: 48,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 323,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 324,      &quot;btc&quot;: 100,      &quot;r ate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 325,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-0 9-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 326,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;t ype&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 327,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;e ntry_id&quot;: 328,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 329,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 330,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;201 8-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 331,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 332,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 333,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 334,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:29:52.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 337,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot; 2018-09-10T12:45:51.000Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    },    {      &quot;entry_id&quot;: 338,      &quot;btc&quot;: 100,      &quot;rate&quot;: 25,      &quot;time&quot;: &quot;2018-09-10T12:46:01.00 0Z&quot;,      &quot;type&quot;: 1,      &quot;status&quot;: 0    }  ],  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:entry_id -&gt; the unique id assigned to the orderbtc -&gt; the volume of the coinrate -&gt; the rate at which the order was placedtime -&gt; the timestamp at which the order was placedtype -&gt; 1 for sell and 0 for buy orderstatus -&gt; -1 for cancelled , 0 for not processed , 1 for partially executed, 2 for fully executed  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;List Open Stop Loss Orders&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.listOpenStopOrders('TST')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  data: [    {      entry_id: 28816,      btc: 40,      rate: 25,      t_rate: 24.5,      type: 1,      status: 0    }  ],  status: 1,  error: null}Explanation of fields:entry_id -&gt; the unique id assigned to the orderbtc -&gt; the volume of the coinrate -&gt; the rate at which the order was placedt_rate -&gt; the trigger rate at which the order was placedtime -&gt; the timestamp at which the order was placedtype -&gt; 1 for sell and 0 for buy orderstatus -&gt; -1 for cancelled , 0 for not processed , 1 for partially executed, 2 for fully executed  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get Specify Crypto Coin Address&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;Coins Without TagbitbnsObj.getCoinAddress('BTC')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  &quot;data&quot;: {    &quot;token&quot;: &quot;3QkuWRDRNcjtMQNneoqFV7hpxQPWW6pupK&quot;,    &quot;expiry&quot;: &quot;2018-09-12 13:04:09&quot;  },  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:token -&gt; the token addressexpiry -&gt; the time till which this address is user's valid address  &lt;/pre&gt;&lt;/details&gt;&lt;pre&gt;Coins With TagbitbnsObj.getCoinAddress('XLM')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  &quot;data&quot;: {    &quot;token&quot;: &quot;GAVQNY45FBHSN5MEPLAF56U7VDCBDG54TQFGJSS2CRPZTWD3CSHP4YPU&quot;,    &quot;tag&quot;: &quot;123151&quot;  },  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:token -&gt; the token addresstag -&gt; the tag to be used for the tokenDeposits would not be valid unless you specify the tag  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Sell Order&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.placeSellOrder('XRP', 200, 25)200 -&gt; Quantity25 -&gt; Rate&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  {  &quot;data&quot;: &quot;Successfully placed bid to sell at specified price&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 489}Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Market Order via cost&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.placeMarketOrder('BTC', 'INR', 'BUY', 100)'INR' -&gt; Market (INR/USDT)'BUY' -&gt; Side (BUY/SELL)100 -&gt; Buy/Sell coin worth Rs 100 &lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  { 'code': 200, 'data': 'Successfully placed market order to purchase currency', 'error': None, 'id': 12618790, 'status': 1 }Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the orderstatus -&gt; 1 (0 for failure)  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Market Order via quantity&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.placeMarketOrderQuantity('BTC', 'INR', 'BUY', 0.00001)'INR' -&gt; Market (INR/USDT)'BUY' -&gt; Side (BUY/SELL)0.00001 -&gt; Quantity&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  { 'code': 200, 'data': 'Successfully placed market order to purchase currency', 'error': None, 'id': 12578554, 'status': 1 }Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the orderstatus -&gt; 1 (0 for failure)  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Placing a STOP LOSS order (BUY)&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.buyStopLoss('XRP', 40, 24, 24.5)40 -&gt; Quantity24 -&gt; Rate24.5 -&gt; Trigger rate&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  {  &quot;data&quot;: &quot;Successfully placed order for stop loss buy&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 28595}Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Buy Order&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.placeBuyOrder('XRP', 200, 25)200 -&gt; Quantity25 -&gt; Rate&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  {  &quot;data&quot;: &quot;Successfully placed bid to purchase currency&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 490}Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Placing a STOP LOSS order (BUY)&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.buyStopLoss('XRP', 40, 24, 24.5)40 -&gt; Quantity24 -&gt; Rate24.5 -&gt; Trigger rate&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  {  &quot;data&quot;: &quot;Successfully placed order for stop loss buy&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 28595}Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Placing a STOP LOSS order (SELL)&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.sellStopLoss('XRP', 40, 25, 24.5)40 -&gt; Quantity24 -&gt; Rate24.5 -&gt; Trigger rate&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: &quot;Successfully placed a stop limit sell order&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 28596}Explanation of fields:data -&gt; Just a custom messageid -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Cancel Order&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.cancelOrder('XRP', 174)Here 174 is a order id&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: &quot;Successfully cancelled the order&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null}Explanation of fields:data -&gt; just a custom messagestatus -&gt; status of cancellation 1 for success  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting Sell Order Book for BTC&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getSellOrderBook('BTC')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  data: [    {      rate: 481847.56,      btc: 6352679    },    {      rate: 481700,      btc: 5540000    },    {      rate: 481551,      btc: 5000000    },    {      rate: 481000,      btc: 11406    },    {      rate: 480000,      btc: 208021    },    {      rate: 479366.65,      btc: 5265026    },    {      rate: 479345,      btc: 453445    },    {      rate: 478854.18,      btc: 642042    },    {      rate: 478749.87,      btc: 208356    },    {      rate: 478511.87,      btc: 2446067    },    {      rate: 478000,      btc: 80253706    },    {      rate: 477900,      btc: 6261808    },    {      rate: 477777,      btc: 208900000    },    {      rate: 477740,      btc: 15000000    },    {      rate: 477706.19,      btc: 5003424    }  ],  status: 1,  error: null} Explanation of fields: rate -&gt; the amount of the order btc -&gt; the volume of the coin for that order   &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting Sell Order Book for BTCUSDT&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getSellOrderBook('BTCUSDT')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {    &quot;data&quot;: [        { &quot;rate&quot;: 13701.34, &quot;btc&quot;: 0.145853 },        { &quot;rate&quot;: 13701.35, &quot;btc&quot;: 0.043633 },        { &quot;rate&quot;: 13701.47, &quot;btc&quot;: 0.543258 },        { &quot;rate&quot;: 13701.69, &quot;btc&quot;: 0.664955 },        { &quot;rate&quot;: 13701.72, &quot;btc&quot;: 0.131749 },        { &quot;rate&quot;: 13702.36, &quot;btc&quot;: 0.406614 },        { &quot;rate&quot;: 13703.18, &quot;btc&quot;: 0.253289 },        { &quot;rate&quot;: 13713.46, &quot;btc&quot;: 0.19549 },        { &quot;rate&quot;: 13713.88, &quot;btc&quot;: 0.055847 },        { &quot;rate&quot;: 13740, &quot;btc&quot;: 0.03642294 },        { &quot;rate&quot;: 13848.3, &quot;btc&quot;: 0.14447299 },        { &quot;rate&quot;: 13855, &quot;btc&quot;: 0.03 },        { &quot;rate&quot;: 13855.11, &quot;btc&quot;: 0.0119887 },        { &quot;rate&quot;: 13879.39, &quot;btc&quot;: 0.0001 },        { &quot;rate&quot;: 14000, &quot;btc&quot;: 0.00163832 }    ],    &quot;status&quot;: 1,    &quot;error&quot;: None,    &quot;code&quot;: 200} Explanation of fields: rate -&gt; the amount of the order btc -&gt; the volume of the coin for that order   &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting Buy Order Book for BTC&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getBuyOrderBook('BTC')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    { data:  [ { rate: 481847.56, btc: 6352679 },    { rate: 481700, btc: 5540000 },    { rate: 481551, btc: 5000000 },    { rate: 481000, btc: 11406 },    { rate: 480000, btc: 208021 },    { rate: 479366.65, btc: 5265026 },    { rate: 479345, btc: 453445 },    { rate: 478854.18, btc: 642042 },    { rate: 478749.87, btc: 208356 },    { rate: 478511.87, btc: 2446067 },    { rate: 478000, btc: 80253706 },    { rate: 477900, btc: 6261808 },    { rate: 477777, btc: 208900000 },    { rate: 477740, btc: 15000000 },    { rate: 477706.19, btc: 5003424 } ], status: 1, error: null } Explanation of fields: rate -&gt; the amount of the order btc -&gt; the volume of the coin for that order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting Buy Order Book for BTCUSDT&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getBuyOrderBook('BTCUSDT')&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {    &quot;data&quot;: [        { &quot;rate&quot;: 13657.14, &quot;btc&quot;: 0.245901 },        { &quot;rate&quot;: 13656.94, &quot;btc&quot;: 0.043868 },        { &quot;rate&quot;: 13656.58, &quot;btc&quot;: 0.249137 },        { &quot;rate&quot;: 13656.57, &quot;btc&quot;: 0.215321 },        { &quot;rate&quot;: 13656.56, &quot;btc&quot;: 0.06557399 },        { &quot;rate&quot;: 13656.26, &quot;btc&quot;: 0.28264299 },        { &quot;rate&quot;: 13621.07, &quot;btc&quot;: 0.086085 },        { &quot;rate&quot;: 13620.93, &quot;btc&quot;: 0.307243 },        { &quot;rate&quot;: 13620.77, &quot;btc&quot;: 0.466551 },        { &quot;rate&quot;: 13620.71, &quot;btc&quot;: 0.203805 },        { &quot;rate&quot;: 13618.79, &quot;btc&quot;: 0.01179179 },        { &quot;rate&quot;: 13600, &quot;btc&quot;: 0.00461852 },        { &quot;rate&quot;: 13150, &quot;btc&quot;: 0.07585551 },        { &quot;rate&quot;: 13000, &quot;btc&quot;: 0.00368308 },        { &quot;rate&quot;: 12950, &quot;btc&quot;: 0.01540463 }    ],    &quot;status&quot;: 1,    &quot;error&quot;: None,    &quot;code&quot;: 200} Explanation of fields: rate -&gt; the amount of the order btc -&gt; the volume of the coin for that order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get executed orders&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;symbol = 'EOSUSDT'    #symbol = 'EOS' for (EOS/INR market)since_date = '2021-01-01T00:00:00Z'page_no = 0bitbnsObj.listExecutedOrders(symbol, since=since_date, pageNo=page_no)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {   &quot;data&quot;:[      {         &quot;type&quot;:&quot;EOS Buy order executed&quot;,         &quot;typeI&quot;:29,         &quot;crypto&quot;:28,         &quot;amount&quot;:28,         &quot;rate&quot;:&quot;3.3929&quot;,         &quot;date&quot;:&quot;2021-01-06T18:53:25.000Z&quot;,         &quot;unit&quot;:&quot;EOS&quot;,         &quot;factor&quot;:100,         &quot;fee&quot;:0.01,         &quot;delh_btc&quot;:0,         &quot;delh_inr&quot;:-0.96,         &quot;del_btc&quot;:28,         &quot;del_inr&quot;:0,         &quot;id&quot;:&quot;2249410&quot;,         &quot;log_id&quot;:260236056      }   ],   &quot;status&quot;:1,   &quot;error&quot;:&quot;None&quot;,   &quot;code&quot;:200}Explanation of fields:type -&gt; type of actiontypeI -&gt; action idamount -&gt; the amount depositeddate -&gt; the time at which this event occurredunit -&gt; the symbol name of coinfactor -&gt; the division factordel_btc -&gt; delta changes in normal wallet of coindel_inr -&gt; delta changes in normal inr walletdelh_btc -&gt; delta changes in hold wallet of coin  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get API usage Status&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getApiUsageStatus()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     data: {        readLimt : 100,        writeLimit : 30,        readRateUsed: 0,        writeRateUsed: 1,        status: 1     },      status: 1,      error: null    }  Explanation of the fields:  readLimit -&gt; the read limit of the user  writeLimit -&gt; the write limit of the user  readRateUsed -&gt; the read requests used  writeRateUsed -&gt; the write requests used  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Getting Order Status&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.orderStatus('BTC', '4221')4221 -&gt; order id&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  data: [    {      entry_id: 4221,      btc: 0.001,      rate: 306929.01,      time: '2018-09-20T13:54:21.000Z',      type: 0,      status: 0    }  ],  status: 1,  error: null}Explanation of fields:entry_id -&gt; the unique id for the orderbtc -&gt; the volume of the currency placedrate -&gt; the rate at which the order is placedtime -&gt; the timestamp of the entrytype -&gt; 0 for buy and 1 for sellstatus -&gt; -1 for cancelled, 0 for not processed, 1 for partially executed, 2 for fully executed  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Cancel Stop Loss Order&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.cancelStopLossOrder('BTC', 4221)4221 -&gt; order id&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  data: 'Successfully cancelled the order',  status: 1,  error: null}Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Curl request to get server time&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;curl -H &quot;X-BITBNS-APIKEY: API-KEY&quot; -X GET 'https://api.bitbns.com/api/trade/v1/getServerTime'&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  serverTime: '1538150764273',  status: 1,  error: null}Explanation of fields:serverTime -&gt; the server timestampstatus -&gt; the response succeeded  &lt;/pre&gt;&lt;/details&gt;&lt;h3&gt;API V2 (New Features)&lt;/h3&gt;&lt;h4&gt;&lt;b&gt;Place Orders(BUY or SELL)&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;&lt;b&gt;(Placing Bracket Order)&lt;/b&gt;bitbnsObj.placeOrders({'symbol': 'XRP', 'side': 'BUY', 'quantity': 40, 'rate': 4, 'target_rate': 5, 't_rate': 3.5, 'trail_rate': .01})side -&gt; BUY or SELLsymbol -&gt; COIN NAME,quantity -&gt; QUANTITY,rate -&gt; RATE,target_rate -&gt; TARGET RATE,t_rate -&gt; TRRIGER RATE,trail_rate -&gt; TRAIL RATETo Place Simple Buy or Sell Order use &lt;b&gt;rate&lt;/b&gt;To Place Stoploss Buy or Sell Order use &lt;b&gt;rate &amp; t_rate&lt;/b&gt;To Place Bracket Buy or Sell Order use &lt;b&gt;rate , t_rate, target_rate &amp; trail_rate&lt;/b&gt;&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: &quot;Successfully placed a bracket order&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 4518726,  &quot;code&quot;: 200}Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1id -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Cancel Order&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.cancelOrders({'symbol': 'XRP', 'side' : 'cancelOrder', 'entry_id': 462})side -&gt; &quot;cancelOrder&quot;,&quot;cancelStopLossOrder&quot;, &quot;usdtcancelOrder&quot;, &quot;usdtcancelStopLossOrder&quot;symbol -&gt; COIN NAMEentry_id : ENTRY ID&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: &quot;Successfully cancelled the order&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;code&quot;: 200}Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Orders in USDT Market&lt;/b&gt;&lt;br&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.placeOrders({'symbol': 'TRX_USDT', 'side': 'BUY', 'quantity': 40, 'rate': 4, 'target_rate': 5, 't_rate': 3.5, 'trail_rate': .01})side -&gt; BUY or SELLsymbol -&gt; COIN NAME(use suffix &quot;_USDT&quot; with coin name)quantity -&gt; QUANTITY,rate -&gt; RATE,target_rate -&gt; TARGET RATE,t_rate -&gt; TRRIGER RATE,trail_rate -&gt; TRAIL RATETo Place Simple Buy or Sell Order use &lt;b&gt;rate&lt;/b&gt;To Place Stoploss Buy or Sell Order use &lt;b&gt;rate &amp; t_rate&lt;/b&gt;To Place Bracket Buy or Sell Order use &lt;b&gt;rate , t_rate, target_rate &amp; trail_rate&lt;/b&gt;&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;   {  &quot;data&quot;: &quot;Successfully placed bid to purchase currency&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;id&quot;: 6743385,  &quot;code&quot;: 200}Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1id -&gt; the unique id of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Cancel Order in USDT MARKET&lt;/b&gt;&lt;br&gt;&lt;h4&gt;&lt;pre&gt;bitbnsObj.cancelOrders({'symbol': 'TRX_USDT', 'side' : 'usdtcancelOrder', 'entry_id': 462})side -&gt; &quot;cancelOrder&quot;,&quot;cancelStopLossOrder&quot;, &quot;usdtcancelOrder&quot;, &quot;usdtcancelStopLossOrder&quot;symbol -&gt; COIN NAME(use suffix &quot;_USDT&quot; with coin name)entry_id : ENTRY ID&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: &quot;Successfully cancelled the order&quot;,  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;code&quot;: 200}Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get Orders in USDT MARKET&lt;/b&gt;&lt;br&gt;&lt;h4&gt;&lt;pre&gt;bitbnsObj.getOrders({'side' : 'usdtListOpenOrders', 'symbol' : 'TRX_USDT', 'page' : 0})side -&gt; &quot;listOpenOrders&quot;, &quot;listOpenStopOrders&quot;, &quot;listOpenBracketOrders&quot;, &quot;usdtListOpenBracketOrders&quot;,         &quot;usdtListOpenStopOrders&quot;,&quot;usdtListOpenOrders&quot;symbol -&gt; COIN NAME(use suffix &quot;_USDT&quot; with coin name)page -&gt; INTEGER&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: [    {      &quot;entry_id&quot;: 6747351,      &quot;btc&quot;: 750,      &quot;rate&quot;: 0.02,      &quot;time&quot;: &quot;2020-10-31T04:43:30.000Z&quot;,      &quot;type&quot;: 0,      &quot;status&quot;: 0    }  ],  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;code&quot;: 200}Explanation of fields:rate -&gt; the amount of the orderbtc -&gt; the volume of the coin for that ordertype -&gt; 1 for sell and 0 for buy orderstatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get token to authenticate orders&lt;/b&gt;&lt;br&gt;&lt;h4&gt;&lt;pre&gt;bitbnsObj.getTokenSocket()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;    View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: &quot;Lw7P8tgPk72hKg0ue3BYVCHif_10071804&quot;,  &quot;status&quot;: 1,  'error': None,  'code': 200 }&lt;br&gt;Explanation of fields:data -&gt; token-id based on API keyserror -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Use socket to get live order book&lt;/b&gt;&lt;br&gt;&lt;h4&gt;&lt;pre&gt;data = bitbnsObj.getOrderBookSocket(coinName = 'BTC', marketName = 'INR')socket = data['socket']@socket.eventdef news(data):  print(data)@socket.eventdef disconnect():  print(&quot;Disconnected&quot;)Pass USDT as market name to get orderbook of USDT marketPass ALL as coin name to get orderbook of all coins&lt;/pre&gt;&lt;h4&gt;&lt;b&gt;Use socket to get live Ticker data&lt;/b&gt;&lt;br&gt;&lt;h4&gt;&lt;pre&gt;data = bitbnsObj.getTickerSocket(marketName = 'INR')socket = data['socket']@socket.eventdef ticker(data):  print(data)@socket.eventdef disconnect():  print(&quot;Disconnected&quot;)Pass USDT as market name to get ticks of USDT market&lt;/pre&gt;  &lt;h4&gt;&lt;b&gt;Use socket to get live executed order of your account&lt;/b&gt;&lt;br&gt;&lt;h4&gt;Does not work right now!&lt;pre&gt;token = bitbnsObj.getTokenSocket()data = bitbnsObj.getExecutedOrders(token['data'])socket = data['socket']@socket.eventdef delta_data(data):  print(data)@socket.eventdef disconnect():  print(&quot;Disconnected&quot;)&lt;/pre&gt;&lt;h3&gt;&lt;b&gt;Margin Trading V2 APIs&lt;/b&gt;&lt;br&gt;&lt;/h3&gt;&lt;h4&gt;&lt;b&gt;Place a margin order&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.placeMarginOrders({'symbol': 'USDT', 'side': 'placeOrder', 'type': 'LEND', 'qnty': 40, 'days': 1, 'rate': 0.0055})side -&gt; placeOrdertype -&gt; BORROW or LENDdays -&gt; 1,3,7,15,30renew -&gt; 0,1,2symbol -&gt; COIN NAME,qnty -&gt; QUANTITY,rate -&gt; RATERenew Flags =&gt; 0 - Don't renew, 1 -&gt; Renew only Principal, 2 -&gt; Renew with Principal + Interest&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;status&quot;: 1,  &quot;error&quot;: &quot;Successfully placed lend order for Margin trading.&quot;,  &quot;code&quot;: 200}Explanation of fields:error -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Cancel a margin order&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.cancelMarginOrder({'id': 1, 'side': 'cancelMarginOrder', 'symbol': 'USDT'})Pass id of the margin transaction you are looking to cancelsymbol -&gt; COIN NAME,&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {      &quot;status&quot;: 1,      &quot;error&quot;: &quot;Successfully cancelled the order&quot;,      &quot;code&quot;: 200    }Explanation of fields:error -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Settle a margin order partially&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.settleMarginPartial({'id': 1, 'side': 'settleMarginOrderPartial', 'amt': 50, 'symbol': 'USDT'})amt -&gt; Amount to settlePass id of the margin transaction you are looking to settle and amt you want to settle&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;status&quot;: 1,  &quot;error&quot;: &quot;Successfully settled the margin order&quot;,  &quot;code&quot;: 200}Explanation of fields:error -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Settle a margin order completely&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.settleMargin({ 'id' : 1, 'side' : 'settleMarginOrder', 'symbol': 'USDT' })Pass id of the margin transaction you are looking to settle&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;status&quot;: 1,  &quot;error&quot;: &quot;Successfully settled the margin order&quot;,  &quot;code&quot;: 200}Explanation of fields:error -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get my margin executed orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.listMarginExecuted({'page': 1, 'side': 'listMarginExecuted', 'type': 'BORROW', 'symbol': 'USDT'})type =&gt; LEND or BORROW&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  response for borrow:  {    &quot;data&quot;: [      {        &quot;entry_id&quot;: 53298,        &quot;worth_required&quot;: 8129.82,        &quot;worth_current&quot;: 26779.7,        &quot;margin_taken&quot;: 85,        &quot;status&quot;: 0,        &quot;expiry&quot;: &quot;2020-11-01T07:03:04.000Z&quot;,        &quot;phase&quot;: 0,        &quot;margin_to_return&quot;: 85.04,        &quot;days&quot;: 1,        &quot;interest&quot;: 0.055,        &quot;coin&quot;: 54,        &quot;margin_partial_return&quot;: 0      }    ],    &quot;status&quot;: 1,    &quot;error&quot;: null,    &quot;code&quot;: 200  }response for lend:    {      &quot;data&quot;: [        {          &quot;entry_id&quot;: 114143,          &quot;amt&quot;: 50,          &quot;time&quot;: &quot;2020-02-03T02:48:41.000Z&quot;,          &quot;status&quot;: 10,          &quot;expiry&quot;: &quot;2020-02-18T08:18:41.000Z&quot;,          &quot;days&quot;: 15,          &quot;interest&quot;: 0.051,          &quot;coin&quot;: 54,          &quot;renew&quot;: 0        }      ],      &quot;status&quot;: 1,      &quot;error&quot;: null,      &quot;code&quot;: 200    }Explanation of fields:data -&gt; the custom messageworth_required -&gt; the amount required to maintain the marginworth_current -&gt; current worth of margin borrwoedmargin_taken -&gt; the amount value borrowedexpiry -&gt; time of expiry of marginmargin_to_return -&gt; amount to be returned.days -&gt; number of days the margin was borrowed or lent.interest -&gt; intreset of margin per day.amt -&gt; the amount of coins lenterror -&gt; the custom messagestatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get my margin pending orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.listMarginPending({'page': 1, 'side': 'listMarginPending', 'symbol': 'USDT'})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: [    {      &quot;entry_id&quot;: 215769,      &quot;btc&quot;: 40,      &quot;days&quot;: 1,      &quot;time&quot;: &quot;2020-10-31T06:42:54.000Z&quot;,      &quot;type&quot;: 0,      &quot;status&quot;: 0,      &quot;rate&quot;: 0.083    }  ],  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;code&quot;: 200}Explanation of fields:data -&gt; the custom messageentry_id -&gt; the unique id assigned to the orderdays -&gt; number of days lent or borrowedbtc -&gt; the volume of the cointype -&gt; 1 for borrow and 0 for lend orderrate -&gt; the rate at which the margin is lend or borrowedstatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get open orders of margin market - all users&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.listMarginMarketOrders({'type': 'BORROW', 'side': 'listMarketOrders', 'symbol': 'XRP'})type =&gt; LEND or BORROW&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {  &quot;data&quot;: [    {      &quot;btc&quot;: 486.55,      &quot;days&quot;: 7,      &quot;rate&quot;: 0.0539    },    {      &quot;btc&quot;: 2.31,      &quot;days&quot;: 1,      &quot;rate&quot;: 0.055    },    {      &quot;btc&quot;: 4392.95,      &quot;days&quot;: 3,      &quot;rate&quot;: 0.06    },    {      &quot;btc&quot;: 99.96,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.065    },    {      &quot;btc&quot;: 1242,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.065    },    {      &quot;btc&quot;: 13287.65,      &quot;days&quot;: 7,      &quot;rate&quot;: 0.067    },    {      &quot;btc&quot;: 350,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.068    },    {      &quot;btc&quot;: 5500,      &quot;days&quot;: 7,      &quot;rate&quot;: 0.07    },    {      &quot;btc&quot;: 2119.34,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.0749    },    {      &quot;btc&quot;: 1770.51,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.076    },    {      &quot;btc&quot;: 53.52,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.0779    },    {      &quot;btc&quot;: 3231.92,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.078    },    {      &quot;btc&quot;: 622.69,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.079    },    {      &quot;btc&quot;: 17306,      &quot;days&quot;: 1,      &quot;rate&quot;: 0.08    },    {      &quot;btc&quot;: 7840,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.085    },    {      &quot;btc&quot;: 446.07,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.0855    },    {      &quot;btc&quot;: 762.59,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.0856    },    {      &quot;btc&quot;: 500,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.087    },    {      &quot;btc&quot;: 195.66,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.088    },    {      &quot;btc&quot;: 112.33,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.089    },    {      &quot;btc&quot;: 2769,      &quot;days&quot;: 1,      &quot;rate&quot;: 0.09    },    {      &quot;btc&quot;: 20000,      &quot;days&quot;: 3,      &quot;rate&quot;: 0.09    },    {      &quot;btc&quot;: 7000,      &quot;days&quot;: 7,      &quot;rate&quot;: 0.09    },    {      &quot;btc&quot;: 8525.51,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.09    },    {      &quot;btc&quot;: 206,      &quot;days&quot;: 1,      &quot;rate&quot;: 0.091    },    {      &quot;btc&quot;: 20000,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.091    },    {      &quot;btc&quot;: 2096.32,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.099    },    {      &quot;btc&quot;: 235,      &quot;days&quot;: 1,      &quot;rate&quot;: 0.1    },    {      &quot;btc&quot;: 401780.26,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.1    },    {      &quot;btc&quot;: 50000,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.11    },    {      &quot;btc&quot;: 19999.81,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.12    },    {      &quot;btc&quot;: 61.71,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.12    },    {      &quot;btc&quot;: 107.45,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.14    },    {      &quot;btc&quot;: 43212,      &quot;days&quot;: 15,      &quot;rate&quot;: 0.169    },    {      &quot;btc&quot;: 30000,      &quot;days&quot;: 7,      &quot;rate&quot;: 0.17    },    {      &quot;btc&quot;: 90610.26,      &quot;days&quot;: 30,      &quot;rate&quot;: 0.18    }  ],  &quot;status&quot;: 1,  &quot;error&quot;: null,  &quot;code&quot;: 200}Explanation of fields:data -&gt; the custom messagedays -&gt; number of days lent or borrowedbtc -&gt; the volume of the coinrate -&gt; the rate at which the margin is lend or borrowedstatus -&gt; for successful request the status is 1  &lt;/pre&gt;&lt;/details&gt;  &lt;h3&gt;&lt;b&gt;FIP Endpoints&lt;/b&gt;&lt;br&gt;&lt;/h3&gt;&lt;h4&gt;&lt;b&gt;List All FIPs&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.listAllFIP({'type': 'ONGOING'})type =&gt; COMPLETE || ONGOING || UPCOMING || DISTRIBUTED&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {      'data': [{        'fip_id': 625,        'total_amt': 100,        'amt_raised': 0.77,        'int_rate': 15,        'int_rate_month': 0.015,        'min_instalment': 0.01,        'max_instalment': 50,        'start_date': '2022-02-02T06:30:00.000Z',        'allocation_complete_date': '0000-00-00 00:00:00.0000',        'maturity_date': '0000-00-00 00:00:00.0000',        'usersCount': 3,        'duration': 30,        'coin': 72,        'name': 'BNB Mega FD',        'status': 2,        'withBNS': 1,        'redeemable': 0,        'percentBNS': 1,        'factor': 10000       },       .       .       }],      'status': 1,      'error': None,      'code': 200    }Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Enroll for a FIPs&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.enrollForFIP({'fip_id': 441, 'amt': 10})fip_id =&gt; ID of the FIP for which you want to enroll&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    &lt;!--Add response here--&gt;Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Get All FIP Transactions&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;For trade HistorybitbnsObj.getFIPTransactions()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     'data': [{       'log_id': 64317,       'fip_id': 614,       'user_id': 1199639,       'time': '2022-02-02T07:55:59.000Z',       'type': 0,       'amt': 10,       'coin': 54,       'lock1': 0,       'lock2': 10,       'bns_amount': 10,       'name': 'USDT FD Monthly',       'factor': 100       }],     'status': 1,     'error': None,     'code': 200    }Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Get all your ongoing FIPs&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.getOngoingFIP()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     'code': 200,     'data': [{       'amt_available': 0.2,       'amt_instalment': None,       'amt_invested': 20,       'amt_redeemed': 0,       'days': 3,       'entry_id': 33381,       'fip_details': {          'allocation_complete_date': '2022-02-03T04:30:02.000Z',          'amt_raised': 4000,          'coin': 54,          'days': 4,          'duration': 30,          'factor': 100,          'fip_id': 614,          'int_rate': 21,          'int_rate_month': 0.015,          'maturity_date': '2022-03-05T04:30:02.000Z',          'min_instalment': 1000,          'name': 'USDT FD Monthly',          'percentBNS': 10,          'redeemable': 0,          'start_date': '2022-02-02T06:30:00.000Z',          'status': 3,          'total_amt': 1500000,          'withBNS': 1         },       'fip_id': 614,       'lock1': 0,       'lock2': 0,       'mat_amount': 2033,       'others': 20,       'status': 0,       'user_id': 1199639,       'utility': 0      }],   'error': None,   'status': 1   }   Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Presubscribe for an FIP&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.preSubscribeForFIP({'fip_id': 614, 'amt': 10})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {       'data': 'Successfully pre subscribed you for FIP',       'status': 1,       'error': None,       'code': 200    }   Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Fetch all your presubscribed FIPs&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.fetchMySubscriptions()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {       'code': 200,       'data': [{         'amt_invested': 1000,         'entry_id': 9702,         'fip_id': 614,         'status': 1,         'user_id': 1199639        }],       'error': None,       'status': 1     }   Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Fetch different types of historical details&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;### Fetch trade historybody = {'method' : 'tradeHistory','coin_name' : 'BTC','market' : 'INR',      'limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)### Fetch INR depositbody = {'method' : 'depINRHistory',      'limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)### Fetch INR withrawal historybody = {'method' : 'withINRHistory',      'limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)### Fetch deposits (crypo including airdrops)body = {'method' : 'depCryptoHistory',      'coin_name': 'BTC','limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)### Fetch withdrawals (crypto including airdrops) body = {'method' : 'withCryptoHistory',      'coin_name': 'BTC','limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)### Fetch deposit crypto blockchain historybody = {'method' : 'depCryptoExternalHistory',      'coin_name': 'BTC','limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)### Fetch withdrawals crypto blockchain historybody = {'method' : 'withCryptoExternalHistory',      'coin_name': 'BTC','limit' : 200,      'page': 0}bitbnsObj.fetchMyHistory(body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{ 'data': [],  'status': 1,  'error': 'Successfully fetched data',  'code': 417}   Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h3&gt;&lt;b&gt;Swap API Endpoints&lt;/b&gt;&lt;br&gt;&lt;/h3&gt;&lt;h4&gt;&lt;b&gt;All Supported coins available for Swap&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapCoinList()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {       'code': 200,       'data': {         '1inch': {           'buyEstimate': '1.895',           'buyEstimateINR': 148.7954,           'buyLimit': 200000,           'coinIcon': 'https://s2.coinmarketcap.com/static/img/coins/64x64/8104.png',           'coinId': 125,           'coinName': '1inch',           'floatPlaces': 2,           'inrDecimals': 3,           'isActiveSwap': 1,           'sellEstimate': '1.876',           'sellEstimateINR': 145.85899999999998,           'sellLimit': 200000,           'usdtDecimals': 3         },         .         .         }       },       'error': None,       'msg': 'Coin Details',       'status': 1    }       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Place limit order on Swap in INR Market&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapLimitINR({'coin': 'BTC', 'quantity':0.000005, 'rate': 3358000, 'type': 1})type =&gt; 0 for buy, 1 for sell&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     'code': 200,     'data': 'Successfully placed order.',     'error': None,     'id': 746314,     'status': 1    }       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if anyid -&gt; order id   &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Place limit order on Swap in USDT Market&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapLimitUSDT({'coin': 'BTC', 'quantity':0.000005, 'rate': 430000, 'type': 1})type =&gt; 0 for buy, 1 for sell&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     'code': 200,     'data': 'Successfully placed order.',     'error': None,     'id': 746317,     'status': 1    }       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if anyid -&gt; order id   &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Place market order on Swap INR market&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapMarketINR({'coin': 'BTC', 'quantity':0.000005, 'type': 1})type =&gt; 0 for buy, 1 for sell&lt;br&gt;To place order based on quantity, pass quantity in the dictionaryTo place order based on volume (max. amount you want to buy irresp. of quantity), pass volume in the dictionary&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     'code': 200,     'data': 'Successfully placed order.',     'error': None,     'id': 746328,     'status': 1    }       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if anyid -&gt; order id   &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Place market order on Swap USDT market&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapMarketUSDT({'coin': 'BTC', 'quantity':0.000005, 'type': 1})type =&gt; 0 for buy, 1 for sell&lt;br&gt;To place order based on quantity, pass quantity in the dictionaryTo place order based on volume (max. amount you want to buy irresp. of quantity), pass volume in the dictionary&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {     'code': 200,     'data': 'Successfully placed order.',     'error': None,     'id': 746338,     'status': 1    }       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if anyid -&gt; order id   &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Get swap orders history&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapOrderHistory({'page': 0})type =&gt; 0 for buy, 1 for sell&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 200, 'data': [{'coin_name': {'coin_name': 'BTC'},   'coin_type': 0,   'credit_amount': 500,   'date': '2022-02-28T07:42:54.000Z',   'exchange': 2,   'executed_inr_rate': 3358000,   'executed_usdt_rate': 42688.66090951,   'extraPaid': 0,   'factor': 100000000,   'id': 779285,   'market': 0,   'order_type': 1,   'quantity': 500,   'rate': 3358000,   'status': 3,   'volume': 1680},  {'coin_name': {'coin_name': 'BTC'},   'coin_type': 0,   'credit_amount': 500,   'date': '2022-02-28T07:39:14.000Z',   'exchange': 2,   'executed_inr_rate': 3358000,   'executed_usdt_rate': 42688.66090951,   'extraPaid': 0,   'factor': 100000000,   'id': 779283,   'market': 0,   'order_type': 1,   'quantity': 500,   'rate': 3358000,   'status': 3,   'volume': 1680},  {'coin_name': {'coin_name': 'BTC'},   'coin_type': 0,   'credit_amount': 500,   'date': '2022-02-28T07:29:24.000Z',   'exchange': 2,   'executed_inr_rate': 3083238.016875,   'executed_usdt_rate': 38198.36115429,   'extraPaid': 137,   'factor': 100000000,   'id': 779282,   'market': 0,   'order_type': 0,   'quantity': 500,   'rate': 3358000,   'status': 3,   'volume': 1680},  {'coin_name': {'coin_name': 'BTC'},   'coin_type': 0,   'credit_amount': 3032,   'date': '2022-02-07T03:11:47.000Z',   'exchange': 1,   'executed_inr_rate': 3298356.72,   'executed_usdt_rate': 42341.16,   'extraPaid': 0,   'factor': 100000000,   'id': 746446,   'market': 0,   'order_type': 1,   'quantity': 3032,   'rate': 3298356.72,   'status': 3,   'volume': 10001}], 'error': None, 'msg': 'Order History', 'status': 1}       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any   &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Cancel swap order&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapCancelOrder({'order_id': '746342', 'market': 0})order_id  =&gt;    The id of the order to be cancelledmarket    =&gt;    0 for INR, 1 for USDT&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;    {      'code': 200,       'data': Successfully cancelled order,       'error': None,       'status': 1    }       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;   &lt;h4&gt;&lt;b&gt;List open swap order&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;bitbnsObj.swapListOpenOrders({'page': 0})&lt;br&gt;Endpoint is paginated&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;  {   'code': 200,   'data': [{'coin_name': {'coin_name': 'BTC'},   'coin_type': 0,   'credit_amount': 0,   'date': '2022-04-11T06:20:29.000Z',   'exchange': 1,   'executed_inr_rate': 0,   'executed_usdt_rate': 0,   'extraPaid': 0,   'factor': 100000000,   'id': 825865,   'market': 0,   'order_type': 0,   'quantity': 500,   'rate': 3358000,   'status': 0,   'volume': 1680}], 'error': None, 'msg': 'Order List', 'status': 1}       Explanation of fields:data -&gt; the custom messagestatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h3&gt;&lt;b&gt;Partner Endpoints&lt;/b&gt;&lt;br&gt;&lt;/h3&gt;Bitbns provides support to its partners via the partner endpoints. One needs to get whitelisted by the bitbns team to use these APIs  &lt;h4&gt;&lt;b&gt;Create new account&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {'email' : 'test_bns34324@gmail.com','phone' : '8676857590','pass' : 'hd237ydkldl','dormant' : 1,    'country' : 0    }b.createNewAccount(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  data: {     User_id: 1877083     },  status: 1,  error: 'Successfully registered',  code: 200}       Explanation of fields:data -&gt; User IDstatus -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Update Account details&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;### For pan card addtionbody = { 'target_uid' : 1705823,'type' : 'pan','id' : 'DVZPS7302U','name' : 'Prashant Singh',    'dob': '12-03-1992'}b.updateUserAccountDetails(body = body)### For Aadhaar card additionbody = { 'target_uid' : 1705823,'type' : 'aadhaar','id' : '782379829288','name' : 'Prashant Singh',}b.updateUserAccountDetails(body = body)### For addition of bank detailsbody = { 'target_uid' : 1705823,'type' : 'bank','acc_id' : '782373229829288','name' : 'Prashant Singh','branch' : 'Koramangala','bank_name' : 'HDFC Bank','ifsc' : 'HDFC00000017','mob' : '8676857590','bank_type' : 'Savings',}b.updateUserAccountDetails(body = body)### Adding UPI idbody = { 'target_uid' : 1705823,'type' : 'upi','vpa' : 'atiprashant@okhdfc'}b.updateUserAccountDetails(body = body)print(response)### Mark KYC Uploadedbody = {'target_uid' : 1705823,'type' : 'kycUploaded'}b.updateUserAccountDetails(body = body)&lt;/pre&gt;  &lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{     status: 1,     error: 'Successfully updated',     code: 200 }Explanation of fields:status -&gt; for successful request the status is 1error -&gt; error message if any  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Fetch user details&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.fetchUserAccountDetails(body = {    'target_uid': 1705823    })&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;// In case of rejection{  data: {    panCard: true,    eyeFront: true,    eyeBack: true,    isTelegramLinked: false,    upiList: [],    email: 'testing_buyhatke1@gmail.com',    phone: '+919090909090',    country: 0,    phone_verified: 0,    video_kyc: 0,    '2fa_en': '',    kyc_status: 'REJECTED',    allBanks: []  },  status: 1,  error: null,  code: 200}// In case not submitted{  data: {    panCard: true,    eyeFront: true,    eyeBack: true,    isTelegramLinked: false,    upiList: [],    email: 'testing_buyhatke1@gmail.com',    phone: '+919090909090',    country: 0,    phone_verified: 0,    video_kyc: 0,    '2fa_en': '',    kyc_status: 'REJECTED',    allBanks: []  },  status: 1,  error: null,  code: 200}// In case its pending{  data: {    panCard: true,    eyeFront: true,    eyeBack: true,    isTelegramLinked: false,    upiList: [],    email: 'testing_buyhatke1@gmail.com',    phone: '+919090909090',    country: 0,    phone_verified: 0,    video_kyc: 0,    '2fa_en': '',    kyc_status: 'PENDING',    pan: 'ABCDE7302T',    dob: '1992-03-12',    name: 'Test Buyhatke',    aadhar: '722319529382',    allBanks: [ [Object] ],    mobile_bank: '9234567891',    bank_name: 'HDFC Bank',    ifsc: 'HDFC00000017',    branch: 'Koramangala',    acc_type: 'Savings',    name_bank: 'Test Buyhatke',    acc_num: '722675224822281',    ibank: '',    verified: 0  },  status: 1,  error: null,  code: 200}       Explanation of fields:code -&gt; code for the request (200 means ok)panCard -&gt; pan card added or notisTelegramLinked -&gt; Telegram linked or notupiList -&gt; List of UPI idsemail -&gt; email id of the userphone -&gt; phone no. of the usercountry -&gt; country of the userphone_verified -&gt; is phone verified or notvideo_kyc -&gt; Video KYCkyc_status -&gt; Status of KYCallBanks -&gt; List of all bankspan -&gt; pan card id dob -&gt; Date of birth of Username -&gt; name of the useraadhaar -&gt; Aadhaar card of the userbank_name -&gt; name of the bankifsc -&gt; IFSC codebranch -&gt; branch of bankacc_type -&gt; Type of accountacc_num -&gt; Account numberverified -&gt; Verified or notstatus -&gt; 0 is for unsuccessful request, 1 is for a successful one  &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Generate new API Keys&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.generateNewAPIKey(body = {    'target_uid': 1705823    })&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  apiSecret: '502C783C2B50983F8BCD1F4940F54CF6',  apiPublic: '63C809662EC27B19396BB1FE12E556D4',  status: 1,  error: null,  code: 200}       Explanation of fields:apiSecret -&gt; API Secret keyapiPublic -&gt; API Public Keystatus -&gt; 1 for a successful requesterror -&gt; Custom messagecode -&gt; code for the request (200 means ok)  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Transfer funds to Pool account&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.transferToPoolAccount(body = {    'pool_uid' : 64873278,'amount' : 50,})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  status: 1,  error: 'Successfully transfered funds to pool account',  code: 200}       Explanation of fields:code -&gt; code for the request (200 means ok)error -&gt; custom messagestatus -&gt; 0 is for unsuccessful request, 1 is for a successful one  &lt;/pre&gt;&lt;/details&gt;    &lt;h4&gt;&lt;b&gt;Transfer coin to Pool account&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'pool_uid' : 64873278,'amount' : 0.01,'coin_name': 'SOL'}b.transferCoinToPoolAccount(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  status: 1,  error: 'Successfully transfered funds from pool account',  code: 200}       Explanation of fields:code -&gt; code for the request (200 means ok)error -&gt; custom messagestatus -&gt; 0 is for unsuccessful request, 1 is for a successful one  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Transfer coin from Pool account&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'target_uid' : 64873278,'amount' : 1,'coin_name': 'GARI'}b.transferCoinFromPoolAccount(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  status: 0,  error: 'Insufficient permission for this operation 0',  code: 416}       Explanation of fields:code -&gt; code for the request (200 means ok)error -&gt; custom messagestatus -&gt; 0 is for unsuccessful request, 1 is for a successful one  &lt;/pre&gt;&lt;/details&gt;  &lt;h4&gt;&lt;b&gt;Transfer USDT funds from Pool account&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.transferUSDTFromPoolAccount(body = {    'target_uid' : 64873278,'amount' : 50,})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  status: 0,  error: 'Insufficient permission for this operation',  code: 416}       Explanation of fields:code -&gt; code for the request (200 means ok)error -&gt; custom messagestatus -&gt; 0 is for unsuccessful request, 1 is for a successful one  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Transfer INR funds from Pool account&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.transferINRFromPoolAccount(body = {    'target_uid': 28746827,'usdtAmt' : 50,'inrAmt' : 4000,  'vpa': 'test@pingpay'})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  status: 0,  error: 'Insufficient permission for this operation',  code: 416}       Explanation of fields:code -&gt; code for the request (200 means ok)error -&gt; custom messagestatus -&gt; 0 is for unsuccessful request, 1 is for a successful one  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Request Coin Withdrawal&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.requestCoinWithdrawFromPoolAccount(body = {'target_uid' : 23342324,'amount' : 1,  'coin_name': 'GARI'})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;       Explanation of fields:  &lt;/pre&gt;&lt;/details&gt;&lt;h3&gt;&lt;b&gt;Payment Gateway&lt;/b&gt;&lt;br&gt;&lt;/h3&gt;For people who would want to use bitbns gateway for crypto payments, can do so using the endpoints described in this section. You need two things before you can start to use the portal:&lt;ul&gt;&lt;li&gt;merchant_id&lt;/li&gt;&lt;li&gt;merchant_secret&lt;/li&gt;&lt;/ul&gt;You need to get an approval from the Bitbns dev team for generating and using the gateway.&lt;br&gt;&lt;br&gt;To successfully use the gateway, please follow the following steps:&lt;ol&gt;&lt;li&gt;Generate a payment request&lt;/li&gt;&lt;li&gt;Step 1 would redirect you to a payment URL&lt;/li&gt;&lt;li&gt;On success/failure, Bitbns will redirect you to landing/callback page with fields - status, msg, amount, coin, signature&lt;/li&gt;&lt;li&gt;Verify the signature&lt;/li&gt;&lt;li&gt;Alternatively, you can also fetch payment status from fetchPGOrderStatus&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;&lt;b&gt;Create New Payment Gateway Order&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'merchant_id': 1,    'amt': 25,     'coin': &quot;USDT&quot;,     'refId': &quot;ORDER_CLIENT123487134&quot;,     'email': 'xyz@buyhatke.com'}response = b.createNewPGOrder(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{  data: { order_id: 22, url: 'https://bitbns.com/payments/?oid=22' },  status: 1,  error: 'Successfully generated order',  code: 200}Explanation of fields:order_id -&gt; Id of the Orderurl -&gt; Payment URL status -&gt; 1 for successful requesterror -&gt; custom message  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Fetch Payment Gateway Order&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;b.createNewPGOrder(body = {    'merchant_id': 1,    'order_id': 21})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;// If user is on the payment page{  data: [    {      id: 40,      merchant_id: 1,      coin: 54,      amount: 10000,      init_time: '2022-01-05T08:51:26.000Z',      payment_time: '0000-00-00 00:00:00',      client_ref_id: 'ORDER_CLIENT112',      status: 0,      user_id: 103602,      errMsg: ''    }  ],  status: 1,  error: 'Successfully fetched details',  code: 200}// If the user has declined payment{  data: [    {      id: 40,      merchant_id: 1,      coin: 54,      amount: 10000,      init_time: '2022-01-05T08:51:26.000Z',      payment_time: '0000-00-00 00:00:00',      client_ref_id: 'ORDER_CLIENT112',      status: -1,      user_id: 103602,      errMsg: 'User declined payment'    }  ],  status: 1,  error: 'Successfully fetched details',  code: 200}// If user has successfully paid{  data: [    {      id: 43,      merchant_id: 1,      coin: 54,      amount: 1,      init_time: '2022-01-05T11:03:34.000Z',      payment_time: '2022-01-05T11:34:04.000Z',      client_ref_id: 'ORDER_CLIENT112',      status: 1,      user_id: 103602,      errMsg: ''    }  ],  status: 1,  error: 'Successfully fetched details',  code: 200}// Unauthorized payment - order_id or otherwise{    status: 0,   error: 'Unauthorized to fetch order status ',  code: 200 }Explanation of fields:  &lt;/pre&gt;&lt;/details&gt;&lt;h3&gt;&lt;b&gt;Futures&lt;/b&gt;&lt;br&gt;&lt;/h3&gt;Bitbns is proud to announce the release of futures trading on its platform. Here lies the documentation for the same&lt;h4&gt;&lt;b&gt;Active markets&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;response = b.futuresInstList(body = {'network': 'mainnet'})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;       {'code': 200, 'data': {'1': {'coin_id': 477,                'default_leverage': '10',                'factor': 100000000,                'inst_id': 1,                'inst_leverage_json': {'1': 20, '10': 2, '3': 7, '5': 4},                'margin_bucket_json': {'1': 20, '10': 2.5, '3': 10, '5': 5},                'min_allowed': 0.0003,                'name': 'IC15USDT Perpetual',                'price_prec': 2,                'qnty_prec': 4,                'status': 0,                'usdt_settled': 1},          '2': {'coin_id': 0,                'default_leverage': '10',                'factor': 100000000,                'inst_id': 2,                'inst_leverage_json': {'1': 30, '10': 3, '3': 10, '5': 6},                'margin_bucket_json': {'1': 20, '10': 2.5, '3': 10, '5': 5},                'min_allowed': 0.0003,                'name': 'BTCUSDT Perpetual',                'price_prec': 2,                'qnty_prec': 4,                'status': 0,                'usdt_settled': 1},          '3': {'coin_id': 6,                'default_leverage': '10',                'factor': 100000000,                'inst_id': 3,                'inst_leverage_json': {'1': 500, '10': 50, '3': 175, '5': 100},                'margin_bucket_json': {'1': 20, '10': 2.5, '3': 10, '5': 5},                'min_allowed': 0.005,                'name': 'ETHUSDT Perpetual',                'price_prec': 2,                'qnty_prec': 3,                'status': 0,                'usdt_settled': 1},          '4': {'coin_id': 77,                'default_leverage': '3',                'factor': 100,                'inst_id': 4,                'inst_leverage_json': {'1': 12500000, '3': 5000000},                'margin_bucket_json': {'1': 20, '3': 10},                'min_allowed': 25000,                'name': 'BNSUSDT Perpetual',                'price_prec': 8,                'qnty_prec': 0,                'status': 0,                'usdt_settled': 1}}, 'error': None, 'msg': 'Instrument Details', 'status': 1} &lt;br&gt;Explanation of fields:coin_id -&gt; Coin ID default_leverage -&gt; default leverage set by trading systemfactor -&gt; factor in which coin operatesinst_id -&gt; Instrument IDmin_allowed -&gt; Minimum order quantityname -&gt; Name of the instrumentprice_prec -&gt; Price precisionqnty_prec -&gt; Quantity Precision  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Wallet Balance&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;response = b.futuresWalletBalance(body = {'network': 'mainnet'})&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;Explanation of fields:  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Allowed Open Position&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'inst_id': 1,    'network': 'mainnet'    }response = b.futuresMaxOpenPos(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{ 'code': 200, 'data': {'maxOpenPositionsAllowed': {'1': 0}}, 'error': 'Max Open Positions', 'status': 1 } &lt;br&gt;Explanation of fields:data -&gt; max open position allowed for the specified instrument  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Update user leverage&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'inst_id': 2,    'leverage': 7,    'network': 'mainnet'    }response = b.futuresUpdateLeverage(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{ 'code': 200, 'data': {  'leverage': 7  }, 'error': 'Leverage Updated Successfully', 'status': 1 } &lt;br&gt;Explanation of fields:leverage -&gt; leverage amount it has been updated to  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get Open Orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {'network': 'mainnet'}response = b.futuresOpenOrders()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 200, 'data': [{'initial_margin': 0.86,           'inst_id': 2,           'order_id': 152538,           'order_time': '2022-07-14T08:10:01.000Z',           'qnty': 0.0003,           'qnty_rem': 0.0003,           'rate': 19700,           'side': 'Long',           'type': 'Open',           'usdt_settled': 1}], 'error': 'Open Orders', 'status': 1} &lt;br&gt;Explanation of fields:data -&gt; An array of open ordersinitial_margin-&gt; Initial Margininst_id -&gt; Instrument IDorder_id -&gt; Order IDqnty -&gt; Quantity placedqnty_rem -&gt; Remaining quantity to executerate -&gt; Rate at which the order was placedside -&gt; Long/Shorttype -&gt; Open/Close  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Get Open Positions&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'network': 'mainnet'    }response = b.futuresOpenPositions()&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 200, 'data': [{'avg_price': 19977.6,           'factor': 100000000,           'inst_id': 2,           'lock': 0,           'position': 0.001,           'side': 0,           'usdt_settled': 1}], 'error': 'Open Positions', 'status': 1} &lt;br&gt;Explanation of fields:avg_price -&gt; Current average priceinst_id -&gt; Instrument IDlock -&gt; Amount lockedposition -&gt; Size of the positionside -&gt; Long/Short  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Open Orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;posSide =&gt; 0/1 (Long/Short)&lt;br&gt;body = {    'inst_id': 2,    'rate': 19700,    'qnty': 0.0003,    'posSide': 0    # Going long    'network': 'mainnet'    }response = b.futuresPlaceOpenOrder(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 200, 'data': {'order_id': 152538}, 'error': 'Successfully placed order ', 'status': 1} &lt;br&gt;Explanation of fields:order_id -&gt; Order ID of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Cancel Open Orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'order_id': 152538,    'network': 'mainnet'    }response = b.futuresCancelOpenOrder(body = body)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 412, 'data': {'order_id': '152538'}, 'error': 'Successfully canceled open order', 'status': 1} &lt;br&gt;Explanation of fields:order_id -&gt; Order ID of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Place Close Orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;posSide =&gt; 0/1 (Long/Short)&lt;br&gt;body = {    'inst_id': 8,    'rate': 98000,    'qnty': 0.1,    'posSide': 0    # Going long    'network': 'mainnet'    }response = b.futuresPlaceCloseOrder(body = body)print(response)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 200, 'data': {'order_id': 153430}, 'error': 'Successfully placed order', 'status': 1} &lt;br&gt;Explanation of fields:order_id -&gt; Order ID of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h4&gt;&lt;b&gt;Cancel Close Orders&lt;/b&gt;&lt;/h4&gt;&lt;pre&gt;body = {    'order_id': 152538,    'network': 'mainnet'    }response = b.futuresCancelCloseOrder(body = body)print(response)&lt;/pre&gt;&lt;details&gt;  &lt;summary&gt;   View Response  &lt;/summary&gt;  &lt;pre&gt;{'code': 412, 'data': {'order_id': '152538'}, 'error': 'Successfully canceled close order', 'status': 1} &lt;br&gt;Explanation of fields:order_id -&gt; Order ID of the order  &lt;/pre&gt;&lt;/details&gt;&lt;h2&gt;HTTP error status codes &lt;/h2&gt;&lt;h3&gt; HTTP error codes would be returned incase of any errors, the body will also cointain an error feild which will explain the cause of the error&lt;/h3&gt;&lt;div id =&quot;HTTP_error_code_table&quot; style =&quot;border:1px solid&quot;&gt;  &lt;table style = &quot;width:100%&quot;&gt;    &lt;tr&gt;      &lt;th&gt;Code&lt;/th&gt;      &lt;th&gt;Meaning&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;200&lt;/th&gt;      &lt;th&gt;null -- requested action has been performed without any problems &lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;400&lt;/th&gt;      &lt;th&gt;Invalid Request -- Invalid request format&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;401&lt;/th&gt;      &lt;th&gt;authentication -- Not authorised or invalid API key&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;403&lt;/th&gt;      &lt;th&gt;Undefined -- this request is forbidden&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;404&lt;/th&gt;      &lt;th&gt;Exchange not found -- Unable to find exchange&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;406&lt;/th&gt;      &lt;th&gt;Coin name not supplied or not yet supported -- coin name applied is incorrect&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;409&lt;/th&gt;      &lt;th&gt;parameter type not correct -- parameters entered is incorrect&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;412&lt;/th&gt;      &lt;th&gt;Oops ! Cancellation failed. Something went wrong ! -- Unable to cancel order&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;413&lt;/th&gt;      &lt;th&gt;volume asked not acceptable -- Desired volume is not within bounds&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;416&lt;/th&gt;      &lt;th&gt;Oops ! Not sufficient balance to purchase currency -- wallet balance is not sufficient &lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;417&lt;/th&gt;      &lt;th&gt;Oops ! Order doesn't exist any more -- Order has alredy been deleted&lt;/th&gt;    &lt;/tr&gt;     &lt;tr&gt;      &lt;th&gt;428&lt;/th&gt;      &lt;th&gt;Price seems Irregular from current market price. -- Entered price is more than current price&lt;/th&gt;    &lt;/tr&gt;         &lt;tr&gt;      &lt;th&gt;500&lt;/th&gt;      &lt;th&gt;Problem with our servers, try again later&lt;/th&gt;    &lt;/tr&gt;         &lt;tr&gt;      &lt;th&gt;503&lt;/th&gt;      &lt;th&gt;currently down for maintaince&lt;/th&gt;    &lt;/tr&gt;    &lt;/tr&gt;  &lt;/table&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>