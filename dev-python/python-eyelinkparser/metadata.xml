<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python EyeLinkParserSebastiaan Math√¥t and contributors &lt;br /&gt;Copyright 2016-2023  &lt;br /&gt;http://www.cogsci.nl/smathot## AboutThe `python-eyelinkparser` module provides a framework to parse EyeLink data files in `.asc` format, that is, the format that you get after converting an `.edf` file with `edf2asc`. This module is mostly for personal use, and is not very well documented.## Installation```pip install python-eyelinkparser```## Expected formatThe parser assumes monocular recording.## Expected messagesBy default, the parser assumes that particular messages are sent to the logfile. If you use different messages, you need to override functions in `_eyelinkparser.EyeLinkParser`. This is not explained here, but you can look in the source code to see how it works.Trial start:start_trial [trialid]Trial end:end_trialstop_trialVariables:var [name] [value]Start of a period of continuous data:start_phase [name]phase [name]End of a period of continuous data:end_phase [name]stop_phase [name]## Function reference**&lt;span style=&quot;color:purple&quot;&gt;eyelinkparser.EyeLinkParser&lt;/span&gt;_(folder='data', ext=('.asc', '.edf', '.tar.xz'), downsample=None, maxtracelen=None, traceprocessor=None, phasefilter=None, phasemap={}, trialphase=None, edf2asc_binary='edf2asc', multiprocess=False, asc_encoding=None, pupil_size=True, gaze_pos=True, time_trace=True)_**The main parser class. This is generally not created directly, butthrough the `eyelinkparser.parse()` function, which takes the same keywordsas the `EyeLinkParser` constructor (i.e. the keywords below).#### Parameters* folder: str, optional :  The folder that contains .edf or .asc data files, or files compressedas .tar.xz archives.* ext: str or tuple, optional :  Allowed file extensions, or a tuple of extensions, for data files.* downsample: int or None, optional :  Indicates whether traces (if any) should be downsampled. For example, avalue of 10 means that the signal becomes 10 times shorter. Downsamplecreates a simple traceprocessor, and can therefore not be used incombination with the traceprocessor argument.* maxtracelen: int or None, optional :  A maximum length for traces. Longer traces are truncated and a`UserWarning` is emitted. This length refers to the trace afterdownsampling/ processing.* traceprocessor: callable or None, optional :  A function that is applied to each trace before the trace is written tothe SeriesColumn. This can be used to apply a series of operations thatare best done on the raw signal, such as first correcting blinks andthen downsampling the signal.The function must accept two arguments: first a label for the trace,which is 'pupil', 'xcoor', 'ycoor', or 'time'. This allows the functionto distinguish the different kinds of singals; second, the traceitself.See `eyelinkparser.defaulttraceprocessor` for a convenience functionthat applies blink correction and downsampling.* trialphase: str or None, optional :  Indicates the name of a phase that should be automatically started whenthe trial starts, or `None` when no trial should be automaticallystarted. This is mostly convenient for processing trials that consistof a single long epoch, or when no `start_phase` messages were writtento the log file.* phasefilter: callable or None, optional :  A function that receives a phase name as argument, and returns a boolindicating whether that phase should be retained.* phasemap: dict, optional :  A dict in which keys are phase names that are renamed to the associatedvalues. This is mostly useful to merge subsequent traces, in whichcase the key is the first trace and the value is the second trace.* edf2asc_binary: str, optional :  The name of the edf2asc executable, which if available can be used toautomatically convert .edf files to .asc. If not available, the parsercan only parse .asc files.* multiprocess: bool or int or None, optional :  Indicates whether each file should be processed in a different process.This can speed up parsing considerably. If not `False`, this should bean int to indicate the number of processes, or None to indicate thatthe number of processes should be the same as the number of cores.* asc_encoding: str or None, optional :  Indicates the character encoding of the `.asc` files, or `None` to usesystem default.* pupil_size: bool, optional :  Indicates whether pupil-size traces should be stored. If enabled, pupilsize is stored as `ptrace_[phase]` columns.* gaze_pos: bool, optional :  Indicates whether horizontal and vertical gaze-position traces shouldbe stored. If enabled, gaze position is stored as `xtrace_[phase]` and`ytrace_[phase]` columns.* time_trace: bool, optional :  Indicates whether timestamp traces should be stored, which indicate thetimestamps of the corresponding pupil and gaze-position traces. Ifenabled, timestamps are stored as `ptrace_[phase]` columns.#### Examples```pythonimport eyelinkparser as epdm = ep.parse(defaulttraceprocessor=ep.defaulttraceprocessor(    blinkreconstruct=True, downsample=True, mode='advanced'))```## TutorialFor a tutorial about using EyeLinkParser, see:- &lt;https://pydatamatrix.eu/eyelinkparser/&gt;## License`python-eyelinkparser` is licensed under the [GNU General Public Licensev3](http://www.gnu.org/licenses/gpl-3.0.en.html).</longdescription>
</pkgmetadata>