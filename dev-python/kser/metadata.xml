<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/kser.svg   :target: https://pypi.python.org/pypi/kser/   :alt: Latest Version.. image:: https://travis-ci.org/cdumay/kser.svg?branch=master   :target: https://travis-ci.org/cdumay/kser   :alt: Latest version.. image:: https://readthedocs.org/projects/kser/badge/?version=latest   :target: http://kser.readthedocs.io/en/latest/?badge=latest   :alt: Documentation Status.. image:: https://img.shields.io/badge/license-MIT-blue.svg    :target: https://github.com/cdumay/kser/blob/master/LICENSE==============================Kafka serialize python library==============================Kser is a bundle of python library whose purpose is to serialize tasks to beexecuted on Kafka consumers. It supports farious extensions:Transport=========librdkafka----------You can choose to use the C bindings using `confluent-kafka &lt;https://github.com/confluentinc/confluent-kafka-python&gt;`_:    $ pip install kser[confluent].. note::    You need to install manually librdkafka, see `confluent-kafka-python documentation &lt;http://docs.confluent.io/current/clients/confluent-kafka-python&gt;`_kafka-python------------You can choose the pure python library `kafka-python &lt;https://github.com/dpkp/kafka-python&gt;`_:    $ pip install kser[pykafka]http----There is also a light version using HTTP ideal to produce messages (not recommended for consumption)    $ pip install kser[http]Other=====encrypt data------------It is possible to encrypt messages in the Kafka queue using `libsodium &lt;https://github.com/jedisct1/libsodium&gt;`_.    $ pip install kser[crypto].. note::    You need to install manually libsodium, see `libsodium documentation &lt;https://download.libsodium.org/doc/&gt;`_prometheus exporter-------------------You can export metrics using the `prometheus &lt;https://prometheus.io/&gt;`_ format:    $ pip install kser[prometheus]A few set of environment variables allow to manage the exporter:+----------------------+---------------+| Environment variable | Default value |+======================+===============+| KSER_METRICS_ENABLED | no            |+----------------------+---------------+| KSER_METRICS_ADDRESS | 0.0.0.0       |+----------------------+---------------+| KSER_METRICS_PORT    | 8888          |+----------------------+---------------+The exporter has only 2 metrics defined by default, it's just a sample. A goodway to implement your own is to override the triggers methods (prefixed with '_') like the following example:.. code-block:: python    from kser import KSER_METRICS_ENABLED    from prometheus_client import Counter    from kser.entry import Entrypoint    MY_METRIC = Counter('kser_my_metric', 'a usefull metric')    class MyEntrypoint(Entrypoint):        def _run(self):            if KSER_METRICS_ENABLED == &quot;yes&quot;:                MY_METRIC.inc()            return self.run()See also:    `prometheus_client documentation &lt;https://github.com/prometheus/client_python&gt;`_        Documentation of the python Prometheus clientopentracing support-------------------You can use `opentracing &lt;http://opentracing.io/&gt;`_ with `Jaeger &lt;https://www.jaegertracing.io/docs/&gt;`_ to follow operation and task:    $ pip install kser[opentracing]Configuration can be set using environment variable:+----------------------+---------------+| Environment variable | Default value |+======================+===============+| JAEGER_HOST          | localhost     |+----------------------+---------------+See also:    `Opentracing support with Jaeger &lt;http://kser.readthedocs.io/en/latest/opentracing.html&gt;`_        Kser documentationAdd-ons=======- `Flask extension &lt;https://github.com/cdumay/flask-kser&gt;`_: Flask integration.Requirements============- Python 3.xDocumentations==============- Project: http://kser.readthedocs.io/- Libsodium: https://download.libsodium.org/doc/- confluent-kafka-python: http://docs.confluent.io/current/clients/confluent-kafka-python- kafka-python: http://kafka-python.readthedocs.io/en/master/Other links===========- PyPI: https://pypi.python.org/pypi/kser- Project issues: https://github.com/cdumay/kser/issuesLicense=======Licensed under MIT license (`LICENSE &lt;./LICENSE&gt;`_ or http://opensource.org/licenses/MIT)</longdescription>
</pkgmetadata>