<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django SAML ToolkitQuickly and easily add SAML Single Sign-On to your Django projects.This package is designed to be very simple for initial setup while also being easily customizable to meet all of your needs.## Installation### Dependencies (Linux)The package xmlsec1 is required for this to work.#### Debian / Ubuntu:`sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl`#### Red Hat / CentOs:`sudo yum install libxml2-devel xmlsec1-devel xmlsec1-openssl-devel libtool-ltdl-devel`### Dependencies (Windows)The python-xmlsec package on Windows is having some issues with hosting, so you can install it manually here:`pip installhttps://github.com/mehcode/python-xmlsec/releases/download/1.3.5/xmlsec-1.3.52.dev0-cp36-cp36m-win_amd64.whl`For more information [here is the related issue](https://github.com/onelogin/python3-saml/issues/110). ### Pip`pip install python3-saml-django`### DjangoNote: Django 1.11 support was dropped in `1.2.0`. If you need Django 1.11 support, please use version `1.1.4`.**settings.py**```pythonINSTALLED_APPS = [    ...,    'django_saml']AUTHENTICATION_BACKENDS = [    'django_saml.backends.SamlUserBackend',    ...]```**urls.py**```pythonurlpatterns = [    path('saml/', include('django_saml.urls')),    ...]```## Configuration### Required Settings**SP Information**You must provide information about your site to be published as metadata.```pythonSAML_SP = {    &quot;entityId&quot;: &quot;https://&lt;your_site&gt;/saml/metadata/&quot;,    &quot;assertionConsumerService&quot;: {        &quot;url&quot;: &quot;https://&lt;your_site&gt;/saml/acs/&quot;,        # DO NOT CHANGE THIS        &quot;binding&quot;: &quot;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST&quot;    },    &quot;singleLogoutService&quot;: {        &quot;url&quot;: &quot;https://&lt;your_site&gt;/saml/sls/&quot;,        # DO NOT CHANGE THIS        &quot;binding&quot;: &quot;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect&quot;    },    &quot;NameIDFormat&quot;: &quot;urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified&quot;,    &quot;x509cert&quot;: &quot;&lt;can also be loaded by file, see SAML_BASE_DIRECTORY&gt;&quot;,    &quot;privateKey&quot;: &quot;&lt;can also be loaded by file, see SAML_BASE_DIRECTORY&gt;&quot;}```**IdP Information**You must provide information about the IdP you will be using through one of the following means:```pythonSAML_IDP = {    &quot;entityId&quot;: &quot;https://example.com/saml/metadata/&quot;,    &quot;singleSignOnService&quot;: {        &quot;url&quot;: &quot;https://example.com/trust/saml2/http-post/sso/&quot;,        &quot;binding&quot;: &quot;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect&quot;    },    &quot;singleLogoutService&quot;: {        &quot;url&quot;: &quot;https://example.com/trust/saml2/http-redirect/slo/&quot;,        &quot;binding&quot;: &quot;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect&quot;    },    &quot;x509cert&quot;: &quot;&lt;cert here&gt;&quot;}SAML_IDP_FILE = os.path.join(BASE_DIR, 'idp_meta.xml')SAML_IDP_URL = 'https://example.com/saml/metadata/'```### Optional Settings| Setting | Description | Default | Example || ------- | ----------- | ------- | ------- || SAML_STRICT | Incorrect SAML responses should be rejected.  **Should be True in production.** | True |  | SAML_DEBUG | SAML warnings are displayed | False | | SAML_CREATE_USER | New users are created on login if they don't exist | True | | SAML_UPDATE_USER | Existing users are updated with information from SAML on login | False | | SAML_IDP_METADATA_TIMEOUT | If using SAML_IDP_URL, the result will be cached for this many seconds before checking again. | 3600 | | SAML_SECURITY | Advanced security settings | See below | See below || SAML_CONTACT | Contact information for site maintainers | None | See below || SAML_ORGANIZATION | Organization information | None | See below || SAML_LOGIN_REDIRECT | Path to redirect users after a successful login | '/' | | SAML_LOGOUT_REDIRECT | Path to redirect users after a successful logout | '/logged-out' || SAML_NO_USER_REDIRECT | Path to redirect users if SAML_CREATE_USER = False and the user doesn't exist | None (Raises PermissionDenied) | '/permission-error' || SAML_USERNAME_ATTR | SAML attribute to use to look up users | 'uid' | 'email' || SAML_ATTR_MAP | List of 2-tuples to map SAML attributes to Django user attributes | [] | [('givenName', 'first_name')] || SAML_ATTR_DEFAULTS | Dictionary of default values to use if an attribute is not present in the SAML response. If no default exists, then a `MissingAttributeException` will be thrown. | {} | {'first_name': ''} || SAML_ATTR_UPDATE_IGNORE | List of Django user attributes to only set on first login, and ignore in future logins (only used if SAML_UPDATE_USER is `True`) | [] | [('email', 'first_name')] || SAML_BASE_DIRECTORY | File path to load SP certificates.  **Must contain a 'certs' folder with 'sp.key' and 'sp.crt' inside.** | None | `os.path.join(BASE_DIR, 'saml')` || SAML_DESTINATION_HOST | Static value to compare with the SAML Destination attribute instead of reading from the request.  Useful for load balancers. | None | 'example.com'| SAML_DESTINATION_HTTPS | Companion for SAML_DESTINATION_HOST. Set to True if the destination will be over HTTPS but the final request will not be. | None | True| SAML_DESTINATION_PORT | Companion for SAML_DESTINATION_HOST. Set to a STRING of a number if you use a non-standard port that does not match SAML_DESTINATION_HTTPS. | None | '8080'**SAML_SECURITY** Default and Example```pythonSAML_SECURITY = {    &quot;nameIdEncrypted&quot;: False,    &quot;authnRequestsSigned&quot;: False,    &quot;logoutRequestSigned&quot;: False,    &quot;logoutResponseSigned&quot;: False,    &quot;signMetadata&quot;: False,    &quot;wantMessagesSigned&quot;: False,    &quot;wantAssertionsSigned&quot;: False,    &quot;wantNameId&quot;: True,    &quot;wantNameIdEncrypted&quot;: False,    &quot;wantAssertionsEncrypted&quot;: False,    &quot;signatureAlgorithm&quot;: &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;,    &quot;digestAlgorithm&quot;: &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;}```**SAML_CONTACT** Example```pythonSAML_CONTACT = {    &quot;technical&quot;: {        &quot;givenName&quot;: &quot;Technology Director&quot;,        &quot;emailAddress&quot;: &quot;technology@thon.org&quot;    },    &quot;support&quot;: {        &quot;givenName&quot;: &quot;Lead Systems Admin&quot;,        &quot;emailAddress&quot;: &quot;systems@thon.org&quot;    }}```**SAML_ORGANIZATION** Example```pythonSAML_ORGANIZATION = {    'en-US': {        'name': 'thon',         'displayname': 'THON',         'url': 'thon.org'    }}```### Advanced Configuration (Custom Backend)For situations like advanced attribute mapping with groups, transforming SAML attributes, etc, you can create custom backends to use instead of the default.Example:```pythonfrom django_saml.backends import SamlUserBackendclass CustomSamlBackend(SamlUserBackend):    def clean_username(self, username):        &quot;&quot;&quot;Return the first part of the email address.                Example: test@example.com -&gt; test.        &quot;&quot;&quot;        return username.split('@')[0]    def configure_user(self, session_data, user):        &quot;&quot;&quot;Custom attribute mapping with groups.                NOTE: ALL SAML attributes in session_data are arrays, even if there is only one element.                &quot;&quot;&quot;        # Call super() to take care of the simple attribute mapping in SAML_ATTR_MAP        user = super(CustomSamlBackend, self).configure_user(session_data, user)        for group_name in session_data['psMemberOf']:            group_name = group_name[5:]            g = Group.objects.get(name=group_name)            g.members.add(user)        return user``` ## CreditThis project is a wrapper around [OneLogin's python3-saml library](https://github.com/onelogin/python3-saml/).## SupportIf you would like to support the development of this package, please consider [donating to THON](https://donate.thon.org/index.cfm?fuseaction=donorDrive.event&amp;eventID=1868) and supporting our mission.</longdescription>
</pkgmetadata>