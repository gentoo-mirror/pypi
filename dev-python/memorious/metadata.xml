<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=========Memorious=========    The solitary and lucid spectator of a multiform, instantaneous and almost intolerably precise world.    -- `Funes the Memorious &lt;http://users.clas.ufl.edu/burt/spaceshotsairheads/borges-funes.pdf&gt;`_,    Jorge Luis Borges.. image:: https://github.com/alephdata/memorious/workflows/memorious/badge.svg``memorious`` is a light-weight web scraping toolkit. It supports scrapers thatcollect structured or un-structured data. This includes the following use cases:* Make crawlers modular and simple tasks re-usable* Provide utility functions to do common tasks such as data storage, HTTP session management* Integrate crawlers with the Aleph and FollowTheMoney ecosystem* Get out of your way as much as possibleDesign------When writing a scraper, you often need to paginate through through an indexpage, then download an HTML page for each result and finally parse that pageand insert or update a record in a database.``memorious`` handles this by managing a set of ``crawlers``, each of which can be composed of multiple ``stages``. Each ``stage`` is implemented using aPython function, which can be re-used across different ``crawlers``.The basic steps of writing a Memorious crawler:1. Make YAML crawler configuration file2. Add different stages3. Write code for stage operations (optional)4. Test, rinse, repeatDocumentation-------------The documentation for Memorious is available at`alephdata.github.io/memorious &lt;https://alephdata.github.io/memorious/&gt;`_.Feel free to edit the source files in the ``docs`` folder and send pull requests for improvements.To build the documentation, inside the ``docs`` folder run ``make html``You'll find the resulting HTML files in /docs/_build/html.</longdescription>
</pkgmetadata>