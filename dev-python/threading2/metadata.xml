<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>threading2:  like the standard threading module, but awesomer.This module is designed as a drop-in replacement and extension for the default&quot;threading&quot; module.  It has two main objectives:    * implement primitives using native platform functionality where possible    * expose more sophisticated functionality where it can be done uniformlyThe following extensions are currently implemented:    * ability to set (advisory) thread priority    * ability to set (advisory) CPU affinity at thread and process level    * thread groups for simultaneous management of multiple threads    * SHLock class for shared/exclusive (also known as read/write) locksThe following API niceties are also included:    * all blocking methods take a &quot;timeout&quot; argument and return a success code    * all exposed objects are actual classes and can be safely subclassedThis has currently only been tested on WinXP and Ubuntu Karmic; similar platforms *should* work OK, and other platforms *should* fall back to usingsensible default behaviour, but I'm not making any guarantees at this stage.Additional planned extensions include:    * make stack_size a kwarg when creating a thread    * native events, semaphores and timed waits on win32    * native conditions and timed waits on pthreads platforms    * native SHLock implementations (SRW on Win Vista+, pthread_rwlock)</longdescription>
</pkgmetadata>