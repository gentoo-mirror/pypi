<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># streamlit-server-stateA &quot;server-wide&quot; state shared across the sessions.[![Tests](https://github.com/whitphx/streamlit-server-state/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/whitphx/streamlit-server-state/actions/workflows/tests.yml?query=branch%3Amain)[![PyPI](https://img.shields.io/pypi/v/streamlit-server-state)](https://pypi.org/project/streamlit-server-state/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/streamlit-server-state)](https://pypi.org/project/streamlit-server-state/)[![PyPI - License](https://img.shields.io/pypi/l/streamlit-server-state)](https://pypi.org/project/streamlit-server-state/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/streamlit-server-state)](https://pypi.org/project/streamlit-server-state/)[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/D1D2ERWFG)&lt;a href=&quot;https://www.buymeacoffee.com/whitphx&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&quot; alt=&quot;Buy Me A Coffee&quot; width=&quot;180&quot; height=&quot;50&quot; &gt;&lt;/a&gt;[![GitHub Sponsors](https://img.shields.io/github/sponsors/whitphx?label=Sponsor%20me%20on%20GitHub%20Sponsors&amp;style=social)](https://github.com/sponsors/whitphx)```pythonimport streamlit as stfrom streamlit_server_state import server_state, server_state_lockst.title(&quot;Global Counter Example&quot;)with server_state_lock[&quot;count&quot;]:  # Lock the &quot;count&quot; state for thread-safety    if &quot;count&quot; not in server_state:        server_state.count = 0increment = st.button(&quot;Increment&quot;)if increment:    with server_state_lock.count:        server_state.count += 1decrement = st.button(&quot;Decrement&quot;)if decrement:    with server_state_lock.count:        server_state.count -= 1st.write(&quot;Count = &quot;, server_state.count)```As above, the API is similar to [the built-in SessionState](https://blog.streamlit.io/session-state-for-streamlit/), except one major difference - a &quot;lock&quot; object.The lock object is introduced for thread-safety because the server-state is accessed from multiple sessions, i.e. threads.## Auto-rerunWhen you assign a value to a server-state item, `server-state[key]`,server-state automatically triggers re-running of all other sessions in which that server-state item is referred to so that all the references to the server-state return the latest value and all the sessions are kept up-to-date.For example, with this mechanism, the [sample chat app (`app_chat.py`)](./app_chat.py) keeps showing the latest message list for all users.### Suppressing auto-rerunWhen this auto-rerun mechanism is not good for your use case, you can suppress auto-reruns upon the value assignments by using `no_rerun` context as below.```pythonfrom streamlit_server_state import server_state, no_rerunwith no_rerun:    server_state[&quot;foo&quot;] = 42  # This does not trigger re-running of other sessions```### Manually trigger re-runningUpon each value assignment, server-state checks whether the value has been changed and skips re-running if it has not for efficiency.This works well in most cases, but it does not for example when the value is a complex mutable object and its field is mutated, while such usages are not recommended.As exceptions, in such cases where the auto-rerun mechanism does not work well, you can manually trigger re-running by using `force_rerun_bound_sessions(key)`.```pythonif &quot;foo&quot; not in server_state:    server_state[&quot;foo&quot;] = SomeComplexObject()server_state[&quot;foo&quot;].field = 42  # If this assignment does not trigger re-running,force_rerun_bound_sessions(&quot;foo&quot;)  # You can do this.```Background: https://discuss.streamlit.io/t/new-library-streamlit-server-state-a-new-way-to-share-states-across-sessions-on-the-server/14981/10## Examples* [`app_global_count`](./app_global_count.py): A sample app like [the official counter example for SessionState](https://blog.streamlit.io/session-state-for-streamlit/) which uses `streamlit-server-state` instead and the counter is shared among all the sessions on the server. This is a nice small example to see the usage and behavior of `streamlit-server-state`. Try to open the app in multiple browser tabs and see the counter is shared among them.* [`app_global_slider`](./app_global_slider.py): A slider widget (`st.slider`) whose value is shared among all sessions.* [`app_chat.py`](./app_chat.py): A simple chat app using `streamlit-server-state`.* [`app_chat_rooms.py`](./app_chat_rooms.py): A simple chat app with room separation.  [![Open in Streamlit](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://share.streamlit.io/whitphx/streamlit-server-state/main/app_chat_rooms.py)## Resources* [New library: streamlit-server-state, a new way to share states among the sessions on the server (Streamlit Community)](https://discuss.streamlit.io/t/new-library-streamlit-server-state-a-new-way-to-share-states-among-the-sessions-on-the-server/14981)</longdescription>
</pkgmetadata>