<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://pypi.python.org/pypi/nlpo3&quot;&gt;&lt;img alt=&quot;pypi&quot; src=&quot;https://img.shields.io/pypi/v/nlpo3.svg&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-360/&quot;&gt;&lt;img alt=&quot;Python 3.6&quot; src=&quot;https://img.shields.io/badge/python-3.6-blue.svg&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/nlpo3&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://pepy.tech/badge/nlpo3/month&quot;/&gt;&lt;/a&gt;# nlpO3 Python bindingPython binding for nlpO3, a Thai natural language processing library in Rust.## Features- Thai word tokenizer  - `segment()` - use maximal-matching dictionary-based tokenization algorithm and honor Thai Character Cluster boundaries    - [2.5x faster](notebooks/nlpo3_segment_benchmarks.ipynb) than similar pure Python implementation (PyThaiNLP's newmm)  - `load_dict()` - load a dictionary from plain text file (one word per line)## Dictionary file- For the interest of library size, nlpO3 does not assume what dictionary the developer would like to use.  It does not come with a dictionary. A dictionary is needed for the dictionary-based word tokenizer.- For tokenization dictionary, try  - [words_th.tx](https://github.com/PyThaiNLP/pythainlp/blob/dev/pythainlp/corpus/words_th.txt) from [PyThaiNLP](https://github.com/PyThaiNLP/pythainlp/) - around 62,000 words (CC0)  - [word break dictionary](https://github.com/tlwg/libthai/tree/master/data) from [libthai](https://github.com/tlwg/libthai/) - consists of dictionaries in different categories, with make script (LGPL-2.1)## Install```bashpip install nlpo3```## UsageLoad file `path/to/dict.file` to memory and assign a name `dict_name` to it.Then tokenize a text with the `dict_name` dictionary:```pythonfrom nlpo3 import load_dict, segmentload_dict(&quot;path/to/dict.file&quot;, &quot;custom_dict&quot;)segment(&quot;สวัสดีครับ&quot;, &quot;dict_name&quot;)```it will return a list of strings:```python['สวัสดี', 'ครับ']```(result depends on words included in the dictionary)Use multithread mode, also use the `dict_name` dictionary:```pythonsegment(&quot;สวัสดีครับ&quot;, dict_name=&quot;dict_name&quot;, parallel=True)```Use safe mode to avoid long waiting time in some edge casesfor text with lots of ambiguous word boundaries:```pythonsegment(&quot;สวัสดีครับ&quot;, dict_name=&quot;dict_name&quot;, safe=True)```## Build### Requirements- [Rust 2018 Edition](https://www.rust-lang.org/tools/install)- Python 3.6 or newer- Python Development Headers  - Ubuntu: `sudo apt-get install python3-dev`  - macOS: No action needed- [PyO3](https://github.com/PyO3/pyo3) - already included in Cargo.toml- [setuptools-rust](https://github.com/PyO3/setuptools-rust)### Steps```bashpython -m pip install --upgrade buildpython -m build```This should generate a wheel file, in `dist/` directory, which can be installed by pip.## IssuesPlease report issues at https://github.com/PyThaiNLP/nlpo3/issues</longdescription>
</pkgmetadata>