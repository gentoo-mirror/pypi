<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># hanapinSimple web search library## Install    $ pip3 install hanapin## Usage### Google```python3from hanapin import Google# you can explicitly add the count result with the `count` argument, #   `search = Google(query=&quot;hello&quot;, count=1)`# search results may not yield the exact specified countsearch = Google(query=&quot;hello&quot;)```### Bing```python3from hanapin import Bing# you can explicitly add the count result with the `count` argument, #   `search = Bing(query=&quot;hello&quot;, count=1)`# search results may not yield the exact specified countsearch = Bing(query=&quot;hello&quot;)```### DuckDuckGo```python3from hanapin import DuckDuckGo# explicitly setting search results count is not applicable,search = DuckDuckGo(query=&quot;hello&quot;)```### Ask.com```python3from hanapin import Ask# explicitly setting search results count is not applicable,search = Ask(query=&quot;hello&quot;)```### Get search resultsScraped search results are `only` the first ones the can be seen from the search engine's results.- Search results are accesible from the class object's `.results()` function.```python3for i in search.results():    print(i[&quot;title&quot;], &quot;::&quot;, i[&quot;link&quot;])```## Credits### Libraries Used- BeautifulSoup4- requests- lxml### &amp;copy; TheBoringDude | [MIT License](https://github.com/TheBoringDude/hanapin/blob/main/LICENSE)</longdescription>
</pkgmetadata>