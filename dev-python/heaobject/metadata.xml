<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HEA Object Library[Research Informatics Shared Resource](https://risr.hci.utah.edu), [Huntsman Cancer Institute](https://healthcare.utah.edu/huntsmancancerinstitute/), Salt Lake City, UTThe HEA Object Library contains data and other classes that are passed into and out of HEA REST APIs.## Version 1Initial release.## Runtime requirements* Python 3.10 or 3.11.## Development environment### Build requirements* Any development environment is fine.* On Windows, you also will need:    * Build Tools for Visual Studio 2019, found at https://visualstudio.microsoft.com/downloads/. Select the C++ tools.    * git, found at https://git-scm.com/download/win.* On Mac, Xcode or the command line developer tools is required, found in the Apple Store app.* Python 3.10 or 3.11: Download and install Python 3.10 from https://www.python.org, and select the options to installfor all users and add Python to your environment variables. The install for all users option will help keep you fromaccidentally installing packages into your Python installation's site-packages directory instead of to your virtualenvenvironment, described below.* Create a virtualenv environment using the `python -m venv &lt;venv_directory&gt;` command, substituting `&lt;venv_directory&gt;`with the directory name of your virtual environment. Run `source &lt;venv_directory&gt;/bin/activate` (or `&lt;venv_directory&gt;/Scripts/activate` on Windows) to activate the virtualenvironment. You will need to activate the virtualenv every time before starting work, or your IDE may be able to dothis for you automatically. **Note that PyCharm will do this for you, but you have to create a new Terminal panelafter you newly configure a project with your virtualenv.*** From the project's root directory, and using the activated virtualenv, run `pip install wheel` followed by  `pip install -r requirements_dev.txt`. **Do NOT run `python setup.py develop`. It will break your environment.**### Running unit testsRun tests with the `pytest` command from the project root directory.### Packaging and releasing this projectSee the [RELEASING.md](RELEASING.md) file for details.</longdescription>
</pkgmetadata>