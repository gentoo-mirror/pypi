<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img width=&quot;761&quot; alt=&quot;SQLAlchemy and Firebolt&quot; src=&quot;https://user-images.githubusercontent.com/7674553/145249436-534b3cc0-2350-4f7e-9c56-78ffbcc0f003.png&quot;&gt;&lt;/p&gt;# firebolt-sqlalchemy[![Unit tests](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/unit-tests.yml/badge.svg)](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/unit-tests.yml)[![Code quality checks](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/code-check.yml/badge.svg)](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/code-check.yml)[![Firebolt Security Scan](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/security-scan.yml/badge.svg)](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/security-scan.yml)[![Integration tests](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/python-integration-tests.yml/badge.svg)](https://github.com/firebolt-db/firebolt-sqlalchemy/actions/workflows/python-integration-tests.yml)![Coverage](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/ptiurin/64f31d124b7249319234d247ade4a7db/raw/firebolt-sqlalchemy-coverage.json)The [Firebolt](https://www.firebolt.io/) dialect for [SQLAlchemy](https://www.sqlalchemy.org/). `firebolt-sqlalchemy` uses [Firebolt's Python SDK](https://github.com/firebolt-db/firebolt-python-sdk) which implements [PEP 249](https://www.python.org/dev/peps/pep-0249/).* [SQLAlchemy Dialects](https://docs.sqlalchemy.org/en/14/dialects/index.html)* [PyPI Package](https://pypi.org/project/firebolt-sqlalchemy/)## InstallationRequires Python &gt;=3.7.```bashpip install firebolt-sqlalchemy```## ConnectingConnection strings use the following structure:```firebolt://{username}:{password}@{database}[/{engine_name}][?account_name={name}}]````engine_name` is optional. If omitted, Firebolt will use the default engine for the database.`account_name` is optional. If omitted a default account will be used for connection.Examples:```firebolt://email@domain:password@sample_databasefirebolt://email@domain:password@sample_database/sample_engine```If a different account name is required, it can be specified in the connection string```firebolt://email@domain:password@sample_database/sample_engine?account_name=my_account```To override the API URL (e.g. for dev testing):```bashexport FIREBOLT_BASE_URL=&lt;your_url&gt;```If your password contains % or / characters they need to be sanitised as per https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls```pythonmy_pass = &quot;0920%/2&quot;import urllib.parsenew_pass = urllib.parse.quote_plus(my_pass)```## Quick Start```pythonimport urllib.parsefrom sqlalchemy import create_enginepassword = urllib.parse.quote_plus(&quot;your_password_here&quot;)engine = create_engine(&quot;firebolt://email@domain:&quot; + password + &quot;@sample_database/sample_engine&quot;)connection = engine.connect()connection.execute(&quot;CREATE FACT TABLE example(dummy int) PRIMARY INDEX dummy&quot;)connection.execute(&quot;INSERT INTO example(dummy) VALUES (11)&quot;)result = connection.execute(&quot;SELECT * FROM example&quot;)for item in result.fetchall():    print(item)```### [AsyncIO](https://docs.sqlalchemy.org/en/14/orm/extensions/asyncio.html) extension```pythonimport urllib.parsefrom sqlalchemy import textfrom sqlalchemy.ext.asyncio import create_async_enginepassword = urllib.parse.quote_plus(&quot;your_password_here&quot;)engine = create_async_engine(&quot;asyncio+firebolt://email@domain:&quot; + password + &quot;@sample_database/sample_engine&quot;)async with engine.connect() as conn:    await conn.execute(        text(f&quot;INSERT INTO example(dummy) VALUES (11)&quot;)    )    result = await conn.execute(        text(f&quot;SELECT * FROM example&quot;)    )    print(result.fetchall())await engine.dispose()```## Limitations1. Transactions are not supported since Firebolt database does not support them at this time.1. Parametrised calls to execute and executemany are not implemented.## ContributingSee: [CONTRIBUTING.MD](https://github.com/firebolt-db/firebolt-sqlalchemy/tree/master/CONTRIBUTING.MD)</longdescription>
</pkgmetadata>