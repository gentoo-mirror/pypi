<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># datclasspython dataclass nested &amp; extra## 安装```shpip install -U datclasspip install git+ssh://git@github.com/foyoux/datclass.gitpip install git+https://github.com/foyoux/datclass.git```## 基本用法&lt;details&gt;&lt;summary&gt;Example 1&lt;/summary&gt;```pyfrom dataclasses import dataclass, fieldfrom typing import Dict, Listfrom datclass import DatClass@dataclassclass User(DatClass):    name: str = None    age: int = None@dataclassclass Group(DatClass):    name: str = None    users: List[User] = field(default_factory=list)  # 支持嵌套    meta: Dict = field(default_factory=dict)if __name__ == '__main__':    dat = {        'name': 'foyoux',        'users': [            {'name': 'foyou', 'age': 18},            {'name': 'hello', 'age': 8, 'sex': 'male'},  # 允许扩展字段        ],        'meta': {            'field1': 'value1',            'field2': 'value2',            'field3': 'value3',        },    }    group = Group(**dat)    print(group.name, group.meta)    for user in group.users:        print(user.name, user.age)```&lt;/details&gt;## `datclass` 命令行工具通过 JSON 生成 dataclass or TypedDict```shusage: datclass [-h] [-v] [-n NAME] [-o OUTPUT] [-d] [-R] [file]generate datclass &amp; support nested and extrapositional arguments:  file                  input file - likes-jsonoptional arguments:  -h, --help            show this help message and exit  -v, --version         show program's version number and exit  -n NAME, --name NAME  main dat class name  -o OUTPUT, --output OUTPUT                        output file - *.py  -d, --dict            generate TypedDict class  -R, --no-recursive    not recursive generate dat class```&lt;details&gt;&lt;summary&gt;data.json&lt;/summary&gt;```json{  &quot;update_id&quot;: 1,  &quot;message&quot;: {    &quot;message_id&quot;: 5,    &quot;chat&quot;: {      &quot;id&quot;: 1,      &quot;first_name&quot;: &quot;first_name&quot;,      &quot;last_name&quot;: &quot;last_name&quot;,      &quot;username&quot;: &quot;username&quot;,      &quot;type&quot;: &quot;private&quot;    },    &quot;date&quot;: 1,    &quot;forward_from&quot;: {      &quot;id&quot;: 1,      &quot;is_bot&quot;: true,      &quot;first_name&quot;: &quot;first_name&quot;,      &quot;username&quot;: &quot;username&quot;    },    &quot;forward_date&quot;: 1,    &quot;video&quot;: {      &quot;duration&quot;: 29,      &quot;width&quot;: 1280,      &quot;height&quot;: 720,      &quot;mime_type&quot;: &quot;video/mp4&quot;,      &quot;thumb&quot;: {        &quot;file_id&quot;: &quot;file_id&quot;,        &quot;file_unique_id&quot;: &quot;file_unique_id&quot;,        &quot;file_size&quot;: 7420,        &quot;width&quot;: 320,        &quot;height&quot;: 180      },      &quot;file_id&quot;: &quot;file_id&quot;,      &quot;file_unique_id&quot;: &quot;file_unique_id&quot;,      &quot;file_size&quot;: 3905756    },    &quot;caption&quot;: &quot;caption&quot;,    &quot;caption_entities&quot;: [      {        &quot;offset&quot;: 0,        &quot;length&quot;: 47,        &quot;type&quot;: &quot;text_link&quot;,        &quot;url&quot;: &quot;https://github.com/foyoux/datclass&quot;      }    ]  }}```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Example 1&lt;/summary&gt;```shdatclass -o data.py data.json```### data.py```pyfrom dataclasses import dataclass, fieldfrom typing import Listfrom datclass import DatClass@dataclassclass CaptionEntities(DatClass):    offset: int = None    length: int = None    type: str = None    url: str = None@dataclassclass Thumb(DatClass):    file_id: str = None    file_unique_id: str = None    file_size: int = None    width: int = None    height: int = None@dataclassclass Video(DatClass):    duration: int = None    width: int = None    height: int = None    mime_type: str = None    thumb: Thumb = None    file_id: str = None    file_unique_id: str = None    file_size: int = None@dataclassclass ForwardFrom(DatClass):    id: int = None    is_bot: bool = None    first_name: str = None    username: str = None@dataclassclass Chat(DatClass):    id: int = None    first_name: str = None    last_name: str = None    username: str = None    type: str = None@dataclassclass Message(DatClass):    message_id: int = None    chat: Chat = None    date: int = None    forward_from: ForwardFrom = None    forward_date: int = None    video: Video = None    caption: str = None    caption_entities: List[CaptionEntities] = field(default_factory=list)@dataclassclass Object(DatClass):    update_id: int = None    message: Message = None```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Example 2&lt;/summary&gt;```shdatclass -o data.py data.json -n Response```### data.py```pyfrom dataclasses import dataclass, fieldfrom typing import Listfrom datclass import DatClass@dataclassclass CaptionEntities(DatClass):    offset: int = None    length: int = None    type: str = None    url: str = None@dataclassclass Thumb(DatClass):    file_id: str = None    file_unique_id: str = None    file_size: int = None    width: int = None    height: int = None@dataclassclass Video(DatClass):    duration: int = None    width: int = None    height: int = None    mime_type: str = None    thumb: Thumb = None    file_id: str = None    file_unique_id: str = None    file_size: int = None@dataclassclass ForwardFrom(DatClass):    id: int = None    is_bot: bool = None    first_name: str = None    username: str = None@dataclassclass Chat(DatClass):    id: int = None    first_name: str = None    last_name: str = None    username: str = None    type: str = None@dataclassclass Message(DatClass):    message_id: int = None    chat: Chat = None    date: int = None    forward_from: ForwardFrom = None    forward_date: int = None    video: Video = None    caption: str = None    caption_entities: List[CaptionEntities] = field(default_factory=list)@dataclassclass Response(DatClass):    update_id: int = None    message: Message = None```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Example 3&lt;/summary&gt;```shdatclass -o data.py data.json -n Response -d -i```### data.py```pyfrom typing import List, TypedDictCaptionEntities = TypedDict('CaptionEntities', {'offset': int, 'length': int, 'type': str, 'url': str})Thumb = TypedDict('Thumb', {'file_id': str, 'file_unique_id': str, 'file_size': int, 'width': int, 'height': int})Video = TypedDict('Video', {'duration': int, 'width': int, 'height': int, 'mime_type': str, 'thumb': Thumb, 'file_id': str, 'file_unique_id': str, 'file_size': int})ForwardFrom = TypedDict('ForwardFrom', {'id': int, 'is_bot': bool, 'first_name': str, 'username': str})Chat = TypedDict('Chat', {'id': int, 'first_name': str, 'last_name': str, 'username': str, 'type': str})Message = TypedDict('Message', {'message_id': int, 'chat': Chat, 'date': int, 'forward_from': ForwardFrom, 'forward_date': int, 'video': Video, 'caption': str, 'caption_entities': List[CaptionEntities]})Response = TypedDict('Response', {'update_id': int, 'message': Message})```&gt; 如果是 Python 3.7，请手动从 `typing_extensions` 中导入 `TypedDict`&lt;/details&gt;</longdescription>
</pkgmetadata>