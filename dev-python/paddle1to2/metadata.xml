<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Upgrade your python model from paddle-1.x to paddle-2.[![Build Status](https://travis-ci.org/PaddlePaddle/paddle1to2.svg?branch=master)](https://travis-ci.org/PaddlePaddle/paddle1to2)[![Coverage Status](https://coveralls.io/repos/github/PaddlePaddle/paddle1to2/badge.svg?branch=master&amp;kill_cache=1)](https://coveralls.io/github/PaddlePaddle/paddle1to2?branch=master)[![Version](https://img.shields.io/pypi/v/paddle1to2)](https://pypi.org/project/paddle1to2)[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)### Attention`paddle1to2` aims to convert python files from paddle-1.x to paddle-2 one by one, it won't handle indirect imports. e.g.```python# filename &quot;a.py&quot;import paddle.fluid as fluidpass# filename &quot;b.py&quot;from a import *class MyLayer(fluid.layers.Layer):    pass````fluid.layers.Layer` in &quot;b.py&quot; won't get converted.**So you have to make sure you have import all used paddle modules, classes, objects directly for every python file before running `paddle1to2`.**### Installpaddle1to2 support Linux, Mac OS, Windows([Git Bash](https://gitforwindows.org/) is recommended), **but it requires Python 3.5.4 or higher to run**. Multi-Process is supported for Linux and Mac OS, Single-Process is support for Windows, this will lead to performance difference.1. install with pip```bashpip install -U paddle1to2paddle1to2 --help # show helppaddle1to2 --inpath /path/to/model.py # upgrade your model from paddle-1.x to paddle-2.0```**ATTENTION**: If your device contains multiple versions of python, you may need to run the following commands instead:```bashpython3 -m pip install -U paddle1to2python3 -m paddle1to2 -hpython3 -m paddle1to2 --inpath /path/to/model.py```2. install from source```bashgit clone https://github.com/T8T9/paddle1to2.gitcd paddle1to2python setup.py sdist bdist_wheelpip install -U ./dist/paddle1to2-*.whlpaddle1to2 --help # show helppaddle1to2 --inpath /path/to/model.py # upgrade your model from paddle-1.x to paddle-2.0```### DevelopIf you are a develop, and you want to test your code quickly, you can run the following command in project directory:```bashpython -m paddle1to2 --inpath /path/to/model.py#or python paddle1to2/main.py --inpath /path/to/model.py```Moreover, if you want to run a specific refactor, you can use the following command:```bashpython -m paddle1to2 --inpath /path/to/model.py --refactor &lt;refactor_name&gt;```use `python -m paddle1to2 -h` to see full list of all refactors.if you want to run all unittest, use command:```bashpython -m unittest discover paddle1to2/tests/# orpython setup.py test```or use command:```bashpython -m unittest paddle1to2/tests/test_refactor.py```to run specific test file.### Change Spec`change_spec` is a python dict defined in spec.py, it defines the rules to refactor your code.```pythonchange_spec = {    &quot;path.to.old_api&quot;: {        &quot;alias&quot;: [            &quot;path.to.old_api_alias1&quot;,            &quot;path.to1.to2.old_api_alias2&quot;,            ],        &quot;update_to&quot;: &quot;path.to.new_api&quot;,        &quot;warning&quot;: &quot;this api is deprecated.&quot;,        &quot;args_list&quot;: [&quot;arg1&quot;, &quot;arg2&quot;],        &quot;args_change&quot;: [                [&quot;arg2&quot;, &quot;arg2_rename&quot;],                [&quot;arg3&quot;, &quot;&quot;],                [&quot;&quot;, &quot;new_arg&quot;, &quot;default_value&quot;],            ],        &quot;args_warning&quot;: {&quot;arg1&quot;:&quot;warning message&quot;},        &quot;args_transformer&quot;: &quot;_default_transformer&quot;,    },}```- `alias`: a list of alias of main alias `path.to.old_api`, all alias will be replaced with main alias.- `update_to`: `path.to.old_api` will be replaced with this new api if specified.- `warning`: print specified warning message when `path.to.old_api` is found. This field will be ignored if `update_to` is specified.- `args_list`: is argument list of `path.to.old_api`.- `args_change`: a list of list. It contains following format:  - `[&quot;arg&quot;, &quot;new_arg&quot;]`: rename a argument, e.g. `func(arg=value)` -&gt; `func(new_arg=value)`  - `[&quot;arg&quot;, &quot;&quot;]`: remove a argument, e.g. `func(arg=value)` -&gt; `func()`  - `[&quot;&quot;, &quot;new_arg&quot;, &quot;default_value&quot;]`: add a new argument, e.g. `func(arg=value)` -&gt; `func(arg=value, new_arg=default_value)`- `args_warning`: print specified warning message for specified argument after apply `args_change`.- `args_transformer`: execute customized transformer on an [AST node](https://github.com/python/cpython/blob/75c80b0bda89debf312f075716b8c467d411f90e/Lib/lib2to3/pytree.py#L207), it will be called after applying `args_change` to do further refactor.### Other Tools1. find pattern of specific code snippet, usage:```bashfind_pattern 'import paddle'````find_pattern` command will traverse all nodes in AST, if you see code snippet you want, type in 'y' to get pattern.2. find match node in specific code for specific pattern, usage:```bashfind_match_node -ss 'import paddle' -ps 'any'```you can also specify &quot;--print-results&quot; option to got representation of matched node, specify &quot;--print-lineno&quot; to got line number of matched code.### Acknowledgements- [Bowler](https://github.com/facebookincubator/Bowler/): Safe code refactoring for modern Python projects.- [lib2to3](https://github.com/python/cpython/tree/master/Lib/lib2to3): A built-in python library to refactor python code.- [fissix](https://github.com/jreese/fissix/): A backport of latest lib2to3, with enhancements.</longdescription>
</pkgmetadata>