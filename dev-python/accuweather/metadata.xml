<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![GitHub Release][releases-shield]][releases][![PyPI][pypi-releases-shield]][pypi-releases][![PyPI - Downloads][pypi-downloads]][pypi-statistics][![Buy me a coffee][buy-me-a-coffee-shield]][buy-me-a-coffee][![PayPal_Me][paypal-me-shield]][paypal-me]# accuweatherPython wrapper for getting weather data from AccuWeather servers for Limited Trial package.## API keyTo generate API key go to https://developer.accuweather.com/user/register and after registration create an app.## How to use package```python&quot;&quot;&quot;Example of usage.&quot;&quot;&quot;import asyncioimport loggingfrom aiohttp import ClientError, ClientSessionfrom accuweather import (    AccuWeather,    ApiError,    InvalidApiKeyError,    InvalidCoordinatesError,    RequestsExceededError,)LATITUDE = 52.0677904LONGITUDE = 19.4795644LOCATION_KEY = &quot;268068&quot;API_KEY = &quot;xxxxx&quot;logging.basicConfig(level=logging.DEBUG)async def main():    &quot;&quot;&quot;Run main function.&quot;&quot;&quot;    async with ClientSession() as websession:        try:            accuweather = AccuWeather(                API_KEY, websession, latitude=LATITUDE, longitude=LONGITUDE            )            current_conditions = await accuweather.async_get_current_conditions()            forecast = await accuweather.async_get_forecast(metric=True)            forecast_hourly = await accuweather.async_get_forecast_hourly(metric=True)        except (            ApiError,            InvalidApiKeyError,            InvalidCoordinatesError,            ClientError,            RequestsExceededError,        ) as error:            print(f&quot;Error: {error}&quot;)        else:            print(f&quot;Location: {accuweather.location_name} ({accuweather.location_key})&quot;)            print(f&quot;Requests remaining: {accuweather.requests_remaining}&quot;)            print(f&quot;Current: {current_conditions}&quot;)            print(f&quot;Forecast: {forecast}&quot;)            print(f&quot;Forecast hourly: {forecast_hourly}&quot;)loop = asyncio.new_event_loop()loop.run_until_complete(main())loop.close()```[releases]: https://github.com/bieniu/accuweather/releases[releases-shield]: https://img.shields.io/github/release/bieniu/accuweather.svg?style=popout[pypi-releases]: https://pypi.org/project/accuweather/[pypi-statistics]: https://pepy.tech/project/accuweather[pypi-releases-shield]: https://img.shields.io/pypi/v/accuweather[pypi-downloads]: https://pepy.tech/badge/accuweather/month[buy-me-a-coffee-shield]: https://img.shields.io/static/v1.svg?label=%20&amp;message=Buy%20me%20a%20coffee&amp;color=6f4e37&amp;logo=buy%20me%20a%20coffee&amp;logoColor=white[buy-me-a-coffee]: https://www.buymeacoffee.com/QnLdxeaqO[paypal-me-shield]: https://img.shields.io/static/v1.svg?label=%20&amp;message=PayPal.Me&amp;logo=paypal[paypal-me]: https://www.paypal.me/bieniu79</longdescription>
</pkgmetadata>