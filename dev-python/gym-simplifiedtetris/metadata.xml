<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/raw/master/assets/20x10_4.gif&quot; width=&quot;500&quot;&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;Gym-SimplifiedTetris &lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://www.codefactor.io/repository/github/oliveroverend/gym-simplifiedtetris&quot;&gt;    &lt;img src=&quot;https://img.shields.io/codefactor/grade/github/OliverOverend/gym-simplifiedtetris?color=ff69b4&amp;style=for-the-badge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/gym-simplifiedtetris/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/gym_simplifiedtetris?style=for-the-badge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;/LICENSE.md&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/license/OliverOverend/gym-simplifiedtetris?color=darkred&amp;style=for-the-badge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/commits/&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/last-commit/OliverOverend/gym-simplifiedtetris?style=for-the-badge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/releases&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/release-date/OliverOverend/gym-simplifiedtetris?color=teal  &amp;style=for-the-badge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/issues&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/issues-raw/OliverOverend/gym-simplifiedtetris?color=blueviolet&amp;style=for-the-badge&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/issues/new?assignees=OliverOverend&amp;labels=bug&amp;late=BUG_REPORT.md&amp;title=%5BBUG%5D%3A&quot;&gt;Report Bug  &lt;/a&gt;  Â·  &lt;a href=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/issues/new?assignees=OliverOverend&amp;labels=enhancement&amp;late=FEATURE_REQUEST.md&amp;title=%5BFEATURE%5D%3A&quot;&gt;Request Feature  &lt;/a&gt;  Â·  &lt;a href=&quot;https://github.com/OliverOverend/gym-simplifiedtetris/discussions/new&quot;&gt;Suggestions  &lt;/a&gt;&lt;/p&gt;---&gt; ðŸŸ¥ Simplified Tetris environments compliant with OpenAI Gym's APIGym-SimplifiedTetris is a pip installable package that creates simplified Tetris environments compliant with [OpenAI Gym's API](https://github.com/openai/gym). Gym's API is the field standard for developing and comparing reinforcement learning algorithms.There are currently [three agents](https://github.com/OliverOverend/gym-simplifiedtetris/blob/master/gym_simplifiedtetris/agents) and [64 environments](https://github.com/OliverOverend/gym-simplifiedtetris/blob/master/gym_simplifiedtetris/envs) provided. The environments are simplified because the player must select the column and piece's rotation before the piece starts falling vertically downwards. If one looks at the previous approaches to the game of Tetris, most of them use this simplified setting.---- [1. Installation](#1-installation)- [2. Usage](#2-usage)- [3. Future work](#3-future-work)- [4. Acknowledgements](#4-acknowledgements)## 1. InstallationThe package is pip installable:```bashpip install gym-simplifiedtetris```Or, you can copy the repository by forking it and then downloading it using:```bashgit clone https://github.com/&lt;YOUR-USERNAME&gt;/gym-simplifiedtetris```Packages can be installed using pip:```bashcd gym-simplifiedtetrispip install -r requirements.txt```## 2. UsageThe file [examples/envs.py](https://github.com/OliverOverend/gym-simplifiedtetris/blob/master/examples/envs.py) shows two examples of using an instance of the `simplifiedtetris-binary-20x10-4-v0` environment for ten games. You can create an environment using `gym.make`, supplying the environment's ID as an argument.```pythonimport gymimport gym_simplifiedtetrisenv = gym.make(&quot;simplifiedtetris-binary-20x10-4-v0&quot;)obs = env.reset()# Run 10 games of Tetris, selecting actions uniformly at random.episode_num = 0while episode_num &lt; 10:    env.render()        action = env.action_space.sample()    obs, reward, done, info = env.step(action)    if done:        print(f&quot;Episode {episode_num + 1} has terminated.&quot;)        episode_num += 1        obs = env.reset()env.close()```Alternatively, you can import the environment directly:```pythonfrom gym_simplifiedtetris import SimplifiedTetrisBinaryEnv as Tetrisenv = Tetris(grid_dims=(20, 10), piece_size=4)```## 3. Future work- Normalise the observation spaces.- Implement an action space that only permits the agent to take non-terminal actions.- Implement more shaping rewards: potential-style, potential-based, dynamic potential-based, and non-potential. Optimise their weights using an optimisation algorithm.- Write end-to-end and integration tests using pytest.- Perform mutation and property-based testing using mutmut and Hypothesis.- Use Coverage.py to increase code coverage.## 4. AcknowledgementsThis package utilises several methods from the [codebase](https://github.com/andreanlay/tetris-ai-deep-reinforcement-learning) developed by andreanlay (2020) and the [codebase](https://github.com/Benjscho/gym-mdptetris) developed by Benjscho (2021).</longdescription>
</pkgmetadata>