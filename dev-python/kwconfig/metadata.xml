<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://badge.fury.io/py/kwconfig.svg    :target: https://badge.fury.io/py/kwconfig.. image:: https://img.shields.io/github/issues/rrwen/kwconfig.svg    :target: https://github.com/rrwen/kwconfig/issues.. image:: https://travis-ci.org/rrwen/kwconfig.svg?branch=master    :target: https://travis-ci.org/rrwen/kwconfig.. image:: https://coveralls.io/repos/github/rrwen/kwconfig/badge.svg?branch=master    :target: https://coveralls.io/github/rrwen/kwconfig?branch=master.. image:: https://img.shields.io/badge/license-MIT-blue.svg    :target: https://raw.githubusercontent.com/rrwen/kwconfig/master/LICENSE.. image:: https://img.shields.io/github/forks/rrwen/kwconfig.svg    :target: https://github.com/rrwen/kwconfig/network.. image:: https://img.shields.io/github/stars/rrwen/kwconfig.svg    :target: https://github.com/rrwen/kwconfig/stargazers.. image:: https://img.shields.io/twitter/url/https/github.com/rrwen/kwconfig.svg?style=social    :target: https://twitter.com/intent/tweet?text=simple%20%23python%20%23package%20for%20keyword%20%23json%20%23configuration:%20https://github.com/rrwen/kwconfigInstall-------1. Install `Python &lt;https://www.python.org/downloads/&gt;`_2. Install `kwconfig &lt;https://pypi.python.org/pypi/kwconfig&gt;`_ via ``pip``::    pip install kwconfig  For the latest developer version, see `Developer Install`_.  Usage-----.. code-block:: python    import kwconfig    # Specify a file path for creating kwconfig object  config = kwconfig.manage('config.json', defaults={'key0': 'value0'})    # Update the config file with a key and value dict  config.update({'key1': 'value1', 'key2': 'value2'})    # Add a keyword dict to existing config file  # If a key exists, it will be updated  # If a key does not exist, it will be added  other_config = {'key3': 'value3'}  other_config = config.add(other_config)    # Write new values using keyword dict  config.overwrite({    'new_key1': 'new_value1',    'new_key2': 'new_value2'  })    # Obtain a dict of the config file contents  kw = config.read()    # Remove the key named &quot;key1&quot;  config.remove('key1')    # Reset to defaults  config.reset()    # Parsing a keyword list into dict ----    # Create a sample list of keyword arguments  argv = ['--key1=value1', '--key2=value2']    # Parse into a keyword dict  kwdict = kwconfig.parse(argv)    # View the values of key1 and key2  print('key1: ' + kwdict['key1'])  print('key2: ' + kwdict['key2'])  For more usage details, see the `Documentation &lt;https://rrwen.github.io/kwconfig&gt;`_.Developer Notes---------------Developer Install*****************Install the latest developer version with ``pip`` from github::    pip install git+https://github.com/rrwen/kwconfig  Install from ``git`` cloned source:1. Ensure `git &lt;https://git-scm.com/&gt;`_ is installed2. Clone into current path3. Install via ``pip``::  git clone https://github.com/rrwen/kwconfig  cd kwconfig  pip install . -I  Tests*****1. Clone into current path ``git clone https://github.com/rrwen/kwconfig``2. Enter into folder ``cd kwconfig``3. Ensure `unittest &lt;https://docs.python.org/2.7/library/unittest.html&gt;`_ is available4. Run tests::    pip install . -I  python -m unittestDocumentation Maintenance*************************1. Ensure `sphinx &lt;https://github.com/sphinx-doc/sphinx/&gt;`_ is installed ``pip install -U sphinx``2. Update the documentation in ``docs/``::    pip install . -I  sphinx-build -b html docs/source docs  Upload to Github****************1. Ensure `git &lt;https://git-scm.com/&gt;`_ is installed2. Add all files and commit changes3. Push to github::    git add .  git commit -a -m &quot;Generic update&quot;  git push  Upload to PyPi**************1. Ensure `twine &lt;https://pypi.python.org/pypi/twine&gt;`_ is installed ``pip install twine``2. Ensure `sphinx &lt;https://github.com/sphinx-doc/sphinx/&gt;`_ is installed ``pip install -U sphinx``3. Run tests and check for OK status4. Delete ``dist`` directory5. Update the version in ``kwconfig/__init__.py``6. Update the documentation in ``docs/``7. Create source distribution8. Upload to `PyPi &lt;https://pypi.python.org/pypi&gt;`_::    pip install . -I  python -m unittest  sphinx-build -b html docs/source docs  python setup.py sdist  twine upload dist/*</longdescription>
</pkgmetadata>