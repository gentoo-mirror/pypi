<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Shaker======**The distributed data-plane testing tool built for OpenStack.**Shaker wraps around popular system network testing tools like`iperf &lt;https://iperf.fr/&gt;`_, `iperf3 &lt;https://iperf.fr/&gt;`_and netperf (with help of `flent &lt;https://flent.org/&gt;`_).Shaker is able to deploy OpenStack instances and networks in differenttopologies. Shaker scenario specifies the deployment and list of teststo execute. Additionally tests may be tuned dynamically in command-line.Features--------* User-defined topology via Heat templates* Simultaneously test execution on multiple instances* Interactive report with stats and charts* Built-in SLA verificationDeployment Requirements-----------------------* Shaker server routable from OpenStack cloud* Admin-user access to OpenStack API is preferableRun in Python Environment-------------------------.. code-block:: bash   $ pip install pyshaker   $ . openrc   $ shaker-image-builder   $ shaker --server-endpoint &lt;host:port&gt; --scenario &lt;scenario&gt; --report &lt;report.html&gt;``where:    * ``host`` and ``port`` - host and port of machine where Shaker is deployed    * ``scenario`` - the scenario to execute, e.g. `openstack/perf_l2` (      `catalog &lt;http://pyshaker.readthedocs.io/en/latest/catalog.html&gt;`_)    * ``&lt;report.html&gt;`` - file to store the final reportFull list of parameters is available in `documentation &lt;http://pyshaker.readthedocs.io/en/latest/tools.html#shaker&gt;`_.Shaker in Container-------------------Shaker is available as container at Docker Hub at`performa/shaker &lt;https://hub.docker.com/r/performa/shaker/&gt;`_.. code-block:: bash    $ docker run -p &lt;port&gt;:&lt;port&gt; -v &lt;artifacts-dir&gt;:/artifacts performa/shaker --scenario &lt;scenario&gt; --server-endpoint &lt;host:port&gt;      --os-auth-url &lt;os-auth-url&gt; --os-username &lt;os-username&gt; --os-password &lt;os-password&gt; --os-project-name &lt;os-project-name&gt;where: * ``host`` and ``port`` - host and port on machine where Shaker is deployed * ``artifacts-dir`` - where to store report and raw result * ``scenario`` - the scenario to execute, e.g. `openstack/perf_l2` (   `catalog &lt;http://pyshaker.readthedocs.io/en/latest/catalog.html&gt;`_) * ``os-XXX`` - OpenStack cloud credentialsLinks-----* PyPi - https://pypi.org/project/pyshaker/* Docker - https://hub.docker.com/r/performa/shaker/* Docs - https://pyshaker.readthedocs.io/* Bugtracker - https://launchpad.net/shaker</longdescription>
</pkgmetadata>