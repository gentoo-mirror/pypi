<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># OAuth2-lib[![pypi_version](https://img.shields.io/pypi/v/oauth2-lib?color=%2334D058&amp;label=pypi%20package)](https://pypi.org/project/oauth2-lib)[![Supported python versions](https://img.shields.io/pypi/pyversions/oauth2-lib.svg?color=%2334D058)](https://pypi.org/project/oauth2-lib)This Project contains a Mixin class that wraps an openapi-codegen python client, to inject Opentelemetry spansand api call retries. It also contains a number of FastAPI dependencies which enables Policy enforcement offloadingto Open Policy Agent.The project contains a number of OIDC classes that are tailored to the SURF environment.## InstallationThis can be done as follows:#### Step 1:First install flit to enable you to develop on this repository```bashpip install flit```#### Step 2:To install all development dependencies```bashflit install --deps develop --symlink```This way all requirements are installed for testing and development.## DevelopmentDepending on the feature type, run bumpversion (patch|minor|major) to increment the version you are working on. Forexample to update the increment the patch version use```bashbumpversion patch```## For MAC users looking and experimenting with Opentelemetry (OTEL)https://github.com/jaegertracing/jaeger-client-node/issues/124#issuecomment-324222456## Supported Python versionsoauth2-lib must support the same python versions as [orchestrator-core](https://github.com/workfloworchestrator/orchestrator-core).Exceptions to this rule are:* **A new python version is released:** oauth2-lib should support the new version before orchestrator-core does* **Support for an old python version is dropped:** oauth2-lib should drop the python version after orchestrator-core does</longdescription>
</pkgmetadata>