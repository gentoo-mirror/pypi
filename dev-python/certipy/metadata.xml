<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Certipy=======A simple python tool for creating certificate authorities andcertificates on the fly.Introduction------------Certipy was made to simplify the certificate creation process. To thatend, Certipy exposes methods for creating and managing certificateauthorities, certificates, signing and building trust bundles. Behindthe scenes Certipy:-  Manages records of all certificates it creates   -  External certs can be imported and managed by Certipy   -  Maintains signing hierarchy-  Persists certificates to files with appropriate permissionsUsage-----Command line~~~~~~~~~~~~Creating a certificate authority:Certipy defaults to writing certs and certipy.json into a folder called``out`` in your current directory.::   $ certipy foo   FILES {'ca': '', 'cert': 'out/foo/foo.crt', 'key': 'out/foo/foo.key'}   IS_CA True   SERIAL 0   SIGNEES None   PARENT_CACreating and signing a key-cert pair:::   $ certipy bar --ca-name foo   FILES {'ca': 'out/foo/foo.crt', 'key': 'out/bar/bar.key', 'cert': 'out/bar/bar.crt'}   IS_CA False   SERIAL 0   SIGNEES None   PARENT_CA fooRemoval:::   certipy --rm bar   Deleted:   FILES {'ca': 'out/foo/foo.crt', 'key': 'out/bar/bar.key', 'cert': 'out/bar/bar.crt'}   IS_CA False   SERIAL 0   SIGNEES None   PARENT_CA fooCode~~~~Creating a certificate authority:::   from certipy import Certipy   certipy = Certipy(store_dir='/tmp')   certipy.create_ca('foo')   record = certipy.store.get_record('foo')Creating and signing a key-cert pair:::   certipy.create_signed_pair('bar', 'foo')   record = certipy.store.get_record('bar')Creating trust:::   certipy.create_ca_bundle('ca-bundle.crt')   # or to trust specific certs only:   certipy.create_ca_bundle_for_names('ca-bundle.crt', ['bar'])Removal:::   record = certipy.remove_files('bar')Records are dicts with the following structure:::   {     'serial': 0,     'is_ca': true,     'parent_ca': 'ca_name',     'signees': {       'signee_name': 1     },     'files': {       'key': 'path/to/key.key',       'cert': 'path/to/cert.crt',       'ca': 'path/to/ca.crt',     }   }The ``signees`` will be empty for non-CA certificates. The ``signees``field is stored as a python ``Counter``. These relationships are used tobuild trust bundles.Information in Certipy is generally passed around as records which pointto actual files. For most ``_record`` methods, there are generallyequivalent ``_file`` methods that operate on files themselves. Theformer will only affect records in Certipyâ€™s store and the latter willaffect both (something happens to the file, the record for it shouldchange, too).Release~~~~~~~Certipy is released under BSD license. For more details see the LICENSEfile.LLNL-CODE-754897</longdescription>
</pkgmetadata>