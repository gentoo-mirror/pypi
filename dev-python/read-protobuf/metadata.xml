<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># read-protobufSmall library to read serialized protobuf(s) directly into Pandas Dataframe.This is meant to be a simple shortcut to getting from serialized protobuf bytes / files directly to a dataframe.&gt;Note: This currently only supports basic proto3 features for Python 3. I have not yet tested it with proto2, though I believe that should work. I plan to expand the utility of this library with time and need.## InstallAvailable via pip:```bash$ pip install read-protobuf```## UsageRun the [demo-notebook](tests/demo.ipynb) for an interactive demo.```pythonimport demo_pb2                             # compiled protobuf message module from read_protobuf import read_protobufMessageType = demo_pb2.MessageType()        # instantiate a new message typedf = read_protobuf(b'\x00\x00', MessageType)    # create a dataframe from serialized protobuf bytesdf = read_protobuf([b'\x00\x00', b'x00\x00'] MessageType)    # read multiple protobuf bytesdf = read_protobuf('demo.pb', MessageType)    # use file instead of bytesdf = read_protobuf(['demo.pb', 'demo2.pb'], MessageType)    # read multiple files# optionsdf = read_protobuf('demo.pb', MessageType, flatten=False)    # don't flatten pb messagesdf = read_protobuf('demo.pb', MessageType, prefix_nested=True)    # prefix nested messages with parent keys (like pandas.io.json.json_normalize)```To compile a protobuf Message class from python, use:```bash$ protoc --python_out=&quot;.&quot; demo.proto```## Alternatives#### protobuf-to-dicthttps://github.com/benhodgson/protobuf-to-dictThis library was developed earlier to convert protobufs to JSON via a dict.#### JSONThe google protobuf library comes with a utility to convert messages to JSON. Then the JSON objects could be loaded into pands via `pd.read_json()`.  ```pythonfrom google.protobuf.json_format import MessageToJson```In my brief tests, the `read_protobuf` package is about twice as fast as converting a protobuf to a dataframe using `MessageToJson`. ## DevelopCurrently developed for Python 3 using the anaconda python distribution. To install a development version of the package, run from the root directory:```bash$ pip install -e .```- To install development dependencies, use pip on the `dev-requirements.txt` file:```bash$ pip install -r dev-requirements.txt```## LintUses `pylint` to lint application.```$ pylint read_protobuf```Configuration options are specified in `.pylintrc`## TestUses `pytest` to run unit tests. From the root of the repository, run:```$ pytest$ pytest -k &quot;TestRead::test_read_bytes&quot;    # specify test```Configuration options are specified in `setup.cfg`## Code CoverageWe use `coverage` to monitor code coverage during tests. To record coverage while running tests, run:```bash$ coverage run -m pytest        # watch files while testing$ coverage report               # will display coverage report```## UnLicenseThis is free and unencumbered software released into the public domain.Anyone is free to copy, modify, publish, use, compile, sell, ordistribute this software, either in source code form or as a compiledbinary, for any purpose, commercial or non-commercial, and by anymeans.In jurisdictions that recognize copyright laws, the author or authorsof this software dedicate any and all copyright interest in thesoftware to the public domain. We make this dedication for the benefitof the public at large and to the detriment of our heirs andsuccessors. We intend this dedication to be an overt act ofrelinquishment in perpetuity of all present and future rights to thissoftware under copyright law.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OFMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OROTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OROTHER DEALINGS IN THE SOFTWARE.For more information, please refer to &lt;http://unlicense.org/&gt;</longdescription>
</pkgmetadata>