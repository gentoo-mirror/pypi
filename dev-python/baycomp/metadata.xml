<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>baycomp=======Baycomp is a library for Bayesian comparison of classifiers.Functions compare two classifiers on one or on multiple data sets. Theycompute three probabilities: the probability that the first classifier hashigher scores than the second, the probability that differences are withinthe region of practical equivalence (rope), or that the second classifierhas higher scores. We will refer to this probabilities as `p_left`, `p_rope`and `p_right`. If the argument `rope` is omitted (or set to zero), functionsreturn only `p_left` and `p_right`.The region of practical equivalence (rope) is specified by the caller andshould correspond to what is &quot;equivalent&quot; in practice; for instance,classification accuracies that differ by less than 0.5 may be calledequivalent.Similarly, whether higher scores are better or worse depends upon the typeof the score.The library can also plot the posterior distributions.The library can be used in three ways.1. Two shortcut functions can be used for comparison on single   and on multiple data sets. If `nbc` and `j48` contain a list of average   classification accuracies of naive Bayesian classifier and J48 on a   collection of data sets, we can call        &gt;&gt;&gt; two_on_multiple(nbc, j48, rope=1)        (0.23124, 0.00666, 0.7621)   (Actual results may differ due to Monte Carlo sampling.)   With some additional arguments, the function can also plot the posterior   distribution from which these probabilities came.2. Tests are packed into test classes. The above call is equivalent to        &gt;&gt;&gt; SignedRankTest.probs(nbc, j48, rope=1)        (0.23124, 0.00666, 0.7621)   and to get a plot, we call        &gt;&gt;&gt; SignedRankTest.plot(nbc, j48, rope=1, names=(&quot;nbc&quot;, &quot;j48&quot;))   To switch to another test, use another class::        &gt;&gt;&gt; SignTest.probs(nbc, j48, rope=1)        (0.26508, 0.13274, 0.60218)3. Finally, we can construct and query sampled posterior distributions.        &gt;&gt;&gt; posterior = SignedRankTest(nbc, j48, rope=0.5)        &gt;&gt;&gt; posterior.probs()        (0.23124, 0.00666, 0.7621)        &gt;&gt;&gt; posterior.plot(names=(&quot;nbc&quot;, &quot;j48&quot;))Installation------------Install from [PyPI](https://pypi.python.org/pypi/baycomp):    pip install baycompDocumentation-------------User documentation is available on [https://baycomp.readthedocs.io/](https://baycomp.readthedocs.io/).A detailed description of the implemented methods is available in [Time for a Change: a Tutorial for Comparing Multiple Classifiers Through Bayesian Analysis](http://jmlr.org/papers/volume18/16-305/16-305.pdf), Alessio Benavoli, Giorgio Corani, Janez Dem≈°ar, Marco Zaffalon. Journal of Machine Learning Research, 18 (2017) 1-36.</longdescription>
</pkgmetadata>