<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align='center'&gt;  &lt;a href=&quot;https://artlabs.tech/&quot;&gt;    &lt;img src='https://raw.githubusercontent.com/ArtLabss/tennis-tracking/main/VideoOutput/artlabs%20logo.jpg' width=&quot;150&quot; height=&quot;170&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;h1 align='center'&gt;anonympy üï∂Ô∏è&lt;/h1&gt;&lt;p align='center'&gt;&lt;img src=&quot;https://img.shields.io/github/forks/ArtLabss/open-data-anonimizer.svg&quot;&gt;  &lt;img src=&quot;https://img.shields.io/github/stars/ArtLabss/open-data-anonimizer.svg&quot;&gt;  &lt;img src=&quot;https://img.shields.io/github/watchers/ArtLabss/open-data-anonimizer.svg&quot;&gt;  &lt;img src=&quot;https://img.shields.io/github/last-commit/ArtLabss/open-data-anonimizer.svg&quot;&gt;  &lt;br&gt;  &lt;img src=&quot;https://img.shields.io/pypi/v/anonympy.svg&quot;&gt;  &lt;img src=&quot;https://img.shields.io/pypi/l/anonympy.svg&quot;&gt;  &lt;img src=&quot;https://hits.sh/github.com/ArtLabss/open-data-anonimizer.svg&quot;&gt;  &lt;a href=&quot;https://pepy.tech/project/anonympy&quot;&gt;&lt;img src=&quot;https://pepy.tech/badge/anonympy&quot;&gt;&lt;/a&gt;  &lt;br&gt;  &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonymizer/actions/workflows/pylinter.yml&quot;&gt;&lt;img src=&quot;https://github.com/ArtLabss/open-data-anonymizer/actions/workflows/pylinter.yml/badge.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonymizer/actions/workflows/python-app.yml&quot;&gt;&lt;img src=&quot;https://github.com/ArtLabss/open-data-anonymizer/actions/workflows/python-app.yml/badge.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonymizer/actions/workflows/codeql-analysis.yml&quot;&gt;&lt;img src=&quot;https://github.com/ArtLabss/open-data-anonymizer/actions/workflows/codeql-analysis.yml/badge.svg&quot;&gt;&lt;/a&gt;  &lt;br&gt;  &lt;code&gt;With ‚ù§Ô∏è by ArtLabs&lt;/code&gt;  &lt;h2&gt;Overview&lt;/h2&gt;&lt;p&gt;General Data Anonymization library for images, PDFs and tabular data. See &lt;a href=&quot;https://artlabs.tech/projects/&quot;&gt;ArtLabs/projects&lt;/a&gt; for more or similar projects.&lt;/p&gt;&lt;br&gt;&lt;h2&gt;Main Features&lt;/h2&gt;&lt;p&gt;Ease of use - this package was written to be as intuitive as possible.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Tabular&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;Efficient - based on pd.DataFrame&lt;/li&gt;  &lt;li&gt;Numerous anonymization methods&lt;/li&gt;    &lt;ul&gt;      &lt;li&gt;Numeric data&lt;/li&gt;        &lt;ul&gt;          &lt;li&gt;Generalization - Binning&lt;/li&gt;          &lt;li&gt;Perturbation&lt;/li&gt;          &lt;li&gt;PCA Masking&lt;/li&gt;          &lt;li&gt;Generalization - Rounding&lt;/li&gt;        &lt;/ul&gt;      &lt;li&gt;Categorical data&lt;/li&gt;        &lt;ul&gt;          &lt;li&gt;Synthetic Data&lt;/li&gt;          &lt;li&gt;Resampling&lt;/li&gt;          &lt;li&gt;Tokenization&lt;/li&gt;          &lt;li&gt;Partial Email Masking&lt;/li&gt;        &lt;/ul&gt;      &lt;li&gt;Datetime data&lt;/li&gt;        &lt;ul&gt;          &lt;li&gt;Synthetic Date&lt;/li&gt;          &lt;li&gt;Perturbation&lt;/li&gt;        &lt;/ul&gt;      &lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Images&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;Anonymization techniques&lt;/li&gt;  &lt;ul&gt;    &lt;li&gt;Personal Images (faces)&lt;/li&gt;    &lt;ul&gt;      &lt;li&gt;Blurring&lt;/li&gt;      &lt;li&gt;Pixaled Face Blurring&lt;/li&gt;      &lt;li&gt;Salt and Pepper Noise&lt;/li&gt;    &lt;/ul&gt;    &lt;li&gt;General Images&lt;/li&gt;    &lt;ul&gt;      &lt;li&gt;Blurring&lt;/li&gt;    &lt;/ul&gt;  &lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;PDF&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;Find sensitive information and cover it with black boxes&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Text, Sound&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;In Development&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;h2&gt;Installation&lt;/h2&gt;&lt;h3&gt;Dependencies&lt;/h3&gt;&lt;ol&gt;  &lt;li&gt; Python (&gt;= 3.7)&lt;/li&gt;  &lt;li&gt;cape-privacy&lt;/li&gt;  &lt;li&gt;faker&lt;/li&gt;  &lt;li&gt;pandas&lt;/li&gt;  &lt;li&gt;OpenCV&lt;/li&gt;  &lt;li&gt;pytesseract&lt;/li&gt;  &lt;li&gt;transformers&lt;/li&gt;  &lt;li&gt;&lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer/blob/main/requirements.txt&quot;&gt;.         .  .  .  .  &lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Install with pip&lt;/h3&gt;&lt;p&gt;Easiest way to install anonympy is using &lt;code&gt;pip&lt;/code&gt;&lt;/p&gt;```pip install anonympy```&lt;p&gt;Due to conflicting pandas/numpy versions with &lt;a href=&quot;https://github.com/capeprivacy/cape-python/issues/112&quot;&gt;cape-privacy&lt;/a&gt;, it's recommend to install them seperately&lt;/p&gt;```pip install cape-privacy==0.3.0 --no-deps ```&lt;h3&gt;Install from source&lt;/h3&gt;&lt;p&gt;Installing the library from source code is also possible&lt;/p&gt;```git clone https://github.com/ArtLabss/open-data-anonimizer.gitcd open-data-anonimizerpip install -r requirements.txtmake bootstrappip install cape-privacy==0.3.0 --no-deps ```&lt;h3&gt;Downloading Repository&lt;/h3&gt;&lt;p&gt;Or you could download this repository from &lt;a href=&quot;https://pypi.org/project/anonympy/&quot;&gt;pypi&lt;/a&gt; and run the following:```cd open-data-anonimizerpython setup.py install```&lt;br&gt;&lt;h2&gt;Usage Example &lt;/h2&gt;[![Google Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1wg4g4xWTSLvThYHYLKDIKSJEC4ChQHaM?usp=sharing)&lt;p&gt;More examples &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer/blob/b5d5f2df94b80011a8a93fa08f0046d1390cec49/examples/examples.ipynb&quot;&gt;here&lt;/a&gt;  &lt;p&gt;&lt;strong&gt;Tabular&lt;/strong&gt;&lt;/p&gt;```python&gt;&gt;&gt; from anonympy.pandas import dfAnonymizer&gt;&gt;&gt; from anonympy.pandas.utils_pandas import load_dataset&gt;&gt;&gt; df = load_dataset() &gt;&gt;&gt; print(df)```|   |  name | age |  birthdate |   salary |                                  web |                email |       ssn ||--:|------:|----:|-----------:|---------:|-------------------------------------:|---------------------:|----------:|| 0 | Bruce | 33  | 1915-04-17 | 59234.32 | http://www.alandrosenburgcpapc.co.uk | josefrazier@owen.com | 343554334 || 1 | Tony  | 48  | 1970-05-29 | 49324.53 | http://www.capgeminiamerica.co.uk    | eryan@lewis.com      | 656564664 |  ```python# Calling the generic function&gt;&gt;&gt; anonym = dfAnonymizer(df)&gt;&gt;&gt; anonym.anonymize(inplace = False) # changes will be returned, not applied```|      | name            | age    | birthdate  | age     | web        |         email       |     ssn     ||------|-----------------|--------|------------|---------|------------|---------------------|-------------|| 0    | Stephanie Patel | 30     | 1915-05-10 | 60000.0 | 5968b7880f | pjordan@example.com | 391-77-9210 || 1    | Daniel Matthews | 50     | 1971-01-21 | 50000.0 | 2ae31d40d4 | tparks@example.org  | 872-80-9114 |  ```python# Or applying a specific anonymization technique to a column&gt;&gt;&gt; from anonympy.pandas.utils_pandas import available_methods&gt;&gt;&gt; anonym.categorical_columns... ['name', 'web', 'email', 'ssn']&gt;&gt;&gt; available_methods('categorical') ... categorical_fakecategorical_fake_autocategorical_resamplingcategorical_tokenizationcategorical_email_masking&gt;&gt;&gt; anonym.anonymize({'name': 'categorical_fake',  # {'column_name': 'method_name'}                  'age': 'numeric_noise',                  'birthdate': 'datetime_noise',                  'salary': 'numeric_rounding',                  'web': 'categorical_tokenization',                   'email':'categorical_email_masking',                   'ssn': 'column_suppression'})&gt;&gt;&gt; print(anonym.to_df())```|   |  name | age |  birthdate |   salary |                                  web |                email ||--:|------:|----:|-----------:|---------:|-------------------------------------:|---------------------:|| 0 | Paul Lang | 31  | 1915-04-17 | 60000.0 | 8ee92fb1bd | j*****r@owen.com || 1 | Michael Gillespie  | 42  | 1970-05-29 | 50000.0 | 51b615c92e    | e*****n@lewis.com      |  &lt;br &gt;&lt;p&gt;&lt;strong&gt;Images&lt;/strong&gt;&lt;/p&gt;```python# Passing an Image&gt;&gt;&gt; import cv2&gt;&gt;&gt; from anonympy.images import imAnonymizer&gt;&gt;&gt; img = cv2.imread('salty.jpg')&gt;&gt;&gt; anonym = imAnonymizer(img)&gt;&gt;&gt; blurred = anonym.face_blur((31, 31), shape='r', box = 'r')  # blurring shape and bounding box ('r' / 'c')&gt;&gt;&gt; pixel = anonym.face_pixel(blocks=20, box=None)&gt;&gt;&gt; sap = anonym.face_SaP(shape = 'c', box=None)```blurred            |  pixel           |    sap:-------------------------:|:-------------------------:|:-------------------------:![input_img1](https://raw.githubusercontent.com/ArtLabss/open-data-anonimizer/d61127f7a8fdff603af21dcab8edbf72f2aab292/examples/files/sad_boy_blurred.jpg)  |  ![output_img1](https://raw.githubusercontent.com/ArtLabss/open-data-anonimizer/d61127f7a8fdff603af21dcab8edbf72f2aab292/examples/files/sad_boy_pixel.jpg)    |   ![sap_image](https://raw.githubusercontent.com/ArtLabss/open-data-anonimizer/d61127f7a8fdff603af21dcab8edbf72f2aab292/examples/files/sad_boy_sap.jpg) ```python# Passing a Folder &gt;&gt;&gt; path = 'C:/Users/shakhansho.sabzaliev/Downloads/Data' # images are inside `Data` folder&gt;&gt;&gt; dst = 'D:/' # destination folder&gt;&gt;&gt; anonym = imAnonymizer(path, dst)&gt;&gt;&gt; anonym.blur(method = 'median', kernel = 11) ```&lt;p&gt;This will create a folder &lt;i&gt;Output&lt;/i&gt; in &lt;code&gt;dst&lt;/code&gt; directory.&lt;/p&gt;```python# The Data folder had the following structure|   1.jpg|   2.jpg|   3.jpeg|   \---test    |   4.png    |   5.jpeg    |       \---test2            6.png# The Output folder will have the same structure and file names but blurred images```&lt;br&gt;&lt;p&gt;&lt;strong&gt;PDF&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;In order to initialize &lt;code&gt;pdfAnonymizer&lt;/code&gt; object we have to install &lt;code&gt;pytesseract&lt;/code&gt; and &lt;code&gt;poppler&lt;/code&gt;, and provide path to the binaries of both as arguments or add paths to system variables&lt;/p&gt;```python&gt;&gt;&gt; from anonympy.pdf import pdfAnonymizer# need to specify paths, since I don't have them in system variables&gt;&gt;&gt; anonym = pdfAnonymizer(path_to_pdf = &quot;Downloads\\test.pdf&quot;,                       pytesseract_path = r&quot;C:\Program Files\Tesseract-OCR\tesseract.exe&quot;,                       poppler_path = r&quot;C:\Users\shakhansho\Downloads\Release-22.01.0-0\poppler-22.01.0\Library\bin&quot;)# Calling the generic function&gt;&gt;&gt; anonym.anonymize(output_path = 'output.pdf',                     remove_metadata = True,                     fill = 'black',                     outline = 'black')````test.pdf`            |  `output.pdf`            | :-------------------------:|:-------------------------:|![test_img](https://raw.githubusercontent.com/ArtLabss/open-data-anonymizer/f09e98c05380ffda6cecdd5b332e3dc66a30e17c/examples/files/test-1.jpg)  |  ![output_img](https://raw.githubusercontent.com/ArtLabss/open-data-anonymizer/be3f376e6d93e7a726f083bf28db3bcbd7f592a3/examples/files/test_output.jpg)    |&lt;p&gt;In case you only want to hide specific information, instead of &lt;code&gt;anonymize&lt;/code&gt; use other methods&lt;/p&gt;```python&gt;&gt;&gt; anonym = pdfAnonymizer(path_to_pdf = r&quot;Downloads\test.pdf&quot;)&gt;&gt;&gt; anonym.pdf2images() #  images are stored in anonym.images variable &gt;&gt;&gt; anonym.images2text(anonym.images) # texts are stored in anonym.texts#  Entities of interest &gt;&gt;&gt; locs: dict = anonym.find_LOC(anonym.texts[0])  # index refers to page number&gt;&gt;&gt; emails: dict = anonym.find_emails(anonym.texts[0])  # {page_number: [coords]}&gt;&gt;&gt; coords: list = locs['page_1'] + emails['page_1'] &gt;&gt;&gt; anonym.cover_box(anonym.images[0], coords)&gt;&gt;&gt; display(anonym.images[0])```&lt;h2&gt;Development&lt;/h2&gt;&lt;h3&gt;Contributions&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer/blob/main/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; has detailed information about contributing code and documentation.&lt;/p&gt;&lt;h3&gt;Important Links&lt;/h3&gt;&lt;ul&gt;  &lt;li&gt;Official source code repo: &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer&quot;&gt;https://github.com/ArtLabss/open-data-anonimizer&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;Download releases: &lt;a href=&quot;https://pypi.org/project/anonympy/&quot;&gt;https://pypi.org/project/anonympy/&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;Issue tracker: &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer/issues&quot;&gt;https://github.com/ArtLabss/open-data-anonimizer/issues&lt;/li&gt;&lt;/a&gt;&lt;/ul&gt;&lt;h2&gt;License&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer/blob/main/LICENSE&quot;&gt;BSD-3&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Code of Conduct&lt;/h2&gt;&lt;p&gt;Please see &lt;a href=&quot;https://github.com/ArtLabss/open-data-anonimizer/blob/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;. All community members are expected to follow it.&lt;/p&gt;</longdescription>
</pkgmetadata>