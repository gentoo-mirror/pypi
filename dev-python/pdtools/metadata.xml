<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Paradrop Developer Tools[![Documentation Status](https://readthedocs.org/projects/paradrop/badge/?version=latest)](https://readthedocs.org/projects/paradrop/?badge=latest)The Paradrop developer tools (`pdtools`) make it easy to interact withthe Paradrop edge and cloud APIs. Use it to configure or install softwareon a Paradrop node or develop and release your own applications, called&quot;chutes&quot;, to the Paradrop Chute Store.  `pdtools` can be used as a commandline utility and can also be imported into Python code as a library.## What is Paradrop?Paradrop is a software platform for edge computing that brings the cloudcloser to home by enabling applications to exist on networking equipmentsuch as Wi-Fi routers.By running services closer to data sources and mobile devices,applications can take advantage of low network latency and make efficientuse of bandwidth.  Additionally, services running on Paradrop can protectthe privacy of users by processing sensitive data near its source ratherthan transmitting it over the wide area network. Some services can evenremain functional when the Internet connection is down.## InstallationThe latest version is available on [PyPi](https://pypi.org/project/pdtools/).Install it with `pip`:    pip install pdtoolsUsing the command above will install `pdtools` as a local Pythonmodule. On Linux, you can also install `pdtools` as a global packageto make it available as a command. That means you will be able to use`pdtools` in your shell instead of typing `python -m pdtools`.    sudo pip install pdtools## Usage`pdtools` includes an extensive command line utility for interacting withParadrop nodes and our cloud controller. You can explore the commandsavailable with the `-h` or `--help` flags.    python -m pdtools --helpUse the interactive tool to begin developing a new chute:    python -m pdtools chute initializeInstall a chute on a node if you know its IP address:    python -m pdtools node --target &lt;node-ip-address&gt; install-chuteList the chutes installed on a node:    python -m pdtools node --target &lt;node-ip-address&gt; list-chutesList chutes available in the Paradrop Chute Store:    python -m pdtools store list-chutesInstall a chute on a node from the chute store. Here you must use thename assigned to the node on paradrop.org:    python -m pdtools store install-chute &lt;chute-name&gt; &lt;node-name&gt;All of the functions available through the command line are alsoavailable for scripting in your own Python code. For example,the following Python code queries a node for the list of chutesinstalled and then makes a request to remove one of them:    &gt;&gt;&gt; NODE_ADDRESS = &quot;192.0.2.1&quot; # Use the IP address of your node.    &gt;&gt;&gt; from pdtools import ParadropClient    &gt;&gt;&gt; client = ParadropClient(NODE_ADDRESS)    &gt;&gt;&gt; for chute in client.list_chutes():    ...     print(chute['name'])    ...    node-hello-world    wiki    python-hello-world    sticky-board    &gt;&gt;&gt; client.remove_chute('node-hello-world')    {u'change_id': 1}## Instructions for MaintainersUse the following commands in the directory containing this file and setup.pyto build the packages:    python setup.py sdist    python setup.py bdist_wheel --universalUse the following command to upload the packages to PyPi:    twine upload dist/*</longdescription>
</pkgmetadata>