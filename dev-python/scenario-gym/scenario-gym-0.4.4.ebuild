# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_9,3_10,3_11} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="scenario_gym - a lightweight framework for learning from scenario data."

HOMEPAGE="https://github.com/driskai/scenario_gym"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/77/36/94872ded27fc252224962e6756caf7a6aa3b21e7d64128c927f6aede9812/scenario_gym-${REALVERSION}.tar.gz"
SOURCEFILE="scenario_gym-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="dev docs gym hooks integrations testing"
DEPENDENCIES="dev-python/lxml[${PYTHON_USEDEP}]
	dev-python/matplotlib[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/opencv-python[${PYTHON_USEDEP}]
	dev-python/pyxodr[${PYTHON_USEDEP}]
	dev-python/PyYAML[${PYTHON_USEDEP}]
	dev-python/setuptools[${PYTHON_USEDEP}]
	dev-python/scenariogeneration[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/Shapely[${PYTHON_USEDEP}]
	dev? ( dev-python/gym[${PYTHON_USEDEP}] )
	dev? ( dev-python/black[${PYTHON_USEDEP}] )
	dev? ( dev-python/dm-env[${PYTHON_USEDEP}] )
	dev? ( dev-python/flake8[${PYTHON_USEDEP}] )
	dev? ( dev-python/isort[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/pydocstyle[${PYTHON_USEDEP}] )
	dev? ( dev-python/importlib-metadata[${PYTHON_USEDEP}] )
	dev? ( dev-python/Sphinx[${PYTHON_USEDEP}] )
	dev? ( dev-python/pandas[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	docs? ( dev-python/Sphinx[${PYTHON_USEDEP}] )
	gym? ( dev-python/gym[${PYTHON_USEDEP}] )
	hooks? ( dev-python/black[${PYTHON_USEDEP}] )
	hooks? ( dev-python/flake8[${PYTHON_USEDEP}] )
	hooks? ( dev-python/isort[${PYTHON_USEDEP}] )
	hooks? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	hooks? ( dev-python/pydocstyle[${PYTHON_USEDEP}] )
	hooks? ( dev-python/importlib-metadata[${PYTHON_USEDEP}] )
	integrations? ( dev-python/pandas[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
