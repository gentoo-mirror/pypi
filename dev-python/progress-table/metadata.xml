<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Progress Table[![PyPi version](https://img.shields.io/badge/dynamic/json?label=latest&amp;query=info.version&amp;url=https%3A%2F%2Fpypi.org%2Fpypi%2Fprogress-table%2Fjson)](https://pypi.org/project/progress-table)[![PyPI license](https://img.shields.io/badge/dynamic/json?label=license&amp;query=info.license&amp;url=https%3A%2F%2Fpypi.org%2Fpypi%2Fprogress-table%2Fjson)](https://pypi.org/project/progress-table)Lightweight utility to display the progress of your process as a pretty table in the command line.![example](https://github.com/gahaalt/progress-table/blob/main/images/progress-table-example.png?raw=true)Designed to monitor machine learning experiments, but can be used for anything.Allows you to quickly see what is going on.Increases readability and cuteness of your command line logging.## Features* Displaying pretty table in the terminal* Progress bar embedded into the table* Exporting data as lists, numpy arrays or pandas dataframes* Built-in basic data aggregation: `sum` and `mean`## PurposeChange this:![example](https://github.com/gahaalt/progress-table/blob/main/images/progress-before3.gif?raw=true)Into this:![example](https://github.com/gahaalt/progress-table/blob/main/images/progress-after4.gif?raw=true)## Example&gt; Click here for examples of integration with PyTorch and Keras:&gt; [integrations.md](https://github.com/gahaalt/progress-table/blob/main/integrations.md).```pythonimport randomimport sysimport timefrom progress_table import ProgressTable# Define the columns at the beginningtable = ProgressTable(    columns=[&quot;step&quot;, &quot;x&quot;, &quot;x squared&quot;],    # Default arguments:    refresh_rate=10,    num_decimal_places=4,    default_column_width=8,    default_column_alignment=&quot;center&quot;,    print_row_on_update=True,    reprint_header_every_n_rows=30,    custom_format=None,    embedded_progress_bar=False,    table_style=&quot;normal&quot;,    file=sys.stdout,)table.add_column(&quot;x&quot;, width=3)table.add_column(&quot;x root&quot;, color=&quot;red&quot;)table.add_column(&quot;random average&quot;, color=[&quot;bright&quot;, &quot;red&quot;], aggregate=&quot;mean&quot;)for step in range(10):    x = random.randint(0, 200)    # There are two equivalent ways to add new values    # First:    table[&quot;step&quot;] = step    table[&quot;x&quot;] = x    # Second:    table.update(&quot;x root&quot;, x ** 0.5)    table.update(&quot;x squared&quot;, x ** 2)    # Display the progress bar by wrapping the iterator    for _ in table(10):  # -&gt; Equivalent to `table(range(10))`        # You can use weights for aggregated values        table.update(&quot;random average&quot;, random.random(), weight=1)        time.sleep(0.1)    # Go to the next row when you're ready    table.next_row()# Close the table when it's readytable.close()# Export your datadata = table.to_list()pandas_df = table.to_df()np_array = table.to_numpy()```![example](https://github.com/gahaalt/progress-table/blob/main/images/example-output4.gif?raw=true)## InstallationInstall Progress Table easily with pip:```pip install progress-table```## Links* [See on GitHub](https://github.com/gahaalt/progress-table)* [See on PyPI](https://pypi.org/project/progress-table)## Alternatives* Progress bars: great for tracking progress, but they do not provide pretty CLI data display    * `tqdm`    * `Keras.utils.Progbar`* Libraries displaying data: great for presenting data, but they lack the tracking progress element    * `tabulate`    * `texttable`</longdescription>
</pkgmetadata>