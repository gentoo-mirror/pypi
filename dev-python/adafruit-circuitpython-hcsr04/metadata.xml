<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-hcsr04/badge/?version=latest    :target: https://docs.circuitpython.org/projects/hcsr04/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/actions    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: Black.. image:: ../docs/_static/3942-02.jpg    :alt: HC-SR04 Product ImageThe HC-SR04 is an inexpensive solution for measuring distances using microcontrollers. This library provides a simpledriver for controlling these sensors from CircuitPython.Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Installing from PyPI====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-hcsr04/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-hcsr04To install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-hcsr04To install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-hcsr04Usage Example=============.. warning::    The HC-SR04 uses 5V logic, so you will have to use a `level shifter    &lt;https://www.adafruit.com/product/2653?q=level%20shifter&amp;&gt;`_ between it    and your CircuitPython board (which uses 3.3V logic)... note::    If you want to use an HC-SR04 with `MicroPython &lt;http://micropython.org/&gt;`_, I recommend checking out `this library    &lt;https://github.com/andrey-git/micropython-hcsr04&gt;`_.You'll need to dedicate two pins to communicating with the HC-SR04. The sensor communicates in a very rudimentarymanner, so it doesn't matter which pins you choose, as long as they're digital IO pins (pins that start with &quot;``D``&quot;are digital).There are two ways of instantiating a `HCSR04` object: with or without using a context manager... note::    It is technically possible to communicate with the HC-SR04 using only one wire since the trigger and echo signals    aren't ever active at the same time. Once I have a chance to determine a safe way to do this, I plan to add this as    a feature to the library.See Also:    `Adafruit's guide on Lifetime and ContextManagers &lt;https://docs.circuitpython.org/en/latest/docs/design_guide.html#lifetime-and-contextmanagers&gt;`_        Gives more info on using context managers with CircuitPython drivers.    `board &lt;https://docs.circuitpython.org/en/latest/shared-bindings/board/__init__.html#module-board&gt;`_        A list of pins available on your device. To view this list, first `get a REPL        &lt;http://docs.circuitpython.org/en/latest/docs/pyboard/tutorial/repl.html&gt;`_ (the guide linked was written        for the pyboard, but it still works), then input the following:        .. code-block:: python            import board            dir(board)Without a Context Manager-------------------------In the example below, we create the `HCSR04` object directly, get the distance every 2 seconds... code-block:: python    import time    import board    import adafruit_hcsr04    sonar = adafruit_hcsr04.HCSR04(trigger_pin=board.D5, echo_pin=board.D6)    while True:        try:            print((sonar.distance,))        except RuntimeError:            print(&quot;Retrying!&quot;)        time.sleep(2)With a Context Manager----------------------In the example below, we use a context manager (the `with &lt;https://docs.python.org/3.4/reference/compound_stmts.html#with&gt;`_ statement) to create the `HCSR04`instance, again get the distance every 2 seconds, but then the context manager handles de-initializing the device forus... code-block:: python    import board    from adafruit_hcsr04 import HCSR04    with HCSR04(trigger_pin=board.D5, echo_pin=board.D6) as sonar:        try:            while True:                print(sonar.distance)                sleep(2)        except KeyboardInterrupt:            passDocumentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/hcsr04/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>