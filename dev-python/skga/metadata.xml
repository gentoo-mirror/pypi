<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SKGAWelcome to the SKGA repository! This repository contains the `skga` package, which is a Python library for performing machine learning hyperparameters optimization. ## InstallationTo install the `skga` package, follow these steps:1. Make sure you have Python 3.9 installed on your system.2. Open a terminal or command prompt.3. Run the following command to install the package using pip:   ```bash   pip install skga   ```   This will automatically download and install the `skga` package along with its dependencies.## Basic UsageOnce you have installed the `skga` package, you can start using it in your Python projects. Here's a basic example to get you started:```pythonfrom sklearn import svm, datasetsfrom sklearn.model_selection import train_test_splitfrom skga import HyperBRKGASearchCV# Load the Iris datasetirisX, irisY = datasets.load_iris(return_X_y=True)# Split the dataset into training and testing setsX_train, X_test, y_train, y_test = train_test_split(irisX, irisY, test_size=0.5, random_state=0)# Define the parameters for the SVM classifierparameters = {'kernel': ('linear', 'rbf'), 'C': [1, 10]}# Create an SVM classifiersvc = svm.SVC()# Create a HyperBRKGASearchCV instanceclf = HyperBRKGASearchCV(svc, parameters=parameters, data=X_train, target=y_train)print(&quot;# Optimizing hyperparameters for accuracy\n&quot;)# Fit the classifier to the training dataclf.fit(X_train, y_train)print(&quot;Best combination of parameters found in the training set:\n&quot;)print(clf.cv_results_['best_param_decoded'])print()print(&quot;Scores of HyperBRKGA in the training set:\n&quot;)print(clf.cv_results_)```This example demonstrates how to use the `HyperBRKGASearchCV` class from the `skga` package to perform hyperparameter optimization for an SVM classifier.For more detailed examples and use cases, please refer to the [examples](https://github.com/MLRG-CEFET-RJ/skga/tree/main/examples) directory in the SKGA repository.## ContributingIf you find any issues or have suggestions for improvement, please feel free to contribute to this repository. You can submit bug reports, feature requests, or pull requests through the [GitHub repository](https://github.com/MLRG-CEFET-RJ/skga). We appreciate your contributions!## LicenseThis project is licensed under the [BSD 3-Clause License](https://github.com/MLRG-CEFET-RJ/skga/blob/main/LICENSE).</longdescription>
</pkgmetadata>