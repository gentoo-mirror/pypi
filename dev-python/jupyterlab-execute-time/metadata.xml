<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># jupyterlab-execute-time[![PyPI version][pypi-image]][pypi-url] [![PyPI DM][pypi-dm-image]][pypi-url][![Github Actions Status][github-status-image]][github-status-url] [![Binder][binder-image]][binder-url]Display cell timings in Jupyter Lab![Execute Time Screenshot](https://github.com/deshaw/jupyterlab-execute-time/blob/master/docs/execute-time-screenshot.png?raw=true)This is inspired by the notebook version [here](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/blob/master/src/jupyter_contrib_nbextensions/nbextensions/execute_time).## Requirements- JupyterLab &gt;= 3.0## InstallTo install this package with [`pip`](https://pip.pypa.io/en/stable/) run```bashpip install jupyterlab_execute_time```To install this package with [`conda`](https://docs.conda.io/en/latest/) run```bashconda install -c conda-forge jupyterlab_execute_time```Note: By default, if this extension is enabled, it will automatically change your settings to record timing in the notebook metadata when it is loaded. If this fails, you can do this manually via Settings-&gt;Advanced Settings Editor-&gt;Notebook: `{&quot;recordTiming&quot;: true}`. This is a notebook metadata setting and not a plugin setting. The plugin just displays this data.## Contributing### Development installNote: You will need NodeJS to build the extension package.The `jlpm` command is JupyterLab's pinned version of[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use`yarn` or `npm` in lieu of `jlpm` below.```bash# Clone the repo to your local environment# Change directory to the jupyterlab_execute_time directory# Install package in development modepip install -e .# Link your development version of the extension with JupyterLabjupyter labextension develop . --overwrite# Rebuild extension Typescript source after making changesjlpm run build```You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.```bash# Watch the source directory in one terminal, automatically rebuilding when neededjlpm run watch# Run JupyterLab in another terminaljupyter lab```With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).By default, the `jlpm run build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:```bashjupyter lab build --minimize=False```#### PublishingBefore starting, you'll need to have run: `pip install twine jupyter_packaging`1. Update the version in `package.json` and update the release date in `CHANGELOG.md`2. Commit the change in step 1, tag it, then push it```git commit -am &lt;msg&gt;git tag vX.Z.Ygit push &amp;&amp; git push --tags```3. Create the artifacts```rm -rf dist build jupyterlab_execute_time/labextensionjlpm run buildpython setup.py sdist bdist_wheel```4. Test this against the test pypi. You can then install from here to test as well:```twine upload --repository-url https://test.pypi.org/legacy/ dist/*# In a new venvpip install --index-url https://test.pypi.org/simple/ jupyterlab_execute_time```5. Upload this to pypi:```twine upload dist/*```### Uninstall```bashpip uninstall jupyterlab_execute_time```## HistoryThis plugin was contributed back to the community by the [D. E. Shaw group](https://www.deshaw.com/).&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://www.deshaw.com&quot;&gt;       &lt;img src=&quot;https://www.deshaw.com/assets/logos/blue_logo_417x125.png&quot; alt=&quot;D. E. Shaw Logo&quot; height=&quot;75&quot; &gt;    &lt;/a&gt;&lt;/p&gt;## LicenseThis project is released under a [BSD-3-Clause license](https://github.com/deshaw/jupyterlab-execute-time/blob/master/LICENSE.txt).We love contributions! Before you can contribute, please sign and submit this [Contributor License Agreement (CLA)](https://www.deshaw.com/oss/cla).This CLA is in place to protect all users of this project.&quot;Jupyter&quot; is a trademark of the NumFOCUS foundation, of which Project Jupyter is a part.[pypi-url]: https://pypi.org/project/jupyterlab-execute-time[pypi-image]: https://img.shields.io/pypi/v/jupyterlab-execute-time[pypi-dm-image]: https://img.shields.io/pypi/dm/jupyterlab-execute-time[github-status-image]: https://github.com/deshaw/jupyterlab-execute-time/workflows/Build/badge.svg[github-status-url]: https://github.com/deshaw/jupyterlab-execute-time/actions?query=workflow%3ABuild[binder-image]: https://mybinder.org/badge_logo.svg[binder-url]: https://mybinder.org/v2/gh/deshaw/jupyterlab-execute-time.git/master?urlpath=lab%2Ftree%2Fnotebooks%2Findex.ipynb</longdescription>
</pkgmetadata>