<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># html-json-formsAn implementation of the [HTML JSON Form] specification for use with the [Django REST Framework].  Extracted from [wq.db] for general use.HTML JSON Forms use an array-style naming convention that makes it possible to represent complex nested JSON objects with regular HTML fields.  The idea is that client applications (such as [wq.app]) and eventually browsers could parse these fields and submit structured JSON to the server.  For backwards compatibility with older clients, the spec recommends implementing a fallback parser on the server to ensure that older clients can submit forms using the traditional method.  This Python package is an implementation of that algorithm.```html&lt;!-- Input --&gt;&lt;form&gt;  &lt;input name=&quot;items[0][name]&quot; value=&quot;Example&quot;&gt;  &lt;input name=&quot;items[0][count]&quot; value=&quot;5&quot;&gt;&lt;/form&gt;``````js// Output{    &quot;items&quot;: [        {            &quot;name&quot;: &quot;Example&quot;,            &quot;count&quot;: &quot;5&quot;        }    ]}```Note that the HTML JSON Form spec was never finalized.  The implementation is still useful as a formal way of representing structured data via traditional HTML forms.[![Latest PyPI Release](https://img.shields.io/pypi/v/html-json-forms.svg)](https://pypi.org/project/html-json-forms)[![Release Notes](https://img.shields.io/github/release/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/releases)[![License](https://img.shields.io/pypi/l/html-json-forms.svg)](https://github.com/wq/html-json-forms/blob/master/LICENSE)[![GitHub Stars](https://img.shields.io/github/stars/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/stargazers)[![GitHub Forks](https://img.shields.io/github/forks/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/network)[![GitHub Issues](https://img.shields.io/github/issues/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/issues)[![Travis Build Status](https://img.shields.io/travis/wq/html-json-forms/master.svg)](https://travis-ci.org/wq/html-json-forms)[![Python Support](https://img.shields.io/pypi/pyversions/html-json-forms.svg)](https://pypi.org/project/html-json-forms)[![Django Support](https://img.shields.io/pypi/djversions/html-json-forms.svg)](https://pypi.org/project/html-json-forms)## Usage`html-json-forms` is available via PyPI:```bashpip3 install html-json-forms```### Functional```pythonfrom html_json_forms import parse_json_formparse_json_form({    'items[0][name]': &quot;Example&quot;,    'items[0][count]': &quot;5&quot;,})```### DRF IntegrationTo enable HTML JSON Form parsing in Django REST Framework, subclass `JSONFormSerializer`:```pythonfrom rest_framework import serializersfrom html_json_forms.serializers import JSONFormSerializerfrom .models import Parent, Childclass ChildSerializer(serializers.ModelSerializer):    class Meta:        model = Childclass ParentSerializer(JSONFormSerializer, serializers.ModelSerializer):    children = ChildSerializer(many=True)    class Meta:        model = Parent# Alternatively you can use the pre-mixed JSONFormModelSerializer:# class ParentSerializer(JSONFormModelSerializer):#    ...```Note that only the top-level serializer needs to have the `JSONFormSerializer` mixin; the nested serializers will &quot;just work&quot; as if the data had been submitted via JSON.  Note further that this module only handles processing nested form data; it is still up to you to figure out how to handle [writing nested models][nested] (unless you are using [wq.db]'s [patterns] module, which includes writable nested serializers by default).[HTML JSON Form]: https://www.w3.org/TR/html-json-forms/[Django REST Framework]: http://www.django-rest-framework.org/[wq.db]: https://wq.io/wq.db[wq.app]: https://wq.io/wq.app[nested]: http://www.django-rest-framework.org/api-guide/serializers/#writable-nested-representations[patterns]: https://wq.io/docs/about-patterns</longdescription>
</pkgmetadata>