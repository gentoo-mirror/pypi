<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=======poyonga=======.. image:: https://img.shields.io/pypi/v/poyonga.svg    :target: https://pypi.org/project/poyonga/    :alt: PyPI Version.. image:: https://github.com/hhatto/poyonga/workflows/Python%20package/badge.svg    :target: https://github.com/hhatto/poyonga/actions    :alt: Build statusPython Groonga_ Client.poyonga support to HTTP and GQTP protocol... _Groonga: http://groonga.org/Requrements===========* Python 3.6+Installation============from pip::    pip install --upgrade poyongaUsage=====Setup Groonga Server--------------------::    $ groonga -n grn.db     # create groonga database file    $ groonga -s grn.db     # start groonga server with GQTPBasic Usage-----------.. code-block:: python    &gt;&gt;&gt; from poyonga import Groonga    &gt;&gt;&gt; g = Groonga()    &gt;&gt;&gt; g.protocol    'http'    &gt;&gt;&gt; ret = g.call(&quot;status&quot;)    &gt;&gt;&gt; ret    &lt;poyonga.result.GroongaResult object at 0x8505ccc&gt;    &gt;&gt;&gt; ret.status    0    &gt;&gt;&gt; ret.body    {u'uptime': 427, u'max_command_version': 2, u'n_queries': 3,    u'cache_hit_rate': 66.6666666666667, u'version': u'1.2.8', u    'alloc_count': 156, u'command_version': 1, u'starttime': 132    8286909, u'default_command_version': 1}    &gt;&gt;&gt;with eventlet-------------.. code-block:: python    from poyonga import Groonga    import eventlet    eventlet.monkey_patch()    def fetch(cmd, **kwargs):        g = Groonga()        ret = g.call(cmd, **kwargs)        print ret.status        print ret.body        print &quot;*&quot; * 40    cmds = [(&quot;status&quot;, {}),            (&quot;log_level&quot;, {&quot;level&quot;: &quot;warning&quot;}),            (&quot;table_list&quot;, {})            (&quot;select&quot;, {&quot;table&quot;: &quot;Site&quot;})]    pool = eventlet.GreenPool()    for cmd, kwargs in cmds:        pool.spawn_n(fetch, cmd, **kwargs)    pool.waitall()Custom prefix path------------------If you use the `Custom prefix path`_ and `Multi databases`_ , specify `prefix_path` ... _`Custom prefix path`: http://groonga.org/docs/server/http/comparison.html#custom-prefix-path.. _`Multi databases`: http://groonga.org/docs/server/http/comparison.html#multi-databases.. code-block:: python    # default is '/d/'    g = Groonga(prefix_path='/db2/')with Apache Arrow-----------------Groonga supports `Apache Arrow`_, use it with ``load`` and ``select`` commands.use poyonga with Apache Arrow, you need pyarrow_ ... _`Apache Arrow`: https://arrow.apache.org/.. _pyarrow: https://pypi.org/project/pyarrow/requrie pyarrow::    $ pip install pyarrowand call with ``output_type=&quot;apache-arrow&quot;`` option:.. code-block:: python    from poyonga import Groonga    g = Groonga()    g.call(        &quot;select&quot;,        table=&quot;Users&quot;,        match_columns=&quot;name,location_str,description&quot;,        query=&quot;東京&quot;,        output_type=&quot;apache-arrow&quot;,        output_columns=&quot;_key,name&quot;,    )load with ``input_type=&quot;apache-arrow&quot;``:.. code-block:: python    import pyarrow as pa    from poyonga import Groonga    # use Apache Arrow IPC Streaming Format    data = [pa.array([&quot;groonga.org&quot;])]    batch = pa.record_batch(data, names=[&quot;_key&quot;])    sink = pa.BufferOutputStream()    with pa.ipc.new_stream(sink, batch.schema) as writer:        writer.write_batch(batch)    buf = sink.getvalue()    values = buf.to_pybytes()    g = Groonga()    g.call(&quot;load&quot;, table=&quot;Site&quot;, values=values, input_type=&quot;apache-arrow&quot;)more information:- https://groonga.org/docs/reference/commands/load.htmlexample code------------see `examples directory`_.. _`examples directory`: https://github.com/hhatto/poyonga/tree/master/examplesLinks=====* PyPI_* GitHub_.. _PyPI: https://pypi.python.org/pypi/poyonga.. _GitHub: https://github.com/hhatto/poyonga</longdescription>
</pkgmetadata>