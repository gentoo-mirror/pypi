<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MdanticThis is an extension to [Python-Markdown](https://python-markdown.github.io/). It adds a new syntax so that you can reference a [pydantic](https://pydantic-docs.helpmanual.io/) `BaseModel` and translate its fields to a markdown table. (Get the name?) I originally make this to generate http api parameter tables with [mkdocs](https://www.mkdocs.org/), but you can use it for other stuffs if suitable.The code itself is a direct modification to [markdown-include](https://github.com/cmacmackin/markdown-include) since they do similar things.Notice: This project is still WIP and need more examples to adapt to most of the possible BaseModel models.## InstallationJust use pip:```pip install markdown-mdantic```## UsageCurrently this module has only one config option: `init_code` which willexecute **any** python code in the environment when its `__init__` is called.In this way you can do something like adding system path, django setup etc,before run.**Note**: Please note that the `init_code` thing is a huge security issue ifyou run that with untrusted input. Use it with caution!### mkdocsexample:```yamlmarkdown_extensions:    mdantic:        init_code: |            import os            import django            os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;conf.default&quot;)            django.setup()```Some time ago the extension name used here should be `markdown_mdantic`, butafter some point it seems there will only be one file after installation inpython's site-packages directory (mdantic.py) so now we should use the name`mdantic`.### reference the modelEach reference must be in one line, starts with `$pydantic: ` (notice thesingle space after the colon), following the model import path which lookslik `a.b.c.D` where `D` is the model class itself (which is subclass of `BaseModel`).```markdown**params**:$pydantic: src.test.TestGetSchema```### customize outputThe resulting table is rendered using [tabulate](https://pypi.org/project/tabulate/), in `github` style. Currently there is no config option to change this and the table headers. PR is welcomed.</longdescription>
</pkgmetadata>