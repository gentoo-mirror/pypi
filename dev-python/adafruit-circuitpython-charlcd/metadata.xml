<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-charlcd/badge/?version=latest    :target: https://docs.circuitpython.org/projects/charlcd/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_CharLCD/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_CharLCD/actions/    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackThis library is compatible with standard Character LCDs such as:* `Adafruit Standard LCD 16x2 &lt;https://www.adafruit.com/product/181&gt;`_* `Adafruit RGB backlight negative LCD 16x2 &lt;https://www.adafruit.com/product/399&gt;`_* `Adafruit RGB backlight negative LCD 20x4 &lt;https://www.adafruit.com/product/498&gt;`_Installing from PyPI--------------------On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-charlcd/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-charlcdTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-charlcdTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-charlcdDependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Adafruit CircuitPython BusDevice &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_* `Adafruit CircuitPython MCP230xx &lt;https://github.com/adafruit/Adafruit_CircuitPython_MCP230xx&gt;`_* `Adafruit CircuitPython 74HC595 &lt;https://github.com/adafruit/Adafruit_CircuitPython_74HC595&gt;`_I2C &amp; SPI displays also depend on:* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading the`Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Usage Example=============The ``Character_LCD`` class interfaces a predefined Character LCD display with CircuitPython... code-block:: python    import board    import digitalio    import adafruit_character_lcd.character_lcd as character_lcdYou must define the data pins (``RS``, ``EN``, ``D4``, ``D5``, ``D6``, ``D7``) in your code before using the ``Character_LCD`` class.If you want to have on/off ``backlight`` functionality, you can also define your backlight as ``lcd_backlight``. Otherwise, the backlightwill always remain on. The following is an example setup... code-block:: python    lcd_rs = digitalio.DigitalInOut(board.D7)    lcd_en = digitalio.DigitalInOut(board.D8)    lcd_d7 = digitalio.DigitalInOut(board.D12)    lcd_d6 = digitalio.DigitalInOut(board.D11)    lcd_d5 = digitalio.DigitalInOut(board.D10)    lcd_d4 = digitalio.DigitalInOut(board.D9)    lcd_backlight = digitalio.DigitalInOut(board.D13)You must also define the size of the CharLCD by specifying its ``lcd_columns`` and ``lcd_rows``:.. code-block:: python    lcd_columns = 16    lcd_rows = 2After you have set up your LCD, we can make the device by calling it.. code-block:: python    lcd = character_lcd.Character_LCD_Mono(lcd_rs, lcd_en, lcd_d4, lcd_d5, lcd_d6, lcd_d7, lcd_columns, lcd_rows, lcd_backlight)To verify that your pins are correct, print a hello message to the CharLCD:.. code-block:: python    lcd.message = &quot;Hello\nCircuitPython&quot;Custom character example with ``create_char()`` is provided within /examples/Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/charlcd/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_CharLCD/blob/main/CODE_OF_CONDUCT.md&gt;`_ before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>