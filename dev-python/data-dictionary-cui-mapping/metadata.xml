<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># data-dictionary-cui-mappingThis package allows you to  load in a data dictionary and map cuis to defined fields using either the UMLS API or MetaMap API from NLM.## InstallationUse the package manager [pip](https://pip.pypa.io/en/stable/) to install data-dictionary-cui-mapping or pip install from the GitHub repo.```bashpip install data-dictionary-cui-mapping#pip install git+https://github.com/kevon217/data-dictionary-cui-mapping.git```## Usage```python# import batch_query_pipeline modules from metamap OR umls packagefrom data_dictionary_cui_mapping.metamap import batch_query_pipeline as mm_bqpfrom data_dictionary_cui_mapping.umls import batch_query_pipeline as umls_bqp# import helper functions for loading, viewing, composing configurations for pipeline runfrom data_dictionary_cui_mapping.utils import helperfrom omegaconf import OmegaConf# import modules to create data dictionary with curated CUIs and check the file for missing mappingsfrom data_dictionary_cui_mapping.curation import create_dictionary_import_filefrom data_dictionary_cui_mapping.curation import check_cuis# LOAD/EDIT CONFIGURATION FILEScfg = helper.compose_config.fn(overrides=[&quot;custom=de&quot;, &quot;apis=config_metamap_api&quot;]) # custom config for MetaMap on data element 'title' column# cfg = helper.compose_config.fn(overrides=[&quot;custom=de&quot;, &quot;apis=config_umls_api&quot;]) # custom config for UMLS API on data element 'title' column# cfg = helper.compose_config.fn(overrides=[&quot;custom=pvd&quot;, &quot;apis=config_metamap_api&quot;]) # custom config for MetaMap on 'permissible value descriptions' column# cfg = helper.compose_config.fn(overrides=[&quot;custom=pvd&quot;, &quot;apis=config_umls_api&quot;]) # custom config for UMLS API on 'permissible value descriptions' columncfg.apis.user_info.email = '' # enter your emailcfg.apis.user_info.apiKey = '' # enter your api keyprint(OmegaConf.to_yaml(cfg))# STEP-1: RUN BATCH QUERY PIPELINEdf_final_mm = mm_bqp.main(cfg) # run MetaMap batch query pipeline# df_final_umls = umls_bqp.main(cfg) # run UMLS API batch query pipeline# MANUAL CURATION STEP IN EXCEL FILE (see curation example in notebooks/examples_files/DE_Step-1_curation_keepCol.xlsx)# STEP-2: CREATE DATA DICTIONARY IMPORT FILEcfg = helper.load_config.fn(helper.choose_input_file.fn(&quot;Load config file from Step 1&quot;))create_dictionary_import_file.main(cfg)# CHECK CURATED CUI MAPPINGScfg = helper.load_config.fn(helper.choose_input_file.fn(&quot;Load config file from Step 2&quot;))check_cuis.main(cfg)```## AcknowledgementsThe MetaMap API code included is from Will J Roger's repository --&gt; https://github.com/lhncbc/skr_web_python_apiSpecial thanks to Olga Vovk and Henry Ogoe for their guidance, feedback, and testing of this package.## License[MIT](https://choosealicense.com/licenses/mit/)</longdescription>
</pkgmetadata>