<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Project Template## Install dependenciesInstall `pipenv` to manage dependencies&gt; pip install --user pipenvIf you get a warning like```WARNING: The scripts pipenv and pipenv-resolver are installed in '/home/${REPLACE_UBUNTU_USERNAME_HERE}/.local/bin' which is not on PATH.Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.```Modify `PATH` system variable to use `pipenv`&gt; `nano ~/.zshrc`Add the next line at the end of the file&gt; `export PATH=&quot;$PATH:/home/${REPLACE_UBUNTU_USERNAME_HERE}/.local/bin&quot;`Create `.env` file with environment variable&gt; PIPENV_VENV_IN_PROJECT=1Finally, install dependencies using pipenv&gt; pipenv install --dev## Select virtual environment in VS Code1. Open Command Prompt: Ctrl + Shift + P2. Write `Python: Select Interpreter`3. Select your virtual environment&gt; Should be something like `./.venv/bin/python`## Test project with pytest&gt; pytestInstall pre-commit hooks in your repository to use `pytest`&gt; pre-commit installInstall commit linter hook to follow conventional commits guide [like here](https://www.conventionalcommits.org/en/v1.0.0/)&gt; commit-linter install## Pylint1. Open Command Prompt: Ctrl + Shift + P2. Write `Python: Select Linter`3. Select `pylint`## Working with pipenv-   To activate this project's virtual environment, run pipenv shell.-   Alternatively, run a command inside the virtual environment with pipenv run.## Template setup1. Set `GH_TOKEN` secret using a personal access token to use semantic release2. Set `PYPI_TOKEN` secret using an auth token from PyPI to upload your project</longdescription>
</pkgmetadata>