<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![NPM version](https://badge.fury.io/js/cdk-cloudwatch-alarm-chatbot.svg)](https://badge.fury.io/js/cdk-cloudwatch-alarm-chatbot)[![PyPI version](https://badge.fury.io/py/cdk-cloudwatch-alarm-chatbot.svg)](https://badge.fury.io/py/cdk-cloudwatch-alarm-chatbot)![Release](https://github.com/lvthillo/cdk-cloudwatch-alarm-chatbot/workflows/release/badge.svg)# cdk-cloudwatch-alarm-chatbotA CDK construct which creates an SNS AWS ChatBot (Slack) integration for CloudWatch alarms.# ExampleExample use of construct```pythonimport * as cdk from 'aws-cdk-lib';import * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';import * as cloudwatch_actions from 'aws-cdk-lib/aws-cloudwatch-actions';import * as sqs from 'aws-cdk-lib/aws-sqs';import { CdkCloudWatchAlarmChatBot } from 'cdk-cloudwatch-alarm-chatbot';import { Construct } from 'constructs';export class CdkDemoStack extends cdk.Stack {  constructor(scope: Construct, id: string, props?: cdk.StackProps) {    super(scope, id, props);    const queue = new sqs.Queue(this, 'HelloCdkQueue', {      visibilityTimeout: cdk.Duration.seconds(300)    });    const qMetric = queue.metric('ApproximateNumberOfMessagesVisible');    const alarm = new cloudwatch.Alarm(this, 'Alarm', {      metric: qMetric,      threshold: 100,      evaluationPeriods: 3,      datapointsToAlarm: 2    });    const slackAlarmIntegration = new CdkCloudWatchAlarmChatBot(this, 'SlackIntegration', {      topicName: 'slack-alarm',      slackChannelId: 'xxx',      slackWorkSpaceId: 'yyy',    });    alarm.addAlarmAction(new cloudwatch_actions.SnsAction(slackAlarmIntegration.topic));  }}```Test Alarm:```$ aws cloudwatch set-alarm-state --alarm-name &quot;xxx&quot; --state-value ALARM --state-reason &quot;testing purposes&quot;```</longdescription>
</pkgmetadata>