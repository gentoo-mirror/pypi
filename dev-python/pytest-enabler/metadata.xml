<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/pytest-enabler.svg   :target: https://pypi.org/project/pytest-enabler.. image:: https://img.shields.io/pypi/pyversions/pytest-enabler.svg.. image:: https://github.com/jaraco/pytest-enabler/workflows/tests/badge.svg   :target: https://github.com/jaraco/pytest-enabler/actions?query=workflow%3A%22tests%22   :alt: tests.. image:: https://img.shields.io/badge/code%20style-black-000000.svg   :target: https://github.com/psf/black   :alt: Code style: Black.. .. image:: https://readthedocs.org/projects/skeleton/badge/?version=latest..    :target: https://skeleton.readthedocs.io/en/latest/?badge=latest.. image:: https://img.shields.io/badge/skeleton-2023-informational   :target: https://blog.jaraco.com/skeletonThe 'enabler' plugin allows configuration of plugins if present, but omits the settings if the plugin is not present. For example, to configure black to be enabled if the plugin is present, but not when it is not, add the following to your pyproject.toml::    [tool.pytest-enabler.black]    addopts = &quot;--black&quot;Then, to temporarily disable a plugin, use pytest's built-in support for disabling a plugin::    pytest -p no:blackKnown to work with the following plugins:- pytest-black- pytest-cov- pytest-flake8- pytest-mypy- pytest-xdist</longdescription>
</pkgmetadata>