<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>About=====.. image:: https://img.shields.io/pypi/v/pgmagick.svg    :target: https://pypi.org/project/pgmagick/    :alt: PyPI Version.. image:: https://github.com/hhatto/pgmagick/workflows/Python%20package/badge.svg    :target: https://github.com/hhatto/pgmagick/actions    :alt: Build statuspgmagick is a yet another boost.python based wrapper for GraphicsMagick_ ... _GraphicsMagick: http://www.graphicsmagick.org/Installation============install to::    $ pip install pgmagickRequirements============Python3.5++ (or Python2.7), GraphicsMagick and Boost.Python.package install on Debian Buster::    $ apt-get install g++ libgraphicsmagick++1-dev libboost-python-devpackage install on Ubuntu(test on Ubuntu10.04+)::    ### Ubuntu11.10+ ###    $ apt-get install python-pgmagick    ### Ubuntu10.04+ ###    $ apt-get install libgraphicsmagick++1-dev    $ apt-get install libboost-python1.40-devpackage install on Fedora::    $ yum install GraphicsMagick-c++-devel    $ yum install boost-develGraphicsMagick from source package::    $ ./configure --enable-shared=yes    $ make &amp;&amp; make installMacOSX------via homebrew-cask(homebrew-pgmagick) with Python3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~use `homebrew-pgmagick`_ ::    $ brew tap hhatto/pgmagick    $ brew install pgmagick.. _`homebrew-pgmagick`: https://github.com/hhatto/homebrew-pgmagickvia homebrew-cask(homebrew-pgmagick) with Python3via homebrew and pip with Python3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~on MacOSX (10.13.5~10.15.x)::    $ brew install python    $ brew install graphicsmagick    $ brew install boost-python3    $ pip install pgmagickWindows-------Now, not official support.However, *unofficial* binary packages exists.- http://www.lfd.uci.edu/~gohlke/pythonlibs/#pgmagickImageMagick support-------------------pgmagick is supported to ImageMagick library. (*version:0.4+*)package install on Ubuntu(test on Ubuntu10.04+)::    $ apt-get install libmagick++-devshow library name and version::    &gt;&gt;&gt; from pgmagick import gminfo    &gt;&gt;&gt; gminfo.library    'GraphicsMagick'    # or 'ImageMagick'    &gt;&gt;&gt; gminfo.version    '1.3.x'    &gt;&gt;&gt;Usage=====scale example::    &gt;&gt;&gt; from pgmagick import Image    &gt;&gt;&gt; im = Image('input.jpg')    &gt;&gt;&gt; im.quality(100)    &gt;&gt;&gt; im.scale('100x100')    &gt;&gt;&gt; im.sharpen(1.0)    &gt;&gt;&gt; im.write('output.jpg')resize example::    &gt;&gt;&gt; from pgmagick import Image    &gt;&gt;&gt; im = Image('input.jpg')    &gt;&gt;&gt; im.filterType(FilterTypes.SincFilter)    &gt;&gt;&gt; im.resize('100x100')    &gt;&gt;&gt; im.write('output.jpg')composite example::    &gt;&gt;&gt; from pgmagick import Image, CompositeOperator as co    &gt;&gt;&gt; base = Image('base.png')    &gt;&gt;&gt; layer = Image('layer_one.png')    &gt;&gt;&gt; base.composite(layer, 100, 100, co.OverCompositeOp)    &gt;&gt;&gt; im.write('output.png')draw example::    &gt;&gt;&gt; from pgmagick import Image, DrawableCircle, DrawableText, Geometry, Color    &gt;&gt;&gt; im = Image(Geometry(300, 300), Color(&quot;yellow&quot;))    &gt;&gt;&gt; circle = DrawableCircle(100, 100, 20, 20)    &gt;&gt;&gt; im.draw(circle)    &gt;&gt;&gt; im.fontPointsize(65)    &gt;&gt;&gt; text = DrawableText(30, 250, &quot;Hello pgmagick&quot;)    &gt;&gt;&gt; im.draw(text)    &gt;&gt;&gt; im.write('hoge.png')blob access::    &gt;&gt;&gt; from pgmagick import Image, Blob, Geometry    &gt;&gt;&gt; blob = Blob(open('filename.jpg').read())    &gt;&gt;&gt; blob.update(open('filename2.jpg').read())    &gt;&gt;&gt; img = Image(blob, Geometry(600, 480))    &gt;&gt;&gt; img.scale('300x200')    &gt;&gt;&gt; img.write('out.jpg')create animated-GIF::    from pgmagick import Image, ImageList, Geometry, Color    imgs = ImageList()    for color in ('red', 'blue', 'green', 'black', 'yellow'):        imgs.append(Image(Geometry(200, 200), Color(color)))    imgs.animationDelayImages(100)    imgs.scaleImages(Geometry(100, 100))    imgs.writeImages('output.gif')more API detail... read to `Magick++ API for GraphicsMagick`_ document... _`Magick++ API for GraphicsMagick`: http://www.graphicsmagick.org/Magick++/Python APIs(*NOTICE!! this api is alpha version!!*)::    &gt;&gt;&gt; from pgmagick.api import Image    &gt;&gt;&gt; img = Image((300, 300), &quot;gradient:#ffffff-#000000&quot;)    &gt;&gt;&gt; img.scale(0.8)    &gt;&gt;&gt; img.write('out.png')Links=====* PyPI_* `Project Page`_* `Project Page (Old)`_.. _PyPI: http://pypi.python.org/pypi/pgmagick/.. _`Project Page`: https://github.com/hhatto/pgmagick/.. _`Project Page (Old)`: https://bitbucket.org/hhatto/pgmagick/</longdescription>
</pkgmetadata>