<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python: BSBLan API Client[![GitHub Release][releases-shield]][releases]![Project Stage][project-stage-shield]![Project Maintenance][maintenance-shield][![License][license-shield]](LICENSE.md)[![Build Status][build-shield]][build][![Code Coverage][codecov-shield]][codecov][![Buy me a coffee][buymeacoffee-shield]][buymeacoffee]Asynchronous Python client for BSBLan.## AboutThis package allows you to control and monitor an BSBLan deviceprogrammatically. It is mainly created to allow third-party programs to automatethe behavior of [BSBLan][bsblanmodule].## Installation```bashpip install python-bsblan```## Usage```python# pylint: disable=W0621&quot;&quot;&quot;Asynchronous Python client for BSBLan.&quot;&quot;&quot;import asynciofrom bsblan import BSBLan, Info, Stateasync def main(loop):    &quot;&quot;&quot;Show example on controlling your BSBLan device.    Options:    - passkey (http://url/&quot;passkey&quot;/) if your device is setup for passkey authentication    - username and password if your device is setup for username/password authentication    &quot;&quot;&quot;    async with BSBLan(        host=&quot;10.0.1.60&quot;, passkey=None, username=None, password=None, loop=loop    ) as bsblan:        # get state from bsblan device        state: State = await bsblan.state()        print(state)        # set temp thermostat        await bsblan.thermostat(target_temperature=19.0)        # set hvac_mode (0-3) (protection,auto,reduced,comfort)        await bsblan.thermostat(hvac_mode=3)        # get some generic info from the heater        info: Info = await bsblan.info()        print(info)        # get device info        device: Device = await bsblan.device()        print(device)        # get sensor from bsblan device        sensor: Sensor = await bsblan.sensor()        print(f&quot;outside temperature: {sensor.outside_temperature.value}&quot;)if __name__ == &quot;__main__&quot;:    loop = asyncio.get_event_loop_policy().get_event_loop()    loop.run_until_complete(main())```## Changelog &amp; ReleasesThis repository keeps a change log using [GitHub's releases][releases]functionality. The format of the log is based on[Keep a Changelog][keepchangelog].Releases are based on [Semantic Versioning][semver], and use the formatof `MAJOR.MINOR.PATCH`. In a nutshell, the version will be incrementedbased on the following:- `MAJOR`: Incompatible or major changes.- `MINOR`: Backwards-compatible new features and enhancements.- `PATCH`: Backwards-compatible bugfixes and package updates.## ContributingThis is an active open-source project. We are always open to people who want touse the code or contribute to it.We've set up a separate document for our[contribution guidelines](CONTRIBUTING.md).Thank you for being involved! :heart_eyes:## Setting up development environmentThis Python project is fully managed using the [Poetry][poetry] dependency manager. But also relies on the use of NodeJS for certain checks during development.You need at least:- Python 3.9+- [Poetry][poetry-install]- NodeJS 16+ (including NPM)To install all packages, including all development requirements:```bashnpm installpoetry install```As this repository uses the [pre-commit][pre-commit] framework, all changesare linted and tested with each commit. You can run all checks and testsmanually, using the following command:```bashpoetry run pre-commit run --all-files```To run just the Python tests:```bashpoetry run pytest```## Authors &amp; contributorsThe template is from the repository 'elgato' by [Franck Nijhof][frenck].The setup of this repository is by [Willem-Jan van Rootselaar][liudger].For a full list of all authors and contributors,check [the contributor's page][contributors].## LicenseMIT LicenseCopyright (c) 2023 WJ van RootselaarPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.[bsblanmodule]: https://github.com/fredlcore/bsb_lan[build-shield]: https://github.com/liudger/python-bsblan/workflows/Continuous%20Integration/badge.svg[build]: https://github.com/liudger/python-bsblan/actions[buymeacoffee-shield]: https://www.buymeacoffee.com/assets/img/guidelines/download-assets-sm-2.svg[buymeacoffee]: https://www.buymeacoffee.com/liudger[codecov-shield]: https://codecov.io/gh/liudger/python-bsblan/branch/Dev/graph/badge.svg?token=ypos87GGxv[codecov]: https://codecov.io/gh/liudger/python-bsblan[contributors]: https://github.com/liudger/python-bsblan/graphs/contributors[frenck]: https://github.com/frenck[keepchangelog]: http://keepachangelog.com/en/1.0.0/[license-shield]: https://img.shields.io/github/license/liudger/python-bsblan.svg[liudger]: https://github.com/liudger[maintenance-shield]: https://img.shields.io/maintenance/yes/2023.svg[poetry]: https://python-poetry.org[poetry-install]: https://python-poetry.org/docs/#installation[project-stage-shield]: https://img.shields.io/badge/project%20stage-experimental-yellow.svg[releases-shield]: https://img.shields.io/github/v/release/liudger/python-bsblan.svg[releases]: https://github.com/liudger/python-bsblan/releases[semver]: http://semver.org/spec/v2.0.0.html</longdescription>
</pkgmetadata>