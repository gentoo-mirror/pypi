<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ![CheckAtlas](docs/images/checkatlas_logo.png) ![PyPI](https://img.shields.io/pypi/v/checkatlas)![PyPI - Downloads](https://img.shields.io/pypi/dw/checkatlas)![PyPI - License](https://img.shields.io/pypi/l/checkatlas)![Conda](https://img.shields.io/conda/pn/bioconda/checkatlas)[![codecov](https://codecov.io/gh/becavin-lab/checkatlas/branch/main/graph/badge.svg?token=checkatlas_token_here)](https://codecov.io/gh/becavin-lab/checkatlas)[![CI](https://github.com/becavin-lab/checkatlas/actions/workflows/tests.yml/badge.svg)](https://github.com/becavin-lab/checkatlas/actions/workflows/tests.yml)[![Documentation Status](https://readthedocs.org/projects/checkatlas/badge/?version=latest)](https://checkatlas.readthedocs.io/en/latest/?badge=latest)[![Gitter](https://badges.gitter.im/checkatlas/checkatlas.svg)](https://app.gitter.im/#/room/!KpJcsVTOlGjwJgtLwF:gitter.im)CheckAtlas is a one liner tool to check the quality of your single-cell atlases. For every atlas, it produces thequality control tables and figures which can be then processed by multiqc. CheckAtlas is able to load Scanpy, Seurat,and CellRanger files.## Summary### Parse Scanpy, Seurat and CellRanger objectsThe checkatlas pipeline start with a fast crawl through your working directory. It detects Seurat (.rds), Scanpy (.h5ad) or cellranger (.h5) atlas files.### Create checkatlas summary filesGo through all atlas files and produce summary information:- All basic QC (nRNA, nFeature, ratio_mito)- General information (nbcells, nbgenes, nblayers)- All elements in atlas files (obs, obsm, uns, var, varm)- Reductions (pca, umap, tsne)- All metrics (clustering, annotation, dimreduction, specificity)### Parse checkatlas files in MultiQC   Update MultiQC project to add checkatlas parsing. Dev project in: https://github.com/becavin-lab/MultiQC/tree/checkatlashttps://checkatlas.readthedocs.io/en/latest/## Examples1. Evaluate and compare different atlases: https://github.com/becavin-lab/checkatlas/blob/3a4f88e94716c09a3b9c86010f570743a5855461/examples/Atlas_comparison.ipynbhttps://checkatlas.readthedocs.io/en/stable/CheckAtlas_example_1/CheckAtlas_example_1.html2. Evaluate different version of your atlas: https://github.com/becavin-lab/checkatlas/blob/3a4f88e94716c09a3b9c86010f570743a5855461/examples/Version_comparison.ipynbhttps://checkatlas.readthedocs.io/en/stable/CheckAtlas_example_2/CheckAtlas_example_2.html3. Explore Scanpy, Seurat and CellRanger objects in your folder: https://github.com/becavin-lab/checkatlas/blob/main/examples/AtlasType_comparison.ipynbhttps://checkatlas.readthedocs.io/en/stable/CheckAtlas_example_3/CheckAtlas_example_3.html## InstallationCheckAtlas can be downloaded from PyPI. However, the project is in an early development phase. We strongly recommend to use the developmental version.### Install checkatlas development version```bashgit clone git@github.com:becavin-lab/checkatlas.gitpip install checkatlas/.```Install MultiQC with checkatlas file management. This version of MultiQC is available at checkatlas branch of github.com:becavin-lab/MultiQC.```bashgit clone git@github.com:becavin-lab/MultiQC.gitcd MultiQC/git checkout checkatlaspip install .```### Install it from PyPI```bashpip install checkatlas```### Install SeuratTo be able to manage seurat file, rpy2 should have Seurat installed. The easiest way is to put all checkatlas requirements in a conda environment and add r-seurat.```bashconda create -n checkatlas python=3.9pip install checkatlasconda install -c bioconda r-seurat```Or, open R in checkatlas environment (the one where you ran 'pip install') and install Seurat.```bash% R&gt; install.packages('Seurat')&gt; library(Seurat)```## UsageThe one liner way to run checkatlas is the following: ```bash$ cd your_search_folder/$ python -m checkatlas .#or$ checkatlas .```Or run it inside your python workflow.```pyfrom checkatlas import checkatlascheckatlas.run(path, atlas_list, multithread, n_cpus)```## DevelopmentRead the [CONTRIBUTING.md](docs/contributing.md) file.Project developed thanks to the project template : (https://github.com/rochacbruno/python-project-template/)</longdescription>
</pkgmetadata>