<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PlanetaryPy================&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt;Potentiallogo:![image.png](images/epilup_with_python_logo_with_axis.png)## Install``` bashpip install planetarypy```This will pull in these other dependencies and their dependencies:`tomlkit pandas pvl numpy python-dateutil tqdm lxml yarl hirise-tools kalasiris`## Suggested standard abbreviations:- Inside these docs the package will be called `PLPY` for brevity.- A standard Python import could be: `plp` or `plpy`  - because the last `p` in `plp` can be pronounced out, we consider    these equivalent for human conversation and pronounce these    “plippy”.## General scopeFirst and foremost this package should provide support in working withplanetary science data.With `working` we mean:- locating- retrieving- reading- further processingof data.### LocatingThis library manages, via its `PDS tools`, multiple PDS3 index files perinstrument that can be used for identifying data of interest. Theseindex files are automatically downloaded and converted to the veryperformant (and cloud-ready)[parquet](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_parquet.html)file format. \&gt; Parquet is able to store advanced datatypes likenan-capable integer and full datetime objects, as opposed to HDF5.### RetrievingThe interface to getting data is via a path-retrieving function based ona PDS product-id. If that product-id is available locally, the path willbe returned. If it is not, it will previously be downloaded, stored in asystematic fashion organized by mission and instrument, and then thelocal path will be returned.### ReadingFor now, the library only returns the path to the object and the userneeds to sort out the reading process. A recently funded NASA project`Planetary Data Reader` will be integrated here, so that basic readinginto memory can be provided.As such, we anticipate two classes of reading support: 1. basic readinginto numpy and/or xarray 1. added reader functionality like basic plotsand basic geospatial processing, as supported by interested partiesThere will exist larger other packages that focus on working with agiven instrument’s data, in which case that package could become anaffiliated package with the `planetarypy` GitHub organization, if sodesired.### Further processingIn the future, additional frequently used procedures will be added tothis library, e.g. \* frequently used GDAL/rasterio procedures \*frequently used SPICE operations \* like surface illumination on a givenbody## PDS toolsLook at the `Apps` docs to see what `pds.apps` exist for easily gettingPDS indexes. The `find_index` app is specifically useful when you don’tknow what index files exist.So far, the following indexes are supported (but not necessarily alltested within PLPY):- Cassini  - ISS (all)  - UVIS (all)- MRO  - CTX EDR  - HiRISE    - EDR, RDR, DTM      - EDR index has a bug (as delivered by the team, reported), where        I need to activate an existing fix for it.- LRO  - Diviner (DLRE)    - EDR, RDR  - LOLA    - EDR, RDR### More indexesMore indexes of other instruments can be easily added by following theexisting structure of what has been copied into your config at`~/.planetarypy_config.toml`.Please consider submitting a pull request for adding further PDS indexfiles into the config file at its source:https://github.com/michaelaye/nbplanetary/blob/master/planetarypy/data/planetarypy_config.toml## UtilsFind something in `Utils` for working with NASA timestamps and a wellworking URL download function[`url_retrieve`](https://michaelaye.github.io/planetarypy/api/utils.html#url_retrieve),among other stuff.## Experiment/Instrument SpecificSo far, `planetarypy` supports CTX EDR and HiRISE RGB.NOMAP data. Lookat the[`CTX`](https://michaelaye.github.io/planetarypy/api/ctx.html#ctx) and`HiRISE` pages for descriptions of classes for working with these data.## Bug reportsPlease submit bug reports athttps://github.com/michaelaye/nbplanetary/issues## How to use### IndexesSee [PDS apps](api/02c_pds.apps.ipynb) for more details.``` pythonfrom planetarypy.pds.apps import get_index`````` pythonctrindex = get_index(&quot;mro.ctx&quot;, &quot;edr&quot;)ctrindex.sample(5, random_state=42)  # setting random_state to always get same files for docs```&lt;div&gt;&lt;style scoped&gt;    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }&lt;/style&gt;&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;VOLUME_ID&lt;/th&gt;      &lt;th&gt;FILE_SPECIFICATION_NAME&lt;/th&gt;      &lt;th&gt;ORIGINAL_PRODUCT_ID&lt;/th&gt;      &lt;th&gt;PRODUCT_ID&lt;/th&gt;      &lt;th&gt;IMAGE_TIME&lt;/th&gt;      &lt;th&gt;INSTRUMENT_ID&lt;/th&gt;      &lt;th&gt;INSTRUMENT_MODE_ID&lt;/th&gt;      &lt;th&gt;LINE_SAMPLES&lt;/th&gt;      &lt;th&gt;LINES&lt;/th&gt;      &lt;th&gt;SPATIAL_SUMMING&lt;/th&gt;      &lt;th&gt;...&lt;/th&gt;      &lt;th&gt;SUB_SOLAR_LATITUDE&lt;/th&gt;      &lt;th&gt;SUB_SPACECRAFT_LONGITUDE&lt;/th&gt;      &lt;th&gt;SUB_SPACECRAFT_LATITUDE&lt;/th&gt;      &lt;th&gt;SOLAR_DISTANCE&lt;/th&gt;      &lt;th&gt;SOLAR_LONGITUDE&lt;/th&gt;      &lt;th&gt;LOCAL_TIME&lt;/th&gt;      &lt;th&gt;IMAGE_SKEW_ANGLE&lt;/th&gt;      &lt;th&gt;RATIONALE_DESC&lt;/th&gt;      &lt;th&gt;DATA_QUALITY_DESC&lt;/th&gt;      &lt;th&gt;ORBIT_NUMBER&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;th&gt;102927&lt;/th&gt;      &lt;td&gt;MROX_3290&lt;/td&gt;      &lt;td&gt;DATA/K09_056855_1472_XN_32S152W.IMG&lt;/td&gt;      &lt;td&gt;4A_04_112001B600&lt;/td&gt;      &lt;td&gt;K09_056855_1472_XN_32S152W&lt;/td&gt;      &lt;td&gt;2018-09-12 15:27:23.819&lt;/td&gt;      &lt;td&gt;CTX&lt;/td&gt;      &lt;td&gt;NIFL&lt;/td&gt;      &lt;td&gt;5056&lt;/td&gt;      &lt;td&gt;7168&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;-23.61&lt;/td&gt;      &lt;td&gt;152.16&lt;/td&gt;      &lt;td&gt;-32.84&lt;/td&gt;      &lt;td&gt;206674590.7&lt;/td&gt;      &lt;td&gt;248.70&lt;/td&gt;      &lt;td&gt;15.12&lt;/td&gt;      &lt;td&gt;90.1&lt;/td&gt;      &lt;td&gt;Ride-along with HiRISE&lt;/td&gt;      &lt;td&gt;OK&lt;/td&gt;      &lt;td&gt;56855&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;116952&lt;/th&gt;      &lt;td&gt;MROX_3714&lt;/td&gt;      &lt;td&gt;DATA/N08_065442_0965_XN_83S191W.IMG&lt;/td&gt;      &lt;td&gt;4A_04_114C019800&lt;/td&gt;      &lt;td&gt;N08_065442_0965_XN_83S191W&lt;/td&gt;      &lt;td&gt;2020-07-12 17:31:23.962&lt;/td&gt;      &lt;td&gt;CTX&lt;/td&gt;      &lt;td&gt;NIFL&lt;/td&gt;      &lt;td&gt;5056&lt;/td&gt;      &lt;td&gt;33792&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;-21.24&lt;/td&gt;      &lt;td&gt;190.23&lt;/td&gt;      &lt;td&gt;-83.51&lt;/td&gt;      &lt;td&gt;207154930.4&lt;/td&gt;      &lt;td&gt;237.37&lt;/td&gt;      &lt;td&gt;17.12&lt;/td&gt;      &lt;td&gt;91.4&lt;/td&gt;      &lt;td&gt;Planum Australe&lt;/td&gt;      &lt;td&gt;OK&lt;/td&gt;      &lt;td&gt;65442&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;16386&lt;/th&gt;      &lt;td&gt;MROX_0690&lt;/td&gt;      &lt;td&gt;DATA/B01_010083_2567_XI_76N181W.IMG&lt;/td&gt;      &lt;td&gt;4A_04_103101E100&lt;/td&gt;      &lt;td&gt;B01_010083_2567_XI_76N181W&lt;/td&gt;      &lt;td&gt;2008-09-20 04:33:05.584&lt;/td&gt;      &lt;td&gt;CTX&lt;/td&gt;      &lt;td&gt;ITL&lt;/td&gt;      &lt;td&gt;5056&lt;/td&gt;      &lt;td&gt;52224&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;19.30&lt;/td&gt;      &lt;td&gt;180.80&lt;/td&gt;      &lt;td&gt;76.84&lt;/td&gt;      &lt;td&gt;237461101.1&lt;/td&gt;      &lt;td&gt;129.80&lt;/td&gt;      &lt;td&gt;14.76&lt;/td&gt;      &lt;td&gt;89.7&lt;/td&gt;      &lt;td&gt;North polar outlier&lt;/td&gt;      &lt;td&gt;OK&lt;/td&gt;      &lt;td&gt;10083&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;107515&lt;/th&gt;      &lt;td&gt;MROX_3450&lt;/td&gt;      &lt;td&gt;DATA/K15_059059_1434_XN_36S196W.IMG&lt;/td&gt;      &lt;td&gt;4A_04_112C004300&lt;/td&gt;      &lt;td&gt;K15_059059_1434_XN_36S196W&lt;/td&gt;      &lt;td&gt;2019-03-03 08:44:14.027&lt;/td&gt;      &lt;td&gt;CTX&lt;/td&gt;      &lt;td&gt;NIFL&lt;/td&gt;      &lt;td&gt;2528&lt;/td&gt;      &lt;td&gt;9216&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;-4.38&lt;/td&gt;      &lt;td&gt;196.66&lt;/td&gt;      &lt;td&gt;-36.69&lt;/td&gt;      &lt;td&gt;229158765.3&lt;/td&gt;      &lt;td&gt;349.79&lt;/td&gt;      &lt;td&gt;14.21&lt;/td&gt;      &lt;td&gt;90.1&lt;/td&gt;      &lt;td&gt;Craters in Terra Cimmeria&lt;/td&gt;      &lt;td&gt;OK&lt;/td&gt;      &lt;td&gt;59059&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;57288&lt;/th&gt;      &lt;td&gt;MROX_1890&lt;/td&gt;      &lt;td&gt;DATA/D16_033513_1653_XI_14S108W.IMG&lt;/td&gt;      &lt;td&gt;4A_04_10A9016F00&lt;/td&gt;      &lt;td&gt;D16_033513_1653_XI_14S108W&lt;/td&gt;      &lt;td&gt;2013-09-19 20:45:34.363&lt;/td&gt;      &lt;td&gt;CTX&lt;/td&gt;      &lt;td&gt;ITL&lt;/td&gt;      &lt;td&gt;5056&lt;/td&gt;      &lt;td&gt;15360&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;10.17&lt;/td&gt;      &lt;td&gt;108.53&lt;/td&gt;      &lt;td&gt;-14.83&lt;/td&gt;      &lt;td&gt;241359283.4&lt;/td&gt;      &lt;td&gt;24.21&lt;/td&gt;      &lt;td&gt;14.66&lt;/td&gt;      &lt;td&gt;90.2&lt;/td&gt;      &lt;td&gt;Syria/Claritas dust-raising event monitoring site&lt;/td&gt;      &lt;td&gt;OK&lt;/td&gt;      &lt;td&gt;33513&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;5 rows × 51 columns&lt;/p&gt;&lt;/div&gt;``` pythonhirise_rdr = get_index(&quot;mro.hirise&quot;, &quot;rdr&quot;)hirise_rdr.sample(5, random_state=42)```&lt;div&gt;&lt;style scoped&gt;    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }&lt;/style&gt;&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;&lt;/th&gt;      &lt;th&gt;VOLUME_ID&lt;/th&gt;      &lt;th&gt;FILE_NAME_SPECIFICATION&lt;/th&gt;      &lt;th&gt;INSTRUMENT_HOST_ID&lt;/th&gt;      &lt;th&gt;INSTRUMENT_ID&lt;/th&gt;      &lt;th&gt;OBSERVATION_ID&lt;/th&gt;      &lt;th&gt;PRODUCT_ID&lt;/th&gt;      &lt;th&gt;PRODUCT_VERSION_ID&lt;/th&gt;      &lt;th&gt;TARGET_NAME&lt;/th&gt;      &lt;th&gt;ORBIT_NUMBER&lt;/th&gt;      &lt;th&gt;MISSION_PHASE_NAME&lt;/th&gt;      &lt;th&gt;...&lt;/th&gt;      &lt;th&gt;LINE_PROJECTION_OFFSET&lt;/th&gt;      &lt;th&gt;SAMPLE_PROJECTION_OFFSET&lt;/th&gt;      &lt;th&gt;CORNER1_LATITUDE&lt;/th&gt;      &lt;th&gt;CORNER1_LONGITUDE&lt;/th&gt;      &lt;th&gt;CORNER2_LATITUDE&lt;/th&gt;      &lt;th&gt;CORNER2_LONGITUDE&lt;/th&gt;      &lt;th&gt;CORNER3_LATITUDE&lt;/th&gt;      &lt;th&gt;CORNER3_LONGITUDE&lt;/th&gt;      &lt;th&gt;CORNER4_LATITUDE&lt;/th&gt;      &lt;th&gt;CORNER4_LONGITUDE&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;th&gt;95782&lt;/th&gt;      &lt;td&gt;MROHR_0001&lt;/td&gt;      &lt;td&gt;RDR/ESP/ORB_049400_049499/ESP_049456_0945/ESP_...&lt;/td&gt;      &lt;td&gt;MRO&lt;/td&gt;      &lt;td&gt;HIRISE&lt;/td&gt;      &lt;td&gt;ESP_049456_0945&lt;/td&gt;      &lt;td&gt;ESP_049456_0945_COLOR&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;MARS&lt;/td&gt;      &lt;td&gt;49456&lt;/td&gt;      &lt;td&gt;Extended Science Phase&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;289555.5&lt;/td&gt;      &lt;td&gt;1014477.5&lt;/td&gt;      &lt;td&gt;-85.6701&lt;/td&gt;      &lt;td&gt;286.4690&lt;/td&gt;      &lt;td&gt;-85.6815&lt;/td&gt;      &lt;td&gt;286.3020&lt;/td&gt;      &lt;td&gt;-85.5562&lt;/td&gt;      &lt;td&gt;284.8560&lt;/td&gt;      &lt;td&gt;-85.5452&lt;/td&gt;      &lt;td&gt;285.0210&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;142902&lt;/th&gt;      &lt;td&gt;MROHR_0001&lt;/td&gt;      &lt;td&gt;RDR/ESP/ORB_072700_072799/ESP_072755_2030/ESP_...&lt;/td&gt;      &lt;td&gt;MRO&lt;/td&gt;      &lt;td&gt;HIRISE&lt;/td&gt;      &lt;td&gt;ESP_072755_2030&lt;/td&gt;      &lt;td&gt;ESP_072755_2030_RED&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;MARS&lt;/td&gt;      &lt;td&gt;72755&lt;/td&gt;      &lt;td&gt;Extended Science Phase&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;5448057.5&lt;/td&gt;      &lt;td&gt;-36148404.0&lt;/td&gt;      &lt;td&gt;22.8511&lt;/td&gt;      &lt;td&gt;342.4710&lt;/td&gt;      &lt;td&gt;22.8408&lt;/td&gt;      &lt;td&gt;342.3770&lt;/td&gt;      &lt;td&gt;22.9836&lt;/td&gt;      &lt;td&gt;342.3590&lt;/td&gt;      &lt;td&gt;22.9940&lt;/td&gt;      &lt;td&gt;342.4520&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;114241&lt;/th&gt;      &lt;td&gt;MROHR_0001&lt;/td&gt;      &lt;td&gt;RDR/ESP/ORB_057400_057499/ESP_057400_1150/ESP_...&lt;/td&gt;      &lt;td&gt;MRO&lt;/td&gt;      &lt;td&gt;HIRISE&lt;/td&gt;      &lt;td&gt;ESP_057400_1150&lt;/td&gt;      &lt;td&gt;ESP_057400_1150_RED&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;MARS&lt;/td&gt;      &lt;td&gt;57400&lt;/td&gt;      &lt;td&gt;Extended Science Phase&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;-15324106.0&lt;/td&gt;      &lt;td&gt;9551808.0&lt;/td&gt;      &lt;td&gt;-65.0631&lt;/td&gt;      &lt;td&gt;99.2951&lt;/td&gt;      &lt;td&gt;-65.0739&lt;/td&gt;      &lt;td&gt;99.1184&lt;/td&gt;      &lt;td&gt;-64.9297&lt;/td&gt;      &lt;td&gt;99.0696&lt;/td&gt;      &lt;td&gt;-64.9190&lt;/td&gt;      &lt;td&gt;99.2454&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;260&lt;/th&gt;      &lt;td&gt;MROHR_0001&lt;/td&gt;      &lt;td&gt;RDR/PSP/ORB_001300_001399/PSP_001390_2290/PSP_...&lt;/td&gt;      &lt;td&gt;MRO&lt;/td&gt;      &lt;td&gt;HIRISE&lt;/td&gt;      &lt;td&gt;PSP_001390_2290&lt;/td&gt;      &lt;td&gt;PSP_001390_2290_RED&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;MARS&lt;/td&gt;      &lt;td&gt;1390&lt;/td&gt;      &lt;td&gt;Primary Science Phase&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;11574100.0&lt;/td&gt;      &lt;td&gt;-17349000.0&lt;/td&gt;      &lt;td&gt;48.8086&lt;/td&gt;      &lt;td&gt;283.9690&lt;/td&gt;      &lt;td&gt;48.7969&lt;/td&gt;      &lt;td&gt;283.8150&lt;/td&gt;      &lt;td&gt;48.9486&lt;/td&gt;      &lt;td&gt;283.7880&lt;/td&gt;      &lt;td&gt;48.9603&lt;/td&gt;      &lt;td&gt;283.9430&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;th&gt;148555&lt;/th&gt;      &lt;td&gt;MROHR_0001&lt;/td&gt;      &lt;td&gt;RDR/ESP/ORB_075600_075699/ESP_075617_0955/ESP_...&lt;/td&gt;      &lt;td&gt;MRO&lt;/td&gt;      &lt;td&gt;HIRISE&lt;/td&gt;      &lt;td&gt;ESP_075617_0955&lt;/td&gt;      &lt;td&gt;ESP_075617_0955_RED&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;MARS&lt;/td&gt;      &lt;td&gt;75617&lt;/td&gt;      &lt;td&gt;Extended Science Phase&lt;/td&gt;      &lt;td&gt;...&lt;/td&gt;      &lt;td&gt;1299053.5&lt;/td&gt;      &lt;td&gt;-203581.5&lt;/td&gt;      &lt;td&gt;-84.5200&lt;/td&gt;      &lt;td&gt;10.3353&lt;/td&gt;      &lt;td&gt;-84.5620&lt;/td&gt;      &lt;td&gt;9.6666&lt;/td&gt;      &lt;td&gt;-84.4557&lt;/td&gt;      &lt;td&gt;8.9553&lt;/td&gt;      &lt;td&gt;-84.4145&lt;/td&gt;      &lt;td&gt;9.6167&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;5 rows × 54 columns&lt;/p&gt;&lt;/div&gt;## Instrument tools### CTX``` pythonfrom planetarypy.ctx import CTX```    Unable to display output for mime type(s): application/javascript, application/vnd.holoviews_load.v0+json    Unable to display output for mime type(s): application/javascript, application/vnd.holoviews_load.v0+json&lt;style&gt;.bk-root, .bk-root .bk:before, .bk-root .bk:after {  font-family: var(--jp-ui-font-size1);  font-size: var(--jp-ui-font-size1);  color: var(--jp-ui-font-color1);}&lt;/style&gt;``` pythonpid = ctrindex.sample(random_state=42).squeeze().PRODUCT_IDpid```    'K09_056855_1472_XN_32S152W'``` pythonctx = CTX(pid)ctx```    PRODUCT_ID: K09_056855_1472_XN_32S152W    URL: https://pds-imaging.jpl.nasa.gov/data/mro/mars_reconnaissance_orbiter/ctx/mrox_3290/data/K09_056855_1472_XN_32S152W.IMG    source_path: /home/ayek72/mnt/troveplanets/pds/mrox_3290/K09_056855_1472_XN_32S152W.IMG    Shape: (7168, 5056)``` pythonctx.source_path```    Path('/home/ayek72/mnt/troveplanets/pds/mrox_3290/K09_056855_1472_XN_32S152W.IMG')``` pythonctx.download()```    File exists. Use `overwrite=True` to download fresh.## AcknowledgementsThe creation of this library was in part supported by:- NASA Cassini UVIS mission- NASA SSW grant NNX15AH36G- NASA PDART grant 80NSSC20K0875- NASA SSW grant 80NSSC20K0748- German Space Agency (DLR Bonn), grant 50 OO 2204, on behalf of the  German Federal Ministry for Economic Affairs and Climate Action.- This research has made use of the USGS Integrated Software for Imagers  and Spectrometers (ISIS)(Laura et al. 2022).&lt;div id=&quot;refs&quot; class=&quot;references csl-bib-body hanging-indent&quot;&gt;&lt;div id=&quot;ref-laura_jason_2022_7443567&quot; class=&quot;csl-entry&quot;&gt;Laura, Jason, Alex Acosta, Travis Addair, Lauren Adoram-Kershner, JamesAlexander, Oleg Alexandrov, Stacey Alley, et al. 2022. *IntegratedSoftware for Imagers and Spectrometers* (version 7.2.0_RC1). Zenodo.&lt;https://doi.org/10.5281/zenodo.7443567&gt;.&lt;/div&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>