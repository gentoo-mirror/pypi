<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://user-images.githubusercontent.com/56755478/165474515-12392df4-a41c-4ed9-bed4-512f606caedc.png&quot; /&gt;&lt;/p&gt;# FastAPI BABEL### Get [pybabbel](https://github.com/python-babel/babel) tools directly within your FastAPI project without hassle.FastAPI Babel is will be integrated within FastAPI framework and gives you support of i18n, l10n, date and time locales and all other pybabel functionalities.## Features:- **I18n** (Internationalization)- **Wtform Translation** (Lazy Text)- **l10n** (Localization)- **Date and time** locale- **Decimal, Number** locale- **Money and currency** locale converter- locale selector from **http header**## Support**Python:** 3.6 and later (tested on Python 3.6, 3.7, 3.8, and 3.9)**FastAPI**: 0.45.0 +**PyBabel**: All## Installation    pip install fastapi-babel# How to use1. install FastAPI and FastAPI Babel:`pip install fastapi`and`pip install fastapi_babel`2. make `babel.py` file:```pythonfrom fastapi_babel import Babelfrom fastapi_babel import BabelConfigsconfigs = BabelConfigs(    ROOT_DIR=__file__,    BABEL_DEFAULT_LOCALE=&quot;en&quot;,    BABEL_TRANSLATION_DIRECTORY=&quot;lang&quot;,)babel = Babel(configs=configs)if __name__ == &quot;__main__&quot;:    babel.run_cli()```3. make `babel.cfg` file*babel.cfg*    [python: **.py]4. Create main.py file:```pythonfrom fastapi_babel import Babelfrom fastapi_babel import BabelConfigsfrom fastapi_babel import _configs = BabelConfigs(    ROOT_DIR=__file__,    BABEL_DEFAULT_LOCALE=&quot;en&quot;,    BABEL_TRANSLATION_DIRECTORY=&quot;lang&quot;,)babel = Babel(configs=configs)def main():    babel.locale = &quot;en&quot;    en_text = _(&quot;Hello World&quot;)    print(en_text)    babel.locale = &quot;fa&quot;    fa_text = _(&quot;Hello World&quot;)    print(fa_text)if __name__ == &quot;__main__&quot;:    main()```5. Extract the massage &lt;a name=&quot;step5&quot;&gt;&lt;/a&gt;`pybabel extract -F babel.cfg -o messages.pot .`6. Initialize pybabble`pybabel init -i messages.pot -d lang -l fa`7. Goto *lang/**YOUR_LANGUAGE_CODE**/LC_MESSAGES/messages.po* and **add your translation** to your messages.8. Go back to the root folder and   Compile`pybabel compile -d lang`9. Run `main.py``python3 main.py`10. Enjoy- ### FastAPI Babel CommandsInstall click at first:`pip install click`1. Add this snippet to your FasAPI code:```python...babel.run_cli()...```2. Now just follow the documentation from [step 5](#step5).For more information just take a look at help flag of `main.py``python main.py --help`#### Why FastAPI Babel CLI is recommanded ?FastAPI Babel CLI will eliminate the need of concering the directories and paths, so you can concentrate on the project and spend less time on going forward and backward. You only need to specify **domain name**, **babel.cfg** and** localization directory **.**NOTICE:** Do **not** use `FastAPI Babbel` beside fastapi runner files (`main.py` or `run.py`), as uvicorn cli will not work.[========]## Using FastAPI Babel in an API- create file `babel.py` and write the code below.```pythonfrom fastapi_babel import Babelfrom fastapi_babel import BabelConfigsconfigs = BabelConfigs(    ROOT_DIR=__file__,    BABEL_DEFAULT_LOCALE=&quot;en&quot;,    BABEL_TRANSLATION_DIRECTORY=&quot;lang&quot;,)babel = Babel(configs=configs)if __name__ == &quot;__main__&quot;:    babel.run_cli()```1. Extract messages with following command`python3 babel.py extract -d/--dir {watch_dir}`**Notice: ** watch_dir is your project root directory, or where you want to extract the messages into that directory.2. add your own langauge locale directory, for instance `fa`.`python3 babel.py init -l fa`3. go to ./lang/Fa/.po and add your translations.4. compile all locale directorties.`python3 babel.py compile````pythonfrom fastapi import FastAPI, Requestfrom fastapi_babel import _from .babel import babelapp = FastAPI()babel.init_app(app)@app.get(&quot;/items/{id}&quot;, response_class=HTMLResponse)async def read_item(request: Request, id: str):    return id + _(&quot;Hello World&quot;)```5. Now you can control your translation langauge from header of request and locale code. The parameter is `Accept-Laguage`.Screenshot:[![Screenshot 1](https://user-images.githubusercontent.com/56755478/169701538-8f893d0e-fd09-4004-8e8d-5e045a1d588a.png &quot;Screenshot 1&quot;)](https://user-images.githubusercontent.com/56755478/169701538-8f893d0e-fd09-4004-8e8d-5e045a1d588a.png &quot;Screenshot 1&quot;)### How to use Jinja In FastAPI Babel1. Add jinja extension to **babel.cfg**```xml[python: **.py][jinja2: **/templates/**.html]extensions=jinja2.ext.autoescape,jinja2.ext.with_```2. Here is how your `main.py` should look like.*main.py*```pythonfrom fastapi import FastAPI, Requestfrom fastapi_babel import Babelfrom fastapi_babel import BabelConfigsfrom fastapi_babel import _from fastapi.responses import HTMLResponsefrom fastapi.staticfiles import StaticFilesfrom fastapi.templating import Jinja2Templatestemplates = Jinja2Templates(directory=&quot;templates&quot;)configs = BabelConfigs(    ROOT_DIR=__file__,    BABEL_DEFAULT_LOCALE=&quot;en&quot;,    BABEL_TRANSLATION_DIRECTORY=&quot;lang&quot;,)app = FastAPI()babel = Babel(app, configs=configs)babel.install_jinja(templates)app.mount(&quot;/static&quot;, StaticFiles(directory=&quot;static&quot;), name=&quot;static&quot;)@app.get(&quot;/items/{id}&quot;, response_class=HTMLResponse)async def read_item(request: Request, id: str):    return templates.TemplateResponse(&quot;item.html&quot;, {&quot;request&quot;: request, &quot;id&quot;: id})```3. Here is sample `index.html` file*index.html*```html&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;h1&gt;{{_(&quot;Hello World&quot;)}}&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;``` 4. Now just follow the documentation from [step 5](#step5).5. More features like lazy gettext, please check the [Wtform Example](https://github.com/Anbarryprojects/fastapi-babel/tree/main/examples/wtforms)## Authors- [@Parsa Pourmhammad](https://github.com/Legopapurida)## ContributingContributions are always welcome!Please read `contributing.md` to get familiar how to get started.Please adhere to the project's `code of conduct`.## Feedback And SupportPlease open an issue and follow the template, so the community can help you.</longdescription>
</pkgmetadata>