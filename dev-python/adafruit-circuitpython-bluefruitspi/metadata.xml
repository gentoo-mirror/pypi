<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-bluefruitspi/badge/?version=latest    :target: https://docs.circuitpython.org/projects/bluefruitspi/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_BluefruitSPI/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_BluefruitSPI/actions/    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackHelper class to work with the Adafruit Bluefruit LE SPI Friend.Dependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_* `Bus Device &lt;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://github.com/adafruit/Adafruit_CircuitPython_Bundle&gt;`_.Installing from PyPI====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-bluefruitspi/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-bluefruitspiTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-bluefruitspiTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-bluefruitspiUsage Example=============.. code-block:: python    # A simple echo test for the Feather M0 Bluefruit    # Sets the name, then echo's all RX'd data with a reversed packet    import time    import busio    import board    from digitalio import DigitalInOut    from adafruit_bluefruitspi import BluefruitSPI    spi_bus = busio.SPI(board.SCK, MOSI=board.MOSI, MISO=board.MISO)    cs = DigitalInOut(board.D8)    irq = DigitalInOut(board.D7)    rst = DigitalInOut(board.D4)    bluefruit = BluefruitSPI(spi_bus, cs, irq, rst, debug=False)    # Initialize the device and perform a factory reset    print(&quot;Initializing the Bluefruit LE SPI Friend module&quot;)    bluefruit.init()    bluefruit.command_check_OK(b'AT+FACTORYRESET', delay=1)    # Print the response to 'ATI' (info request) as a string    print(str(bluefruit.command_check_OK(b'ATI'), 'utf-8'))    # Change advertised name    bluefruit.command_check_OK(b'AT+GAPDEVNAME=BlinkaBLE')    while True:        print(&quot;Waiting for a connection to Bluefruit LE Connect ...&quot;)        # Wait for a connection ...        dotcount = 0        while not bluefruit.connected:            print(&quot;.&quot;, end=&quot;&quot;)            dotcount = (dotcount + 1) % 80            if dotcount == 79:                print(&quot;&quot;)            time.sleep(0.5)        # Once connected, check for incoming BLE UART data        print(&quot;\n *Connected!*&quot;)        connection_timestamp = time.monotonic()        while True:            # Check our connection status every 3 seconds            if time.monotonic() - connection_timestamp &gt; 3:                connection_timestamp = time.monotonic()                if not bluefruit.connected:                    break            # OK we're still connected, see if we have any data waiting            resp = bluefruit.uart_rx()            if not resp:                continue  # nothin'            print(&quot;Read %d bytes: %s&quot; % (len(resp), resp))            # Now write it!            print(&quot;Writing reverse...&quot;)            send = []            for i in range(len(resp), 0, -1):                send.append(resp[i-1])            print(bytes(send))            bluefruit.uart_tx(bytes(send))        print(&quot;Connection lost.&quot;)Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/bluefruitspi/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_BluefruitSPI/blob/main/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>