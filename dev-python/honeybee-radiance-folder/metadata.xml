<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># honeybee-radiance-folder[![Build Status](https://travis-ci.com/ladybug-tools/honeybee-radiance-folder.svg?branch=master)](https://travis-ci.com/ladybug-tools/honeybee-radiance-folder)[![Coverage Status](https://coveralls.io/repos/github/ladybug-tools/honeybee-radiance-folder/badge.svg?branch=master)](https://coveralls.io/github/ladybug-tools/honeybee-radiance-folder)[![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)](https://www.python.org/downloads/release/python-370/)[![Python 2.7](https://img.shields.io/badge/python-2.7-green.svg)](https://www.python.org/downloads/release/python-270/)[![IronPython](https://img.shields.io/badge/ironpython-2.7-red.svg)](https://github.com/IronLanguages/ironpython2/releases/tag/ipy-2.7.8/)Honeybee Radiance Folder is a Python library to read, write and validate the[Radiance folder structure](https://github.com/ladybug-tools/radiance-folder-structure).# Installation`pip install -U honeybee-radiance-folder`# [API Documentation](https://www.ladybug.tools/honeybee-radiance-folder/docs/)# Usage```python# create a Radiance Model folderimport osfrom honeybee_radiance_folder import ModelFolderrf = 'c:/ladybug/sample_folder'folder = ModelFolder(rf)folder.write(overwrite=True)# check the folders and files created in model folderfor f in os.listdir(folder.model_folder(full=True)):    print(f)``````shellaperturefolder.cfggridscene``````python# load a Radiance folder# in this case we are loading the folder from sample folder in radiance folder repository# you can download it from here# https://github.com/ladybug-tools/radiance-folder-structure/tree/master/project_folderfrom honeybee_radiance_folder import ModelFolderradiance_folder = r'./tests/assets/project_folder'folder = ModelFolder(radiance_folder)# get input files for scenefor f in folder.scene_files(black_out=False, rel_path=True):    print(f)``````shellmodel/scene/context.matmodel/scene/context.radmodel/scene/partition.matmodel/scene/partition.radmodel/scene/partition_glass.matmodel/scene/partition_glass.radmodel/scene/room_envelope.matmodel/scene/room_envelope.rad``````python# and aperturesfor f in folder.aperture_files(black_out=False, rel_path=True):    print(f)``````shellmodel\aperture\aperture.matmodel\aperture\aperture.rad``````python# and finally get aperture groups - south window in this case# and check each statefor count, ap in enumerate(folder.aperture_groups(interior=False)):    print('Aperture group %d: %s' % (count + 1, ap.identifier))    for state in ap.states:        print('- %s: %s' % (state.identifier, state.default))``````shellAperture group 1: south_window- 0_clear: south_window..default..000.rad- 1_diffuse: south_window..default..001.rad```</longdescription>
</pkgmetadata>