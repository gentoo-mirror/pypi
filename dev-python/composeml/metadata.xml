<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;&lt;img width=50% src=&quot;https://raw.githubusercontent.com/alteryx/compose/main/docs/source/images/compose.png&quot; alt=&quot;Compose&quot; /&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;&quot;Build better training examples in a fraction of the time.&quot;&lt;/i&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/alteryx/compose/actions?query=workflow%3ATests&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://github.com/alteryx/compose/workflows/Tests/badge.svg&quot; alt=&quot;Tests&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/alteryx/compose&quot;&gt;        &lt;img src=&quot;https://codecov.io/gh/alteryx/compose/branch/main/graph/badge.svg?token=mDz4ueTUEO&quot;/&gt;    &lt;/a&gt;    &lt;a href=&quot;https://compose.alteryx.com/en/stable/?badge=stable&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://readthedocs.com/projects/feature-labs-inc-compose/badge/?version=stable&amp;token=5c3ace685cdb6e10eb67828a4dc74d09b20bb842980c8ee9eb4e9ed168d05b00&quot;            alt=&quot;ReadTheDocs&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://badge.fury.io/py/composeml&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://badge.fury.io/py/composeml.svg?maxAge=2592000&quot; alt=&quot;PyPI Version&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://stackoverflow.com/questions/tagged/compose-ml&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/questions-on_stackoverflow-blue.svg?&quot; alt=&quot;StackOverflow&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pepy.tech/project/composeml&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://pepy.tech/badge/composeml/month&quot; alt=&quot;PyPI Downloads&quot; /&gt;    &lt;/a&gt;&lt;/p&gt;&lt;hr&gt;[Compose](https://compose.alteryx.com) is a machine learning tool for automated prediction engineering. It allows you to structure prediction problems and generate labels for supervised learning. An end user defines an outcome of interest by writing a *labeling function*, then runs a search to automatically extract training examples from historical data. Its result is then provided to [Featuretools](https://docs.featuretools.com/) for automated feature engineering and subsequently to [EvalML](https://evalml.alteryx.com/) for automated machine learning. The workflow of an applied machine learning engineer then becomes:&lt;br&gt;&lt;p align=&quot;center&quot;&gt;&lt;img width=90% src=&quot;https://raw.githubusercontent.com/alteryx/compose/main/docs/source/images/workflow.png&quot; alt=&quot;Compose&quot; /&gt;&lt;/p&gt;&lt;br&gt;By automating the early stage of the machine learning pipeline, our end user can easily define a task and solve it. See the [documentation](https://compose.alteryx.com) for more information.## InstallationInstall with pip```python -m pip install composeml```or from the Conda-forge channel on [conda](https://anaconda.org/conda-forge/composeml):```conda install -c conda-forge composeml```### Add-ons**Update checker** - Receive automatic notifications of new Compose releases```python -m pip install &quot;composeml[update_checker]&quot;```## Example&gt; Will a customer spend more than 300 in the next hour of transactions?In this example, we automatically generate new training examples from a historical dataset of transactions.```pythonimport composeml as cpdf = cp.demos.load_transactions()df = df[df.columns[:7]]df.head()```&lt;table border=&quot;0&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;transaction_id&lt;/th&gt;      &lt;th&gt;session_id&lt;/th&gt;      &lt;th&gt;transaction_time&lt;/th&gt;      &lt;th&gt;product_id&lt;/th&gt;      &lt;th&gt;amount&lt;/th&gt;      &lt;th&gt;customer_id&lt;/th&gt;      &lt;th&gt;device&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td&gt;298&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2014-01-01 00:00:00&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;127.64&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;desktop&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;10&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2014-01-01 00:09:45&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;57.39&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;desktop&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;495&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2014-01-01 00:14:05&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;69.45&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;desktop&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;460&lt;/td&gt;      &lt;td&gt;10&lt;/td&gt;      &lt;td&gt;2014-01-01 02:33:50&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;123.19&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;tablet&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;302&lt;/td&gt;      &lt;td&gt;10&lt;/td&gt;      &lt;td&gt;2014-01-01 02:37:05&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;      &lt;td&gt;64.47&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;tablet&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;First, we represent the prediction problem with a labeling function and a label maker.```pythondef total_spent(ds):    return ds['amount'].sum()label_maker = cp.LabelMaker(    target_dataframe_index=&quot;customer_id&quot;,    time_index=&quot;transaction_time&quot;,    labeling_function=total_spent,    window_size=&quot;1h&quot;,)```Then, we run a search to automatically generate the training examples.```pythonlabel_times = label_maker.search(    df.sort_values('transaction_time'),    num_examples_per_instance=2,    minimum_data='2014-01-01',    drop_empty=False,    verbose=False,)label_times = label_times.threshold(300)label_times.head()```&lt;table border=&quot;0&quot; class=&quot;dataframe&quot;&gt;  &lt;thead&gt;    &lt;tr style=&quot;text-align: right;&quot;&gt;      &lt;th&gt;customer_id&lt;/th&gt;      &lt;th&gt;time&lt;/th&gt;      &lt;th&gt;total_spent&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2014-01-01 00:00:00&lt;/td&gt;      &lt;td&gt;True&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2014-01-01 01:00:00&lt;/td&gt;      &lt;td&gt;True&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;2014-01-01 00:00:00&lt;/td&gt;      &lt;td&gt;False&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;2014-01-01 01:00:00&lt;/td&gt;      &lt;td&gt;False&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;2014-01-01 00:00:00&lt;/td&gt;      &lt;td&gt;False&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;We now have labels that are ready to use in [Featuretools](https://docs.featuretools.com/) to generate features.## SupportThe Innovation Labs open source community is happy to provide support to users of Compose. Project support can be found in three places depending on the type of question:1. For usage questions, use [Stack Overflow](https://stackoverflow.com/questions/tagged/compose-ml) with the `composeml` tag.2. For bugs, issues, or feature requests start a Github [issue](https://github.com/alteryx/compose/issues/new).3. For discussion regarding development on the core library, use [Slack](https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-NzIn6eiCEf8TBziuKp0bNA).4. For everything else, the core developers can be reached by email at open_source_support@alteryx.com## Citing ComposeCompose is built upon a newly defined part of the machine learning process — prediction engineering. If you use Compose, please consider citing this paper:James Max Kanter, Gillespie, Owen, Kalyan Veeramachaneni. [Label, Segment,Featurize: a cross domain framework for prediction engineering.](https://dai.lids.mit.edu/wp-content/uploads/2017/10/Pred_eng1.pdf) IEEE DSAA 2016.BibTeX entry:```bibtex@inproceedings{kanter2016label,  title={Label, segment, featurize: a cross domain framework for prediction engineering},  author={Kanter, James Max and Gillespie, Owen and Veeramachaneni, Kalyan},  booktitle={2016 IEEE International Conference on Data Science and Advanced Analytics (DSAA)},  pages={430--439},  year={2016},  organization={IEEE}}```## Acknowledgements The open source development has been supported in part by DARPA's Data driven discovery of models program (D3M). ## Alteryx**Compose** is an open source project maintained by [Alteryx](https://www.alteryx.com). We developed Compose to enable flexible definition of the machine learning task. To see the other open source projects we’re working on visit [Alteryx Open Source](https://www.alteryx.com/open-source). If building impactful data science pipelines is important to you or your business, please get in touch.&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://www.alteryx.com/open-source&quot;&gt;    &lt;img src=&quot;https://alteryx-oss-web-images.s3.amazonaws.com/OpenSource_Logo-01.png&quot; alt=&quot;Alteryx Open Source&quot; width=&quot;800&quot;/&gt;  &lt;/a&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>