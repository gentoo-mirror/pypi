<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>*****qTOML*****qtoml is another Python TOML encoder/decoder. I wrote it because I founduiri/toml too unstable, and PyTOML too slow.For information concerning the TOML language, see `toml-lang/toml &lt;https://github.com/toml-lang/toml&gt;`_.qtoml currently supports TOML v0.5.0.Usage=====qtoml is available on `PyPI &lt;https://pypi.org/project/qtoml/&gt;`_. You can installit using pip:.. code:: bash  $ pip install qtomlqtoml supports the standard ``load``/``loads``/``dump``/``dumps`` API common tomost similar modules. Usage:.. code:: pycon  &gt;&gt;&gt; import qtoml  &gt;&gt;&gt; toml_string = &quot;&quot;&quot;  ... test_value = 7  ... &quot;&quot;&quot;  &gt;&gt;&gt; qtoml.loads(toml_string)  {'test_value': 7}  &gt;&gt;&gt; print(qtoml.dumps({'a': 4, 'b': 5.0}))  a = 4  b = 5.0    &gt;&gt;&gt; infile = open('filename.toml', 'r')  &gt;&gt;&gt; parsed_structure = qtoml.load(infile)  &gt;&gt;&gt; outfile = open('new_filename.toml', 'w')  &gt;&gt;&gt; qtoml.dump(parsed_structure, outfile)TOML supports a fairly complete subset of the Python data model, but notablydoes not include a null or ``None`` value. If you have a large dictionary fromsomewhere else including ``None`` values, it can occasionally be useful tosubstitute them on encode:.. code:: pycon  &gt;&gt;&gt; print(qtoml.dumps({ 'none': None }))  qtoml.encoder.TOMLEncodeError: TOML cannot encode None  &gt;&gt;&gt; print(qtoml.dumps({ 'none': None }, encode_none='None'))  none = 'None'The ``encode_none`` value must be a replacement encodable by TOML, such as zeroor a string.This breaks reversibility of the encoding, by rendering ``None`` valuesindistinguishable from literal occurrences of whatever sentinel you chose. Thus,it should not be used when exact representations are critical.Development/testing===================qtoml uses the `poetry &lt;https://github.com/sdispater/poetry&gt;`_ tool for projectmanagement. To check out the project for development, run:.. code:: bash  $ git clone --recurse-submodules https://github.com/alethiophile/qtoml  $ cd qtoml  $ poetry installThis assumes poetry is already installed. The package and dependencies will beinstalled in the currently active virtualenv if there is one, or aproject-specific new one created if not.qtoml is tested against the `alethiophile/toml-test&lt;https://github.com/alethiophile/toml-test&gt;`_ test suite, forked from uiri'sfork of the original by BurntSushi. To run the tests, after checking out theproject as shown above, enter the ``tests`` directory and run:.. code:: bash  $ pytest              # if you already had a virtualenv active  $ poetry run pytest   # if you didn'tLicense=======This project is available under the terms of the MIT license.</longdescription>
</pkgmetadata>