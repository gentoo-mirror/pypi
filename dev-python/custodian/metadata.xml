<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![GitHub license](https://img.shields.io/github/license/materialsproject/custodian)](https://github.com/materialsproject/custodian/blob/main/LICENSE)[![Linting](https://github.com/materialsproject/custodian/workflows/Linting/badge.svg)](https://github.com/materialsproject/custodian/workflows/Linting/badge.svg)[![Testing](https://github.com/materialsproject/custodian/actions/workflows/pytest.yml/badge.svg)](https://github.com/materialsproject/custodian/actions/workflows/pytest.yml)[![Downloads](https://pepy.tech/badge/custodian)](https://pepy.tech/project/custodian)[![codecov](https://codecov.io/gh/materialsproject/custodian/branch/master/graph/badge.svg?token=OwDQVJnghu)](https://codecov.io/gh/materialsproject/custodian)Custodian is a simple, robust and flexible just-in-time (JIT) job managementframework written in Python. Using custodian, you can create wrappers thatperform error checking, job management and error recovery. It has a simpleplugin framework that allows you to develop specific job management workflowsfor different applications.Error recovery is an important aspect of many *high-throughput* projects thatgenerate data on a large scale. When you are running on the order of hundredsof thousands of jobs, even an error-rate of 1% would mean thousands of erroredjobs that would be impossible to deal with on a case-by-case basis.The specific use case for custodian is for long running jobs, with potentiallyrandom errors. For example, there may be a script that takes several days torun on a server, with a 1% chance of some IO error causing the job to fail.Using custodian, one can develop a mechanism to gracefully recover from theerror, and restart the job with modified parameters if necessary.The current version of Custodian also comes with several sub-packages for errorhandling for Vienna Ab Initio Simulation Package (VASP), NwChem, QChem, FEFF, Lobster and CP2Kcalculations.# Getting custodian## Stable versionThe version at the Python Package Index (PyPI) is always the latest stable release that will be hopefully, berelatively bug-free. Install as follows:```shpip install custodian```Some plugins (e.g., VASP management) require additional setup (please see [pymatgen docs]).## Developmental versionThe bleeding edge developmental version is at the custodian's [Github repo](https://github.com/materialsproject/custodian). The developmentalversion is likely to be more buggy, but may contain new features. The Github version include test files as well forcomplete unit testing. After cloning the source, you can type```shpython setup.py install```or to install the package in developmental mode::```shpython setup.py develop```# RequirementsCustodian supports Python 3.8+. There are no other required dependencies. However, if you wish to use many of thebuilt-in error handlers and Jobs for VASP, NWChem, QChem, etc., you will likely need pymatgen to be installed as well.# UsagePlease refer to the official [custodian docs] for details on how to usecustodian.# How to cite custodianIf you use custodian in your research, especially the VASP component, pleaseconsider citing the following work:```Shyue Ping Ong, William Davidson Richards, Anubhav Jain, Geoffroy Hautier,Michael Kocher, Shreyas Cholia, Dan Gunter, Vincent Chevrier, Kristin A.Persson, Gerbrand Ceder. *Python Materials Genomics (pymatgen) : A Robust,Open-Source Python Library for Materials Analysis.* ComputationalMaterials Science, 2013, 68, 314-319. doi:10.1016/j.commatsci.2012.10.028```# LicenseCustodian is released under the MIT License. The terms of the license are asfollows:```txtThe MIT License (MIT)Copyright (c) 2011-2012 MIT &amp; LBNLPermission is hereby granted, free of charge, to any person obtaining acopy of this software and associated documentation files (the &quot;Software&quot;),to deal in the Software without restriction, including without limitationthe rights to use, copy, modify, merge, publish, distribute, sublicense,and/or sell copies of the Software, and to permit persons to whom theSoftware is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISINGFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHERDEALINGS IN THE SOFTWARE.```[pymatgen docs]: http://pymatgen.org/[custodian docs]: https://materialsproject.github.io/custodian/</longdescription>
</pkgmetadata>