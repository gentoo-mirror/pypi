<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Celery Exporter[![Travis CI](https://img.shields.io/travis/OvalMoney/celery-exporter.svg?style=flat)](https://travis-ci.org/OvalMoney/celery-exporter)[![Docker Hub](https://img.shields.io/docker/automated/ovalmoney/celery-exporter.svg?style=flat)](https://hub.docker.com/r/ovalmoney/celery-exporter/)Celery Exporter is a Prometheus metrics exporter for Celery 4, written in python.Here the list of exposed metrics:* `celery_tasks_total` exposes the number of tasks currently known to the queue  labeled by `name`, `state`, `queue` and `namespace`.* `celery_tasks_runtime_seconds` tracks the number of seconds tasks take  until completed as histogram labeled by `name`, `queue` and `namespace`* `celery_tasks_latency_seconds` exposes a histogram of task latency, i.e. the time until  tasks are picked up by a worker* `celery_workers` exposes the number of currently probably alive workers---## Requirements### DependenciesThe project comes with `redis` lib already installed, you have to install any other dependency in case you are using other brokers. ### Celery appCelery workers have to be configured to send task-related events:http://docs.celeryproject.org/en/latest/userguide/configuration.html#worker-send-task-events.Celery Exporter is able to enable events on your workers (see _Command Options_).---## Install and Run### Manual Setup```bash# Install$ pip install celery-exporter# Run$ celery-exporter```### Docker```bash# Download image$ docker pull ovalmoney/celery-exporter# Run it$ docker run -it --rm ovalmoney/celery-exporter```### Command Options```bash$ celery-exporter --helpUsage: celery-exporter [OPTIONS]Options:  -b, --broker-url TEXT      URL to the Celery broker.  [env var:                             CELERY_EXPORTER_BROKER_URL; default:                             redis://redis:6379/0]  -l, --listen-address TEXT  Address the HTTPD should listen on.  [env var:                             CELERY_EXPORTER_LISTEN_ADDRESS; default:                             0.0.0.0:9540]  -m, --max-tasks INTEGER    Tasks cache size.  [env var:                             CELERY_EXPORTER_MAX_TASKS; default: 10000]  -n, --namespace TEXT       Namespace for metrics.  [env var:                             CELERY_EXPORTER_NAMESPACE; default: celery]  --transport-options TEXT   JSON object with additional options passed to the                             underlying transport.  --enable-events            Periodically enable Celery events.  --tz TEXT                  Timezone used by the celery app.  --verbose                  Enable verbose logging.  --version                  Show the version and exit.  --help                     Show this message and exit.```If you then look at the exposed metrics, you should see something like this:```bash# HELP celery_workers Number of alive workers# TYPE celery_workers gaugecelery_workers{namespace=&quot;celery&quot;} 1.0# HELP celery_tasks_total Number of tasks per state# TYPE celery_tasks_total gaugecelery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;RECEIVED&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;PENDING&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;STARTED&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;RETRY&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;FAILURE&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;REVOKED&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;SUCCESS&quot;} 1.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;RECEIVED&quot;} 3.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;PENDING&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;STARTED&quot;} 1.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;RETRY&quot;} 2.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;FAILURE&quot;} 1.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;REVOKED&quot;} 0.0celery_tasks_total{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;,state=&quot;SUCCESS&quot;} 7.0# HELP celery_tasks_runtime_seconds Task runtime (seconds)# TYPE celery_tasks_runtime_seconds histogramcelery_tasks_runtime_seconds_bucket{le=&quot;0.005&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.01&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.025&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.05&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.075&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.1&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.25&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.5&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;0.75&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;1.0&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;2.5&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;5.0&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;7.5&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;10.0&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_bucket{le=&quot;+Inf&quot;,name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_count{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 29.0celery_tasks_runtime_seconds_sum{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 0.04020289977779612celery_tasks_runtime_seconds_bucket{le=&quot;0.005&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.01&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.025&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.05&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.075&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.1&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.25&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.5&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;0.75&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;1.0&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;2.5&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;5.0&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;7.5&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;10.0&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_bucket{le=&quot;+Inf&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_count{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 2.0celery_tasks_runtime_seconds_sum{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 0.00402028997777961# TYPE celery_tasks_runtime_seconds_created gaugecelery_tasks_runtime_seconds_created{name=&quot;my_app.tasks.calculate_something&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 1.548944949810905e+09celery_tasks_runtime_seconds_created{name=&quot;my_app.tasks.fetch_some_data&quot;,namespace=&quot;celery&quot;,queue=&quot;celery&quot;} 1.5489449550243628e+09# HELP celery_tasks_latency_seconds Seconds between a task is received and started.# TYPE celery_tasks_latency_seconds histogramcelery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.005&quot;} 2.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.01&quot;} 3.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.025&quot;} 4.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.05&quot;} 4.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.075&quot;} 5.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.1&quot;} 5.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.25&quot;} 5.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.5&quot;} 5.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;0.75&quot;} 5.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;1.0&quot;} 5.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;2.5&quot;} 8.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;5.0&quot;} 11.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;7.5&quot;} 11.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;10.0&quot;} 11.0celery_tasks_latency_seconds_bucket{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;,le=&quot;+Inf&quot;} 11.0celery_tasks_latency_seconds_count{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;} 11.0celery_tasks_latency_seconds_sum{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;} 16.478713035583496# TYPE celery_task_latency_created gaugecelery_task_latency_seconds_created{namespace=&quot;celery&quot;,name=&quot;my_app.tasks.fetch_some_data&quot;,queue=&quot;celery&quot;} 1.5489449475378375e+09```### Inspired by @zerok workhttps://github.com/zerok/celery-prometheus-exporter</longdescription>
</pkgmetadata>