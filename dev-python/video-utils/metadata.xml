<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Video Utils[![Supported Python Versions](https://img.shields.io/pypi/pyversions/video_utils)](https://pypi.org/project/video_utils/) [![PyPI version](https://badge.fury.io/py/video_utils.svg)](https://badge.fury.io/py/video_utils)[![Workflow](https://github.com/justin8/video_utils/actions/workflows/workflow.yml/badge.svg)](https://github.com/justin8/video_utils/actions/workflows/workflow.yml)[![codecov](https://codecov.io/gh/justin8/video_utils/branch/master/graph/badge.svg)](https://codecov.io/gh/justin8/video_utils)[![Downloads](https://pepy.tech/badge/video_utils/month)](https://pepy.tech/project/video_utils)This library provides utilities for dealing with TV show and Movie files and the metadata around them.## Example Usage```pythonfrom video_utils import FileMapdef run():    f = FileMap(&quot;/path/to/videos&quot;)    f.load() # By default, this will load the cached metadata, and then update files that have changed in size    for directory in f.contents:        for video in f.contents[directory]:            codec = video.codec            print(codec.pretty_name) # x265            print(video.quality) # 1080p            print(video.full_path)            print(video.size) # in bytes            print(video)            video.refresh() # force a refresh of the video metadata, will only occur if filesize has changed.run()```</longdescription>
</pkgmetadata>