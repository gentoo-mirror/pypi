<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Description===========.. image:: https://github.com/mittagessen/kraken/actions/workflows/test.yml/badge.svg    :target: https://github.com/mittagessen/kraken/actions/workflows/test.ymlkraken is a turn-key OCR system optimized for historical and non-Latin scriptmaterial.kraken's main features are:  - Fully trainable layout analysis and character recognition  - `Right-to-Left &lt;https://en.wikipedia.org/wiki/Right-to-left&gt;`_, `BiDi    &lt;https://en.wikipedia.org/wiki/Bi-directional_text&gt;`_, and Top-to-Bottom    script support  - `ALTO &lt;https://www.loc.gov/standards/alto/&gt;`_, PageXML, abbyyXML, and hOCR    output  - Word bounding boxes and character cuts  - Multi-script recognition support  - `Public repository &lt;https://zenodo.org/communities/ocr_models&gt;`_ of model files  - Variable recognition network architectureInstallation============kraken only runs on **Linux or Mac OS X**. Windows is not supported.The latest stable releases can be installed either from `PyPi &lt;https://pypi.org&gt;`_:::  $ pip install krakenor through `conda &lt;https://anaconda.org&gt;`_:::  $ conda install -c conda-forge -c mittagessen krakenIf you want direct PDF and multi-image TIFF/JPEG2000 support it is necessary toinstall the `pdf` extras package for PyPi:::  $ pip install kraken[pdf]or install `pyvips` manually with conda:::  $ conda install -c conda-forge pyvipsConda environment files are provided which for the seamless installation of themain branch as well:::  $ git clone https://github.com/mittagessen/kraken.git   $ cd kraken  $ conda env create -f environment.ymlor:::  $ git clone https://github.com/mittagessen/kraken.git   $ cd kraken  $ conda env create -f environment_cuda.ymlfor CUDA acceleration with the appropriate hardware.Finally you'll have to scrounge up a model to do the actual recognition ofcharacters. To download the default model for printed English text and place itin the kraken directory for the current user:::  $ kraken get 10.5281/zenodo.2577813 A list of libre models available in the central repository can be retrieved byrunning:::  $ kraken listQuickstart==========Recognizing text on an image using the default parameters including theprerequisite steps of binarization and page segmentation:::  $ kraken -i image.tif image.txt binarize segment ocrTo binarize a single image using the nlbin algorithm:::  $ kraken -i image.tif bw.png binarizeTo segment an image (binarized or not) with the new baseline segmenter:::  $ kraken -i image.tif lines.json segment -bl To segment and OCR an image using the default model(s):::  $ kraken -i image.tif image.txt segment -bl ocrAll subcommands and options are documented. Use the ``help`` option to get moreinformation.Documentation=============Have a look at the `docs &lt;https://kraken.re&gt;`_Related Software================These days kraken is quite closely linked to the `escriptorium&lt;https://escriptorium.fr&gt;`_ project developed in the same eScripta researchgroup. eScriptorium provides a user-friendly interface for annotating data,training models, and inference (but also much more). There is a `gitter channel&lt;https://gitter.im/escripta/escriptorium&gt;`_ that is mostly intended forcoordinating technical development but is also a spot to find people withexperience on applying kraken on a wide variety of material.Funding=======kraken is developed at the `École Pratique des Hautes Études &lt;https://www.ephe.psl.eu&gt;`_, `Université PSL &lt;https://www.psl.eu&gt;`_... container:: twocol   .. container::        .. image:: https://raw.githubusercontent.com/mittagessen/kraken/main/docs/_static/normal-reproduction-low-resolution.jpg          :width: 100          :alt: Co-financed by the European Union   .. container::        This project was partially funded through the RESILIENCE project, funded from        the European Union’s Horizon 2020 Framework Programme for Research and        Innovation... container:: twocol   .. container::      .. image:: https://projet.biblissima.fr/sites/default/files/2021-11/biblissima-baseline-sombre-ia.png         :width: 400         :alt: Received funding from the Programme d’investissements d’Avenir   .. container::        Ce travail a bénéficié d’une aide de l’État gérée par l’Agence Nationale de la        Recherche au titre du Programme d’Investissements d’Avenir portant la référence        ANR-21-ESRE-0005 (Biblissima+).</longdescription>
</pkgmetadata>