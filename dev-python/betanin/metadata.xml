<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;&lt;img width=&quot;300&quot; src=&quot;https://github.com/sentriz/betanin/raw/master/.github/logo.png&quot;&gt;&lt;/p&gt;&lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;http://beets.io/&quot;&gt;beets.io&lt;/a&gt; based man-in-the-middle of yourtorrent client and music player&lt;/h4&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;http://hub.docker.com/r/sentriz/betanin&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/sentriz/betanin.svg&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://img.shields.io/github/issues/sentriz/betanin.svg&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/sentriz/betanin.svg&quot;&gt;&lt;/p&gt;&lt;hr&gt;### workflow&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/sentriz/betanin/raw/master/.github/flow.png&quot;&gt;&lt;/p&gt;&lt;hr&gt;### notifiersbetanin uses [apprise](https://github.com/caronc/apprise) fornotifications. so anything supported there will work. but some include- email- discord- telegram- emby&lt;hr&gt;### installation```shellpip install --user betanin```&lt;hr&gt;### usage```shell# start serverbetanin# a config file will be created, add your credentials to it# start againbetanin [--host=&lt;host&gt;] [--port=&lt;port&gt;]# ui will be available at port# you may also use env vars instead, egBETANIN_HOST=0.0.0.0 betaninBETANIN_PORT=4030 betanin# optionally start cli (for db operations, debugging)betanin-shell# or if dockerdocker exec -it &lt;container_id&gt; betanin-shell```&lt;hr&gt;### screenshots&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/sentriz/betanin/raw/master/.github/scrot_1.png&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/sentriz/betanin/raw/master/.github/scrot_2.png&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/sentriz/betanin/raw/master/.github/scrot_3.png&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/sentriz/betanin/raw/master/.github/scrot_4.png&quot;&gt;&lt;/p&gt;&lt;hr&gt;### docker###### image`docker pull sentriz/betanin`###### volumes `/b/.local/share/betanin/` for a persistent database`/b/.config/betanin/` for a persistent betanin config  `/b/.config/beets/` for a persistent beets home (point this to yourcurrent beets home if you have one)  `/music/` so beets can access your music  `/downloads/` so beets can access your downloads###### compose```ymlbetanin:  image: sentriz/betanin  ports:    - 9393:9393  restart: unless-stopped  environment:    - UID=1000 # (optionally) set user id    - GID=1000 # (optionally) set group id  volumes:    - ${DATA}/betanin/data:/b/.local/share/betanin/    - ${DATA}/betanin/config:/b/.config/betanin/    - ${DATA}/betanin/beets:/b/.config/beets/    - ${MEDIA}/music:/music/    - ${MEDIA}/downloads:/downloads/```&lt;hr&gt;### transmissioncreate a script named `done.sh` or anything you like, and make itexecutable:  `chmod +x done.sh`###### settings.json (example excerpt)```json...&quot;script-torrent-done-enabled&quot;: true,&quot;script-torrent-done-filename&quot;: &quot;/scripts/done.sh&quot;,...```###### done script```bash#!/bin/shcurl \    --request POST \    --data-urlencode &quot;path=&lt;path_to_transmission_downloads&gt;&quot; \    --data-urlencode &quot;name=$TR_TORRENT_NAME&quot; \    --header &quot;X-API-Key: &lt;your_api_key&gt;&quot; \    &quot;https://betanin.example.com/api/torrents&quot;```###### transmission docker compose (excerpt)```yamlvolumes:  - ${DATA}/transmission/config:/config  - ${DATA}/transmission/scripts:/scripts  - ${MEDIA}/download:/downloads```&lt;hr&gt;### delugecreate a script named `done.sh` or anything you like, and make itexecutable:  `chmod +x done.sh`  you must also be using the[Execute](https://dev.deluge-torrent.org/wiki/Plugins/Execute) plugin,set to the `Torrent Complete` event###### done script```bash#!/bin/shcurl \    --request POST \    --data-urlencode &quot;path=&lt;path_to_deluge_downloads&gt;&quot; \    --data-urlencode &quot;name=$2&quot; \    --header &quot;X-API-Key: &lt;your_api_key&gt;&quot; \    &quot;https://betanin.example.com/api/torrents&quot;```&lt;hr&gt;### qbittorrentcreate a script named `done.sh` or anything you like, and make itexecutable:  `chmod +x done.sh`open qbittorrent `Tools` &gt; `Options` &gt; check `Run external program on torrent completion`set the path to the above `done.sh` and arguments such as```/path/to/done.sh &quot;%L&quot; &quot;%R&quot;```###### done script```bash#!/bin/shecho &quot;category: $1&quot;echo &quot;path: $2&quot;[ &quot;$1&quot; != &quot;music&quot; ] &amp;&amp; exitcurl \    --request POST \    --data-urlencode &quot;both=$2&quot; \    --header &quot;X-API-Key: &lt;your_api_key&gt;&quot; \    &quot;https://betanin.example.com/api/torrents&quot;```now any music downloaded to the **music** category will be imported by betanin&lt;hr&gt;### developing###### working on the backendthere is not much else to do, write your code,`python -m betanin.entry.betanin`, kill it, write your code, etc. thewebserver will be available at _&lt;http://localhost:9393/&gt;_. the staticfrontend is served at `/`, and the api is served at `/api`. (there is aswagger ui there too) also see `python -m betanin.entry.shell`.  if you need to do a manual migration do`env FLASK_APP='betanin.application:create' flask db migrate --directory betanin_migrations/`(then upgrades are automatically done on betanin start)###### working on the frontendstart the backend with `python -m betanin.entry.betanin`, but donâ€™t usethe static frontend served at _&lt;http://localhost:9393/&gt;_. Instead, in anew shell, do `npm --prefix betanin_client/ run serve` and use thefrontend served at _&lt;http://localhost:8081/&gt;_. it will look for a backendlistening on port 9393 locally. after that you can edit anything in`betanin_client/src`, it will be linted and automatically reflected inyour web browser.</longdescription>
</pkgmetadata>