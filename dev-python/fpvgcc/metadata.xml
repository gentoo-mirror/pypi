<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/fpvgcc.svg?logo=pypi    :target: https://pypi.org/project/fpvgcc.. image:: https://img.shields.io/pypi/pyversions/fpvgcc.svg?logo=pypi    :target: https://pypi.org/project/fpvgcc.. image:: https://img.shields.io/travis/ebs-universe/fpv-gcc.svg?logo=travis    :target: https://travis-ci.org/ebs-universe/fpv-gcc.. image:: https://img.shields.io/coveralls/github/ebs-universe/fpv-gcc.svg?logo=coveralls    :target: https://coveralls.io/github/ebs-universe/fpv-gcc.. image:: https://img.shields.io/requires/github/ebs-universe/fpv-gcc.svg    :target: https://requires.io/github/ebs-universe/fpv-gcc/requirements.. image:: https://img.shields.io/pypi/l/fpvgcc.svg    :target: https://www.gnu.org/licenses/gpl-3.0.en.html.. inclusion-marker-do-not-removeIntroduction------------``fpvgcc`` is a python script/package to help analyse code footprint onembedded microcontrollers using GCC generated Map files.This module uses information contained within ``.map`` files generated bygcc (when invoked with ``-Wl,-Map,out.map``), to provide easilyreadable summaries of static memory usage at various levels of the codehierarchy. This package generates no information that isn't already containedwithin the ``.map`` file.The provided outputs can be used to gain insight into the relative sizes ofincluded code, and aid in prioritizing static memory optimization for verylow memory platforms. Some provided functionality may also deliver minorusability improvements to the workflow involved in parsing though generatedassembly listings... warning::    This package does not attempt to perform any kind of dynamic analysis.    All memory usage reported refers only to **static** memory usage. This    means the size of actual functions and global variables which are    instantiated in the C code itself.    Anything on the call stack, such as function locals, will **not** be    accounted for. Similarly, anything in the heap which is allocated at    runtime using ``malloc`` or similar will **not** be accounted for.    Due to this, the utility of this module is likely limited to code    written for highly memory constrained embedded microcontrollers, where    dynamic memory allocation is anyway avoided when possible.Known Issues------------This script was first written based on the format of mapfilesgenerated by ``msp430-elf-gcc, v4.9.1``. Over time, it was modifed toaccept elements found in mapfiles generated by later versions and gcc-basedtoolchains for other platforms.Still, remember that the file parsing was implemented by observing thecontent of real mapfiles, and not based on a file format specification.Even with toolchains it was written to support, there are large sectionsof the file that are not actually used. Due to this, the outputs generatedare not always accurate. Various boundary conditions result in minor errorsin size reporting.The following more serious issues are known. They should be fixed at somepoint, but for the moment I've chosen to work around them :    - Having two C filenames with the same name (or generating the same      obj name) in your tree will cause parsing to break on some      platforms / toolchains.Project Information-------------------The latest version of the documentation, including installation, usage, andAPI/developer notes can be found at`ReadTheDocs &lt;https://fpv-gcc.readthedocs.io/en/latest/index.html&gt;`_.The latest version of the sources can be found at`GitHub &lt;https://github.com/ebs-universe/fpv-gcc&gt;`_. Please use GitHub's featuresto report bugs, request features, or submit pull/merge requests.The principle author for ``fpvgcc`` is Chintalagiri Shashank. The author canbe contacted if necessary via the information on the`author's github profile &lt;https://github.com/chintal&gt;`_ . See the AUTHORS filefor a full list of collaborators and/or contributing authors, if any.``fpvgcc`` is distributed under the terms of the`GPLv3 license &lt;https://www.gnu.org/licenses/gpl-3.0-standalone.html&gt;`_ .A copy of the text of the license is included along with the sources.</longdescription>
</pkgmetadata>