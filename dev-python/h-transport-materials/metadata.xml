<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># H-transport-materials[![DOI](https://zenodo.org/badge/488195123.svg)](https://zenodo.org/badge/latestdoi/488195123)![CI](https://github.com/RemDelaporteMathurin/h_transport_materials/actions/workflows/ci.yml/badge.svg)[![codecov](https://codecov.io/github/RemDelaporteMathurin/h-transport-materials/branch/main/graph/badge.svg?token=zroa7Y8If6)](https://codecov.io/github/RemDelaporteMathurin/h-transport-materials)## Installation```pip install h-transport-materials```## Usage1. [Access the internal database](#access-the-internal-database)  2. [Add custom properties](#add-custom-properties)  3. [Filters](#filters)  4. [Compute mean values](#compute-mean-values)  5. [Export to BibTeX](#export-to-bibtex)  ### Access the internal database```pythonimport h_transport_materials as htmimport matplotlib.pyplot as plt# filter only tungsten and Hdiffusivities = htm.diffusivities.filter(material=&quot;tungsten&quot;).filter(isotope=&quot;h&quot;)htm.plotting.plot(diffusivities)plt.yscale(&quot;log&quot;)plt.ylabel(&quot;Diffusivity (m$^2$/s)&quot;)plt.legend()plt.show()```![Figure_1](https://user-images.githubusercontent.com/40028739/213814746-9dadb8dc-599e-4004-8135-e496b19fd8bc.png)&gt;### Add custom properties```pythonimport h_transport_materials as htmimport numpy as np# Create a custom propertymy_custom_property = htm.ArrheniusProperty(pre_exp=1e-5, act_energy=0.2)# From (T, y) datamy_fitted_property = htm.ArrheniusProperty(    data_T=[300, 400, 500, 600],    data_y=[1e-8, 1e-7, 1e-6, 1e-5],)print(&quot;Pre-exponential factor: {:.2e}&quot;.format(my_fitted_property.pre_exp))print(&quot;Activation energy: {:.2f} eV&quot;.format(my_fitted_property.act_energy))# Pre-exponential factor: 4.40e-03# Activation energy: 0.35 eV```### Filters```pythonimport h_transport_materials as htm# tungsten solubilitieshtm.solubilities.filter(material=&quot;tungsten&quot;)# copper and cucrzr solubilitieshtm.solubilities.filter(material=[&quot;copper&quot;, &quot;cucrzr&quot;])# all_authors_except_ryabchikovhtm.diffusivities.filter(material=&quot;tungsten&quot;).filter(author=&quot;ryabchikov&quot;, exclude=True)# only Tritiumhtm.diffusivities.filter(isotope=&quot;t&quot;)```### Compute mean values```pythonimport h_transport_materials as htmimport matplotlib.pyplot as plttungsten_diffusivities = htm.diffusivities.filter(material=&quot;tungsten&quot;).filter(    author=[&quot;moore&quot;, &quot;zakharov&quot;], exclude=True)# compute mean diffusivitymean_diffusivity = tungsten_diffusivities.mean()# plothtm.plotting.plot(tungsten_diffusivities, alpha=0.5)htm.plotting.plot(mean_diffusivity, color=&quot;black&quot;, linewidth=3)x_annotation = 0.0034plt.annotate(&quot;mean value&quot;, (x_annotation, mean_diffusivity.value(T=1 / x_annotation)))plt.ylabel(&quot;Diffusivity (m$^2$ s$^{-1}$)&quot;)plt.yscale(&quot;log&quot;)plt.show()```![Figure_1](https://user-images.githubusercontent.com/40028739/169285178-7cccc183-8ae1-4afe-8e4e-af2d54ac8741.svg)### Export to BibTeXThe refernces of properties and properties groups can be exported to a bibfile.```pythonimport h_transport_materials as htmtungsten_diffusivities = htm.diffusivities.filter(material=&quot;tungsten&quot;)tungsten_diffusivities.export_bib(&quot;my_bibfile.bib&quot;)```# ContributionsThe current database is far from complete.[Contributions](https://github.com/RemDelaporteMathurin/h-transport-materials/issues/new) are most welcome to extend it by adding new properties and also new materials!</longdescription>
</pkgmetadata>