<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ethmeetVideo-chat API. Compatible with most famous platforms.## InstallationPip:```shell scriptpip3 install ethmeet```Install Geckodriver:```shell scriptgit clone git@github.com:elleaech/ethmeet.gitpython3 ethmeet/scripts/gecko_install.py```## Docs- [API Reference](https://github.com/elleaech/ethmeet/blob/master/docs/ethmeet.md)### Basic Usage``` pythonfrom ethmeet import (Driver, AttendGoogle, CreateGoogle, LoginGoogle)# SET COMMON DRIVERdriver = Driver()# INSTANCE OBJECTSsadm_login = LoginGoogle(driver = driver())create = CreateGoogle(driver = driver())login = LoginGoogle(driver = driver())attend = AttendGoogle(driver = driver())# SET LOGIN DATAadm_login.login_data = {&quot;some.email@service.com&quot;, &quot;SomePa$$word123&quot;}# IF LOGIN IS SUCCESSFUL, CREATE NEW MEET CODEif adm_login.doLogin():        create.new_meet()# GET LOGIN INPUTlogin.login_data = {}# IF LOGIN IS SUCCESSFUL AND MEET CODE WAS CREATED, GO TO MEETINGif login.doLogin() and create.code != None:        attend.set_meeting_url(create.code)        attend.goto_meet()# CLOSE DRIVERdriver.close()```## Contributing &amp; Issue TrackerBranch &amp; [Pull Request](https://github.com/elleaech/ethmeet/pulls)- [Issues](https://github.com/elleaech/ethmeet/issues)### Get source```shell scriptgit clone git@github.com:elleaech/ethmeet.git &amp;&amp; cd ethmeetpython3 -m virtualenv . &amp;&amp; pip3 install -r requirements.txt```## License[Apache License 2.0](https://github.com/elleaech/ethmeet/blob/master/LICENSE)</longdescription>
</pkgmetadata>