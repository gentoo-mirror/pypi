<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|pypi| |test| |coverage|========pkgcheck========Dependencies============pkgcheck is developed alongside pkgcore_ and snakeoil_. Running pkgcheck fromgit will often require both pkgcore and snakeoil from git as well.For releases, see the required runtime dependencies_.There are also several optional runtime dependencies that add or extend checksupport in various ways if found on the host system including the following:- git_: supports historical queries for git-based repos and commit-related checks- requests_: supports various network-related checks- Gentoo-PerlMod-Version_: supports Perl package version checks- tree-sitter-bash_: used in checks that inspect the CST of ebuilds and  eclasess. Must be language version &gt;= 14.Installing==========Installing latest pypi release::    pip install pkgcheckInstalling from git::    pip install https://github.com/pkgcore/pkgcheck/archive/master.tar.gzInstalling from a tarball::    python setup.py installUsage=====Most users will use pkgcheck on the command line via ``pkgcheck scan`` totarget ebuild repos. See the docs_ or the man page for more information onrunning pkgcheck.It's also possible to run pkgcheck natively from python. For example, to outputthe results for a given ebuild repo:.. code-block:: python    from pkgcheck import scan    for result in scan(['/path/to/ebuild/repo']):        print(result)This allows third party tools written in python to leverage pkgcheck's scanningfunctionality for purposes such as CI or VCS commit support.Tests=====A standalone test runner is integrated in setup.py; to run, just execute::    python setup.py testIn addition, a tox config is provided so the testsuite can be run in avirtualenv setup against all supported python versions. To run tests for allenvironments just execute **tox** in the root directory of a repo or unpackedtarball. Otherwise, for a specific python version execute something similar tothe following::    tox -e py39.. _pkgcore: https://github.com/pkgcore/pkgcore.. _snakeoil: https://github.com/pkgcore/snakeoil.. _dependencies: https://github.com/pkgcore/pkgcheck/blob/master/requirements/install.txt.. _git: https://git-scm.com/.. _requests: https://pypi.org/project/requests/.. _Gentoo-PerlMod-version: https://metacpan.org/release/Gentoo-PerlMod-Version.. _tree-sitter-bash: https://github.com/tree-sitter/tree-sitter-bash.. _docs: https://pkgcore.github.io/pkgcheck/man/pkgcheck.html.. |pypi| image:: https://img.shields.io/pypi/v/pkgcheck.svg    :target: https://pypi.python.org/pypi/pkgcheck.. |test| image:: https://github.com/pkgcore/pkgcheck/workflows/test/badge.svg    :target: https://github.com/pkgcore/pkgcheck/actions?query=workflow%3A%22test%22.. |coverage| image:: https://codecov.io/gh/pkgcore/pkgcheck/branch/master/graph/badge.svg    :target: https://codecov.io/gh/pkgcore/pkgcheck</longdescription>
</pkgmetadata>