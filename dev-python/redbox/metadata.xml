<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Red Box: Advanced Email Box Reader&gt; Next generation email box reader/manager---[![Pypi version](https://badgen.net/pypi/v/redbox)](https://pypi.org/project/redbox/)[![build](https://github.com/Miksus/red-box/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/Miksus/red-box/actions/workflows/main.yml)[![codecov](https://codecov.io/gh/Miksus/red-box/branch/master/graph/badge.svg?token=IMR1CQT9PY)](https://codecov.io/gh/Miksus/red-box)[![Documentation Status](https://readthedocs.org/projects/red-box/badge/?version=latest)](https://red-box.readthedocs.io)[![PyPI pyversions](https://badgen.net/pypi/python/redbox)](https://pypi.org/project/redbox/)## What is it?Red Box is an advanced email box reader library. It is a sister library for [Red Mail, advanced email sender](https://github.com/Miksus/red-mail). It makes managing your email box in Python very easy.Core features:- Easy email searching- Intuitive message manipulation- Intuitive email box manipulationInstall it from PyPI:```shellpip install redbox```## Why Red Box?Imaplib from standard library is complex to use and unintuitive. Red Box makes reading email boxes easy. With Red Box, it is simple as this:```pythonfrom redbox import EmailBox# Create an email box instancebox = EmailBox(host=&quot;localhost&quot;, port=0)# Select an email folderinbox = box['INBOX']# Get emailsemails = inbox.search(    from_=&quot;mikael.koli@example.com&quot;,    subject=&quot;Red Box released&quot;,    unseen=True)```## More ExamplesThere is also a query language for arbitrary search queries:```pythonfrom redbox.query import FROM, UNSEEN, FLAGGEDemails = inbox.search(    FROM('mikael.koli@example.com') &amp; (UNSEEN | FLAGGED))```Red Box also makes reading different parts of the email messageseasy:```python# Get one emailemail = emails[0]# String representation of the messageprint(email.content)# Email contentsprint(email.text_body)print(email.html_body)# Email headersprint(email.from_)print(email.to)print(email.date)```Here is a complete example:```pythonfrom redbox import EmailBoxbox = EmailBox(host=&quot;localhost&quot;, port=0)inbox = box['INBOX']for msg in inbox.search(subject=&quot;example 2&quot;, unseen=True):    # Process the message    print(msg.subject)    print(msg.text_body)    # Set the message as read/seen    msg.read()```---See more from the documentation.If the library helped you save time, consider buying a coffee for the maintainer â˜•.## Author* **Mikael Koli** - [Miksus](https://github.com/Miksus) - koli.mikael@gmail.com</longdescription>
</pkgmetadata>