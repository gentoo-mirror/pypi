<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=====Rescape-Region=====A Django app to support limiting users by geographic regionQuick start-----------1. Add &quot;rescape-region&quot; to your INSTALLED_APPS setting like this::    INSTALLED_APPS = [        ...        'rescape-region',    ]2. Include the polls URLconf in your project urls.py like this::    path('rescape-region/', include('regional.urls')),3. Run `python manage.py migrate` to create the rescape-region models.## InstallationCreate a virtual environment using```bashmkdir ~/.virtualenvspython3 -m venv ~/.virtualenvs/rescape-regionActivate itsource ~/.virtualenvs/rescape-region/bin/activate```#### Install requirementsInstall requirements with latest versions```bash# pur tries to use python 2, so use pip-upgrade insteadpur -r requirements.txt &amp;&amp; $VIRTUAL_ENV/bin/pip3 install --no-cache-dir  --upgrade -r requirements.txt```Add the following to the bottom $VIRTUAL_ENV/bin/activate to setup the PYTHONPATH.Replace the path with your code directory```bashexport RESCAPE_REGION_BASE_DIR=/Users/andy/code/rescape-regionexport RESCAPE_REGION_PROJECT_DIR=$RESCAPE_REGION_BASE_DIR/rescape-regionexport PYTHONPATH=.:$RESCAPE_REGION_BASE_DIR:$RESCAPE_REGION_PROJECT_DIR```## BuildUpdate the version in setup.pyRun to generate build:Update the version with bumpversion, which can't seem to look it up itself but updates setup.pyinstall wheel and bumpversion if needed```pip3 install wheelpip3 install bumpversion``````bashgit commit . -m &quot;Version update&quot; &amp;&amp; git pushbumpversion --current-version {look in setup.py} patch setup.pypython3 setup.py clean sdist bdist_wheel```To distribute to pypi site:Upload package:```bashtwine upload dist/*```All at once:```bashgit commit . -m &quot;Version update&quot; &amp;&amp; git push &amp;&amp; bumpversion --current-version {look in setup.py} patch setup.py &amp;&amp; python3 setup.py clean sdist bdist_wheel &amp;&amp; twine upload dist/*# Without commitbumpversion --current-version {look in setup.py} patch setup.py &amp;&amp; python3 setup.py clean sdist bdist_wheel &amp;&amp; twine upload dist/*```For setup of testpypi see ~/.pypirc or create one according to the testpypi docs:e.g.:[distutils]index-servers=    pypi    testpypi[testpypi]repository: https://test.pypi.org/legacy/username: your username for pypi.org## Running testsCreate a postgres database rescape_region# Login to psql:CREATE DATABASE rescape_region;CREATE USER test_user WITH PASSWORD 'test';GRANT ALL PRIVILEGES ON DATABASE rescape_region to test_user;# Give Superuser permission to create test databaseesALTER ROLE test_user SUPERUSER;# Migrate the database./manage migrate# Create a Django user test with pw testpass ./manage.py createsuperuser # orecho &quot;from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('test', 'test@nowhere.man', 'testpass')&quot; | ./manage.py shell</longdescription>
</pkgmetadata>