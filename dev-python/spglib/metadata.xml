<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>spglib======Python bindings for C library for finding and handling crystalsymmetriesInstallation------------The package is developed on github. You can get the source for thereleased versions from the`repository &lt;https://github.com/spglib/spglib/releases&gt;`__.Note that the Python bindings will link to the system/environmentinstalled Spglib (loaded from :code:`LD_LIBRARY_PATH` or :code:`DYLD_LIBRARY_PATH`),and it will default to a bundled version otherwise. To always use thesystem version of Spglib (e.g. in a lua-module environment) delete thebundled libraries :code:`libsymspg.so*` in the python Spglib installationdirectory.Using package distribution service~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~The easiest way to install python-spglib is to use the pypi package, forwhich numpy is required to be installed before the installation. Acommand to install spglib is:.. code-block:: console    $ pip install spglibConda is another choice:.. code-block:: console    $ conda install -c conda-forge spglibThese packages are made by Pawel T. Jochym.Building from source~~~~~~~~~~~~~~~~~~~~To build from source, make sure you have installed the build requirementsin :code:`pyproject.toml`. Then simply run the following in the current directory... code-block:: console    $ python -m build    $ pip install .To include testing or documentation environments, simply include the relevant extras.. code-block:: console    $ pip install .[test]Running tests~~~~~~~~~~~~~After installing the project with appropriate extras (:code:`testing`), either frompackage manager or from source, simply run :code:`pytest` in the current directoryto test the python bindings.. code-block:: console    $ pytest</longdescription>
</pkgmetadata>