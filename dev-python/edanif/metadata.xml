<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># EDA-NIf (EDA NIfTI)[![Contributor Covenant](https://img.shields.io/badge/contributor%20covenant-v2.0%20adopted-black.svg)](code_of_conduct.md)[![Python Version](https://img.shields.io/badge/python-3.6%2C3.7%2C3.8-black.svg)](code_of_conduct.md)![Pypi Version](https://img.shields.io/pypi/v/edanif.svg)![Code convention](https://img.shields.io/badge/code%20convention-pep8-black)Tool for *Exploratory Data Analysis of Neuroimaging Informatics Technology Initiative(NIfTI) format* &lt;br&gt;`EDA-NIf` creates a dataframe containing meta information of NIfTi file format and provides several useful functions.![](https://github.com/DSDanielPark/EDA-NIf/blob/main/tutorials/result/eda_nif.gif)&lt;br&gt;# Installation  ```cmd  pip install edanif  ```  Beta versions with official documentation are provided starting from major version 1.&lt;Br&gt;&lt;Br&gt;# TutorialWe provide tutorial notebooks for all the features we offer. We plan to provide additional docstrings or documentation from the official distribution version (major version 1 or higher).1. Main-tutorials: https://github.com/DSDanielPark/EDA-NIf/blob/main/tutorials/edanif_tutorial.ipynb2. Sub-tutorial-folder: https://github.com/DSDanielPark/EDA-NIf/tree/main/tutorials&lt;br&gt;# Main Feature  &lt;details&gt;  &lt;summary&gt; See sample data folder tree... &lt;/summary&gt;The sample data folder is designed with an unnecessary and complex structure to show that all nifti files under the top-level folder path are collected recursively. If you are using the [BIDS format](https://bids.neuroimaging.io/), you only need to insert keywords properly.Example folder tree![](https://github.com/DSDanielPark/EDA-NIf/blob/main/tutorials/result/data_tree.png)&lt;/details&gt;&lt;br&gt;### `edanif.eda_nif.meta_df`If you enter only the top-level folder containing nifti files, you can get a data frame for all nifti files.  &lt;br&gt;1. In case of raw nifti files    ```python    import edanif    raw_nifti_folder= '../data/raw_nifti'    df_raw_nii = edanif.meta_df(raw_nifti_folder, 'nii.gz', 'df_raw_nii_meta.csv', False)    ```    result dataframe: https://github.com/DSDanielPark/EDA-NIf/blob/main/tutorials/result/df_raw_nii_meta.csv2. In case of mask nifti files (binary files `only`)    ```python    import edanif    mask_nifti_folder= '../data/mask_nifti'    df_mask_nii = edanif.meta_df(mask_nifti_folder, 'mask.nii.gz', 'df_mask_nii_meta.csv', True)    ```    result dataframe: https://github.com/DSDanielPark/EDA-NIf/blob/main/tutorials/result/df_mask_nii_meta.csv&lt;br&gt;&lt;br&gt;## Features1. edanif.eda_nif &lt;br&gt;  1.1 `count_center_voxel_labels` &lt;br&gt;  1.2 `meta_df`: enter only the top-level folder containing nifti files, you can get a data frame for all nifti files. &lt;br&gt;2. edanif.vis_nif &lt;br&gt;  2.1 `save_nifti_images` &lt;br&gt;3. edanif.utils.util &lt;br&gt;  3.1 `find_all_files` &lt;br&gt;  3.2 `save_print_instance`&lt;br&gt;4. edanif.process.preprocess &lt;br&gt;  4.1 `count_center_voxel_labels`&lt;br&gt;  4.2 `if_minus_return_0`&lt;br&gt;  4.3 `get_nonzero3d`&lt;br&gt;  4.4 `get_nonzero3d_shape` &lt;br&gt;  4.5 `get_hardcrop`&lt;br&gt;  4.6 `threshold_at_two`&lt;br&gt;  4.7 `monai_cropforeground`&lt;br&gt;  4.8 `get_nonzero_xyz_of_nii`&lt;br&gt;5. edanif.process.registration &lt;br&gt;  5.1 `RegistrationMetric`&lt;br&gt;6. edanif.process.resampling &lt;br&gt;  6.1 `make_isotropic`&lt;br&gt;  6.2 `resample_fixedsize_fixedspacing`&lt;br&gt;  6.3 `resampling`&lt;br&gt;7. edanif.process.trans_morph &lt;br&gt;  7.1 `voxel_erosion`&lt;br&gt;  7.2 `voxel_dilation`&lt;br&gt;  7.3 `get_boundary_diff_index`&lt;br&gt;- Feature development and unit testing are ongoing. We will update it whenever time permits.&lt;br&gt;&lt;br&gt;# References[1] NiBabel https://nipy.org/nibabel/ &lt;br&gt;[2] SimpleITK https://simpleitk.org/ &lt;br&gt;[3] MONAI https://monai.io/ &lt;Br&gt;[4] AntsPy https://github.com/ANTsX/ANTsPy&lt;br&gt;### ContactsMaintainer: [Daniel Park, South Korea](https://github.com/DSDanielPark) e-mail parkminwoo1991@gmail.com</longdescription>
</pkgmetadata>