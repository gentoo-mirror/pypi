<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![GitHub Actions status for master branch](https://github.com/gb-libs/pydantic-geojson/actions/workflows/main.yml/badge.svg)](https://github.com/gb-libs/pydantic-geojson/actions?query=workflow%3A%22Python+package%22)[![Latest PyPI package version](https://badge.fury.io/py/pydantic-geojson.svg)](https://pypi.org/project/pydantic-geojson/)[![codecov](https://codecov.io/gh/gb-libs/pydantic-geojson/branch/master/graph/badge.svg?token=8LMKSDQTIR)](https://codecov.io/gh/gb-libs/pydantic-geojson)[![Downloads](https://static.pepy.tech/personalized-badge/pydantic-geojson?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=Downloads)](https://pepy.tech/project/pydantic-geojson)pydantic-geojson üåç===================| GeoJSON Objects    | Status ||--------------------|--------|| Point              | ‚úÖ      || MultiPoint         | ‚úÖ      || LineString         | ‚úÖ      || MultiLineString    | ‚úÖ      || Polygon            | ‚úÖ      || MultiPolygon       | ‚úÖ      || GeometryCollection | ‚úÖ      || Feature            | ‚úÖ      || FeatureCollection  | ‚úÖ      |Installation------------pydantic-geojson is compatible with Python 3.7 and up.The recommended way to install is via [poetry](https://python-poetry.org/):```poetry add pydantic_geojson```Using pip to install is also possible.```pip install pydantic_geojson```GEOJSON-------[GeoJSON](https://geojson.org/) is a format for encoding a variety of geographic data structures.```{    &quot;type&quot;: &quot;Feature&quot;,    &quot;geometry&quot;: {        &quot;type&quot;: &quot;Point&quot;,        &quot;coordinates&quot;: [125.6, 10.1]    },    &quot;properties&quot;: {        &quot;name&quot;: &quot;Dinagat Islands&quot;    }}```GeoJSON supports the following geometry types: Point, LineString, Polygon,MultiPoint, MultiLineString, and MultiPolygon. Geometric objects withadditional properties are Feature objects. Sets of features are contained byFeatureCollection objects.Examples of using-----------------Custom properties:```from pydantic import BaseModelfrom pydantic_geojson import FeatureModelclass MyPropertiesModel(BaseModel):    name: strclass MyFeatureModel(FeatureModel):    properties: MyPropertiesModeldata = {    &quot;type&quot;: &quot;Feature&quot;,    &quot;properties&quot;: {        &quot;name&quot;: &quot;foo name&quot;,    },    &quot;geometry&quot;: {        &quot;type&quot;: &quot;Polygon&quot;,        &quot;coordinates&quot;: [            [                [-80.724878, 35.265454],                [-80.722646, 35.260338]            ]        ]    }}&gt;&gt;&gt; MyFeatureModel(**data)&gt;&gt;&gt; type='Feature' geometry=PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.724878, lat=35.265454), Coordinates(lon=-80.722646, lat=35.260338)]]) properties=MyPropertiesModel(name='foo name')```Point-----Simple example data:```from pydantic_geojson import PointModeldata = {    &quot;type&quot;: &quot;Point&quot;,    &quot;coordinates&quot;: [-105.01621, 39.57422]}&gt;&gt;&gt; PointModel(**data)&gt;&gt;&gt; type='Point' coordinates=Coordinates(lon=-105.01621, lat=39.57422)```MultiPoint----------Simple example data:```from pydantic_geojson import MultiPointModeldata = {    &quot;type&quot;: &quot;MultiPoint&quot;,    &quot;coordinates&quot;: [        [-105.01621, 39.57422],        [-80.666513, 35.053994]    ]}&gt;&gt;&gt; PointModel(**data)&gt;&gt;&gt; type='MultiPoint' coordinates=[Coordinates(lon=-105.01621, lat=39.57422), Coordinates(lon=-80.666513, lat=35.053994)]```LineString----------Simple example data:```from pydantic_geojson import LineStringModeldata = {    &quot;type&quot;: &quot;LineString&quot;,    &quot;coordinates&quot;: [        [-99.113159, 38.869651],        [-99.0802, 38.85682],        [-98.822021, 38.85682],        [-98.448486, 38.848264]    ]}&gt;&gt;&gt; LineStringModel(**data)&gt;&gt;&gt; type='LineString' coordinates=[Coordinates(lon=-99.113159, lat=38.869651), Coordinates(lon=-99.0802, lat=38.85682), Coordinates(lon=-98.822021, lat=38.85682), Coordinates(lon=-98.448486, lat=38.848264)]```MultiLineString---------------Simple example data:```from pydantic_geojson import MultiLineStringModeldata = {    &quot;type&quot;: &quot;MultiLineString&quot;,    &quot;coordinates&quot;: [        [            [-105.019898, 39.574997],            [-105.019598, 39.574898],            [-105.019061, 39.574782]        ],        [            [-105.017173, 39.574402],            [-105.01698, 39.574385],            [-105.016636, 39.574385],            [-105.016508, 39.574402],            [-105.01595, 39.57427]        ],        [            [-105.014276, 39.573972],            [-105.014126, 39.574038],            [-105.013825, 39.57417],            [-105.01331, 39.574452]        ]    ]}&gt;&gt;&gt; MultiLineStringModel(**data)&gt;&gt;&gt; type='MultiLineString' coordinates=[[Coordinates(lon=-105.019898, lat=39.574997), Coordinates(lon=-105.019598, lat=39.574898), Coordinates(lon=-105.019061, lat=39.574782)], [Coordinates(lon=-105.017173, lat=39.574402), Coordinates(lon=-105.01698, lat=39.574385), Coordinates(lon=-105.016636, lat=39.574385), Coordinates(lon=-105.016508, lat=39.574402), Coordinates(lon=-105.01595, lat=39.57427)], [Coordinates(lon=-105.014276, lat=39.573972), Coordinates(lon=-105.014126, lat=39.574038), Coordinates(lon=-105.013825, lat=39.57417), Coordinates(lon=-105.01331, lat=39.574452)]]```Polygon-------Simple example data:```from pydantic_geojson import PolygonModeldata = {    &quot;type&quot;: &quot;Polygon&quot;,    &quot;coordinates&quot;: [        [            [100, 0],            [101, 0],            [101, 1],            [100, 1],            [100, 0]        ]    ]}&gt;&gt;&gt; PolygonModel(**data)&gt;&gt;&gt; type='Polygon' coordinates=[[Coordinates(lon=100.0, lat=0.0), Coordinates(lon=101.0, lat=0.0), Coordinates(lon=101.0, lat=1.0), Coordinates(lon=100.0, lat=1.0), Coordinates(lon=100.0, lat=0.0)]]```MultiPolygon------------Simple example data:```from pydantic_geojson import MultiPolygonModeldata = {    &quot;type&quot;: &quot;MultiPolygon&quot;,    &quot;coordinates&quot;: [        [            [                [107, 7],                [108, 7],                [108, 8],                [107, 8],                [107, 7]            ]        ],        [            [                [100, 0],                [101, 0],                [101, 1],                [100, 1],                [100, 0]            ]        ]    ]}&gt;&gt;&gt; MultiPolygonModel(**data)&gt;&gt;&gt; type='MultiPolygon' coordinates=[[[Coordinates(lon=107.0, lat=7.0), Coordinates(lon=108.0, lat=7.0), Coordinates(lon=108.0, lat=8.0), Coordinates(lon=107.0, lat=8.0), Coordinates(lon=107.0, lat=7.0)]], [[Coordinates(lon=100.0, lat=0.0), Coordinates(lon=101.0, lat=0.0), Coordinates(lon=101.0, lat=1.0), Coordinates(lon=100.0, lat=1.0), Coordinates(lon=100.0, lat=0.0)]]]```GeometryCollection------------------Simple example data:```from pydantic_geojson import GeometryCollectionModeldata = {    &quot;type&quot;: &quot;GeometryCollection&quot;,    &quot;geometries&quot;: [        {            &quot;type&quot;: &quot;Point&quot;,            &quot;coordinates&quot;: [-80.660805, 35.049392]        },        {            &quot;type&quot;: &quot;Polygon&quot;,            &quot;coordinates&quot;: [                [                    [-80.664582, 35.044965],                    [-80.663874, 35.04428],                    [-80.662586, 35.04558],                    [-80.663444, 35.046036],                    [-80.664582, 35.044965]                ]            ]        },        {            &quot;type&quot;: &quot;LineString&quot;,            &quot;coordinates&quot;: [                [-80.662372, 35.059509],                [-80.662693, 35.059263],                [-80.662844, 35.05893]            ]        }    ]}&gt;&gt;&gt; GeometryCollectionModel(**data)&gt;&gt;&gt; type='GeometryCollection' geometries=[PointModel(type='Point', coordinates=Coordinates(lon=-80.660805, lat=35.049392)), PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.664582, lat=35.044965), Coordinates(lon=-80.663874, lat=35.04428), Coordinates(lon=-80.662586, lat=35.04558), Coordinates(lon=-80.663444, lat=35.046036), Coordinates(lon=-80.664582, lat=35.044965)]]), LineStringModel(type='LineString', coordinates=[Coordinates(lon=-80.662372, lat=35.059509), Coordinates(lon=-80.662693, lat=35.059263), Coordinates(lon=-80.662844, lat=35.05893)])]```Feature-------Simple example data:```from pydantic_geojson import FeatureModeldata = {    &quot;type&quot;: &quot;Feature&quot;,    &quot;geometry&quot;: {        &quot;type&quot;: &quot;Polygon&quot;,        &quot;coordinates&quot;: [            [                [-80.724878, 35.265454],                [-80.722646, 35.260338],                [-80.720329, 35.260618],                [-80.71681, 35.255361],                [-80.704793, 35.268397],                [-82.715179, 35.267696],                [-80.721359, 35.267276],                [-80.724878, 35.265454]            ]        ]    }}&gt;&gt;&gt; FeatureModel(**data)&gt;&gt;&gt; type='Feature' geometry=PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.724878, lat=35.265454), Coordinates(lon=-80.722646, lat=35.260338), Coordinates(lon=-80.720329, lat=35.260618), Coordinates(lon=-80.71681, lat=35.255361), Coordinates(lon=-80.704793, lat=35.268397), Coordinates(lon=-82.715179, lat=35.267696), Coordinates(lon=-80.721359, lat=35.267276), Coordinates(lon=-80.724878, lat=35.265454)]])```FeatureCollection-----------------Simple example data:```from pydantic_geojson import FeatureCollectionModeldata = {    &quot;type&quot;: &quot;FeatureCollection&quot;,    &quot;features&quot;: [        {            &quot;type&quot;: &quot;Feature&quot;,            &quot;geometry&quot;: {                &quot;type&quot;: &quot;Point&quot;,                &quot;coordinates&quot;: [-80.870885, 35.215151]            }        },        {            &quot;type&quot;: &quot;Feature&quot;,            &quot;geometry&quot;: {                &quot;type&quot;: &quot;Polygon&quot;,                &quot;coordinates&quot;: [                    [                        [-80.724878, 35.265454],                        [-80.722646, 35.260338],                        [-80.720329, 35.260618],                        [-80.704793, 35.268397],                        [-80.724878, 35.265454]                    ]                ]            }        }    ]}&gt;&gt;&gt; FeatureCollectionModel(**data)&gt;&gt;&gt; type='FeatureCollection' features=[FeatureModel(type='Feature', geometry=PointModel(type='Point', coordinates=Coordinates(lon=-80.870885, lat=35.215151))), FeatureModel(type='Feature', geometry=PolygonModel(type='Polygon', coordinates=[[Coordinates(lon=-80.724878, lat=35.265454), Coordinates(lon=-80.722646, lat=35.260338), Coordinates(lon=-80.720329, lat=35.260618), Coordinates(lon=-80.704793, lat=35.268397), Coordinates(lon=-80.724878, lat=35.265454)]]))]```</longdescription>
</pkgmetadata>