<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Installs a WSGI application in place of a real host for testing.Introduction============Testing a WSGI application sometimes involves starting a server at alocal host and port, then pointing your test code to that address.Instead, this library lets you intercept calls to any specific host/portcombination and redirect them into a `WSGI application`_ importable byyour test program. Thus, you can avoid spawning multiple processes orthreads to test your Web app.Supported Libaries==================``wsgi_intercept`` works with a variety of HTTP clients in Python 2.7,3.5 and beyond, and in pypy.* urllib2* urllib.request* httplib* http.client* httplib2* requests* urllib3How Does It Work?=================``wsgi_intercept`` works by replacing ``httplib.HTTPConnection`` with asubclass, ``wsgi_intercept.WSGI_HTTPConnection``. This class thenredirects specific server/port combinations into a WSGI application byemulating a socket. If no intercept is registered for the host and portrequested, those requests are passed on to the standard handler.The easiest way to use an intercept is to import an appropriate subclassof ``~wsgi_intercept.interceptor.Interceptor`` and use that as acontext manager over web requests that use the library associated withthe subclass. For example::    import httplib2    from wsgi_intercept.interceptor import Httplib2Interceptor    from mywsgiapp import app    def load_app():        return app    http = httplib2.Http()    with Httplib2Interceptor(load_app, host='example.com', port=80) as url:        response, content = http.request('%s%s' % (url, '/path'))        assert response.status == 200The interceptor class may aslo be used directly to install intercepts.See the module documentation for more information.Older versions required that the functions ``add_wsgi_intercept(host,port, app_create_fn, script_name='')`` and ``remove_wsgi_intercept(host,port)``be used to specify which URLs should be redirected into what applications.These methods are still available, but the ``Interceptor`` classes are likelyeasier to use for most use cases... note:: ``app_create_fn`` is a *function object* returning a WSGI          application; ``script_name`` becomes ``SCRIPT_NAME`` in the WSGI          app's environment, if set... note:: If ``http_proxy`` or ``https_proxy`` is set in the environment          this can cause difficulties with some of the intercepted libraries.          If requests or urllib is being used, these will raise an exception          if one of those variables is set... note:: If ``wsgi_intercept.STRICT_RESPONSE_HEADERS`` is set to ``True``          then response headers sent by an application will be checked to          make sure they are of the type ``str`` native to the version of          Python, as required by pep 3333. The default is ``False`` (to          preserve backwards compatibility)Install=======::    pip install -U wsgi_interceptPackages Intercepted====================Unfortunately each of the HTTP client libraries use their own specificmechanism for making HTTP call-outs, so individual implementations areneeded. At this time there are implementations for ``httplib2``,``urllib3`` and ``requests`` in both Python 2 and 3, ``urllib2`` and``httplib`` in Python 2 and ``urllib.request`` and ``http.client``in Python 3.If you are using Python 2 and need support for a different HTTPclient, require a version of ``wsgi_intercept&lt;0.6``. Earlier versionsinclude support for ``webtest``, ``webunit`` and ``zope.testbrowser``.The best way to figure out how to use interception is to inspect`the tests`_. More comprehensive documentation available uponrequest... _the tests: https://github.com/cdent/wsgi-intercept/tree/master/testHistory=======Pursuant to Ian Bicking's `&quot;best Web testing framework&quot;`_ post, TitusBrown put together an `in-process HTTP-to-WSGI interception mechanism`_for his own Web testing system, twill. Because the mechanism is prettygeneric -- it works at the httplib level -- Titus decided to try addingit into all of the *other* Python Web testing frameworks.The Python 2 version of wsgi-intercept was the result. Kumar McMillanlater took over maintenance.The current version is tested with Python 2.7, 3.5-3.11, and pypy and pypy3.It was assembled by `Chris Dent`_. Testing and documentation improvementsfrom `Sasha Hart`_... _&quot;best Web testing framework&quot;:     http://blog.ianbicking.org/best-of-the-web-app-test-frameworks.html.. _in-process HTTP-to-WSGI interception mechanism:     http://www.advogato.org/person/titus/diary.html?start=119.. _WSGI application: http://www.python.org/peps/pep-3333.html.. _Chris Dent: https://github.com/cdent.. _Sasha Hart: https://github.com/sashahartProject Home============This project lives on `GitHub`_. Please submit all bugs, patches,failing tests, et cetera using the Issue Tracker.Additional documentation is available on `Read The Docs`_... _GitHub: http://github.com/cdent/wsgi-intercept.. _Read The Docs: http://wsgi-intercept.readthedocs.org/en/latest/</longdescription>
</pkgmetadata>