<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://github.com/hukkinj1/cosmospy/workflows/Tests/badge.svg?branch=master)](https://github.com/hukkinj1/cosmospy/actions?query=workflow%3ATests+branch%3Amaster+event%3Apush)[![codecov.io](https://codecov.io/gh/hukkinj1/cosmospy/branch/master/graph/badge.svg)](https://codecov.io/gh/hukkinj1/cosmospy)[![PyPI version](https://img.shields.io/pypi/v/cosmospy)](https://pypi.org/project/cosmospy)# cosmospy&lt;!--- Don't edit the version line below manually. Let bump2version do it for you. --&gt;&gt; Version 6.0.0&gt; Tools for Cosmos wallet management and offline transaction signing**Table of Contents**  *generated with [mdformat-toc](https://github.com/hukkinj1/mdformat-toc)*&lt;!-- mdformat-toc start --slug=github --maxlevel=6 --minlevel=2 --&gt;- [Installing](#installing)- [Usage](#usage)  - [Generating a wallet](#generating-a-wallet)  - [Converter functions](#converter-functions)    - [Mnemonic seed to private key](#mnemonic-seed-to-private-key)    - [Private key to public key](#private-key-to-public-key)    - [Public key to address](#public-key-to-address)    - [Private key to address](#private-key-to-address)  - [Signing transactions](#signing-transactions)&lt;!-- mdformat-toc end --&gt;## Installing&lt;a name=&quot;installing&quot;&gt;&lt;/a&gt;Installing from PyPI repository (https://pypi.org/project/cosmospy):```bashpip install cosmospy```## Usage&lt;a name=&quot;usage&quot;&gt;&lt;/a&gt;### Generating a wallet&lt;a name=&quot;generating-a-wallet&quot;&gt;&lt;/a&gt;```pythonfrom cosmospy import generate_walletwallet = generate_wallet()```The value assigned to `wallet` will be a dictionary just like:```python{    &quot;seed&quot;: &quot;arch skill acquire abuse frown reject front second album pizza hill slogan guess random wonder benefit industry custom green ill moral daring glow elevator&quot;,    &quot;derivation_path&quot;: &quot;m/44'/118'/0'/0/0&quot;,    &quot;private_key&quot;: b&quot;\xbb\xec^\xf6\xdcg\xe6\xb5\x89\xed\x8cG\x05\x03\xdf0:\xc9\x8b \x85\x8a\x14\x12\xd7\xa6a\x01\xcd\xf8\x88\x93&quot;,    &quot;public_key&quot;: b&quot;\x03h\x1d\xae\xa7\x9eO\x8e\xc5\xff\xa3sAw\xe6\xdd\xc9\xb8b\x06\x0eo\xc5a%z\xe3\xff\x1e\xd2\x8e5\xe7&quot;,    &quot;address&quot;: &quot;cosmos1uuhna3psjqfxnw4msrfzsr0g08yuyfxeht0qfh&quot;,}```### Converter functions&lt;a name=&quot;converter-functions&quot;&gt;&lt;/a&gt;#### Mnemonic seed to private key&lt;a name=&quot;mnemonic-seed-to-private-key&quot;&gt;&lt;/a&gt;```pythonfrom cosmospy import BIP32DerivationError, seed_to_privkeyseed = (    &quot;teach there dream chase fatigue abandon lava super senior artefact close upgrade&quot;)try:    privkey = seed_to_privkey(seed, path=&quot;m/44'/118'/0'/0/0&quot;)except BIP32DerivationError:    print(&quot;No valid private key in this derivation path!&quot;)```#### Private key to public key&lt;a name=&quot;private-key-to-public-key&quot;&gt;&lt;/a&gt;```pythonfrom cosmospy import privkey_to_pubkeyprivkey = bytes.fromhex(    &quot;6dcd05d7ac71e09d3cf7da666709ebd59362486ff9e99db0e8bc663570515afa&quot;)pubkey = privkey_to_pubkey(privkey)```#### Public key to address&lt;a name=&quot;public-key-to-address&quot;&gt;&lt;/a&gt;```pythonfrom cosmospy import pubkey_to_addresspubkey = bytes.fromhex(    &quot;03e8005aad74da5a053602f86e3151d4f3214937863a11299c960c28d3609c4775&quot;)addr = pubkey_to_address(pubkey)```#### Private key to address&lt;a name=&quot;private-key-to-address&quot;&gt;&lt;/a&gt;```pythonfrom cosmospy import privkey_to_addressprivkey = bytes.fromhex(    &quot;6dcd05d7ac71e09d3cf7da666709ebd59362486ff9e99db0e8bc663570515afa&quot;)addr = privkey_to_address(privkey)```### Signing transactions&lt;a name=&quot;signing-transactions&quot;&gt;&lt;/a&gt;```pythonfrom cosmospy import Transactiontx = Transaction(    privkey=bytes.fromhex(        &quot;26d167d549a4b2b66f766b0d3f2bdbe1cd92708818c338ff453abde316a2bd59&quot;    ),    account_num=11335,    sequence=0,    fee=1000,    gas=70000,    memo=&quot;&quot;,    chain_id=&quot;cosmoshub-3&quot;,    sync_mode=&quot;sync&quot;,)tx.add_transfer(    recipient=&quot;cosmos103l758ps7403sd9c0y8j6hrfw4xyl70j4mmwkf&quot;, amount=387000)tx.add_transfer(recipient=&quot;cosmos1lzumfk6xvwf9k9rk72mqtztv867xyem393um48&quot;, amount=123)pushable_tx = tx.get_pushable()```One or more token transfers can be added to a transaction by calling the `add_transfer` method.When the transaction is fully prepared, calling `get_pushable` will return a signed transaction in the form of a JSON string.This can be used as request body when calling the `POST /txs` endpoint of the [Cosmos REST API](https://cosmos.network/rpc).</longdescription>
</pkgmetadata>