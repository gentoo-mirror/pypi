<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt; IntelliProve Python SDK&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/dm/intelliprove&quot; /&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/intelliprove&quot; /&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/intelliprove?label=version&quot; /&gt;&lt;/div&gt;# Requirements- Python ^3.9# Installation```pip install intelliprove```# DocumentationYou can find our SDK documentation [here](https://docs.intelliprove.com/sdk-docs).# Release Notes- [1.2](#12)## 1.2### New features- Added `UnprocessableVideoResponse` model and `VideoProcessingFailedException` exception:&gt; The new model `UnprocessableVideoResponse` provides extra information about why a certain video did not successfully process. \&gt; This new information is returned inside the new `VideoProcessingFailedException` exception, which gets throw from the `get_results` method.### Updates- Refactor of `Quality` dataclass:&gt; The following properties for the `Quality` model have been renamed:&gt; - `message` =&gt; `prompt`### ~~Deprecated features~~### How to Upgrade1. Ensure you are using the new property `prompt` from the `Quality` model2. Ensure you catch the new `VideoProcessingFailedException` when calling the `get_results` method. Additionally you can read out the `response` property of this exception to provide feedback to the end-user.&lt;br&gt;## Example usage```pythonimport osfrom pathlib import Pathfrom intelliprove.api import IntelliproveApi, IntelliproveApiSettings, Biomarkers, Quality# define api key and settingsapikey = os.environ.get('apikey')settings = IntelliproveApiSettings(    base_url='')# init apiapi = IntelliproveApi(apikey, settings)# define the path of the video you want to uploadvideo_path = Path('./mydir/example.mp4')image_path = Path('./mydir/example.png')# manually check quality of a video of imagequality: Quality = api.check_conditions(video_path)quality: Quality = api.check_conditions(image_path)# Optional: define the performer and patientperformer: str = 'performer-a'patient: str = 'patient-1'# upload video to IntelliProve# performer and patient are optionaluuid: str = api.upload(video_path)# oruuid: str = api.upload(video_path, performer=performer, patient=patient)# get the results of the uploaded videoresults: Biomarkers = api.get_results(uuid)```### Dataclasses- Biomarkers  - contains the results of an uploaded video- Quality  - contains the quality parameters of a video or image### Exceptions- ImageQualityException- MediaException- InvalidUuidException- VideoProcessingFailedException- ApiException  - ApiNotFoundException  - ApiForbiddenException  - ApiErrorException  - ApiResultNotAvailable</longdescription>
</pkgmetadata>