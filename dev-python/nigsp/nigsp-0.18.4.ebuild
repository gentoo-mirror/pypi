# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A python library (and toolbox!) to run Graph Signal Processing on multimodal MRI data."

HOMEPAGE="https://github.com/MIPLabCH/nigsp"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all dev devtools doc mat nifti style test viz"
DEPENDENCIES=">=dev-python/numpy-1.17[${PYTHON_USEDEP}]
	dev-python/duecredit[${PYTHON_USEDEP}]
	all? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	all? ( dev-python/pymatreader[${PYTHON_USEDEP}] )
	all? ( dev-python/scipy[${PYTHON_USEDEP}] )
	all? ( >=dev-python/matplotlib-3.1.1[${PYTHON_USEDEP}] )
	all? ( dev-python/nilearn[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-python/furo[${PYTHON_USEDEP}] )
	dev? ( dev-python/memory-profiler[${PYTHON_USEDEP}] )
	dev? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	dev? ( dev-python/numpydoc[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/sphinx-2.0[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx-argparse[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinxcontrib-apidoc[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinxcontrib-bibtex[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx_design[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx-gallery[${PYTHON_USEDEP}] )
	dev? ( dev-python/sphinx-issues[${PYTHON_USEDEP}] )
	dev? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	dev? ( dev-python/pymatreader[${PYTHON_USEDEP}] )
	dev? ( dev-python/scipy[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/matplotlib-3.1.1[${PYTHON_USEDEP}] )
	dev? ( dev-python/nilearn[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/flake8-4.0[${PYTHON_USEDEP}] )
	dev? ( <dev-python/black-23.0.0[${PYTHON_USEDEP}] )
	dev? ( <dev-python/isort-6.0.0[${PYTHON_USEDEP}] )
	dev? ( dev-python/pydocstyle[${PYTHON_USEDEP}] )
	dev? ( dev-python/codespell[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/pytest-5.3[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	dev? ( dev-python/coverage[${PYTHON_USEDEP}] )
	devtools? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	doc? ( dev-python/furo[${PYTHON_USEDEP}] )
	doc? ( dev-python/memory-profiler[${PYTHON_USEDEP}] )
	doc? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	doc? ( dev-python/numpydoc[${PYTHON_USEDEP}] )
	doc? ( >=dev-python/sphinx-2.0[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-argparse[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinxcontrib-apidoc[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinxcontrib-bibtex[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-copybutton[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx_design[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-gallery[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-issues[${PYTHON_USEDEP}] )
	mat? ( dev-python/pymatreader[${PYTHON_USEDEP}] )
	mat? ( dev-python/scipy[${PYTHON_USEDEP}] )
	nifti? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	style? ( >=dev-python/flake8-4.0[${PYTHON_USEDEP}] )
	style? ( <dev-python/black-23.0.0[${PYTHON_USEDEP}] )
	style? ( <dev-python/isort-6.0.0[${PYTHON_USEDEP}] )
	style? ( dev-python/pydocstyle[${PYTHON_USEDEP}] )
	style? ( dev-python/codespell[${PYTHON_USEDEP}] )
	test? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	test? ( dev-python/pymatreader[${PYTHON_USEDEP}] )
	test? ( dev-python/scipy[${PYTHON_USEDEP}] )
	test? ( >=dev-python/matplotlib-3.1.1[${PYTHON_USEDEP}] )
	test? ( dev-python/nilearn[${PYTHON_USEDEP}] )
	test? ( >=dev-python/flake8-4.0[${PYTHON_USEDEP}] )
	test? ( <dev-python/black-23.0.0[${PYTHON_USEDEP}] )
	test? ( <dev-python/isort-6.0.0[${PYTHON_USEDEP}] )
	test? ( dev-python/pydocstyle[${PYTHON_USEDEP}] )
	test? ( dev-python/codespell[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pytest-5.3[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/coverage[${PYTHON_USEDEP}] )
	viz? ( >=dev-python/matplotlib-3.1.1[${PYTHON_USEDEP}] )
	viz? ( dev-python/nilearn[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
