<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>DeepSMILES==========This Python module can convert well-formed SMILES (that is, as writen by a cheminformatics toolkit) to DeepSMILES. It also does the reverse conversion.Install the latest version with::  pip install --upgrade deepsmilesDeepSMILES is a SMILES-like syntax suited to machine learning. Rings are indicated using a single symbol instead of two, while branches do not use matching parentheses but rather use a right parenthesis as a 'pop' operator.For example, benzene is `c1ccccc1` in SMILES but `cccccc6` in DeepSMILES (where the `6` indicates the ring size). As a branch example, the SMILES `C(Br)(OC)I` can be converted to the DeepSMILES `CBr)OC))I`. For more information, please see the corresponding preprint.The library is used as follows:.. code-block:: python        import deepsmiles        print(&quot;DeepSMILES version: %s&quot; % deepsmiles.__version__)        converter = deepsmiles.Converter(rings=True, branches=True)        print(converter) # record the options used        encoded = converter.encode(&quot;c1cccc(C(=O)Cl)c1&quot;)        print(&quot;Encoded: %s&quot; % encoded)        try:            decoded = converter.decode(encoded)        except deepsmiles.DecodeError as e:            decoded = None            print(&quot;DecodeError! Error message was '%s'&quot; % e.message)        if decoded:            print(&quot;Decoded: %s&quot; % decoded)</longdescription>
</pkgmetadata>