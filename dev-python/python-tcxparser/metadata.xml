<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-tcxparser================.. sidebar:: Build Status   :master: |master-status|.. image:: https://pyup.io/repos/github/vkurup/python-tcxparser/shield.svg   :target: https://pyup.io/repos/github/vkurup/python-tcxparser/   :alt: Requirement Updates.. image:: https://img.shields.io/fedora/v/python3-tcxparser?color=blue&amp;label=Fedora%20Linux&amp;logo=fedora   :target: https://src.fedoraproject.org/rpms/python-tcxparser   :alt: Fedora package.. |master-status| image::    https://github.com/vkurup/python-tcxparser/workflows/lint-test/badge.svg?branch=master    :alt: Build Status    :target: https://github.com/vkurup/python-tcxparser/actions?query=branch%3Amasterpython-tcxparser is a minimal parser for Garmin's TCX file format. Itis not in any way exhaustive.Data extracted: - latitude &amp; longitude of start point of workout - type of workout (running, walking, etc) - time of completion of workout (in ISO UTC) - distance of workout (in meters) - duration of workout (in seconds) - calories burned during workout (as estimated by device) - average, max and min heart rate during workout - average pace during workout - average altitude during workout - ascent and descent of workout - max and min altitude - time stamp of each data point (in ISO UTC) - average and max cadence (cycling activities) - percentage and time spent in heart rate zone - average and max power - total steps (also strokes)Installation------------Install it from PyPI::   pip install python-tcxparserUsage-----Basic usage example::    &gt;&gt;&gt; import tcxparser    &gt;&gt;&gt; tcx = tcxparser.TCXParser('/home/vinod/Downloads/20121226-212953.tcx')    &gt;&gt;&gt; # Duration of workout in seconds    ... tcx.duration    1992.78    &gt;&gt;&gt; # latitude/longitude at start of workout    ... tcx.latitude    35.951880198    &gt;&gt;&gt; tcx.longitude    -79.0931872185    &gt;&gt;&gt; tcx.activity_type    'running'    &gt;&gt;&gt; # ISO UTC timestamp when workout completed    ... tcx.completed_at    '2012-12-26T22:03:05Z'    &gt;&gt;&gt; # distance of workout in meters    ... tcx.distance    4686.31103516    &gt;&gt;&gt; tcx.distance_units    'meters'    &gt;&gt;&gt; # calories burned (as reported by device)    ... tcx.calories    379    &gt;&gt;&gt; # percentage of workout spent in each user-defined heart rate zone    ... tcx.hr_percent_in_zones({&quot;Z0&quot;: (0, 99), &quot;Z1&quot;: (100, 129), &quot;Z2&quot;: (130, 200)})    {&quot;Z0&quot;: 14, &quot;Z1&quot;: 36, &quot;Z2&quot;: 50}Compatibility-------------* Python 3.7+, see `tox.ini`_... _tox.ini: tox.iniLicense-------* BSDMaintainer Information----------------------We use Github Actions to lint (using pre-commit, black, isort, and flake8),test (using tox and tox-gh-actions), and calculate coverage (using coverage).We have a local script to do these actions locally, named ``maintain.sh``::  $ ./maintain.shA Github Action workflow also builds and pushes a new package to PyPI whenever a newRelease is created in Github. This uses a project-specific PyPI token, as described inthe `PyPI documentation here &lt;https://pypi.org/help/#apitoken&gt;`_. That token has beensaved in the ``PYPI_PASSWORD`` settings for this repo, but has not been saved anywhereelse so if it is needed for any reason, the current one should be deleted and a new onegenerated.As always, be sure to bump the version in ``setup.py`` before creating a Release, sothat the proper version gets pushed to PyPI.Contact-------Please contact me with any questions: Vinod Kurup (vinod@kurup.com)</longdescription>
</pkgmetadata>