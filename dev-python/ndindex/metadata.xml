<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ndindex![ndindex logo](docs/_static/ndindex_logo_white_bg.svg)A Python library for manipulating indices of ndarrays.The documentation for ndindex can be found at https://quansight-labs.github.io/ndindex/ndindex is a library that allows representing and manipulating objects thatcan be valid indices to numpy arrays, i.e., slices, integers, ellipses,None, integer and boolean arrays, and tuples thereof. The goals of the libraryare- Provide a uniform API to manipulate these objects. Unlike the standard index  objects themselves like `slice`, `int`, and `tuple`, which do not share any  methods in common related to being indices, ndindex classes can all be  manipulated uniformly. For example, `idx.args` always gives the arguments  used to construct `idx`.- Give 100% correct semantics as defined by numpy's ndarray. This means that  ndindex will not make a transformation on an index object unless it is  correct for all possible input array shapes. The only exception to this rule  is that ndindex assumes that any given index will not raise IndexError (for  instance, from an out of bounds integer index or from too few dimensions).  For those operations where the array shape is known, there is a `reduce()`  method to reduce an index to a simpler index that is equivalent for the  given shape.- Enable useful transformation and manipulation functions on index objects.## Examples**Canonicalize a slice (over a given shape, or independent of array shape)**```py&gt;&gt;&gt; from ndindex import *&gt;&gt;&gt; Slice(-2, 10, 3).reduce()Slice(-2, 10, 2)&gt;&gt;&gt; Slice(-2, 10, 3).reduce(5)Slice(3, 4, 1)```**Compute the maximum length of a sliced axis**```py&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; len(Slice(2, 10, 3))3&gt;&gt;&gt; len(np.arange(10)[2:10:3])3```**Compute the shape of an array of shape `(10, 20)` indexed by `[0, 0:10]`**```py&gt;&gt;&gt; Tuple(0, slice(0, 10)).newshape((10, 20))(10,)&gt;&gt;&gt; np.ones((10, 20))[0, 0:10].shape(10,)```**Check if an indexed array would be empty**```py&gt;&gt;&gt; Tuple(0, ..., Slice(10, 20)).isempty((3, 4, 5))True&gt;&gt;&gt; np.ones((3, 4, 5))[0,...,10:20]array([], shape=(4, 0), dtype=float64)```See the [documentation](https://quansight-labs.github.io/ndindex/) for full detailson what ndindex can do.## License[MIT License](LICENSE)## Acknowledgmentsndindex development is supported by [QuansightLabs](https://labs.quansight.org/) and is sponsored in part by [the D. E.Shaw group](https://www.deshaw.com/). The D. E. Shaw group collaborates withQuansight on numerous open source projects, including Numba, Dask and ProjectJupyter.&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://labs.quansight.org/&quot;&gt;&lt;img src=&quot;https://labs.quansight.org/images/QuansightLabs_logo_V2.png&quot; alt=&quot;https://labs.quansight.org/&quot;width=&quot;200&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.deshaw.com&quot;&gt;&lt;img src=&quot;https://www.deshaw.com/assets/logos/blue_logo_417x125.png&quot; alt=&quot;https://www.deshaw.com&quot;width=&quot;200&quot;&gt;&lt;/a&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>