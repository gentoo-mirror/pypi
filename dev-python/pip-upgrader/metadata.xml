<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pip-upgrader [![Build Status](https://travis-ci.org/simion/pip-upgrader.svg?branch=master)](https://travis-ci.org/simion/pip-upgrader)An interactive pip requirements upgrader. Because upgradingrequirements, package by package, is a pain in the ass. It also updatesthe version in your requirements.txt file.## PurposeThis cli tools helps you interactively(or not) upgrade packages fromrequirements file, and also **update the pinned version fromrequirements file(s)**.If no requirements are given, the command **attempts to detect therequirements file(s)** in the current directory.Quick preview:![image](https://raw.githubusercontent.com/simion/pip-upgrader/master/demo.gif)## Installation    pip install pip-upgrader**Note:** this packages installs the following requirements: `'docopt','packaging', 'requests', 'terminaltables', 'colorclass'`To avoid installing all these dependencies in your project, you caninstall `pip-upgrader` in your system, rather than your virtualenv. Ifyou install it in your system, and need to upgrade it, run `pip install-U pip-upgrader`## Usage**Activate your virtualenv** (important, because it will also installthe new versions of upgraded packages in current virtualenv)**CD into your project.** Then: :    $ pip-upgradeArguments: :    requirements_file(s)          The requirement FILE, or WILDCARD PATH to multiple files. (positional arguments)    --prerelease                  Include prerelease versions for upgrade, when querying pypi repositories.    -p &lt;package&gt;                  Pre-choose which packages tp upgrade. Skips any prompt.    --dry-run                     Simulates the upgrade, but does not execute the actual upgrade.    --skip-package-installation   Only upgrade the version in requirements files, don't install the new package.    --skip-virtualenv-check       Disable virtualenv check. Allows installing the new packages outside the virtualenv.    --use-default-index           Skip searching for custom index-url in pip configuration file(s).Examples:    pip-upgrade             # auto discovers requirements file. Prompts for selecting upgrades    pip-upgrade requirements.txt    pip-upgrade requirements/dev.txt requirements/production.txt    # skip prompt and manually choose some/all packages for upgrade    pip-upgrade requirements.txt -p django -p celery    pip-upgrade requirements.txt -p all    # include pre-release versions    pip-upgrade --prereleaseTo use `pip-upgrader` on install requirements located in a `setup.py`file, try this:``` sh./setup.py egg_infopip-upgrade $(./setup.py --name | tr -- - _)*.egg-info/requires.txt```This will display any versions that can be upgraded, and helps you tomanually main</longdescription>
</pkgmetadata>