<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1&gt; Twitter scraper selenium &lt;/h1&gt;&lt;p&gt; Python's package to scrape Twitter's front-end easily with selenium.  &lt;/p&gt;[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://opensource.org/licenses/MIT) [![Python &gt;=3.6.9](https://img.shields.io/badge/python-3.6+-blue.svg)](https://www.python.org/downloads/release/python-360/)[![Maintenance](https://img.shields.io/badge/Maintained-Yes-green.svg)](https://github.com/shaikhsajid1111/facebook_page_scraper/graphs/commit-activity)&lt;!--TABLE of contents--&gt;&lt;h2&gt; Table of Contents &lt;/h2&gt;&lt;details open=&quot;open&quot;&gt;  &lt;summary&gt;Table of Contents&lt;/summary&gt;  &lt;ol&gt;    &lt;li&gt;      &lt;a href=&quot;#getting-started&quot;&gt;Getting Started&lt;/a&gt;      &lt;ul&gt;        &lt;li&gt;&lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;#Installation&quot;&gt;Installation&lt;/a&gt;        &lt;ul&gt;        &lt;li&gt;&lt;a href=&quot;#sourceInstallation&quot;&gt;Installing from source&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;#pypiInstallation&quot;&gt;Installing with PyPI&lt;/a&gt;&lt;/li&gt;        &lt;/ul&gt;        &lt;/li&gt;      &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#Usage&quot;&gt;Usage&lt;/a&gt;    &lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#availableFunction&quot;&gt;Available Functions in this package- Summary&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;    &lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#profileDetail&quot;&gt;Scraping profile's details&lt;/a&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#profileDetailExample&quot;&gt;In JSON Format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#profileDetailArgument&quot;&gt;Function Argument&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#profileDetailKeys&quot;&gt;Keys of the output&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt;&lt;/ul&gt;    &lt;!----&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#profile&quot;&gt;Scraping profile's tweets&lt;/a&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#profileJson&quot;&gt;In JSON format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#profileCSV&quot;&gt;In CSV format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#profileArgument&quot;&gt;Function Arguments&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#profileOutput&quot;&gt;Keys of the output data&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;li&gt;&lt;a href=&quot;#keywordAPI&quot;&gt;Scraping tweets using query/keyword with API&lt;/a&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#keywordAPI&quot;&gt;In JSON Format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_keyword_with_apiArgs&quot;&gt;Function Argument&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_keyword_with_apiKeys&quot;&gt;Keys of the output.&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#keyword&quot;&gt;Scraping tweets using keywords with browser automation&lt;/a&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#keywordJson&quot;&gt;In JSON format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#keywordCSV&quot;&gt;In CSV format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#keywordArgument&quot;&gt;Function Arguments&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#keywordOutput&quot;&gt;Keys of the output data&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_with_api&quot;&gt;Scraping tweets using topic url with API&lt;/a&gt;&lt;/li&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_with_api&quot;&gt;In JSON format -  Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_topic_with_api_args&quot;&gt;Function Arguments&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_topic_with_api_args_keys&quot;&gt;Keys of the output&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;li&gt;&lt;a href=&quot;#to-scrape-topic-tweets-with-url&quot;&gt;Scraping tweets using topic url - Example&lt;/a&gt;&lt;/li&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#scrape_topic_with_api_args&quot;&gt;In JSON format -  Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#topicArgument&quot;&gt;Function Arguments&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#profileOutput&quot;&gt;Keys of the output:&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;li&gt;&lt;a href='#to-scrape-user-tweets-with-api'&gt;Scraping user's tweet using API&lt;/a&gt;&lt;/li&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href='#to-scrape-user-tweets-with-api'&gt;In JSON format - Example&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href='#users_api_parameter'&gt;Function Arguments&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href='#scrape_user_with_api_args_keys'&gt;Keys of the output&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;li&gt;&lt;a href=&quot;#proxy&quot;&gt;Using scraper with proxy&lt;/a&gt;    &lt;ul&gt;    &lt;li&gt;&lt;a href=&quot;#unauthenticatedProxy&quot;&gt;Unauthenticated Proxy&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#authenticatedProxy&quot;&gt;Authenticated Proxy&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt;    &lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#privacy&quot;&gt;Privacy&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt;  &lt;/ol&gt;&lt;/details&gt;&lt;!--TABLE of contents //--&gt;&lt;br&gt;&lt;hr&gt;&lt;h2 id=&quot;Prerequisites&quot;&gt;Prerequisites &lt;/h2&gt;&lt;li&gt; Internet Connection &lt;/li&gt;&lt;li&gt; Python 3.6+ &lt;/li&gt;&lt;li&gt; Chrome or Firefox browser installed on your machine &lt;/li&gt;&lt;hr&gt;&lt;h2 id=&quot;Installation&quot;&gt; Installation &lt;/h2&gt;&lt;h3 id=&quot;sourceInstallation&quot;&gt;Installing from the source&lt;/h3&gt;&lt;p&gt;Download the source code or clone it with:&lt;p&gt;```git clone https://github.com/shaikhsajid1111/twitter-scraper-selenium```&lt;p&gt;Open terminal inside the downloaded folder:&lt;/p&gt;&lt;br&gt;``` python3 setup.py install```&lt;h3 id=&quot;pypiInstallation&quot;&gt;Installing with &lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt;&lt;/h3&gt;```pip3 install twitter-scraper-selenium```&lt;hr&gt;&lt;h2 id=&quot;Usage&quot;&gt;Usage&lt;/h2&gt;&lt;h3 id=&quot;availableFunction&quot;&gt;Available Function In this Package - Summary&lt;/h3&gt;&lt;div&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;td&gt;Function Name&lt;/td&gt;&lt;td&gt;Function Description&lt;/td&gt;&lt;td&gt;Scraping Method&lt;/td&gt;&lt;td&gt;Scraping Speed&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;scrape_profile()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter user's profile tweets&lt;/td&gt;&lt;td&gt;Browser Automation&lt;/td&gt;&lt;td&gt;Slow&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;scrape_keyword()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter tweets using keyword provided.&lt;/td&gt;&lt;td&gt;Browser Automation&lt;/td&gt;&lt;td&gt;Slow&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;scrape_topic()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter tweets by URL. It expects the URL of the topic.&lt;/td&gt;&lt;td&gt;Browser Automation&lt;/td&gt;&lt;td&gt;Slow&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;scrape_keyword_with_api()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter tweets by query/keywords. For an advanced search, query can be built from &lt;a href=&quot;https://developer.twitter.com/apitools/query&quot;&gt;here&lt;/a&gt;.&lt;/td&gt;&lt;td&gt;HTTP Request&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;get_profile_details()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter user details.&lt;/td&gt;&lt;td&gt;HTTP Request&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;scrape_topic_with_api()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter tweets by URL. It expects the URL of the topic&lt;/td&gt;&lt;td&gt;Browser Automation &amp; HTTP Request&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;scrape_profile_with_api()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Scrape's Twitter tweets by twitter profile username. It expects the username of the profile&lt;/td&gt;&lt;td&gt;Browser Automation &amp; HTTP Request&lt;/td&gt;&lt;td&gt;Fast&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Note: HTTP Request Method sends the request to Twitter's API directly for scraping data, and Browser Automation visits that page, scroll while collecting the data.&lt;/p&gt;&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;h3 id=&quot;profileDetail&quot;&gt;To scrape twitter profile details:&lt;/h3&gt;&lt;div id=&quot;profileDetailExample&quot;&gt;```pythonfrom twitter_scraper_selenium import get_profile_detailstwitter_username = &quot;TwitterAPI&quot;filename = &quot;twitter_api_data&quot;get_profile_details(twitter_username=twitter_username, filename=filename)```Output:```js{&quot;id&quot;: 6253282,&quot;id_str&quot;: &quot;6253282&quot;,&quot;name&quot;: &quot;Twitter API&quot;,&quot;screen_name&quot;: &quot;TwitterAPI&quot;,&quot;location&quot;: &quot;San Francisco, CA&quot;,&quot;profile_location&quot;: null,&quot;description&quot;: &quot;The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.&quot;,&quot;url&quot;: &quot;https:\/\/t.co\/8IkCzCDr19&quot;,&quot;entities&quot;: {&quot;url&quot;: {&quot;urls&quot;: [{&quot;url&quot;: &quot;https:\/\/t.co\/8IkCzCDr19&quot;,&quot;expanded_url&quot;: &quot;https:\/\/developer.twitter.com&quot;,&quot;display_url&quot;: &quot;developer.twitter.com&quot;,&quot;indices&quot;: [0,23]}]},&quot;description&quot;: {&quot;urls&quot;: []}},&quot;protected&quot;: false,&quot;followers_count&quot;: 6133636,&quot;friends_count&quot;: 12,&quot;listed_count&quot;: 12936,&quot;created_at&quot;: &quot;Wed May 23 06:01:13 +0000 2007&quot;,&quot;favourites_count&quot;: 31,&quot;utc_offset&quot;: null,&quot;time_zone&quot;: null,&quot;geo_enabled&quot;: null,&quot;verified&quot;: true,&quot;statuses_count&quot;: 3656,&quot;lang&quot;: null,&quot;contributors_enabled&quot;: null,&quot;is_translator&quot;: null,&quot;is_translation_enabled&quot;: null,&quot;profile_background_color&quot;: null,&quot;profile_background_image_url&quot;: null,&quot;profile_background_image_url_https&quot;: null,&quot;profile_background_tile&quot;: null,&quot;profile_image_url&quot;: null,&quot;profile_image_url_https&quot;: &quot;https:\/\/pbs.twimg.com\/profile_images\/942858479592554497\/BbazLO9L_normal.jpg&quot;,&quot;profile_banner_url&quot;: null,&quot;profile_link_color&quot;: null,&quot;profile_sidebar_border_color&quot;: null,&quot;profile_sidebar_fill_color&quot;: null,&quot;profile_text_color&quot;: null,&quot;profile_use_background_image&quot;: null,&quot;has_extended_profile&quot;: null,&quot;default_profile&quot;: false,&quot;default_profile_image&quot;: false,&quot;following&quot;: null,&quot;follow_request_sent&quot;: null,&quot;notifications&quot;: null,&quot;translator_type&quot;: null}```&lt;/div&gt;&lt;br&gt;&lt;div id=&quot;profileDetailArgument&quot;&gt;&lt;p&gt;&lt;code&gt;get_profile_details()&lt;/code&gt; arguments:&lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Argument&lt;/td&gt;            &lt;td&gt;Argument Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;twitter_username&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Twitter Username&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_filename&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What should be the filename where output is stored?.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_dir&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What directory output file should be saved?&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;proxy&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, if user wants to use proxy for scraping. If the proxy is authenticated proxy then the proxy format is username:password@host:port.&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;hr&gt;&lt;br&gt;&lt;div&gt;&lt;h4 id=&quot;profileDetailKeys&quot;&gt;Keys of the output:&lt;/p&gt;Detail of each key can be found &lt;a href=&quot;https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/user&quot;&gt;here&lt;/a&gt;.&lt;/h4&gt;&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;h3 id=&quot;profile&quot;&gt;To scrape profile's tweets:&lt;/h3&gt;&lt;p id=&quot;profileJson&quot;&gt;In JSON format:&lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_profilemicrosoft = scrape_profile(twitter_username=&quot;microsoft&quot;,output_format=&quot;json&quot;,browser=&quot;firefox&quot;,tweets_count=10)print(microsoft)```Output:```javascript{  &quot;1430938749840629773&quot;: {    &quot;tweet_id&quot;: &quot;1430938749840629773&quot;,    &quot;username&quot;: &quot;Microsoft&quot;,    &quot;name&quot;: &quot;Microsoft&quot;,    &quot;profile_picture&quot;: &quot;https://twitter.com/Microsoft/photo&quot;,    &quot;replies&quot;: 29,    &quot;retweets&quot;: 58,    &quot;likes&quot;: 453,    &quot;is_retweet&quot;: false,    &quot;retweet_link&quot;: &quot;&quot;,    &quot;posted_time&quot;: &quot;2021-08-26T17:02:38+00:00&quot;,    &quot;content&quot;: &quot;Easy to use and efficient for all \u2013 Windows 11 is committed to an accessible future.\n\nHere's how it empowers everyone to create, connect, and achieve more: https://msft.it/6009X6tbW &quot;,    &quot;hashtags&quot;: [],    &quot;mentions&quot;: [],    &quot;images&quot;: [],    &quot;videos&quot;: [],    &quot;tweet_url&quot;: &quot;https://twitter.com/Microsoft/status/1430938749840629773&quot;,    &quot;link&quot;: &quot;https://blogs.windows.com/windowsexperience/2021/07/01/whats-coming-in-windows-11-accessibility/?ocid=FY22_soc_omc_br_tw_Windows_AC&quot;  },...}```&lt;hr&gt;&lt;p id=&quot;profileCSV&quot;&gt;In CSV format:&lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_profilescrape_profile(twitter_username=&quot;microsoft&quot;,output_format=&quot;csv&quot;,browser=&quot;firefox&quot;,tweets_count=10,filename=&quot;microsoft&quot;,directory=&quot;/home/user/Downloads&quot;)```Output:&lt;br&gt;&lt;table class=&quot;table table-bordered table-hover table-condensed&quot; style=&quot;line-height: 14px;overflow:hidden;white-space: nowrap&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th title=&quot;Field #1&quot;&gt;tweet_id&lt;/th&gt;&lt;th title=&quot;Field #2&quot;&gt;username&lt;/th&gt;&lt;th title=&quot;Field #3&quot;&gt;name&lt;/th&gt;&lt;th title=&quot;Field #4&quot;&gt;profile_picture&lt;/th&gt;&lt;th title=&quot;Field #5&quot;&gt;replies&lt;/th&gt;&lt;th title=&quot;Field #6&quot;&gt;retweets&lt;/th&gt;&lt;th title=&quot;Field #7&quot;&gt;likes&lt;/th&gt;&lt;th title=&quot;Field #8&quot;&gt;is_retweet&lt;/th&gt;&lt;th title=&quot;Field #9&quot;&gt;retweet_link&lt;/th&gt;&lt;th title=&quot;Field #10&quot;&gt;posted_time&lt;/th&gt;&lt;th title=&quot;Field #11&quot;&gt;content&lt;/th&gt;&lt;th title=&quot;Field #12&quot;&gt;hashtags&lt;/th&gt;&lt;th title=&quot;Field #13&quot;&gt;mentions&lt;/th&gt;&lt;th title=&quot;Field #14&quot;&gt;images&lt;/th&gt;&lt;th title=&quot;Field #15&quot;&gt;videos&lt;/th&gt;&lt;th title=&quot;Field #16&quot;&gt;post_url&lt;/th&gt;&lt;th title=&quot;Field #17&quot;&gt;link&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1430938749840629773&lt;/td&gt;&lt;td&gt;Microsoft&lt;/td&gt;&lt;td&gt;Microsoft&lt;/td&gt;&lt;td&gt;https://twitter.com/Microsoft/photo&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;64&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;75&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;521&lt;/td&gt;&lt;td&gt;False&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;2021-08-26T17:02:38+00:00&lt;/td&gt;&lt;td&gt;Easy to use and efficient for all – Windows 11 is committed to an accessible future.&lt;br/&gt;&lt;br/&gt;Here&amp;#39;s how it empowers everyone to create, connect, and achieve more: https://msft.it/6009X6tbW &lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;https://twitter.com/Microsoft/status/1430938749840629773&lt;/td&gt;&lt;td&gt;https://blogs.windows.com/windowsexperience/2021/07/01/whats-coming-in-windows-11-accessibility/?ocid=FY22_soc_omc_br_tw_Windows_AC&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;...&lt;/p&gt;&lt;br&gt;&lt;hr&gt;&lt;div id=&quot;profileArgument&quot;&gt;&lt;p&gt;&lt;code&gt;scrape_profile()&lt;/code&gt; arguments:&lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Argument&lt;/td&gt;            &lt;td&gt;Argument Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;twitter_username&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Twitter username of the account&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;browser&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Which browser to use for scraping?, Only 2 are supported Chrome and Firefox. Default is set to Firefox&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;proxy&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, if user wants to use proxy for scraping. If the proxy is authenticated proxy then the proxy format is username:password@host:port.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweets_count&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of posts to scrape. Default is 10.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_format&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;The output format, whether JSON or CSV. Default is JSON.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;filename&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If output parameter is set to CSV, then it is necessary for filename parameter to passed. If not passed then the filename will be same as username passed.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;directory&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If output_format parameter is set to CSV, then it is valid for directory parameter to be passed. If not passed then CSV file will be saved in current working directory.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;headless&lt;/td&gt;            &lt;td&gt;Boolean&lt;/td&gt;            &lt;td&gt;Whether to run crawler headlessly?. Default is &lt;code&gt;True&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;browser_profile&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Path to the browser profile where cookies are stored and can be used for scraping data in an authenticated way.&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;hr&gt;&lt;br&gt;&lt;div id=&quot;profileOutput&quot;&gt;&lt;p&gt;Keys of the output&lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Key&lt;/td&gt;            &lt;td&gt;Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;tweet_id&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Post Identifier(integer casted inside string)&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;username&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Username of the profile&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;name&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Name of the profile&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;profile_picture&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Profile Picture link&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;replies&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of replies of tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;retweets&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of retweets of tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;likes&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of likes of tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;is_retweet&lt;/td&gt;            &lt;td&gt;boolean&lt;/td&gt;            &lt;td&gt;Is the tweet a retweet?&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;retweet_link&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If it is retweet, then the retweet link else it'll be empty string&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;posted_time&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Time when tweet was posted in ISO 8601 format&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;content&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;content of tweet as text&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;hashtags&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Hashtags presents in tweet, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;mentions&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Mentions presents in tweet, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;images&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Images links, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;videos&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Videos links, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweet_url&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;URL of the tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;link&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If any link is present inside tweet for some external website. &lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;h3 id=&quot;keywordAPI&quot;&gt;To scrape tweets using keywords with API:&lt;/h3&gt;&lt;div&gt;```pythonfrom twitter_scraper_selenium import scrape_keyword_with_apiquery = &quot;#gaming&quot;tweets_count = 10output_filename = &quot;gaming_hashtag_data&quot;scrape_keyword_with_api(query=query, tweets_count=tweets_count, output_filename=output_filename)```Output:```js{  &quot;1583821467732480001&quot;: {    &quot;tweet_url&quot; : &quot;https://twitter.com/yakubblackbeard/status/1583821467732480001&quot;,    &quot;tweet_details&quot;:{      ...    },    &quot;user_details&quot;:{      ...    }  }, ...}```&lt;/div&gt;&lt;br&gt;&lt;div id=&quot;scrape_keyword_with_apiArgs&quot;&gt;&lt;p&gt;&lt;code&gt;scrape_keyword_with_api()&lt;/code&gt; arguments:&lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Argument&lt;/td&gt;            &lt;td&gt;Argument Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;query&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Query to search. The query can be built from &lt;a href=&quot;https://developer.twitter.com/apitools/query&quot;&gt;here&lt;/a&gt; for advanced search.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweets_count&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of tweets to scrape.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_filename&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What should be the filename where output is stored?.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_dir&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What directory output file should be saved?&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;proxy&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, if user wants to use proxy for scraping. If the proxy is authenticated proxy then the proxy format is username:password@host:port.&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;hr&gt;&lt;br&gt;&lt;div&gt;&lt;p id=&quot;scrape_keyword_with_apiKeys&quot;&gt;Keys of the output:&lt;/p&gt;&lt;table&gt;&lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Key&lt;/td&gt;            &lt;td&gt;Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;    &lt;tr&gt;    &lt;td&gt;tweet_url&lt;/td&gt;    &lt;td&gt;String&lt;/td&gt;    &lt;td&gt;URL of the tweet.&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;    &lt;td&gt;tweet_details&lt;/td&gt;    &lt;td&gt;Dictionary&lt;/td&gt;    &lt;td&gt;A dictionary containing the data about the tweet. All fields which will be available inside can be checked &lt;a href=&quot;https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/tweet&quot;&gt;here&lt;a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;    &lt;td&gt;user_details&lt;/td&gt;    &lt;td&gt;Dictionary&lt;/td&gt;    &lt;td&gt;A dictionary containing the data about the tweet owner. All fields which will be available inside can be checked &lt;a href=&quot;https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/user&quot;&gt;here&lt;a&gt;&lt;/td&gt;    &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;hr&gt;&lt;h3&gt;To scrape tweets using keywords with browser automation&lt;/h3&gt;&lt;div&gt;&lt;p id=&quot;keywordJson&quot;&gt;In JSON format:&lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_keyword#scrape 10 posts by searching keyword &quot;india&quot; from date 30th August till date 31st Augustindia = scrape_keyword(keyword=&quot;india&quot;, browser=&quot;firefox&quot;,                      tweets_count=10,output_format=&quot;json&quot; ,until=&quot;2021-08-31&quot;, since=&quot;2021-08-30&quot;)print(india)```Output:```javascript{  &quot;1432493306152243200&quot;: {    &quot;tweet_id&quot;: &quot;1432493306152243200&quot;,    &quot;username&quot;: &quot;TOICitiesNews&quot;,    &quot;name&quot;: &quot;TOI Cities&quot;,    &quot;profile_picture&quot;: &quot;https://twitter.com/TOICitiesNews/photo&quot;,    &quot;replies&quot;: 0,    &quot;retweets&quot;: 0,    &quot;likes&quot;: 0,    &quot;is_retweet&quot;: false,    &quot;posted_time&quot;: &quot;2021-08-30T23:59:53+00:00&quot;,    &quot;content&quot;: &quot;Paralympians rake in medals, India Inc showers them with rewards&quot;,    &quot;hashtags&quot;: [],    &quot;mentions&quot;: [],    &quot;images&quot;: [],    &quot;videos&quot;: [],    &quot;tweet_url&quot;: &quot;https://twitter.com/TOICitiesNews/status/1432493306152243200&quot;,    &quot;link&quot;: &quot;https://t.co/odmappLovL?amp=1&quot;  },...}```&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;div id=&quot;keywordCSV&quot;&gt;&lt;p&gt;In CSV format:&lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_keywordscrape_keyword(keyword=&quot;india&quot;, browser=&quot;firefox&quot;,                      tweets_count=10, until=&quot;2021-08-31&quot;, since=&quot;2021-08-30&quot;,output_format=&quot;csv&quot;,filename=&quot;india&quot;)```&lt;br&gt;Output:&lt;table class=&quot;table table-bordered table-hover table-condensed&quot; style=&quot;line-height: 14px;overflow:hidden;white-space: nowrap&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th title=&quot;Field #1&quot;&gt;tweet_id&lt;/th&gt;&lt;th title=&quot;Field #2&quot;&gt;username&lt;/th&gt;&lt;th title=&quot;Field #3&quot;&gt;name&lt;/th&gt;&lt;th title=&quot;Field #4&quot;&gt;profile_picture&lt;/th&gt;&lt;th title=&quot;Field #5&quot;&gt;replies&lt;/th&gt;&lt;th title=&quot;Field #6&quot;&gt;retweets&lt;/th&gt;&lt;th title=&quot;Field #7&quot;&gt;likes&lt;/th&gt;&lt;th title=&quot;Field #8&quot;&gt;is_retweet&lt;/th&gt;&lt;th title=&quot;Field #9&quot;&gt;posted_time&lt;/th&gt;&lt;th title=&quot;Field #10&quot;&gt;content&lt;/th&gt;&lt;th title=&quot;Field #11&quot;&gt;hashtags&lt;/th&gt;&lt;th title=&quot;Field #12&quot;&gt;mentions&lt;/th&gt;&lt;th title=&quot;Field #13&quot;&gt;images&lt;/th&gt;&lt;th title=&quot;Field #14&quot;&gt;videos&lt;/th&gt;&lt;th title=&quot;Field #15&quot;&gt;tweet_url&lt;/th&gt;&lt;th title=&quot;Field #16&quot;&gt;link&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1432493306152243200&lt;/td&gt;&lt;td&gt;TOICitiesNews&lt;/td&gt;&lt;td&gt;TOI Cities&lt;/td&gt;&lt;td&gt;https://twitter.com/TOICitiesNews/photo&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td&gt;False&lt;/td&gt;&lt;td&gt;2021-08-30T23:59:53+00:00&lt;/td&gt;&lt;td&gt;Paralympians rake in medals, India Inc showers them with rewards&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;[]&lt;/td&gt;&lt;td&gt;https://twitter.com/TOICitiesNews/status/1432493306152243200&lt;/td&gt;&lt;td&gt;https://t.co/odmappLovL?amp=1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt; ... &lt;/p&gt;&lt;/div&gt;&lt;hr&gt;&lt;br&gt;&lt;div id=&quot;keywordArgument&quot;&gt;&lt;p&gt;&lt;code&gt;scrape_keyword()&lt;/code&gt; arguments:&lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Argument&lt;/td&gt;            &lt;td&gt;Argument Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;keyword&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Keyword to search on twitter. &lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;browser&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Which browser to use for scraping?, Only 2 are supported Chrome and Firefox,default is set to Firefox.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;until&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, Until date for scraping, a end date from where search ends. Format for date is YYYY-MM-DD.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;since &lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, Since date for scraping, a past date from where to search from. Format for date is YYYY-MM-DD.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;proxy&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Optional parameter, if user wants to use proxy for scraping. If the proxy is authenticated proxy then the proxy format is username:password@host:port&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweets_count&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of posts to scrape. Default is 10.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_format&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;The output format, whether JSON or CSV. Default is JSON.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;filename&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If output parameter is set to CSV, then it is necessary for filename parameter to passed. If not passed then the filename will be same as keyword passed.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;directory&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If output parameter is set to CSV, then it is valid for directory parameter to be passed. If not passed then CSV file will be saved in current working directory.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;since_id&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;After (NOT inclusive) a specified Snowflake ID. Example &lt;a href=&quot;https://twitter.com/search?q=since_id%3A1138872932887924737%20max_id%3A1144730280353247233%20%23nasamoontunes&amp;src=typed_query&amp;f=live&quot;&gt;here&lt;/a&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;max_id&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;At or before (inclusive) a specified Snowflake ID. Example &lt;a href=&quot;https://twitter.com/search?q=since_id%3A1138872932887924737%20max_id%3A1144730280353247233%20%23nasamoontunes&amp;src=typed_query&amp;f=live&quot;&gt;here&lt;/a&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;within_time&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Search within the last number of days, hours, minutes, or seconds. Example &lt;code&gt;2d, 3h, 5m, 30s&lt;/code&gt;.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;headless&lt;/td&gt;            &lt;td&gt;Boolean&lt;/td&gt;            &lt;td&gt;Whether to run crawler headlessly?. Default is &lt;code&gt;True&lt;/code&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;browser_profile&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Path to the browser profile where cookies are stored and can be used for scraping data in an authenticated way.&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;hr&gt;&lt;div id=&quot;keywordOutput&quot;&gt;&lt;p&gt;Keys of the output&lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Key&lt;/td&gt;            &lt;td&gt;Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;tweet_id&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Post Identifier(integer casted inside string)&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;username&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Username of the profile&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;name&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Name of the profile&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;profile_picture&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Profile Picture link&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;replies&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of replies of tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;retweets&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of retweets of tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;likes&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of likes of tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;is_retweet&lt;/td&gt;            &lt;td&gt;boolean&lt;/td&gt;            &lt;td&gt;Is the tweet a retweet?&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;posted_time&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Time when tweet was posted in ISO 8601 format&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;content&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;content of tweet as text&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;hashtags&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Hashtags presents in tweet, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;mentions&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Mentions presents in tweet, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;images&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Images links, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;videos&lt;/td&gt;            &lt;td&gt;Array&lt;/td&gt;            &lt;td&gt;Videos links, if they're present in tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweet_url&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;URL of the tweet&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;link&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;If any link is present inside tweet for some external website. &lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;h3 id=&quot;scrape_with_api&quot;&gt;To scrape topic tweets with URL using API &lt;/h3&gt;```pythonfrom twitter_scraper_selenium import scrape_topic_with_apitopic_url = 'https://twitter.com/i/topics/1468157909318045697'scrape_topic_with_api(URL=topic_url, output_filename='solana_cryptocurrency', tweets_count=50)```Output:```js{  &quot;1584979408338632705&quot;: {    &quot;tweet_url&quot; : &quot;https://twitter.com/AptosBullCNFT/status/1584979408338632705&quot;,    &quot;tweet_details&quot;:{      ...    },    &quot;user_details&quot;:{      ...    }  }, ...}```&lt;div id=&quot;scrape_topic_with_api_args&quot;&gt;&lt;p&gt;&lt;code&gt;scrape_topic_with_api()&lt;/code&gt; arguments: &lt;/p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Argument&lt;/td&gt;            &lt;td&gt;Argument Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;URL&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Twitter's Topic URL&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweets_count&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of tweets to scrape.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_filename&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What should be the filename where output is stored?.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_dir&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What directory output file should be saved?&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;proxy&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, if user wants to use proxy for scraping. If the proxy is authenticated proxy then the proxy format is username:password@host:port.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;browser&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Which browser to use for extracting out graphql key. Default is firefox.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;headless&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Whether to run browser in headless mode?&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;hr&gt;&lt;div id=&quot;scrape_topic_with_api_args_keys&quot;&gt; &lt;p&gt;Keys of the output:&lt;p&gt;  Same as &lt;a href=&quot;#scrape_keyword_with_apiKeys&quot;&gt;scrape_keyword_with_api&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;h3 id=&quot;to-scrape-topic-tweets-with-url&quot;&gt; To scrape topic tweets with URL using browser automation: &lt;/h3&gt;```pythonfrom twitter_scraper_selenium import scrape_topic# scrape 10 tweets from steam deck topic on twitterdata = scrape_topic(filename=&quot;steamdeck&quot;, url='https://twitter.com/i/topics/1415728297065861123',                     browser=&quot;firefox&quot;, tweets_count=10)```&lt;div id=&quot;scrape_topic_with_api_args_keys&quot;&gt; &lt;p&gt;Keys of the output:&lt;p&gt;  Same as &lt;a href=&quot;#profileOutput&quot;&gt;scrape_profile&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;div id=&quot;topicArgument&quot;&gt;&lt;p&gt;&lt;code&gt;scrape_topic()&lt;/code&gt; arguments:&lt;/p&gt;| Arguments     | Argument &lt;br&gt; Type | Description                                                                                                                            ||---------------|--------------------|----------------------------------------------------------------------------------------------------------------------------------------|| filename      | str                | Filename to write result output.                                                                                                       || URL           | str                | Topic URL.                                                                                                                             || browser       | str                | Which browser to use for scraping? &lt;br&gt; Only 2 are supported Chrome and Firefox. default firefox                                       || proxy         | str                | If user wants to use proxy for scraping. &lt;br&gt; If the proxy is authenticated proxy then the proxy format is username:password@host:port || tweets_count  | int                | Number of posts to scrape. default 10.                                                                                                  || output_format | str                | The output format whether JSON or CSV. Default json.                                                                                   || directory     | str                | Directory to save output file. Deafult current working directory.                                                                      || browser_profile | str | Path to the browser profile where cookies are stored and can be used for scraping data in an authenticated way. |&lt;br&gt;&lt;hr&gt;&lt;div id=&quot;to-scrape-user-tweets-with-api&quot;&gt;&lt;p&gt;To Scrap profile's tweets with API:&lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_profile_with_apiscrape_profile_with_api('elonmusk', output_filename='musk', tweets_count= 100)```&lt;/div&gt;&lt;br&gt;&lt;div id=&quot;users_api_parameter&quot;&gt;&lt;p&gt;&lt;code&gt;scrape_profile_with_api()&lt;/code&gt; Arguments:&lt;p&gt;&lt;table&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;Argument&lt;/td&gt;            &lt;td&gt;Argument Type&lt;/td&gt;            &lt;td&gt;Description&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;username&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Twitter's Profile username&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;tweets_count&lt;/td&gt;            &lt;td&gt;Integer&lt;/td&gt;            &lt;td&gt;Number of tweets to scrape.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_filename&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What should be the filename where output is stored?.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;output_dir&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;What directory output file should be saved?&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;proxy&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Optional parameter, if user wants to use proxy for scraping. If the proxy is authenticated proxy then the proxy format is username:password@host:port.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;browser&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Which browser to use for extracting out graphql key. Default is firefox.&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;headless&lt;/td&gt;            &lt;td&gt;String&lt;/td&gt;            &lt;td&gt;Whether to run browser in headless mode?&lt;/td&gt;        &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br&gt;&lt;div id=&quot;scrape_user_with_api_args_keys&quot;&gt; &lt;p&gt;Output:&lt;p&gt;```js{  &quot;1608939190548598784&quot;: {    &quot;tweet_url&quot; : &quot;https://twitter.com/elonmusk/status/1608939190548598784&quot;,    &quot;tweet_details&quot;:{      ...    },    &quot;user_details&quot;:{      ...    }  }, ...}```&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;/div&gt;&lt;h3 id=&quot;proxy&quot;&gt; Using scraper with proxy (http proxy) &lt;/h3&gt;&lt;div id=&quot;unauthenticatedProxy&quot;&gt;&lt;p&gt;Just pass &lt;code&gt;proxy&lt;/code&gt; argument to function.&lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_keywordscrape_keyword(keyword=&quot;#india&quot;, browser=&quot;firefox&quot;,tweets_count=10,output=&quot;csv&quot;,filename=&quot;india&quot;,proxy=&quot;66.115.38.247:5678&quot;) #In IP:PORT format```&lt;/div&gt;&lt;br&gt;&lt;div id=&quot;authenticatedProxy&quot;&gt;&lt;p&gt; Proxy that requires authentication: &lt;/p&gt;```pythonfrom twitter_scraper_selenium import scrape_profilemicrosoft_data = scrape_profile(twitter_username=&quot;microsoft&quot;, browser=&quot;chrome&quot;, tweets_count=10, output=&quot;json&quot;,                      proxy=&quot;sajid:pass123@66.115.38.247:5678&quot;)  #  username:password@IP:PORTprint(microsoft_data)```&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;div id=&quot;privacy&quot;&gt;&lt;h2&gt;Privacy&lt;/h2&gt;&lt;p&gt;This scraper only scrapes public data available to unauthenticated user and does not holds the capability to scrape anything private.&lt;/p&gt;&lt;/div&gt;&lt;br&gt;&lt;hr&gt;&lt;div id=&quot;license&quot;&gt;&lt;h2&gt;LICENSE&lt;/h2&gt;MIT&lt;/div&gt;</longdescription>
</pkgmetadata>