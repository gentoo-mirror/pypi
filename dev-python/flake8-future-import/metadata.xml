<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>__future__ import checker=========================.. image:: https://github.com/xZise/flake8-future-import/actions/workflows/main.yml/badge.svg?branch=master   :alt: Build Status   :target: https://github.com/xZise/flake8-future-import/actions.. image:: https://codecov.io/gh/xZise/flake8-future-import/branch/master/graph/badge.svg   :alt: Coverage Status   :target: https://codecov.io/gh/xZise/flake8-future-import.. image:: https://badge.fury.io/py/flake8-future-import.svg   :alt: Pypi Entry   :target: https://pypi.python.org/pypi/flake8-future-importA script to check for the imported ``__future__`` modules to make it easier tohave a consistent code base.By default it requires and forbids all imports but it's possible to havecertain imports optional by ignoring both their requiring and forbidding errorcode. In the future it's planned to have a “consistency” mode and that thedefault is having the import optional or required (not sure on that yet).This module provides a plugin for ``flake8``, the Python code checker.Standalone script-----------------The checker can be used directly::  $ python -m flake8-import --ignore FI10,FI11,FI12,FI13,FI15,FI5 some_file.py  some_file.py:1:1: FI14 __future__ import &quot;unicode_literals&quot; missingEven though ``flake8`` still uses ``optparse`` this script in standalone modeis using ``argparse``.Plugin for Flake8-----------------When both ``flake8`` and ``flake8-future-imports`` are installed, the pluginis available in ``flake8``::  $ flake8 --version  5.0.3 (flake8-future-import: 0.4.6, mccabe: 0.7.0, pycodestyle: 2.9.0, pyflakes: 2.5.0) CPython 3.9.5 on WindowsBy default the plugin will check for all the future imports but with``--ignore`` it's possible to define which imports from ``__future__`` areoptional, required or forbidden. It will emit a warning if necessary importsare missing::  $ flake8 --ignore FI10,FI11,FI12,FI13,FI15,FI5 some_file.py  ...  some_file.py:1:1: FI14 __future__ import &quot;unicode_literals&quot; missingParameters----------This module adds one parameter:* ``--require-code``: Doesn't complain on files which only contain comments or  strings (and by extension docstrings). Corresponds to ``require-code = True``  in the ``tox.ini``.* ``--min-version``: Define the minimum version supported by the project. Any  features already mandatory or not available won't cause a warning when they  are missing. Corresponds to ``min-version = …`` in the ``tox.ini``.The stand alone version also mimics flake8's ignore parameter.Error codes-----------This plugin is using the following error codes:+------+--------------------------------------------------+| FI10 | ``__future__`` import &quot;division&quot; missing         |+------+--------------------------------------------------+| FI11 | ``__future__`` import &quot;absolute_import&quot; missing  |+------+--------------------------------------------------+| FI12 | ``__future__`` import &quot;with_statement&quot; missing   |+------+--------------------------------------------------+| FI13 | ``__future__`` import &quot;print_function&quot; missing   |+------+--------------------------------------------------+| FI14 | ``__future__`` import &quot;unicode_literals&quot; missing |+------+--------------------------------------------------+| FI15 | ``__future__`` import &quot;generator_stop&quot; missing   |+------+--------------------------------------------------+| FI16 | ``__future__`` import &quot;nested_scopes&quot; missing    |+------+--------------------------------------------------+| FI17 | ``__future__`` import &quot;generators&quot; missing       |+------+--------------------------------------------------+| FI18 | ``__future__`` import &quot;annotations&quot; missing      |+------+--------------------------------------------------++------+--------------------------------------------------+| FI50 | ``__future__`` import &quot;division&quot; present         |+------+--------------------------------------------------+| FI51 | ``__future__`` import &quot;absolute_import&quot; present  |+------+--------------------------------------------------+| FI52 | ``__future__`` import &quot;with_statement&quot; present   |+------+--------------------------------------------------+| FI53 | ``__future__`` import &quot;print_function&quot; present   |+------+--------------------------------------------------+| FI54 | ``__future__`` import &quot;unicode_literals&quot; present |+------+--------------------------------------------------+| FI55 | ``__future__`` import &quot;generator_stop&quot; present   |+------+--------------------------------------------------+| FI56 | ``__future__`` import &quot;nested_scopes&quot; present    |+------+--------------------------------------------------+| FI57 | ``__future__`` import &quot;generators&quot; present       |+------+--------------------------------------------------+| FI58 | ``__future__`` import &quot;annotations&quot; present      |+------+--------------------------------------------------++------+--------------------------------------------------+| FI90 | ``__future__`` import does not exist             |+------+--------------------------------------------------+For a sensible usage, for each import either or both error code need to beignored as it will otherwise always complain either because it's present orbecause it is not. The corresponding other error code can be determined byadding or subtracting 40.* Ignoring the **lower** one will **forbid** the import* Ignoring the **higher** one will **require** the import* Ignoring **both** will make the import **optional**The plugin is always producing errors about missing and present imports and``flake8`` actually does ignore then the codes accordingly. So the plugin doesnot know that an import is allowed and forbidden at the same time and thuscannot skip reporting those imports.Changes-------0.4.7 - 2022-08-02``````````````````* Fix error reported with flake8 version 50.4.6 - 2019-08-04``````````````````* Add new ``annotations`` feature.0.4.5 - 2018-04-15``````````````````* Support pip version 10 in the tests.* Add ``LICENSE`` and ``test_flake8_future_import.py`` to the source  distribution.0.4.4 - 2018-01-05``````````````````* Add ``Flake8`` framework classifier.0.4.3 - 2016-07-01``````````````````* When using Flake8 version 2, it wasn't correctly looking for the options in  the ``tox.ini`` file. This is restoring the old behaviour there.0.4.2 - 2016-07-01``````````````````* Support flake8 version 3's new config option interface* Do not increase offset by one in the standalone variant, like flake8 does  with version 30.4.1 - 2016-05-30``````````````````* Do not ignore imports which are present and have been added after the minimum  version* Ignore imports which became mandatory with the minimum version0.4.0 - 2016-05-30``````````````````* Add two older ``future`` imports* Issue an error when a future import does not exist* Define which is the oldest Python version to be supported so that already  mandatory features can be ignored and not yet supported features default to  forbidden (ignoring the lower error code).* Use return code of 1 if errors occurred0.3.2 - 2015-10-18``````````````````* Prevent errors when using unknown future imports* Test several examples for bad future imports from the Python library* Fixed the README to use present for the higher codes0.3.1 - 2015-09-07``````````````````* Support setting ``--require-code`` in the ``tox.ini``0.3.0 - 2015-09-07``````````````````* Using a different error code namespace (FIXX)* Add error codes returned when an import is present* Removed ``nested_scopes`` and ``generators`` from the available list* Skip files which only contains comments and strings0.2.1 - 2015-08-10``````````````````* Fixed the module and URL in setup.py* Fixed the name in the script itself0.2 - 2015-08-10````````````````* Instead of parameters it's now using error codes to define which futures are  missing. This is removing the ability to forbid a future for now.0.1 - 2015-08-08````````````````* First release</longdescription>
</pkgmetadata>