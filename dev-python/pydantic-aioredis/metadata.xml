<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pydantic-aioredisPydantic-aioredis is designed to provide an efficient way of integrating Redis databases with Python-based applications. Built on top of [Pydantic](https://docs.pydantic.dev/), pydantic-aioredis allows you to define data models and validate input data before it is stored in Redis. Data is validated before storing and after retrieval from Redis. The library also provides an easy-to-use API for querying, updating, and deleting data stored in Redis.Inspired by[pydantic-redis](https://github.com/sopherapps/pydantic-redis) by[Martin Ahindura](https://github.com/Tinitto)&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/last-commit/andrewthetechie/pydantic-aioredis&quot; alt=&quot;Latest Commit&quot;&gt;    &lt;/a&gt;    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green&quot;&gt;    &lt;img alt=&quot;GitHub release (latest by date)&quot; src=&quot;https://img.shields.io/github/v/release/andrewthetechie/pydantic-aioredis?label=Latest%20Release&quot;&gt;    &lt;br /&gt;    &lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/andrewthetechie/pydantic-aioredis&quot; /&gt;&lt;/a&gt;    &lt;img alt=&quot;GitHub Workflow Status Test and Lint (branch)&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/andrewthetechie/pydantic-aioredis/tests.yml?branch=main&quot;&gt;    &lt;img alt=&quot;Contributors&quot; src=&quot;https://img.shields.io/github/contributors/andrewthetechie/pydantic-aioredis&quot;&gt;    &lt;br /&gt;    &lt;a href=&quot;https://pypi.org/project/pydantic-aioredis&quot; target=&quot;_blank&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/pydantic-aioredis&quot; alt=&quot;Package version&quot;&gt;    &lt;/a&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/pydantic-aioredis&quot;&gt;&lt;/p&gt;## Main Dependencies- [Python +3.7](https://www.python.org)- [redis-py &lt;4.2.0](https://github.com/redis/redis-py)- [pydantic](https://github.com/samuelcolvin/pydantic/)## Getting Started### ExamplesExamples are in the [examples/](./examples) directory of this repo.### InstallationInstall the package    pip install pydantic-aioredis### Quick UsageImport the `Store`, the `RedisConfig` and the `Model` classes and use accordingly```pythonimport asynciofrom datetime import datefrom pydantic_aioredis import RedisConfig, Model, Store# Create models as you would create pydantic models i.e. using typingsclass Book(Model):    _primary_key_field: str = 'title'    title: str    author: str    published_on: date    in_stock: bool = True# Do note that there is no concept of relationships hereclass Library(Model):    # the _primary_key_field is mandatory    _primary_key_field: str = 'name'    name: str    address: str# Create the store and register your modelsstore = Store(name='some_name', redis_config=RedisConfig(db=5, host='localhost', port=6379), life_span_in_seconds=3600)store.register_model(Book)store.register_model(Library)# Sample books. You can create as many as you wish anywhere in the codebooks = [    Book(title=&quot;Oliver Twist&quot;, author='Charles Dickens', published_on=date(year=1215, month=4, day=4),        in_stock=False),    Book(title=&quot;Great Expectations&quot;, author='Charles Dickens', published_on=date(year=1220, month=4, day=4)),    Book(title=&quot;Jane Eyre&quot;, author='Charles Dickens', published_on=date(year=1225, month=6, day=4), in_stock=False),    Book(title=&quot;Wuthering Heights&quot;, author='Jane Austen', published_on=date(year=1600, month=4, day=4)),]# Some library objectslibraries = [    Library(name=&quot;The Grand Library&quot;, address=&quot;Kinogozi, Hoima, Uganda&quot;),    Library(name=&quot;Christian Library&quot;, address=&quot;Buhimba, Hoima, Uganda&quot;)]async def work_with_orm():  # Insert them into redis  await Book.insert(books)  await Library.insert(libraries)  # Select all books to view them. A list of Model instances will be returned  all_books = await Book.select()  print(all_books) # Will print [Book(title=&quot;Oliver Twist&quot;, author=&quot;Charles Dickens&quot;, published_on=date(year=1215, month=4, day=4), in_stock=False), Book(...]  # Or select some of the books  some_books = await Book.select(ids=[&quot;Oliver Twist&quot;, &quot;Jane Eyre&quot;])  print(some_books) # Will return only those two books  # Or select some of the columns. THIS RETURNS DICTIONARIES not MODEL Instances  # The Dictionaries have values in string form so you might need to do some extra work  books_with_few_fields = await Book.select(columns=[&quot;author&quot;, &quot;in_stock&quot;])  print(books_with_few_fields) # Will print [{&quot;author&quot;: &quot;'Charles Dickens&quot;, &quot;in_stock&quot;: &quot;True&quot;},...]  this_book = Book(title=&quot;Moby Dick&quot;, author='Herman Melvill', published_on=date(year=1851, month=10, day=17))  await Book.insert(this_book)  # oops, there was a typo. Fix it  # Update is an async context manager and will update redis with all changes in one operations  async with this_book.update():    this_book.author = &quot;Herman Melville&quot;    this_book.published_on=date(year=1851, month=10, day=18)  this_book_from_redis = await Book.select(ids=[&quot;Moby Dick&quot;])  assert this_book_from_redis[0].author == &quot;Herman Melville&quot;  assert this_book_from_redis[0].author == date(year=1851, month=10, day=18)  # Delete any number of items  await Library.delete(ids=[&quot;The Grand Library&quot;])# Now run these updatesloop = asyncio.get_event_loop()loop.run_until_complete(work_with_orm())```### Custom Fields in Model| Field Name          | Required | Default      | Description                                                          || ------------------- | -------- | ------------ | -------------------------------------------------------------------- || \_primary_key_field | Yes      | None         | The field of your model that is the primary key                      || \_redis_prefix      | No       | None         | If set, will be added to the beginning of the keys we store in redis || \_redis_separator   | No       | :            | Defaults to :, used to separate prefix, table_name, and primary_key  || \_table_name        | No       | cls.**name** | Defaults to the model's name, can set a custom name in redis         || \_auto_save         | No       | False        | Defaults to false. If true, will save to redis on instantiation      || \_auto_sync         | No       | False        | Defaults to false. If true, will save to redis on attr update        |## LicenseLicensed under the [MIT License](./LICENSE)## ContributingContributions are very welcome.To learn more, see the [Contributor Guide](./CONTRIBUTING.rst)### ContributorsThanks go to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;&lt;!-- prettier-ignore-start --&gt;&lt;!-- markdownlint-disable --&gt;&lt;table&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andrewthetechie&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1377314?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Andrew&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=andrewthetechie&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=andrewthetechie&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Tinitto&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/21363733??v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Martin Ahindura&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Martin Ahindura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=Tinitto&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;#ideas-Tinitto&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/david-wahlstedt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66391333?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;david-wahlstedt&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;david-wahlstedt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=david-wahlstedt&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=david-wahlstedt&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/pulls?q=is%3Apr+reviewed-by%3Adavid-wahlstedt&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.gtmanfred.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/732321?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Wallace&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Wallace&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=gtmanfred&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://derwen.ai/paco&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57973?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Paco Nathan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paco Nathan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#example-ceteri&quot; title=&quot;Examples&quot;&gt;üí°&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/andreas-brodersen-1b955b100/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43907402?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Andreas Brodersen&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andreas Brodersen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/andrewthetechie/pydantic-aioredis/commits?author=AndreasPB&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;!-- markdownlint-restore --&gt;&lt;!-- prettier-ignore-end --&gt;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</longdescription>
</pkgmetadata>