<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>threedi-modelchecker====================.. image:: https://img.shields.io/pypi/v/threedi-modelchecker.svg        :target: https://pypi.org/project/threedi-modelchecker/.. image:: https://github.com/nens/threedi-modelchecker/actions/workflows/test.yml/badge.svg:alt: Github Actions status:target: https://github.com/nens/threedi-modelchecker/actions/workflows/test.ymlA tool to verify the correctness of a 3Di schematisation.It asserts the correctness of a 3Di schematisation and provides detailed information about any potential errors in it.This package only work against a specific schematisation version. Use https://pypi.org/project/threedi-schema/ to upgradea schematisation version. See also the 3Di documentation at https://docs.3di.lizard.net/en/stable/d_before_you_begin.html#database-overviewNote that the name &quot;modelchecker&quot; might be slightly confusing: the thing that is checked is a schematisation, and nota threedimodel. A schematisation is built interactively by the user and this schematisation will be converted to a3Di-Model which can be used in simulations.Installation------------    pip install threedi-modelcheckerNote that raster checks will be skipped unless GDAL is available.``threedi-modelchecker`` is also integrated into the ThreediToolbox Qgis plugin: https://github.com/nens/ThreeDiToolboxExample-------The following code sample shows how you can use the modelchecker to run all configuredchecks and print an overview of all discovered errors::    from threedi_modelchecker.exporters import format_check_results    from threedi_modelchecker import ThreediModelChecker    from threedi_schema import ThreediDatabase    sqlite_file = &quot;&lt;Path to your sqlite file&gt;&quot;    database = ThreediDatabase(sqlite_file)    model_checker = ThreediModelChecker(database)    for check, error in model_checker.errors(level=&quot;WARNING&quot;):        print(format_check_results(check, error))Command-line interface----------------------Use the modelchecker from the command line as follows::    threedi_modelchecker check -s path/to/model.sqlite -l warning By default, WARNING and INFO checks are ignored. To skip the beta features check,add the --allow-beta flag.Development-----------A docker image has been created for easy development. It contains an postgis server with an empty 3Di database to allow for easy testing.Build the image:    docker-compose buildRun the tests:    docker-compose run modelchecker pytestSee `Creating revisions &lt;https://github.com/nens/threedi-schema/blob/master/threedi_schema/migrations/README.rst&gt;`_ for instructions on how to change the 3Di model schematisation.Release-------Make sure you have zestreleaser_ installed.    fullreleaseWhen you created a tag, make sure to upload it to pypi_... _zestreleaser: https://zestreleaser.readthedocs.io/en/latest/.. _pypi: https://pypi.org/project/threedi-modelchecker/</longdescription>
</pkgmetadata>