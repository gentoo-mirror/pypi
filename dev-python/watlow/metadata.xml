<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># watlowPython driver and command-line tool for [Watlow EZ-Zone temperature controllers](https://www.watlow.com/en/products/controllers/temperature-and-process-controllers/ez-zone-pm-controller).&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://www.watlow.com/-/media/images/products/new--controllers/integrated-multi-function/tp_pm_480.ashx&quot; /&gt;&lt;/p&gt;Installation============```pip install watlow```Usage=====### Command Line```$ watlow /dev/ttyUSB0```This returns a simple data structure.```{  &quot;actual&quot;: 21.66,  &quot;setpoint&quot;: 20.0,  &quot;output&quot;: 52.1}```You can additionally use the `--set-setpoint` option to set a temperature setpoint.If interacting with a Watlow RUI Gateway, the zone to get or set should be passed as a flag```$ watlow -z 1 192.168.1.101```See `watlow --help` for more.### Python#### Single ControllerFor a single temperature controller, the python interface is basic synchronous serial communication.```pythonimport watlowtc = watlow.TemperatureController('/dev/ttyUSB0')tc.set(30)print(tc.get())```The driver is designed to be fault tolerant over long polling, and shouldappropriately reconnect if its `IOError`s are managed. Here's an implementationwith standard long-poll exception handling. This should run until interrupted andthen exit cleanly.```pythonfrom time import sleepimport watlowtc = watlow.TemperatureController('/dev/ttyUSB0')try:    while True:        try:            print(tc.get())        except IOError:            print('disconnected')        sleep(1)except KeyboardInterrupt:    passfinally:    tc.close()```#### GatewayThe Gateway driver uses Python â‰¥3.7's async/await syntax to asynchronously communicate withthe gateway over ModBus-TCP.```pythonimport asyncioimport watlowasync def run():    async with watlow.Gateway('192.168.1.101') as gateway:        print(await gateway.get(1))asyncio.run(run())```Additionally, there is a mock for the Gateway driver available at `watlow.mock.Gateway` for testing.</longdescription>
</pkgmetadata>