<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>locus=====[![](https://github.com/lycantropos/locus/workflows/CI/badge.svg)](https://github.com/lycantropos/locus/actions/workflows/ci.yml &quot;Github Actions&quot;)[![](https://readthedocs.org/projects/locus/badge/?version=latest)](https://locus.readthedocs.io/en/latest &quot;Documentation&quot;)[![](https://codecov.io/gh/lycantropos/locus/branch/master/graph/badge.svg)](https://codecov.io/gh/lycantropos/locus &quot;Codecov&quot;)[![](https://img.shields.io/github/license/lycantropos/locus.svg)](https://github.com/lycantropos/locus/blob/master/LICENSE &quot;License&quot;)[![](https://badge.fury.io/py/locus.svg)](https://badge.fury.io/py/locus &quot;PyPI&quot;)In what follows `python` is an alias for `python3.6` or `pypy3.6`or any later version (`python3.7`, `pypy3.7` and so on).Installation------------Install the latest `pip` &amp; `setuptools` packages versions```bashpython -m pip install --upgrade pip setuptools```### UserDownload and install the latest stable version from `PyPI` repository```bashpython -m pip install --upgrade locus```### DeveloperDownload the latest version from `GitHub` repository```bashgit clone https://github.com/lycantropos/locus.gitcd locus```Install dependencies```bashpython -m pip install -r requirements.txt```Install```bashpython setup.py install```Usage-----```python&gt;&gt;&gt; from ground.base import get_context&gt;&gt;&gt; context = get_context()&gt;&gt;&gt; Box, Point, Segment = context.box_cls, context.point_cls, context.segment_cls&gt;&gt;&gt; from locus import kd&gt;&gt;&gt; points = list(map(Point, range(-10, 11), range(0, 20)))&gt;&gt;&gt; kd_tree = kd.Tree(points)&gt;&gt;&gt; kd_tree.nearest_index(Point(0, 0)) == 5True&gt;&gt;&gt; kd_tree.nearest_point(Point(0, 0)) == Point(-5, 5)True&gt;&gt;&gt; kd_tree.n_nearest_indices(2, Point(0, 0)) == [6, 5]True&gt;&gt;&gt; kd_tree.n_nearest_points(2, Point(0, 0)) == [Point(-4, 6), Point(-5, 5)]True&gt;&gt;&gt; kd_tree.find_box_indices(Box(-1, 1, 0, 10)) == [9, 10]True&gt;&gt;&gt; kd_tree.find_box_points(Box(-1, 1, 0, 10)) == [Point(-1, 9), Point(0, 10)]True&gt;&gt;&gt; from locus import r&gt;&gt;&gt; boxes = list(map(Box, range(-10, 11), range(0, 20), range(-20, 0), range(-10, 11)))&gt;&gt;&gt; r_tree = r.Tree(boxes)&gt;&gt;&gt; r_tree.nearest_index(Point(0, 0)) == 10True&gt;&gt;&gt; r_tree.nearest_box(Point(0, 0)) == Box(0, 10, -10, 0)True&gt;&gt;&gt; r_tree.n_nearest_indices(2, Point(0, 0)) == [10, 11]True&gt;&gt;&gt; r_tree.n_nearest_boxes(2, Point(0, 0)) == [Box(0, 10, -10, 0), Box(1, 11, -9, 1)]True&gt;&gt;&gt; r_tree.find_subsets_indices(Box(0, 10, -10, 10)) == [10]True&gt;&gt;&gt; r_tree.find_subsets(Box(0, 10, -10, 10)) == [Box(0, 10, -10, 0)]True&gt;&gt;&gt; r_tree.find_supersets_indices(Box(0, 10, -10, 0)) == [10]True&gt;&gt;&gt; r_tree.find_supersets(Box(0, 10, -10, 0)) == [Box(0, 10, -10, 0)]True```Development-----------### Bumping version#### PreparationInstall[bump2version](https://github.com/c4urself/bump2version#installation).#### Pre-releaseChoose which version number category to bump following [semverspecification](http://semver.org/).Test bumping version```bashbump2version --dry-run --verbose $CATEGORY```where `$CATEGORY` is the target version number category name, possiblevalues are `patch`/`minor`/`major`.Bump version```bashbump2version --verbose $CATEGORY```This will set version to `major.minor.patch-alpha`. #### ReleaseTest bumping version```bashbump2version --dry-run --verbose release```Bump version```bashbump2version --verbose release```This will set version to `major.minor.patch`.### Running testsInstall dependencies```bashpython -m pip install -r requirements-tests.txt```Plain```bashpytest```Inside `Docker` container:- with `CPython`  ```bash  docker-compose --file docker-compose.cpython.yml up  ```- with `PyPy`  ```bash  docker-compose --file docker-compose.pypy.yml up  ````Bash` script:- with `CPython`  ```bash  ./run-tests.sh  ```  or  ```bash  ./run-tests.sh cpython  ```- with `PyPy`  ```bash  ./run-tests.sh pypy  ````PowerShell` script:- with `CPython`  ```powershell  .\run-tests.ps1  ```  or  ```powershell  .\run-tests.ps1 cpython  ```- with `PyPy`  ```powershell  .\run-tests.ps1 pypy  ```</longdescription>
</pkgmetadata>