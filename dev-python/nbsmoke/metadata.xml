<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>nbsmoke=======|    |    || --- | --- || Build Status | [![Linux/MacOS/Windows Build Status](https://github.com/pyviz-dev/nbsmoke/workflows/tests/badge.svg)](https://github.com/pyviz-dev/nbsmoke/actions/workflows/tests.yaml)| Coverage | [![codecov](https://codecov.io/gh/pyviz-dev/nbsmoke/branch/master/graph/badge.svg)](https://codecov.io/gh/pyviz-dev/nbsmoke) ||| Latest dev release | [![Github tag](https://img.shields.io/github/v/tag/pyviz-dev/nbsmoke.svg?label=tag&amp;colorB=11ccbb)](https://github.com/pyviz-dev/nbsmoke/tags)  || Latest release | [![Github release](https://img.shields.io/github/release/pyviz-dev/nbsmoke.svg?label=tag&amp;colorB=11ccbb)](https://github.com/pyviz-dev/nbsmoke/releases) [![PyPI version](https://img.shields.io/pypi/v/nbsmoke.svg?colorB=cc77dd)](https://pypi.python.org/pypi/nbsmoke) [![nbsmoke version](https://img.shields.io/conda/v/pyviz/nbsmoke.svg?colorB=4488ff&amp;style=flat)](https://anaconda.org/pyviz/nbsmoke) [![conda-forge version](https://img.shields.io/conda/v/conda-forge/nbsmoke.svg?label=conda%7Cconda-forge&amp;colorB=4488ff)](https://anaconda.org/conda-forge/nbsmoke) [![defaults version](https://img.shields.io/conda/v/anaconda/nbsmoke.svg?label=conda%7Cdefaults&amp;style=flat&amp;colorB=4488ff)](https://anaconda.org/anaconda/nbsmoke) || Python | [![Python support](https://img.shields.io/pypi/pyversions/nbsmoke.svg)](https://pypi.org/project/nbsmoke/)* * * * *Basic notebook smoke tests: Do they run ok? Do they contain lint?* * * * *This [Pytest](https://github.com/pytest-dev/pytest) plugin was generatedwith [Cookiecutter](https://github.com/audreyr/cookiecutter) along with[@hackebrot](https://github.com/hackebrot)'s[Cookiecutter-pytest-plugin](https://github.com/pytest-dev/cookiecutter-pytest-plugin)template.Installation------------You can install nbsmoke via [pip](https://pypi.python.org/pypi/pip/)from [PyPI](https://pypi.python.org/pypi):    $ pip install nbsmokeOr get the latest pre-release:    $ pip install --pre nbsmokenbsmoke is also available via [conda](https://conda.io/) from[anaconda.org](https://anaconda.org/):    $ conda install -c conda-forge nbsmokeUsage-----Check all notebooks run without errors:    $ pytest --nbsmoke-runCheck all notebooks run without errors, and store html to look atafterwards:    $ pytest --nbsmoke-run --store-html=/scratchLint check notebooks:    $ pytest --nbsmoke-lintLint failures as warnings only:    $ pytest --nbsmoke-lint --nbsmoke-lint-onlywarnInstead of all files in a directory, you can specify a list e.g.:    $ pytest --nbsmoke-run notebooks/Untitled*.ipynbIf you want to restrict pytest to running only your notebook tests, use-k, e.g.:    $ pytest --nbsmoke-run -k &quot;.ipynb&quot;Additional options are available by standard pytest 'ini' configurationin setup.cfg, pytest.ini, or tox.ini:    [pytest]    # when running, seconds allowed per cell (see nbconvert timeout)    nbsmoke_cell_timeout = 600    # notebooks to skip running; one case insensitive re to match per line    nbsmoke_skip_run = ^.*skipme\.ipynb$                       ^.*skipmetoo.*$    # case insensitive re to match for file to be considered notebook;    # defaults to ``^.*\.ipynb``    it_is_nb_file = ^.*\.something$    # flakes you don't want to hear about (regex)    nbsmoke_flakes_to_ignore = .*hvplot.* imported but unused.*    # line magics to treat as being flakes (i.e. magics you don't want in your notebooks)    nbsmoke_flakes_line_magics_blacklist = pylab    # cell magics to treat as being flakes (i.e. magics you don't want in your notebooks)    nbsmoke_flakes_cell_magics_blacklist = bash                                           ruby    # add your own magic handlers (python file containing line_magic_handlers and cell_magic_handlers as dictionaries magic_name: callable)    nbsmoke_magic_handlers = path/to/file.pynbsmoke supports `# noqa` comments to mark that something should beignored during lint checking.The `nbsmoke_skip_run` list in a project's config can be ignored bypassing `--ignore-nbsmoke-skip-run` (useful if sometimes you want to runall notebooks for a project where many are typically skipped).What's the point?-----------------Although more sophisticated testing of notebooks is possible (e.g. seenbval), just checking that notebooks run from start to finish withouterror in a fresh kernel (or on a neutral CI service) can be usefulduring development. Practical experience of working on several projectswith notebooks confirms this, but that's all the evidence I have.Checking notebooks for lint might seem trivial/pointless, but itfrequently uncovers unused names (typically unused imports). It's alsoquite common to find python 2 vs 3 problems, and sometimes undefinednames - in a way that's faster than running the notebook (over multipleversions of python).Unused imports/names themselves might seem trivial, but they can hinderunderstanding of a notebook by readers, or add dependencies that are notrequired.Hopefully you don't have mysterious (unused) imports in your notebook,but if you do, you can add `# noqa: explanation` to stop flake errors.E.g. if you're importing something for its side effects, it's veryhelpful to inform the reader of that.Pyflakes is used as the underlying linter because &quot;Pyflakes makes asimple promise: it will never complain about style, and it will tryvery, very hard to never emit false positives.&quot;Contributing------------First, install using `pip install -e .`. Then run the tests using `tox`or `pytest -v tests/`.New release to PyPI:`git tag -a vX.Y.Z -m &quot;Something about release&quot; &amp;&amp; git push --tags`.Then a PR will auto-open on conda-forge, which should be merged.Get some help to debug apparently incorrect flakes by adding`--nbsmoke-lint-debug`, e.g.`pytest -v --nbsmoke-lint --nbsmoke-lint-debug examples`.License-------Distributed under the terms of the[BSD-3](http://opensource.org/licenses/BSD-3-Clause) license, &quot;nbsmoke&quot;is free and open source software.Issues------If you encounter any problems, please [file anissue](https://github.com/pyviz/nbsmoke/issues) (ideally including acopy of any problematic notebook).</longdescription>
</pkgmetadata>