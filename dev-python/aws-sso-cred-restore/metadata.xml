<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=linaro-its_aws2-wrap&amp;metric=alert_status)](https://sonarcloud.io/dashboard?id=linaro-its_aws2-wrap) --&gt;# aws-sso-cred-restoreThis is script is inspired from `aws2-wrap` and solve problem with old sdk's  like aws-sdk-go and turn safe ourwork with tools like terraform.## the problemWork with terraform is more safe if we use only profile configuration and  work with `workspaces` feature.```hclprovider &quot;aws&quot; { profile = &quot;${terraform.env}&quot; region  = &quot;${var.region}&quot;}```But aws sso cli command cannot configure credentials file, and aws-sdk-go cannot work with new model of profile config.Using environment variables, the configuration overwrite profile option on provider block on terraform, and this is *dangerous*.This wrapper solve `temporary` (hello aws and hashicorp, solve this plis!!) this problem.## Install using `pip`https://pypi.org/project/aws-sso-cred-restore`pip install aws-sso-cred-restore==&lt;VERSION&gt;`## Run a command using AWS SSO credentials`aws-sso-cred-restore --profile &lt;awsprofilename-or-prefix&gt;`or run to all profiles in your config`aws-sso-cred-restore`This command will get credentials using active aws sso access key section fileand restore in `~/.aws/credentials`## Export the credentialsThere may be circumstances when it is easier/better to set the appropriate environment variables so that they can be re-used by any `aws` command.Since the script cannot directly set the environment variables in the calling shell process, it is necessary to use the following syntax:`eval &quot;$(aws-sso-cred-restore --profile &lt;awsprofilename-or-prefix&gt; --export)&quot;`</longdescription>
</pkgmetadata>