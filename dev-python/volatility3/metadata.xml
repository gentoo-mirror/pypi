<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Volatility 3: The volatile memory extraction frameworkVolatility is the world's most widely used framework for extracting digitalartifacts from volatile memory (RAM) samples. The extraction techniques areperformed completely independent of the system being investigated but offervisibility into the runtime state of the system. The framework is intendedto introduce people to the techniques and complexities associated withextracting digital artifacts from volatile memory samples and provide aplatform for further work into this exciting area of research.In 2019, the Volatility Foundation released a complete rewrite of theframework, Volatility 3. The project was intended to address many of thetechnical and performance challenges associated with the originalcode base that became apparent over the previous 10 years. Another benefitof the rewrite is that Volatility 3 could be released under a customlicense that was more aligned with the goals of the Volatility community,the Volatility Software License (VSL). See the [LICENSE](https://www.volatilityfoundation.org/license/vsl-v1.0) file for more details.## RequirementsVolatility 3 requires Python 3.7.0 or later. To install the most minimal set of dependencies (some plugins will not work) use a command such as:```shellpip3 install -r requirements-minimal.txt```Alternately, the minimal packages will be installed automatically when Volatility 3 is installed using setup.py. However, as noted in the Quick Start section below, Volatility 3 does not *need* to be installed via setup.py prior to using it.```shellpython3 setup.py build python3 setup.py install```To enable the full range of Volatility 3 functionality, use a command like the one below. For partial functionality, comment out any unnecessary packages in [requirements.txt](requirements.txt) prior to running the command.```shellpip3 install -r requirements.txt```## Downloading VolatilityThe latest stable version of Volatility will always be the stable branch of the GitHub repository. You can get the latest version of the code using the following command:```shellgit clone https://github.com/volatilityfoundation/volatility3.git```## Quick Start1. Clone the latest version of Volatility from GitHub:    ```shell    git clone https://github.com/volatilityfoundation/volatility3.git    ```2. See available options:    ```shell    python3 vol.py -h    ```3. To get more information on a Windows memory sample and to make sureVolatility supports that sample type, run`python3 vol.py -f &lt;imagepath&gt; windows.info`   Example:    ```shell    python3 vol.py -f /home/user/samples/stuxnet.vmem windows.info    ```4. Run some other plugins. The `-f` or `--single-location` is not strictlyrequired, but most plugins expect a single sample. Some alsorequire/accept other options.  Run `python3 vol.py &lt;plugin&gt; -h`for more information on a particular command.## Symbol TablesSymbol table packs for the various operating systems are available for download at:&lt;https://downloads.volatilityfoundation.org/volatility3/symbols/windows.zip&gt;  &lt;https://downloads.volatilityfoundation.org/volatility3/symbols/mac.zip&gt;  &lt;https://downloads.volatilityfoundation.org/volatility3/symbols/linux.zip&gt;  The hashes to verify whether any of the symbol pack files have downloaded successfully or have changed can be found at:&lt;https://downloads.volatilityfoundation.org/volatility3/symbols/SHA256SUMS&gt;  &lt;https://downloads.volatilityfoundation.org/volatility3/symbols/SHA1SUMS&gt;  &lt;https://downloads.volatilityfoundation.org/volatility3/symbols/MD5SUMS&gt;  Symbol tables zip files must be placed, as named, into the `volatility3/symbols` directory (or just the symbols directory next to the executable file).Windows symbols that cannot be found will be queried, downloaded, generated and cached.  Mac and Linux symbol tables must be manually produced by a tool such as [dwarf2json](https://github.com/volatilityfoundation/dwarf2json).Important: The first run of volatility with new symbol files will require the cache to be updated.  The symbol packs contain a large number of symbol files and so may take some time to update!However, this process only needs to be run once on each new symbol file, so assuming the pack stays in the same location will not need to be done again.  Please also note it can be interrupted and next run will restart itself.Please note: These are representative and are complete up to the point of creation for Windows and Mac.  Due to the ease of compiling Linux kernels and the inability to uniquely distinguish them, an exhaustive set of Linux symbol tables cannot easily be supplied.## DocumentationThe framework is documented through doc strings and can be built using sphinx.The latest generated copy of the documentation can be found at: &lt;https://volatility3.readthedocs.io/en/latest/&gt;## Licensing and CopyrightCopyright (C) 2007-2023 Volatility FoundationAll Rights Reserved&lt;https://www.volatilityfoundation.org/license/vsl-v1.0&gt;## Bugs and SupportIf you think you've found a bug, please report it at:&lt;https://github.com/volatilityfoundation/volatility3/issues&gt;In order to help us solve your issues as quickly as possible,please include the following information when filing a bug:- The version of Volatility you're using- The operating system used to run Volatility- The version of Python used to run Volatility- The suspected operating system of the memory sample- The complete command line you used to run VolatilityFor community support, please join us on Slack:&lt;https://www.volatilityfoundation.org/slack&gt;## ContactFor information or requests, contact:Volatility FoundationWeb: &lt;https://www.volatilityfoundation.org&gt;Blog:     &lt;https://volatility-labs.blogspot.com&gt;Email: volatility (at) volatilityfoundation (dot) orgTwitter: [@volatility](https://twitter.com/volatility)</longdescription>
</pkgmetadata>