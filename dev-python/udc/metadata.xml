<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># UDC## The Universal Data Client### What is UDC?Universal Data is an open source initiative to builda decentralized, cryptographically-secure ecosystemcontainerizing both structured and unstructured data.UDC is the initial (alpha) client for that system.It currently supports both Quilt and Benchling URIs.For example:- `udc list &quot;quilt+s3://quilt-example#package=examples/wellplates&quot;`- `udc patch &quot;benchling+https://dtt.benchling.com?name=Update#type=Entry&amp;id=etr_123&quot;`## InstallationNOTE: UDC requires Python 3.10 or higher.You can check your version with `python3 --version`.If you have an older version, you will need to update your environment to a[newer version of Python](https://www.pythoncentral.io/how-to-update-python/).### Production PackageFrom PyPi:&lt;!--pytest.mark.skip--&gt;```bashpython3 -m pip install udc # ORpython3 -m pip install --upgrade udcwhich udc```## Development Branch&lt;!--pytest.mark.skip--&gt;```bashpython3 -m pip install git+https://github.com/data-yaml/udc.git@main```## ClonedWhen cloned from [GitHub](https://github.com/data-yaml/udc):```bashpoetry install```&lt;--```bashalias udc=&quot;poetry run udc&quot;```--&gt;## Usage```bashudc # prints help```### List contents of a specific package instance```bashudc list &quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&quot;```e.g.,&lt;!--pytest-codeblocks:expected-output--&gt;```bash&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=README.md&quot;&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=autoplate_H1N1.csv&quot;&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=data_products.ipynb&quot;&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=neutralisation-altair.json&quot;&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=neutralisation.json&quot;&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=quilt_summarize.json&quot;&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&amp;path=render.html&quot;```### List all versions of a package```bashudc list &quot;quilt+s3://quilt-example#package=examples/wellplates&quot; | head -n 1```e.g.,&lt;!--pytest-codeblocks:expected-output--&gt;```bash&quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2c600f4c519efd5de868d5ef1e05ac92fcb0fa56044bb8c925c5f02&quot;```### List all packages in a registry```bashudc list quilt+s3://quilt-example | head -n 1```e.g.,&lt;!--pytest-codeblocks:expected-output--&gt;```bash&quot;quilt+s3://quilt-example#package=akarve/amazon-reviews:latest&quot;```### Get a package into a specific directoryYou can also use `put` (replace) and `patch` (merge) if you have write access.```bashudc get &quot;quilt+s3://quilt-example#package=examples/wellplates@6782cf98a2&quot; --dir /tmp/wellplates```Checking the download directory:```bashls /tmp/wellplates```Should reveal the following output:&lt;!--pytest-codeblocks:expected-output--&gt;```bashREADME.mdautoplate_H1N1.csvdata_products.ipynbneutralisation-altair.jsonneutralisation.jsonquilt_summarize.jsonrender.html```## Development### Testing&lt;!--pytest.mark.skip--&gt;```bashmake test```### Continuous Monitoring&lt;!--pytest.mark.skip--&gt;```bashmake watch```### Create PackageWARNING: Do this only if you are the maintainer of the package.Be sure you to first set your [~/.pypirc](https://pypi.org/manage/account/) using `poetry config pypi-token.pypi &lt;pypi-api-token&gt;`&lt;!--pytest.mark.skip--&gt;```bash# merge PRmake tagmake pypipoetry publish```</longdescription>
</pkgmetadata>