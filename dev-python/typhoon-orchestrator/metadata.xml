<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;br&gt;&lt;br&gt;️&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/typhoon-data-org/typhoon-orchestrator/f1520188bd639f9a63cf59cdc89d587096d0de4e/docs/img/typhoon_logo_large_tagline_extended.png&quot; &gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;br&gt;&lt;br&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://typhoon-data-org.github.io/website/&quot;&gt;Website :loudspeaker:&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://discord.gg/XxV5MAF8Xt&quot;&gt;Discord :sunglasses:&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://typhoon.talkyard.net/&quot;&gt;Forum :wave:&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://typhoon-data-org.github.io/typhoon-orchestrator/getting-started/installation/&quot;&gt;Installation :floppy_disk:&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://typhoon-data-org.github.io/typhoon-orchestrator/index.html&quot;&gt;Documentation :notebook: &lt;/a&gt;&lt;p align=&quot;center&quot;&gt;&lt;img style=&quot;margin: 10px&quot; src=&quot;https://img.shields.io/github/license/typhoon-data-org/typhoon-orchestrator.svg&quot; alt=&quot;Linux&quot; height=&quot;20&quot; /&gt;&lt;img style=&quot;margin: 10px&quot; src=&quot;https://github.com/typhoon-data-org/typhoon-orchestrator/actions/workflows/docker-image.yml/badge.svg&quot; /&gt;&lt;/p&gt;# Why Typhoon?Our vision is a new generation of cloud native, asynchronous orchestrators that can handle highly dynamic workflows with ease. We crafted Typhoon from the ground up to work towards this vision. It's designed to feel familiar while still making very different design decisions where it matters. &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/typhoon-data-org/typhoon-orchestrator/main/docs/img/readme_montage.gif&quot; alt=&quot;Typhoon overview montage&quot; &gt;&lt;/p&gt;## Typhoon + AWS LambdaA Serverless orchestrator has the potential to be infinitely scalable and extremely cost efficient at the same time. We think AWS Lambda is ideal for this:- CloudWatch Events can trigger a Lambda on a schedule, so we get scheduling for free! A scheduler is the most complex piece of an orchestrator. We can do away with it completely and still be sure that our DAGs will always run on time.- Lambda is cheap. You get 1 million invocations for free every month.- Workflows can be paralellized by running tasks in parallel on different instances of the Lambda. Typhoon DAGs use batching to take full advantage of this.## Typhoon + AirflowAirflow is great! It's also the industry standard and will be around for a while. However, we think it can be improved, without even migrating your existing production code.  ***Typhoon lets you write Airflow DAGS faster*** :rocket::    **Workflow**: Typhoon YAML DAG --&gt; Typhoon build --&gt; Airflow DAG Simplicity and re-usability; a toolkit designed to be loved by Data Engineers :heart:### Key features- **Pure python** - Easily extend with pure python. Frameworkless, with no dependencies.- **Testable Python** - Write tests for your tasks in PyTest. Automate DAG testing. - **Composability** - Functions and connections combine like Lego. Very easy to extend.- **Data sharing** - data flows between tasks making it intuitive to build tasks.- **Elegant: YAML** - low-code and easy to learn.- **Code-completion** - Fast to compose. (VS Code recommended).- **Components** - reduce complex tasks (e.g. CSV → S3 → Snowflake) to 1 re-usable task.- **Components UI** -  Share your pre-built automation with your team. teams. :raised_hands:- **Rich Cli &amp; Shell** - Inspired by other great command line interfaces and instantly familiar. Intelligent bash/zsh completion.- **Flexible deployment** - Deploy to Airflow. Large reduction in effort, without breaking existing production.# Example YAML DAG```yamlname: favorite_authorsschedule_interval: rate(1 day)tasks:  choose_favorites:    function: typhoon.flow_control.branch    args:      branches:        - J. K. Rowling        - George R. R. Martin        - James Clavell  get_author:    input: choose_favorites    function: functions.open_library_api.get_author    args:      author: !Py $BATCH  write_author_json:    input: get_author    function: typhoon.filesystem.write_data        args:      hook: !Hook data_lake      data:  !MultiStep        - !Py $BATCH['docs']        - !Py typhoon.data.json_array_to_json_records($1)      path: !MultiStep         - !Py $BATCH['docs'][0]['key']        - !Py f'/authors/{$1}.json'      create_intermediate_dirs: True```![Favorite Authors](docs/img/open_library_example_dag.png)*Getting the works of my favorite authors from Open Library API*# ⚡ InstallationSee [documentation](https://typhoon-data-org.github.io/typhoon-orchestrator/getting-started/installation.html) for more extensive installation instructions and walkthroughs.## with pip (typhoon standalone)Install typhoon: ```bashpip install typhoon-orchestrator[dev]# Create a projecttyphoon init hello_world# Try the Clicd hello_worldtyphoon status# Add your connectiontyphoon connection add --conn-id data_lake --conn-env localtyphoon connection ls -l```**Docs**:  [Detailed local installation instructions](https://typhoon-data-org.github.io/typhoon-orchestrator/getting-started/installation.html#directories).  |  [Hello world](https://typhoon-data-org.github.io/typhoon-orchestrator/getting-started/installation.html#directories).## With Docker and AirflowTo deploy Typhoon with Airflow you need: - Docker / Docker Desktop (For now, ***you must use Gitbash on Windows***. Currently, there is an open issue on [WSL2](https://github.com/typhoon-data-org/typhoon-orchestrator/issues/11).) - Download the [docker-compose.yaml][1]  (or use curl below)- Create a directory for your TYPHOON_PROJECTS_HOMEThe following sets up your project directory and gets the docker-compose.yml:```bashTYPHOON_PROJECTS_HOME=&quot;/tmp/typhoon_projects&quot; # Or any other path you prefermkdir -p $TYPHOON_PROJECTS_HOME/typhoon_airflow_testcd $TYPHOON_PROJECTS_HOME/typhoon_airflow_test# For Windows WSL2 Users - for other env. its optional sudo chown -R $USER: $TYPHOON_PROJECTS_HOME/typhoon_airflow_testmkdir airflowmkdir data_lakemkdir srccurl -LfO https://raw.githubusercontent.com/typhoon-data-org/typhoon-orchestrator/master/docker-compose-af.yml```!!! Important    On Windows **Gitbash** please run each docker-compose run **one by one**. They are quick.```bashdocker-compose -f docker-compose-af.yml run --rm typhoon-af airflow initdbdocker-compose -f docker-compose-af.yml run --rm typhoon-af typhoon statusdocker-compose -f docker-compose-af.yml run --rm typhoon-af typhoon connection add --conn-id data_lake --conn-env local  # Adding our first connection!docker-compose -f docker-compose-af.yml run --rm typhoon-af typhoon dag build --alldocker compose -f docker-compose-af.yml up -d```This runs a container with only 1 service, `typhoon-af`. This has both Airflow and Typhoon installed on it ready to work with.You should be able to then check `typhoon status` and also the airlfow UI at [http://localhost:8088](http://localhost:8088)**Docs**:  [Detailed docker installation instructions](https://typhoon-data-org.github.io/typhoon-orchestrator/getting-started/installation.html#directories).  |  [Development hints](https://typhoon-data-org.github.io/typhoon-orchestrator/getting-started/installation.html#directories).&lt;br&gt;![Airflow UI](docs/img/airflow_ui_list_after_install.png)*Typhoon DAGS listed in airflow UI*![Airflow Favorite Author](docs/img/airflow_favorite_author_basic_dag.PNG)*Favorite Authors DAG - as displayed in airflow UI*</longdescription>
</pkgmetadata>