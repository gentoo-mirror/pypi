<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Advantage Air API Wrapper# GetReturns the current state of all components.&gt; async_get()# SetChange attributes by sending the updated values to the relevant endpoint.## aircon.async_update_ac(ac: str, data: dict)Update values on the AC system## aircon.async_update_zone(ac: str, zone: str, data: dict)Update values on a specific zone## lights.async_update_state(id: str, state: str|bool)Update the state of a light. off|false = off, on|true = on## lights.async_update_value(id: str, value: int)Update the brightness of a light, and assumes 0 is off.## things.async_update_value(id: str, value : int|bool)Update the value of a thing. 0|false = off, 100|true = on## \*.async_update(data: dict)Directly update with data to the endpoint.# Example```{.python}import asyncioimport aiohttpfrom advantage_air import advantage_airasync def main():    async with aiohttp.ClientSession() as session:        aa = advantage_air(&quot;192.168.1.24&quot;, port=2025, session=session, retry=5)        if data := await aa.async_get(1):            print(data)            aa.aircon.async_update_ac(&quot;ac1&quot;,{&quot;state&quot;: &quot;on&quot;})            await asyncio.gather(                aa.aircon.async_update_zone(&quot;ac1&quot;,&quot;z01&quot;, {&quot;value&quot;: 25}),                aa.aircon.async_update_zone(&quot;ac1&quot;,&quot;z02&quot;, {&quot;value&quot;: 50}),            )asyncio.run(main())```</longdescription>
</pkgmetadata>