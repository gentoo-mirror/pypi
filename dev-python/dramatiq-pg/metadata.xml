<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Dramatiq-pg](https://gitlab.com/dalibo/dramatiq-pg/raw/master/docs/logo-horizontal.png?inline=false)[Dramatiq](https://dramatiq.io/) is a simple task queue implementation forPython3. dramatiq-pg provides a Postgres-based implementation of a dramatiqbroker.## Features- Super simple deployment: Single table, no ORM.- Stores message payload and results as native JSONb.- Uses LISTEN/NOTIFY to keep worker sync. No polling.- Implements delayed task.- Reliable thanks to Postgres MVCC.- Self-healing: automatic purge of old messages. Automatic recovery after  crash.- Utility CLI for maintainance: flush, purge, stats, etc.Note that dramatiq assumes tasks are idempotent. This broker makes the sameassumptions for recovering after a crash.## Installation- Install dramatiq-pg package from PyPI:  ``` console  $ pip install dramatiq-pg psycopg2-binary  ```  Ensure you have either psycopg2 or psycopg2-binary installed.- Init database schema with `init` command.  ``` console  $ dramatiq-pg init  ```  Or adapt `dramatiq-pg/schema.sql` to your needs.- Before importing actors, define global broker with a connection  pool:  ``` python  import dramatiq  import psycopg2.pool  from dramatiq_pg import PostgresBroker  dramatiq.set_broker(PostgresBroker(i))  @dramatiq.actor  def myactor():      ...  ```Now declare/import actors and manage worker just like any [dramatiqsetup](https://dramatiq.io/guide.html). An [examplescript](https://gitlab.com/dalibo/dramatiq-pg/blob/master/example.py) isavailable, tested on CI.The CLI tool `dramatiq-pg` allows you to requeue messages, purge old messagesand show stats on the queue. See `--help` for details.[Dramatiq-pgdocumentation](https://gitlab.com/dalibo/dramatiq-pg/blob/master/docs/index.rst)is hosted on GitLab and give you more details on deployment and operation ofPostgres as a Dramatiq broker.## Integration**Django** : Use[django-dramatiq-pg](https://github.com/uptick/django-dramatiq-pg/) by [CurtisMaloney](https://gitlab.com/FunkyBob). It includes configuration, ORM model anddatabase migration.## SupportIf you encounter a bug or miss a feature, please [open an issue onGitLab](https://gitlab.com/dalibo/dramatiq-pg/issues/new) with as muchinformation as possible.dramatiq_pg is available under the PostgreSQL licence.## CreditThanks to all contributors :- Andy Freeland- Curtis Maloney, Django support.- Federico Caselli, bugfixes.- Giuseppe Papallo, bugfixes.- Rafal Kwasny, improvements.The logo is a creation of [Damien CAZEILS](http://www.damiencazeils.com/)</longdescription>
</pkgmetadata>