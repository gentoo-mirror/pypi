<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-mirage-field![](https://img.shields.io/pypi/v/django-mirage-field.svg?label=django-mirage-field)[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fluojilab%2Fdjango-mirage-field&amp;count_bg=%233DC8BC&amp;title_bg=%23555555&amp;icon=&amp;icon_color=%23E7E7E7&amp;title=views&amp;edge_flat=false)](https://hits.seeyoufarm.com)## IntroduceA Django model fields collection that encrypt your data when save to and decrypt when get from database. It keeps data always encrypted in database. Base on AES, it supports query method like `get()` and `filter()` in Django.Mirage can also migrate data from origin column to encrypted column in database with a good performance.## Features* Use settings.SECRET_KEY as secret key default or anyelse which length &gt;= 32* Support CharField, TextField, IntegerField, EmailField* Support Django ORM's `get()`, `filter()` query method* Support AES-256-ECB and AES-256-CBC(v1.2.0)* Support PostgreSQL and MySQL database* Support Django model field `db_index` and `unique` attributes## Installation```bashpip install django-mirage-field```## Usage```pythonfrom mirage import fieldsclass TestModel(models.Model):    age = fields.EncryptedIntegerField()``````pythonobj = TestModel.objects.get(age=18)obj.id          # 1obj.age         # 18type(obj.age)   # int``````psqldatabase=# select * from testmodel where id = 1;         id          |           age---------------------+-------------------------- 1 | -bYijegsEDrmS1s7ilnspA==``````pythonfrom mirage.crypto import Cryptoc = Crypto()                      # key is optional, default will use settings.SECRET_KEYc.encrypt('some_address')               # -bYijegsEDrmS1s7ilnspA==c.decrypt('-bYijegsEDrmS1s7ilnspA==')   # some_address```## Settings- MIRAGE_SECRET_KEY- MIRAGE_CIPHER_MODE (v1.2.0+)- MIRAGE_CIPHER_IV (v1.2.0+)### MIRAGE_SECRET_KEYYou can use the `settings.SECRET_KEY` as default key, if you want custom another key for mirage, set the `MIRAGE_SECRET_KEY` in settings.Mirage will get the `settings.MIRAGE_SECRET_KEY` first, if not set, mirage will get the `settings.SECRET_KEY`.### MIRAGE_CIPHER_MODE`MIRAGE_CIPHER_MODE` is optional, choices are below, If don't set, default is `ECB`.- `ECB`- `CBC`### MIRAGE_CIPHER_IV`MIRAGE_CIPHER_IV` is optional, if you don't set, it will use a default: &quot;1234567890abcdef&quot;, it's length must be 16.## Model Fields1. EncryptedTextField2. EncryptedCharField3. EncryptedEmailField4. EncryptedIntegerField5. EncryptedURLField(v1.3.0+)## Data MigrateAdd`mirage`to`INSTALLED_APPS`### Way 1. Migrationsadd `app_name`,`model_name`,`field_name` in [migrations.RunPython](https://docs.djangoproject.com/en/2.2/ref/migration-operations/#runpython)```from mirage.tools import Migratormigrations.RunPython(Migrator(&quot;app_name&quot;, &quot;model_name&quot;, &quot;field_name&quot;).encrypt, reverse_code=Migrator(&quot;app_name&quot;, 'model_name', 'field_name').decrypt),```### Way 2. CommandsOptions:* --app* --model* --field* --method (optional: `encrypt`, `decrypt`, `encrypt_to`, `decrypt_to`, `copy_to`)* --tofield (need when use `encryt_to`, `decrypt_to`, `copy_to` method)Optional options:* --offset (&quot;select * from xxx where id &gt; offset&quot;)* --total (&quot;select * from xxx order by id limit total&quot;)* --limit: set the query count in every update, default is 1000, if you set -1, mirage will query all rows one time to update.Examples```./manage.py mirage --app=yourapp --model=testmodel --field=address --method=encrypt --offset=2000000 --total=3000000./manage.py mirage --app=yourapp --model=testmodel --field=address --method=encrypt_to --tofield=encrypted_address```## Exceptions```from mirage import exceptions```1. EncryptedFieldException## Performance### With ECB modeMigrate data: 6000,000 columns takes 40 minutes, Average 1 column/2.5msOnly encrypt/decrypt: Average 1 value/ms## Clients* [Java](https://github.com/luojilab/django-mirage-field/tree/master/client/java)</longdescription>
</pkgmetadata>