<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/jonathf/chaospy/raw/master/docs/_static/chaospy_logo.svg   :height: 200 px   :width: 200 px   :align: center|circleci| |codecov| |readthedocs| |downloads| |pypi|.. |circleci| image:: https://img.shields.io/circleci/build/github/jonathf/chaospy/master    :target: https://circleci.com/gh/jonathf/chaospy/tree/master.. |codecov| image:: https://img.shields.io/codecov/c/github/jonathf/chaospy    :target: https://codecov.io/gh/jonathf/chaospy.. |readthedocs| image:: https://img.shields.io/readthedocs/chaospy    :target: https://chaospy.readthedocs.io/en/master/?badge=master.. |downloads| image:: https://img.shields.io/pypi/dm/chaospy    :target: https://pypistats.org/packages/chaospy.. |pypi| image:: https://img.shields.io/pypi/v/chaospy    :target: https://pypi.org/project/chaospy* `Documentation &lt;https://chaospy.readthedocs.io/en/master&gt;`_* `Interactive tutorials with Binder &lt;https://mybinder.org/v2/gh/jonathf/chaospy/master?filepath=docs%2Fuser_guide&gt;`_* `Code of conduct &lt;https://github.com/jonathf/chaospy/blob/master/CODE_OF_CONDUCT.md&gt;`_* `Contribution guideline &lt;https://github.com/jonathf/chaospy/blob/master/CONTRIBUTING.md&gt;`_* `Changelog &lt;https://github.com/jonathf/chaospy/blob/master/CHANGELOG.md&gt;`_* `License &lt;https://github.com/jonathf/chaospy/blob/master/LICENCE.txt&gt;`_Chaospy is a numerical toolbox for performing uncertainty quantification usingpolynomial chaos expansions, advanced Monte Carlo methods implemented inPython. It also include a full suite of tools for doing low-discrepancysampling, quadrature creation, polynomial manipulations, and a lot more.The philosophy behind ``chaospy`` is not to be a single tool that solves everyuncertainty quantification problem, but instead be a specific tools to aid tolet the user solve problems themselves. This includes both well establishedproblems, but also to be a foundry for experimenting with new problems, thatare not so well established. To do this, emphasis is put on the following:* Focus on an easy to use interface that embraces the `pythonic code style  &lt;https://docs.python-guide.org/writing/style/&gt;`_.* Make sure the code is &quot;composable&quot;, such a way that changing one part of the  code with something user defined should be easy and encouraged.* Try to support a broad width of the various methods for doing uncertainty  quantification where that makes sense to involve ``chaospy``.* Make sure that ``chaospy`` plays nice with a large set of of other other  similar projects. This includes `numpy &lt;https://numpy.org/&gt;`_, `scipy  &lt;https://scipy.org/&gt;`_, `scikit-learn &lt;https://scikit-learn.org&gt;`_,  `statsmodels &lt;https://statsmodels.org/&gt;`_, `openturns  &lt;https://openturns.org/&gt;`_, and `gstools &lt;https://geostat-framework.org/&gt;`_  to mention a few.* Contribute all code to the community open source.Installation============Installation should be straight forward from `pip &lt;https://pypi.org/&gt;`_:.. code-block:: bash    pip install chaospyOr if `Conda &lt;https://conda.io/&gt;`_ is more to your liking:.. code-block:: bash    conda install -c conda-forge chaospyThen go over to the `documentation &lt;https://chaospy.readthedocs.io/en/master&gt;`_to see how to use the toolbox.Development===========Installing ``chaospy`` and its dependencies in developer mode is done asfollows:.. code-block:: bash    pip install -r requirements-dev.txt    pip install -e .Testing-------To ensure that the code run on your local system, run the following:.. code-block:: bash    pytest --doctest-modules chaospy/ tests/ README.rstDocumentation-------------The documentation build assumes that ``pandoc`` is installed on yoursystem and available in your path.To build documentation locally on your system, use ``make`` from the ``docs/``folder:.. code-block:: bash    cd docs/    make htmlRun ``make`` without argument to get a list of build targets.The HTML target stores output to the folder ``doc/.build/html``.</longdescription>
</pkgmetadata>