<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># emiTimeThe __emiTime__ library is designed to simplify the work with objects describing calendar time points and intervals between them.All algorithms presented in the library are based on two entities `Moment` and `Inerval`.Each of them can be fired from anything that looks like a calendar time point or a time interval.## Installation```pip install emitime```Or from GitHub```git clone https://github.com/rilshok/emitime.gitcd emitimepip install -e .```## UsageA `Moment` object can be created by a `str`, datetime module objects such as `date` and `datetime`, or another `Moment`.In turn, `Interval` can also be derived from a `str`, `datetime.time` or another `Interval`.```pythonimport datetime as dtfrom emitime import Momentd1 = Moment(&quot;1970-01-01&quot;)d2 = Moment(dt.datetime(1970, 1, 1))d3 = Moment(dt.date(1970, 1, 1))d4 = Moment(d3)print(f&quot;{d1=}, {d2=}, {d3=}, {d4=}&quot;)print(f&quot;{d1 == d2 == d3 == d4 = }&quot;)``````d1=1970-01-01, d2=1970-01-01, d3=1970-01-01, d4=1970-01-01d1 == d2 == d3 == d4 = True``````pythonimport datetime as dtfrom emitime import Intervalt1 = Interval(&quot;2d&quot;)t2 = Interval(&quot;12:00&quot;)t3 = Interval(dt.timedelta(hours=5))t4 = Interval(t3)print(f&quot;{t1=}, {t2=}, {t3=}, {t4=}&quot;)print(f&quot;{t1 &gt; t2 &gt; t3 &gt;= t4 = }&quot;)``````t1=+2^00:00, t2=+12:00, t3=+05:00, t4=+05:00t1 &gt; t2 &gt; t3 &gt;= t4 = True````Moment` and `Interval` can participate in natural mathematical operations and be compared with each other.Also, whenever possible, depending on the context, __emiTime__ promotes the type of one of the operands of the operation to `Moment` or `Interval````pythonimport datetime as dtfrom emitime import Interval, Momentm1 = Moment(&quot;1970-01-01&quot;) + &quot;2d&quot;m2 = dt.timedelta(hours=5) + Moment(&quot;01.01.1970&quot;)m3 = &quot;1970-01-01&quot; + Interval(&quot;12:00&quot;)i1 = Moment(&quot;2020-01-01&quot;) - &quot;2019-01-01&quot;i2 = &quot;12:00&quot; - Interval(&quot;1d&quot;)i3 = dt.date(2021, 1, 1) - Moment(&quot;2020-01-01&quot;)print(f&quot;{m1=}, {m2=}, {m3=}&quot;)print(f&quot;{i1=}, {i2=}, {i3=}&quot;)print(f&quot;{m1 &gt; m2=}&quot;)print(f&quot;{m2 &lt; m3 &lt;= m1 =}&quot;)print(f&quot;{m3+i2 == m1 - i3+i1 - i3+i1 = }&quot;)``````m1=1970-01-03, m2=1970-01-01d05:00, m3=1970-01-01d12:00i1=+365^00:00, i2=-12:00, i3=+366^00:00m1 &gt; m2=Truem2 &lt; m3 &lt;= m1 =Truem3+i2 == m1 - i3+i1 - i3+i1 = True````Moment` is based on the standard `datetime.datetime` and `Interval` is based on `datetime.timedelta`. Which can be accessed as follows.```pythonfrom emitime import Interval, Momentm = Moment(&quot;1970-01-01&quot;)i = Interval(&quot;02:10&quot;)mdt = m.datetimeitd = i.timedeltaprint(f&quot;{mdt = }&quot;)print(f&quot;{itd = }&quot;)``````mdt = datetime.datetime(1970, 1, 1, 0, 0)itd = datetime.timedelta(seconds=7800)```---Emit and enjoy.</longdescription>
</pkgmetadata>