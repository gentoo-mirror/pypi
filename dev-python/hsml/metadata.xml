<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Hopsworks Model Management&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://community.hopsworks.ai&quot;&gt;&lt;img    src=&quot;https://img.shields.io/discourse/users?label=Hopsworks%20Community&amp;server=https%3A%2F%2Fcommunity.hopsworks.ai&quot;    alt=&quot;Hopsworks Community&quot;  /&gt;&lt;/a&gt;    &lt;a href=&quot;https://docs.hopsworks.ai&quot;&gt;&lt;img    src=&quot;https://img.shields.io/badge/docs-HSML-orange&quot;    alt=&quot;Hopsworks Model Management Documentation&quot;  /&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/hsml/&quot;&gt;&lt;img    src=&quot;https://img.shields.io/pypi/v/hsml?color=blue&quot;    alt=&quot;PyPiStatus&quot;  /&gt;&lt;/a&gt;  &lt;a href=&quot;https://archiva.hops.works/#artifact/com.logicalclocks/hsml&quot;&gt;&lt;img    src=&quot;https://img.shields.io/badge/java-HSML-green&quot;    alt=&quot;Scala/Java Artifacts&quot;  /&gt;&lt;/a&gt;  &lt;a href=&quot;https://pepy.tech/project/hsml/month&quot;&gt;&lt;img    src=&quot;https://pepy.tech/badge/hsml/month&quot;    alt=&quot;Downloads&quot;  /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img    src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;    alt=&quot;CodeStyle&quot;  /&gt;&lt;/a&gt;  &lt;a&gt;&lt;img    src=&quot;https://img.shields.io/pypi/l/hsml?color=green&quot;    alt=&quot;License&quot;  /&gt;&lt;/a&gt;&lt;/p&gt;HSML is the library to interact with the Hopsworks Model Registry and Model Serving. The library makes it easy to export, manage and deploy models.The library automatically configures itself based on the environment it is run.However, to connect from an external Python environment additional connection information, such as host and port, is required. For more information about the setup from external environments, see the setup section.## Getting Started On HopsworksInstantiate a connection and get the project model registry and serving handles```pythonimport hsml# Create a connectionconnection = hsml.connection()# Get the model registry handle for the project's model registrymr = connection.get_model_registry()# Get the model serving handle for the current model registryms = connection.get_model_serving()```Create a new model```pythonmodel = mr.tensorflow.create_model(name=&quot;mnist&quot;,                                   version=1,                                   metrics={&quot;accuracy&quot;: 0.94},                                   description=&quot;mnist model description&quot;)model.save(&quot;/tmp/model_directory&quot;) # or /tmp/model_file```Download a model```pythonmodel = mr.get_model(&quot;mnist&quot;, version=1)model_path = model.download()```Delete a model```pythonmodel.delete()```Get best performing model```pythonbest_model = mr.get_best_model('mnist', 'accuracy', 'max')```Deploy a model```pythondeployment = model.deploy()```Start a deployment```pythondeployment.start()```Make predictions with a deployed model```pythondata = { &quot;instances&quot;: [ model.input_example ] }predictions = deployment.predict(data)```You can find more examples on how to use the library in [examples.hopsworks.ai](https://examples.hopsworks.ai).## DocumentationDocumentation is available at [Hopsworks Model Management Documentation](https://docs.hopsworks.ai/).## IssuesFor general questions about the usage of Hopsworks Machine Learning please open a topic on [Hopsworks Community](https://community.hopsworks.ai/).Please report any issue using [Github issue tracking](https://github.com/logicalclocks/machine-learning-api/issues).## ContributingIf you would like to contribute to this library, please see the [Contribution Guidelines](CONTRIBUTING.md).</longdescription>
</pkgmetadata>