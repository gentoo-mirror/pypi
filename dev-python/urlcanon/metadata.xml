<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>urlcanon========.. image:: https://travis-ci.org/iipc/urlcanon.svg?branch=master    :target: https://travis-ci.org/iipc/urlcanon    :alt: build statusA URL canonicalization (normalization) library for Python and Java.It currently provides:* A URL parser which preserves the input bytes exactly* A precanned canonicalization ruleset that tries to match the normalization  implicit in the `parsing rules used by browsers  &lt;https://url.spec.whatwg.org/&gt;`_* An alternative URL serialization suitable for sorting and prefix-matching:  `SSURT &lt;ssurt.rst&gt;`_.**Status:** Stable and in production use for some time. But no API or outputstability guarantees yet. There are differences in features between Java andPython versions.Examples--------Python~~~~~~.. code:: python    &gt;&gt;&gt; import urlcanon    &gt;&gt;&gt; input_url = &quot;http://///EXAMPLE.com:80/foo/../bar&quot;    &gt;&gt;&gt; parsed_url = urlcanon.parse_url(input_url)    &gt;&gt;&gt; print(parsed_url)    http://///EXAMPLE.com:80/foo/../bar    &gt;&gt;&gt; urlcanon.whatwg(parsed_url)    &lt;urlcanon.parse.ParsedUrl object at 0x10eb13a58&gt;    &gt;&gt;&gt; print(parsed_url)    http://example.com/bar    &gt;&gt;&gt; print(parsed_url.ssurt())    b'com,example,//:http/bar'    &gt;&gt;&gt;    &gt;&gt;&gt; rule = urlcanon.MatchRule(ssurt=b'com,example,//:http/bar')    &gt;&gt;&gt; urlcanon.whatwg.rule_applies(rule, b'https://example..com/bar/baz')    False    &gt;&gt;&gt; urlcanon.whatwg.rule_applies(rule, b'HTtp:////eXAMple.Com/bar//baz//..///quu')    TruePython releases are available in PyPI:.. code:: sh    pip install urlcanonJava~~~~.. code:: java    String inputUrl = &quot;http://///EXAMPLE.com:80/foo/../bar&quot;;    ParsedUrl parsedUrl = ParsedUrl.parseUrl(inputUrl);    System.out.println(parsedUrl);    // http://///EXAMPLE.com:80/foo/../bar    Canonicalizer.WHATWG.canonicalize(parsedUrl);    System.out.println(parsedUrl);    // http://example.com/bar    System.out.println(parsedUrl.ssurt());    // &quot;com,example,//:http/bar&quot;Java releases are available in the Maven Central repository:.. code:: xml    &lt;dependency&gt;        &lt;groupId&gt;org.netpreserve&lt;/groupId&gt;        &lt;artifactId&gt;urlcanon&lt;/artifactId&gt;        &lt;version&gt;0.1.1&lt;/version&gt;    &lt;/dependency&gt;License-------* Copyright (C) 2016-2018 Internet Archive* Copyright (C) 2016-2017 National Library of AustraliaLicensed under the Apache License, Version 2.0 (the &quot;License&quot;); you maynot use this software except in compliance with the License. You mayobtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</longdescription>
</pkgmetadata>