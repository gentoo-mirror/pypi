<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==========notify-run==========Setup-----``notify-run`` can be installed with ``pip``::    pip install notify-runThis will install both a Python module ``notify_run`` for sending notificationsprogrammatically, and the ``notify-run`` command for sending notificationsfrom the shell.Configuration-------------Before you use either the shell command or Python package to send notifications,you must configure an endpoint. Both the command-line interface and Pythoninterface provide a way of creating this configuration, and the configuration isshared by both. The configuration is stored in a file called ``.config/notify-run``in your home directory.Command-line Interface----------------------Register a channel~~~~~~~~~~~~~~~~~~To register a channel::    notify-run registerYou will then be presented with a link that you can open on the devicesyou wish to subscribe to the channel. A QR code encoding the link is alsoprovided for convinience... image:: https://raw.githubusercontent.com/notify-run/notify.run/master/py_client/screenshots/register.png   :width: 490px   :height: 453px   :alt: Registering from the command line.Sending Message~~~~~~~~~~~~~~~Once you have registered a channel, you can send a message to it with the``send`` subcommand::    notify-run send &quot;Hi from notify-run.&quot;To open a webpage when the notification is clicked, you can pass it tonotify-run as the `-a` parameter::    notify-run send &quot;Click to open notify.run!&quot; -a https://notify.runUsing an Existing Endpoint~~~~~~~~~~~~~~~~~~~~~~~~~~If you want to point notify-run at an existing endpoint, for example onecreated through the `web interface &lt;https://notify.run/&gt;`_, you can use the``configure`` subcommand instead of ``register``::    notify-run configure &lt;endpoint URL&gt;Python Interface----------------The commands above can also be used through a Python interface::    from notify_run import Notify    notify = Notify()    notify.register()    notify.send('Hi there!')    notify.send('Click to open notify.run!', 'https://notify.run')To connect to a channel you have already created, pass it as the `endpoint` parameter to `Notify()`:    notify = Notify(endpoint=&quot;https://notify.run/&lt;channel_id&gt;&quot;)The ``notify.register()`` and ``notify.info()`` commands return an ``EndpointInfo`` object.When rendered in a terminal, this prints the QR code in a terminal-friendly way. When usedin a Jupyter notebook, it displays the QR code inline... image:: https://raw.githubusercontent.com/notify-run/notify.run/master/py_client/screenshots/notebook.png   :width: 490px   :height: 453px   :alt: Inline QR Code in Jupyter Notebook</longdescription>
</pkgmetadata>