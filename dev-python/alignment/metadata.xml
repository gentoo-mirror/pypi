<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=========Alignment=========Alignment is a native Python library for generic sequence alignment. It isuseful in cases where your alphabet is arbitrarily large and you cannot usetraditional biological sequence analysis tools. It supports global and localpairwise sequence alignment. I also plan to add support for profile-profilealignments, but who knows when.Installation============You can install the most recent release using pip:    pip install alignmentUsage=====Typical usage looks like this::    from alignment.sequence import Sequence    from alignment.vocabulary import Vocabulary    from alignment.sequencealigner import SimpleScoring, GlobalSequenceAligner    # Create sequences to be aligned.    a = Sequence('what a beautiful day'.split())    b = Sequence('what a disappointingly bad day'.split())    # Create a vocabulary and encode the sequences.    v = Vocabulary()    aEncoded = v.encodeSequence(a)    bEncoded = v.encodeSequence(b)    # Create a scoring and align the sequences using global aligner.    scoring = SimpleScoring(2, -1)    aligner = GlobalSequenceAligner(scoring, -2)    score, encodeds = aligner.align(aEncoded, bEncoded, backtrace=True)    # Iterate over optimal alignments and print them.    for encoded in encodeds:        alignment = v.decodeSequenceAlignment(encoded)        print alignment        print 'Alignment score:', alignment.score        print 'Percent identity:', alignment.percentIdentity()        printTODO List=========- Profile-profile alignment is not working yet.</longdescription>
</pkgmetadata>