<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pychromepdf [![PyPI version](https://badge.fury.io/py/pychromepdf.png)](https://badge.fury.io/py/pychromepdf) [![Travis build status](https://travis-ci.org/nvnmo/pychromepdf.svg?branch=master)](https://travis-ci.org/github/nvnmo/pychromepdf)Pychromepdf is a Python package that lets you easily create PDFs by rendering HTML content using Chrome or Chromium as backend. It works without any external dependecies except a working installation of Chrome or Chromium that supports headless mode.# Installation```bashpip install pychromepdf```## Usage### Rendering HTML bytestring to PDF```pythonfrom pychromepdf import ChromePDF# change to your chrome executable pathPATH_TO_CHROME_EXE = '/usr/bin/google-chrome-stable'# if you're on MacOS# PATH_TO_CHROME_EXE = '/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'if __name__ == '__main__':    # initialize chromepdf object    cpdf = ChromePDF(PATH_TO_CHROME_EXE)    # the html that need to be rendered into pdf    html_bytestring = '''    &lt;!doctype html&gt;    &lt;html&gt;        &lt;head&gt;            &lt;style&gt;            @media print {                @page { margin: 0; }                body { margin: 1.6cm; }            }            &lt;/style&gt;        &lt;/head&gt;        &lt;body&gt;            &lt;h1&gt;Hello, World&lt;/h1&gt;            &lt;h5&gt; Generated using headless chrome &lt;/h5&gt;        &lt;/body&gt;    &lt;/html&gt;    '''    # create a file and write the pdf to it    with open('test.pdf','w') as output_file:        if cpdf.html_to_pdf(html_bytestring,output_file):            print(&quot;Successfully generated the pdf: {}&quot;.format(output_file.name))        else:            print(&quot;Error generating pdf&quot;)```### Rendering a flask template into PDF```pythonfrom flask import Flask, render_template, send_fileimport tempfilefrom pychromepdf import ChromePDFapp = Flask(__name__)# change to your chrome executable pathPATH_TO_CHROME_EXE = '/usr/bin/google-chrome-stable'# if you're on MacOS# PATH_TO_CHROME_EXE = '/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'# initialize a chromepdf objectcpdf = ChromePDF(PATH_TO_CHROME_EXE)# home route@app.route('/')def index():    return render_template('index.html',username=&quot;John&quot;)# custom pdf route@app.route('/getpdf',defaults={'username': 'John'})@app.route('/getpdf/&lt;username&gt;')def getpdf(username):    # get the rendered html as string using the template    rendered_html = render_template('index.html',username=username)    # create a temporary output file which will be deleted when closed    with tempfile.NamedTemporaryFile(suffix='.pdf') as output_file:        # create a pdf from the rendered html and write it to output_file        if cpdf.html_to_pdf(rendered_html,output_file):            print(&quot;PDF generated successfully: {0}&quot;.format(output_file.name))            try:                # send the file to user                return send_file(output_file.name,attachment_filename='awesome.pdf')            except Exception as e:                return str(e)        else:            print(&quot;Error creating PDF&quot;)    return &quot;Error&quot;                if __name__ == '__main__':    app.run(debug=True)```Template```html{# templates/index.html #}&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;title&gt;Example&lt;/title&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;    &lt;style&gt;        @media print {            @page { margin: 0; }            body { margin: 1.6cm; }        }    &lt;/style&gt;    &lt;/head&gt;&lt;body&gt;    &lt;h1&gt;Hello {{ username }}!&lt;/h1&gt;    &lt;h4&gt;Generated using ChromePDF&lt;/h4&gt;&lt;/body&gt;&lt;/html&gt;```# Contributors- [nvnmo](https://github.com/nvnmo)- [chibiegg](https://github.com/chibiegg)# LicenseMIT License</longdescription>
</pkgmetadata>