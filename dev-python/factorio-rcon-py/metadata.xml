<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># factorio-rcon-pyA simple Factorio RCON client## InstallWithout async support`pip install factorio-rcon-py`With async support`pip install factorio-rcon-py[async]`Async support is available as soon as the required dependency (anyio) is installed, so `pip install factorio-rcon-py anyio` is mostly equivalent, but not recommended due to dependency versioning.Python 3.7+ is required.## UsageExample:```pythonimport factorio_rconclient = factorio_rcon.RCONClient(&quot;127.0.0.1&quot;, 12345, &quot;mypassword&quot;)response = client.send_command(&quot;/help&quot;)```All documentation is in the docstrings of each class/method.Asynchronous usage of this module is possible thanks to [anyio](https://github.com/agronholm/anyio). This means that you can use the async client with asyncio and trio. Use the AsyncRCONClient class. More details are in its docstring.Available methods in both classes are (see docstrings for more info):* connect - Connects to the RCON server.* close - Closes the connection to the RCON server.* send_packet - Sends a packet to the RCON server.* receive_packet - Receives a packet from the RCON server.* send_command - Sends a single command to the RCON server.* send_commands - Sends multiple commands to the RCON server.The methods for sending/receiving packets are available in case you want towrite your own packet handlers, but in most cases you will never need to touchthese and can use send_command(s).## MentionsThanks to [Truman Kilen](https://github.com/trumank) for the initial code / idea.## LicenseLGPLv2.1</longdescription>
</pkgmetadata>