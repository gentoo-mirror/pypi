<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;mypy-boto3-fsx&quot;&gt;&lt;/a&gt;# mypy-boto3-fsx[![PyPI - mypy-boto3-fsx](https://img.shields.io/pypi/v/mypy-boto3-fsx.svg?color=blue)](https://pypi.org/project/mypy-boto3-fsx)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-fsx.svg?color=blue)](https://pypi.org/project/mypy-boto3-fsx)[![Docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_fsx/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-fsx?color=blue)](https://pypistats.org/packages/mypy-boto3-fsx)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[boto3.FSx 1.26.109](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/fsx.html#FSx)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in[mypy-boto3-fsx docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_fsx/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [mypy-boto3-fsx](#mypy-boto3-fsx)  - [How to install](#how-to-install)    - [VSCode extension](#vscode-extension)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;vscode-extension&quot;&gt;&lt;/a&gt;### VSCode extensionAdd[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)extension to your VSCode and run `AWS boto3: Quick Start` command.Click `Modify` and select `boto3 common` and `FSx`.&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `boto3-stubs` for `FSx` service.```bash# install with boto3 type annotationspython -m pip install 'boto3-stubs[fsx]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'boto3-stubs-lite[fsx]'# standalone installationpython -m pip install mypy-boto3-fsx```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y mypy-boto3-fsx```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `boto3-stubs[fsx]` in your environment:```bashpython -m pip install 'boto3-stubs[fsx]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `boto3` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `boto3-stubs-lite[fsx]` in your environment:```bashpython -m pip install 'boto3-stubs-lite[fsx]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `boto3-stubs` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `boto3-stubs` with services you use in your environment:```bashpython -m pip install 'boto3-stubs[fsx]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed `boto3-stubs`Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `boto3-stubs[fsx]` with services you use in your environment:```bashpython -m pip install 'boto3-stubs[fsx]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `boto3-stubs[fsx]` in your environment:```bashpython -m pip install 'boto3-stubs[fsx]'````Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `boto3-stubs[fsx]` in your environment:```bashpython -m pip install 'boto3-stubs[fsx]'```Optionally, you can install `boto3-stubs` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`FSxClient` provides annotations for `boto3.client(&quot;fsx&quot;)`.```pythonfrom boto3.session import Sessionfrom mypy_boto3_fsx import FSxClientclient: FSxClient = Session().client(&quot;fsx&quot;)# now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`mypy_boto3_fsx.paginator` module contains type annotations for all paginators.```pythonfrom boto3.session import Sessionfrom mypy_boto3_fsx import FSxClientfrom mypy_boto3_fsx.paginator import (    DescribeBackupsPaginator,    DescribeFileSystemsPaginator,    DescribeStorageVirtualMachinesPaginator,    DescribeVolumesPaginator,    ListTagsForResourcePaginator,)client: FSxClient = Session().client(&quot;fsx&quot;)# Explicit type annotations are optional here# Types should be correctly discovered by mypy and IDEsdescribe_backups_paginator: DescribeBackupsPaginator = client.get_paginator(&quot;describe_backups&quot;)describe_file_systems_paginator: DescribeFileSystemsPaginator = client.get_paginator(    &quot;describe_file_systems&quot;)describe_storage_virtual_machines_paginator: DescribeStorageVirtualMachinesPaginator = (    client.get_paginator(&quot;describe_storage_virtual_machines&quot;))describe_volumes_paginator: DescribeVolumesPaginator = client.get_paginator(&quot;describe_volumes&quot;)list_tags_for_resource_paginator: ListTagsForResourcePaginator = client.get_paginator(    &quot;list_tags_for_resource&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`mypy_boto3_fsx.literals` module contains literals extracted from shapes thatcan be used in user code for type checking.```pythonfrom mypy_boto3_fsx.literals import (    AdministrativeActionTypeType,    AliasLifecycleType,    AutoImportPolicyTypeType,    BackupLifecycleType,    BackupTypeType,    DataCompressionTypeType,    DataRepositoryLifecycleType,    DataRepositoryTaskFilterNameType,    DataRepositoryTaskLifecycleType,    DataRepositoryTaskTypeType,    DeleteFileSystemOpenZFSOptionType,    DeleteOpenZFSVolumeOptionType,    DescribeBackupsPaginatorName,    DescribeFileSystemsPaginatorName,    DescribeStorageVirtualMachinesPaginatorName,    DescribeVolumesPaginatorName,    DiskIopsConfigurationModeType,    DriveCacheTypeType,    EventTypeType,    FileCacheLifecycleType,    FileCacheLustreDeploymentTypeType,    FileCacheTypeType,    FileSystemLifecycleType,    FileSystemMaintenanceOperationType,    FileSystemTypeType,    FilterNameType,    FlexCacheEndpointTypeType,    InputOntapVolumeTypeType,    ListTagsForResourcePaginatorName,    LustreAccessAuditLogLevelType,    LustreDeploymentTypeType,    NfsVersionType,    OntapDeploymentTypeType,    OntapVolumeTypeType,    OpenZFSCopyStrategyType,    OpenZFSDataCompressionTypeType,    OpenZFSDeploymentTypeType,    OpenZFSQuotaTypeType,    ReportFormatType,    ReportScopeType,    ResourceTypeType,    RestoreOpenZFSVolumeOptionType,    SecurityStyleType,    SnapshotFilterNameType,    SnapshotLifecycleType,    StatusType,    StorageTypeType,    StorageVirtualMachineFilterNameType,    StorageVirtualMachineLifecycleType,    StorageVirtualMachineRootVolumeSecurityStyleType,    StorageVirtualMachineSubtypeType,    TieringPolicyNameType,    VolumeFilterNameType,    VolumeLifecycleType,    VolumeTypeType,    WindowsAccessAuditLogLevelType,    WindowsDeploymentTypeType,    FSxServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    RegionName,)def check_value(value: AdministrativeActionTypeType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`mypy_boto3_fsx.type_defs` module contains structures and shapes assembled totyped dictionaries for additional type checking.```pythonfrom mypy_boto3_fsx.type_defs import (    ActiveDirectoryBackupAttributesTypeDef,    AdministrativeActionFailureDetailsTypeDef,    AliasTypeDef,    AssociateFileSystemAliasesRequestRequestTypeDef,    ResponseMetadataTypeDef,    AutoExportPolicyTypeDef,    AutoImportPolicyTypeDef,    BackupFailureDetailsTypeDef,    TagTypeDef,    CancelDataRepositoryTaskRequestRequestTypeDef,    CompletionReportTypeDef,    FileCacheLustreMetadataConfigurationTypeDef,    LustreLogCreateConfigurationTypeDef,    LustreRootSquashConfigurationTypeDef,    DiskIopsConfigurationTypeDef,    SelfManagedActiveDirectoryConfigurationTypeDef,    WindowsAuditLogCreateConfigurationTypeDef,    TieringPolicyTypeDef,    CreateOpenZFSOriginSnapshotConfigurationTypeDef,    OpenZFSUserOrGroupQuotaTypeDef,    DataRepositoryFailureDetailsTypeDef,    DataRepositoryTaskFailureDetailsTypeDef,    DataRepositoryTaskFilterTypeDef,    DataRepositoryTaskStatusTypeDef,    DeleteBackupRequestRequestTypeDef,    DeleteDataRepositoryAssociationRequestRequestTypeDef,    DeleteFileCacheRequestRequestTypeDef,    DeleteSnapshotRequestRequestTypeDef,    DeleteStorageVirtualMachineRequestRequestTypeDef,    DeleteVolumeOpenZFSConfigurationTypeDef,    FilterTypeDef,    PaginatorConfigTypeDef,    DescribeFileCachesRequestRequestTypeDef,    DescribeFileSystemAliasesRequestRequestTypeDef,    DescribeFileSystemsRequestRequestTypeDef,    SnapshotFilterTypeDef,    StorageVirtualMachineFilterTypeDef,    VolumeFilterTypeDef,    DisassociateFileSystemAliasesRequestRequestTypeDef,    FileCacheFailureDetailsTypeDef,    FileCacheNFSConfigurationTypeDef,    LustreLogConfigurationTypeDef,    FileSystemEndpointTypeDef,    FileSystemFailureDetailsTypeDef,    LifecycleTransitionReasonTypeDef,    ListTagsForResourceRequestRequestTypeDef,    OpenZFSClientConfigurationTypeDef,    OpenZFSOriginSnapshotConfigurationTypeDef,    ReleaseFileSystemNfsV3LocksRequestRequestTypeDef,    RestoreVolumeFromSnapshotRequestRequestTypeDef,    SelfManagedActiveDirectoryAttributesTypeDef,    SelfManagedActiveDirectoryConfigurationUpdatesTypeDef,    SvmEndpointTypeDef,    UntagResourceRequestRequestTypeDef,    UpdateFileCacheLustreConfigurationTypeDef,    UpdateSnapshotRequestRequestTypeDef,    WindowsAuditLogConfigurationTypeDef,    AssociateFileSystemAliasesResponseTypeDef,    CancelDataRepositoryTaskResponseTypeDef,    CreateFileSystemFromBackupResponseTypeDef,    CreateFileSystemResponseTypeDef,    DeleteBackupResponseTypeDef,    DeleteDataRepositoryAssociationResponseTypeDef,    DeleteFileCacheResponseTypeDef,    DeleteSnapshotResponseTypeDef,    DeleteStorageVirtualMachineResponseTypeDef,    DescribeFileSystemAliasesResponseTypeDef,    DescribeFileSystemsResponseTypeDef,    DisassociateFileSystemAliasesResponseTypeDef,    ReleaseFileSystemNfsV3LocksResponseTypeDef,    RestoreVolumeFromSnapshotResponseTypeDef,    UpdateFileSystemResponseTypeDef,    NFSDataRepositoryConfigurationTypeDef,    S3DataRepositoryConfigurationTypeDef,    CopyBackupRequestRequestTypeDef,    CreateBackupRequestRequestTypeDef,    CreateSnapshotRequestRequestTypeDef,    DeleteFileSystemLustreConfigurationTypeDef,    DeleteFileSystemLustreResponseTypeDef,    DeleteFileSystemOpenZFSConfigurationTypeDef,    DeleteFileSystemOpenZFSResponseTypeDef,    DeleteFileSystemWindowsConfigurationTypeDef,    DeleteFileSystemWindowsResponseTypeDef,    DeleteVolumeOntapConfigurationTypeDef,    DeleteVolumeOntapResponseTypeDef,    ListTagsForResourceResponseTypeDef,    TagResourceRequestRequestTypeDef,    CreateDataRepositoryTaskRequestRequestTypeDef,    CreateFileCacheLustreConfigurationTypeDef,    CreateFileSystemLustreConfigurationTypeDef,    UpdateFileSystemLustreConfigurationTypeDef,    CreateFileSystemOntapConfigurationTypeDef,    OpenZFSFileSystemConfigurationTypeDef,    UpdateFileSystemOntapConfigurationTypeDef,    UpdateFileSystemOpenZFSConfigurationTypeDef,    CreateSvmActiveDirectoryConfigurationTypeDef,    CreateFileSystemWindowsConfigurationTypeDef,    CreateOntapVolumeConfigurationTypeDef,    OntapVolumeConfigurationTypeDef,    UpdateOntapVolumeConfigurationTypeDef,    DataRepositoryConfigurationTypeDef,    DescribeDataRepositoryTasksRequestRequestTypeDef,    DataRepositoryTaskTypeDef,    DescribeBackupsRequestRequestTypeDef,    DescribeDataRepositoryAssociationsRequestRequestTypeDef,    DescribeBackupsRequestDescribeBackupsPaginateTypeDef,    DescribeFileSystemsRequestDescribeFileSystemsPaginateTypeDef,    ListTagsForResourceRequestListTagsForResourcePaginateTypeDef,    DescribeSnapshotsRequestRequestTypeDef,    DescribeStorageVirtualMachinesRequestDescribeStorageVirtualMachinesPaginateTypeDef,    DescribeStorageVirtualMachinesRequestRequestTypeDef,    DescribeVolumesRequestDescribeVolumesPaginateTypeDef,    DescribeVolumesRequestRequestTypeDef,    FileCacheDataRepositoryAssociationTypeDef,    FileCacheLustreConfigurationTypeDef,    FileSystemEndpointsTypeDef,    SnapshotTypeDef,    OpenZFSNfsExportTypeDef,    SvmActiveDirectoryConfigurationTypeDef,    UpdateFileSystemWindowsConfigurationTypeDef,    UpdateSvmActiveDirectoryConfigurationTypeDef,    SvmEndpointsTypeDef,    UpdateFileCacheRequestRequestTypeDef,    WindowsFileSystemConfigurationTypeDef,    CreateDataRepositoryAssociationRequestRequestTypeDef,    DataRepositoryAssociationTypeDef,    UpdateDataRepositoryAssociationRequestRequestTypeDef,    DeleteFileSystemRequestRequestTypeDef,    DeleteFileSystemResponseTypeDef,    DeleteVolumeRequestRequestTypeDef,    DeleteVolumeResponseTypeDef,    CreateStorageVirtualMachineRequestRequestTypeDef,    CreateVolumeFromBackupRequestRequestTypeDef,    LustreFileSystemConfigurationTypeDef,    CreateDataRepositoryTaskResponseTypeDef,    DescribeDataRepositoryTasksResponseTypeDef,    CreateFileCacheRequestRequestTypeDef,    FileCacheCreatingTypeDef,    FileCacheTypeDef,    OntapFileSystemConfigurationTypeDef,    CreateSnapshotResponseTypeDef,    DescribeSnapshotsResponseTypeDef,    UpdateSnapshotResponseTypeDef,    CreateOpenZFSVolumeConfigurationTypeDef,    OpenZFSCreateRootVolumeConfigurationTypeDef,    OpenZFSVolumeConfigurationTypeDef,    UpdateOpenZFSVolumeConfigurationTypeDef,    UpdateFileSystemRequestRequestTypeDef,    UpdateStorageVirtualMachineRequestRequestTypeDef,    StorageVirtualMachineTypeDef,    CreateDataRepositoryAssociationResponseTypeDef,    DescribeDataRepositoryAssociationsResponseTypeDef,    UpdateDataRepositoryAssociationResponseTypeDef,    CreateFileCacheResponseTypeDef,    DescribeFileCachesResponseTypeDef,    UpdateFileCacheResponseTypeDef,    FileSystemTypeDef,    CreateVolumeRequestRequestTypeDef,    CreateFileSystemOpenZFSConfigurationTypeDef,    VolumeTypeDef,    UpdateVolumeRequestRequestTypeDef,    CreateStorageVirtualMachineResponseTypeDef,    DescribeStorageVirtualMachinesResponseTypeDef,    UpdateStorageVirtualMachineResponseTypeDef,    CreateFileSystemFromBackupRequestRequestTypeDef,    CreateFileSystemRequestRequestTypeDef,    AdministrativeActionTypeDef,    BackupTypeDef,    CreateVolumeFromBackupResponseTypeDef,    CreateVolumeResponseTypeDef,    DescribeVolumesResponseTypeDef,    UpdateVolumeResponseTypeDef,    CopyBackupResponseTypeDef,    CreateBackupResponseTypeDef,    DescribeBackupsResponseTypeDef,)def get_structure() -&gt; ActiveDirectoryBackupAttributesTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for `boto3`updates. It delivers drop-in type annotations for you and makes sure that:- All available `boto3` services are covered.- Each public class and method of every `boto3` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`mypy-boto3-fsx` version is the same as related `boto3` version and follows[PEP 440](https://www.python.org/dev/peps/pep-0440/) format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_fsx/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>