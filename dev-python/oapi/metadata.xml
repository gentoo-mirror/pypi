<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># oapi[![test](https://github.com/enorganic/oapi/actions/workflows/test.yml/badge.svg)](https://github.com/enorganic/oapi/actions/workflows/test.yml)[![distribute](https://github.com/enorganic/oapi/actions/workflows/distribute.yml/badge.svg)](https://github.com/enorganic/oapi/actions/workflows/distribute.yml)`oapi` is a library and CLI for authoring python data models (for clients*or* servers), and/or client libraries, for web APIs, based on anOpenAPI specification (both OpenAPI/Swagger [version 2](https://bit.ly/36VneDU)and [version 3](https://bit.ly/3OHGRQV) are supported).`oapi`-generated packages/modules differ from those generated by other tools(including but not limited to[swagger-codegen](https://github.com/swagger-api/swagger-codegen)) in that`oapi` generates a data model which enforces the schemas definedin the OpenAPI specification. This means that request and response objectscannot comprise data types which differ from those specified in the spec,and objects cannot have properties which are not defined. If an APIwill add properties to an object which are not explicitly definedin the schema properties, that object should have an[&quot;additionalProperties&quot;](https://bit.ly/3LuUlxm) attribute, in whichcase `oapi` will treat these objects as dictionaries/mappings. `oapi` alsofully supports polymorphism when a schema has an &quot;anyOf&quot;, &quot;allOf&quot;, or&quot;oneOf&quot; attribute (although `oapi` does not *require* a[discriminator](https://bit.ly/3vPvMEW) to be defined). This design decisioncould prove to be an annoyance to lazy developers of client applications, sinceinaccurate OpenAPI schemas are endemic to many organizations. The authorof this library, however, asserts that end-to-end data validation isabsolutely essential for applications which are part of a critical datapipeline. The author of this library is also of the opinion that whenencountering inaccurate OpenAPI specifications, you should fix the spec, andif you are not the owner of the spec (and can't convince the owner to fix it),you should script your fix in order to apply that same fix to future versionsof the specification.Notable features of an `oapi` generated client/model library include:- `oapi` generated data models and clients are fully type-hinted (they   will pass inspection by `mypy`).- `oapi` generated data models and clients adhere to PEP-8 formatting  standards, and will pass inspection by `flake8` (with the default options).- `oapi` generated data models and clients include docstrings for all models,  model properties, client methods, and client method parameters, inferred  from &quot;description&quot; and &quot;summary&quot; attributes of elements within the  specification.- `oapi` generated clients will handle the most common server-to-server  authentication methods out-of-box, including the OAuth2 authorization  code flow (client_id/client_secret), API keys, bearer tokens, HTTP basic  auth, and most cookie-based authentication patterns. Custom authentication   methods are also easily accomplished by specifying custom base classes  and/or passing initialization decorators to the `oapi client` shell  command or to the `oapi.client.create()` function.- `oapi` generated clients and models are easily updated. For instance: `oapi`  generated data model classes can be renamed using your favorite IDE's  refactoring tools, and subsequent updates to that data model (such as  to reflect minor-version updates to the spec which add endpoints, schemas,  parameters, etc.) will retain your new class names, so long as the  schema from which the class was generated remains in the same location  within the spec. Class naming can also be customized by passing a custom  hook to the *get_class_name_from_pointer* parameter for  `oapi.model.Module` or `oapi.model.create`.TODO: Finish README.md</longdescription>
</pkgmetadata>