<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># &lt;p align=&quot;center&quot;&gt;✨✨ Twitter API Client by Typed Python ✨✨&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/yassun4dev/twitter-api-py/actions&quot;&gt;        &lt;img src=&quot;https://github.com/yassun4dev/twitter-api-py/actions/workflows/test-suite.yml/badge.svg&quot; alt=&quot;Test Suite&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/twitter_api_py/&quot;&gt;        &lt;img src=&quot;https://badge.fury.io/py/twitter_api_py.svg&quot; alt=&quot;Package version&quot;&gt;    &lt;/a&gt;&lt;/p&gt;![demo](https://raw.githubusercontent.com/yassun4dev/twitter-api-py/main/images/demo.gif)## Install```shpip install twitter_api_py```## Features- Fully type annotated.- OAuth1 / OAuth2 support.- Sync / Async Client support.- Mock Client support.## UsageThe simplest way to use the library is as follows:```pythonfrom twitter_api import TwitterApiClientresponse_body = (    TwitterApiClient.from_oauth2_app_env()    .request(&quot;https://api.twitter.com/2/tweets&quot;)    .get({        &quot;ids&quot;: &quot;1460323737035677698&quot;,        &quot;expansions&quot;: [&quot;referenced_tweets.id&quot;]    }))```As a characteristic feature of the library, it explicitly prompts the user to write the Endpoint URL, which makes it clear from the source code which Twitter API is being called.## Test CodeA mock client is provided by the library to simplify the writing of test code.This client has the same interface as `TwitterApiClient`/`TwitterApiAsyncClient`, and also provides methods (`inject_*_response_body`) for injecting test data.```pythonfrom twitter_api import TwitterApiClient, TwitterApiMockClientdef your_logic(twitter_client: TwitterApiClient):    ...def test_your_logic():    twitter_client = (        TwitterApiMockClient.from_oauth2_app_env()        .inject_post_response_body(&quot;https://api.twitter.com/2/tweets&quot;, post_response_body)        .inject_get_response_body(&quot;https://api.twitter.com/2/tweets/:id&quot;, get_response_body)        .inject_delete_response_body(&quot;https://api.twitter.com/2/tweets&quot;, delete_response_body)    )    assert your_logic(twitter_client) is True```</longdescription>
</pkgmetadata>