<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>restible########.. about_project_start**restible** is a python library for creating consistent code for REST APIsacross different frameworks. The main motivation was that the framework usedis often dictated by requirements and I wanted to have a concise way of writingAPI endpoints no matter the underlying framework... about_project_end.. project_links_startUseful links============- `Docs &lt;https://novopl.github.io/restible&gt;`_- `Source Code &lt;https://github.com/novopl/restible&gt;`_- `CI Builds &lt;https://circleci.com/gh/novopl/restible&gt;`_Related libraries------------------ `restible-flask &lt;https://github.com/novopl/restible-flask&gt;`_- `restible-sqlalchemy &lt;https://github.com/novopl/restible-sqlalchemy&gt;`_- `restible-appengine &lt;https://github.com/novopl/restible-appengine&gt;`_- `restible-django &lt;https://github.com/novopl/restible-django&gt;`_Installation============.. code-block:: shell    $ pip install restible.. project_links_endContributing============.. readme_contrib_start.. note::    The library has a pretty good test coverage but not yet at 100%. A large    part of the code is documented through docstrings but the general purpose    docs are not written yet nor are any tutorials.Cloning and setting up the development repo-------------------------------------------.. code-block:: shell    $ git clone git@github.com:novopl/restible.git    $ cd restible    $ virtualenv env    $ source ./env/bin/activate    $ pip install -r requirements.txt -r ops/devrequirements.txt    $ peltak git add-hooksRunning tests-------------**Config**: The types of tests are defined in ``pelconf.py`` and thepytest configuration is defined in ``ops/tools/pytest.ini``... code-block:: shell    $ peltak testLinting-------**Config**: The list of locations to lint is defined in ``pelconf.py`` and thelinters configuration is defined in ``ops/tools/{pylint,pep8}.ini``... code-block:: shell    $ peltak lintGenerating docs---------------**Config**: The list of documented files and general configuration is in``pelconf.py`` and the Sphinx configuration is defined in ``docs/conf.py``... code-block:: shell    $ peltak docs.. readme_contrib_end</longdescription>
</pkgmetadata>