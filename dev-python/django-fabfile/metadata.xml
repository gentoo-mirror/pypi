<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Fabric tasks for Django and Amazon Web Services***********************************************Required arrangements---------------------.. note:: `django_fabfile` package should be listed in your path. It's already   in place if your are installed it using `pip install django-fabfile`. But if   you are working within repository, then::    export PYTHONPATH=&lt;path-to-folder-with-django_fabfile-package&gt;   in your shell.Pre-run configuration---------------------Django settings will be checked first if environment variable`DJANGO_SETTINGS_MODULE` configured properly. If option was not configuredwithin Django settings, then its value will be taken from ``./fabfile.cfg``file - copy-paste there rows that should be overriden from defaults:download:`django_fabfile/fabfile.cfg.def &lt;../django_fabfile/fabfile.cfg.def&gt;`.Django settings should be configured in following form (with preservingsections case)::    FABFILE = {        'DEFAULT': {            'LOGGING_FOLDER': '.',        },        'Credentials': {            'AWS_ACCESS_KEY_ID': 'AKIAABCDEFGHIJKLMNOP',            'AWS_SECRET_ACCESS_KEY': 'ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLM',        },    }.. note::   Boto config files http://code.google.com/p/boto/wiki/BotoConfig will be   examined at least - if ``[Credentials]`` or some other options was filled   neither in Django settings nor in ``./fabfile.cfg`` or :download:`django_fabfile/fabfile.cfg.def &lt;../django_fabfile/fabfile.cfg.def&gt;`.Example of required AWS IAM Policy----------------------------------For using Fabric tasks you need AWS account with following permissions:* create-snapshot::    {      &quot;Statement&quot;: [        {          &quot;Sid&quot;: &quot;Stmt1304003463574&quot;,          &quot;Action&quot;: [            &quot;ec2:CreateSnapshot&quot;,            &quot;ec2:CreateTags&quot;,            &quot;ec2:DescribeInstances&quot;,            &quot;ec2:DescribeRegions&quot;,            &quot;ec2:DescribeSnapshots&quot;,            &quot;ec2:DescribeTags&quot;,            &quot;ec2:DescribeVolumes&quot;          ],          &quot;Effect&quot;: &quot;Allow&quot;,          &quot;Resource&quot;: &quot;*&quot;        }      ]    }* delete-snapshot::    {      &quot;Statement&quot;: [        {          &quot;Sid&quot;: &quot;Stmt1306410750989&quot;,          &quot;Action&quot;: [            &quot;ec2:DescribeRegions&quot;,            &quot;ec2:DescribeSnapshots&quot;,            &quot;ec2:DeleteSnapshot&quot;          ],          &quot;Effect&quot;: &quot;Allow&quot;,          &quot;Resource&quot;: &quot;*&quot;        }      ]    }* reboot-instance::    {      &quot;Statement&quot;: [        {          &quot;Sid&quot;: &quot;Stmt1312204628195&quot;,          &quot;Action&quot;: [            &quot;ec2:RebootInstances&quot;          ],          &quot;Effect&quot;: &quot;Allow&quot;,          &quot;Resource&quot;: &quot;*&quot;        },        {          &quot;Sid&quot;: &quot;Stmt1312276311113&quot;,          &quot;Action&quot;: [            &quot;ec2:DetachVolume&quot;          ],          &quot;Effect&quot;: &quot;Allow&quot;,          &quot;Resource&quot;: &quot;*&quot;        }      ]    }* rsync-snapshot::    {      &quot;Statement&quot;: [        {          &quot;Effect&quot;: &quot;Allow&quot;,          &quot;Action&quot;: [            &quot;EC2:AttachVolume&quot;,            &quot;EC2:CreateKeyPair&quot;,            &quot;EC2:CreateVolume&quot;,            &quot;EC2:DeleteKeyPair&quot;,            &quot;EC2:DeleteVolume&quot;,            &quot;EC2:DescribeAvailabilityZones&quot;,            &quot;EC2:DescribeImages&quot;,            &quot;EC2:DescribeKeyPairs&quot;,            &quot;EC2:RunInstances&quot;,            &quot;EC2:TerminateInstances&quot;          ],          &quot;Resource&quot;: &quot;*&quot;        }      ]    }Backup script-------------.. note:: Instances and snaphots are filtered by tag &quot;Earmarking&quot; value   &quot;production&quot;. This can be configured in settings - see &quot;Pre-run   configuration&quot; section above.Following backup commands may be configured with crontab to run daily::    #!/bin/sh    VE=/home/backup-agent/.virtualenvs/backup    . $VE/bin/activate &amp;&amp; \    fab --keepalive=60 -f $VE/lib/python2.6/site-packages/django_fabfile/backup.py \            backup_instances_by_tag \            trim_snapshots \            rsync_region:src_region_name=us-east-1,dst_region_name=eu-west-1 \            rsync_region:src_region_name=us-west-1,dst_region_name=eu-west-1 \            rsync_region:src_region_name=eu-west-1,dst_region_name=us-east-1With 30 production instances it tooks around 6 hours to replicatesnapshots updates. First replication tooks much more time obviously.Running tests-------------The package has test cases to make sure, that all methods, being tested,keep on the entire program logic. The test cases are using packages ``fudge``and ``unittest``. The test files (``'test_*.py'``) are located in folder``'/django_fabfile/tests/'``. To run tests from command line, implement::    python -m unittest discover django_fabfileRecent changes--------------See :doc:`changelog` for recent updates.Licensing---------The product is licensed by oDesk http://www.odesk.com/ under:download:`GNU GENERAL PUBLIC LICENSE Version 3&lt;license.txt&gt;` exceptportions with attached inline license information like:func:`django_fabfile.backup._trim_snapshots`.</longdescription>
</pkgmetadata>