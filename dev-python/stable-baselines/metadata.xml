<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**WARNING: This package is in maintenance mode, please use [Stable-Baselines3 (SB3)](https://github.com/DLR-RM/stable-baselines3) for an up-to-date version. You can find a [migration guide](https://stable-baselines3.readthedocs.io/en/master/guide/migration.html) in SB3 documentation.**[![Build Status](https://travis-ci.com/hill-a/stable-baselines.svg?branch=master)](https://travis-ci.com/hill-a/stable-baselines) [![Documentation Status](https://readthedocs.org/projects/stable-baselines/badge/?version=master)](https://stable-baselines.readthedocs.io/en/master/?badge=master) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/3bcb4cd6d76a4270acb16b5fe6dd9efa)](https://www.codacy.com/app/baselines_janitors/stable-baselines?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=hill-a/stable-baselines&amp;amp;utm_campaign=Badge_Grade) [![Codacy Badge](https://api.codacy.com/project/badge/Coverage/3bcb4cd6d76a4270acb16b5fe6dd9efa)](https://www.codacy.com/app/baselines_janitors/stable-baselines?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=hill-a/stable-baselines&amp;utm_campaign=Badge_Coverage)# Stable BaselinesStable Baselines is a set of improved implementations of reinforcement learning algorithms based on OpenAI [Baselines](https://github.com/openai/baselines/).These algorithms will make it easier for the research community and industry to replicate, refine, and identify new ideas, and will create good baselines to build projects on top of. We expect these tools will be used as a base around which new ideas can be added, and as a tool for comparing a new approach against existing ones. We also hope that the simplicity of these tools will allow beginners to experiment with a more advanced toolset, without being buried in implementation details.## Main differences with OpenAI BaselinesThis toolset is a fork of OpenAI Baselines, with a major structural refactoring, and code cleanups:-   Unified structure for all algorithms-   PEP8 compliant (unified code style)-   Documented functions and classes-   More tests &amp; more code coverage-   Additional algorithms: SAC and TD3 (+ HER support for DQN, DDPG, SAC and TD3)## LinksRepository:https://github.com/hill-a/stable-baselinesMedium article:https://medium.com/@araffin/df87c4b2fc82Documentation:https://stable-baselines.readthedocs.io/en/master/RL Baselines Zoo:https://github.com/araffin/rl-baselines-zoo## Quick exampleMost of the library tries to follow a sklearn-like syntax for the Reinforcement Learning algorithms using Gym.Here is a quick example of how to train and run PPO2 on a cartpole environment:```pythonimport gymfrom stable_baselines.common.policies import MlpPolicyfrom stable_baselines.common.vec_env import DummyVecEnvfrom stable_baselines import PPO2env = gym.make('CartPole-v1')# Optional: PPO2 requires a vectorized environment to run# the env is now wrapped automatically when passing it to the constructor# env = DummyVecEnv([lambda: env])model = PPO2(MlpPolicy, env, verbose=1)model.learn(total_timesteps=10000)obs = env.reset()for i in range(1000):    action, _states = model.predict(obs)    obs, rewards, dones, info = env.step(action)    env.render()```Or just train a model with a one liner if [the environment is registered in Gym](https://github.com/openai/gym/wiki/Environments) and if [the policy is registered](https://stable-baselines.readthedocs.io/en/master/guide/custom_policy.html):```pythonfrom stable_baselines import PPO2model = PPO2('MlpPolicy', 'CartPole-v1').learn(10000)```</longdescription>
</pkgmetadata>