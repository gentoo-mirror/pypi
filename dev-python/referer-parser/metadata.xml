<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># referer-parser Python libraryThis is the Python implementation of [referer-parser] [referer-parser], the library for extracting search marketing data from referer _(sic)_ URLs.The implementation uses the shared 'database' of known referers found in [`referers.yml`] [referers-yml].The Python version of referer-parser is maintained by [Don Spaulding] [donspaulding].## Installation    $ pip install referer_parser## UsageCreate a new instance of a Referer object by passing in the url you want to parse:```pythonfrom referer_parser import Refererreferer_url = 'http://www.google.com/search?q=gateway+oracle+cards+denise+linn&amp;hl=en&amp;client=safari'r = Referer(referer_url)```The `r` variable now holds a Referer instance.  The important attributes are:```pythonprint(r.known)              # Trueprint(r.referer)            # 'Google'print(r.medium)             # 'search'print(r.search_parameter)   # 'q'print(r.search_term)        # 'gateway oracle cards denise linn'print(r.uri)                # ParseResult(scheme='http', netloc='www.google.com', path='/search', params='', query='q=gateway+oracle+cards+denise+linn&amp;hl=en&amp;client=safari', fragment='')```Optionally, pass in the current URL as well, to handle internal referers```pythonfrom referer_parser import Refererreferer_url = 'http://www.snowplowanalytics.com/about/team'curr_url = 'http://www.snowplowanalytics.com/account/profile'r = Referer(referer_url, curr_url)```The attributes would be```pythonprint(r.known)              # Trueprint(r.referer)            # Noneprint(r.medium)             # 'internal'print(r.search_parameter)   # Noneprint(r.search_term)        # Noneprint(r.uri)                # ParseResult(scheme='http', netloc='www.snowplowanalytics.com', path='/about/team', params='', query='', fragment='')```The `uri` attribute is an instance of ParseResult from the standard library's `urlparse` module.## Contributing1. Fork it2. Create your feature branch (`git checkout -b my-new-feature`)3. Commit your changes (`git commit -am 'Add some feature'`)4. Push to the branch (`git push origin my-new-feature`)5. Create new Pull Request## DistributionThe distribution process for Python looks like this:    $ ./sync_data.py$ # Make changes to codebase.$ # Bump version number in setup.py    $ pushd python    $ python setup.py sdist bdist_wheel --universal    $ twine upload dist/referer-parser-X.Y.Z.tar.gz    $ popd## Copyright and licenseThe referer-parser Python library is copyright 2012-2016 Don Spaulding.Licensed under the [Apache License, Version 2.0] [license] (the &quot;License&quot;);you may not use this software except in compliance with the License.Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an &quot;AS IS&quot; BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.[referer-parser]: https://github.com/snowplow/referer-parser[referers-yml]: https://github.com/snowplow/referer-parser/blob/master/referers.yml[donspaulding]: https://github.com/donspaulding[license]: http://www.apache.org/licenses/LICENSE-2.0</longdescription>
</pkgmetadata>