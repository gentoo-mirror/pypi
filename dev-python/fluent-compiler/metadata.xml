<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>fluent-compiler===============.. image:: https://badge.fury.io/py/fluent-compiler.svg    :target: https://badge.fury.io/py/fluent-compiler.. image:: https://readthedocs.org/projects/fluent-compiler/badge/?version=latest&amp;style=flat    :target: https://fluent-compiler.readthedocs.io.. image:: https://github.com/django-ftl/fluent-compiler/workflows/Python%20package/badge.svg    :target: https://github.com/django-ftl/fluent-compiler/actions?query=workflow%3A%22Python+package%22This is a Python implementation of `Project Fluent &lt;https://www.projectfluent.org/&gt;`_, a localizationframework designed to unleash the entire expressive power of naturallanguage translations.It provides a different implementation from the official`fluent.runtime &lt;https://github.com/projectfluent/python-fluent&gt;`_implementation, distinguished mainly by:- strategy: we compile FTL files to Python bytecode via AST and use ``exec`` (similar  to the strategy used by projects like Mako, Jinja2 and Genshi).- speed: as a result of the above, plus static analysis, we get blazing  fast performance, even more so when combined with PyPy which can  further optimize.- compile-time checking and error reporting.- 'escapers' feature for handling things like HTML escaping/embedding correctly.Installation------------To install::    pip install fluent_compilerUsage-----See the `docs folder&lt;https://github.com/django-ftl/fluent-compiler/tree/master/docs/&gt;`_ or `readthem on readthedocs.org &lt;https://fluent-compiler.readthedocs.io/en/latest/&gt;`_.If you are using Django, see `django-ftl &lt;https://github.com/django-ftl/django-ftl&gt;`_ whichwraps the functionality here in Django-specific ways.See `history &lt;https://fluent-compiler.readthedocs.io/en/latest/history.html&gt;`_ for a CHANGELOG.Status------We are not planning major backwards incompatible changes to the interface, butwe're also not guaranteeing stability yet. Also, the nature of the library is suchthat we expect most users will want to create their own wrappers anyway, whichyou are encouraged to do, in order to be able to absorb any backwardsincompatible changes easily.See the `issues list &lt;https://github.com/django-ftl/fluent-compiler/issues&gt;`_for planned features, and `CONTRIBUTING.rst &lt;CONTRIBUTING.rst&gt;`_ for informationabout how to contribute, and the `architecture docs &lt;ARCHITECTURE.rst&gt;`_.Contributing------------Check out the `contributing docs &lt;CONTRIBUTING.rst&gt;`_ and `the architecturenotes &lt;ARCHITECTURE.rst&gt;`_ for information that will help you before you starthacking.Background----------This code was originally developed as part of ``fluent.runtime``, as analternative implementation of ``FluentBundle``, but never got merged to themaster branch. It has now been pulled out as a separate package. This is whythe repo's history contains `fluent.syntax` and early versions of `fluent.runtime`,but the parts that are left in this repo all derive from the original versionof `fluent.runtime` contributed by @spookylukey from `a540993a085e36a9679e12f1ee7317ddc1ece5ad &lt;https://github.com/django-ftl/fluent-compiler/commit/a540993a085e36a9679e12f1ee7317ddc1ece5ad&gt;`_ onwards and the new compiler implementation in `d1481d61e0bc1a28a228a4b6d5258350d436e765 &lt;https://github.com/django-ftl/fluent-compiler/commit/d1481d61e0bc1a28a228a4b6d5258350d436e765&gt;`_ (which is squashed version of work done over a much longer period). Thats whywe also `corrected &lt;https://github.com/django-ftl/fluent-compiler/commit/33c1b5b586858132d3ab7af749c2bde1bb5205b5&gt;`_the copyright notice from Mozilla to Luke Plant.</longdescription>
</pkgmetadata>