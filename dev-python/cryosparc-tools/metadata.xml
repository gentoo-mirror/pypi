<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cryosparc-tools[![PyPI](https://badgen.net/pypi/v/cryosparc-tools)](https://pypi.org/project/cryosparc-tools/)[![Python package](https://github.com/cryoem-uoft/cryosparc-tools/actions/workflows/python-package.yml/badge.svg?branch=main)](https://github.com/cryoem-uoft/cryosparc-tools/actions/workflows/python-package.yml)Toolkit for interfacing with CryoSPARC. Read the documentation at[tools.cryosparc.com](https://tools.cryosparc.com)## Development### Prerequisites- Git and Git LFS- Python &gt;= 3.7- Miniconda3- C compiler such as GCC or Clang### Set Up1. Clone this repository   ```sh   git clone --recursive https://github.com/cryoem-uoft/cryosparc-tools.git   cd cryosparc-tools   git lfs pull   ```2. (Optional) Create and activate a virtual environment   ```sh   python3 -m venv .venv   source .venv/bin/activate  # macOS / Linux   # OR   .venv\Scripts\activate.bat  # Windows   ```3. Install dev dependencies and build native modules   ```sh   pip install -U pip wheel   pip install -e &quot;.[dev]&quot;   ```4. Install pre-commit hooks   ```   pre-commit install   ```### Re-compile native moduleRecompile native modules after making changes to C code:```shpython -m setup build_ext -i```## Build Packages for PublishingInstall build dependencies```shpip install -e &quot;.[build]&quot;```Run the build```shpython -m build```Packages for the current architecture and python version are added to the`dist/` directory.## Build DocumentationDocumentation is located in the `docs` directory and is powered by [Jupyter Book](https://jupyterbook.org/en/stable/intro.html).To build the docs, install build dependencies```shpip install -e &quot;.[build]&quot;```Then run Jupyter Book```shjupyter-book build docs```Site will be be built into the `docs/_build/html` directory.**Note:** Jupyter Book is not configured to re-run example notebooks upon buildsince the notebooks require an active CryoSPARC instance to run.See the [Run Example Notebooks](#run-example-notebooks) section for instructionson how to run the notebooks.Inline source documentation is compiled to HTML via [Sphinx](https://www.sphinx-doc.org/en/master/index.html) and uses [Google Style Python docstrings](https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html#example-google).## Run Example NotebooksThe Jupyter notebooks in the example documentation require additionaldependencies to execute, including the following system configuration:- Nvidia GPU and driver- [Miniconda](https://docs.conda.io/en/latest/miniconda.html) installed- CryoSPARC running at `localhost:40000` or `cryoem0:40000` (can alias `cryoem0` to localhost)Clean previous build artefacts:```shrm -rf cryosparc/*.so build dist *.egg-info```Install dependencies into a new conda environment:```shconda create -n cryosparc-tools-example -c conda-forge \    python=3 numpy==1.18.5 \    pyqt=5 libtiff wxPython=4.1.1 adwaita-icon-themeconda activate cryosparc-tools-examplepip install -U pippip install nvidia-pyindex matplotlib~=3.4.0 pandas==1.1.4 notebookpip install &quot;cryolo[c11]&quot;pip install -e &quot;.[build]&quot;```Run the notebook server with the following environment variables:- `CRYOSPARC_LICENSE_ID` with Structura-issued CryoSPARC license- `CRYOSPARC_EMAIL` with a CryoSPARC user account email- `CRYOSPARC_PASSWORD` with a CryoSPARC user account passwordYou may also need to include `LD_LIBRARY_PATH` which includes the location ofCUDA Toolkit and cuDNN runtime libraries (e.g., `~/miniconda3/envs/tools/lib/python3.8/site-packages/nvidia/*/lib`).```CRYOSPARC_LICENSE_ID=&quot;xxxxxxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; \CRYOSPARC_EMAIL=&quot;ali@example.com&quot; \CRYOSPARC_PASSWORD=&quot;password123&quot; \jupyter notebook```Find examples in `docs/examples` directory## Licensecryosparc-tools is licensed under the BSD-3-Clause license.</longdescription>
</pkgmetadata>