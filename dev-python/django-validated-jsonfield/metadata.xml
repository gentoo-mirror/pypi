<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django_validated_jsonfielddjango_validated_jsonfield is an inplace replacement for django JSONField which is validated against a json_schema- A json_schema can be added to the field description- The json_schema is used to validate the jsonfield data during full_clean or during restframework validation- The field is also documented on Swagger (via drf_yasg specific inspectors)- Missing data in the json structure is initialized/filled to the schema's default values# Usage## importReplace your JSONField import```pythonfrom django.db.models import JSONField` or `from django.contrib.postgres.fields import JSONField```by ```pythonfrom django_validated_jsonfield import ValidatedJSONField as JSONField```## models```pythonclass MyModel(models.Model):    _data_schema = {        &quot;type&quot;: &quot;object&quot;,        &quot;properties&quot;: {            &quot;en&quot;: {&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;], &quot;default&quot;:&quot;&quot;,   &quot;example&quot;:&quot;Name&quot;, &quot;title&quot;:&quot;Name&quot;}            &quot;fr&quot;: {&quot;type&quot;: [&quot;string&quot;, &quot;null&quot;], &quot;default&quot;:&quot;&quot;,   &quot;example&quot;:&quot;Nom&quot;,  &quot;title&quot;:&quot;Nom&quot;}        },        &quot;default&quot;: {}, #note the top level default        &quot;additionalProperties&quot;: False,    }    data = JSONField(schema=_data_schema, editable=True)```## Rest Framework serializers### As defined field:replace```pythonfrom rest_framework.serializers import JSONField```by```pythonfrom django_validated_jsonfield import ValidatedJSONFieldSerializer as JSONField```The updated JSONField expect to receive a &quot;schema&quot; and &quot;json_validator_cls&quot; argument at initilization.### In serializers.ModelSerializer:Add the ValidatedJsonModelSerializerMixin to your ModelSerializer classes.```pythonfrom django_validated_jsonfield import ValidatedJsonModelSerializerMixinclass MyModelSerializer(ValidatedJsonModelSerializerMixin, serializers.ModelSerializer):    class Meta:        model = MyModel        exclude = []```## Swagger documentation (drf_yasg)add the following block to your django settings.py file```pythonfrom django_validated_jsonfield.yasg import DEFAULT_FIELD_INSPECTORSSWAGGER_SETTINGS = {    'DEFAULT_FIELD_INSPECTORS': DEFAULT_FIELD_INSPECTORS}```you should see the json field of your model being documented in Swagger# Additional remarks## json schema defaultif the default field is provided in the json schema, the data will be initialized to the default value (if missing).The feature works well only parents of nested fields in the json schema have a default themselves (to list or dict)--&gt; Note the &quot;top level default&quot; in the example above.</longdescription>
</pkgmetadata>