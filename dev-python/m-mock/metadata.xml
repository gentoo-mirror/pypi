<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mock仿照mock.js生成随机数据## Basic### character 字符```pythonm_mock.mock(&quot;@character()&quot;):Xm_mock.mock(&quot;@character('lower')&quot;):fm_mock.mock(&quot;@character('upper')&quot;):Em_mock.mock(&quot;@character('number')&quot;):4m_mock.mock(&quot;@character('symbol')&quot;):)m_mock.mock(&quot;@character('aeiou')&quot;):o```### integer 整数```pythonm_mock.mock(&quot;@integer(2,4)&quot;):3m_mock.mock(&quot;@integer(3)&quot;):4941869747671297m_mock.mock(&quot;@integer()&quot;):-3191979912544874```### boolean 布尔值```pythonm_mock.mock(&quot;@boolean(2,4)&quot;):Falsem_mock.mock(&quot;@boolean(3)&quot;):Truem_mock.mock(&quot;@boolean()&quot;):False```### float 浮点数```pythonm_mock.mock(&quot;@float(2,4)&quot;):2.937m_mock.mock(&quot;@float(3)&quot;):229342892631770.44m_mock.mock(&quot;@float()&quot;):872256.00439```### string 字符串```pythonm_mock.mock(&quot;@string(2)&quot;):$@m_mock.mock(&quot;@string(&quot;lower&quot;, 3)&quot;):nyxm_mock.mock(&quot;@string(&quot;upper&quot;, 3)&quot;):HWSm_mock.mock(&quot;@string(&quot;number&quot;, 3)&quot;):987m_mock.mock(&quot;@string(&quot;symbol&quot;, 3)&quot;):^)&lt;m_mock.mock(&quot;@string(&quot;aeiou&quot;, 3)&quot;):ieem_mock.mock(&quot;@string(&quot;lower&quot;, 1, 3)&quot;):gnm_mock.mock(&quot;@string(&quot;upper&quot;, 1, 3)&quot;):DSZm_mock.mock(&quot;@string(&quot;number&quot;, 1, 3)&quot;):773m_mock.mock(&quot;@string(&quot;symbol&quot;, 1, 3)&quot;):#(&lt;m_mock.mock(&quot;@string(&quot;aeiou&quot;, 1, 3)&quot;):eaam_mock.mock(&quot;@string(&quot;chinese&quot;, 1, 3)&quot;):太主截m_mock.mock(&quot;@string(&quot;cn_symbol&quot;, 1, 3)&quot;):『“m_mock.mock(&quot;@string(&quot;cn_string&quot;, 3, 9)&quot;):〕壁辨钻眠素举沾。m_mock.mock(&quot;@string(&quot;cn_string&quot;, 1)&quot;):柔```## name 中英文姓名```pythonm_mock.mock(&quot;@clast()&quot;):折m_mock.mock(&quot;@cfirst()&quot;):丰m_mock.mock(&quot;@cname()&quot;):梁恒蹄m_mock.mock(&quot;@cname(3)&quot;):臧倡荷m_mock.mock(&quot;@last()&quot;):Smithm_mock.mock(&quot;@first()&quot;):Kennetm_mock.mock(&quot;@name()&quot;):Jessica Jacksonm_mock.mock(&quot;@name(True)&quot;):Melissa Mark Davis```## date 日期```python# %y 两位数的年份表示（00-99）# %Y 四位数的年份表示（000-9999）# %m 月份（01-12）# %d 月内中的一天（0-31）# %H 24小时制小时数（0-23）# %I 12小时制小时数（01-12）# %M 分钟数（00=59）# %S 秒（00-59）# %a 本地简化星期名称# %A 本地完整星期名称# %b 本地简化的月份名称# %B 本地完整的月份名称# %c 本地相应的日期表示和时间表示# %j 年内的一天（001-366）# %p 本地A.M.或P.M.的等价符# %U 一年中的星期数（00-53）星期天为星期的开始# %w 星期（0-6），星期天为星期的开始# %W 一年中的星期数（00-53）星期一为星期的开始# %x 本地相应的日期表示# %X 本地相应的时间表示# %Z 当前时区的名称# datem_mock.mock(&quot;@date('%Y-%m-%d %H:%M:%S', '+1d')&quot;):2023-02-21 13:50:02m_mock.mock(&quot;@date('%Y-%m-%d %H:%M:%S', '+24h')&quot;):2023-02-21 13:50:02m_mock.mock(&quot;@date('%Y年-%m月-%d日 %H时:%M分:%S秒', '+2mon')&quot;):2023年-04月-20日 13时:50分:02秒m_mock.mock(&quot;@date('%Y年-%m月-%d日 %H时:%M分:%S秒', '+2min')&quot;):2023年-02月-20日 13时:52分:02秒# timem_mock.mock(&quot;@time('', '+4sec')&quot;):15:51:46m_mock.mock(&quot;@time&quot;):15:51:42# nowm_mock.mock(&quot;@now('year')&quot;):2023-01-01 00:00:00m_mock.mock(&quot;@now('month')&quot;):2023-02-01 00:00:00m_mock.mock(&quot;@now('week')&quot;):2023-02-26 00:00:00m_mock.mock(&quot;@now('day')&quot;):2023-02-20 00:00:00m_mock.mock(&quot;@now('hour')&quot;):2023-02-20 13:00:00m_mock.mock(&quot;@now('minute')&quot;):2023-02-20 13:42:00m_mock.mock(&quot;@now('second')&quot;):2023-02-20 13:42:44m_mock.mock(&quot;@now()&quot;):2023-02-20 13:42:44m_mock.mock(&quot;@now('year','%Y年-%m月-%d日 %H:%M:%S')&quot;):2023年-01月-01日 00:00:00m_mock.mock(&quot;@now('week','%Y年 %m月 %d日 %H:%M:%S')&quot;):2023年 02月 26日 00:00:00```</longdescription>
</pkgmetadata>