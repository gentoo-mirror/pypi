<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a name=&quot;top&quot;&gt;&lt;/a&gt;&lt;a name=&quot;overview&quot;&gt;&lt;/a&gt;# OverviewThis is a module for reading configuration files.Currently, the module only supports YAML-formatted files.Features:- Retrieve deeply nested values using dot notation, e.g. `section1.key1`- Retrieve values using wildcards, e.g. `section1.*.key2`- Configuration files can be templated (Jinja)# Prerequisites:- Python 3.4+# Installation* From pypi: `pip3 install bertdotconfig`* From this git repo: `pip3 install git+https://github.com/berttejeda/bert.config.git`&lt;br /&gt;  Note: To install a specific version of the library from this git repo, &lt;br /&gt;  suffix the git URL in the above command with @{ tag name }, e.g.: &lt;br /&gt;  git+https://github.com/berttejeda/bert.config.git@3.0.0# Usage Examples## Load a configuration file and retrieve specified key valueGiven:- Config file at `/home/myuser/myconfig.yaml`- with contents:&lt;br /&gt;```yamlsection1:  key1: value1  key2: value2  key3: value3``````pythonfrom bertdotconfig import Config# Initialize App Configconfig = Config(config_file_uri='~/myconfig.yaml').read()value = config.get('section1.key')print(value)```The above should return `value1`## Load a configuration file and retrieve a deeply nested valueGiven:- Config file at `/home/myuser/myconfig.yaml`- with contents:&lt;br /&gt;```yamlsection1:  subsection1:    item1:      subitem1: value1    item2: value2    item3: value3  subsection2:    item1: value1    item2: value2    item3: value3  key1: value1  key2: value2  key3: value3section2:  item1: value1``````pythonfrom bertdotconfig import Config# Initialize App Configconfig = Config(config_file_uri='~/myconfig.yaml').read()value = config.get('section1.subsection1.item2')print(value)```The above should return `value2`## Load a configuration file and retrieve specified key value using wildcard notationGiven:- Config file at `/home/myuser/myconfig.yaml`- with contents:&lt;br /&gt;```yamlsection1:  subsection1:    item1:      subitem1: value1    item2: value2    item3: value3  subsection2:    item1: value1    item2: value2    item3: value3  key1: value1  key2: value2  key3: value3section2:  item1: value1``````pythonfrom bertdotconfig import Config# Initialize App Configconfig = Config(config_file_uri='~/myconfig.yaml').read()value = config.get('section1.*.item1')print(value)```The above should return `[{'subitem1': 'value1'}, 'value1']`Note: When retrieving values via wildcard, the return value is a list object.## Load a configuration file as a python objectSame as the above examples, just invoke the Config objectwith `as_object=True`, as with `config = Config('~/myconfig.yaml', as_object=True).read()`In this case, retrieving values from the object can be done via dot-notation, as with: `print(config.section1.subsection1.item2)`, or via `get` method, as with`print(settings.section1.subsection1.item2)`Note: This approach does not support retrieving values via wildcard reference.</longdescription>
</pkgmetadata>