<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pylint Per File Ignores ðŸ˜²This pylint plugin will enable per-file-ignores in your project!## Install```# w/ poetrypoetry add --dev pylint-per-file-ignores# w/ pippip install pylint-per-file-ignores```## Add to Pylint Settings```toml[tool.pylint.MASTER]load-plugins=[    &quot;pylint_per_file_ignores&quot;,    ...]```## UsageAdd list of patterns and codes you would like to ignore.### Using native pylint settingsSection &quot;MESSAGES CONTROL&quot;. Examples:```ini# setup.cfg[pylint.MESSAGES CONTROL]per-file-ignores =  /folder_1/:missing-function-docstring,W0621,W0240,C0115  file.py:C0116,E0001``````toml# pyproject.toml[tool.pylint.'MESSAGES CONTROL']per-file-ignores = [    &quot;/folder_1/:missing-function-docstring,W0621,W0240,C0115&quot;,    &quot;file.py:C0116,E0001&quot;]```### Using custom `pyproject.toml` sectionFor backwards compatibility only. Example:```toml[tool.pylint-per-file-ignores]&quot;/folder_1/&quot;=&quot;missing-function-docstring,W0621,W0240,C0115&quot;&quot;file.py&quot;=&quot;C0116,E0001&quot;```## ThanksTo pylint :) And the plugin `pylint-django` who produced most of the complex code.## ContributingThis repo uses commitizen and semantic release. Please commit using `npm run commit` .</longdescription>
</pkgmetadata>