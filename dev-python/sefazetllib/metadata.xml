<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sefazetllib[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json)](https://github.com/charliermarsh/ruff)[![Checked with mypy](https://www.mypy-lang.org/static/mypy_badge.svg)](https://mypy-lang.org/)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)---**Documentation**: [https://main.d32to2oidohzrl.amplifyapp.com/](https://main.d32to2oidohzrl.amplifyapp.com/)**Source code**: [AWS CodeCommit](https://sa-east-1.console.aws.amazon.com/codesuite/codecommit/repositories/jobs-lib-sefaz-ce/browse?region=sa-east-1)---**sefazetllib** is a library that provides a simplified and abstracted way to construct ETL/ELT pipelines.## Features- Easy to use and understand library for constructing ETL/ELT pipelines.- Compatibility with popular data processing frameworks, such as [pandas](https://pandas.pydata.org/) and [PySpark](https://spark.apache.org/).- Support for file formats such as CSV and Parquet.- Provides the ability to extract, transform and load data with customizable configurations.## Requirements**sefazetllib** requires the following to run:- [Python](https://www.python.org/) 3.7.1+- [pandas](https://pandas.pydata.org/) 1.3+- [PyArrow](https://arrow.apache.org/) 6.0+- [PySpark](https://spark.apache.org/) 3.0+- [PyDeequ](https://pydeequ.readthedocs.io/) 1.0+- [Boto3](https://github.com/boto/boto3) 1.24+## InstallationUse [pip](https://pip.pypa.io/en/stable/) to install **sefazetllib**:```bashpip install sefazetllib```## UsageHere is an example of how to use the **sefazetllib**:```Pythonfrom typing import Tuplefrom pandas import DataFramefrom sefazetllib import Builderfrom sefazetllib.etl import ETLfrom sefazetllib.extract import ExtractLocalfrom sefazetllib.factory.platform import PlatformFactoryfrom sefazetllib.load import LoadLocalfrom sefazetllib.transform import Transformfrom sefazetllib.utils.key import SurrogateKey@Builderclass TestingDataFrame(Transform):    def execute(self) -&gt; Tuple[str, DataFrame]:        return (            &quot;dataframe&quot;,            DataFrame(                [[&quot;tom&quot;, 10], [&quot;nick&quot;, 15], [&quot;juli&quot;, 14]], columns=[&quot;Name&quot;, &quot;Age&quot;]            ),        )(    ETL()    .setPlatform(PlatformFactory(&quot;Pandas&quot;).create(name=&quot;test_pandas&quot;))    .transform(TestingDataFrame)    .load(        LoadLocal()        .setFileFormat(&quot;parquet&quot;)        .setEntity(&quot;load_test&quot;)        .setMode(&quot;overwrite&quot;)        .setReference(&quot;dataframe&quot;)        .setDuplicates(True)        .setKey(SurrogateKey().setColumns([&quot;Name&quot;, &quot;Age&quot;]).setDistribute(False))    )    .extract(        ExtractLocal()        .setFileFormat(&quot;parquet&quot;)        .setUrl(&quot;load_test.parquet&quot;)        .setReference(&quot;extract_test&quot;)    ))```## TestingTo run the unit tests, run the following command:```bashpy -m unittest tests/main.py -v```## License**sefazetllib** is released under the [Apache-2.0](/LICENSE).</longdescription>
</pkgmetadata>