<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==============openxmllib-py3==============This is a fork of [openxmllib](https://github.com/glenfant/openxmllib)with Python3 support.openxmllib is a set of tools that deals with the new ECMA 376 office fileformats known as OpenXML.http://www.ecma-international.org/publications/standards/Ecma-376.htmOpenXML format is used by Microsoft Office 2007 and later. Apple iWorkand OpenOffice have filters to use this format too, starting from iWork'08and OO version 2.2.Features========Tested features---------------* Extract words from a document for indexing purpose.* Get metadata from a document* Add OpenXml mimetypes to standard ``mimetypes`` module.* Extract cover thumbnail image, if the document contains itPlanned features----------------* Transform a document to HTMLPublic API==========These examples say all::  &gt;&gt;&gt; import openxmllib  &gt;&gt;&gt; doc = openxmllib.openXmlDocument(path='office.docx')  &gt;&gt;&gt; # Raises a ValueError on not supported office files.  &gt;&gt;&gt; doc.mimeType  'application/vnd.openxmlformats-officedocument.wordprocessingml.document'  &gt;&gt;&gt; doc.coreProperties # Keys may depend on application  {'title': u'blah...', u'creator': u'John Doe', ...}  &gt;&gt;&gt; doc.extendedProperties # Keys may depend on application  {'Words': u'312', 'Application': u'Your favorite word processor', ...}  &gt;&gt;&gt; doc.customProperties # May return an empty mapping  {'My property': u'My value', ...}  &gt;&gt;&gt; doc.allProperties # Merges core+extended+custom properties (see above)  {...}  &gt;&gt;&gt; doc.indexableText(include_properties=False)  u'all the words of that document body'  &gt;&gt;&gt; doc.indexableText(include_properties=True)  u'all the words of that document body and all properties values'  &gt;&gt;&gt; doc.documentCover()  ('jpg', &lt;open file '/var/folders/.../docProps/thumbnail.jpeg', mode 'rb' at 0x1af300&gt;)Standard ``mimetypes`` package extensions ::  &gt;&gt;&gt; import mimetypes  &gt;&gt;&gt; mimetypes.guess_type('somedoc.docx')  ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', None)  &gt;&gt;&gt; mimetypes.guess_type('somecalc.xlsx')  ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', None)  &gt;&gt;&gt; mimetypes.guess_type('someslides.pptx')  ('application/vnd.openxmlformats-officedocument.presentationml.presentation', None)Document factory signatures::  &gt;&gt;&gt; # We have the path for the office file  &gt;&gt;&gt; doc = openxmllib.openXmlDocument(path='office.docx')  &gt;&gt;&gt; # We have a file object for the office file  &gt;&gt;&gt; fh = open('office.docx', 'rb')  &gt;&gt;&gt; doc = openxmllib.openXmlDocument(file_='office.docx')  &gt;&gt;&gt; # We have the URL for the office file  &gt;&gt;&gt; doc = openxmllib.openXmlDocument(url='http://domain.tld/office.docx')  &gt;&gt;&gt; # Xe have the raw data of the office file  &gt;&gt;&gt; import mimetypes  &gt;&gt;&gt; docx_mimetype = mimetypes.guess_type('office.docx')  &gt;&gt;&gt; body = open('office.docx', 'rb').read()  &gt;&gt;&gt; doc = open(data=body, mime_type=docx_mimetype)Note that if you're not running a Python application, you may get the indexabletext from a document with the `openxmlinfo.py` console utility. Just type::  $ openxmlinfo --helpCopying and License===================Copyright (c) 2008 Gilles LenfantThis software is subject to the provisions of the GNU General PublicLicense, Version 2.0 (GPL).  A copy of the GPL should accompany thisdistribution.  THIS SOFTWARE IS PROVIDED &quot;AS IS&quot; AND ANY AND ALLEXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOTLIMITED TO, THE IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,AGAINST INFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSEMore details in the ``COPYING`` file included in this package.Status======Starting from version 2.0, this package is tested using Python 3.8.x on Linux.If dependencies can be met, it will most likely work on other environments as well.Installation============Using the usual setuptools command::  $ pip install openxmllib-py3Note that this will install the excellent `lxml` egg too if not already done.From now you can &quot;import openxmllib&quot; in your Python apps and use the&quot;openxmlinfo&quot; command line utility.Gotchas=======Be aware that most text data coming from the various openxmllibservices might be us-ascii or Unicode. This is a side effect of lxml(bug or feature ?). It's up to your application to convert these textsto the appropriate charset.We do not actually handle exceptions due to malformed XML or variousunexpected structures. You should handle the various (potential)problems in a try (...) except (...) block in your application.Developing and testing======================You should grab openxmllib from its repository at https://github.com/wilbertom/openxmllib-py3.Then::  $ cd /where/you/installed/openxmllib  $ python setup.py developNote that testing does not require the installation::  $ cd tests  $ python runalltests.pySupport=======Use the issue tracker provided from the `project site&lt;https://github.com/wilbertom/openxmllib-py3/issues&gt;`_.Credits=======* Gilles Lenfant [gilles.lenfant] &lt;gilles dot lenfant at gmail dot com&gt;* Kevin Deldycke [kevin.deldycke] &lt;kevin at deldycke dot com&gt;* Hugo Lopes Tavares [hltbra] &lt;hltbra at gmail dot com&gt;* Petri Savolainen [petri] &lt;petri dot savolainen at koodaamo dot fi&gt;* Eric Wohnlich [ewohnlich] &lt;https://github.com/ewohnlich&gt;* Wilberto Morales [wilbertom] &lt;https://github.com/wilbertom/&gt;.. -*- coding: utf-8 -*-.. _todo:============================Future features and bugfixes============================Features========Remove downloaded temporary file--------------------------------When data is coming from HTTP (...) URL, it's stored in a temporary file that'snot deleted after processing.Support for standard mimetypes module-------------------------------------Add our mime types to standard Python module.Human readable plain text conversion------------------------------------.. code-block:: pycon   &gt;&gt;&gt; from openxmllib import openXmlDocument   &gt;&gt;&gt; doc = openXmlDocument(...)   &gt;&gt;&gt; doc.textDocument(target_directory)(this may be not possible for spreadsheets)HTML conversions----------------.. code-block:: pycon   &gt;&gt;&gt; from openxmllib import openXmlDocument   &gt;&gt;&gt; doc = openXmlDocument(...)   &gt;&gt;&gt; doc.htmlDocument(target_directory)This requires to find open source XSLT stylesheets.Document generation-------------------FIXME: more to say hereBugfixes========...Waiting for feedback ;o).. -*- coding: utf-8 -*-.. _history:=======History=======.. admonition::   Issues # xxx   See `&lt;https://github.com/glenfant/openxmllib/issues&gt;`_1.1.1===== - Fix text extraction from Word template (.dotx) documents   [pdpotter]1.1=== - New feature: document cover image extraction (when present)   [petri] - Remove old pointers in README etc. pointing to old google code repo   [petri] - Update lxml dependency (require &gt;= 3.4.0 now)   [petri]1.0.7===== - Fixed setup.py that imports indirectly lxml. Raises failure in buildout.   Issue # 11   [gilles.lenfant] - unit tests temporary http server did not work   [gilles.lenfant]1.0.6===== - The bug of mid word style change is still not fixed in presentation and   spreadsheets :/ Anyway, we needed an API sanitazation.   [gilles.lenfant] - Factory API changed for a safer and faster document object construction.   [gilles.lenfant] - Added support for new mime types that are not in the standard mimetypes   module.   [gilles.lenfant]1.0.5===== - Optims on large documents.   [gilles.lenfant] - CamelCased functions and method names in consistency with applied rules.   [gilles.lenfant] - Version reset to 1.0.5   [gilles.lenfant] - Support for urllib compatible URLs   [gilles.lenfant] - New: Support for URLs   [hltbra] - Fixed implementation to that old tests pass (the &quot;midword&quot;/&quot;metadata&quot; case,   bold + normal style was not ok)   [hltbra]1.0.4===== - Compliance with python 2.5 and lxml 2.2   Still works with python 2.4 and lxml 1.3.6   [gilles.lenfant] - Automate package and version definition - Bump version to 1.0.4   2008-12-11 [kevin.deldycke]1.0.3===== - Conforming XPath constructor signature.   [gilles.lenfant] - New test files built with Mac Office 2008   [gilles.lenfant]1.0.2===== - Fix bad &quot;egging&quot;.   [kevin.deldycke]1.0.1===== - Egg-ification.   [kevin.deldycke]1.0.0===== - First public version.   [gilles.lenfant]</longdescription>
</pkgmetadata>