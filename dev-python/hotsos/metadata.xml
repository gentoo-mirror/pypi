<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># OverviewHotsos is a framework for software-defined analysis. It provides a library ofplugins written in Python along with a [high-levellanguage](hotsos/defs/README.md) in which to implement checks and analysis andreport problems. Supported plugins include:* Openstack* Kubernetes* Ceph* Open vSwitch* Juju* MAAS* Vault* MySQL* RabbitMQ* and moreEach plugin has a set of associated checks or &quot;scenarios&quot; that run in thecontext of that plugin and seek to identify issues. The output of running hotsosis a summary produced by each plugin including key information about the runtimeof that application along with any issues detected. This summary also aims tocontain as much information needed to aid manual analysis beyond the automatedchecks and is easily extensible.The default summary format is yaml and a number of other options and formats areprovided.Hotsos is either run directly against a host or a[sosreport](https://github.com/sosreport/sos).The code has the following structure:* core library (includes plugins)* yaml-defined checks (see documentation at [defs](hotsos/defs/README.md))* plugin extensions e.g. summary output* tests## UsageLet's say for example that you are running an Openstack Cloud and one of yourhypervisor nodes that also happens to be running part of a Ceph storage clusteris experiencing a problem with network connectivity to workloads. You can simplyrun hotsos either against a sosreport generated from that node or on that nodedirectly as follows:```consoleubuntu@ncpu1$ hotsos -sINFO: analysing localhost /INFO: output saved to hotsos-output-1673868979```Now you will find a folder called `hotsos-output-1673868979` containing asummary of information in a number of different formats. Taking the most commonyaml format we can see:```consoleubuntu@ncpu1$ cat hotsos-output-1673868979/ncpu1.summary.yaml```This file will contain a per-plugin summary of information found along with anyissues detected. By default hotsos will only look at the last 24 hours of logs.You can increase this with `--all-logs` which will by default give you 7 daysworth and if you want more you can use `--max-logrotate-depth &lt;days&gt;`.Our folder also contains other formats of the same information and one of thoseis json which can easily be queried using a tool called[jq](https://stedolan.github.io/jq/). Using this useful tool we can easily queryfor specific information e.g.```consoleubuntu@ncpu1$ jq -r '.storage.&quot;potential-issues&quot;' hotsos-output-1673868979/ncpu1.summary.json{  &quot;BcacheWarnings&quot;: [    &quot;One or more of the following bcache bdev config assertions failed: sequential_cutoff eq \&quot;0.0k\&quot;/actual=\&quot;4.0M\&quot;, cache_mode eq \&quot;writethrough [writeback] writearound none\&quot;/actual=\&quot;writethrough [writeback] writearound none\&quot;, writeback_percent ge 10/actual=\&quot;10\&quot; (origin=storage.auto_scenario_check)&quot;,    &quot;One or more of the following bcache cacheset config assertions failed: congested_read_threshold_us eq 0/actual=\&quot;2000\&quot;, congested_write_threshold_us eq 0/actual=\&quot;20000\&quot; (origin=storage.auto_scenario_check)&quot;  ]}```## ExamplesAn example **full** (yaml) summary can be found[here](examples/hotsos-example-openstack.summary.yaml)An example **short** (yaml) summary can be found[here](examples/hotsos-example-openstack.short.summary.yaml)## InstallHotSOS is distributed using the following methods:### pypiYou can install using Python pip e.g.```console$ sudo apt install python3-pip$ pip install hotsos```NOTE: currently requires Python &gt;= 3.8### snapYou can install as a snap e.g.```console$ sudo apt install snapd$ sudo snap install hotsos --classic```See &lt;https://snapcraft.io/hotsos&gt; for more info on usage.or run from source e.g.```console$ git clone https://github.com/canonical/hotsos$ pip install -r hotsos/requirements.txt$ ./hotsos/scripts/hotsos```</longdescription>
</pkgmetadata>