<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============Zalando Kubectl===============.. image:: https://img.shields.io/pypi/dw/zalando-kubectl.svg   :target: https://pypi.python.org/pypi/zalando-kubectl/   :alt: PyPI Downloads.. image:: https://img.shields.io/pypi/v/zalando-kubectl.svg   :target: https://pypi.python.org/pypi/zalando-kubectl/   :alt: Latest PyPI version.. image:: https://img.shields.io/pypi/l/zalando-kubectl.svg   :target: https://pypi.python.org/pypi/zalando-kubectl/   :alt: LicenseKubernetes CLI (kubectl) wrapper in Python with OAuth token authentication.This wrapper script ``zkubectl`` serves as a drop-in replacement for the ``kubectl`` binary:* it downloads the current ``kubectl`` binary from Google* it generates a new ``~/.kube/config`` with an OAuth Bearer token acquired via `zign`_.* it passes through commands to the ``kubectl`` binaryInstallation============Requires Python 3.6+... code-block:: bash    $ sudo pip3 install --upgrade zalando-kubectlUsage=====You can directly login to a known Kubernetes API server endpoint:.. code-block:: bash    $ zkubectl login https://my-api-server.example.org    $ zkubectl cluster-infoYou can also configure a Cluster Registry to look up clusters by ID:.. code-block:: bash    $ zkubectl configure --cluster-registry=https://cluster-registry.example.org    $ zkubectl login my-cluster-idThe Cluster Registry needs to provide the following HTTP API for this to work:.. code-block:: bash    $ curl -H &quot;Authorization: Bearer $(zign tok)&quot; https://cluster-registry.example.org/kubernetes-clusters/my-cluster-id    {        &quot;api_server_url&quot;: &quot;https://my-api-server.example.org&quot;    }There is an additional convenience command to open the `Kubernetes Dashboard web UI`_ in the browser:.. code-block:: bash    $ zkubectl dashboard    Waiting for local kubectl proxy.. . . . . . . . . . .Starting to serve on 127.0.0.1:8001 OK    Opening http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy ..Unit Tests==========Run unit tests with Tox:.. code-block:: bash    $ sudo pip3 install tox    $ toxLocal Changes=============It's recommended to have a `virtualenv` for the project. The project uses `Black`_ for code formatting,please configure your editor to use it.Go to the project dir and install dependencies.. code-block:: bash    $ cd &lt;project-path&gt;    $ pip install -r requirements.txt    $ pip install --editable .Now the code change will just be reflected in the `zkubectl` binary.. code-block:: bash    $ zkubectl &lt;wahatever&gt;.. _zign: https://pypi.python.org/pypi/stups-zign.. _Kubernetes Dashboard web UI: http://kubernetes.io/docs/user-guide/ui/.. _Black: https://black.readthedocs.io/en/stable/</longdescription>
</pkgmetadata>