<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># apple-news-to-sqliteExport Apple News Saved Stories to SQLite## Install    pip install apple-news-to-sqlite## Source code[apple-news-to-sqlite](https://github.com/RhetTbull/apple-news-to-sqlite)## Usage    apple-news-to-sqlite articles.db        apple-news-to-sqlite --dumpYour Terminal app will require full disk access in order to access the saved article database in the Apple News app sandbox.## CLI help&lt;!-- [[[cogimport cogfrom apple_news_to_sqlite.cli import clifrom click.testing import CliRunnerrunner = CliRunner()result = runner.invoke(cli, [&quot;--help&quot;])help = result.output.replace(&quot;Usage: cli&quot;, &quot;Usage: apple-news-to-sqlite&quot;)cog.out(    &quot;```\n{}\n```&quot;.format(help))]]] --&gt;```Usage: apple-news-to-sqlite [OPTIONS] [DB_PATH]  Export your Apple News saved stories/articles to a SQLite database  Example usage:      apple-news-to-sqlite articles.db  This will populate articles.db with an &quot;articles&quot; table containing information  about your saved articles.  Notes:  The contents of the articles themselves are not stored in the database, only  metadata about the article such as title, author, url, etc.  The date the article was saved is in GMT.Options:  --version       Show the version and exit.  --dump, --json  Print saved stories to standard output as JSON.  --all           Process all saved articles; if not specified, only saved                  articles that have not previously been stored in the database                  are processed.  --schema        Create database schema and exit.  --help          Show this message and exit.```&lt;!-- [[[end]]] --&gt;## Using apple-news-to-sqlite in your own Python code`get_saved_articles()` returns a list of dictionaries, each representing a saved article with thefollowing keys:    * id: str    * date: datetime.datetime    * url: str    * title: str    * description: str    * image: str    * author: str```pycon&gt;&gt;&gt; from apple_news_to_sqlite import get_saved_articles&gt;&gt;&gt; articles = get_saved_articles()```## How it worksThrough reverse engineering, it was determined that the Apple News app storessaved articles in a file called `reading-list` in the following directory:`~/Library/Containers/com.apple.news/Data/Library/Application Support/com.apple.news/com.apple.news.public-com.apple.news.private-production/`This format of this file is unknown but it is a binary file that contains two embedded [binary plist](https://medium.com/@karaiskc/understanding-apples-binary-property-list-format-281e6da00dbd)files. The first contains an [NSKeyedArchiver](https://developer.apple.com/documentation/foundation/nskeyedarchiver)object which I have not yet inspected. The second bplist contains a list of saved article IDs along with the datethey were saved. The article IDs are used to look up the article data on Apple's News site and the article datais extracted with [Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/).## TestingThe code is at the &quot;it works on my machine&quot; stage of testing. (M1 Mini, macOS Ventura 13.1)I've also tested this on macOS Catalina 10.15.7 and it appears to work correctly.If it doesn't work for you, please open an issue!## ContributingContributions of all types are welcome! Fork the repo, make a branch, and submit a PR.See [README_DEV.md](README_DEV.md) for developer notes.## ThanksThanks to [Simon Willison](https://simonwillison.net/) who inspired this projectwith his excellent &quot;everything-to-sqlite&quot; [dogsheep](https://github.com/dogsheep) project.Thanks Simon also for the excellent tools[sqlite-utils](https://github.com/simonw/sqlite-utils) and [Datasette](https://datasette.io).Thanks also to [Dave Bullock](https://github.com/eecue) who inspired this project and helpedtremendously with the reverse engineering and initial code.## LicenseMIT License</longdescription>
</pkgmetadata>