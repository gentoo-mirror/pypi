<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  PyStow&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/cthoyt/pystow/actions&quot;&gt;    &lt;img src=&quot;https://github.com/cthoyt/pystow/workflows/Tests/badge.svg&quot; alt=&quot;Build status&quot; height=&quot;20&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/pystow&quot;&gt;    &lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/pystow&quot;&gt;  &lt;/a&gt;  &lt;a href='https://opensource.org/licenses/MIT'&gt;    &lt;img src='https://img.shields.io/badge/License-MIT-blue.svg' alt='License'/&gt;  &lt;/a&gt;  &lt;a href='https://pystow.readthedocs.io/en/latest/?badge=latest'&gt;    &lt;img src='https://readthedocs.org/projects/pystow/badge/?version=latest' alt='Documentation Status' /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://zenodo.org/badge/latestdoi/318194121&quot;&gt;    &lt;img src=&quot;https://zenodo.org/badge/318194121.svg&quot; alt=&quot;DOI&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/psf/black&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot; alt=&quot;Code style: black&quot;&gt;  &lt;/a&gt;&lt;/p&gt;üëú Easily pick a place to store data for your python code.## üöÄ Getting StartedGet a directory for your application.```pythonimport pystow# Get a directory (as a pathlib.Path) for ~/.data/pykeenpykeen_directory = pystow.join('pykeen')# Get a subdirectory (as a pathlib.Path) for ~/.data/pykeen/experimentspykeen_experiments_directory = pystow.join('pykeen', 'experiments')# You can go as deep as you wantpykeen_deep_directory = pystow.join('pykeen', 'experiments', 'a', 'b', 'c')```If you reuse the same directory structure a lot, you can save them in a module:```pythonimport pystowpykeen_module = pystow.module(&quot;pykeen&quot;)# Access the module's directory with .baseassert pystow.join(&quot;pykeen&quot;) == pystow.module(&quot;pykeen&quot;).base# Get a subdirectory (as a pathlib.Path) for ~/.data/pykeen/experimentspykeen_experiments_directory = pykeen_module.join('experiments')# You can go as deep as you want past the original &quot;pykeen&quot; modulepykeen_deep_directory = pykeen_module.join('experiments', 'a', 'b', 'c')```Get a file path for your application by adding the `name` keyword argument. This is made explicit so PyStow knows whichparent directories to automatically create. This works with `pystow` or any module you create with `pystow.module`.```pythonimport pystow# Get a directory (as a pathlib.Path) for ~/.data/indra/database.tsvindra_database_path = pystow.join('indra', 'database', name='database.tsv')```Ensure a file from the internet is available in your application's directory:```pythonimport pystowurl = 'https://raw.githubusercontent.com/pykeen/pykeen/master/src/pykeen/datasets/nations/test.txt'path = pystow.ensure('pykeen', 'datasets', 'nations', url=url)```Ensure a tabular data file from the internet and load it for usage (requires `pip install pandas`):```pythonimport pystowimport pandas as pdurl = 'https://raw.githubusercontent.com/pykeen/pykeen/master/src/pykeen/datasets/nations/test.txt'df: pd.DataFrame = pystow.ensure_csv('pykeen', 'datasets', 'nations', url=url)```Ensure a comma-separated tabular data file from the internet and load it for usage (requires `pip install pandas`):```pythonimport pystowimport pandas as pdurl = 'https://raw.githubusercontent.com/cthoyt/pystow/main/tests/resources/test_1.csv'df: pd.DataFrame = pystow.ensure_csv('pykeen', 'datasets', 'nations', url=url, read_csv_kwargs=dict(sep=&quot;,&quot;))```Ensure a RDF file from the internet and load it for usage (requires `pip install rdflib`)```pythonimport pystowimport rdfliburl = 'https://ftp.expasy.org/databases/rhea/rdf/rhea.rdf.gz'rdf_graph: rdflib.Graph = pystow.ensure_rdf('rhea', url=url)```Also see `pystow.ensure_excel()`, `pystow.ensure_rdf()`, `pystow.ensure_zip_df()`, and `pystow.ensure_tar_df()`.If your data comes with a lot of different files in an archive,you can ensure the archive is downloaded and get specific files from it:```pythonimport numpy as npimport pystowurl = &quot;https://cloud.enterprise.informatik.uni-leipzig.de/index.php/s/LHPbMCre7SLqajB/download/MultiKE_D_Y_15K_V1.zip&quot;# the path inside the archive to the file you wantinner_path = &quot;MultiKE/D_Y_15K_V1/721_5fold/1/20210219183115/ent_embeds.npy&quot;with pystow.ensure_open_zip(&quot;kiez&quot;, url=url, inner_path=inner_path) as file:    emb = np.load(file)```Also see `pystow.module.ensure_open_lzma()`, `pystow.module.ensure_open_tarfile()` and `pystow.module.ensure_open_gz()`.## ‚öôÔ∏èÔ∏è ConfigurationBy default, data is stored in the `$HOME/.data` directory. By default, the `&lt;app&gt;` app will create the`$HOME/.data/&lt;app&gt;` folder.If you want to use an alternate folder name to `.data` inside the home directory, you can set the `PYSTOW_NAME`environment variable. For example, if you set `PYSTOW_NAME=mydata`, then the following code for the `pykeen` app willcreate the `$HOME/mydata/pykeen/` directory:```pythonimport osimport pystow# Only for demonstration purposes. You should set environment# variables either with your .bashrc or in the command line REPL.os.environ['PYSTOW_NAME'] = 'mydata'# Get a directory (as a pathlib.Path) for ~/mydata/pykeenpykeen_directory = pystow.join('pykeen')```If you want to specify a completely custom directory that isn't relative to your home directory, you can setthe `PYSTOW_HOME` environment variable. For example, if you set `PYSTOW_HOME=/usr/local/`, then the following code forthe `pykeen` app will create the `/usr/local/pykeen/` directory:```pythonimport osimport pystow# Only for demonstration purposes. You should set environment# variables either with your .bashrc or in the command line REPL.os.environ['PYSTOW_HOME'] = '/usr/local/'# Get a directory (as a pathlib.Path) for /usr/local/pykeenpykeen_directory = pystow.join('pykeen')```Note: if you set `PYSTOW_HOME`, then `PYSTOW_NAME` is disregarded.### X Desktop Group (XDG) CompatibilityWhile PyStow's main goal is to make application data less opaque and lesshidden, some users might want to use the[XDG specifications](http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html)for storing their app data.If you set the environment variable  `PYSTOW_USE_APPDIRS` to `true` or `True`, then the[`appdirs`](https://pypi.org/project/appdirs/) package will be used to choosethe base directory based on the `user data dir` option. This can still beoverridden by `PYSTOW_HOME`.## üöÄ InstallationThe most recent release can be installed from[PyPI](https://pypi.org/project/pystow/) with:```bash$ pip install pystow```Note, as of v0.3.0, Python 3.6 isn't officially supported (itsend-of-life was in December 2021). For the time being, `pystow` might stillwork on py36, but this is only coincidental.The most recent code and data can be installed directly from GitHub with:```bash$ pip install git+https://github.com/cthoyt/pystow.git```To install in development mode, use the following:```bash$ git clone git+https://github.com/cthoyt/pystow.git$ cd pystow$ pip install -e .```## ‚öñÔ∏è LicenseThe code in this package is licensed under the MIT License.</longdescription>
</pkgmetadata>