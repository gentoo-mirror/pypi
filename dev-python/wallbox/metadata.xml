<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># wallboxPython Module interface for Wallbox EV chargers api## RequirementsPython 3.7 or older Python modules &quot;requests&gt;=2.22.0&quot;, &quot;simplejson&gt;=3.16.0&quot;Python module &quot;aenum&gt;=3.1.8&quot;## Installation```pythonpip install wallbox```## Implemented methods### authenticate()- authenticates to the wallbox api.### getChargersList()- returns a list of chargers available to the account### getChargerStatus(chargerID)- returns a dictionary containing the charger status data### unlockCharger(chargerId)- unlocks charger### lockCharger(chargerId)- locks charger### setMaxChargingCurrent(chargerId, chargingCurrentValue)- sets charger Maximum Charging Current (Amps)### pauseChargingSession(chargerId)- pauses a charging session### resumeChargingSession(chargerId)- resumes a charging session### getSessionList(chargerId, startDate, endDate)- provides the list of charging sessions between startDate and endDate- startDate and endDate are provided in Python datetime format (i.e. 2021-05-04 08:41:12.765644)### setEnergyCost(chargerId, energyCost)- sets the energy cost for the charger per kWh## Simple example```pythonfrom wallbox import Wallbox, Statusesimport timeimport datetimew = Wallbox(&quot;user@email&quot;, &quot;password&quot;)# Authenticate with the credentials abovew.authenticate()# Print a list of chargers in the accountprint(w.getChargersList())# Get charger data for all chargers in the list, then lock and unlock chargersfor chargerId in w.getChargersList():    chargerStatus = w.getChargerStatus(chargerId)    print(f&quot;Charger Status: {chargerStatus}&quot;)    print(f&quot;Lock Charger {chargerId}&quot;)    endDate = datetime.datetime.now()    startDate = endDate - datetime.timedelta(days = 30)    sessionList = w.getSessionList(chargerId, startDate, endDate)    print(f&quot;Session List: {sessionList}&quot;)    w.lockCharger(chargerId)    time.sleep(10)    chargerStatus = w.getChargerStatus(chargerId)    print(f&quot;Charger {chargerId} lock status {chargerStatus['config_data']['locked']}&quot;)    print(f&quot;Unlock Charger {chargerId}&quot;)    w.unlockCharger(chargerId)    time.sleep(10)    chargerStatus = w.getChargerStatus(chargerId)    print(f&quot;Charger {chargerId} lock status {chargerStatus['config_data']['locked']}&quot;)    # Set charger Energy Cost to 0.1â‚¬/kWh    energyCost = w.setEnergyCost(chargerId, 0.1)    print(f&quot;Charger {chargerId} energy cost {energyCost['energy_price']} {energyCost['currency']['symbol']}&quot;)    # Print the status the charger is currently in using the status id    print(f&quot;Charger Mode: {Statuses(chargerStatus['status_id']).name}&quot;)```</longdescription>
</pkgmetadata>