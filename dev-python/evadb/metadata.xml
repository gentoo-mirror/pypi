<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://evadb.readthedocs.io&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/georgia-tech-db/evadb/master/docs/images/evadb/evadb-full-logo.svg&quot; width=&quot;40%&quot; alt=&quot;EvaDB&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;&lt;b&gt;Database system for AI-powered apps&lt;/b&gt;&lt;/i&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/georgia-tech-db/evadb/fork&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/georgia-tech-db/evadb?style=for-the-badge&quot; alt=&quot;EvaDB forks&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/georgia-tech-db/evadb/stargazers&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/georgia-tech-db/evadb?style=for-the-badge&quot; alt=&quot;EvaDB stars&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/georgia-tech-db/evadb/pulls&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/georgia-tech-db/evadb?style=for-the-badge&quot; alt=&quot;EvaDB pull-requests&quot;/&gt;&lt;/a&gt;&lt;a href='https://github.com/georgia-tech-db/evadb/releases'&gt;&lt;img src='https://img.shields.io/github/release/georgia-tech-db/evadb?&amp;label=Latest&amp;style=for-the-badge'&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/georgia-tech-db/evadb/commits&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commits-since/georgia-tech-db/evadb/v0.1.0.svg?style=for-the-badge&quot; alt=&quot;EvaDB Commits&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Follow EvaDB&lt;/b&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://evadb.ai/community&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-evadb-orange.svg?logo=slack&quot; alt=&quot;Join EvaDB Slack Community&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://twitter.com/evadb_ai&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/evadb_ai?label=Follow: evadb_ai&amp;style=social&quot; alt=&quot;Follow evadb_ai&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;https://medium.com/evadb-blog/&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/EvaDB_Blog-Medium-8A2BE2&quot; alt=&quot;EvaDB on Medium&quot;/&gt;&lt;a href=&quot;https://evadb.ai/&quot; target=&quot;blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/website/http/www.evadb.ai&quot; alt=&quot;EvaDB Website&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://colab.research.google.com/github/georgia-tech-db/evadb/blob/master/tutorials/03-emotion-analysis.ipynb&quot;&gt;      &lt;img src=&quot;https://colab.research.google.com/assets/colab-badge.svg&quot; alt=&quot;Launch EvaDB on Colab&quot;/&gt;  &lt;/a&gt;    &lt;a href=&quot;https://github.com/orgs/georgia-tech-db/projects/3&quot;&gt;      &lt;img src=&quot;https://img.shields.io/badge/evadb-roadmap-a6c096&quot; alt=&quot;Roadmap&quot;/&gt;  &lt;/a&gt;  &lt;img alt=&quot;Python Versions Supported&quot; src=&quot;https://img.shields.io/badge/Python--versions-3.8~3.11-brightgreen&quot;/&gt;  &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?logo=apache&quot;/&gt;  &lt;img alt=&quot;Coverage Status&quot; src=&quot;https://coveralls.io/repos/github/georgia-tech-db/eva/badge.svg?branch=master&quot;/&gt;  &lt;!-- &lt;a href=&quot;https://pepy.tech/project/evadb&quot;&gt;          &lt;img alt=&quot;Downloads&quot; src=&quot;https://static.pepy.tech/badge/evadb&quot;/&gt;        &lt;/a&gt; --&gt;    &lt;br /&gt;&lt;/p&gt;EvaDB enables software developers to build AI apps in a few lines of code. Its powerful SQL API simplifies AI app development for both structured and unstructured data. EvaDB's benefits include:&lt;details&gt;&lt;summary&gt; üîÆ Easy to &lt;a href=&quot;https://evadb.readthedocs.io/en/latest/source/overview/connect-to-data-sources.html&quot;&gt;connect the EvaDB query engine with your data sources&lt;/a&gt;, such as PostgreSQL or S3 buckets, and build AI-powered apps with SQL queries. &lt;/summary&gt;&lt;br/&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Structured Data Sources&lt;/th&gt;&lt;th&gt;Unstructured Data Sources&lt;/th&gt;&lt;th&gt;Application Data Sources&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;- PostgreSQL- SQLite- MySQL- MariaDB- Clickhouse- Snowflake&lt;/td&gt;&lt;td&gt;- Local filesystem- AWS S3 bucket&lt;/td&gt;&lt;td&gt;- Github&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;More details on the supported data sources is [available here](https://evadb.readthedocs.io/en/latest/source/reference/databases/index.html).&lt;/details&gt;&lt;details&gt;&lt;summary&gt; ü§ù &lt;a href=&quot;https://evadb.readthedocs.io/en/latest/source/overview/ai-queries.html&quot;&gt;Query your connected data with a pre-trained AI model&lt;/a&gt; from Hugging Face, OpenAI, YOLO, Stable Diffusion, etc. &lt;/summary&gt;&lt;br/&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Hugging Face&lt;/th&gt;&lt;th&gt;OpenAI&lt;/th&gt;&lt;th&gt;YOLO&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;- Audio Classification- Automatic Speech Recognition- Text Classification- Summarization- Text2Text Generation- Text Generation- Image Classification- Image Segmentation- Image-to-Text- Object Detection- Depth Estimation&lt;/td&gt;&lt;td&gt;- gpt-4- gpt-4-0314- gpt-4-32k- gpt-4-32k-0314- gpt-3.5-turbo- gpt-3.5-turbo-0301&lt;/td&gt;&lt;td&gt;- yolov8n.pt- yolov8s.pt- yolov8m.pt- yolov8l.pt- yolov8x.pt&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;More details on the supported AI models is [available here](https://evadb.readthedocs.io/en/latest/source/reference/ai/index.html)&lt;/details&gt;&lt;details&gt;&lt;summary&gt; üîß Create or fine-tune AI models for regression, classification, and time series forecasting.&lt;/summary&gt;&lt;br/&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Regression&lt;/th&gt;&lt;th&gt;Classification&lt;/th&gt;&lt;th&gt;Time Series Forecasting&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;- Ludwig- Sklearn- Xgboost&lt;/td&gt;&lt;td&gt;- Ludwig- Xboost&lt;/td&gt;&lt;td&gt;- Statsforecast- Neuralforecast&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;More details on the supported AutoML frameworks is [available here](https://evadb.readthedocs.io/en/latest/source/reference/ai/index.html).&lt;/details&gt;&lt;details&gt;&lt;summary&gt; üí∞ Faster AI queries thanks to AI-centric query optimizations such as caching, batching, and parallel processing. &lt;/summary&gt;&lt;br/&gt;  - Function result caching helps reuse results of expensive AI function calls.- LLM batching reduces token usage and dollars spent on LLM calls. - Parallel query processing saves money and time spent on running AI models by better utilizing CPUs and/or GPUs.- Query predicate re-ordering and predicate push-down accelerates queries over both structured and unstructured data.More details on the optimizations in EvaDB is [available here](https://evadb.readthedocs.io/en/latest/source/reference/optimizations.html).&lt;/details&gt;&lt;br/&gt;üëã Hey! If you're excited about our vision of bringing AI inside database systems, show some ‚ù§Ô∏è by: &lt;ul&gt;  &lt;li&gt; ‚≠ê starring our &lt;a href=&quot;https://github.com/georgia-tech-db/evadb&quot;&gt;GitHub üêô Repo&lt;/a&gt;  &lt;li&gt; üìü joining our &lt;a href=&quot;https://evadb.ai/community&quot;&gt;Slack Community&lt;/a&gt;  &lt;li&gt; üê¶ following us on &lt;a href=&quot;https://twitter.com/evadb_ai&quot;&gt;Twitter&lt;/a&gt;  &lt;li&gt; üìù following us on &lt;a href=&quot;https://medium.com/evadb-blog&quot;&gt;Medium&lt;/a&gt;&lt;/ul&gt;We would love to learn about your AI app. Please complete this 1-minute form: https://v0fbgcue0cm.typeform.com/to/BZHZWeZm## Quick Links- [Quick Links](#quick-links)- [Documentation](#documentation)- [Why EvaDB](#why-evadb)- [How does EvaDB work](#how-does-evadb-work)- [Illustrative Queries](#illustrative-queries)- [Illustrative Apps](#illustrative-apps)- [More Illustrative Queries](#more-illustrative-queries)- [Architecture of EvaDB](#architecture-of-evadb)- [Community and Support](#community-and-support)- [Contributing](#contributing)- [Star History](#star-history)- [License](#license)## DocumentationYou can find the complete documentation of EvaDB at [evadb.ai/docs](https://evadb.ai/docs/) üìö‚ú®üöÄ## Why EvaDB In the world of AI, we've reached a stage where many AI tasks that were traditionally handled by AI or ML engineers can now be automated. EvaDB enables software developers with the ability to perform advanced AI tasks without needing to delve into the intricate details.EvaDB covers many AI applications, including regression, classification, image recognition, question answering, and many other generative AI applications. EvaDB targets 99% of AI problems that are often repetitive and can be automated with a simple function call in an SQL query. Until now, there is no comprehensive open-source framework for bringing AI into an existing SQL database system with a principled AI optimization framework, and that's where EvaDB comes in.Our target audience is software developers who may not necessarily have a background in AI but require AI capabilities to solve specific problems. We target programmers who write simple SQL queries inside their CRUD apps. With EvaDB, it is possible to easily add AI features to these apps by calling built-in AI functions in the queries.## How does EvaDB work&lt;details&gt;&lt;ul&gt;&lt;li&gt;Connect EvaDB to your SQL and vector database systems with the &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/reference/databases/postgres.html&quot;&gt;`CREATE DATABASE`&lt;/a&gt; and &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/reference/evaql/create_index.html&quot;&gt;`CREATE INDEX`&lt;/a&gt; statements.&lt;/li&gt;&lt;li&gt;Write SQL queries with AI functions to get inference results:&lt;/li&gt;   &lt;ul&gt;   &lt;li&gt;Pick a pre-trained AI model from Hugging Face, Open AI, Ultralytics, PyTorch, and built-in AI frameworks for generative AI, NLP, and vision applications;&lt;/li&gt;     &lt;li&gt;or pick from a variety of state-of-the-art ML engines for classic ML use-cases (classification, regression, etc.);&lt;/li&gt;   &lt;li&gt;or bring your custom model built with any AI/ML framework using `CREATE FUNCTION`.&lt;/li&gt;   &lt;/ul&gt;&lt;/ul&gt;   Follow the [getting started](https://evadb.readthedocs.io/en/stable/source/overview/getting-started.html) guide to get on-boarded as fast as possible.&lt;/details&gt;## Illustrative Queries* Get insights about Github stargazers using GPT4.```sqlSELECT name, country, email, programming_languages, social_media, GPT4(prompt,topics_of_interest)FROM gpt4all_StargazerInsights;--- Prompt to GPT-4You are given 10 rows of input, each row is separated by two new line characters.Categorize the topics listed in each row into one or more of the following 3 technical areas - Machine Learning, Databases, and Web development. If the topics listed are not related to any of these 3 areas, output a single N/A. Do not miss any input row. Do not add any additional text or numbers to your output.The output rows must be separated by two new line characters. Each input row must generate exactly one output row. For example, the input row [Recommendation systems, Deep neural networks, Postgres] must generate only the output row [Machine Learning, Databases].The input row [enterpreneurship, startups, venture capital] must generate the output row N/A.```* Build a vector index on the feature embeddings returned by the SIFT Feature Extractor on a collection of Reddit images. Return the top-5 similar images for a given image.```sqlCREATE INDEX reddit_sift_image_index    ON reddit_dataset (SiftFeatureExtractor(data))    USING FAISSSELECT name FROM reddit_dataset ORDER BY    Similarity(        SiftFeatureExtractor(Open('reddit-images/g1074_d4mxztt.jpg')),        SiftFeatureExtractor(data)    )    LIMIT 5```## Illustrative AppsHere are some illustrative AI apps built using EvaDB (each notebook can be opened on Google Colab): * üîÆ &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/usecases/sentiment-analysis.html&quot;&gt;Sentiment Analysis using LLM within PostgreSQL&lt;/a&gt; * üîÆ &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/usecases/question-answering.html&quot;&gt;ChatGPT-based Video Question Answering&lt;/a&gt; * üîÆ &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/usecases/text-summarization.html&quot;&gt;Text Summarization on PDF Documents&lt;/a&gt; * üîÆ &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/usecases/object-detection.html&quot;&gt;Analysing Traffic Flow with YOLO&lt;/a&gt; * üîÆ &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/usecases/emotion-analysis.html&quot;&gt;Examining Emotions of Movie&lt;/a&gt; * üîÆ &lt;a href=&quot;https://evadb.readthedocs.io/en/stable/source/usecases/image-search.html&quot;&gt;Image Similarity Search&lt;/a&gt;## More Illustrative Queries&lt;details&gt;* Get a transcript from a video stored in a table using a Speech Recognition model. Then, ask questions on the extracted transcript using ChatGPT.```sqlCREATE TABLE text_summary AS    SELECT SpeechRecognizer(audio) FROM ukraine_video;SELECT ChatGPT('Is this video summary related to Ukraine russia war', text)    FROM text_summary;```* Train a classic ML model for prediction using the &lt;a href=&quot;https://ludwig.ai/latest/&quot;&gt;Ludwig AI&lt;/a&gt; engine.```sqlCREATE FUNCTION IF NOT EXISTS PredictHouseRent FROM(SELECT * FROM HomeRentals)TYPE LudwigPREDICT 'rental_price'TIME_LIMIT 120;```&lt;/details&gt;## Architecture of EvaDB&lt;details&gt;EvaDB's AI-centric query optimizer takes a query as input and generates a query plan. The query engine takes the query plan and hits the relevant backends to efficiently process the query:1. SQL Database Systems (Structured Data)2. AI Frameworks (Transform Unstructured Data to Structured Data; Unstructured data includes PDFs, text, images, etc. stored locally or on the cloud)3. Vector Database Systems (Feature Embeddings)&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;70%&quot; alt=&quot;Architecture Diagram&quot; src=&quot;https://raw.githubusercontent.com/georgia-tech-db/evadb/staging/docs/images/evadb/eva-arch-for-user.png&quot;&gt;&lt;/p&gt;&lt;/details&gt;## Community and SupportWe would love to learn about your AI app. Please complete this 1-minute form: https://v0fbgcue0cm.typeform.com/to/BZHZWeZm&lt;!--&lt;p&gt;  &lt;a href=&quot;https://evadb.ai/community&quot;&gt;      &lt;img width=&quot;70%&quot; src=&quot;https://raw.githubusercontent.com/georgia-tech-db/evadb/master/docs/images/evadb/evadb-slack.png&quot; alt=&quot;EvaDB Slack Channel&quot;&gt;  &lt;/a&gt;&lt;/p&gt;--&gt;If you run into any bugs or have any comments, you can reach us on our &lt;a href=&quot;https://evadb.ai/community&quot;&gt;Slack Community üìü&lt;/a&gt;  or create a [Github Issue :bug:](https://github.com/georgia-tech-db/evadb/issues). Here is EvaDB's public [roadmap üõ§Ô∏è](https://github.com/orgs/georgia-tech-db/projects/3). We prioritize features based on user feedback, so we'd love to hear from you!## ContributingWe are a lean team on a mission to bring AI inside database systems! All kinds of contributions to EvaDB are appreciated üôå If you'd like to get involved, here's information on where we could use your help: [contribution guide](https://evadb.readthedocs.io/en/latest/source/dev-guide/contribute.html) ü§ó&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/georgia-tech-db/evadb/graphs/contributors&quot;&gt;    &lt;img width=&quot;70%&quot; src=&quot;https://contrib.rocks/image?repo=georgia-tech-db/evadb&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;&lt;details&gt;&lt;b&gt; CI Status: &lt;/b&gt; [![CI Status](https://circleci.com/gh/georgia-tech-db/evadb.svg?style=svg)](https://circleci.com/gh/georgia-tech-db/evadb)[![Documentation Status](https://readthedocs.org/projects/evadb/badge/?version=latest)](https://evadb.readthedocs.io/en/latest/index.html)&lt;/details&gt;## Star History&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://star-history.com/#georgia-tech-db/evadb&amp;Date&quot;&gt;      &lt;img width=&quot;90%&quot; src=&quot;https://api.star-history.com/svg?repos=georgia-tech-db/evadb&amp;type=Date&quot; alt=&quot;EvaDB Star History Chart&quot;&gt;  &lt;/a&gt;&lt;/p&gt;## LicenseCopyright (c) [Georgia Tech Database Group](http://db.cc.gatech.edu/).Licensed under an [Apache License](LICENSE.txt).</longdescription>
</pkgmetadata>