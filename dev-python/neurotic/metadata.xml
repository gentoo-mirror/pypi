<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|neurotic logo| *neurotic*: NEUROscience Tool for Interactive Characterization==============================================================================*Curate, visualize, annotate, and share your behavioral ephys data using Python*:Distributions: |PyPI badge| |Anaconda badge| |Installers badge|:Source Code:   |GitHub badge| |Feedstock badge| |Constructor badge|:Tests Status:  |GitHub Actions badge| |Azure badge| |Docs badge| |Coverage badge|:Citing:        |Zenodo badge| |eNeuro badge|Documentation_ | `Release Notes`_ | `Issue Tracker`_*neurotic* is an app for Windows, macOS, and Linux that allows you to easilyreview and annotate your electrophysiology data and simultaneously capturedvideo. It is an easy way to load your Neo_-compatible data (see neo.io_ forfile formats) into ephyviewer_ without doing any programming. Share a singlemetadata file with your colleagues and they too will quickly be looking at thesame datasets!To use the app, first organize your datasets in a *metadata file* like this(see `Configuring Metadata`_):.. code-block:: yaml    my favorite dataset:        description: This time it actually worked!        data_dir:           C:\local_dir_containing_files        remote_data_dir:    http://myserver/remote_dir_containing_downloadable_files  # optional        data_file:          data.axgx        video_file:         video.mp4        # etc        video_offset: -3.4  # seconds between start of video and data acq        epoch_encoder_possible_labels:            - label01            - label02        plots:            - channel: I2              ylim: [-30, 30]            - channel: RN              ylim: [-60, 60]            # etc        filters:  # used only if fast loading is off (lazy=False)            - channel: Force              lowpass: 50            # etc        amplitude_discriminators:  # used only if fast loading is off (lazy=False)            - name: B3 neuron              channel: BN2              units: uV              amplitude: [50, 100]            # etc    another dataset:        # etcOpen your metadata file in *neurotic* and choose a dataset. If the data andvideo files aren't already on your local computer, the app can download themfor you, even from a password-protected server or from Google Drive. Finally,click launch and the app will use a standard viewer layout to display your datato you using ephyviewer_.|Example screenshot|*In the screenshot above, the video frame shows a voracious sea slug* (Aplysiacalifornica) *swallowing a strip of unbreakable seaweed attached to a forcetransducer. Implanted electrodes recorded from a muscle and the major nervescontrolling feeding. The epoch encoder was used to mark the times when seaweedmoved into the mouth. Spikes corresponding to activity of identified neuronswere detected by* neurotic *using customizable parameters.*The viewers are easy and intuitive to navigate (see `User Interface`_):- Pressing the play button will scroll through your data and video in real  time, or at a higher or lower rate if the speed parameter is changed.- The arrow/WASD keys allow you to step through time in variable increments.- Jump to a time by clicking on an event in the event list or a table entry in  the epoch encoder.- To show more or less time at once, right-click and drag right or left to  contract or expand time.- Scroll the mouse wheel in the trace viewer or video viewer to zoom.- The epoch encoder can be used to block out periods of time during which  something interesting is happening for later review or further analysis  (saved to a CSV file).- All panels can be hidden, undocked, stacked, or repositioned on the fly.Electrophysiologists will find this tool useful even if they don't need thevideo synchronization feature!**Portability is easy with neurotic!** Use relative paths in your metadata filealong with a remotely accessible data store such as GIN_ or a Shared Drive onGoogle Drive to make your metadata file fully portable. The same metadata filecan be copied to a different computer, and downloaded files will automaticallybe saved to the right place. Data stores can be password protected and*neurotic* will prompt you for a user name and password. This makes it easy toshare the *neurotic* experience with your colleagues! ðŸ¤ªInstalling *neurotic*---------------------*neurotic* requires Python 3.6 or later.Standalone Installers (recommended for beginners).................................................Downloadable installers make installing *neurotic* easy for beginners. They canbe downloaded from the GitHub Releases page:    `ðŸ‘‰ Download installers here (listed under &quot;Assets&quot;) ðŸ‘ˆ`__    __ `GitHub Releases`_These installers are intended for users who do not want to independentlyinstall Python or conda just to use *neurotic*. They will install *neurotic*and everything it needs (including a fully contained Python environment) into adedicated directory on your computer. On Windows, the installer will alsocreate a Start Menu shortcut for launching the app.For developers, a recipe for building new installers using `conda constructor`_is maintained here: `constructor recipe`_.Alternate Method: conda (recommended for Pythonistas).....................................................conda_ users can install *neurotic* and all of its dependencies with onecommand::    conda install -c conda-forge neuroticOn Windows, this will also create a Start Menu shortcut for launching the app.Alternate Method: pip.....................Install *neurotic* from PyPI_ using ::    pip install neuroticNote that installation via ``pip`` skips one dependency: PyAV_, which isrequired for displaying videos, and without which *neurotic* will ignorevideos. PyAV is not easily installed with ``pip`` on some systems, especiallyWindows. The easiest way to separately install PyAV is using conda_::    conda install -c conda-forge avUpdating *neurotic*-------------------The recommended method of updating *neurotic* depends on the original method ofinstallation.If you are unsure what method you used, updating using ``conda`` or ``pip`` islikely to work. Standalone installers may be safe too, though this could leadto having multiple version installed simultaneously.Updating with Standalone Installers...................................If you previously installed *neurotic* using a standalone installer, you mayinstall a newer version using another installer, either into a differentdirectory or by first uninstalling the old version. Installers can bedownloaded from the GitHub Releases page:    `ðŸ‘‰ Download installers here (listed under &quot;Assets&quot;) ðŸ‘ˆ`__    __ `GitHub Releases`_Alternatively, if a new installer is not currently available for your platform,or if you would just like a much faster method, you may use the command linetools provided by the installer (via the &quot;Anaconda Prompt&quot; on Windows, or theTerminal on macOS and Linux)::    conda update -c conda-forge neuroticUpdating with conda...................If you installed *neurotic* with `conda`_, you can update to the latest releaseusing ::    conda update -c conda-forge neuroticUpdating with pip.................If you installed *neurotic* using ``pip``, you can update to the latest releaseavailable on PyPI_ using ::    pip install -U neuroticDevelopment Version...................If you are interested in trying new, unreleased features of *neurotic*, you mayinstall the latest development version from GitHub_ using ::    pip install -U git+https://github.com/jpgill86/neurotic.gitNote that if you install the development version, you may also need the latestdevelopment version of ephyviewer_, which you can get using ::    pip install -U git+https://github.com/NeuralEnsemble/ephyviewer.gitGetting Started---------------Windows users who installed using a standalone installer or conda_ should beable to launch *neurotic* from the Start Menu.Mac and Linux users, as well as Windows users, can use the Terminal, commandline, or Anaconda Prompt to start the app:1. Depending on your operating system, installation method, and environment   settings, you may be able to just launch the app from the command line by   invoking its name::    neurotic2. If the command is not recognized, you likely need to first activate the   conda environment into which the app was installed::    conda activate &lt;environment name&gt;   If you used a standalone installer, the environment name may be   &quot;``neurotic``&quot;, so you would use ::    conda activate neurotic   You can then try again invoking the app name::    neuroticSeveral examples are provided. Select one, download the associated data usingthe &quot;Download data&quot; menu action, and then click &quot;Launch&quot;. See `User Interface`_for help with navigation.Disabling &quot;Fast loading&quot; before launch will enable additional featuresincluding amplitude-threshold spike detection and signal filtering.To inspect the metadata file associated with the examples or to make changes toit, click &quot;Edit metadata&quot;. See `Configuring Metadata`_ for details about theformat.If you like working with Jupyter notebooks, you can launch an example notebookthat includes a tutorial for using *neurotic*'s API::    neurotic --launch-example-notebookThe command line interface accepts other arguments too:.. code-block::    usage: neurotic [-h] [-V] [--debug | --no-debug] [--lazy | --no-lazy]                    [--thick-traces | --no-thick-traces]                    [--show-datetime | --no-show-datetime]                    [--ui-scale {tiny,small,medium,large,huge}]                    [--theme {light,dark,original,printer-friendly}]                    [--use-factory-defaults] [--launch-example-notebook]                    [file] [dataset]    neurotic lets you curate, visualize, annotate, and share your behavioral ephys    data.    positional arguments:      file                  the path to a metadata YAML file (default: an example                            file)      dataset               the name of a dataset in the metadata file to select                            initially (default: the first entry in the metadata                            file)    optional arguments:      -h, --help            show this help message and exit      -V, --version         show program's version number and exit      --debug               enable detailed log messages for debugging      --no-debug            disable detailed log messages for debugging (default)      --lazy                enable fast loading (default)      --no-lazy             disable fast loading      --thick-traces        enable support for traces with thick lines, which has                            a performance cost      --no-thick-traces     disable support for traces with thick lines (default)      --show-datetime       display the real-world date and time, which may be                            inaccurate depending on file type and acquisition                            software      --no-show-datetime    do not display the real-world date and time (default)      --ui-scale {tiny,small,medium,large,huge}                            the scale of user interface elements, such as text                            (default: medium)      --theme {light,dark,original,printer-friendly}                            a color theme for the GUI (default: light)      --use-factory-defaults                            start with &quot;factory default&quot; settings, ignoring other                            args and your global config file    alternative modes:      --launch-example-notebook                            launch Jupyter with an example notebook instead of                            starting the standalone app (other args will be                            ignored)    Defaults for arguments and options can be changed in a global config file,    .neurotic\neurotic-config.txt, located in your home directory.Citing *neurotic*-----------------To cite *neurotic* in your publication, please refer to:    Gill, J. P., Garcia, S., Ting, L. H., Wu, M., &amp; Chiel, H. J. (2020).    *neurotic*: Neuroscience Tool for Interactive Characterization. eNeuro,    7(3). https://doi.org/10.1523/ENEURO.0085-20.2020Specific versions of the software can be cited from archives at Zenodo_.Documentation-------------For detailed information on configuring metadata, working examples, the APIreference guide, release notes, and more, see the Documentation_... |neurotic logo| image:: https://raw.githubusercontent.com/jpgill86/neurotic/master/neurotic/gui/icons/img/neurotic-logo-30.png    :alt: Project logo.. |PyPI badge| image:: https://img.shields.io/pypi/v/neurotic.svg?logo=python&amp;logoColor=white    :target: PyPI_    :alt: PyPI project.. |Anaconda badge| image:: https://img.shields.io/conda/vn/conda-forge/neurotic.svg?label=anaconda&amp;logo=anaconda&amp;logoColor=white    :target: `Anaconda Cloud`_    :alt: Anaconda Cloud project.. |Installers badge| image:: https://img.shields.io/github/v/release/jpgill86/neurotic?label=installers&amp;logo=github&amp;logoColor=white&amp;sort=semver    :target: `GitHub Releases`_    :alt: Installers.. |GitHub badge| image:: https://img.shields.io/badge/github-source_code-blue.svg?logo=github&amp;logoColor=white    :target: GitHub_    :alt: GitHub source code.. |Feedstock badge| image:: https://img.shields.io/badge/conda--forge-feedstock-blue.svg?logo=conda-forge&amp;logoColor=white    :target: `conda-forge feedstock`_    :alt: conda-forge feedstock.. |Constructor badge| image:: https://img.shields.io/badge/constructor-recipe-blue.svg    :target: `constructor recipe`_    :alt: constructor recipe.. |GitHub Actions badge| image:: https://img.shields.io/github/workflow/status/jpgill86/neurotic/tests/master?label=tests&amp;logo=github&amp;logoColor=white    :target: `GitHub Actions`_    :alt: Tests status.. |Azure badge| image:: https://dev.azure.com/conda-forge/feedstock-builds/_apis/build/status/neurotic-feedstock?branchName=master    :target: `conda-forge CI`_    :alt: conda-forge build status.. |Docs badge| image:: https://img.shields.io/readthedocs/neurotic/latest.svg?logo=read-the-docs&amp;logoColor=white    :target: ReadTheDocs_    :alt: Documentation status.. |Coverage badge| image:: https://coveralls.io/repos/github/jpgill86/neurotic/badge.svg?branch=master    :target: Coveralls_    :alt: Coverage status.. |Zenodo badge| image:: https://img.shields.io/badge/DOI-10.5281/zenodo.3564990-blue.svg    :target: Zenodo_    :alt: Zenodo archive.. |eNeuro badge| image:: https://img.shields.io/badge/DOI-10.1523/ENEURO.0085--20.2020-blue.svg    :target: eNeuro_    :alt: eNeuro article.. |Example screenshot| image:: https://raw.githubusercontent.com/jpgill86/neurotic/master/docs/_static/example-screenshot.png    :target: https://raw.githubusercontent.com/jpgill86/neurotic/master/docs/_static/example-screenshot.png    :alt: Screenshot.. _Anaconda Cloud: https://anaconda.org/conda-forge/neurotic.. _conda:          https://docs.conda.io/projects/conda/en/latest/user-guide/install/.. _conda constructor: https://github.com/conda/constructor.. _constructor recipe: https://github.com/jpgill86/neurotic-constructor.. _conda-forge CI: https://dev.azure.com/conda-forge/feedstock-builds/_build/latest?definitionId=8417&amp;branchName=master.. _conda-forge feedstock: https://github.com/conda-forge/neurotic-feedstock.. _Configuring Metadata: https://neurotic.readthedocs.io/en/latest/metadata.html.. _Coveralls:      https://coveralls.io/github/jpgill86/neurotic?branch=master.. _Documentation:  https://neurotic.readthedocs.io/en/latest.. _eNeuro:         https://doi.org/10.1523/ENEURO.0085-20.2020.. _ephyviewer:     https://ephyviewer.readthedocs.io/en/latest.. _GIN:            https://gin.g-node.org.. _GitHub:         https://github.com/jpgill86/neurotic.. _GitHub Actions: https://github.com/jpgill86/neurotic/actions?query=workflow%3Atests.. _GitHub Releases: https://github.com/jpgill86/neurotic/releases.. _Issue Tracker:  https://github.com/jpgill86/neurotic/issues.. _Neo:            https://neo.readthedocs.io/en/latest.. _neo.io:         https://neo.readthedocs.io/en/latest/io.html#module-neo.io.. _PyAV:           https://docs.mikeboers.com/pyav/develop/overview/installation.html.. _PyPI:           https://pypi.org/project/neurotic.. _ReadTheDocs:    https://readthedocs.org/projects/neurotic.. _Release Notes:  https://neurotic.readthedocs.io/en/latest/releasenotes.html.. _User Interface: https://ephyviewer.readthedocs.io/en/latest/interface.html.. _Zenodo:         https://doi.org/10.5281/zenodo.3564990</longdescription>
</pkgmetadata>