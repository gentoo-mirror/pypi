<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># setenvironment[![Actions Status](https://github.com/zackees/setenvironment/workflows/MacOS_Tests/badge.svg)](https://github.com/zackees/setenvironment/actions/workflows/push_macos.yml)[![Actions Status](https://github.com/zackees/setenvironment/workflows/Win_Tests/badge.svg)](https://github.com/zackees/setenvironment/actions/workflows/push_win.yml)[![Actions Status](https://github.com/zackees/setenvironment/workflows/Ubuntu_Tests/badge.svg)](https://github.com/zackees/setenvironment/actions/workflows/push_ubuntu.yml)[![Linting](https://github.com/zackees/setenvironment/actions/workflows/lint.yml/badge.svg)](https://github.com/zackees/setenvironment/actions/workflows/lint.yml)Finally, a cross platform way to set system environment variables and paths that are persistant across reboots.Works with Windows, MacOS and Linux.## Python API```pythonfrom setenvironment import set_env_var, add_env_path, unset_env_var, remove_env_path, set_config_file# by default, ~/.bashrc is usedset_env_var(&quot;FOO&quot;, &quot;BAR&quot;)get_env_var(&quot;FOO&quot;) # returns BARadd_env_path(&quot;MYPATH&quot;)unset_env_var(&quot;FOO&quot;)remove_env_path(&quot;MYPATH&quot;)# use ~/.bash_profile instead (no op on Windows)set_config_file(&quot;~/.bash_profile&quot;)set_env_var(&quot;FOO&quot;, &quot;BAR&quot;)add_env_path(&quot;MYPATH&quot;)unset_env_var(&quot;FOO&quot;)remove_env_path(&quot;MYPATH&quot;)```## Command Line API```bash&gt; pip install setenvironment&gt; setenviroment_set foo bar&gt; setenvironment_get foo&gt; setenviroment_unset foo&gt; setenviroment_addpath /my/path&gt; setenviroment_removepath /my/path# or use custom config file&gt; setenvironment_set foo bar --config-file ~/.bash_profile# or set using an environment setting&gt; export SETENVIRONMENT_CONFIG_FILE = ~/.bash_profile&gt; setenviroment_set foo bar```## WindowsPaths are set in the registery and the current os.environ  * writes to the registery  * broadcasts the new value (cmd.exe ignores this though) to all available processes  * paths like `/my/path` will be converted to `\\my\\path`## MacOS / LinuxPaths are set in either `~/.bash_aliases` or `~/.bash_profile` or `~/.bashrc` file or you can override it, see `set_config_file(...)` and the command line arguments if using the command line api.  * export the variable (so you can source the script)  * set the os.environ to the proper value  * write the value to the .bashrc file (make sure it's chmod +w)# Release Notes  * 1.1.1: Adds `add_template_path` and `remove_template_path`  * 1.1.0: stashes settings in ~/.bash_aliases, ~/.bash_profile, ~/.bashrc  * 1.0.10: Win32: path is now set in the user environment instead of the system environment (removes the need for admin rights)  * 1.0.9: Win32: Improve expansion of keys, remove duplicates found in os.environ['PATH']  * 1.0.8: Adds fix for windows expansion of keys  * 1.0.7: Adds get_env_var  * 1.0.6: Fixes readme  * 1.0.3: Fix relative links in badges to be absolute when uploaded to pypi  * 1.0.2: Fix badges on pypi  * 1.0.1: Adds setenvironment_get  * 1.0.0: Initial release</longdescription>
</pkgmetadata>