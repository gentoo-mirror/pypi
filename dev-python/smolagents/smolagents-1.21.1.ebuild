# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="ðŸ¤— smolagents: a barebones library for agents. Agents write python code to call tools or orchestrate other agents."

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all audio bedrock dev docker e2b gradio litellm mcp mlx-lm openai quality telemetry test toolkit torch transformers vision vllm"
DEPENDENCIES="dev-python/huggingface-hub[${PYTHON_USEDEP}]
	>=dev-python/requests-2.32.3[${PYTHON_USEDEP}]
	>=dev-python/rich-13.9.4[${PYTHON_USEDEP}]
	>=dev-python/jinja2-3.1.4[${PYTHON_USEDEP}]
	>=dev-python/pillow-10.0.1[${PYTHON_USEDEP}]
	dev-python/python-dotenv[${PYTHON_USEDEP}]
	bedrock? ( >=dev-python/boto3-1.36.18[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	torch? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	torch? ( >=dev-python/numpy-1.21.2[${PYTHON_USEDEP}] )
	audio? ( dev-python/soundfile[${PYTHON_USEDEP}] )
	audio? ( dev-python/smolagents[${PYTHON_USEDEP}] )
	docker? ( >=dev-python/docker-7.1.0[${PYTHON_USEDEP}] )
	docker? ( dev-python/websocket-client[${PYTHON_USEDEP}] )
	e2b? ( dev-python/e2b-code-interpreter[${PYTHON_USEDEP}] )
	e2b? ( >=dev-python/python-dotenv-1.0.1[${PYTHON_USEDEP}] )
	gradio? ( dev-python/gradio[${PYTHON_USEDEP}] )
	litellm? ( dev-python/litellm[${PYTHON_USEDEP}] )
	mcp? ( dev-python/mcpadapt[${PYTHON_USEDEP}] )
	mcp? ( dev-python/mcp[${PYTHON_USEDEP}] )
	mlx-lm? ( dev-python/mlx-lm[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	telemetry? ( dev-python/arize-phoenix[${PYTHON_USEDEP}] )
	telemetry? ( dev-python/opentelemetry-sdk[${PYTHON_USEDEP}] )
	telemetry? ( dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}] )
	telemetry? ( dev-python/openinference-instrumentation-smolagents[${PYTHON_USEDEP}] )
	toolkit? ( dev-python/ddgs[${PYTHON_USEDEP}] )
	toolkit? ( dev-python/markdownify[${PYTHON_USEDEP}] )
	transformers? ( dev-python/accelerate[${PYTHON_USEDEP}] )
	transformers? ( dev-python/transformers[${PYTHON_USEDEP}] )
	transformers? ( dev-python/smolagents[${PYTHON_USEDEP}] )
	vision? ( dev-python/helium[${PYTHON_USEDEP}] )
	vision? ( dev-python/selenium[${PYTHON_USEDEP}] )
	vllm? ( dev-python/vllm[${PYTHON_USEDEP}] )
	vllm? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/smolagents[${PYTHON_USEDEP}] )
	quality? ( dev-python/ruff[${PYTHON_USEDEP}] )
	test? ( >=dev-python/ipython-8.31.0[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pandas-2.2.3[${PYTHON_USEDEP}] )
	test? ( >=dev-python/pytest-8.1.0[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-datadir[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-timeout[${PYTHON_USEDEP}] )
	test? ( >=dev-python/python-dotenv-1.0.1[${PYTHON_USEDEP}] )
	test? ( dev-python/smolagents[${PYTHON_USEDEP}] )
	test? ( dev-python/rank-bm25[${PYTHON_USEDEP}] )
	test? ( dev-python/Wikipedia-API[${PYTHON_USEDEP}] )
	test? ( dev-python/mlx[${PYTHON_USEDEP}] )
	dev? ( dev-python/smolagents[${PYTHON_USEDEP}] )
	dev? ( dev-python/sqlalchemy[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
