<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SirMordred [![Build Status](https://github.com/chaoss/grimoirelab-sirmordred/workflows/tests/badge.svg)](https://github.com/chaoss/grimoirelab-sirmordred/actions?query=workflow:tests+branch:master+event:push) [![Coverage Status](https://coveralls.io/repos/github/chaoss/grimoirelab-sirmordred/badge.svg?branch=master)](https://coveralls.io/github/chaoss/grimoirelab-sirmordred?branch=master) [![PyPI version](https://badge.fury.io/py/sirmordred.svg)](https://badge.fury.io/py/sirmordred)SirMordred is the tool used to coordinate the execution of the GrimoireLab platform, via two main configuration files, the `setup.cfg` and `projects.json`, which are summarized in their corresponding sections.## Contents* [Setup.cfg](#setupcfg-)* [Projects.json](#projectsjson-)* [Supported data sources](#supported-data-sources-)* [Micro Mordred](#micro-mordred-)* [Getting started](/Getting-Started.md#getting-started-)* [Troubleshooting](/Getting-Started.md#troubleshooting-)* [How to](/Getting-Started.md#how-to-)## Setup.cfg [&amp;uarr;](#contents)The setup file holds the configuration to arrange all processes underlying GrimoireLab. It is composed of sections that allow defining the general settings such as which phases to activate (e.g., collection, enrichment) and where to store the logs, as well as the location and credentials for SortingHat and the ElasticSearch instances where the raw and enriched data is stored. Furthermore, it also includes backend sections to set up the parameters used by Perceval to access the software development tools (e.g., GitHub tokens, Gerrit username) and fetch their data.Dashboards can be automatically uploaded via the `setup.cfg` if the phase `panels` is enabled. The `Data Status` and `Overview` dashboards will containwidgets that summarize the information of the data sources declared in the `setup.cfg`. Note that the widgets are not updated when addingnew data sources, thus you need to manually delete the dashboards `Data Status` and `Overview` (under **Stack Management &gt; Saved Objects** in Kibiter), and restart mordred again (making sure that the option `panels` is enabled).### [es_collection] * **url** (str: http://172.17.0.1:9200): Elasticsearch URL (**Required**)### [es_enrichment] * **autorefresh** (bool: True): Execute the autorefresh of identities * **autorefresh_interval** (int: 2): Time interval (days) to autorefresh identities * **url** (str: http://172.17.0.1:9200): Elasticsearch URL (**Required**)### [general] * **bulk_size** (int: 1000): Number of items to write in Elasticsearch using bulk operations * **debug** (bool: True): Debug mode (logging mainly) (**Required**) * **logs_dir** (str: logs): Directory with the logs of sirmordred (**Required**) * **min_update_delay** (int: 60): Short delay between tasks (collect, enrich ...) * **scroll_size** (int: 100): Number of items to read from Elasticsearch when scrolling * **short_name** (str: Short name): Short name of the project (**Required**) * **update** (bool: False): Execute the tasks in loop (**Required**) * **aliases_file** (str: ./aliases.json): JSON file to define aliases for raw and enriched indexes * **menu_file** (str: ./menu.yaml): YAML file to define the menus to be shown in Kibiter * **global_data_sources** (list: bugzilla, bugzillarest, confluence, discourse, gerrit, jenkins, jira): List of data sources collected globally, they are declared in the section 'unknown' of the projects.json * **retention_time** (int: None): the maximum number of minutes wrt the current date to retain the data * **update_hour** (int: None): The hour of the day the tasks will run ignoring `min_update_delay` (collect, enrich ...)### [panels] * **community** (bool: True): Include community section in dashboard * **kibiter_default_index** (str: git): Default index pattern for Kibiter * **kibiter_time_from** (str: now-90d): Default time interval for Kibiter * **kibiter_url** (str): Kibiter URL (**Required**) * **kibiter_version** (str: None): Kibiter version * **kafka** (bool: False): Include KIP section in dashboard * **github-comments** (bool: False): Enable GitHub comments menu. Note that if enabled, the github2:issue and github2:pull sections in the setup.cfg and projects.json should be declared * **github-events** (bool: False): Enable GitHub events menu. Note that if enabled, the github:event section in the setup.cfg and projects.json should be declared * **github-repos** (bool: False): Enable GitHub repo stats menu. Note that if enabled, the github:repo section in the setup.cfg and projects.json should be declared * **gitlab-issues** (bool: False): Enable GitLab issues menu. Note that if enabled, the gitlab:issue section in the setup.cfg and projects.json should be declared * **gitlab-merges** (bool: False): Enable GitLab merge requests menu. Note that if enabled, the gitlab:merge sections in the setup.cfg and projects.json should be declared * **mattermost** (bool: False): Enable Mattermost menu * **code-license** (bool: False): Enable code license menu. Note that if enabled, colic sections in the setup.cfg and projects.json should be declared * **code-complexity** (bool: False): Enable code complexity menu. Note that if enabled, cocom sections in the setup.cfg and projects.json should be declared * **strict** (bool: True): Enable strict panels loading * **contact** (str: None): Support repository URL### [phases] * **collection** (bool: True): Activate collection of items (**Required**) * **enrichment** (bool: True): Activate enrichment of items (**Required**) * **identities** (bool: True): Do the identities tasks (**Required**) * **panels** (bool: True): Load panels, create alias and other tasks related (**Required**)### [projects] * **projects_file** (str: projects.json): Projects file path with repositories to be collected grouped by projects * **projects_url** (str: None): Projects file URL, the projects_file is required to store the file locally### [sortinghat] * **affiliate** (bool: True): Affiliate identities to organizations (**Required**) * **autogender** (bool: False): Add gender to the profiles (executes autogender) * **autoprofile** (list: ['customer', 'git', 'github']): Order in which to get the identities information for filling the profile (**Required**) * **database** (str: sortinghat_db): Name of the Sortinghat database (**Required**) * **host** (str: 127.0.0.1):  Host with the Sortinghat database (**Required**) * **port** (int: None):  GraphQL server port * **path** (str: None) GraphQL path * **ssl** (bool: False) GraphQL server use SSL/TSL connection * **matching** (list: ['email']): Algorithm for matching identities in Sortinghat (**Required**) * **password** (str: ): Password to access the Sortinghat database (**Required**) * **reset_on_load** (bool: False): Unmerge and remove affiliations for all identities on load * **sleep_for** (int: 3600): Delay between task identities executions (**Required**) * **strict_mapping** (bool: True): rigorous check of values in identities matching (i.e, well formed email addresses, non-overlapping enrollment periods) * **unaffiliated_group** (str: Unknown): Name of the organization for unaffiliated identities (**Required**) * **user** (str: root): User to access the Sortinghat database (**Required**)### [backend-name:tag] (tag is optional)* **collect** (bool: True): enable/disable collection phase* **raw_index** (str: None): Index name in which to store the raw items (**Required**)* **enriched_index** (str: None): Index name in which to store the enriched items (**Required**)* **studies** (list: []): List of studies to be executed* **anonymize** (bool: False): enable/disable anonymization of personal user information* **backend-param-1**: ..* **backend-param-2**: ..* **backend-param-n**: ..The template of a backend section is shown above.Further information about Perceval backends parameters are available at:* Params details: https://perceval.readthedocs.io/en/latest/perceval/perceval-backends.html* Examples: https://github.com/chaoss/grimoirelab-sirmordred/blob/master/tests/test_studies.cfgNote that some backend sections allow to specify specific enrichment options, which are listed below.### [jenkins]* **node_regex**: regular expression for extracting node name from `builtOn` field. This  regular expression **must contain at least one group**. First group will be used to extract  node name. More groups are allowed but not used to extract anything else.### [studies-name:tag] (tag is optional)* **study-param-1**: ..* **study-param-2**: ..* **study-param-n**: ..A template of a study section is shown above. A complete list of studies parameters is available at:* https://github.com/chaoss/grimoirelab-sirmordred/blob/master/tests/test_studies.cfg## Projects.json [&amp;uarr;](#contents)The projects.json aims at describing the repositories grouped by a project that will be shown on the dashboards.The project file enables the users to list the instances of the software development tools to analyse, suchas local and remote Git repositories, the URLs of GitHub and GitLab issue trackers, and the name of Slack channels.Furthermore, it also allows the users to organize these instances into nested groups, which structure is reflected inthe visualization artifacts (i.e., documents and dashboards). Groups can be useful to represent projects within a singlecompany, sub-projects within a large project such as Linux and Eclipse, or the organizations within a collaborative project.1. First level: project names2. Second level: data sources and metadata3. Third level: data source URLsThere are some filters, labels, and a special section:* Filter `--filter-no-collection=true`: This filter is used to show old enriched data within the dashboards fromrepositories that don't exist anymore in upstream.* Filter `--filter-raw` and the section `unknown`: The data sources will only collected at the section `unknown`but this allow to add the same source in different sections to enrich using the filter `--filter-raw`.* Label ` --labels=[example]`: The data source will have the label of `example` which can be used to create visualisations for specific sets of data* Section `unknown`: If the data source is only under this section it will be enriched as project `main`.```{    &quot;Chaoss&quot;: {        &quot;gerrit&quot;: [            &quot;gerrit.chaoss.org --filter-raw=data.projects:CHAOSS&quot;        ]        &quot;git&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https://&lt;username&gt;:&lt;api-token&gt;@github.com/chaoss/grimoirelab-sirmordred&quot;        ],        &quot;github&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval --filter-no-collection=true&quot;,            &quot;https:/github.com/chaoss/grimoirelab-sirmordred  --labels=[example]&quot;        ]    },    &quot;GrimoireLab&quot;: {        &quot;gerrit&quot;: [            &quot;gerrit.chaoss.org --filter-raw=data.projects:GrimoireLab&quot;        ],        &quot;meta&quot;: {            &quot;title&quot;: &quot;GrimoireLab&quot;,            &quot;type&quot;: &quot;Dev&quot;,            &quot;program&quot; : &quot;Bitergia&quot;,            &quot;state&quot;: &quot;Operating&quot;        },    }    &quot;unknown&quot;: {        &quot;gerrit&quot;: [            &quot;gerrit.chaoss.org&quot;        ],        &quot;confluence&quot;: [            &quot;https://wiki.chaoss.org&quot;        ]}```In the projects.json above:* The data included in the repo `gerrit.chaoss.org` will be collected entirely since therepo is listed in the `unknown` section. However only the project `GrimoireLab` will be enriched as declared in the`GrimoireLab` section.* In the section `Chaoss` in the data source `github` the repository `grimoirelab-perceval` is not collected forraw index but it will enriched in the enriched index.* In the section `GrimoireLab` the metadata will showed in the enriched index as extra fields.* In the section `unknown` the data source `confluence` will be enriched as the project `main`.## Supported data sources [&amp;uarr;](#contents)These are the data sources GrimoireLab supports: [askbot](#askbot-), [bugzilla](#bugzilla-), [bugzillarest](#bugzillarest-), [cocom](#cocom-), [colic](#colic-), [confluence](#confluence-), [crates](#crates-), [discourse](#discourse-), [dockerhub](#dockerhub-), [dockerdeps](#dockerdeps-), [dockersmells](#dockersmells-), [functest](#functest-), [gerrit](#gerrit-), [git](#git-), [github](#github-), [github2](#github2-), [gitlab](#gitlab-), [gitter](#gitter-), [google_hits](#google_hits-), [groupsio](#groupsio-), [hyperkitty](#hyperkitty-), [jenkins](#jenkins-), [jira](#jira-), [kitsune](#kitsune-), [mattermost](#mattermost-), [mbox](#mbox-), [mediawiki](#mediawiki-), [meetup](#meetup-), [mozillaclub](#mozillaclub-), [nntp](#nntp-), [pagure](#pagure-), [phabricator](#phabricator-), [pipermail](#pipermail-), [puppetforge](#puppetforge-), [redmine](#redmine-), [remo](#remo-), [rocketchat](#rocketchat-), [rss](#rss-), [slack](#slack-), [stackexchange](#stackexchange-), [supybot](#supybot-), [telegram](#telegram-), [twitter](#twitter-)#### askbot [&amp;uarr;](#supported-data-sources-)Questions and answers from Askbot site- projects.json```{    &quot;Chaoss&quot;: {        &quot;askbot&quot;: [            &quot;https://askbot.org/&quot;        ]    }}```- setup.cfg```[askbot]raw_index = askbot_rawenriched_index = askbot_enriched```#### bugzilla [&amp;uarr;](#supported-data-sources-)Bugs from Bugzilla- projects.json```{    &quot;Chaoss&quot;: {        &quot;bugzilla&quot;: [            &quot;https://bugs.eclipse.org/bugs/&quot;        ]    }}```- setup.cfg```[bugzilla]raw_index = bugzilla_rawenriched_index = bugzilla_enrichedbackend-user = yyyy (optional)backend-password = xxxx (optional)no-archive = true (suggested)```#### bugzillarest [&amp;uarr;](#supported-data-sources-)Bugs from Bugzilla server (&gt;=5.0) using its REST API- projects.json```{    &quot;Chaoss&quot;: {        &quot;bugzillarest&quot;: [            &quot;https://bugzilla.mozilla.org&quot;        ]    }}```- setup.cfg```[bugzillarest]raw_index = bugzillarest_rawenriched_index = bugzillarest_enrichedbackend-user = yyyy (optional)backend-password = xxxx (optional)no-archive = true (suggested)```#### cocom [&amp;uarr;](#supported-data-sources-)Code complexity integration.Some graal dependencies like `cloc` might be required, https://github.com/chaoss/grimoirelab-graal#how-to-installcreate-the-executables- projects.json```{    &quot;Chaoss&quot;:{        &quot;cocom&quot;: [            &quot;https://github.com/chaoss/grimoirelab-toolkit&quot;        ]    }}```- setup.cfg```[cocom]raw_index = cocom_chaossenriched_index = cocom_chaoss_enrichcategory = code_complexity_lizard_filestudies = [enrich_cocom_analysis]branches = masterworktree-path = /tmp/cocom/```#### colic [&amp;uarr;](#supported-data-sources-)Code license backend.- projects.json```{    &quot;Chaoss&quot;:{        &quot;colic&quot;: [            &quot;https://github.com/chaoss/grimoirelab-toolkit&quot;        ]    }}```- setup.cfg```[colic]raw_index = colic_chaossenriched_index = colic_chaoss_enrichcategory = code_license_nomosstudies = [enrich_colic_analysis]exec-path = /usr/share/fossology/nomos/agent/nomossabranches = masterworktree-path = /tmp/colic```#### confluence [&amp;uarr;](#supported-data-sources-)contents from Confluence- projects.json```{    &quot;Chaoss&quot;: {        &quot;confluence&quot;: [            &quot;https://wiki.open-o.org/&quot;        ]    }}```- setup.cfg```[confluence]raw_index = confluence_rawenriched_index = confluence_enrichedno-archive = true (suggested)```#### crates [&amp;uarr;](#supported-data-sources-)packages from Crates.io- projects.json```{    &quot;Chaoss&quot;: {        &quot;crates&quot;: [            &quot;&quot;        ]    }}```- setup.cfg```[crates]raw_index = crates_rawenriched_index = crates_enriched```#### discourse [&amp;uarr;](#supported-data-sources-)Topics from Discourse- projects.json```{    &quot;Chaoss&quot;: {        &quot;discourse&quot;: [            &quot;https://foro.mozilla-hispano.org/&quot;        ]    }}```- setup.cfg```[discourse]raw_index = discourse_rawenriched_index = discourse_enrichedno-archive = true (suggested)```#### dockerhub [&amp;uarr;](#supported-data-sources-)Repositories info from DockerHub- projects.json```{    &quot;Chaoss&quot;: {        &quot;dockerhub&quot;: [            &quot;bitergia kibiter&quot;        ]    }}```- setup.cfg```[dockerhub]raw_index = dockerhub_rawenriched_index = dockerhub_enrichedno-archive = true (suggested)```#### dockerdeps [&amp;uarr;](#supported-data-sources-)Dependencies extracted from Dockerfiles. Requires https://github.com/crossminer/crossJadolint- projects.json```{    &quot;Chaoss&quot;: {        &quot;dockerdeps&quot;: [            &quot;https://github.com/chaoss/grimoirelab&quot;        ]    }}```- setup.cfg```[dockerdeps]raw_index = dockerdeps_rawenriched_index = dockerdeps_enrichcategory = code_dependencies_jadolintexec-path = &lt;jadolint-local-path&gt;/jadolint.jarin-paths = [Dockerfile, Dockerfile-full, Dockerfile-secured, Dockerfile-factory, Dockerfile-installed]```#### dockersmells [&amp;uarr;](#supported-data-sources-)Smells extracted from Dockerfiles. Requires https://github.com/crossminer/crossJadolint- projects.json```{    &quot;Chaoss&quot;: {        &quot;dockersmells&quot;: [            &quot;https://github.com/chaoss/grimoirelab&quot;        ]    }}```- setup.cfg```[dockersmells]raw_index = dockersmells_rawenriched_index = dockersmells_enrichcategory = code_quality_jadolintexec-path = &lt;jadolint-local-path&gt;/jadolint.jarin-paths = [Dockerfile, Dockerfile-full, Dockerfile-secured, Dockerfile-factory, Dockerfile-installed]```#### functest [&amp;uarr;](#supported-data-sources-)Tests from functest- projects.json```{    &quot;Chaoss&quot;: {        &quot;functest&quot;: [            &quot;http://testresults.opnfv.org/test/&quot;        ]    }}```- setup.cfg```[functest]raw_index = functest_rawenriched_index = functest_enrichedno-archive = true (suggested)```#### gerrit [&amp;uarr;](#supported-data-sources-)Reviews from GerritYou have to add your public key in the gerrit server.- projects.json```{    &quot;Chaoss&quot;: {        &quot;gerrit&quot;: [            &quot;review.opendev.org&quot;        ]    }}```- setup.cfg```[gerrit]raw_index = gerrit_rawenriched_index = gerrit_enricheduser = xxxxno-archive = true (suggested)blacklist-ids = [] (optional)max-reviews = 500 (optional)studies = [enrich_demography:gerrit, enrich_onion:gerrit, enrich_demography_contribution:gerrit] (optional)[enrich_demography:gerrit] (optional)[enrich_onion:gerrit] (optional)in_index = gerrit_enrichedout_index = gerrit-onion_enriched[enrich_demography_contribution:gerrit] (optional)date_field = grimoire_creation_dateauthor_field = author_uuid```#### git [&amp;uarr;](#supported-data-sources-)Commits from Git**Note:** If you want to analyze private git repositories, make sure you pass the credentials directly in the URL.- projects.json```{    &quot;Chaoss&quot;: {        &quot;git&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https://&lt;username&gt;:&lt;api-token&gt;@github.com/chaoss/grimoirelab-sirmordred&quot;        ]    }}```- setup.cfg```[git]raw_index = git_rawenriched_index = git_enrichedlatest-items = true (suggested)studies = [enrich_demography:git, enrich_git_branches:git, enrich_areas_of_code:git, enrich_onion:git, enrich_extra_data:git] (optional)[enrich_demography:git] (optional)[enrich_git_branches:git] (optional)run_month_days = [1, 23] (optional)[enrich_areas_of_code:git] (optional)in_index = git_rawout_index = git-aoc_enriched[enrich_onion:git] (optional)in_index = git_enrichedout_index = git-onion_enriched[enrich_extra_data:git]json_url = https://gist.githubusercontent.com/zhquan/bb48654bed8a835ab2ba9a149230b11a/raw/5eef38de508e0a99fa9772db8aef114042e82e47/bitergia-example.txt[enrich_forecast_activity]out_index = git_study_forecast```#### github [&amp;uarr;](#supported-data-sources-)Issues and PRs from GitHub##### issue- projects.json```{    &quot;Chaoss&quot;: {        &quot;github:issue&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https:/github.com/chaoss/grimoirelab-sirmordred&quot;        ]    }}```- setup.cfg```[github:issue]raw_index = github_rawenriched_index = github_enrichedapi-token = xxxxcategory = issuesleep-for-rate = trueno-archive = true (suggested)studies = [enrich_onion:github,           enrich_geolocation:user,           enrich_geolocation:assignee,           enrich_extra_data:github,           enrich_backlog_analysis,           enrich_demography:github] (optional)[enrich_onion:github] (optional)in_index_iss = github_issues_onion-srcin_index_prs = github_prs_onion-srcout_index_iss = github-issues-onion_enrichedout_index_prs = github-prs-onion_enriched[enrich_geolocation:user] (optional)location_field = user_locationgeolocation_field = user_geolocation[enrich_geolocation:assignee] (optional)location_field = assignee_locationgeolocation_field = assignee_geolocation[enrich_extra_data:github]json_url = https://gist.githubusercontent.com/zhquan/bb48654bed8a835ab2ba9a149230b11a/raw/5eef38de508e0a99fa9772db8aef114042e82e47/bitergia-example.txt[enrich_backlog_analysis]out_index = github_enrich_backloginterval_days = 7reduced_labels = [bug,enhancement]map_label = [others, bugs, enhancements][enrich_demography:github]```##### pull request- projects.json```{    &quot;Chaoss&quot;: {        &quot;github:pull&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https:/github.com/chaoss/grimoirelab-sirmordred&quot;        ]    }}```- setup.cfg```[github:pull]raw_index = github-pull_rawenriched_index = github-pull_enrichedapi-token = xxxxcategory = pull_requestsleep-for-rate = trueno-archive = true (suggested)studies = [enrich_geolocation:user,           enrich_geolocation:assignee,           enrich_extra_data:github,           enrich_demography:github] (optional)[enrich_geolocation:user]location_field = user_locationgeolocation_field = user_geolocation[enrich_geolocation:assignee]location_field = assignee_locationgeolocation_field = assignee_geolocation[enrich_extra_data:github]json_url = https://gist.githubusercontent.com/zhquan/bb48654bed8a835ab2ba9a149230b11a/raw/5eef38de508e0a99fa9772db8aef114042e82e47/bitergia-example.txt[enrich_demography:github]```##### repoThe number of forks, stars, and subscribers in the repository.- projects.json```{    &quot;Chaoss&quot;: {        &quot;github:repo&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https:/github.com/chaoss/grimoirelab-sirmordred&quot;        ]    }}```- setup.cfg```[github:repo]raw_index = github-repo_rawenriched_index = github-repo_enrichedapi-token = xxxxcategory = repositorysleep-for-rate = trueno-archive = true (suggested)studies = [enrich_extra_data:github, enrich_demography:github][enrich_extra_data:github]json_url = https://gist.githubusercontent.com/zhquan/bb48654bed8a835ab2ba9a149230b11a/raw/5eef38de508e0a99fa9772db8aef114042e82e47/bitergia-example.txt[enrich_demography:github]```#### githubql [&amp;uarr;](#supported-data-sources-)Events from GitHubThe corresponding dashboards can be automatically uploaded by setting `github-events`to `true` in the `panels` section within the `setup.cfg`- projects.json```{    &quot;Chaoss&quot;: {        &quot;githubql&quot;: [            &quot;https://github.com/chaoss/grimoirelab-toolkit&quot;        ]    }}```- setup.cfg```[panels]github-events = true[githubql]raw_index = github_event_rawenriched_index = github_event_enrichedapi-token = xxxxxsleep-for-rate = truesleep-time = &quot;300&quot; (optional)no-archive = true (suggested)studies = [enrich_duration_analysis:kanban, enrich_reference_analysis] (optional)[enrich_duration_analysis:kanban]start_event_type = MovedColumnsInProjectEventfltr_attr = board_nametarget_attr = board_columnfltr_event_types = [MovedColumnsInProjectEvent, AddedToProjectEvent][enrich_duration_analysis:label]start_event_type = UnlabeledEventtarget_attr = labelfltr_attr = labelfltr_event_types = [LabeledEvent][enrich_reference_analysis] (optional)```#### github2 [&amp;uarr;](#supported-data-sources-)Comments from GitHubThe corresponding dashboards can be automatically uploaded by setting `github-comments`to `true` in the `panels` section within the `setup.cfg`##### issue- projects.json```{    &quot;Chaoss&quot;: {        &quot;github2:issue&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https:/github.com/chaoss/grimoirelab-sirmordred&quot;        ]    }}```- setup.cfg```[github2:issue]api-token = xxxxraw_index = github2-issues_rawenriched_index = github2-issues_enrichedsleep-for-rate = truecategory = issueno-archive = true (suggested)studies = [enrich_geolocation:user, enrich_geolocation:assignee, enrich_extra_data:github2, enrich_feelings] (optional)[enrich_geolocation:user] (optional)location_field = user_locationgeolocation_field = user_geolocation[enrich_geolocation:assignee] (optional)location_field = assignee_locationgeolocation_field = assignee_geolocation[enrich_extra_data:github2]json_url = https://gist.githubusercontent.com/zhquan/bb48654bed8a835ab2ba9a149230b11a/raw/5eef38de508e0a99fa9772db8aef114042e82e47/bitergia-example.txt[enrich_feelings]attributes = [title, body]nlp_rest_url = http://localhost:2901```##### pull request- projects.json```{    &quot;Chaoss&quot;: {        &quot;github2:pull&quot;: [            &quot;https:/github.com/chaoss/grimoirelab-perceval&quot;,            &quot;https:/github.com/chaoss/grimoirelab-sirmordred&quot;        ]    }}```- setup.cfg```[github2:pull]api-token = xxxxraw_index = github2-pull_rawenriched_index = github2-pull_enrichedsleep-for-rate = truecategory = pull_requestno-archive = true (suggested)studies = [enrich_geolocation:user, enrich_geolocation:assignee, enrich_extra_data:git, enrich_feelings] (optional)[enrich_geolocation:user] (optional)location_field = user_locationgeolocation_field = user_geolocation[enrich_geolocation:assignee] (optional)location_field = assignee_locationgeolocation_field = assignee_geolocation[enrich_extra_data:github2]json_url = https://gist.githubusercontent.com/zhquan/bb48654bed8a835ab2ba9a149230b11a/raw/5eef38de508e0a99fa9772db8aef114042e82e47/bitergia-example.txt[enrich_feelings]attributes = [title, body]nlp_rest_url = http://localhost:2901```#### gitlab [&amp;uarr;](#supported-data-sources-)Issues and MRs from GitLabGitLab issues and merge requests need to be configured in two different sections.The corresponding dashboards can be automatically uploaded by setting `gitlab-issue` and `gitlab-merge`to `true` in the `panels` section within the `setup.cfg`If a given GitLab repository is under more than 1 level, all the slashes `/` starting from the second level have to bereplaced by `%2F`. For instance, for a repository with a structure similar to this one`https://gitlab.com/Molly/lab/first`.##### issue- projects.json```{    &quot;Chaoss&quot;: {        &quot;gitlab:issue&quot;: [            &quot;https://gitlab.com/Molly/first&quot;,            &quot;https://gitlab.com/Molly/lab%2Fsecond&quot;        ]    }}```- setup.cfg```[panels]gitlab-issues = true[gitlab:issue]category = issueraw_index = gitlab-issues_rawenriched_index = gitlab-issues_enrichedapi-token = xxxxsleep-for-rate = trueno-archive = true (suggested)studies = [enrich_onion:gitlab-issue] (optional)[enrich_onion:gitlab-issue] (optional)in_index = gitlab-issues_enrichedout_index = gitlab-issues-onion_enricheddata_source = gitlab-issues```##### merge request- projects.json```{    &quot;Chaoss&quot;: {        &quot;gitlab:merge&quot;: [            &quot;https://gitlab.com/Molly/first&quot;,            &quot;https://gitlab.com/Molly/lab%2Fsecond&quot;        ],    }}```- setup.cfg```[panels]gitlab-merges = true[gitlab:merge]category = merge_requestraw_index = gitlab-mrs_rawenriched_index = gitlab-mrs_enrichedapi-token = xxxxsleep-for-rate = trueno-archive = true (suggested)studies = [enrich_onion:gitlab-merge] (optional)[enrich_onion:gitlab-merge] (optional)in_index = gitlab-mrs_enrichedout_index = gitlab-mrs-onion_enricheddata_source = gitlab-merges```#### gitter [&amp;uarr;](#supported-data-sources-)Messages from gitter roomsYou have to join the rooms you want to mine.- projects.json```{    &quot;Chaoss&quot;: {        &quot;gitter&quot;: [            &quot;https://gitter.im/jenkinsci/jenkins&quot;,        ]    }}```- setup.cfg```[gitter]raw_index = gitter_rawenriched_index = gitter_enriched_rawapi-token = xxxxxsleep-for-rate = truesleep-time = &quot;300&quot; (optional)no-archive = true (suggested)```#### google_hits [&amp;uarr;](#supported-data-sources-)Number of hits for a set of keywords from Google- projects.json```{    &quot;Chaoss&quot;: {        &quot;google_hits&quot;: [            &quot;bitergia grimoirelab&quot;        ]    }}```- setup.cfg```[google_hits]raw_index = google_hits_rawenriched_index =google_hits_enriched```#### groupsio [&amp;uarr;](#supported-data-sources-)Messages from GroupsioTo know the lists you are subscribed to: https://gist.github.com/valeriocos/ad33a0b9b2d13a8336230c8c59df3c55- projects.json```{    &quot;Chaoss&quot;: {        &quot;groupsio&quot;: [            &quot;group1&quot;,            &quot;group2&quot;        ]    }}```- setup.cfg```[groupsio]raw_index = groupsio_rawenriched_index = groupsio_enrichedemail = yyyypassword = xxxx```#### hyperkitty [&amp;uarr;](#supported-data-sources-)Messages from a HyperKitty- projects.json```{    &quot;Chaoss&quot;: {        &quot;hyperkitty&quot;: [            &quot;https://lists.mailman3.org/archives/list/mailman-users@mailman3.org&quot;        ]    }}```- setup.cfg```[hyperkitty]raw_index = hyperkitty_rawenriched_index = hyperkitty_enriched```#### jenkins [&amp;uarr;](#supported-data-sources-)Builds from a Jenkins- projects.json```{    &quot;Chaoss&quot;: {        &quot;jenkins&quot;: [            &quot;https://build.opnfv.org/ci&quot;        ]    }}```- setup.cfg```[jenkins]raw_index = jenkins_rawenriched_index = jenkins_enrichedno-archive = true (suggested)```#### jira [&amp;uarr;](#supported-data-sources-)Issues data from JIRA issue trackers- projects.json```{    &quot;Chaoss&quot;:{        &quot;jira&quot;: [            &quot;https://jira.opnfv.org&quot;        ]    }}```- setup.cfg```[jira]raw_index = jira_rawenriched_index = jira_enrichedno-archive = true (suggested)backend-user = yyyy (optional)backend-password = xxxx (optional)```#### kitsune [&amp;uarr;](#supported-data-sources-)Questions and answers from KitSune- projects.json```{    &quot;Chaoss&quot;: {        &quot;kitsune&quot;: [            &quot;&quot;        ]    }}```- setup.cfg```[kitsune]raw_index = kitsune_rawenriched_index = kitsune_enriched```#### mattermost [&amp;uarr;](#supported-data-sources-)Messages from Mattermost channels- projects.json```{    &quot;Chaoss&quot;: {        &quot;mattermost&quot;: [            &quot;https://chat.openshift.io 8j366ft5affy3p36987pcugaoa&quot;        ]    }}```- setup.cfg```[mattermost]raw_index = mattermost_rawenriched_index = mattermost_enrichedapi-token = xxxxstudies = [enrich_demography:mattermost] (optional)[enrich_demography:mattermost] (optional)```#### mbox [&amp;uarr;](#supported-data-sources-)Messages from MBox filesFor mbox files, it is needed the name of the mailing list and the path where the mboxes can be found. In the examplebelow, the name of the mailing list is set to &quot;mirageos-devel&quot;.- projects.json```{    &quot;Chaoss&quot;: {        &quot;mbox&quot;: [            &quot;mirageos-devel /home/bitergia/mbox/mirageos-devel/&quot;        ]    }}```- setup.cfg```[mbox]raw_index = mbox_rawenriched_index = mbox_enriched```#### mediawiki [&amp;uarr;](#supported-data-sources-)Pages and revisions from MediaWiki-projects.json```{    &quot;Chaoss&quot;: {        &quot;mediawiki&quot;: [            &quot;https://www.mediawiki.org/w https://www.mediawiki.org/wiki&quot;        ]    }}```- setup.cfg```[mediawiki]raw_index = mediawiki_rawenriched_index = mediawiki_enrichedno-archive = true (suggested)```#### meetup [&amp;uarr;](#supported-data-sources-)Events from Meetup groupsFor meetup groups it is only needed the identifier of the meetup groupand an API token: https://chaoss.github.io/grimoirelab-tutorial/gelk/meetup.html#gathering-meetup-groups-data- projects.json```{    &quot;Chaoss&quot;: {        &quot;meetup&quot;: [        &quot;Alicante-Bitergia-Users-Group&quot;,        &quot;South-East-Bitergia-User-Group&quot;        ]    }}```- setup.cfg```[meetup]raw_index = meetup_rawenriched_index = meetup_enrichedapi-token = xxxxsleep-for-rate = truesleep-time = &quot;300&quot; (optional)no-archive = true (suggested)```#### mozillaclub [&amp;uarr;](#supported-data-sources-)Events from Mozillaclub- projects.json```{    &quot;Chaoss&quot;: {        &quot;mozillaclub&quot;: [            &quot;https://spreadsheets.google.com/feeds/cells/1QHl2bjBhMslyFzR5XXPzMLdzzx7oeSKTbgR5PM8qp64/ohaibtm/public/values?alt=json&quot;        ]    }}```- setup.cfg```[mozillaclub]raw_index = mozillaclub_rawenriched_index = mozillaclub_enriched```#### nntp [&amp;uarr;](#supported-data-sources-)Articles from NNTP newsgroupsThe way to setup netnews is adding the server and the news channel to be monitored. In the example below,the `news.myproject.org` is the server name.- projects.json```{    &quot;Chaoss&quot;: {        &quot;nntp&quot;: [            &quot;news.myproject.org mozilla.dev.tech.crypto.checkins&quot;,            &quot;news.myproject.org mozilla.dev.tech.electrolysis&quot;,            &quot;news.myproject.org mozilla.dev.tech.gfx&quot;,            &quot;news.myproject.org mozilla.dev.tech.java&quot;        ]    }}```- setup.cfg```[nntp]raw_index = nntp_rawenriched_index =  nntp_enriched```#### pagure [&amp;uarr;](#supported-data-sources-)Issues from Pagure repositories- projects.json```{    &quot;Chaoss&quot;: {        &quot;pagure&quot;: [            &quot;https://pagure.io/Test-group/Project-example-namespace&quot;        ]    }}```- setup.cfg```[pagure]raw_index = pagure_rawenriched_index = pagure_enrichedapi-token = xxxxsleep-for-rate = truesleep-time = &quot;300&quot; (optional)no-archive = true (suggested)```#### phabricator [&amp;uarr;](#supported-data-sources-)Tasks from Phabricator- projects.json```{    &quot;Chaoss&quot;: {        &quot;phabricator&quot;: [            &quot;https://phabricator.wikimedia.org&quot;        ]    }}```- setup.cfg```[phabricator]raw_index = phabricator_rawenriched_index = phabricator_enrichedapi-token = xxxxno-archive = true (suggested)```#### pipermail [&amp;uarr;](#supported-data-sources-)Messages from Pipermail- projects.json```{    &quot;Chaoss&quot;: {        &quot;pipermail&quot;: [            &quot;https://lists.linuxfoundation.org/pipermail/grimoirelab-discussions/&quot;        ]    }}```- setup.cfg```[pipermail]raw_index = pipermail_rawenriched_index = pipermail_enriched```#### puppetforge [&amp;uarr;](#supported-data-sources-)Modules and their releases from Puppet's forge- projects.json```{    &quot;Chaoss&quot;: {        &quot;puppetforge&quot;: [            &quot;&quot;        ]    }}```- setup.cfg```[puppetforge]raw_index = puppetforge_rawenriched_index = puppetforge_enriched```#### redmine [&amp;uarr;](#supported-data-sources-)Issues from Redmine- project.json```{    &quot;Chaoss&quot;: {        &quot;redmine&quot;: [            &quot;http://tracker.ceph.com/&quot;        ]    }}```- setup.cfg```[redmine]raw_index = redmine_rawenriched_index = redmine_enrichedapi-token = XXXXX```#### remo [&amp;uarr;](#supported-data-sources-)Events, people and activities from ReMo- project.json```{    &quot;Chaoss&quot;: {        &quot;remo&quot;: [            &quot;https://reps.mozilla.org&quot;        ]    }}```- setup.cfg```[remo]raw_index = remo_rawenriched_index = remo_enriched```#### rocketchat [&amp;uarr;](#supported-data-sources-)Messages from Rocketchat channels- projects.json```{    &quot;Chaoss&quot;: {        &quot;rocketchat&quot;: [            &quot;https://open.rocket.chat general&quot;        ]    }}```- setup.cfg```[rocketchat]raw_index = rocketchat_rawenriched_index = rocketchat_enrichedapi-token = xxxxsleep-for-rate = trueuser-id = xxxxno-archive = true (suggested)```#### rss [&amp;uarr;](#supported-data-sources-)Entries from RSS feeds- project.json```{    &quot;Chaoss&quot;: {        &quot;remo&quot;: [            &quot;https://reps.mozilla.org&quot;        ]    }}```- setup.cfg```[rss]raw_index = rss_rawenriched_index = rss_enriched```#### slack [&amp;uarr;](#supported-data-sources-)Messages from Slack channelsThe information needed to monitor slack channels is the channel id.- projects.json```{    &quot;Chaoss&quot;: {        &quot;slack&quot;: [            &quot;A195YQBLL&quot;,            &quot;A495YQBM2&quot;        ]    }}```- setup.cfg```[slack]raw_index = slack_rawenriched_index = slack_enrichedapi-token = xxxxno-archive = true (suggested)```#### stackexchange [&amp;uarr;](#supported-data-sources-)Questions, answers and comments from StackExchange- projects.json```{    &quot;Chaoss&quot;: {        &quot;stackexchange&quot;: [            &quot;http://stackoverflow.com/questions/tagged/chef&quot;,            &quot;http://stackoverflow.com/questions/tagged/chefcookbook&quot;,            &quot;http://stackoverflow.com/questions/tagged/ohai&quot;,            &quot;http://stackoverflow.com/questions/tagged/test-kitchen&quot;,            &quot;http://stackoverflow.com/questions/tagged/knife&quot;        ]    }}```- setup.cfg```[stackexchange]raw_index = stackexchange_rawenriched_index = stackexchange_enrichedapi-token = xxxxno-archive = true (suggested)```#### supybot [&amp;uarr;](#supported-data-sources-)Messages from Supybot log filesFor supybot files, it is needed the name of the IRC channel and the path where the logs can be found. In the examplebelow, the name of the channel is set to &quot;irc://irc.freenode.net/atomic&quot;.- projects.json```{    &quot;Chaoss&quot;: {        &quot;supybot&quot;: [            &quot;irc://irc.freenode.net/atomic /home/bitergia/irc/percevalbot/logs/ChannelLogger/freenode/#atomic&quot;        ]    }}```- setup.cfg```[supybot]raw_index = supybot_rawenriched_index = supybot_enriched```#### telegram [&amp;uarr;](#supported-data-sources-)Messages from TelegramYou need to have an API token: https://github.com/chaoss/grimoirelab-perceval#telegram- projects.json```{    &quot;Chaoss&quot;: {        &quot;telegram&quot;: [            &quot;Mozilla_analytics&quot;        ]    }}```- setup.cfg```[telegram]raw_index = telegram_rawenriched_index = telegram_enrichedapi-token = XXXXX```#### twitter [&amp;uarr;](#supported-data-sources-)Messages from TwitterYou need to provide a [search query](https://developer.twitter.com/en/docs/tweets/search/guides/build-standard-query) and an API token (which requires to create an [app](https://developer.twitter.com/en/docs/basics/apps/overview)). The script at https://gist.github.com/valeriocos/7d4d28f72f53fbce49f1512ba77ef5f6 helps obtaining a token.- projects.json```{    &quot;Chaoss&quot;: {        &quot;twitter&quot;: [            &quot;bitergia&quot;        ]    }}```- setup.cfg```[twitter]raw_index = twitter_rawenriched_index = twitter_enrichedapi-token = XXXX```#### weblate [&amp;uarr;](#supported-data-sources-)Changes from WeblateYou need to have an API token: The token can be obtained after registering to a weblateinstance (e.g., https://translations.documentfoundation.org/), via the page &lt;instance&gt;/accounts/profile/#api- projects.json```{    &quot;Chaoss&quot;: {        &quot;weblate&quot;: [            &quot;https://translations.documentfoundation.org&quot;        ]    }}```- setup.cfg```[weblate]raw_index = weblate_rawenriched_index = weblate_enrichedapi-token = XXXXno-archive = true (suggested)sleep-for-rate = true (suggested)studies = [enrich_demography:weblate] (optional)[enrich_demography:weblate] (optional)```## Micro Mordred [&amp;uarr;](#contents)Micro Mordred is a simplified version of Mordred which omits the use of its scheduler. Thus, Micro Mordred allows running single Mordred tasks (e.g., raw collection, enrichment) per execution.Micro Mordred is located in the [sirmordred/utils](https://github.com/chaoss/grimoirelab-sirmordred/tree/master/sirmordred/utils/micro.py) folder of this same repository. It can be executed via command line, its parameters are summarized below:```--debug: execute Micro Mordred in debug mode--raw: activate raw task--enrich: activate enrich task--identities: activate merge identities task--panels: activate panels task--cfg: path of the configuration file--backends: list of cfg sections where the active tasks will be executed--logs-dir: single parameter denoting the path of folder in which logs are to be stored```Examples of possible executions are shown below:```cd .../grimoirelab-sirmordred/sirmordred/utils/micro.py --raw --enrich --cfg ./setup.cfg --backends git # execute the Raw and Enrich tasks for the Git cfg sectionmicro.py --panels # execute the Panels task to load the Sigils panels to Kibitermicro.py --raw --enrich --debug --cfg ./setup.cfg --backends groupsio --logs-dir logs # execute the raw and enriched tasks for the groupsio cfg section with debug mode on and logs being saved in the folder logs in the same directory as micro.py```</longdescription>
</pkgmetadata>