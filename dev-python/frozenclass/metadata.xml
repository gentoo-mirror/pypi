<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;        &lt;h1 align=&quot;center&quot;&gt;FrozenClass&lt;/h1&gt;        &lt;h2 align=&quot;center&quot;&gt;This library was created in order to be able to save classes with a single line, as well as load them!&lt;/h2&gt;&lt;/a&gt;&lt;p align=&quot;center&quot;&gt;        &lt;a href=&quot;https://pypi.python.org/pypi/frozenclass&quot;&gt;&lt;img alt=&quot;Pypi version&quot; src=&quot;https://img.shields.io/pypi/v/frozenclass.svg&quot;&gt;&lt;/a&gt;        &lt;a href=&quot;https://pypi.python.org/pypi/frozenclass&quot;&gt;&lt;img alt=&quot;Python versions&quot; src=&quot;https://img.shields.io/badge/python-3.7+ | PyPy-blue.svg&quot;&gt;&lt;/a&gt;        &lt;img alt=&quot;Size&quot; src=&quot;https://img.shields.io/github/languages/code-size/GigantPro/frozenclass&quot;&gt;        &lt;a href=&quot;https://pypi.org/project/frozenclass/&quot;&gt;&lt;img alt=&quot;Pypi version&quot; src=&quot;https://img.shields.io/pypi/l/frozenclass?color=orange&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;        &lt;a href=&quot;https://github.com/GigantPro/frozenclass/actions/workflows/tests.yml&quot;&gt;&lt;img alt=&quot;Testing status&quot; src=&quot;https://github.com/GigantPro/frozenclass/actions/workflows/tests.yml/badge.svg?branch=main&quot;&gt;&lt;/a&gt;        &lt;a href=&quot;https://github.com/GigantPro/frozenclass/actions/workflows/linting.yml&quot;&gt;&lt;img alt=&quot;Linting&quot; src=&quot;https://github.com/GigantPro/frozenclass/actions/workflows/linting.yml/badge.svg?branch=main&quot;&gt;&lt;/a&gt;&lt;/p&gt;## Example```python from frozenclass import DataController# Test classclass Test:    test_var = 10# Init controller classdata_controller = DataController('PATH_TO_SAVE`S FOLDER')# Save class as filesave_name = data_controller.freeze_class(Test())# Get all saves classes modelsloaded_classes = data_controller.load_save(save_name)  # -&gt; Test object# Get var valueprint(test_var.test_var) # -&gt; 10```## Installation```bash$ pip install frozenclass```## Installation from source### Dependencies:- **poetry**```bash$ git clone https://github.com/GigantPro/frozenclass.git; cd frozenclass-main$ poetry run build; cd dist$ pip install $(ls -Art | tail -n 1)```</longdescription>
</pkgmetadata>