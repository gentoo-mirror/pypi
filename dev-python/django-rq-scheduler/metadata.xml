<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django RQ Scheduler===================[![Django CI](https://github.com/dsoftwareinc/django-rq-scheduler/actions/workflows/test.yml/badge.svg)](https://github.com/dsoftwareinc/django-rq-scheduler/actions/workflows/test.yml)![badge](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/cunla/b756396efb895f0e34558c980f1ca0c7/raw/django-rq-scheduler-4.json)[![badge](https://img.shields.io/pypi/dm/django-rq-scheduler)](https://pypi.org/project/django-rq-scheduler/)[![Open Source Helpers](https://www.codetriage.com/dsoftwareinc/django-rq-scheduler/badges/users.svg)](https://www.codetriage.com/dsoftwareinc/django-rq-scheduler)Documentation can be found in https://django-rq-scheduler.readthedocs.io/en/latest/&gt; Notice:&gt; &gt; In v2023.3.0, django-rq-scheduler was refactored significantly to support&gt; calculation of parameters in runtime.&gt; &gt; You can now add a callable param to your scheduled job, and it will be&gt; calculated when the job is performed.&gt; &gt; 1. It is highly recommended you save your existing database before upgrading!&gt; 2. Once you upgraded, recreate your jobs.&gt; Notice:&gt; &gt; Starting v2023.1, requirement for rq_scheduler was removed and instead&gt; one of the django-rq workers should run with `--with-scheduler` parameter&gt; as mentioned [here](https://github.com/rq/django-rq#support-for-scheduled-jobs).# Sponsordjango-rq-scheduler is developed for free.You can support this project by becoming a sponsor using [this link](https://github.com/sponsors/cunla).## Security contact informationTo report a security vulnerability, please use the[Tidelift security contact](https://tidelift.com/security).Tidelift will coordinate the fix and disclosure.</longdescription>
</pkgmetadata>