<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>shewchuk========[![](https://github.com/lycantropos/shewchuk/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/lycantropos/shewchuk/actions/workflows/ci.yml &quot;Github Actions&quot;)[![](https://readthedocs.org/projects/shewchuk/badge/?version=latest)](https://shewchuk.readthedocs.io/en/latest/?badge=latest &quot;Documentation&quot;)[![](https://codecov.io/gh/lycantropos/shewchuk/branch/master/graph/badge.svg)](https://codecov.io/gh/lycantropos/shewchuk &quot;Codecov&quot;)[![](https://img.shields.io/github/license/lycantropos/shewchuk.svg)](https://github.com/lycantropos/shewchuk/blob/master/LICENSE &quot;License&quot;)[![](https://badge.fury.io/py/shewchuk.svg)](https://badge.fury.io/py/shewchuk &quot;PyPI&quot;)Summary-------`shewchuk` is a collection of computational geometry utilitiesfor robust processing of geometries with floating point coordinates.Named after and based on [the work](https://www.cs.cmu.edu/~quake/robust.html)of [Jonathan Richard Shewchuk](https://en.wikipedia.org/wiki/Jonathan_Shewchuk).---In what follows `python` is an alias for `python3.7` or `pypy3.7`or any later version (`python3.8`, `pypy3.8` and so on).Installation------------Install the latest `pip` &amp; `setuptools` packages versions```bashpython -m pip install --upgrade pip setuptools```### UserDownload and install the latest stable version from `PyPI` repository```bashpython -m pip install --upgrade shewchuk```### DeveloperDownload the latest version from `GitHub` repository```bashgit clone https://github.com/lycantropos/shewchuk.gitcd shewchuk```Install```bashpython setup.py install```Usage-----```python&gt;&gt;&gt; from shewchuk import incircle_test&gt;&gt;&gt; incircle_test(3, 3, 0, 0, 2, 0, 0, 2) == -1True&gt;&gt;&gt; incircle_test(2, 2, 0, 0, 2, 0, 0, 2) == 0True&gt;&gt;&gt; incircle_test(1, 1, 0, 0, 2, 0, 0, 2) == 1True&gt;&gt;&gt; from shewchuk import kind&gt;&gt;&gt; kind(1, 0, 0, 0, 2, 0) == -1True&gt;&gt;&gt; kind(0, 0, 0, 1, 1, 0) == 0True&gt;&gt;&gt; kind(0, 0, 1, 0, 2, 0) == 1True&gt;&gt;&gt; from shewchuk import orientation&gt;&gt;&gt; orientation(0, 0, 0, 1, 1, 0) == -1True&gt;&gt;&gt; orientation(0, 0, 1, 0, 2, 0) == 0True&gt;&gt;&gt; orientation(0, 0, 1, 0, 0, 1) == 1True```Development-----------### Bumping version#### PreparationInstall[bump2version](https://github.com/c4urself/bump2version#installation).#### Pre-releaseChoose which version number category to bump following [semverspecification](http://semver.org/).Test bumping version```bashbump2version --dry-run --verbose $CATEGORY```where `$CATEGORY` is the target version number category name, possiblevalues are `patch`/`minor`/`major`.Bump version```bashbump2version --verbose $CATEGORY```This will set version to `major.minor.patch-alpha`. #### ReleaseTest bumping version```bashbump2version --dry-run --verbose release```Bump version```bashbump2version --verbose release```This will set version to `major.minor.patch`.### Running testsInstall dependencies```bashpython -m pip install -r requirements-tests.txt```Plain```bashpytest```Inside `Docker` container:- with `CPython`  ```bash  docker-compose --file docker-compose.cpython.yml up  ```- with `PyPy`  ```bash  docker-compose --file docker-compose.pypy.yml up  ````Bash` script:- with `CPython`  ```bash  ./run-tests.sh  ```  or  ```bash  ./run-tests.sh cpython  ```- with `PyPy`  ```bash  ./run-tests.sh pypy  ````PowerShell` script:- with `CPython`  ```powershell  .\run-tests.ps1  ```  or  ```powershell  .\run-tests.ps1 cpython  ```- with `PyPy`  ```powershell  .\run-tests.ps1 pypy  ```</longdescription>
</pkgmetadata>