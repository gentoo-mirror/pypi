<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># LogDirA Python library for managing logging directories.|                    Source                    |                                                  PyPI                                                  |                                                            Conda                                                            |                                                                                             CI/CD                                                                                             |                        Docs                        |                                                                         Docs Status                                                                         || :------------------------------------------: | :----------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------------------------------------------: | :---------------------------------------------------------------------------------------------------------------------------------------------------------: || [GitHub](https://github.com/btjanaka/logdir) | [![PyPI](https://img.shields.io/pypi/v/logdir?style=flat&amp;color=blue)](https://pypi.org/project/logdir) | [![Conda Recipe](https://img.shields.io/badge/recipe-logdir-green.svg?style=flat)](https://anaconda.org/conda-forge/logdir) | [![Test and Deploy](https://github.com/btjanaka/logdir/workflows/Test%20and%20Deploy/badge.svg?branch=master)](https://github.com/btjanaka/logdir/actions?query=workflow%3A&quot;Test+and+Deploy&quot;) | [logdir.btjanaka.net](https://logdir.btjanaka.net) | [![Netlify Status](https://api.netlify.com/api/v1/badges/b3cdff86-dfcf-4b62-9a64-ab431bc5040f/deploy-status)](https://app.netlify.com/sites/logdir/deploys) |## InstallationTo install from PyPI, run:```bashpip install logdir```To install from Conda, run:```bashconda install -c conda-forge logdir```To install from source, clone this repo, cd into it, and run:```bashpip install .```logdir is tested on Python 3.7+. Earlier Python versions may work but are notguaranteed.## UsageIf your experiment is called `My Experiment`, you can create a logging directoryfor it with:```pythonfrom logdir import LogDirlogdir = LogDir(&quot;My Experiment&quot;)```This will create a logging directory of the form`./logs/YYYY-MM-DD_HH-MM-SS_my-experiment`; you can change `./logs` bypassing in a second argument for the root directory when initializing `LogDir`,i.e. `LogDir(&quot;My Experiment&quot;, &quot;./different-log-dir&quot;)`.You now have access to useful methods for creating files and saving data in thedirectory. For example, start writing to a file `new.txt` in the directory with:```pythonwith logdir.pfile(&quot;new.txt&quot;).open() as file:    file.write(&quot;Hello World!&quot;)```This takes advantage of the[pfile()](https://logdir.btjanaka.net/api/#logdir.LogDir.pfile) method, whichcreates a `pathlib.Path` to the new file. It also uses `pathlib.Path.open()`.`pfile()` will also create intermediate directories, so this will work even if`foo/bar/` does not exist in the logging directory already:```pythonwith logdir.pfile(&quot;foo/bar/new.txt&quot;).open() as file:    file.write(&quot;Hello World!&quot;)```There is also[save_data()](https://logdir.btjanaka.net/api/#logdir.LogDir.save_data), whichsaves data to a file. JSON, YAML, TOML, and pickle files are currentlysupported.```pythonlogdir.save_data({&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3}, &quot;file.json&quot;)```Finally, [readme()](https://logdir.btjanaka.net/api/#logdir.LogDir.readme) addsa README.md to the directory with multiple pieces of information. For instance,this command:```pythonlogdir.readme(date=True, git_commit=True)```Will create something like:```md# My Experiment- Date: 2020-10-04 23:04:05- Git Commit: e3rftyt543rt5y67jhtgr4yhju```See the [API](https://logdir.btjanaka.net/api) for all available methods.</longdescription>
</pkgmetadata>