<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># immutabledict![PyPI](https://img.shields.io/pypi/v/immutabledict) ![Conda](https://img.shields.io/conda/vn/conda-forge/immutabledict) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/immutabledict)![License](https://img.shields.io/pypi/l/immutabledict) ![Build](https://img.shields.io/github/actions/workflow/status/corenting/immutabledict/ci.yml?branch=master) ![Codecov](https://img.shields.io/codecov/c/github/corenting/immutabledict) ![PyPI - Downloads](https://img.shields.io/pypi/dm/immutabledict)A fork of the original [frozendict](https://github.com/slezica/python-frozendict), an immutable wrapper around dictionaries.This library is a pure Python, MIT-licensed alternative to the new LGPL-3.0 licensed [frozendict](https://github.com/Marco-Sulla/python-frozendict).It implements the complete mapping interface and can be used as a drop-in replacement for dictionaries where immutability is desired.The immutabledict constructor mimics dict, and all of the expected interfaces (iter, len, repr, hash, getitem) are provided. Note that an immutabledict does not guarantee the immutability of its values, so the utility of hash method is restricted by usage.The only difference is that the copy() method of immutable takes variable keyword arguments, which will be present as key/value pairs in the new, immutable copy.## InstallationAvailable as `immutabledict` on :- [pypi](https://pypi.org/project/immutabledict/)- [conda-forge](https://anaconda.org/conda-forge/immutabledict) (community-maintained, not an official release)- alpine as [py3-immutabledict](https://pkgs.alpinelinux.org/packages?name=py3-immutabledict)  (community-maintained, not an official release)## Example```pythonfrom immutabledict import immutabledictmy_item = immutabledict({&quot;a&quot;: &quot;value&quot;, &quot;b&quot;: &quot;other_value&quot;})print(my_item[&quot;a&quot;]) # Print &quot;value&quot;```## Differences with the old original frozendict package- Dropped support of EOL Python versions (version 1.0.0 supports Python 3.5, versions &lt;= 2.2.1 supports Python 3.6)- Fixed `collections.Mapping` deprecation warning- Typing- [PEP 584 union operators](https://www.python.org/dev/peps/pep-0584/)</longdescription>
</pkgmetadata>