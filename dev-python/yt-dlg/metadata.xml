<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Azure DevOps coverage](https://img.shields.io/azure-devops/coverage/oleksis/yt-dlg/1/master.svg)](https://dev.azure.com/oleksis/yt-dlg/_build/latest?definitionId=1&amp;branchName=master)[![Build Status](https://dev.azure.com/oleksis/yt-dlg/_apis/build/status/yt-dlg?repoName=yt-dlg&amp;branchName=master)](https://dev.azure.com/oleksis/yt-dlg/_build/latest?definitionId=1&amp;repoName=yt-dlg&amp;branchName=master)[![yt-dlg](https://snapcraft.io/yt-dlg/badge.svg)](https://snapcraft.io/yt-dlg)[![build result](https://build.opensuse.org/projects/home:oleksis/packages/yt-dlg/badge.svg?type=default)](https://build.opensuse.org/package/show/home:oleksis/yt-dlg)# yt-dlgA cross platform front-end GUI of the popular [youtube-dl](https://github.com/ytdl-org/youtube-dl/) media downloader written in wxPython. [Supported sites](http://ytdl-org.github.io/youtube-dl/supportedsites.html)## Screenshots![youtube-dl-gui main window](https://raw.githubusercontent.com/oleksis/youtube-dl-gui/master/docs/img/yt-dlg_ui.gif)## Requirements* [Python 3](https://www.python.org/downloads)* [wxPython 4 Phoenix](https://wxpython.org/download.php)* [PyPubSub](https://pypi.org/project/PyPubSub)* [FFmpeg](https://ffmpeg.org/download.html) (optional, to postprocess video files)### Requirement for build Binaries/Executables* [polib](https://pypi.org/project/polib)* [PyInstaller](https://www.pyinstaller.org/)### Optionals* [GNU gettext](https://www.gnu.org/software/gettext/)## Downloads* [SHA2-256SUMS](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.5/SHA2-256SUMS)* [yt-dlg](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.5/yt-dlg)* [yt-dlg.exe](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.5/yt-dlg.exe)* [yt-dlg-20221113.1.msi](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.4/yt-dlg-20221113.1.msi)* [Source (.zip)](https://github.com/oleksis/youtube-dl-gui/archive/refs/tags/v1.8.5.zip)* [Source (.tar.gz)](https://github.com/oleksis/youtube-dl-gui/archive/refs/tags/v1.8.5.tar.gz)## Installation### Windows 10 / 11[&lt;img src=&quot;https://get.microsoft.com/images/en-us%20dark.svg&quot; alt=&quot;Get it from Microsoft&quot; height=&quot;104&quot;&gt;](https://apps.microsoft.com/store/detail/ytdlg/XP9CCFSWS911F5)### Microsoft StoreYou can download the program for free from the [Microsoft Store](https://apps.microsoft.com/store/detail/ytdlg/XP9CCFSWS911F5) and take advantage of its features like background auto-updates.### Winget```pwshwinget install -e --id yt-dlg.yt-dlg```### Snap Store[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/yt-dlg)### Install From Source&gt; **Note**&gt; The latest version compatible with Python 3.6.1 is [yt-dlg v1.8.2](https://github.com/oleksis/youtube-dl-gui/releases/tag/v1.8.2)In Windows we have the following options:- Use theÂ [Dev Container](.devcontainer/devcontainer.json) configuration file- Windows [Development](https://github.com/oleksis/youtube-dl-gui/wiki/development#windows-development-environment) Environment- Set up a [WSL development environment](https://learn.microsoft.com/en-us/windows/wsl/setup/environment)In GNU/Linux install `make`. Ubuntu:```bashsudo apt install make```* Download &amp; extract the source* Change directory into *yt-dlg-1.8.5** Create virtual environment```bashmake clean-requirementsmake venv```* Activate virtual environment```bashsource venv/bin/activate```* Install requirements, build translations and install```bashmake install```### BinariesCreate binaries using [PyInstaller](https://www.pyinstaller.org/)* Install requirements, build translations and create binaries```bashmake pyinstaller```### Run yt-dlg* Activate virtual environment and run```bashsource venv/bin/activateyt-dlg```&gt; **Note**&gt; The default CLI Backend is `yt-dlp` you can change to `youtube-dl` CLI Backend in:&gt;&gt;   Settings -&gt; Options -&gt; Extra and change/select `youtube-dl`## Debian 11Install the following packages and their dependences:```bashsudo apt-get updatesudo apt-get install -y apt-utils build-essential dpkg-dev \    freeglut3 freeglut3-dev libgl1-mesa-dev libglu1-mesa-dev \    libgstreamer-plugins-base1.0-dev libgtk-3-dev libjpeg-dev \    libnotify-dev libsdl2-dev libsm-dev libtiff-dev \    libwebkit2gtk-4.0-dev libxtst-dev```### Setting the virtual environment and activate```bashsudo apt-get install -y python3.9 python3.9-dev libpython3.9-dev python3.9-venvpython3.9 -m venv venvsource venv/bin/activatepython3 -m pip install --upgrade pip setuptools wheel```### Install wxPython , requirements and yt-dlg&gt; * See **[Notes](#notes)** for install wxPython on Ubuntu&gt;&gt; * For install **wxPython on Debian 11 &quot;bullseye&quot;** download the wheel from the release:&gt;&gt;   [wxPython-4.2.1a1-cp310-cp310-linux_x86_64.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.4/wxPython-4.2.1a1-cp310-cp310-linux_x86_64.whl)&gt;&gt; * For install **wxPython on Ubuntu 22.04.1 &quot;jammy&quot;** download the wheel from the release:&gt;&gt;   [wxPython-4.2.1a1-cp310-cp310-linux_x86_64-jammy.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.4/wxPython-4.2.1a1-cp310-cp310-linux_x86_64-jammy.whl)&gt;&gt; * For install **wxPython on Ubuntu 21.04 &quot;hirsute&quot;** download the wheel from the release:&gt;&gt;   [wxPython-4.1.1-cp39-cp39-linux_x86_64.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.3/wxPython-4.1.1-cp39-cp39-linux_x86_64.whl)&gt;&gt; * For install **wxPython on Ubuntu 20.04.5 &quot;focal&quot;** download the wheel from the release:&gt;&gt;   [wxPython-4.2.0-cp310-cp310-linux_x86_64.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.4/wxPython-4.2.0-cp310-cp310-linux_x86_64.whl)&gt;&gt; * For install **wxPython ManyLinux 2.28** download the wheel from the release:&gt;&gt;   [wxPython-4.2.1a1-cp310-cp310-manylinux_2_28_x86_64.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.3/wxPython-4.2.1a1-cp310-cp310-manylinux_2_28_x86_64.whl)```bashpython3 -m pip install wxPython-4.1.1-cp39-cp39-linux_x86_64.whlpython3 -m pip install -r requirements/requirements.inpython3 -m pip install --no-deps yt-dlgyt-dlg```### Comprobar wxPython 4```bashpython3 -c &quot;import wx ; print(wx.__version__)&quot;```### List and configure Locales```bashlocale -asudo dpkg-reconfigure locales```## openSUSE TumbleweedInstall using `zypper`### Open Build Service```bashsudo zypper ar -cfp 90 https://download.opensuse.org/repositories/home:oleksis/openSUSE_Tumbleweed/home:oleksis.reposudo zypper install python38-yt-dlgyt-dlg```### With Python 3.8The following steps can be executed if you use the Python version of the system (3.8, 3.9, 3.10)```bashsudo zypper dup  # Distribition Upgradesudo zypper -n update  # Non Interactivesudo zypper -n install yum-utils```### Add openSUSE Factory repository for wxPython 4```bashsudo zypper addrepo -f http://download.opensuse.org/tumbleweed/repo/oss/ openSUSE-Factory```### Install wxPython 4 global (system level)&gt; * For install **wxPython on openSUSE Tumbleweed** download the wheel from the release:&gt;&gt;   [wxPython-4.1.2a1-cp38-cp38-linux_x86_64.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.3/wxPython-4.1.2a1-cp38-cp38-linux_x86_64.whl)Need at least one font installed```bashsudo zypper -n install python38-wxPython google-opensans-fonts```### Install other dev packages/tools for Python 3.8```bashsudo zypper -n install python38-pip python38-setuptools python38-devel python38-tools python38-virtualenv python38-requests```### Install `yt-dlg` global from PyPI```bashpip3 install yt-dlg```### Add `yt-dlg` executable to the PATH and run```bashPATH=$HOME/.local/bin:$PATHyt-dlg```&lt;details&gt;&lt;summary&gt;openSUSE 15.3&lt;/summary&gt;We need build **wxPython 4.1.1** for **Python 3.6**&gt; * For install **wxPython on openSUSE 15.3** download the wheel from the release:&gt;&gt;   [wxPython-4.1.1-cp36-cp36m-linux_x86_64.whl](https://github.com/oleksis/youtube-dl-gui/releases/download/v1.8.1/wxPython-4.1.1-cp36-cp36m-linux_x86_64.whl)### Dev Tools```bashsudo zypper -n install -t pattern devel_basissudo zypper -n install gcc-c++sudo zypper -n install git wget```### Requirement for install Python from source (Build dependencies)```bashsudo zypper -n install \    readline-devel sqlite3-devel libbz2-devel \    zlib-devel libopenssl-devel libffi-devel \    ncurses-devel tk-devel libgdbm4 \    ca-certificates gcc```### Install wxPython 4 Dependencies```bashsudo zypper -n install \    gtk3-devel gtk3-tools webkit2gtk3-devel \    libjbig2 libjbig-devel libjpeg8 libjpeg8-devel \    libpng16-16 libpng16-devel libtiff-devel \    libSDL2-2_0-0 libSDL2-devel libSM6 libSM-devel\    gstreamer gstreamer-devel gstreamer-plugins-base-devel \    freeglut-devel libnotify4 libnotify-devel \    libSM6 libSM-devel liblzma5 libXtst6 libXv1 \    gdk-pixbuf-loader-rsvg gdk-pixbuf-query-loaders \```### Install Pyenv```bashcurl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bashecho 'export PYENV_ROOT=&quot;$HOME/.pyenv&quot;' &gt;&gt; $HOME/.bashrcecho 'export PATH=&quot;$HOME/.pyenv/bin:$PATH&quot;' &gt;&gt; $HOME/.bashrcecho 'eval &quot;$(pyenv init -)&quot;' &gt;&gt; $HOME/.bashrcecho 'eval &quot;$(pyenv virtualenv-init -)&quot;' &gt;&gt; $HOME/.bashrcsource $HOME/.bashrc```### Custom Python build with `--enable-shared````bashPYTHON_CONFIGURE_OPTS=&quot;--enable-shared&quot; \    pyenv install 3.6.13pyenv shell 3.6.13```### Add python-config to the PATH```bashPATH=$(pyenv root)/versions/${PYENV_VERSION}/bin:$PATH```### Install requirements and run `yt-dlg````bashpython -m pip install --upgrade pip six setuptools wheelpython -m pip install -r requirements/requirements.inpip install yt-dlgyt-dlg```### List locales```bashlocale  -av```### Windows Subsystem for LinuxSome issues is possible. Can read more in: [Troubleshooting GUI Linux apps on openSUSE on WSLg](https://boxofcables.dev/why-do-apps-look-weird-on-wslg-on-opensuse/)```bashsudo zypper -n install --no-recommends -t pattern gnomesudo /usr/bin/gdk-pixbuf-query-loaders-64 --update-cache```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Mageia 8&lt;/summary&gt;Exists a third-party repository for Mageia 8 that have a rpm package for youtube-dl-gui.The repository comes from [BlogDrake](https://blogdrake.net/) The Official Community for Spanish Talking Users### InstructionsFirst you have to configure the Official Mageia repositories thenFor i586 - 32bit systems```su -urpmi.addmedia --wget --distrib https://ftp.blogdrake.net/mageia/mageia8/i586urpmi yt-dlgexit```For x86_64 - 64bit systems```su -urpmi.addmedia --wget --distrib https://ftp.blogdrake.net/mageia/mageia8/x86_64urpmi yt-dlgexit```### Source and RPM on Mageia 8* [SRC](https://ftp.blogdrake.net/mageia/mageia8/free/SRPMS/yt-dlg-1.8.3-1bdk_mga8.src.rpm)* [RPM](https://ftp.blogdrake.net/mageia/mageia8/free/noarch/yt-dlg-1.8.3-1bdk_mga8.noarch.rpm)&lt;/details&gt;## macOS Monterey* Install Pyenv using [Homebrew](https://github.com/pyenv/pyenv#homebrew-in-macos)* Suggested [build environment](https://github.com/pyenv/pyenv/wiki#suggested-build-environment)### Custom Python build with `--enable-framework`* [How to use wxPython with virtualenv on Mac OSX](https://wiki.wxpython.org/wxPythonVirtualenvOnMac)```bashPYTHON_CONFIGURE_OPTS=&quot;--enable-framework&quot; pyenv install 3.10.6pyenv shell 3.10.6python -m pip install -r requirements/requirements.inpip install yt-dlgyt-dlg```## NotesAn alternative to install wxPython 4 **Phoenix** from the Extras sectionFor Ubuntu 20.04```bashwget https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04/wxPython-4.1.1-cp38-cp38-linux_x86_64.whlpip3 install wxPython-4.1.1-cp38-cp38-linux_x86_64.whl```* [wxPython 4 builds on various linux distros with Vagrant](https://github.com/wxWidgets/Phoenix/blob/wxPy-4.0.x/vagrant/debian-9/bootstrap.sh)* [Building wxPython for Linux via Pip](https://wxpython.org/blog/2017-08-17-builds-for-linux-with-pip/index.html)* [Building wxPython4 with Docker](https://github.com/wxWidgets/Phoenix/blob/master/docker/build/debian-10/Dockerfile#L25)* [Compile wxPython 4.1.2a1 using Microsoft C++ Build Tools 2019](https://gist.github.com/oleksis/8637f096b97e18e00786e46465e97b34)* [Compile wxPython 4.1.1 using Ubuntu on Windows Community Preview](https://gist.github.com/oleksis/2d84b9eefe1fef038619439168f3768e)* [Compile wxPython 4.1.2a1 on openSUSE Tumbleweed](https://gist.github.com/oleksis/0746bff4db6e2fc58c3bddf3f2672887)* [wxPython Windows artifacts for Python 3.7 to 3.11](https://dev.azure.com/oleksis/wxPython/_build/results?buildId=132&amp;view=artifacts&amp;pathAsName=false&amp;type=publishedArtifacts)## Contributing* **Add support for new language:** See [Localization Howto](https://yt-dlg.github.io/yt-dlg/Localization-Howto.html)* **Report a bug:** See [issues](https://github.com/oleksis/youtube-dl-gui/issues)* **Check how contribute:** [contribuite](https://github.com/oleksis/youtube-dl-gui/contribute)&lt;a href=&quot;https://www.buymeacoffee.com/oleksis&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; &gt;&lt;/a&gt;You can send me bitcoins to the following address:&lt;a href=&quot;https://blockchain.info/address/bc1qnlea6zlfca9fpk62pzedrh6z20w0pxn2ujslztw8t84spprlr4cqdeg8u5&quot; target=&quot;_blank&quot;&gt;bc1qnlea6zlfca9fpk62pzedrh6z20w0pxn2ujslztw8t84spprlr4cqdeg8u5&lt;/a&gt;![Bitcoin Address](https://github.com/oleksis/youtube-dl-gui/raw/master/docs/img/qr-bitcoin.png)## AuthorsSee [AUTHORS](AUTHORS) file## LicenseThe [Public Domain License](LICENSE)## Frequently Asked QuestionsSee [FAQs](https://yt-dlg.github.io/yt-dlg/Faq.html)## ThanksThanks to everyone who contributed to this project and to [@philipzae](https://github.com/philipzae) for designing the new UI layout.</longdescription>
</pkgmetadata>