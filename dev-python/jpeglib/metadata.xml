<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI version](https://badge.fury.io/py/jpeglib.svg)](https://pypi.org/project/jpeglib/)[![Commit CI/CD](https://github.com/martinbenes1996/jpeglib/actions/workflows/on_commit.yml/badge.svg?branch=master)](https://github.com/martinbenes1996/jpeglib/actions/workflows/on_commit.yml)[![Release CI/CD](https://github.com/martinbenes1996/jpeglib/actions/workflows/on_release.yml/badge.svg)](https://github.com/martinbenes1996/jpeglib/actions/workflows/on_release.yml)[![Documentation Status](https://readthedocs.org/projects/jpeglib/badge/?version=latest)](https://jpeglib.readthedocs.io/)[![PyPI downloads](https://img.shields.io/pypi/dm/jpeglib)](https://pypi.org/project/jpeglib/)[![Stars](https://img.shields.io/github/stars/martinbenes1996/jpeglib.svg)](https://GitHub.com/martinbenes1996/jpeglib)[![Contributors](https://img.shields.io/github/contributors/martinbenes1996/jpeglib)](https://GitHub.com/martinbenes1996/jpeglib)[![Wheel](https://img.shields.io/pypi/wheel/jpeglib)](https://pypi.org/project/jpeglib/)[![Status](https://img.shields.io/pypi/status/jpeglib)](https://pypi.com/project/jpeglib/)[![PyPi license](https://badgen.net/pypi/license/pip/)](https://pypi.com/project/jpeglib/)[![Last commit](https://img.shields.io/github/last-commit/martinbenes1996/jpeglib)](https://GitHub.com/martinbenes1996/jpeglib)# jpeglibPython envelope for the popular C library libjpeg for handling JPEG files.*libjpeg* offers full control over compression and decompression and exposes DCT coefficients and quantization tables.## InstallationSimply install the package with pip3```bashpip install jpeglib```or using the cloned repository```bashpython setup.py install```&gt; :warning: This will install `jpeglib` together with multiple versions of libjpeg, libjpeg-turbo and mozjpeg. For common architectures/OS we provide prebuilt wheels, but installing from source takes couple of minutes.## UsageImport the library in Python 3```pythonimport jpeglib```### DCTGet *discrete cosine transform* (DCT) coefficients and quantization matrices as numpy array```pythonim = jpeglib.read_dct(&quot;input.jpeg&quot;)im.Y; im.Cb; im.Cr; im.qt```You get luminance DCT, chrominance DCT and quantization tables.Write the DCT coefficients back to a file with```pythonim.write_dct(&quot;output.jpeg&quot;)```### Pixel dataDecompress the `input.jpeg` into spatial representation in numpy array with```pythonim = jpeglib.read_spatial(&quot;input.jpeg&quot;)im.spatial```You can specify parameters such as output color space, DCT method, dithering, etc.Write spatial representation in numpy arrray back to file with```pythonim.write_spatial(&quot;output.jpeg&quot;)```You can specify input color space, DCT method, sampling factor, output quality, smoothing factor etc.You can find all the details in the [documentation](https://jpeglib.readthedocs.io/).### libjpeg versionIt is possible to choose, which version of libjpeg should be used.```pythonjpeglib.version.set('6b')```Currently `jpeglib` supports all versions of libjpeg from 6b to 9e, libjpeg-turbo 2.1.0 and mozjpeg 4.0.3.Their source codes is baked inside the package and thus distributed with it, avoiding external dependency.Get currently used libjpeg version by```pythonversion = jpeglib.version.get()```You can also set a libjpeg version for a scope only.```pythonjpeglib.version.set('6b')im = jpeglib.read_spatial('image.jpeg') # using 6bwith jpeglib.version('9e'):    im = jpeglib.read_spatial('image.jpeg') # using 9eim = jpeglib.read_spatial('image.jpeg') # using 6b again```## CreditsDeveloped by [Martin Benes](https://github.com/martinbenes1996), Universit√§t Innsbruck, 2023.</longdescription>
</pkgmetadata>