<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Hyrule BuilderA mod building tool for _The Legend of Zelda: Breath of the Wild_.Hyrule Builder is designed to help BOTW modders more easily manage and edit their project files. Itcan &quot;unbuild&quot;/&quot;decompile&quot; game files to a source-like format. All SARCs are extracted, all BYML,AAMP, or MSYT files are converted to YAML, and actor packs are specially unbuilt using canonicalpaths. The whole project can be easily rebuilt into usable mod, with a number of conveniencefeatures to smooth the process.## SetupInstall Python 3.7+ (**64 bit version**), then run `pip install hyrule_builder`.## Building and Unbuilding ModsTo start a new Hyrule Builder project, take the mod files you would like to use and make sure theyare placed in a valid folder structure. Hyrule Builder supports both Wii U and Switch mods, buteach has a different format.Wii U layout:```none. (root mod folder)├── content│   └── (content folders, e.g. Actor, Pack, etc.)└── aoc (for DLC files)    └── (DLC folders, e.g. Map, Pack, etc.)```Switch layout (note: title IDs are case sensitive):```none. (root mod folder)├── 01007EF00011E000 (base game files)│   └── romfs│       └── (content folders, e.g. Actor, Pack, etc.)└── 01007EF00011F001 (DLC files)    └── romfs        └── (content folders, e.g. Map, Pack, etc.)```To convert your existing mod files into a Hyrule Builder project, use the `unbuild` command. Example:`hyrule_builder unbuild BreathOfTheWild_VeryCleverMod`### UnbuildingFor details on unbuilding mods, see the help for the `unbuild` command:```noneusage: hyrule_builder unbuild [-h] [--output OUTPUT] [--single] [--verbose] directoryUnbuilds a mod into a source-like structure for editingpositional arguments:  directory             The main mod folder. For Wii U, this must contain a `content` folder and/or an `aoc` folder (the latter for DLC files). For Switch, you must use the following layout:                           .                           ├─ 01007EF00011E000 (for base game files)                           │  └─ romfs                           └─ 01007EF00011F001 (for DLC files)                              └─ romfsoptional arguments:  -h, --help            show this help message and exit  --output OUTPUT, -O OUTPUT                        Output folder for unbuilt mod  --single, -S          Run with single thread  --verbose, -V         Provide more detailed output```### BuildingFor details on building mods, see the help for the `build` command:```noneusage: hyrule_builder build [-h] [--be] [--no-rstb] [--no-guess] [--title-actors TITLE_ACTORS] [--output OUTPUT] [--single] [--verbose] directoryBuilds a mod from a source-like structure into binary game filesNote: Flags can be set using a config.yml file. See readme for details.positional arguments:  directory             The main mod folder. For Wii U, this must contain a `content` folder and/or an `aoc` folder (the latter for DLC files). For Switch, you must use the following layout:                           .                           ├─ 01007EF00011E000 (for base game files)                           │  └─ romfs                           └─ 01007EF00011F001 (for DLC files)                              └─ romfsoptional arguments:  -h, --help            show this help message and exit  --be, -B, -b          Use big endian where applicable  --no-rstb, -R         Do not auto-update RSTB  --no-guess, -G        Do not use RSTB estimates  --no-warn, -W         Ignore warnings, only output success/error  --hard-warn, -H       Abort on any warning like an error  --title-actors TITLE_ACTORS, -T TITLE_ACTORS                        Comma separated list of custom actors to add to TitleBG.pack, e.g.                        `--title-actors=Weapon_Bow_001,Enemy_Golem_Senior`  --output OUTPUT, -O OUTPUT                        Output folder for built mod  --single, -S          Run with single thread  --verbose, -V         Provide more detailed output```Note that endianness can be inferred on `unbuild`, but using `build` for Wii U/Cemu mods *requires* the `--be` flag.Unless `--no-rstb` is used, building a mod will automatically generate an updated RSTB file.As the help says, instead of using command line arguments, you can also configure the build command by providing a `config.yml`file. It supports up to three sections, each of which is optional. The `Meta` section provides data that will be writteninto a `rules.txt` file in the output mod. The `Flags` section turns simple switch flags on by name in a list. The `Options`section is for flags that store arbitary values, like `title-actors` or `output`. An example config file is included below:```yamlMeta: # specify data to go into a rules.txt file here  name: A Mod  description: My new modFlags: # list the switch flags you want turned on  - be  - no-warnOptions: # provide values for customizable flags  title-actors: Weapon_Bow_001,Enemy_Lizalfos_Senior  output: test/TestMod_built```### Notes on Project LayoutMost of a Hyrule Builder project layout will be familiar to anyone who has worked with BOTW mods, especially graphic packs, before. However, the following aspects are unique to Hyrule Builder:- `ActorInfo.product.sbyml` becomes the `Actor/ActorInfo` folder with individual YAML files for each actor. The hash list is handled automatically. Simply adding a new YAML file to the folder will add it to the actor list and hash list.- Most SARC files are unbuilt in place with their original filename, e.g. `Pack/TitleBG.pack` simply becomes a folder with the same name. However, actor packs are unbuilt fully into the `Actor` folder and rebuilt from their actor link files. For example, if you were to make a new copy of `Actor/ActorLink/Enemy_Lizalfos_Senior.bxml.yml` in your project and name it `Enemy_Lizalfos_Geezer.bxml.yml`, this change alone would cause the build process to create a new actor pack at `Actor/Pack/Enemy_Lizalfos_Geezer.sbactorpack`.- Some SARC files which are parsed by standard Nintendo libraries instead of the BOTW resource system will not be unbuilt for safety reasons.- The RSTB is unbuilt to a JSON file for easy editing. Format sample:  ```json  {      &quot;hash_map&quot;: {          &quot;Actor/ActorLink/Armor_064_Head.bxml&quot;: 2152,          &quot;Actor/ActorLink/FidObj_SecretBase_TorchStand_A_01.bxml&quot;: 2068,          &quot;165741&quot;: 78080,          &quot;Game/Stats/archive/I-7.00.stats&quot;: 392384,          &quot;Actor/ModelList/FldObj_SecretBaseRockBlock_E_01.bmodellist&quot;: 2640,          &quot;Actor/Physics/FldObj_HyliaStoneRuinGate_A_01.bphysics&quot;: 2864,          &quot;Actor/ModelList/WaterPump.bmodellist&quot;: 2576,          &quot;Actor/Pack/TwnObj_HyruleCastleObject_WeaponStand_B_01.bactorpack&quot;: 2560,          &quot;Actor/ModelList/TwnObj_Village_SheikerWallScroll_A_01.bmodellist&quot;: 2640,          &quot;Actor/Pack/TwnObj_Village_HatenoBanner_A_03.bactorpack&quot;: 2432,          &quot;Actor/ModelList/FldObj_WaterFallLakeFloria_A_S_02_Far.bmodellist&quot;: 2640,          // etc...      },      &quot;name_map&quot;: {          &quot;Actor/Physics/SwitchStepL.bphysics&quot;: 9652,          &quot;Actor/Physics/TwnObj_HyruleCastleObject_StoneStatue_B_01.bphysics&quot;: 2800,          &quot;Model/Item_Roast_08.Tex1.bfres&quot;: 28672,          &quot;Model/Item_Roast_08.Tex2.bfres&quot;: 28928,          // and so on...      }  }  ```## Other UsageHyrule Builder also includes a couple additional CLI tools implementing some of its features for separate use. This includes an RSTB&lt;-&gt;JSON converter and a complete builder/unbuilder for individual SARC files. Usage details follows:### RSTB to JSON```noneusage: rstb_to_json [-h] [-b] [-o [OUTPUT]] [rstb]Converts a binary RSTB file to JSON.positional arguments:  rstb                  Path to a binary RSTB fileoptional arguments:  -h, --help            show this help message and exit  -b, --be              Read the RSTB as big endian for Wii U, otherwise little endian for Switch  -o [OUTPUT], --output [OUTPUT]                        Path to output JSON file```### JSON to RSTB```noneusage: json_to_rstb [-h] [-b] [-o [OUTPUT]] [json]Converts a JSON RSTB file to binary.positional arguments:  json                  Path to a JSON RSTB fileoptional arguments:  -h, --help            show this help message and exit  -b, --be              Write the RSTB as big endian for Wii U, otherwise little endian for Switch  -o [OUTPUT], --output [OUTPUT]                        Path to output RSTB binary```### Unbuild SARC```noneusage: unbuild_sarc [-h] [--output OUTPUT] sarcUnbuild a single SARC file completelypositional arguments:  sarc                  SARC archive to unbuildoptional arguments:  -h, --help            show this help message and exit  --output OUTPUT, -O OUTPUT                        Output folder for unbuilt SARC, defaults to file name w/o extension```### Build SARC```noneusage: build_sarc [-h] [--be] [--verbose] source outputBuild a SARC file from a single source folderpositional arguments:  source         Source folder for SARC  output         Path to output SARC file, will auto compress if extension starts with &quot;.s&quot;optional arguments:  -h, --help     show this help message and exit  --be, -B       Use big endian where applicable  --verbose, -V  Provide more detailed output```## LicenseThis software is licensed under the terms of the GNU General Public License, version 3 or later.</longdescription>
</pkgmetadata>