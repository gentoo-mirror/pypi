<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Disclaimer: This Is Not An Official Globus.org Product======================================================This is a personal project for talking to the Globus Nexus API with all of thebenefits of the Globus SDK.It is not a Globus maintained product.If you don't know what that is, stop reading here and go away.Otherwise, this will hopefully alleviate the pains of trying to use Nexus.Globus Nexus Client===================When Globus added the new `SDK &lt;https://github.com/globus/globus-sdk-python&gt;`_it did not include functionality for the Nexus API.This package contains a client for talking to Nexus, based on the same coreclient model provided by the SDK.You should therefore think of this as a third-party extension to the SDK fortalking to Nexus.Importing and Usage-------------------.. warning::    Because this is not part of the SDK, you don't get at it with a simple    ``from globus_sdk import NexusClient``.Instead, imports come from the package namespace::    from globus_nexus_client import NexusClientYou can then use ``NexusClient`` methods as usual.The client object supports all of the typical Authorizers that the SDKprovides, and this package provides an additional Authorizer for usingNexus-issued tokens::    from globus_nexus_client import NexusClient, LegacyGOAuthAuthorizer    client = NexusClient(authorizer=LegacyGOAuthAuthorizer('&lt;nexus token&gt;'))Documentation-------------There is no web doc or other maintained documentation for this project, butthere are docstrings on all methods of the client object. Either browse thesource or use ``help()`` in the python REPL.</longdescription>
</pkgmetadata>