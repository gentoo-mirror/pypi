<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/cthoyt/curies/raw/main/docs/source/logo.png&quot; height=&quot;150&quot;&gt;&lt;/p&gt;--&gt;&lt;h1 align=&quot;center&quot;&gt;  curies&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/cthoyt/curies/actions?query=workflow%3ATests&quot;&gt;        &lt;img alt=&quot;Tests&quot; src=&quot;https://github.com/cthoyt/curies/workflows/Tests/badge.svg&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/curies&quot;&gt;        &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/curies&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/curies&quot;&gt;        &lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/curies&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/cthoyt/curies/blob/main/LICENSE&quot;&gt;        &lt;img alt=&quot;PyPI - License&quot; src=&quot;https://img.shields.io/pypi/l/curies&quot; /&gt;    &lt;/a&gt;    &lt;a href='https://curies.readthedocs.io/en/latest/?badge=latest'&gt;        &lt;img src='https://readthedocs.org/projects/curies/badge/?version=latest' alt='Documentation Status' /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/cthoyt/curies/branch/main&quot;&gt;        &lt;img src=&quot;https://codecov.io/gh/cthoyt/curies/branch/main/graph/badge.svg&quot; alt=&quot;Codecov status&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/cthoyt/cookiecutter-python-package&quot;&gt;        &lt;img alt=&quot;Cookiecutter template from @cthoyt&quot; src=&quot;https://img.shields.io/badge/Cookiecutter-snekpack-blue&quot; /&gt;    &lt;/a&gt;    &lt;a href='https://github.com/psf/black'&gt;        &lt;img src='https://img.shields.io/badge/code%20style-black-000000.svg' alt='Code style: black' /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/cthoyt/curies/blob/main/.github/CODE_OF_CONDUCT.md&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg&quot; alt=&quot;Contributor Covenant&quot;/&gt;    &lt;/a&gt;    &lt;a href=&quot;https://zenodo.org/badge/latestdoi/519905487&quot;&gt;        &lt;img src=&quot;https://zenodo.org/badge/519905487.svg&quot; alt=&quot;DOI&quot;&gt;    &lt;/a&gt;&lt;/p&gt;Idiomatic conversion between URIs and compact URIs (CURIEs).```pythonfrom curies import Converterconverter = Converter.from_prefix_map({    &quot;CHEBI&quot;: &quot;http://purl.obolibrary.org/obo/CHEBI_&quot;,    &quot;MONDO&quot;: &quot;http://purl.obolibrary.org/obo/MONDO_&quot;,    &quot;GO&quot;: &quot;http://purl.obolibrary.org/obo/GO_&quot;,    # ... and so on    &quot;OBO&quot;: &quot;http://purl.obolibrary.org/obo/&quot;,})&gt;&gt;&gt; converter.compress(&quot;http://purl.obolibrary.org/obo/CHEBI_1&quot;)'CHEBI:1'&gt;&gt;&gt; converter.expand(&quot;CHEBI:1&quot;)'http://purl.obolibrary.org/obo/CHEBI_1'# Unparsable&gt;&gt;&gt; assert converter.compress(&quot;http://example.com/missing:0000000&quot;) is None&gt;&gt;&gt; assert converter.expand(&quot;missing:0000000&quot;) is None```When some URI prefixes are partially overlapping (e.g.,`http://purl.obolibrary.org/obo/GO_` for `GO` and`http://purl.obolibrary.org/obo/` for ``OBO``), the longestURI prefix will always be matched. For example, compressing`http://purl.obolibrary.org/obo/GO_0032571`will return `GO:0032571` instead of `OBO:GO_0032571`.Full documentation is available at [curies.readthedocs.io](https://curies.readthedocs.io).### ChainingThis package implements a faultless chain operation `curies.chain` that is configurable for casesensitivity and fully considers all synonyms.`chain()` prioritizes based on the order given. Therefore, if two prefix mapshaving the same prefix but different URI prefixes are given, the first is retained. The secondis retained as a synonym:```pythonfrom curies import Converter, chainc1 = Converter.from_prefix_map({&quot;GO&quot;: &quot;http://purl.obolibrary.org/obo/GO_&quot;})c2 = Converter.from_prefix_map({&quot;GO&quot;: &quot;https://identifiers.org/go:&quot;})converter = chain([c1, c2])&gt;&gt;&gt; converter.expand(&quot;GO:1234567&quot;)'http://purl.obolibrary.org/obo/GO_1234567'&gt;&gt;&gt; converter.compress(&quot;http://purl.obolibrary.org/obo/GO_1234567&quot;)'GO:1234567'&gt;&gt;&gt; converter.compress(&quot;https://identifiers.org/go:1234567&quot;)'GO:1234567'``` Chain is the perfect tool if you want to override parts of an existing extended prefix map. For example, if you want to use most of the Bioregistry, but you would like to specify a custom URI prefix (e.g., using Identifiers.org), you can do the following:```pythonfrom curies import Converter, chain, get_bioregistry_converteroverrides = Converter.from_prefix_map({&quot;pubmed&quot;: &quot;https://identifiers.org/pubmed:&quot;})bioregistry_converter = get_bioregistry_converter()converter = chain([overrides, bioregistry_converter])&gt;&gt;&gt; converter.expand(&quot;pubmed:1234&quot;)'https://identifiers.org/pubmed:1234'```### StandardizationThe `curies.Converter` data structure supports prefix and URI prefix synonyms.The following example demonstratesusing these synonyms to support standardizing prefixes, CURIEs, and URIs. Note below,the colloquial prefix `gomf`, sometimes used to represent the subspace in the[Gene Ontology (GO)](https://obofoundry.org/ontology/go) corresponding to molecularfunctions, is upgraded to the preferred prefix, `GO`.```pythonfrom curies import Converter, Recordconverter = Converter([    Record(        prefix=&quot;GO&quot;,        prefix_synonyms=[&quot;gomf&quot;, &quot;gocc&quot;, &quot;gobp&quot;, &quot;go&quot;, ...],        uri_prefix=&quot;http://purl.obolibrary.org/obo/GO_&quot;,        uri_prefix_synonyms=[            &quot;http://amigo.geneontology.org/amigo/term/GO:&quot;,            &quot;https://identifiers.org/GO:&quot;,            ...        ],    ),    # And so on    ...])&gt;&gt;&gt; converter.standardize_prefix(&quot;gomf&quot;)'GO'&gt;&gt;&gt; converter.standardize_curie('gomf:0032571')'GO:0032571'&gt;&gt;&gt; converter.standardize_uri('http://amigo.geneontology.org/amigo/term/GO:0032571')'http://purl.obolibrary.org/obo/GO_0032571'```Note: non-standard URIs can still be parsed with `converter.parse_uri()` and compressedinto CURIEs with `converter.compress()`.### Loading Prefix MapsAll loader function work on local file paths, remote URLs, and pre-loadeddata structures. For example, a converter can be instantiated from a web-basedresource in JSON-LD format:```pythonfrom curies import Converterurl = &quot;https://raw.githubusercontent.com/biopragmatics/bioregistry/main/exports/contexts/semweb.context.jsonld&quot;converter = Converter.from_jsonld(url)```Several converters can be instantiated from pre-defined web-based resources:```pythonimport curies# Uses the Bioregistry, an integrative, comprehensive registrybioregistry_converter = curies.get_bioregistry_converter()# Uses the OBO Foundry, a registry of ontologiesobo_converter = curies.get_obo_converter()# Uses the Monarch Initative's project-specific contextmonarch_converter = curies.get_monarch_converter()```### Bulk OperationsApply in bulk to a `pandas.DataFrame` with `Converter.pd_expand` and`Converter.pd_compress`:```pythonimport curiesimport pandas as pddf = pd.read_csv(...)obo_converter = curies.get_obo_converter()obo_converter.pd_compress(df, column=0)obo_converter.pd_expand(df, column=0)# standardization operationsobo_converter.pd_standardize_prefix(df, column=0)obo_converter.pd_standardize_curie(df, column=0)obo_converter.pd_standardize_uri(df, column=0)```Apply in bulk to a CSV file with `Converter.file_expand` and`Converter.file_compress` (defaults to using tab separator):```pythonimport curiespath = ...obo_converter = curies.get_obo_converter()# modifies file in placeobo_converter.file_compress(path, column=0)# modifies file in placeobo_converter.file_expand(path, column=0)```### CLI UsageThis package comes with a built-in CLI for running a resolver web application or a IRI mapper web application:```shell# Run a resolverpython -m curies resolver --host 0.0.0.0 --port 8764 bioregistry# Run a mapperpython -m curies mapper --host 0.0.0.0 --port 8764 bioregistry```The positional argument can be one of the following:1. A pre-defined prefix map to get from the web (bioregistry, go, obo, monarch, prefixcommons)2. A local file path or URL to a prefix map, extended prefix map, or one of several formats. Requires specifying   a `--format`.The framework can be swapped to use Flask (default) or FastAPI with `--framework`. Theserver can be swapped to use Werkzeug (default) or Uvicorn with `--server`. These functionalitiesare also available programmatically, see the docs for more information.## üßëü§ùüßë RelatedOther packages that convert between CURIEs and URIs:- https://github.com/prefixcommons/prefixcommons-py (Python)- https://github.com/prefixcommons/curie-util (Java)- https://github.com/geneontology/curie-util-py (Python)- https://github.com/geneontology/curie-util-es5 (Node.js)- https://github.com/endoli/curie.rs (Rust)## üöÄ InstallationThe most recent release can be installed from[PyPI](https://pypi.org/project/curies/) with:```bash$ pip install curies```This package currently supports both Pydantic v1 and v2. See the[Pydantic migration guide](https://docs.pydantic.dev/2.0/migration/)for updating your code.## üëê ContributingContributions, whether filing an issue, making a pull request, or forking, are appreciated. See[CONTRIBUTING.md](https://github.com/cthoyt/curies/blob/master/.github/CONTRIBUTING.md) for more information on gettinginvolved.## üëã Attribution### üôè AcknowledgementsThis package heavily builds on the [trie](https://en.wikipedia.org/wiki/Trie)data structure implemented in [`pytrie`](https://github.com/gsakkis/pytrie).### ‚öñÔ∏è LicenseThe code in this package is licensed under the MIT License.### üç™ CookiecutterThis package was created with [@audreyfeldroy](https://github.com/audreyfeldroy)'s[cookiecutter](https://github.com/cookiecutter/cookiecutter) package using [@cthoyt](https://github.com/cthoyt)'s[cookiecutter-snekpack](https://github.com/cthoyt/cookiecutter-snekpack) template.## üõ†Ô∏è For Developers&lt;details&gt;  &lt;summary&gt;See developer instructions&lt;/summary&gt;The final section of the README is for if you want to get involved by making a code contribution.### Development InstallationTo install in development mode, use the following:```bash$ git clone git+https://github.com/cthoyt/curies.git$ cd curies$ pip install -e .```### ü•º TestingAfter cloning the repository and installing `tox` with `pip install tox`, the unit tests in the `tests/` folder can berun reproducibly with:```shell$ tox```Additionally, these tests are automatically re-run with each commit in a [GitHub Action](https://github.com/cthoyt/curies/actions?query=workflow%3ATests).### üìñ Building the DocumentationThe documentation can be built locally using the following:```shell$ git clone git+https://github.com/cthoyt/curies.git$ cd curies$ tox -e docs$ open docs/build/html/index.html```The documentation automatically installs the package as well as the `docs`extra specified in the [`setup.cfg`](setup.cfg). `sphinx` pluginslike `texext` can be added there. Additionally, they need to be added to the`extensions` list in [`docs/source/conf.py`](docs/source/conf.py).### üì¶ Making a ReleaseAfter installing the package in development mode and installing`tox` with `pip install tox`, the commands for making a new release are contained within the `finish` environmentin `tox.ini`. Run the following from the shell:```shell$ tox -e finish```This script does the following:1. Uses [Bump2Version](https://github.com/c4urself/bump2version) to switch the version number in the `setup.cfg`,   `src/curies/version.py`, and [`docs/source/conf.py`](docs/source/conf.py) to not have the `-dev` suffix2. Packages the code in both a tar archive and a wheel using [`build`](https://github.com/pypa/build)3. Uploads to PyPI using [`twine`](https://github.com/pypa/twine). Be sure to have a `.pypirc` file configured to avoid the need for manual input at this   step4. Push to GitHub. You'll need to make a release going with the commit where the version was bumped.5. Bump the version to the next patch. If you made big changes and want to bump the version by minor, you can   use `tox -e bumpversion minor` after.&lt;/details&gt;</longdescription>
</pkgmetadata>