<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pydocstringformatter.svg)](https://pypi.python.org/pypi/pydocstringformatter/)[![codecov](https://codecov.io/gh/DanielNoord/pydocstringformatter/branch/main/graph/badge.svg?token=TR61QNMBZG)](https://codecov.io/gh/DanielNoord/pydocstringformatter)[![Tests](https://github.com/DanielNoord/pydocstringformatter/actions/workflows/tests.yaml/badge.svg?branch=main)](https://github.com/DanielNoord/pydocstringformatter/actions/workflows/tests.yaml)[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/DanielNoord/pydocstringformatter/main.svg)](https://results.pre-commit.ci/latest/github/DanielNoord/pydocstringformatter/main)[![Documentation Status](https://readthedocs.org/projects/pydocstringformatter/badge/?version=latest)](https://pydocstringformatter.readthedocs.io/en/latest/?badge=latest)# PydocstringformatterA tool to automatically format Python docstrings to follow recommendations from[`PEP 8`](https://www.python.org/dev/peps/pep-0008/) and[`PEP 257`](https://www.python.org/dev/peps/pep-0257/) (or other supported styleguides.)See [What it does](#what-it-does) for currently supported auto-formatting.### RationaleThis project is heavily inspired by[`docformatter`](https://github.com/PyCQA/docformatter).When this project was started `docformatter` did not meet all of the requirements the[`pylint`](https://github.com/PyCQA/pylint) project had for its docstring formatter andwas no longer actively maintained (this has changed since then). Therefore, somecontributors of `pylint` got together and started working on our own formatter tofulfill our needs.When asked we defined the objective of the tool as:_&quot;A docstring formatter that follows PEP8 and PEP257 but makes some of the more'controversial' elements of the PEPs optional&quot;_See[the original answer](https://github.com/DanielNoord/pydocstringformatter/issues/38).As such, the biggest difference between the two is that `pydocstringformatter` fixessome of the open issues we found in `docformatter`. In general, the output of bothformatters (and any other docstring formatter) should be relatively similar.## How to install```shellpip install pydocstringformatter```## Usage[`Click here`](https://pydocstringformatter.readthedocs.io/en/latest/usage.html) for afull Usage overview.### ConfigurationPydocstringformatter will also read any configuration added to the`[tool.pydocstringformatter]` section of a `pyproject.toml` file.For example:```toml[tool.pydocstringformatter]write = trueexclude = &quot;**/my_dir/**,**/my_other_dir/**&quot;# Or:exclude = [&quot;**/my_dir/**&quot;, &quot;**/my_other_dir/**&quot;]strip-whitespaces = truesplit-summary-body = falsenumpydoc-section-hyphen-length = false```#### StylePydocstringformatter can be configured to use a specific style. The default is `pep257`but we support other styles as well. These can also be used at the same time. Forexample with:```consolepydocstringformatter --style=pep257 --style=numpydoc myfile.py```## Pre-commitPydocstringformatter can also be used as a [pre-commit hook](https://pre-commit.com).Add the following to your `.pre-commit-config.yaml` file:```yaml- repo: https://github.com/DanielNoord/pydocstringformatter  rev: SPECIFY VERSION HERE  hooks:    - id: pydocstringformatter```## What it doesThe following examples show some of the changes pydocstringformatter will apply. For afull overview of all potential changes you can check out the[`Usage`](https://pydocstringformatter.readthedocs.io/en/latest/usage.html) page whichshows an up to date list of all formatters and their description.```python# Bad'''my docstring'''&quot;&quot;&quot;    mymulti-line docstring      &quot;&quot;&quot;&quot;&quot;&quot;my title===========my docstring&quot;&quot;&quot;# Good&quot;&quot;&quot;My docstring.&quot;&quot;&quot;&quot;&quot;&quot;Mymulti-line docstring.&quot;&quot;&quot;&quot;&quot;&quot;My title===========My docstring&quot;&quot;&quot;# With --summary-quotes-same-line# Bad&quot;&quot;&quot;Mymulti-line docstring&quot;&quot;&quot;# Good&quot;&quot;&quot;Mymulti-line docstring&quot;&quot;&quot;```## DevelopmentFor development and contributing guidelines please see[`Development`](https://pydocstringformatter.readthedocs.io/en/latest/development.html).</longdescription>
</pkgmetadata>