<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======================Antgo======================.. image:: https://raw.githubusercontent.com/jianzfb/antgo/master/antgo/resource/static/card.png    :alt: AntgoTarget----------------------Antgo is a machine learning experiment manage platform, which has been integrated deeply with MLTalker.Antgo provides a one-stop model development,  deployment, analyze, auto-optimize and manage environment.Installation----------------------1. (RECOMMENDED) use docker    `docker environment &lt;docker/README.md&gt;`__.2. install from pip    pip install antgo3. install from source    1. git clone https://github.com/jianzfb/antgo.git    2. cd antgo    3. pip install -r requirements.txt    4. python setup.py build_ext installRegister-----------------------Register in `MLTalker &lt;http://www.mltalker.com/&gt;`__... image:: https://raw.githubusercontent.com/jianzfb/antgo/master/antgo/resource/static/register.png    :alt: Antgo and MLTalkerAll user experiment records would be managed by MLTalker in user's personal page.Quick Example-----------------------1.step create mvp code(cifar10 classification task)    antgo create mvp --name=cifar102.step start training process    python3 ./cifar10/main.py --exp=cifar10 --gpu-id=0 --process=train3.step check training log    in ./output/cifar10/output/checkpoint4.step export onnx model    python3 ./cifar10/main.py --exp=cifar10 --checkpoint=./output/cifar10/output/checkpoint/epoch_1500.pth --process=export</longdescription>
</pkgmetadata>