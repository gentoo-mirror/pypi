<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pybliometrics=============Access Elsevier Scopus's API from Python on a large scale.Documentation: https://pybliometrics.readthedocs.ioDevelopment: https://github.com/pybliometrics-dev/pybliometrics.. image:: https://badge.fury.io/py/pybliometrics.svg    :target: https://badge.fury.io/py/pybliometrics.. image:: https://img.shields.io/pypi/pyversions/pybliometrics.svg    :target: https://img.shields.io/pypi/pyversions/pybliometrics.svg.. image:: https://readthedocs.org/projects/pybliometrics/badge/?version=stable    :target: https://readthedocs.org/projects/pybliometrics/badge/?version=stable.. image:: https://img.shields.io/pypi/dm/pybliometrics.svg    :target: https://img.shields.io/pypi/dm/pybliometrics.svg.. image:: https://img.shields.io/pypi/l/pybliometrics.svg    :target: https://img.shields.io/pypi/l/pybliometrics.svg.. image:: https://api.codeclimate.com/v1/badges/a4d7edd206a1252dfcfe/maintainability   :target: https://codeclimate.com/github/pybliometrics-dev/pybliometrics/maintainabilityExample=======.. example-begin.. code:: python    &gt;&gt;&gt; # Document-specific information    &gt;&gt;&gt; from pybliometrics.scopus import AbstractRetrieval    &gt;&gt;&gt; ab = AbstractRetrieval(&quot;10.1016/j.softx.2019.100263&quot;)    &gt;&gt;&gt; ab.title    'pybliometrics: Scriptable bibliometrics using a Python interface to Scopus'    &gt;&gt;&gt; ab.publicationName    'SoftwareX'    &gt;&gt;&gt; ab.authors    [Author(auid=57209617104, indexed_name='Rose M.E.', surname='Rose',     given_name='Michael E.', affiliation='60105007'),     Author(auid=7004212771, indexed_name='Kitchin J.R.', surname='Kitchin',     given_name='John R.', affiliation='60027950')]    &gt;&gt;&gt;     &gt;&gt;&gt; # Author-specific information    &gt;&gt;&gt; from pybliometrics.scopus import AuthorRetrieval    &gt;&gt;&gt; au2 = AuthorRetrieval(ab.authors[1].auid)    &gt;&gt;&gt; au2.h_index    34    &gt;&gt;&gt; au1 = AuthorRetrieval(ab.authors[0].auid)    &gt;&gt;&gt; au1.affiliation_current    [Affiliation(id=60105007, parent=None, type='parent', relationship='author',     afdispname=None, preferred_name='Max Planck Institute for Innovation and Competition',     parent_preferred_name=None, country_code='deu', country='Germany',     address_part='Marstallplatz 1', city='Munich', state='Bayern',     postal_code='80539', org_domain='ip.mpg.de', org_URL='http://www.ip.mpg.de/')]    &gt;&gt;&gt;     &gt;&gt;&gt; # Affiliation information    &gt;&gt;&gt; from pybliometrics.scopus import AffiliationRetrieval    &gt;&gt;&gt; aff1 = AffiliationRetrieval(au1.affiliation_current[0].id)    &gt;&gt;&gt; aff1.author_count    98.. example-endInstallation============.. installation-beginInstall the stable version from PyPI:.. code-block:: bash    pip install pybliometricsor the development version from the GitHub repository (requires git on your system):.. code-block:: bash    pip install git+https://github.com/pybliometrics-dev/pybliometrics.. installation-endCitation========If pybliometrics helped you getting data for research, please cite our corresponding paper:* Rose, Michael E. and John R. Kitchin: &quot;`pybliometrics: Scriptable bibliometrics using a Python interface to Scopus &lt;./meta/1-s2.0-S2352711019300573-main.pdf&gt;`_&quot;, SoftwareX 10 (2019) 100263.Citing the paper helps the development of pybliometrics, because it justifies funneling resources into the development.  It also signals that you obtained data from Scopus in a transparent and replicable way.Change log==========Please see `CHANGES.rst &lt;./meta/CHANGES.rst&gt;`_.Contributing============Please see `CONTRIBUTING.rst &lt;CONTRIBUTING.rst&gt;`_. For a list of contributors see`AUTHORS.rst &lt;./meta/AUTHORS.rst&gt;`_.License=======MIT License; see `LICENSE &lt;LICENSE&gt;`_.</longdescription>
</pkgmetadata>