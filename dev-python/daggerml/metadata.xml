<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dagger-ML Python Library## Prerequisites*pipx*If [pipx](https://pypa.github.io/pipx/) is not installed, first do that.*hatch*Then install [hatch](https://hatch.pypa.io/latest/) via: `pipx install hatch`.## Configuration```bash# helppython -m daggerml --help# configure global API endpointpython -m daggerml configure \  --global \  --profile ${DML_PROFILE} \ # optional  --api-endpoint https://api.${DML_ZONE}-${AWS_REGION}.${DOMAIN}# configure API keypython -m daggerml login \  --profile ${DML_PROFILE} \ # optional  --username ${USERNAME}# configure group ID for local projectpython -m daggerml configure --group-id ${DML_GROUP_ID}``````bash# bash command completionpip install argcomplete# enable completion for dml in this shelleval &quot;$(register-python-argcomplete dml)&quot;# enable completion for dml via bashrccat &lt;&lt;'EOT' &gt;&gt; ~/.bashrceval &quot;$(register-python-argcomplete dml)&quot;EOT# or see: https://kislyuk.github.io/argcomplete/#activating-global-completion```## UsageYou currently need `AWS_DEFAULT_REGION` and `DML_ZONE` environment variablesset. Then you can run `python bootstrap-docker.py`, for instance.`bootstrap-docker.py` sets up the docker-build func, so you can now run dockerstuff in your dags (e.g. as we do in the docs/examples/ directory).## Run Locally```bash# Start local postgres:sudo systemctl start postgresql# Connect to local postgres:psql -h localhost postgres postgres# Start local DML API server:python infra/lib/api/server.py# Run dag locallyDML_LOCAL_DB=1 python mydag.py```## DocsTo build the docs, first make sure `bootstrap-docker.py` has been run, thenrun: `hatch run docs:build`To serve the docs: `hatch run docs:serve`## TestsTo run the tests: `hatch run test:cov`</longdescription>
</pkgmetadata>