<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|Travis|_ |Coveralls|_ |Docs|_ |PyPI|_.. |Travis| image:: https://api.travis-ci.org/Simplistix/errorhandler.svg?branch=master.. _Travis: https://travis-ci.org/Simplistix/errorhandler.. |Coveralls| image:: https://coveralls.io/repos/Simplistix/errorhandler/badge.svg?branch=master.. _Coveralls: https://coveralls.io/r/Simplistix/errorhandler?branch=master.. |Docs| image:: https://readthedocs.org/projects/errorhandler/badge/?version=latest.. _Docs: http://errorhandler.readthedocs.org/en/latest/.. |PyPI| image:: https://badge.fury.io/py/errorhandler.svg.. _PyPI: https://badge.fury.io/py/errorhandlerErrorHandler============This is a handler for the python standard logging framework that canbe used to tell whether messages have been logged at or above acertain level.This can be useful when wanting to ensure that no errors have beenlogged before committing data back to a database.As an example, first, you set up the error handler:&gt;&gt;&gt; from errorhandler import ErrorHandler&gt;&gt;&gt; e = ErrorHandler()Then you can log and check the handler at any point to see if it hasbeen triggered:&gt;&gt;&gt; e.firedFalse&gt;&gt;&gt; from logging import getLogger&gt;&gt;&gt; logger = getLogger()&gt;&gt;&gt; logger.error('an error')&gt;&gt;&gt; e.firedTrueYou can use the `fired` attribute to only perform actions when noerrors have been logged:&gt;&gt;&gt; if e.fired:...   print &quot;Not updating files as errors have occurred&quot;Not updating files as errors have occurredInstallation============Do the following in your virtualenv::  pip install errorhandlerDocumentation=============The latest documentation can also be found at:http://errorhandler.readthedocs.org/en/latest/Licensing=========Copyright (c) 2008-2015 Simplistix Ltd, 2016 Chris Withers.See docs/license.txt for details.</longdescription>
</pkgmetadata>