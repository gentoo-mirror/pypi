<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Flytekit whylogs Pluginwhylogs is an open source library for logging any kind of data. With whylogs,you are able to generate summaries of datasets (called whylogs profiles) whichcan be used to:- Create data constraints to know whether your data looks the way it should- Quickly visualize key summary statistics about a dataset- Track changes in a dataset over time```bashpip install flytekitplugins-whylogs```To generate profiles, you can add a task like the following:```pythonimport whylogs as whyfrom whylogs.core import DatasetProfileViewimport pandas as pdfrom flytekit import task@taskdef profile(df: pd.DataFrame) -&gt; DatasetProfileView:    result = why.log(df) # Various overloads for different common data types exist    profile_view = result.view()    return profile```&gt;**NOTE:** You'll be passing around `DatasetProfileView` from tasks, not `DatasetProfile`.## Validating DataA common step in data pipelines is data validation. This can be done in`whylogs` through the constraint feature. You'll be able to create failure tasksif the data in the workflow doesn't conform to some configured constraints, likemin/max values on features, data types on features, etc.```pythonfrom whylogs.core.constraints.factories import greater_than_number, mean_between_range@taskdef validate_data(profile_view: DatasetProfileView):    builder = ConstraintsBuilder(dataset_profile_view=profile_view)    builder.add_constraint(greater_than_number(column_name=&quot;my_column&quot;, number=0.14))    builder.add_constraint(mean_between_range(column_name=&quot;my_other_column&quot;, lower=2, upper=3))    constraint = builder.build()    valid = constraint.validate()    if valid is False:        print(constraint.report())        raise Exception(&quot;Invalid data found&quot;)```If you want to learn more about whylogs, check out our [example notebooks](https://github.com/whylabs/whylogs/tree/mainline/python/examples).</longdescription>
</pkgmetadata>