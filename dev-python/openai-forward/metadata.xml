<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**中文** | [**English**](./README_EN.md)&lt;h1 align=&quot;center&quot;&gt;    &lt;br&gt;    OpenAI Forward    &lt;br&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;    &lt;b&gt; OpenAI API 接口转发服务 &lt;br/&gt;    The fastest way to deploy openai api forwarding &lt;/b&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/openai-forward/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/openai-forward?color=brightgreen&quot; alt=&quot;PyPI version&quot; &gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/beidongjiedeguang/openai-forward/blob/main/LICENSE&quot;&gt;        &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/beidongjiedeguang/openai-forward.svg?color=blue&amp;style=flat-square&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/beidongjiedeguang/openai-forward/releases&quot;&gt;        &lt;img alt=&quot;Release (latest by date)&quot; src=&quot;https://img.shields.io/github/v/release/beidongjiedeguang/openai-forward&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/beidongjiedeguang/openai-forward&quot;&gt;        &lt;img alt=&quot;GitHub repo size&quot; src=&quot;https://img.shields.io/github/repo-size/beidongjiedeguang/openai-forward&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://hub.docker.com/r/beidongjiedeguang/openai-forward&quot;&gt;        &lt;img alt=&quot;docer image size&quot; src=&quot;https://img.shields.io/docker/image-size/beidongjiedeguang/openai-forward?style=flat&amp;label=docker image&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/beidongjiedeguang/openai-forward/actions/workflows/ci.yml&quot;&gt;        &lt;img alt=&quot;tests&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/beidongjiedeguang/openai-forward/ci.yml?label=tests&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypistats.org/packages/openai-forward&quot;&gt;        &lt;img alt=&quot;pypi downloads&quot; src=&quot;https://img.shields.io/pypi/dm/openai_forward&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/beidongjiedeguang/openai-forward&quot;&gt;        &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/beidongjiedeguang/openai-forward/branch/dev/graph/badge.svg&quot;&gt;    &lt;/a&gt;&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;[功能](#功能) |[部署指南](#部署指南) |[应用](#应用) |[配置选项](#配置选项) |[聊天日志](#聊天日志)[![Deploy on Railway](https://railway.app/button.svg)](https://railway.app/template/tejCum?referralCode=U0-kXv)  [![Deploy to Render](https://render.com/images/deploy-to-render-button.svg)](https://render.com/deploy?repo=https://github.com/beidongjiedeguang/openai-forward)&lt;/div&gt;本项目用于解决一些地区无法直接访问OpenAI的问题，将该服务部署在可以正常访问OpenAI API的(云)服务器上，通过该服务转发OpenAI的请求。即搭建反向代理服务; 允许输入多个OpenAI API-KEY 组成轮询池; 可自定义二次分发api key.---由本项目搭建的长期代理地址：&gt; https://api.openai-forward.com  ## 功能**基础功能**- [x] 支持转发OpenAI所有接口- [x] 支持流式响应- [x] 支持指定转发路由前缀- [x] docker部署- [x] pip 安装部署- [x] cloudflare 部署- [x] ~~Vercel一键部署(不建议)~~- [x] Railway 一键部署- [x] Render 一键部署**高级功能**- [x] 允许输入多个openai api key 组成轮询池- [x] 自定义 转发api key (见[高级配置](#高级配置))- [x] 实时记录聊天记录(包括流式响应的聊天内容)## 部署指南[部署文档](deploy.md)提供以下几种部署方式  **有海外vps方案**1. [pip 安装部署](deploy.md#pip部署) (推荐)2. [Docker部署](deploy.md#docker部署) (推荐)   &gt; https://api.openai-forward.com**无vps免费部署方案**1. [一键Vercel部署](deploy.md#vercel-一键部署) (不推荐)   &gt; ~~https://vercel.openai-forward.com~~2. [cloudflare部署](deploy.md#cloudflare-部署) (推荐)   &gt; https://cloudflare.openai-forward.com3. [Railway部署](deploy.md#Railway-一键部署)   &gt; https://railway.openai-forward.com4. [Render一键部署](deploy.md#render-一键部署) (较推荐)   &gt; https://render.openai-forward.com## 应用### [聊天应用](https://chat.beidongjiedeguang.top)基于开源项目[ChatGPT-Next-Web](https://github.com/Yidadaa/ChatGPT-Next-Web)搭建自己的chatgpt服务  替换docker启动命令中的 `BASE_URL`为我们自己搭建的代理服务地址&lt;details markdown=&quot;1&quot;&gt;&lt;summary&gt;Click for more details&lt;/summary&gt;  ```bash docker run -d \    -p 3000:3000 \    -e OPENAI_API_KEY=&quot;sk-******&quot; \    -e BASE_URL=&quot;https://api.openai-forward.com&quot; \    -e CODE=&quot;kunyuan&quot; \    yidadaa/chatgpt-next-web ``` 这里部署了一个，供大家轻度使用:  https://chat.beidongjiedeguang.top , 访问密码: `kunyuan`&lt;/details&gt;### 在代码中使用**Python**```diff  import openai+ openai.api_base = &quot;https://api.openai-forward.com/v1&quot;  openai.api_key = &quot;sk-******&quot;```&lt;details markdown=&quot;1&quot;&gt;  &lt;summary&gt;More Examples&lt;/summary&gt;**JS/TS**```diff  import { Configuration } from &quot;openai&quot;;    const configuration = new Configuration({+ basePath: &quot;https://api.openai-forward.com/v1&quot;,  apiKey: &quot;sk-******&quot;,  });```**gpt-3.5-turbo**```bashcurl https://api.openai-forward.com/v1/chat/completions \  -H &quot;Content-Type: application/json&quot; \  -H &quot;Authorization: Bearer sk-******&quot; \  -d '{    &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,    &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]  }'```**Image Generation (DALL-E)**```bashcurl --location 'https://api.openai-forward.com/v1/images/generations' \--header 'Authorization: Bearer sk-******' \--header 'Content-Type: application/json' \--data '{    &quot;prompt&quot;: &quot;A photo of a cat&quot;,    &quot;n&quot;: 1,    &quot;size&quot;: &quot;512x512&quot;}'```&lt;/details&gt;## 配置选项配置的设置方式支持两种  一种为在命令行中执行`openai-forward run`的运行参数(如`--port=8000`)中指定;  另一种为读取环境变量的方式指定。### 命令行参数可通过 `openai-forward run --help` 查看&lt;details markdown=&quot;1&quot;&gt;  &lt;summary&gt;Click for more details&lt;/summary&gt;**`openai-forward run`参数配置项**| 配置项 | 说明                |          默认值           ||-----------------|-------------------|:----------------------:|| --port | 服务端口号             |          8000          || --workers | 工作进程数             |           1            || --base_url | 同 OPENAI_BASE_URL | https://api.openai.com || --api_key | 同 OPENAI_API_KEY  |         `None`         || --forward_key | 同 FORWARD_KEY     |         `None`         || --route_prefix | 同 ROUTE_PREFIX    |          `None`          || --log_chat | 同 LOG_CHAT        |        `False`         |&lt;/details&gt;### 环境变量配置项支持从运行目录下的`.env`文件中读取&lt;details markdown=&quot;1&quot;&gt;  &lt;summary&gt;Click for more details&lt;/summary&gt;| 环境变量            | 说明                                                                                                                                |           默认值            ||-----------------|-----------------------------------------------------------------------------------------------------------------------------------|:------------------------:|| OPENAI_BASE_URL  | 默认 openai官方 api 地址                                                                                                                |        https://api.openai.com           || OPENAI_API_KEY  | 默认openai api key，支持多个默认api key, 以 `sk-` 开头， 以空格分割                                                                                 |            无             || FORWARD_KEY     | 允许调用方使用该key代替openai api key，支持多个forward key, 以空格分割; 如果设置了OPENAI_API_KEY，而没有设置FORWARD_KEY, 则客户端调用时无需提供密钥, 此时出于安全考虑不建议FORWARD_KEY置空 |            无             || ROUTE_PREFIX    | 路由前缀                                                                                                                              |            无             || LOG_CHAT        | 是否记录聊天内容                                                                                                                          |         `false`          |&lt;/details&gt;## 高级配置**设置api_key为自己设置的forward key**  需要配置 OPENAI_API_KEY 和 FORWARD_KEY, 例如&lt;details markdown=&quot;1&quot;&gt;  &lt;summary&gt;Click for more details&lt;/summary&gt;```bashOPENAI_API_KEY=sk-*******FORWARD_KEY=fk-****** # 这里fk-token由我们自己定义```这里我们配置了FORWARD_KEY为`fk-******`, 那么后面客户端在调用时只需设置OPENAI_API_KEY为我们自定义的`fk-******` 即可。  这样的好处是在使用一些需要输入OPENAI_API_KEY的第三方应用时，我们可以使用`fk-******`搭配代理服务使用（如下面的例子）而无需担心OPENAI_API_KEY被泄露。  并且可以对外分发`fk-******`**用例:**```bashcurl https://api.openai-forward.com/v1/chat/completions \  -H &quot;Content-Type: application/json&quot; \  -H &quot;Authorization: Bearer fk-******&quot; \  -d '{    &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,    &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]  }'```**Python**```diff  import openai+ openai.api_base = &quot;https://api.openai-forward.com/v1&quot;- openai.api_key = &quot;sk-******&quot;+ openai.api_key = &quot;fk-******&quot;```**Web application**```bash docker run -d \    -p 3000:3000 \    -e OPENAI_API_KEY=&quot;fk-******&quot; \    -e BASE_URL=&quot;https://api.openai-forward.com&quot; \    -e CODE=&quot;&lt;your password&gt;&quot; \    yidadaa/chatgpt-next-web ``` &lt;/details&gt;## 聊天日志默认不记录聊天日志，若要开启需设置环境变量`LOG_CHAT=true`&lt;details markdown=&quot;1&quot;&gt;  &lt;summary&gt;Click for more details&lt;/summary&gt;保存路径在当前目录下的`Log/chat.log`路径中。  记录格式为```text{'messages': [{'user': 'hi'}], 'model': 'gpt-3.5-turbo', 'forwarded-for': '', 'uid': '467a17ec-bf39-4b65-9ebd-e722b3bdd5c3'}{'assistant': 'Hello! How can I assist you today?', 'uid': '467a17ec-bf39-4b65-9ebd-e722b3bdd5c3'}{'messages': [{'user': 'Hello!'}], 'model': 'gpt-3.5-turbo', 'forwarded-for': '', 'uid': 'f844d156-e747-4887-aef8-e40d977b5ee7'}{'assistant': 'Hi there! How can I assist you today?', 'uid': 'f844d156-e747-4887-aef8-e40d977b5ee7'}```转换为`json`格式：```bashopenai-forward convert```得到`chat.json`：```json[    {        &quot;forwarded-for&quot;: &quot;&quot;,        &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,        &quot;messages&quot;: [            {                &quot;user&quot;: &quot;hi&quot;            }        ],        &quot;assistant&quot;: &quot;Hello there! How can I assist you today?&quot;    },    {        &quot;forwarded-for&quot;: &quot;&quot;,        &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,        &quot;messages&quot;: [            {                &quot;user&quot;: &quot;Hello!&quot;            }        ],        &quot;assistant&quot;: &quot;Hi there! How can I assist you today?&quot;    }]```&lt;/details&gt;## Backer and Sponsor&lt;a href=&quot;https://www.jetbrains.com/?from=beidongjiedeguang/openai-forward&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;.github/images/jetbrains.svg&quot; width=&quot;100px&quot; height=&quot;100px&quot;&gt;&lt;/a&gt;## LicenseOpenAI-Forward is licensed under the [MIT](https://opensource.org/license/mit/) license.</longdescription>
</pkgmetadata>