<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Validata UI[![PyPI](https://img.shields.io/pypi/v/validata-ui.svg)](https://pypi.python.org/pypi/validata-ui)Validata user interface## UsageYou can use the online instance of Validata:- user interface: https://go.validata.fr/- API: https://go.validata.fr/api/v1/- API docs: https://go.validata.fr/api/v1/apidocsSeveral software services compose the Validata stack. The recommended way to run it on your computer is to use Docker. Otherwise you can install each component of this stack manually, for example if you want to contribute by developing a new feature or fixing a bug.## Run with DockerRead instructions at https://git.opendatafrance.net/validata/validata-docker## Develop### InstallWe recommend using `venv` standard package:```bashpython -m venv .venvsource .venv/bin/activate```Install the project dependencies (using last release of validata-core project):```bashpip install -r requirements.txtpip install -r requirements-dev.txtpip install -e .```To use a specific distant git development branch of validata-core project:```bashpip install -r requirements.txtpip install -r requirements-dev.txtpip uninstall validata_corepip install git+https://git.opendatafrance.net/validata/validata-core.git@&lt;development-branch-name&gt;pip install -e .```PDF report generation uses:- either [Headless Chromium](https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md) (default)```bashapt install -y chromium```- or [browserless.io](https://www.browserless.io/) pdf service  (see [.env.example](.env.example) to configure this option)### Configure```bashcp .env.example .env```Customize the configuration variables in `.env` file.Do not commit `.env`.### ServeStart the web server...```bash./serve.sh```... then open http://localhost:5601/## TestUI tests can be launched using [Cypress tool](https://www.cypress.io/)## Release a new version- Update version in [setup.py](setup.py) and [CHANGELOG.md](CHANGELOG.md) files- Commit changes using `Release` as commit message- Create git tag (starting with &quot;v&quot; for the release)- Git push: `git push &amp;&amp; git push --tagss`- Check that container image is well built and pypi package is created ([validata-ui pipelines](https://git.opendatafrance.net/validata/validata-ui/-/pipelines))</longdescription>
</pkgmetadata>