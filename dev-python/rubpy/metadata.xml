<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;github.address&quot;&gt;        &lt;img src=&quot;https://upcdn.io/W142hJk/thumbnail/demo/4mrDXtYPJA.png.crop&quot; alt=&quot;Rubpy&quot; width=&quot;128&quot;&gt;    &lt;/a&gt;    &lt;br&gt;    &lt;b&gt;Rubika API Framework for Python&lt;/b&gt;    &lt;br&gt;    &lt;a href=&quot;https://github.com/shayanheidari01/rubika&quot;&gt;        Homepage    &lt;/a&gt;    •    &lt;a href=&quot;https://github.com/shayanheidari01/rubika/raw/master/docs/rubpy-documents.pdf&quot;&gt;        Documentation    &lt;/a&gt;    •    &lt;a href=&quot;https://pypi.org/project/rubpy/#history&quot;&gt;        Releases    &lt;/a&gt;    •    &lt;a href=&quot;https://t.me/rubika_library&quot;&gt;        News    &lt;/a&gt;&lt;/p&gt;## Rubpy&gt; Elegant, modern and asynchronous Rubika API framework in Python for users and bots### Bots Examples```pythonfrom rubpy import Botapp = Bot('token')async def my_bot(bot):    me = await bot.getMe()    print(me)app.run(my_bot)```**OR**```pythonfrom rubpy import Botapp = Bot('token')async def my_bot(bot):    me = await bot.sendMessage('chat_id', 'text')    print(me)app.run(my_bot)```### Accounts``` pythonfrom rubpy import Client, Methods, Messageapp = Client(    'MY-AUTH',    &quot;my_guid&quot;)@app.MessageUpdatesasync def my_bot(bot: Methods, message: Message):    await message.reply('``Hello`` __from__ **Rubpy**!')```**Another example:**``` pythonfrom rubpy import Client, Methodsapp = Client(    &quot;my_account_auth&quot;,    &quot;my_account_guid&quot;)async def my_bot(bot: Methods):    await bot.sendText('object_guid', '``Hello`` __from__ **Rubpy**!')app.run(my_bot)```**Rubpy** is a modern, elegant and asynchronous framework. It enables you to easily interact with the main Rubika API through a user account (custom client) or a botidentity (bot API alternative) using Python.### Key Features- **Ready**: Install Rubpy with pip and start building your applications right away.- **Easy**: Makes the Rubika API simple and intuitive, while still allowing advanced usages.- **Elegant**: Low-level details are abstracted and re-presented in a more convenient way.- **Fast**: Boosted up by pycryptodome, a high-performance cryptography library written in C.- **Async**: Fully asynchronous (also usable synchronously if wanted, for convenience).- **Powerful**: Full access to Rubika's API to execute any official client action and more.### Installing``` bashpip3 install rubpy==5.2.2```</longdescription>
</pkgmetadata>