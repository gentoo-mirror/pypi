<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- SPDX-License-Identifier: CC-BY-SA-4.0 --&gt;&lt;!-- SPDX-FileCopyrightText: 2023 Phil Howard &lt;phil@gadgetoid.com&gt; --&gt;# gpiodThese are the official Python bindings for [libgpiod](https://git.kernel.org/pub/scm/libs/libgpiod/libgpiod.git/about/).The gpiod library has been vendored into this package for your convenience andthis version of gpiod is independent from your system package.Binary wheels are not provided. The source package requires python3-dev.## RationaleThe new character device interface guarantees all allocated resources arefreed after closing the device file descriptor and adds several new featuresthat are not present in the obsolete sysfs interface (like event polling,setting/reading multiple values at once or open-source and open-drain GPIOs).Unfortunately interacting with the linux device file can no longer be doneusing only standard command-line tools. This is the reason for creating alibrary encapsulating the cumbersome, ioctl-based kernel-userspace interactionin a set of convenient functions and opaque data structures.## Breaking ChangesAs of v2.0.2 we have replaced the unofficial, pure-Python &quot;gpiod&quot;. The officialgpiod is not backwards compatible.You should ensure you specify at least v2.0.2 for the official API. Versions1.5.4 and prior are the deprecated, unofficial, pure-Python bindings.## InstallingYou will need `python3-dev`, on Debian/Ubuntu you can install this with:```sudo apt install python3-dev```And then install gpiod with:```pip install gpiod```You can optionally depend upon your system gpiod by installing with:```LINK_SYSTEM_LIBGPIOD=1 pip install gpiod```If you still need the deprecated pure-Python bindings, install with:```pip install gpiod==1.5.4```## ExamplesCheck a GPIO chip character device exists:```pythonimport gpiodgpiod.is_gpiochip_device(&quot;/dev/gpiochip0&quot;)```Get information about a GPIO chip character device:```pythonimport gpiodwith gpiod.Chip(&quot;/dev/gpiochip0&quot;) as chip:    info = chip.get_info()    print(f&quot;{info.name} [{info.label}] ({info.num_lines} lines)&quot;)```Blink an LED, or toggling a GPIO line:```pythonimport timefrom gpiod.line import Direction, ValueLINE = 5with gpiod.request_lines(    &quot;/dev/gpiochip0&quot;,    consumer=&quot;blink-example&quot;,    config={        LINE: gpiod.LineSettings(            direction=Direction.OUTPUT, output_value=Value.ACTIVE        )    },) as request:    while True:        request.set_value(LINE, Value.ACTIVE)        time.sleep(1)        request.set_value(LINE, Value.INACTIVE)        time.sleep(1)```</longdescription>
</pkgmetadata>