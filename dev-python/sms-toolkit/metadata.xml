<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sms-toolkit===========A collection of tools used to send SMS messages... image:: https://github.com/chrisconlon-klaviyo/sms-toolkit/workflows/Tests/badge.svg   :target: https://github.com/chrisconlon-klaviyo/sms-toolkit/actions?query=workflow%3ATests+event%3Apush+branch%3Amaster   :alt: Test StatusTools-----Message Profiling~~~~~~~~~~~~~~~~~Accepts a raw SMS message string and determines its most efficientencoding, then determines how many segments would be used to send it.Largely based on `this tool`_ (code found `here`_).The segmenting logic for GSM-7 and UCS-2 encoding follows `these standards`_Here is an example with simple ascii input, which will be profiled as GSM-7 format:.. code-block:: python    from sms_toolkit.messages.profiling import profile_message    profile_message(&quot;Sup chonus&quot;)    '''    # Outputs -    {       &quot;num_segments&quot;: 1,       &quot;segments&quot;: [           {               &quot;message&quot;: &quot;Sup chonus&quot;,               &quot;total_segment_length&quot;: 10,               &quot;unicode_character_list&quot;: [                   &quot;S&quot;, &quot;u&quot;, &quot;p&quot;, &quot; &quot;, &quot;c&quot;, &quot;h&quot;, &quot;o&quot;, &quot;n&quot;, &quot;u&quot;, &quot;s&quot;               ],               &quot;byte_groups&quot;: [                   [83], [117], [112], [32], [99], [104], [111], [110], [117], [115]               ]           }       ],       &quot;message_length&quot;: 10,       &quot;max_segment_size&quot;: 160    }    '''Here is an example with non-ascii input, containing characters from `BMP`_ (represented as 2 bytes byte-group)and non-BMP (representing as 4 bytes in the byte-group) ranges which will be profiled as UCS-2 format:.. code-block:: python    from sms_toolkit.messages.profiling import profile_message    profile_message(&quot;fuel â›½ fiâ“‡e ðŸ”¥ emojis ðŸ˜‰&quot;)    '''    # Outputs -    {        'num_segments': 1,        'segments': [            {                'message': 'fuel â›½ fiâ“‡e ðŸ”¥ emojis ðŸ˜‰',                'unicode_character_list': [                    'f', 'u', 'e', 'l', ' ', 'â›½', ' ', 'f', 'i', 'â“‡', 'e', ' ', 'ðŸ”¥', ' ', 'e', 'm', 'o', 'j', 'i', 's', ' ', 'ðŸ˜‰'                ],                'byte_groups': [                    [0, 102], [0, 117], [0, 101], [0, 108], [0, 32], [38, 253], [0, 32], [0, 102], [0, 105], [36, 199], [0, 101], [0, 32], [216, 61, 221, 37], [0, 32], [0, 101], [0, 109], [0, 111], [0, 106], [0, 105], [0, 115], [0, 32], [216, 61, 222, 9]                ],                'total_segment_length': 24            }        ],        'message_length': 24,        'max_segment_size': 70    }    '''Message Truncating~~~~~~~~~~~~~~~~~~Accepts a raw SMS message string, and the maximum length and truncates it. This also detects the right encodingand adjusts the character length accordingly... code-block:: python    from sms_toolkit import truncate_message    truncate_message(&quot;fuel â›½ fiâ“‡e ðŸ”¥ emojis ðŸ˜‰&quot;, 22)    '''    # Outputs -    'fuel â›½ fiâ“‡e ðŸ”¥ emojis '    '''Testing-------This library needs is tested against python 2 and 3. Both interpreters need to be available to tox::  pyenv versions  # shows all versions available  pyenv local 2.7.* 3.7.*Run tests:``tox .``.. _this tool: http://chadselph.github.io/smssplit/.. _here: https://github.com/chadselph/smssplit/blob/master/js/smssplit.js.. _these standards: https://en.wikipedia.org/wiki/SMS#Message_size.. _BMP: https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_PlaneAcknowledgements----------------Klaviyo has adapted the original `vobject &lt;https://eventable.github.io/vobject/&gt;`_ packaged in to this package. We haveonly kept the vcard class from the original package, removing calendar functionality, etc.</longdescription>
</pkgmetadata>