<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![logo.png](docs%2Fassets%2Flogo.png)*Introspect Python type annotation, with ease.*![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/nrbnlulu/typingref/tests.yml?style=for-the-badge)[![PyPI](https://img.shields.io/pypi/v/typingref?style=for-the-badge)](https://pypi.org/project/typingref/)[![Codecov](https://img.shields.io/codecov/c/github/nrbnlulu/typingref?style=for-the-badge)](https://app.codecov.io/gh/nrbnlulu/typingref)Modern Python libraries often use type annotations,this library is intended to help &quot;de/serialize&quot; Python type hints to somethingyou can work with.### Sample Usage:```pythonfrom typingref import TypeHinterfrom typing import Unionclass MyType:    ...def foo(p: Union[int, str, float]) -&gt; MyType:    ...p_type = TypeHinter.from_annotation(foo.__annotations__['p'])if p_type.is_union():    for t in p_type.of_type:        ...assert Union[int, str, float] == p_type.as_annotation()```</longdescription>
</pkgmetadata>