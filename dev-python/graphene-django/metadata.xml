<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Please read`UPGRADE-v2.0.md &lt;https://github.com/graphql-python/graphene/blob/master/UPGRADE-v2.0.md&gt;`__to learn how to upgrade to Graphene ``2.0``.--------------|Graphene Logo| Graphene-Django |Build Status| |PyPI version| |Coverage Status|===============================================================================A `Django &lt;https://www.djangoproject.com/&gt;`__ integration for`Graphene &lt;http://graphene-python.org/&gt;`__.Documentation-------------`Visit the documentation to get started! &lt;https://docs.graphene-python.org/projects/django/en/latest/&gt;`__Quickstart----------For installing graphene, just run this command in your shell.. code:: bash    pip install &quot;graphene-django&gt;=3&quot;Settings~~~~~~~~.. code:: python    INSTALLED_APPS = (        # ...        'graphene_django',    )    GRAPHENE = {        'SCHEMA': 'app.schema.schema' # Where your Graphene schema lives    }Urls~~~~We need to set up a ``GraphQL`` endpoint in our Django app, so we canserve the queries... code:: python    from django.conf.urls import url    from graphene_django.views import GraphQLView    urlpatterns = [        # ...        url(r'^graphql$', GraphQLView.as_view(graphiql=True)),    ]Examples--------Here is a simple Django model:.. code:: python    from django.db import models    class UserModel(models.Model):        name = models.CharField(max_length=100)        last_name = models.CharField(max_length=100)To create a GraphQL schema for it you simply have to write thefollowing:.. code:: python    from graphene_django import DjangoObjectType    import graphene    class User(DjangoObjectType):        class Meta:            model = UserModel    class Query(graphene.ObjectType):        users = graphene.List(User)        @graphene.resolve_only_args        def resolve_users(self):            return UserModel.objects.all()    schema = graphene.Schema(query=Query)Then you can simply query the schema:.. code:: python    query = '''        query {          users {            name,            lastName          }        }    '''    result = schema.execute(query)To learn more check out the following `examples &lt;examples/&gt;`__:-  **Schema with Filtering**: `Cookbook example &lt;examples/cookbook&gt;`__-  **Relay Schema**: `Starwars Relay example &lt;examples/starwars&gt;`__Contributing------------See `CONTRIBUTING.md &lt;CONTRIBUTING.md&gt;`__... |Graphene Logo| image:: http://graphene-python.org/favicon.png.. |Build Status| image:: https://github.com/graphql-python/graphene-django/workflows/Tests/badge.svg   :target: https://github.com/graphql-python/graphene-django/actions.. |PyPI version| image:: https://badge.fury.io/py/graphene-django.svg   :target: https://badge.fury.io/py/graphene-django.. |Coverage Status| image:: https://coveralls.io/repos/graphql-python/graphene-django/badge.svg?branch=master&amp;service=github   :target: https://coveralls.io/github/graphql-python/graphene-django?branch=master</longdescription>
</pkgmetadata>