<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ckanext-usmetadata![Github Actions](https://github.com/GSA/ckanext-usmetadata/actions/workflows/test.yml/badge.svg)[![PyPI version](https://badge.fury.io/py/ckanext-usmetadata.svg)](https://badge.fury.io/py/ckanext-usmetadata)This CKAN Extension expands CKAN to offer a number of custom fields related to the [DCAT-US Schema](https://resources.data.gov/schemas/dcat-us/v1.1/)### InstallationTo install this package, activate CKAN virtualenv (e.g. &quot;source /path/to/virtenv/bin/activate&quot;), then run    (virtenv) 'pip install -e git+https://github.com/gsa/usmetadata#egg=ckanext-usmetadata'    (virtenv) 'python setup.py develop'    Then in your CKAN .ini file, add `usmetadata`to your ckan.plugins line:ckan.plugins = (other plugins here...) usmetadata### RequirementsThis extension is compatible with these versions of CKAN.CKAN version | Compatibility------------ | -------------&lt;=2.8        | no2.9          | yes### DevelopmentYou may also install by cloning the git repo, then running ''python setup.py develop'' from the root of your sourcedirectory, which will install an egg link so that you can modify the code and see results without yest [localhost:5000](http://localhost:5000/).Clean up any containers and volumes.    $ make downOpen a shell to run commands in the container.    $ docker-compose exec ckan bashIf you're unfamiliar with docker-compose, see our[cheatsheet](https://github.com/GSA/datagov-deploy/wiki/Docker-Best-Practices#cheatsheet)and the [official docs](https://docs.docker.com/compose/reference/).For additional make targets, see the help.    $ make help### TestingThey follow the guidelines for [testing CKANextensions](https://docs.ckan.org/en/2.9/extensions/testing-extensions.html#testing-extensions).To run the extension tests, start the containers with `make up`, then:    $ make testLint the code.    $ make lint### Matrix buildsIn order to support multiple versions of CKAN, or even upgrade to new versionsof CKAN, we support development and testing through the `CKAN_VERSION`environment variable.    $ make CKAN_VERSION=2.9 test    ## Credit / CopyingCredit to the original owner of the repo.  Everything here is built on top of the original foundation.</longdescription>
</pkgmetadata>