<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>hid-tools is a set of tools to interact with the kernel's HID subsystem.It can be run directly from the git repository or installed via `pip3install hid-tools`.# InstallationThe `hid-tools` repository does not need to be installed, all tools andkernel tests can be run straight from the git repository, for example thefollowing commands clone the repository and run the `hid-recorder` tool.```$ git clone https://gitlab.freedesktop.org/libevdev/hid-tools$ cd hid-tools$ sudo ./hid-recorder```Where the tools need to be installed, it is recommended to use `pip`:```$ sudo pip3 install .```This installs all tools into the system-wide Python path. hid-tools needsroot access to the `/dev/hidraw` nodes, an installation in the user-specificpaths will not usually work without further commandline tweakingconfiguration.  Removal of the tools works with `pip` as well:```$ pip3 uninstall hid-tools```# Debugging tools for users## hid-recorder`hid-recorder` prints the HID Report Descriptor from a `/dev/hidraw` devicenode and any HID reports coming from that device. The output format can beused with `hid-replay` for debugging. When run without any arguments, thetool prints a list of available devices.```$ sudo hid-recorder```## hid-replay`hid-replay` takes the output from `hid-recorder` and replays it through avirtual HID device that looks exactly like the one recorded. `hid-replay`requires UHID support so make sure `pyudev` is installed.```$ sudo hid-replay recording-file.hid```## hid-decode`hid-decode` takes a HID Report Descriptor and prints a human-readableversion of it. `hid-decode` takes binary report descriptors, strings ofbytes, and other formats.```$ hid-decode /sys/class/input/event5/device/device/report_descriptor```# kernel testsThe `hid-tools` repository contains a number of tests exercising the kernelHID subsystem. The tests are not part of the `pip3` module and must be runfrom the git repository. The most convenient invocation of the tests is bysimply calling `pytest`. The test suite requires UHID support so make sure`pyudev` is installed.```$ git clone https://gitlab.freedesktop.org/libevdev/hid-tools$ cd hid-tools```**Note** If your testing system is running X, please follow the stepsbelow to let X drivers ignore uhid test devices. Otherwise, the X driverwill recognize and handle the test devices, which would interfere withthe kernel tests and the running session.```$ sudo cp tests/91-hid-tools-uhid-test.conf /etc/X11/xorg.conf.d/```Restart your X server**End of Note**```$ sudo pytest-3```See the `pytest` documentation for information on how to run a subset oftests.# hidtools python moduleTechnical limitations require that `hid-tools` ships with a Python modulecalled `hidtools`. This module is **not** to be used by externalapplications.**The hidtools python module does not provide any API stability guarantee.It may change at any time**# License`hid-tools` is licensed under the GPLv2+.</longdescription>
</pkgmetadata>