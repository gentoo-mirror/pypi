<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyConfita: Confita-like for PythonLibrary that ease reading a value from multiple key-value stores/backends with ordered evaluation.## DisclaimerFree implementation of the GO library [Confita](https://github.com/heetch/confita).## Features- Backends/stores supported:  - Environment variables (`EnvBackend`);  - File (YAML format) (`FileBackend`);  - Python dictionary object (`DictBackend`);  - Vault key-value store (`VaultBackend`);  - String parsing (serialized JSON) (`StringBackend`);- Backends evaluation order: directly set by the order of backends in `Confita.backends` list. The last not `None` evaluated value is returned;- Explicit type conversion supported for `str, bool, int, float`;- Case sensitivity option: option to read key with casing variations (uppercased, lowercased).## Quickstart```pythonfrom pyconfita import (    LoggingInterface,    Confita,    EnvBackend,    StringBackend,    DictBackend,    VaultBackend,    FileBackend)dumb_logger = LoggingInterface()c = Confita(    logger=dumb_logger,    backends=[        FileBackend(&quot;/abs/path/vars.yaml&quot;),        DictBackend({&quot;FOO&quot;: &quot;bar&quot;}),        StringBackend(&quot;{'HELLO': 'WORLD'}&quot;),        VaultBackend(dumb_logger, default_key_path=f&quot;path1&quot;),        EnvBackend(),    ],)v = c.get(&quot;FOO&quot;) # At least DictBackend should evaluate it as not Noneassert v is not None# Type should be `str` assert isinstance(v, str)```### Evaluation orderEvaluation is performed in order of the list of backends.Next backend has priority over previous backend to set the value.```pythonimport osfrom pyconfita import (    LoggingInterface,    Confita,    EnvBackend,    DictBackend)dumb_logger = LoggingInterface()os.environ.setdefault(&quot;KEY&quot;, &quot;VALUE_FROM_ENV&quot;)c = Confita(    logger=dumb_logger,    backends=[        DictBackend({            &quot;KEY&quot;: &quot;VALUE&quot;,            &quot;BOOL_1&quot;: &quot;false&quot;,            &quot;BOOL_2&quot;: &quot;true&quot;        }),        EnvBackend(),    ],)assert c.get(&quot;KEY&quot;) == &quot;VALUE_FROM_ENV&quot; # Environment backend overrides previous backends' valuesassert c.get(&quot;BOOL_1&quot;) == &quot;false&quot; # No implicit type conversion assert c.get(&quot;BOOL_2&quot;, type=bool) # Explicit type conversion requested# Reverse evaluation order by reversing list of backendsc = Confita(    logger=dumb_logger,    backends=[        EnvBackend(),        DictBackend({&quot;KEY&quot;: &quot;VALUE&quot;}),    ],)assert c.get(&quot;KEY&quot;) == &quot;VALUE&quot; # Dict backend overrides previous backends' values```### Explicit type conversionType conversion must be explicit. Only `str, bool, int, float` types are supported.Default type is `str`.```pythonfrom pyconfita import (    LoggingInterface,    Confita,    DictBackend)dumb_logger = LoggingInterface()c = Confita(    logger=dumb_logger,    backends=[        DictBackend({            &quot;BOOL_1&quot;: &quot;false&quot;,            &quot;BOOL_2&quot;: &quot;true&quot;        }),    ],)assert c.get(&quot;BOOL_1&quot;) == &quot;false&quot; # No implicit type conversion assert c.get(&quot;BOOL_2&quot;, type=bool) # Explicit type conversion requested```### Case sensitivity```pythonfrom pyconfita import (    LoggingInterface,    Confita,    DictBackend)dumb_logger = LoggingInterface()# Case sensitivity is enabled by defaultc = Confita(    logger=dumb_logger,    backends=[DictBackend({&quot;KEY&quot;: &quot;VALUE&quot;})],)assert c.get(&quot;KEY&quot;) == &quot;VALUE&quot; assert c.get(&quot;key&quot;) == None # Disable case sensitivityc = Confita(    logger=dumb_logger,    backends=[DictBackend({&quot;KEY&quot;: &quot;VALUE&quot;})],    case_sensitive=False)assert c.get(&quot;KEY&quot;) == &quot;VALUE&quot; assert c.get(&quot;key&quot;) == &quot;VALUE&quot; ```</longdescription>
</pkgmetadata>