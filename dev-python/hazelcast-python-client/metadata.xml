<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Hazelcast Python Client=======================.. image:: https://img.shields.io/pypi/v/hazelcast-python-client    :target: https://pypi.org/project/hazelcast-python-client/    :alt: PyPI.. image:: https://img.shields.io/readthedocs/hazelcast    :target: https://hazelcast.readthedocs.io    :alt: Read the Docs.. image:: https://img.shields.io/badge/slack-chat-green.svg    :target: https://slack.hazelcast.com    :alt: Join the community on Slack.. image:: https://img.shields.io/pypi/l/hazelcast-python-client    :target: https://github.com/hazelcast/hazelcast-python-client/blob/master/LICENSE.txt    :alt: License----`Hazelcast &lt;https://hazelcast.com/&gt;`__ is an open-source distributedin-memory data store and computation platform that provides a widevariety of distributed data structures and concurrency primitives.Hazelcast Python client is a way to communicate to Hazelcast clustersand access the cluster data. The client provides a Future-basedasynchronous API suitable for wide ranges of use cases.Installation------------Hazelcast~~~~~~~~~Hazelcast Python client requires a working Hazelcast cluster to run.This cluster handles the storage and manipulation of the user data.A Hazelcast cluster consists of one or more cluster members. Thesemembers generally run on multiple virtual or physical machines and areconnected to each other via the network. Any data put on the cluster ispartitioned to multiple members transparent to the user. It is thereforevery easy to scale the system by adding new members as the data grows.Hazelcast cluster also offers resilience. Should any hardware orsoftware problem causes a crash to any member, the data on that memberis recovered from backups and the cluster continues to operate withoutany downtime.The quickest way to start a single member cluster for developmentpurposes is to use our `Dockerimages &lt;https://hub.docker.com/r/hazelcast/hazelcast/&gt;`__... code:: bash   docker run -p 5701:5701 hazelcast/hazelcast:5.2You can also use our ZIP or TAR`distributions &lt;https://hazelcast.com/open-source-projects/downloads/&gt;`__.Once you have downloaded, you can start the Hazelcast member usingthe ``bin/hz-start`` script.Client~~~~~~.. code:: bash   pip install hazelcast-python-clientOverview--------Usage~~~~~.. code:: python    import hazelcast    # Connect to Hazelcast cluster.    client = hazelcast.HazelcastClient()    # Get or create the &quot;distributed-map&quot; on the cluster.    distributed_map = client.get_map(&quot;distributed-map&quot;)    # Put &quot;key&quot;, &quot;value&quot; pair into the &quot;distributed-map&quot; and wait for    # the request to complete.    distributed_map.set(&quot;key&quot;, &quot;value&quot;).result()    # Try to get the value associated with the given key from the cluster    # and attach a callback to be executed once the response for the    # get request is received. Note that, the set request above was    # blocking since it calls &quot;.result()&quot; on the returned Future, whereas    # the get request below is non-blocking.    get_future = distributed_map.get(&quot;key&quot;)    get_future.add_done_callback(lambda future: print(future.result()))    # Do other operations. The operations below won't wait for    # the get request above to complete.    print(&quot;Map size:&quot;, distributed_map.size().result())    # Shutdown the client.    client.shutdown()If you are using Hazelcast and the Python client on the same machine,the default configuration should work out-of-the-box. However,you may need to configure the client to connect to cluster nodes thatare running on different machines or to customize client properties.Configuration~~~~~~~~~~~~~.. code:: python    import hazelcast    client = hazelcast.HazelcastClient(        cluster_name=&quot;cluster-name&quot;,        cluster_members=[            &quot;10.90.0.2:5701&quot;,            &quot;10.90.0.3:5701&quot;,        ],        lifecycle_listeners=[            lambda state: print(&quot;Lifecycle event &gt;&gt;&gt;&quot;, state),        ]    )    print(&quot;Connected to cluster&quot;)    client.shutdown()Refer to `the documentation &lt;https://hazelcast.readthedocs.io&gt;`__to learn more about supported configuration options.Features---------  Distributed, partitioned and queryable in-memory key-value store   implementation, called **Map**-  Eventually consistent cache implementation to store a subset of the   Map data locally in the memory of the client, called **Near Cache**-  Additional data structures and simple messaging constructs such as   **Set**, **MultiMap**, **Queue**, **Topic**-  Cluster-wide unique ID generator, called **FlakeIdGenerator**-  Distributed, CRDT based counter, called **PNCounter**-  Distributed concurrency primitives from CP Subsystem such as   **FencedLock**, **Semaphore**, **AtomicLong**-  Integration with `Hazelcast Viridian &lt;https://viridian.hazelcast.com/&gt;`__-  Support for serverless and traditional web service architectures with   **Unisocket** and **Smart** operation modes-  Ability to listen to client lifecycle, cluster state, and distributed   data structure events-  and `many   more &lt;https://hazelcast.com/clients/python/#client-features&gt;`__Getting Help------------You can use the following channels for your questions anddevelopment/usage issues:-  `GitHub   repository &lt;https://github.com/hazelcast/hazelcast-python-client/issues/new&gt;`__-  `Documentation &lt;https://hazelcast.readthedocs.io&gt;`__-  `Slack &lt;https://slack.hazelcast.com&gt;`__-  `Google Groups &lt;https://groups.google.com/g/hazelcast&gt;`__-  `Stack   Overflow &lt;https://stackoverflow.com/questions/tagged/hazelcast&gt;`__Contributing------------We encourage any type of contribution in the form of issue reports orpull requests.Issue Reports~~~~~~~~~~~~~For issue reports, please share the following information with us toquickly resolve the problems:-  Hazelcast and the client version that you use-  General information about the environment and the architecture you   use like Python version, cluster size, number of clients, Java   version, JVM parameters, operating system etc.-  Logs and stack traces, if any-  Detailed description of the steps to reproduce the issuePull Requests~~~~~~~~~~~~~Contributions are submitted, reviewed and accepted using the pullrequests on GitHub. For an enhancement or larger feature, pleasecreate a GitHub issue first to discuss.Development^^^^^^^^^^^1. Clone the `GitHub repository   &lt;https://github.com/hazelcast/hazelcast-python-client&gt;`__.2. Run ``python setup.py install`` to install the Python client.If you are planning to contribute:1. Run ``pip install -r requirements-dev.txt`` to install development   dependencies.2. Use `black &lt;https://pypi.org/project/black/&gt;`__ to reformat the code   by running the ``black --config black.toml .`` command.3. Use `mypy &lt;https://pypi.org/project/mypy/&gt;`__ to check type annotations   by running the ``mypy hazelcast`` command.4. Make sure that tests are passing by following the steps described   in the next section.Testing^^^^^^^In order to test Hazelcast Python client locally, you will need thefollowing:-  Java 8 or newer-  MavenFollowing commands starts the tests:.. code:: bash    python run_tests.pyTest script automatically downloads ``hazelcast-remote-controller`` andHazelcast. The script uses Maven to download those.License-------`Apache 2.0 License &lt;LICENSE&gt;`__.Copyright---------Copyright (c) 2008-2023, Hazelcast, Inc.Â All Rights Reserved.Visit `hazelcast.com &lt;https://hazelcast.com&gt;`__ for moreinformation.</longdescription>
</pkgmetadata>