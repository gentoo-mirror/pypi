<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Unit tests](https://github.com/hnesk/browse-ocrd/workflows/Unit%20tests/badge.svg?branch=master)](https://github.com/hnesk/browse-ocrd/actions/workflows/unittest.yml)[![Docker build](https://github.com/hnesk/browse-ocrd/actions/workflows/dockerhub.yml/badge.svg)](https://github.com/hnesk/browse-ocrd/actions/workflows/dockerhub.yml)[![PyPI version](https://badge.fury.io/py/browse-ocrd.svg)](https://badge.fury.io/py/browse-ocrd)# OCR-D BrowserAn extensible viewer for [OCR-D](https://ocr-d.de/) [mets.xml](https://ocr-d.de/en/spec/mets) files * [Screenshot](#screenshot) * [Features](#features) * [Installation](#installation)    * [Native](#native-tested-on-ubuntu-18042004)       * [From source](#from-source)       * [Via pip](#via-pip)    * [Docker](#docker) * [Usage](#usage)    * [Native GUI](#native-gui)    * [Docker service](#docker-service) * [Configuration](#configuration)    * [Configuration file locations](#configuration-file-locations)    * [Configuration file syntax](#configuration-file-syntax) ## Screenshot![OCRD Browser with Page and Xml view](docs/screenshot.png)## Features- Browse fileGrps and pages, arranging views next to each other for comparison- PageView: Show original or derived page images with [PAGE-XML](https://ocr-d.de/en/spec/page) annotations overlay, similar to [PageViewer](https://github.com/PRImA-Research-Lab/prima-page-viewer)- ImageView: Show original or derived images (`AlternativeImage` on any level of the structural hierarchy)- ImageView: Show multiple images at once for different pages (horizontally) or different segments (vertically), zooming freely- XmlView: Show raw [PAGE-XML](https://ocr-d.de/en/spec/page) with syntax highlighting, open with [PageViewer](https://github.com/PRImA-Research-Lab/prima-page-viewer)- TextView: Show concatenated [PAGE-XML](https://ocr-d.de/en/spec/page) text annotation- DiffView: Show a simple diff comparison between text annotations from different fileGrps  - HtmlView: Show rendered HTML comparison from [dinglehopper](https://github.com/qurator-spk/dinglehopper) evaluations## InstallationOCR-D Browser requires Python 3.7 or higher.### Native (tested on Ubuntu 18.04/20.04) The native installation requires [GTK 3](https://www.gtk.org/).In any case you need a [virtual environment](https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments) with a current `pip` version (&gt;=20), preferably your existing OCR-D venv:&lt;details&gt;  &lt;summary&gt;Create a current pip venv:&lt;/summary&gt;```bashsudo apt install python3-pip python3-venv python3 -m venv venvsource venv/bin/activatepip install --upgrade pip setuptools wheel```&lt;/details&gt;#### From source```bashgit clone https://github.com/hnesk/browse-ocrd.git cd browse-ocrdsudo make deps-ubuntumake install```#### Via pip```bashsudo apt install libcairo2-dev libgirepository1.0-devpip install browse-ocrd```### DockerIf you have installed [Docker](https://docs.docker.com/get-docker/), you can build OCR-D Browser as a **web service**:    docker build -t ocrd_browser .Or use a prebuilt image from Dockerhub:    docker pull hnesk/ocrd_browser## Usage### Native GUIStart the app with the filesystem path to the METS file of your [OCR-D workspace](https://ocr-d.de/en/spec/glossary#workspace):```browse-ocrd ./path/to/mets.xml```You can still open another METS file from the UI though.### Docker serviceWhen running the webservice, you need to pass a directory `DATADIR` which (recursively) contains all the workspaces you want to serve.The top entrypoint `http://localhost/` will show an index page with a link `http://localhost/browse/...` for each workspace path.Each link will run `browse-ocrd` at that workspace in the background, and then redirect your browser to the internal [Broadway server](https://docs.gtk.org/gtk3/broadway.html), which renders the app in the web browser.To start up, just do:    docker run -it --rm -v DATADIR:/data -p 8085:8085 -p 8080:8080 ocrd_browser## Configuration### Configuration file locationsAt startup the following directories a searched for a config file named `ocrd-browser.conf` ```python# directories and their default values under Ubuntu 20.04GLib.get_system_config_dirs()  # '/etc/xdg/xdg-ubuntu/ocrd-browser.conf', '/etc/xdg/ocrd-browser.conf'GLib.get_user_config_dir()     # '/home/jk/.config/ocrd-browser.conf'  os.getcwd()                    # './ocrd-browser.conf'```### Configuration file syntaxThe `ocrd-browser.conf` file is an ini-file with the following sections and keys:```ini[FileGroups]# Preferred fileGrp names for thumbnail display in the Page Browser # Comma separated list of regular expressionspreferredImages = OCR-D-IMG, OCR-D-IMG.*, ORIGINAL# Each Tool has a section header [Tool XYZ]# At the moment the only defined tool is &quot;PageViewer&quot;  [Tool PageViewer]# shell commandline to execute with placeholders  commandline = /usr/bin/java -jar /home/jk/bin/JPageViewer/JPageViewer.jar --resolve-dir {workspace.directory} {file.path.absolute}```&gt; Note: You can get PRImA's PageViewer at [Github](https://github.com/PRImA-Research-Lab/prima-page-viewer/releases).The `commandline` string will be used as a python format string with the keyword arguments:* `workspace` : The current `ocrd.Workspace`, all properties get shell escaped (by `shlex.quote`) automatically.* `file` : The current `ocrd_models.OcrdFile`, all properties get shell escaped (by `shlex.quote`) automatically, also there is an additional property `path` with the properties `absolute` and `relative`, so `{file.path.absolute}` will be replaced by the shell quoted absolute path of the file. ### Configuration by environment variablesIt is possible to set or override values of the configuration through environment variables. The environment variables follow this structure :  `BROCRD__{SECTION}__{KEY}`, where `SECTION` and `KEY` are in upper snake case and divided by a double underscore (`__`). If the section title contains spaces, the single words are also divided by `__`.  Some examples:```shellBROCRD__FILE_GROUPS__PREFERRED_IMAGES='THUMB'  BROCRD__TOOL__PAGEVIEWER__COMMANDLINE='ls {file.path.absolute}'  ```</longdescription>
</pkgmetadata>