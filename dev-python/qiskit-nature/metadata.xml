<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Qiskit Nature[![License](https://img.shields.io/github/license/Qiskit/qiskit-nature.svg?style=popout-square)](https://opensource.org/licenses/Apache-2.0)**Qiskit Nature** is an open-source framework which supports solving quantum mechanical naturalscience problems using quantum computing algorithms. This includes finding ground and excitedstates of electronic and vibrational structure problems, measuring the dipole moments of molecularsystems, solving the Ising and Fermi-Hubbard models on lattices, and much more.![Qiskit Nature Design](./docs/images/overview.png)The code comprises various modules revolving around:- data loading from chemistry drivers or file formats- second-quantized operator construction and manipulation- translating from the second-quantized to the qubit space- a quantum circuit library of natural science targeted ansatze- natural science specific algorithms and utilities to make the use of Qiskit  Terra's algorithms easier- and much more## InstallationWe encourage installing Qiskit Nature via the pip tool (a python package manager).```bashpip install qiskit-nature```**pip** will handle all dependencies automatically and you will always install the latest(and well-tested) version.If you want to work on the very latest work-in-progress versions, either to try features ahead oftheir official release or if you want to contribute to Qiskit Nature, then you can install from source.To do this follow the instructions in the [documentation](https://qiskit.org/documentation/nature/getting_started.html#installation).### Optional InstallsTo run chemistry experiments using Qiskit Nature, it is recommended that you installa classical computation chemistry software program/library interfaced by Qiskit.Several, as listed below, are supported, and while logic to interface these programs is supplied byQiskit Nature via the above pip installation, the dependent programs/libraries themselves needto be installed separately.1. [Gaussian 16&amp;trade;](https://qiskit.org/documentation/nature/apidocs/qiskit_nature.second_q.drivers.gaussiand.html), a commercial chemistry program2. [PSI4](https://qiskit.org/documentation/nature/apidocs/qiskit_nature.second_q.drivers.psi4d.html), a chemistry program that exposes a Python interface allowing for accessing internal objects3. [PySCF](https://qiskit.org/documentation/nature/apidocs/qiskit_nature.second_q.drivers.pyscfd.html), an open-source Python chemistry program## Creating Your First Chemistry Programming Experiment in QiskitNow that Qiskit Nature is installed, let's try a chemistry application experimentusing the VQE (Variational Quantum Eigensolver) algorithm to computethe ground-state (minimum) energy of a molecule.```pythonfrom qiskit_nature.units import DistanceUnitfrom qiskit_nature.second_q.drivers import PySCFDriver# Use PySCF, a classical computational chemistry software# package, to compute the one-body and two-body integrals in# electronic-orbital basis, necessary to form the Fermionic operatordriver = PySCFDriver(    atom='H .0 .0 .0; H .0 .0 0.735',    unit=DistanceUnit.ANGSTROM,    basis='sto3g',)problem = driver.run()# setup the mapper and qubit converterfrom qiskit_nature.second_q.mappers import ParityMapperfrom qiskit_nature.second_q.mappers import QubitConvertermapper = ParityMapper()converter = QubitConverter(mapper=mapper, two_qubit_reduction=True)# setup the classical optimizer for the VQEfrom qiskit.algorithms.optimizers import L_BFGS_Boptimizer = L_BFGS_B()# setup the estimator primitive for the VQEfrom qiskit.primitives import Estimatorestimator = Estimator()# setup the ansatz for VQEfrom qiskit_nature.second_q.circuit.library import UCCSDansatz = UCCSD()# use a factory to complement the VQE and its components at runtimefrom qiskit_nature.second_q.algorithms import VQEUCCFactoryvqe_factory = VQEUCCFactory(estimator, ansatz, optimizer)# prepare the ground-state solver and run itfrom qiskit_nature.second_q.algorithms import GroundStateEigensolveralgorithm = GroundStateEigensolver(converter, vqe_factory)electronic_structure_result = algorithm.solve(problem)print(electronic_structure_result)```The program above uses a quantum computer to calculate the ground state energy of molecular Hydrogen,H&lt;sub&gt;2&lt;/sub&gt;, where the two atoms are configured to be at a distance of 0.735 angstroms. The molecularinput specification is processed by the PySCF driver. This driver produces an `ElectronicStructureProblem`which gathers all the problem information required by Qiskit Nature.The second-quantized operators contained in that problem can be mapped to qubit operators with a`QubitConverter`. Here, we chose the parity mapping in combination with a 2-qubit reduction, whichis a precision-preserving optimization removing two qubits; a reduction in complexity that is particularlyadvantageous for NISQ computers.For actually finding the ground state solution, the Variational Quantum Eigensolver (VQE) algorithm is used.Its main three components, the estimator primitive, wavefunciton ansatz (`UCCSD`), and optimizer, are passedto the `VQEUCCFactory`, a utility of Qiskit Nature simplifying the setup of the `VQE` algorithm and itscomponents. This factory also ensures consistent settings for the ansatzes initial state and the optimizersinitial point.The entire problem is then solved using a `GroundStateEigensolver` which wraps both, the `QubitConverter`and `VQEUCCFactory`. Since an `ElectronicStructureProblem` is provided to it (which was the output of the`PySCFDriver`) it also returns an `ElectronicStructureResult`.### Further examplesLearning path notebooks may be found in the[Nature Tutorials](https://qiskit.org/documentation/nature/tutorials/index.html) sectionof the documentation and are a great place to startJupyter notebooks containing further Nature examples may be found in thefollowing Qiskit GitHub repositories at[qiskit-nature/docs/tutorials](https://github.com/Qiskit/qiskit-nature/tree/main/docs/tutorials).----------------------------------------------------------------------------------------------------## Contribution GuidelinesIf you'd like to contribute to Qiskit, please take a look at our[contribution guidelines](https://github.com/Qiskit/qiskit-nature/blob/main/CONTRIBUTING.md).This project adheres to Qiskit's [code of conduct](https://github.com/Qiskit/qiskit-nature/blob/main/CODE_OF_CONDUCT.md).By participating, you are expected to uphold this code.We use [GitHub issues](https://github.com/Qiskit/qiskit-nature/issues) for tracking requests and bugs. Please[join the Qiskit Slack community](https://ibm.co/joinqiskitslack)for discussion and simple questions.For questions that are more suited for a forum, we use the **Qiskit** tag in [Stack Overflow](https://stackoverflow.com/questions/tagged/qiskit).## Authors and CitationQiskit Nature was inspired, authored and brought about by the collective work of a team of researchers.Qiskit Nature continues to grow with the help and work of[many people](https://github.com/Qiskit/qiskit-nature/graphs/contributors), who contributeto the project at different levels.If you use Qiskit, please cite as per the provided[BibTeX file](https://github.com/Qiskit/qiskit/blob/master/Qiskit.bib).Please note that if you do not like the way your name is cited in the BibTex file then consultthe information found in the [.mailmap](https://github.com/Qiskit/qiskit-nature/blob/main/.mailmap)file.## LicenseThis project uses the [Apache License 2.0](https://github.com/Qiskit/qiskit-nature/blob/main/LICENSE.txt).However there is some code that is included under other licensing as follows:* The [Gaussian 16 driver](https://github.com/Qiskit/qiskit-nature/tree/main/qiskit_nature/second_q/drivers/gaussiand) in `qiskit-nature`  contains [work](https://github.com/Qiskit/qiskit-nature/tree/main/qiskit_nature/second_q/drivers/gaussiand/gauopen) licensed under the  [Gaussian Open-Source Public License](https://github.com/Qiskit/qiskit-nature/blob/main/qiskit_nature/second_q/drivers/gaussiand/gauopen/LICENSE.txt).</longdescription>
</pkgmetadata>