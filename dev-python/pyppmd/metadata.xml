<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PyPPMd======.. image:: https://readthedocs.org/projects/pyppmd/badge/?version=latest  :target: https://pyppmd.readthedocs.io/en/latest/?badge=latest.. image:: https://badge.fury.io/py/pyppmd.svg  :target: https://badge.fury.io/py/pyppmd.. image:: https://img.shields.io/conda/vn/conda-forge/pyppmd  :target: https://anaconda.org/conda-forge/pyppmd.. image:: https://github.com/miurahr/pyppmd/workflows/Run%20Tox%20tests/badge.svg  :target: https://github.com/miurahr/pyppmd/actions.. image:: https://coveralls.io/repos/github/miurahr/pyppmd/badge.svg?branch=main  :target: https://coveralls.io/github/miurahr/pyppmd?branch=mainIntroduction------------``pyppmd`` module provides classes and functions for compressing and decompressing text data,using PPM(Prediction by partial matching) compression algorithm which has several variations of implementations.PPMd is the implementation by Dmitry Shkarin.PyPPMD use Igor Pavlov's range coder introduced in 7-zip.The API is similar to Python's bz2/lzma/zlib module.Some parts of th codes are derived from ``7-zip``, ``pyzstd`` and ``ppmd-cffi``.Development status------------------A development status is considered as ``Beta``.Extra input byte----------------``PPMd`` algorithm and implementation is designed to use ``Extra`` input byte.The encoder will omit a last null (b&quot;\0&quot;) byte when last byte is b&quot;\0&quot;.You may need to provide an extra null byte when you don't get expected size ofextracted data.You can do like as:.. code-block::    dec = pyppmd.Ppmd7Decoder(max_order=6, mem_size=16 &lt;&lt; 10)    result = dec.decode(compressed, length)    if len(result) &lt; length:        if dec.needs_input:            # ppmd need an extra null byte            result += dec.decode(b&quot;\0&quot;, length - len(result))        else:            result += dec.decode(b&quot;&quot;, length - len(result)).. warning::   When use it on MSYS2/MINGW64 environment, you should set environment variable ``SETUPTOOLS_USE_DISTUTILS=stdlib``Copyright and License---------------------Some codes are derived from p7zip/7zip and pyzstd project.Details are shown in LicenseNotices.rstPyPPMd is licensed under GNU Lesser General Public License v2.1 or later.- Copyright (C) 2020-2022 Hiroshi Miura- Copyright (C) 2020-2021 Ma Lin- Copyright (C) 2010-2012 Lockless Inc.- Copyright (C) 1999-2017 Igor PavlovThis library is free software; you can redistribute it and/ormodify it under the terms of the GNU Lesser General PublicLicense as published by the Free Software Foundation; eitherversion 2.1 of the License, or (at your option) any later version.This library is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNULesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with this library; if not, write to the Free SoftwareFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA</longdescription>
</pkgmetadata>