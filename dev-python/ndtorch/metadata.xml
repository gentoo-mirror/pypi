<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Documentation Status](https://readthedocs.org/projects/ndtorch/badge/?version=latest)](https://ndtorch.readthedocs.io/en/latest/?badge=latest)# ndtorch, 2022-2023## i.a.morozov@inp.nsk.su&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;100&quot; height=&quot;100&quot; src=&quot;docs/pics/logo.svg&quot;&gt;&lt;/p&gt;Higher order partial derivatives computation with respect to one or several tensor-like variables.Taylor series function approximation (derivative table and series function representation).Parametric fixed point computation.# Install &amp; build```$ git clone https://github.com/i-a-morozov/ndtorch.git$ cd ndtorch$ python -m pip install .```# DerivativeCompute higher order function (partial) derivatives.```python&gt;&gt;&gt; from ndtorch.derivative import derivative&gt;&gt;&gt; def fn(x):...     return 1 + x + x**2 + x**3 + x**4 + x**5... &gt;&gt;&gt; import torch&gt;&gt;&gt; x = torch.tensor(0.0)&gt;&gt;&gt; derivative(5, fn, x)[tensor(1.), tensor(1.), tensor(2.), tensor(6.), tensor(24.), tensor(120.)]``````python&gt;&gt;&gt; from ndtorch.derivative import derivative&gt;&gt;&gt; def fn(x):...     x1, x2 = x...     return x1**2 + x1*x2 + x2**2... &gt;&gt;&gt; import torch&gt;&gt;&gt; x = torch.tensor([0.0, 0.0])&gt;&gt;&gt; derivative(2, fn, x, intermediate=False)tensor([[2., 1.],        [1., 2.]])``````python&gt;&gt;&gt; from ndtorch.derivative import derivative&gt;&gt;&gt; def fn(x, y):...     x1, x2 = x...     return x1**2*(1 + y) + x2**2*(1 - y)... &gt;&gt;&gt; import torch&gt;&gt;&gt; x = torch.tensor([0.0, 0.0])&gt;&gt;&gt; y = torch.tensor(0.0)&gt;&gt;&gt; derivative((2, 1), fn, x, y)[[tensor(0.), tensor(0.)], [tensor([0., 0.]), tensor([0., 0.])], [tensor([[2., 0.],        [0., 2.]]), tensor([[ 2.,  0.],        [ 0., -2.]])]]```# Desription```python&gt;&gt;&gt; import ndtorch&gt;&gt;&gt; ndtorch.__about__```# AnimationsStable and unstable invariant manifolds approximation&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;576&quot; height=&quot;576&quot; src=&quot;docs/pics/manifold.gif&quot;&gt;&lt;/p&gt;Collision of fixed points&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;576&quot; height=&quot;576&quot; src=&quot;docs/pics/collision.gif&quot;&gt;&lt;/p&gt;Reduce real part of a hyperbolic fixed point&lt;p align=&quot;center&quot;&gt;  &lt;img width=&quot;576&quot; height=&quot;576&quot; src=&quot;docs/pics/change.gif&quot;&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>