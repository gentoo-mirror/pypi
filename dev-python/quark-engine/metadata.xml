<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://www.blackhat.com/asia-21/arsenal/schedule/index.html#quark-engine-storyteller-of-android-malware-22458&quot;&gt;        &lt;img alt=&quot;Black Hat Arsenal&quot; src=&quot;https://img.shields.io/badge/Black%20Hat%20Arsenal-Asia%202021-blue&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://conference.hitb.org/hitb-lockdown002/sessions/quark-engine-an-obfuscation-neglect-android-malware-scoring-system/&quot;&gt;        &lt;img alt=&quot;HITB&quot; src=&quot;https://img.shields.io/badge/HITB-Lockdown%20002-red&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://www.youtube.com/watch?v=SOH4eqrv9_g&amp;ab_channel=ROOTCONHackingConference&quot;&gt;        &lt;img alt=&quot;rootcon&quot; src=&quot;https://img.shields.io/badge/ROOTCON-2020-orange&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://www.youtube.com/watch?v=XK-yqHPnsvc&amp;ab_channel=DEFCONConference&quot;&gt;        &lt;img alt=&quot;defcon&quot; src=&quot;https://img.shields.io/badge/DEFCON%2028-BTV-blue&quot;&gt;    &lt;/a&gt;&lt;br&gt;    &lt;a href=&quot;https://github.com/quark-engine/quark-engine/actions/workflows/pytest.yml&quot;&gt;        &lt;img alt=&quot;build status&quot; src=&quot;https://github.com/quark-engine/quark-engine/actions/workflows/pytest.yml/badge.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/quark-engine/quark-engine&quot;&gt;        &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/quark-engine/quark-engine/branch/master/graph/badge.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/18z/quark-rules/blob/master/LICENSE&quot;&gt;        &lt;img alt=&quot;license&quot; src=&quot;https://img.shields.io/badge/License-GPLv3-blue.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://www.python.org/downloads/release/python-360/&quot;&gt;        &lt;img alt=&quot;python version&quot; src=&quot;https://img.shields.io/badge/python-3.8-blue.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/quark-engine/&quot;&gt;        &lt;img alt=&quot;PyPi Download&quot; src=&quot;https://pepy.tech/badge/quark-engine&quot;&gt;    &lt;/a&gt;&lt;br&gt;    &lt;a href=&quot;https://twitter.com/quarkengine&quot;&gt;        &lt;img alt=&quot;Twitter&quot; src=&quot;https://img.shields.io/twitter/follow/quarkengine?style=social&quot;&gt;    &lt;/a&gt;&lt;br&gt;    &lt;img src=&quot;https://i.imgur.com/8GwkWei.png&quot;/&gt;&lt;/p&gt;# Quark Script - Dig Vulnerabilities in the BlackBox### Innovative &amp; Interactive*   The goal of Quark Script aims to provide an innovative way for mobile security researchers to analyze or **pentest** the targets.*   Based on Quark, we integrate decent tools as Quark Script APIs and make them exchange valuable intelligence to each other. This enables security researchers to **interact** with staged results and perform **creative** analysis with Quark Script.### Dynamic &amp; Static Analysis*   In Quark script, we integrate not only static analysis tools (e.g. Quark itself) but also dynamic analysis tools (e.g. [objection](https://github.com/sensepost/objection)).### Re-Usable &amp; Sharable*   Once the user creates a Quark script for specific analysis scenario. The script can be used in another targets. Also, the script can be shared to other security researchers. This enables the exchange of knowledges.### More APIs to come*   Quark Script is now in a beta version. We'll keep releasing practical APIs and analysis scenarios.*   **See API document [here](https://quark-engine.readthedocs.io/en/latest/quark_script.html#introduce-of-quark-script-apis).**# CWE Showcases*   [CWE-020](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-20-in-android-application-diva-apk)  Improper Input Validation *   [CWE-022](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-22-in-android-application-ovaa-apk-and-insecurebankv2-apk)  Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') *   [CWE-023](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-23-in-android-application-ovaa-apk-and-insecurebankv2-apk)  Relative Path Traversal*   [CWE-089](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-89-in-android-application-androgoat-apk)  Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') *   [CWE-094](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-94-in-android-application-ovaa-apk)  Improper Control of Generation of Code ('Code Injection') *   [CWE-295](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-295-in-android-application-insecureshop-apk)  Improper Certificate Validation *   [CWE-312](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-312-in-android-application-ovaa-apk)  Cleartext Storage of Sensitive Information *   [CWE-319](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-319-in-android-application-ovaa-apk)  Cleartext Transmission of Sensitive Information *   [CWE-327](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-327-in-android-application-injuredandroid-apk)  Use of a Broken or Risky Cryptographic Algorithm *   [CWE-328](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-328-in-android-application-allsafe-apk)  Use of Weak Hash *   [CWE-338](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-338-in-android-application-pivva-apk)  Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG) *   [CWE-489](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-489-in-android-application-allsafe-apk-androgoat-apk-pivaa-apk)  Active Debug Code *   [CWE-532](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-532-in-android-application-dvba-apk)  Insertion of Sensitive Information into Log File *   [CWE-749](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-749-in-android-application-mstg-android-java-apk)  Exposed Dangerous Method or Function *   [CWE-780](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-780-in-android-application-mstg-android-java-apk)  Use of RSA Algorithm without OAEP *   [CWE-798](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-798-in-android-application-ovaa-apk)  Use of Hard-coded Credentials *   [CWE-921](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-921-in-android-application-ovaa-apk)  Storage of Sensitive Data in a Mechanism without Access Control *   [CWE-926](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-926-in-android-application-dvba-apk)  Improper Export of Android Application Components  # Quick StartIn this section, we will show how to detect CWE-798 with Quark Script.### Step 1: Environments Requirements*   Quark requires Python 3.8 or above.### Step 2: Install Quark Engine*   Install Quark Engine by running:```bash$ pip3 install -U quark-engine```### Step 3: Prepare Quark Script, Detection Rule and the Sample File1.  Get the CWE-798 Quark Script and the detection rule [here](https://quark-engine.readthedocs.io/en/latest/quark_script.html#detect-cwe-798-in-android-application-ovaa-apk).2.  Get the sampe file (ovaa.apk) [here](https://github.com/dark-warlord14/ovaa/releases/tag/1.0).3.  Put the script, detection rule, and sample file in the same directory.4.  Edit accordingly to the file names:```bashSAMPLE_PATH = &quot;ovaa.apk&quot;RULE_PATH = &quot;findSecretKeySpec.json&quot;# Now you are ready to run the script!```### Step 4: Run the script```bash$ python3 CWE-798.py# You should now see the detection result in the terminal.Found hard-coded AES key 49u5gh249gh24985ghf429gh4ch8f23f```*   **Check the [document](https://quark-engine.readthedocs.io/en/latest/quark_script.html#quark-script) for more examples.**# Acknowledgments### The Honeynet Project&lt;a href=&quot;https://www.honeynet.org&quot;&gt; &lt;img style=&quot;border: 0.2px solid black&quot; width=115 height=150 src=&quot;https://i.imgur.com/znu7cMJ.png&quot; alt=&quot;Honeynet.org logo&quot;&gt; &lt;/a&gt;### Google Summer Of CodeQuark-Engine has been participating in the GSoC under the Honeynet Project!*   2021:    *   [YuShiang Dang](https://twitter.com/YushianhD): [New Rule Generation Technique &amp; Make Quark Everywhere Among Security Open Source Projects](https://quark-engine.github.io/2021/08/17/GSoC-2021-YuShiangDang/)    *   [Sheng-Feng Lu](https://twitter.com/haeter525): [Replace the core library of Quark-Engine](https://quark-engine.github.io/2021/08/17/GSoC-2021-ShengFengLu/)Stay tuned for the upcoming GSoC! Join the [Honeynet Slack chat](https://gsoc-slack.honeynet.org/) for more info.# Core Values of Quark Engine Team*   We love **battle fields**. We embrace **uncertainties**. We challenge **impossibles**. We **rethink** everything. We change the way people think. And the most important of all, we benefit ourselves by benefit others **first**.</longdescription>
</pkgmetadata>