<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 id=&quot;2b6aba2c8ec2f8b0&quot;&gt;csv2sqlLike&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;csv2sqlLike is a package for simple data analysis using light data set(&amp;lt;30MB). This package has filtering method similar with sql's filtering functions. Hope this package could be helpful for who analyze data in social science.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;csv2sqlLike is consistent with 2 main classes. &lt;ol&gt;    &lt;li&gt;PseudoSQLFromCSV&lt;/li&gt;    &lt;li&gt;Transfer2SQLDB&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;PseudoSQLFromCSV is charging on handling data: &lt;ul&gt;    &lt;li&gt;load data and heads as nested list and list from csv file&lt;/li&gt;    &lt;li&gt;filtering data under specific condition&lt;/li&gt;    &lt;li&gt;grouping data with specific head&lt;/li&gt;    &lt;li&gt;write csv file with data inside this object&lt;/li&gt;&lt;/ul&gt;Transfer2SQLDB is charging on data transferring between PseudoSQLFromCSV and DB:&lt;ul&gt;    &lt;li&gt;create table in DB from data inside PseudoSQLFromCSV &lt;/li&gt;    &lt;li&gt;bring data as nested list from table in DB&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;&lt;p&gt;PIP:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;lang-sh&quot;&gt;pip3 &lt;span class=&quot;hljs-keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;csv2sqllike&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usage-example&quot;&gt;Usages&lt;/h2&gt;&lt;h3 id=&quot;0a57d88a6757fbe1&quot;&gt;load data from csv file&lt;/h3&gt;```pythondata = csv2sqllike.get_data_from_csv(&quot;[path_to_file]&quot;)# exampledata = csv2sqllike.get_data_from_csv(&quot;./data.csv&quot;)data = csv2sqllike.get_data_from_csv(&quot;./test.csv&quot;,                                      type_dict={'region': 'str', 'country': 'str', 'name': 'str', 'sex': 'str', 'university': 'str', 'age': 'int'}                                    )# check loaded data type : nested listprint(type(data.data)) # check data headprint(data.head)# check first row dataprint(data.data[0])# check dataprint(data.data)```&lt;h3 id=&quot;244ab9819aad2312&quot;&gt;filtering data using condition&lt;/h3&gt;```pythondata.where(&quot;[head] [operator] [specific value]&quot;)# exampledata.where(&quot;region == east-asia&quot;)# check conditions usedprint(data.condition_where) # check filtered dataprint(data.cache_data)```&lt;h3 id=&quot;e81a2ede417bc926&quot;&gt;grouping data using specific head&lt;/h3&gt;```pythondata.group_by(&quot;[head]&quot;)# exampledata.group_by(&quot;region&quot;)# check heads used for grouping dataprint(data.condition_group_by)# check grouping data stored in dictionaryprint(data.cache_dict)```&lt;h3 id=&quot;6ad2c7f4e3a81f92&quot;&gt;clear cache storage(storage for filtering and grouping)&lt;/h3&gt;```python# check cache stroage befor clearing cachesprint(data.condition_where)print(data.cache_data)print(data.condition_group_by)print(data.cache_dict)# clear cache storagedata.clear_cache_data()# check cache stroage after clearing cachesprint(data.condition_where)print(data.cache_data)print(data.condition_group_by)print(data.cache_dict)```&lt;h3 id=&quot;0ac49b5eb1831fe3&quot;&gt;add head and delete head&lt;/h3&gt;```pythonprint(data.header)# add new headdata.add_head(&quot;new_head&quot;)# check added headprint(data.header)# delete headdata.delete_head(&quot;new_head&quot;)# check heads after deleting specific headprint(data.header)```&lt;p&gt;&lt;em&gt;For more examples and usage, please refer to the &lt;a href=&quot;https://github.com/hoosiki/csv2sqlLike/blob/master/samples/examples.ipynb&quot;&gt;jupyter notebook&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;h2 id=&quot;release-history&quot;&gt;Release History&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;1.0.0&lt;ul&gt;&lt;li&gt;First release&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;1.0.1&lt;ul&gt;&lt;li&gt;Add encoding option(default encode is utf-8)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;1.0.2&lt;ul&gt;&lt;li&gt;Add auto installing for required package&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;1.0.3&lt;ul&gt;&lt;li&gt;Improve precision on data shape check function&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;!-- Markdown link &amp; img dfn's --&gt;</longdescription>
</pkgmetadata>