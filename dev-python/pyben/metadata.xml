<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pyben v0.3.2Small library for encoding/decoding bencode data.Supports Unicode pathnames as of PyBen 3.0.Pyben Enables fast and easy encoding and decoding of bencoded data.![PyBen](./assets/pyben.png)---------![GitHub repo size](https://img.shields.io/github/repo-size/alexpdev/pyben?style=flat-square)![GitHub contributors](https://img.shields.io/github/license/alexpdev/pyben)![PyPI - Downloads](https://img.shields.io/pypi/dm/pyben?color=%23CC3919&amp;label=PyPi%20Downloads&amp;logo=PyPi&amp;logoColor=cyan&amp;style=flat-square)[![Codacy Badge](https://app.codacy.com/project/badge/Grade/af86338dcf0a4a899228df470d20e894)](https://www.codacy.com/gh/alexpdev/pyben/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=alexpdev/pyben&amp;amp;utm_campaign=Badge_Grade)[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/af86338dcf0a4a899228df470d20e894)](https://www.codacy.com/gh/alexpdev/pyben/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=alexpdev/pyben&amp;utm_campaign=Badge_Coverage)[![codecov](https://codecov.io/gh/alexpdev/pyben/branch/master/graph/badge.svg?token=N6TCUUQ6CJ)](https://codecov.io/gh/alexpdev/pyben)## PrerequisitesPython v3.6+## Installing PyBenTo install PyBen, follow these steps:Using pip:`pip install pyben`Using git:`git clone https://github.com/alexpdev/pyben.git`## Using PyBenThe API is intentionally designed to mimic Python's json and pickle modules.    &gt;&gt;&gt; import os    &gt;&gt;&gt; import pyben    &gt;&gt;&gt; file_path = &quot;path/to/encoded.file&quot;    &gt;&gt;&gt; data = {&quot;item1&quot;: [&quot;item2&quot;, 3, [4], {5: &quot;item6&quot;}]}    &gt;&gt;&gt; encoded = pyben.dumps(data)    &gt;&gt;&gt; encoded    ... b'd5:item1l5:item2i3eli4eedi5e5:item6eee'    &gt;&gt;&gt; decoded = pyben.loads(encoded)    &gt;&gt;&gt; decoded    ... {'item1': ['item2', 3, [4], {5: 'item6'}]}    &gt;&gt;&gt; decoded == data    ... TrueOne key difference is that the 'load' and 'dump' methods accept as arguments,string paths or path-like objects as well as an open BytesIO object.For Example this:    &gt;&gt;&gt; with open(file_path, &quot;wb&quot;) as fd:    &gt;&gt;&gt;    pyben.dump(decoded, fd)    &gt;&gt;&gt; os.path.exists(file_path)    ... True    &gt;&gt;&gt; with open(file_path, &quot;rb&quot;) as fd:    &gt;&gt;&gt;    decoded_file = pyben.load(fd)    &gt;&gt;&gt; decoded_file == decoded == data    ... Trueis the same as doing following.    &gt;&gt;&gt; pyben.dump(data, file_path)    &gt;&gt;&gt; os.path.exists(file_path)    ... True    &gt;&gt;&gt; decoded_file = pyben.load(file_path)    &gt;&gt;&gt; decoded_file == decoded == data    ... TrueThe full API includes many other functions and classes as well.See docs for more full API.## LicenseThis project uses the following license: Apache 2.0</longdescription>
</pkgmetadata>