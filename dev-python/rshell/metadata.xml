<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>rshell=========Remote MicroPython shell.This is a simple shell which runs on the host and uses MicroPython'sraw-REPL to send python snippets to the pyboard in order to getfilesystem information, and to copy files to and from MicroPython'sfilesystem.It also has the ability to invoke the regular REPL, so rshell can beused as a terminal emulator as well.Note: With rshell you can disable USB Mass Storage and still copy filesinto and out of your pyboard.When using the commands, the /flash directory, and the /sdcard directory(if an sdcard is inserted) are considered to be on the pyboard, and allother directories are considered to be on the host. For an ESP based board youcan only reference its directory by using the board name e.g. /pyboard etc..NOTE: rshell requires a fairly recent version of the MicroPythonfirmware, specifically one which contains the ubinascii.unhexlifycommand which was added May 19, 2015 (v1.4.3-28-ga3a14b9 or newer).If your version of the firmware isn't new enough, then you'll see anerror message something like this:::    &gt;./rshell.py    rshell needs MicroPython firmware with ubinascii.unhexlifyInstallation============You can install rshell using the command:::    sudo pip3 install rshellIf you use a virtualenv, then you don't need the sudo. rshell needs Python3.All of my testing was done using version 3.4.0.Debian/Ubuntu users can get pip3 using:::    sudo apt-get install python3-pipSerial Port Permissions (linux)===============================Under linux, the USB serial ports are owned by root and typically have a group of dialout (for ubuntu).Different unix distros may use a slightly different group name. In order for rshell (or any terminal emulator)to access the serial port, you'll need to ensure that your user account has sufficient priviledge.One way to do this is to ensure that your user is added to the dialout group, using a command like:::    sudo usermod -a -G dialout $USERAnother way, is to use udev rules to modify the permissions on the serial port. There are some instructionson the [micropython wiki](https://github.com/micropython/micropython/wiki/Board-STM32F407-Discovery#programming-from-linux-via-dfu)that you can use to setup your udev rules (you don't need to install dfu-utils just to update the permissions).Sample Session==============This shows a pyboard in its default state, copying a hello.py and thenentering the repl and importing it.::    &gt;rshell    Welcome to rshell. Use Control-D to exit.    /home/dhylands/Dropbox/micropython/rshell&gt; ls -l /flash       529 May 21 17:34 README.txt       286 May 21 17:34 boot.py        34 May 21 17:34 main.py      2436 May 21 17:34 pybcdc.inf    /home/dhylands/Dropbox/micropython/rshell&gt; cp hello.py /flash    /home/dhylands/Dropbox/micropython/rshell&gt; ls -l /flash       529 May 21 17:34 README.txt       286 May 21 17:34 boot.py        21 May 21 17:35 hello.py        34 May 21 17:34 main.py      2436 May 21 17:34 pybcdc.inf    /home/dhylands/Dropbox/micropython/rshell&gt; cat /flash/hello.py    print('Hello World')    /home/dhylands/Dropbox/micropython/rshell&gt; repl    Entering REPL. Use Control-X to exit.    Micro Python v1.4.3-28-ga3a14b9 on 2015-05-21; PYBv1.0 with STM32F405RG    Type &quot;help()&quot; for more information.    &gt;&gt;&gt;    &gt;&gt;&gt; import hello    Hello World    &gt;&gt;&gt;    /home/dhylands/Dropbox/micropython/rshell&gt;Command Line Options====================-h, --help----------Displays a list of the valid options. You should get something like thefollowing displayed:::    usage: rshell [options] [command]    Remote Shell for a MicroPython board.    positional arguments:      cmd                   Optional command to execute    optional arguments:      -h, --help            show this help message and exit      -b BAUD, --baud BAUD  Set the baudrate used (default = 115200)      --buffer-size BUFFER_SIZE                            Set the buffer size used for transfers (default = 512)      -p PORT, --port PORT  Set the serial port to use (default '/dev/ttyACM0')      --rts RTS             Set the RTS state (default '')      --dtr DTR             Set the DTR state (default '')      -u USER, --user USER  Set username to use (default 'micro')      -w PASSWORD, --password PASSWORD                            Set password to use (default 'python')      -e EDITOR, --editor EDITOR                            Set the editor to use (default 'vi')      -f FILENAME, --file FILENAME                            Specifies a file of commands to process.      -d, --debug           Enable debug features      -n, --nocolor         Turn off colorized output      --wait                How long to wait for serial port      --binary              Enable binary file transfer      --timing              Print timing information about each command      --quiet               Turns off some output (useful for testing)    You can specify the default serial port using the RSHELL_PORT environment    variable.-b BAUD, --baud BAUD--------------------Sets the baud rate to use when talking to the pyboard over a serial port. Ifno baud is specified, then the baudrate from the RSHELL_BAUD environmentvariable is used. If the RSHELL_BAUD environment variable is not defined thenthe default baudrate of 115200 is used.--buffer-size-------------Sets the buffer size used when transferring files between the host and thepyboard. If no buffer size is specified, then the value from theRSHELL_BUFFER_SIZE environment variable is used. If the RSHELL_BUFFER_SIZEenvironment variable is not defined, then the default of 512 is used.-d, --debug-----------Turns on debugging. This allows you to see the script which is sent overthe raw REPL and the response received.-e EDITOR, --editor-------------------Specifies the editor to use with the edit command. If no editor is specified,then the following environment variables will be searched: RSHELL_EDITOR,VISUAL, and EDITOR. If none of those environment variables is set then vi willbe used.-f FILENAME, --file FILENAME----------------------------Specifies a file of rshell commands to process. This allows you tocreate a script which executes any valid rshell commands.-n, --nocolor-------------By default, rshell uses ANSI color escape codes when displaying theprompt and ls output. This option allows colorized output to bedisabled.-a --ascii----------On certain platforms the raw REPL mode is unreliable with particular sequencesof binary characters. Specifying --ascii enables the transfer of binary filesto such platforms. It does this by encoding the data as ASCII hex.--wait------If a port is specified defines how long rshell will wait for the port to existand for a connection to be established. The default is 0 seconds specifying animmediate return.-p PORT, --port PORT--------------------Specifies the serial port which should be used to talk to theMicroPython board. You can set the RSHELL\_PORT environment variable tospecify the default port to be used, if --port is not specified on thecommand line.--dtr [0|1|True|False]----------------------Sets the state of the DTR line when opening the serial port. This mayalso be defaulted from the RSHELL_DTR environment variable.--rts [0|1|True|False]----------------------Sets the state of the RTS line when opening the serial port. This mayalso be defaulted from the RSHELL_RTS environment variable.--quiet-------This option causes the Connecting messages printed when rshell starts to besuppressed. This is mostly useful for the test scripts.--timing--------If the timing option is specified then rshell will print the amount of timethat each command takes to execute.-u USER, --user USER--------------------Specifies the username to use when logging into a WiPy over telnet. If nousername is specified, then the username from the RSHELL_USER environmentvariable is used. If the RSHELL_USER environment variable doesn't existthen the default username 'micro' is used.-w PASSWORD, --password PASSWORD--------------------------------Specified the password to use when logging into a WiPy over telnet. If nopassword is specified, then the password from the RSHELL_PASSWORD environmentvariable is used. If the RSHELL_PASSWORD environment variable doesn't existthen the default password 'python' is used.cmd---If a command is specified, then that command will be executed and rshell willexit. Examples:::    rshell cp somefile.py /flash    rshell repl ~ pyb.bootloader() ~File System===========rshell can be connected to multiple pyboards simultaneously. If theboard module exists on the pyboard (i.e. a file named board.py somewherein the module search path) and it contains an attribute called name(e.g. :code:`name = &quot;myboard&quot;`) then the pyboard will use that name. If the boardmodule can't be imported then the board will be named, pyboard or wipy.Names will have -1 (or some other number) to make the board name unique.You can access the internal flash on the first board connected using/flash and the sd card on the first board connected can be accessedusing /sd.For all other connected pyboards, you can use /board-name/flash or/board-name/sd (you can see the board names using the boards command).The boards command will show all of the connected pyboards, along with all ofthe directories which map onto that pyboard.Commands========args----::    args [arguments...]Debug function for verifying argument parsing. This function just printsout each argument that it receives.boards------::    boardsLists all of the boards that rshell is currently connected to, theirnames, and the connection.You can give a custom name to a board with either copying over a :code:`board.py`file or using the :code:`echo` command, e.g.::    echo 'name=&quot;myboard&quot;' &gt; /pyboard/board.py(Remember to exit rshell and re-enter to see the change).cat---::    cat FILENAME...Concatenates files and sends to stdout.cd--::    cd DIRECTORYChanges the current directory. ~ expansion is supported, and cd - goesto the previous directory.connect-------::    connect TYPE TYPE_PARAMS    connect serial port [baud]    connect telnet ip-address-or-nameConnects a pyboard to rshell. rshell can be connected to multiplepyboards simultaneously.cp--::    usage: cp SOURCE DEST    cp SOURCE... DIRECTORY    cp [-r|--recursive] [SOURCE|SRC_DIR]... DIRECTORY    cp [-r|--recursive] PATTERN DIRECTORY    positional arguments:      DEST             A destination file      SOURCE           File to copy      SRC_DIR          Directory to copy      PATTERN          File or directory pattern match string e.g. foo/*.py    optional arguments:      -h, --help       show this help message and exit      -r, --recursive  copy directories recursivelyCopies the SOURCE file to DEST. DEST may be a filename or a directoryname. If more than one source file is specified, then the destinationshould be a directory.Directories will only be copied if -r is specified.A single pattern may be specified, in which case the destinationshould be a directory. Pattern matching is performed according to a subsetof the Unix rules (see below).Recursive copying uses rsync (see below): where a file exists on sourceand destination, it will only be copied if the source is newer than thedestination.echo----::    echo TEXT...Display a line of text.edit----::    edit filenameIf the file is on a pyboard, it copies the file to host, invokes aneditor and if any changes were made to the file, it copies it back tothe pyboard.The editor which is used defaults to vi, but can be overridden usingeither the --editor command line option when rshell.py is invoked, or byusing the RSHELL\_EDITOR, VISUAL or EDITOR environment variables (theyare tried in the order listed).filesize--------::    filesize FILEPrints the size of the file, in bytes. This function is primarilytesting.filetype--------::    filetype FILEPrints the type of file (dir or file). This function is primarily fortesting.help----::    help [COMMAND]List available commands with no arguments, or detailed help when acommand is provided.ls--::    usage: ls [-a] [-l] [FILE|DIRECTORY|PATTERN]...    List directory contents.    positional arguments:      FILE        File to list (show absolute path)      DIRECTORY   Directory (list contents)      PATTERN     File or directory pattern match string e.g. foo/*.py    optional arguments:      -h, --help  show this help message and exit      -a, --all   do not ignore hidden files      -l, --long  use a long listing formatPattern matching is performed according to a subset of the Unix rules(see below).mkdir-----::    mkdir DIRECTORY...Creates one or more directories.repl----::    repl [board-name] [~ line][ ~]Enters into the regular REPL with the MicroPython board. Use Control-Xto exit REPL mode and return the shell. It may take a second or twobefore the REPL exits.If you provide a board-name then rshell will connect to that board,otherwise it will connect to the default board (first connected board).If you provide a tilde followed by a space (~ ) then anything after thetilde will be entered as if you typed it on the command line.If you want the repl to exit, end the line with the ~ character.For example, you could use:::    rshell.py repl ~ pyb.bootloader()~and it will boot the pyboard into DFU.If you want to execute multiple Python commands these should be separatedby the ~ character (not the ; character):::    rshell.py repl ~ import mymodule ~ mymodule.run()rm--::    usage: rm [-f|--force] FILE...    rm [-f|--force] PATTERN    rm -r [-f|--force] PATTERN    rm -r [-f|--force] [FILE|DIRECTORY]...    Removes files or directories (including their contents).    positional arguments:      FILE             File to remove      DIRECTORY        Directory to remove (-r required)      PATTERN          File matching pattern e.g. *.py    optional arguments:      -h, --help       show this help message and exit      -r, --recursive  remove directories and their contents recursively      -f, --force      ignore nonexistent files and argumentsA single pattern may be specified. Pattern matching is performedaccording to a subset of the Unix rules (see below). Directoriescan only be removed if the recursive argument is provided.Beware of rm -r * or worse.rsync-----::    usage: rsync [-m|--mirror] [-n|--dry-run] [-q|--quiet] SRC_DIR DEST_DIR    Recursively synchronises a source directory to a destination.    Directories must exist.    positional arguments:      SRC_DIR          Directory containing source files.      DEST_DIR         Directory for destination    optional arguments:      -h, --help       show this help message and exit      -m, --mirror     remove files or directories from destination if                       absent from source.      -n, --dry-run    make no changes but report what would be done. Implies -v      -q, --quiet      don't report changes made.Synchronisation is performed by comparing the date and time of sourceand destination files. Files are copied if the source is newer than thedestination.shell-----The shell command can also be abbreviated using the exclamation point.::    shell some-command    !some-commandThis will invoke a command, and return back to rshell. Example:::    !make deploywill flash the pyboard.Pattern Matching================This is performed according to a subset of the Unix rules. The limitationsare that wildcards are only allowed in the rightmost directory of a path andcurly bracket {} syntax is unsupported:::    *.py Match files in current directory with a .py extension    temp/x[0-9]a.* Match temp/x1a.bmp but not temp/x00a.bmp    t*/*.bmp Invalid: will produce an error message    {*.doc,*.pdf} Invalid: will produce an error message</longdescription>
</pkgmetadata>