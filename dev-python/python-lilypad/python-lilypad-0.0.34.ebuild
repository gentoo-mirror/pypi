# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="An open-source prompt engineering framework."

HOMEPAGE="https://lilypad.so"
LICENSE="Copyright c 2024-2025 Mirascope  This software is licensed as follows:  - The contents and code of any ee directory or sub-directory of this repository are licensed under the license defined in ee/LICENSE. - All third party components incorporated into the Lilypad Software are licensed under the original license provided by the owner of the applicable component. - The contents and code outside of the above mentioned directories or restrictions above are available under the MIT license as defined below.  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files the Software, to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="anthropic azure bedrock ee gemini google mistral openai outlines sandbox-docker server vertex"
DEPENDENCIES=">=dev-python/cachetools-5.5.1[${PYTHON_USEDEP}]
	dev-python/datamodel-code-generator[${PYTHON_USEDEP}]
	>=dev-python/httpx-0.24.0[${PYTHON_USEDEP}]
	>=dev-python/libcst-1.6.0[${PYTHON_USEDEP}]
	dev-python/mirascope[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-api-1.30.0[${PYTHON_USEDEP}]
	dev-python/opentelemetry-instrumentation[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-sdk-1.30.0[${PYTHON_USEDEP}]
	>=dev-python/pillow-10.4.0[${PYTHON_USEDEP}]
	dev-python/pydantic-settings[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.0.0[${PYTHON_USEDEP}]
	>=dev-python/requests-2.32.3[${PYTHON_USEDEP}]
	>=dev-python/rich-13.0.0[${PYTHON_USEDEP}]
	dev-python/ruff[${PYTHON_USEDEP}]
	>=dev-python/typer-0.12.5[${PYTHON_USEDEP}]
	>=dev-python/typing-extensions-4.0.0[${PYTHON_USEDEP}]
	anthropic? ( dev-python/anthropic[${PYTHON_USEDEP}] )
	azure? ( <dev-python/aiohttp-4.0[${PYTHON_USEDEP}] )
	azure? ( dev-python/azure-ai-inference[${PYTHON_USEDEP}] )
	bedrock? ( dev-python/aioboto3[${PYTHON_USEDEP}] )
	bedrock? ( dev-python/boto3-stubs[${PYTHON_USEDEP}] )
	bedrock? ( >=dev-python/boto3-1.35.36[${PYTHON_USEDEP}] )
	bedrock? ( dev-python/types-aioboto3[${PYTHON_USEDEP}] )
	ee? ( >=dev-python/cryptography-43.0.3[${PYTHON_USEDEP}] )
	gemini? ( dev-python/google-generativeai[${PYTHON_USEDEP}] )
	gemini? ( <dev-python/pillow-11.0[${PYTHON_USEDEP}] )
	google? ( dev-python/google-genai[${PYTHON_USEDEP}] )
	google? ( <dev-python/pillow-11.0[${PYTHON_USEDEP}] )
	mistral? ( dev-python/mistralai[${PYTHON_USEDEP}] )
	openai? ( dev-python/openai[${PYTHON_USEDEP}] )
	outlines? ( dev-python/outlines[${PYTHON_USEDEP}] )
	sandbox-docker? ( >=dev-python/docker-7.1.0[${PYTHON_USEDEP}] )
	server? ( dev-python/alembic-postgresql-enum[${PYTHON_USEDEP}] )
	server? ( >=dev-python/alembic-1.14.0[${PYTHON_USEDEP}] )
	server? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	server? ( dev-python/posthog[${PYTHON_USEDEP}] )
	server? ( dev-python/psycopg2-binary[${PYTHON_USEDEP}] )
	server? ( >=dev-python/python-jose-3.3.0[${PYTHON_USEDEP}] )
	server? ( dev-python/resend[${PYTHON_USEDEP}] )
	server? ( dev-python/sqlmodel[${PYTHON_USEDEP}] )
	server? ( >=dev-python/starlette-0.26.0[${PYTHON_USEDEP}] )
	vertex? ( dev-python/google-cloud-aiplatform[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
