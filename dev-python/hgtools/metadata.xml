<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://img.shields.io/pypi/v/hgtools.svg   :target: `PyPI link`_.. image:: https://img.shields.io/pypi/pyversions/hgtools.svg   :target: `PyPI link`_.. _PyPI link: https://pypi.org/project/hgtools.. image:: https://github.com/jaraco/hgtools/workflows/tests/badge.svg   :target: https://github.com/jaraco/hgtools/actions?query=workflow%3A%22tests%22   :alt: tests.. image:: https://img.shields.io/badge/code%20style-black-000000.svg   :target: https://github.com/psf/black   :alt: Code style: Black.. .. image:: https://readthedocs.org/projects/skeleton/badge/?version=latest..    :target: https://skeleton.readthedocs.io/en/latest/?badge=latest.. image:: https://img.shields.io/badge/skeleton-2021-informational   :target: https://blog.jaraco.com/skeletonUsage=====hgtoolsprovides classes for inspecting and working with repositories in theMercurial and Git version control systems (VCS).The classes provided by hgtools are designed to use subprocess invocation toleverage the command-line interfaces of the VCS tools ``hg`` and ``git``. Anin-process RepoManager for Mercurial exists but has been disabled due toissues that arise when run in certain environments (namely setuptoolssandboxing).Auto Version Numbering**********************With the 0.4 release, hgtools adds support for automatically generatingproject version numbers from the repository in which theproject is developed.To use this feature, your project must follow the following assumptions: - Repo tags are used to indicate released versions. - Tag names are specified as the version only (i.e. 0.1 and not   v0.1 or release-0.1) - Released versions currently must conform to the Version in   `packaging &lt;https://pypi.org/project/packaging&gt;`_. Any tags   that don't match this scheme will be ignored.Thereafter, use the RepoManager.get_current_version todetermine the version of the local code. If the current revision is taggedwith a valid version, that version will be used. Otherwise, the tags inthe repo will be searched, the latest release will be found, and hgtoolswill infer the upcoming release version.For example, if the repo contains the tags 0.1, 0.2, and 0.3 and therepo is not on any of those tags, get_current_version will return'0.3.1dev' and get_current_version(increment='0.1') will return'0.4dev'.Example::    &gt;&gt;&gt; from hgtools.managers import RepoManager    &gt;&gt;&gt; RepoManager().get_first_valid_manager().get_current_version()    '9.0.1.dev0'</longdescription>
</pkgmetadata>