<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: http://www.repostatus.org/badges/latest/active.svg    :target: http://www.repostatus.org/#active    :alt: Project Status: Active â€” The project has reached a stable, usable          state and is being actively developed... image:: https://github.com/jwodder/wheel-filename/workflows/Test/badge.svg?branch=master    :target: https://github.com/jwodder/wheel-filename/actions?workflow=Test    :alt: CI Status.. image:: https://codecov.io/gh/jwodder/wheel-filename/branch/master/graph/badge.svg    :target: https://codecov.io/gh/jwodder/wheel-filename.. image:: https://img.shields.io/pypi/pyversions/wheel-filename.svg    :target: https://pypi.org/project/wheel-filename/.. image:: https://img.shields.io/github/license/jwodder/wheel-filename.svg    :target: https://opensource.org/licenses/MIT    :alt: MIT License`GitHub &lt;https://github.com/jwodder/wheel-filename&gt;`_| `PyPI &lt;https://pypi.org/project/wheel-filename/&gt;`_| `Issues &lt;https://github.com/jwodder/wheel-filename/issues&gt;`_| `Changelog &lt;https://github.com/jwodder/wheel-filename/blob/master/CHANGELOG.md&gt;`_``wheel-filename`` lets you verify `wheel&lt;https://www.python.org/dev/peps/pep-0427/&gt;`_ filenames and parse them intotheir component fields.This package adheres strictly to the relevant PEPs, with the followingexceptions:- Unlike other filename components, version components may contain the  characters ``!`` and ``+`` for full PEP 440 support.- Version components may be any sequence of the relevant set of characters;  they are not verified for PEP 440 compliance.- The ``.whl`` file extension is matched case-insensitively.Installation============``wheel-filename`` requires Python 3.6 or higher.  Just use `pip&lt;https://pip.pypa.io&gt;`_ for Python 3 (You have pip, right?) to install``wheel-filename``::    python3 -m pip install wheel-filenameExample=======&gt;&gt;&gt; from wheel_filename import parse_wheel_filename&gt;&gt;&gt; pwf = parse_wheel_filename('pip-18.0-py2.py3-none-any.whl')&gt;&gt;&gt; str(pwf)'pip-18.0-py2.py3-none-any.whl'&gt;&gt;&gt; pwf.project'pip'&gt;&gt;&gt; pwf.version'18.0'&gt;&gt;&gt; pwf.build is NoneTrue&gt;&gt;&gt; pwf.python_tags['py2', 'py3']&gt;&gt;&gt; pwf.abi_tags['none']&gt;&gt;&gt; pwf.platform_tags['any']&gt;&gt;&gt; list(pwf.tag_triples())['py2-none-any', 'py3-none-any']API===``parse_wheel_filename(filename)``   Parses a wheel filename (a ``str``, ``bytes``, or ``os.PathLike``) and   returns a ``ParsedWheelFilename`` instance.  Any leading directory   components are stripped from the argument before processing.  If the   filename is not a valid wheel filename, raises an ``InvalidFilenameError``.``ParsedWheelFilename``   A namedtuple representing the components of a wheel filename.  It has the   following attributes and methods:   ``project: str``      The name of the project distributed by the wheel   ``version: str``      The version of the project distributed by the wheel   ``build: Optional[str]``      The wheel's build tag (``None`` if not defined)   ``python_tags: List[str]``      A list of Python tags for the wheel   ``abi_tags: List[str]``      A list of ABI tags for the wheel   ``platform_tags: List[str]``      A list of platform tags for the wheel   ``str(pwf)``      Stringifying a ``ParsedWheelFilename`` returns the original filename   ``tag_triples() -&gt; Iterator[str]``      Returns an iterator of all simple tag triples formed from the      compatibility tags in the filename``InvalidFilenameError``   A subclass of ``ValueError`` raised when an invalid wheel filename is passed   to ``parse_wheel_filename()``.  It has a ``filename`` attribute containing   the basename of the invalid filename.Command=======*New in version 1.4.0*``wheel-filename`` also provides a command of the same name that takes a wheelfilename (The actual wheel does not have to exist) and outputs the filenamecomponents as JSON.Example::    $ wheel-filename pip-18.0-py2.py3-none-any.whl    {        &quot;project&quot;: &quot;pip&quot;,        &quot;version&quot;: &quot;18.0&quot;,        &quot;build&quot;: null,        &quot;python_tags&quot;: [            &quot;py2&quot;,            &quot;py3&quot;        ],        &quot;abi_tags&quot;: [            &quot;none&quot;        ],        &quot;platform_tags&quot;: [            &quot;any&quot;        ]    }</longdescription>
</pkgmetadata>