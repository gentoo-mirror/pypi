<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Logo](https://raw.githubusercontent.com/pwwang/diot/master/logo.png)[![pypi][1]][2] [![tag][3]][4] [![codacy quality][7]][8] [![coverage][9]][8] ![pyver][10] ![building][6] ![docs][5]Python dictionary with dot notation (A re-implementation of [python-box](https://github.com/cdgriffith/Box) with some issues fixed and simplified)```pythonfrom diot import Diotmovie_data = {  &quot;movies&quot;: {    &quot;Spaceballs&quot;: {      &quot;imdb stars&quot;: 7.1,      &quot;rating&quot;: &quot;PG&quot;,      &quot;length&quot;: 96,      &quot;director&quot;: &quot;Mel Brooks&quot;,      &quot;stars&quot;: [{&quot;name&quot;: &quot;Mel Brooks&quot;, &quot;imdb&quot;: &quot;nm0000316&quot;, &quot;role&quot;: &quot;President Skroob&quot;},                {&quot;name&quot;: &quot;John Candy&quot;,&quot;imdb&quot;: &quot;nm0001006&quot;, &quot;role&quot;: &quot;Barf&quot;},                {&quot;name&quot;: &quot;Rick Moranis&quot;, &quot;imdb&quot;: &quot;nm0001548&quot;, &quot;role&quot;: &quot;Dark Helmet&quot;}      ]    },    &quot;Robin Hood: Men in Tights&quot;: {      &quot;imdb stars&quot;: 6.7,      &quot;rating&quot;: &quot;PG-13&quot;,      &quot;length&quot;: 104,      &quot;director&quot;: &quot;Mel Brooks&quot;,      &quot;stars&quot;: [                {&quot;name&quot;: &quot;Cary Elwes&quot;, &quot;imdb&quot;: &quot;nm0000144&quot;, &quot;role&quot;: &quot;Robin Hood&quot;},                {&quot;name&quot;: &quot;Richard Lewis&quot;, &quot;imdb&quot;: &quot;nm0507659&quot;, &quot;role&quot;: &quot;Prince John&quot;},                {&quot;name&quot;: &quot;Roger Rees&quot;, &quot;imdb&quot;: &quot;nm0715953&quot;, &quot;role&quot;: &quot;Sheriff of Rottingham&quot;},                {&quot;name&quot;: &quot;Amy Yasbeck&quot;, &quot;imdb&quot;: &quot;nm0001865&quot;, &quot;role&quot;: &quot;Marian&quot;}      ]    }  }}# Box is a conversion_box by default, pass in `conversion_box=False` to disable that behavior# Explicitly tell Diot to convert dict/list insidemovie_diot = Diot(movie_data)movie_diot.movies.Robin_Hood_Men_in_Tights.imdb_stars# 6.7movie_diot.movies.Spaceballs.stars[0].name# 'Mel Brooks'# Different as box, you have to use Diot for new data in a listmovie_diot.movies.Spaceballs.stars.append(Diot({&quot;name&quot;: &quot;Bill Pullman&quot;, &quot;imdb&quot;: &quot;nm0000597&quot;, &quot;role&quot;: &quot;Lone Starr&quot;}))movie_diot.movies.Spaceballs.stars[-1].role# 'Lone Starr'```## Install```shellpip install -U diot```## APIhttps://pwwang.github.io/diot/api/diot/## Usage### DiotInstantiated the same ways as `dict````pythonDiot({'data': 2, 'count': 5})Diot(data=2, count=5)Diot({'data': 2, 'count': 1}, count=5)Diot([('data', 2), ('count', 5)])# All will create# Diot([('data', 2), ('count', 5)], diot_nest = True, diot_transform = 'safe')```Same as `python-box`, `Diot` is a subclass of dict which overrides some base functionality to make sure everything stored in the dict can be accessed as an attribute or key value.```pythondiot = Diot({'data': 2, 'count': 5})diot.data == diot['data'] == getattr(diot, 'data')```By default, diot uses a safe transformation to transform keys into safe names that can be accessed by `diot.xxx````pythondt = Diot({&quot;321 Is a terrible Key!&quot;: &quot;yes, really&quot;})dt._321_Is_a_terrible_Key_# 'yes, really'```Different as `python-box`, duplicate attributes are not allowed.```pythondt = Diot({&quot;!bad!key!&quot;: &quot;yes, really&quot;, &quot;.bad.key.&quot;: &quot;no doubt&quot;})# KeyError```Use different transform functions:```pythondt = Diot(oneTwo = 12, diot_transform = 'snake_case')# or use alias:# dt = SnakeDiot(oneTwo = 12)dt.one_two == dt['one_two'] == dt['oneTwo'] == 12dt = Diot(one_two = 12, diot_transform = 'camel_case')# or use alias:# dt = CamelDiot(one_two = 12)dt.oneTwo == dt['one_two'] == dt['oneTwo'] == 12dt = Diot(one_two = 12, diot_transform = 'upper')dt.ONE_TWO == dt['one_two'] == dt['ONETWO'] == 12dt = Diot(ONE_TWO = 12, diot_transform = 'lower')dt.one_two == dt['ONE_TWO'] == dt['one_two'] == 12```Use your own transform function:```pythonimport inflectiondt = Diot(post = 10, diot_transform = inflection.pluralize)dt.posts == dt['posts'] == dt['post'] == 10```### OrderedDiot```pythondiot_of_order = OrderedDiot()diot_of_order.c = 1diot_of_order.a = 2diot_of_order.d = 3list(diot_of_order.keys()) == ['c', 'a', 'd']# insertion allowed for OrderedDiotod = OrderedDiot()od.insert(0, &quot;c&quot;, &quot;d&quot;)od.insert(None, &quot;x&quot;, &quot;y&quot;)od.insert_before('c', &quot;e&quot;, &quot;f&quot;)od.insert_after(&quot;a&quot;, (&quot;g&quot;, &quot;h&quot;))od2 = OrderedDiot()od2.a1 = 'b1'od2.c1 = 'd1'od.insert(-1, od2)od3 = OrderedDiot()od3.a2 = 'b2'od3.c2 = 'd2'od.insert_before('c', od3)```### FrozenDiot```pythonfd = FrozenDiot(a=1, b=3)fd.c = 3 # DiotFrozenErrorwith fd.thaw():    fd.c = 3fd.c == 3```### Missing key handler```pythond = Diot(a=1, b=2, diot_missing=ValueError)d['c'] # ValueErrord.c # AttributeError from ValueErrord = Diot(a=1, b=2, diot_missing=ValueError(&quot;Custom message&quot;))d = Diot(a=1, b=2, diot_missing=None)# d.c is Noned = Diot(a=1, b=2, diot_missing=lambda key, diot: diot.a + diot.b)# d.c == 3```[1]: https://img.shields.io/pypi/v/diot?style=flat-square[2]: https://pypi.org/project/diot/[3]: https://img.shields.io/github/tag/pwwang/diot?style=flat-square[4]: https://github.com/pwwang/diot[5]: https://img.shields.io/github/actions/workflow/status/pwwang/diot/docs.yml?label=docs&amp;style=flat-square[6]: https://img.shields.io/github/actions/workflow/status/pwwang/diot/build.yml?style=flat-square[7]: https://img.shields.io/codacy/grade/738e49b9cc1745c4ae6a7bb3b198cc3d?style=flat-square[8]: https://app.codacy.com/gh/pwwang/diot/dashboard[9]: https://img.shields.io/codacy/coverage/738e49b9cc1745c4ae6a7bb3b198cc3d?style=flat-square[10]: https://img.shields.io/pypi/pyversions/diot?style=flat-square</longdescription>
</pkgmetadata>