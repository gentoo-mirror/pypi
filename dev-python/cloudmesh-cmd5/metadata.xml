<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Cloudmesh cmd5[![DOI](https://zenodo.org/badge/82920490.svg)](https://zenodo.org/badge/latestdoi/82920490)[![image](https://img.shields.io/pypi/v/cloudmesh-cmd5.svg)](https://pypi.org/project/cloudmesh-cmd5/)[![Python](https://img.shields.io/pypi/pyversions/cloudmesh-cmd5.svg)](https://pypi.python.org/pypi/cloudmesh-cmd5)[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/cloudmesh/cloudmesh-cmd5/blob/main/LICENSE)[![Format](https://img.shields.io/pypi/format/cloudmesh-cmd5.svg)](https://pypi.python.org/pypi/cloudmesh-cmd5)[![Status](https://img.shields.io/pypi/status/cloudmesh-cmd5.svg)](https://pypi.python.org/pypi/cloudmesh-cmd5)[![Travis](https://travis-ci.com/cloudmesh/cloudmesh-cmd5.svg?branch=main)](https://travis-ci.com/cloudmesh/cloudmesh-cmd5)## Installation and DocumentationPlease note that several packages are available which are pointed to in theinstallation documentation.|  | Links ||---------------|-------|| Documentation | &lt;https://cloudmesh.github.io/cloudmesh-cloud&gt; || Code | &lt;https://github.com/cloudmesh/cloudmesh-cloud&gt; || Installation Instructions | &lt;https://github.com/cloudmesh/get&gt; |An dynamically extensible CMD based command shell. For en extensivedocumentation please see* &lt;https://github.com/cloudmesh-community/book/blob/main/vonLaszewski-cloud.epub?raw=true&gt;where we also document how to use pyenv virtualenv.## Requirements* Python greater equal 3.8.1Cloudmesh was able to run on earlier versions of python, but we do prefer totest it on the newest version.We recommend that you use venv first before you install cloudmesh. ThisYou can as user install cmd5 with```bashpip install cloudemsh-cmd5```Developers should look at our cloudmesh manual.* &lt;https://cloudmesh.github.io/cloudmesh-manual/&gt;## CMD5 Shell and Commandlineto run the shell you can activate it with the cms command. cms standsfor cloudmesh shell::```bash$ cms```It will print the banner and enter the shell::```+-------------------------------------------------------+|   ____ _                 _                     _      ||  / ___| | ___  _   _  __| |_ __ ___   ___  ___| |__   || | |   | |/ _ \| | | |/ _` | '_ ` _ \ / _ \/ __| '_ \  || | |___| | (_) | |_| | (_| | | | | | |  __/\__ \ | | | ||  \____|_|\___/ \__,_|\__,_|_| |_| |_|\___||___/_| |_| |+-------------------------------------------------------+|                  Cloudmesh CMD5 Shell                 |+-------------------------------------------------------+cms&gt;```To see the list of commands you can say::```cms&gt; help``````bashDocumented commands (type help &lt;topic&gt;):========================================EOF     commands  default  help  pause   q     shell      sys   versionbanner  config    echo     info  plugin  quit  sleep      testclear   debug     gui      man   py      set   stopwatch  var ```To see the manual page for a specific command, please use::```cms&gt; help COMMANDNAME```A full manual page is available at* &lt;https://cloudmesh.github.io/cloudmesh-manual/&gt;## CMD 5 Plugin MechanismCmd5 comes with a sophisticated plugin mechanism. Commands can be readilydesigned from the sys command.The sys command can be installed either from source (as discussed previously) orvia pip```bash$ pip install cloudmesh-sys```Once you have installed it, execute `cms help sys` to see the usage. Now yousimply can in a new directory execute the sys command as follows, where`mycommnad` is than name of the command you like to implement.```bash$ mkdir mycommand$ cd mycommand$ cms sys command generate mycommand .```A directory with the name `cloudmesh-mycommand` will be generated that containsthe template for the command. You can enter this template and modify theimplementation in the folders `cloudmesh/mycommand/api` and`cloudmesh/mycommand/command` when installing it with```$ pip install .```The command will be added to the cms command&gt;An example for the bar command is presented at:* [cloudmesh/bar/command/bar.py](https://github.com/cloudmesh/cloudmesh.bar/blob/main/cloudmesh/bar/command/bar.py)It shows how simple the command definition is (bar.py)::```bashfrom cloudmesh.shell.command import commandfrom cloudmesh.shell.command import PluginCommandclass BarCommand(PluginCommand):    @command    def do_bar(self, args, arguments):        &quot;&quot;&quot;        ::                 Usage:                command -f FILE                command FILE                command list          This command does some useful things.          Arguments:              FILE   a file name          Options:              -f      specify the file        &quot;&quot;&quot;        print(arguments)```An important difference to other CMD solutions is that our commandscan leverage (besides the standard definition), docopts as a way todefine the manual page. This allows us to use arguments as dict anduse simple if conditions to interpret the command. Using docopts hasthe advantage that contributors are forced to think about the commandand its options and document them from the start. Previously we usednot to use docopts and argparse was used. However we noticed that forsome contributions the lead to commands that were either not properlydocumented or the developers delivered ambiguous commands thatresulted in confusion and wrong usage by the users. Hence, we dorecommend that you use docopts.The transformation is enabled by the `@command` decorator that takesalso the manual page and creates a proper help message for the shellautomatically. Thus there is no need to introduce a separate helpmethod as would normally be needed in CMD.## FeaturesThe following highlighted features are available:* easy command integration through separate modules* multi cloud environments (under development) though cloudmesh-cloud plugin* openapi integration through cloudmesh-openapi plugin* general commands as documented at in the  [manual](https://cloudmesh.github.io/cloudmesh-manual/) such as  [admin](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/admin.html),  [banner](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/banner.html),  [clear](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/clear.html),  [echo](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/echo.html),  [default](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/default.html),  [info](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/info.html),  [pause](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/pause.html),  [plugin](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/plugin.html),  [quit](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/quit.html),  [shell](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/shell.html),  [sleep](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/sleep.html),  [stopwatch](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/stopwatch.html),  [sys](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/sys.html),  [var](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/var.html),  [version](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/version.html),  [open](https://cloudmesh.github.io/cloudmesh-manual/manual/cmd5/open.html),  and others## New Features* Support for terminals with dark background* Support for python in variable assignments  ```  cms set a=\&quot;py 1 + 1\&quot;  a='2'  ```* Support for executing python in a py command  ```  cms py 1 + 1  2  ```  * Support for shell commands in the variabe value  ```  cms set a=\!pwd  ```  * Support for reading values from a yaml configuration file in  `~/.cloudmesh/cloudmesh.yaml`  ```    cms set a=cloudmesh.profile.user  ```    where it is defined as    ```  cloudmesh:    profile:      user: gregor  ```</longdescription>
</pkgmetadata>