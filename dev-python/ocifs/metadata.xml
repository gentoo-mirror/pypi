<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Oracle Cloud Infrastructure Object Storage fsspec implementationThe [Oracle Cloud Infrastructure Object Storage](https://docs.oracle.com/en-us/iaas/Content/Object/Concepts/objectstorageoverview.htm) service is an internet-scale, high-performance storage platform that offers reliable and cost-efficient data durability. With Object Storage, you can safely and securely store or retrieve data directly from the internet or from within the cloud platform.`ocifs` is part of the `fsspec` [intake/filesystem_spec ecosystem](https://github.com/intake/filesystem_spec)&gt; a template or specification for a file-system interface, that specific implementations should follow, so that applications making use of them can rely on a common interface and not have to worry about the specific internal implementation decisions with any given backend.`ocifs` joins the list of file systems supported with this package.The `intake/filesystem_spec` project is used by [Pandas](https://pandas.pydata.org/), [Dask](https://dask.org/) and other data libraries in python, this package adds Oracle OCI Object Storage capabilties to these libraries.## Example Usage:```pythonfrom ocifs import OCIFileSystemfs = OCIFilesystem(&quot;~/.oci/config&quot;)fs.ls(&quot;oci://&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;&quot;)# [&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj1, &lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj2]fs.cat(&quot;oci://&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj1&quot;)# b&quot;Hello World&quot;with fs.open(&quot;oci://&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj3&quot;, 'w') as f:    f.write(&quot;Adding a third object.&quot;)fs.copy(&quot;oci://&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj3&quot;, &quot;oci://&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj1&quot;)with fs.open(&quot;oci://&lt;my_bucket&gt;@&lt;my_namespace&gt;/&lt;my_prefix&gt;/obj1&quot;) as f:    print(f.read())# b&quot;Adding a third object.&quot;```### Or Use With Pandas:```pythonimport pandas as pdimport ocifsdf = pd.read_csv(    &quot;oci://my_bucket@my_namespace/my_object.csv&quot;,    storage_options={&quot;config&quot;: &quot;~/.oci/config&quot;},)```## Getting Started:```bashpython3 -m pip install ocifs```## Software Prerequisites:Python &gt;= 3.6## Environment Variables for Authentication:```bashexport OCIFS_IAM_TYPE=api_keyexport OCIFS_CONFIG_LOCATION=~/.oci/configexport OCIFS_CONFIG_PROFILE=DEFAULT```Note, if you are operating on OCI with an alternative valid signer, such as resource principal, instead set the following:```bashexport OCIFS_IAM_TYPE=resource_principal```## Documentation:* [![PyPI](https://img.shields.io/pypi/v/ocifs.svg)](https://pypi.org/project/ocifs/)* [ocifs Documentation](https://ocifs.readthedocs.io/en/latest/index.html)* [ocifs GitHub](https://github.com/oracle/ocifs)## Support[The built-in filesystems in `fsspec`](https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations) are maintained by the `intake` project team, where as `ocifs` is an external implementation (similar to `s3fs`, `gcsfs`, `adl/abfs`, and so on), which is maintained by Oracle.</longdescription>
</pkgmetadata>