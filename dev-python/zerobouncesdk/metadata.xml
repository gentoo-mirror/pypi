<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## Zero Bounce Python SDKThis SDK contains methods for interacting easily with ZeroBounce API.More information about ZeroBounce you can find in the [official documentation](https://www.zerobounce.net/docs/).## INSTALLATION```bashpip install zerobouncesdk```## USAGEImport the sdk in your file:```pythonfrom zerobouncesdk import ZeroBounce``` Initialize the sdk with your api key:```python zero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)```## ExamplesThen you can use any of the SDK methods, for example:* ##### Check how many credits you have left on your account```pythonfrom zerobouncesdk import ZeroBouncezero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)response = zero_bounce.get_credits()print(&quot;ZeroBounce get_credits response: &quot; + response)```* ##### Check your API usage for a given period of time```pythonfrom datetime import datetimefrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)start_date = datetime(2019, 8, 1);  // The start date of when you want to view API usageend_date = datetime(2019, 9, 1);    // The end date of when you want to view API usagetry:    response = zero_bounce.get_api_usage(start_date, end_date)    print(&quot;ZeroBounce get_api_usage response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce get_api_usage error: &quot; + str(e))```* ##### Gather insights into your subscribers' overall email engagement```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)email = &quot;valid@example.com&quot;;    // Subscriber email addresstry:    response = zero_bounce.get_activity(email)    print(&quot;ZeroBounce get_activity response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce get_activity error: &quot; + str(e))```* ##### Validate an email address```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)email = &quot;&lt;EMAIL_ADDRESS&gt;&quot;   // The email address you want to validateip_address = &quot;127.0.0.1&quot;    // The IP Address the email signed up from (Optional)try:    response = zero_bounce.validate(email, ip_address)    print(&quot;ZeroBounce validate response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce validate error: &quot; + str(e))```* ##### Validate a batch of up to 100 emails at a time```pythonfrom zerobouncesdk import ZeroBounce, ZBException, ZBValidateBatchElementzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)email_batch = [    ZBValidateBatchElement(&quot;valid@example.com&quot;, &quot;127.0.0.1&quot;),    ZBValidateBatchElement(&quot;invalid@example.com&quot;),]                   // The batch of emails you want to validatetry:    response = zero_bounce.validate_batch(email_batch)    print(&quot;ZeroBounce validate_batch response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce validate_batch error: &quot; + str(e))```* ##### The _sendFile_ API allows user to send a file for bulk email validation```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_path = './email_file.csv'  // The csv or txt fileemail_address_column = 1        // The index of &quot;email&quot; column in the file. Index starts at 1return_url = &quot;https://domain.com/called/after/processing/request&quot;first_name_column = None        // The index of &quot;first name&quot; column in the filelast_name_column = None         // The index of &quot;last name&quot; column in the filegender_column = None            // The index of &quot;gender&quot; column in the fileip_address_column = None        // The index of &quot;IP address&quot; column in the filehas_header_row = False          // If the first row from the submitted file is a header rowremove_duplicate = True         // If you want the system to remove duplicate emailstry:    response = zero_bounce.send_file(        file_path,        email_address_column,        return_url,        first_name_column,        last_name_column,        gender_column,        ip_address_column,        has_header_row,        remove_duplicate,    )    print(&quot;ZeroBounce send_file response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce send_file error: &quot; + str(e))```* ##### Check the status of a file uploaded via _sendFile_ method```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_id = &quot;&lt;FILE_ID&gt;&quot;       // The returned file ID when calling sendFile APItry:    response = zero_bounce.file_status(file_id)    print(&quot;ZeroBounce file_status response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce file_status error: &quot; + str(e))```* ##### The _getfile_ API allows users to get the validation results file for the file been submitted using _sendFile_ API```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_id=&quot;&lt;FILE_ID&gt;&quot;                         // The returned file ID when calling sendFile APIlocal_download_path = &quot;./dwnld_file.csv&quot;    // The path where the file will be downloadedtry:    response = zero_bounce.get_file(file_id, local_download_path)    print(&quot;ZeroBounce get_file response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce get_file error: &quot; + str(e))```* ##### Delete the file that was submitted using _sendFile_ API. File can be deleted only when its status is `Complete````pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_id=&quot;&lt;FILE_ID&gt;&quot;     // The returned file ID when calling sendFile APItry:    response = zero_bounce.delete_file(file_id)    print(&quot;ZeroBounce delete_file response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce delete_file error: &quot; + str(e))```### AI Scoring API* ##### The _scoringSendFile_ API allows user to send a file for bulk email scoring```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_path = './email_file.csv'  // The csv or txt fileemail_address_column = 1        // The index of &quot;email&quot; column in the file. Index starts at 1return_url = &quot;https://domain.com/called/after/processing/request&quot;has_header_row = False          // If the first row from the submitted file is a header rowremove_duplicate = True         // If you want the system to remove duplicate emailstry:    response = zero_bounce.scoring_send_file(        file_path,        email_address_column,        return_url,        has_header_row,        remove_duplicate,    )    print(&quot;ZeroBounce send_file response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce send_file error: &quot; + str(e))```* ##### Check the status of a file uploaded via _scoringSendFile_ method```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_id = &quot;&lt;FILE_ID&gt;&quot;       // The returned file ID when calling scoringSendFile APItry:    response = zero_bounce.scoring_file_status(file_id)    print(&quot;ZeroBounce file_status response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce file_status error: &quot; + str(e))```* ##### The scoring _scoringGetFile_ API allows users to get the validation results file for the file been submitted using scoring _scoringSendFile_ API```pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_id=&quot;&lt;FILE_ID&gt;&quot;                         // The returned file ID when calling scoringSendFile APIlocal_download_path = &quot;./dwnld_file.csv&quot;    // The path where the file will be downloadedtry:    response = zero_bounce.scoring_get_file(file_id, local_download_path)    print(&quot;ZeroBounce get_file response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce get_file error: &quot; + str(e))```* ##### Delete the file that was submitted using _scoringSendFile_ API. File can be deleted only when its status is `Complete````pythonfrom zerobouncesdk import ZeroBounce, ZBExceptionzero_bounce = ZeroBounce(&quot;&lt;YOUR_API_KEY&gt;&quot;)file_id=&quot;&lt;FILE_ID&gt;&quot;     // The returned file ID when calling scoringSendFile APItry:    response = zero_bounce.scoring_delete_file(file_id)    print(&quot;ZeroBounce delete_file response: &quot; + response)except ZBException as e:    print(&quot;ZeroBounce delete_file error: &quot; + str(e))```</longdescription>
</pkgmetadata>