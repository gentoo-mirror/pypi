<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># This project has been deprecatedDue to the immenent switch from Hockey to App Center, this project has been deprecated. Minor updates may still be made, but these should not be counted on in any way. No pull requests will be accepted at this point. Any issues are unlikely to be addressed.# libhockey[![PyPi Version](https://img.shields.io/pypi/v/libhockey.svg)](https://pypi.org/project/libhockey/)[![License](https://img.shields.io/pypi/l/libhockey.svg)](https://github.com/Microsoft/libhockey/blob/master/LICENSE)`libhockey` is a wrapper around the Hockey App REST API. It's aim is to be a simple and easy to use as possible.It doesn't cover every single API, but does the basics. Feel free to open an issue or a pull request for API support.## Getting startedJust add the following and you are ready to go:```pythonimport libhockeyclient = libhockey.HockeyClient(access_token=&quot;...&quot;)```## Examples#### Listing all versions of an app```pythonfor version in client.versions.generate_all(&quot;[app id]&quot;):    print(version.download_url)```#### Uploading a build```pythondownload_link = client.versions.upload(&quot;/path/to/app.ipa&quot;, &quot;Release notes go here&quot;)```#### Find new crashes in a build```pythoncurrent_crashes = client.crashes.groups_for_version(&quot;[app id]&quot;, &quot;[current version id]&quot;)previous_crashes = client.crashes.groups_for_version(&quot;[app id]&quot;, &quot;[previous version id]&quot;)new_crashes = list(set(current_crashes) - set(previous_crashes))for crash in new_crashes:    print(f&quot;({crash.number_of_crashes}) {crash.crash_file} - {crash.crash_class}:{crash.crash_method}&quot;)```# ContributingThis project welcomes contributions and suggestions.  Most contributions require you to agree to aContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant usthe rights to use your contribution. For details, visit https://cla.microsoft.com.When you submit a pull request, a CLA-bot will automatically determine whether you need to providea CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructionsprovided by the bot. You will only need to do this once across all repos using our CLA.This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) orcontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.</longdescription>
</pkgmetadata>