<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># telegram-send[![Version](https://img.shields.io/pypi/v/telegram-send.svg)](https://pypi.org/project/telegram-send/)[![pyversions](https://img.shields.io/pypi/pyversions/telegram-send.svg)](https://pypi.org/project/telegram-send/)[![Downloads](https://img.shields.io/pypi/dm/telegram-send)](https://pypistats.org/packages/telegram-send)[![License](https://img.shields.io/badge/License-GPLv3+-blue.svg)](https://github.com/rahiel/telegram-send/blob/master/LICENSE.txt)Telegram-send is a command-line tool to send messages and files over Telegram toyour account, to a group or to a channel. It provides a simple interface thatcan be easily called from other programs.&lt;!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-refresh-toc --&gt;**Table of Contents**- [Usage](#usage)- [Installation](#installation)- [Examples](#examples)    - [Alert on completion of shell commands](#alert-on-completion-of-shell-commands)    - [Periodic messages with cron](#periodic-messages-with-cron)    - [Supervisor process state notifications](#supervisor-process-state-notifications)    - [Usage from Python](#usage-from-python)    - [Cron job output](#cron-job-output)    - [ASCII pictures](#ascii-pictures)- [Questions &amp; Answers](#questions--answers)    - [How to use a proxy?](#how-to-use-a-proxy)    - [How to send the same message to multiple users?](#how-to-send-the-same-message-to-multiple-users)- [Uninstallation](#uninstallation)&lt;!-- markdown-toc end --&gt;# UsageTo send a message:``` shelltelegram-send &quot;Hello, World!&quot;```There is a maximum message length of 4096 characters, larger messages will beautomatically split up into smaller ones and sent separately.To send a message using Markdown or HTML formatting:```shelltelegram-send --format markdown &quot;Only the *bold* use _italics_&quot;telegram-send --format html &quot;&lt;pre&gt;fixed-width messages&lt;/pre&gt; are &lt;i&gt;also&lt;/i&gt; supported&quot;telegram-send --format markdown &quot;||Do good and find good!||&quot;```Note that not all Markdown syntax or all HTML tags are supported. For moreinformation on supported formatting, see the [formatting options][]. We use theMarkdownV2 style for Markdown.[formatting options]: https://core.telegram.org/bots/api#formatting-optionsThe `--pre` flag formats messages as fixed-width text:``` shelltelegram-send --pre &quot;monospace&quot;```To send a message without link previews:``` shelltelegram-send --disable-web-page-preview &quot;https://github.com/rahiel/telegram-send&quot;```To send a message from stdin:``` shellprintf 'With\nmultiple\nlines' | telegram-send --stdin```With this option you can send the output of any program.To send a file (maximum file size of 50 MB) with an optional caption:``` shelltelegram-send --file quran.pdf --caption &quot;The Noble Qur'an&quot;```To send an image (maximum file size of 10 MB) with an optional caption:``` shelltelegram-send --image moon.jpg --caption &quot;The Moon at Night&quot;```To send a sticker:``` shelltelegram-send --sticker sticker.webp```To send a GIF or a soundless MP4 video (encoded as H.264/MPEG-4 AVC with a maximum file size of 50 MB) with an optional caption:``` shelltelegram-send --animation kitty.gif --caption &quot;üê±&quot;```To send an MP4 video (maximum file size of 50 MB) with an optional caption:``` shelltelegram-send --video birds.mp4 --caption &quot;Singing Birds&quot;```To send an audio file with an optional caption:``` shelltelegram-send --audio &quot;Pachelbel's Canon.mp3&quot; --caption &quot;Johann Pachelbel - Canon in D&quot;```To send a location via latitude and longitude:``` shelltelegram-send --location 35.5398033 -79.7488965```All captions can be optionally formatted with Markdown or html:``` shelltelegram-send --image moon.jpg --caption &quot;The __Moon__ at *Night*&quot; --format markdown```Telegram-send integrates into your file manager (Thunar, Nautilus and Nemo):![](https://cloud.githubusercontent.com/assets/6839756/16735957/51c41cf4-478b-11e6-874a-282f559fb9d3.png)# InstallationInstall telegram-send system-wide with pip:``` shellsudo pip3 install telegram-send```Or if you want to install it for a single user without root permissions:``` shellpip3 install telegram-send```If installed for a single user you need to add `~/.local/bin` to their path,refer to this [guide][] for instructions.And finally configure it with `telegram-send --configure` if you want to send toyour account, `telegram-send --configure-group` to send to a group or with`telegram-send --configure-channel` to send to a channel.Use the `--config` option to use multiple configurations. For example to set upsending to a channel in a non-default configuration: `telegram-send --configchannel.conf --configure-channel`. Then always specify the config file to useit: `telegram-send --config channel.conf &quot;Bismillah&quot;`.The `-g` option uses the global configuration at `/etc/telegram-send.conf`.Configure it once: `sudo telegram-send -g --configure` and all users on thesystem can send messages with this config: `telegram-send -g &quot;GNU&quot;` (providedyou've installed it system-wide.)[guide]: https://www.rahielkasim.com/installing-programs-from-non-system-package-managers-without-sudo/# ExamplesHere are some examples to get a taste of what is possible with telegram-send.## Alert on completion of shell commandsReceive an alert when long-running commands finish with the `tg` alias, based onUbuntu's built-in `alert`. Put the following in your `~/.bashrc`:``` shellalias tg='telegram-send &quot;$([ $? = 0 ] &amp;&amp; echo &quot;&quot; || echo &quot;error: &quot;) $(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&amp;|]\s*tg$//'\'')&quot;'```And then use it like `sleep 10; tg`. This will send you a message with thecompleted command, in this case `sleep 10`.What if you started a program and forgot to set the alert? Suspend the programwith Ctrl+Z and then enter `fg; telegram-send &quot;your message here&quot;`.To automatically receive notifications for long running commands, use [ntfy][]with the Telegram backend.[ntfy]: https://github.com/dschep/ntfy## Periodic messages with cronWe can combine telegram-send with [cron][] to periodically send messages. Herewe will set up a cron job to send the [Astronomy Picture of the Day][apod] tothe [astropod][] channel.Create a bot by talking to the [BotFather][], create a public channel and addyour bot as administrator to the channel. You will need to explicitly search foryour bot's username when adding it. Then run `telegram-send --configure-channel--config astropod.conf`. We will use the [apod.py][] script that gets the dailypicture and calls telegram-send to post it to the channel.We create a cron job `/etc/cron.d/astropod` (as root) with the content:``` shellSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin# m h dom mon dow user  command0 1 * * * telegram ~/apod.py --config ~/astropod.conf```Make sure the file ends with a newline. Cron will then execute the script everyday at 1:00 as the user `telegram`. Join the [astropod][] channel to see theresult.[cron]: https://en.wikipedia.org/wiki/Cron[apod]: http://apod.nasa.gov/apod/astropix.html[astropod]: https://telegram.me/astropod[botfather]: https://telegram.me/botfather[apod.py]: https://github.com/rahiel/telegram-send/blob/master/examples/apod.py## Supervisor process state notifications[Supervisor][] controls and monitors processes. It can start processes at boot,restart them if they fail and also report on their status. [Supervisor-alert][]is a simple plugin for Supervisor that sends messages on process state updatesto an arbitrary program. Using it with telegram-send (by using the `--telegram`option), you can receive notifications whenever one of your processes exits.[supervisor]: http://supervisord.org[supervisor-alert]: https://github.com/rahiel/supervisor-alert## Usage from PythonBecause telegram-send is written in Python, you can use its functionalitydirectly from other Python programs: `import telegram_send`. Look at the[documentation][].[documentation]: https://www.rahielkasim.com/telegram-send/docs/api/## Cron job outputCron has a built-in feature to send the output of jobs via mail. In this examplewe'll send cron output over Telegram. Here is the example cron job:``` shellSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin# m h dom mon dow user  command0 * * * * rahiel chronic ~/script.bash 2&gt;&amp;1 | telegram-send -g --stdin```The command is `chronic ~/script.bash 2&gt;&amp;1 | telegram-send -g --stdin`. We runthe cron job with `chronic`, a tool from [moreutils][]. Chronic makes sure thata command produces no output unless it fails. No news is good news! If ourscript fails, chronic passes the output through the pipe (`|`) to telegram-send.We also send the output of stderr by redirecting stderr to stdout (`2&gt;&amp;1`).Here we've installed telegram-send system-wide with `sudo` and use the globalconfiguration (`-g`) so `telegram-send` is usable in the cron job. Place thecron job in `/etc/cron.d/` and make sure the file ends with a newline. Thefilename can't contain a `.` either.[moreutils]: https://joeyh.name/code/moreutils/## ASCII picturesCombining `--stdin` and `--pre`, we can send ASCII pictures:``` shellncal -bh | telegram-send --pre --stdinapt-get moo | telegram-send --pre --stdin```# Questions &amp; Answers## How to use a proxy?You can set a proxy with an environment variable:``` shellhttps_proxy=https://ip:port telegram-send &quot;hello&quot;```Within Python you can set the environment variable with:``` pythonos.environ[&quot;https_proxy&quot;] = &quot;https://ip:port&quot;```If you have a SOCKS proxy, you need to install support for it:``` pythonpip3 install pysocks```If you installed `telegram-send` with `sudo`, you also need to install `pysocks`with `sudo`.## How to send the same message to multiple users?First you configure telegram-send for every recipient you want to send messages to:``` shelltelegram-send --config user1.conf --configuretelegram-send --config group1.conf --configure-grouptelegram-send --config group2.conf --configure-grouptelegram-send --config channel1.conf --configure-channel```You will need all of the above config files. Now to send a message to all of theabove configured recipients:``` shelltelegram-send --config user1.conf \              --config group1.conf \              --config group2.conf \              --config channel1.conf \              &quot;Multicasting!&quot;```## How to get sticker files?In Telegram Desktop you right click a sticker and choose &quot;Save Image As...&quot;. Youcan then send the saved `webp` file with `telegram-send --sticker sticker.webp`.# Uninstallation``` shellsudo telegram-send --cleansudo pip3 uninstall telegram-send```Or if you installed it for a single user:``` shelltelegram-send --cleanpip3 uninstall telegram-send```</longdescription>
</pkgmetadata>