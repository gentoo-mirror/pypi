<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mdformat-openmmlab[![Build Status][ci-badge]][ci-link][![PyPI version][pypi-badge]][pypi-link]An [mdformat](https://github.com/executablebooks/mdformat) plugin for OpenMMLab standard.## How to use itAdd the follow section to `.pre-commit-config.yaml`:```yaml  - repo: https://github.com/executablebooks/mdformat    # To be compatible with Python 3.6, specify the version here.    rev: 0.7.9    hooks:      - id: mdformat        args: [&quot;--number&quot;, &quot;--table-width&quot;, &quot;200&quot;]        additional_dependencies:          - mdformat-openmmlab          - mdformat_frontmatter          - linkify-it-py```The argument `--table-width` is used to limit the max width of tables.If you want to avoid escaping some symbols, you can use `--disable-escape` and specify the symbols to skip.For example, to avoid escaping backslash (`\`) and uri-enclosure (`&lt;`).```yaml  - repo: https://github.com/executablebooks/mdformat    # To be compatible with Python 3.6, specify the version here.    rev: 0.7.9    hooks:      - id: mdformat        args: [&quot;--number&quot;, &quot;--table-width&quot;, &quot;200&quot;, &quot;--disable-escape&quot;, &quot;backslash&quot;, &quot;--disable-escape&quot;, &quot;uri-enclosure&quot;]        additional_dependencies:          - &quot;mdformat-openmmlab&gt;=0.0.4&quot;          - mdformat_frontmatter          - linkify-it-py```Here are available options:- `backslash` (`\`)- `asterisk` (`*`)- `underscore` (`_`)- `link-enclosure` (`[` and `]`)- `uri-enclosure` (`&lt;`)ATTENTION: This plugin already include all functionalities of `mdformat-gfm` and `mdformat-tables`, and isnot compatible with them, please don't install them again.## DevelopmentThis package utilises [flit](https://flit.readthedocs.io) as the build engine, and [tox](https://tox.readthedocs.io) for test automation.To install these development dependencies:```bashpip install tox```To run the tests:```bashtox```and with test coverage:```bashtox -e py37-cov```The easiest way to write tests, is to edit tests/fixtures.mdTo run the code formatting and style checks:```bashtox -e py37-pre-commit```or directly```bashpip install pre-commitpre-commit run --all```To run the pre-commit hook test:```bashtox -e py37-hook```## Publish to PyPiEither use flit directly:```bashpip install flitflit publish```or trigger the GitHub Action job, by creating a release with a tag equal to the version, e.g. `v0.0.1`.Note, this requires generating an API key on PyPi and adding it to the repository `Settings/Secrets`, under the name `PYPI_KEY`.[ci-badge]: https://github.com/open-mmlab/mdformat-openmmlab/workflows/CI/badge.svg?branch=master[ci-link]: https://github.com/open-mmlab/mdformat-openmmlab/actions?query=workflow%3ACI+branch%3Amaster+event%3Apush[pypi-badge]: https://img.shields.io/pypi/v/mdformat-openmmlab.svg[pypi-link]: https://pypi.org/project/mdformat-openmmlab</longdescription>
</pkgmetadata>