<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Qiskit Optimization[![License](https://img.shields.io/github/license/Qiskit/qiskit-optimization.svg?style=popout-square)](https://opensource.org/licenses/Apache-2.0)**Qiskit Optimization** is an open-source framework that covers the whole range from high-level modeling of optimizationproblems, with automatic conversion of problems to different required representations, to a suiteof easy-to-use quantum optimization algorithms that are ready to run on classical simulators,as well as on real quantum devices via Qiskit.The Optimization module enables easy, efficient modeling of optimization problems using[docplex](https://ibmdecisionoptimization.github.io/docplex-doc/).A uniform interface as well as automatic conversion between different problem representationsallows users to solve problems using a large set of algorithms, from variational quantum algorithms,such as the Quantum Approximate Optimization Algorithm QAOA, to Grover Adaptive Search using theGroverOptimizerleveraging fundamental algorithms provided by Terra. Furthermore, the modular designof the optimization module allows it to be easily extended and facilitates rapid development andtesting of new algorithms. Compatible classical optimizers are also provided for testing,validation, and benchmarking.## InstallationWe encourage installing Qiskit Optimization via the pip tool (a python package manager).```bashpip install qiskit-optimization```**pip** will handle all dependencies automatically and you will always install the latest(and well-tested) version.If you want to work on the very latest work-in-progress versions, either to try features ahead oftheir official release or if you want to contribute to Optimization, then you can install from source.To do this follow the instructions in the [documentation](https://qiskit.org/documentation/optimization/getting_started.html#installation).----------------------------------------------------------------------------------------------------### Optional Installs* **IBM CPLEX** may be installed using `pip install 'qiskit-optimization[cplex]'` to enable the reading of `LP` files and the usage of  the `CplexOptimizer`, wrapper for ``cplex.Cplex``. Currently there is no python 3.9 version of CPLEX. In this case, the CPLEX install  command will have no effect.* **CVXPY** may be installed using the command `pip install 'qiskit-optimization[cvx]'`.  CVXPY being installed will enable the usage of the Goemans-Williamson algorithm as an optimizer `GoemansWilliamsonOptimizer`.* **Matplotlib** may be installed using the command `pip install 'qiskit-optimization[matplotlib]'`.  Matplotlib being installed will enable the usage of the `draw` method in the graph optimization application classes.* **Gurobipy** may be installed using the command `pip install 'qiskit-optimization[gurobi]'`.  Gurobipy being installed will enable the usage of the GurobiOptimizer.### Creating Your First Optimization Programming Experiment in QiskitNow that Qiskit Optimization is installed, it's time to begin working with the optimization module.Let's try an optimization experiment to compute the solution of a[Max-Cut](https://en.wikipedia.org/wiki/Maximum_cut). The Max-Cut problem can be formulated asquadratic program, which can be solved using many several different algorithms in Qiskit.In this example, the MinimumEigenOptimizeris employed in combination with the Quantum Approximate Optimization Algorithm (QAOA) as minimumeigensolver routine.```pythonfrom docplex.mp.model import Modelfrom qiskit_optimization.algorithms import MinimumEigenOptimizerfrom qiskit_optimization.translators import from_docplex_mpfrom qiskit.utils import algorithm_globalsfrom qiskit.primitives import Samplerfrom qiskit.algorithms.minimum_eigensolvers import QAOAfrom qiskit.algorithms.optimizers import SPSA# Generate a graph of 4 nodesn = 4edges = [(0, 1, 1.0), (0, 2, 1.0), (0, 3, 1.0), (1, 2, 1.0), (2, 3, 1.0)]  # (node_i, node_j, weight)# Formulate the problem as a Docplex modelmodel = Model()# Create n binary variablesx = model.binary_var_list(n)# Define the objective function to be maximizedmodel.maximize(model.sum(w * x[i] * (1 - x[j]) + w * (1 - x[i]) * x[j] for i, j, w in edges))# Fix node 0 to be 1 to break the symmetry of the max-cut solutionmodel.add(x[0] == 1)# Convert the Docplex model into a `QuadraticProgram` objectproblem = from_docplex_mp(model)# Run quantum algorithm QAOA on qasm simulatorseed = 1234algorithm_globals.random_seed = seedspsa = SPSA(maxiter=250)sampler = Sampler()qaoa = QAOA(sampler=sampler, optimizer=spsa, reps=5)algorithm = MinimumEigenOptimizer(qaoa)result = algorithm.solve(problem)print(result.prettyprint())  # prints solution, x=[1, 0, 1, 0], the cost, fval=4```### Further examplesLearning path notebooks may be found in the[optimization tutorials](https://qiskit.org/documentation/optimization/tutorials/index.html) sectionof the documentation and are a great place to start.----------------------------------------------------------------------------------------------------## Contribution GuidelinesIf you'd like to contribute to Qiskit, please take a look at our[contribution guidelines](https://github.com/Qiskit/qiskit-optimization/blob/main/CONTRIBUTING.md).This project adheres to Qiskit's [code of conduct](https://github.com/Qiskit/qiskit-optimization/blob/main/CODE_OF_CONDUCT.md).By participating, you are expected to uphold this code.We use [GitHub issues](https://github.com/Qiskit/qiskit-optimization/issues) for tracking requests and bugs. Please[join the Qiskit Slack community](https://ibm.co/joinqiskitslack)and for discussion and simple questions.For questions that are more suited for a forum, we use the **Qiskit** tag in [Stack Overflow](https://stackoverflow.com/questions/tagged/qiskit).## Authors and CitationOptimization was inspired, authored and brought about by the collective work of a team of researchers.Optimization continues to grow with the help and work of[many people](https://github.com/Qiskit/qiskit-optimization/graphs/contributors), who contributeto the project at different levels.If you use Qiskit, please cite as per the provided[BibTeX file](https://github.com/Qiskit/qiskit/blob/master/Qiskit.bib).Please note that if you do not like the way your name is cited in the BibTex file then consultthe information found in the [.mailmap](https://github.com/Qiskit/qiskit-optimization/blob/main/.mailmap)file.## LicenseThis project uses the [Apache License 2.0](https://github.com/Qiskit/qiskit-optimization/blob/main/LICENSE.txt).</longdescription>
</pkgmetadata>