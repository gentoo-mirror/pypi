<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aiounittest===========|image0|_ |image1|_.. |image0| image:: https://api.travis-ci.com/kwarunek/aiounittest.svg?branch=master.. _image0: https://travis-ci.com/kwarunek/aiounittest.. |image1| image:: https://badge.fury.io/py/aiounittest.svg.. _image1: https://badge.fury.io/py/aiounittestInfo====The `aiounittest` is a helper library to ease of your pain (and boilerplate), when writing a test of the asynchronous code (:code:`asyncio`). You can test:* synchronous code (same as the :code:`unittest.TestCase`)* asynchronous code, it supports syntax with :code:`async`/:code:`await` (Python 3.5+) and :code:`asyncio.coroutine`/:code:`yield from` (Python 3.4)In the Python 3.8 (`release note &lt;https://docs.python.org/3/whatsnew/3.8.html#unittest&gt;`_) and newer consider to use the `unittest.IsolatedAsyncioTestCase &lt;https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase&gt;`_. Builtin :code:`unittest` module is now asyncio-featured.Installation============Use pip:::    pip install aiounittestUsage=====It's as simple as use of :code:`unittest.TestCase`. Full docs at http://aiounittest.readthedocs.io... code-block:: python    import asyncio    import aiounittest    async def add(x, y):        await asyncio.sleep(0.1)        return x + y    class MyTest(aiounittest.AsyncTestCase):        async def test_async_add(self):            ret = await add(5, 6)            self.assertEqual(ret, 11)        # or 3.4 way        @asyncio.coroutine        def test_sleep(self):            ret = yield from add(5, 6)            self.assertEqual(ret, 11)        # some regular test code        def test_something(self):            self.assertTrue(True)Library provides some additional tooling:* async_test_,* AsyncMockIterator_ mocking for `async for`,* futurized_ mock for coroutines... _futurized: http://aiounittest.readthedocs.io/en/latest/futurized.html.. _async_test: http://aiounittest.readthedocs.io/en/latest/async_test.html.. _AsyncMockIterator: http://aiounittest.readthedocs.io/en/latest/asyncmockiterator.htmlLicense=======MIT</longdescription>
</pkgmetadata>