<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># enochecker3A FastAPI based checker library for writing async checkers in python. It is called enochecker3 even though enochecker2 never existed, because it is intended to be the reference implementation for version 3 of the enochecker API specification which is yet to come.## Quick StartGetting started is really easy. Simply install `enochecker3` using```pip3 install enochecker3```Create an `example.py` file with the following content:```pythonimport secretsfrom typing import Optionalfrom httpx import AsyncClientfrom enochecker3 import (    ChainDB,    Enochecker,    GetflagCheckerTaskMessage,    MumbleException,    PutflagCheckerTaskMessage,)from enochecker3.utils import FlagSearcher, assert_equals, assert_inchecker = Enochecker(&quot;ExampleService&quot;, 1337)@checker.putflag(0)async def putflag_test(    task: PutflagCheckerTaskMessage,    client: AsyncClient,    db: ChainDB,) -&gt; None:    token = secrets.token_hex(32)    r = await client.post(&quot;/note&quot;, json={&quot;token&quot;: token, &quot;flag&quot;: task.flag})    assert_equals(r.status_code, 200, &quot;storing note with flag failed&quot;)    await db.set(&quot;token&quot;, token)@checker.getflag(0)async def getflag_test(    task: GetflagCheckerTaskMessage, client: AsyncClient, db: ChainDB) -&gt; None:    try:        token = await db.get(&quot;token&quot;)    except KeyError:        raise MumbleException(&quot;Missing database entry from putflag&quot;)    r = await client.get(f&quot;/note/{token}&quot;)    assert_equals(r.status_code, 200, &quot;getting note with flag failed&quot;)    assert_in(task.flag, r.text, &quot;flag missing from note&quot;)@checker.exploit(0)async def exploit_test(searcher: FlagSearcher, client: AsyncClient) -&gt; Optional[str]:    r = await client.get(        &quot;/note/*&quot;,    )    assert not r.is_error    if flag := searcher.search_flag(r.text):        return flag```Start the checker using```uvicorn --reload example:checker.app```And browse to (http://localhost:8000/docs) to explore the web interface, which allows you to send requests to the checker.## DocumentationYou can check out the full tutorial at (https://enowars.github.io/docs)</longdescription>
</pkgmetadata>