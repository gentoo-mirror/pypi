<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>*****************Flask-Marshmallow*****************|pypi-package| |build-status| |docs| |marshmallow3| |black|Flask + marshmallow for beautiful APIs======================================Flask-Marshmallow is a thin integration layer for `Flask`_ (a Python web framework) and `marshmallow`_ (an object serialization/deserialization library) that adds additional features to marshmallow, including URL and Hyperlinks fields for HATEOAS-ready APIs. It also (optionally) integrates with `Flask-SQLAlchemy &lt;http://flask-sqlalchemy.pocoo.org/&gt;`_.Get it now----------::    pip install flask-marshmallowCreate your app... code-block:: python    from flask import Flask    from flask_marshmallow import Marshmallow    app = Flask(__name__)    ma = Marshmallow(app)Write your models... code-block:: python    from your_orm import Model, Column, Integer, String, DateTime    class User(Model):        email = Column(String)        password = Column(String)        date_created = Column(DateTime, auto_now_add=True)Define your output format with marshmallow... code-block:: python    class UserSchema(ma.Schema):        class Meta:            # Fields to expose            fields = (&quot;email&quot;, &quot;date_created&quot;, &quot;_links&quot;)        # Smart hyperlinking        _links = ma.Hyperlinks(            {                &quot;self&quot;: ma.URLFor(&quot;user_detail&quot;, values=dict(id=&quot;&lt;id&gt;&quot;)),                &quot;collection&quot;: ma.URLFor(&quot;users&quot;),            }        )    user_schema = UserSchema()    users_schema = UserSchema(many=True)Output the data in your views... code-block:: python    @app.route(&quot;/api/users/&quot;)    def users():        all_users = User.all()        return users_schema.dump(all_users)    @app.route(&quot;/api/users/&lt;id&gt;&quot;)    def user_detail(id):        user = User.get(id)        return user_schema.dump(user)    # {    #     &quot;email&quot;: &quot;fred@queen.com&quot;,    #     &quot;date_created&quot;: &quot;Fri, 25 Apr 2014 06:02:56 -0000&quot;,    #     &quot;_links&quot;: {    #         &quot;self&quot;: &quot;/api/users/42&quot;,    #         &quot;collection&quot;: &quot;/api/users/&quot;    #     }    # }http://flask-marshmallow.readthedocs.io/========================================Learn More==========To learn more about marshmallow, check out its `docs &lt;http://marshmallow.readthedocs.io/en/latest/&gt;`_.Project Links=============- Docs: https://flask-marshmallow.readthedocs.io/- Changelog: http://flask-marshmallow.readthedocs.io/en/latest/changelog.html- PyPI: https://pypi.python.org/pypi/flask-marshmallow- Issues: https://github.com/marshmallow-code/flask-marshmallow/issuesLicense=======MIT licensed. See the bundled `LICENSE &lt;https://github.com/marshmallow-code/flask-marshmallow/blob/master/LICENSE&gt;`_ file for more details... _Flask: http://flask.pocoo.org.. _marshmallow: http://marshmallow.readthedocs.io.. |pypi-package| image:: https://badgen.net/pypi/v/flask-marshmallow    :target: https://pypi.org/project/flask-marshmallow/    :alt: Latest version.. |build-status| image:: https://github.com/marshmallow-code/flask-marshmallow/workflows/build/badge.svg?event=push    :target: https://github.com/marshmallow-code/flask-marshmallow/actions?query=workflow%3Abuild    :alt: Build status.. |docs| image:: https://readthedocs.org/projects/flask-marshmallow/badge/   :target: https://flask-marshmallow.readthedocs.io/   :alt: Documentation.. |marshmallow3| image:: https://badgen.net/badge/marshmallow/3    :target: https://marshmallow.readthedocs.io/en/latest/upgrading.html    :alt: marshmallow 3 compatible.. |black| image:: https://badgen.net/badge/code%20style/black/000    :target: https://github.com/ambv/black    :alt: code style: black</longdescription>
</pkgmetadata>