<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![DOI](http://joss.theoj.org/papers/10.21105/joss.00695/status.svg)](https://doi.org/10.21105/joss.00695) [![DOI](https://zenodo.org/badge/59614814.svg)](https://zenodo.org/badge/latestdoi/59614814)dustmaps========The ``dustmaps`` package provides a uniform interface for dealing with a numberof 2D and 3D maps of interstellar dust reddening/extinction.Supported Dust Maps-------------------The currently supported dust maps are:1. Burstein &amp; Heiles (1982; BH'82)2. Chen et al. (2014)3. Green, Schlafly, Finkbeiner et al. (2015,2018,2019; Bayestar)4. Marshall et al. (2006)5. Planck Collaboration (2013)6. Planck Collaboration (2016; GNILC)7. Sale et al. (2014; IPHAS)8. Schlegel, Finkbeiner &amp; Davis (1998; SFD'98)9. Lenz, Hensley &amp; Doré (2017)10. Peek &amp; Graves (2010)11. Leike &amp; Enßlin (2019)12. Leike, Glatzle &amp; Enßlin (2020)13. Edenhofer et al. (2023)14. Chiang (2023; CSFD)To request addition of another dust map in this package, [file an issue onGitHub](https://github.com/gregreen/dustmaps/issues), or submit a pull request.Installation------------Download the repository from [GitHub](https://github.com/gregreen/dustmaps) andthen run:    python setup.py install --large-data-dir=/path/where/you/want/large/data/files/storedAlternatively, you can use the Python package manager `pip`:    pip install dustmapsGetting the Data----------------To fetch the data for the SFD dust map, run:    python setup.py fetch --map-name=sfdYou can download the other dust maps by changing &quot;sfd&quot; to &quot;csfd&quot;, &quot;planck&quot;,&quot;planckGNILC&quot;, &quot;bayestar&quot;, &quot;iphas&quot;, &quot;marshall&quot;, &quot;chen2014&quot;, &quot;lenz2017&quot;,&quot;pg2010&quot;, &quot;leikeensslin2019&quot;, &quot;leike2020&quot;, &quot;edenhofer2023&quot; or &quot;bh&quot;.Alternatively, if you have used `pip` to install `dustmaps`, then you canconfigure the data directory and download the data by opening up a pythoninterpreter and running:    &gt;&gt;&gt; from dustmaps.config import config    &gt;&gt;&gt; config['data_dir'] = '/path/where/you/want/large/data/files/stored'    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.sfd    &gt;&gt;&gt; dustmaps.sfd.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.csfd    &gt;&gt;&gt; dustmaps.csfd.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.planck    &gt;&gt;&gt; dustmaps.planck.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.planck    &gt;&gt;&gt; dustmaps.planck.fetch(which='GNILC')    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.bayestar    &gt;&gt;&gt; dustmaps.bayestar.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.iphas    &gt;&gt;&gt; dustmaps.iphas.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.marshall    &gt;&gt;&gt; dustmaps.marshall.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.chen2014    &gt;&gt;&gt; dustmaps.chen2014.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.lenz2017    &gt;&gt;&gt; dustmaps.lenz2017.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.pg2010    &gt;&gt;&gt; dustmaps.pg2010.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.leike_ensslin_2019    &gt;&gt;&gt; dustmaps.leike_ensslin_2019.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.leike2020    &gt;&gt;&gt; dustmaps.leike2020.fetch()    &gt;&gt;&gt;    &gt;&gt;&gt; import dustmaps.edenhofer2023    &gt;&gt;&gt; dustmaps.edenhofer2023.fetch()Querying the Maps-----------------Maps are queried using[`astropy.coordinates.SkyCoord`](http://docs.astropy.org/en/stable/api/astropy.coordinates.SkyCoord.html#astropy.coordinates.SkyCoord)objects. This means that any coordinate system supported by `astropy` can beused as input. For example, we can query SFD'98 as follows:    &gt;&gt;&gt; from dustmaps.sfd import SFDQuery    &gt;&gt;&gt; from astropy.coordinates import SkyCoord    &gt;&gt;&gt;    &gt;&gt;&gt; sfd = SFDQuery()    &gt;&gt;&gt;    &gt;&gt;&gt; c = SkyCoord(            '05h00m00.00000s',            '+30d00m00.0000s',            frame='icrs')    &gt;&gt;&gt; print sfd(c)    0.483961Above, we have used the ICRS coordinate system (the inputs are RA and Dec). Wecan use other coordinate systems, such as Galactic coordinates, and we canprovide coordinate arrays. The following example uses both features:    &gt;&gt;&gt; c = SkyCoord(            [75.00000000, 130.00000000],            [-89.00000000, 10.00000000],            frame='galactic',            unit='deg')    &gt;&gt;&gt; print sfd(c)    [ 0.0146584   0.97695869]Documentation-------------Read the full documentation at http://dustmaps.readthedocs.io/en/latest/.Citation--------If you make use of this software in a publication, please cite[Green (2018) in The Journal of Open Source Software](https://doi.org/10.21105/joss.00695):    @ARTICLE{2018JOSS....3..695M,           author = {{Green}, {Gregory M.}},            title = &quot;{dustmaps: A Python interface for maps of interstellar dust}&quot;,          journal = {The Journal of Open Source Software},             year = &quot;2018&quot;,            month = &quot;Jun&quot;,           volume = {3},           number = {26},            pages = {695},              doi = {10.21105/joss.00695},           adsurl = {https://ui.adsabs.harvard.edu/abs/2018JOSS....3..695M},          adsnote = {Provided by the SAO/NASA Astrophysics Data System}    }Development-----------Development of `dustmaps` takes place on GitHub, athttps://github.com/gregreen/dustmaps. Any bugs, feature requests, pull requests,or other issues can be filed there. Contributions to the software are welcome.</longdescription>
</pkgmetadata>