<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Pytrovich](pytrovich.png)==========================================__pytrovich__ is a Python 3.6+ port of [petrovich library](https://github.com/petrovich) which inflects Russian names to a given grammatical case. It supports first names, last names and middle names inflections. Since version 0.0.2,gender detection is also available. [petrovich-java](https://github.com/petrovich/petrovich-java) was the main inspiration.__The alternative (earlier) port__: [Petrovich](https://github.com/damirazo/Petrovich)  ([@alexeyev](https://github.com/alexeyev) was not aware of it at the time of porting `petrovich` to Python). The only meaningful difference we have found is that it does not support gender detection.![Python 3x](https://img.shields.io/badge/python-3.x-blue.svg)[![PyPI version][pypi_badge]][pypi_link][![Downloads](https://pepy.tech/badge/pytrovich)](https://pepy.tech/project/pytrovich)[pypi_badge]: https://badge.fury.io/py/pytrovich.svg[pypi_link]: https://pypi.python.org/pypi/pytrovich## InstallationShould be as simple as that```bashpip install pytrovich```## Usage### Inflection```pythonfrom pytrovich.enums import NamePart, Gender, Casefrom pytrovich.maker import PetrovichDeclinationMakermaker = PetrovichDeclinationMaker()print(maker.make(NamePart.FIRSTNAME, Gender.MALE, Case.GENITIVE, &quot;Иван&quot;))  # Иванаprint(maker.make(NamePart.LASTNAME, Gender.MALE, Case.INSTRUMENTAL, &quot;Иванов&quot;))  # Ивановымprint(maker.make(NamePart.MIDDLENAME, Gender.FEMALE, Case.DATIVE, &quot;Ивановна&quot;))  # Ивановне```### Gender detection```python from pytrovich.detector import PetrovichGenderDetectordetector = PetrovichGenderDetector()print(detector.detect(firstname=&quot;Иван&quot;))  # Gender.MALEprint(detector.detect(firstname=&quot;Иван&quot;, middlename=&quot;Семёнович&quot;))  # Gender.MALEprint(detector.detect(firstname=&quot;Арзу&quot;, middlename=&quot;Лутфияр кызы&quot;))  # Gender.FEMALE```### Custom rule fileYou can replace default rules file with some custom one. Only JSON format is supported.```pythonmaker = PetrovichDeclinationMaker(&quot;/path/to/custom/rules.file.json&quot;)```E.g. if `pytrovich` fails on `PetrovichDeclinationMaker` creation, one may consider downloading `rules.json` directly from [petrovich-rules repo](https://github.com/petrovich/petrovich-rules) as a fix (please create an issue if that actually happens).### How to citeNot neccessary, but greatly appreciated, if you use this work.```latex@misc{Pytrovich,  title     = {{petrovich/pytrovich: Python3 port of Petrovich, an inflector for Russian anthroponyms}},  year      = {2020},  url       = {https://github.com/petrovich/pytrovich},  language  = {english},}```### More infoFor more information on the project please refer to other [petrovich](https://github.com/petrovich/) repos.### TODO- efficiency was not a top priority, the time has come for faster algorithms, RegEx and data structures- evaluation based on [petrovich-eval](https://github.com/petrovich/petrovich-eval/)- the support of hyphenated names## LicenseThis project is available under MIT license.</longdescription>
</pkgmetadata>