<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># filter-profanity [![Badge](https://img.shields.io/pypi/v/filter-profanity?color=3776AB&amp;logo=python&amp;style=for-the-badge)](https://pypi.org/project/filter-profanity/) [![Badge2](https://img.shields.io/pypi/dm/filter-profanity?color=3776AB&amp;logo=python&amp;style=for-the-badge)](https://pypi.org/project/filter-profanity/)``filter-profanity`` is one of the most efficient python packages that provides functionality to censor profanity in text! The package cross-verifies text with a list of opensource profane vocabulary that you can find [here](https://github.com/RobertJGabriel/Google-profanity-words).This package can be used in many areas including chat applications, bots and anything that handles user input!Thanks to [@itsmewulf](https://github.com/itsmewulf) and [@Sh-wayz](https://github.com/Sh-wayz) for contributing to the development of this project!## InstallationInstalling ``filter-profanity`` is as easy as running ``pip install filter-profanity``!## UsageWe've developed ``filter-profanity`` to make it as easy as possible to utilize.Currently, ``filter-profanity`` provides three functions - ``censor_profanity``, ``has_profanity`` and ``get_profanity````censor_profanity(text, optional_censor)`` takes in two arguments, the text that it scans for profanity and an optional censor to replace profane language with. If you do not provide a censor, we default to ``*``. Here's an example -```from profanity import censor_profanityprint(censor_profanity(&quot;This code is definitely not sh!t&quot;))# Prints -# This code is definitely not ****`````has_profanity(text)`` takes in one argument- the text that it must check for profanity. If the provided text has any profane content, it returns ``True`` otherwise it conditionally returns ``False``. Here's an example -```from profanity import has_profanityprint(has_profanity(&quot;This code is definitely not sh!t&quot;))# Prints -# True`````get_profanity(text, duplicates=False)`` takes two arguments - the text to return profanity from, and a boolean specifying if it should return duplicate words or not (defaults to False). If the text has any profane content, it returns a list with detected words, otherwise it returns an empty list. Here's an example -```from profanity import get_profanityprint(get_profanity(&quot;This code is definitely not sh!t sh!t&quot;))# Prints -# ['sh!t']```## ContributingThis package is opensource so anyone with adequate python experience can contribute to this project!### Report IssuesIf you find any error/bug/mistake with the package or in the code feel free to[create an issue and report it here](https://github.com/TrustedMercury/filter-profanity/issues)### Fix/Edit ContentIf you want to contribute to this package, fork the repository, clone it, make your changes and then [proceed to create a pull request here](https://github.com/TrustedMercury/trustedmercury.github.io/pulls)### ContactIf you want to contact me -  **Mail -** ```trustedmercury@gmail.com```  **Discord -** ```TrustedMercury#1953```</longdescription>
</pkgmetadata>