<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>============Introduction============.. image:: https://travis-ci.org/schwehr/libais.svg?branch=master    :target: https://travis-ci.org/schwehr/libais.. image:: https://scan.coverity.com/projects/5519/badge.svg    :target: https://scan.coverity.com/projects/5519.. image:: https://codeclimate.com/github/schwehr/libais/badges/gpa.svg    :target: https://codeclimate.com/github/schwehr/libais.. image:: https://badge.fury.io/py/libais.svg    :target: http://badge.fury.io/py/libaisLibrary for decoding maritime Automatic Identification System messages.See Also========`Automatic Identification System &lt;http://en.wikipedia.org/wiki/Automatic_Identification_System&gt;`_Other open source AIS projects:- `GPSd &lt;http://en.wikipedia.org/wiki/Gpsd&gt;`_- `AisLib &lt;https://github.com/dma-ais/AisLib&gt;`_- `noaadata &lt;http://github.com/schwehr/noaadata&gt;`_- `ais-areanotice &lt;https://github.com/schwehr/ais-areanotice-py&gt;`_- `OpenCPN &lt;https://github.com/OpenCPN/OpenCPN&gt;`_- `aisparser &lt;https://github.com/bcl/aisparser&gt;`_- `nmea_plus &lt;https://github.com/ifreecarve/nmea_plus&gt;`_Building========Building with Python--------------------.. code-block:: console    $ python setup.py build    $ python setup.py installTesting with Python--------------------.. code-block:: console    $ virtualenv ve    $ source ve/bin/activate    $ python setup.py testBuilding with CMake-------------------.. code-block:: console    $ cmake .    $ makeBuilding with legacy Makefile-----------------------------.. code-block:: console    $ make -f Makefile-custom testUsage=====There are two interfaces to libais, one high-level iterator based oneand a low-level fast C++ only one. The iterator based interface isaccessed the following way:.. code-block:: python    import ais.stream    with open(&quot;file.nmea&quot;) as f:        for msg in ais.stream.decode(f):            print msgTo use the low-level C++ interface directly, you need to handle multi-line messages and padding yourself:.. code-block:: python    import ais    ais.decode('15PIIv7P00D5i9HNn2Q3G?wB0t0I', 0)    ais.decode('402u=TiuaA000r5UJ`H4`?7000S:', 0)    ais.decode('55NBjP01mtGIL@CW;SM&lt;D60P5Ld000000000000P0`&lt;3557l0&lt;50@kk@K5h@00000000000', 2)There is also support for converting parsed messages to the structureoutput by GPSD / gpsdecode. For full compatibility, you have to writethe resulting message dictionaries to a file with json.dump() and adda newline after each message... code-block:: python    import ais.stream    import json    import ais.compatibility.gpsd    with open(&quot;infile.nmea&quot;) as inf:        with open(&quot;outfile.gpsd&quot;) as outf:            for msg in ais.stream.decode(f):                gpsdmsg = ais.compatibility.gpsd.mangle(msg)                json.dump(gpsdmsg, outf)                outf.write(&quot;\n&quot;)AIS Specification Documents---------------------------- ITU-1371, ITU-1371-{1,2,3,4]- `e-Navigation &lt;http://www.e-navigation.nl/asm&gt;`_- IMO Circ 236- IMO Circ 289- EU RISDeveloping----------The C++ code was switched to the Google style in November, 2012.Indenting should be by 2 spaces.http://google-styleguide.googlecode.com/svn/trunk/cpplint/.. code-block:: console    $ git clone https://github.com/schwehr/libais    $ cd libais    $ virtualenv ve    $ source ve/bin/activate    $ pip install -e .[tests]    $ python setup.py test    $ py.test --cov=ais --cov-report term-missingor.. code-block:: console    $ git clone https://github.com/schwehr/libais    $ cd libais    $ virtualenv ve    $ source ve/bin/activate    $ pip install -e .[test]    $ python setup.py develop    $ python setup.py test    $ py.test --cov=ais --cov-report term-missing</longdescription>
</pkgmetadata>