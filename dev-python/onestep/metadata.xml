<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=center&gt;&lt;img src=&quot;https://onestep.code05.com/logo-3.svg&quot; width=&quot;300&quot;&gt;&lt;/div&gt;&lt;div align=center&gt;&lt;a href=&quot;https://github.com/mic1on/onestep/actions/workflows/test.yml?query=event%3Apush+branch%3Amain&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://github.com/mic1on/onestep/workflows/test%20suite/badge.svg?branch=main&amp;event=push&quot; alt=&quot;Test&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/onestep&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/onestep.svg&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/onestep&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/onestep.svg&quot; alt=&quot;Supported Python versions&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;hr /&gt;仅需一步，轻松实现分布式异步任务。## Brokers- [x] MemoryBroker- [x] CronBroker- [x] WebHookBroker- [x] RabbitMQBroker- [x] RedisBroker- [ ] KafkaBroker## 😋example```python# example.pyfrom onestep import step, WebHookBroker# 对外提供一个webhook接口，接收外部的消息@step(from_broker=WebHookBroker(path=&quot;/push&quot;))def waiting_messages(message):    print(&quot;收到消息：&quot;, message)if __name__ == '__main__':    step.start(block=True)```also, you can use `onestep` command to start, like this:```bash$ onestep example```then, you can send a message to webhook:```bash$ curl -X POST -H &quot;Content-Type: application/json&quot; -d '{&quot;a&quot;: 1}' http://localhost:8090/push```## 🤩 other brokers```pythonfrom onestep import step, CronBroker# 每3秒触发一次任务@step(from_broker=CronBroker(&quot;* * * * * */3&quot;, body={&quot;a&quot;: 1}))def cron_task(message):    assert message.body == {&quot;a&quot;: 1}    return messageif __name__ == '__main__':    step.start(block=True)```🤔more examples: [examples](example)</longdescription>
</pkgmetadata>