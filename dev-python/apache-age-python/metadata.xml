<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Licensed to the Apache Software Foundation (ASF) under oneor more contributor license agreements.  See the NOTICE filedistributed with this work for additional informationregarding copyright ownership.  The ASF licenses this fileto you under the Apache License, Version 2.0 (the&quot;License&quot;); you may not use this file except in compliancewith the License.  You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing,software distributed under the License is distributed on an&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANYKIND, either express or implied.  See the License for thespecific language governing permissions and limitationsunder the License.Apache AGE](https://age.apache.org/) is a PostgreSQL extension that provides graph database functionality. The goal of the Apache AGE project is to create single storage that can handle both relational and graph model data so that users can use standard ANSI SQL along with openCypher, the Graph query language. This repository hosts the development of the Python driver for this Apache extension (currently in Incubator status). Thanks for checking it out.A graph consists of a set of vertices (also called nodes) and edges, where each individual vertex and edge possesses a map of properties. A vertex is the basic object of a graph, that can exist independently of everything else in the graph. An edge creates a directed connection between two vertices. A graph database is simply composed of vertices and edges. This type of database is useful when the meaning is in the relationships between the data. Relational databases can easily handle direct relationships, but indirect relationships are more difficult to deal with in relational databases. A graph database stores relationship information as a first-class entity. Apache AGE gives you the best of both worlds, simultaneously.Apache AGE is:- **Powerful** -- AGE adds graph database support to the already popular PostgreSQL database: PostgreSQL is used by organizations including Apple, Spotify, and NASA.- **Flexible** -- AGE allows you to perform openCypher queries, which make complex queries much easier to write.- **Intelligent** -- AGE allows you to perform graph queries that are the basis for many next level web services such as fraud &amp; intrustion detection, master data management, product recommendations, identity and relationship management, experience personalization, knowledge management and more.# AGE AGType parser and driver support for PythonAGType parser and driver support for [Apache AGE](https://age.apache.org/), graph extension for PostgreSQL.### Features* Unmarshal AGE result data(AGType) to Vertex, Edge, Path* Cypher query support for Psycopg2 PostgreSQL driver (enables to use cypher queries directly)### Prerequisites* over Python 3.9* This module runs on [psycopg2](https://www.psycopg.org/) and [antlr4-python3](https://pypi.org/project/antlr4-python3-runtime/)```sudo apt-get updatesudo apt-get install python3-dev libpq-devgit clone https://github.com/apache/age.gitcd age/drivers/python```### Install required packages```pip install -r requirements.txt```### Test```python test_age_py.py \-host &quot;127.0.0.1&quot; \-db &quot;postgres&quot; \-u &quot;postgres&quot; \-pass &quot;agens&quot; \-port 5432 \-gn &quot;test_graph&quot;``````python -m unittest -v test_agtypes.py```### Build from source```python setup.py install```### For more information about [Apache AGE](https://age.apache.org/)* Apache Age : https://age.apache.org/* GitHub : https://github.com/apache/age* Document : https://age.apache.org/age-manual/master/index.html### Check AGE loaded on your PostgreSQLConnect to your containerized Postgres instance and then run the following commands:```# psql CREATE EXTENSION age;LOAD 'age';SET search_path = ag_catalog, &quot;$user&quot;, public;```### Usage* If you are familiar with Psycopg2 driver : Go to [Jupyter Notebook : Basic Sample](samples/apache-age-basic.ipynb) * Simpler way to access Apache AGE [AGE Sample](samples/apache-age-note.ipynb) in Samples.* Agtype converting samples: [Agtype Sample](samples/apache-age-agtypes.ipynb) in Samples.### LicenseApache-2.0 License</longdescription>
</pkgmetadata>