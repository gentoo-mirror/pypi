<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dbt2lookerUse `dbt2looker` to generate Looker view files automatically from dbt models.Want a deeper integration between dbt and your BI tool? You should also checkout [Lightdash - the open source alternative to Looker](https://github.com/lightdash/lightdash)**Features*** **Column descriptions** synced to looker* **Dimension** for each column in dbt model* **Dimension groups** for datetime/timestamp/date columns* **Measures** defined through dbt column `metadata` [see below](#defining-measures)* Looker types* Warehouses: BigQuery, Snowflake, Redshift (postgres to come)[![demo](https://raw.githubusercontent.com/hubble-data/dbt2looker/main/docs/demo.gif)](https://asciinema.org/a/407407)## QuickstartRun `dbt2looker` in the root of your dbt project *after compiling looker docs*.**Generate Looker view files for all models:**```shelldbt docs generatedbt2looker```**Generate Looker view files for all models tagged `prod`**```shelldbt2looker --tag prod```## Install**Install from PyPi repository**Install from pypi into a fresh virtual environment.```# Create virtual envpython3.7 -m venv dbt2looker-venvsource dbt2looker-venv/bin/activate# Installpip install dbt2looker# Rundbt2looker```**Build from source**Requires [poetry](https://python-poetry.org/docs/) and python &gt;=3.7For development, it is recommended to use python 3.7:```# Ensure you're using 3.7poetry env use 3.7  # alternative: poetry env use /usr/local/opt/python@3.7/bin/python3# Install dependencies and main packagepoetry install# Run dbtlooker in poetry environmentpoetry run dbt2looker```## Defining measuresYou can define looker measures in your dbt `schema.yml` files. For example:```yamlmodels:  - name: pages    columns:      - name: url        description: &quot;Page url&quot;      - name: event_id        description: unique event id for page view        meta:           measures:             page_views:               type: count```</longdescription>
</pkgmetadata>