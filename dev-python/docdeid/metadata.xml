<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># docdeid[![tests](https://github.com/vmenger/docdeid/actions/workflows/test.yml/badge.svg)](https://github.com/vmenger/docdeid/actions/workflows/test.yml)[![coverage](https://coveralls.io/repos/github/vmenger/docdeid/badge.svg)](https://coveralls.io/github/vmenger/docdeid)[![build](https://github.com/vmenger/docdeid/actions/workflows/build.yml/badge.svg)](https://github.com/vmenger/docdeid/actions/workflows/build.yml)[![Documentation Status](https://readthedocs.org/projects/docdeid/badge/?version=latest)](https://docdeid.readthedocs.io/en/latest/)[![pypy version](https://img.shields.io/pypi/v/docdeid)](https://pypi.org/project/docdeid/)[![python versions](https://img.shields.io/pypi/pyversions/docdeid)](https://pypi.org/project/docdeid/)[![license](https://img.shields.io/github/license/vmenger/docdeid)](https://github.com/vmenger/docdeid/blob/main/LICENSE.md)[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[Installation](#installation) - [Getting started](#getting-started) - [Features](#features) - [Documentation](#documentation) - [Development and contributiong](#development-and-contributing) - [Authors](#authors) - [License](#license)  &lt;!-- start include in docs --&gt;Create your own document de-identifier using `docdeid`, a simple framework independent of language or domain.&gt; Note that `docdeid` is still on version 0.x.x, and breaking changes might occur. If you plan to do extensive work involving `docdeid`, feel free to get in touch to coordinate. ## InstallationGrab the latest version from PyPi:```bashpip install docdeid```## Getting started```pythonfrom docdeid import DocDeidfrom docdeid.tokenize import WordBoundaryTokenizerfrom docdeid.process SingleTokenLookupAnnotator, RegexpAnnotator, SimpleRedactordeidentifier = DocDeid()deidentifier.tokenizers[&quot;default&quot;] = WordBoundaryTokenizer()deidentifier.processors.add_processor(    &quot;name_lookup&quot;,    SingleTokenLookupAnnotator(lookup_values=[&quot;John&quot;, &quot;Mary&quot;], tag=&quot;name&quot;),)deidentifier.processors.add_processor(    &quot;name_regexp&quot;,    RegexpAnnotator(regexp_pattern=re.compile(r&quot;[A-Z]\w+&quot;), tag=&quot;name&quot;),)deidentifier.processors.add_processor(    &quot;redactor&quot;,     SimpleRedactor())text = &quot;John loves Mary, but Mary loves William.&quot;doc = deidentifier.deidentify(text)```Find the relevant info in the `Document` object:```pythonprint(doc.annotations)AnnotationSet({    Annotation(text='John', start_char=0, end_char=4, tag='name', length=4),    Annotation(text='Mary', start_char=11, end_char=15, tag='name', length=4),    Annotation(text='Mary', start_char=21, end_char=25, tag='name', length=4),     Annotation(text='William', start_char=32, end_char=39, tag='name', length=7)})``````pythonprint(doc.deidentified_text)'[NAME-1] loves [NAME-2], but [NAME-2] loves [NAME-3].'```## FeaturesAdditionally, `docdeid` features: - Ability to create your own `Annotator`, `AnnotationProcessor`, `Redactor` and `Tokenizer` components- Some basic re-usable components included (e.g. regexp, token lookup, token patterns)- Callable from one interface (`DocDeid.deidenitfy()`)- String processing and filtering- Fast lookup based on sets or tries- Anything you add! PRs welcome.For a more in-depth tutorial, see: [docs/tutorial](https://docdeid.readthedocs.io/en/latest/tutorial.html)&lt;!-- end include in docs --&gt;## DocumentationFor full documentation and API, see: [https://docdeid.readthedocs.io/en/latest/](https://docdeid.readthedocs.io/en/latest/)## Development and contributingFor setting up dev environment, see: [docs/environment](https://docdeid.readthedocs.io/en/latest/environment.html)For contributing, see: [docs/contributing](https://docdeid.readthedocs.io/en/latest/contributing.html)## AuthorsVincent Menger - *Author, maintainer*## LicenseThis project is licensed under the MIT license - see the [LICENSE.md](LICENSE.md) file for details.</longdescription>
</pkgmetadata>