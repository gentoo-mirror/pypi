<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Treys=====A pure Python poker hand evaluation library::   [ 3 ❤ ] , [ 3 ♠ ]Installation------------::   $ pip install treysImplementation notes--------------------Treys is a Python 3 port of`Deuces &lt;https://github.com/worldveil/deuces&gt;`__ based on the initial work in`msaindon’s &lt;https://github.com/msaindon/deuces&gt;`__ fork. Deuces was written by `Will Drevo &lt;http://willdrevo.com/&gt;`__ for the MIT Pokerbots Competition. Treys is lightweight and fast. All lookups are done with bit arithmetic anddictionary lookups. That said, Treys won’t beat a C implemenation (~250keval/s) but it is useful for situations where Python is required orwhere bots are allocated reasonable thinking time (human time scale).Treys handles 5, 6, and 7 card hand lookups. The 6 and 7 card lookupsare done by combinatorially evaluating the 5 card choices.Usage-----Treys is easy to set up and use... code:: python   &gt;&gt;&gt; from treys import Card   &gt;&gt;&gt; card = Card.new('Qh')Card objects are represented as integers to keep Treys performant andlightweight.Now let’s create the board and an example Texas Hold’em hand:.. code:: python   &gt;&gt;&gt; board = [   &gt;&gt;&gt;     Card.new('Ah'),   &gt;&gt;&gt;     Card.new('Kd'),   &gt;&gt;&gt;     Card.new('Jc')   &gt;&gt;&gt; ]   &gt;&gt;&gt; hand = [   &gt;&gt;&gt;    Card.new('Qs'),   &gt;&gt;&gt;    Card.new('Th')   &gt;&gt;&gt; ]Pretty print card integers to the terminal:::   &gt;&gt;&gt; Card.print_pretty_cards(board + hand)     [ A ❤ ] , [ K ♦ ] , [ J ♣ ] , [ Q ♠ ] , [ T ❤ ] If you have `termcolor &lt;http://pypi.python.org/pypi/termcolor&gt;`__installed, they will be colored as well.Otherwise move straight to evaluating your hand strength:.. code:: python   &gt;&gt;&gt; from treys import Evaluator   &gt;&gt;&gt; evaluator = Evaluator()   &gt;&gt;&gt; print(evaluator.evaluate(board, hand))   1600Hand strength is valued on a scale of 1 to 7462, where 1 is a RoyalFlush and 7462 is unsuited 7-5-4-3-2, as there are only 7642 distinctlyranked hands in poker.If you want to deal out cards randomly from a deck, you can also do thatwith Treys:.. code:: python   &gt;&gt;&gt; from treys import Deck   &gt;&gt;&gt; deck = Deck()   &gt;&gt;&gt; board = deck.draw(5)   &gt;&gt;&gt; player1_hand = deck.draw(2)   &gt;&gt;&gt; player2_hand = deck.draw(2)and print them:::   &gt;&gt;&gt; Card.print_pretty_cards(board)     [ 4 ♣ ] , [ A ♠ ] , [ 5 ♦ ] , [ K ♣ ] , [ 2 ♠ ]   &gt;&gt;&gt; Card.print_pretty_cards(player1_hand)     [ 6 ♣ ] , [ 7 ❤ ]    &gt;&gt;&gt; Card.print_pretty_cards(player2_hand)     [ A ♣ ] , [ 3 ❤ ] Let’s evaluate both hands strength, and then bin them into classes, onefor each hand type (High Card, Pair, etc).. code:: python   &gt;&gt;&gt; p1_score = evaluator.evaluate(board, player1_hand)   &gt;&gt;&gt; p2_score = evaluator.evaluate(board, player2_hand)   &gt;&gt;&gt; p1_class = evaluator.get_rank_class(p1_score)   &gt;&gt;&gt; p2_class = evaluator.get_rank_class(p2_score)or get a human-friendly string to describe the score,::   &gt;&gt;&gt; print(&quot;Player 1 hand rank = %d (%s)\n&quot; % (p1_score, evaluator.class_to_string(p1_class)))   Player 1 hand rank = 6330 (High Card)   &gt;&gt;&gt; print(&quot;Player 2 hand rank = %d (%s)\n&quot; % (p2_score, evaluator.class_to_string(p2_class)))   Player 2 hand rank = 1609 (Straight)or, coolest of all, get a blow-by-blow analysis of the stages of thegame with relation to hand strength:::   &gt;&gt;&gt; hands = [player1_hand, player2_hand]   &gt;&gt;&gt; evaluator.hand_summary(board, hands)   ========== FLOP ==========   Player 1 hand = High Card, percentage rank among all hands = 0.893192   Player 2 hand = Pair, percentage rank among all hands = 0.474672   Player 2 hand is currently winning.   ========== TURN ==========   Player 1 hand = High Card, percentage rank among all hands = 0.848298   Player 2 hand = Pair, percentage rank among all hands = 0.452292   Player 2 hand is currently winning.   ========== RIVER ==========   Player 1 hand = High Card, percentage rank among all hands = 0.848298   Player 2 hand = Straight, percentage rank among all hands = 0.215626   ========== HAND OVER ==========   Player 2 is the winner with a Straight</longdescription>
</pkgmetadata>