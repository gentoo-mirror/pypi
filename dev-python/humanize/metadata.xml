<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># humanize[![PyPI version](https://img.shields.io/pypi/v/humanize.svg?logo=pypi&amp;logoColor=FFE873)](https://pypi.org/project/humanize/)[![Supported Python versions](https://img.shields.io/pypi/pyversions/humanize.svg?logo=python&amp;logoColor=FFE873)](https://pypi.org/project/humanize/)[![Documentation Status](https://readthedocs.org/projects/python-humanize/badge/?version=latest)](https://python-humanize.readthedocs.io/en/latest/?badge=latest)[![PyPI downloads](https://img.shields.io/pypi/dm/humanize.svg)](https://pypistats.org/packages/humanize)[![GitHub Actions status](https://github.com/python-humanize/humanize/workflows/Test/badge.svg)](https://github.com/python-humanize/humanize/actions)[![codecov](https://codecov.io/gh/python-humanize/humanize/branch/main/graph/badge.svg)](https://codecov.io/gh/python-humanize/humanize)[![MIT License](https://img.shields.io/github/license/python-humanize/humanize.svg)](LICENCE)[![Tidelift](https://tidelift.com/badges/package/pypi/humanize)](https://tidelift.com/subscription/pkg/pypi-humanize?utm_source=pypi-humanize&amp;utm_medium=badge)This modest package contains various common humanization utilities, like turninga number into a fuzzy human-readable duration (&quot;3 minutes ago&quot;) or into ahuman-readable size or throughput. It is localized to:- Arabic- Basque- Bengali- Brazilian Portuguese- Catalan- Danish- Dutch- Esperanto- European Portuguese- Finnish- French- German- Greek- Indonesian- Italian- Japanese- Korean- Persian- Polish- Russian- Simplified Chinese- Slovak- Slovenian- Spanish- Swedish- Turkish- Ukrainian- Vietnamese## API reference[https://python-humanize.readthedocs.io](https://python-humanize.readthedocs.io)&lt;!-- usage-start --&gt;## Installation### From PyPI```bashpython3 -m pip install --upgrade humanize```### From source```bashgit clone https://github.com/python-humanize/humanizecd humanizepython3 -m pip install -e .```## Usage### Integer humanization```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; humanize.intcomma(12345)'12,345'&gt;&gt;&gt; humanize.intword(123455913)'123.5 million'&gt;&gt;&gt; humanize.intword(12345591313)'12.3 billion'&gt;&gt;&gt; humanize.apnumber(4)'four'&gt;&gt;&gt; humanize.apnumber(41)'41'```### Date &amp; time humanization```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; import datetime as dt&gt;&gt;&gt; humanize.naturalday(dt.datetime.now())'today'&gt;&gt;&gt; humanize.naturaldelta(dt.timedelta(seconds=1001))'16 minutes'&gt;&gt;&gt; humanize.naturalday(dt.datetime.now() - dt.timedelta(days=1))'yesterday'&gt;&gt;&gt; humanize.naturalday(dt.date(2007, 6, 5))'Jun 05'&gt;&gt;&gt; humanize.naturaldate(dt.date(2007, 6, 5))'Jun 05 2007'&gt;&gt;&gt; humanize.naturaltime(dt.datetime.now() - dt.timedelta(seconds=1))'a second ago'&gt;&gt;&gt; humanize.naturaltime(dt.datetime.now() - dt.timedelta(seconds=3600))'an hour ago'```### Precise time delta```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; import datetime as dt&gt;&gt;&gt; delta = dt.timedelta(seconds=3633, days=2, microseconds=123000)&gt;&gt;&gt; humanize.precisedelta(delta)'2 days, 1 hour and 33.12 seconds'&gt;&gt;&gt; humanize.precisedelta(delta, minimum_unit=&quot;microseconds&quot;)'2 days, 1 hour, 33 seconds and 123 milliseconds'&gt;&gt;&gt; humanize.precisedelta(delta, suppress=[&quot;days&quot;], format=&quot;%0.4f&quot;)'49 hours and 33.1230 seconds'```#### Smaller unitsIf seconds are too large, set `minimum_unit` to milliseconds or microseconds:```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; import datetime as dt&gt;&gt;&gt; humanize.naturaldelta(dt.timedelta(seconds=2))'2 seconds'``````pycon&gt;&gt;&gt; delta = dt.timedelta(milliseconds=4)&gt;&gt;&gt; humanize.naturaldelta(delta)'a moment'&gt;&gt;&gt; humanize.naturaldelta(delta, minimum_unit=&quot;milliseconds&quot;)'4 milliseconds'&gt;&gt;&gt; humanize.naturaldelta(delta, minimum_unit=&quot;microseconds&quot;)'4 milliseconds'``````pycon&gt;&gt;&gt; humanize.naturaltime(delta)'now'&gt;&gt;&gt; humanize.naturaltime(delta, minimum_unit=&quot;milliseconds&quot;)'4 milliseconds ago'&gt;&gt;&gt; humanize.naturaltime(delta, minimum_unit=&quot;microseconds&quot;)'4 milliseconds ago'```### File size humanization```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; humanize.naturalsize(1_000_000)'1.0 MB'&gt;&gt;&gt; humanize.naturalsize(1_000_000, binary=True)'976.6 KiB'&gt;&gt;&gt; humanize.naturalsize(1_000_000, gnu=True)'976.6K'```### Human-readable floating point numbers```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; humanize.fractional(1/3)'1/3'&gt;&gt;&gt; humanize.fractional(1.5)'1 1/2'&gt;&gt;&gt; humanize.fractional(0.3)'3/10'&gt;&gt;&gt; humanize.fractional(0.333)'333/1000'&gt;&gt;&gt; humanize.fractional(1)'1'```### Scientific notation```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; humanize.scientific(0.3)'3.00 x 10⁻¹'&gt;&gt;&gt; humanize.scientific(500)'5.00 x 10²'&gt;&gt;&gt; humanize.scientific(&quot;20000&quot;)'2.00 x 10⁴'&gt;&gt;&gt; humanize.scientific(1**10)'1.00 x 10⁰'&gt;&gt;&gt; humanize.scientific(1**10, precision=1)'1.0 x 10⁰'&gt;&gt;&gt; humanize.scientific(1**10, precision=0)'1 x 10⁰'```## LocalizationHow to change locale at runtime:```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; import datetime as dt&gt;&gt;&gt; humanize.naturaltime(dt.timedelta(seconds=3))'3 seconds ago'&gt;&gt;&gt; _t = humanize.i18n.activate(&quot;ru_RU&quot;)&gt;&gt;&gt; humanize.naturaltime(dt.timedelta(seconds=3))'3 секунды назад'&gt;&gt;&gt; humanize.i18n.deactivate()&gt;&gt;&gt; humanize.naturaltime(dt.timedelta(seconds=3))'3 seconds ago'```You can pass additional parameter `path` to `activate` to specify a path to searchlocales in.```pycon&gt;&gt;&gt; import humanize&gt;&gt;&gt; humanize.i18n.activate(&quot;xx_XX&quot;)&lt;...&gt;FileNotFoundError: [Errno 2] No translation file found for domain: 'humanize'&gt;&gt;&gt; humanize.i18n.activate(&quot;pt_BR&quot;, path=&quot;path/to/my/own/translation/&quot;)&lt;gettext.GNUTranslations instance ...&gt;```&lt;!-- usage-end --&gt;How to add new phrases to existing locale files:```shxgettext --from-code=UTF-8 -o humanize.pot -k'_' -k'N_' -k'P_:1c,2' -k'NS_:1,2' -k'_ngettext:1,2' -l python src/humanize/*.py  # extract new phrasesmsgmerge -U src/humanize/locale/ru_RU/LC_MESSAGES/humanize.po humanize.pot # add them to locale files```How to add a new locale:```shmsginit -i humanize.pot -o humanize/locale/&lt;locale name&gt;/LC_MESSAGES/humanize.po --locale &lt;locale name&gt;```Where `&lt;locale name&gt;` is a locale abbreviation, eg. `en_GB`, `pt_BR` or just `ru`, `fr`etc.List the language at the top of this README.</longdescription>
</pkgmetadata>