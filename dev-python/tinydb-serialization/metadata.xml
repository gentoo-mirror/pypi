<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>tinydb-serialization^^^^^^^^^^^^^^^^^^^^|Build Status| |Coverage| |Version|``tinydb-serialization`` provides serialization for objects that TinyDBotherwise couldn't handle.Usage*****General Usage-------------To use a serializer, create a ``SerializationMiddleware`` instance withthe storage class you want to use and register the serializers you wantto use. Then you pass the middleware instance as the storage to TinyDB:.. code-block:: python    &gt;&gt;&gt; from tinydb import TinyDB, Query    &gt;&gt;&gt; from tinydb.storages import JSONStorage    &gt;&gt;&gt; from tinydb_serialization import SerializationMiddleware    &gt;&gt;&gt; from tinydb_serialization.serializers import DateTimeSerializer    &gt;&gt;&gt;    &gt;&gt;&gt; from datetime import datetime    &gt;&gt;&gt;    &gt;&gt;&gt; serialization = SerializationMiddleware(JSONStorage)    &gt;&gt;&gt; serialization.register_serializer(DateTimeSerializer(), 'TinyDate')    &gt;&gt;&gt;    &gt;&gt;&gt; db = TinyDB('db.json', storage=serialization)    &gt;&gt;&gt; db.insert({'date': datetime(2000, 1, 1, 12, 0, 0)})    &gt;&gt;&gt; db.all()    [{'date': datetime.datetime(2000, 1, 1, 12, 0)}]    &gt;&gt;&gt; query = Query()    &gt;&gt;&gt; db.insert({'date': datetime(2010, 1, 1, 12, 0, 0)})    &gt;&gt;&gt; db.search(query.date &gt; datetime(2005, 1, 1))    [{'date': datetime.datetime(2010, 1, 1, 12, 0)}]**Important:** A ``SerializationMiddleware`` instance always wraps a database's storage.This means that the ``SerializationMiddleware`` instance **cannot** be sharedbetween multiple ``TinyDB`` instances as they would use the same underlying storageinstance and thus share all data between both instances.Provided Serializers--------------------- ``tinydb_serialization.serializers.DateTimeSerializer``: serializes ``datetime`` objects  as ISO 8601 formatted stringsCreating Custom Serializers---------------------------In this example we implement a serializer for ``datetime`` objects (like the one providedby this package):.. code-block:: python    from datetime import datetime    from tinydb_serialization import Serializer    class DateTimeSerializer(Serializer):        OBJ_CLASS = datetime  # The class this serializer handles        def encode(self, obj):            return obj.isoformat()        def decode(self, s):            return datetime.fromisoformat(s)Changelog***********v2.1.1** (2023-07-24)------------------------ Fix VSCode Pylance type error (see `pull request #14 &lt;https://github.com/msiemens/tinydb-serialization/pull/14&gt;`_)- Add support for storages that encode as binary strings (see `pull request #17 &lt;https://github.com/msiemens/tinydb-serialization/pull/17&gt;`_)- Drop Python 3.7 support**v2.1.0** (2021-01-23)------------------------ Include the ``DateTimeSerializer`` in this package (see `issue #10 &lt;https://github.com/msiemens/tinydb-serialization/pull/10&gt;`_)- Drop Python 3.6 support (as 3.7 is needed for date parsing)**v2.0.0** (2020-05-26)------------------------ Add TinyDB v4.0.0 support (see `pull request #9 &lt;https://github.com/msiemens/tinydb-serialization/pull/9&gt;`_)**v1.0.4** (2017-03-27)------------------------ Don't modify the original element if it contains a list (see  `pull request #5 &lt;https://github.com/msiemens/tinydb-serialization/pull/5&gt;`_)**v1.0.3** (2016-02-11)------------------------ Handle nested data (nested dicts, lists) properly when serializing/deserializing (see  `pull request #3 &lt;https://github.com/msiemens/tinydb-serialization/pull/3&gt;`_)**v1.0.2** (2016-01-04)------------------------ Don't destroy original data when serializing (see  `pull request #2 &lt;https://github.com/msiemens/tinydb-serialization/pull/2&gt;`_)**v1.0.1** (2015-11-17)------------------------ Fix installation via pip (see `issue #1 &lt;https://github.com/msiemens/tinydb-serialization/issues/1&gt;`_)**v1.0.0** (2015-09-27)------------------------ Initial release on PyPI.. |Build Status| image:: https://img.shields.io/github/workflow/status/msiemens/tinydb-serialization/Python%20CI?style=flat-square   :target: https://github.com/msiemens/tinydb-serialization/actions?query=workflow%3A%22Python+CI%22.. |Coverage| image:: https://img.shields.io/coveralls/msiemens/tinydb-serialization.svg?style=flat-square   :target: https://coveralls.io/r/msiemens/tinydb-serialization.. |Version| image:: https://img.shields.io/pypi/v/tinydb-serialization.svg?style=flat-square   :target: https://pypi.python.org/pypi/tinydb-serialization/</longdescription>
</pkgmetadata>