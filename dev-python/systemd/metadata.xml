<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SystemD for Python==================.. image:: https://img.shields.io/pypi/v/systemd.svg    :target: https://pypi.python.org/pypi/systemd/    :alt: Latest Version.. image:: https://img.shields.io/pypi/wheel/systemd.svg    :target: https://pypi.python.org/pypi/systemd/.. image:: https://img.shields.io/pypi/pyversions/systemd.svg    :target: https://pypi.python.org/pypi/systemd/.. image:: https://img.shields.io/pypi/l/systemd.svg    :target: https://pypi.python.org/pypi/systemd/Python systemd wrapper using CythonInstallation------------You should install systemd headers For debian users:.. code-block:: bash    apt-get install build-essential \        libsystemd-journal-dev \        libsystemd-daemon-dev \        libsystemd-devFor CentOS/RHEL.. code-block:: bash    yum install gcc systemd-develAnd install it from pypi.. code-block:: bash    pip install systemdUsage examples--------------Systemd daemon notification.. code-block:: python    from systemd.daemon import notify, Notification    # Send READY=1    notify(Notification.READY)    # Send status    notify(Notification.STATUS, &quot;I'm fine.&quot;)    # Send stopping    notify(Notification.STOPPING)Write message into Systemd journal.. code-block:: python    from systemd import journal    journal.write(&quot;Hello Lennart&quot;)    # Or send structured data    journal.send(        message=&quot;Hello Lennart&quot;,        priority=journal.Priority.INFO,        some_field='some value',    )Or add logging handler to python logger.. code-block:: python    from systemd import journal    import logging    import uuid    logging.basicConfig(level=logging.DEBUG)    logger = logging.getLogger()    logger.addHandler(journal.JournaldLogHandler())    try:        log.info(&quot;Trying to do something&quot;)        raise Exception('foo')    except:        logger.exception(&quot;Test Exception %s&quot;, 1)</longdescription>
</pkgmetadata>