<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/7bf4ee4d616049658be2f1a6d12fb5c0)](https://app.codacy.com?utm_source=gh&amp;utm_medium=referral&amp;utm_content=&amp;utm_campaign=Badge_coverage)[![Codacy Badge](https://app.codacy.com/project/badge/Grade/7bf4ee4d616049658be2f1a6d12fb5c0)](https://app.codacy.com?utm_source=gh&amp;utm_medium=referral&amp;utm_content=&amp;utm_campaign=Badge_grade)![CI/CD Workflow](https://github.com/valued-app/valued.py/actions/workflows/ci-cd.yaml/badge.svg)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)# Valued Python ClientA Python client library for sending events to [Valued](https://valued.app).## Installation```bash$ pip install valued```## UsageYou can create a `valued.Client` instance and call `action`, `sync` etc directly on the client.```pythonimport osimport valued# Get the token for authentication.token = os.environ.get(&quot;VALUED_TOKEN&quot;) # or wherever you store credentials# Create a clientclient = valued.Client(token)# Record an actionclient.action(&quot;report.generated&quot;, {  &quot;customer&quot;: { &quot;id&quot;: 12 },  &quot;user&quot;: { &quot;id&quot;: 123 },  &quot;attributes&quot;: { &quot;format&quot;: &quot;pdf&quot; }})# Sync user dataclient.sync_user({  &quot;id&quot;: 123,  &quot;name&quot;: &quot;Josh Kalderimis&quot;,  &quot;email&quot;: &quot;josh@valued.app&quot;,  &quot;location&quot;: { &quot;country&quot;: &quot;NZ&quot;, &quot;region&quot;: &quot;Wellington&quot; }})```## ContributingAll commits messages should be in the [Angluar commit style](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commit-message-format)- feat: A new feature.- fix: A bug fix.- docs: Documentation changes.- style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc).- refactor: A code change that neither fixes a bug nor adds a feature.- perf: A code change that improves performance.- test: Changes to the test framework.- build: Changes to the build process or tools.</longdescription>
</pkgmetadata>