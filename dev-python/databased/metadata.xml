<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DatabasedDatabased is a module that wraps the standard library SQLite3 module to streamline integrating a database into a project.&lt;br&gt;Install with:&lt;pre&gt;pip install databased&lt;/pre&gt;## Usage:### Creation and Connections&lt;pre&gt;from databased import Databased# for reference, &quot;chi.db&quot; is database of Chicago food inspections and business licensesdb = Databased(&quot;chi.db&quot;) # The file will be created if it doesn't exist&lt;/pre&gt;You can call `db.connect()` manually, but generally you shouldn't need to.&lt;br&gt;All database functions are built on the `db.query()` function, which will open a connection if one isn't already established.&lt;br&gt;e.g. Accessing the `db.tables` property uses the `db.query()` function and opens a connection for you&lt;pre&gt;print(*db.tables, sep=&quot;\n&quot;)&lt;/pre&gt;Output:&lt;pre&gt;business_addressesbusinesseslicense_codeslicense_statuseslicensesfacility_typesrisk_levelsfacility_addressesinspected_businessesinspection_typesresult_typesinspectionsviolation_typesviolations&lt;/pre&gt;`db.query()` executes SQL strings and returns the results as a list of dictionaries&lt;pre&gt;print(    *db.query(&quot;SELECT * FROM businesses WHERE legal_name LIKE 'z%' LIMIT 5;&quot;), sep=&quot;\n&quot;)&lt;/pre&gt;Output:&lt;pre&gt;{'account_number': 106, 'legal_name': 'Zaven, Inc.', 'dba': 'Zaven / Lepetit Paris', 'address_id': 6880}{'account_number': 113, 'legal_name': 'Zanies Comedy Clubs, Inc.', 'dba': 'Zanies Comedy Club', 'address_id': 5702}{'account_number': 122, 'legal_name': 'Ziemek Corporation, Inc.', 'dba': 'The Thirsty Tavern', 'address_id': 146144}{'account_number': 1918, 'legal_name': 'Zimmies Inc #8', 'dba': 'Original Pancake House', 'address_id': 143541}{'account_number': 3007, 'legal_name': 'Zikainan Nursing Home Inc', 'dba': 'All American Nursing Home', 'address_id': 155957}&lt;/pre&gt;When a connection is no longer needed, it will need to be manually closed.&lt;pre&gt;db.close()&lt;/pre&gt;By default the database will be committed when db.close() is called.&lt;br&gt;This can be prevented by setting `commit_on_close` to `False` in either the Databased constructor or through the property `db.commit_on_close`.&lt;br&gt;&lt;pre&gt;db = Databased(&quot;chi.db&quot;, commit_on_close=False)# ordb.commit_on_close = False&lt;/pre&gt;The database can always be committed manually with `db.commit()`.&lt;br&gt;Using Databased with a context manager will call the close() method for you (and commit the database if `commit_on_close` is `True`)&lt;br&gt;&lt;pre&gt;with Databased(&quot;chi.db&quot;) as db:    print(f&quot;{db.connected=}&quot;)    print(*db.get_columns(&quot;businesses&quot;), sep=&quot;\n&quot;)print(f&quot;{db.connected=}&quot;)&lt;/pre&gt;Output:&lt;pre&gt;db.connected=Trueaccount_numberlegal_namedbaaddress_iddb.connected=False&lt;/pre&gt;### Tables and Columns&lt;pre&gt;with Databased(&quot;chi.db&quot;) as db:    db.create_table(        &quot;inspectors&quot;,        &quot;id INTEGER PRIMARY KEY AUTOINCREMENT&quot;,        &quot;first_name TEXT&quot;,        &quot;last_name TEXT&quot;,        &quot;ward INTEGER&quot;,    )    db.insert(        &quot;inspectors&quot;,        (&quot;first_name&quot;, &quot;last_name&quot;, &quot;ward&quot;),        [(&quot;Billy&quot;, &quot;Bob&quot;, 1), (&quot;Jenna&quot;, &quot;Jones&quot;, 33), (&quot;Tiny&quot;, &quot;Tim&quot;, 25)],    )    print(db.to_grid(db.select(&quot;inspectors&quot;)))    print()    # ---------------------------------------------------------    db.rename_table(&quot;inspectors&quot;, &quot;employees&quot;)    db.add_column(&quot;employees&quot;, &quot;title TEXT DEFAULT inspector&quot;)    print(db.to_grid(db.select(&quot;employees&quot;)))    print()    # ---------------------------------------------------------    db.drop_column(&quot;employees&quot;, &quot;title&quot;)    db.rename_table(&quot;employees&quot;, &quot;inspectors&quot;)    print(db.to_grid(db.select(&quot;inspectors&quot;)))    print()    db.drop_table(&quot;inspectors&quot;)&lt;/pre&gt;Output:&lt;pre&gt;+------+--------------+-------------+--------+| id   | first_name   | last_name   | ward   |+======+==============+=============+========+| 1    | Billy        | Bob         | 1      |+------+--------------+-------------+--------+| 2    | Jenna        | Jones       | 33     |+------+--------------+-------------+--------+| 3    | Tiny         | Tim         | 25     |+------+--------------+-------------+--------++------+--------------+-------------+--------+-----------+| id   | first_name   | last_name   | ward   | title     |+======+==============+=============+========+===========+| 1    | Billy        | Bob         | 1      | inspector |+------+--------------+-------------+--------+-----------+| 2    | Jenna        | Jones       | 33     | inspector |+------+--------------+-------------+--------+-----------+| 3    | Tiny         | Tim         | 25     | inspector |+------+--------------+-------------+--------+-----------++------+--------------+-------------+--------+| id   | first_name   | last_name   | ward   |+======+==============+=============+========+| 1    | Billy        | Bob         | 1      |+------+--------------+-------------+--------+| 2    | Jenna        | Jones       | 33     |+------+--------------+-------------+--------+| 3    | Tiny         | Tim         | 25     |+------+--------------+-------------+--------+&lt;/pre&gt;### SelectModerately complex queries can be executed with `db.select()`.&lt;br&gt;More advanced queries will need to be written out and executed directly with `db.query()`.&lt;br&gt;Example using all available `db.select()` parameters:&lt;pre&gt;with Databased(&quot;chi.db&quot;) as db:    print(        db.to_grid(            db.select(                table=&quot;inspections&quot;,                columns=[                    &quot;inspections.license_number&quot;,                    &quot;businesses.legal_name&quot;,                    &quot;result_types.id&quot;,                    &quot;result_types.description&quot;,                    &quot;business_addresses.ward&quot;,                    &quot;COUNT(*) AS num_inspections&quot;,                ],                joins=[                    &quot;INNER JOIN result_types ON inspections.result_type_id = result_types.id&quot;,                    &quot;INNER JOIN licenses ON inspections.license_number = licenses.license_number&quot;,                    &quot;INNER JOIN businesses ON licenses.account_number = businesses.account_number&quot;,                    &quot;INNER JOIN business_addresses ON businesses.address_id = business_addresses.id&quot;,                ],                where=&quot;business_addresses.ward IN (1, 10, 20, 40) OR result_types.id &lt; 5&quot;,                group_by=&quot;inspections.license_number&quot;,                having=&quot;num_inspections &gt; 10&quot;,                order_by=&quot;num_inspections DESC&quot;,                limit=5,            )        )    )    print(&quot;&lt;==equivalent==&gt;&quot;)    print(        db.to_grid(            db.query(                &quot;&quot;&quot;            SELECT             inspections.license_number, businesses.legal_name,             result_types.id, result_types.description,             business_addresses.ward, COUNT(*) as num_inspections            FROM inspections            INNER JOIN result_types ON inspections.result_type_id = result_types.id            INNER JOIN licenses ON inspections.license_number = licenses.license_number            INNER JOIN businesses ON licenses.account_number = businesses.account_number            INNER JOIN business_addresses ON businesses.address_id = business_addresses.id            WHERE business_addresses.ward IN (1, 10, 20, 40) OR result_types.id &lt; 5            GROUP BY inspections.license_number            HAVING num_inspections &gt; 10            ORDER BY num_inspections DESC            LIMIT 5;            &quot;&quot;&quot;            )        )&lt;/pre&gt;Output:&lt;pre&gt;+------------------+-------------------------+------+--------------------+--------+-------------------+| license_number   | legal_name              | id   | description        | ward   | num_inspections   |+==================+=========================+======+====================+========+===================+| 2583423          | Meadowflour Llc         | 7    | Pass W/ Conditions | 40     | 18                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 2594606          | Hz Ops Holdings Inc     | 4    | Not Ready          | 6      | 17                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 2405951          | Wendy's Properties, Llc | 7    | Pass W/ Conditions | 10     | 17                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 833              | Steve Ziemek            | 7    | Pass W/ Conditions | 10     | 17                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 55418            | 2053 W. Division Inc.   | 5    | Out Of Business    | 1      | 16                |+------------------+-------------------------+------+--------------------+--------+-------------------+&lt;==equivalent==&gt;+------------------+-------------------------+------+--------------------+--------+-------------------+| license_number   | legal_name              | id   | description        | ward   | num_inspections   |+==================+=========================+======+====================+========+===================+| 2583423          | Meadowflour Llc         | 7    | Pass W/ Conditions | 40     | 18                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 2594606          | Hz Ops Holdings Inc     | 4    | Not Ready          | 6      | 17                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 2405951          | Wendy's Properties, Llc | 7    | Pass W/ Conditions | 10     | 17                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 833              | Steve Ziemek            | 7    | Pass W/ Conditions | 10     | 17                |+------------------+-------------------------+------+--------------------+--------+-------------------+| 55418            | 2053 W. Division Inc.   | 5    | Out Of Business    | 1      | 16                |+------------------+-------------------------+------+--------------------+--------+-------------------+&lt;/pre&gt;### Update&lt;pre&gt;with Databased(&quot;chi.db&quot;, commit_on_close=False) as db:    print(db.to_grid(db.select(&quot;businesses&quot;, where=&quot;dba LIKE 'deli %'&quot;)))    num_rows = db.update(        &quot;businesses&quot;, &quot;dba&quot;, &quot;deli BreadMeat City&quot;, &quot;dba LIKE 'deli %'&quot;    )    print(f&quot;num rows updated: {num_rows}&quot;)    print(db.to_grid(db.select(&quot;businesses&quot;, where=&quot;dba LIKE 'deli %'&quot;)))&lt;/pre&gt;Output:&lt;pre&gt;+------------------+-------------------------+---------------------------------+--------------+| account_number   | legal_name              | dba                             | address_id   |+==================+=========================+=================================+==============+| 17214            | Emil Korpacki, Inc.     | Deli On Rice                    | 110271       |+------------------+-------------------------+---------------------------------+--------------+| 348935           | Deli King Inc.          | Deli King Inc.                  | 17090        |+------------------+-------------------------+---------------------------------+--------------+| 389169           | Pheidias, Inc.          | Deli Boutique, Wine And Spirits | 138721       |+------------------+-------------------------+---------------------------------+--------------+| 391766           | Ted's Deli &amp; More, Inc. | Deli &amp; More                     | 142080       |+------------------+-------------------------+---------------------------------+--------------+| 421955           | Deli Flavor, Inc.       | Deli Flavor                     | 5057         |+------------------+-------------------------+---------------------------------+--------------+num rows updated: 5+------------------+-------------------------+---------------------+--------------+| account_number   | legal_name              | dba                 | address_id   |+==================+=========================+=====================+==============+| 17214            | Emil Korpacki, Inc.     | deli BreadMeat City | 110271       |+------------------+-------------------------+---------------------+--------------+| 348935           | Deli King Inc.          | deli BreadMeat City | 17090        |+------------------+-------------------------+---------------------+--------------+| 389169           | Pheidias, Inc.          | deli BreadMeat City | 138721       |+------------------+-------------------------+---------------------+--------------+| 391766           | Ted's Deli &amp; More, Inc. | deli BreadMeat City | 142080       |+------------------+-------------------------+---------------------+--------------+| 421955           | Deli Flavor, Inc.       | deli BreadMeat City | 5057         |+------------------+-------------------------+---------------------+--------------+&lt;/pre&gt;### Delete&lt;pre&gt;with Databased(&quot;chi.db&quot;, commit_on_close=False) as db:    num_rows = db.delete(&quot;businesses&quot;, &quot;dba LIKE 'deli %' AND address_id &gt; 6000&quot;)    print(f&quot;num rows deleted: {num_rows}&quot;)    print(db.to_grid(db.select(&quot;businesses&quot;, where=&quot;dba LIKE 'deli %'&quot;)))&lt;/pre&gt;Output:&lt;pre&gt;num rows deleted: 4+------------------+-------------------+-------------+--------------+| account_number   | legal_name        | dba         | address_id   |+==================+===================+=============+==============+| 421955           | Deli Flavor, Inc. | Deli Flavor | 5057         |+------------------+-------------------+-------------+--------------+&lt;/pre&gt;`databased` also comes with an interactive shell called `dbshell`, which is built from the [argshell](https://github.com/matt-manes/argshell) package.&lt;br&gt;It can be launched from the terminal by entering `dbshell`&lt;pre&gt;&gt;dbshellSearching for database...Could not find a .db file in e:/1vsCode/python/databased.Enter path to .db file to use or press enter to search again recursively:Searching recursively...DB options:(1) shelltesting/chi.db (2) shelltesting/chi_backup.db (3) shelltesting/chi_backup_09-21-2023-12_06_37_PM.dbEnter the number of the option to use: 1Starting dbshell v3.0.0 (enter help or ? for arg info)...chi.db&gt;helpDocumented commands (type help &lt;topic&gt;):========================================add_column  describe     properties  schema                    sizebackup      drop_column  query       select                    syscustomize   drop_table   quit        set_connection_timeout    updatedbpath      flush_log    restore     set_detect_types          usedelete      help         scan        set_enforce_foreign_keys  vacuumUnrecognized commands will be executed as queries.Use the `query` command explicitly if you don't want to capitalize your key words.All transactions initiated by commands are committed immediately.chi.db&gt;help schemaPrint out the names of the database tables, their columns, and, optionally, the number of rows.Parser help for schema:usage: dbshell [-h] [-t [TABLES ...]] [-c]options:  -h, --help            show this help message and exit  -t [TABLES ...], --tables [TABLES ...]                        Only display info for this table(s).  -c, --rowcount        Count and display the number of rows for each table.chi.db&gt;schema -cGetting database schema...+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| Table Name           | Columns                                                                                                              | Number of Rows   |+======================+======================================================================================================================+==================+| business_addresses   | id, street, zip, ward, latitude, longitude                                                                           | 13276            |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| businesses           | account_number, legal_name, dba, address_id                                                                          | 14696            |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| license_codes        | code, description                                                                                                    | 146              |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| license_statuses     | id, status, description                                                                                              | 5                |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| licenses             | license_number, account_number, start_date, expiration_date, issue_date, status_id, status_change_date, license_code | 20120            |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| facility_types       | id, name                                                                                                             | 243              |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| risk_levels          | id, name                                                                                                             | 5                |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| facility_addresses   | id, street, zip, latitude, longitude, facility_type_id, risk_id                                                      | 13036            |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| inspected_businesses | id, license_number, dba, aka                                                                                         | 20120            |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| inspection_types     | id, name                                                                                                             | 16               |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| result_types         | id, description                                                                                                      | 7                |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| inspections          | id, license_number, facility_address_id, inspection_type_id, result_type_id, date                                    | 80016            |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| violation_types      | id, name                                                                                                             | 64               |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+| violations           | id, inspection_id, violation_type_id, comment                                                                        | 312471           |+----------------------+----------------------------------------------------------------------------------------------------------------------+------------------+chi.db&gt;select violation_types -o &quot;id DESC&quot; -l 5Querying violation_types...Found 5 rows:+------+----------------------------------------------------+| id   | name                                               |+======+====================================================+| 64   | Miscellaneous / Public Health Orders               |+------+----------------------------------------------------+| 63   | Removal Of Suspension Sign                         |+------+----------------------------------------------------+| 62   | Compliance With Clean Indoor Air Ordinance         |+------+----------------------------------------------------+| 61   | Summary Report Displayed And Visible To The Public |+------+----------------------------------------------------+| 60   | Previous Core Violation Corrected                  |+------+----------------------------------------------------+5 rows from violation_typeschi.db&gt;SELECT * FROM violation_types ORDER BY id DESC LIMIT 5;+------+----------------------------------------------------+| id   | name                                               |+======+====================================================+| 64   | Miscellaneous / Public Health Orders               |+------+----------------------------------------------------+| 63   | Removal Of Suspension Sign                         |+------+----------------------------------------------------+| 62   | Compliance With Clean Indoor Air Ordinance         |+------+----------------------------------------------------+| 61   | Summary Report Displayed And Visible To The Public |+------+----------------------------------------------------+| 60   | Previous Core Violation Corrected                  |+------+----------------------------------------------------+&lt;/pre&gt;The `customize` command or the `custom_shell` script can be used to generate a template file in the current directory that subclasses `DBManager`.&lt;br&gt;This allows for project specific additional commands as well as modifications of available commands.</longdescription>
</pkgmetadata>