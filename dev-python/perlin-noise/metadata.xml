<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Smooth random noise generator  read more https://en.wikipedia.org/wiki/Perlin_noise  source code: https://github.com/salaxieb/perlin_noisenoise = PerlinNoise(octaves=3.5, seed=777)   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;octaves : number of sub rectangles in each [0, 1] range   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;seed : specific seed with which you want to initialize random generator  ```pythonfrom perlin_noise import PerlinNoisenoise = PerlinNoise()# accepts as argument float and/or list[float]noise(0.5) == noise([0.5])--&gt; True# noise not limited in space dimension and seamless in any space sizenoise([0.5, 0.5]) == noise([0.5, 0.5, 0, 0, 0])--&gt; True```Usage examples:```pythonimport matplotlib.pyplot as pltfrom perlin_noise import PerlinNoisenoise = PerlinNoise(octaves=10, seed=1)xpix, ypix = 100, 100pic = [[noise([i/xpix, j/ypix]) for j in range(xpix)] for i in range(ypix)]plt.imshow(pic, cmap='gray')plt.show()```![png](https://raw.githubusercontent.com/salaxieb/perlin_noise/master/pics/output_4_0.png)```pythonimport matplotlib.pyplot as pltfrom perlin_noise import PerlinNoisenoise1 = PerlinNoise(octaves=3)noise2 = PerlinNoise(octaves=6)noise3 = PerlinNoise(octaves=12)noise4 = PerlinNoise(octaves=24)xpix, ypix = 100, 100pic = []for i in range(xpix):    row = []    for j in range(ypix):        noise_val = noise1([i/xpix, j/ypix])        noise_val += 0.5 * noise2([i/xpix, j/ypix])        noise_val += 0.25 * noise3([i/xpix, j/ypix])        noise_val += 0.125 * noise4([i/xpix, j/ypix])        row.append(noise_val)    pic.append(row)plt.imshow(pic, cmap='gray')plt.show()```![png](https://raw.githubusercontent.com/salaxieb/perlin_noise/master/pics/output_5_0.png)</longdescription>
</pkgmetadata>