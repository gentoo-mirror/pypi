<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>LORISTRCK=========|sh-downloads| |sh-month|.. |sh-downloads| image:: https://static.pepy.tech/badge/loristrck.. |sh-month| image:: https://static.pepy.tech/badge/loristrck/month`loristrck` is a wrapper for the C++ partial-tracking library Loris.It is written in cython and targets python 3 (&gt;= 3.8 at the moment).The source of the library is included as part of the project anddoes not need to be installed previously.Documentation-------------https://loristrck.readthedocs.io---------------Installation------------.. code-block:: bash    pip install loristrckInstall from source in Windows~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~You need to have Visual Studio installed.. code-block:: bash    # From a Developer Powershell    python scripts/prepare_windows_build.py    # From a normal prompt    pip install .---------------Usage-----.. code-block:: python   import loristrck as lt   samples, sr = lt.sndreadmono(&quot;/path/to/sndfile.wav&quot;)   partials = lt.analyze(samples, sr, resolution=60)   # partials is a python list of numpy arrays   # select a subset of most significant partials   selected, noise = lt.select(partials, mindur=0.02, maxfreq=12000, minamp=-60, minbp=2)   # print each partial as data   for partial in selected:       print(partial)   # plot selected partials   lt.plot_partials(selected)   # now resynthesize both parts separately    lt.partials_render(selected, outfile=&quot;selected.wav&quot;)   lt.partials_render(noise, outfile=&quot;noise.wav&quot;)   Each partial will be a numpy array of shape = (numbreakpoints, 5)with the columns::  time, frequency, amplitude, phase, bandwidthSee the example scripts in `bin` for more complete examplesAuthor~~~~~~Eduardo Moguillanskyeduardo dot moguillansky @ gmail dot comLicense~~~~~~~GPL</longdescription>
</pkgmetadata>