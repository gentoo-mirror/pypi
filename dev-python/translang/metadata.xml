<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># translangTranslation Service Module for other projects. ## Install```pip install translang```## Usage### Seamless Integration of Translation APIs through InheritanceYou can easily extend the `TranslationService` class to integrate with popular translation API services.Refer to the [`inference` method](https://github.com/dsdanielpark/hf-transllm/blob/main/transllm/core.py#L75) and [`generate` method](https://github.com/dsdanielpark/hf-transllm/blob/main/transllm/core.py#L93) in [hf-transllm](https://github.com/dsdanielpark/hf-transllm) project.```pythonfrom translang import TranslationServiceclass CustomTranslationService(TranslationService):    def __init__(self, translator=&quot;google&quot;, deepl_api_key=None, bard_api_key=None, openai_api_key=None, openai_model='gpt-3.5-turbo'):        super().__init__(translator, deepl_api_key, bard_api_key, openai_api_key, openai_model)    def custom_process_with_translation(self, text: str, target_lang: str) -&gt; str:        translated_text = self.translate(text, target_lang)        # Perform additional customization or processing if needed        return translated_text```Commercial use or official use of the Google Translate service is chargeable. Please provide the google_official argument and google_api_key. Refer to the following notebook file and official link for more information. Use the google argument only for some basic functionality testing.```pythontranslator = CustomTranslationService(translator=&quot;google&quot;)translated_text = translator.custom_process_with_translation(&quot;Hello&quot;, &quot;ko&quot;)print(translated_text)```&lt;br&gt;### `TranslationService.translate` MethodGoogle Translator, DeepL, OpenAI, Bard```pythonfomr translang import TranslationServicetranslator = TranslationService(translator=&quot;google&quot;)                                                                         # Google# translator = TranslationService(translator=&quot;deepl&quot;, deepl_api_key=&quot;YOUR_DEEPL_API_KEY&quot;)                                    # DeepL# translator = TranslationService(translator=&quot;bard&quot;, bard_api_key=&quot;YOUR_BARD_API_KEY&quot;)                                       # Bard# translator = TranslationService(translator=&quot;openai&quot;, openai_api_key=&quot;YOUR_OPENAI_API_KEY&quot;, openai_model=&quot;gpt-3.5-trubo&quot;)   # Open AItranslated_text = translator.translate(&quot;Hello&quot;, &quot;ko&quot;)print(translated_text)```&lt;br&gt;### `TranslationService.translate_parallel` Method```pythonfrom translang import TranslationService# Create an instance of TranslationServicetranslator = TranslationService(translator=&quot;google&quot;, use_cache=True)# List of texts to translatetexts = [    &quot;Hello&quot;,    &quot;Nice to meet you&quot;,    &quot;Testing the translation service&quot;]# Destination language codetarget_lang = &quot;ko&quot;# Call the translate_parallel methodtranslated_texts = translator.translate_parallel(texts, target_lang)# Print the translated textsfor text, translated_text in zip(texts, translated_texts):    print(f&quot;Original: {text}&quot;)    print(f&quot;Translated: {translated_text}&quot;)    print(&quot;-----&quot;)```&lt;br&gt;&lt;br&gt;## License[MIT](https://opensource.org/license/mit/) &lt;br&gt;I hold no legal responsibility; ```The MIT License (MIT)Copyright (c) 2023 Minwoo ParkPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.```### Bugs and IssuesSincerely grateful for any reports on new features or bugs. Your valuable feedback on the code is highly appreciated.### Contacts- Core maintainer: [Daniel Park, South Korea](https://github.com/DSDanielPark) &lt;br&gt;- E-mail: parkminwoo1991@gmail.com &lt;br&gt;</longdescription>
</pkgmetadata>