<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># tinyobjloader, Wavefront .obj loader`tinyobjloader` is a python wrapper for C++ wavefront .obj loader.`tinyobjloader` is rather fast and feature rich than other pure python version of .obj loader.## Quick tutorial```pyimport sysimport tinyobjloader# Create reader.reader = tinyobjloader.ObjReader()filename = &quot;cornellbox.obj&quot;# Load .obj(and .mtl) using default configurationret = reader.ParseFromFile(filename)if ret == False:    print(&quot;Warn:&quot;, reader.Warning())    pint(&quot;Err:&quot;, reader.Error())    print(&quot;Failed to load : &quot;, filename)    sys.exit(-1)if reader.Warning():    print(&quot;Warn:&quot;, reader.Warning())attrib = reader.GetAttrib()print(&quot;attrib.vertices = &quot;, len(attrib.vertices))print(&quot;attrib.normals = &quot;, len(attrib.normals))print(&quot;attrib.texcoords = &quot;, len(attrib.texcoords))materials = reader.GetMaterials()print(&quot;Num materials: &quot;, len(materials))for m in materials:    print(m.name)    print(m.diffuse)shapes = reader.GetShapes()print(&quot;Num shapes: &quot;, len(shapes))for shape in shapes:    print(shape.name)    print(&quot;num_indices = {}&quot;.format(len(shape.mesh.indices)))```## More detailed usagePlease take a look at `python/sample.py` file in tinyobjloader git repo.https://github.com/syoyo/tinyobjloader/blob/master/python/sample.py## LicenseMIT license.## TODO * [ ] Writer saver</longdescription>
</pkgmetadata>