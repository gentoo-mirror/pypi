<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Lamon, The Latin POS Tagger &amp; Lemmatizer========================================.. image:: https://badge.fury.io/py/lamonpy.svg    :target: https://pypi.python.org/pypi/lamonpy`Lamon` (LAtin MOrphological tools, pronounced /leɪmən/) is a simple POS tagger &amp; lemmatizer for Latin written in C++ and `Lamonpy` is a Python package of Lamon. You can easily obtain lemma and tag of each word in given text using Lamonpy.Getting Started---------------You can install Lamonpy easily using pip. (https://pypi.org/project/lamonpy/)::    $ pip install --upgrade pip    $ pip install lamonpyThe supported OS and Python versions are:* Linux (x86-64) with Python &gt;= 3.5 * macOS &gt;= 10.13 with Python &gt;= 3.5* Windows 7 or later (x86, x86-64) with Python &gt;= 3.5* Other OS with Python &gt;= 3.5: Compilation from source code required (with c++11 compatible compiler)Here is a simple example using Lamonpy to analyze Latin texts.::    from lamonpy import Lamon    lamon = Lamon()    score, tagged = lamon.tag('In principio creavit Deus caelum et terram.')[0]    print(tagged)    # `tagged` is a list of tuples `(start_pos, end_pos, lemma, tag)`    # [(0, 2, 'in', 'r--------'),     #  (3, 12, 'principium', 'n-s---nb-'),     #  (13, 20, 'creo', 'v3sria---'),     #  (21, 25, 'deus', 'n-s---mn-'),     #  (26, 32, 'caelus', 'n-s---ma-'),     #  (33, 35, 'et', 'c--------'),     #  (36, 42, 'terra', 'n-s---fa-'),     #  (42, 43, '.', '---------')]Tagging Model and Its Accuracy------------------------------Lamon's tagging model is based on BiLSTM network trained with `Perseus Latin Dependency Treebanks &lt;https://perseusdl.github.io/treebank_data/&gt;`_ (4,000 sentences)and self-trained with raw Latin corpora (440,000 sentences) collected by `Latina Vivense &lt;https://latina.bab2min.pe.kr/xe/text&gt;`_.Since there is no available standard for evaluating Latin taggers, we built own test set named `vivens` of 900 sentences. The result of evaluation is shown below:+-------------------+---------------------+---------------------+|                   |  vivens (900 sents) | Perseus (4000 sents)|+                   +-------+------+------+-------+------+------+|                   | lemma |  tag | both | lemma |  tag | both |+===================+=======+======+======+=======+======+======+|**Lamon**          |  94.6 | 83.0 | 81.1 |  89.4 | 80.2 | 76.6 |+-------------------+-------+------+------+-------+------+------+|**Lamon (large)**  |  94.2 | 83.3 | 81.3 |  89.7 | 81.9 | 78.3 |+-------------------+-------+------+------+-------+------+------+|**Lamon (uv.)**    |  94.4 | 82.6 | 80.7 |  87.7 | 77.9 | 73.8 |+-------------------+-------+------+------+-------+------+------+|Backoff            |  88.1 |      |      |  92.4 |      |      |+-------------------+-------+------+------+-------+------+------+|123 POS            |       | 58.1 | 54.8 |       | 83.8 | 79.6 |+-------------------+-------+------+------+-------+------+------+|CRF POS            |       | 69.1 | 63.4 |       | 77.3 | 72.9 |+-------------------+-------+------+------+-------+------+------+* Lamon : base size (embedding_size:80, hidden_size:160)* Lamon (large) : large size (embedding_size:160, hidden_size:320)* Lamon (uv.) : large size without Perseus' dataset* Backoff : `cltk.lemmatize.latin.backoff.BackoffLatinLemmatizer &lt;https://docs.cltk.org/en/latest/latin.html#lemmatization-backoff-method&gt;`_* 123 POS : `cltk.tag.pos.POSTag.tag_ngram_123_backoff &lt;https://docs.cltk.org/en/latest/latin.html#gram-backoff-tagger&gt;`_* CRF POS : `cltk.tag.pos.POSTag.tag_crf &lt;https://docs.cltk.org/en/latest/latin.html#crf-tagger&gt;`_* For calculating `both` score of `123 POS` and `CRF POS`, `Backoff`'s results are used.Since Lamon and all cltk's tagger are trained with Perseus' dataset, the scores for Perseus are not significant for confirming the actual accuracy of each model.Rather, it shows that `123 POS` and `CRF POS` are overfitting to Perseus's dataset.Because the size of the vivens dataset is small, the results of this evaluation can be inaccurate.We plan to acquire larger dataset for evaluation and publish the dataset to make more accurate evaluation.Tagset------Lamon supports three types of tagset.1. perseus::    1:part of speech    nnoun    vverb    aadjective    dadverb    cconjunction    radposition    ppronoun    mnumeral    iinterjection    eexclamation    upunctuation    2:person    1first person    2second person    3third person    3:number    ssingular    pplural    4:tense    ppresent    iimperfect    rperfect    lpluperfect    tfuture perfect    ffuture    5:mood    iindicative    ssubjunctive    ninfinitive    mimperative    pparticiple    dgerund    ggerundive    6:voice    aactive    ppassive    ddeponent    7:gender                    mmasculine    ffeminine    nneuter    8:case    nnominative    ggenitive    ddative    aaccusative    vvocative    bablative    llocative    9:degree    ppositive    ccomparative    ssuperlative2. vivens::    # Moods    D: indicative    S: subjunctive    I: imperative    T: infinitive    L: participle    # Tenses    0M: present    0E: perfect    RM: imperfect    RE: pluperfect    FM: future    FE: future perfect    # Voices     A: active    P: passive    # Participle (combination of mood, tense &amp; voice)    L0A: present participle    LRP: past participle    LFA: future active participle    LFP: gerundive    # Persons    1: first    2: second    3: third    # Genders    m: masculine    f: feminine    n: neuter    # Numbers    s: singular    p: plural    # Cases    o: nominative    g: genitive    d: dative    a: accusative    b: ablative    v: vocative    x: adverbial    # Degrees    (positive isn't marked explicitly.)    c: comparative    u: superlative    # etc    r: preposition    j: conjunction3. raw::    ...Demo----https://latina.bab2min.pe.kr/xe/lTagger (Korean)Larger Models-------------Due to the package size limit of pypi, the distributed wheel package contains `base model` only. We provide larger models by Google-drive links.* Large model : https://drive.google.com/file/d/1u8LdvD-zKtrj7kDRs6CjQw74ZG6aT8jS/view?usp=sharing* Large model (unsupervised) : https://drive.google.com/file/d/1nw8LO_1o0O894gXzgQ7Hx5Fyikvy1w2u/view?usp=sharingYou can use these models by passing the model path to `Lamon.__init__` as arguments.::    from lamonpy import Lamon    lamon = Lamon(dict_path='dict.large.bin', tagger_path='tagger.large.bin')License-------`Lamonpy` is licensed under the terms of MIT License, meaning you can use it for any reasonable purpose and remain in complete ownership of all the documentation you produce.History-------* 0.2.0 (2020-10-16)    * `[NUM]` token for Roman numeral was added.    * The accuracy was slightly increased by introducing joint lemma-tag layer.* 0.1.0 (2020-09-26)    * the first version of `lamonpy`</longdescription>
</pkgmetadata>