<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Ceci Logo](ceci.png)&lt;h2 align=&quot;center&quot;&gt;Ceci Pipeline Software&lt;/h2&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LSSTDESC/ceci/actions?query=workflow%3A%22Continuous+Integration%22&quot;&gt;&lt;img alt=&quot;Continuous Integration Status&quot; src=&quot;https://github.com/LSSTDESC/ceci/workflows/Continuous%20Integration/badge.svg&quot;&gt;&lt;/a&gt;&lt;a href='https://ceci.readthedocs.io/en/latest/?badge=latest'&gt;&lt;img src='https://readthedocs.org/projects/ceci/badge/?version=latest' alt='Documentation Status' /&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/gh/LSSTDESC/ceci&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://codecov.io/gh/LSSTDESC/ceci/branch/master/graph/badge.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/ceci/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/ceci&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/ceci&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://pepy.tech/badge/ceci&quot;&gt;&lt;/a&gt;&lt;/p&gt;&gt; “Ceci n'est pas une pipeline.”A lightweight parsl-based framework for running DESC pipelines.This is now beta status.## Install```bashpip install ceci```This installs the simplest version of ceci, if you want to be ableto use the parsl backend, install instead `ceci[parsl]`.You can then run an example pipeline from the ceci_lib directory using:```bashexport PYTHONPATH=$PYTHONPATH:$PWDceci test/test.yml```Adding Pipeline Stages----------------------To make new pipeline stages, you must:- make a new python package somewhere else, to contain your stages.- the package must have an `__init__.py` file that should import from `.` all the stages you want to use.- it must also have a file `__main__.py` with the same contents as the example in `ceci_example`.- each stage is its own class inheriting from `ceci.PipelineStage`. Each must define its name, inputs, and outputs, and a run method.- the run method should use the parent methods from `PipelineStage` to get its inputs and outputs etc.</longdescription>
</pkgmetadata>