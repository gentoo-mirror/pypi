<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Logo](https://user-images.githubusercontent.com/2701938/108583516-c3576680-72ee-11eb-883f-2d9b52e74e45.png)[![Build](https://github.com/ArangoDB-Community/python-arango/actions/workflows/build.yaml/badge.svg)](https://github.com/ArangoDB-Community/python-arango/actions/workflows/build.yaml)[![CodeQL](https://github.com/ArangoDB-Community/python-arango/actions/workflows/codeql.yaml/badge.svg)](https://github.com/ArangoDB-Community/python-arango/actions/workflows/codeql.yaml)[![codecov](https://codecov.io/gh/ArangoDB-Community/python-arango/branch/main/graph/badge.svg?token=M8zrjrzsUY)](https://codecov.io/gh/ArangoDB-Community/python-arango)[![PyPI version](https://badge.fury.io/py/python-arango.svg)](https://badge.fury.io/py/python-arango)[![GitHub license](https://img.shields.io/github/license/ArangoDB-Community/python-arango?color=brightgreen)](https://github.com/ArangoDB-Community/python-arango/blob/main/LICENSE)![Python version](https://img.shields.io/badge/python-3.8%2B-blue)# Python-ArangoPython driver for [ArangoDB](https://www.arangodb.com), a scalable multi-modeldatabase natively supporting documents, graphs and search.## Requirements- ArangoDB version 3.7+- Python version 3.8+## Installation```shellpip install python-arango --upgrade```## Getting StartedHere is a simple usage example:```pythonfrom arango import ArangoClient# Initialize the client for ArangoDB.client = ArangoClient(hosts=&quot;http://localhost:8529&quot;)# Connect to &quot;_system&quot; database as root user.sys_db = client.db(&quot;_system&quot;, username=&quot;root&quot;, password=&quot;passwd&quot;)# Create a new database named &quot;test&quot;.sys_db.create_database(&quot;test&quot;)# Connect to &quot;test&quot; database as root user.db = client.db(&quot;test&quot;, username=&quot;root&quot;, password=&quot;passwd&quot;)# Create a new collection named &quot;students&quot;.students = db.create_collection(&quot;students&quot;)# Add a hash index to the collection.students.add_hash_index(fields=[&quot;name&quot;], unique=True)# Insert new documents into the collection.students.insert({&quot;name&quot;: &quot;jane&quot;, &quot;age&quot;: 39})students.insert({&quot;name&quot;: &quot;josh&quot;, &quot;age&quot;: 18})students.insert({&quot;name&quot;: &quot;judy&quot;, &quot;age&quot;: 21})# Execute an AQL query and iterate through the result cursor.cursor = db.aql.execute(&quot;FOR doc IN students RETURN doc&quot;)student_names = [document[&quot;name&quot;] for document in cursor]```Another example with [graphs](https://www.arangodb.com/docs/stable/graphs.html):```pythonfrom arango import ArangoClient# Initialize the client for ArangoDB.client = ArangoClient(hosts=&quot;http://localhost:8529&quot;)# Connect to &quot;test&quot; database as root user.db = client.db(&quot;test&quot;, username=&quot;root&quot;, password=&quot;passwd&quot;)# Create a new graph named &quot;school&quot;.graph = db.create_graph(&quot;school&quot;)# Create a new EnterpriseGraph [Enterprise Edition]eegraph = db.create_graph(    name=&quot;school&quot;,    smart=True)# Create vertex collections for the graph.students = graph.create_vertex_collection(&quot;students&quot;)lectures = graph.create_vertex_collection(&quot;lectures&quot;)# Create an edge definition (relation) for the graph.edges = graph.create_edge_definition(    edge_collection=&quot;register&quot;,    from_vertex_collections=[&quot;students&quot;],    to_vertex_collections=[&quot;lectures&quot;])# Insert vertex documents into &quot;students&quot; (from) vertex collection.students.insert({&quot;_key&quot;: &quot;01&quot;, &quot;full_name&quot;: &quot;Anna Smith&quot;})students.insert({&quot;_key&quot;: &quot;02&quot;, &quot;full_name&quot;: &quot;Jake Clark&quot;})students.insert({&quot;_key&quot;: &quot;03&quot;, &quot;full_name&quot;: &quot;Lisa Jones&quot;})# Insert vertex documents into &quot;lectures&quot; (to) vertex collection.lectures.insert({&quot;_key&quot;: &quot;MAT101&quot;, &quot;title&quot;: &quot;Calculus&quot;})lectures.insert({&quot;_key&quot;: &quot;STA101&quot;, &quot;title&quot;: &quot;Statistics&quot;})lectures.insert({&quot;_key&quot;: &quot;CSC101&quot;, &quot;title&quot;: &quot;Algorithms&quot;})# Insert edge documents into &quot;register&quot; edge collection.edges.insert({&quot;_from&quot;: &quot;students/01&quot;, &quot;_to&quot;: &quot;lectures/MAT101&quot;})edges.insert({&quot;_from&quot;: &quot;students/01&quot;, &quot;_to&quot;: &quot;lectures/STA101&quot;})edges.insert({&quot;_from&quot;: &quot;students/01&quot;, &quot;_to&quot;: &quot;lectures/CSC101&quot;})edges.insert({&quot;_from&quot;: &quot;students/02&quot;, &quot;_to&quot;: &quot;lectures/MAT101&quot;})edges.insert({&quot;_from&quot;: &quot;students/02&quot;, &quot;_to&quot;: &quot;lectures/STA101&quot;})edges.insert({&quot;_from&quot;: &quot;students/03&quot;, &quot;_to&quot;: &quot;lectures/CSC101&quot;})# Traverse the graph in outbound direction, breadth-first.result = graph.traverse(    start_vertex=&quot;students/01&quot;,    direction=&quot;outbound&quot;,    strategy=&quot;breadthfirst&quot;)```Please see the [documentation](https://docs.python-arango.com) for more details.</longdescription>
</pkgmetadata>