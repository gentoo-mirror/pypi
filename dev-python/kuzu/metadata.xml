<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;https://kuzudb.com/img/kuzu-logo.png&quot; height=&quot;100&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/kuzudb/kuzu/actions&quot;&gt;    &lt;img src=&quot;https://github.com/kuzudb/kuzu/actions/workflows/ci-workflow.yml/badge.svg?branch=master&quot; alt=&quot;Github Actions Badge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://codecov.io/gh/kuzudb/kuzu&quot; &gt;    &lt;img src=&quot;https://codecov.io/github/kuzudb/kuzu/branch/master/graph/badge.svg?token=N1AT6H79LM&quot;/&gt;  &lt;/a&gt;  &lt;a href=&quot;https://join.slack.com/t/kuzudb/shared_invite/zt-1w0thj6s7-0bLaU8Sb~4fDMKJ~oejG_g&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/Slack-chat%20with%20us-informational?logo=slack&quot; alt=&quot;slack&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://twitter.com/kuzudb&quot;&gt;    &lt;img src=&quot;https://img.shields.io/badge/follow-@kuzudb-1DA1F2?logo=twitter&quot; alt=&quot;twitter&quot;&gt;  &lt;/a&gt;&lt;/p&gt;# KùzuKùzu is an in-process property graph database management system (GDBMS) built for query speed and scalability. Kùzu is optimized for handling complex join-heavy analytical workloads on very large graph databases, with the following core feature set:- Flexible Property Graph Data Model and Cypher query language- Embeddable, serverless integration into applications - Columnar disk-based storage- Columnar sparse row-based (CSR) adjacency list/join indices- Vectorized and factorized query processor- Novel and very fast join algorithms- Multi-core query parallelism- Serializable ACID transactionsKùzu is being actively developed at University of Waterloo as a feature-rich and usable GDBMS. Kùzu is available under a permissible license. So try it out and help us make it better! We welcome your feedback and feature requests.## Installation### Precompiled binaryPrecompiled binary of our latest release can be downloaded [here](https://github.com/kuzudb/kuzu/releases/latest).  ### Python packageOur Python package can be directly install through pip.```pip install kuzu```### NodeJS package```npm install kuzu```We also support official C++ and C bindings. For more installation and usage instructions, please refer to [our website](https://kuzudb.com/).## Getting StartedWe take `tinysnb` as an example graph, which is under `dataset/demo-db/csv` in our source code, and can be downloaded [here](https://github.com/kuzudb/kuzu/tree/master/dataset/demo-db/csv).### CLIStart CLI with a database directory `./kuzu_shell ./testdb/````cypher# Data definitionkuzu&gt; CREATE NODE TABLE User(name STRING, age INT64, PRIMARY KEY (name));kuzu&gt; CREATE REL TABLE Follows(FROM User TO User, since INT64);# Data loadingkuzu&gt; COPY User FROM &quot;dataset/demo-db/csv/user.csv&quot;;kuzu&gt; COPY Follows FROM &quot;dataset/demo-db/csv/follows.csv&quot;;# Queryingkuzu&gt; MATCH (a:User)-[f:Follows]-&gt;(b:User) RETURN a.name, b.name, f.since;```### Python```pythonimport kuzudb = kuzu.Database('./testdb')conn = kuzu.Connection(db)# Data definitionconn.execute(&quot;CREATE NODE TABLE User(name STRING, age INT64, PRIMARY KEY (name))&quot;)conn.execute(&quot;CREATE REL TABLE Follows(FROM User TO User, since INT64)&quot;)# Data loadingconn.execute('COPY User FROM &quot;user.csv&quot;')conn.execute('COPY Follows FROM &quot;follows.csv&quot;')# Run a query.results = conn.execute('MATCH (u:User) RETURN COUNT(*);')while results.has_next():  print(results.get_next())# Run a query and get results as a pandas dataframe.results = conn.execute('MATCH (a:User)-[f:Follows]-&gt;(b:User) RETURN a.name, f.since, b.name;').get_as_df()print(results)# Run a query and get results as an arrow table.results = conn.execute('MATCH (u:User) RETURN u.name, u.age;').get_as_arrow(chunk_size=100)print(results)```### NodeJS```js// Import libraryconst kuzu = require(&quot;kuzu&quot;);(async () =&gt; {  // Create an empty database and connect to it  const db = new kuzu.Database(&quot;./test&quot;);  const conn = new kuzu.Connection(db);  // Data definition  await conn.query(    &quot;CREATE NODE TABLE User(name STRING, age INT64, PRIMARY KEY (name))&quot;  );  await conn.query(&quot;CREATE REL TABLE Follows(FROM User TO User, since INT64)&quot;);  // Data loading  await conn.query('COPY User FROM &quot;user.csv&quot;');  await conn.query('COPY Follows FROM &quot;follows.csv&quot;');  // Run a query  const queryResult = await conn.query(&quot;MATCH (u:User) RETURN u.name, u.age;&quot;);  // Get all rows from the query result  const rows = await queryResult.getAll();  // Print the rows  for (const row of rows) {    console.log(row);  }})();```Refer to our [Data Import](https://kuzudb.com/docs/data-import) and [Cypher](https://kuzudb.com/docs/cypher) section for more information.## BuildTo build from source code, Kùzu requires Cmake(&gt;=3.11), Python 3, and a compiler that supports `C++20`.- Perform a full clean build without tests and benchmark:  - `make clean &amp;&amp; make release`- Perform a full clean build with tests and benchmark (optional):  - `make clean &amp;&amp; make all`- Run tests (optional):  - `make test &amp;&amp; make pytest`For development, use `make debug` to build a non-optimized debug version.To build in parallel, pass `NUM_THREADS` as parameter, e.g., `make NUM_THREADS=8`.After build, our CLI binary `kuzu_shell` is available under the directory `build/release/tools/shell/`.## ContributingWe welcome contributions to Kùzu. If you are interested in contributing to Kùzu, please read our [Contributing Guide](CONTRIBUTING.md).## LicenseBy contributing to Kùzu, you agree that your contributions will be licensed under the [MIT License](LICENSE).## Citing KùzuIf you are a researcher and use Kùzu in your work, we encourage you to cite our work.You can use the following BibTeX citation:```@inproceedings{kuzu:cidr,  author =  {Xiyang Feng and             Guodong Jin and             Ziyi Chen and             Chang Liu and             Semih Saliho\u{g}lu},  title={K\`uzu Graph Database Management System},  booktitle={CIDR},  year={2023}}@misc{kuzu-github,  author =  {Xiyang Feng and             Guodong Jin and             Ziyi Chen and             Chang Liu and             Semih Saliho\u{g}lu},  title = {{K\`uzu Database Management System Source Code}},  howpublished = {\url{https://github.com/kuzudb/kuzu}},  month        = nov,  year         = 2022}```## Contact UsYou can contact us at [contact@kuzudb.com](mailto:contact@kuzudb.com) or [join our Slack workspace](https://join.slack.com/t/kuzudb/shared_invite/zt-1w0thj6s7-0bLaU8Sb~4fDMKJ~oejG_g).</longdescription>
</pkgmetadata>