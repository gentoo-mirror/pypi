<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Python application](https://github.com/matan1008/pygnuutils/workflows/Python%20application/badge.svg)](https://github.com/matan1008/pygnuutils/actions/workflows/python-app.yml &quot;Python application action&quot;)[![Pypi version](https://img.shields.io/pypi/v/pygnuutils.svg)](https://pypi.org/project/pygnuutils/ &quot;PyPi package&quot;)[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/matan1008/pygnuutils.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/matan1008/pygnuutils/context:python)- [Description](#description)- [Installation](#installation)- [Usage](#usage)    * [CLI](#cli)    * [Python](#python)# Description`pygnuutils` is a pure python implementation for GNU utils.# InstallationInstall the last released version using `pip`:```shellpython3 -m pip install --user -U pygnuutils```Or install the latest version from sources:```shellgit clone git@github.com:matan1008/pygnuutils.gitcd pygnuutilspython3 -m pip install --user -U -e .```# Usage## CLIYou can run commands by using pygnuutils prefix. For example, in order to list `/tmp/foo` you can run:```shellpygnuutils ls -lRh /tmp/foo```## PythonTo use `pygnuutils` you can write the following:```pythonfrom pygnuutils.ls import Lsls = Ls()ls('/tmp', all_=True)```Perhaps the best reason to use this library instead of gnu is the dependency injection ability.For example, in order to print a message each time a symlink is resolved:```pythonimport osfrom pygnuutils.ls import Ls, LsStubclass ReadlinkWatch(LsStub):    def readlink(self, path, dir_fd=None):        print(f'Resolving {path}...')        return os.readlink(path, dir_fd=dir_fd)ls = Ls(stub=ReadlinkWatch())ls('/tmp', all_=True, long=True)```</longdescription>
</pkgmetadata>