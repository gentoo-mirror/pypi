<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot; style=&quot;display:flex; width:100%; align-items:center; justify-content:center;&quot;&gt;  &lt;a style=&quot;margin:2px&quot; href=&quot;https://dream-faster.github.io/krisi/&quot;&gt;&lt;img alt=&quot;Docs&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/dream-faster/krisi/docs.yaml?logo=readthedocs&quot;&gt;&lt;/a&gt;  &lt;a style=&quot;margin:2px&quot; href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;  &lt;a style=&quot;margin:2px&quot; href=&quot;https://github.com/dream-faster/krisi/actions/workflows/tests.yaml&quot;&gt;&lt;img alt=&quot;Tests&quot; src=&quot;https://github.com/dream-faster/krisi/actions/workflows/tests.yaml/badge.svg&quot;/&gt;&lt;/a&gt;  &lt;a style=&quot;margin:2px&quot; href=&quot;https://discord.gg/EKJQgfuBpE&quot;&gt;&lt;img alt=&quot;Discord Community&quot; src=&quot;https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;logoColor=white&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;!-- PROJECT LOGO --&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;  &lt;a href=&quot;https://dream-faster.github.io/krisi/&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/dream-faster/krisi/main/docs/images/logo.svg&quot; alt=&quot;Logo&quot; width=&quot;90&quot; &gt;  &lt;/a&gt;&lt;h3 align=&quot;center&quot;&gt; &lt;b&gt;KRISI&lt;/b&gt;&lt;br&gt; &lt;i&gt;(/creesee/)&lt;/i&gt;&lt;/h3&gt;  &lt;p align=&quot;center&quot;&gt;    Testing and Reporting Framework for Time Series Analysis    &lt;br /&gt;    &lt;!-- &lt;a href=&quot;https://github.com/dream-faster/krisi&quot;&gt;View Demo&lt;/a&gt;  ~ --&gt;    &lt;a href=&quot;https://dream-faster.github.io/krisi/generated/gallery/&quot;&gt;Check Examples&lt;/a&gt; ~    &lt;a href=&quot;https://dream-faster.github.io/krisi/&quot;&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;  &lt;/p&gt;&lt;/div&gt;&lt;br /&gt;Krisi is a Scoring library for Time-Series Forecasting. It calculates, stores and vizualises the performance of your predictions!Krisi is from the ground-up extensible and lightweight and comes with the fundamental metrics for regression and classification.It can generate reports in:- static **PDF** (with ``plotly``)- interactive **HTML** (with ``plotly``)- pretty formatted for **console** (with ``rich`` and ``plotext``)&lt;br/&gt;&lt;div&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/dream-faster/krisi/main/docs/images/output_examples.png&quot; alt=&quot;Output Examples: HTML, Console, PDF&quot; width=&quot;100%&quot; &gt;&lt;/div&gt;  &lt;br/&gt;## Krisi solves the following problems- Most TS libraries attach reporting to modelling (eg.: Darts, Statsmodel).&lt;br/&gt; **→ Krisi is independent of any modelling method or library.**- Extendability is tedious: only works by subclassing objects.&lt;br/&gt;**→ Krisi supports easy configuration of custom metrics along with an extensive library of predefined metrics.**- Missing Rolling window based evaluation.&lt;br/&gt;**→ Krisi supports evaluating metrics over time.**- Too many dependencies.&lt;br/&gt;**→ Krisi has few hard dependencies (only core libarries, eg.: sklearn and plotting libraries).**- Visualisation results are too basic.&lt;br/&gt;**→ With Krisi you can decide to share and interactive HTML, a static PDF or quickly look at results pretty printed to the console.**&lt;br/&gt;## InstallationThe project was entirely built in ``python``. Prerequisites* ``python &gt;= 3.7`` and ``pip``Then run:*  ``pip install krisi``If you'd like to also use interactive plotting (html) and pdf generation then run:*  ``pip install krisi &quot;krisi[plotting]&quot;``&lt;br/&gt;## QuickstartYou can quickly evaluate your predictions by running:```pythonimport numpy as npfrom krisi.evaluate import scorescore(y=np.random.rand(1000), predictions=np.random.rand(1000)).print()```Krisi's main object is the ``ScoreCard`` that contains predefined ``Metric``s and which you can add further ``Metric``s to.```pythonfrom krisi.evaluate import ScoreCardimport numpy as np# Random targets and predictions for Demotarget, predictions = np.random.rand(1000), np.random.rand(1000)sc = ScoreCard(target, predictions)# Calculate predefined metricssc.evaluate(defaults=True)# Add a new metricsc[&quot;own_metric&quot;] = (target - predictions).mean()# Print the resultsc.print()```Outputs:```┏━━━━━━━━━━━━━━━━━━━━━━━━ Result of &lt;your_model_name&gt; on &lt;your_dataset_name&gt; tested on insample ━━━━━━━━━━━━━━━━━━━━━━━━━┓┃                                                                                                                        ┃┃                                                  Residual Diagnostics                                                  ┃┃ ╭───────────────────────────┬─────────────────────────────────────────────────────────────┬──────────────────────────╮ ┃┃ │               Metric Name │ Result                                                      │ Parameters               │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │     Mean of the Residuals │ 0.007                                                       │ {}                       │ ┃┃ │          (residuals_mean) │                                                             │                          │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │ Standard Deviation of the │ 0.409                                                       │ {}                       │ ┃┃ │ Residuals (residuals_std) │                                                             │                          │ ┃┃ ╰───────────────────────────┴─────────────────────────────────────────────────────────────┴──────────────────────────╯ ┃┃                                              Forecast Errors - Regression                                              ┃┃ ╭───────────────────────────┬─────────────────────────────────────────────────────────────┬──────────────────────────╮ ┃┃ │ Mean Absolute Error (mae) │ 0.332                                                       │ {}                       │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │  Mean Absolute Percentage │ 2.85                                                        │ {}                       │ ┃┃ │              Error (mape) │                                                             │                          │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │  Mean Squared Error (mse) │ 0.168                                                       │ {'squared': True}        │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │   Root Mean Squared Error │ 0.41                                                        │ {'squared': False}       │ ┃┃ │                    (rmse) │                                                             │                          │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │     Root Mean Squared Log │ 0.281                                                       │ {'squared': False}       │ ┃┃ │             Error (rmsle) │                                                             │                          │ ┃┃ ├───────────────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────────┤ ┃┃ │            R-squared (r2) │ -0.923                                                      │ {}                       │ ┃┃ ╰───────────────────────────┴─────────────────────────────────────────────────────────────┴──────────────────────────╯ ┃┃                                                            Unknown                                                     ┃┃ ╭───────────────────────────┬─────────────────────────────────────────────────────────────┬──────────────────────────╮ ┃┃ │   own_metric (own_metric) │ 0.007                                                       │ {}                       │ ┃┃ ╰───────────────────────────┴─────────────────────────────────────────────────────────────┴──────────────────────────╯ ┃┃                                                                                                                        ┃┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛```Creating more sophisticated ``Metric``s with metadata. ```pythonimport numpy as npfrom krisi.evaluate import Metric, MetricCategories, ScoreCard# Random targets and predictions for Demotarget, predictions = np.random.rand(100), np.random.rand(100)# Create ScoreCardsc = ScoreCard(target, predictions)# Calculate a random metric for Democalculated_metric_example = (target - predictions).mean()# Adding a simple new metric (a float)# As a Dictionary:sc[&quot;metric_barebones&quot;] = calculated_metric_example# As an Object assignment:sc.another_metric_barebones = calculated_metric_example * 2.0sc[&quot;metric_with_metadata&quot;] = Metric(    name=&quot;A new, own Metric&quot;,    category=MetricCategories.residual,    result=calculated_metric_example * 3.0,    parameters={&quot;hyper_1&quot;: 5.0},)# Updating the metadata of an existing metricsc.metric_barebones = dict(info=&quot;Giving description to a metric&quot;)# Print a pretty summary to the consolesc.print(with_info=True)```Outputs:```┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Result of &lt;your_model_name&gt; on &lt;your_dataset_name&gt; tested on insample ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓┃                                                                                                                                 ┃┃                                                      Residual Diagnostics                                                       ┃┃ ╭─────────────────────┬────────────────────────────────────────────────┬────────────────────┬─────────────────────────────────╮ ┃┃ │         Metric Name │ Result                                         │ Parameters         │ Info                            │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │         Mean of the │ 0.035                                          │ {}                 │ ''                              │ ┃┃ │           Residuals │                                                │                    │                                 │ ┃┃ │    (residuals_mean) │                                                │                    │                                 │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │  Standard Deviation │ 0.42                                           │ {}                 │ ''                              │ ┃┃ │    of the Residuals │                                                │                    │                                 │ ┃┃ │     (residuals_std) │                                                │                    │                                 │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │   A new, own Metric │ 0.105                                          │ {'hyper_1': 5.0}   │ 'Giving description to a        │ ┃┃ │ (yet_another_metri… │                                                │                    │ metric'                         │ ┃┃ ╰─────────────────────┴────────────────────────────────────────────────┴────────────────────┴─────────────────────────────────╯ ┃┃                                                  Forecast Errors - Regression                                                   ┃┃ ╭─────────────────────┬────────────────────────────────────────────────┬────────────────────┬─────────────────────────────────╮ ┃┃ │ Mean Absolute Error │ 0.35                                           │ {}                 │ '(Mean absolute error)          │ ┃┃ │               (mae) │                                                │                    │ represents the difference       │ ┃┃ │                     │                                                │                    │ between the original and        │ ┃┃ │                     │                                                │                    │ predicted values extracted by   │ ┃┃ │                     │                                                │                    │ averaged the absolute           │ ┃┃ │                     │                                                │                    │ difference over the data set.'  │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │       Mean Absolute │ 2.543                                          │ {}                 │ ''                              │ ┃┃ │    Percentage Error │                                                │                    │                                 │ ┃┃ │              (mape) │                                                │                    │                                 │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │  Mean Squared Error │ 0.178                                          │ {'squared': True}  │ '(Mean Squared Error)           │ ┃┃ │               (mse) │                                                │                    │ represents the difference       │ ┃┃ │                     │                                                │                    │ between the original and        │ ┃┃ │                     │                                                │                    │ predicted values extracted by   │ ┃┃ │                     │                                                │                    │ squared the average difference  │ ┃┃ │                     │                                                │                    │ over the data set.'             │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │   Root Mean Squared │ 0.421                                          │ {'squared': False} │ '(Root Mean Squared Error) is   │ ┃┃ │        Error (rmse) │                                                │                    │ the error rate by the square    │ ┃┃ │                     │                                                │                    │ root of Mean Squared Error.'    │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │   Root Mean Squared │ 0.29                                           │ {'squared': False} │ ''                              │ ┃┃ │   Log Error (rmsle) │                                                │                    │                                 │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │      R-squared (r2) │ -1.28                                          │ {}                 │ '(Coefficient of determination) │ ┃┃ │                     │                                                │                    │ represents the coefficient of   │ ┃┃ │                     │                                                │                    │ how well the values fit         │ ┃┃ │                     │                                                │                    │ compared to the original        │ ┃┃ │                     │                                                │                    │ values. The value from 0 to 1   │ ┃┃ │                     │                                                │                    │ interpreted as percentages. The │ ┃┃ │                     │                                                │                    │ higher the value is, the better │ ┃┃ │                     │                                                │                    │ the model is.'                  │ ┃┃ ╰─────────────────────┴────────────────────────────────────────────────┴────────────────────┴─────────────────────────────────╯ ┃┃                                                                 Unknown                                                         ┃┃ ╭─────────────────────┬────────────────────────────────────────────────┬────────────────────┬─────────────────────────────────╮ ┃┃ │          own_metric │ 0.035                                          │ {}                 │ ''                              │ ┃┃ │        (own_metric) │                                                │                    │                                 │ ┃┃ ├─────────────────────┼────────────────────────────────────────────────┼────────────────────┼─────────────────────────────────┤ ┃┃ │      another_metric │ 0.07                                           │ {}                 │ ''                              │ ┃┃ │    (another_metric) │                                                │                    │                                 │ ┃┃ ╰─────────────────────┴────────────────────────────────────────────────┴────────────────────┴─────────────────────────────────╯ ┃┃                                                                                                                                 ┃┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛```&lt;br/&gt;## Default MetricsSee ``evaluate/library/default_metrics.py`` for source.Contributors are continously adding new default metrics, press watch to keep track of the project and see in issues planned default metrics.&lt;b&gt; Residual Diagnostics &lt;/b&gt;- Mean of the Residuals- Standard Deviation of the Residuals- Ljung Box Statistics- (wip) Autocorrelation of Residuals&lt;b&gt; Regression Errors&lt;/b&gt;- Mean Absolute Error- Mean Absolute Percentage Error- Mean Squared Error- Root Mean Squared Error- Root Mean Squared Log Error## Our Open-core Time Series Toolkit[![Krisi](https://raw.githubusercontent.com/dream-faster/fold/main/docs/images/overview_diagrams/dream_faster_suite_krisi.svg)](https://github.com/dream-faster/krisi)[![Fold](https://raw.githubusercontent.com/dream-faster/fold/main/docs/images/overview_diagrams/dream_faster_suite_fold.svg)](https://github.com/dream-faster/fold)[![Fold/Models](https://raw.githubusercontent.com/dream-faster/fold/main/docs/images/overview_diagrams/dream_faster_suite_fold_models.svg)](https://github.com/dream-faster/fold-models)[![Fold/Wrapper](https://raw.githubusercontent.com/dream-faster/fold/main/docs/images/overview_diagrams/dream_faster_suite_fold_wrappers.svg)](https://github.com/dream-faster/fold-wrappers)If you want to try them out, we'd love to hear about your use case and help, [please book a free 30-min call with us](https://calendly.com/nowcasting/consultation)!## ContributionJoin our [Discord](https://discord.gg/EKJQgfuBpE) for live discussion!Submit an issue or reach out to us on info at dream-faster.ai for any inquiries.</longdescription>
</pkgmetadata>