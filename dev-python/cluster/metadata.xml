<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>DESCRIPTION===========.. image:: https://readthedocs.org/projects/python-cluster/badge/?version=latest    :target: http://python-cluster.readthedocs.org    :alt: Documentation Statuspython-cluster is a &quot;simple&quot; package that allows to create several groups(clusters) of objects from a list. It's meant to be flexible and able tocluster any object. To ensure this kind of flexibility, you need not only tosupply the list of objects, but also a function that calculates the similaritybetween two of those objects. For simple datatypes, like integers, this can beas simple as a subtraction, but more complex calculations are possible. Rightnow, it is possible to generate the clusters using a hierarchical clusteringand the popular K-Means algorithm. For the hierarchical algorithm there aredifferent &quot;linkage&quot; (single, complete, average and uclus) methods available.Algorithms are based on the document found athttp://www.elet.polimi.it/upload/matteucc/Clustering/tutorial_html/.. note::    The above site is no longer avaialble, but you can still view it in the    internet archive at:    https://web.archive.org/web/20070912040206/http://home.dei.polimi.it//matteucc/Clustering/tutorial_html/USAGE=====A simple python program could look like this::   &gt;&gt;&gt; from cluster import HierarchicalClustering   &gt;&gt;&gt; data = [12,34,23,32,46,96,13]   &gt;&gt;&gt; cl = HierarchicalClustering(data, lambda x,y: abs(x-y))   &gt;&gt;&gt; cl.getlevel(10)     # get clusters of items closer than 10   [96, 46, [12, 13, 23, 34, 32]]   &gt;&gt;&gt; cl.getlevel(5)      # get clusters of items closer than 5   [96, 46, [12, 13], 23, [34, 32]]Note, that when you retrieve a set of clusters, it immediately starts theclustering process, which is quite complex. If you intend to create clustersfrom a large dataset, consider doing that in a separate thread.For K-Means clustering it would look like this::    &gt;&gt;&gt; from cluster import KMeansClustering    &gt;&gt;&gt; cl = KMeansClustering([(1,1), (2,1), (5,3), ...])    &gt;&gt;&gt; clusters = cl.getclusters(2)The parameter passed to getclusters is the count of clusters generated... image:: https://readthedocs.org/projects/python-cluster/badge/?version=latest    :target: http://python-cluster.readthedocs.org    :alt: Documentation Status</longdescription>
</pkgmetadata>