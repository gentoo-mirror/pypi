<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://github.com/switchboardpy/switchboard/actions/workflows/main.yml/badge.svg)](https://github.com/switchboardpy/switchboard/actions/workflows/main.yml)[![Code Coverage](https://codecov.io/gh/switchboardpy/switchboard/branch/master/graph/badge.svg)](https://codecov.io/gh/switchboardpy/switchboard)Switchboard===========Switchboard is a Python WSGI app that makes it easy to [togglefeatures](https://en.wikipedia.org/wiki/Feature_toggle) ina variety of Python web frameworks. Created to enable[A/B](https://www.optimizely.com/optimization-glossary/ab-testing/) and [usertesting](https://www.experienceux.co.uk/faqs/what-is-usability-testing/)at [SourceForge](https://sourceforge.net/), it features an easy-to-use admindashboard with powerful conditions for activating a particular feature.![Admin Dashboard](./docs/screenshots/switchboard-overview.png)What follows is an abbreviated version of [Switchboard's fulldocumentation](http://switchboard.readthedocs.io/).## Getting StartedWant to use Switchboard in your application? Keep reading. Interested indeveloping on Switchboard or running a small example locally? Take alook at the [Development](#development) section.### InstallingInstall Switchboard and its dependencies using pip:```pip install switchboard```### SetupNext, embed Switchboard and its admin UI within the application.Framework-specific details can be found in [Switchboard'sdocumentation](http://switchboard.readthedocs.io/en/stable/user-documentation.html#installation).### Using SwitchesSwitchboard's basic unit is a switch. Every switch has a unique keyassociated with it and is either active (on) or inactive (off), so usingit in code is simple:```&gt;&gt;&gt; from switchboard import operator&gt;&gt;&gt; operator.is_active('foo')False```In this case we checked to see if the &quot;foo&quot; switch was active. Bydefault, Switchboard will auto-create any switches that don't alreadyexist, such as &quot;foo&quot;. Auto-created switches default to an inactivestate. This just scratches the surface; [there's so much more that a switch cando](http://switchboard.readthedocs.io/en/stable/user-documentation.html#using-switches).## DevelopmentThese instructions cover setting Switchboard up locally for development andtesting purposes. See [Getting Started](#getting-started) for notes on how touse Switchboard within a web application.### Prerequisites* Virtualenv: `$ sudo easy_install virtualenv`### Bootstrapping1. Make a virtualenv workspace: `$ virtualenv --no-site-packages .venv`1. Activate the virtualenv:     `$ source .venv/bin/activate`1. Install all dependencies:    `$ make install`### Running the Example AppSwitchboard includes an[example](https://github.com/switchboardpy/switchboard/blob/master/example/server.py)application, which is handy both for doing development and for taking it for atest drive in a very simple environment. It also provides an example ofsetting Switchboard up to run within a[Bottle](https://www.fullstackpython.com/bottle.html)-based application.To run:```$ make example```At this point a very simple application is now running at`http://localhost:8080` and the admin UI is accessible at`http://localhost:8080/_switchboard/`. The application has one switch(`example`) and outputs text that tells you whether the switch is active.### Running TestsSwitchboard includes both unit tests and functional tests of the admindashboard, using the example application.To run the unit tests:```$ make test```The functional test requires both an updated[Firefox](https://www.mozilla.org/en-US/firefox/new/) and[geckodriver](https://github.com/mozilla/geckodriver):```$ npm install -g geckodriver```To run the functional tests:```$ make functional-test```### ReleasingTo distribute a new release of Switchboard:1. Update the version in `setup.py`, following [Semantic   Versioning](http://semver.org).1. Cut the release:```$ make release```### VersioningWe use [Semantic Versioning](http://semver.org/) for versioning. For theversions available, see the [tags on thisrepository](https://github.com/switchboardpy/switchboard/tags).## ContributingPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code ofconduct, and the process for submitting pull requests to us.## Authors* **Kyle Adams** - *Initial work* - [kadams54](https://github.com/kadams54)See also the list of[contributors](https://github.com/switchboardpy/switchboard/contributors) whoparticipated in this project.## LicenseThis project is licensed under the Apache License - see the [LICENSE](LICENSE)file for details.## AcknowledgmentsSwitchboard began life as a port of [Disqus'](https://disqus.github.io/)[Gargoyle](https://github.com/disqus/gargoyle), a feature flipperfor [Django](https://www.djangoproject.com/).[David Cramer's](https://twitter.com/zeeg) [Pycon](https://us.pycon.org/2018/)lightning talk on Gargoyle had me drooling for that same feature flipping fun innon-Django apps.</longdescription>
</pkgmetadata>