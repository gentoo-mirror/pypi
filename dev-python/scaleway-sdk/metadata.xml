<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Scaleway SDK============Python SDK to query `Scaleway &lt;https://scaleway.com&gt;`_'s `APIs&lt;https://developer.scaleway.com&gt;`_.Stable release: |release| |versions| |license| |dependencies|Development: |build| |coverage| |quality|.. |release| image:: https://img.shields.io/pypi/v/scaleway-sdk.svg    :target: https://pypi.python.org/pypi/scaleway-sdk    :alt: Last release.. |versions| image:: https://img.shields.io/pypi/pyversions/scaleway-sdk.svg    :target: https://pypi.python.org/pypi/scaleway-sdk    :alt: Python versions.. |license| image:: https://img.shields.io/pypi/l/scaleway-sdk.svg    :target: https://opensource.org/licenses/BSD-2-Clause    :alt: Software license.. |dependencies| image:: https://requires.io/github/scaleway/python-scaleway/requirements.svg?branch=master    :target: https://requires.io/github/scaleway/python-scaleway/requirements/?branch=master    :alt: Requirements freshness.. |build| image:: https://travis-ci.org/scaleway/python-scaleway.svg?branch=develop    :target: https://travis-ci.org/scaleway/python-scaleway    :alt: Unit-tests status.. |coverage| image:: https://codecov.io/gh/scaleway/python-scaleway/branch/develop/graph/badge.svg    :target: https://codecov.io/github/scaleway/python-scaleway?branch=develop    :alt: Coverage Status.. |quality| image:: https://scrutinizer-ci.com/g/scaleway/python-scaleway/badges/quality-score.png?b=develop    :target: https://scrutinizer-ci.com/g/scaleway/python-scaleway/?branch=develop    :alt: Code QualityInstallation------------The package is available on ``pip``. To install it in a virtualenv:.. code-block:: bash    $ virtualenv my_virtualenv    $ source my_virtualenv/bin/activate    $ pip install scaleway-sdkGeneral principle-----------------If you're looking to send a ``GET`` HTTP request against our APIs, like:.. code-block:: http    GET &lt;api_url&gt;/foo/baryou only need to call the following pythonic code:.. code-block:: python    &gt;&gt;&gt; from scaleway.apis import DummyAPI    &gt;&gt;&gt; DummyAPI().query().foo.bar.get()The magic here lies in ``scaleway.apis.*API`` instances, which all have a``query`` method returning a ``slumber.API`` object. The latter handling allthe excruciating details of the requests.Documentation-------------Even if this SDK is designed to be developer-friendly and aim for self-servicediscovery, it is still recommended to read the official `API documentation&lt;https://scaleway.com/docs/&gt;`_.And because most of the provided helpers takes the form of pre-configured``Slumber`` objects, a good read of `Slumber &lt;https://slumber.readthedocs.org&gt;`_documention is encouraged as well.The list of available resources per API can be found [on the Scaleway API repository](https://github.com/scaleway/api.scaleway.com/blob/master/README.md#apis)Examples--------- List your organizations:.. code-block:: python    &gt;&gt;&gt; from scaleway.apis import AccountAPI    &gt;&gt;&gt; api = AccountAPI(auth_token='')  # Set your token here!    &gt;&gt;&gt; print api.query().organizations.get()    {u'organizations': [...]}- List your organizations, but get a `flask.Response` object instead of a  `dict`:.. code-block:: python    &gt;&gt;&gt; from scaleway.apis import AccountAPI    &gt;&gt;&gt; api = AccountAPI(auth_token='')  # Set your token here!    &gt;&gt;&gt; resp = api.query(serialize=False).organizations.get()    &gt;&gt;&gt; print type(resp)    &lt;Response [200]&gt;    &gt;&gt;&gt; print resp.headers    {...}  # Response HTTP headers.    &gt;&gt;&gt; print resp.links    {...}  # Parsed &quot;Link&quot; HTTP header, for pagination.    &gt;&gt;&gt; print resp.json()    {u'organizations': [...]}- List your servers:.. code-block:: python    &gt;&gt;&gt; from scaleway.apis import ComputeAPI    &gt;&gt;&gt; api = ComputeAPI(auth_token='')  # Set your token here!    &gt;&gt;&gt; print api.query().servers.get()    {u'servers': [...]}    # Or choose your region, as in apis/api_compute.py    &gt;&gt;&gt; api = ComputeAPI(region='ams1', auth_token='')  # Set your token here!    &gt;&gt;&gt; print api.query().servers.get()    {u'servers': [...]}- Get details of a server:.. code-block:: python    &gt;&gt;&gt; from scaleway.apis import ComputeAPI    &gt;&gt;&gt; api = ComputeAPI(auth_token='')  # Set your token here!    &gt;&gt;&gt; server_id = ''  # Set a server ID here!    &gt;&gt;&gt; print api.query().servers(server_id).get()    {u'server': {...}}- Check if your token has the permission ``servers:read`` for the service  ``compute`` for the organization ``9a096d36-6bf9-470f-91df-2398aa7361f7``:.. code-block:: python    &gt;&gt;&gt; from scaleway.apis import AccountAPI    &gt;&gt;&gt; api = AccountAPI(auth_token='')  # Set your token here!    &gt;&gt;&gt; print api.has_perm(service='compute', name='servers:read',    ...     resource='9a096d36-6bf9-470f-91df-2398aa7361f7')    FalseDevelopment-----------Assuming you are in a `virtualenv &lt;https://virtualenv.readthedocs.org&gt;`_:.. code-block:: bash    $ pip install -e .    $ python -c 'from scaleway.apis import AccountAPI'      # it works!Test----To submit a patch, you'll need to test your code against python2.7 andpython3.4. To run tests:.. code-block:: bash    $ pip install nose coverage pycodestyle pylint    $ python setup.py nosetests --with-coverage      (...)    $ pycodestyle scaleway      (...)    $ pylint scaleway      (...)* Coverage score should never be lower than before your patch.* PEP8 should never return an error.* Pylint score should never be lower than before your patch.Alternatively, to run `nosetests` on both Python2.7 and Python3.4, you can run`tox`.Alternative libraries / clients-------------------------------We maintain a list of the current library/client implementations on the`api.scaleway.com repository&lt;https://github.com/scaleway/api.scaleway.com/blob/master/README.md#clients--libraries&gt;`_.License-------This software is licensed under a `BSD 2-Clause License&lt;https://github.com/scaleway/python-scaleway/blob/develop/LICENSE&gt;`_.`Changes for v1.14.0 (2022-11-02) &lt;https://github.com/scaleway/python-scaleway/compare/v1.13.1...v1.14.0&gt;`_-----------------------------------------------------------------------------------------------------------* Add pl-waw-2 AZ`Full changelog &lt;https://github.com/scaleway/python-scaleway/blob/develop/CHANGES.rst#changelog&gt;`_.</longdescription>
</pkgmetadata>