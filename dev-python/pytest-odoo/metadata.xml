<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pytest-odoo===========pytest plugin to run Odoo testsThis lib allows to run the tests built in Odoo addons which are using Python's `unittest &lt;https://docs.python.org/3/library/unittest.html&gt;`_, but with the comfort of the `pytest &lt;https://docs.pytest.org/&gt;`_ CLI. Also allowing to run tests without updating given module.Odoo's `--test-enable` machinery and pytest-odoo do not cover exactly the same scope. The Odoo's test runner runs the tests duringthe upgrades of the addons, that's why they need the &quot;at install&quot; and &quot;post install&quot; markers.Running tests during upgrades of addons is waaay too slow to work efficiently in a TDD mode, that's where pytest-odoo shines.Consider that all the tests are running `post-install` with pytest-odoo, as you must run the upgrade of the addon before (but only when needed vs each run).At the end of the day, its beneficial to run the Odoo tests with `--test-enable` because, as in very rare conditions,a test can pass with pytest-odoo but not with the &quot;at install&quot; tests run during the upgrade (or the oposite).Pytest-odoo can be considered a development tool, but not the tool that should replace entirely `--test-enable` in a CI.See also the `official Odoo documentation &lt;https://www.odoo.com/documentation/15.0/developer/reference/backend/testing.html#testing-python-code&gt;`_ on writing tests.Usage-----install via::    pip install pytest-odoousage::   pytest -s --odoo-database=test --odoo-log-level=debug_sqlThe custom options are:* ``--odoo-database``: name of the database to test.* ``--odoo-log-level``: log level as expected by odoo. As time of writing: info, debug_rpc, warn, test, critical, debug_sql, error, debug, debug_rpc_answer. The default is critical to have a clean output.* ``--odoo-config``: path of the odoo.cfg file to use.Alternatively, you can use the ``OPENERP_SERVER`` environment variable using an odoo configuration file, containing at least the ``database`` option with the name of the database to test::   export OPENERP_SERVER=/path/to/odoo/config.cfg   pytest ...</longdescription>
</pkgmetadata>