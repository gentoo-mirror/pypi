<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Case Converter[![pipline](https://img.shields.io/gitlab/pipeline/chrisdoherty4/python-case-converter)](https://gitlab.com/chrisdoherty4/python-case-converter/-/pipelines) [![wheel](https://img.shields.io/pypi/wheel/case-converter)](https://pypi.org/project/case-converter/) ![coverage](https://gitlab.com/chrisdoherty4/python-case-converter/badges/master/coverage.svg) ![license](https://img.shields.io/github/license/chrisdoherty4/python-case-converter)A robust python package for transforming string cases such as `Hello, world!` into `helloWorld` (camelcase).## General usage```pythonfrom caseconverter import camelcasecamelcase(&quot;Hello, world!&quot;) # output: helloWorld```### Delimeter behaviorIf multiple delimeter characters are identified next to eachother they will be considered as a single delimeter. For example, `-_` contains 2 different delimeter characters and is considered a single delimeter.## Available conversions### `camelcase````pythonfrom caseconverter import camelcasecamelcase(&quot;Hello, world!&quot;)``````texthelloWorld```### `cobolcase````pythonfrom caseconverter import cobolcasecobolcase(&quot;Hello, world!&quot;)``````textHELLO-WORLD```### `flatcase````pythonfrom caseconverter import flatcaseflatcase(&quot;Hello, world!&quot;)``````texthelloworld```### `kebabcase````pythonfrom caseconverter import kebabcasekebabcase(&quot;Hello, world!&quot;)``````texthello-world```### `macrocase````pythonfrom caseconverter import macrocasemacrocase(&quot;Hello, world!&quot;)``````textHELLO_WORLD```#### Additional options`delims_only : bool` - Only consider delimiters as boundaries (default: `False`).### `pascalcase````pythonfrom caseconverter import pascalcasepascalcase(&quot;Hello, world!&quot;)``````textHelloWorld```### `snakecase````pythonfrom caseconverter import snakecasesnakecase(&quot;Hello, world!&quot;)``````texthello_world```## Options for all conversions### Stripping punctuationPunctuation is stripped when doing a case conversion. However, should youwish to keep the punctuation you can do so by passing `strip_punctuation=False`.```pythoncamelcase(&quot;Hello, world!&quot;, strip_punctuation=False) # output: hello,World!```### Delimeter customizationDefault delimiters used to denote a token boundary.```pythonDELIMITERS = &quot; -_&quot;```You can pass `delims` to each case conversion function to specify a customset of delimiters.```python# Use a pipe `|` as the only delimiter.camelcase(&quot;Hello,|world!&quot;, delims=&quot;|&quot;) # output: helloWorld```## Boundaries definitions|Name|Description||---|---||OnDelimeterUppercaseNext|On a delimieter, upper case the following character||OnDelimeterLowercaseNext|On a delimeter, lower case the following character||OnUpperPrecededByLowerAppendUpper|On an upper case character followed by a lower case character, append the upper case character||OnUpperPrecededByLowerAppendLower|On an upper case character preceeded by a lower case character append the lower case character||OnUpperPrecededByUpperAppendJoin|On an upper case caharacter preceeded by an upper append the join character. Join characters are context dependent. Example: macro cast join character is `_`||OnUpperPrecededByUpperAppendCurrent|On an upper case character preceeded by an upper case character append the upper case character|## Contributing1. Write clean code.2. Write new tests for new use-cases.3. Test your code before raising a PR.4. Use [black](https://pypi.org/project/black/) to format your code.</longdescription>
</pkgmetadata>