<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![CI](https://github.com/terminalkitten/django-insights/actions/workflows/main.yml/badge.svg)](https://github.com/terminalkitten/django-insights/actions/workflows/main.yml)![&quot;Django Insights&quot;](https://raw.githubusercontent.com/terminalkitten/django-insights/main/docs/assets/images/banner.png)## FeaturesCreate insights for your app, store them in a SQLite database for further processing, these insights are written right next to your application logic.### Note:Still working on some small things, extending tests and improving the documentation.For now focus is on:- Django 3.2 (LTS), 4.0,4.1 and 4.2;- Python ≥ 3.8## InstallationInstalling with:```bashpip install 'django-insights'```## UsageFirst create a `insights.py` file in your app directory, for example:```bashproject└── testapp    └── insights.py```Each app can have it's own `insignts.py` file, these files are auto-discovered by Django Insights, so at any given location it would pick up your metrics.In these insights files you write out any metric you would like to track. Each metric starts with a question and some values to store. Below is a example of the `@metrics.counter` function:```python# project/testapp/insights.pyfrom django_insights.metrics import metricsfrom project.testapp.models import Authorlabel = &quot;Bookstore&quot;@metrics.counter(question=&quot;How many authors are there?&quot;)def count_authors() -&gt; int:    return Author.objects.count()```Insight apps can have a `label`, this is used in the dashboard or can be read from `insights_app` table later on.### SettingsAdd django_insights package, insights database and router to your settings```pythonINSTALLED_APPS = [    ...    &quot;django_insights&quot;,]DATABASES = {    ...    &quot;insights&quot;: {&quot;ENGINE&quot;: &quot;django.db.backends.sqlite3&quot;, &quot;NAME&quot;: &quot;db/insights.db&quot;},    ...}DATABASE_ROUTERS = ['django_insights.database.Router']```Note: please make sure you exclude the database in your `.gitignore` fileMigrate insights database:```bashworkon myapppython manage.py migrate insights --database=insights```Now collect your insights```bashpython manage.py collect_insights```You now have a database containing all insights from your application.You can inspect this database yourself with `sqlite3 db/insights.db` - or - you can use the Django Insights dashboard.### Dashboard![&quot;Dashboard - Main Screen&quot;](https://raw.githubusercontent.com/terminalkitten/django-insights/main/docs/assets/images/screen_1.png)To enable this dashboard, add the following settings:```pythonfrom django.urls import include, pathurlpatterns = [    path(        '/insights',        include('django_insights.urls', namespace='insights'),    ),]```![&quot;Dashboard - App&quot;](https://raw.githubusercontent.com/terminalkitten/django-insights/main/docs/assets/images/screen_2.png)Now you can visit https://localhost:8000/insights to inspect your Django Insights database.## MetricsDjango insights contains 5 types of metrics it can collect:- `@metrics.counter`- `@metrics.gauge`- `@metrics.timeseries`- `@metrics.scatterplot`- `@metrics.barchart`### Counter:```pythonfrom django_insights.metrics import metricsfrom project.testapp.models import Author@metrics.counter(question=&quot;How many authors are there?&quot;)def count_authors() -&gt; int:    return Author.objects.count()```### Gauge:```pythonfrom django.db.models import Avg, Countfrom django_insights.metrics import metricsfrom project.testapp.models import Author@metrics.gauge(question=&quot;Average book(s) per author?&quot;)def avg_books_per_author() -&gt; int:    avg_total_books = (        Author.objects.prefetch_related('books')        .annotate(total_books=Count('books'))        .aggregate(Avg('total_books'))        .get('total_books__avg')    )    return avg_total_books```### Timeseries:```pythonfrom datetime import datetimefrom django.db.models import Countfrom django.db.models.functions import TruncMonthfrom django_insights.metrics import metricsfrom project.testapp.models import Book@metrics.timeseries(    question=&quot;Num of books created per month?&quot;,    desc=&quot;How many books are added each month, since the opening of our store&quot;,    xlabel=&quot;Month&quot;,    xformat='%m',    ylabel=&quot;Num of books&quot;,)def num_of_books_per_month() -&gt; list[tuple[datetime, int]]:    return (        Book.objects.all()        .annotate(month=TruncMonth('created'))        .values('month')        .filter(month__isnull=False)        .annotate(total=Count('pk'))        .values_list('month', 'total')        .order_by('month')    )```### Scatterplot:```pythonfrom datetime import datetimefrom django.db.models import Count, Valuefrom django_insights.metrics import metricsfrom project.testapp.models import Author@metrics.scatterplot(    question=&quot;Num of books by age of author?&quot;,    xlabel=&quot;Age&quot;,    ylabel=&quot;Num of books&quot;,)def author_age_vs_num_of_books() -&gt; list[tuple[float, float, Any]]:    return (        Author.objects.values('age')        .annotate(num_of_books=Count('books'), category=Value(&quot;author&quot;))        .values_list('num_of_books', 'age', 'category')    )```### Barchart:```pythonfrom datetime import datetimefrom django.db.models import Case, Count, Value, Whenfrom django_insights.metrics import metricsfrom project.testapp.models import Author@metrics.barchart(    question=&quot;Num of books by gender of author?&quot;,    xlabel=&quot;Gender&quot;,    ylabel=&quot;Num of books&quot;,)def author_gender_vs_num_of_books() -&gt; list[tuple[float, float, str]]:    return (        Author.objects.values('gender')        .annotate(            num_of_books=Count('books'),            gender_category=Case(                When(gender=1, then=Value('Male')),                When(gender=2, then=Value('Female')),            ),        )        .values_list('num_of_books', 'gender', 'gender_category')    )```## Settings```python# Custom app nameINSIGHTS_APP_NAME = &quot;Bezamon&quot;# Quality of chart imagesINSIGHTS_CHART_DPI = 180# Default theme for dashboardINSIGHTS_THEME = &quot;dark&quot;# Change primary color of dashboardINSIGHTS_CHART_LIGHT_PRIMARY_COLOR = &quot;#2563EB&quot;INSIGHTS_CHART_DARK_PRIMARY_COLOR = &quot;#BFDBFE&quot;```## Use-casesInsights are gathered from your current application state, Django Insights is not intentend to be used as a realtime, incremementing data-source. You should be able to re-gather these insights from your actual data at any moment in time.Yes:- How many users, how many users invited a year- How many reports a day, how many messages send on Wednesday'sNo:- How many GET request for url XXX a second- Realtime profit target percentage## BackgroundI'm currently working at a small company that is in the process of renewing some parts of our product. To gain insight into the usage over different periods, we have tried a few solutions. We initially attempted to periodically generate CSV files from queries, as well as send data to a dashboard at regular intervals.We ended up with many exports that where spread out over multiple people. Additionally, exporting data directly from the database also posed a security risk, as it required constant movement of possible sensitive information. After several months of working with CSV files, which were often outdated and required conversion by other (paid) tools, we where looking for a better solution.I wanted an easy-to-configure file within our various apps that would allow me to create &quot;insights&quot; easily, so Django Insights was born. I decided to switch to a local SQLite database which could be share on request, as a plus these files can be tracked by a security officer.## DocumentationWrite more about where to find documentation## Ideas- Connect to other datasources and export to different file-formats ( ArrowFile?, NDJSON )## Is it any good?[Yes.](http://news.ycombinator.com/item?id=3067434)## LicenseThe MIT License</longdescription>
</pkgmetadata>