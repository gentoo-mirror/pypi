<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># geoprepare[![image](https://img.shields.io/pypi/v/geoprepare.svg)](https://pypi.python.org/pypi/geoprepare)**A Python package to prepare (download, extract, process input data) for GEOCIF and related models**-   Free software: MIT license-   Documentation: https://ritviksahajpal.github.io/geoprepare## Installation### Using PyPi (default)```pythonpip install --upgrade geoprepare```### Using Github repository (for development)```pythonpip install --upgrade --no-deps --force-reinstall git+https://github.com/ritviksahajpal/geoprepare.git```## Usage```pythonfrom geoprepare import geoprepare, geoextract, geomerge# Provide full path to the configuration files# Download and preprocess datageoprepare.run(['PATH_TO_geoprepare.txt'])# Extract crop masks and EO variablesgeoextract.run(['PATH_TO_geoprepare.txt', 'PATH_TO_geoextract.txt'])# Merge EO files into one, this is needed to create AgMet graphics and to run the crop yield modelgeomerge.run(['PATH_TO_geoprepare.txt', 'PATH_TO_geoextract.txt'])```Before running the code above, we need to specify the two configuration files. `geoprepare.txt` contains configuration settings for downloading and processing the input data.`geoextract.txt` contains configuration settings for extracting crop masks and EO variables.## Configuration files### geoprepare.txt`datasets`: Specify which datasets need to be downloaded and processed`dir_base`: Path where to store the downloaded and processed files`start_year`, `end_year`: Specify time-period for which data should be downloaded and processed`logfile`: What directory name to use for the log files`level`: Which level to use for [logging](https://www.loggly.com/ultimate-guide/python-logging-basics/)`parallel_process`: Whether to use multiple CPUs`fraction_cpus`: What fraction of available CPUs to use```python[DATASETS]datasets = ['CPC', 'SOIL-MOISTURE', 'LST', 'CPC', 'AVHRR', 'AGERA5', 'CHIRPS', 'CHIRPS-GEFS'][PATHS]dir_base = /home/servir/GEOCIFdir_input = ${dir_base}/inputdir_log = ${dir_base}/logdir_interim = ${dir_input}/interimdir_download = ${dir_input}/downloaddir_output = ${dir_base}/outputdir_global_datasets = ${dir_input}/global_datasetsdir_masks = ${dir_global_datasets}/masksdir_regions = ${dir_global_datasets}/regionsdir_regions_shp = ${dir_regions}/shpsdir_crop_masks = ${dir_input}/crop_masksdir_models = ${dir_input}/models[AGERA5]start_year = 2022[AVHRR]data_dir = https://www.ncei.noaa.gov/data/avhrr-land-normalized-difference-vegetation-index/access[CHIRPS]fill_value = -2147483648prelim = /pub/org/chc/products/CHIRPS-2.0/prelim/global_daily/tifs/p05/final = /pub/org/chc/products/CHIRPS-2.0/global_daily/tifs/p05/start_year = 2022[CHIRPS-GEFS]fill_value = -2147483648data_dir = /pub/org/chc/products/EWX/data/forecasts/CHIRPS-GEFS_precip_v12/15day/precip_mean/[CPC]data_dir = ftp://ftp.cdc.noaa.gov/Datasets[ESI]data_dir = https://gis1.servirglobal.net//data//esi//[FLDAS][LST]num_update_days = 7[NDVI]product = MOD09CMGvi = ndviscale_glam = Falsescale_mark = Trueprint_missing = False[SOIL-MOISTURE]data_dir = https://gimms.gsfc.nasa.gov/SMOS/SMAP/L03/[LOGGING]level = ERROR[DEFAULT]logfile = logparallel_process = Falsefraction_cpus = 0.5start_year = 2022end_year = 2022```### geoextract.txt`countries`: List of countries to process`forecast_seasons`: List of seasons to process`mask`: Name of file to use as a mask for cropland/croptype`redo`: Redo the processing for all days (`True`) or only days with new data (`False`)`threshold`: Use a `threshold` value (`True`) or a `percentile` (`False`) on the cropland/croptype mask`floor`: Value below which to set the mask to 0`ceil`: Value above which to set the mask to 1`eo_model`: List of datasets to extract from```python[kenya]category = EWCMscale = ['admin1']  ; can be admin1 (state level) or admin2 (county level)season = [1]  ; 1 is primary/long season, 2 is secondary/short seasoncrops = ['mz', 'sr', 'ml', 'rc', 'ww', 'tf']use_cropland_mask = True[ww]mask = cropland_v9.tif[mz]mask = cropland_v9.tif[sb]mask = cropland_v9.tif[rc]mask = cropland_v9.tif[tf]mask = cropland_v9.tif[sr]mask = cropland_v9.tif[ml]mask = cropland_v9.tif[DEFAULT]redo = Falsethreshold = Truefloor = 20ceil = 90scale = ['admin1']season = [1]countries = ['kenya']forecast_seasons = [2022]mask = cropland_v9.tifshp_boundary = EWCM_Level_1.shpeo_model = ['ndvi', 'cpc_tmax', 'cpc_tmin', 'cpc_precip', 'esi_4wk', 'soil_moisture_as1', 'soil_moisture_as2']```## CreditsThis package was created with [Cookiecutter](https://github.com/cookiecutter/cookiecutter) and the [giswqs/pypackage](https://github.com/giswqs/pypackage) project template.</longdescription>
</pkgmetadata>