<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cdk-eks-karpenterThis construct configures the necessary dependencies and installs [Karpenter](https://karpenter.sh)on an EKS cluster managed by AWS CDK.## Prerequisites### Usage with EC2 Spot CapacityIf you have not used EC2 spot in your AWS account before, follow the instructions[here](https://karpenter.sh/v0.31/getting-started/getting-started-with-karpenter/#3-create-a-cluster) to createthe service linked role in your account allowing Karpenter to provision EC2 Spot Capacity.## UsingIn your CDK project, initialize a new Karpenter construct for your EKS cluster, like this:```pythonconst cluster = new Cluster(this, 'testCluster', {  vpc: vpc,  role: clusterRole,  version: KubernetesVersion.V1_21,  defaultCapacity: 1});const karpenter = new Karpenter(this, 'Karpenter', {  cluster: cluster});```This will install and configure Karpenter in your cluster. To have Karpenter do something useful, youalso need to create a [provisioner for AWS](https://karpenter.sh/v0.31/concepts/provisioners/). You cando that from CDK using `addProvisioner()`, similar to the example below:```pythonkarpenter.addProvisioner('spot-provisioner', {  requirements: [{    key: 'karpenter.sh/capacity-type',    operator: 'In',    values: ['spot']  }],  limits: {    resources: {      cpu: 20    }  },  provider: {    subnetSelector: {      Name: 'PublicSubnet*'    },    securityGroupSelector: {      'aws:eks:cluster-name': cluster.clusterName    }  }});```## Known issues### Versions earlier than v0.6.1 fails to installAs of [aws/karpenter#1145](https://github.com/aws/karpenter/pull/1145) the Karpenter Helm chart isrefactored to specify `clusterEndpoint` and `clusterName` on the root level of the chart values, previouslythese values was specified under the key `controller`.## TestingThis construct adds a custom task to [projen](https://projen.io/), so you can test a full deploymentof an EKS cluster with Karpenter installed as specified in `test/integ.karpenter.ts` by running thefollowing:```shexport CDK_DEFAULT_REGION=&lt;aws region&gt;export CDK_DEFAULT_ACCOUNT=&lt;account id&gt;npx projen test:deploy```As the above will create a cluster without EC2 capacity, with CoreDNS and Karpenter running as Fargatepods, you can test out the functionality of Karpenter by deploying an inflation deployment, which willspin up a number of pods that will trigger Karpenter creation of worker nodes:```shkubectl apply -f test/inflater-deployment.yml```You can clean things up by deleting the deployment and the CDK test stack:```shkubectl delete -f test/inflater-deployment.ymlnpx projen test:destroy```## FAQ### I'm not able to launch spot instances1. Ensure you have the appropriate linked role available in your account, for more details,   see [the karpenter documentation](https://karpenter.sh/v0.31/getting-started/getting-started-with-karpenter/#3-create-a-cluster)</longdescription>
</pkgmetadata>