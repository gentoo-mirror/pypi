<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MiPA&lt;a href=&quot;https://discord.gg/CcT997U&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/530299114387406860?style=flat-square&amp;color=5865f2&amp;logo=discord&amp;logoColor=ffffff&amp;label=discord&quot; alt=&quot;Discord server invite&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-axblack-8bd124.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fyupix%2FMiPA?ref=badge_shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fyupix%2FMiPA.svg?type=shield&quot;/&gt;&lt;/a&gt;## 概要MiPA は[Discord.py](https://github.com/Rapptz/discord.py)ライクな書き方ができるように作っている MisskeyApi wrapper です## 注意- このプロジェクトは開発中です。仕様が定まっていないため、破壊的変更が多いです。- `master` ブランチで使用しているmipacは`GitHub`にあるmipacの`develop`ブランチの物です。## サポートしているMisskey- [Misskey Official v12](https://github.com/misskey-dev/misskey)- [Ayuskey latest](https://github.com/teamblackcrystal/misskey)### Examples```pyimport asynciofrom aiohttp import ClientWebSocketResponsefrom mipac import Notefrom mipac.models import ChatMessagefrom mipa.ext.commands.bot import Botclass MyBot(Bot):    def __init__(self):        super().__init__()    async def on_ready(self, ws: ClientWebSocketResponse):        await self.router.connect_channel(['main', 'home'])        print('Logged in ', self.user.username)    async def on_note(self, note: Note):        print(note.author.username, note.content)    async def on_chat(self, message: ChatMessage):        print(message.user.username, message.text)        if message.text == 'hello':            await self.client.chat.action.send(                f'hello! {message.user.username}',                user_id=message.user.id            )if __name__ == '__main__':    bot = MyBot()    asyncio.run(bot.start('wss://example.com/streaming', 'your token here'))```Want more examples? Go to the [examples folder](examples)! Want to know how to use a feature that isn't even here?Submit a request in an Issue!### 開発者向け情報このプロジェクトでは [black](https://github.com/psf/black)のforkである、[axblack](https://github.com/axiros/axblack)を利用しています。主な違いはダブルクォートがデフォルトではなく、シングルクォートになっている点です## LICENSEこのプロジェクトは [MIT LICENSE](./LICENSE) で提供されます。MiPAでは多くの部分においてDiscord.pyを参考にさせていただきました。そのため、Discord.pyのソースコードを利用させていただいている個所ではファイルの初めにDiscord.py側のライセンスを明記しています。詳しくはコードを確認してください。[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fyupix%2FMiPA.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fyupix%2FMiPA?ref=badge_large)## Special Thanks- [Discord.py](https://github.com/Rapptz/discord.py)    - Cogの仕組みやtask,stateの管理等多くの部分で参考にさせていただきました。&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://mipa.akarinext.org&quot;&gt;Documentation&lt;/a&gt;    *    &lt;a href=&quot;https://discord.gg/CcT997U&quot;&gt;Discord Server&lt;/a&gt;&lt;/p&gt;</longdescription>
</pkgmetadata>