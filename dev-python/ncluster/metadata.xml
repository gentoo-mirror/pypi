<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># nclusterBy Yaroslav Bulatov, Andrew Shaw, Ben Mannhttps://github.com/cybertronai/nclusterNcluster provides Python API to do the following things:- Allocate AWS machine- Upload file to machine- Run command on machine- Download file from machineIE```import nclustertask = ncluster.make_task(instance_type='p2.xlarge')task.upload('myscript.py')task.run('python myscript.py &gt; out')task.download('out')```Necessary AWS infrastructure is created on demand using defaults optimal for fast prototyping. IE, your machines are preconfigured for passwordless SSH, can access each other over all interfaces, and have a persistent file system mounted under /ncluster. Commands are executed in a remote tmux session so you can take over the environment at any time and continue from your terminal.  ## InstallationInstall pip, tmux, Python 3.6 (see below), and [write down](https://docs.google.com/document/d/1Z8lCZVWXs7XORbiNmBAsBDtouV3KwrtH8-UL5M-zHus/edit) your AWS security keys, then```pip install -r https://raw.githubusercontent.com/yaroslavvb/ncluster/master/requirements.txtpip install -U nclusterexport AWS_ACCESS_KEY_ID=AKIAIBATdf343export AWS_SECRET_ACCESS_KEY=z7yKEP/RhO3Olk343aiPexport AWS_DEFAULT_REGION=us-east-1```## Command-line tools```nclusterncluster lsncluster hostsncluster lsncluster ls &lt;substring&gt;ncluster ssh # connects to latest instancencluster ssh &lt;substring&gt;  # connects to latest instance containing &lt;substring&gt;ncluster ssh \'&lt;exact match&gt;\'ncluster mosh &lt;substring&gt; ncluster kill &lt;substring&gt;    # terminates matching instancesncluster kill \'&lt;exact match&gt;\'ncluster stop &lt;substring&gt;    # stops matching instancesncluster start &lt;substring&gt;   # starts matching stopped instancesncluster nano       # starts a tiny instancencluster keys   # information on enabling SSH access for your team-membersncluster ssh_    # like ssh but works on dumb terminalsncluster ls     ncluster cat &lt;fn&gt;ncluster cmd &quot;some command to run remotely on AWS&quot;ncluster efs   # gives EFS info such as the mount commandnsync -m gpuboxnsync -m gpubox -d transformer-xlnsync -d {target directory} -m {machine name substring}nsync -m gpubox # syncs . to ~ on gpuboxnsync -d transformer-xl -m 4gpubox  # syncs . to ~/transformer-xl on 4gpubox{substring} selects the most recently launched instances whose name contains the substring. Empty string is a valid substring. Skipping -t will sync to ~ on remote machine. Sync seems to be 1 way (from local -&gt; remote)```## Docs- Some out-of-date docs with more info [docs](https://docs.google.com/document/d/178ITRCAkboHoOEZFnz9XvOsc8lXik6Acz_DS_V1u8hY/edit?usp=sharing)### ExtraAn example of installing pip/tmux/python 3.6 on MacOS1. Download Anaconda distribution following https://conda.io/docs/user-guide/install/index.html2. Install tmux through homebrew: https://brew.sh/, then `brew install tmux`Then```conda create -n new python=3.6 -yconda activate new```Extra Deps:```brew install fswatch```</longdescription>
</pkgmetadata>