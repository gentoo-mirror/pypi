<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;!-- CircleCI Tests --&gt;  &lt;a href=&quot;https://circleci.com/gh/BjoernLudwigPTB/pyxml2pdf&quot;&gt;&lt;img alt=&quot;CircleCI pipeline status badge&quot; src=&quot;https://circleci.com/gh/BjoernLudwigPTB/pyxml2pdf.svg?style=shield&quot;&gt;&lt;/a&gt;  &lt;!-- ReadTheDocs Documentation --&gt;  &lt;a href=&quot;https://pyxml2pdf.readthedocs.io/en/latest/&quot;&gt;    &lt;img src=&quot;https://readthedocs.org/projects/pyxml2pdf/badge/?version=latest&quot; alt=&quot;ReadTheDocs badge&quot;&gt;  &lt;/a&gt;  &lt;!-- CodeCov(erage) --&gt;  &lt;a href=&quot;https://codecov.io/gh/BjoernLudwigPTB/pyxml2pdf&quot;&gt;    &lt;img src=&quot;https://codecov.io/gh/BjoernLudwigPTB/pyxml2pdf/branch/main/graph/badge.svg&quot; alt=&quot;CodeCov badge&quot;/&gt;  &lt;/a&gt;  &lt;!-- PyPI Version --&gt;  &lt;a href=&quot;https://pypi.org/project/pyxml2pdf&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/pyxml2pdf.svg?label=release&amp;color=blue&amp;style=flat-square&quot; alt=&quot;pypi&quot;&gt;  &lt;/a&gt;  &lt;!-- PyPI Python Version --&gt;  &lt;a href=&quot;https://pypi.org/project/pyxml2pdf&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/pyxml2pdf&quot; alt=&quot;Python Version&quot;&gt;  &lt;/a&gt;  &lt;!-- PyPI License --&gt;  &lt;a href=&quot;https://www.gnu.org/licenses/lgpl-3.0.en.html&quot;&gt;    &lt;img alt=&quot;PyPI - license badge&quot; src=&quot;https://img.shields.io/pypi/l/pyxml2pdf?color=bright&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;Convert your XML into a Pdf table&lt;/h1&gt;&lt;p align=&quot;justify&quot;&gt;Generate a &lt;b&gt;multi-page PDF file&lt;/b&gt; from an &lt;b&gt;XML file&lt;/b&gt; with the contentsdisplayed in &lt;b&gt;several tables&lt;/b&gt; based on &lt;b&gt;filter criteria&lt;/b&gt;.&lt;/p&gt;## Table of content- [üí´ Quickstart](#quickstart)- [üëì Example](#example)- [üìñ Documentation](#documentation)- [üíª Installation](#installation)- [üí® Coming soon](#coming-soon)- [üëã Get in touch](#get-in-touch)- [üíé Acknowledgement](#acknowledgement)- [‚ö† Disclaimer](#disclaimer)- [Ô∏è¬© License](#license)## üí´Quickstart As a starting point you could call```shell$ python -m pyxml2pdf.main input/template.xml```which will download a publicly available XML file into the folder *input* and processit as desired to produce the output files (one file containing all generated pages in landscape and additionally one file per page rotated into portrait) and place them in the subfolder *output*.The intended way of using this software is calling[_main.py_](pyxml2pdf/main.py) with the following command line parameters- positional arguments:  - `&lt;local_file&gt;` The local file path to the XML file. If this file is not present,    the optional input parameter '--url' needs to be provided with the URL from which    the file shall be downloaded.- optional arguments:  - `-u &lt;URL&gt;, --url &lt;URL&gt;`    The URL from which the file shall be downloaded. This is only used, if the specified    local file is not present. Defaults to ['https://github.com/BjoernLudwigPTB/pyxml2pdf/blob/main/input/template.xml'](https://github.com/BjoernLudwigPTB/pyxml2pdf/blob/main/input/template.xml)  - `-p &lt;path to Pdf file&gt;, --pdf &lt;path to Pdf file&gt;`    The file path to store the created PDF to. Defaults to `'output/template.pdf'`## üëìExampleAs an example we look at our _input/template.xml_ and the processed result. Imagine youhave an XML file with similar groups of tags and subtags.```xml&lt;main_tag&gt;    &lt;row_tag&gt;        &lt;name_tag&gt;Name 1&lt;/name_tag&gt;        &lt;info_tag&gt;Info 1&lt;/info_tag&gt;        &lt;filter_tag&gt;filter_1, filter_2&lt;/filter_tag&gt;    &lt;/row_tag&gt;    &lt;row_tag&gt;        &lt;name_tag&gt;Name 2&lt;/name_tag&gt;        &lt;info_tag&gt;Info 2&lt;/info_tag&gt;        &lt;filter_tag&gt;filter_2, filter_3&lt;/filter_tag&gt;    &lt;/row_tag&gt;    &lt;row_tag&gt;        &lt;name_tag&gt;Name 3&lt;/name_tag&gt;        &lt;info_tag&gt;Info 3&lt;/info_tag&gt;        &lt;filter_tag&gt;filter_2&lt;/filter_tag&gt;    &lt;/row_tag&gt;    &lt;row_tag&gt;        &lt;name_tag&gt;Name 4&lt;/name_tag&gt;        &lt;info_tag&gt;Info 4&lt;/info_tag&gt;        &lt;filter_tag&gt;filter_1, filter_3&lt;/filter_tag&gt;    &lt;/row_tag&gt;    &lt;row_tag&gt;        &lt;name_tag&gt;Name 5&lt;/name_tag&gt;        &lt;info_tag&gt;Info 5&lt;/info_tag&gt;        &lt;filter_tag&gt;filter_1&lt;/filter_tag&gt;    &lt;/row_tag&gt;&lt;/main_tag&gt;```Now you want to visualize all `row_tag`s with their subtags `name_tag` and `info_tag`fed into separate columns. And lastly you want to group those `row_tags` which satisfy certain filter criteria, that is their `filter_tag` contains certaincombinations of comma-separated texts. Those groups of `row_tag`s are extracted intoseveral subtables each with a separating heading line and the corresponding columnheadings.![page one of the processed template.xml](output/template_page_01_rotated.png)## üìñDocumentationThe API reference you can find on [ReadTheDocs](https://pyxml2pdf.readthedocs.io/).## üíªInstallationThe installation of pyxml2pdf is as straightforward as the Python ecosystem suggests. Just [create a virtual environment](https://docs.python.org/3/library/venv.html)and install it via: ```shell(venv) $ pip install pyxml2pdf```## üí®Coming soon The next big step will be the deployment on [Heroku](https://www.heroku.com).## üëãGet in touch In case you have any questions on this project do not hesitate to get in touch with[us](https://github.com/BjoernLudwigPTB/pyxml2pdf/graphs/contributors).## üíéAcknowledgementThis project was prepared by [Wojciech Kur](https://github.com/kuras120) in hisrepository [XMLtoPDFConverter](https://github.com/kuras120/XMLToPDFConverter). We aregrateful for his effort in designing the basic structure and built upon his main ideas.At some point our project diverged as much from his original work, as for us to justifyto decouple our project from his. The fork is still kept (and maintained) as a special case in [pyacb2pdf](https://github.com/BjoernLudwigPTB/pyacb2pdf).## ‚ö†DisclaimerThis software is developed in sole responsibility of Bj√∂rn Ludwig. The software is madeavailable &quot;as is&quot; free of cost. The author assumes no responsibility whatsoever for itsuse by other parties, and makes no guarantees, expressed or implied, about its quality, reliability, safety, suitability or any other characteristic. In no event will the author be liable for any direct, indirect or consequential damage arising in connectionwith the use of this software.## ¬©Licensepyxml2pdf is distributed under the [GPLv3 license](https://github.com/BjoernLudwigPTB/pyxml2pdf/blob/main/LICENSE).</longdescription>
</pkgmetadata>