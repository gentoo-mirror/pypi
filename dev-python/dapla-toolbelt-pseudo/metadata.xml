<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pseudonymization extensions for Dapla Toolbelt[![PyPI](https://img.shields.io/pypi/v/dapla-toolbelt-pseudo.svg)][pypi_][![Status](https://img.shields.io/pypi/status/dapla-toolbelt-pseudo.svg)][status][![Python Version](https://img.shields.io/pypi/pyversions/dapla-toolbelt-pseudo)][python version][![License](https://img.shields.io/pypi/l/dapla-toolbelt-pseudo)][license][![Tests](https://github.com/statisticsnorway/dapla-toolbelt-pseudo/workflows/Tests/badge.svg)][tests][![Codecov](https://codecov.io/gh/statisticsnorway/dapla-toolbelt-pseudo/branch/main/graph/badge.svg)][codecov][![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)][pre-commit][![Black](https://img.shields.io/badge/code%20style-black-000000.svg)][black][pypi_]: https://pypi.org/project/dapla-toolbelt-pseudo/[status]: https://pypi.org/project/dapla-toolbelt-pseudo/[python version]: https://pypi.org/project/dapla-toolbelt-pseudo[tests]: https://github.com/statisticsnorway/dapla-toolbelt-pseudo/actions?workflow=Tests[codecov]: https://app.codecov.io/gh/statisticsnorway/dapla-toolbelt-pseudo[pre-commit]: https://github.com/pre-commit/pre-commit[black]: https://github.com/psf/blackPseudonymize, repseudonymize and depseudonymize data on Dapla.## UsageSee the [command-line reference] for details.### Pseudonymize```pythonfrom dapla_pseudo import pseudonymize# Pseudonymize fields in a local file using the default key:pseudonymize(file_path=&quot;./data/personer.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;])# Pseudonymize fields in a local file, explicitly denoting the key to use:pseudonymize(file_path=&quot;./data/personer.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;], key=&quot;ssb-common-key-1&quot;)# Pseudonymize a local file using a custom key:import jsoncustom_keyset = json.dumps(    {    &quot;encryptedKeyset&quot;: &quot;CiQAp91NBhLdknX3j9jF6vwhdyURaqcT9/M/iczV7fLn...8XYFKwxiwMtCzDT6QGzCCCM=&quot;,    &quot;keysetInfo&quot;: {        &quot;primaryKeyId&quot;: 1234567890,        &quot;keyInfo&quot;: [            {                &quot;typeUrl&quot;: &quot;type.googleapis.com/google.crypto.tink.AesSivKey&quot;,                &quot;status&quot;: &quot;ENABLED&quot;,                &quot;keyId&quot;: 1234567890,                &quot;outputPrefixType&quot;: &quot;TINK&quot;,            }        ],    },    &quot;kekUri&quot;: &quot;gcp-kms://projects/some-project-id/locations/europe-north1/keyRings/some-keyring/cryptoKeys/some-kek-1&quot;,})pseudonymize(file_path=&quot;./data/personer.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;], key=custom_keyset)# Operate on data in a streaming manner:import shutilwith pseudonymize(&quot;./data/personer.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;, &quot;etternavn&quot;], stream=True) as res:    with open(&quot;./data/personer_deid.json&quot;, 'wb') as f:        res.raw.decode_content = True        shutil.copyfileobj(res.raw, f)# Map certain fields to stabil IDpseudonymize(file_path=&quot;./data/personer.json&quot;, fields=[&quot;fornavn&quot;], sid_fields=[&quot;fnr&quot;])```### Repseudonymize```pythonfrom dapla_pseudo import repseudonymize# Repseudonymize fields in a local file, denoting source and target keys to use:repseudonymize(file_path=&quot;./data/personer_deid.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;], source_key=&quot;ssb-common-key-1&quot;, target_key=&quot;ssb-common-key-2&quot;)```### Depseudonymize```pythonfrom dapla_pseudo import depseudonymize# Depseudonymize fields in a local file using the default key:depseudonymize(file_path=&quot;./data/personer_deid.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;])# Depseudonymize fields in a local file, explicitly denoting the key to use:depseudonymize(file_path=&quot;./data/personer_deid.json&quot;, fields=[&quot;fnr&quot;, &quot;fornavn&quot;], key=&quot;ssb-common-key-1&quot;)```_Note that depseudonymization requires elevated access privileges._## Requirements- [Dapla Toolbelt](https://github.com/statisticsnorway/dapla-toolbelt)## InstallationYou can install _dapla-toolbelt-pseudo_ via [pip] from [PyPI]:```consolepip install dapla-toolbelt-pseudo```## ContributingContributions are very welcome.To learn more, see the [Contributor Guide].## LicenseDistributed under the terms of the [MIT license][license],_Pseudonymization extensions for Dapla Toolbelt_ is free and open source software.## IssuesIf you encounter any problems,please [file an issue] along with a detailed description.## CreditsThis project was generated from [@cjolowicz]'s [Hypermodern Python Cookiecutter] template.[@cjolowicz]: https://github.com/cjolowicz[pypi]: https://pypi.org/[hypermodern python cookiecutter]: https://github.com/cjolowicz/cookiecutter-hypermodern-python[file an issue]: https://github.com/statisticsnorway/dapla-toolbelt-pseudo/issues[pip]: https://pip.pypa.io/&lt;!-- github-only --&gt;[license]: https://github.com/statisticsnorway/dapla-toolbelt-pseudo/blob/main/LICENSE[contributor guide]: https://github.com/statisticsnorway/dapla-toolbelt-pseudo/blob/main/CONTRIBUTING.md[command-line reference]: https://statisticsnorway.github.io/dapla-toolbelt-pseudo</longdescription>
</pkgmetadata>