<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># hugging-chat-apiEnglish | [ç®€ä½“ä¸­æ–‡](README_cn.md)HuggingChat Python API[![PyPi](https://img.shields.io/pypi/v/hugchat.svg)](https://pypi.python.org/pypi/hugchat)[![Support_Platform](https://img.shields.io/pypi/pyversions/hugchat)](https://pypi.python.org/pypi/hugchat)[![Downloads](https://static.pepy.tech/badge/hugchat)](https://pypi.python.org/pypi/hugchat)Leave a star :)Recently new updates:- Change LLMs supported. See more at https://github.com/Soulter/hugging-chat-api/issues/56 (v0.0.9)&gt; When you use this project, it means that you have agreed to the following two requirements of the HuggingChat:&gt;&gt; 1. AI is an area of active research with known problems such as biased generation and misinformation. Do not use this application for high-stakes decisions or advice.&gt; 2. Your conversations will be shared with model authors.**Server resources are precious, it is not recommended to request this API in a high frequency.**(`Hugging Face's CTOðŸ¤—` just liked the suggestion)&lt;div align=&quot;center&quot;&gt;&lt;img width=500 src=&quot;https://github.com/Soulter/hugging-chat-api/assets/37870767/06e64501-02fb-4d4a-ab6f-cf18d8638ace&quot;&gt;&lt;/img&gt;&lt;/div&gt;## Authentication (Required Now)### Get Cookies```pythonfrom hugchat.login import Login# loginsign = Login(email, passwd)cookies = sign.login()sign.saveCookiesToDir(cookie_path_dir)# load cookies from usercookies/&lt;email&gt;.jsonsign = login(email, None)cookies = sign.loadCookiesFromDir(cookie_path_dir) # This will detect if the JSON file exists, return cookies if it does and raise an Exception if it's not.```## Usage### Basic mode```bashpip install hugchat``````pyfrom hugchat import hugchatfrom hugchat.login import Login# Log in to huggingface and grant authorization to huggingchatsign = Login(email, passwd)cookies = sign.login()# Save cookies to the local directorycookie_path_dir = &quot;./cookies_snapshot&quot;sign.saveCookiesToDir(cookie_path_dir)# Create a ChatBotchatbot = hugchat.ChatBot(cookies=cookies.get_dict())  # or cookie_path=&quot;usercookies/&lt;email&gt;.json&quot;print(chatbot.chat(&quot;HI&quot;))# Create a new conversationid = chatbot.new_conversation()chatbot.change_conversation(id)# Get conversation listconversation_list = chatbot.get_conversation_list()```The `chat()` function receives these parameters:- `text`: Required[str].- `temperature`: Optional[float]. Default is 0.9- `top_p`: Optional[float]. Default is 0.95- `repetition_penalty`: Optional[float]. Default is 1.2- `top_k`: Optional[int]. Default is 50- `truncate`: Optional[int]. Default is 1024- `watermark`: Optional[bool]. Default is False- `max_new_tokens`: Optional[int]. Default is 1024- `stop`: Optional[list]. Default is [&quot;`&lt;/s&gt;`&quot;]- `return_full_text`: Optional[bool]. Default is False- `stream`: Optional[bool]. Default is True- `use_cache`: Optional[bool]. Default is False- `is_retry`: Optional[bool]. Default is False- `retry_count`: Optional[int]. Number of retries for requesting huggingchat. Default is 5### CLI mode&gt; `version 0.0.5.2` or newerSimply run the following command in your terminal to start the CLI mode```bashpython -m hugchat.cli```Commands in cli mode:- `/new` : Create and switch to a new conversation.- `/ids` : Shows a list of all ID numbers and ID strings in current session.- `/switch &lt;id&gt;` : Switches to the ID number passed.- `/exit` : Closes CLI environment.- `/llm`: get available models you can switch to- `/llm [index]` switch model to given models## DisclaimersThis is not an official [Hugging Face](https://huggingface.co/) product. This is a **personal project** and is not affiliated with [Hugging Face](https://huggingface.co/) in any way. Don't sue us.</longdescription>
</pkgmetadata>