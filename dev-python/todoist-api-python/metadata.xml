<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Todoist API Python ClientThis is the official Python API client for the Todoist REST API.### InstallationThe repository can be included as a [Poetry](https://python-poetry.org/) dependency in `pyproject.toml`.It is best to integrate to a release tag to ensure a stable dependency:```toml[tool.poetry.dependencies]todoist-api-python = &quot;^v2.0.0&quot;```### Supported Python VersionsPython 3.9 is fully supported and tested, and while it may work with other Python 3 versions, we do not test for them.### UsageAn example of initializing the API client and fetching a user's tasks:```pythonfrom todoist_api_python.api_async import TodoistAPIAsyncfrom todoist_api_python.api import TodoistAPI# Fetch tasks asynchronouslyasync def get_tasks_async():    api = TodoistAPIAsync(&quot;YOURTOKEN&quot;)    try:        tasks = await api.get_tasks()        print(tasks)    except Exception as error:        print(error)# Fetch tasks synchronouslydef get_tasks_sync():    api = TodoistAPI(&quot;my token&quot;)    try:        tasks = api.get_tasks()        print(tasks)    except Exception as error:        print(error)```### DocumentationFor more detailed reference documentation, have a look at the [API documentation with Python examples](https://developer.todoist.com/rest/v2/?python).### DevelopmentTo install Python dependencies:```sh$ poetry install```To install pre-commit:```sh$ poetry run pre-commit install```You can try your changes via REPL by running:```sh$ poetry run python```You can then import the library as described in [Usage](#usage) without having to create a file.If you decide to use `TodoistAPIAsync`, please keep in mind that you have to `import asyncio`and run `asyncio.run(yourmethod())` to make your async methods run as expected.### ReleasesThis API client is public, and available in a PyPI repository.A new update is automatically released by GitHub Actions, by creating a release with a tag in the format `vX.Y.Z` (`v&lt;Major&gt;.&lt;Minor&gt;.&lt;Patch&gt;`).Users of the API client can then update to the new version in their `pyproject.toml` file.### FeedbackAny feedback, such as bugs, questions, comments, etc. can be reported as *Issues* in this repository, and will be handled by Doist.### ContributionsWe would love contributions in the form of *Pull requests* in this repository.</longdescription>
</pkgmetadata>