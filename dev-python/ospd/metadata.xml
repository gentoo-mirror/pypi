<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Greenbone Logo](https://www.greenbone.net/wp-content/uploads/gb_logo_resilience_horizontal.png)# ospd &lt;!-- omit in toc --&gt;[![GitHub releases](https://img.shields.io/github/release/greenbone/ospd.svg)](https://github.com/greenbone/ospd/releases)[![PyPI](https://img.shields.io/pypi/v/ospd.svg)](https://pypi.org/project/ospd/)[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/greenbone/ospd/badges/quality-score.png?b=ospd-21.04)](https://scrutinizer-ci.com/g/greenbone/ospd/?branch=ospd-21.04)[![code test coverage](https://codecov.io/gh/greenbone/ospd/branch/ospd-21.04/graphs/badge.svg)](https://codecov.io/gh/greenbone/ospd)[![CircleCI](https://circleci.com/gh/greenbone/ospd/tree/ospd-21.04.svg?style=svg)](https://circleci.com/gh/greenbone/ospd/tree/ospd-21.04)ospd is a base class for scanner wrappers which share the same communicationprotocol: OSP (Open Scanner Protocol). OSP creates a unified interface fordifferent security scanners and makes their control flow and scan resultsconsistently available under the central Greenbone Vulnerability Manager service.OSP is similar in many ways to GMP (Greenbone Management Protocol): XML-based,stateless and non-permanent connection.The design supports wrapping arbitrary scanners with same protocol OSP,sharing the core daemon options while adding scanner specific parameters andoptions.## Table of Contents- [Table of Contents](#table-of-contents)- [Releases](#releases)- [Installation](#installation)  - [Requirements](#requirements)  - [Install using pip](#install-using-pip)- [How to write your own OSP Scanner Wrapper](#how-to-write-your-own-osp-scanner-wrapper)- [Support](#support)- [Maintainer](#maintainer)- [Contributing](#contributing)- [License](#license)## Releasesï¿¼All [release files](https://github.com/greenbone/ospd/releases) are signed withthe [Greenbone Community Feed integrity key](https://community.greenbone.net/t/gcf-managing-the-digital-signatures/101).This gpg key can be downloaded at https://www.greenbone.net/GBCommunitySigningKey.ascand the fingerprint is `8AE4 BE42 9B60 A59B 311C  2E73 9823 FAA6 0ED1 E580`.## Installation### Requirementsospd requires Python &gt;= 3.7 along with the following libraries:    - python3-paramiko    - python3-lxml    - python3-defusedxml### Install using pipYou can install ospd from the Python Package Index using [pip](https://pip.pypa.io/):    python3 -m pip install ospdAlternatively download or clone this repository and install the latest development version:    python3 -m pip install .## How to write your own OSP Scanner WrapperAs a core you need to derive from the class OSPDaemon from ospd.py.See the documentation there for the single steps to establish thefull wrapper.See the file [doc/INSTALL-ospd-scanner.md](doc/INSTALL-ospd-scanner.md) about how to register a OSP scanner atthe Greenbone Vulnerability Manager which will automatically establish a fullGUI integration for the Greenbone Security Assistant (GSA).There are some online resources about this topic:&lt;https://docs.greenbone.net/GSM-Manual/gos-3.1/en/osp.html#how-to-write-your-own-osp-wrapper&gt;## SupportFor any question on the usage of OSPD please use the [Greenbone Community Portal](https://community.greenbone.net/c/osp). If you found a problem with the software, please [create an issue](https://github.com/greenbone/ospd/issues) on GitHub.## MaintainerThis project is maintained by [Greenbone Networks GmbH](https://www.greenbone.net/).## ContributingYour contributions are highly appreciated. Please [create a pull request](https://github.com/greenbone/ospd/pulls) on GitHub. For bigger changes, please discuss it first in the [issues](https://github.com/greenbone/ospd/issues).For development you should use [poetry](https://python-poetry.org)to keep you python packages separated in different environments. First installpoetry via pip    python3 -m pip install --user poetryAfterwards run    poetry installin the checkout directory of ospd (the directory containing the`pyproject.toml` file) to install all dependencies including the packages onlyrequired for development.The ospd repository uses [autohooks](https://github.com/greenbone/autohooks)to apply linting and auto formatting via git hooks. Please ensure the git hooksare active.    poetry install    poetry run autohooks activate --force## LicenseCopyright (C) 2009-2020 [Greenbone Networks GmbH](https://www.greenbone.net/)Licensed under the [GNU Affero General Public License v3.0 or later](COPYING).</longdescription>
</pkgmetadata>