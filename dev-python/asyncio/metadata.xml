<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>**This version is only relevant for Python 3.3, which does not include asyncio in its stdlib.**Master repo: https://github.com/python/asyncioThe asyncio module provides infrastructure for writing single-threadedconcurrent code using coroutines, multiplexing I/O access over sockets andother resources, running network clients and servers, and other relatedprimitives.  Here is a more detailed list of the package contents:* a pluggable event loop with various system-specific implementations;* transport and protocol abstractions (similar to those in Twisted);* concrete support for TCP, UDP, SSL, subprocess pipes, delayed calls, and  others (some may be system-dependent);* a Future class that mimics the one in the concurrent.futures module, but  adapted for use with the event loop;* coroutines and tasks based on ``yield from`` (PEP 380), to help write  concurrent code in a sequential fashion;* cancellation support for Futures and coroutines;* synchronization primitives for use between coroutines in a single thread,  mimicking those in the threading module;* an interface for passing work off to a threadpool, for times when you  absolutely, positively have to use a library that makes blocking I/O calls.Note: The implementation of asyncio was previously called &quot;Tulip&quot;.Installation============To install asyncio, type::    pip install asyncioasyncio requires Python 3.3 or later! The asyncio module is part of the Pythonstandard library since Python 3.4.asyncio is a free software distributed under the Apache license version 2.0.Websites========* `asyncio project at GitHub &lt;https://github.com/python/asyncio&gt;`_: source  code, bug tracker* `asyncio documentation &lt;https://docs.python.org/dev/library/asyncio.html&gt;`_* Mailing list: `python-tulip Google Group  &lt;https://groups.google.com/forum/?fromgroups#!forum/python-tulip&gt;`_* IRC: join the ``#asyncio`` channel on the Freenode networkDevelopment===========The actual code lives in the 'asyncio' subdirectory. Tests are in the 'tests'subdirectory.To run tests, run::    toxOr use the Makefile::    make testTo run coverage (coverage package is required)::    make coverageOn Windows, things are a little more complicated.  Assume 'P' is yourPython binary (for example C:\Python33\python.exe).You must first build the _overlapped.pyd extension and have it placedin the asyncio directory, as follows:    C&gt; P setup.py build_ext --inplaceIf this complains about vcvars.bat, you probably don't have therequired version of Visual Studio installed.  Compiling extensions forPython 3.3 requires Microsoft Visual C++ 2010 (MSVC 10.0) of anyedition; you can download Visual Studio Express 2010 for free fromhttp://www.visualstudio.com/downloads (scroll down to Visual C++ 2010Express).Once you have built the _overlapped.pyd extension successfully you canrun the tests as follows:    C&gt; P runtests.pyAnd coverage as follows:    C&gt; P runtests.py --coverage</longdescription>
</pkgmetadata>