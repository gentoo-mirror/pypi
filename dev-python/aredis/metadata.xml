<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>aredis======|pypi-ver| |circleci-status| |python-ver|An efficient and user-friendly async redis client ported from `redis-py &lt;https://github.com/andymccurdy/redis-py&gt;`_(which is a Python interface to the Redis key-value)To get more information please read `full document`_.. _full document: http://aredis.readthedocs.io/en/latest/Installation------------aredis requires a running Redis server.To install aredis, simply:.. code-block:: bash    $ sudo pip3 install aredisor alternatively (you really should be using pip though):.. code-block:: bash    $ sudo easy_install aredisor from source:.. code-block:: bash    $ sudo python setup.py installGetting started---------------`For more example`_.. _For more example: https://github.com/NoneGG/aredis/tree/master/examplessingle node client^^^^^^^^^^^^^^^^^^.. code-block:: python   &gt;&gt;&gt; import asyncio   &gt;&gt;&gt; from aredis import StrictRedis   &gt;&gt;&gt;   &gt;&gt;&gt; async def example():   &gt;&gt;&gt;      client = StrictRedis(host='127.0.0.1', port=6379, db=0)   &gt;&gt;&gt;      await client.flushdb()   &gt;&gt;&gt;      await client.set('foo', 1)   &gt;&gt;&gt;      assert await client.exists('foo') is True   &gt;&gt;&gt;      await client.incr('foo', 100)   &gt;&gt;&gt;   &gt;&gt;&gt;      assert int(await client.get('foo')) == 101   &gt;&gt;&gt;      await client.expire('foo', 1)   &gt;&gt;&gt;      await asyncio.sleep(0.1)   &gt;&gt;&gt;      await client.ttl('foo')   &gt;&gt;&gt;      await asyncio.sleep(1)   &gt;&gt;&gt;      assert not await client.exists('foo')   &gt;&gt;&gt;   &gt;&gt;&gt; loop = asyncio.get_event_loop()   &gt;&gt;&gt; loop.run_until_complete(example())cluster client^^^^^^^^^^^^^^.. code-block:: python   &gt;&gt;&gt; import asyncio   &gt;&gt;&gt; from aredis import StrictRedisCluster   &gt;&gt;&gt;   &gt;&gt;&gt; async def example():   &gt;&gt;&gt;      client = StrictRedisCluster(host='172.17.0.2', port=7001)   &gt;&gt;&gt;      await client.flushdb()   &gt;&gt;&gt;      await client.set('foo', 1)   &gt;&gt;&gt;      await client.lpush('a', 1)   &gt;&gt;&gt;      print(await client.cluster_slots())   &gt;&gt;&gt;   &gt;&gt;&gt;      await client.rpoplpush('a', 'b')   &gt;&gt;&gt;      assert await client.rpop('b') == b'1'   &gt;&gt;&gt;   &gt;&gt;&gt; loop = asyncio.get_event_loop()   &gt;&gt;&gt; loop.run_until_complete(example())   {(10923, 16383): [{'host': b'172.17.0.2', 'node_id': b'332f41962b33fa44bbc5e88f205e71276a9d64f4', 'server_type': 'master', 'port': 7002},   {'host': b'172.17.0.2', 'node_id': b'c02deb8726cdd412d956f0b9464a88812ef34f03', 'server_type': 'slave', 'port': 7005}],   (5461, 10922): [{'host': b'172.17.0.2', 'node_id': b'3d1b020fc46bf7cb2ffc36e10e7d7befca7c5533', 'server_type': 'master', 'port': 7001},   {'host': b'172.17.0.2', 'node_id': b'aac4799b65ff35d8dd2ad152a5515d15c0dc8ab7', 'server_type': 'slave', 'port': 7004}],   (0, 5460): [{'host': b'172.17.0.2', 'node_id': b'0932215036dc0d908cf662fdfca4d3614f221b01', 'server_type': 'master', 'port': 7000},   {'host': b'172.17.0.2', 'node_id': b'f6603ab4cb77e672de23a6361ec165f3a1a2bb42', 'server_type': 'slave', 'port': 7003}]}Benchmark---------Please run test script in benchmarks dir to confirm the benchmark.For benchmark in my environment please see: `benchmark`_.. _benchmark: http://aredis.readthedocs.io/en/latest/benchmark.html.. |circleci-status| image:: https://img.shields.io/circleci/project/github/NoneGG/aredis/master.svg    :alt: CircleCI build status    :target: https://circleci.com/gh/NoneGG/aredis/tree/master.. |pypi-ver| image::  https://img.shields.io/pypi/v/aredis.svg    :target: https://pypi.python.org/pypi/aredis/    :alt: Latest Version in PyPI.. |python-ver| image:: https://img.shields.io/pypi/pyversions/aredis.svg    :target: https://pypi.python.org/pypi/aredis/    :alt: Supported Python versionsContributing------------Enhancement, bug reports and Pull requests are welcomed, please make an issue to let me know.Fork me please~</longdescription>
</pkgmetadata>