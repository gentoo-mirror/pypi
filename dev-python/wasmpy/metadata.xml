<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![AppVeyor Build status](https://ci.appveyor.com/api/projects/status/6jo7yag38m5ilv6h?svg=true)](https://ci.appveyor.com/project/olivi-r/wasmpy)# wasmpyWebAssembly in Python.Wasmpy is a lightweight layer that sits between Python and WebAssembly. When attempting to import a WebAssembly file, the file is converted into machine code for native speeds.# Installing```shpython3 -m pip install wasmpy```# UsageTo get started, first import the `wasmpy` module to register the WebAssembly import hooks.Then you can just `import wasm_or_wat_file` to load a WebAssembly module.## Example```|-  my_module    |-  __init__.py    |-  wasm_math.wat```File: `__init__.py````pythonimport wasmpyfrom .wasm_math import add```File: `wasm_math.wat````webassembly(module    (func (export &quot;add&quot;) (param i32 i32) (result i32)        (i32.add (local.get 0) (local.get 1))    ))``````python&gt;&gt;&gt; import my_module&gt;&gt;&gt; my_module.add(45, 960)1005&gt;&gt;&gt;```# Building From SourceOn Windows this requires the [mingw-w64](https://www.mingw-w64.org/downloads/) `as` tool to be on PATH.```shgit clone https://github.com/olivi-r/wasmpy.gitcd wasmpypython3 setup.py assemblepython3 -m pip install .```# LimitationsWasmpy is still in active development, and only supports x86/x86-64 Windows and Linux machines and lacks some key features:- `i64.div_s`, `i64.div_u`, `i64.rem_s` and `i64.rem_u` instructions on x86- memories and memory instructions- most control instructions- imports- tablesWasmpy is being developed in accordance with the [wasm-core-1](https://w3.org/TR/wasm-core-1) recommendation, which means it lacks support for features introduced in [WebAssembly 2.0](https://webassembly.github.io/spec/core) drafts.In future all of these limitations will be overcome and wasmpy will offer support for [WASI](https://wasi.dev) and allow interfacing directly with CPython's [c-api](https://docs.python.org/3/c-api) similar to standard C/C++ Python extensions.</longdescription>
</pkgmetadata>