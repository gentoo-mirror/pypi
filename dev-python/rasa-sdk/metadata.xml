<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Rasa Python-SDK[![Join the chat on Rasa Community Forum](https://img.shields.io/badge/forum-join%20discussions-brightgreen.svg)](https://forum.rasa.com/?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)[![Build Status](https://github.com/RasaHQ/rasa-sdk/workflows/Continous%20Integration/badge.svg?event=push)](https://github.com/RasaHQ/rasa-sdk/actions/runs/)[![Coverage Status](https://coveralls.io/repos/github/RasaHQ/rasa-sdk/badge.svg?branch=main)](https://coveralls.io/github/RasaHQ/rasa-sdk?branch=main)[![PyPI version](https://img.shields.io/pypi/v/rasa-sdk.svg)](https://pypi.python.org/pypi/rasa-sdk)Python SDK for the development of custom actions for Rasa.&lt;hr /&gt;ðŸ’¡ **We're migrating issues to Jira** ðŸ’¡Starting January 2023, issues for Rasa Open Source are located in[this Jira board](https://rasa-open-source.atlassian.net/browse/OSS). You can browse issues without being logged in;if you want to create issues, you'll need to create a Jira account.&lt;hr /&gt;## InstallationTo install the SDK run```bashpip install rasa-sdk```## Compatibility`rasa-sdk` package:| SDK version    | compatible Rasa version           ||----------------|-----------------------------------|| `1.0.x`        | `&gt;=1.0.x`                         |old `rasa_core_sdk` package:| SDK version    | compatible Rasa Core version           ||----------------|----------------------------------------|| `0.12.x`       | `&gt;=0.12.x`                             || `0.11.x`       | `0.11.x`                               || not compatible | `&lt;=0.10.x`                             |## UsageDetailed instructions can be found in the Rasa Documentation about[Custom Actions](https://rasa.com/docs/rasa/core/actions).## Docker### UsageIn order to start an action server using implemented custom actions,you can use the available Docker image `rasa/rasa-sdk`.Before starting the action server ensure that the folder containingyour actions is handled as Python module and therefore has to containa file called `__init__.py`Then start the action server using:```bashdocker run -p 5055:5055 --mount type=bind,source=&lt;ABSOLUTE_PATH_TO_YOUR_ACTIONS&gt;,target=/app/actions \rasa/rasa-sdk:&lt;version&gt;```The action server is then available at `http://localhost:5055/webhook`.### Custom DependenciesTo add custom dependencies you enhance the given Docker image, e.g.:```# Extend the official Rasa SDK imageFROM rasa/rasa-sdk:&lt;version&gt;# Change back to root user to install dependenciesUSER root# To install system dependenciesRUN apt-get update -qq &amp;&amp; \    apt-get install -y &lt;NAME_OF_REQUIRED_PACKAGE&gt; &amp;&amp; \    apt-get clean &amp;&amp; \    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*# To install packages from PyPIRUN pip install --no-cache-dir &lt;A_REQUIRED_PACKAGE_ON_PYPI&gt;# Switch back to non-root to run codeUSER 1001```## Building from sourceRasa SDK uses Poetry for packaging and dependency management. If you want to build it from source,you have to install Poetry first. This is how it can be done:```curl -sSL https://install.python-poetry.org | python3 -```There are several other ways to install Poetry. Please, follow[the official guide](https://python-poetry.org/docs/#installation) to see all possible options.To install dependencies and `rasa-sdk` itself in editable mode execute```make install```## Code StyleTo ensure a standardized code style we use the formatter [black](https://github.com/ambv/black).If your code is not formatted properly, GitHub CI will fail to build.If you want to automatically format your code on every commit, you can use [pre-commit](https://pre-commit.com/).Just install it via `pip install pre-commit` and execute `pre-commit install`.To check and reformat files execute```make lint```## Steps to release a new versionReleasing a new version is quite simple, as the packages are build and distributedby GitHub Actions.*Release steps*:1. Switch to the branch you want to cut the release from (`main` in case of a  major / minor, the current release branch for patch releases).2. If this is a minor / major release: Make sure all fixes from currently supported minor versions have been merged from their respective release branches (e.g. 3.3.x) back into main.3. Run `make release`4. Create a PR against main or the release branch (e.g. `1.2.x`)5. Once your PR is merged, pull the release branch locally.6. Create a tag for a new release (this SHOULD always happen on `main` or release branches), e.g. using    ```bash    git tag 1.2.0 -m &quot;next release&quot;    git push origin 1.2.0    ```    GitHub Actions will build this tag and push a package to    [pypi](https://pypi.python.org/pypi/rasa-sdk).6. **If this is a minor release**, a new release branch should be created  pointing to the same commit as the tag to allow for future patch releases,  e.g.    ```bash    git checkout -b 1.2.x    git push origin 1.2.x    ```## LicenseLicensed under the Apache License, Version 2.0. Copyright 2021 RasaTechnologies GmbH. [Copy of the license](LICENSE.txt).A list of the Licenses of the dependencies of the project can be found atthe bottom of the[Libraries Summary](https://libraries.io/github/RasaHQ/rasa-sdk).</longdescription>
</pkgmetadata>