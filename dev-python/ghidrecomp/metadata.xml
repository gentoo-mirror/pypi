<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Ghidrecomp - Command Line Ghidra Decompiler &lt;p align=&quot;center&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;GitHub Workflow Status (with event)&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/clearbluejar/ghidrecomp/pytest-devcontainer.yml?event=push&amp;label=pytest&amp;style=for-the-badge&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;PyPI - Downloads&quot; src=&quot;https://img.shields.io/pypi/dm/ghidrecomp?color=yellow&amp;label=PyPI%20downloads&amp;style=for-the-badge&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;https://img.shields.io/github/stars/clearbluejar/ghidrecomp?style=for-the-badge&quot;&gt;&lt;/p&gt;## AboutThis Python command line tool decompiles all functions of a binary and writes them to a directory in separate `C` files:```mermaidflowchart LRa(filename ) --&gt; b[ghidrecomp]a2[(Symbol Server)] --&gt; bb --&gt; e(Ghidra Project Files)b --&gt; decompilations subgraph decompilations    direction LR    i(func1.c)    h(func2.c)    f(func3.c)end```Or a single file `C` and header file with `--cppexport`:```mermaidflowchart LRa(filename ) --&gt; b[ghidrecomp]a2[(Symbol Server)] --&gt; bb --&gt; e(Ghidra Project Files)b --&gt; singlefile subgraph singlefile  direction LR  s1(all_funcs.c)  s2(all_funcs.h)end```The main purpose for this is to use the decomplilations for research and analysis. The tool relies on [Ghidra](https://ghidra-sre.org/) for decompilation and communicates to Ghidra with `jpype` via `pyhidra`.## TOC- [Ghidrecomp - Command Line Ghidra Decompiler](#ghidrecomp---command-line-ghidra-decompiler)  - [About](#about)  - [TOC](#toc)  - [Features](#features)  - [Usage](#usage)  - [Example Usage with Windows afd.sys:](#example-usage-with-windows-afdsys)    - [Command line](#command-line)    - [Output](#output)    - [Decompilation Output Dir](#decompilation-output-dir)  - [Example usage in Docker container](#example-usage-in-docker-container)    - [Command (Host)](#command-host)    - [Or pull from docker registry](#or-pull-from-docker-registry)    - [Command (in container)](#command-in-container)    - [Output](#output-1)    - [Decompilation Output Dir](#decompilation-output-dir-1)  - [Example Usage with Windows afd.sys Callgraph:](#example-usage-with-windows-afdsys-callgraph)    - [Command line](#command-line-1)    - [Output](#output-2)    - [Sample Calling Callgraph Output AfdRestartDgConnect:](#sample-calling-callgraph-output-afdrestartdgconnect)    - [Sample MindMap Output for AfdRestartDgConnect](#sample-mindmap-output-for-afdrestartdgconnect)  - [Installation](#installation)    - [Windows](#windows)    - [Linux / Mac](#linux--mac)    - [Devcontainer / Docker](#devcontainer--docker)      - [Option 1 - Devcontainer](#option-1---devcontainer)      - [Option 2 - Docker](#option-2---docker)## Features*all these features are ultimately provided by Ghidra*- Decompile all the functions (threaded)  - to a folder (`-o OUTPUT_PATH`)  - to a single c file and header file (`--cppexport`)- Auto-downloaded symbols for supported symbol servers (`-s SYMBOLS_PATH`)  - https://msdl.microsoft.com/download/symbols/  - https://chromium-browser-symsrv.commondatastorage.googleapis.com/  - https://symbols.mozilla.org/  - https://software.intel.com/sites/downloads/symbols/  - https://driver-symbols.nvidia.com/  - https://download.amd.com/dir/bin/- Specify the pdb for the binary (`--sym-file-path`)- Filter functions to decompile that match regex (`--filter`)- Apply custom data types (`--gdt`)## Usage```usage: ghidrecomp [-h] [--cppexport] [--filter FILTERS] [--project-path PROJECT_PATH] [--gdt [GDT]] [-o OUTPUT_PATH] [-v] [--skip-cache] [--sym-file-path SYM_FILE_PATH | -s SYMBOLS_PATH | --skip-symbols]                  [-t THREAD_COUNT] [--va] [--fa] [--max-ram-percent MAX_RAM_PERCENT] [--print-flags] [--callgraphs] [--callgraph-filter CALLGRAPH_FILTER] [--mdd MAX_DISPLAY_DEPTH] [--max-time-cg-gen MAX_TIME_CG_GEN]                  [--cg-direction {calling,called,both}]                  binghidrecomp - A Command Line Ghidra Decompilerpositional arguments:  bin                   Path to binary used for analysisoptions:  -h, --help            show this help message and exit  --cppexport           Use Ghidras CppExporter to decompile to single file (default: False)  --filter FILTERS      Regex match for function name (default: None)  --project-path PROJECT_PATH                        Path to base ghidra projects (default: .ghidra_projects)  --gdt [GDT]           Additional GDT to apply (default: None)  -o OUTPUT_PATH, --output-path OUTPUT_PATH                        Location for all decompilations (default: decompilations)  -v, --version         show program's version number and exit  --skip-cache          Skip cached and genearate new decomp and callgraphs. (default: False)  --sym-file-path SYM_FILE_PATH                        Specify single pdb symbol file for bin (default: None)  -s SYMBOLS_PATH, --symbols-path SYMBOLS_PATH                        Path for local symbols directory (default: .symbols)  --skip-symbols        Do not apply symbols (default: False)  -t THREAD_COUNT, --thread-count THREAD_COUNT                        Threads to use for processing. Defaults to cpu count (default: 8)  --va                  Enable verbose analysis (default: False)  --fa                  Force new analysis (even if already analyzed) (default: False)JVM Options:  --max-ram-percent MAX_RAM_PERCENT                        Set JVM Max Ram % of host RAM (default: 50.0)  --print-flags         Print JVM flags at start (default: False)Callgraph Options:  --callgraphs          Generate callgraph markdown (default: False)  --callgraph-filter CALLGRAPH_FILTER                        Only generate callgraphs for functions matching filter (default: .)  --mdd MAX_DISPLAY_DEPTH, --max-display-depth MAX_DISPLAY_DEPTH                        Max Depth for graph generation (default: None)  --max-time-cg-gen MAX_TIME_CG_GEN                        Max time in seconds to wait for callgraph gen. (default: 5)  --cg-direction {calling,called,both}                        Direction for callgraph. (default: calling)```## Example Usage with Windows afd.sys:### Command line```bashwget https://msdl.microsoft.com/download/symbols/afd.sys/50989142a9000/afd.sys -O afd.sys.10.0.22621.1415ghidrecomp afd.sys.10.0.22621.1415```### Output```bashStarting decompliations: Namespace(bin='tests/data/afd.sys.10.0.22621.1344', cppexport=False, filters=None, project_path='.ghidra_projects', output_path='decompilations', sym_file_path=None, symbols_path='.symbols', skip_symbols=False, thread_count=8, va=False)INFO  Using log config file: jar:file:/ghidra/Ghidra/Framework/Generic/lib/Generic.jar!/generic.log4j.xml (LoggingInitialization)  INFO  Using log file: /home/vscode/.ghidra/.ghidra_10.2.3_PUBLIC/application.log (LoggingInitialization)  INFO  Loading user preferences: /home/vscode/.ghidra/.ghidra_10.2.3_PUBLIC/preferences (Preferences)  INFO  Class search complete (766 ms) (ClassSearcher)  INFO  Initializing SSL Context (SSLContextInitializer)  INFO  Initializing Random Number Generator... (SecureRandomFactory)  INFO  Random Number Generator initialization complete: NativePRNGNonBlocking (SecureRandomFactory)  INFO  Trust manager disabled, cacerts have not been set (ApplicationTrustManagerFactory)  INFO  Creating project: /workspaces/ghidrecomp/.ghidra_projects/afd.sys.10.0.22621.1344/afd.sys.10.0.22621.1344 (DefaultProject)  INFO  Using Loader: Portable Executable (PE) (AutoImporter)  Setting up Symbol Server for symbols...path: .symbols level: 1Loaded well known /ghidra/Ghidra/Configurations/Public_Release/data/PDB_SYMBOL_SERVER_URLS.pdburl' length: 883'Symbol Server Configured path: SymbolServerService:        symbolStore: LocalSymbolStore: [ rootDir: /workspaces/ghidrecomp/.symbols, storageLevel: -1],        symbolServers:                HttpSymbolServer: [ url: https://msdl.microsoft.com/download/symbols/, storageLevel: -1]                HttpSymbolServer: [ url: https://chromium-browser-symsrv.commondatastorage.googleapis.com/, storageLevel: -1]                HttpSymbolServer: [ url: https://symbols.mozilla.org/, storageLevel: -1]                HttpSymbolServer: [ url: https://software.intel.com/sites/downloads/symbols/, storageLevel: -1]                HttpSymbolServer: [ url: https://driver-symbols.nvidia.com/, storageLevel: -1]                HttpSymbolServer: [ url: https://download.amd.com/dir/bin/, storageLevel: -1]Analyzing program afd.sys.10.0.22621.1344INFO  PDB analyzer parsing file: /workspaces/ghidrecomp/.symbols/afd.pdb/14FBAE3662AD9F7B9D33AA9228D2554A1/afd.pdb (PdbUniversalAnalyzer)  INFO  Resolve time: 0 mS (DefaultPdbApplicator)  INFO  resolveCount: 0 (DefaultPdbApplicator)  INFO  PDB Terminated Normally (DefaultPdbApplicator)  WARN  Decompiling 1c0001340, pcode error at 1c000000c: Unable to resolve constructor at 1c000000c (DecompileCallback)  INFO  Packed database cache: /tmp/vscode-Ghidra/packed-db-cache (PackedDatabaseCache)  WARN  Decompiling 1c0001340, pcode error at 1c000000c: Unable to resolve constructor at 1c000000c (DecompileCallback)  INFO  -----------------------------------------------------    ASCII Strings                              0.343 secs    Apply Data Archives                        0.548 secs    Call Convention ID                         0.025 secs    Call-Fixup Installer                       0.013 secs    Create Address Tables                      0.039 secs    Create Address Tables - One Time           0.076 secs    Create Function                            0.232 secs    Data Reference                             0.126 secs    Decompiler Parameter ID                   10.939 secs    Decompiler Switch Analysis                 0.442 secs    Demangler Microsoft                        0.089 secs    Disassemble                                0.007 secs    Disassemble Entry Points                   1.959 secs    Disassemble Entry Points - One Time        0.005 secs    Embedded Media                             0.020 secs    External Entry References                  0.000 secs    Function ID                                0.805 secs    Function Start Search                      0.038 secs    Non-Returning Functions - Discovered       0.132 secs    Non-Returning Functions - Known            0.012 secs    PDB Universal                              2.810 secs    Reference                                  0.104 secs    Scalar Operand References                  0.601 secs    Shared Return Calls                        0.219 secs    Stack                                      5.164 secs    Subroutine References                      0.113 secs    Subroutine References - One Time           0.026 secs    Windows x86 PE Exception Handling          0.027 secs    Windows x86 PE RTTI Analyzer               0.005 secs    Windows x86 Thread Environment Block (TEB) Analyzer     0.038 secs    WindowsResourceReference                   0.124 secs    x86 Constant Reference Analyzer            5.755 secs-----------------------------------------------------     Total Time   30 secs----------------------------------------------------- (AutoAnalysisManager)  Decompiling 1275 functions using 8 threadsSetup 8 decompliersWARN  Decompiling 1c0001340, pcode error at 1c000000c: Unable to resolve constructor at 1c000000c (DecompileCallback)  Completed 100 and 7%Completed 200 and 15%Completed 300 and 23%Completed 400 and 31%Completed 500 and 39%Completed 600 and 47%Completed 700 and 54%Completed 800 and 62%Completed 900 and 70%Completed 1000 and 78%Completed 1100 and 86%Completed 1200 and 94%Decompiled 1275 functions for afd.sys.10.0.22621.1344 in 13.469883680343628Wrote 1275 decompilations for afd.sys.10.0.22621.1344 to decompilations/afd.sys.10.0.22621.1344 in 3.174959659576416```### Decompilation Output Dir```bash$ tree decompilations | moredecompilations└── afd.sys    ├── AFDETW_TRACEDATA_INDICATION-1c0008d00.c    ├── AFDETW_TRACEDISCONNECT-1c000f884.c    ├── AFDETW_TRACELISTEN-1c0016778.c    ├── AFDETW_TRACEOPTION-1c0012660.c    ├── AFDETW_TRACERECV-1c0001e38.c    ├── AFDETW_TRACERECVDATAGRAM-1c0009ef0.c    ├── AFDETW_TRACESEND-1c000d19c.c    ├── AFDETW_TRACESENDDATAGRAM-1c0007d10.c    ├── AFDETW_TRACESENDMSG-1c0015afc.c    ├── AFDETW_TRACESENDTO-1c00162dc.c    ├── AFDETW_TRACESTATUS-1c00204d2.c    ├── AFDETW_TRACETRANSFER-1c004189c.c    ├── AFDETW_TRACEWAITLISTEN-1c0013674.c    ├── AFD_PCW_INCREMENT_DROPPED_DATAGRAMS-1c00208e4.c    ├── AFD_PCW_INCREMENT_REJECTED_CONNECTIONS-1c0032aa4.c    ├── AfdAbortConnection-1c0033ec4.c    ├── AfdAbortTPackets-1c003d5ec.c    ├── AfdAccept-1c0018300.c    ├── AfdAcceptCore-1c00187d8.c    ├── AfdAcquireReadLock-1c0020b54.c    ├── AfdAcquireReadLockAtDpcLevel-1c000b0f4.c    ├── AfdAcquireWriteLock-1c001b8ac.c    ├── AfdAddAddressHandler-1c00662f0.c    ├── AfdAddConnectedReference-1c000f334.c    ├── AfdAddConnectionToTimerWheel-1c0036520.c    ├── AfdAddFreeConnection-1c006d7cc.c    ├── AfdAddressListChange$filt$0-1c001dcb7.c    ├── AfdAddressListChange$filt$1-1c001dce0.c        ├── AfdBuildSendMsgTracker-1c00682ac.c... several lines omitted ``` ```bash $ cat decompilations/afd.sys.10.0.22621.1415/AfdGetRemoteAddress-1c0065500.c ``````cvoid AfdGetRemoteAddress(longlong param_1,undefined8 param_2,char param_3,undefined8 param_4,                        undefined8 param_5,void *param_6,uint param_7,ulonglong *param_8){  ushort uVar1;  short *psVar2;  uint uVar3;  ulonglong uVar4;  undefined uVar5;  void *_Src;  undefined8 unaff_RBX;  undefined8 unaff_RSI;  undefined unaff_DIL;  char cVar7;  ulonglong _Size;  undefined unaff_R14B;  undefined unaff_R15B;  undefined unaff_retaddr;  undefined uVar8;  short *psVar9;  undefined in_stack_ffffffffffffffe0;  short *psVar6;    psVar2 = *(short **)(param_1 + 0x18);  *param_8 = 0;  psVar6 = psVar2;  cVar7 = param_3;  psVar9 = psVar2;  uVar4 = AfdLockEndpointContext((longlong)psVar2);  uVar5 = SUB81(psVar6,0);  uVar8 = SUB81(psVar9,0);  if (((uVar4 != 0) &amp;&amp; (*psVar2 == -0x502e)) &amp;&amp; (*(char *)(psVar2 + 1) == '\x04')) {    uVar1 = psVar2[0x5d];    uVar5 = (undefined)uVar1;    uVar3 = (uint)(ushort)psVar2[0x5c] + (uint)uVar1;    if (uVar3 &lt; *(uint *)(psVar2 + 0x74) || uVar3 == *(uint *)(psVar2 + 0x74)) {      if (uVar1 &lt;= param_7) {        if (param_3 != '\0') {          ProbeForWrite(param_6,uVar1,1);        }        _Size = (ulonglong)(ushort)psVar2[0x5d];        _Src = (void *)((ushort)psVar2[0x5c] + uVar4);        memcpy(param_6,_Src,_Size);        *param_8 = (ulonglong)*(uint *)(psVar2 + 0x74);        FUN_1c00655e1((char)param_6,(char)_Src,(char)_Size,(undefined)param_4,                      in_stack_ffffffffffffffe0,unaff_R15B,unaff_R14B,unaff_DIL,unaff_retaddr,uVar8,                      unaff_RBX,unaff_RSI);        return;      }      FUN_1c00655e1(uVar5,(undefined)param_2,cVar7,(undefined)param_4,in_stack_ffffffffffffffe0,                    unaff_R15B,unaff_R14B,unaff_DIL,unaff_retaddr,uVar8,unaff_RBX,unaff_RSI);      return;    }  }  FUN_1c00655e1(uVar5,(undefined)param_2,cVar7,(undefined)param_4,in_stack_ffffffffffffffe0,                unaff_R15B,unaff_R14B,unaff_DIL,unaff_retaddr,uVar8,unaff_RBX,unaff_RSI);  return;}```## Example usage in Docker container### Command (Host)```bash$ docker run --rm -it ghcr.io/clearbluejar/ghidrecomp:latest bashUnable to find image 'ghcr.io/clearbluejar/ghidrecomp:latest' locallylatest: Pulling from clearbluejar/ghidrecomp32fb02163b6b: Pull complete167c7feebee8: Pull completed6dfff1f6f3d: Pull completee9cdcd4942eb: Pull completeca3bce705f6c: Pull complete5e1c6c4f8bbf: Pull completee7e563b10921: Pull complete9eb9d866c104: Pull complete8ca602e7301a: Pull complete124a51dde68b: Pull completec04919d34655: Pull completea2570739af5d: Pull completee57c67fabbc5: Pull complete8da6a860f9e3: Pull completeca6008c09918: Pull complete702a3b20cdb3: Pull completebd0b7bd152dc: Pull complete7299f2e2483b: Pull complete4f4fb700ef54: Pull complete7cbbb1896fad: Pull complete1f309d93fb79: Pull completed11b50be43c4: Pull complete7c66f674c44d: Pull complete8497280f5c51: Pull completeDigest: sha256:4e42285dc1d71c849b7c89fae6598691bdc7d0ee9ec55eb70ce00b5c722fba59Status: Downloaded newer image for ghcr.io/clearbluejar/ghidrecomp:latest```### Or pull from docker registry```bashdocker pull $ docker run --rm -it clearbluejar/ghidrecomp:latest bash```### Command (in container)```bashvscode ➜ /tmp $ ghidrecomp /bin/ls```### Output```bashStarting decompliations: Namespace(bin='/bin/ls', cppexport=False, filters=None, project_path='.ghidra_projects', output_path='decompilations', sym_file_path=None, symbols_path='.symbols', skip_symbols=False, thread_count=12, va=False)INFO  Using log config file: jar:file:/ghidra/Ghidra/Framework/Generic/lib/Generic.jar!/generic.log4j.xml (LoggingInitialization)INFO  Using log file: /home/vscode/.ghidra/.ghidra_10.2.3_PUBLIC/application.log (LoggingInitialization)INFO  Loading user preferences: /home/vscode/.ghidra/.ghidra_10.2.3_PUBLIC/preferences (Preferences)INFO  Class search complete (898 ms) (ClassSearcher)INFO  Initializing SSL Context (SSLContextInitializer)INFO  Initializing Random Number Generator... (SecureRandomFactory)INFO  Random Number Generator initialization complete: NativePRNGNonBlocking (SecureRandomFactory)INFO  Trust manager disabled, cacerts have not been set (ApplicationTrustManagerFactory)INFO  Creating project: /tmp/.ghidra_projects/ls/ls (DefaultProject)INFO  Starting cache cleanup: /tmp/vscode-Ghidra/fscache2 (FileCacheMaintenanceDaemon)INFO  Finished cache cleanup, estimated storage used: 0 (FileCacheMaintenanceDaemon)INFO  Using Loader: Executable and Linking Format (ELF) (AutoImporter)Setting up Symbol Server for symbols...path: .symbols level: 1Loaded well known /ghidra/Ghidra/Configurations/Public_Release/data/PDB_SYMBOL_SERVER_URLS.pdburl' length: 883'Symbol Server Configured path: SymbolServerService:        symbolStore: LocalSymbolStore: [ rootDir: /tmp/.symbols, storageLevel: -1],        symbolServers:                HttpSymbolServer: [ url: https://msdl.microsoft.com/download/symbols/, storageLevel: -1]                HttpSymbolServer: [ url: https://chromium-browser-symsrv.commondatastorage.googleapis.com/, storageLevel: -1]                HttpSymbolServer: [ url: https://symbols.mozilla.org/, storageLevel: -1]                HttpSymbolServer: [ url: https://software.intel.com/sites/downloads/symbols/, storageLevel: -1]                HttpSymbolServer: [ url: https://driver-symbols.nvidia.com/, storageLevel: -1]                HttpSymbolServer: [ url: https://download.amd.com/dir/bin/, storageLevel: -1]Analyzing program lsINFO  DWARF external debug information found: ExternalDebugInfo [filename=61a544c35b9dc1d172d1a1c09043e487326966.debug, crc=d165fd8a, hash=6461a544c35b9dc1d172d1a1c09043e487326966] (ExternalDebugFilesService)INFO  Unable to find DWARF information, skipping DWARF analysis (DWARFAnalyzer)INFO  hit non-returning function, restarting decompiler switch analyzer later (DecompilerSwitchAnalyzer)INFO  Packed database cache: /tmp/vscode-Ghidra/packed-db-cache (PackedDatabaseCache)INFO  -----------------------------------------------------    ASCII Strings                              0.565 secs    Apply Data Archives                        0.462 secs    Call Convention ID                         0.013 secs    Call-Fixup Installer                       0.009 secs    Create Address Tables                      0.077 secs    Create Address Tables - One Time           0.025 secs    Create Function                            0.036 secs    DWARF                                      0.011 secs    Data Reference                             0.054 secs    Decompiler Switch Analysis                 0.136 secs    Decompiler Switch Analysis - One Time      2.743 secs    Demangler GNU                              0.044 secs    Disassemble Entry Points                   1.104 secs    ELF Scalar Operand References              0.285 secs    Embedded Media                             0.011 secs    External Entry References                  0.000 secs    Function ID                                0.225 secs    Function Start Search                      0.033 secs    Function Start Search After Code           0.012 secs    Function Start Search After Data           0.012 secs    GCC Exception Handlers                     0.319 secs    Non-Returning Functions - Discovered       0.189 secs    Non-Returning Functions - Known            0.005 secs    Reference                                  0.129 secs    Shared Return Calls                        0.092 secs    Stack                                      1.734 secs    Subroutine References                      0.048 secs    Subroutine References - One Time           0.000 secs    x86 Constant Reference Analyzer            2.017 secs-----------------------------------------------------     Total Time   10 secs----------------------------------------------------- (AutoAnalysisManager)Skipped 0 functions that failed to match any of NoneDecompiling 520 functions using 12 threadsSetup 12 decompliersCompleted 100 and 19%Completed 200 and 38%Completed 300 and 57%WARN  Decompiling 00126010, pcode error at 00126010: Unable to disassemble EXTERNAL block location: 00126010 (DecompileCallback)Decompiled 520 functions for ls in 5.361317157745361Wrote 520 decompilations for ls to decompilations/ls in 0.1671760082244873```### Decompilation Output Dir```bashvscode ➜ /tmp $ tree decompilationsdecompilations└── ls    ├── _ITM_deregisterTMCloneTable-00134078.c    ├── _ITM_registerTMCloneTable-00134358.c    ├── __DT_FINI-00118930.c    ├── __DT_INIT-00103730.c    ├── __assert_fail-00103da0.c    ├── __assert_fail-00134370.c    ├── __ctype_b_loc-00103c00.c    ├── __ctype_b_loc-00134288.c    ├── __libc_start_main-00134190.c    ├── __lxstat-00103ce0.c    ├── __lxstat-001342f8.c    ├── exit-00134050.c    ├── fclose-00103990.c    ├── fclose-00134138.c    ├── fflush-00103ca0.c    ├── fflush-001342d8.c    ├── fflush_unlocked-00103c90.c    ├── fflush_unlocked-001342d0.c    ├── fgetfilecon-001037a0.c    ├── fgetfilecon-00134018.c    ├── fileno-00103950.c    ├── fileno-00134110.c    ├── fnmatch-00103c80.c    ├── fnmatch-001342c8.c    ├── fputc_unlocked-00103d20.c    ├── fputc_unlocked-00134320.c    ├── fputs_unlocked-00103d40.c... several more omitted``````bash cat decompilations/ls/FUN_0010eb20-0010eb20.c``````cvoid * FUN_0010eb20(void *param_1,char *param_2,void **param_3){  size_t __n;  long lVar1;  long lVar2;  size_t __n_00;  void *__dest;  undefined *puVar3;  ulong uVar4;  undefined local_41;  lVar1 = FUN_0010e740();  lVar2 = FUN_0010e7a0(lVar1);  __n = (lVar1 - (long)param_1) + lVar2;  __n_00 = strlen(param_2);  if (lVar2 == 0) {    local_41 = 0x2e;    if (*param_2 != '/') {      local_41 = 0;    }    uVar4 = (ulong)(*param_2 == '/');  }  else if (*(char *)((long)param_1 + (__n - 1)) == '/') {    local_41 = 0;    uVar4 = 0;  }  else {    local_41 = 0x2f;    if (*param_2 == '/') {      local_41 = 0;    }    uVar4 = (ulong)(*param_2 != '/');  }  __dest = malloc(__n + 1 + __n_00 + uVar4);  if (__dest != (void *)0x0) {    puVar3 = (undefined *)mempcpy(__dest,param_1,__n);    *puVar3 = local_41;    if (param_3 != (void **)0x0) {      *param_3 = puVar3 + uVar4;    }    puVar3 = (undefined *)mempcpy(puVar3 + uVar4,param_2,__n_00);    *puVar3 = 0;  }  return __dest;}```## Example Usage with Windows afd.sys Callgraph:### Command lineGenerate a decompilation and callgraph of all functions matching the function `--filter AfdRestart` and `--callgraph-filter AfdRestart`. ```bashghidrecomp tests/data/afd.sys.10.0.22621.1415 --callgraph-filter AfdRestart --filter AfdRestart --callgraphs```### Output```bashStarting decompliations: Namespace(bin='tests/data/afd.sys.10.0.22621.1415', cppexport=False, filters=['AfdRestart'], project_path='.ghidra_projects', gdt=None, output_path='decompilations', skip_cache=True, sym_file_path=None, symbols_path='.symbols', skip_symbols=False, thread_count=8, va=False, fa=False, max_ram_percent=50.0, print_flags=False, callgraphs=True, callgraph_filter='AfdRestart', max_display_depth=None, max_time_cg_gen=5, cg_direction='calling')INFO  Using log config file: jar:file:/ghidra/Ghidra/Framework/Generic/lib/Generic.jar!/generic.log4j.xml (LoggingInitialization)  INFO  Using log file: /home/vscode/.ghidra/.ghidra_10.3_PUBLIC/application.log (LoggingInitialization)  INFO  Loading user preferences: /home/vscode/.ghidra/.ghidra_10.3_PUBLIC/preferences (Preferences)  INFO  Searching for classes... (ClassSearcher)  INFO  Class search complete (710 ms) (ClassSearcher)  INFO  Initializing SSL Context (SSLContextInitializer)  INFO  Initializing Random Number Generator... (SecureRandomFactory)  INFO  Random Number Generator initialization complete: NativePRNGNonBlocking (SecureRandomFactory)  INFO  Trust manager disabled, cacerts have not been set (ApplicationTrustManagerFactory)  INFO  Opening project: /workspaces/ghidrecomp/.ghidra_projects/afd.sys.10.0.22621.1415/afd.sys.10.0.22621.1415 (DefaultProject)  Setting up Symbol Server for symbols...path: .symbols level: 1Loaded well known /ghidra/Ghidra/Configurations/Public_Release/data/PDB_SYMBOL_SERVER_URLS.pdburl' length: 883'Symbol Server Configured path: SymbolServerService:        symbolStore: LocalSymbolStore: [ rootDir: /workspaces/ghidrecomp/.symbols, storageLevel: -1],        symbolServers:                HttpSymbolServer: [ url: https://msdl.microsoft.com/download/symbols/, storageLevel: -1]                HttpSymbolServer: [ url: https://chromium-browser-symsrv.commondatastorage.googleapis.com/, storageLevel: -1]                HttpSymbolServer: [ url: https://symbols.mozilla.org/, storageLevel: -1]                HttpSymbolServer: [ url: https://software.intel.com/sites/downloads/symbols/, storageLevel: -1]                HttpSymbolServer: [ url: https://driver-symbols.nvidia.com/, storageLevel: -1]                HttpSymbolServer: [ url: https://download.amd.com/dir/bin/, storageLevel: -1]Using file gdts: [windows_vs12_64]afd.sys.10.0.22621.1415 - .ProgramDB already analyzed... skippingINFO  Opening project: /workspaces/ghidrecomp/.ghidra_projects/afd.sys.10.0.22621.1415/afd.sys.10.0.22621.1415 (DefaultProject)  Skipped 1241 functions that failed to match any of ['AfdRestart']Decompiling 34 functions using 8 threadsSetup 8 decompliersDecompiled 34 functions for afd.sys.10.0.22621.1415 in 0.86437463760375980 decompilations already existed.Wrote 34 decompilations for afd.sys.10.0.22621.1415 to decompilations/afd.sys.10.0.22621.1415 in 0.0516660213470459Error: time expired for AfdLRRepostReceive func: AfdRestartBufferSend. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for AfdReuseConnection func: AfdRestartDeviceControl. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for AfdConnect func: AfdRestartSend. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for WskProControlSocketCore func: AfdRestartAbort. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for WskProIRPControlSocket func: AfdRestartDelayedAcceptListen. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for AfdSanAcceptCore func: AfdRestartDisconnect. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for AfdTPacketsBufferRead func: AfdRestartMdlReadComplete. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for AfdSanAcceptCore func: AfdRestartTPDetachedSend. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for AfdTLBindSecurityComplete func: AfdRestartTPacketsBufferRead. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for FUN_1c0023892 func: AfdRestartTPacketsMdlRead. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENError: time expired for WskProIRPControlSocket func: AfdRestartTPacketsSend. max_run_time: 5 Increase timeout with --max-time-cg-gen MAX_TIME_CG_GENCallgraphed 34 functions for afd.sys.10.0.22621.1415 in 10.055054426193237Wrote 34 callgraphs for afd.sys.10.0.22621.1415 to decompilations/afd.sys.10.0.22621.1415/callgraphs in 10.0551524162292480 callgraphs already existed.```### Sample Calling Callgraph Output AfdRestartDgConnect:```mermaidflowchart TDclassDef sh fill:#3399330[&quot;AfdRestartBufferReceiveWithUserIrp&quot;] --&gt; 1[&quot;AfdLRRepostReceive&quot;]0 --&gt; 2[&quot;AfdTLPostPendedReceives&quot;]3[&quot;AfdRestartSuperAccept&quot;] --&gt; 4[&quot;AfdContinueSuperAccept&quot;]5[&quot;AfdRestartAccept&quot;] --&gt; 6[&quot;AfdServiceSuperAccept&quot;]7[&quot;AfdIssueDeviceControl&quot;] --&gt; 8[&quot;AfdRestartDeviceControl&quot;]9[&quot;AfdBCommonChainedReceiveEventHandler&quot;] --&gt; 09 --&gt; 10[&quot;AfdCommonRestartBufferReceive&quot;]9 --&gt; 11[&quot;FUN_1c0008952&quot;]12[&quot;AfdTLConnectedReceiveEventHandler&quot;]:::sh --&gt; 913[&quot;AfdBChainedReceiveEventHandler&quot;] --&gt; 914[&quot;AfdTdiSetEventHandlers&quot;] --&gt; 1314 --&gt; 15[&quot;AfdBReceiveExpeditedEventHandler&quot;]14 --&gt; 16[&quot;AfdBReceiveEventHandler&quot;]17[&quot;AfdRestartBufferReceive&quot;] --&gt; 1018[&quot;AfdBind&quot;]:::sh --&gt; 1418:::sh --&gt; 19[&quot;AfdCreateConnection&quot;]18:::sh --&gt; 20[&quot;AfdTLBindSecurity&quot;]18:::sh --&gt; 21[&quot;AfdRestartBindGetAddress&quot;]22[&quot;AfdRestartSend&quot;] --&gt; 2223[&quot;AfdTLSendComplete&quot;] --&gt; 2224[&quot;AfdTLStartVcSend&quot;] --&gt; 2325[&quot;AfdTLConnectEventHandler&quot;]:::sh --&gt; 325:::sh --&gt; 26[&quot;AfdTLDelayedAcceptCompletion&quot;]25:::sh --&gt; 516 --&gt; 016 --&gt; 116 --&gt; 1727[&quot;AfdAccept&quot;]:::sh --&gt; 28[&quot;AfdRestartDelayedAccept&quot;]27:::sh --&gt; 29[&quot;AfdTLCancelResumeDelayAccept&quot;] 26 --&gt; 2826 --&gt; 30[&quot;AfdRestartDelayedSuperAccept&quot;]15 --&gt; 1631[&quot;AfdTLCompleteBufferUserReceive&quot;] --&gt; 032[&quot;AfdTLPostUserReceive&quot;] --&gt; 312 --&gt; 3210 --&gt; 210 --&gt; 119 --&gt; 733[&quot;AfdBPostDrainReceive&quot;] --&gt; 1733 --&gt; 34[&quot;AfdTLCompleteBufferReceive&quot;]33 --&gt; 1035[&quot;AfdRestartSuperConnect&quot;] --&gt; 36[&quot;AfdRestartBufferSend&quot;]37[&quot;AfdConnectEventHandler&quot;] --&gt; 337 --&gt; 538[&quot;FUN_1c000e1aa&quot;] --&gt; 1938 --&gt; 39[&quot;AfdDoDatagramConnect&quot;]40[&quot;AfdSendQueuedTPSend&quot;] --&gt; 2440 --&gt; 41[&quot;AfdTLBufferedSendComplete&quot;]42[&quot;AfdConnect&quot;]:::sh --&gt; 3843[&quot;AfdSuperConnect&quot;]:::sh --&gt; 3543:::sh --&gt; 4144[&quot;AfdTLAbortEventHandler&quot;]:::sh --&gt; 2629 --&gt; 261 --&gt; 331 --&gt; 045[&quot;AfdCompleteTPackets&quot;] --&gt; 4045 --&gt; 46[&quot;AfdTPacketsWorker&quot;]45 --&gt; 47[&quot;AfdStartNextQueuedTransmit&quot;]48[&quot;FUN_1c0027fa2&quot;] --&gt; 1949[&quot;FUN_1c0021418&quot;] --&gt; 3649 --&gt; 4150[&quot;AfdFastConnectionSend&quot;] --&gt; 4951[&quot;AfdBInitDrainBytesInTransport&quot;] --&gt; 152[&quot;FUN_1c002246f&quot;] --&gt; 5152 --&gt; 53[&quot;FUN_1c0004001&quot;]54[&quot;FUN_1c002ed68&quot;] --&gt; 2954 --&gt; 3054 --&gt; 5454 --&gt; 55[&quot;AfdRestartSuperAcceptListen&quot;]56[&quot;FUN_1c002d729&quot;] --&gt; 3757[&quot;AfdTLBindComplete2&quot;] --&gt; 4858[&quot;AfdRestartTPacketsMdlRead&quot;] --&gt; 4558 --&gt; 4658 --&gt; 59[&quot;AfdTPacketsContinueAfterRead&quot;]60[&quot;AfdTLDgramBindComplete&quot;] --&gt; 5761[&quot;AfdFastIoDeviceControl&quot;]:::sh --&gt; 5062[&quot;AfdTLBindComplete&quot;] --&gt; 6062 --&gt; 63[&quot;FUN_1c0027f76&quot;]62 --&gt; 5764[&quot;AfdTLBind&quot;] --&gt; 6265[&quot;AfdTLBindSecurityComplete&quot;] --&gt; 6465 --&gt; 2065 --&gt; 5720 --&gt; 6520 --&gt; 6463 --&gt; 6066[&quot;AfdBReceive&quot;] --&gt; 5266 --&gt; 67[&quot;FUN_1c0022408&quot;]68[&quot;AfdStartListen&quot;]:::sh --&gt; 5669[&quot;AfdTPacketsMdlRead&quot;] --&gt; 5869 --&gt; 5930 --&gt; 46 --&gt; 5470[&quot;AfdFastIoWrite&quot;]:::sh --&gt; 5041 --&gt; 3671[&quot;FUN_1c002ec66&quot;] --&gt; 671 --&gt; 7171 --&gt; 72[&quot;AfdCloseConnection&quot;]46 --&gt; 6946 --&gt; 4646 --&gt; 73[&quot;AfdTPacketsSend&quot;]46 --&gt; 74[&quot;AfdTPacketsBufferRead&quot;]46 --&gt; 75[&quot;AfdStartNextTPacketsIrp&quot;]76[&quot;AfdRestartSuperAcceptGetAddress&quot;] --&gt; 434 --&gt; 104 --&gt; 764 --&gt; 77[&quot;AfdRestartSuperAcceptReceive&quot;]55 --&gt; 478[&quot;AfdReceive&quot;] --&gt; 6679[&quot;AfdCommonRestartTPacketsSend&quot;] --&gt; 4679 --&gt; 7380[&quot;AfdTLRestartTPacketsSend&quot;] --&gt; 7981[&quot;AfdTLTPacketsSend&quot;] --&gt; 8082[&quot;AfdDispatch&quot;] --&gt; 7883[&quot;DriverEntry&quot;] --&gt; 8273 --&gt; 8173 --&gt; 84[&quot;AfdRestartTPacketsSend&quot;]73 --&gt; 7585[&quot;AfdSanConnectHandler&quot;]:::sh --&gt; 686[&quot;FUN_1c00128c9&quot;] --&gt; 687[&quot;AfdSuperAccept&quot;]:::sh --&gt; 8688[&quot;entry&quot;]:::sh --&gt; 8359 --&gt; 7374 --&gt; 5974 --&gt; 89[&quot;AfdRestartTPacketsBufferRead&quot;]89 --&gt; 5989 --&gt; 4690[&quot;FUN_1c0023892&quot;] --&gt; 5190 --&gt; 9090 --&gt; 3391[&quot;AfdGetAddress&quot;]:::sh --&gt; 92[&quot;AfdRestartGetAddress&quot;]84 --&gt; 7975 --&gt; 4647 --&gt; 4693[&quot;AfdCompleteClosePendedTPackets&quot;] --&gt; 4711 --&gt; 194[&quot;AfdFreeNPConnectionResources&quot;] --&gt; 9395[&quot;AfdFreeConnectionResources&quot;] --&gt; 9496[&quot;AfdFreeConnectionEx&quot;] --&gt; 9572 --&gt; 9697[&quot;AfdReturnNicsPackets&quot;]:::sh --&gt; 7253 --&gt; 3267 --&gt; 3339 --&gt; 98[&quot;AfdRestartDgConnect&quot;]```### Sample MindMap Output for AfdRestartDgConnect```mermaidmindmaproot((AfdRestartDgConnect))      AfdBCommonChainedReceiveEventHandler        AfdBChainedReceiveEventHandler      AfdTLSendComplete      AfdBReceiveEventHandler        AfdBReceiveExpeditedEventHandler      AfdBReceiveEventHandler        AfdTdiSetEventHandlers      AfdTLCompleteBufferUserReceive        AfdTLPostUserReceive      AfdIssueDeviceControl      AfdTLDelayedAcceptCompletion        AfdCreateConnection        AfdTLStartVcSend      AfdRestartSuperConnect      AfdTLDelayedAcceptCompletion      AfdBPostDrainReceive        AfdCreateConnection      FUN_1c0021418        AfdLRRepostReceive        AfdTLCancelResumeDelayAccept      AfdConnectEventHandler        AfdFastConnectionSend        FUN_1c002d729      FUN_1c002ed68        FUN_1c002d729      AfdTLBufferedSendComplete        FUN_1c0021418        AfdServiceSuperAccept      AfdContinueSuperAccept        AfdServiceSuperAccept      AfdTLBufferedSendComplete        AfdSendQueuedTPSend        AfdTLCancelResumeDelayAccept        AfdServiceSuperAccept```## Installation1. [Download](https://github.com/NationalSecurityAgency/ghidra/releases) and [install Ghidra](https://htmlpreview.github.io/?https://github.com/NationalSecurityAgency/ghidra/blob/stable/GhidraDocs/InstallationGuide.html#Install) and [Java](https://htmlpreview.github.io/?https://github.com/NationalSecurityAgency/ghidra/blob/stable/GhidraDocs/InstallationGuide.html#JavaNotes) required for Ghidra.2. Set Ghidra Environment Variable `GHIDRA_INSTALL_DIR` to Ghidra install location.3. Pip install `ghidrecomp`### Windows```powershellPS C:\Users\user&gt; [System.Environment]::SetEnvironmentVariable('GHIDRA_INSTALL_DIR','C:\ghidra_10.2.3_PUBLIC_20230208\ghidra_10.2.3_PUBLIC')PS C:\Users\user&gt; pip install ghidrecomp```### Linux / Mac```bashexport GHIDRA_INSTALL_DIR=&quot;/path/to/ghidra/&quot;pip install ghidrecomp```### Devcontainer / DockerAvoid installing Ghidra and Java on your host by using a **devcontainer**. #### Option 1 - DevcontainerUse the [.devcontainer](.devcontainer) in this repo. If you don't know how, follow the detailed instructions here: [ghidra-python-vscode-devcontainer-skeleton quick setup](https://github.com/clearbluejar/ghidra-python-vscode-devcontainer-skeleton#quick-start-setup---dev-container--best-option).#### Option 2 - DockerUse the published repo image with Ghidra and Java already installed.```bashdocker pull ghcr.io/clearbluejar/ghidrecomp:latestdocker run --user vscode  --rm -it ghcr.io/clearbluejar/ghidrecomp:latest bash```From within the image:```bashvscode ➜ / $ uname -aLinux 4da2fe33369a 5.15.49-linuxkit #1 SMP PREEMPT Tue Sep 13 07:51:32 UTC 2022 x86_64 GNU/Linuxvscode ➜ / $ ls /ghidra/Extensions  GPL  Ghidra  LICENSE  bom.json  docs  ghidraRun  ghidraRun.bat  licenses  server  supportvscode ➜ / $ pip install ghidrecompSuccessfully installed Jpype1-1.4.1 ghidrecomp-0.1.0 packaging-23.0 pyhidra-0.4.1```</longdescription>
</pkgmetadata>