<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;./flowjax_logo.png?raw=true&quot; alt=&quot;logo&quot; width=&quot;500&quot; &gt;&lt;/img&gt;&lt;/div&gt;# FlowJax: Normalizing Flows in Jax## DocumentationAvailable [here](https://danielward27.github.io/flowjax/index.html).## Short exampleTraining a flow can be done in a few lines of code:```from flowjax.flows import BlockNeuralAutoregressiveFlowfrom flowjax.train import fit_to_datafrom flowjax.distributions import Normalfrom jax import randomimport jax.numpy as jnpdata_key, flow_key, train_key = random.split(random.PRNGKey(0), 3)x = random.uniform(data_key, (10000, 3))  # Toy database_dist = Normal(jnp.zeros(x.shape[1]))flow = BlockNeuralAutoregressiveFlow(flow_key, base_dist)flow, losses = fit_to_data(train_key, flow, x, learning_rate=0.05)# We can now evaluate the log-probability of arbitrary pointsflow.log_prob(x)```The package currently includes:- Many simple bijections and distributions, implemented as [Equinox](https://arxiv.org/abs/2111.00254) modules.- `CouplingFlow` ([Dinh et al., 2017](https://arxiv.org/abs/1605.08803)) and `MaskedAutoregressiveFlow` ([Papamakarios et al., 2017](https://arxiv.org/abs/1705.07057v4)) normalizing flow architectures.    - These can be used with arbitrary bijections as transformers, such as `Affine` or `RationalQuadraticSpline` (the latter used in neural spline flows; [Durkan et al., 2019](https://arxiv.org/abs/1906.04032)). - `BlockNeuralAutoregressiveFlow`, as introduced by [De Cao et al., 2019](https://arxiv.org/abs/1904.04676)- `TriangularSplineFlow`, introduced here.- Training scripts for fitting by maximum likelihood, variational inference, or using contrastive learning for sequential neural posterior estimation ([Greenberg et al., 2019](https://arxiv.org/abs/1905.07488); [Durkan et al., 2020](https://arxiv.org/abs/2002.03712]))## Installation```pip install flowjax```## DevelopmentWe can install a version for development as follows```git clone https://github.com/danielward27/flowjax.gitcd flowjaxpip install -e .[dev]sudo apt-get install pandoc  # Required for building documentation```## WarningThis package is new and may have substantial breaking changes between major releases.## TODOA few limitations / things that could be worth including in the future:- Add ability to &quot;reshape&quot; bijections.## RelatedWe make use of the [Equinox](https://arxiv.org/abs/2111.00254) package, which facilitates object-oriented programming with Jax. ## Authors`flowjax` was written by `Daniel Ward &lt;danielward27@outlook.com&gt;`.</longdescription>
</pkgmetadata>