<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://cdn.rawgit.com/pymc-devs/pymc/main/docs/logos/svg/PyMC_banner.svg    :height: 100px    :alt: PyMC logo    :align: center|Build Status| |Coverage| |NumFOCUS_badge| |Binder| |Dockerhub| |DOIzenodo|PyMC (formerly PyMC3) is a Python package for Bayesian statistical modelingfocusing on advanced Markov chain Monte Carlo (MCMC) and variational inference (VI)algorithms. Its flexibility and extensibility make it applicable to alarge suite of problems.Check out the `PyMC overview &lt;https://docs.pymc.io/en/latest/learn/core_notebooks/pymc_overview.html&gt;`__,  orone of `the many examples &lt;https://www.pymc.io/projects/examples/en/latest/gallery.html&gt;`__!For questions on PyMC, head on over to our `PyMC Discourse &lt;https://discourse.pymc.io/&gt;`__ forum.Features========-  Intuitive model specification syntax, for example, ``x ~ N(0,1)``   translates to ``x = Normal('x',0,1)``-  **Powerful sampling algorithms**, such as the `No U-Turn   Sampler &lt;http://www.jmlr.org/papers/v15/hoffman14a.html&gt;`__, allow complex models   with thousands of parameters with little specialized knowledge of   fitting algorithms.-  **Variational inference**: `ADVI &lt;http://www.jmlr.org/papers/v18/16-107.html&gt;`__   for fast approximate posterior estimation as well as mini-batch ADVI   for large data sets.-  Relies on `PyTensor &lt;https://pytensor.readthedocs.io/en/latest/&gt;`__ which provides:    *  Computation optimization and dynamic C or JAX compilation    *  NumPy broadcasting and advanced indexing    *  Linear algebra operators    *  Simple extensibility-  Transparent support for missing value imputationGetting started===============If you already know about Bayesian statistics:-----------------------------------------------  `API quickstart guide &lt;https://www.pymc.io/projects/examples/en/latest/howto/api_quickstart.html&gt;`__-  The `PyMC tutorial &lt;https://docs.pymc.io/en/latest/learn/core_notebooks/pymc_overview.html&gt;`__-  `PyMC examples &lt;https://www.pymc.io/projects/examples/en/latest/gallery.html&gt;`__ and the `API reference &lt;https://docs.pymc.io/en/stable/api.html&gt;`__Learn Bayesian statistics with a book together with PyMC---------------------------------------------------------  `Probabilistic Programming and Bayesian Methods for Hackers &lt;https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers&gt;`__: Fantastic book with many applied code examples.-  `PyMC port of the book &quot;Doing Bayesian Data Analysis&quot; by John Kruschke &lt;https://github.com/aloctavodia/Doing_bayesian_data_analysis&gt;`__ as well as the `second edition &lt;https://github.com/JWarmenhoven/DBDA-python&gt;`__: Principled introduction to Bayesian data analysis.-  `PyMC port of the book &quot;Statistical Rethinking A Bayesian Course with Examples in R and Stan&quot; by Richard McElreath &lt;https://github.com/pymc-devs/resources/tree/master/Rethinking&gt;`__-  `PyMC port of the book &quot;Bayesian Cognitive Modeling&quot; by Michael Lee and EJ Wagenmakers &lt;https://github.com/pymc-devs/resources/tree/master/BCM&gt;`__: Focused on using Bayesian statistics in cognitive modeling.-  `Bayesian Analysis with Python  &lt;https://www.packtpub.com/big-data-and-business-intelligence/bayesian-analysis-python-second-edition&gt;`__ (second edition) by Osvaldo Martin: Great introductory book. (`code &lt;https://github.com/aloctavodia/BAP&gt;`__ and errata).Audio &amp; Video-------------- Here is a `YouTube playlist &lt;https://www.youtube.com/playlist?list=PL1Ma_1DBbE82OVW8Fz_6Ts1oOeyOAiovy&gt;`__ gathering several talks on PyMC.- You can also find all the talks given at **PyMCon 2020** `here &lt;https://discourse.pymc.io/c/pymcon/2020talks/15&gt;`__.- The `&quot;Learning Bayesian Statistics&quot; podcast &lt;https://www.learnbayesstats.com/&gt;`__ helps you discover and stay up-to-date with the vast Bayesian community. Bonus: it's hosted by Alex Andorra, one of the PyMC core devs!Installation============To install PyMC on your system, follow the instructions on the `installation guide &lt;https://www.pymc.io/projects/docs/en/latest/installation.html&gt;`__.Citing PyMC===========Please choose from the following:- |DOIpaper| *Probabilistic programming in Python using PyMC3*, Salvatier J., Wiecki T.V., Fonnesbeck C. (2016)- |DOIzenodo| A DOI for all versions.- DOIs for specific versions are shown on Zenodo and under `Releases &lt;https://github.com/pymc-devs/pymc/releases&gt;`_.. |DOIpaper| image:: https://img.shields.io/badge/DOI-10.7717%2Fpeerj--cs.55-blue     :target: https://doi.org/10.7717/peerj-cs.55.. |DOIzenodo| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.4603970.svg   :target: https://doi.org/10.5281/zenodo.4603970Contact=======We are using `discourse.pymc.io &lt;https://discourse.pymc.io/&gt;`__ as our main communication channel.To ask a question regarding modeling or usage of PyMC we encourage posting to our Discourse forum under the `“Questions” Category &lt;https://discourse.pymc.io/c/questions&gt;`__. You can also suggest feature in the `“Development” Category &lt;https://discourse.pymc.io/c/development&gt;`__.You can also follow us on these social media platforms for updates and other announcements:- `LinkedIn @pymc &lt;https://www.linkedin.com/company/pymc/&gt;`__- `YouTube @PyMCDevelopers &lt;https://www.youtube.com/c/PyMCDevelopers&gt;`__- `Twitter @pymc_devs &lt;https://twitter.com/pymc_devs&gt;`__- `Mastodon @pymc@bayes.club &lt;https://bayes.club/@pymc&gt;`__To report an issue with PyMC please use the `issue tracker &lt;https://github.com/pymc-devs/pymc/issues&gt;`__.Finally, if you need to get in touch for non-technical information about the project, `send us an e-mail &lt;info@pymc-devs.org&gt;`__.License=======`Apache License, Version2.0 &lt;https://github.com/pymc-devs/pymc/blob/main/LICENSE&gt;`__Software using PyMC===================General purpose---------------- `Bambi &lt;https://github.com/bambinos/bambi&gt;`__: BAyesian Model-Building Interface (BAMBI) in Python.- `calibr8 &lt;https://calibr8.readthedocs.io&gt;`__: A toolbox for constructing detailed observation models to be used as likelihoods in PyMC.- `gumbi &lt;https://github.com/JohnGoertz/Gumbi&gt;`__: A high-level interface for building GP models.- `SunODE &lt;https://github.com/aseyboldt/sunode&gt;`__: Fast ODE solver, much faster than the one that comes with PyMC.- `pymc-learn &lt;https://github.com/pymc-learn/pymc-learn&gt;`__: Custom PyMC models built on top of pymc3_models/scikit-learn APIDomain specific---------------- `Exoplanet &lt;https://github.com/dfm/exoplanet&gt;`__: a toolkit for modeling of transit and/or radial velocity observations of exoplanets and other astronomical time series.- `beat &lt;https://github.com/hvasbath/beat&gt;`__: Bayesian Earthquake Analysis Tool.- `CausalPy &lt;https://github.com/pymc-labs/CausalPy&gt;`__: A package focussing on causal inference in quasi-experimental settings.Please contact us if your software is not listed here.Papers citing PyMC==================See `Google Scholar &lt;https://scholar.google.de/scholar?oi=bibs&amp;hl=en&amp;authuser=1&amp;cites=6936955228135731011&gt;`__ for a continuously updated list.Contributors============See the `GitHub contributorpage &lt;https://github.com/pymc-devs/pymc/graphs/contributors&gt;`__. Also read our `Code of Conduct &lt;https://github.com/pymc-devs/pymc/blob/main/CODE_OF_CONDUCT.md&gt;`__ guidelines for a better contributing experience.Support=======PyMC is a non-profit project under NumFOCUS umbrella. If you want to support PyMC financially, you can donate `here &lt;https://numfocus.salsalabs.org/donate-to-pymc3/index.html&gt;`__.Professional Consulting Support===============================You can get professional consulting support from `PyMC Labs &lt;https://www.pymc-labs.io&gt;`__.Sponsors========|NumFOCUS||PyMCLabs||Mistplay|.. |Binder| image:: https://mybinder.org/badge_logo.svg   :target: https://mybinder.org/v2/gh/pymc-devs/pymc/main?filepath=%2Fdocs%2Fsource%2Fnotebooks.. |Build Status| image:: https://github.com/pymc-devs/pymc/workflows/pytest/badge.svg   :target: https://github.com/pymc-devs/pymc/actions.. |Coverage| image:: https://codecov.io/gh/pymc-devs/pymc/branch/main/graph/badge.svg   :target: https://codecov.io/gh/pymc-devs/pymc.. |Dockerhub| image:: https://img.shields.io/docker/automated/pymc/pymc.svg   :target: https://hub.docker.com/r/pymc/pymc.. |NumFOCUS_badge| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;colorA=E1523D&amp;colorB=007D8A   :target: http://www.numfocus.org/.. |NumFOCUS| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_numfocus.png?raw=true   :target: http://www.numfocus.org/.. |PyMCLabs| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_pymc_labs.png?raw=true   :target: https://pymc-labs.io.. |Mistplay| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_mistplay.png?raw=true   :target: https://www.mistplay.com/</longdescription>
</pkgmetadata>