<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>bgtunnel - Initiate SSH tunnels in the backgroundUseful when you need to connect to a database only accessible throughanother ssh-enabled host. It works by opening a port forwarding sshconnection in the background, using threads. The connection(s) areautomatically closed when the process exits, or when explicitly callingthe `close` method of the returned SSHTunnelForwarderThread object.Notes on default values-----------------------* Bind address and host address defaults to &quot;127.0.0.1&quot;* SSH port defaults to 22* Bind port defaults to picking a random available one, accessible from the  object returned by the `open` functionUsage examples--------------    # Enable forwarding for a MS SQL server running on the remote SSH host    &gt;&gt;&gt; import bgtunnel    &gt;&gt;&gt; forwarder = bgtunnel.open(ssh_user='manager', ssh_address='1.2.3.4',    ...                           host_port=1433)    &gt;&gt;&gt; print(forwarder.bind_port)    59432    &gt;&gt;&gt; import somesqlpkg    &gt;&gt;&gt; conn = somesqlpkg.connect('mssql://myuser:mypassword@localhost:' +                                                       forwarder.port)    # Enable forwarding for an old AS400 DB2 server accessible only via    # the remote SSH host. Multiple ports need to be opened.    &gt;&gt;&gt; import bgtunnel    &gt;&gt;&gt; ports = [446, 449] + range(8470, 8477)    &gt;&gt;&gt; forwarders = []    &gt;&gt;&gt; for port in ports:    ...     forwarders.append(bgtunnel.open(ssh_user='manager',    ...                                     ssh_address='1.2.3.4',                                            host_address='192.168.0.5',    ...                                     host_port=port, bind_port=port))    &gt;&gt;&gt; print(''.join(f.bind_port for f in forwarders))    446    449    8470    8471    8472    8473    8474    8475    8476    &gt;&gt;&gt; import somesqlpkg    &gt;&gt;&gt; conn = somesqlpkg.connect('mssql://myuser:mypassword@localhost:446')</longdescription>
</pkgmetadata>