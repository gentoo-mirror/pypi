<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======================================================Traits: observable typed attributes for Python classes======================================================http://docs.enthought.com/traitsThe Traits project is at the center of all Enthought Tool Suite developmentand has changed the mental model used at Enthought for programming in thealready extremely efficient Python programming language. We encourage everyoneto join us in enjoying the productivity gains from using such a powerfulapproach.The Traits project allows Python programmers to use a special kind of typedefinition called a *trait*, which gives object attributes some additionalcharacteristics:- **Initialization**: A trait has a *default value*, which is  automatically set as the initial value of an attribute before its  first use in a program.- **Validation**: The type of a trait attribute is *explicitly declared*. The  type is evident in the code, and only values that meet a  programmer-specified set of criteria (i.e., the trait definition) can  be assigned to that attribute.- **Delegation**: The value of a trait attribute can be contained either  in the defining object or in another object *delegated* to by the  trait.- **Notification**: Setting the value of a trait attribute can *notify*  other parts of the program that the value has changed.- **Visualization**: User interfaces that allow a user to *interactively  modify* the value of a trait attribute can be automatically  constructed using the trait's definition. (This feature requires that  a supported GUI toolkit be installed. If this feature is not used, the  Traits project does not otherwise require GUI support.)A class can freely mix trait-based attributes with normal Python attributes,or can opt to allow the use of only a fixed or open set of trait attributeswithin the class. Trait attributes defined by a class are automaticallyinherited by any subclass derived from the class.Dependencies------------Traits requires Python &gt;= 3.6.Traits has the following optional dependencies:* `NumPy &lt;http://pypi.python.org/pypi/numpy&gt;`_ to support the trait types  for arrays.* `TraitsUI &lt;https://pypi.python.org/pypi/traitsui&gt;`_ to support GUI  Views.To build the full documentation one needs:* `Sphinx &lt;https://pypi.org/project/Sphinx&gt;`_ version 2.1 or later.* The `Enthought Sphinx Theme &lt;https://pypi.org/project/enthought-sphinx-theme&gt;`_.  (A version of the documentation can be built without this, but  some formatting may be incorrect.)</longdescription>
</pkgmetadata>