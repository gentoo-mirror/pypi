<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===================PyAMS_utils package===================.. contents::What is PyAMS?==============PyAMS (Pyramid Application Management Suite) is a small suite of packages written for applicationsand content management with the Pyramid framework.**PyAMS** is actually mainly used to manage web sites through content management applications (CMS,see PyAMS_content package), but many features are generic and can be used inside any kind of webapplication.All PyAMS documentation is available on `ReadTheDocs &lt;https://pyams.readthedocs.io&gt;`_; source codeis available on `Gitlab &lt;https://gitlab.com/pyams&gt;`_ and pushed to `Github&lt;https://github.com/py-ams&gt;`_.What is PyAMS_utils?====================PyAMS_utils is a large set of small generic modules used to handle PyAMS applications.These modules provide several decorators used to declare object factories, adapters, utilitiesand vocabularies; they also provide a large set of adapters, utilities and predicates related tomany common operations like caching, dates management, data API, text conversions, requestproperties..., as well as custom schema fields.When included into Pyramid's configuration, this package also register several Zope packagesthrough ZCML, typically to automatically inclure DublinCore extensions or IntIDs management.Most PyAMS_utils modules are documented using doctests in the /doctests/ sub-directory.Changelog=========2.0.0----- - migrated to Pyramid 2.01.17.0------ - added TALES extensions for date formatting - added ISO countries mapping and vocabulary - added support for HTTP proxy schema field - added Colander &quot;StringArraySchema&quot; type to handle inputs which can be provided as strings using a   given separator, or as arrays - added support for parameters in absolute and canonical URL adapters - updated base CORS requests handler - add result to current connection when creating annotation adapter - updated local utilities vocabulary terms title factory - converted cache key adapters to use hexadecimal values1.16.2------ - added REST API helpers, types converters and base responses - moved Swagger/OpenAPI specifications to *PyAMS_zmi* package1.16.1------ - added constant for &quot;missing&quot; string - updated date and datetime range schema fields interfaces1.16.0------ - added new &quot;isodate&quot; formatter to *timestamp* TALES extension, to only get date instead of   datetime in ISO format - added &quot;boolean_dict&quot; helper to check that a mapping has at least one key which doesn't   have an empty value1.15.1------ - added support for Python 3.11 - added a few types hints1.15.0------ - added new text renderers interfaces and support; the goal of these interfaces is to be able   to include dynamic fragments into a static string which will be evaluated at runtime; this   string can be, for example, an SQL query or a JSON object which could be used to provide   arguments to a REST service, and is actually usable by PyAMS tasks scheduler1.14.0------ - added RPC protocols helper module - added object factory helper function1.13.1------ - updated CORS request handler interface to be able to specify supported HTTP methods when   REST service is not based on Cornice1.13.0------ - added custom interface and default adapter to handle CORS requests1.12.3------ - updated CORS headers support1.12.2------ - updated Gitlab-CI configuration1.12.1------ - added support helpers for CORS preflight OPTIONS verb used by REST services1.12.0------ - removed Pypy3 support from Gitlab-CI because of build issues with Twine and Cryptography - added small &quot;is not None&quot; filter helper - added text renderers for vocabulary-based properties - removed unused Pygments resource1.11.6------ - updated Pypy 3 support1.11.5------ - updated Pypy 3 support1.11.4------ - added support for Python 3.10 and Pypy 31.11.3------ - check if provided argument is an interface in object factory getter - added volatile property setter1.11.2------ - added helper function in *factory* module to get all registered factories   for a given interface - catch RuntimeError in boolean iterator checker to handle Python 3.7+ use case where   a StopIteration raised from inside a generator is transformed into a RuntimeError   (see PEP 479) - catch NotYet exception in IIntIds object remove subscriber - updated class properties management - updated local utilities vocabulary - updated Gitlab-CI configuration1.11.1------ - updated imports1.11.0------ - added arguments to container module to be able to get depth of found objects inside a   container1.10.0------ - added 'transaction' module - handler sets in dicts merging - Pylint improvements1.9.2----- - updated path getter of external Fanstatic resources1.9.1----- - locales and translations updates1.9.0----- - added simple container class to handle internal sequence - added mappings marging function - updated unique ID adapter - updated Pygments resources management1.8.1----- - updated custom Fanstatic resource manager to handle resources with data correctly in   production mode1.8.0----- - updated Venusian decorator callbacks category to &quot;pyramid&quot; for compatibility   with Pyramid 2.0 - added registry helper to do adapters lookups1.7.1----- - added missing interface translation1.7.0----- - remove support for Python &lt; 3.7 - added global OpenAPI specification view - added simple Cornice schema fields and converters - added custom handling of newlines character in &quot;br&quot; TALES extension1.6.1----- - updated Gitlab-CI configuration1.6.0----- - added ILocation copy hook (copied from &quot;zope.location&quot; package) - added base class for local utilities vocabulary1.5.2----- - removed Travis-CI configuration1.5.1----- - translation update1.5.0----- - updated &quot;get_duration&quot; function to directly accept a timedelta object - added dict formatter function (mainly used for tests) - use keywords arguments in &quot;request.has_permission&quot; call to use request cache1.4.3----- - updated doctests for last Pygments release1.4.2----- - package version mismatch1.4.1----- - make &quot;object_data&quot; TALES extension return None instead of an empty string when no   data is available1.4.0----- - added Beaker's cache management functions and vocabulary - always make a registered utility class to provide it's registered interface - added HTTPMethodField schema field, a tuple used to combine an HTTP method and an URL in   a single property1.3.8----- - updated Gitlab-CI settings to remove Travis-CI1.3.7----- - updated Travis configuration1.3.6----- - updated WSGI environment decorator to prevent storing null values into request environment1.3.5----- - updated request's WSGI property decorator to be able to handle caching functions with   arguments - extracted object data renderer into a dedicated function - updated adapter_config decorator arguments names1.3.4----- - always add &quot;context&quot; attribute to request when creating a new request1.3.3----- - changed format of &quot;capture*&quot; context managers to also get result of initial function call1.3.2----- - renamed testing decorator caller argument1.3.1----- - added testing requirement for Pyramid ZCML1.3.0----- - updated PyAMS registry management to only use Pyramid registry (using &quot;hook_zca&quot;) - local registry should only be used to handle local utilities, and not any kind of   components! - updated doctests to use hooked ZCA1.2.8----- - updated doctests1.2.7----- - updated doctests1.2.6----- - updated doctests1.2.5----- - updated doctests1.2.4----- - added distribution check1.2.3----- - small refactoring to add &quot;get_timestamp&quot; function to &quot;pyams_utils.date&quot; module - small updates in &quot;url&quot; and &quot;zodb&quot; modules - added venusian decorators testing helpers - completed doctests1.2.2----- - Pylint upgrade1.2.1----- - updated doctest1.2.0----- - added Fanstatic resource type to define link &quot;data&quot; attributes, with new doctests - added new &quot;data&quot; function to format data attributes - Pylint code cleanup1.1.4----- - updated doctests - when registering a class adapter, automatically make this class implement the adapter   &quot;provided&quot; interface - added testing helpers1.1.3----- - added doctests1.1.2----- - renamed arguments and variables to avoid shadowing arguments names - updated private Gitlab integration1.1.1----- - added synonyms to &quot;adapter_config&quot; arguments names ('required' and 'adapts' for 'context', and   'provided' for 'provides')1.1.0----- - corrected &quot;timestamp&quot; TALES extension - added generic *IDataManager* interface definition to PyAMS_utils, so it can be used in any   package without using PyAMS_form1.0.0----- - initial release</longdescription>
</pkgmetadata>