<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># gpt-review&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/gpt-review/actions&quot;&gt;&lt;img alt=&quot;Actions Status&quot; src=&quot;https://github.com/microsoft/gpt-review/workflows/Python%20CI/badge.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/gh/microsoft/gpt-review&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://codecov.io/gh/microsoft/gpt-review/branch/main/graph/badge.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/gpt-review/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;License: MIT&quot; src=&quot;https://black.readthedocs.io/en/stable/_static/license.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/gpt-review/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/gpt-review&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/gpt-review&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://pepy.tech/badge/gpt-review&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt;A Python based CLI and GitHub Action to use Open AI or Azure Open AI models to review contents of pull requests.## How to install CLIFirst, install the package via `pip`:```bashpip install gpt-review```### GPT API credentialsYou will need to provide an OpenAI API key to use this CLI tool. In order of precedence, it will check the following methods:1. Presence of a context file at `azure.yaml` or wherever `CONTEXT_FILE` points to. See `azure.yaml.template` for an example.2. `AZURE_OPENAI_API_URL` and `AZURE_OPENAI_API_KEY` to connect to an Azure OpenAI API:    ```bash    export AZURE_OPENAI_API=&lt;your azure api url&gt;    export AZURE_OPENAI_API_KEY=&lt;your azure key&gt;    ```3. `OPENAI_API_KEY` for direct use of the OpenAI API    ```bash    export OPENAI_API_KEY=&lt;your openai key&gt;    ```4. `AZURE_KEY_VAULT_URL` to use Azure Key Vault. Put secrets for the url at `azure-open-ai` and the API Key `azure-openai-key`, then run:    ```bash    export AZURE_KEY_VAULT_URL=https://&lt;keyvault_name&gt;.vault.azure.net/    az login    ```## Main CommandsTo show help information about available commands and their usage, run:```bashgpt --help```To display the current version of this CLI tool, run:```bashgpt --version```Here are the main commands for using this CLI tool:### 1. Ask a QuestionTo submit a question to GPT and receive an answer, use the following format:```bashgpt ask &quot;What is the capital of France?&quot;```You can customize your request using various options like maximum tokens (`--max-tokens`), temperature (`--temperature`), top-p value (`--top-p`), frequency penalty (`--frequency-penalty`), presence penalty (`--presence-penalty`), etc.#### Ask a Question about a FileTo submit a question to GPT with a file and receive an answer, use the following format:```bashgpt ask --files WordDocument.docx &quot;Summarize the contents of this document.&quot;```### 2. Review a PRTo review a PR, use the following format:```bashgpt github review \    --access-token $GITHUB_ACCESS_TOKEN \    --pull-request $PULL_REQUEST_NUMBER \    --repository $REPOSITORY_NAME```### 3. Generate a git commit message with GPTTo generate a git commit message with GPT after having added the files, use the following format:```bashgit add .gpt git commit```For more detailed information on each command and its options, run:```bashgpt COMMAND --help```Replace COMMAND with one of the main commands listed above (e.g., 'ask').## Developer SetupTo install the package in development mode, with additional packages for testing, run the following command:```bashpip install -e .[test]```</longdescription>
</pkgmetadata>