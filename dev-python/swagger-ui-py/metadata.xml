<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![tests](https://github.com/PWZER/swagger-ui-py/actions/workflows/lint-and-pytest.yml/badge.svg)](https://github.com/PWZER/swagger-ui-py/actions/workflows/lint-and-pytest.yml)[![Version](https://badge.fury.io/gh/PWZER%2Fswagger-ui-py.svg)](https://github.com/PWZER/swagger-ui-py/tags)[![PyPi Version](https://img.shields.io/pypi/v/swagger-ui-py.svg)](https://pypi.org/project/swagger-ui-py/)[![PyPi Downloads](https://pepy.tech/badge/swagger-ui-py)](https://pepy.tech/project/swagger-ui-py)[Project Page](https://pwzer.github.io/swagger-ui-py/)# swagger-ui-pySwagger UI for Python web framework, such Tornado, Flask, Quart, aiohttp, Sanic and Falcon.Only support Python3.## Supported- [Tornado](https://www.tornadoweb.org/en/stable/)- [Flask](https://flask.palletsprojects.com/)- [Sanic](https://sanicframework.org/en/)- [AIOHTTP](https://docs.aiohttp.org/en/stable/)- [Quart](https://pgjones.gitlab.io/quart/)- [Starlette](https://www.starlette.io/)- [Falcon](https://falcon.readthedocs.io/en/stable/)- [Bottle](https://bottlepy.org/docs/dev/)- [Chalice](https://aws.github.io/chalice/index.html)You can print supported list use command```bashpython3 -c &quot;from swagger_ui import supported_list; print(supported_list)&quot;```&gt; If you want to add supported frameworks, you can refer to [Flask Support](/swagger_ui/handlers/flask.py) or [Falcon Support](/swagger_ui/handlers/falcon.py), Implement the corresponding `handler` and `match` function.## Usage- Install  ```bash  pip3 install swagger-ui-py  ```- Code  Using the local config file  ```python  from swagger_ui import api_doc  api_doc(app, config_path='./config/test.yaml', url_prefix='/api/doc', title='API doc')  ```  Or using config url, but need to suport [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)  ```python  api_doc(app, config_url='https://petstore.swagger.io/v2/swagger.json', url_prefix='/api/doc', title='API doc')  ```  Or using the config spec string  ```python  from swagger_ui import api_doc  spec_string = '{&quot;openapi&quot;:&quot;3.0.1&quot;,&quot;info&quot;:{&quot;title&quot;:&quot;python-swagger-ui test api&quot;,&quot;description&quot;:&quot;python-swagger-ui test api&quot;,&quot;version&quot;:&quot;1.0.0&quot;},&quot;servers&quot;:[{&quot;url&quot;:&quot;http://127.0.0.1:8989/api&quot;}],&quot;tags&quot;:[{&quot;name&quot;:&quot;default&quot;,&quot;description&quot;:&quot;default tag&quot;}],&quot;paths&quot;:{&quot;/hello/world&quot;:{&quot;get&quot;:{&quot;tags&quot;:[&quot;default&quot;],&quot;summary&quot;:&quot;output hello world.&quot;,&quot;responses&quot;:{&quot;200&quot;:{&quot;description&quot;:&quot;OK&quot;,&quot;content&quot;:{&quot;application/text&quot;:{&quot;schema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;example&quot;:&quot;Hello World!!!&quot;}}}}}}}},&quot;components&quot;:{}}'  api_doc(app, config_spec=spec_string, url_prefix='/api/doc', title='API doc')  ```  Or using the config dict  ```python  from swagger_ui import api_doc  config = {&quot;openapi&quot;:&quot;3.0.1&quot;,&quot;info&quot;:{&quot;title&quot;:&quot;python-swagger-ui test api&quot;,&quot;description&quot;:&quot;python-swagger-ui test api&quot;,&quot;version&quot;:&quot;1.0.0&quot;},&quot;servers&quot;:[{&quot;url&quot;:&quot;http://127.0.0.1:8989/api&quot;}],&quot;tags&quot;:[{&quot;name&quot;:&quot;default&quot;,&quot;description&quot;:&quot;default tag&quot;}],&quot;paths&quot;:{&quot;/hello/world&quot;:{&quot;get&quot;:{&quot;tags&quot;:[&quot;default&quot;],&quot;summary&quot;:&quot;output hello world.&quot;,&quot;responses&quot;:{&quot;200&quot;:{&quot;description&quot;:&quot;OK&quot;,&quot;content&quot;:{&quot;application/text&quot;:{&quot;schema&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;example&quot;:&quot;Hello World!!!&quot;}}}}}}}},&quot;components&quot;:{}}  api_doc(app, config=config, url_prefix='/api/doc', title='API doc')  ```  And suport config file with editor  ```python  api_doc(app, config_path='./config/test.yaml', editor=True)  ```  And keep the old way  ```python  # for Tornado  from swagger_ui import tornado_api_doc  tornado_api_doc(app, config_path='./conf/test.yaml', url_prefix='/api/doc', title='API doc')  # for Sanic  from swagger_ui import sanic_api_doc  sanic_api_doc(app, config_path='./conf/test.yaml', url_prefix='/api/doc', title='API doc')  # for Flask  from swagger_ui import flask_api_doc  flask_api_doc(app, config_path='./conf/test.yaml', url_prefix='/api/doc', title='API doc')  # for Quart  from swagger_ui import quart_api_doc  quart_api_doc(app, config_path='./conf/test.yaml', url_prefix='/api/doc', title='API doc')  # for aiohttp  from swagger_ui import aiohttp_api_doc  aiohttp_api_doc(app, config_path='./conf/test.yaml', url_prefix='/api/doc', title='API doc')  # for Falcon  from swagger_ui import falcon_api_doc  falcon_api_doc(app, config_path='./conf/test.yaml', url_prefix='/api/doc', title='API doc')  ```- Edit `Swagger` config file (JSON or YAML)  Please see [https://swagger.io/resources/open-api/](https://swagger.io/resources/open-api/).- Access  Open `http://&lt;host&gt;:&lt;port&gt;/api/doc/editor`, you can edit api doc config file.  Open `http://&lt;host&gt;:&lt;port&gt;/api/doc` view api doc.## SwaggerUI Configuration  You can configure Swagger parameters using the dictionary, Both key and value are of type str, if value is JavaScript string, you need to wrap the quotes around it.  Such as `&quot;layout&quot;: &quot;\&quot;StandaloneLayout\&quot;&quot;`.  ```python  parameters = {      &quot;deepLinking&quot;: &quot;true&quot;,      &quot;displayRequestDuration&quot;: &quot;true&quot;,      &quot;layout&quot;: &quot;\&quot;StandaloneLayout\&quot;&quot;,      &quot;plugins&quot;: &quot;[SwaggerUIBundle.plugins.DownloadUrl]&quot;,      &quot;presets&quot;: &quot;[SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset]&quot;,  }  api_doc(app, config_path='./config/test.yaml', parameters=parameters)  ```  For details about parameters configuration, see the official documentation [Parameters Configuration](https://swagger.io/docs/open-source-tools/swagger-ui/usage/configuration/).## OAuth2 Configuration  The format is similar to `parameters`.  ```python  oauth2_config = {      &quot;clientId&quot;: &quot;\&quot;your-client-id\&quot;&quot;,      &quot;clientSecret&quot;: &quot;\&quot;your-client-secret-if-required\&quot;&quot;,      &quot;realm&quot;: &quot;\&quot;your-realms\&quot;&quot;,      &quot;appName&quot;: &quot;\&quot;your-app-name\&quot;&quot;,      &quot;scopeSeparator&quot;: &quot;\&quot; \&quot;&quot;,      &quot;scopes&quot;: &quot;\&quot;openid profile\&quot;&quot;,      &quot;additionalQueryStringParams&quot;: &quot;{test: \&quot;hello\&quot;}&quot;,      &quot;usePkceWithAuthorizationCodeGrant&quot;: True,  }  api_doc(app, config_path='./config/test.yaml', oauth2_config=oauth2_config)  ```  For details about OAuth2 configuration, see the official documentation [OAuth2 Configuration](https://swagger.io/docs/open-source-tools/swagger-ui/usage/oauth2/).## Swagger UISwagger UI version is `v5.4.2`. see [https://github.com/swagger-api/swagger-ui](https://github.com/swagger-api/swagger-ui).## Swagger EditorSwagger Editor version is `v4.10.2`. see [https://github.com/swagger-api/swagger-editor](https://github.com/swagger-api/swagger-editor).## UpdateYou can update swagger ui and swagger editor version with```bashpython3 tools/update.py --ui --editor```</longdescription>
</pkgmetadata>