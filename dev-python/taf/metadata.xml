<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># TAF (The Archive Framework)TAF is a framework that aims to provide archival authenticationand ensure that Git repositories can be securely cloned/updated. TAF's implementationstrongly relies on [The Update Framework (TUF)](https://theupdateframework.github.io),which helps developers maintain the security of a software update system. It provides aflexible framework and specification that developers can integrate into any software updatesystem. TAF integrates Git with TUF:- TUF targets were modified to authenticate Git commits instead of individual files.  This reduces the metadata size and simplifies authentication.- The TUF metadata repository storage utilizes Git. That means TUF metadata files are  stored in a Git repository, which is referred to as an authentication repository.When a TAF authentication repository is cloned, all target repositories are also cloned, andTUF validation is performed against every commit since the repository's inception. When a TAFrepository is updated, data is fetched from upstream and each commit is authenticated. A TAFclone/update differs from a standard Git clone/fetch in that remote commits aren't added to thelocal Git repositories until they've been fully authenticated locally. TAF can be used to secureany git repository, regardless of its content.## ThreatsA git repository can be compromised in several ways:- An attacker might hack a user's account on a code hosting platform, like GitHub or GitLab.- An attacker might compromise the hosting platform itself.- An attacker might gain access to a developer's personal computer.Such an attacker could then:- Upload a new GPG key to GitHub.- Push new commits to any repository.- Add another authorized user with write access.- Unprotect the master branch of any repository and force-push to it.TAF's primary objective is not to prevent the attacks listed above but rather to detect whenan attack has occurred and halt an update if necessary. Thus, TAF should be used instead ofdirectly calling `git pull` and `git clone`.## Further reading1. [UELMA whitepaper](whitepapers/UELMA-Open-Law-White-Paper.pdf)1. [TAF implementation and integration with TUF](docs/updater/specification.md)## Installation StepsFrom _PyPI_```bashpip install taf```From source:```bashpip install -e .```Install extra dependencies when using _Yubikey_:```bashpip install taf[yubikey]```Add bash completion:1. copy `taf-complete.sh` to user's directory1. add `source ./taf-complete.sh` to `~/.bash_profile` or `~/.bashrc`1. source `~/.bash_profile`## Development SetupWe are using [pre-commit](https://pre-commit.com/) to run _black_ code formatter, _flake8_ and _bandit_ code quality checks,as well as _Mypy_ static type checker.```bashpip install -e .[dev]pip install -e .[test]pre-commit install # registers git pre-commit hookpre-commit run --all-files # runs code formatting and quality checks for all files```NOTE: For _Windows_ users: Open [settings.json](.vscode/settings.json) and replace paths.## Running TestsTo run tests with mocked Yubikey:```bashpytest```To run tests with real Yubikey:1. Insert **test** Yubikey2. Run `taf setup_test_key`   WARNING: This command will import targets private key to signature slot of your Yubikey, as well as new self-signed x509 certificate!3. Run `REAL_YK=True pytest` or `set REAL_YK=True pytest` depending on platform.## Platform-specific Wheels1. Open https://dev.azure.com/openlawlibrary/TAF/_build2. Click on latest build3. Open _Summary_ tab4. Under _Build artifacts published_, click on \*wheels to download zipMore info in [devops document](./docs/devops.md).## Building Wheels on Ubuntu 16.04 and 18.04**Binary wheels exists only for macOS, windows-32bit and windows-64bit platforms for python 3.10!**- Install dependencies```bashsudo add-apt-repository ppa:jonathonf/python-3.10sudo apt-get updatesudo apt-get install python3.10sudo apt-get install python3.10-venvsudo apt-get install python3.10-devsudo apt-get install swigsudo apt-get install libpcsclite-devsudo apt-get install libssl-devsudo apt-get install libykpers-1-dev```- Create virtual environment```bashpython3.10 -m venv envpip install --upgrade pippip install wheelpip install taf```- Test CLI```bashtaf```## AcknowledgementsThis project was made possible in part by the Institute of Museum and Library Services [(LG-246285-OLS-20)](https://www.imls.gov/grants/awarded/lg-246285-ols-20)</longdescription>
</pkgmetadata>