<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># book.io / fetchfox&gt; Collection of API services to fetch information from several blockchains.![](https://s2.coinmarketcap.com/static/img/coins/64x64/4030.png)![](https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png)![](https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png)![](https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png)## Supported Blockchains### Algorand```pythonimport osfrom fetchfox.blockchains import Algorandalgorand = Algorand(    nftexplorerapp_api_key=os.getenv(&quot;NFTEXPLORER_API_KEY&quot;),)# Brave New Worldcreator_address = &quot;6WII6ES4H6UW7G7T7RJX63CUNPKJEPEGQ3PTYVVU3JHJ652W34GCJV5OVY&quot;for asset in algorand.get_assets(creator_address):    print(asset)```#### Services* get_asset ([algonode.cloud](https://algonode.cloud))* get_assets ([algonode.cloud](https://algonode.cloud))* get_holdings ([algonode.cloud](https://algonode.cloud))* get_snapshot ([algonode.cloud](https://algonode.cloud))* get_campaigns ([book.io](https://book.io))* get_listings ([randgallery.com](https://randgallery.com) / [algoxnft.com](https://algoxnft.com))* get_floor ([randgallery.com](https://randgallery.com) / [algoxnft.com](https://algoxnft.com))* get_sales ([nftexplorer.app¹](https://nftexplorer.app))### Cardano```pythonimport osfrom fetchfox.blockchains import Cardanocardano = Cardano(    blockfrostio_project_id=os.getenv(&quot;BLOCKFROST_PROJECT_ID&quot;),)# Gutenberg Biblepolicy_id = &quot;477cec772adb1466b301fb8161f505aa66ed1ee8d69d3e7984256a43&quot;for asset in cardano.get_assets(policy_id):    print(asset)```#### Services* get_asset ([blockfrost.io²](https://blockfrost.io))* get_assets ([blockfrost.io²](https://blockfrost.io))* get_holdings ([blockfrost.io²](https://blockfrost.io))* get_campaigns ([book.io](https://book.io))* get_snapshot ([blockfrost.io²](https://blockfrost.io))* get_listings ([jpg.store](https://jpg.store))* get_floor ([jpg.store](https://jpg.store))* get_sales ([jpg.store](https://jpg.store))* get_ranks ([cnft.tools](https://cnft.tools))### EVM (Ethereum and Polygon)```pythonimport osfrom fetchfox.blockchains import Ethereum, Polygonethereum = Ethereum(    geckodriver_path=os.getenv(&quot;GECKODRIVER_PATH&quot;),    moralisio_api_key=os.getenv(&quot;MORALIS_API_KEY&quot;),    openseaio_api_key=os.getenv(&quot;OPENSEA_API_KEY&quot;),)polygon = Polygon(    geckodriver_path=os.getenv(&quot;GECKODRIVER_PATH&quot;),    moralisio_api_key=os.getenv(&quot;MORALIS_API_KEY&quot;),    openseaio_api_key=os.getenv(&quot;OPENSEA_API_KEY&quot;),)# Alice in Wonderlandcontract_address = &quot;0x919da7fef646226f88f70305201de392ff365059&quot;for asset in ethereum.get_assets(contract_address):    print(asset)# Art of Warcontract_address = &quot;0xb56010e0500e4f163758881603b8083996ae47ec&quot;for asset in polygon.get_assets(contract_address):    print(asset)```#### Services* get_asset ([moralis.io³](https://moralis.io))* get_assets ([moralis.io³](https://moralis.io))* get_holdings ([moralis.io³](https://moralis.io))* get_snapshot ([moralis.io³](https://moralis.io))* get_campaigns ([book.io](https://book.io))* get_listings ([opensea.io⁴](https://opensea.io))* get_floor ([opensea.io⁴](https://opensea.io))* get_sales ([opensea.io⁴](https://opensea.io))&gt; ¹ **nftexplorer.app** services require an [api key](https://www.nftexplorer.app/nftx-api).&gt; &gt; ² **blockfrost.io** services require a [project id](https://blockfrost.dev/docs/overview/plans-and-billing).&gt; &gt; ³ **moralis.io** services require an [api key](https://moralis.io/pricing).&gt; &gt; ⁴ **opensea.io** some services also require an [api key](https://docs.opensea.io/reference/api-keys). ---![fetch, the fox](https://i.imgur.com/fm6mqzS.png)&gt; fetch, the fox</longdescription>
</pkgmetadata>