<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Dutch Noun Pluralizer in PythonGenerates plural and singular nouns in a _very imperfect way_ using &lt;a href=&quot;https://github.com/MSeal/cython_hunspell&quot;&gt;CyHunspell&lt;/a&gt; and OpenTaal dictionaries and &lt;a href=&quot;https://github.com/OpenTaal/opentaal-wordlist&quot;&gt;word lists&lt;/a&gt;. Why imperfect? Because the Dutch language is full of exceptions.The algorithm is based on the document &lt;a href=&quot;https://sites.uclouvain.be/gramlink/Gramlink-NL/morfologie/pdf/m_nl_02_subst_03_meervoud.pdf&quot;&gt;&quot;Basismorfologie. Het meervoud in het Nederlands&quot; (Dutch)&lt;/a&gt; of the &lt;a href=&quot;https://uclouvain.be/en/index.html&quot;&gt;UniversitÃ© catholique de Louvain&lt;/a&gt;._Note: I'm a .NET developer that does Python in my free time. I'm **not** a linguist, I just work for a Dutch company. Hence: this **must** be a very imperfect way of doing this._ If you have good ideas, I welcome them, just open an issue.## InstallationInstall from PIP:```pip install dutch-pluralizer```**Note on Windows 10** &lt;br/&gt;&lt;a href=&quot;https://github.com/MSeal/cython_hunspell&quot;&gt;CyHunspell&lt;/a&gt; is used. To use this package on **Windows 10**, you might need to install &lt;a href=&quot;https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019&quot;&gt;Build Tools for Visual Studio 2019&lt;/a&gt; and choose the _Windows 10 C++ SDK_ option.**Note on other Linux installations**&lt;br/&gt;Please check &lt;a href=&quot;https://github.com/MSeal/cython_hunspell#non-python-dependencies&quot;&gt;how you can install Hunspell on Linux&lt;/a&gt; if you don't want build Hunspell.## CLI usageThe project can be used as a CLI tool:```usage: dutch_pluralizer [-h] [-p] [-s] [-pa] [-v] wordGenerates Dutch plural and singular nouns in a very imperfect way using Hunspell     dictionaries. Why imperfect? Because the Dutch language is full of exceptions.       positional arguments:  word                  The word.optional arguments:  -h, --help            show this help message and exit  -p, --pluralize       pluralizes the word.  -s, --singularize     singularizes the word.  -pa, --pluralize_advanced                        shows advanced pluralization output.  -v, --verbose         Shows an error message when a word could not be processed.   ```### APIThe API can be used like this:```pythonfrom dutch_pluralizer import pluralize, singularize# pluralize will return the result or Noneassert pluralize(&quot;kaas&quot;) == &quot;kazen&quot;assert pluralize(&quot;kazen&quot;) == None# singularize will return the result or Noneassert singularize(&quot;kazen&quot;) == &quot;kaas&quot;assert singularize(&quot;kaas&quot;) == None```Advanced pluralization will give you more options:```pythonfrom dutch_pluralizer import pluralize, pluralize_advanced, singularizeadv = pluralize_advanced(&quot;album&quot;)# the pluralassert adv.plural == 'albums'# what the algorithm (without Hunspell) created# is probably not correct, that's why Hunspell is# used on it. It is like a preprocessing:assert adv.algorithmic_plural == 'alba'# indicates that end result was found in Hunspelladv.hunspell_spelled = True# the plural was found by replacement of # 'a' to 'ums'assert adv.switched_ending_from == 'a'assert adv.switched_ending_to == 'ums'# suggestions given by Hunspell when the algorithmic# result was processed:assert adv.suggestions == ( 'Alba',                            'aba',                                    'balba',                            'albe',                            'alia',                            'alla',                            'alma',                            'alfa',                            'Elba')```Add custom words to the dictionary:```pythonfrom dutch_pluralizer import pluralize, singularizefrom dutch_pluralizer.speller import ensure_hunspell_nldef test_readme_example_3():    # default dictionary does not understand these words,    # as they are not Dutch    assert pluralize(&quot;fibulatie&quot;) == None    assert singularize(&quot;fibulaties&quot;) == None    # add the words to the dictionary    h = ensure_hunspell_nl()    h.add(&quot;fibulatie&quot;)    h.add(&quot;fibulaties&quot;)    # check again    assert pluralize(&quot;fibulatie&quot;, speller=h) == &quot;fibulaties&quot;    assert singularize(&quot;fibulaties&quot;, speller=h) == &quot;fibulatie&quot;```## Help!? The result is not correctI told you it was imperfect! There is stuff this package can and cannot do:- We cannot discover words that are not recognized by Hunspell- We can only process **nouns** (Dutch: zelfstandige naamwoorden)- We can only return a single result, but we know that the singular of _graven_ can be either _graaf_ or _graf_. We currently have no support for these use cases.- We can add words, just open up a ticket on &lt;a href=&quot;https://github.com/keescbakker/dutch-pluralizer-py/issues&quot;&gt;GitHub&lt;/a&gt;. Please make sure you provide some evidence on why the word should be added (like a VanDale.nl result).## DevelopmentIf you want to contribute to local development, please consult &lt;a href=&quot;https://github.com/KeesCBakker/dutch-pluralizer-py/blob/master/DEV.md&quot;&gt;the local development page&lt;/a&gt;.</longdescription>
</pkgmetadata>