<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># realnet## ArchitectureComing soon## PrerequisitesFor now, before attempting to configure, make sure that you have:1. a valid postgres database and an account that can manage creation and alteration of tables - you will need url, database name, username and password 2. a valid AWS SQS url, AWS S3 url and AWS key and secret that allow write access to them3. Replace each CHANGE_OTHERWISE_NO_SECURITY in your config/.env with a separate cryptographically secure hash - remember to always store this kind of information securelyoptional:4. A valid ChatGPT API Key## How to run on linux/windows from sourceThe realnet server needs to be configured and running. How to do that can be found in the readme.md for https://github.com/virtual-space/realnet/If you are on Windows, we suggest you use WSL2...- Clone out the repo```git clone https://github.com/virtual-space/realnet/realnet.git```- Go to the repo root folder ```cd realnet```- In the repo root folder create an .env file with the following content:```REALNET_SERVER_HOST='0.0.0.0'REALNET_SERVER_PORT='8080'#API KEYSREALNET_CHATGPT_API_KEY='sk-w32yourchatgptkeygoeshere'REALNET_CHATGPT_API_URL='https://api.openai.com/v1/chat/completions'# LocalREALNET_DB_USER='yourdbusername'REALNET_DB_HOST='localhost'REALNET_DB_PASS='CHANGE_OTHERWISE_NO_SECURITY'REALNET_DB_PORT='5432'REALNET_DB_NAME='realnet'REALNET_URI='http://localhost:8080'REALNET_REDIRECT_URI='http://localhost:4200/callback'REALNET_MOBILE_REDIRECT_URI='io.realnet.app:/oauth2redirect'REALNET_USERNAME='admin'REALNET_PASSWORD='CHANGE_OTHERWISE_NO_SECURITY'REALNET_EMAIL='admin@yourcompanydomain'REALNET_SQS_URL=yourawssqsurlREALNET_STORAGE_S3_BUCKET=yourrealnets3storagebucketnameREALNET_STORAGE_TYPE='s3'REALNET_STORAGE_S3_KEY=yourrealnets3storagekeyREALNET_STORAGE_S3_SECRET=yourrealnets3storagesecretREALNET_STORAGE_S3_REGION=yourrealnets3storageregion# REALNET_BASE64_ENCODE_DATA='True'REALNET_NAME='public'REALNET_DB_TYPE=postgresqlREALNET_APP_SECRET='CHANGE_OTHERWISE_NO_SECURITY'REALNET_USE_S3_UPLOAD_URL='True'REALNET_TOKEN='[generated by realnet auth token]'REALNET_CLIENT_KEY='[Retrieve by running command &quot;realnet server initialize&quot;]'REALNET_CLIENT_SECRET='[Retrieve by running command &quot;realnet server initialize&quot;]'REALNET_URL='[get from realnet server serve command or use 'https://realnet.io' for public]'```- run command```chmod 700 .env```- run the following commands:```python -m venv venv. ./venv/bin/activatepython setup.py installrealnet server initialize```- finally to start realnet and see available commands, run the following command:```realnet server start```- for further info about the commands, run the following command:```realnet -h```## How to build a Docker image and run it locally# TODO please validate and correct```docker build -t realnet:latest .docker run -d -p 8080:8080 realnet:latest```## How to install a pip package and run it locally# TODO please validate and correctMake sure that you have the .env file present with the folder with the right values (see other sections).Your python version should probably be 3.10.11 or laterTo upgrade python on ubuntu follow steps from https://computingforgeeks.com/how-to-install-python-on-ubuntu-linux-system/ and then if it is still not working try the following```curl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3.10sudo apt-get install python3.10-pip python3.10-distutils python3.10-dev python3.10-venvcurl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3.10```Once the pre-requisits are satisfied, you can run realnet in the following way:```python3 -m venv venv. ./venv/bin/activatepip install realnetpip install pyopenssl --upgraderealnet server initializerealnet server start```## How to run on kubernetes via dockerdeployment.yaml:```apiVersion: apps/v1kind: Deploymentmetadata:  name: realnetspec:  replicas: 1  selector:    matchLabels:      app: realnet  template:    metadata:      labels:        app: realnet    spec:      containers:        - name: realnet          image: 'l33tsys/realnet'          imagePullPolicy: &quot;Always&quot;          ports:            - containerPort: 8080          envFrom:            - configMapRef:                name: realnet-config```configmap.yaml```apiVersion: v1kind: ConfigMapmetadata:  name: realnet-config  labels:    app: realnetdata:  REALNET_SERVER_HOST: '0.0.0.0'  REALNET_SERVER_PORT: '8080'  # Local  REALNET_DB_USER: 'postgres'  REALNET_DB_HOST: 'localhost'  REALNET_DB_PASS: 'CHANGE_OTHERWISE_NO_SECURITY'  REALNET_DB_PORT: '5432'  REALNET_DB_NAME: 'postgres'  REALNET_URI: 'https://realnet.io'  REALNET_REDIRECT_URI: 'https://www.realscape.io/callback'  REALNET_MOBILE_REDIRECT_URI: 'io.realnet.app:/oauth2redirect'  REALNET_USERNAME: 'admin'  REALNET_PASSWORD: 'CHANGE_OTHERWISE_NO_SECURITY'  REALNET_EMAIL: 'admin@yourcompanydomain'  REALNET_SQS_URL: 'yourawssqsurl'  REALNET_STORAGE_S3_BUCKET: yourrealnets3storagebucketname  REALNET_STORAGE_TYPE: 's3'  REALNET_STORAGE_S3_KEY: yourrealnets3storagekey  REALNET_STORAGE_S3_SECRET: yourrealnets3storagesecret  REALNET_STORAGE_S3_REGION: yourrealnets3storageregion  REALNET_BASE64_ENCODE_DATA: 'True'  REALNET_NAME: 'public'  REALNET_DB_TYPE: postgresql  REALNET_APP_SECRET: 'CHANGE_OTHERWISE_NO_SECURITY'  REALNET_USE_S3_UPLOAD_URL: 'True'```service.yaml```apiVersion: v1kind: Servicemetadata:  name: realnet  annotations:    external-dns.alpha.kubernetes.io/hostname: yourcompanydomain    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: yourlbcerturl  labels:    app: realnetspec:  type: LoadBalancer  ports:  - protocol: TCP    port: 443    targetPort: 8080  selector:   app: realnet```# installation notes (python setup.py | pip install)TODO: Review if below still appliesYou may need to manually install some dependencies. The install command should tell you what is missing.The Cryptography module takes a long time to compile.Below is an incomplete list of installation instructions for dependencies. If you're not doing this on a fresh installation, you should run `python setup.py install` or `pip install realnet` to see what you need first.- Inside VENV```pip install --upgrade pippip install setuptools-rust```- Outside VENVpostgreSQL (pg_config is missing)```sudo sh -c 'echo &quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&quot; &gt; /etc/apt/sources.list.d/pgdg.list'wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -sudo apt-get updatesudo apt-get -y install postgresql```c/c++ compilers (gcc/g++ is missing)```sudo apt updatesudo apt install build-essential```Optional Man pages```sudo apt-get install manpages-dev```To test the C &amp; C++ compiler installations run these commands:```gcc --versiong++ --version```bluetooth dev tools (bluetooth/bluetooth.h is missing)```sudo apt-get install libbluetooth-dev```</longdescription>
</pkgmetadata>