<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![python version](https://img.shields.io/pypi/pyversions/fastapi_template?style=for-the-badge) [![version](https://img.shields.io/pypi/v/fastapi_template?style=for-the-badge)](https://pypi.org/project/fastapi-template/)[![](https://img.shields.io/pypi/dm/fastapi_template?style=for-the-badge)](https://pypi.org/project/fastapi-template/)&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/s3rius/FastAPI-template/master/images/logo.png&quot; width=700&gt;&lt;div&gt;&lt;i&gt;Flexible general-purpose template for FastAPI.&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;## Usage‚ö†Ô∏è [Git](https://git-scm.com/downloads), [Python](https://www.python.org/) and [Poetry](https://python-poetry.org/) must be installed and accessible ‚ö†Ô∏èPoetry version must be greater or equal than 1.1.8. Otherwise it won't be able to install SQLAlchemy.&lt;div align=&quot;center&quot;&gt; &lt;a href=&quot;https://asciinema.org/a/ig0oi0fOq1hxqnW5X49XaaHIT&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://asciinema.org/a/ig0oi0fOq1hxqnW5X49XaaHIT.svg&quot; /&gt;&lt;/a&gt;  &lt;p&gt;Templator in action&lt;/p&gt;&lt;/div&gt;You can install it directly from pypi with pip.```bashpython3 -m pip install fastapi_templatepython3 -m fastapi_template# or fastapi_template# Answer all the questions# üç™ Enjoy your new project üç™cd new_projectdocker-compose -f deploy/docker-compose.yml --project-directory . builddocker-compose -f deploy/docker-compose.yml --project-directory . up --build```If you want to install it from sources, try this:```shellpython3 -m pip install poetrypython3 -m pip install .python3 -m fastapi_template```Also, you can use it with docker.```bashdocker run --rm -it -v &quot;$(pwd):/projects&quot; s3rius/fastapi_template```## FeaturesOne of the coolest features is that this project is extremely configurable.You can choose between different databases and even ORMs, oryou can even generate a project without a database!Currently SQLAlchemy 2.0, TortoiseORM, Piccolo and Ormar are supported.This project can run as TUI or CLI and has excellent code documentation.Generator features:- Pydantic V2 (Where it's possible. Some libs doesn't have support);- You can choose between GraphQL and REST api;- Uvicorn and gunicorn;- Different databases support;- Different ORMs support;- Optional migrations for each ORM except raw drivers;- Optional redis support;- Optional rabbitmq support;- different CI\CD;- Optional Kubernetes config generation;- Optional Demo routers and models (This helps you to see how project is structured);- Pre-commit integration;- Generated tests with almost 90% coverage;- Tests for the generator itself;- Optional Prometheus integration;- Optional Sentry integration;- Optional Loguru logger;- Optional Opentelemetry integration.- Optional taskiq integration.This project can handle arguments passed through command line.```shell$ python -m fastapi_template --helpUsage: fastapi_template [OPTIONS]Options:  -n, --name TEXT                 Name of your awesome project  -V, --version                   Prints current version  --force                         Owerrite directory if it exists  --quite                         Do not ask for features during generation  --api-type [rest|graphql]       Select API type for your application  --db [none|sqlite|mysql|postgresql]                                  Select a database for your app  --orm [none|ormar|sqlalchemy|tortoise|psycopg|piccolo]                                  Choose Object‚ÄìRelational Mapper lib  --ci [none|gitlab_ci|github]    Select a CI for your app  --redis                         Add redis support  --rabbit                        Add RabbitMQ support  --taskiq                        Add Taskiq support  --migrations                    Add Migrations  --kube                          Add kubernetes configs  --dummy                         Add dummy model  --routers                       Add example routers  --swagger                       Add self hosted swagger  --prometheus                    Add prometheus compatible metrics  --sentry                        Add sentry integration  --loguru                        Add loguru logger  --opentelemetry                 Add opentelemetry integration  --traefik                       Adds traefik labels to docker container  --kafka                         Add Kafka support  --gunicorn                      Add gunicorn server  --help                          Show this message and exit.```</longdescription>
</pkgmetadata>