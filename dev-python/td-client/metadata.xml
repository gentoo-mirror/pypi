<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Treasure Data API library for Python====================================.. image:: https://github.com/treasure-data/td-client-python/workflows/Python%20testing/badge.svg   :target: https://github.com/treasure-data/td-client-python/actions   :alt: Build Status on GitHub ACtions.. image:: https://ci.appveyor.com/api/projects/status/eol91l1ag50xee9m/branch/master?svg=true   :target: https://ci.appveyor.com/project/treasure-data/td-client-python/branch/master   :alt: Build status.. image:: https://coveralls.io/repos/treasure-data/td-client-python/badge.svg   :target: https://coveralls.io/r/treasure-data/td-client-python   :alt: Coverage Status.. image:: https://badge.fury.io/py/td-client.svg   :target: http://badge.fury.io/py/td-client   :alt: PyPI versionTreasure Data API library for PythonRequirements------------``td-client`` supports the following versions of Python.* Python 3.5+* PyPyInstall-------You can install the releases from `PyPI &lt;https://pypi.python.org/&gt;`_... code-block:: sh   $ pip install td-clientIt'd be better to install `certifi &lt;https://pypi.python.org/pypi/certifi&gt;`_ to enable SSL certificate verification... code-block:: sh   $ pip install certifiExamples--------Please see also the examples at `Treasure Data Documentation &lt;http://docs.treasuredata.com/articles/rest-api-python-client&gt;`_.The td-client documentation is hosted at https://tdclient.readthedocs.io/,or you can go directly to the`API documentation &lt;https://tdclient.readthedocs.io/en/latest/api/index.html&gt;`_.For information on the parameters that may be used when reading particulartypes of data, see `File import parameters`_... _`file import parameters`:   https://tdclient.readthedocs.io/en/latest/api/file_import_paremeters.htmlListing jobs^^^^^^^^^^^^Treasure Data API key will be read from environment variable ``TD_API_KEY``\ , if none is given via ``apikey=`` argument passed to ``tdclient.Client``.Treasure Data API endpoint ``https://api.treasuredata.com`` is used by default. You can override this with environment variable ``TD_API_SERVER``\ , which in turn can be overridden via ``endpoint=`` argument passed to ``tdclient.Client``. List of available Treasure Data sites and corresponding API endpoints can be found `here &lt;https://support.treasuredata.com/hc/en-us/articles/360001474288-Sites-and-Endpoints&gt;`_... code-block:: python   import tdclient   with tdclient.Client() as td:       for job in td.jobs():           print(job.job_id)Running jobs^^^^^^^^^^^^Running jobs on Treasure Data... code-block:: python   import tdclient   with tdclient.Client() as td:       job = td.query(&quot;sample_datasets&quot;, &quot;SELECT COUNT(1) FROM www_access&quot;, type=&quot;hive&quot;)       job.wait()       for row in job.result():           print(repr(row))Running jobs via DBAPI2^^^^^^^^^^^^^^^^^^^^^^^td-client-python implements `PEP 0249 &lt;https://www.python.org/dev/peps/pep-0249/&gt;`_ Python Database API v2.0.You can use td-client-python with external libraries which supports Database API such like `pandas &lt;http://pandas.pydata.org/&gt;`_... code-block:: python   import pandas   import tdclient   def on_waiting(cursor):       print(cursor.job_status())   with tdclient.connect(db=&quot;sample_datasets&quot;, type=&quot;presto&quot;, wait_callback=on_waiting) as td:       data = pandas.read_sql(&quot;SELECT symbol, COUNT(1) AS c FROM nasdaq GROUP BY symbol&quot;, td)       print(repr(data))We offer another package for pandas named `pytd &lt;https://github.com/treasure-data/pytd&gt;`_ with some advanced features.You may prefer it if you need to do complicated things, such like exporting result data to Treasure Data, printing job'sprogress during long execution, etc.Importing data^^^^^^^^^^^^^^Importing data into Treasure Data in streaming manner, as similar as `fluentd &lt;http://www.fluentd.org/&gt;`_ is doing... code-block:: python   import sys   import tdclient   with tdclient.Client() as td:       for file_name in sys.argv[:1]:           td.import_file(&quot;mydb&quot;, &quot;mytbl&quot;, &quot;csv&quot;, file_name).. Warning::   Importing data in streaming manner requires certain amount of time to be ready to query since schema update will be   executed with delay.Bulk import^^^^^^^^^^^Importing data into Treasure Data in batch manner... code-block:: python   import sys   import tdclient   import uuid   import warnings   if len(sys.argv) &lt;= 1:       sys.exit(0)   with tdclient.Client() as td:       session_name = &quot;session-{}&quot;.format(uuid.uuid1())       bulk_import = td.create_bulk_import(session_name, &quot;mydb&quot;, &quot;mytbl&quot;)       try:           for file_name in sys.argv[1:]:               part_name = &quot;part-{}&quot;.format(file_name)               bulk_import.upload_file(part_name, &quot;json&quot;, file_name)           bulk_import.freeze()       except:           bulk_import.delete()           raise       bulk_import.perform(wait=True)       if 0 &lt; bulk_import.error_records:           warnings.warn(&quot;detected {} error records.&quot;.format(bulk_import.error_records))       if 0 &lt; bulk_import.valid_records:           print(&quot;imported {} records.&quot;.format(bulk_import.valid_records))       else:           raise(RuntimeError(&quot;no records have been imported: {}&quot;.format(bulk_import.name)))       bulk_import.commit(wait=True)       bulk_import.delete()If you want to import data as `msgpack &lt;https://msgpack.org/&gt;`_ format, you can write as follows:.. code-block:: python   import io   import time   import uuid   import warnings   import tdclient   t1 = int(time.time())   l1 = [{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;time&quot;: t1}, {&quot;a&quot;: 3, &quot;b&quot;: 9, &quot;time&quot;: t1}]   with tdclient.Client() as td:       session_name = &quot;session-{}&quot;.format(uuid.uuid1())       bulk_import = td.create_bulk_import(session_name, &quot;mydb&quot;, &quot;mytbl&quot;)       try:           _bytes = tdclient.util.create_msgpack(l1)           bulk_import.upload_file(&quot;part&quot;, &quot;msgpack&quot;, io.BytesIO(_bytes))           bulk_import.freeze()       except:           bulk_import.delete()           raise       bulk_import.perform(wait=True)       # same as the above exampleChanging how CSV and TSV columns are read~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~The ``td-client`` package will generally make sensible choices on how to readthe columns in CSV and TSV data, but sometimes the user needs to override thedefault mechanism. This can be done using the optional `file importparameters`_ ``dtypes`` and ``converters``.For instance, consider CSV data that starts with the following records::  time,col1,col2,col3  1575454204,a,0001,a;b;c  1575454204,b,0002,d;e;fIf that data is read using the defaults, it will produce values that looklike:.. code:: python  1575454204, &quot;a&quot;, 1, &quot;a;b;c&quot;  1575454204, &quot;b&quot;, 2, &quot;d;e;f&quot;that is, an integer, a string, an integer and another string.If the user wants to keep the leading zeroes in ``col2``, then they canspecify the column datatype as string. For instance, using``bulk_import.upload_file`` to read data from ``input_data``:.. code:: python    bulk_import.upload_file(        &quot;part&quot;, &quot;msgpack&quot;, input_data,        dtypes={&quot;col2&quot;: &quot;str&quot;},    )which would produce:.. code:: python  1575454204, &quot;a&quot;, &quot;0001&quot;, &quot;a;b;c&quot;  1575454204, &quot;b&quot;, &quot;0002&quot;, &quot;d;e;f&quot;If they also wanted to treat ``col3`` as a sequence of strings, separated bysemicolons, then they could specify a function to process ``col3``:.. code:: python    bulk_import.upload_file(        &quot;part&quot;, &quot;msgpack&quot;, input_data,        dtypes={&quot;col2&quot;: &quot;str&quot;},        converters={&quot;col3&quot;, lambda x: x.split(&quot;;&quot;)},    )which would produce:.. code:: python  1575454204, &quot;a&quot;, &quot;0001&quot;, [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]  1575454204, &quot;b&quot;, &quot;0002&quot;, [&quot;d&quot;, &quot;e&quot;, &quot;f&quot;]Development-----------Running tests^^^^^^^^^^^^^Run tests... code-block:: sh   $ python setup.py testRunning tests (tox)^^^^^^^^^^^^^^^^^^^You can run tests against all supported Python versions. I'd recommend you to install `pyenv &lt;https://github.com/yyuu/pyenv&gt;`_ to manage Pythons... code-block:: sh   $ pyenv shell system   $ for version in $(cat .python-version); do [ -d &quot;$(pyenv root)/versions/${version}&quot; ] || pyenv install &quot;${version}&quot;; done   $ pyenv shell --unsetInstall `tox &lt;https://pypi.python.org/pypi/tox&gt;`_... code-block:: sh   $ pip install toxThen, run ``tox``... code-block:: sh   $ toxRelease^^^^^^^Release to PyPI. Ensure you installed twine... code-block:: sh   $ python setup.py bdist_wheel sdist   $ twine upload dist/*License-------Apache Software License, Version 2.0</longdescription>
</pkgmetadata>