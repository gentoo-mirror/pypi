<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># FlairaioAsynchronous Python library for Flair's API using **OAuth 2.0 Authentication**.This package provides an API client for the [Flair API](https://documenter.getpostman.com/view/5353571/TzsbKTAG#intro) to be used with **OAuth 2.0** credentials generated by Flair. For API access, please [contact Flair Support](https://support.flair.co/hc/en-us/requests/new)with the email address associated with your registered Flair account.## Installation### PyPI```pip3 install flairaio```This package depends on [aiohttp](https://docs.aiohttp.org/en/stable/) and requires `Python 3.7` or greater.## Usage### Creating Client```pythonimport asynciofrom flairaio import FlairClientfrom aiohttp import ClientSessionasync def main():    async with ClientSession() as session:            # Create a client using OAuth 2.0 client_id and client_secret        client = FlairClient('client_id', 'client_secret', session)                ###################################################################################        Examples within the examples section utilize the FlairClient instance created above        ###################################################################################                loop = asyncio.get_event_loop()loop.run_until_complete(main())```## Examples&amp;nbsp; ### Retrieving objects of interest___###&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Users&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Users&quot; and &quot;User&quot; Data Classes# Retrieve all users.users = await client.get_users()# Retrieve a specific user. Note: user_id is the specific user's ID as a string.user = await client.get_user(user_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Structures&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Structures&quot; and &quot;Structure&quot; Data Classes# Retrieve all structures.structures = await client.get_structures()# Retrieve a specific structure. Note: structure_id is the specific structure's ID as a string.structure = await client.get_structure(structure_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Rooms&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Rooms&quot; and &quot;Room&quot; Data Classes# Retrieve all rooms.rooms = await client.get_rooms()# Retrieve a specific room. Note: room_id is the specific room's ID as a string.room = await client.get_room(room_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Pucks&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Pucks&quot; and &quot;Puck&quot; Data Classes# Retrieve all pucks.pucks = await client.get_pucks()# Retrieve a specific puck. Note: puck_id is the specific puck's ID as a string.puck = await client.get_puck(puck_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Vents&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Vents&quot; and &quot;Vent&quot; Data Classes# Retrieve all vents.vents = await client.get_vents()# Retrieve a specific vent. Note: vent_id is the specific vent's ID as a string.vent = await client.get_vent(vent_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Thermostats&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Thermostats&quot; and &quot;Thermostat&quot; Data Classes# Retrieve all thermostats.thermostats = await client.get_thermostats()# Retrieve a specific thermostat. Note: thermostat_id is the specific thermostat's ID as a string.thermostat = await client.get_thermostat(thermostat_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;HVAC Units&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;HVACUnits&quot; and &quot;HVACUnit&quot; Data Classes# Retrieve all HVAC units.hvac_units = await client.get_hvac_units()# Retrieve a specific HVAC unit. Note: hvac_id is the specific HVAC unit's ID as a string.hvac_unit = await client.get_hvac_unit(hvac_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Zones&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;Zones&quot; and &quot;Zone&quot; Data Classes# Retrieve all zones.zones = await client.get_zones()# Retrieve a specific zone. Note: zone_id is the specific zone's ID as a string.zone = await client.get_zone(zone_id='1')```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Getting all Flair Data&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# See model.py for details regarding &quot;FlairData&quot; Data Class# The resulting FlairData instance will contain an instance of &quot;Users&quot; and an instance of &quot;Structures&quot; which # contains instances of &quot;Structure&quot; created for every structure associated with your account. Within each Structure,# you will find its id, attributes, relationships, as well as all rooms, pucks, vents, thermostats, HVAC units, and zones# associated with said structure - each of these also contains their id, attributes, and relationships. As a bonus, the# get_flair_data method also fetches the current reading endpoints for pucks and vents.# Retrieve all flair data.flair_data = await client.get_flair_data()```&lt;/details&gt;&amp;nbsp;### Retrieving Related Items___#### *** See Related Endpoints for available related links.###&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Getting related data&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# You need to create an instance of the object of interest prior to retrieving its related item(s).# Create a Puck instance for a specific puck. Note: puck_id is the specific puck's ID as a string.puck = await client.get_puck(puck_id='1')# Retrieve &quot;current-reading&quot; for puckcurrent_reading = await client.get_related(flair_object=puck, related_type='current_reading')```&lt;/details&gt;&amp;nbsp;### Creating___###&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Creating New Room&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# Content of attributes and relationships dictionaries will depend on what is being created.# Create attributes dictionary for new room.attributes = {    &quot;name&quot;: &quot;My New Flair Room&quot;}# Creat new room &quot;My New Flair Room&quot;await client.create(resource_type='rooms', attributes=attributes, relationships={})```&lt;/details&gt;&amp;nbsp;### Deleting___###&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Deleting Room&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# Deleting a room with an id of '1234'await client.delete(resource_type='rooms', item_id='1234')```&lt;/details&gt;&amp;nbsp;### Updating___###&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Opening Vent&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;```python# Content of attributes and relationships dictionaries will depend on what is being updated.# The example below is fully opening a specific Flair vent# create attributes dictionaryattributes = {    &quot;percent-open&quot;: 100}# Fully open the ventawait client.update(resource_type='vents', item_id='1', attributes=attributes, relationships={})```&lt;/details&gt;&amp;nbsp;&lt;details&gt;  &lt;summary&gt; &lt;b&gt;Setting HVAC Unit Mode&lt;/b&gt; (&lt;i&gt;click to expand&lt;/i&gt;)&lt;/summary&gt;  &lt;!----&gt;### Note:#### * If structure is set to Manual mode: HVAC mode, temp, swing, and fan speed can only be set when the unit is powered on.#### * If structure is set to Auto mode: Only swing and fan speed can be set.#### * Fan speed: if structure is set to Manual mode, changing fan speed requires updating the attribute `&quot;fan-speed&quot;`. Changing fan speed with structure in Auto mode requires updating the attribute `&quot;default-fan-speed&quot;`.#### * Swing: If structure is set to Manual mode, changing swing requires updating the attribute `&quot;swing&quot;`. Changing swing with structure in Auto mode requires updating the attribute `&quot;swing-auto&quot;`.#```python# Content of attributes and relationships dictionaries will depend on what is being updated.# The example below is setting the HVAC Unit mode to Cool.# create attributes dictionaryattributes = {    &quot;mode&quot;: 'Cool'}# Update HVAC unit's mode to Coolawait client.update(resource_type='hvac-units', item_id='1', attributes=attributes, relationships={})```&lt;/details&gt;&amp;nbsp;## Available Related Endpoints&lt;div align=&quot;center&quot;&gt;&lt;table&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;th&gt;Resource Type&lt;/th&gt;      &lt;th align=&quot;center&quot;&gt;Related&lt;/th&gt;    &lt;/tr&gt;       &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;HVAC Unit&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;puck&lt;/li&gt;          &lt;li&gt;current-state&lt;/li&gt;          &lt;li&gt;hvac-unit-states&lt;/li&gt;          &lt;li&gt;structure&lt;/li&gt;          &lt;li&gt;zone&lt;/li&gt;          &lt;li&gt;plug&lt;/li&gt;          &lt;li&gt;integration-structure&lt;/li&gt;          &lt;li&gt;make&lt;/li&gt;          &lt;li&gt;room&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;Puck&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;room&lt;/li&gt;          &lt;li&gt;hardware-version&lt;/li&gt;          &lt;li&gt;hvac-units&lt;/li&gt;          &lt;li&gt;puck-states&lt;/li&gt;          &lt;li&gt;closest-vents&lt;/li&gt;          &lt;li&gt;beacon-sightings&lt;/li&gt;          &lt;li&gt;current-reading&lt;/li&gt;          &lt;li&gt;structure&lt;/li&gt;          &lt;li&gt;sensor-readings&lt;/li&gt;          &lt;li&gt;current-state&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;       &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;Room&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;remote-sensors&lt;/li&gt;          &lt;li&gt;thermostat&lt;/li&gt;          &lt;li&gt;structure&lt;/li&gt;          &lt;li&gt;occupants&lt;/li&gt;          &lt;li&gt;pucks&lt;/li&gt;          &lt;li&gt;vents&lt;/li&gt;          &lt;li&gt;hvac-units&lt;/li&gt;          &lt;li&gt;room-states&lt;/li&gt;          &lt;li&gt;bridges&lt;/li&gt;          &lt;li&gt;current-conclusions&lt;/li&gt;          &lt;li&gt;puck-apps&lt;/li&gt;          &lt;li&gt;zones&lt;/li&gt;          &lt;li&gt;plugs&lt;/li&gt;          &lt;li&gt;occupancy-conclusions&lt;/li&gt;          &lt;li&gt;room-auto-conclusions&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;Structure&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;admin-users&lt;/li&gt;          &lt;li&gt;release-approvals&lt;/li&gt;          &lt;li&gt;default-zone&lt;/li&gt;          &lt;li&gt;remote-sensors&lt;/li&gt;          &lt;li&gt;schedules&lt;/li&gt;          &lt;li&gt;hvac-units&lt;/li&gt;          &lt;li&gt;demand-response-program-enrollments&lt;/li&gt;          &lt;li&gt;weather-readings&lt;/li&gt;          &lt;li&gt;hvac-unit-groups&lt;/li&gt;          &lt;li&gt;beacon-sightings&lt;/li&gt;          &lt;li&gt;plugs&lt;/li&gt;          &lt;li&gt;alerts&lt;/li&gt;          &lt;li&gt;structure-states&lt;/li&gt;          &lt;li&gt;current-conclusions&lt;/li&gt;          &lt;li&gt;rooms&lt;/li&gt;          &lt;li&gt;geofence-events&lt;/li&gt;          &lt;li&gt;pucks&lt;/li&gt;          &lt;li&gt;releases&lt;/li&gt;          &lt;li&gt;bridges&lt;/li&gt;          &lt;li&gt;licenses&lt;/li&gt;          &lt;li&gt;occupancy-conclusions&lt;/li&gt;          &lt;li&gt;thermostats&lt;/li&gt;          &lt;li&gt;integration-structures&lt;/li&gt;          &lt;li&gt;viewer-users&lt;/li&gt;          &lt;li&gt;supported-device-brands&lt;/li&gt;          &lt;li&gt;geofences&lt;/li&gt;          &lt;li&gt;current-weather&lt;/li&gt;          &lt;li&gt;active-schedule&lt;/li&gt;          &lt;li&gt;current-state&lt;/li&gt;          &lt;li&gt;ui-notifications&lt;/li&gt;          &lt;li&gt;zones&lt;/li&gt;          &lt;li&gt;invitations&lt;/li&gt;          &lt;li&gt;vents&lt;/li&gt;          &lt;li&gt;plug-invites&lt;/li&gt;          &lt;li&gt;editor-users&lt;/li&gt;          &lt;li&gt;devices&lt;/li&gt;          &lt;li&gt;puck-oauth-apps&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;       &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;Thermostat&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;current-state&lt;/li&gt;          &lt;li&gt;integration-structure&lt;/li&gt;          &lt;li&gt;zone&lt;/li&gt;          &lt;li&gt;remote-sensor&lt;/li&gt;          &lt;li&gt;thermostat-states&lt;/li&gt;          &lt;li&gt;structure&lt;/li&gt;          &lt;li&gt;room&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;User&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;networks&lt;/li&gt;          &lt;li&gt;unfinished-setup-structure&lt;/li&gt;          &lt;li&gt;integrations&lt;/li&gt;          &lt;li&gt;ui-notifications&lt;/li&gt;          &lt;li&gt;accessible-structures&lt;/li&gt;          &lt;li&gt;editable-structures&lt;/li&gt;          &lt;li&gt;received-invitations&lt;/li&gt;          &lt;li&gt;default-structure&lt;/li&gt;          &lt;li&gt;primary-device&lt;/li&gt;          &lt;li&gt;structures&lt;/li&gt;          &lt;li&gt;adminable-structures&lt;/li&gt;          &lt;li&gt;viewable-structures&lt;/li&gt;          &lt;li&gt;devices&lt;/li&gt;          &lt;li&gt;puck-oauth-apps&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;       &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;Vent&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;current-reading&lt;/li&gt;          &lt;li&gt;current-state&lt;/li&gt;          &lt;li&gt;sensor-readings&lt;/li&gt;          &lt;li&gt;closest-puck&lt;/li&gt;          &lt;li&gt;room&lt;/li&gt;          &lt;li&gt;vent-states&lt;/li&gt;          &lt;li&gt;structure&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;       &lt;tr&gt;      &lt;td align=&quot;center&quot;&gt;Zone&lt;/td&gt;      &lt;td&gt;        &lt;ul&gt;          &lt;li&gt;rooms&lt;/li&gt;          &lt;li&gt;zone-auto-conclusions&lt;/li&gt;          &lt;li&gt;structure&lt;/li&gt;          &lt;li&gt;thermostat&lt;/li&gt;          &lt;li&gt;hvac-unit&lt;/li&gt;        &lt;/ul&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</longdescription>
</pkgmetadata>