<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>A PyPI time machine-------------------Do you wish you could just install packages with pip as if you were atsome fixed date in the past? If so, the PyPI time machine is for you!**Disclaimer:** this is alpha-quality software - for now it is a quick hack,but I'd love to make this more robust/usable with your help!Installing~~~~~~~~~~To install::   pip install pypi-timemachineUsing~~~~~Once installed, you can run a PyPI server with::   pypi-timemachine 2014-02-03or if you need to specify a precise time (in UTC)::   pypi-timemachine 2014-02-03T12:33:02This will start up a Flask app, and will print out a line such as::   Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)You can then call pip with::   pip install --index-url http://127.0.0.1:5000/ astropyand this will then install the requested packages and all dependencies,ignoring any releases after the cutoff date specified above.Caveats/warnings~~~~~~~~~~~~~~~~If a package is already installed, pip will not try installing it again.This means that if e.g.Â you try and run pip as described above, but thepackage you are trying to install (or any of its dependencies) isalready installed, no matter how recent the version, it will not beinstalled again. Therefore, I recommend using pip with the custom indexURL inside a clean environment (but you can run the ``pypi-timemachine``command inside your regular environment.)</longdescription>
</pkgmetadata>