<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=====freud=====|Citing freud||PyPI||conda-forge||ReadTheDocs||Binder||GitHub-Stars|.. |Citing freud| image:: https://img.shields.io/badge/cite-freud-informational.svg   :target: https://freud.readthedocs.io/en/stable/reference/citing.html.. |PyPI| image:: https://img.shields.io/pypi/v/freud-analysis.svg   :target: https://pypi.org/project/freud-analysis/.. |conda-forge| image:: https://img.shields.io/conda/vn/conda-forge/freud.svg   :target: https://anaconda.org/conda-forge/freud.. |ReadTheDocs| image:: https://readthedocs.org/projects/freud/badge/?version=latest   :target: https://freud.readthedocs.io/en/latest/?badge=latest.. |Binder| image:: https://mybinder.org/badge_logo.svg   :target: https://mybinder.org/v2/gh/glotzerlab/freud-examples/master?filepath=index.ipynb.. |GitHub-Stars| image:: https://img.shields.io/github/stars/glotzerlab/freud.svg?style=social   :target: https://github.com/glotzerlab/freudOverview========The **freud** Python library provides a simple, flexible, powerful set of toolsfor analyzing trajectories obtained from molecular dynamics or Monte Carlosimulations. High performance, parallelized C++ is used to compute standardtools such as radial distribution functions, correlation functions, orderparameters, and clusters, as well as original analysis methods includingpotentials of mean force and torque (PMFTs) and local environment matching. The**freud** library supports`many input formats &lt;https://freud.readthedocs.io/en/stable/topics/datainputs.html&gt;`__and outputs `NumPy arrays &lt;https://numpy.org/&gt;`__, enabling integrationwith the scientific Python ecosystem for many typical materials scienceworkflows.Resources=========- `Reference Documentation &lt;https://freud.readthedocs.io/&gt;`__: Examples, tutorials, topic guides, and package Python APIs.- `Installation Guide &lt;https://freud.readthedocs.io/en/stable/gettingstarted/installation.html&gt;`__: Instructions for installing and compiling **freud**.- `freud-users Google Group &lt;https://groups.google.com/d/forum/freud-users&gt;`__: Ask questions to the **freud** user community.- `GitHub repository &lt;https://github.com/glotzerlab/freud&gt;`__: Download the **freud** source code.- `Issue tracker &lt;https://github.com/glotzerlab/freud/issues&gt;`__: Report issues or request features.Related Tools=============- `HOOMD-blue &lt;https://hoomd-blue.readthedocs.io/&gt;`__: Perform MD / MC simulations that can be analyzed with **freud**.- `signac &lt;https://signac.io/&gt;`__: Manage your workflow with **signac**.Citation========When using **freud** to process data for publication, please `use this citation&lt;https://freud.readthedocs.io/en/stable/reference/citing.html&gt;`__.Installation============The easiest ways to install **freud** are using pip:.. code:: bash   pip install freud-analysisor conda:.. code:: bash   conda install -c conda-forge freud**freud** is also available via containers for `Docker&lt;https://hub.docker.com/r/glotzerlab/software&gt;`__ or `Singularity&lt;https://glotzerlab.engin.umich.edu/downloads/glotzerlab&gt;`__.  If you need more detailedinformation or wish to install **freud** from source, please refer to the`Installation Guide&lt;https://freud.readthedocs.io/en/stable/gettingstarted/installation.html&gt;`__ to compile**freud** from source.Examples========The **freud** library is called using Python scripts. Many core features are`demonstrated in the freud documentation&lt;https://freud.readthedocs.io/en/stable/examples.html&gt;`_. The examples come inthe form of Jupyter notebooks, which can also be downloaded from the `freudexamples repository &lt;https://github.com/glotzerlab/freud-examples&gt;`_ or`launched interactively on Binder&lt;https://mybinder.org/v2/gh/glotzerlab/freud-examples/master?filepath=index.ipynb&gt;`_.Below is a sample script that computes the radial distribution function for asimulation run with `HOOMD-blue &lt;https://hoomd-blue.readthedocs.io/&gt;`__ andsaved into a `GSD file &lt;https://gsd.readthedocs.io/&gt;`_... code:: python   import freud   import gsd.hoomd   # Create a freud compute object (RDF is the canonical example)   rdf = freud.density.RDF(bins=50, r_max=5)   # Load a GSD trajectory (see docs for other formats)   traj = gsd.hoomd.open('trajectory.gsd', 'rb')   for frame in traj:       rdf.compute(system=frame, reset=False)   # Get bin centers, RDF data from attributes   r = rdf.bin_centers   y = rdf.rdfSupport and Contribution========================Please visit our repository on `GitHub &lt;https://github.com/glotzerlab/freud&gt;`__ for the library source code.Any issues or bugs may be reported at our `issue tracker &lt;https://github.com/glotzerlab/freud/issues&gt;`__, while questions and discussion can be directed to our `user forum &lt;https://groups.google.com/forum/#!forum/freud-users&gt;`__.All contributions to **freud** are welcomed via pull requests!</longdescription>
</pkgmetadata>