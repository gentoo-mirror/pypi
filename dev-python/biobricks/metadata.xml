<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BioBricks&lt;!-- badges: start --&gt;[![codecov](https://codecov.io/gh/biobricks-ai/biobricks/branch/master/graph/badge.svg?token=J041MF0JKG)](https://codecov.io/gh/biobricks-ai/biobricks-r)[![Lifecycle: experimental](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://lifecycle.r-lib.org/articles/stages.html#experimental)&lt;!-- badges: end --&gt;BioBricks makes loading data from biological datasets easy.```bashpip install biobricks```# initializeTo get started configure biobricks with a path for bricks and a biobricks.ai token:```biobricks configure&gt; Choose path to store bricks: &lt;input a local path&gt;&gt; Input a token from biobrick.ai/token: &lt;this is your access token&gt;```# Pull BricksTo download a brick and save it locally in your library use `bb.pull`. An example using the Tox21 dataset:  ```pythonimport biobricks as bbbb.install('tox21') # save the brick to the brick library and download it's resourcestox21 = bb.load('tox21') # load a SimpleNamespace with all the brick tables# List the resources in the brickfor tablename in sorted(list(vars(tox21).keys())):    print(tablename)    tox21.tox21_ache_p4.read().to_pandas() # get a pyarrow Table and convert to pandas dataframe```To list the bricks currently available visit [github.com/biobricks-ai](https://github.com/biobricks-ai)</longdescription>
</pkgmetadata>