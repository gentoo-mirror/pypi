<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># By Investors, For Investors.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/61618641/120909011-98f8a180-c670-11eb-8844-2d423ba3fa9c.png&quot;/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;  ![](https://img.shields.io/badge/Downloads-101k-brightgreen)![](https://img.shields.io/badge/license-MIT-orange)![](https://img.shields.io/badge/version-2.0.1-blueviolet)![](https://img.shields.io/badge/language-pythonüêç-blue)![](https://img.shields.io/badge/activity-9.7/10-ff69b4)![](https://img.shields.io/badge/Open%20source-üíú-white)[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1NqTkkP2u1p1g8W8erU-Y-rSSVbPUDvq2?usp=sharing)   &lt;/div&gt; &lt;br&gt;Empyrial is a Python-based **open-source quantitative investment** library dedicated to **financial institutions** and **retail investors**, officially released in March 2021. Already used by **thousands of people working in the finance industry**, Empyrial aims to become an all-in-one platform for **portfolio management**, **analysis**, and **optimization**.Empyrial **empowers portfolio management** by bringing the best of **performance and risk analysis** in an **easy-to-understand**, **flexible** and **powerful framework**.With Empyrial, you can easily analyze security or a portfolio in order to **get the best insights from it**.&lt;br&gt;&lt;br&gt;&lt;div align=&quot;center&quot;&gt;  | Table of Contents üìñ | | --                     | 1. [Installation](#installation) | | 2. [Features](#features) | | 3. [Documentation](#documentation) | | 4. [Usage example](#usage) || 5. [Download the tearsheet](#download-the-tearsheet) || 6. [Contribution and Issues](#contribution-and-issues) | | 7. [Contributors](#contributors) || 8. [Contact](#contact) || 9. [License](#license) |&lt;/div&gt;## InstallationYou can install Empyrial using pip:```pip install empyrial```For a better experience, **we advise you to use Empyrial on a notebook** (e.g., Jupyter, Google Colab)_Note: macOS users will need to install [Xcode Command Line Tools](https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/).__Note: Windows users will need to install C++. ([download](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;rel=16), [install instructions](https://drive.google.com/file/d/0B4GsMXCRaSSIOWpYQkstajlYZ0tPVkNQSElmTWh1dXFaYkJr/view))_## Features&lt;div align=&quot;center&quot;&gt;  | Feature üì∞ | Status || --                      | ------    || Engine (backtesting + performance analysis) | :star: [Released](https://github.com/ssantoshp/Empyrial/releases/tag/1.2.4) on May 30, 2021 || Optimizer | :star: [Released](https://github.com/ssantoshp/Empyrial/releases/tag/1.3.6) on Jun 7, 2021 || Rebalancing | :star: [Released](https://github.com/ssantoshp/Empyrial/releases/tag/1.5.0) on Jun 27, 2021 || Risk manager | :star: [Released](https://github.com/ssantoshp/Empyrial/releases/tag/v1.7.3) on Jul 5, 2021 || Sandbox | :star: [Released](https://github.com/ssantoshp/Empyrial/releases/tag/v1.9.1) on Jul 17, 2021 |  &lt;/div&gt;## Documentation[Full documentation](https://empyrial.gitbook.io/empyrial/) (website)[Full documentation](https://github.com/ssantoshp/Empyrial/blob/main/empyrial_documentation.pdf) (PDF)## Usage### Empyrial Engine```pyfrom empyrial import empyrial, Engineportfolio = Engine(    start_date = &quot;2018-06-09&quot;,    portfolio = [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],    weights = [0.2, 0.2, 0.2, 0.2, 0.2],  # equal weighting is set by default    benchmark = [&quot;SPY&quot;]  # SPY is set by default)empyrial(portfolio)```### Calendar RebalancingA portfolio can be rebalanced for either a specific time period or for specific dates using the `rebalance` option.#### Rebalance for Time PeriodTime periods available for rebalancing are`2y`, `1y`, `6mo`, `quarterly`, `monthly````pyfrom empyrial import empyrial, Engineportfolio = Engine(    start_date = &quot;2018-06-09&quot;,    portfolio = [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],    weights = [0.2, 0.2, 0.2, 0.2, 0.2],  # equal weighting is set by default    benchmark = [&quot;SPY&quot;],  # SPY is set by default    rebalance = &quot;1y&quot;)empyrial(portfolio)```#### Rebalance for Custom DatesYou can rebalance a portfolio by specifying a list of custom dates.  ‚ö†Ô∏è When using custom dates, the first date of the list must correspond with the `start_date` and the last element should correspond to the `end_date` which is **today's date** by default.```pyfrom empyrial import empyrial, Engineportfolio = Engine(    start_date = &quot;2018-06-09&quot;,    portfolio = [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],    weights = [0.2, 0.2, 0.2, 0.2, 0.2],  # equal weighting is set by default    benchmark = [&quot;SPY&quot;],  # SPY is set by default    rebalance = [&quot;2018-06-09&quot;, &quot;2019-01-01&quot;, &quot;2020-01-01&quot;, &quot;2021-01-01&quot;])empyrial(portfolio)```### OptimizerThe default optimizer is **equal weighting**. You can specify custom weights, if desired.```pyfrom empyrial import empyrial, Engineportfolio = Engine(    start_date = &quot;2018-01-01&quot;,    portfolio = [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],    weights = [0.1, 0.3, 0.15, 0.25, 0.2],   # custom weights    rebalance = &quot;1y&quot;  # rebalance every year)empyrial(portfolio)```You can also use the **built-in optimizers**. There are 4 optimizers available:- `&quot;EF&quot;`: **Global Efficient Frontier** [Example](https://empyrial.gitbook.io/empyrial/optimization/global-efficient-frontier)- `&quot;MEANVAR&quot;`: **Mean-Variance** [Example](https://empyrial.gitbook.io/empyrial/optimization/mean-variance)- `&quot;HRP&quot;`: **Hierarchical Risk Parity** [Example](https://empyrial.gitbook.io/empyrial/optimization/hierarchical-risk-parity)- `&quot;MINVAR&quot;`: **Minimum-Variance** [Example](https://empyrial.gitbook.io/empyrial/optimization/minimum-variance)```pyfrom empyrial import empyrial, Engineportfolio = Engine(    start_date = &quot;2018-01-01&quot;,    portfolio = [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],    optimizer = &quot;EF&quot;,    rebalance = &quot;1y&quot;  # rebalance every year)portfolio.weights```&gt; Output:```[0.0, 0.0, 0.0348, 0.9652, 0.0]```We can see that the allocation has been optimized.### Risk Manager3 Risk Managers are available:- **Max Drawdown**: `{&quot;Max Drawdown&quot; : -0.3}` [Example](https://empyrial.gitbook.io/empyrial/risk-management/max-drawdown)- **Take Profit**: `{&quot;Take Profit&quot; : 0.4}` [Example](https://empyrial.gitbook.io/empyrial/risk-management/take-profit)- **Stop Loss**: `{&quot;Stop Loss&quot; : -0.2}` [Example](https://empyrial.gitbook.io/empyrial/risk-management/stop-loss)```pyfrom empyrial import empyrial, Engineportfolio = Engine(    start_date = &quot;2018-01-01&quot;,    portfolio= [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],    optimizer = &quot;EF&quot;,    rebalance = &quot;1y&quot;,  # rebalance every year    risk_manager = {&quot;Max Drawdown&quot; : -0.2}  # Stop the investment when the drawdown becomes superior to -20%)empyrial(portfolio)```### Empyrial Outputs&lt;div align=&quot;center&quot;&gt;![image](https://user-images.githubusercontent.com/61618641/126879140-ea03ff17-a7c6-481a-bb3e-61c055b31267.png)![image](https://user-images.githubusercontent.com/61618641/126879203-4390813c-a4f2-41b9-916b-e03dd8bafffb.png)![image](https://user-images.githubusercontent.com/61618641/128025087-04afed7e-96ab-4730-9bd8-98f5491b2b5d.png)![image](https://user-images.githubusercontent.com/61618641/126879204-01fe1eca-00b8-438e-b489-0213535dd31b.png)![image](https://user-images.githubusercontent.com/61618641/126879210-9fd61e2b-01ab-4bfd-b679-3b1867d9302d.png)![image](https://user-images.githubusercontent.com/61618641/126879215-e24c929a-55be-4912-8e2c-043e31ff2a95.png)![image](https://user-images.githubusercontent.com/61618641/126879221-455b8ffa-c958-4ac9-ae98-d15b4c5f0826.png)![image](https://user-images.githubusercontent.com/61618641/126879222-08906643-16db-441e-a099-7ac3b00bdbd7.png)![image](https://user-images.githubusercontent.com/61618641/126879223-f1116dc3-cceb-493c-93b3-2d3810cae789.png)![image](https://user-images.githubusercontent.com/61618641/126879225-dc879b71-2070-46ed-a8ad-e90880050be8.png)![image](https://user-images.githubusercontent.com/61618641/126879297-cb78743a-6d43-465b-8021-d4b62a659828.png)&lt;/div&gt;## Download the TearsheetYou can use the `get_report()` function of Empyrial to generate a tearsheet, and then download this as a PDF document.```pyfrom empyrial import get_report, Engineportfolio = Engine(      start_date = &quot;2018-01-01&quot;,      portfolio = [&quot;BABA&quot;, &quot;PDD&quot;, &quot;KO&quot;, &quot;AMD&quot;,&quot;^IXIC&quot;],      optimizer = &quot;EF&quot;,      rebalance = &quot;1y&quot;, #rebalance every year      risk_manager = {&quot;Stop Loss&quot; : -0.2})get_report(portfolio)```&gt; Output:![image](https://user-images.githubusercontent.com/61618641/126879406-3ff8eb14-e08b-4103-b46d-02597634d469.png)## Stargazers over time&lt;div align=&quot;center&quot;&gt;![ËøΩÊòüÊóèÁöÑÊó∂Èó¥](https://starchart.cc/ssantoshp/empyrial.svg)&lt;/div&gt;## Contribution and IssuesEmpyrial uses GitHub to host its source code. _Learn more about the [Github flow](https://docs.github.com/en/get-started/quickstart/github-flow)._For larger changes (e.g., new feature request, large refactoring), please open an issue to discuss first.- If you wish to create a new Issue, then [click here to create a new issue](https://github.com/ssantoshp/Empyrial/issues/new/choose).Smaller improvements (e.g., document improvements, bugfixes) can be handled by the Pull Request process of GitHub: [pull requests](https://github.com/ssantoshp/Empyrial/pulls).- To contribute to the code, you will need to do the following:- [Fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo#forking-a-repository) [Empyrial](https://github.com/ssantoshp/Empyrial) - Click the **Fork** button at the upper right corner of this page.- [Clone your own fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo#cloning-your-forked-repository). E.g., `git clone https://github.com/ssantoshp/Empyrial.git`    _If your fork is out of date, then will you need to manually sync your fork: [Synchronization method](https://help.github.com/articles/syncing-a-fork/)_- [Create a Pull Request](https://github.com/ssantoshp/Empyrial/pulls) using **your fork** as the `compare head repository`.You contributions will be reviewed, potentially modified, and hopefully merged into Empyrial.## ContributorsThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):[![All Contributors](https://img.shields.io/badge/all_contributors-10-orange.svg?style=flat-square)](#contributors-)&lt;table&gt;  &lt;tr&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rslopes&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24928343?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Renan Lopes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a title=&quot;Bug report&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/markthebault&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3846664?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mark Thebault&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/diegodalvarez&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48641554?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Diego Alvarez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üíªüêõ&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rakeshbhat9&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11472305?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rakesh Bhat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Haizzz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5275680?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Anh Le&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Bug report&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TonyZhangkz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65281213?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tony Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/eltociear&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22633385?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;‚úíÔ∏è&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-4qx3tbtTgs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50767660?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;QuantNomad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üìπ&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/buckleyc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4175900?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Buckley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;‚úíÔ∏èüíª&lt;/a&gt;&lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/agn35&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/a-/AOh14GhXGFHHpVQTL2r23oEXFssH0f7RyoGDihrS_HmT=s48&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Adam Nelsson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a title=&quot;Code&quot;&gt;üìì&lt;/a&gt;&lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. **Contributions of any kind are welcome!**## ContactYou are welcome to contact us by email at **santoshpassoubady@gmail.com** or in Empyrial's [discussion space](https://github.com/ssantoshp/Empyrial/discussions)## LicenseMIT</longdescription>
</pkgmetadata>