<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=============What is FAdo?=============The **FAdo** system aims to provide an open source extensible high-performance software library for the symbolicmanipulation of automata and other models of computation.To allow high-level programming with complex data structures, easy prototyping of algorithms, and portability(to use in computer grid systems for example), are its main features. Our main motivation is the theoreticaland experimental research, but we have also in mind the construction of a pedagogical tool for teaching automatatheory and formal languages.-----------------Regular Languages-----------------It currently includes most standard operations for the manipulation of regular languages. Regular languages canbe represented by regular expressions (RegExp) or finite automata, among other formalisms. Finite automata maybe deterministic (DFA), non-deterministic (NFA) or generalized (GFA). In **FAdo** these representations are implementedas Python classes.Elementary regular languages operations as union, intersection, concatenation, complementation and reverse areimplemented for each class. Also several combined operations are available for specific models.Several conversions between these representations are implemented:* NFA -&gt; DFA: subset construction* NFA -&gt; RE: recursive method* GFA -&gt; RE: state elimination, with possible choice of state orderings* RE -&gt; NFA: Thompson method, Glushkov method, follow, Brzozowski, and partial derivatives.* For DFAs several minimization algorithms are available: Moore, Hopcroft, and some incremental algorithms. Brzozowski minimization is available for NFAs.* An algorithm for hyper-minimization of DFAs* Language equivalence of two DFAs can be determined by reducing their correspondent minimal DFA to a canonical form, or by the Hopcroft and Karp algorithm.* Enumeration of the first words of a language or all words of a given length (Cross Section)* Some support for the transition semigroups of DFAs----------------Finite Languages----------------Special methods for finite languages are available:* Construction of a ADFA (acyclic finite automata) from a set of words* Minimization of ADFAs* Several methods for ADFAs random generation* Methods for deterministic cover finite automata (DCFA)-----------Transducers-----------Several methods for transducers in standard form (SFT) are available:* Rational operations: union, inverse, reversal, composition, concatenation, Star* Test if a transducer is functional* Input intersection and Output intersection operations-----Codes-----A *language property* is a set of languages. Given a property specified by a transducer, several language tests are possible.* Satisfaction i.e. if a language satisfies the property* Maximality i.e. the language satisfies the property and is maximal* Properties implemented by transducers include: input preserving, input altering, trajectories, and fixed properties* Computation of the edit distance of a regular language, using input altering transducers</longdescription>
</pkgmetadata>