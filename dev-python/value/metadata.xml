<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Implementation of Value Object Pattern for Python=================================================`From Wikipedia &lt;http://en.wikipedia.org/wiki/Value_object&gt;`_:  A **value object** is a small object that represents a  simple entity whose equality isn't based on identity: i.e.  two value objects are equal when they have the same value,  not necessarily being the same object.By default (if you subclass from ``object``) Python follows&quot;reference semantics&quot;, i.e. two objects are equal if theyare the same instance.  ``Value`` class implements &quot;valuesemantics&quot;, i.e. if you subclass it your objects will beequall if they hold the same data.This implementation will also inspect your ``__init__``signature to automatically assign instance variables andproduce a nice ``__repr__`` for your objects, dogether witha suitable ``__hash__`` implementation.Instead of asigning each instance variable manually:.. code:: python    &gt;&gt;&gt; class Date(object):    ...    ...     def __init__(self, year, month=1, day=1):    ...         self.year = year    ...         self.month = month    ...         self.day = day``Value`` defines ``__new__`` that will look at your``__init__`` signature and assign instance variables basedon it:.. code:: python    &gt;&gt;&gt; from value import Value    ...    &gt;&gt;&gt; class Date(Value):    ...    ...     def __init__(self, year, month=1, day=1):    ...         pass    ...    &gt;&gt;&gt; Date(2013, 3).year == 2013    True    &gt;&gt;&gt; Date(2013, 3).month == 3    True    &gt;&gt;&gt; Date(2013, 3).day == 1    True``Value`` defines ``__eq__`` and ``__ne__`` to implementvalue object semantics, i.e. objects holding the same dataare compared equal:.. code:: python    &gt;&gt;&gt; Date(2013, 3, 18) == Date(2013, 3, 18)    True    &gt;&gt;&gt; Date(2013, 3, 18) != Date(1988)    True``Value`` also defines ``__repr__`` for you based on``__init__`` signature:.. code:: python    &gt;&gt;&gt; repr(Date(2013, 3, 18))    'Date(2013, 3, 18)'    &gt;&gt;&gt; repr(Date(1988, 1, 1))    'Date(1988)'``Value`` also defines ``__hash__`` for you, so thatinstances could be used in sets and as dictionary keys.Installation------------------------------------------------------------Use `pip &lt;http://pip-installer.org&gt;`_ or easy_install::    pip install value==0.1.0Alternatively, you can just drop ``value.py`` file into yourprojectâ€”it is self-contained.- **value** is tested with Python 2.6, 2.7, 3.2, 3.3 and PyPy.- **value** follows `semantic versioning &lt;http://semver.org&gt;`_.</longdescription>
</pkgmetadata>