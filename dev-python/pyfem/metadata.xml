<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyfempyfem是一个完全基于python语言实现的极简有限元求解器。依赖的第三方库包括numpy、scipy和meshio等，主要用于有限元方法的学习、有限元算法验证和快速建立材料本构模型的程序原型。[![Codacy Badge](https://app.codacy.com/project/badge/Grade/ab5bca55d85d45d4aa4336ccae058316)](https://app.codacy.com/gh/sunwhale/pyfem/dashboard?utm_source=gh&amp;utm_medium=referral&amp;utm_content=&amp;utm_campaign=Badge_grade)## Installation 安装支持的操作系统包括：Windows，Linux和MacOS。### Recommend 推荐Use the package manager [pip](https://pypi.org/project/pyfem/) to install pyfem:使用pip命令安装:```bashpip install pyfem```If you have no root access on Linux/MacOS, please try```bashpython -m pip install pyfem```Users in China can install pyfem from mirrors such as:中国用户可以使用以下镜像:- [Aliyun](https://developer.aliyun.com/mirror/pypi)- [Tsinghua](https://mirrors.tuna.tsinghua.edu.cn/help/pypi/)### From Source 基于源代码```bashgit clone https://github.com/sunwhale/pyfem.gitcd pyfempip install .```or 或者```bashgit clone https://github.com/sunwhale/pyfem.gitcd pyfempython install.py```采用第二种方法需要将可执行文件或批处理文件写入环境变量。## Quickstart 快速开始### Run in command line 在命令行运行:```bashpyfem --help```### Run the first example 执行第一个算例:当前算例文件存储目录 examples/tutorial，该算例定义了一个二维平面应变模型，材料为塑性随动强化，载荷为y方向的循环拉伸-压缩。```bashcd examples/tutorialpyfem -i Job-1.toml```#### 算例配置文件 Job-1.toml:```tomltitle = &quot;Job-1&quot;[mesh] # 前处理网格文件type = &quot;gmsh&quot;file = 'mesh.msh'[dof] # 自由度names = [&quot;u1&quot;, &quot;u2&quot;]order = 1family = &quot;LAGRANGE&quot;[[amplitudes]] # 幅值列表name = &quot;Amp-1&quot;type = &quot;TabularAmplitude&quot;start = 0.0data = [    [0.0, 0.0],    [0.5, 1.0],    [1.0, 0.0],    [1.5, -1.0],    [2.0, 0.0],    [2.5, 1.0],    [3.0, 0.0],    [3.5, -1.0],    [4.0, 0.0],    [4.5, 1.0],    [5.0, 0.0],][[bcs]] # 边界条件列表name = &quot;BC-1&quot;category = &quot;DirichletBC&quot;type = &quot;&quot;dof = [&quot;u2&quot;]node_sets = ['bottom']element_sets = []value = 0.0[[bcs]] # 边界条件列表name = &quot;BC-2&quot;category = &quot;DirichletBC&quot;type = &quot;&quot;dof = [&quot;u1&quot;]node_sets = ['left']element_sets = []value = 0.0[[bcs]] # 边界条件列表name = &quot;BC-3&quot;category = &quot;DirichletBC&quot;type = &quot;&quot;dof = [&quot;u2&quot;]node_sets = ['top']element_sets = []value = 0.01amplitude_name = &quot;Amp-1&quot;[solver] # 求解器属性type = &quot;NonlinearSolver&quot;option = &quot;NewtonRaphson&quot;total_time = 5.0start_time = 0.0max_increment = 1000000initial_dtime = 0.05max_dtime = 0.05min_dtime = 0.001[[materials]] # 材料列表name = &quot;Material-1&quot;category = &quot;Plastic&quot;type = &quot;KinematicHardening&quot;data = [100000.0, 0.25, 400.0, 1000.0][[sections]] # 截面列表name = &quot;Section-1&quot;category = &quot;Solid&quot;type = &quot;PlaneStrain&quot;option = &quot;SmallStrain&quot;element_sets = [&quot;rectangle&quot;]material_names = [&quot;Material-1&quot;]data = [][[outputs]] # 输出列表type = &quot;vtk&quot;field_outputs = ['S11', 'S22', 'S12', 'E11', 'E22', 'E12']on_screen = false```#### 采用gmsh格式的网格文件 mesh.msh:```$MeshFormat4.1 0 8$EndMeshFormat$PhysicalNames51 5 &quot;left&quot;1 6 &quot;right&quot;1 7 &quot;top&quot;1 8 &quot;bottom&quot;2 9 &quot;rectangle&quot;$EndPhysicalNames$Entities4 4 1 01 0 0 0 0 2 1 0 0 0 3 1 1 0 0 4 0 1 0 0 1 0 0 0 1 0 0 1 8 2 1 -2 2 1 0 0 1 1 0 1 6 2 2 -3 3 0 1 0 1 1 0 1 7 2 3 -4 4 0 0 0 0 1 0 1 5 2 4 -1 1 0 0 0 1 1 0 1 9 4 3 4 1 2 $EndEntities$Nodes9 9 1 90 1 0 110 0 00 2 0 121 -0 00 3 0 131 1 00 4 0 140 1 01 1 0 150.4999999999986921 0 01 2 0 161 0.4999999999986921 01 3 0 170.5000000000020595 1 01 4 0 180 0.5000000000020595 02 1 0 190.5000000000003758 0.5000000000003758 0$EndNodes$Elements5 12 1 121 1 1 21 1 5 2 5 2 1 2 1 23 2 6 4 6 3 1 3 1 25 3 7 6 7 4 1 4 1 27 4 8 8 8 1 2 1 3 49 3 7 9 6 10 6 9 5 2 11 7 4 8 9 12 9 8 1 5 $EndElements```## 后处理算例计算完成后将在配置文件所在目录下生成 .pvd 或 .vtu文件，可以使用开源可视化软件 [paraview](https://www.paraview.org/download/) 进行查看。## 前处理本项目暂不提供前处理模块，基于 meshio 库，可以识别[gmsh](https://www.gmsh.info/)、abaqus 和 ansys等有限元软件的网格文件。## Documents 帮助文档[https://pyfem-doc.readthedocs.io/](https://pyfem-doc.readthedocs.io/)## Development### ToDo list- [x] 增加Neumann边界条件，支持concentrated force，distributed和pressure定义方式- [ ] 增加hdf5计算结果输出格式- [ ] 完善帮助文档- [ ] 完善输入文件的校检- [x] 增加测试模块- [ ] 增加日志模块- [ ] 增加后台运行模式- [ ] 处理平面应力状态的面外应力平衡- [x] 增加粘弹性力学本构模型- [ ] 增加晶体塑性力学本构模型- [x] 增加温度场求解单元- [x] 增加温度场-位移场耦合求解单元- [x] 增加相场-位移场耦合求解单元- [ ] 增加内聚区单元- [ ] 增加动力学求解器- [ ] 建立前处理界面### Bug list- [ ] 采用abaqus网格文件时，如果存在node不属于任何element则在计算时会导致全局刚度矩阵奇异。</longdescription>
</pkgmetadata>