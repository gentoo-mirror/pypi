<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================python-jsonpath-rw-ext===============================.. image:: https://travis-ci.org/sileht/python-jsonpath-rw-ext.png?branch=master   :target: https://travis-ci.org/sileht/python-jsonpath-rw-ext.. image:: https://img.shields.io/pypi/v/jsonpath-rw-ext.svg   :target: https://pypi.python.org/pypi/jsonpath-rw-ext/   :alt: Latest Version.. image:: https://img.shields.io/pypi/dm/jsonpath-rw-ext.svg   :target: https://pypi.python.org/pypi/jsonpath-rw-ext/   :alt: DownloadsExtensions for JSONPath RWjsonpath-rw-ext extends json-path-rw capabilities by adding multiple extensions.'len' that allows one to get the length of a list. 'sorted' that returns a sorted versionof a list, 'arithmetic' that permits one to make math operation between elements and'filter' to select only certain elements of a list.Each extensions will be proposed `upstream &lt;https://github.com/kennknowles/python-jsonpath-rw&gt;`__and will stay here only if they are refused.* Free software: Apache license* Documentation: https://python-jsonpath-rw-ext.readthedocs.org/en/latest/* Source: http://github.com/sileht/python-jsonpath-rw-extQuick Start-----------At the command line::    $ pip install jsonpath-rw-extOr, if you have virtualenvwrapper installed::    $ mkvirtualenv jsonpath-rw-ext    $ pip install jsonpath-rw-extTo replace the jsonpath_rw parser by this one with::    import jsonpath_rw_ext    jsonpath_rw_ext.parse(&quot;$.foo&quot;).find(...)Or::    from jsonpath_rw_ext import parser    parser.ExtentedJsonPathParser().parse(&quot;$.foo&quot;).find(...)Shortcut functions for getting only the matched values::    import jsonpath_rw_ext as jp    print jp.match('$.cow[*]', {'cow': ['foo', 'bar'], 'fish': 'foobar'})    # prints ['foo', 'bar']    print jp.match1('$.cow[*]', {'cow': ['foo', 'bar'], 'fish': 'foobar'})    # prints 'foo'The jsonpath classes are not part of the public API, because the name/structurecan change when they will be implemented upstream. Only the syntax *shouldn't*change.Extensions----------+--------------+----------------------------------------------+| name         | Example                                      |+==============+==============================================+| len          | - $.objects.`len`                            |+--------------+----------------------------------------------+| sub          | - $.field.`sub(/foo\\\\+(.*)/, \\\\1)`       |+--------------+----------------------------------------------+| split        | - $.field.`split(+, 2, -1)`                  ||              | - $.field.`split(sep, segement, maxsplit)`   |+--------------+----------------------------------------------+| sorted       | - $.objects.`sorted`                         ||              | - $.objects[\\some_field]                    ||              | - $.objects[\\some_field,/other_field]       |+--------------+----------------------------------------------+| filter       | - $.objects[?(@some_field &gt; 5)]              ||              | - $.objects[?(some_field = &quot;foobar&quot;)]        ||              | - $.objects[?(some_field ~ &quot;regexp&quot;)]        ||              | - $.objects[?(some_field &gt; 5 &amp; other &lt; 2)]   |+--------------+----------------------------------------------+| arithmetic   | - $.foo + &quot;_&quot; + $.bar                        || (-+*/)       | - $.foo * 12                                 ||              | - $.objects[*].cow + $.objects[*].cat        |+--------------+----------------------------------------------+About arithmetic and string---------------------------Operations are done with python operators and allows types that pythonallows, and return [] if the operation can be done due to incompatible types.When operators are used, a jsonpath must be be fully defined otherwisejsonpath-rw-ext can't known if the expression is a string or a jsonpath field,in this case it will choice string as type.Example with data::    {        'cow': 'foo',        'fish': 'bar'    }| **cow + fish** returns **cowfish**| **$.cow + $.fish** returns **foobar**| **$.cow + &quot;_&quot; + $.fish** returns **foo_bar**| **$.cow + &quot;_&quot; + fish** returns **foo_fish**About arithmetic and list-------------------------Arithmetic can be used against two lists if they have the same size.Example with data::    {'objects': [        {'cow': 2, 'cat': 3},        {'cow': 4, 'cat': 6}    ]}| **$.objects[\*].cow + $.objects[\*].cat** returns **[6, 9]**</longdescription>
</pkgmetadata>