<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>|Build_Status| |Coverage| |Version|cti-taxii-client================NOTE: This is an `OASIS TC Open Repository&lt;https://www.oasis-open.org/resources/open-repositories/&gt;`_. See the`Governance`_ section for more information.cti-taxii-client is a minimal client implementation for the TAXII 2.X server.It supports the following TAXII 2.X API services:- Server Discovery- Get API Root Information- Get Status- Get Collections- Get a Collection- Get Objects- Add Objects- Get an Object- Delete an Object (2.1 only)- Get Object Manifests- Get Object Versions (2.1 only)Installation------------The easiest way to install the TAXII client is with pip.. code-block:: bash   $ pip install taxii2-clientUsage-----The TAXII client is intended to be used as a Python library.  There are nocommand line clients at this time.``taxii2-client`` provides four classes:- ``Server``- ``ApiRoot``- ``Collection``- ``Status``Each can be instantiated by passing a `url`, and (optional) `user` and`password` arguments. The authorization information is stored in the instance,so it need not be supplied explicitly when requesting services. By default, thelatest version of the supported spec will be imported. If you need a specificversion you can perform the following:.. code-block:: python   from taxii2client.v21 import Server   server = Server('https://example.com/taxii2/', user='user_id', password='user_password')Once you have instantiated a ``Server`` object, you can get all metadata aboutits contents via its properties:.. code-block:: python   print(server.title)This will lazily load and cache the server's information in the instance:- ``api_roots``- ``title``- ``description``- ``default`` (i.e. the default API root)- ``contact``You can follow references to ``ApiRoot`` objects,``Collection`` objects, and (STIX) objects in those collections... code-block:: python   api_root = server.api_roots[0]   collection = api_root.collections[0]   collection.add_objects(stix_bundle)Each ``ApiRoot`` has attributes corresponding to its meta data- ``title``- ``description``- ``max_content_length``- ``collections``Each ``Collection`` has attributes corresponding to its meta data:- ``id``- ``title``- ``description``- ``alias`` (2.1 only)- ``can_write``- ``can_read``- ``media_types``A ``Collection`` can also be instantiated directly:.. code-block:: python    # Performing TAXII 2.0 Requests    from taxii2client.v20 import Collection, as_pages    collection = Collection('https://example.com/api1/collections/91a7b528-80eb-42ed-a74d-c6fbd5a26116')    print(collection.get_object('indicator--252c7c11-daf2-42bd-843b-be65edca9f61'))    # For normal (no pagination) requests    print(collection.get_objects())    print(collection.get_manifest())    # For pagination requests.    # Use *args for other arguments to the call and **kwargs to pass filter information    for bundle in as_pages(collection.get_objects, per_request=50):        print(bundle)    for manifest_resource in as_pages(collection.get_manifest, per_request=50):        print(manifest_resource)    # ---------------------------------------------------------------- #    # Performing TAXII 2.1 Requests    from taxii2client.v21 import Collection, as_pages    collection = Collection('https://example.com/api1/collections/91a7b528-80eb-42ed-a74d-c6fbd5a26116')    print(collection.get_object('indicator--252c7c11-daf2-42bd-843b-be65edca9f61'))    # For normal (no pagination) requests    print(collection.get_objects())    print(collection.get_manifest())    # For pagination requests.    # Use *args for other arguments to the call and **kwargs to pass filter information    for envelope in as_pages(collection.get_objects, per_request=50):        print(envelope)    for manifest_resource in as_pages(collection.get_manifest, per_request=50):        print(manifest_resource)In addition to the object-specific properties and methods, all classes have a``refresh()`` method that reloads the URL corresponding to that resource, toensure properties have the most up-to-date values.Governance----------This GitHub public repository (**https://github.com/oasis-open/cti-taxii-client** ) was created at the requestof the `OASIS Cyber Threat Intelligence (CTI) TC&lt;https://www.oasis-open.org/committees/cti/&gt;`__ as an `OASIS TC Open Repository&lt;https://www.oasis-open.org/resources/open-repositories/&gt;`__ to supportdevelopment of open source resources related to Technical Committee work.While this TC Open Repository remains associated with the sponsor TC, itsdevelopment priorities, leadership, intellectual property terms, participationrules, and other matters of governance are `separate and distinct&lt;https://github.com/oasis-open/cti-taxii-client/blob/master/CONTRIBUTING.md#governance-distinct-from-oasis-tc-process&gt;`__from the OASIS TC Process and related policies.All contributions made to this TC Open Repository are subject to open sourcelicense terms expressed in the `BSD-3-Clause License&lt;https://www.oasis-open.org/sites/www.oasis-open.org/files/BSD-3-Clause.txt&gt;`__.That license was selected as the declared `&quot;Applicable License&quot;&lt;https://www.oasis-open.org/resources/open-repositories/licenses&gt;`__ when theTC Open Repository was created.As documented in `&quot;Public Participation Invited&lt;https://github.com/oasis-open/cti-taxii-client/blob/master/CONTRIBUTING.md#public-participation-invited&gt;`__&quot;,contributions to this OASIS TC Open Repository are invited from all parties,whether affiliated with OASIS or not. Participants must have a GitHub account,but no fees or OASIS membership obligations are required. Participation isexpected to be consistent with the `OASIS TC Open Repository Guidelines andProcedures&lt;https://www.oasis-open.org/policies-guidelines/open-repositories&gt;`__, the opensource `LICENSE&lt;https://github.com/oasis-open/cti-taxii-client/blob/master/LICENSE&gt;`__designated for this particular repository, and the requirement for an`Individual Contributor License Agreement&lt;https://www.oasis-open.org/resources/open-repositories/cla/individual-cla&gt;`__that governs intellectual property.Maintainers-----------TC Open Repository `Maintainers&lt;https://www.oasis-open.org/resources/open-repositories/maintainers-guide&gt;`__are responsible for oversight of this project's community developmentactivities, including evaluation of GitHub `pull requests&lt;https://github.com/oasis-open/cti-taxii-client/blob/master/CONTRIBUTING.md#fork-and-pull-collaboration-model&gt;`__and `preserving&lt;https://www.oasis-open.org/policies-guidelines/open-repositories#repositoryManagement&gt;`__open source principles of openness and fairness. Maintainers are recognized andtrusted experts who serve to implement community goals and consensus designpreferences.Initially, the associated TC members have designated one or more persons toserve as Maintainer(s); subsequently, participating community members may selectadditional or substitute Maintainers, per `consensus agreements&lt;https://www.oasis-open.org/resources/open-repositories/maintainers-guide#additionalMaintainers&gt;`__.Current Maintainers of this TC Open Repository~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-  `Chris Lenk &lt;mailto:clenk@mitre.org&gt;`__; GitHub ID:   https://github.com/clenk/; WWW: `MITRE   Corporation &lt;https://www.mitre.org/&gt;`__-  `Rich Piazza &lt;mailto:rpiazza@mitre.org&gt;`__; GitHub ID:   https://github.com/rpiazza/; WWW: `MITRE   Corporation &lt;https://www.mitre.org/&gt;`__-  `Emmanuelle Vargas-Gonzalez &lt;mailto:emmanuelle@mitre.org&gt;`__; GitHub ID:   https://github.com/emmanvg/; WWW: `MITRE   Corporation &lt;https://www.mitre.org/&gt;`__-  `Jason Keirstead &lt;mailto:Jason.Keirstead@ca.ibm.com&gt;`__; GitHub ID:   https://github.com/JasonKeirstead; WWW: `IBM &lt;http://www.ibm.com/&gt;`__About OASIS TC Open Repositories---------------------------------  `TC Open Repositories: Overview and   Resources &lt;https://www.oasis-open.org/resources/open-repositories/&gt;`__-  `Frequently Asked   Questions &lt;https://www.oasis-open.org/resources/open-repositories/faq&gt;`__-  `Open Source   Licenses &lt;https://www.oasis-open.org/resources/open-repositories/licenses&gt;`__-  `Contributor License Agreements   (CLAs) &lt;https://www.oasis-open.org/resources/open-repositories/cla&gt;`__-  `Maintainers' Guidelines and   Agreement &lt;https://www.oasis-open.org/resources/open-repositories/maintainers-guide&gt;`__Feedback--------Questions or comments about this TC Open Repository's activities should be composedas GitHub issues or comments. If use of an issue/comment is not possible orappropriate, questions may be directed by email to the Maintainer(s) `listedabove &lt;#currentMaintainers&gt;`__. Please send general questions about OpenRepository participation to OASIS Staff at repository-admin@oasis-open.org andany specific CLA-related questions to repository-cla@oasis-open.org... |Build_Status| image:: https://github.com/oasis-open/cti-taxii-client/workflows/cti-taxii-client%20test%20harness/badge.svg   :target: https://github.com/oasis-open/cti-taxii-client/actions?query=workflow%3A%22cti-taxii-client+test+harness%22.. |Coverage| image:: https://codecov.io/gh/oasis-open/cti-taxii-client/branch/master/graph/badge.svg   :target: https://codecov.io/gh/oasis-open/cti-taxii-client.. |Version| image:: https://img.shields.io/pypi/v/taxii2-client.svg?maxAge=3600   :target: https://pypi.python.org/pypi/taxii2-client/</longdescription>
</pkgmetadata>