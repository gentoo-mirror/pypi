# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="You like pytorch? You like micrograd? You love tinygrad! <3"

HOMEPAGE=""
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="arm docs linting testing testing-minimal testing-tf testing-unit triton"
DEPENDENCIES="arm? ( dev-python/unicorn[${PYTHON_USEDEP}] )
	triton? ( dev-python/triton-nightly[${PYTHON_USEDEP}] )
	linting? ( dev-python/pylint[${PYTHON_USEDEP}] )
	linting? ( ~dev-python/mypy-1.13.0[${PYTHON_USEDEP}] )
	linting? ( dev-python/typing-extensions[${PYTHON_USEDEP}] )
	linting? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	linting? ( dev-python/ruff[${PYTHON_USEDEP}] )
	linting? ( dev-python/numpy[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/numpy[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/torch[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/pytest[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/hypothesis[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/z3-solver[${PYTHON_USEDEP}] )
	testing-minimal? ( dev-python/ml-dtypes[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/numpy[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/torch[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/pytest[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/hypothesis[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/z3-solver[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/ml-dtypes[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/safetensors[${PYTHON_USEDEP}] )
	testing-unit? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	testing? ( dev-python/numpy[${PYTHON_USEDEP}] )
	testing? ( dev-python/torch[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest[${PYTHON_USEDEP}] )
	testing? ( dev-python/pytest-xdist[${PYTHON_USEDEP}] )
	testing? ( dev-python/hypothesis[${PYTHON_USEDEP}] )
	testing? ( dev-python/z3-solver[${PYTHON_USEDEP}] )
	testing? ( dev-python/ml-dtypes[${PYTHON_USEDEP}] )
	testing? ( dev-python/pillow[${PYTHON_USEDEP}] )
	testing? ( dev-python/onnx[${PYTHON_USEDEP}] )
	testing? ( dev-python/onnx2torch[${PYTHON_USEDEP}] )
	testing? ( dev-python/onnxruntime[${PYTHON_USEDEP}] )
	testing? ( dev-python/opencv-python[${PYTHON_USEDEP}] )
	testing? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	testing? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	testing? ( dev-python/safetensors[${PYTHON_USEDEP}] )
	testing? ( dev-python/transformers[${PYTHON_USEDEP}] )
	testing? ( dev-python/sentencepiece[${PYTHON_USEDEP}] )
	testing? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	testing? ( dev-python/blobfile[${PYTHON_USEDEP}] )
	testing? ( dev-python/librosa[${PYTHON_USEDEP}] )
	testing? ( dev-python/networkx[${PYTHON_USEDEP}] )
	testing? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	testing? ( dev-python/bottle[${PYTHON_USEDEP}] )
	testing? ( dev-python/ggml-python[${PYTHON_USEDEP}] )
	testing? ( dev-python/capstone[${PYTHON_USEDEP}] )
	testing? ( dev-python/pycocotools[${PYTHON_USEDEP}] )
	testing? ( dev-python/boto3[${PYTHON_USEDEP}] )
	testing? ( dev-python/pandas[${PYTHON_USEDEP}] )
	docs? ( dev-python/mkdocs[${PYTHON_USEDEP}] )
	docs? ( dev-python/mkdocs-material[${PYTHON_USEDEP}] )
	docs? ( dev-python/mkdocstrings[${PYTHON_USEDEP}] )
	docs? ( dev-python/markdown-callouts[${PYTHON_USEDEP}] )
	docs? ( dev-python/markdown-exec[${PYTHON_USEDEP}] )
	docs? ( dev-python/black[${PYTHON_USEDEP}] )
	docs? ( dev-python/numpy[${PYTHON_USEDEP}] )
	testing-tf? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	testing-tf? ( dev-python/tensorflow-addons[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
