<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Docker Buildkit Pulumi ProviderA [Pulumi](https://pulumi.com) provider that builds and pushes a Docker image toa registry using [Buildkit].## MotivationWhy use this provider over the official [pulumi-docker] provider? This providerfixes many of the [bugs](https://github.com/pulumi/pulumi-docker/issues/132)with the official Docker provider:* `pulumi preview` does not silently block while waiting for the Docker image  to build.* Output from `docker build` streams to the terminal during `pulumi up`.* `docker build` is not invoked if nothing in the build context has changed.* Changes to the build context cause a diff to appear during `pulumi preview`.It also provides several new features:* Support for cross-building images (e.g., building a `linux/arm64` image on  a `linux/amd64` host.)* Automatic inline caching.There are a few limitations though. The `Image` resource is much lessconfigurable than the[`Image`](https://www.pulumi.com/docs/reference/pkg/docker/image/) resource inthe official Docker provider. And there is no support whatsoever for the otherresource types, like `Container` or `Secret`.## Usage exampleTo build and push an image to an AWS ECR repository:```pythonimport base64import pulumiimport pulumi_aws as awsimport pulumi_docker_buildkit as docker_buildkitdef get_registry_info(registry_id):    credentials = aws.ecr.get_credentials(registry_id)    username, password = base64.b64decode(credentials.authorization_token).decode().split(&quot;:&quot;)    return docker_buildkit.RegistryArgs(        server=credentials.proxy_endpoint,        username=username,        password=password,    )repo = aws.ecr.Repository(&quot;repo&quot;)image = docker_buildkit.Image(    &quot;image&quot;,    name=repo.repository_url,    registry=repo.registry_id.apply(get_registry_info),)```**Warning:** Be sure to aggressively exclude files in your `.dockerignore`. The`Image` resource hashes all files in the build context before determiningwhether to invoke `docker build`. This is fast, unless you have tens ofthousands of files in your build context. The `.git` directory and`node_modules` are the usual culprits.[pulumi-docker]: https://github.com/pulumi/pulumi-docker[Buildkit]: http://github.com/moby/buildkit</longdescription>
</pkgmetadata>