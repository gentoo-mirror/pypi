<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Polaroid[![Deployment](https://github.com/Daggy1234/polaroid/actions/workflows/publish.yml/badge.svg)](https://github.com/Daggy1234/polaroid/actions/workflows/publish.yml) ![Actions](https://img.shields.io/github/workflow/status/Daggy1234/polaroid/Continuous%20Integration?logo=github) ![License](https://img.shields.io/github/license/Daggy1234/polaroid?color=red) ![Wheel](https://img.shields.io/pypi/wheel/polaroid?color=blue&amp;logo=pypi) ![Python](https://img.shields.io/pypi/pyversions/polaroid?color=yellow&amp;logo=python&amp;logoColor=yellow) ![Version](https://img.shields.io/pypi/v/polaroid) ![Rust Report](https://rust-reportcard.xuri.me/badge/github.com/daggy1234/polaroid) ![Chat](https://img.shields.io/discord/491175207122370581?color=gray&amp;logo=discord) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/bf1af7c59fd84144b5f29f8d8b27e5ba)](https://www.codacy.com/gh/Daggy1234/polaroid/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Daggy1234/polaroid&amp;amp;utm_campaign=Badge_Grade)## Hyper fast image processingThis is a Work in Progress. DO NOT USE in production.For all the examples, meme.png is used. Please replace that with whatever Image you use### Via File System```pythonfrom polaroid import Imageim = Image(&quot;meme.png&quot;)im.solarize()im.save(&quot;solar.png&quot;)```### Using Bytes```python# Just an example use any library to supply bytesfrom polaroid import Imageimport requestsbyt = requests.get(&quot;https://dagpi.xyz/dagpi.png&quot;).contentim = Image(byt)im.filter(&quot;dramatic&quot;)ret_byt = im.save_bytes()```### Properties```pythonfrom polaroid import Imageim = Image(&quot;meme.png&quot;)h = im.heightw = im.weightwi,hei = im.sizeimage_format = im.formatmode = im.mode```### Using the RGB class for coloring```pyfrom polaroid import Image, Rgbim = Image(&quot;meme.png&quot;)# Color Rgb color = Rgb(78, 93, 148)im.color(color)# Now Save```### Methods#### Image Methods```python['add_noise_rand', 'adjust_contrast', 'alter_blue_channel', 'alter_channel', 'alter_channels', 'alter_green_channel', 'alter_red_channel', 'apply_gradient', 'b_grayscale', 'blend', 'box_blur', 'brighten', 'color', 'color_no_grayscale', 'colorize', 'crop', 'decompose_max', 'decompose_min', 'desaturate', 'detect_horizontal_lines', 'detect_vertical_lines', 'edge_detection', 'edge_one', 'emboss', 'filter', 'fliph', 'flipv',  'g_grayscale', 'gaussian_blur', 'gradient', 'grayscale', 'grayscale_human_corrected', 'grayscale_shades',  'hog', 'horizontal_strips', 'identity', 'inc_brightness', 'invert', 'laplace', 'liquid_rescale',  'monochrome', 'noise_reduction', 'offset', 'offset_blue', 'offset_green', 'offset_red', 'oil', 'pink_noise', 'prewitt_horizontal', 'primary', 'r_grayscale', 'remove_blue_channel', 'remove_green_channel', 'remove_red_channel', 'replace_backround', 'resize', 'rotate180', 'rotate270', 'rotate90', 'save', 'save_base_64', 'save_bytes', 'save_jpeg_bytes', 'selective_desaturate', 'selective_hue_rotate', 'selective_lighten', 'selective_saturate', 'sepia', 'sharpen', 'single_channel_grayscale', 'sobel_horizontal', 'sobel_vertical', 'solarize', 'swap_channels', 'threshold', 'thumbnail', 'tint', 'unsharpen', 'vertical_strips', 'watermark']#All available for Image```#### Rgb Methods```py```### Special Methods for `Image````pythonfrom polaroid import Imageim = Image(&quot;meme.png&quot;)print(repr(im))#The `bytes` method is not implemented usebyt = im.save_bytes()# Save a jpegim.save_jpeg(quaility: int)byt = im.save_jpeg_bytes(quality: int)```</longdescription>
</pkgmetadata>