# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Generate profile report for pandas DataFrame"

HOMEPAGE="https://github.com/ydataai/ydata-profiling"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="dev docs notebook spark test unicode"
DEPENDENCIES="<dev-python/scipy-1.16[${PYTHON_USEDEP}]
	<dev-python/pandas-3.0[${PYTHON_USEDEP}]
	<=dev-python/matplotlib-3.10[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.0[${PYTHON_USEDEP}]
	<dev-python/pyyaml-6.1[${PYTHON_USEDEP}]
	dev-python/jinja[${PYTHON_USEDEP}]
	dev-python/visions[${PYTHON_USEDEP}]
	<dev-python/numpy-2.2[${PYTHON_USEDEP}]
	dev-python/htmlmin[${PYTHON_USEDEP}]
	dev-python/phik[${PYTHON_USEDEP}]
	<dev-python/requests-3.0[${PYTHON_USEDEP}]
	<dev-python/tqdm-5.0[${PYTHON_USEDEP}]
	<dev-python/seaborn-0.14[${PYTHON_USEDEP}]
	dev-python/multimethod[${PYTHON_USEDEP}]
	<dev-python/statsmodels-1.0[${PYTHON_USEDEP}]
	<dev-python/typeguard-5.0[${PYTHON_USEDEP}]
	dev-python/ImageHash[${PYTHON_USEDEP}]
	dev-python/wordcloud[${PYTHON_USEDEP}]
	dev-python/dacite[${PYTHON_USEDEP}]
	dev-python/numba[${PYTHON_USEDEP}]
	dev? ( >=dev-python/black-20.8_beta1[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/isort-5.0.7[${PYTHON_USEDEP}] )
	dev? ( dev-python/pre-commit[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/virtualenv-20.0.33[${PYTHON_USEDEP}] )
	dev? ( dev-python/twine[${PYTHON_USEDEP}] )
	dev? ( dev-python/wheel[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/myst-parser-0.18.1[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/sphinx-rtd-theme-0.4.3[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/sphinx-autodoc-typehints-1.10.3[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/sphinx-multiversion-0.2.3[${PYTHON_USEDEP}] )
	dev? ( dev-python/autodoc-pydantic[${PYTHON_USEDEP}] )
	docs? ( <dev-python/mkdocs-1.7.0[${PYTHON_USEDEP}] )
	docs? ( <dev-python/mkdocs-material-10.0.0[${PYTHON_USEDEP}] )
	docs? ( <dev-python/mkdocs-material-extensions-2.0.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/mkdocs-table-reader-plugin[${PYTHON_USEDEP}] )
	docs? ( dev-python/mike[${PYTHON_USEDEP}] )
	docs? ( <dev-python/mkdocstrings-1.0.0[${PYTHON_USEDEP}] )
	docs? ( dev-python/mkdocs-badges[${PYTHON_USEDEP}] )
	notebook? ( >=dev-python/jupyter-1.0.0[${PYTHON_USEDEP}] )
	notebook? ( >=dev-python/ipywidgets-7.5.1[${PYTHON_USEDEP}] )
	spark? ( dev-python/pyspark[${PYTHON_USEDEP}] )
	spark? ( >=dev-python/pyarrow-2.0.0[${PYTHON_USEDEP}] )
	spark? ( <dev-python/pandas-2.0[${PYTHON_USEDEP}] )
	spark? ( <dev-python/numpy-1.24[${PYTHON_USEDEP}] )
	spark? ( dev-python/visions[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( <dev-python/coverage-8.0[${PYTHON_USEDEP}] )
	test? ( dev-python/codecov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-spark[${PYTHON_USEDEP}] )
	test? ( dev-python/nbval[${PYTHON_USEDEP}] )
	test? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	test? ( >=dev-python/twine-3.1.1[${PYTHON_USEDEP}] )
	test? ( dev-python/kaggle[${PYTHON_USEDEP}] )
	unicode? ( dev-python/tangled-up-in-unicode[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
