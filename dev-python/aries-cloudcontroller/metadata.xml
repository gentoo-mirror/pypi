<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;br /&gt;  &lt;img    alt=&quot;Hyperledger Aries logo&quot;    src=&quot;https://raw.githubusercontent.com/didx-xyz/aries-cloudcontroller-python/main/assets/aries-logo.png&quot;    height=&quot;250px&quot;  /&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Aries CloudController Python&lt;/b&gt;&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.org/project/aries-cloudcontroller/&quot;&gt;    &lt;img alt=&quot;aries-cloudcontroller version&quot; src=&quot;https://badge.fury.io/py/aries-cloudcontroller.svg&quot;/&gt;  &lt;/a&gt;  &lt;a    href=&quot;https://raw.githubusercontent.com/didx-xyz/aries-cloudcontroller-python/main/LICENSE&quot;    &gt;&lt;img      alt=&quot;License&quot;      src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot;  /&gt;&lt;/a&gt;  &lt;a href=&quot;https://www.python.org/&quot;    &gt;&lt;img      alt=&quot;Python&quot;      src=&quot;https://img.shields.io/badge/%3C%2F%3E-Python-%230074c1.svg&quot;  /&gt;&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#usage&quot;&gt;Usage&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#available-apis&quot;&gt;Available APIs&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#contributing&quot;&gt;Contributing&lt;/a&gt; &amp;nbsp;|&amp;nbsp;  &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt;The Aries CloudController is a Python-based client library for interacting with an instance of [Aries Cloud Agent](https://github.com/hyperledger/aries-cloudagent-python) (ACA-Py). It leverages the OpenAPI definition from ACA-Py to provide a fully-typed, rich API experience for cloud agent interaction.**Versioning Update:**As of version 0.8.0, the Aries CloudController has aligned its versioning with ACA-Py. This means that each new version of ACA-Py will correspond directly to the same version of the Aries CloudController. This change ensures a more straightforward and predictable upgrade path for users.In other words, CloudController 0.8.0 is compatible with ACA-Py 0.8.0, CloudController 0.9.0 is compatible with ACA-Py 0.9.0, etc.For legacy versions, please review our release history to found the version compatible with ACA-Py pre-0.8.0.## FeaturesAries CloudController Python provides a robust client for interacting with Aries Cloud Agents (ACA-Py).- **Fully Typed**: Offers a strongly-typed wrapper around the Aries Cloud Agent Python, enhancing developer experience and reducing errors.- **Up-to-Date Support**: Compatible with the latest ACA-Py version (0.11.0), ensuring access to the most recent features and improvements.- **Auto-Generated Client**: Utilizes OpenAPI definitions for automatic generation, ensuring timely updates in line with new ACA-Py releases.- **Multi-Tenancy and Authentication Support**: Facilitates working with multi-tenant APIs and integrates various authentication mechanisms.- **Asynchronous API**: Supports asynchronous operations, enabling efficient handling of I/O-bound tasks.## UsageInstall Aries Cloud Controller Python via pip:```shpip install aries-cloudcontroller```### Creating a ClientEasily initialize the AcaPyClient:```pythonfrom aries_cloudcontroller import AcaPyClientclient = AcaPyClient(    base_url=&quot;http://localhost:8000&quot;,    api_key=&quot;myApiKey&quot;)```**Admin Insecure Mode**: If running ACA-Py with the `--admin-insecure-mode` flag and without an API key:```pythonclient = AcaPyClient(    base_url=&quot;http://localhost:8000&quot;,    admin_insecure=True  # No API key needed)```**Multitenancy**: For specific tenant contexts:```pythonclient = AcaPyClient(    base_url=&quot;http://localhost:8000&quot;,    tenant_jwt=&quot;eyXXX&quot;)```### Interacting with the ClientThe API, being fully typed, is best explored through the ACA-Py Swagger UI, which mirrors the available client properties.**Example**: Creating and receiving an invitation:```pythoninvitation = await client.connection.create_invitation(    body=CreateInvitationRequest(my_label=&quot;Cloud Controller&quot;))connection = await client.connection.receive_invitation(body=invitation.invitation)```## Available APIsThe client encompasses various APIs, each corresponding to ACA-Py Swagger UI topics:- `action_menu`- `basicmessage`- `connection`- `credential_definition`- `credentials`- `default`- `did_exchange`- `discover_features`- `discover_features_v2_0`- `endorse_transaction`- `introduction`- `issue_credential_v1_0`- `issue_credential_v2_0`- `jsonld`- `ledger`- `mediation`- `multitenancy`- `out_of_band`- `present_proof_v1_0`- `present_proof_v2_0`- `resolver`- `revocation`- `schema`- `server`- `settings`- `trustping`- `wallet`## ContributingContributions are welcome! Please see our [CONTRIBUTING](/CONTRIBUTING.md) guidelines for more information on how to get involved.## LicenseThis project is licensed under the [Apache License Version 2.0 (Apache-2.0)](/LICENSE).</longdescription>
</pkgmetadata>