<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DXSP (DeX SwaP)|&lt;img width=&quot;200&quot; alt=&quot;Logo&quot; src=&quot;https://user-images.githubusercontent.com/8766259/231213427-63ea2752-13d5-4993-aee2-90671b57fc6e.png&quot;&gt;  | A python defi swap helper package. Swap made easy || ------------- | ------------- ||[![wiki](https://img.shields.io/badge/ðŸª™ðŸ—¿-wiki-0080ff)](https://talkytrader.gitbook.io/talky/) [![Pypi](https://badgen.net/badge/icon/dxsp?icon=pypi&amp;label)](https://pypi.org/project/dxsp/) ![Version](https://img.shields.io/pypi/v/dxsp)&lt;br&gt;  ![Pypi](https://img.shields.io/pypi/dm/dxsp) &lt;br&gt;[![ðŸ‘·Flow](https://github.com/mraniki/dxsp/actions/workflows/%F0%9F%91%B7Flow.yml/badge.svg)](https://github.com/mraniki/dxsp/actions/workflows/%E2%9C%A8Flow.yml)&lt;br&gt;[![codebeat badge](https://codebeat.co/badges/b1376839-73bc-4b41-bfc1-2fb099f1fc2a)](https://codebeat.co/projects/github-com-mraniki-dxsp-main)&lt;br&gt;[![codecov](https://codecov.io/gh/mraniki/dxsp/branch/main/graph/badge.svg?token=39ED0ZA6IH)](https://codecov.io/gh/mraniki/dxsp) &lt;br&gt;[![Web3](https://badgen.net/badge/icon/web3/black?icon=libraries&amp;label)](https://github.com/ethereum/web3.py) [![coingecko](https://badgen.net/badge/icon/coingecko/black?icon=libraries&amp;label)](https://github.com/coingecko) [![uniswap](https://badgen.net/badge/icon/unipy/black?icon=libraries&amp;label)](https://github.com/uniswap-python/uniswap-python)|Key blockchains (ETH, BSC, ARB, MATIC, OPT...)&lt;br&gt;Key swap protocol (Uni and 0x)Key features:- Any blockchains mainnet or testnet supported by web3py, for uniswap based router (e.g uniswap, pancakeswap) or 0x protocol.Other features:- Translate token symbol to contract address via user defined tokenlist format or coingecko API- Connect to web3 automatically or use your own w3- Approve contract and sign transaction- Quote a given token- Use Base trading symbol like stablecoin for risk management approach- Settings to use the module for your own setup## Install`pip install dxsp`## How to use it```from dxsp import DexSwap dex = DexSwap() #BUY 10 USDT to SWAP with BITCOIN demo_tx = await dex.get_swap('USDT','wBTC',10) print(&quot;demo_tx &quot;, demo_tx)```### Example[example](https://github.com/mraniki/dxsp/blob/main/examples/example.py)### Real use case[TalkyTrader](https://github.com/mraniki/tt)## Documentation[![wiki](https://img.shields.io/badge/ðŸª™ðŸ—¿-wiki-0080ff)](https://talkytrader.gitbook.io/talky/)</longdescription>
</pkgmetadata>