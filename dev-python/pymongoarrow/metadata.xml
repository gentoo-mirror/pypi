<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>============PyMongoArrow============:Info: A companion library to PyMongo that makes it easy to move data       between MongoDB and Apache Arrow. See       `GitHub &lt;https://github.com/mongodb-labs/mongo-arrow/tree/main/bindings/python&gt;`_       for the latest source.:Documentation: Available at `mongo-arrow.readthedocs.io &lt;https://mongo-arrow.readthedocs.io/en/latest/&gt;`_.:Author: Prashant Mital**PyMongoArrow** is a companion library to PyMongo that contains toolsfor loading MongoDB query result sets as Apache Arrow tables, PandasDataFrames or NumPy arrays... code-block:: python  &gt;&gt;&gt; from pymongoarrow.monkey import patch_all  &gt;&gt;&gt; patch_all()  &gt;&gt;&gt; from pymongoarrow.api import Schema  &gt;&gt;&gt; schema = Schema({'_id': int, 'qty': float})  &gt;&gt;&gt; from pymongo import MongoClient  &gt;&gt;&gt; client = MongoClient()  &gt;&gt;&gt; client.db.data.insert_many([{'_id': 1, 'qty': 25.4}, {'_id': 2, 'qty': 16.9}, {'_id': 3, 'qty': 2.3}])  &gt;&gt;&gt; data_frame = client.db.test.find_pandas_all({}, schema=schema)  &gt;&gt;&gt; data_frame     _id   qty  0    1  25.4  1    2  16.9  2    3   2.3  &gt;&gt;&gt; arrow_table = client.db.test.find_arrow_all({}, schema=schema)  # The schema may also be omitted  &gt;&gt;&gt; arrow_table = client.db.test.find_arrow_all({})  &gt;&gt;&gt; arrow_table  pyarrow.Table  _id: int64  qty: double  &gt;&gt;&gt; ndarrays = client.db.test.find_numpy_all({}, schema=schema)  &gt;&gt;&gt; ndarrays  {'_id': array([1, 2, 3]), 'qty': array([25.4, 16.9,  2.3])}**PyMongoArrow** is the recommended way tomaterialize MongoDB query result sets as contiguous-in-memory, typed arrayssuited for in-memory analytical processing applications.Installing PyMongoArrow=======================PyMongoArrow is available on PyPI::  $ python -m pip install pymongoarrowTo use PyMongoArrow with MongoDB Atlas' ``mongodb+srv://`` URIs, you willneed to also install PyMongo with the ``srv`` extra::  $ python -m pip install 'pymongo[srv]' pymongoarrowTo use PyMongoArrow APIs that return query result sets as pandasDataFrame instances, you will also need to have the ``pandas`` packageinstalled::     $ python -m pip install pandasDevelopment Install===================See the instructions on `Read the Docs`_.Documentation=============Full documentation is available on `Read the Docs`_... _Read the Docs: https://mongo-arrow.readthedocs.io/en/latest</longdescription>
</pkgmetadata>