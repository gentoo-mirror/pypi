<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=======Shapely=======.. Documentation at RTD — https://readthedocs.org.. image:: https://readthedocs.org/projects/shapely/badge/?version=stable   :alt: Documentation Status   :target: https://shapely.readthedocs.io/en/stable/.. Github Actions status — https://github.com/shapely/shapely/actions.. |github-actions| image:: https://github.com/shapely/shapely/workflows/Tests/badge.svg?branch=main   :alt: Github Actions status   :target: https://github.com/shapely/shapely/actions?query=branch%3Amain.. Travis CI status -- https://travis-ci.com.. image:: https://travis-ci.com/shapely/shapely.svg?branch=main   :alt: Travis CI status   :target: https://travis-ci.com/github/shapely/shapely.. PyPI.. image:: https://img.shields.io/pypi/v/shapely.svg   :alt: PyPI   :target: https://pypi.org/project/shapely/.. Anaconda.. image:: https://img.shields.io/conda/vn/conda-forge/shapely   :alt: Anaconda   :target: https://anaconda.org/conda-forge/shapely.. Coverage.. |coveralls| image:: https://coveralls.io/repos/github/shapely/shapely/badge.svg?branch=main   :target: https://coveralls.io/github/shapely/shapely?branch=main.. Zenodo.. .. image:: https://zenodo.org/badge/191151963.svg..   :alt: Zenodo..   :target: https://zenodo.org/badge/latestdoi/191151963Manipulation and analysis of geometric objects in the Cartesian plane... image:: https://c2.staticflickr.com/6/5560/31301790086_b3472ea4e9_c.jpg   :width: 800   :height: 378Shapely is a BSD-licensed Python package for manipulation and analysis ofplanar geometric objects. It is using the widely deployed open-sourcegeometry library `GEOS &lt;https://libgeos.org/&gt;`__ (the engine of `PostGIS&lt;https://postgis.net/&gt;`__, and a port of `JTS &lt;https://locationtech.github.io/jts/&gt;`__).Shapely wraps GEOS geometries and operations to provide both a feature rich`Geometry` interface for singular (scalar) geometries and higher-performanceNumPy ufuncs for operations using arrays of geometries.Shapely is not primarily focused on data serialization formats or coordinatesystems, but can be readily integrated with packages that are.What is a ufunc?----------------A universal function (or ufunc for short) is a function that operates on*n*-dimensional arrays on an element-by-element fashion and supports arraybroadcasting. The underlying ``for`` loops are implemented in C to reduce theoverhead of the Python interpreter.Multithreading--------------Shapely functions generally support multithreading by releasing the GlobalInterpreter Lock (GIL) during execution. Normally in Python, the GIL preventsmultiple threads from computing at the same time. Shapely functionsinternally release this constraint so that the heavy lifting done by GEOS canbe done in parallel, from a single Python process.Usage=====Here is the canonical example of building an approximately circular patch bybuffering a point, using the scalar Geometry interface:.. code-block:: pycon    &gt;&gt;&gt; from shapely import Point    &gt;&gt;&gt; patch = Point(0.0, 0.0).buffer(10.0)    &gt;&gt;&gt; patch    &lt;POLYGON ((10 0, 9.952 -0.98, 9.808 -1.951, 9.569 -2.903, 9.239 -3.827, 8.81...&gt;    &gt;&gt;&gt; patch.area    313.6548490545941Using the vectorized ufunc interface (instead of using a manual for loop),compare an array of points with a polygon:.. code:: python    &gt;&gt;&gt; import shapely    &gt;&gt;&gt; import numpy as np    &gt;&gt;&gt; geoms = np.array([Point(0, 0), Point(1, 1), Point(2, 2)])    &gt;&gt;&gt; polygon = shapely.box(0, 0, 2, 2)    &gt;&gt;&gt; shapely.contains(polygon, geoms)    array([False,  True, False])See the documentation for more examples and guidance: https://shapely.readthedocs.ioRequirements============Shapely 2.0 requires* Python &gt;=3.7* GEOS &gt;=3.5* NumPy &gt;=1.14Installing Shapely==================We recommend installing Shapely using one of the available builtdistributions, for example using ``pip`` or ``conda``:.. code-block:: console    $ pip install shapely    # or using conda    $ conda install shapely --channel conda-forgeSee the `installation documentation &lt;https://shapely.readthedocs.io/en/latest/installation.html&gt;`__for more details and advanced installation instructions.Integration===========Shapely does not read or write data files, but it can serialize and deserializeusing several well known formats and protocols. The shapely.wkb and shapely.wktmodules provide dumpers and loaders inspired by Python's pickle module... code-block:: pycon    &gt;&gt;&gt; from shapely.wkt import dumps, loads    &gt;&gt;&gt; dumps(loads('POINT (0 0)'))    'POINT (0.0000000000000000 0.0000000000000000)'Shapely can also integrate with other Python GIS packages using GeoJSON-likedicts... code-block:: pycon    &gt;&gt;&gt; import json    &gt;&gt;&gt; from shapely.geometry import mapping, shape    &gt;&gt;&gt; s = shape(json.loads('{&quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [0.0, 0.0]}'))    &gt;&gt;&gt; s    &lt;POINT (0 0)&gt;    &gt;&gt;&gt; print(json.dumps(mapping(s)))    {&quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [0.0, 0.0]}Support=======Questions about using Shapely may be asked on the `GIS StackExchange&lt;https://gis.stackexchange.com/questions/tagged/shapely&gt;`__ using the &quot;shapely&quot;tag.Bugs may be reported at https://github.com/shapely/shapely/issues.Copyright &amp; License===================Shapely is licensed under BSD 3-Clause license.GEOS is available under the terms of GNU Lesser General Public License (LGPL) 2.1 at https://libgeos.org.</longdescription>
</pkgmetadata>