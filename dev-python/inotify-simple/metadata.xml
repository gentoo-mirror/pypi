<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># inotify_simple 1.3`inotify_simple` is a simple Python wrapper around[inotify](http://man7.org/linux/man-pages/man7/inotify.7.html).No fancy bells and whistles, just a literal wrapper with ctypes. Only  \~100lines of code!`inotify_init1()` is wrapped as a file-like object, `INotify()`, holding the inotifyfile descriptor. `INotify().read()` reads available data from the file descriptor andreturns events as `namedtuple` objects after unpacking them with the `struct` module.`inotify_add_watch()` and `inotify_rm_watch()` are wrapped with no changes at all,taking and returning watch descriptor integers that calling code is expected to keeptrack of itself, just as one would use `inotify` from C. Works with Python 2.7 andPython &gt;= 3.2.[View on PyPI](http://pypi.python.org/pypi/inotify_simple) |[Fork me on github](https://github.com/chrisjbillington/inotify_simple) |[Read the docs](http://inotify_simple.readthedocs.org)## Installationto install `inotify_simple`, run:```$ pip3 install inotify_simple```or to install from source:```$ python3 setup.py install```Note:  If on Python &lt; 3.4, you'll need the backported [enum34module](https://pypi.python.org/pypi/enum34).## IntroductionThere are many inotify python wrappers out there. [I found them allunsatisfactory](https://xkcd.com/927/). Most are far too high-level for mytastes, and the supposed convenience they provide actually limits one fromusing inotify in ways other than those the author imagined. Others are Cextensions, requiring compilation for different platforms and Python versions,rather than a pure python module using ctypes. This one is pretty low-leveland really just does what inotify itself does and nothing more. So hopefullyif I've written it right, it will remain functional well into the future withno changes, recompilation or attention on my part.## Example usage```pythonimport osfrom inotify_simple import INotify, flagsos.mkdir('/tmp/inotify_test')inotify = INotify()watch_flags = flags.CREATE | flags.DELETE | flags.MODIFY | flags.DELETE_SELFwd = inotify.add_watch('/tmp/inotify_test', watch_flags)# Now create, delete and modify some files in the directory being monitored:os.chdir('/tmp/inotify_test')# CREATE event for a directory:os.system('mkdir foo')# CREATE event for a file:os.system('echo hello &gt; test.txt')# MODIFY event for the file:os.system('echo world &gt;&gt; test.txt')# DELETE event for the fileos.system('rm test.txt')# DELETE event for the directoryos.system('rmdir foo')os.chdir('/tmp')# DELETE_SELF on the original directory. # Also generates an IGNORED event# indicating the watch was removed.os.system('rmdir inotify_test')# And see the corresponding events:for event in inotify.read():    print(event)    for flag in flags.from_mask(event.mask):        print('    ' + str(flag))```This outputs the following:```Event(wd=1, mask=1073742080, cookie=0, name=u'foo')    flags.CREATE    flags.ISDIREvent(wd=1, mask=256, cookie=0, name=u'test.txt')    flags.CREATEEvent(wd=1, mask=2, cookie=0, name=u'test.txt')    flags.MODIFYEvent(wd=1, mask=512, cookie=0, name=u'test.txt')    flags.DELETEEvent(wd=1, mask=1073742336, cookie=0, name=u'foo')    flags.DELETE    flags.ISDIREvent(wd=1, mask=1024, cookie=0, name=u'')    flags.DELETE_SELFEvent(wd=1, mask=32768, cookie=0, name=u'')    flags.IGNORED```Note that the flags, since they are defined with an `enum.IntEnum`, print aswhat they are called rather than their integer values. However they are stilljust integers and so can be bitwise-ANDed and ORed etc with masks etc. The`flags.from_mask()` method bitwise-ANDs a mask with all possible flags andreturns a list of matches. This is for convenience and useful for debuggingwhich events are coming through, but performance critical code shouldgenerally bitwise-AND masks with flags of interest itself so as to not dounnecessary checks.[See here](http://inotify_simple.readthedocs.org) for more.</longdescription>
</pkgmetadata>