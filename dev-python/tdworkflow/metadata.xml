<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>tdwokflow=========Unofficial Treasure Workflow API client.Installation------------.. code-block:: shell   pip install tdworkflowIf you want to use development version, run as follows:.. code-block:: shell   pip install git+https://github.com/chezou/tdworkflow.gitUsage-----.. code-block:: python   import os   from tdworkflow.client import Client   apikey = os.getenv(&quot;TD_API_KEY&quot;)   client = Client(site=&quot;us&quot;, apikey=apikey)   # Or, write endpoint explicitly   # client = Client(endpoint=&quot;api-workflow.treasuredata.com&quot;, apikey=apikey)   projects = client.projects(&quot;pandas-df&quot;)   secrets = {&quot;td.apikey&quot;: apikey, &quot;td.apiserver&quot;: &quot;https://api.treasuredata.com&quot;, &quot;test&quot;: &quot;secret-foo&quot;}   client.set_secrets(projects[0], secrets)   client.secrets(projects[0])   # ['td.apikey', 'td.apiserver', &quot;test&quot;]   client.delete_secrets(projects[0], [&quot;test&quot;, &quot;td.apiserver&quot;])Uplaod Project from GitHub^^^^^^^^^^^^^^^^^^^^^^^^^^Before executing example code, you have to install git-python.. code-block:: shell   pip install gitpythonClone example repository with git-python and upload a digdag project... code-block:: python   import tempfile   import os   import shutil   import tdworkflow   from git import Git   # Download example GitHub repositoory   tempdir = tempfile.gettempdir()   git_repo = &quot;https://github.com/treasure-data/treasure-boxes/&quot;   shutil.rmtree(os.path.join(tempdir, &quot;treasure-boxes&quot;))   try:       Git(tempdir).clone(git_repo)       print(&quot;Clone repository succeeded&quot;)   except Exception:       print(&quot;Repository clone failed&quot;)       raise   # Upload specific Workflow project   apikey = os.getenv(&quot;TD_API_KEY&quot;)   site = &quot;us&quot;   target_box = os.path.join(&quot;integration-box&quot;, &quot;python&quot;)   target_path = os.path.join(tempdir, &quot;treasure-boxes&quot;, target_box)   client = tdworkflow.client.Client(site=site, apikey=apikey)   project = client.create_project(&quot;my-project&quot;, target_path)If you want to open Treasure Workflow console on your browser, you can get the workflow URL as the following:.. code-block:: python   CONSOLE_URL = {       &quot;us&quot;: &quot;https://console.treasuredata.com/app/workflows&quot;,       &quot;eu01&quot;: &quot;https://console.eu01.treasuredata.com/app/workflows&quot;,       &quot;jp&quot;: &quot;https://console.treasuredata.co.jp/app/workflows&quot;,   }   workflows = client.project_workflows(project)   workflows = list(filter(lambda w: w.name != &quot;test&quot;, workflows))   if workflows:       print(f&quot;Project created! Open {CONSOLE_URL[site]}/{workflows[0].id}/info on your browser and clieck 'New Run' button.&quot;)   else:       print(&quot;Project creation failed.&quot;)Start workflow session^^^^^^^^^^^^^^^^^^^^^^You can start workflow session by using ``Client.start_attempt``... code-block:: python   attempt = client.start_attempt(workflows[0])   # Wait attempt until finish. This may require few minutes.   attempt = client.wait_attempt(attempt)Connect to open source digdag^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Since Treasure Workflow is hosted digdag, tdworkflow is compatible with open source digdag... note::   Open source digdag API may be different with Treasure Workflow API so that tdworkflow might not work with some API of opensource digdag.Here is the example code to connect local digdag server... code-block:: python    &gt;&gt;&gt; import tdworkflow    &gt;&gt;&gt; import requests    &gt;&gt;&gt; session = requests.Session()    &gt;&gt;&gt; client = tdworkflow.client.Client(    ... endpoint=&quot;localhost:65432&quot;, apikey=&quot;&quot;, _session=session, scheme=&quot;http&quot;)    &gt;&gt;&gt; client.projects()    [Project(id=1, name='python-tdworkflow', revision='134fe2f9-ded3-4e7c-af8e-8a82d55d688b', archiveType='db', archiveMd5='5Lc6F6m3DtmBN4DA5MzK8A==', createdAt='2019-11-01T13:03:26Z', deletedAt=None, updatedAt='2019-11-01T13:03:26Z')]</longdescription>
</pkgmetadata>