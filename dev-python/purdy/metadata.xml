<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>*****Purdy*****During talks or screencasts I don't want to be typing code, it is too errorprone and too likely to mess up my speaking flow. **Purdy** is both a set ofprograms and a library to display colourized code in a series of animations.The ``purdy`` command takes one of a Python program, a Python REPL console fileor a Bash console file. Source code is presented to the screen as if typing.For console files, the typing pauses at a prompt, waiting for interaction. Prompts are:  * ``&gt;&gt;&gt;`` or ``...`` for Python REPL* ``$`` for Bash consoleIf the program is paused at a prompt, pressing the **right** arrow willcontinue. Typing animation can be skipped over by pressing the letter &quot;s&quot;instead. Animation can be undone by pressing the **left** arrow. More info onkeys can be found in the help dialog, viewed by pressing &quot;?&quot;.Example Usage:.. code-block:: bash    $ purdy code-snippet.pyThe result looks like this:.. image:: screenshot.gifOnce the code has been displayed, further key presses are ignored. At any timeyou can press &quot;q&quot; to quit.Purdy Programs##############The following programs come with the `purdy` library:* ``purdy`` -- Animated display that looks like a program is being typed to the  screen.* ``pat`` -- &quot;purdy cat&quot;, prints ANSI colourized source.* ``prat`` -- &quot;purdy RTF cat&quot;, prints colourized source in RTF document format.  Particularly useful for copying to a clipboard and pasting full colourized  source into a document. On OS X `prat &lt;filename&gt; | pbcopy` will put the  output directly to the clipboard.* ``subpurdy`` -- Full set of commands to control Purdy. Sub-commands dictate   behaviour. Does a variety of code presentation. Includes ANSI, RTF, HTML  output as well as the typewriter animations.More information can be found in the Command Line Program Documentation.Purdy TUI Controls##################The following keys help you to control the TUI purdy programs:* ``?`` -- Help screen* ``&lt;RIGHT&gt;`` -- next animation step* ``&lt;LEFT&gt;`` -- previous animation step* ``s`` -- go to the next step, skipping any animationFor custom made code using the purdy library, the following controls will alsowork:* ``S`` -- go to the next section, skipping any animation. * ``&lt;TAB&gt;`` -- focus next window area in a multi Screen display* ``&lt;SHIFT&gt;&lt;TAB&gt;`` -- focus previous window area in a multi Screen displayAdditionally the ``s``, ``S``, and ``&lt;LEFT&gt;`` commands all support skippingmultiple steps by specifying a number first. For example the sequence ``12s``would skip past the next 12 steps.Purdy Library#############The ``purdy`` script is fairly simple. You can create more complex animationsby writing programs using the purdy library. Custom programs can have splitscreens, highlighting lines, slide transitions and more.  More information canbe found in the Library Documentation.Installation############.. code-block:: bash    $ pip install purdySupports########Purdy has been tested with Python 3.7 through 3.11. Terminal control is donewith the `Urwid &lt;http://urwid.org/&gt;`_ library. Parsing and tokenization isdone through `Pygments &lt;https://pygments.org/&gt;`_. Both libraries areexecellent and I'm grateful they're publically available.Docs &amp; Source#############Docs: http://purdy.readthedocs.io/en/latest/Source: https://github.com/cltrudeau/purdy</longdescription>
</pkgmetadata>