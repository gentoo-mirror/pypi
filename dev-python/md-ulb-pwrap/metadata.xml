<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># md-ulb-pwrap[![Crate](https://img.shields.io/crates/v/md-ulb-pwrap?logo=rust)](https://crates.io/crates/md-ulb-pwrap) [![PyPI](https://img.shields.io/pypi/v/md-ulb-pwrap?logo=python&amp;logoColor=white)](https://pypi.org/project/md-ulb-pwrap/)Markdown paragraph wrapper using [Unicode Line BreakingAlgorithm]. Includes a Rust library with Python bindings.Wrap a Markdown paragraph using a maximum desired width.Only works for paragraphs without other [container blocks].Respects the prohibition against wrapping text insideinline code blocks and other tweaks for Markdown inlinessyntax.## Rust library```bashcargo add md-ulb-pwrap```````rustuse md_ulb_pwrap::{ulb_wrap_paragraph};assert_eq!(    ulb_wrap_paragraph(        &amp;&quot;aaa ``` ``  ` a b c ``` ccc&quot;,        3,        3,    ),    &quot;aaa\n``` ``  ` a b c ```\nccc&quot;,);````## Python bindings```bashpip install md-ulb-pwrap```````pythonfrom md_ulb_pwrap import ulb_wrap_paragraphmarkdown = &quot;aaa ``` ``  ` a b c ``` ccc&quot;expected_result = &quot;aaa\n``` ``  ` a b c ```\nccc&quot;assert ulb_wrap_paragraph(markdown, 3, 3) == expected_result````## Reference**ulb_wrap_paragraph**(text: _str_, width: _int_, first_line_width: &lt;i&gt;int&lt;/i&gt;) -&gt; &lt;i&gt;str&lt;/i&gt;- **text** (_str_): The text to wrap.- **width** (_int_): The maximum width of the lines after the first.- **first_line_width** (_int_): The maximum width of the first line.**Returns** (_str_): The wrapped text.[unicode line breaking algorithm]: https://unicode.org/reports/tr14/[container blocks]: https://spec.commonmark.org/0.30/#container-blocks</longdescription>
</pkgmetadata>