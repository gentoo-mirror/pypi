<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-giteaA very simple API client for Gitea &gt; 1.16.1This has been somewhat tested (and used), so most things should work as expected.Note that not the full Swagger-API is accessible. The whole implementation is focusedon making access and working with Organizations, Teams, Repositories and Users as painfree as possible.Originally forked from https://github.com/m301/py-gitea.## UsageFirst get a `gitea` object wrapping access and authentication (via an api token) for your gitea instance:```pythonfrom gitea import *gitea = Gitea(URL, TOKEN)```Operations like requesting the Gitea version or authentication user can be requested directly from the `gitea` object:```pythonprint(&quot;Gitea Version: &quot; + gitea.get_version())print(&quot;API-Token belongs to user: &quot; + gitea.get_user().username)```Adding entities like Users, Organizations, ... also is done via the gitea object.```pythonuser = gitea.create_user(&quot;Test Testson&quot;, &quot;test@test.test&quot;, &quot;password&quot;)```All operations on entities in gitea are then accomplished via the according wrapper objects for those entities.Each of those objects has a `.request` method that creates an entity according to your gitea instance.```pythonother_user = User.request(gitea, &quot;OtherUserName&quot;)print(other_user.username)```Note that the fields of the User, Organization,... classes are dynamically created at runtime, and thus not visibleduring divelopment. Refer to the Gitea-API documentation for the fields names.Fields that can not be altered via gitea-api, are read only. After altering a field, the `.commit` method of theaccording object must be called to synchronize the changed fields with your gitea instance.```pythonorg = Organization.request(gitea, test_org)org.description = &quot;some new description&quot;org.location = &quot;some new location&quot;org.commit()```An entity in gitea can be deleted by calling delete.```pythonorg.delete()```All entity objects do have methods to execute some of the requests possible though the gitea-api:```pythonorg = Organization.request(gitea, ORGNAME)teams = org.get_teams()for team in teams:    repos = team.get_repos()    for repo in repos:        print(repo.name)```## InstallationUse ``pip install py-gitea`` to install.## TestsTests can be run with:```python3 -m pytest test_api.py```Make sure to have a gitea-instance running on `http://localhost:3000`, and an admin-user token at `.token`.The admin user must be named ``test``, with email ``secondarytest@test.org``.</longdescription>
</pkgmetadata>