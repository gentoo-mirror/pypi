<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Published on [pypi](https://pypi.org/project/torchminer/)Packaged Using [Poetry](https://python-poetry.org/)# DescriptionTorchMiner is designed to automatic process the training ,evaluating and testing process for PyTorch DeepLearning,with asimple API.You can access all Functions of MineTorch simply use `Miner`.## Quick Start```pythonimport TorchMinerfrom TorchMiner import Minerfrom TorchMiner.plugins.Logger.Jupyter import JupyterLogger, JupyterTqdmfrom TorchMiner.plugins.Metrics import MultiClassesClassificationMetricfrom TorchMiner.plugins.Recorder import TensorboardDrawerminer = Miner(    alchemy_directory='/the/route/to/log',     train_dataloader=train_dataloader,     val_dataloader=val_dataloader,      model=model,     loss_func=MSELoss,      optimizer=optimizer,      # or, by passing a function to optimizer, TorchMiner can auto cuda the params of optimizer    # optimizer=lambda x: optim.SGD(x.parameters(), lr=0.01)ï¼Œ    experiment=&quot;the-name-of-experiment&quot;,  # Subdistribution in the experimental directory    resume=True,  # Whether to automatically load the previous model    eval_epoch=1,  # How many rounds are evaluated    persist_epoch=2,  # How many rounds are saved once a checkpoint    accumulated_iter=1,  # How many times iterates the parameter update after accumulation    in_notebook=True,    amp=True,  # Whether to use amp    plugins=[        # Use the plugins to extend the function of miner        JupyterLogger(),        JupyterTqdm(),        # or, you can use the below one to auto enable the above two        # *JupyterEnvironmentAutoEnable(),        # The two above plugins are designed to get better output in Jupyter Enviroment        MultiClassesClassificationMetric(),        # This Plugin can automaticly calculate Accuracy, kappa score and Confusion Matrix in Classification problems.        TensorboardDrawer(input_to_model),        # This Plugin can record the informations generate by training process or by other plugins in Tensorboard.    ],)# And then, trigger the training process byminer.train()</longdescription>
</pkgmetadata>