<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mrftoolsPython / pip package for managing MRF sequence definitions, dictionary definitions, bloch simulation results, and more. Utilizes HDF5 interchange format (.mrf files).## Features1. MRF Sequence definitions    - Intended to define a sequence for execution on the scanner or within a bloch simulation    - Supports timepoints with varying TR, TE, and FA    - Supports multiple &quot;beats&quot; with varying RRTime, PrepTime, and PrepID    - Can be defined programatically via Python, via .txt import, or via .mrf import    - Can be exported to .txt format or .mrf format (** txt export not implemented fully **)2. MRF Dictionary definitions     - Intended to define a set of dictionary entries to be used by a bloch simulation    - Supports entries with varying T1, T2, and B0 values    - Can be defined programatically via Python, via .txt import, or via .mrf import    - Can be exported to .txt format or .mrf format3. MRF Simulation definitions    - Intended to specify and execute a bloch simulation of a specific sequence over a specific dictionary set    - Configurable phase range and number of isochromat spins    - Can either store all isochromat results or perform averaging before saving dictionary    - Results and configuration can be exported to .mrf format## Installation from pip1. pip install mrftools## Installation from source1. git clone https://gitlab.casemri.com/common-resources/mrftools2. cd mrftools3. pip install .## Building and Publishing pip Packagesetuptools wheel twine1. python3 setup.py sdist bdist_wheel2. twine upload dist/* </longdescription>
</pkgmetadata>