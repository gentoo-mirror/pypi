<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[mailjet]:(http://www.mailjet.com/)[api_credential]: https://app.mailjet.com/account/api_keys[doc]: http://dev.mailjet.com/guides/?python#[api_doc]: https://github.com/mailjet/api-documentation![alt text](https://www.mailjet.com/images/email/transac/logo_header.png &quot;Mailjet&quot;)# Official Mailjet Python Wrapper[![Build Status](https://travis-ci.org/mailjet/mailjet-apiv3-python.svg?branch=master)](https://travis-ci.org/mailjet/mailjet-apiv3-python)![Current Version](https://img.shields.io/badge/version-1.3.2-green.svg)## OverviewWelcome to the [Mailjet][mailjet] official Python API wrapper!Check out all the resources and Python code examples in the official [Mailjet Documentation][doc].## Table of contents- [Compatibility](#compatibility)- [Installation](#installation)- [Authentication](#authentication)- [Make your first call](#make-your-first-call)- [Client / Call configuration specifics](#client--call-configuration-specifics)  - [API versioning](#api-versioning)  - [Base URL](#base-url)- [Request examples](#request-examples)  - [POST request](#post-request)    - [Simple POST request](#simple-post-request)    - [Using actions](#using-actions)  - [GET request](#get-request)    - [Retrieve all objects](#retrieve-all-objects)    - [Use filtering](#use-filtering)    - [Retrieve a single object](#retrieve-a-single-object)  - [PUT request](#put-request)  - [DELETE request](#delete-request)- [Contribute](#contribute)## CompatibilityThis library officially supports the following Python versions: - v2.7 - v3.5 - v3.6## InstallationUse the below code to install the wrapper:``` bash(sudo) pip install mailjet_rest```## AuthenticationThe Mailjet Email API uses your API and Secret keys for authentication. [Grab][api_credential] and save your Mailjet API credentials.```bashexport MJ_APIKEY_PUBLIC='your api key'export MJ_APIKEY_PRIVATE='your api secret'```Initialize your [Mailjet][mailjet] client:```python# import the mailjet wrapperfrom mailjet_rest import Clientimport os# Get your environment Mailjet keysAPI_KEY = os.environ['MJ_APIKEY_PUBLIC']API_SECRET = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(API_KEY, API_SECRET))```## Make your first callHere's an example on how to send an email:```pythonfrom mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret), version='v3.1')data = {  'Messages': [    {      &quot;From&quot;: {        &quot;Email&quot;: &quot;$SENDER_EMAIL&quot;,        &quot;Name&quot;: &quot;Me&quot;      },      &quot;To&quot;: [        {          &quot;Email&quot;: &quot;$RECIPIENT_EMAIL&quot;,          &quot;Name&quot;: &quot;You&quot;        }      ],      &quot;Subject&quot;: &quot;My first Mailjet Email!&quot;,      &quot;TextPart&quot;: &quot;Greetings from Mailjet!&quot;,      &quot;HTMLPart&quot;: &quot;&lt;h3&gt;Dear passenger 1, welcome to &lt;a href=\&quot;https://www.mailjet.com/\&quot;&gt;Mailjet&lt;/a&gt;!&lt;/h3&gt;&lt;br /&gt;May the delivery force be with you!&quot;    }  ]}result = mailjet.send.create(data=data)print result.status_codeprint result.json()```## Client / Call Configuration Specifics### API VersioningThe Mailjet API is spread among three distinct versions:- `v3` - The Email API- `v3.1` - Email Send API v3.1, which is the latest version of our Send API- `v4` - SMS API (not supported in Python)Since most Email API endpoints are located under `v3`, it is set as the default one and does not need to be specified when making your request. For the others you need to specify the version using `version`. For example, if using Send API `v3.1`:``` python# import the mailjet wrapperfrom mailjet_rest import Clientimport os# Get your environment Mailjet keysAPI_KEY = os.environ['MJ_APIKEY_PUBLIC']API_SECRET = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(API_KEY, API_SECRET), version='v3.1')```For additional information refer to our [API Reference](https://dev.preprod.mailjet.com/reference/overview/versioning/).### Base URLThe default base domain name for the Mailjet API is `api.mailjet.com`. You can modify this base URL by setting a value for `api_url` in your call:```pythonmailjet = Client(auth=(api_key, api_secret),api_url=&quot;https://api.us.mailjet.com/&quot;)```If your account has been moved to Mailjet's **US architecture**, the URL value you need to set is `https://api.us.mailjet.com`.## Request examples### POST request#### Simple POST request```python&quot;&quot;&quot;Create a new contact:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))data = {  'Email': 'Mister@mailjet.com'}result = mailjet.contact.create(data=data)print result.status_codeprint result.json()```#### Using actions```python&quot;&quot;&quot;Manage the subscription status of a contact to multiple lists:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))id = '$ID'data = {  'ContactsLists': [                {                        &quot;ListID&quot;: &quot;$ListID_1&quot;,                        &quot;Action&quot;: &quot;addnoforce&quot;                },                {                        &quot;ListID&quot;: &quot;$ListID_2&quot;,                        &quot;Action&quot;: &quot;addforce&quot;                }        ]}result = mailjet.contact_managecontactslists.create(id=id, data=data)print result.status_codeprint result.json()```### GET Request#### Retrieve all objects```python&quot;&quot;&quot;Retrieve all contacts:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))result = mailjet.contact.get()print result.status_codeprint result.json()```#### Using filtering```python&quot;&quot;&quot;Retrieve all contacts that are not in the campaign exclusion list:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))filters = {  'IsExcludedFromCampaigns': false,}result = mailjet.contact.get(filters=filters)print result.status_codeprint result.json()```#### Retrieve a single object```python&quot;&quot;&quot;Retrieve a specific contact ID:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))id = 'Contact_ID'result = mailjet.contact.get(id=id)print result.status_codeprint result.json()```### PUT requestA `PUT` request in the Mailjet API will work as a `PATCH` request - the update will affect only the specified properties. The other properties of an existing resource will neither be modified, nor deleted. It also means that all non-mandatory properties can be omitted from your payload.Here's an example of a `PUT` request:```python&quot;&quot;&quot;Update the contact properties for a contact:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))id = '$CONTACT_ID'data = {  'Data': [                {                        &quot;Name&quot;: &quot;first_name&quot;,                        &quot;value&quot;: &quot;John&quot;                },                {                        &quot;Name&quot;: &quot;last_name&quot;,                        &quot;value&quot;: &quot;Smith&quot;                }        ]}result = mailjet.contactdata.update(id=id, data=data)print result.status_codeprint result.json()```### DELETE requestUpon a successful `DELETE` request the response will not include a response body, but only a `204 No Content` response code.Here's an example of a `DELETE` request:```python&quot;&quot;&quot;Delete an email template:&quot;&quot;&quot;from mailjet_rest import Clientimport osapi_key = os.environ['MJ_APIKEY_PUBLIC']api_secret = os.environ['MJ_APIKEY_PRIVATE']mailjet = Client(auth=(api_key, api_secret))id = 'Template_ID'result = mailjet.template.delete(id=id)print result.status_codeprint result.json()```## ContributeMailjet loves developers. You can be part of this project!This wrapper is a great introduction to the open source world, check out the code!Feel free to ask anything, and contribute:- Fork the project.- Create a new branch.- Implement your feature or bug fix.- Add documentation to it.- Commit, push, open a pull request and voila.If you have suggestions on how to improve the guides, please submit an issue in our [Official API Documentation repo](https://github.com/mailjet/api-documentation).</longdescription>
</pkgmetadata>