<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pyglib: Simplified scripting with gflags and glog=================================================pyglib provides a clean, consistent setup for writing commandlinescripts and applications in Python. It makes use of python-gflags andpython-glog, and adds an app startup helper that deals withinitialization boilerplate so you don't have to think about it.Example usage:--------------.. code:: python    #!/usr/bin/env python    from pyglib import app, gflags, log    gflags.DEFINE_integer('bananas', 7, 'Number of bananas.')    FLAGS = gflags.FLAGS    def main(args):        log.info('There are %s bananas.', FLAGS.bananas)        log.debug('This will only show up if you run with --verbosity=10')    if __name__ == __main__:        app.run()The above module is usable as a commandline app, complete with argumentparsing and validation. It automatically has a few flags like ``--help``and ``--verbosity`` that come from gflags and glog. Any positionalarguments left over after parsing flags are passed along to the main()function.This example module can also be imported as a library for use in anotherapp. When used that way, any script that imports this one will inheritthe ``--bananas`` flag defined here.</longdescription>
</pkgmetadata>