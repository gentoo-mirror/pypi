<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://rhoknp.readthedocs.io/en/latest/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; src=&quot;https://raw.githubusercontent.com/ku-nlp/rhoknp/develop/docs/_static/logo.png&quot; alt=&quot;rhoknp logo&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;rhoknp: Yet another Python binding for Juman++/KNP/KWJA&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ku-nlp/rhoknp/actions/workflows/test.yml&quot;&gt;&lt;img alt=&quot;Test&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/ku-nlp/rhoknp/test.yml?branch=main&amp;logo=github&amp;label=test&amp;style=flat-square&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/gh/ku-nlp/rhoknp&quot;&gt;&lt;img alt=&quot;Codecov&quot; src=&quot;https://img.shields.io/codecov/c/github/ku-nlp/rhoknp?logo=codecov&amp;style=flat-square&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.codefactor.io/repository/github/ku-nlp/rhoknp&quot;&gt;&lt;img alt=&quot;CodeFactor&quot; src=&quot;https://img.shields.io/codefactor/grade/github/ku-nlp/rhoknp?style=flat-square&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/rhoknp/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/rhoknp?style=flat-square&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/rhoknp/&quot;&gt;&lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/rhoknp?style=flat-square&quot;&gt;&lt;a href=&quot;https://rhoknp.readthedocs.io/en/latest/&quot;&gt;&lt;img alt=&quot;Documentation&quot; src=&quot;https://img.shields.io/readthedocs/rhoknp?style=flat-square&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style - black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-222222?style=flat-square&quot;&gt;&lt;/a&gt;&lt;/p&gt;---**Documentation**: [https://rhoknp.readthedocs.io/en/latest/](https://rhoknp.readthedocs.io/en/latest/)**Source Code**: [https://github.com/ku-nlp/rhoknp](https://github.com/ku-nlp/rhoknp)---_rhoknp_ is a Python binding for [Juman++](https://github.com/ku-nlp/jumanpp), [KNP](https://github.com/ku-nlp/knp), and [KWJA](https://github.com/ku-nlp/kwja).[^1][^1]: The logo was generated by OpenAI DALL·E 2.```pythonimport rhoknp# Perform morphological analysis by Juman++jumanpp = rhoknp.Jumanpp()sentence = jumanpp.apply_to_sentence(    &quot;電気抵抗率は電気の通しにくさを表す物性値である。&quot;)# Access to the resultfor morpheme in sentence.morphemes:  # a.k.a. keitai-so    ...# Save the resultwith open(&quot;result.jumanpp&quot;, &quot;wt&quot;) as f:    f.write(sentence.to_jumanpp())# Load the resultwith open(&quot;result.jumanpp&quot;, &quot;rt&quot;) as f:    sentence = rhoknp.Sentence.from_jumanpp(f.read())```## Requirements- Python 3.7+- (Optional) [Juman++](https://github.com/ku-nlp/jumanpp) v2.0.0-rc3+- (Optional) [KNP](https://github.com/ku-nlp/knp) 5.0+- (Optional) [KWJA](https://github.com/ku-nlp/kwja) 1.0.0+## Installation```shellpip install rhoknp```## Quick tourLet's begin by using Juman++ with rhoknp.Here, we present a simple example demonstrating how Juman++ can be used to analyze a sentence.```python# Perform morphological analysis by Juman++jumanpp = rhoknp.Jumanpp()sentence = jumanpp.apply_to_sentence(&quot;電気抵抗率は電気の通しにくさを表す物性値である。&quot;)```You can easily access the individual morphemes that make up the sentence.```pythonfor morpheme in sentence.morphemes:  # a.k.a. keitai-so    ...```Sentence objects can be saved in the JUMAN format.```python# Save the sentence in the JUMAN formatwith open(&quot;sentence.jumanpp&quot;, &quot;wt&quot;) as f:    f.write(sentence.to_jumanpp())# Load the sentencewith open(&quot;sentence.jumanpp&quot;, &quot;rt&quot;) as f:    sentence = rhoknp.Sentence.from_jumanpp(f.read())```Almost the same APIs are available for KNP.```python# Perform language analysis by KNPknp = rhoknp.KNP()sentence = knp.apply_to_sentence(&quot;電気抵抗率は電気の通しにくさを表す物性値である。&quot;)```KNP performs language analysis at multiple levels.```pythonfor clause in sentence.clauses:  # a.k.a., setsu    ...for phrase in sentence.phrases:  # a.k.a. bunsetsu    ...for base_phrase in sentence.base_phrases:  # a.k.a. kihon-ku    ...for morpheme in sentence.morphemes:  # a.k.a. keitai-so    ...```Sentence objects can be saved in the KNP format.```python# Save the sentence in the KNP formatwith open(&quot;sentence.knp&quot;, &quot;wt&quot;) as f:    f.write(sentence.to_knp())# Load the sentencewith open(&quot;sentence.knp&quot;, &quot;rt&quot;) as f:    sentence = rhoknp.Sentence.from_knp(f.read())```Furthermore, rhoknp provides convenient APIs for document-level language analysis.```pythondocument = rhoknp.Document.from_raw_text(    &quot;電気抵抗率は電気の通しにくさを表す物性値である。単に抵抗率とも呼ばれる。&quot;)# If you know sentence boundaries, you can use `Document.from_sentences` instead.document = rhoknp.Document.from_sentences(    [        &quot;電気抵抗率は電気の通しにくさを表す物性値である。&quot;,        &quot;単に抵抗率とも呼ばれる。&quot;,    ])```Document objects can be handled in a similar manner as Sentence objects.```python# Perform morphological analysis by Juman++document = jumanpp.apply_to_document(document)# Access language units in the documentfor sentence in document.sentences:    ...for morpheme in document.morphemes:    ...# Save language analysis by Juman++with open(&quot;document.jumanpp&quot;, &quot;wt&quot;) as f:    f.write(document.to_jumanpp())# Load language analysis by Juman++with open(&quot;document.jumanpp&quot;, &quot;rt&quot;) as f:    document = rhoknp.Document.from_jumanpp(f.read())```For more information, please refer to the [examples](./examples) and [documentation](https://rhoknp.readthedocs.io/en/latest/).## Main differences from [pyknp](https://github.com/ku-nlp/pyknp/)[_pyknp_](https://pypi.org/project/pyknp/) serves as the official Python binding for Juman++ and KNP.In the development of rhoknp, we redesigned the API, considering the current use cases of pyknp.The key differences between the two are as follows:- **Support for document-level language analysis**: rhoknp allows you to load and instantiate the results of document-level language analysis, including cohesion analysis and discourse relation analysis.- **Strict type-awareness**: rhoknp has been thoroughly annotated with type annotations, ensuring strict type checking and improved code clarity.- **Comprehensive test suite**: rhoknp is extensively tested with a comprehensive test suite. You can view the code coverage report on [Codecov](https://app.codecov.io/gh/ku-nlp/rhoknp).## LicenseMIT## ContributingWe warmly welcome contributions to rhoknp.You can get started by reading the [contribution guide](https://rhoknp.readthedocs.io/en/latest/contributing/index.html).## Reference- [KNP FORMAT](http://cr.fvcrc.i.nagoya-u.ac.jp/~sasano/knp/format.html)- [KNP - KUROHASHI-CHU-MURAWAKI LAB](https://nlp.ist.i.kyoto-u.ac.jp/?KNP)</longdescription>
</pkgmetadata>