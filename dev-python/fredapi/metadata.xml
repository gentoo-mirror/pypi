<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>fredapi: Python API for FRED (Federal Reserve Economic Data)============================================================``fredapi`` is a Python API for the`FRED &lt;http://research.stlouisfed.org/fred2/&gt;`__ data provided by theFederal Reserve Bank of St. Louis. ``fredapi`` provides a wrapper inpython to the `FRED webservice &lt;http://api.stlouisfed.org/docs/fred/&gt;`__, and also providesseveral conveninent methods for parsing and analyzing point-in-time data(i.e. historic data revisions) from`ALFRED &lt;http://research.stlouisfed.org/tips/alfred/&gt;`__``fredapi`` makes use of ``pandas`` and returns data to you in a``pandas`` ``Series`` or ``DataFrame``Installation------------.. code:: sh    pip install fredapiBasic Usage-----------First you need an API key, you can `apply forone &lt;http://api.stlouisfed.org/api_key.html&gt;`__ for free on the FREDwebsite. Once you have your API key, you can set it in one of threeways:-  set it to the evironment variable FRED\_API\_KEY-  save it to a file and use the 'api\_key\_file' parameter-  pass it directly as the 'api\_key' parameter.. code:: python    from fredapi import Fred    fred = Fred(api_key='insert api key here')    data = fred.get_series('SP500')Working with data revisions---------------------------Many economic data series contain frequent revisions. ``fredapi``provides several convenient methods for handling data revisions andanswering the quesion of what-data-was-known-when.In `ALFRED &lt;http://research.stlouisfed.org/tips/alfred/&gt;`__ there is theconcept of a *vintage* date. Basically every *observation* can havethree dates associated with it: *date*, *realtime\_start* and*realtime\_end*.-  date: the date the value is for-  realtime\_start: the first date the value is valid-  realitime\_end: the last date the value is validFor instance, there has been three observations (data points) for theGDP of 2014 Q1:.. code:: xml    &lt;observation realtime_start=&quot;2014-04-30&quot; realtime_end=&quot;2014-05-28&quot; date=&quot;2014-01-01&quot; value=&quot;17149.6&quot;/&gt;    &lt;observation realtime_start=&quot;2014-05-29&quot; realtime_end=&quot;2014-06-24&quot; date=&quot;2014-01-01&quot; value=&quot;17101.3&quot;/&gt;    &lt;observation realtime_start=&quot;2014-06-25&quot; realtime_end=&quot;2014-07-29&quot; date=&quot;2014-01-01&quot; value=&quot;17016.0&quot;/&gt;This means the GDP value for Q1 2014 has been released three times.First release was on 4/30/2014 for a value of 17149.6, and then therehave been two revisions on 5/29/2014 and 6/25/2014 for revised values of17101.3 and 17016.0, respectively.Get first data release only (i.e. ignore revisions)~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    data = fred.get_series_first_release('GDP')Get latest data~~~~~~~~~~~~~~~Note that this is the same as simply calling ``get_series()``.. code:: python    data = fred.get_series_latest_release('GDP')Get latest data known on a given date~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.. code:: python    fred.get_series_as_of_date('GDP', '6/1/2014')Get all data release dates~~~~~~~~~~~~~~~~~~~~~~~~~~This returns a ``DataFrame`` with all the data from ALFRED.. code:: python    df = fred.get_series_all_releases('GDP')    df.tail()Get all vintage dates~~~~~~~~~~~~~~~~~~~~~.. code:: python    vintage_dates = fred.get_series_vintage_dates('GDP')Search for data series~~~~~~~~~~~~~~~~~~~~~~You can always search for data series on the FRED website. But sometimesit can be more convenient to search programmatically. ``fredapi``provides a ``search()`` method that does a fulltext search and returns a``DataFrame`` of results... code:: python    fred.search('potential gdp')You can also search by release id and category id with various options.. code:: python    df1 = fred.search_by_release(11)    df2 = fred.search_by_category(101, limit=10, order_by='popularity', sort_order='desc')Dependencies-------------  `pandas &lt;http://pandas.pydata.org/&gt;`__More Examples-------------- I have a `blog post with more examples &lt;http://mortada.net/python-api-for-fred.html&gt;`__ written in an `IPython` notebook</longdescription>
</pkgmetadata>