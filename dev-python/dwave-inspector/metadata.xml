<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://badge.fury.io/py/dwave-inspector.svg    :target: https://badge.fury.io/py/dwave-inspector    :alt: Latest version on PyPI.. image:: https://circleci.com/gh/dwavesystems/dwave-inspector.svg?style=shield    :target: https://circleci.com/gh/dwavesystems/dwave-inspector    :alt: Linux/MacOS build status.. image:: https://codecov.io/gh/dwavesystems/dwave-inspector/branch/master/graph/badge.svg    :target: https://codecov.io/gh/dwavesystems/dwave-inspector    :alt: Coverage report================D-Wave Inspector================.. index-start-markerA tool for visualizing problems submitted to, and answers received from, aD-Wave structured solver such as an Advantage\ |TM| quantum computer... |TM| replace:: :sup:`TM`.. index-end-markerExample=======.. example-start-markerThis example shows a typical usage: a binary quadratic model minor-embedded onto a quantum processing unit (QPU)... code-block:: python    from dwave.system import DWaveSampler, EmbeddingComposite    import dimod    import dwave.inspector    # Get sampler    sampler = EmbeddingComposite(DWaveSampler())    # Define a problem    x, y, z = dimod.Binaries(['x', 'y', 'z'])    bqm = x*y - x*z + 2*y    # Sample    sampleset = sampler.sample(bqm, num_reads=100)    # Inspect    dwave.inspector.show(sampleset).. example-end-markerInstallation or Building========================.. installation-start-markerIf `D-Wave Ocean SDK 2.0+ &lt;https://docs.ocean.dwavesys.com/&gt;`_ is installed:.. code-block:: bash    dwave install inspectorOtherwise, install the package from PyPI:.. code-block:: bash    pip install dwave-inspectorand then install the closed-source dependency with:.. code-block:: bash    pip install dwave-inspectorapp --extra-index=https://pypi.dwavesys.com/simplePlease note this closed-source dependency is released under the `D-Wave EULA`_ license.Alternatively, clone and build from source:.. code-block:: bash    git clone https://github.com/dwavesystems/dwave-inspector.git    cd dwave-inspector    pip install -r requirements.txt    python setup.py installWhen building from source, the closed-source component still needs to beinstalled as above... installation-end-markerLicense=======Released under the Apache License 2.0. See `&lt;LICENSE&gt;`_ file.Visualization component released under the `D-Wave EULA`_... _D-Wave EULA: https://docs.ocean.dwavesys.com/en/stable/licenses/inspector.htmlContributing============Ocean's `contributing guide &lt;https://docs.ocean.dwavesys.com/en/stable/contributing.html&gt;`_has guidelines for contributing to Ocean packages.Release Notes-------------D-Wave Inspector uses `reno &lt;https://docs.openstack.org/reno/&gt;`_ to manageits release notes.When making a contribution to D-Wave Inspector that will affect users, createa new release note file by running:.. code-block:: bash    reno new your-short-descriptor-hereYou can then edit the file created under ``releasenotes/notes/``.Remove any sections not relevant to your changes.Commit the file along with your changes.See reno's `user guide &lt;https://docs.openstack.org/reno/latest/user/usage.html&gt;`_for details.</longdescription>
</pkgmetadata>