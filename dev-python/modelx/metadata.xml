<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>modelx======*Use Python like a spreadsheet!*.. image:: https://github.com/fumitoh/modelx/actions/workflows/python-package.yml/badge.svg    :target: https://github.com/fumitoh/modelx/actions/workflows/python-package.yml.. image:: https://img.shields.io/pypi/pyversions/modelx    :target: https://pypi.org/project/modelx/.. image:: https://img.shields.io/pypi/v/modelx    :target: https://pypi.org/project/modelx/.. image:: https://img.shields.io/pypi/l/modelx    :target: https://github.com/fumitoh/modelx/blob/master/LICENSE.LESSER.txt.. Overview BeginWhat is modelx?---------------**modelx** is a numerical computing tool that enables you to usePython like a spreadsheet and build object-oriented modelsby defining formulas. modelx is best suited for building modelsin such fields as actuarial science, quantitative finance and risk management... rubric:: modelx sites========================== ===============================================Home page                  https://modelx.ioBlog                       https://modelx.io/allpostsDocumentation site         https://docs.modelx.ioDevelopment                https://github.com/fumitoh/modelxDiscussion Forum           https://github.com/fumitoh/modelx/discussionsmodelx on PyPI             https://pypi.org/project/modelx/========================== ===============================================Feature highlights------------------**modelx** enables you to interactivelydevelop, run and scrutinize complex models in smart ways:- Only basic Python knowledge required- Formulas defined by Python functions- Object-oriented, supports composition and inheritance- Parameterization- Dependency tracing- Reading from Excel and CSV files- GUI as Spyder plugin (spyder-modelx)- Saving to text files, enabling use of version control systems- Document integration enabling use of document generators- Pandas interfaceWho is modelx for?------------------**modelx** is designed to be domain agnostic.The modelx was created by actuary, and its primary use is to developactuarial projection models. **lifelib** (https://lifelib.io) is alibrary of actuarial models that are built on top of modelx.However, modelx is intentionally designed to eliminate domain specific featuresso that potential audience for modelx can be wider than actuaries,whoever needs to developcomplex models of any sorts that are too much to deal with by spreadsheets.How modelx works----------------**modelx** exposes its API functions and classes such as Model, Space and Cells toits users, and the users build their models from those classes, by definingcalculation formulas in the form of Python functions and associating thosecalculations with Cells objects.Below is a very simple working example in which following operations aredemonstrated:- a new model is created,- and in the model, a new space is created,- and in the space, a new cells is created , which is associated with the  Fibonacci series... code-block:: python    from modelx import *    model, space = new_model(), new_space()    @defcells    def fibo(n):        if n == 0 or n == 1:            return n        else:            return fibo(n - 1) + fibo(n - 2)To get a Fibonacci number for, say 10, you can do::    &gt;&gt;&gt; fibo(10)    55    &gt;&gt;&gt; fibo.series    n    0      0    1      1    2      1    3      2    4      3    5      5    6      8    7     13    8     21    9     34    10    55    Name: fibo, dtype: int64Refer to **lifelib** (https://lifelib.io) fo more complex examples.Python and modelx-----------------Aside from modelx being a Python package and written entirely in Python,modelx utilizes Python in that it lets users define formulas by writingPython functions and converting it to modelx formulas.However, there is a critical difference between how Python functions areinterpreted by Python and how modelx formulas are interpreted by modelx.Python employs lexical scoping, i.e. the namespace in which function code isexecuted is determined by textual context. The global namespace of afunction is the module that the function is defined in.In contrast, the evaluation of modelx formulas is based on dynamic scoping.Each Cells belongs to a space, and the space has associated namespace (a mappingof names to objects). The formula associated with the cells isevaluated in that namespace. So, what module a formula is defined (in theform of a Python function) does not affect the result of formula evaluation.It is what space the cells belongs to that affects the result.License-------Copyright 2017-2022, Fumito Hamamuramodelx is free software; you can redistribute it and/ormodify it under the terms of`GNU Lesser General Public License v3 (LGPLv3)&lt;https://github.com/fumitoh/modelx/blob/master/LICENSE.LESSER.txt&gt;`_.Contributions, productive comments, requests and feedback from the communityare always welcome. Information on modelx development is found at Githubhttps://github.com/fumitoh/modelxDevelopment State-----------------With the release of modelx version 0.1.0 in December 2019,the author of modelx will try to consider maintainingbackward compatibility to a limited extentin developing future releases of modelx.Especially, he will try to make it possible to readmodels written to files by one version's ``write_model``,by ``read_model`` of the next version of modelx.However, models saved by ``Model.save`` method may not be opened by``open_model`` method.Overall, modelx is still in its early alpha-release stage,and its specifications may change without considerationon backward compatibility... warning::   If you have embedded modelx in actuarial production processes,   then it is encouraged to connect with the author   `on linkedin &lt;https://www.linkedin.com/in/fumito-hamamura&gt;`_   or `on github &lt;https://github.com/fumitoh&gt;`_ ,   as modelx features you rely on might change or be removed in future releases   without the author knowing those features are in use.History-------modelx was originally conceived and written by Fumito Hamamuraand it was first released in October 2017... Overview EndRequirements------------* Python 3.6+* NetwrkX 2.0+* asttokens* Pandas* OpenPyXL</longdescription>
</pkgmetadata>