<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Aliyun Tablestore SDK for Python==================================.. image:: https://badge.fury.io/py/tablestore.svg    :target: https://badge.fury.io/py/tablestore.. image:: https://img.shields.io/badge/license-mit-brightgreen.svg    :target: https://travis-ci.org/aliyun/aliyun-tablestore-python-sdk.. image:: https://badge.fury.io/gh/aliyun%2Faliyun-tablestore-python-sdk.svg    :target: https://travis-ci.org/aliyun/aliyun-tablestore-python-sdk.. image:: https://coveralls.io/repos/github/aliyun/aliyun-tablestore-python-sdk/badge.svg?branch=master    :target: https://coveralls.io/github/aliyun/aliyun-tablestore-python-sdk?branch=master.. image:: https://travis-ci.org/aliyun/aliyun-tablestore-python-sdk.svg    :target: https://travis-ci.org/aliyun/aliyun-tablestore-python-sdk概述----- 此Python SDK基于 `阿里云表格存储服务 &lt;http://www.aliyun.com/product/ots/&gt;`_  API 构建。- 阿里云表格存储是构建在阿里云飞天分布式系统之上的 NoSQL 数据存储服务，提供海量结构化数据的存储和实时访问。运行环境---------- 安装Python即可运行，支持python2.6、Python2.7、python3.3、python3.4、python3.5 和 python3.6。安装方法---------PIP安装--------.. code-block:: bash    $ pip install tablestoreGithub安装------------1. 下载源码.. code-block:: bash    $ git clone https://github.com/aliyun/aliyun-tablestore-python-sdk.git2. 安装.. code-block:: bash    $ python setup.py install源码安装--------1. 下载SDK发布包并解压2. 安装.. code-block:: bash    $ python setup.py install示例代码---------- `表操作（表的创建、获取、更新和删除） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/table_operations.py&gt;`_- `单行写（向表内写入一行数据） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/put_row.py&gt;`_- `单行读（从表内读出一样数据） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/get_row.py&gt;`_- `更新单行（更新某一行的部分字段） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/update_row.py&gt;`_- `删除某行（从表内删除某一行数据） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/delete_row.py&gt;`_- `批量写（向多张表，一次性写入多行数据） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/batch_write_row.py&gt;`_- `批量读（从多张表，一次性读出多行数据） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/batch_get_row.py&gt;`_- `范围扫描（给定一个范围，扫描出该范围内的所有数据） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/get_range.py&gt;`_- `主键自增列（主键自动生成一个递增ID） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/pk_auto_incr.py&gt;`_- `全局二级索引 &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/secondary_index_operations.py&gt;`_- `局部事务（提交事务） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/transaction_and_commit.py&gt;`_- `局部事务（舍弃事务） &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/transaction_and_abort.py&gt;`_- `Search &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/search_index.py&gt;`_- `Parallel Scan &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/parallel_scan.py&gt;`_- `Max/Min/Sum/Avg/Count/DistinctCount/Percentiles &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/agg.py&gt;`_- `GroupBy/Histogram &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/group_by.py&gt;`_- `SQL &lt;https://github.com/aliyun/aliyun-tablestore-python-sdk/blob/master/examples/sql_query.py&gt;`_执行测试---------**注意：测试case中会有清理某个实例下所有表的动作，所以请使用专门的测试实例来测试。**1. 安装nosetests.. code-block:: bash    $ pip install nose2. 设置执行Case的配置.. code-block:: bash    $ export OTS_TEST_ACCESS_KEY_ID=&lt;your access id&gt;    $ export OTS_TEST_ACCESS_KEY_SECRET=&lt;your access key&gt;    $ export OTS_TEST_ENDPOINT=&lt;tablestore service endpoint&gt;    $ export OTS_TEST_INSTANCE=&lt;your instance name&gt;2. 运行case.. code-block:: bash    $ nosetests tests/贡献代码--------- 我们非常欢迎大家为Tablestore Python SDK以及其他Tablestore SDK贡献代码。- 非常感谢 `@Wall-ee &lt;https://github.com/Wall-ee&gt;`_ 对4.3.0版本的贡献。联系我们--------- `阿里云Tablestore官方网站 &lt;http://www.aliyun.com/product/ots&gt;`_- `阿里云官网联系方式 &lt;https://help.aliyun.com/document_detail/61890.html&gt;`_</longdescription>
</pkgmetadata>