<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>shellfoundry============**Create, Innovate and Automate with ShellFoundry**|Chat| |BuildStatus| |CoverageStatus| |PyVersion| |PyPI| |DependencyStatus|Command line utility for CloudShell shells developers. The utility helpsto create a new shell based on a template, build an installable shellpackage and install a shell into your CloudShell.Installation============.. code:: bash    $ pip install shellfoundryUsage=====ShellFoundry streamlines the whole process of shell development from choosing a template, via code generation andinstallation.1. Choose a TOSCA template.. code:: bash    $ shellfoundry list2. Create a shell.. code:: bash    $ shellfoundry new &lt;shell&gt; â€“-template &lt;template&gt;    $ cd &lt;shell&gt;3. Define data model in shell-definition.yml4. Generate data model.. code:: bash    $ shellfoundry generate5. Implement logic in driver.py using classes from data\_model.py6. Install the shell package into Cloudshell.. code:: bash    $ shellfoundry installAdditional Links================-  For more commands and detailed usage please refer to `Documentation`_-  Opening issues and feature requests: `Issue Tracker`_-  Forum for questions and discussions: `Gitter.im`_License=======`Apache License 2.0`_.. _Documentation: docs/readme.md.. _Issue Tracker: https://github.com/QualiSystems/shellfoundry/issues.. _Gitter.im: https://gitter.im/QualiSystems/shellfoundry.. _Apache License 2.0: https://github.com/QualiSystems/shellfoundry/blob/master/LICENSE.. |Chat| image:: https://badges.gitter.im/QualiSystems/shellfoundry.svg   :target: https://gitter.im/QualiSystems/shellfoundry?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge.. |BuildStatus| image:: https://travis-ci.org/QualiSystems/shellfoundry.svg?branch=develop   :target: https://travis-ci.org/QualiSystems/shellfoundry.. |CoverageStatus| image:: https://coveralls.io/repos/github/QualiSystems/shellfoundry/badge.svg?branch=develop   :target: https://coveralls.io/github/QualiSystems/shellfoundry?branch=develop.. |PyVersion| image:: https://img.shields.io/pypi/pyversions/shellfoundry.svg?maxAge=2592000   :target: https://pypi.python.org/pypi/shellfoundry.. |PyPI| image:: https://img.shields.io/pypi/v/shellfoundry.svg?maxAge=2592000   :target: https://pypi.python.org/pypi/shellfoundry.. |DependencyStatus| image:: https://dependencyci.com/github/QualiSystems/shellfoundry/badge   :target: https://dependencyci.com/github/QualiSystems/shellfoundry=======History=======1.2.22 (2022-09-05)-------------------* Set default Python version for new Shells to &quot;3&quot;1.2.21 (2022-03-31)-------------------* Fixed issue with list command in offline mode* Fixed GH issue &quot;Uninformative error message when configured domain is incorrect #254&quot;* Fixed GH issue &quot;'Error' word repeats twice #251&quot;1.2.20 (2021-08-19)-------------------* Fixed password decryption error1.2.19 (2021-07-27)-------------------* Fixed encoding issue1.2.18 (2021-04-14)-------------------* Fixed encoding issue1.2.17 (2020-02-12)-------------------* Fixed error with click and cookiecutter versions incompatibility* Fixed multiple traceback issues1.2.16 (2020-01-02)-------------------* Fixed error with click and cookiecutter versions incompatibility* Fixed multiple traceback issues1.2.13 (2019-10-18)-------------------* Fixed password modification error1.2.11 (2019-08-14)-------------------* Added Python 3 support1.2.10 (2019-04-22)-------------------* Added setuptools to requirements* Changed setuptools import according to the latest version1.2.9 (2019-03-27)------------------* Added possibility to download dependencies from local CS repository during 'shellfoundry dist' command1.2.8 (2019-03-05)------------------* Fixed issue with wrong setuptools import1.2.7 (2019-02-12)------------------* Fixed issue in &quot;generate&quot; command after renaming root folder1.2.6 (2019-01-30)------------------* Added &quot;get_templates&quot; command* Added &quot;delete&quot; command* Removed driver zip-file after pack command* Added generating shell documentation based on the template1.2.5 (2018-10-04)------------------* Set strict python version1.2.4 (2018-09-26)------------------* Removed unnecessary cloudshell-automation-api dependency from requirements* Set static version for package click in requirements. click==6.71.2.2 (2018-08-16)------------------* Fixed bug in verification template and standards compatibility1.2.1 (2018-08-13)------------------* Added dynamical determination of minimal CloudShell version from templates1.2.0 (2018-07-26)------------------* Extended the &quot;new&quot; command behaviour for offline mode* Added verification is template and standard version are compatible1.1.9 (2018-05-03)------------------* Added offline mode functionality1.1.8 (2018-04-23)------------------* Fixed typo in pack command behaviour* Added new online template for Cloud Provider1.1.7 (2018-04-03)------------------* Shellfoundry will now pack deployment options if exists* Modified unpack method logic in extended command1.1.6 (2018-03-27)------------------* Added limitation installing a gen2 shell(regular/service) into a non global domain1.1.5 (2018-03-01)------------------* Added new online template for Traffic Generator Controller Service1.1.4 (2018-02-21)------------------* Added new online template for Traffic Generator Chassis 2 Generation1.1.2 (2018-01-09)------------------* Fixed extend command logic (unzip driver archive)1.1.1 (2017-11-14)------------------* Added new online templates* Added specific error message to Layer 1 Shells pack and install commands1.1.0 (2017-10-30)------------------* Added author field to shellfoundry configuration* Added extend command behavior* Added verification when upgrading an official shell to unofficial1.0.4 (2017-08-28)------------------* Fixed some inconsistencies between update and add shell specifically around the shell name1.0.3 (2017-06-28)------------------* list command aborts if there is a new major version on pypi* old shellfoundry versions are NOT supported anymore.  Please use `pip install shellfoundry -U` in order to upgrade to the newest version1.0.2 (2017-06-27)------------------* new command aborts if there is a new major version on pypi1.0.1 (2017-06-26)------------------* new command now conforms to CloudShell naming rules1.0.0 (2017-06-19)------------------* Please upgrade to this version as from now on, older versions will be obsolete* list command will now show templates that are installable on your cloudshell* new command will now create the latest version of the template that match the standards installed on your cloudshell* When invoking new or list commands, there will be a notification in the case of a new shellfoundry version0.2.7 (2017-05-16)------------------* Shellfoundry will now pack categories.xml if exists0.2.6 (2017-03-14)------------------* Fixed some minor bugs0.2.2 (2017-01-22)------------------* gen2/resource is the now the default template for new command instead of gen1/resource0.2.0 (2017-01-17)------------------* List command filtering parameters have changed (legacy =&gt; gen1, tosca =&gt; gen2)* Added another filtering parameter --layer1* Minimum CloudShell version column appears on list command output table* gen2 is now the default view for list command0.1.3 (2016-12-27)------------------* shellfoundry config will now echo all default configuration if not override by user0.1.2 (2016-12-26)------------------* Config command will now encrypt password field0.1.0 (2016-12-14)------------------* Show command was added to view all available versions of a template* A new option was added to the 'new' command. Please welcome --version. It enables template versioning on shellfoundry.0.0.44 (2016-12-12)-------------------* Fixed a bug in config command which caused shellfoundry to crash when config file was missing0.0.43 (2016-12-11)-------------------* List command is now able to filter results based on shell type (--tosca, --legacy, --all)0.0.41 (2016-12-08)-------------------* Config command was added to allow setting configuration once for all shells in addition to local configuration0.0.39 (2016-10-09)-------------------* Pack Shell icon if specified in shell-definition.yml file under metadata\template_icon for TOSCA based shells0.0.38 (2016-09-28)-------------------* Update reference to cloudshell-rest-api 7.2.0.7 to use PUT method in update shell0.0.35 (2016-09-15)-------------------* TOSCA support was added to pack and install commands* Generate command was added that generates driver data model in Python0.0.32 (2016-08-10)-------------------* Pack command downloads dependencies into dist directory* Dependency for git was removed* Local shell templates are supported* Proxy support was added for access to github0.0.31 (2016-08-04)-------------------* git prerequisite was removed. shellfoundry works without git being preinstalled0.0.28 (2016-07-07)-------------------* Installation of package into CloudShell was fixed0.0.26 (2016-06-23)-------------------* Images copied to the DataModel folder (Issue #21)0.0.17 (2016-05-25)-------------------* Proper error message when install command fails in logging in into CloudShell0.0.1 (2016-05-02)------------------* First release on PyPI.</longdescription>
</pkgmetadata>