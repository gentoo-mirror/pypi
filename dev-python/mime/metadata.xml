<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>MIME====[![Build Status](https://travis-ci.org/liluo/mime.png)](https://travis-ci.org/liluo/mime)MIME Types for Python, clone of [halostatue/mime-types](https://github.com/halostatue/mime-types).This library allows for the identification of a file's likely MIME content type.MIME types are used in MIME-compliant communications, as in e-mail or HTTPtraffic, to indicate the type of content which is transmitted. MIME Typesprovides the ability for detailed information about MIME entities (provided asa set of MIME Type objects) to be determined and used programmatically. Thereare many types defined by RFCs and vendors, so the list is long but notcomplete; don't hesitate to ask to add additional information. This libraryfollows the IANA collection of MIME types (see below for reference).MIME Types is built to conform to the MIME types of RFCs 2045 and 2231. Ittracks the [IANA registry](http://www.iana.org/assignments/media-types/)([ftp](ftp://ftp.iana.org/assignments/media-types)) with some unofficial typesadded from the [LTSW collection](http://www.ltsw.se/knbase/internet/mime.htp)and added by the users of MIME Types.### Installation```bashpip install mime```or```basheasy_install mime```### FeaturesMIME types are used in MIME entities, as in email or HTTP traffic.It is useful at times to have information available about MIME types (or, inversely, about files).A MIME Type stores the known information about one MIME type.```bashimport mimeplaintext = mime.Types['text/plain']# =&gt; [&lt;MIME::Type text/plain&gt;, &lt;MIME::Type text/plain&gt;]text = plaintext[0]print text.media_type             # =&gt; 'text'print text.sub_type               # =&gt; 'plain'print ' '.join(text.extensions)   # =&gt; 'txt asc c cc h hh cpp hpp dat hlp'print text.encoding               # =&gt; 'quoted-printable'print text.is_binary              # =&gt; Falseprint text.is_ascii               # =&gt; Trueprint text.is_obsolete            # =&gt; Falseprint text.is_registered          # =&gt; Trueprint str(text) == 'text/plain'   # =&gt; Trueprint mime.Type.simplify('x-appl/x-zip')  # =&gt; 'appl/zip'print mime.Types.any(lambda t: t.content_type == 'text/plain')  # =&gt; Trueprint mime.Types.all(lambda t: t.is_registered)                 # =&gt; Falsepy = mime.Types.of('script.py')[0]print py.content_type             # =&gt; 'application/x-python'print py.encoding                 # =&gt; '8bit'print py.is_binary                # =&gt; Falseprint py.simplified               # =&gt; 'application/python'rb_types = mime.Types.of('script.rb')rb = rb_types[0]print rb.content_type             # =&gt; 'application/x-ruby'print rb.is_ascii                 # =&gt; Trueprint rb.extensions               # =&gt; ['rb', 'rbw']import reimage_types = mime.Types[re.compile('image')]# =&gt; [&lt;MIME::Type image/vnd.microsoft.icon&gt;, &lt;MIME::Type application/x-imagemap&gt;, ...]print mime.Types.count()          # =&gt; 1643```### Contributing```bash* Fork the repository.* Create a topic branch.* Implement your feature or bug fix.* Add, commit, and push your changes.* Submit a pull request.```#### Testing```bashcd tests/python run.py```### Changelog__v0.1.0 [2016-08-04]__* Support Python 3.x__v0.0.3 [2013-11-07]__* Remove print.__v0.0.2 [2013-08-27]__* It's worked.__v0.0.1 [2013-08-13]__* Register name.</longdescription>
</pkgmetadata>