<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Autogenerated ApiGet Autogenerated Serializers and API EndPoints## Requirements```- django- djangorestframework``````Tested with all Django versions from `1.8.x to 2.x.x````### Released with latest version of `Django`.### Note```For Django==1.8.x- djangorestframework==3.4.2```## Installing autogenerated-apiautogenerated-api built for django.```bashpip install autogenerated_api```## Customizable Files in Apps```pyhtondjango_app architecture looks like- app_name- __init__.py- admin.py- models.py- serializers.py- tests.py- views.py```### serilizers.py```pythonfrom .models import ModelNamefrom autogenerated_api.serializers import DeadlySerializerFactoryModelNameDeadlySerializer = DeadlySerializerFactory(modelName)- DeadlySerializerFactory `Optional Paramaters`- nest = [&quot;field_1&quot;,&quot;field_2&quot;] - nested_fields = {&quot;field_name_in_releation&quot; : [&quot;related_model_field_1&quot;,&quot;related_model_field_2&quot;]}- if you want to get all fields of model while is in relation- nested_fields = {&quot;field_name_in_reletion&quot; : [&quot;*&quot;]}- exclude = [&quot;field_1&quot;,&quot;field_2&quot;] : fields that you want to excludeModelNameDeadlySerializer = DeadlySerializerFactory(modelName,nest,nested_fields,exclude)```## views.py```pythonimport app_name.modelsimport app_name.serializersfrom autogenerated_api.autogeneration import make_all_viewsetsmake_all_viewsets(__name__)```### Create a new file `api_urls.py` in main project folder.Main project folder Architecture```python- main_proj_name- __init__.py- settings.py- urls.py- wsgi.py- api_urls.py```### Add below codes in `api_urls.py` file.```pythonimport app_name.viewsfrom django.urls import path, re_path , includefrom autogenerated_api import autogenerated_urlsurlpatterns = autogenerated_urls.urlpatternsurlpatterns += []```## Adding to URLsAdd the Below `urls.py````pythonimport djangodj_version = django.get_version()from django.contrib import admintry:    from django.urls import path, include , re_pathexcept ImportError:    from django.conf.urls import include, urltry:     from django.core.urlresolvers import reverse except ImportError:     from django.urls import reverseimport reif re.search('^2[\d.]+',str(dj_version)):    urlpatterns = [            re_path(r'^api/', include(('main_proj_name.api_urls', 'main_proj_name') , namespace=&quot;api&quot;)),    ]else:    urlpatterns = [        url(r'^admin/', include(admin.site.urls)),        url(r'^api/', include('main_proj_name.api_urls' , namespace=&quot;api&quot;)),    ]```## Customizable Fields in Settings.```pythonAUTOGENERATE_APPS = [&quot;app_name&quot;]```### Finally, you will get autogenerated seraializers and end points.```- Autogenerated End Points- `/api/model_name_in_lower/` :  list out all the model_instance- `/api/model_name_in_lower/&lt;instance_id&gt;` : you will get detail of instance of given id  ```## Why use autogenerated_api?Through `autogenerated_api` module , you can directly create serializers coresponding to each model and can also access the all fields value of model which are in relation `(m2m or foreignkey relationship)`.To get the list of  model instance , You  have to write an api end points , like `ListAPiView` and for getting the detail of model instance, have to implement  `DetailAPIView or RetrieveApiView` end points.Now , You don't have to create these APi-end points and get worry about the serailizers . This module will take care. Just , follow the steps that i mentioned above. ### Coming- Module with more functionality and more autogenerated end points.``` I will really appreciate if you support the project by clicking the star button on Github repository ```</longdescription>
</pkgmetadata>