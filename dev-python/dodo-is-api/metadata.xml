<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://dodo-brands.stoplight.io&quot;&gt;&lt;img src=&quot;https://api.huntflow.io/logo/866df3c58ea44c158c6e36010631fd9f.jpg&quot;&gt;&lt;/a&gt;&lt;h1 align=&quot;center&quot;&gt;üçï Dodo IS API Wrapper&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/goretsky-integration/dodo-is-api-python-wrapper/actions/workflows/unittest.yaml&quot;&gt;&lt;img src=&quot;https://github.com/goretsky-integration/dodo-is-api-python-wrapper/actions/workflows/unittest.yaml/badge.svg&quot; alt=&quot;Test badge&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codecov.io/gh/goretsky-integration/dodo-is-api-python-wrapper&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/goretsky-integration/dodo-is-api-python-wrapper/branch/main/graph/badge.svg?token=unzlMmAjsD&quot;/&gt;&lt;/a&gt;&lt;img src=&quot;https://img.shields.io/badge/python-3.11-brightgreen&quot; alt=&quot;python&quot;&gt;&lt;/p&gt;---### InstallationVia pip:```shellpip install dodo-is-api```Via poetry:```shellpoetry add dodo-is-api```---#### üìù [Changelog](https://github.com/goretsky-integration/dodo-is-api-python-wrapper/blob/main/CHANGELOG.md) is here.---### üß™ Usage:- Delivery:    - [Late delivery vouchers](#get-late-delivery-vouchers-)- Production:    - [Stop sales](#get-stop-sales-)---#### üõµ Get late delivery vouchers:```pythonimport datetimefrom uuid import UUIDfrom dodo_is_api.connection import DodoISAPIConnectionfrom dodo_is_api.connection.http_clients import closing_http_clientfrom dodo_is_api.mappers import map_late_delivery_voucher_dtoaccess_token = 'my-token'country_code = 'kg'units = [UUID('e0ce0423-3064-4e04-ad3e-39906643ef14'), UUID('bd09b0a8-147d-46f7-8908-874f5f59c9a2')]from_date = datetime.datetime(year=2023, month=3, day=16)to_date = datetime.datetime(year=2023, month=3, day=17)with closing_http_client(access_token=access_token, country_code=country_code) as http_client:    dodo_is_api_connection = DodoISAPIConnection(http_client=http_client)    # it will handle pagination for you    for late_delivery_vouchers in dodo_is_api_connection.iter_late_delivery_vouchers(            from_date=from_date,            to_date=to_date,            units=units    ):        # map to dataclass DTO if you need        late_delivery_voucher_dtos = [            map_late_delivery_voucher_dto(late_delivery_voucher)            for late_delivery_voucher in late_delivery_vouchers        ]        ...```---#### üì¶ Get stop sales:```pythonimport datetimefrom uuid import UUIDfrom dodo_is_api.connection import DodoISAPIConnectionfrom dodo_is_api.connection.http_clients import closing_http_clientfrom dodo_is_api.mappers import map_stop_sale_by_ingredient_dtoaccess_token = 'my-token'country_code = 'kg'units = [UUID('e0ce0423-3064-4e04-ad3e-39906643ef14'), UUID('bd09b0a8-147d-46f7-8908-874f5f59c9a2')]from_date = datetime.datetime(year=2023, month=3, day=16)to_date = datetime.datetime(year=2023, month=3, day=17)with closing_http_client(access_token=access_token, country_code=country_code) as http_client:    dodo_is_api_connection = DodoISAPIConnection(http_client=http_client)    # for products - dodo_is_api_connection.get_stop_sales_by_products    # for sales channels - dodo_is_api_connection.get_stop_sales_by_sales_channels    stop_sales = dodo_is_api_connection.get_stop_sales_by_ingredients(        from_date=from_date,        to_date=to_date,        units=units    )    # map to dataclass DTO if you need    # use suitable mapper    # in this case, ingredient stop sale mapper is used    late_delivery_voucher_dtos = [        map_stop_sale_by_ingredient_dto(stop_sale)        for stop_sale in stop_sales    ]    ...```</longdescription>
</pkgmetadata>