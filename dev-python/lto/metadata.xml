<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![LTO github readme](https://user-images.githubusercontent.com/100821/196711741-96cd4ba5-932a-4e95-b420-42d4d61c21fd.png)# lto-api.pythonPython client library for interacting with LTO Network## Accounts### Create an accountThe chain_id is 'L' for the mainnet and 'T' testnet```pythonfrom lto.accounts.ed25519 import AccountFactoryaccount = AccountFactory(chain_id).create()```### Create an account from seed```pythonfrom lto.accounts.ed25519 import AccountFactoryaccount = AccountFactory(chain_id).create_from_seed(seed)```### Create an account from public key```pythonfrom lto.accounts.ed25519 import AccountFactoryaccount = AccountFactory(chain_id).create_from_public_key(public_key)```### Create an account from private key```pythonfrom lto.accounts.ed25519 import AccountFactoryaccount = AccountFactory(chain_id).create_from_private_key(private_key)```## Executing Transactions### Create transactionFirst a transaction needs to be created.```pythonfrom src.LTO.Transactions.Transfer import Transfertransaction = Transfer(recipient, amount)```The Transaction needs then to be signed.  In order to sign a transaction an account is needed.### Sign transaction```pythontransaction.sign_with(account)```### Broadcast transactionFor last the transaction needs to be broadcasted to the node. In order to do so we need to connect to the node using the PublicNode class.```pythonfrom src.LTO.PublicNode import PublicNodenode = PublicNode(url)```The url refers to the node, there are many nodes available, here there are two examples, one for the mainnet and one for the testnet* https://nodes.lto.network* https://testnet.lto.network```pythontransaction.broadcast_to(node)```## Transactions### Transfer Transaction```pythonfrom lto.transactions import Transfertransaction = Transfer(recipient, amount)```### Mass Transfer Transaction```pythonfrom lto.transactions import MassTransfertransaction = MassTransfer(transfers)```### Anchor Transaction```pythonfrom lto.transactions import Anchortransaction = Anchor(anchor)```### Lease Transaction```pythonfrom lto.transactions import Leasetransaction = Lease(recipient, amount)```### Cancel Lease Transaction```pythonfrom lto.transactions import CancelLeasetransaction = CancelLease(lease_id)```### SetScript Transaction```pythonfrom lto.transactions import SetScripttransaction = SetScript(script)```### Sponsorship transaction```pythonfrom lto.transactions import Sponsorshiptransaction = Sponsorship(recipient)```### Cancel Sponsorship transaction```pythonfrom lto.transactions import CancelSponsorshiptransaction = CancelSponsorship(recipient)```### Association transaction```pythonfrom lto.transactions import Associationtransaction = Association(recipient, association_type, anchor)```### Revoke Association transaction```pythonfrom lto.transactions import RevokeAssociationtransaction = RevokeAssociation(recipient, association_type, anchor)```### Data transaction```pythonfrom lto.transactions import Datatransaction = Data(data_entries)```### Register transaction```pythonfrom lto.transactions import Registertransaction = Register(account2, account3)```### Burn transaction```pythonfrom lto.transactions import Burntransaction = Burn(amount)```</longdescription>
</pkgmetadata>