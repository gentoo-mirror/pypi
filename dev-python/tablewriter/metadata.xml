<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![doc](https://img.shields.io/badge/-Documentation-blue)](https://cottephi.github.io/tablewriter)[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)#### Status[![pytests](https://github.com/cottephi/tablewriter/actions/workflows/pull-request.yml/badge.svg)](https://github.com/cottephi/tablewriter/actions/workflows/pull-request.yml)[![push-pypi](https://github.com/cottephi/tablewriter/actions/workflows/push-pypi.yml/badge.svg)](https://github.com/cottephi/tablewriter/actions/workflows/push-pypi.yml)[![push-doc](https://github.com/cottephi/tablewriter/actions/workflows/push-doc.yml/badge.svg)](https://github.com/cottephi/tablewriter/actions/workflows/push-doc.yml)![maintained](https://img.shields.io/badge/Maintained%3F-yes-green.svg)![issues](https://img.shields.io/github/issues/cottephi/tablewriter.svg)![pr](https://img.shields.io/github/issues-pr/cottephi/tablewriter.svg)#### Compatibilities![ubuntu](https://img.shields.io/badge/Ubuntu-supported--tested-success)![unix](https://img.shields.io/badge/Other%20Unix-supported--untested-yellow)![windows](https://img.shields.io/badge/Windows-supported--untesed-yellow)![python](https://img.shields.io/pypi/pyversions/tablewriter)##### Contact[![linkedin](https://img.shields.io/badge/LinkedIn-PhilippeCotte-blue)](https://www.linkedin.com/in/philippe-cotte-phd-83a273109/)[![mail](https://img.shields.io/badge/mail-maintainers-blue)](mailto:cottephi@gmail.com)# TableWriter## Instalation`pip install tablewriter`## DescriptionClass used to produce a ready-to-compile .tex file containing a table from a pandas or dask DataFrame object.Can also compile the .tex to produce a .pdf.Handles using additional latex packages through the *packages* argument. The given DataFrame is copied so anymodification of the  said DataFrame after instensiation of the TableWriter object has no effect on theTableWriter object, and vice-versa.You should not however modify the DataFrame contained in the TableWriter object, you should just create theTableWriter once you are sure that your DataFrame is ready.TableWriter uses pandas.DataFrame.to_latex and adds some more options to produce the .tex and the .pdf. Anyoption that must be given to the to_latex method can be given to TableWriter through the *to_latex_args*argument.Note that the content of the DataFrame will be converted to string. If the DataFrame contains one the followingcharacters (&quot;$&quot;, &quot;_&quot;, &quot;^&quot;, &quot;%&quot;, &quot;&amp;&quot;), a '\' is put before them.Mathmode using '$' is handled.## Usage```pythonfrom tablewriter import TableWriterimport pandas as pddf = pd.DataFrame(columns=[&quot;$x$&quot;, &quot;$x^2$&quot;],                  index=[&quot;$A_{00}$&quot;, &quot;$A_{01}$&quot;], data=[[2, 4], [3, 9]])table = TableWriter(df, path=&quot;ouput&quot;)table.compile()```TableWriter will use os.system('pdflatex ...') to create the pdf, so you need a working installation of it.In order not to flood the stdout with pdflatex ouput, which is quite verbose, it is silenced by default. If thecompilation fails TableWriter will return 'ValueError: Failed to compile pdf'. In that case, you can try torecompile if using```pythontable.compile(silenced=False)```To have the full output and try to understand what went wrong.By default, all files produced by LaTeX are deleted except the .tex and the .pdf. You can change this defaultbehavior :```python# To keep all files :table.compile(clean=False)# Or on the contrary, to remove also .tex :table.compile(clean_tex=True)```You can also do a compilation that will reuse the .tex file if it already exists:```pythontable.compile(recreate=False)```Here is a more complete example of table generation :```pythonfrom tablewriter import TableWriterimport pandas as pddf = pd.DataFrame(columns=[&quot;$x$&quot;, &quot;$x^2$&quot;], index=[&quot;$A_{00}$&quot;, &quot;$A_{01}$&quot;],                    data=[[&quot;2&quot;, &quot;$2^2$&quot;], [&quot;3&quot;, &quot;$3^2$&quot;]])table = TableWriter(    path_output=&quot;tests/data/ouput&quot;,    data=df,    to_latex_args={&quot;column_format&quot;: &quot;lrr&quot;},    label=&quot;tab::example&quot;,    caption=&quot;TableWriter example&quot;,    hide_numbering=True,)table.compile()```</longdescription>
</pkgmetadata>