<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># discord-typingsPython typings of all payloads that Discord sends as `TypedDict`s.## QuickstartThe library requires no setup except for installation. The easiest way toinstall it is through PyPI where it is similarly named `discord-typings`:```bashpip install discord-typings```Now, start importing the relevant typings directly from the library:```pythonfrom discord_typings import UserDatadef print_author(user: UserData) -&gt; None:    print(f&quot;Created by {user['username']}#{user['discriminator']}&quot;)print_author({    'id': '344404945359077377',    'username': 'Bluenix',    'discriminator': '7543',    'avatar': None})```It is also possible to import the library inside of a `TYPE_CHECKING`-clause:```pythonfrom typing import Any, TYPE_CHECKINGif TYPE_CHECKING:    from discord_typings import Snowflakeclass Data:    id: 'Snowflake'    value: Any```&gt; **Note**&gt; It is not recommended to import the library this way, as it does not allow&gt; you to introspect the annotations in other code. It is merely pointed out&gt; for completeness.## Naming and UsageThere is no documentation or API reference as this provides no value on top ofthe Discord developer documentation the types are based on. Typings are namedafter the object they represent, and there are little to no[exceptions](#exceptions) to this rule.Typings use suffixes to differentiate between potential wrapping objects inuser code - such as importing `UserData` to parse into a custom `User` class.These are `Data`, `Event`, and `Command`. `Event` refers to a gateway event*received* over the gateway while `Command` refers to a gateway command *sent*over the gateway. `Data` is used for any general objects like `UserData`.### ExceptionsTo differentiate between the data for complete application commands, and thedata Discord expects to receive to create an application command, there isa special-cased `ApplicationCommandPayload`.## Codestyle and ContributingDiscord-typings is a relatively simple library with little code, butunfortunately needs to be constantly maintained with Discord's API.The purpose of this library is for this to be a community effort;any help with maintenance is greatly appreciated.### StructureThe library follows the API docs both in terms of naming, structure, and orderinside of individual files. This should hopefully make it easier to find thecode to change when you have the documentation entry at hand.All internal imports should be done by importing the entire module, thenaccessing the typing as an attribute. If `from ... import ...`, or specificthings are imported, that is likely to create complicated circular imports.Inside of annotations, wrap the attribute access (`discord_typings.X`) inquotes to make it a string and defer its evaluation.All typings which directly represent a Discord payload (excluding typingscreated for the purpose of a `Union`) should be added to the file's `__all__`,then be added to the module's `__init__` and its `__all__`.</longdescription>
</pkgmetadata>