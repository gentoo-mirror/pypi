# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="espnet"
REALVERSION="202301"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_9,3_10,3_11} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="ESPnet: end-to-end speech processing toolkit"

HOMEPAGE="http://github.com/espnet/espnet"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/e/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all doc recipe test train"
DEPENDENCIES="dev-python/setuptools[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/configargparse[${PYTHON_USEDEP}]
	dev-python/typeguard[${PYTHON_USEDEP}]
	dev-python/humanfriendly[${PYTHON_USEDEP}]
	dev-python/scipy[${PYTHON_USEDEP}]
	dev-python/filelock[${PYTHON_USEDEP}]
	dev-python/librosa[${PYTHON_USEDEP}]
	dev-python/jamo[${PYTHON_USEDEP}]
	dev-python/PyYAML[${PYTHON_USEDEP}]
	dev-python/soundfile[${PYTHON_USEDEP}]
	dev-python/h5py[${PYTHON_USEDEP}]
	dev-python/kaldiio[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/torch-complex[${PYTHON_USEDEP}]
	dev-python/nltk[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/protobuf[${PYTHON_USEDEP}]
	dev-python/hydra-core[${PYTHON_USEDEP}]
	dev-python/opt-einsum[${PYTHON_USEDEP}]
	dev-python/sentencepiece[${PYTHON_USEDEP}]
	dev-python/ctc-segmentation[${PYTHON_USEDEP}]
	dev-python/pyworld[${PYTHON_USEDEP}]
	dev-python/pypinyin[${PYTHON_USEDEP}]
	dev-python/espnet-tts-frontend[${PYTHON_USEDEP}]
	dev-python/ci-sdr[${PYTHON_USEDEP}]
	dev-python/pytorch-wpe[${PYTHON_USEDEP}]
	dev-python/fast-bss-eval[${PYTHON_USEDEP}]
	dev-python/editdistance[${PYTHON_USEDEP}]
	dev-python/importlib-metadata[${PYTHON_USEDEP}]
	all? ( dev-python/torchaudio[${PYTHON_USEDEP}] )
	all? ( dev-python/torch-optimizer[${PYTHON_USEDEP}] )
	all? ( dev-python/fairscale[${PYTHON_USEDEP}] )
	all? ( dev-python/transformers[${PYTHON_USEDEP}] )
	all? ( dev-python/gtn[${PYTHON_USEDEP}] )
	all? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	all? ( dev-python/pillow[${PYTHON_USEDEP}] )
	all? ( dev-python/editdistance[${PYTHON_USEDEP}] )
	all? ( dev-python/wandb[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	all? ( dev-python/espnet-model-zoo[${PYTHON_USEDEP}] )
	all? ( dev-python/gdown[${PYTHON_USEDEP}] )
	all? ( dev-python/resampy[${PYTHON_USEDEP}] )
	all? ( dev-python/pysptk[${PYTHON_USEDEP}] )
	all? ( dev-python/morfessor[${PYTHON_USEDEP}] )
	all? ( dev-python/youtube-dl[${PYTHON_USEDEP}] )
	all? ( dev-python/nnmnkwii[${PYTHON_USEDEP}] )
	all? ( dev-python/museval[${PYTHON_USEDEP}] )
	all? ( dev-python/pystoi[${PYTHON_USEDEP}] )
	all? ( dev-python/mir-eval[${PYTHON_USEDEP}] )
	all? ( dev-python/fastdtw[${PYTHON_USEDEP}] )
	all? ( dev-python/nara-wpe[${PYTHON_USEDEP}] )
	all? ( dev-python/sacrebleu[${PYTHON_USEDEP}] )
	all? ( dev-python/praatio[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	doc? ( dev-python/Jinja2[${PYTHON_USEDEP}] )
	doc? ( dev-python/Sphinx[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-rtd-theme[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-argparse[${PYTHON_USEDEP}] )
	doc? ( dev-python/commonmark[${PYTHON_USEDEP}] )
	doc? ( dev-python/recommonmark[${PYTHON_USEDEP}] )
	doc? ( dev-python/nbsphinx[${PYTHON_USEDEP}] )
	doc? ( dev-python/sphinx-markdown-tables[${PYTHON_USEDEP}] )
	recipe? ( dev-python/espnet-model-zoo[${PYTHON_USEDEP}] )
	recipe? ( dev-python/gdown[${PYTHON_USEDEP}] )
	recipe? ( dev-python/resampy[${PYTHON_USEDEP}] )
	recipe? ( dev-python/pysptk[${PYTHON_USEDEP}] )
	recipe? ( dev-python/morfessor[${PYTHON_USEDEP}] )
	recipe? ( dev-python/youtube-dl[${PYTHON_USEDEP}] )
	recipe? ( dev-python/nnmnkwii[${PYTHON_USEDEP}] )
	recipe? ( dev-python/museval[${PYTHON_USEDEP}] )
	recipe? ( dev-python/pystoi[${PYTHON_USEDEP}] )
	recipe? ( dev-python/mir-eval[${PYTHON_USEDEP}] )
	recipe? ( dev-python/fastdtw[${PYTHON_USEDEP}] )
	recipe? ( dev-python/nara-wpe[${PYTHON_USEDEP}] )
	recipe? ( dev-python/sacrebleu[${PYTHON_USEDEP}] )
	recipe? ( dev-python/praatio[${PYTHON_USEDEP}] )
	recipe? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-timeouts[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-pythonpath[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/hacking[${PYTHON_USEDEP}] )
	test? ( dev-python/mock[${PYTHON_USEDEP}] )
	test? ( dev-python/pycodestyle[${PYTHON_USEDEP}] )
	test? ( dev-python/jsondiff[${PYTHON_USEDEP}] )
	test? ( dev-python/flake8[${PYTHON_USEDEP}] )
	test? ( dev-python/flake8-docstrings[${PYTHON_USEDEP}] )
	test? ( dev-python/black[${PYTHON_USEDEP}] )
	test? ( dev-python/isort[${PYTHON_USEDEP}] )
	test? ( dev-python/music21[${PYTHON_USEDEP}] )
	test? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	test? ( dev-python/pillow[${PYTHON_USEDEP}] )
	test? ( dev-python/editdistance[${PYTHON_USEDEP}] )
	test? ( dev-python/wandb[${PYTHON_USEDEP}] )
	test? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	train? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	train? ( dev-python/pillow[${PYTHON_USEDEP}] )
	train? ( dev-python/editdistance[${PYTHON_USEDEP}] )
	train? ( dev-python/wandb[${PYTHON_USEDEP}] )
	train? ( dev-python/tensorboard[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
