<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># getfilelistpy[![Build Status](https://travis-ci.org/tanaikech/getfilelistpy.svg?branch=master)](https://travis-ci.org/tanaikech/getfilelistpy)[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](LICENCE)&lt;a name=&quot;top&quot;&gt;&lt;/a&gt;# OverviewThis is a python library to retrieve the file list with the folder tree from the specific folder of own Google Drive and shared Drives.# DescriptionWhen I create applications for using Google Drive, I often retrieve a file list from a folder in the application. So far, I had created the script for retrieving a file list from a folder for each application. Recently, I thought that if there is the script for retrieving the file list with the folder tree from the folder of Google Drive as a library, it will be useful for me and other users. So I created this.## Features- This library retrieves all files from a folder in Google Drive.- All files include the folder structure in Google Drive.- Only folder tree can be also retrieved.# Install```$ pip install getfilelistpy```You can also check this library at [https://pypi.org/project/getfilelistpy/](https://pypi.org/project/getfilelistpy/).# Method| Method                | Explanation                                            || :-------------------- | :----------------------------------------------------- || GetFolderTree(object) | Retrieve only folder structure from a folder           || GetFileList(object)   | Retrieve file list with folder structure from a folder |# UsageThere are 3 patterns for using this library.## 1. Use API keyThis is a sample script using API key. When you want to retrieve the API key, please do the following flow.1. Login to Google.2. Access to [https://console.cloud.google.com/?hl=en](https://console.cloud.google.com/?hl=en).3. Click select project at the right side of &quot;Google Cloud Platform&quot; of upper left of window.4. Click &quot;NEW PROJECT&quot;   1. Input &quot;Project Name&quot;.   2. Click &quot;CREATE&quot;.   3. Open the created project.   4. Click &quot;Enable APIs and get credentials like keys&quot;.   5. Click &quot;Library&quot; at left side.   6. Input &quot;Drive API&quot; in &quot;Search for APIs &amp; Services&quot;.   7. Click &quot;Google Drive API&quot;.   8. Click &quot;ENABLE&quot;.   9. Back to [https://console.cloud.google.com/?hl=en](https://console.cloud.google.com/?hl=en).   10. Click &quot;Enable APIs and get credentials like keys&quot;.   11. Click &quot;Credentials&quot; at left side.   12. Click &quot;Create credentials&quot; and select API key.   13. Copy the API key. You can use this API key.### Sample script```pythonfrom getfilelistpy import getfilelistresource = {    &quot;api_key&quot;: &quot;#####&quot;,    &quot;id&quot;: &quot;### Folder ID ###&quot;,    &quot;fields&quot;: &quot;files(name,id)&quot;,}res = getfilelist.GetFileList(resource)  # or r = getfilelist.GetFolderTree(resource)print(res)```### Note- **When you want to retrieve the file list from the folder using API key, the folder is required to be shared.**- You can modify the property of `fields`. When this is not used, the default fields are used.## 2. Use OAuth2Document of OAuth2 is [here](https://developers.google.com/identity/protocols/OAuth2).### Sample script 1In this sample script for `oauth2client`.```pythonfrom httplib2 import Httpfrom oauth2client import file, client, toolsfrom getfilelistpy import getfilelistSCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly'store = file.Storage('token.json')creds = store.get()if not creds or creds.invalid:    flow = client.flow_from_clientsecrets('client_secret.json', SCOPES)    creds = tools.run_flow(flow, store)resource = {    &quot;oauth2&quot;: creds.authorize(Http()),    &quot;id&quot;: &quot;### Folder ID ###&quot;,    &quot;fields&quot;: &quot;files(name,id)&quot;,}res = getfilelist.GetFileList(resource)  # or r = getfilelist.GetFolderTree(resource)print(res)```&lt;a name=&quot;googleauthoauthlibsample&quot;&gt;&lt;/a&gt;### Sample script 2In this sample script for `google_auth_oauthlib`, the process of OAuth2 uses [the quickstart of Google](https://developers.google.com/drive/api/v3/quickstart/python). Please check this.```pythonimport pickleimport os.pathfrom google_auth_oauthlib.flow import InstalledAppFlowfrom google.auth.transport.requests import Requestfrom getfilelistpy import getfilelistSCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly'creds = NonecreFile = 'token.pickle'if os.path.exists(creFile):    with open(creFile, 'rb') as token:        creds = pickle.load(token)if not creds or not creds.valid:    if creds and creds.expired and creds.refresh_token:        creds.refresh(Request())    else:        flow = InstalledAppFlow.from_client_secrets_file(            'client_secret.json', SCOPES)        creds = flow.run_local_server()    with open(creFile, 'wb') as token:        pickle.dump(creds, token)resource = {    &quot;oauth2&quot;: creds,    &quot;id&quot;: &quot;### Folder ID ###&quot;,    &quot;fields&quot;: &quot;files(name,id)&quot;,}res = getfilelist.GetFileList(resource)  # or r = getfilelist.GetFolderTree(resource)print(res)```### Note- Here, as a sample, the script of the authorization uses the script of [quickstart](https://developers.google.com/drive/api/v3/quickstart/python).- You can modify the property of `fields`. When this is not used, the default fields are used.## 3. Use Service accountDocument of Service account is [here](https://developers.google.com/identity/protocols/OAuth2ServiceAccount).### Sample script```pythonfrom google.oauth2 import service_accountfrom getfilelistpy import getfilelistSCOPES = ['https://www.googleapis.com/auth/drive']SERVICE_ACCOUNT_FILE = 'service-account-credentials.json'credentials = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)resource = {    &quot;service_account&quot;: credentials,    &quot;id&quot;: &quot;### Folder ID ###&quot;,    &quot;fields&quot;: &quot;files(name,id)&quot;,}res = getfilelist.GetFileList(resource)  # or r = getfilelist.GetFolderTree(resource)print(res)```### Note- You can modify the property of `fields`. When this is not used, the default fields are used.# Values![](images/downloadFolder_sample.png)As a sample, when the values are retrieved from above structure, the results of `GetFolderTree()` becomes as follows.## Values retrieved by GetFolderTree()```pythonres = getfilelist.GetFolderTree(resource)print(res)``````json{  &quot;id&quot;: [    [&quot;folderIdOfsampleFolder1&quot;],    [&quot;folderIdOfsampleFolder1&quot;, &quot;folderIdOfsampleFolder_2a&quot;],    [&quot;folderIdOfsampleFolder1&quot;, &quot;folderIdOfsampleFolder_2b&quot;],    [      &quot;folderIdOfsampleFolder1&quot;,      &quot;folderIdOfsampleFolder_2a&quot;,      &quot;folderIdOfsampleFolder_2a_3a&quot;    ],    [      &quot;folderIdOfsampleFolder1&quot;,      &quot;folderIdOfsampleFolder_2b&quot;,      &quot;folderIdOfsampleFolder_2b_3a&quot;    ],    [      &quot;folderIdOfsampleFolder1&quot;,      &quot;folderIdOfsampleFolder_2b&quot;,      &quot;folderIdOfsampleFolder_2b_3b&quot;    ],    [      &quot;folderIdOfsampleFolder1&quot;,      &quot;folderIdOfsampleFolder_2b&quot;,      &quot;folderIdOfsampleFolder_2b_3b&quot;,      &quot;folderIdOfsampleFolder_2b_3b_4a&quot;    ]  ],  &quot;names&quot;: [    &quot;sampleFolder1&quot;,    &quot;sampleFolder_2a&quot;,    &quot;sampleFolder_2b&quot;,    &quot;sampleFolder_2a_3a&quot;,    &quot;sampleFolder_2b_3a&quot;,    &quot;sampleFolder_2b_3b&quot;,    &quot;sampleFolder_2b_3b_4a&quot;  ],  &quot;folders&quot;: [    &quot;folderIdOfsampleFolder1&quot;,    &quot;folderIdOfsampleFolder_2a&quot;,    &quot;folderIdOfsampleFolder_2b&quot;,    &quot;folderIdOfsampleFolder_2a_3a&quot;,    &quot;folderIdOfsampleFolder_2b_3a&quot;,    &quot;folderIdOfsampleFolder_2b_3b&quot;,    &quot;folderIdOfsampleFolder_2b_3b_4a&quot;  ]}```## Values retrieved by Do()```pythonres = getfilelist.GetFileList(resource)print(res)``````json{  &quot;searchedFolder&quot;: {    &quot;id&quot;: &quot;###&quot;,    &quot;name&quot;: &quot;sampleFolder1&quot;,    &quot;mimeType&quot;: &quot;application/vnd.google-apps.folder&quot;,    &quot;parents&quot;: [&quot;###&quot;],    &quot;createdTime&quot;: &quot;2000-01-01T01:23:45.000Z&quot;,    &quot;modifiedTime&quot;: &quot;2000-01-01T01:23:45.000Z&quot;,    &quot;webViewLink&quot;: &quot;https://drive.google.com/drive/folders/###&quot;,    &quot;owners&quot;: [      { &quot;displayName&quot;: &quot;###&quot;, &quot;permissionId&quot;: &quot;###&quot;, &quot;emailAddress&quot;: &quot;###&quot; }    ],    &quot;shared&quot;: true  },  &quot;folderTree&quot;: {    &quot;id&quot;: [      [&quot;folderIdOfsampleFolder1&quot;],      [&quot;folderIdOfsampleFolder1&quot;, &quot;folderIdOfsampleFolder_2a&quot;],      [&quot;folderIdOfsampleFolder1&quot;, &quot;folderIdOfsampleFolder_2b&quot;],      [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2a&quot;,        &quot;folderIdOfsampleFolder_2a_3a&quot;      ],      [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2b&quot;,        &quot;folderIdOfsampleFolder_2b_3a&quot;      ],      [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2b&quot;,        &quot;folderIdOfsampleFolder_2b_3b&quot;      ],      [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2b&quot;,        &quot;folderIdOfsampleFolder_2b_3b&quot;,        &quot;folderIdOfsampleFolder_2b_3b_4a&quot;      ]    ],    &quot;names&quot;: [      &quot;sampleFolder1&quot;,      &quot;sampleFolder_2a&quot;,      &quot;sampleFolder_2b&quot;,      &quot;sampleFolder_2a_3a&quot;,      &quot;sampleFolder_2b_3a&quot;,      &quot;sampleFolder_2b_3b&quot;,      &quot;sampleFolder_2b_3b_4a&quot;    ],    &quot;folders&quot;: [      &quot;folderIdOfsampleFolder1&quot;,      &quot;folderIdOfsampleFolder_2a&quot;,      &quot;folderIdOfsampleFolder_2b&quot;,      &quot;folderIdOfsampleFolder_2a_3a&quot;,      &quot;folderIdOfsampleFolder_2b_3a&quot;,      &quot;folderIdOfsampleFolder_2b_3b&quot;,      &quot;folderIdOfsampleFolder_2b_3b_4a&quot;    ]  },  &quot;fileList&quot;: [    {      &quot;folderTree&quot;: [&quot;folderIdOfsampleFolder1&quot;],      &quot;files&quot;: [        {          &quot;name&quot;: &quot;Spreadsheet1&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.spreadsheet&quot;        }      ]    },    {      &quot;folderTree&quot;: [&quot;folderIdOfsampleFolder1&quot;, &quot;folderIdOfsampleFolder_2a&quot;],      &quot;files&quot;: [        {          &quot;name&quot;: &quot;Spreadsheet2&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.spreadsheet&quot;        }      ]    },    {      &quot;folderTree&quot;: [&quot;folderIdOfsampleFolder1&quot;, &quot;folderIdOfsampleFolder_2b&quot;],      &quot;files&quot;: [        {          &quot;name&quot;: &quot;Spreadsheet4&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.spreadsheet&quot;        }      ]    },    {      &quot;folderTree&quot;: [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2a&quot;,        &quot;folderIdOfsampleFolder_2a_3a&quot;      ],      &quot;files&quot;: null    },    {      &quot;folderTree&quot;: [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2b&quot;,        &quot;folderIdOfsampleFolder_2b_3a&quot;      ],      &quot;files&quot;: [        {          &quot;name&quot;: &quot;Spreadsheet3&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.spreadsheet&quot;        }      ]    },    {      &quot;folderTree&quot;: [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2b&quot;,        &quot;folderIdOfsampleFolder_2b_3b&quot;      ],      &quot;files&quot;: null    },    {      &quot;folderTree&quot;: [        &quot;folderIdOfsampleFolder1&quot;,        &quot;folderIdOfsampleFolder_2b&quot;,        &quot;folderIdOfsampleFolder_2b_3b&quot;,        &quot;folderIdOfsampleFolder_2b_3b_4a&quot;      ],      &quot;files&quot;: [        {          &quot;name&quot;: &quot;Document1&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.document&quot;        },        {          &quot;name&quot;: &quot;image1.png&quot;,          &quot;mimeType&quot;: &quot;image/png&quot;        },        {          &quot;name&quot;: &quot;Slides1&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.presentation&quot;        },        {          &quot;name&quot;: &quot;Spreadsheet5&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.spreadsheet&quot;        },        {          &quot;name&quot;: &quot;StandaloneProject1&quot;,          &quot;mimeType&quot;: &quot;application/vnd.google-apps.script&quot;        },        {          &quot;name&quot;: &quot;Test1.txt&quot;,          &quot;mimeType&quot;: &quot;text/plain&quot;        }      ]    }  ],  &quot;totalNumberOfFiles&quot;: 10,  &quot;totalNumberOfFolders&quot;: 7}```# For other languagesAs the libraries &quot;GetFileList&quot; for other languages, there are following libraries.- Golang: [https://github.com/tanaikech/go-getfilelist](https://github.com/tanaikech/go-getfilelist)- Google Apps Script: [https://github.com/tanaikech/FilesApp](https://github.com/tanaikech/FilesApp)- Javascript: [https://github.com/tanaikech/GetFileList_js](https://github.com/tanaikech/GetFileList_js)- Node.js: [https://github.com/tanaikech/node-getfilelist](https://github.com/tanaikech/node-getfilelist)- Python: [https://github.com/tanaikech/getfilelistpy](https://github.com/tanaikech/getfilelistpy)---&lt;a name=&quot;licence&quot;&gt;&lt;/a&gt;# Licence[MIT](LICENCE)&lt;a name=&quot;author&quot;&gt;&lt;/a&gt;# Author[Tanaike](https://tanaikech.github.io/about/)If you have any questions and commissions for me, feel free to tell me.&lt;a name=&quot;Update_History&quot;&gt;&lt;/a&gt;# Update History- v1.0.0 (November 17, 2018)  1. Initial release.- v1.0.3 (July 16, 2019)  1. Markdown format was used to the readme file at [https://pypi.org/project/getfilelistpy/](https://pypi.org/project/getfilelistpy/).- v1.0.4 (August 23, 2019)  1. For OAuth2, `oauth2client` and `google_auth_oauthlib` got to be able to be used. About the sample script for `google_auth_oauthlib`, please see [this](#googleauthoauthlibsample).- v1.0.5 (May 15, 2020)  1. Shared drive got to be able to be used. The file list can be retrieved from both your Google Drive and the shared drive.     - For example, when the folder ID in the shared Drive is used `id` of `resource`, you can retrieve the file list from the folder in the shared Drive.- v1.0.6 (June 1, 2020)  1. When the file is retrieved from the shared drive, the parameter was not completed. This bug was removed.[TOP](#top)</longdescription>
</pkgmetadata>