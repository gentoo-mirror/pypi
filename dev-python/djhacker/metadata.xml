<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django-Hacker: customize default django forms~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Basic usage===========Install with ``pip install djhacker`` and then:.. code-block:: python    import djhacker    djhacker.formfield(        YourModel.your_field,        form_class=YourFormField,        custom_form_field_kwarg='something',    )This will make any Django ModelForm render a``YourFormField(custom_form_field_kwarg='something')`` by default, pluswhatever other kwargs it wants to add, you won't have to use any specific modelform, this will work natively in the admin for instance... note:: `form_class` is optionnal, you may as well just pass kwargs and not          change the default form class for a form field.Custom formfield callback=========================You can register custom form field for model field types:.. code-block:: python    @djhacker.register(models.ForeignKey)    def custom_fk_formfield(model_field, **kwargs):        return dict(            form_class=YourFormField,            custom_form_field_kwarg=something,            **kwargs,        )    # you don't need to pass extra arguments anymore for ForeignKey fields:    djhacker.formfield(YourModel.some_fk, queryset=Some.objects.all())Widget Script attributes========================Another thing Django is not doing anytime soon is `letting you customize scripttags &lt;https://code.djangoproject.com/ticket/33336&gt;`_. Which means there's noeasy way to combine Widget.Media.js and any of the nice new script tagattributes, including, but not limited to:- ``async``, ``defer``: good to control when your script is loaded- ``type=&quot;module&quot;``: to load a script as an EcmaScript Module (ESM) and use  importsLet's have this anyway, first patch Django's Media render_js:.. code-block:: python    import djhacker    djhacker.media_script_attributes()Then, let's customize a script tag:.. code-block:: python    class YourWidget(forms.Widget):        class Media:            js = [                'your/script.js[type=module][defer=true]',            ]It will render as such:.. code-block:: python    &lt;script src=&quot;/static/your/script.js&quot; type=&quot;module&quot; defer=&quot;true&quot;&gt;&lt;/script&gt;Upgrade=======To v0.2.x---------Registered callbacks now return a simple dict with the form field class inform_class... code-block:: python    @djhacker.register(models.ForeignKey)    def custom_fk_formfield(model_field, **kwargs):        return YourFormField, {            'custom_form_field_kwarg': 'something',            **kwargs,        )Becomes:.. code-block:: python    @djhacker.register(models.ForeignKey)    def custom_fk_formfield(model_field, **kwargs):        return dict(            form_class=YourFormField,            custom_form_field_kwarg=something,            **kwargs,        )</longdescription>
</pkgmetadata>