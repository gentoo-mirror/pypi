<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyZabbix**PyZabbix** is a Python module for working with the [Zabbix API](https://www.zabbix.com/documentation/current/manual/api/reference).[![CI](https://github.com/lukecyca/pyzabbix/actions/workflows/ci.yml/badge.svg)](https://github.com/lukecyca/pyzabbix/actions/workflows/ci.yml)[![PyPI Package Version](https://img.shields.io/pypi/v/pyzabbix.svg)](https://pypi.org/project/pyzabbix/)[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/pyzabbix.svg)](https://pypi.org/project/pyzabbix/)## Requirements- Tested against Zabbix 4.0 LTS, 5.0 LTS, 6.0 LTS and 6.4.## Documentation### Getting StartedInstall PyZabbix using pip:```bash$ pip install pyzabbix```You can now import and use pyzabbix like so:```pythonfrom pyzabbix import ZabbixAPIzapi = ZabbixAPI(&quot;http://zabbixserver.example.com&quot;)zapi.login(&quot;zabbix user&quot;, &quot;zabbix pass&quot;)# You can also authenticate using an API token instead of user/pass with Zabbix &gt;= 5.4# zapi.login(api_token='xxxxx')print(&quot;Connected to Zabbix API Version %s&quot; % zapi.api_version())for h in zapi.host.get(output=&quot;extend&quot;):    print(h['hostid'])```Refer to the [Zabbix API Documentation](https://www.zabbix.com/documentation/current/manual/api/reference) and the [PyZabbix Examples](https://github.com/lukecyca/pyzabbix/tree/master/examples) for more information.### Customizing the HTTP requestPyZabbix uses the [requests](https://requests.readthedocs.io/en/master/) library for HTTP. You can customize the request parameters by configuring the [requests Session](https://requests.readthedocs.io/en/master/user/advanced/#session-objects) object used by PyZabbix.This is useful for:- Customizing headers- Enabling HTTP authentication- Enabling Keep-Alive- Disabling SSL certificate verification```pythonfrom pyzabbix import ZabbixAPIzapi = ZabbixAPI(&quot;http://zabbixserver.example.com&quot;)# Enable HTTP authzapi.session.auth = (&quot;http user&quot;, &quot;http password&quot;)# Disable SSL certificate verificationzapi.session.verify = False# Specify a timeout (in seconds)zapi.timeout = 5.1# Login (in case of HTTP Auth, only the username is needed, the password, if passed, will be ignored)zapi.login(&quot;http user&quot;, &quot;http password&quot;)# You can also authenticate using an API token instead of user/pass with Zabbix &gt;= 5.4# zapi.login(api_token='xxxxx')```### Enabling debug loggingIf you need to debug some issue with the Zabbix API, you can enable the output of logging, pyzabbix already uses the default python logging facility but by default, it logs to &quot;Null&quot;, you can change this behavior on your program, here's an example:```pythonimport sysimport loggingfrom pyzabbix import ZabbixAPIstream = logging.StreamHandler(sys.stdout)stream.setLevel(logging.DEBUG)log = logging.getLogger('pyzabbix')log.addHandler(stream)log.setLevel(logging.DEBUG)zapi = ZabbixAPI(&quot;http://zabbixserver.example.com&quot;)zapi.login('admin','password')# You can also authenticate using an API token instead of user/pass with Zabbix &gt;= 5.4# zapi.login(api_token='xxxxx')```The expected output is as following:```Sending: {    &quot;params&quot;: {        &quot;password&quot;: &quot;password&quot;,        &quot;user&quot;: &quot;admin&quot;    },    &quot;jsonrpc&quot;: &quot;2.0&quot;,    &quot;method&quot;: &quot;user.login&quot;,    &quot;id&quot;: 2}Response Code: 200Response Body: {    &quot;jsonrpc&quot;: &quot;2.0&quot;,    &quot;result&quot;: &quot;.................&quot;,    &quot;id&quot;: 2}&gt;&gt;&gt;```## DevelopmentTo develop this project, start by reading the `Makefile` to have a basic understanding of the possible tasks.Install the project and the dependencies in a virtual environment:```shmake installsource .venv/bin/activate```### ReleasesTo release a new version, first bump the version number in `setup.py` by hand and run the release target:```shmake release```Finally, push the release commit and tag to publish them to Pypi:```shgit push --follow-tags```## LicenseLGPL 2.1 http://www.gnu.org/licenses/old-licenses/lgpl-2.1.htmlZabbix API Python Library.Original Ruby Library is Copyright (C) 2009 Andrew Nelson nelsonab(at)red-tux(dot)netOriginal Python Library is Copyright (C) 2009 Brett Lentz brett.lentz(at)gmail(dot)comThis library is free software; you can redistribute it and/ormodify it under the terms of the GNU Lesser General PublicLicense as published by the Free Software Foundation; eitherversion 2.1 of the License, or (at your option) any later version.This library is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNULesser General Public License for more details.You should have received a copy of the GNU Lesser General PublicLicense along with this library; if not, write to the Free SoftwareFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA</longdescription>
</pkgmetadata>