<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># DriveGoogle Drive client.## Install    python -m pip install driveWith Poetry:    poetry add drive## UsageThe API exposes a client as `drive.client.Client` that manipulates instances of`drive.files.File`. A `File` represent a Google Drive file. Note that bothregular files and directories are represented as `File`s, and a file can havemultiple parent directories. You can check if a `File` is a directory using the`is_directory` attribute.Note: &quot;Folder&quot; is just a synonym for &quot;Directory&quot;.### AuthenticationBy default, the client reads your service account key JSON file at the locationgiven by the environment variable `GOOGLE_APPLICATION_CREDENTIALS`. You canoverride this behavior by passing it directly:    client = Client(&quot;/path/to/your/service-account-key.json&quot;)See Google’s documentation on [how to create a service account key][k].[k]: https://cloud.google.com/iam/docs/creating-managing-service-account-keys### ClientHigh-level `Client` methods:* `get_file(file_id)` (`File`)* `get_file_by_name(name)` (`File`)* `files_shared_with_me()` (`File` list)* `get_shared_directory(name)` (`File`)* `root()` (`File`)* `upload_file(parent, path[, name])`: Upload a file* `upload_excel_workbook(parent, name, workbook)`: Upload an `openpyxl`  workbook in a Google spreadsheet under `parent` with the name `name`.The client also exposes low-level methods that work on file ids.### File* `id` (`str`, attribute)* `name` (`str`, attribute)* `is_directory` (`bool`, attribute)* `human_type` (`str`, attribute): Human-readable file type* `exists()` (`bool`)* `unlink()` (`bool`): Remove the file. If it's a directory, all its children  are removed as well* `rename(new_name)`: Rename the file* `move_in(new_parent[, new_name])`: Move a file under another directory. It  can also rename the file at the same time.* `list()`: List a directory’s content* `create_folder(name)`: Create a folder under the current one* `get_or_create_folder(name)`: Retrieve a child folder or create it if it  doesn’t exist* `get_child(name)`: Return a file under the current directory.* `parents()`: Return a file's parents* `parent()`: Return the first parent of a file* `download_file(path[, mime_type])`: Download the file at a given location* `download_workbook()`: Download the file as an `openpyxl` workbook* `json()`: Parse the file as JSON* `jsons()`: Parse the file as JSONS (one JSON per line) and returns a generatorMethods that operate on directories (e.g. `list()`) generally have no effect ifthe `File` instance is a regular file.### Examples```pythonfrom drive.client import Client# Uses credentials from the path in the environment variable# GOOGLE_APPLICATION_CREDENTIALS.cl = Client()# Get the root directoryd = cl.root()print(d.is_directory) # Trueprint(d.name) # e.g. &quot;My Drive&quot;# Get a directory's contentfor f in d.list():    print(f.name)# Get a shared directoryd = cl.get_shared_directory(&quot;My Shared Dir&quot;)```#### Spreadsheets```pythonfrom drive.client import Clientfrom openpyxl import Workbookcl = Client()# Downloadf = cl.get_file_by_name(&quot;my_sheet&quot;)workbook = f.download_workbook()  # openpyxl workbook# save your download:workbook.save(&quot;myfile.xlsx&quot;)# Uploadworkbook = Workbook()d = cl.get_shared_directory(&quot;My Shared Directory&quot;)cl.upload_excel_workbook(d, &quot;my_other_sheet&quot;, workbook)```#### Drawings```pythonfrom drive.client import Clientcl = Client()# download a Drawing in a png imagecl.download_file(&quot;11AASomeFileId&quot;, &quot;localfile.png&quot;, &quot;image/png&quot;)```## LicenseCopyright © 2016-2022 Baptiste FontaineDistributed under the MIT License.</longdescription>
</pkgmetadata>