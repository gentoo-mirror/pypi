<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Open in Streamlit](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://share.streamlit.io/polm/fugashi-streamlit-demo/main/demo.py)[![Current PyPI packages](https://badge.fury.io/py/fugashi.svg)](https://pypi.org/project/fugashi/)![Test Status](https://github.com/polm/fugashi/workflows/test-manylinux/badge.svg)[![PyPI - Downloads](https://img.shields.io/pypi/dm/fugashi)](https://pypi.org/project/fugashi/)![Supported Platforms](https://img.shields.io/badge/platforms-linux%20macosx%20windows-blue)# fugashi&lt;img src=&quot;https://github.com/polm/fugashi/raw/master/fugashi.png&quot; width=125 height=125 alt=&quot;fugashi by Irasutoya&quot; /&gt;fugashi is a Cython wrapper for [MeCab](https://taku910.github.io/mecab/), aJapanese tokenizer and morphological analysis tool.  Wheels are provided forLinux, OSX, and Win64, and UniDic is [easy to install](#installing-a-dictionary).**issueを英語で書く必要はありません。**Check out the [interactive demo][], see the [blog post](https://www.dampfkraft.com/nlp/fugashi.html) for backgroundon why fugashi exists and some of the design decisions, or see [thisguide][guide] for a basic introduction to Japanese tokenization.[guide]: https://www.dampfkraft.com/nlp/how-to-tokenize-japanese.html[interactive demo]: https://share.streamlit.io/polm/fugashi-streamlit-demo/main/demo.pyIf you are on an unsupported platform (like PowerPC), you'll need to installMeCab first. It's recommended you install [fromsource](https://github.com/taku910/mecab). If you need to build from source onWindows, [@chezou's fork](https://github.com/chezou/mecab) is recommended; see[issue #44](https://github.com/polm/fugashi/issues/44#issuecomment-954426115)for an explanation of the problems with the official repo.## Usage```pythonfrom fugashi import Taggertagger = Tagger('-Owakati')text = &quot;麩菓子は、麩を主材料とした日本の菓子。&quot;tagger.parse(text)# =&gt; '麩 菓子 は 、 麩 を 主材 料 と し た 日本 の 菓子 。'for word in tagger(text):    print(word, word.feature.lemma, word.pos, sep='\t')    # &quot;feature&quot; is the Unidic feature data as a named tuple```## Installing a Dictionaryfugashi requires a dictionary. [UniDic](https://unidic.ninjal.ac.jp/) isrecommended, and two easy-to-install versions are provided.  - [unidic-lite](https://github.com/polm/unidic-lite), a slightly modified version 2.1.2 of Unidic (from 2013) that's relatively small  - [unidic](https://github.com/polm/unidic-py), the latest UniDic 3.1.0, which is 770MB on disk and requires a separate download stepIf you just want to make sure things work you can start with `unidic-lite`, butfor more serious processing `unidic` is recommended. For production use you'llgenerally want to generate your own dictionary too; for details see the [MeCabdocumentation](https://taku910.github.io/mecab/learn.html).To get either of these dictionaries, you can install them directly using `pip`or do the below:```shpip install fugashi[unidic-lite]# The full version of UniDic requires a separate download steppip install fugashi[unidic]python -m unidic download```For more information on the different MeCab dictionaries available, see [this article](https://www.dampfkraft.com/nlp/japanese-tokenizer-dictionaries.html).## Dictionary Usefugashi is written with the assumption you'll use Unidic to process Japanese,but it supports arbitrary dictionaries. If you're using a dictionary besides Unidic you can use the GenericTagger like this:```pythonfrom fugashi import GenericTaggertagger = GenericTagger()# parse can be used as normaltagger.parse('something')# features from the dictionary can be accessed by field numbersfor word in tagger(text):    print(word.surface, word.feature[0])```You can also create a dictionary wrapper to get feature information as a named tuple. ```pythonfrom fugashi import GenericTagger, create_feature_wrapperCustomFeatures = create_feature_wrapper('CustomFeatures', 'alpha beta gamma')tagger = GenericTagger(wrapper=CustomFeatures)for word in tagger.parseToNodeList(text):    print(word.surface, word.feature.alpha)```## CitationIf you use fugashi in research, it would be appreciated if you cite this paper. You can read it at [the ACL Anthology](https://www.aclweb.org/anthology/2020.nlposs-1.7/) or [on Arxiv](https://arxiv.org/abs/2010.06858).    @inproceedings{mccann-2020-fugashi,        title = &quot;fugashi, a Tool for Tokenizing {J}apanese in Python&quot;,        author = &quot;McCann, Paul&quot;,        booktitle = &quot;Proceedings of Second Workshop for NLP Open Source Software (NLP-OSS)&quot;,        month = nov,        year = &quot;2020&quot;,        address = &quot;Online&quot;,        publisher = &quot;Association for Computational Linguistics&quot;,        url = &quot;https://www.aclweb.org/anthology/2020.nlposs-1.7&quot;,        pages = &quot;44--51&quot;,        abstract = &quot;Recent years have seen an increase in the number of large-scale multilingual NLP projects. However, even in such projects, languages with special processing requirements are often excluded. One such language is Japanese. Japanese is written without spaces, tokenization is non-trivial, and while high quality open source tokenizers exist they can be hard to use and lack English documentation. This paper introduces fugashi, a MeCab wrapper for Python, and gives an introduction to tokenizing Japanese.&quot;,    }## AlternativesIf you have a problem with fugashi feel free to open an issue. However, thereare some cases where it might be better to use a different library.- If you don't want to deal with installing MeCab at all, try [SudachiPy](https://github.com/WorksApplications/sudachi.rs).- If you need to work with Korean, try [pymecab-ko](https://github.com/NoUnique/pymecab-ko) or [KoNLPy](https://konlpy.org/en/latest/).## License and Copyright Noticefugashi is released under the terms of the [MIT license](./LICENSE). Pleasecopy it far and wide.fugashi is a wrapper for MeCab, and fugashi wheels include MeCab binaries.MeCab is copyrighted free software by Taku Kudo `&lt;taku@chasen.org&gt;` and NipponTelegraph and Telephone Corporation, and is redistributed under the [BSDLicense](./LICENSE.mecab).</longdescription>
</pkgmetadata>