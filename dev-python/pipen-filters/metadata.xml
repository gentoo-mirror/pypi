<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pipen-filtersAdd a set of useful filters for [pipen][1] templates.These filters can be used for both liquid and jinja2 templating in pipen.## Installation```shellpip install -U pipen-filters```## Enabling/Disabling the pluginThe plugin is registered via entrypoints. It's by default enabled. To disable it:`plugins=[..., &quot;no:filters&quot;]`, or uninstall this plugin.## Usage```pythonfrom pipen import Procclass MyProc(Proc):    input = &quot;infile:file&quot;    output = &quot;outfile:file:{{in.infile | stem}}.txt&quot;    ...```## Filters- Parse the symbolic links  - `realpath`: `os.path.realpath`  - `readlink`: `os.readlink`- Find common prefix of given paths  - `commonprefix`:      ```python      &gt;&gt;&gt; commonprefix(&quot;/a/b/abc.txt&quot;, &quot;/a/b/abc.png&quot;)      &gt;&gt;&gt; # &quot;abc.&quot;      &gt;&gt;&gt; commonprefix(&quot;/a/b/abc.txt&quot;, &quot;/a/b/abc.png&quot;, basename_only=False)      &gt;&gt;&gt; # &quot;/a/b/abc.&quot;      ```- Get parts of the path  - `dirname`: `path.dirname`  - `basename`: `path.basename`  - `ext`: get the extension (`/a/b/c.txt -&gt; .txt`)  - `ext0`: get the extension without dot (`/a/b/c.txt -&gt; txt`)  - `prefix`: get the prefix of a path (`/a/b/c.d.txt -&gt; /a/b/c.d`)  - `prefix0`: get the prefix of a path without dot in basename (`/a/b/c.d.txt -&gt; /a/b/c`)  - `filename`, `fn`, `stem`: get the stem of a path (`/a/b.c.txt -&gt; b.c`)  - `filename0`, `fn0`, `stem0`: get the stem of a path without dot (`/a/b.c.txt -&gt; b`)  - `joinpaths`: join path parts (`os.path.join`)  - `as_path`: convert a string into a `pathlib.Path` object- Path stat  - `isdir`: `os.path.isdir`  - `isfile`: `os.path.isfile`  - `islink`: `os.path.islink`  - `exists`: `os.path.exists`  - `getsize`: `os.path.getsize`, return -1 if the path doesn't exist  - `getmtime`: `os.path.getmtime`, return -1 if the path doesn't exist  - `getctime`: `os.path.getctime`, return -1 if the path doesn't exist  - `getatime`: `os.path.getatime`, return -1 if the path doesn't exist  - `isempty`: check if a file is empty- Quote data  - `quote`: put double quotes around data (`1 -&gt; &quot;1&quot;`)  - `squote`: put single quotes around data (`1 -&gt; '1'`)- Configurations  - `json`: `json.dumps`  - `json_dump`: Load json froma  file  - `json_dumps`: Alias of `json`  - `json_loads`: `json.loads`  - `toml`: `toml.dumps`  - `toml_dump`: Load toml from a file  - `toml_dumps`: Alias of `toml`  - `toml_loads`: `toml.loads`  - `config`: Load configuration from an object, a string or a file- Globs  - `glob`: Like `glob.glob`, but allows passing multiple parts of a path  - `glob0`: Like `glob`, but only returns the first matched path- Read file contents  - `read`: Read file content. You can also pass arguments to `open`  - `readlines`: Read file content as a list of lines. Additional arguments will be passed to `open`[1]: https://github.com/pwwang/pipen</longdescription>
</pkgmetadata>