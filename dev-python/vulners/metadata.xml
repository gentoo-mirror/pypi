<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># [Vulners API v3](https://vulners.com) Python wrapper# DescriptionPython 2/3 library for the [Vulners Database](https://vulners.com).It provides *search, data retrieval, archive and vulnerability scanning* API's for the integration purposes.With this library you can create powerful security tools and get access to the world largest security database.## Python versionLibrary was tested on a *python2* and *python3*.## How to installPackage is available with [PyPI](https://pypi.python.org/pypi) You can use pip for the installation```bashpip install -U vulners```## Obtaining Vulners API keyPlease, register at [Vulners website](https://vulners.com).Go to the personal menu by clicking at your name at the right top corner.Follow &quot;API KEYS&quot; tab.Generate API key with scope &quot;api&quot; and use it with the library.# Functions and methodsAll the callable methods are using [Vulners REST API](https://vulners.com/docs).### Search in database```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)heartbleed_related = vulners_api.find_all(&quot;heartbleed&quot;, limit=10)```### Get information about document by identificator```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)CVE_2017_14174 = vulners_api.get_bulletin(&quot;CVE-2017-14174&quot;)```### Get information about multiple documents by identificators```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)CVE_DATA = vulners_api.get_multiple_bulletins([&quot;CVE-2017-14174&quot;, &quot;CVE-2016-1175&quot;])```### Search for the public available exploits```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)wordpress_exploits = vulners_api.find_exploit_all(&quot;wordpress 4.7.0&quot;)```### Get vulnerabilities and exploits by software name and version```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)results = vulners_api.get_software_vulnerabilities(&quot;httpd&quot;, &quot;1.3&quot;)vulnerabilities_list = [results[key] for key in results if key not in (&quot;info&quot;, &quot;blog&quot;, &quot;bugbounty&quot;)]```### Get vulnerabilities by CPE product and version string```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)cpe_results = vulners_api.get_cpe_vulnerabilities(&quot;cpe:/a:cybozu:garoon:4.2.1&quot;)cpe_vulnerabilities_list = [cpe_results[key] for key in cpe_results if key not in (&quot;info&quot;, &quot;blog&quot;, &quot;bugbounty&quot;)]```### Get references for the vulnerability```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)references = vulners_api.get_bulletin_references(&quot;CVE-2014-0160&quot;)```### Get Windows KB superseeding and parentseeding information```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)# Superseeding information will be returned as a dict# with two keys: &quot;superseeds&quot; and &quot;parentseeds&quot;.# Superseeds means &quot;what KB are covered by this KB&quot;.# Parentseeds means &quot;what KB are covering this KB&quot;.superseeds = vulners_api.get_kb_seeds(&quot;KB4524135&quot;)```### Get Windows KB updates list and download urls```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)microsoft_updates_for_kb = vulners_api.get_kb_updates(&quot;KB4524135&quot;)updates_download_links = [update[&quot;href&quot;] for update in microsoft_updates_for_kb]```### Score any vulnerability description using [Vulners AI](https://lab.wallarm.com/new-from-wallarm-research-first-ai-based-tool-to-predict-vulnerability-risk-2d0a7e9b3474)```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)text_ai_score = vulners_api.get_ai_score(&quot;My cool vulnerability description&quot;)```### Get possible query autocompletions```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)possible_autocomplete = vulners_api.query_autocomplete(&quot;heartbleed&quot;)```### Download whole database collection and work with data locally```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)all_cve = vulners_api.get_collection(&quot;cve&quot;)```### Audit Windows hosts for installed security KB```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)win_vulners = vulners_api.kb_audit(os=&quot;Windows Server 2012 R2&quot;, kb_list=[&quot;KB4072650&quot;, &quot;KB2959936&quot;, &quot;KB2894856&quot;, &quot;KB2896496&quot;])need_2_install_kb = win_vulners[&quot;kbMissed&quot;]affected_cve = win_vulners[&quot;cvelist&quot;]```### Audit Linux hosts for vulnerabilities (RPM/DEB based)```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)# Example for CentOS 7# You can use it for any RPM based OS# Execute command: rpm -qa --qf '%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}\\n'# Use it as package variable inputcentos_vulnerabilities = vulners_api.os_audit(os=&quot;centos&quot;, version=&quot;7&quot;, packages=[&quot;glibc-common-2.17-157.el7_3.5.x86_64&quot;])vulnerable_packages = centos_vulnerabilities.get(&quot;packages&quot;)missed_patches_ids = centos_vulnerabilities.get(&quot;vulnerabilities&quot;)cve_list = centos_vulnerabilities.get(&quot;cvelist&quot;)how_to_fix = centos_vulnerabilities.get(&quot;cumulativeFix&quot;)# Example for Debian 8# You can use it for any DEB based OS# Execute command: dpkg-query -W -f='${Package} ${Version} ${Architecture}\\n'# Use it as package variable inputdebian_vulnerabilities = vulners_api.os_audit(os=&quot;debian&quot;, version=&quot;8&quot;, packages=['uno-libs3 4.3.3-2+deb8u7 amd64'])```### Download Linux (RPM/DEB based) vulnerability assessment data for local processing```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)# Example for CentOS 7centos_vulnerabilities_data = vulners_api.get_distributive(&quot;CentOS&quot;, &quot;7&quot;)```### Download web application vulnerability detection regex collection```pythonimport vulnersvulners_api = vulners.VulnersApi(api_key=&quot;YOUR_API_KEY_HERE&quot;)rules = vulners_api.get_web_application_rules()```</longdescription>
</pkgmetadata>