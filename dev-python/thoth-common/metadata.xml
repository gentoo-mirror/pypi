<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Thoth Common------------.. image:: https://img.shields.io/github/v/tag/thoth-station/common?style=plastic  :target: https://github.com/thoth-station/common/releases  :alt: GitHub tag (latest by date).. image:: https://img.shields.io/pypi/v/thoth-common?style=plastic  :target: https://pypi.org/project/thoth-common  :alt: PyPI - Module Version.. image:: https://img.shields.io/pypi/l/thoth-common?style=plastic  :target: https://pypi.org/project/thoth-common  :alt: PyPI - License.. image:: https://img.shields.io/pypi/dm/thoth-common?style=plastic  :target: https://pypi.org/project/thoth-common  :alt: PyPI - DownloadsA library used in project `Thoth &lt;https://thoth-station.ninja&gt;`_. It's aim isto provide core utilities for logger setup, manipulation with datetimes andsimilar handy helpers. Namely, you can find:* operations used for cluster object management (e.g. obtaining logs of pods)* operations used for scheduling workload using Argo Workflows* Thoth's configuration abstraction used for serialization/deserialization of  Thoth's config file across all the components* application logging setup* manipulation with date and timeInstallation============This project is released on `PyPI &lt;https://pypi.org/project/thoth-common&gt;`_, sothe latest release can be installed via pip or `Pipenv&lt;https://pipenv.readthedocs.io&gt;`_ as shown below:.. code-block:: console  pipenv install thoth-commonThis library will automatically discover installed packages and enable `Sentryintegrations &lt;https://docs.sentry.io/platforms/python/&gt;`_ if you use Flask,SQLAlchemy or AIOHTTP. An exception is for Flask applications, that need toexplicitly install ``sentry-sdk[flask]`` due to integrations dependencies.Logging setup=============To setup a logger in any of Thoth's component (component that are namespacedwith ``thoth``), you can simply set an environment variable. The name ofenvironment variable is constructed from module name. Let's say you want todebug ``thoth.adviser.pipeline`` module, in that case you can set environmentvariable ``THOTH_LOG_ADVISER_PIPELINE=DEBUG`` which will cause loggers``thoth.adviser.pipeline`` to be set to ``DEBUG`` mode. See `log-levelsdocumentation &lt;https://docs.python.org/3/library/logging.html#logging-levels&gt;`_for more info. If a module has underscore in its name, replace it with doubleunderscore in the environment variable name.To setup a logger that is not introduced by a Thoth's component, you can set``THOTH_ADJUST_LOGGING`` environment variable. The format of this environmentvariable ``THOTH_ADJUST_LOGGING`` is a comma separated list where each entry ismade out of a logger name and a corresponding log-level (&quot;``DEBUG``&quot;,&quot;``INFO``&quot;, &quot;``WARNING``&quot;, &quot;``ERROR``&quot; as for standard Python's logging). Thesetwo are delimited by a colon, an example:.. code-block:: console  THOTH_ADJUST_LOGGING=&quot;flask:WARNING,alembic.migrations:ERROR&quot;Structured logging==================The library will automatically detect when it is running inside an OpenShiftcluster (based on ``STI_SCRIPTS_PATH`` environment variable that is insertedinto the container if build the container was built in an OpenShift cluster),In such case, the library will setup structured logging suitable for automatedlogs aggregation (e.g. automated logs aggregation using the ELK stack). Thisbehavior can be suppressed by setting environment variable``THOTH_LOGGING_NO_JSON=1``.Ignoring reports from a logger==============================In some cases it's expected to turn off reporting of some logger to Sentry. Youcan provide ``THOTH_SENTRY_IGNORE_LOGGER`` environment variable which holds acomma separated list of loggers that should be ignored when reporting errors toSentry:.. code-block:: console  THOTH_SENTRY_IGNORE_LOGGER=&quot;thoth.adviser.resolver,thoth.adviser.run&quot;This is helpful if you want to report errors to users but not to Thothapplication itself.If you want some certain classes of error not to be reported to Sentry, you cancan provide ``THOTH_SENTRY_IGNORE_EXCEPTION`` environment variable which holdsa comma-separated list of exception classes to be ignored when reporting toSentry:.. code-block:: console  THOTH_SENTRY_IGNORE_EXCEPTION=&quot;connexion.decorators.validation,builtins.ValueError&quot;Remember all builtin exception classes need to be specified as in the samemanner as ``ValueError`` is specified above.</longdescription>
</pkgmetadata>