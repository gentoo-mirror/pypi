<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========richenum========.. image:: https://circleci.com/gh/hearsaycorp/richenum/tree/master.svg?style=svg    :alt: Build Status    :target: https://circleci.com/gh/hearsaycorp/richenum/tree/master.. image:: https://img.shields.io/pypi/v/richenum.svg    :alt: Latest PyPI Version    :target: https://pypi.python.org/pypi/richenum/.. image:: https://img.shields.io/pypi/pyversions/richenum.svg    :alt: Python versions    :target: https://pypi.org/project/richenum/.. image:: https://img.shields.io/pypi/dm/richenum.svg  :alt: Pypi Downloads  :target: https://pypi.org/project/richenum/=====About=====A enum library for Python.enum  A simple enum implementation that maps a &quot;variable&quot; to a constant.RichEnum  An enum implementation that offers more functionality than a basic enum, hence the  name: RichEnum. Provided functionality include specifying a canonical name and a display name.  The canonical name should be used if you need to do a lookup or reference in your code.  The display name should be used if you need to display text to a user.OrderedRichEnum  Exactly like RichEnum but also has an index specified for each enum value. Also, iteration over  an OrderedRichEnum will be sorted (ascending) by the enum value's index.-----Links-----| `GitHub &lt;https://github.com/hearsaycorp/richenum&gt;`_| `PyPi &lt;https://pypi.python.org/pypi/richenum/&gt;`_| `Blog post about the motivation behind RichEnum &lt;http://engineering.hearsaysocial.com/2013/09/16/enums-in-python/&gt;`_============Installation============.. code:: bash    $ pip install richenum=====Example Usage=====----enum----.. code:: python    &gt;&gt;&gt; from richenum import enum    &gt;&gt;&gt; MY_ENUM = enum(FOO=1, BAR=2)    &gt;&gt;&gt; MY_ENUM.FOO    1    &gt;&gt;&gt; MY_ENUM.BAR    2--------RichEnum--------.. code:: python    &gt;&gt;&gt; from richenum import RichEnum, RichEnumValue    &gt;&gt;&gt; class MyRichEnum(RichEnum):    ...    FOO = RichEnumValue(canonical_name=&quot;foo&quot;, display_name=&quot;Foo&quot;)    ...    BAR = RichEnumValue(canonical_name=&quot;bar&quot;, display_name=&quot;Bar&quot;)    ...    &gt;&gt;&gt; MyRichEnum.FOO    RichEnumValue - canonical_name: 'foo'  display_name: 'Foo'    &gt;&gt;&gt; MyRichEnum.from_canonical(&quot;foo&quot;)    RichEnumValue - canonical_name: 'foo'  display_name: 'Foo'---------------OrderedRichEnum---------------.. code:: python    &gt;&gt;&gt; from richenum import OrderedRichEnum, OrderedRichEnumValue    &gt;&gt;&gt; class MyOrderedRichEnum(OrderedRichEnum):    ...    FOO = OrderedRichEnumValue(index=1, canonical_name=&quot;foo&quot;, display_name=&quot;Foo&quot;)    ...    BAR = OrderedRichEnumValue(index=2, canonical_name=&quot;bar&quot;, display_name=&quot;Bar&quot;)    ...    &gt;&gt;&gt; MyOrderedRichEnum.FOO    OrderedRichEnumValue - idx: 1  canonical_name: 'foo'  display_name: 'Foo'    &gt;&gt;&gt; MyOrderedRichEnum.from_canonical(&quot;foo&quot;)    OrderedRichEnumValue - idx: 1  canonical_name: 'foo'  display_name: 'Foo'    &gt;&gt;&gt; MyOrderedRichEnum.from_index(1)    OrderedRichEnumValue - idx: 1  canonical_name: 'foo'  display_name: 'Foo'================Related Packages================django-richenum  Makes RichEnum and OrderedRichEnum available in as model fields and form fields in Django.  | `GitHub &lt;https://github.com/hearsaycorp/django-richenum&gt;`_  | `PyPi &lt;https://pypi.python.org/pypi/django-richenum/&gt;`_enum  Starting with Python 3.4, there is a standard library for enumerations.  This class has a similar API, but is not directly compatible with that  class.============Contributing============#. Fork the repo from `GitHub &lt;https://github.com/hearsaycorp/richenum&gt;`_.#. Make your changes.#. Add unittests for your changes.#. Run `pep8 &lt;https://pypi.python.org/pypi/pep8&gt;`_, `pyflakes &lt;https://pypi.python.org/pypi/pyflakes&gt;`_, and `pylint &lt;https://pypi.python.org/pypi/pyflakes&gt;`_ to make sure your changes follow the Python style guide and doesn't have any errors.#. Add yourself to the AUTHORS file (in alphabetical order).#. Send a pull request from your fork to the main repo.Changelog=========1.2.1 (2016-09-16)------------------    - ``EnumLookupError`` class now inherits from built-in ``LookupError``.1.2.0 (2016-04-15)------------------    - added simple ``LookupError`` members that are thrown when      ``RichEnum.lookup`` is called for a nonexistent attr/val pair.      Users can choose to catch either the specific ``LookupError`` or      continue to catch ``EnumLookupError``.1.1.0 (2014-04-17)------------------    - support for Python 3 and PyPy1.0.4 (2013-12-03)------------------    - Better unicode handling in ``__str__``, ``__unicode__``, and      ``__repr__`` magic methods.1.0.3 (2013-12-03)------------------    - Stop throwing warnings.1.0.2 (2013-11-05)------------------    - Suppress warnings from mismatched type comparisons when generated      in RichEnum.lookup.1.0.1 (2013-09-20)------------------    - Raise warnings when comparing enum values to other types, but not      when checking membership or comparing to None.1.0.0 (2013-08-16)------------------    - Initial public release.Developed and maintained by `Hearsay Social, Inc.&lt;http://hearsaysocial.com&gt;`_.Contributors============| `Adam DePue &lt;http://github.com/adepue&gt;`_| `Akshay Shah &lt;http://github.com/akshayjshah&gt;`_| `Dale Hui &lt;http://github.com/dhui&gt;`_| `Robert MacCloy &lt;http://github.com/rbm&gt;`_| `Sam Vilain &lt;http://github.com/samv&gt;`_</longdescription>
</pkgmetadata>