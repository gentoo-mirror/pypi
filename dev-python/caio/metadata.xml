<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python wrapper for AIO======================.. warning:: Native Linux aio implementation supports since 4.18 kernel version.Python bindings for Linux AIO API and simple asyncio wrapper.Example-------.. code-block:: python    import asyncio    from caio import AsyncioContext    loop = asyncio.get_event_loop()    async def main():        # max_requests=128 by default        ctx = AsyncioContext(max_requests=128)        with open(&quot;test.file&quot;, &quot;wb+&quot;) as fp:            fd = fp.fileno()            # Execute one write operation            await ctx.write(b&quot;Hello world&quot;, fd, offset=0)            # Execute one read operation            print(await ctx.read(32, fd, offset=0))            # Execute one fdsync operation            await ctx.fdsync(fd)            op1 = ctx.write(b&quot;Hello from &quot;, fd, offset=0)            op2 = ctx.write(b&quot;async world&quot;, fd, offset=11)            await asyncio.gather(op1, op2)            print(await ctx.read(32, fd, offset=0))            # Hello from async world    loop.run_until_complete(main())Troubleshooting---------------The ``linux`` implementation works normal for modern linux kernel versionsand file systems. So you may have problems specific for your environment.It's not a bug and might be resolved some ways:1. Upgrade the kernel2. Use compatible file system3. Use threads based or pure python implementation.The caio since version 0.7.0 contains some ways to do this.1. In runtime use the environment variable ``CAIO_IMPL`` withpossible values:* ``linux`` - use native linux kernels aio mechanism* ``thread`` - use thread based implementation written in C* ``python`` - use pure python implementation2.  File ``default_implementation`` located near ``__init__.py`` in caioinstallation path. It's useful for distros package maintainers. This filemight contains comments (lines starts with ``#`` symbol) and the first lineshould be one of ``linux`` ``thread`` or ``python``.Previous versions allows direct import of the target implementation.</longdescription>
</pkgmetadata>