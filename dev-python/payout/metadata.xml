<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![logo](https://redshepherdmedia.s3-us-west-2.amazonaws.com/red_logo_64.png &quot;logo&quot;)# Red Shepherd Python Payout API Docs### To Make Payouts Work, you need to do the following steps### Step 1. Create a Payout Account, ie the 3rd party you need to pay the funds to.### Step 2. Create an ACH token using _redpay_ API for their ACH bank info (routing number and account number)### Step 3. Add this token to their account### Step 4. Add a Payout Rate to their account which determines the parameters and frequency of their payouts### Step 5. Do not forget to Start Payouts on that account, otherwise the scheduler will not pick this account for payout scheduling## All these API Calls and steps are included in this documentation, if you have any questions please email support@redshepherd.com------## _Follow these steps for Simple API Integration_---### Step 1 a- Adding the payout library using pip&gt; **_Add the payout library to your code using pip_**```python&gt; pip install payout```---### Step 1 b - Create a Payout object for secure API methods&gt; **_Create a payout API object which lets you access all the payout functions_**```pythonfrom payout import Payout### REPLACE app and key with your PROD keys and use a valid account### These are DEMO Keys which you can safely use for testingapp = &quot;DEMO&quot;;key = &quot;MIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAtsQxNp3vmKVNYIxfWSi0LIRgCnPaMn0MUNouxgrs4zmg4cnvSeQ3I8YP03YbpXuWA80RvOw/nWErYAKomniJw8Y+xexMfBQ5sgJgewn3ZnRPNM9Y4Z62gwfIlsrs7Bwvpz9uUtLgeQLl1ffNaumnu1IBrqRps0EZ1QyDuu41UckTyo31C40Wez6IbeMfZeusrmPlIWqyBacdviJ5zHCA3zHNq86QMnB8HOP1U81HOSs6GTTelhD7lCoJ+fHKHxcz0MDr37fNpKpC57B0/20wBXFp9tlVtSkHcIty1lyNk2/HDH8knCdqkZk+fCvWgGwdex41x8/rM+LKC13c5J/yG6Gb2PnKhwNk4lvvnz73YAdqTUJ7qNrdtWVnOTWfbMBiNlpBCVqt8xY8UK6u83AVWrWXse0xe2Pn/kRqlXmxWT0mGEoCavjvZ9lQUL7LXAXZ1dff9r+oFUZo6xDQ3ER/OTIKa4jpvaI9S/J1drsrI1f9kkMWFwEh48dCPYplGSxzAgMBAAE=&quot;;### Use this payout object for all the API callspayout = Payout(app, key)```------## _Payout Account API Functions_---### Create a Payout Account&gt; **_Create a new Payout Account in the system which will later be configure to receive payouts from the Red Shepherd payout scheduler_**&gt;&gt; &gt; id should be unique identifier for each Payout Account&gt; &gt; **_rest of the request fields are self explanatory_**```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,  &quot;name&quot;: &quot;Pizza Pizza&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}print(&quot;CREATE PAYOUT ACCOUNT request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.CreatePayoutAccount(request)print(&quot;CREATE PAYOUT ACCOUNT response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**_CreatePayoutAccount Request Example_**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;name&quot;: &quot;Pizza Pizza&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}```**_CreatePayoutAccount Response_**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;logoUrl&quot;: null,  &quot;name&quot;: &quot;Pizza Pizza&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}```---### Update a Payout Account&gt; **Update an existing Payout Account in the system**&gt;&gt; &gt; id should be the unique identifier for an existing Payout Account&gt; &gt; **_rest of the request fields are self explanatory_**```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,  &quot;name&quot;: &quot;Johns Pizza Inc.&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}print(&quot;UPDATE PAYOUT ACCOUNT request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.UpdatePayoutAccount(request)print(&quot;UPDATE PAYOUT ACCOUNT response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**_UpdatePayoutAccount Request Example_**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;name&quot;: &quot;Johns Pizza Inc.&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}```**_UpdatePayoutAccount Response_**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;logoUrl&quot;: null,  &quot;name&quot;: &quot;Johns Pizza Inc.&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}```---### Find a Payout Account by Id&gt; **Get an existing Payout Account in the system**&gt;&gt; &gt; id should be the unique identifier for an existing Payout Account&gt; &gt; **_rest of the request fields are self explanatory_**```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,}print(&quot;FIND PAYOUT ACCOUNT request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.FindPayoutAccount(request)print(&quot;FIND PAYOUT ACCOUNT response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**_FindPayoutAccount Request Example_**```python{  &quot;id&quot;: &quot;PZZA&quot;,}```**_FindPayoutAccount Response_**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;logoUrl&quot;: null,  &quot;name&quot;: &quot;Johns Pizza Inc.&quot;,  &quot;address1&quot;: &quot;123 Main Street&quot;,  &quot;address2&quot;: &quot;Suite 2001&quot;,  &quot;city&quot;: &quot;Chicago&quot;,  &quot;state&quot;: &quot;IL&quot;,  &quot;zip&quot;: &quot;60004&quot;,  &quot;country&quot;: &quot;US&quot;,  &quot;contactName&quot;: &quot;John Smith&quot;,  &quot;contactPhone&quot;: &quot;312-899-8999&quot;,  &quot;contactEmail&quot;: &quot;john@pizzapizza.com&quot;,  &quot;website&quot;: &quot;www.pizzapizza.com&quot;,  &quot;status&quot;: &quot;A&quot;}```---## _Payout Token API Functions_---&gt; **_Using RedPay API Create a new Token for an ACH Account in the system which will later be configure to receive payouts from the Red Shepherd payout scheduler_**&gt; To Create an ACH token use the Redpay API Tokenize ACH Account method follow this documentation&gt; Library is hosted on pypi https://pypi.org/project/redpay/&gt; Once the Token is created for the account for the Receiving party, you can then add it to the Payout Account using the following Payout API Calls---### Add a Payout Token to an Existing Payout Account&gt; **_Add a ACH Payment token which was tokenized using the redpay api to attach it to an existing Payout Account_**&gt;&gt; &gt; id should be unique identifier for each Payout Account&gt;&gt; &gt; token is the ACH Account token for PZZA Account where they would like to get their deposits for their payouts&gt; &gt;&gt; &gt; &gt; note that if the payout account ACH information needs to be updated, just follow the same steps and add a new token to the same account```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,  &quot;token&quot;: &quot;fojid27g24u57zp1&quot;}print(&quot;ADD PAYOUT TOKEN request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.AddPayoutToken(request)print(&quot;ADD PAYOUT TOKEN response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**AddPayoutToken Request Example**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;token&quot;: &quot;fojid27g24u57zp1&quot;}```**AddPayoutToken Response**```python{  &quot;id&quot;: &quot;DEMO.PZZA.3&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;account&quot;: &quot;PZZA&quot;,  &quot;version&quot;: 3,  &quot;token&quot;: &quot;fojid27g24u57zp1&quot;,  &quot;timestamp&quot;: &quot;2021-03-02T22:49:52.4505780Z&quot;,  &quot;userId&quot;: null}```------## _Payout Rate API Functions_------&gt; **_Add a Payout Rate to an existing Payout Account_**&gt;&gt; &gt; Payout Rates control the amounts/ frequencies and other parameters for controlling the payout for each Payout Account### Add a Payout Rate to an Existing Payout Account&gt; &gt; id - unique identifier for each Payout Account&gt;&gt; &gt; trxPct - how much percent of each transaction should be given to the payout account&gt;&gt; &gt; trxFee - flat fee in cents for each transaction to be given to the payout account&gt;&gt; &gt; monthlyFee - monthly fee to be paid to the payout account, will be paid on monthlyPayDate day of the month&gt;&gt; &gt; monthlyPayDate - date on which the monthly fee is to be paid, (defaults to 1 if not set)&gt;&gt; &gt; yearlyFee - yearly fee to be paid to the payout account, will be paid on yearlyPayMonth month of the year&gt;&gt; &gt; yearlyPayMonth - month which the monthly fee is to be paid, (defaults to 1 (January) if not set)&gt;&gt; &gt; payFrequency - payment frequency for transaction based payments,&gt; &gt;&gt; &gt; &gt; D - Daily&gt; &gt; &gt; W - Weekly&gt; &gt; &gt; M - Monthly&gt;&gt; &gt; startDate - payout start date (optional)&gt;&gt; &gt; endDate - payout end date (optional)&gt;&gt; &gt; autoApproveLimit - anything under this limit is automatically paid, if you set this then any payout over this limit will go to review first```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,  # give payout account 80% of each transaction  &quot;trxPct&quot;: 80,  # give payout account 1 dollar (100 cents) flat fee per transaction  &quot;trxFee&quot;: 100}print(&quot;ADD PAYOUT RATE request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.AddPayoutRate(request)print(&quot;ADD PAYOUT RATE response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**AddPayoutRate Request Example**```python{  &quot;id&quot;: &quot;PZZA&quot;,  &quot;trxPct&quot;: 80,  &quot;trxFee&quot;: 100}```**AddPayoutRate Response**```python{  &quot;id&quot;: &quot;DEMO.PZZA.1&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;account&quot;: &quot;PZZA&quot;,  &quot;version&quot;: 1,  &quot;trxPct&quot;: 80,  &quot;trxFee&quot;: 100,  &quot;monthlyFee&quot;: 0,  &quot;monthlyPayDate&quot;: 0,  &quot;yearlyFee&quot;: 0,  &quot;yearlyPayMonth&quot;: 0,  &quot;status&quot;: null,  &quot;payFrequency&quot;: null,  &quot;startDate&quot;: null,  &quot;endDate&quot;: null,  &quot;autoApproveLimit&quot;: 0,  &quot;lastMontlyPayout&quot;: null,  &quot;lastYearlyPayout&quot;: null,  &quot;lastDailyTrxPayout&quot;: null,  &quot;lastWeeklyTrxPayout&quot;: null,  &quot;lastMontlyTrxPayout&quot;: null,  &quot;timestamp&quot;: &quot;2021-02-28T19:00:19.1518640Z&quot;,  &quot;userId&quot;: null}```---### Start Payouts&gt; **Start Payouts for an Existing Account**&gt;&gt; &gt; id should be the unique identifier for an existing Payout Account&gt;&gt; &gt; &quot;status&quot;: &quot;A&quot; means payout has been activated, so make sure you see that in the response```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,}print(&quot;START PAYOUTS request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.StartPayouts(request)print(&quot;START PAYOUTS response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**StartPayouts Request Example\_**```python{  &quot;id&quot;: &quot;PZZA&quot;,}```**StartPayouts Response\_**```python{  &quot;id&quot;: &quot;DEMO.PZZA.6&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;account&quot;: &quot;PZZA&quot;,  &quot;version&quot;: 6,  &quot;trxPct&quot;: 80,  &quot;trxFee&quot;: 100,  &quot;monthlyFee&quot;: 0,  &quot;monthlyPayDate&quot;: 0,  &quot;yearlyFee&quot;: 0,  &quot;yearlyPayMonth&quot;: 0,  &quot;status&quot;: &quot;A&quot;,  &quot;payFrequency&quot;: null,  &quot;startDate&quot;: null,  &quot;endDate&quot;: null,  &quot;autoApproveLimit&quot;: 0,  &quot;lastMontlyPayout&quot;: null,  &quot;lastYearlyPayout&quot;: null,  &quot;lastDailyTrxPayout&quot;: null,  &quot;lastWeeklyTrxPayout&quot;: null,  &quot;lastMontlyTrxPayout&quot;: null,  &quot;timestamp&quot;: &quot;2021-03-01T23:34:36.1005288Z&quot;,  &quot;userId&quot;: null}```---### Stop Payouts&gt; **Stop Payouts for an Existing Account**&gt;&gt; &gt; id should be the unique identifier for an existing Payout Account&gt;&gt; &gt; &quot;status&quot;: &quot;D&quot; means payout has been deactivated, so make sure you see that in the response```pythonimport jsonrequest = {  &quot;id&quot;: &quot;PZZA&quot;,}print(&quot;STOP PAYOUTS request &gt;&gt;&gt;&quot;)print(json.dumps(request, indent=2))response = payout.StopPayouts(request)print(&quot;STOP PAYOUTS response &gt;&gt;&gt;&quot;)print(json.dumps(response, indent=2))```**StopPayouts Request Example**```python{  &quot;id&quot;: &quot;PZZA&quot;,}```**StopPayouts Response**```python{  &quot;id&quot;: &quot;DEMO.PZZA.7&quot;,  &quot;app&quot;: &quot;DEMO&quot;,  &quot;account&quot;: &quot;PZZA&quot;,  &quot;version&quot;: 7,  &quot;trxPct&quot;: 80,  &quot;trxFee&quot;: 100,  &quot;monthlyFee&quot;: 0,  &quot;monthlyPayDate&quot;: 0,  &quot;yearlyFee&quot;: 0,  &quot;yearlyPayMonth&quot;: 0,  &quot;status&quot;: &quot;D&quot;,  &quot;payFrequency&quot;: null,  &quot;startDate&quot;: null,  &quot;endDate&quot;: null,  &quot;autoApproveLimit&quot;: 0,  &quot;lastMontlyPayout&quot;: null,  &quot;lastYearlyPayout&quot;: null,  &quot;lastDailyTrxPayout&quot;: null,  &quot;lastWeeklyTrxPayout&quot;: null,  &quot;lastMontlyTrxPayout&quot;: null,  &quot;timestamp&quot;: &quot;2021-03-01T23:34:36.1005288Z&quot;,  &quot;userId&quot;: null}```</longdescription>
</pkgmetadata>