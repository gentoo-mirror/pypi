<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>REPORTS=========.. image:: https://badge.fury.io/py/reports.svg    :target: https://pypi.python.org/pypi/reports.. image:: https://travis-ci.org/cokelaer/reports.svg?branch=master    :target: https://travis-ci.org/cokelaer/reports.. image:: https://coveralls.io/repos/github/cokelaer/reports/badge.svg?branch=master    :target: https://coveralls.io/github/cokelaer/reports?branch=master .. image:: http://readthedocs.org/projects/reports/badge/?version=latest    :target: http://reports.readthedocs.org/en/latest/?badge=latest    :alt: Documentation Status:Python version: Python 3.7, 3.8, 3.9:Online documentation: `On readthedocs &lt;http://reports.readthedocs.org/&gt;`_:Issues and bug reports: `On github &lt;https://github.com/cokelaer/reports/issues&gt;`_Reports is a  Python package that provides tools to create HTMLdocuments. It is based on a set of JINJA templates and a class called**Report**. In addition tools such as HTMLTable can help in the creation of HTMLtable to be included in the report.The package relies on Pandas for the HTML table creation, as shown in theexample below.We provide a simple JINJA example (stored with the pacakge in./share/data/templates/generic directory) and we let the users design their owntemplates.This is used in `GDSCTools &lt;http://gdsctools.readthedocs.org&gt;`_.Warnings========Reports is maintained but no new future will be added. It is maintained for theGDSCTools project but if you find it useful please feel free to use it.Installation============::     pip install reportsUsage======Example----------------Here below, we show the code used to create this `example &lt;_static/report/index.html&gt;`_.::    # We will create a Report and insert an HTML table in it    from reports import Report, HTMLTable    # Let us create some data. It will be a HTML table built using Pandas    # but you could create the HTML table code yourself.    import pandas as pd    # create a dataframe to play with. Note that there is a numeric column    # In addition, there is a column (Entry name) that will be transformed into URLs    df = pd.DataFrame({        &quot;Entry name&quot;:[&quot;ZAP70_HUMAN&quot;, &quot;TBK1_HUMAN&quot;],         &quot;Entry&quot;: [&quot;P43403&quot;, &quot;Q9UHD2&quot;],         &quot;Frequency&quot;: [0.5,0.9]})    # From reports, we convert the dataframe into a HTMLTable    table = HTMLTable(df)    # a numeric column can be colorized    table.add_bgcolor('Frequency', cmap=&quot;copper&quot;)    # part of URLs can be added to the content of a column    table.add_href('Entry', url='http://uniprot.org/uniprot/', suffix=&quot;&quot;)    html = table.to_html()    # Create a generic report. It has a set of tags that can be filled    # using the **jinja** attribute.    r = Report(&quot;generic&quot;)    # set the **summary** tag with the HTML code of the table    r.jinja['summary'] = html    # Generate and show the report    r.create_report(onweb=True)See the results in `example &lt;_static/report/index.html&gt;`_Using your own JINJA template-------------------------------------Create a directory called **test** and add a file called **index.html**Add this code::    &lt;h1&gt; {{ title }} &lt;/h1&gt;    &lt;p&gt; Number of reads : {{ reads }} &lt;/p&gt;Now, create your HTML files::    from reports import Report    report = Report(&quot;test&quot;)    report.jinja['title'] = 'Simple Example'    report.jinja['reads'] = &quot;123456&quot;    report.create_report(onweb=True)Issues===========Please fill bug report in https://github.com/cokelaer/reports</longdescription>
</pkgmetadata>