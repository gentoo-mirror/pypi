<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># LE core packageThis is package of core python utils for LE containing:- Looger- Proprietary LeBin protocol- Proprietary Modbus RTU register map handling - VisualModbus- Test frame- Logic Elements devices## InstallInstall or update version```pip install lecorepip install --upgrade lecore```# LE devices - Modbus RTU slaveThe following Modbus RTU devices are supported:## RTD Emulator4-channel RTD emulator, see https://logicelements.cz/en/products/rtd-emulator.Example of usage:```pythonimport lecore.Devices.RtdEmul as RE# Create RTD emulator objectrtd = RE.RtdEmul()# Open communication at COM2 (default is COM1) with default COM parametersrtd.open(comport='COM2')# Read serial numbersn = rtd.read(RE.Reg.FACT_SERIAL_NUMBER)# Write stock resistance and betartd.write(RE.Reg.EMUL_NTC_STOCK_RES, 10000)rtd.write(RE.Reg.EMUL_NTC_BETA, 3977)# Write emulated temperature at output 1rtd.write(RE.Reg.EMUL_TEMPERATURE_1, 30.5)```## VMS-1502 RTD Meter6-channel RTD meter, see https://logicelements.cz/en/products/rtd-meter.Example of usage:```pythonimport lecore.Devices.VmsRtd as RTD# Create RTD meter objectrtd = RTD.VmsRtd()# Open communication at COM2 (default is COM1) with default COM parametersrtd.open(comport='COM2')# Read fixed-point temperature at input 1 (fix-point is multiplied by 100)temp_fp = rtd.read(RTD.Reg.RTD_TEMPER_1) / 100# Read floating-point temperature at input 1temp_float = rtd.read(RTD.Reg.RTDE_TEMPER_FLOAT_1)# Write RTD type to PT1000 for input 1rtd.write(RTD.Reg.RTD_TYPE_1, 1)```## Phase Detector6-channel Power Grid Voltage Detector, see https://logicelements.cz/en/products/power-grid-voltage-detector.Example of usage:```pythonimport lecore.Devices.PhaseDet as PE# Create Phase Detector objectpe = PE.PhaseDet()# Open communication at COM2 (default is COM1) with default COM parameterspe.open(comport='COM2')# Read Pulse count on phase input L1count = pe.read(PE.Reg.PH_COUNTER_1)# Clear counts on all phase inputspe.write(PE.Reg.PH_CLEAR_ALL, 1)```# Third-party devices## FG-320Function generator, see https://www.profess.cz/en/mms/products/accessories/service-instruments/fg320Example of usage:```pythonimport lecore.Fg320 as FG# Create FG-320 objectfg = FG.Fg320('COM6')# Print FG-320 parameters (serial number, firmware version, etc.)fg.identify()# Generate analog signal with key phase mark fg.normal(function=&quot;SQ&quot;, frequency=10, amplitude=1, dc=0, angle=90, kp_high=11, kp_low=1)fg.write()# Generate current loop signalfg.current_dc(dc=5)fg.write()# Generate speed signalfg.speed(frequency=10)fg.write()```# LoogerClass Looger allows for sending debug data into Development Debug Server (DDS) a.k.a. Looger. Public instance run at https://looger.jablotron.czCreate instance when default public endpoint is to be used ```pythonimport lecore# Create Looger objectlooger = lecore.Looger()# Set device propertieslooger.set_device(0x111CC1234, 0, None)# Send data collection and text messagedata = {'data_1': 1, 'data_2': 2}log = f&quot;Message to log&quot;looger.send(data, log, 0)# Send just log messagelooger.send_log(log)```</longdescription>
</pkgmetadata>