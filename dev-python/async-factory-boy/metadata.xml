<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>async_factory_boy=================`factory_boy &lt;https://github.com/FactoryBoy/factory_boy&gt;`__ extensionwith asynchronous ORM supportRequirements-------------  python (3.8, 3.9, 3.10)Instalation-----------Install using ``pip``::   pip install async_factory_boyUsage-----async_factory_boy integrate with Object Relational Mapping (ORM) throughsubclass of ``factory.Factory``. All supported are listed below.-  SQLAlchemy, with   ``async_factory_boy.factory.sqlalchemy.AsyncSQLAlchemyFactory``.. code:: python   from async_factory_boy.factory.sqlalchemy import AsyncSQLAlchemyFactory   class TestModelFactory(AsyncFactory):       class Meta:           model = TestModel           session = session       name = Faker(&quot;name&quot;)       created_at = Faker(&quot;date_time&quot;)-  Tortoise ORM, with   ``async_factory_boy.factory.tortoise.AsyncTortoiseFactory``.. code:: python   from async_factory_boy.factory.tortoise import AsyncTortoiseFactory   class TestModelFactory(AsyncTortoiseFactory):       class Meta:           model = TestModel       name = Faker(&quot;name&quot;)       created_at = Faker(&quot;date_time&quot;)and factory usage.. code:: python   test = await TestModelFactory.create()   test = await TestModelFactory.build()For test configuration examples check ``tests/`` directory.^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</longdescription>
</pkgmetadata>