<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>#### [API Documentation and Manual][5]--------------------About=====The `python-slimta` project is a Python library offering the building blocksnecessary to create a full-featured [MTA][1]. Most MTAs must be configured, butan MTA built with `python-slimta` is coded. An MTA built with `python-slimta`can incorporate any protocol or policy, custom or built-in. An MTA built with`python-slimta` can integrate with other Python libraries and take advantage ofPython's great community.The `python-slimta` project is released under the [MIT License][4]. It istested for Python 3.6+.[![build](https://github.com/slimta/python-slimta/actions/workflows/python-package.yml/badge.svg)](https://github.com/slimta/python-slimta/actions/workflows/python-package.yml)[![PyPI](https://img.shields.io/pypi/v/python-slimta.svg)](https://pypi.python.org/pypi/python-slimta)[![PyPI](https://img.shields.io/pypi/pyversions/python-slimta.svg)](https://pypi.python.org/pypi/python-slimta)[![PyPI](https://img.shields.io/pypi/l/python-slimta.svg)](https://pypi.python.org/pypi/python-slimta)Getting Started===============Use a [virtualenv][2] to get started developing against `python-slimta`:    $ cd python-slimta/    $ python3 -m venv .venv    $ source .venv/bin/activate    (.venv)$ pip install -U pip wheel setuptoolsTo run the suite of unit tests included with `slimta`:    (.venv)$ pip install -r requirements-dev.txt    (.venv)$ py.testRunning the Example===================The example in [`examples/slimta-mail.py`](examples/slimta-mail.py) provides afully functional mail server for inbound and outbound email. To avoid needingto run as superuser, the example uses ports `1025`, `1465` and `1587` instead.It needs several things to run:* An activated `virtualenv` as created above in *Getting Started*.* A TLS certificate and key file. The easiest way to generate one:```openssl req -x509 -nodes -subj '/CN=localhost' -newkey rsa:1024 -keyout cert.pem -out cert.pem```* A populated [`examples/site_data.py`](examples/site_data.py) config file.Check out the in-line documentation with `--help`, and then run:    (.venv)$ ./slimta-mail.pyManually or with a mail client, you should now be able to deliver messages. Onport `1025`, messages will go to unique files in the current directory. On port`1587`, messages will be delivered to others using MX records! To try out a TLSconnection:    $ openssl s_client -host localhost -port 1587 -starttls smtpContributing============If you want to fix a bug or make a change, follow the [fork pull request][6]model. We've had quite a few [awesome contributors][7] over the years, and arealways open to more.Special thanks to [JocelynDelalande][8] for extensive work bringing Python 3compatibility to the project![1]: http://en.wikipedia.org/wiki/Message_transfer_agent[2]: http://pypi.python.org/pypi/virtualenv[3]: http://en.wikipedia.org/wiki/Open_mail_relay[4]: http://opensource.org/licenses/MIT[5]: http://slimta.org/[6]: https://help.github.com/articles/using-pull-requests/[7]: https://github.com/slimta/python-slimta/graphs/contributors[8]: https://github.com/JocelynDelalande## The MIT License (MIT)Copyright (c) 2021 Ian GoodPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.</longdescription>
</pkgmetadata>