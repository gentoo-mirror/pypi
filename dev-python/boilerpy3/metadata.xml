<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># BoilerPy3![build](https://github.com/jmriebold/BoilerPy3/workflows/Tests/badge.svg)## AboutBoilerPy3 is a native Python [port](https://github.com/natural/java2python) of Christian Kohlsch√ºtter's [Boilerpipe](https://github.com/kohlschutter/boilerpipe) library, released under the Apache 2.0 Licence.This package is based on [sammyer's](https://github.com/sammyer) [BoilerPy](https://github.com/sammyer/BoilerPy), specifically [mercuree's](https://github.com/mercuree) [Python3-compatible fork](https://github.com/mercuree/BoilerPy). This fork updates the codebase to be more Pythonic (proper attribute access, docstrings, type-hinting, snake case, etc.) and make use Python 3.6 features (f-strings), in addition to switching testing frameworks from Unittest to PyTest.**Note**: This package is based on Boilerpipe 1.2 (at or before [this commit](https://github.com/kohlschutter/boilerpipe/tree/b0816590340f4317f500c64565b23beb4fb9a827)), as that's when the code was originally ported to Python. I experimented with updating the code to match Boilerpipe 1.3, however because it performed worse in my tests, I ultimately decided to leave it at 1.2-equivalent.## InstallationTo install the latest version from PyPI, execute:```shellpip install boilerpy3```If you'd like to try out any unreleased features you can install directly from GitHub like so:```shellpip install git+https://github.com/jmriebold/BoilerPy3```## Usage### Text ExtractionThe top-level interfaces are the Extractors. Use the `get_content()` methods to extract the filtered text.```pythonfrom boilerpy3 import extractorsextractor = extractors.ArticleExtractor()# From a URLcontent = extractor.get_content_from_url('http://example.com/')# From a filecontent = extractor.get_content_from_file('tests/test.html')# From raw HTMLcontent = extractor.get_content('&lt;html&gt;&lt;body&gt;&lt;h1&gt;Example&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;')```### Marked HTML ExtractionTo extract the HTML chunks containing filtered text, use the `get_marked_html()` methods.```pythonfrom boilerpy3 import extractorsextractor = extractors.ArticleExtractor()# From a URLcontent = extractor.get_marked_html_from_url('http://example.com/')# From a filecontent = extractor.get_marked_html_from_file('tests/test.html')# From raw HTMLcontent = extractor.get_marked_html('&lt;html&gt;&lt;body&gt;&lt;h1&gt;Example&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;')```### OtherAlternatively, use `get_doc()` to return a Boilerpipe document from which you can get more detailed information.```pythonfrom boilerpy3 import extractorsextractor = extractors.ArticleExtractor()doc = extractor.get_doc_from_url('http://example.com/')content = doc.contenttitle = doc.title```## ExtractorsAll extractors have a `raise_on_failure` parameter (defaults to `True`). When set to `False`, the `Extractor` will handle exceptions raised during text extraction and return any text that was successfully extracted. Leaving this at the default setting may be useful if you want to fall back to another algorithm in the event of an error.### DefaultExtractorUsually worse than ArticleExtractor, but simpler/no heuristics. A quite generic full-text extractor.### ArticleExtractorA full-text extractor which is tuned towards news articles. In this scenario it achieves higher accuracy than DefaultExtractor. Works very well for most types of Article-like HTML.### ArticleSentencesExtractorA full-text extractor which is tuned towards extracting sentences from news articles.### LargestContentExtractorA full-text extractor which extracts the largest text component of a page. For news articles, it may perform better than the DefaultExtractor but usually worse than ArticleExtractor### CanolaExtractorA full-text extractor trained on [krdwrd](http://krdwrd.org) [Canola](https://krdwrd.org/trac/attachment/wiki/Corpora/Canola/CANOLA.pdf). Works well with SimpleEstimator, too.### KeepEverythingExtractorDummy extractor which marks everything as content. Should return the input text. Use this to double-check that your problem is within a particular Extractor or somewhere else.### NumWordsRulesExtractorA quite generic full-text extractor solely based upon the number of words per block (the current, the previous and the next block).## Notes### Getting Content from URLsWhile BoilerPy3 provides `extractor.*_from_url()` methods as a convenience, these are intended for testing only. For more robust functionality, in addition to full control over the request itself, it is strongly recommended to use the [Requests package](https://docs.python-requests.org/) instead, calling `extractor.get_content()` with the resulting HTML.```pythonimport requestsfrom boilerpy3 import extractorsextractor = extractors.ArticleExtractor()# Make request to URLresp = requests.get('http://example.com/')# Pass HTML to Extractorcontent = extractor.get_content(resp.text)```</longdescription>
</pkgmetadata>