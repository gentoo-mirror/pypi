<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sphinx-execute-code===================Sphinx-execute-code is an extension for Sphinx that allows a document authorto insert arbitrary python code samples in code blocks, or run python codefrom python files on the filesystem.This was written as an alternative to other code execution functions whichrelied on doctest formats, and attempts to be more flexible, similar toliteral-block and code-block statements... warning:: This module allows you to run arbitrary code, and should be treated with caution.Options-------Options right now (as of version 0.2) are:linenos    If specified, will show line numbersoutput_language    Customizes pygments lexxer for specified language (Eg, Javascript, bash)hide_code    If specified, will hide the code block and only show resultshide_headers    If specified, hides the 'Code' and 'Results' caption headers around    the literal blocksfilename    If specified, will load code from a file (relative to sphinx doc root)    and ignore content.execute_code------------Running 'execute_code' as a directive allows the administrator to embed exactpython code as if it was pasted in a normal code-block.Executing python code and showing the result output::    .. execute_code::        :linenos:        print 'python highlight code'        class Foo(object):            def __init__(self):                self.bar = 'baz'            def out(self):                print self.bar        f = Foo()        f.out()Output language---------------Customizing the output syntax can be helpful to make it easy to documentany other pygments lexxer - eg ini, javascriptWe can customize the output language parser (for JSON/Javascript)::    .. execute_code::        :output_language: javascript        print &quot;'{foo-bar-baz}'&quot;Hiding code-----------You may want to hide the example code that is executing(avoiding highlighting/etc) and display the results only.We can also hide the code input, showing only the executed code results::    .. execute_code::        :hide_code:        print 'This should not print the example code'Suppressing output headers--------------------------Suppressing the 'Headers' outputs for Code and Results header::    .. execute_code::       :hide_headers:       foo = 32       print 'This will hide the Code and Results text - and foo is %d' % fooExecuting python code from a file---------------------------------execute_code also allows you to import a python file and executeit within a document.Running a Python file from filename from the .py example::    .. execute_code::       :filename: tests/example_class.pyThis function also supports the argument 'hide_filename'::    .. execute_code::       :filename: tests/example_class.py       :hide_filename:Installation============Installation from source::    $ git clone git@github.com:jpsenior/sphinx-execute-code.git    $ python setup.py installInstallation from pypi::    $ pip install sphinx-execute-codeActivating on Sphinx====================To activate the extension, add it to your extensions variable in conf.pyfor your project.Activating the extension in sphinx::    extensions.append('sphinx_execute_code')</longdescription>
</pkgmetadata>