<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sysrsync&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;[![All Contributors](https://img.shields.io/badge/all_contributors-2-orange.svg?style=flat-square)](#contributors-)&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt;Simple and safe native rsync wrapper for Python 3[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=gchamon_sysrsync&amp;metric=alert_status)](https://sonarcloud.io/dashboard?id=gchamon_sysrsync)## Requirements* rsync* python 3.6+**development**:* poetry (be sure to have both poetry and pip upgraded to the latest version)## Installation`pip install sysrsync`## Basic rules- Syncs source contents by default, so it adds a trailing slash to the end of source, unless `sync_source_contents=False` is specified- Removes trailing slash from destination- Extra arguments are put right after `rsync`- Breaks if `source_ssh` and `destination_ssh` are both set## Usage* Basic file sync```pythonimport sysrsyncsysrsync.run(source='/home/user/foo.txt',             destination='/home/server/bar')# runs 'rsync /home/users/foo.txt /home/server/files'```* sync whole folder```pythonimport sysrsyncsysrsync.run(source='/home/user/files',             destination='/home/server/',             sync_source_contents=False)# runs 'rsync /home/user/files /home/server'```* sync folder contents```pythonimport sysrsyncsysrsync.run(source='/home/user/files',             destination='/home/server/',             sync_source_contents=True)# runs 'rsync /home/user/files/ /home/server'```* ssh with options```pythonimport sysrsyncsysrsync.run(source='/home/user/files',             destination='/home/server/files',             destination_ssh='myserver',             options=['-a'])# runs 'rsync -a /home/users/files/ myserver:/home/server/files'```* exclusions```pythonimport sysrsyncsysrsync.run(source='/home/user/files',             destination='/home/server/files',             destination_ssh='myserver',             options=['-a'],             exclusions=['file_to_exclude', 'unwanted_file'])# runs 'rsync -a /home/user/files/ myserver:/home/server/files --exclude file_to_exclude --exclude unwanted_file'```* Private key```pythonimport sysrsyncsysrsync.run(source='/home/user/files',             destination='/home/server/files',             destination_ssh='myserver',             private_key=&quot;totally_secure_key&quot;)# runs 'rsync --rsh='ssh -i totally_secure_key' /home/user/files/ myserver:/home/server/files'```## API`sysrsync.run`| argument  | type | default | description || --------- | ---- | ------- | ----------- || cwd  | str  | `os.getcwd()` | working directory in which subprocess will run the rsync command || strict  | bool | `True` | raises `RsyncError` when rsync return code is different than 0  || verbose | bool | `False` | verbose mode: currently prints rsync command before executing || **kwargs | dict | Not Applicable | arguments that will be forwarded to call to `sysrsync.get_rsync_command` |**returns**: `subprocess.CompletedProcess`**raises**:- `RsyncError` when `strict = True` and rsync return code is different than 0 ([Success](https://lxadm.com/Rsync_exit_codes#List_of_standard_rsync_exit_codes))`sysrsync.get_rsync_command`| argument  | type | default | description || --------- | ---- | ------- | ----------- || source | str | - | Source folder or file || destination | str | - | Destination folder || source_ssh | Optional[str] | None | Remote ssh client where source is located || destination_ssh | Optional[str] | None | Remote ssh client where destination is located || exclusions | Optional[Iterable[str]] | None | List of excluded patterns as in rsync's `--exclude` || sync_source_contents | bool | True | Abstracts the elusive trailing slash behaviour that `source` normally has when using rsync directly, i.e. when a trailing slash is present in `source`, the folder's content is synchronized with destination. When no trailing slash is present, the folder itself is synchronized with destination. || options | Optional[Iterable[str]] | None | List of options to be used right after rsync call, e.g. `['-a', '-v']` translates to `rsync -a -v` || private_key | Optional[str] | None | Configures an explicit key to be used with rsync --rsh command || rsh_port |Â Optional[int] | None | Specify port to be used for --rsh command || strict_host_key_checking | Optional[bool] | None | set StrictHostKeyChecking property for rsh #cf. https://superuser.com/questions/125324/how-can-i-avoid-sshs-host-verification-for-known-hosts |**returns**: `List[str]` -&gt; the compiled list of commands to be used directly in `subprocess.run`**raises**:- `RemotesError` when both `source_ssh` and `destination_ssh` are set. Normally linux rsync distribution disallows source and destination to be both remotes.- `PrivateKeyError` when `private_key` doesn't exist# Contributing- Fork project- Install dependencies with `poetry install`- Make changes- Lint with `poetry run pylint ./sysrsync`- Test with `poetry run python -m unittest`- Run end-to-end tests with `bash end-to-end-tests/run-tests.sh`- Submit changes with a pull request## Contributors âœ¨Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;&lt;!-- prettier-ignore-start --&gt;&lt;!-- markdownlint-disable --&gt;&lt;table&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/plazmakeks&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25690073?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;plazmakeks&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;plazmakeks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/gchamon/sysrsync/commits?author=plazmakeks&quot; title=&quot;Code&quot;&gt;ðŸ’»&lt;/a&gt;&lt;/td&gt;      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://stevehenderson.github.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2936416?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Steve Henderson&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Steve Henderson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/gchamon/sysrsync/commits?author=stevehenderson&quot; title=&quot;Code&quot;&gt;ðŸ’»&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;!-- markdownlint-restore --&gt;&lt;!-- prettier-ignore-end --&gt;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!</longdescription>
</pkgmetadata>