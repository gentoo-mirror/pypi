<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![test](https://github.com/zschumacher/pydapper/actions/workflows/test.yml/badge.svg)](https://github.com/zschumacher/pydapper/actions/workflows/test.yml)[![PyPI version](https://badge.fury.io/py/pydapper.svg)](https://badge.fury.io/py/pydapper)[![Documentation Status](https://readthedocs.org/projects/pydapper/badge/?version=latest)](https://pydapper.readthedocs.io/en/latest/?badge=latest)[![codecov](https://codecov.io/gh/zschumacher/pydapper/branch/main/graph/badge.svg?token=3X1IR81HL2)](https://codecov.io/gh/zschumacher/pydapper)[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336)](https://pycqa.github.io/isort/)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pydapper)# pydapperA pure python library inspired by the NuGet library [dapper](https://dapper-tutorial.net).*pydapper* is built on top of the [dbapi 2.0 spec](https://www.python.org/dev/peps/pep-0249/)to provide more convenient methods for working with databases in python.## HelpSee the [documentation](https://pydapper.readthedocs.io/en/latest/) for more details.## InstallationIt is recommended to only install the database apis you need for your use case.  Example below is for psycopg2!### pip```consolepip install pydapper[psycopg2]```### poetry```consolepoetry add pydapper -E psycopg2```## Never write this again...```pythonfrom psycopg2 import connect@dataclassclass Task:    id: int    description: str    due_date: datetime.datewith connect(&quot;postgresql://pydapper:pydapper@localhost/pydapper&quot;) as conn:    with conn.cursor() as cursor:        cursor.execute(&quot;select id, description, due_date from task&quot;)        headers = [i[0] for i in cursor.description]        data = cursor.fetchall()list_data = [Task(**dict(zip(headers, row))) for row in data]```## Instead, write...```pythonfrom dataclasses import dataclassimport datetimeimport pydapper@dataclassclass Task:    id: int    description: str    due_date: datetime.date    with pydapper.connect(&quot;postgresql+psycopg2://pydapper:pydapper@locahost/pydapper&quot;) as commands:    tasks = commands.query(&quot;select id, description, due_date from task;&quot;, model=Task)```(This script is complete, it should run &quot;as is&quot;)## Buy me a coffeeIf you find this project useful, consider buying me a coffee!  &lt;a href=&quot;https://www.buymeacoffee.com/zachschumacher&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/default-orange.png&quot; alt=&quot;Buy Me A Coffee&quot; height=&quot;41&quot; width=&quot;174&quot;&gt;&lt;/a&gt;</longdescription>
</pkgmetadata>