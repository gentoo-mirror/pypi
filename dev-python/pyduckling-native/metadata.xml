<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PyDuckling[![Project License - MIT](https://img.shields.io/pypi/l/pyduckling-native.svg)](https://raw.githubusercontent.com/treble-ai/pyduckling-native/master/LICENSE)[![pypi version](https://img.shields.io/pypi/v/pyduckling-native.svg)](https://pypi.org/project/pyduckling-native/)[![conda version](https://img.shields.io/conda/vn/treble-ai/pyduckling.svg)](https://www.anaconda.com/download/)[![download count](https://img.shields.io/conda/dn/treble-ai/pyduckling.svg)](https://www.anaconda.com/download/)[![Downloads](https://pepy.tech/badge/pyduckling-native)](https://pepy.tech/project/pyduckling-native)[![PyPI status](https://img.shields.io/pypi/status/pyduckling-native.svg)](https://github.com/treble-ai/pyduckling-native)![Linux Tests](https://github.com/treble-ai/pyduckling/workflows/Linux%20Tests/badge.svg?branch=master)![Mac Tests](https://github.com/treble-ai/pyduckling/workflows/Mac%20Tests/badge.svg?branch=master)*Copyright © 2020– Treble.ai*## OverviewThis package provides native bindings for Facebook's [Duckling](https://github.com/facebook/duckling) in Python. This package supports all dimensions and languages available on the original library, and it does not require to spawn a Haskell server and does not use HTTP to call the Duckling API.**Note:** This package is completely Haskell-less## InstallingTo install pyduckling, you can use both conda and pip package managers:```bash# Using pippip install pyduckling-native# Using condaconda install pyduckling -c treble-ai```**Notes:** Right now, we only provide package distributions for Linux (x86_64). We will provide Windows and Mac distributions on the next release## DependenciesTo compile pyduckling, you will require the latest nightly release of [Rust](https://rustup.rs/), alongside [Cargo](https://crates.io/). Also, it requires a Python distribution with its corresponding development headers. Finally, this project depends on the following Cargo crates:* [PyO3](https://github.com/PyO3/pyo3): Library used to produce Python bindings from Rust code.* [Maturin](https://github.com/PyO3/maturin): Build system to build and publish Rust-based Python packagesAdditionally, this package depends on [Duckling-FFI](https://github.com/treble-ai/duckling-ffi), used to compile the native interface to Duckling on Haskell. In order to compile Duckling-FFI, you will require the [Stack](https://haskell-lang.org/get-started) Haskell manager.## Installing locallyBesides Rust and Stack, you will require the latest version of maturin installed to compile this project locally:```bashpip install maturin toml```First, you will need to compile Duckling-FFI in order to produce the shared library ``libducklingffi``, to do so, you can use the git submodule found at the root of this repository:```bashcd duckling-ffistack build```Then, you will need to move the resulting binary ``libducklingffi.so`` to the ``ext_lib`` folder:```bashcp duckling-ffi/libducklingffi.so ext_lib```After completing this procedure, it is possible to execute the following command to compile pyduckling:```bashmaturin develop```In order to produce wheels, ``maturin build`` can be used instead. This project supports [PEP517](https://www.python.org/dev/peps/pep-0517/), thus pip can be used to install this package as well:```bashpip install -U .```## Running testsWe use pytest to run tests as it follows (after calling ``maturin develop``):```bashpytest -v duckling/tests```## Package usagePyDuckling provides access to the parsing capabilities of Duckling used to extract structured data from text.```python# Core importsfrom duckling import (load_time_zones, parse_ref_time,                      parse_lang, default_locale_lang, parse_locale,                      parse_dimensions, parse, Context)# Load reference time for time parsingtime_zones = load_time_zones(&quot;/usr/share/zoneinfo&quot;)bog_now = pendulum.now('America/Bogota').replace(microsecond=0)ref_time = parse_ref_time(    time_zones, 'America/Bogota', bog_now.int_timestamp)# Load language/locale informationlang_es = parse_lang('ES')default_locale = default_locale_lang(lang_es)locale = parse_locale('ES_CO', default_locale)# Create parsing context with time and language informationcontext = Context(ref_time, locale)# Define dimensions to look-up forvalid_dimensions = [&quot;amount-of-money&quot;, &quot;credit-card-number&quot;, &quot;distance&quot;,                    &quot;duration&quot;, &quot;email&quot;, &quot;number&quot;, &quot;ordinal&quot;,                    &quot;phone-number&quot;, &quot;quantity&quot;, &quot;temperature&quot;,                    &quot;time&quot;, &quot;time-grain&quot;, &quot;url&quot;, &quot;volume&quot;]# Parse dimensions to useoutput_dims = parse_dimensions(valid_dimensions)# Parse a phraseresult = parse('En dos semanas', context, dims, False)```This wrapper allows access to all the dimensions and languages available on Duckling:| Dimension | Example input | Example value output || --------- | ------------- | -------------------- || `amount-of-money` | &quot;42€&quot; | `{&quot;value&quot;:42,&quot;type&quot;:&quot;value&quot;,&quot;unit&quot;:&quot;EUR&quot;}` || `credit-card-number` | &quot;4111-1111-1111-1111&quot; | `{&quot;value&quot;:&quot;4111111111111111&quot;,&quot;issuer&quot;:&quot;visa&quot;}` || `distance` | &quot;6 miles&quot; | `{&quot;value&quot;:6,&quot;type&quot;:&quot;value&quot;,&quot;unit&quot;:&quot;mile&quot;}` || `duration` | &quot;3 mins&quot; | `{&quot;value&quot;:3,&quot;minute&quot;:3,&quot;unit&quot;:&quot;minute&quot;,&quot;normalized&quot;:{&quot;value&quot;:180,&quot;unit&quot;:&quot;second&quot;}}` || `email` | &quot;duckling-team@fb.com&quot; | `{&quot;value&quot;:&quot;duckling-team@fb.com&quot;}` || `number` | &quot;eighty eight&quot; | `{&quot;value&quot;:88,&quot;type&quot;:&quot;value&quot;}` || `ordinal` | &quot;33rd&quot; | `{&quot;value&quot;:33,&quot;type&quot;:&quot;value&quot;}` || `phone-number` | &quot;+1 (650) 123-4567&quot; | `{&quot;value&quot;:&quot;(+1) 6501234567&quot;}` || `quantity` | &quot;3 cups of sugar&quot; | `{&quot;value&quot;:3,&quot;type&quot;:&quot;value&quot;,&quot;product&quot;:&quot;sugar&quot;,&quot;unit&quot;:&quot;cup&quot;}` || `temperature` | &quot;80F&quot; | `{&quot;value&quot;:80,&quot;type&quot;:&quot;value&quot;,&quot;unit&quot;:&quot;fahrenheit&quot;}` || `time` | &quot;today at 9am&quot; | `{&quot;values&quot;:[{&quot;value&quot;:&quot;2016-12-14T09:00:00.000-08:00&quot;,&quot;grain&quot;:&quot;hour&quot;,&quot;type&quot;:&quot;value&quot;}],&quot;value&quot;:&quot;2016-12-14T09:00:00.000-08:00&quot;,&quot;grain&quot;:&quot;hour&quot;,&quot;type&quot;:&quot;value&quot;}` || `url` | &quot;https://api.wit.ai/message?q=hi&quot; | `{&quot;value&quot;:&quot;https://api.wit.ai/message?q=hi&quot;,&quot;domain&quot;:&quot;api.wit.ai&quot;}` || `volume` | &quot;4 gallons&quot; | `{&quot;value&quot;:4,&quot;type&quot;:&quot;value&quot;,&quot;unit&quot;:&quot;gallon&quot;}` |## ChangelogPlease see our [CHANGELOG](https://github.com/treble-ai/pyduckling/blob/master/CHANGELOG.md) file to learn more about our new features and improvements.## Contribution guidelinesWe follow PEP8 and PEP257 for pure python packages and Rust to compile extensions. We use MyPy type annotations for all functions and classes declared on this package. Feel free to send a PR or create an issue if you have any problem/question.</longdescription>
</pkgmetadata>