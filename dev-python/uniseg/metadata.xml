<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============ A Python package to determine Unicode text segmentations.You can see the full documentation including the package reference onhttps://uniseg-py.readthedocs.io.**Note (2022-09-26):**  This version (0.7.2) will be the last version which saysthat supports old Python interpreters. Actually, 2.x interpreters are no longertested and versions less than 3.8 are not considered as taget platformversions now. Compatible codes for 2.x will be removed in further releases.They remain just because of historical reasons and my laziness.Features========This package provides:- Functions to get Unicode Character Database (UCD) properties concerned with  text segmentations.- Functions to determine segmentation boundaries of Unicode strings.- Classes that help implement Unicode-aware text wrapping on both console  (monospace) and graphical (monospace / proportional) font environments.Supporting segmentations are:*code point*    `Code point &lt;https://www.unicode.org/glossary/#code_point&gt;`_ is *&quot;any value    in the Unicode codespace.&quot;* It is the basic unit for processing Unicode    strings.*grapheme cluster*    `Grapheme cluster &lt;https://www.unicode.org/glossary/#grapheme_cluster&gt;`_    approximately represents *&quot;user-perceived character.&quot;* They may be made    up of single or multiple Unicode code points. e.g. &quot;G&quot; + *acute-accent* is    a *user-perceived character*.*word break*    Word boundaries are familiar segmentation in many common text operations.    e.g. Unit for text highlighting, cursor jumping etc. Note that *words* are    not determinable only by spaces or punctuations in text in some languages.    Such languages like Thai or Japanese require dictionaries to determine    appropriate word boundaries. Though the package only provides simple word    breaking implementation which is based on the scripts and doesn't use any    dictionaries, it also provides ways to customize its default behavior.*sentence break*    Sentence breaks are also common in text processing but they are more    contextual and less formal. The sentence breaking implementation (which is    specified in UAX: Unicode Standard Annex) in the package is simple and    formal too. But it must be still useful in some usages.*line break*    Implementing line breaking algorithm is one of the key features of this    package. The feature is important in many general text presentations in    both CLI and GUI applications.Requirements============- Python 2.7 / 3.4 / 3.5 / 3.6Download========Source / binary distributions (PyPI)    https://pypi.python.org/pypi/unisegAll sources and build tools etc. (Bitbucket)    https://bitbucket.org/emptypage/uniseg-pyInstall=======Just type::    % pip install unisegor download the archive and::    % python setup.py installChanges=======0.7.2 (2022-09-20)  - Improve performance of Unicode lookups. PR by Max Bachmann.    https://bitbucket.org/emptypage/uniseg-py/pull-requests/10.7.1 (2015-05-02)  - CHANGE: wrap.Wrapper.wrap(): returns the count of lines now.  - Separate LICENSE from README.txt for the packaging-related reason in some    environments.0.7.0 (2015-02-27)  - CHANGE: Quitted gathering all submodules's members on the top, uniseg    module.  - CHANGE: Reform ``uniseg.wrap`` module and sample scripts.  - Maintained uniseg.wrap module, and sample scripts work again.0.6.4 (2015-02-10)  - Add ``uniseg-dbpath`` console command, which just print the path of    ``ucd.sqlite3``.  - Include sample scripts under the package's subdirectory.0.6.3 (2015-01-25)  - Python 3.4  - Support modern setuptools, pip and wheel.0.6.2 (2013-06-09)  - Python 3.30.6.1 (2013-06-08)  - Unicode 6.2.0References==========*UAX #14: Unicode Line Breaking Algorithm* (6.2.0)    https://www.unicode.org/reports/tr14/tr14-30.html*UAX #29 Unicode Text Segmentation* (6.2.0)    https://www.unicode.org/reports/tr29/tr29-21.htmlRelated / Similar Projects==========================`PyICU &lt;https://pypi.python.org/pypi/PyICU&gt;`_ - Python extension wrapping the ICU C++ API    *PyICU* is a Python extension wrapping International Components for    Unicode library (ICU). It also provides text segmentation supports and    they just perform richer and faster than those of ours. PyICU is an    extension library so it requires ICU dynamic library (binary files) and    compiler to build the extension. Our package is written in pure Python;    it runs slower but is more portable.`pytextseg &lt;https://pypi.python.org/pypi/pytextseg&gt;`_ - Python module for text segmentation    *pytextseg* package focuses very similar goal to ours; it provides    Unicode-aware text wrapping features. They designed and uses their    original string class (not built-in ``unicode`` / ``str`` classes) for the    purpose. We use strings as just ordinary built-in ``unicode`` / ``str``    objects for text processing in our modules.</longdescription>
</pkgmetadata>