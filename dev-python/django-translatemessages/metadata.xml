<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========================django-translatemessages========================Django app for translating Django .po files.It uses `deep-translator &lt;https://pypi.org/project/deep-translator/&gt;`_ and`polib &lt;https://github.com/izimobil/polib/&gt;`_Installation------------when using pip::    pip install django-translatemessagesWhen using poetry::    poetry add django-translatemessagesConfiguration-------------You must declare in your ``settings.py`` what translator to use and its params.Please refer to `deep-translator Translators &lt;https://deep-translator.readthedocs.io/en/latest/usage.html&gt;`_to know what parameters to specify (Note that ``django-translatemessages`` automatically add ``source`` and ``target`` parameters)To configure GoogleTranslator, add in your ``settings.py``::    TRANSLATEMESSAGES_PARAMS = {        &quot;translator&quot;: {            &quot;class&quot;: &quot;GoogleTranslator&quot;,            &quot;params&quot;: {},        },    }To configure DeeplTranslator, you will need an API key, add in your ``settings.py``::    TRANSLATEMESSAGES_PARAMS = {        &quot;translator&quot;: {            &quot;class&quot;: &quot;DeeplTranslator&quot;,            &quot;params&quot;: {                &quot;api_key&quot;: &quot;your deepl api key&quot;,            },        },    }A good pratice in a Django application is to encapsulate strings to be translated into square brakets,thus, you will noticed at once what strings has not been translated yet.You can ask ``django-translatemessages`` to extract the string to translate from the source string.Use a regex which selects with parentheses the text to extract. Note that if there is no match, the translation will not occur.For example if you want to translate ``[my english string]`` into ``my french string`` with deepl, put in ``settings.py``::    TRANSLATEMESSAGES_PARAMS = {        &quot;extract_regex&quot;: r&quot;\[(.*)\]&quot;,        &quot;translator&quot;: {            &quot;class&quot;: &quot;DeeplTranslator&quot;,            &quot;params&quot;: {                &quot;api_key&quot;: &quot;your deepl api key&quot;,            },        },    }The source language is ``en`` by default, but you can use another one in your ``settings.py``::    TRANSLATEMESSAGES_PARAMS = {        &quot;source_lang&quot;: &quot;fr&quot;,        ...    }**IMPORTANT :** By default, ``django-translatemessages`` will produce translations with the flag ``fuzzy``.This force the developer to validate manually each translation.To do so, edit each ``django.po`` file, search for the line ``#, fuzzy`` and remove it if you agree with the proposed translation. If you do not do this,Django will not display the translation. You can also use `poedit &lt;https://poedit.net/&gt;`_and press ``CTRL + RETURN`` on each highlighted translation you agree.To disable auto-fuzzy feature, use this in your ``settings.py``::    TRANSLATEMESSAGES_PARAMS = {        &quot;auto_fuzzy&quot;: False,        ...    }Usage-----To auto-translate all languages in all apps::    python ./manage.py translatemessagesDo not forget to do a ``makemessages`` before if needed (See Django documentation)For more options, run ``python ./manage.py translatemessages -h``News----0.0.5 (2023-06-29)------------------- Force translation of fuzzy strings except when obsolete or already translated  by django-translatemessages0.0.4 (2023-06-21)------------------- Do not translate fuzzy strings0.0.2 (2023-06-11)------------------- First commit</longdescription>
</pkgmetadata>