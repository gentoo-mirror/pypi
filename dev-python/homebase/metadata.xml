<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Coverage Status](https://coveralls.io/repos/github/dwavesystems/homebase/badge.svg?branch=master)](https://coveralls.io/github/dwavesystems/homebase?branch=master)[![Build Status](https://travis-ci.org/dwavesystems/homebase.svg?branch=master)](https://travis-ci.org/dwavesystems/homebase)[![Documentation Status](https://readthedocs.org/projects/homebase/badge/?version=latest)](http://homebase.readthedocs.io/en/latest/?badge=latest)# homebaseA place for your app to call home.*homebase* provides a platform independent API for querying paths in which applications can write caches, data, configs, andother information.## rationale Since each operating system expects applications to write their data to OS dependant paths, managing cache writingon portable applications can become difficult.For example, on macOS:    ~/Library/Application Support/app_namewhile on Linux it may be:    ~/.local/share/app_nameand on Windows:    c:\users\&lt;user_name&gt;\AppData\Local/app_nameand the problem gets worse if you are running inside of a [virtualenv](https://virtualenv.pypa.io/en/stable/)A similar issue happens for other forms of data, like caches, logs, configuration files, or application state.## Installation```bashpython setup.py install```## Usage```pythonimport homebaseapp_name = &quot;my_app&quot;app_author = &quot;nakatomi-corp&quot;user_data_dir = homebase.user_data_dir(app_name=app_name, app_author=app_author)user_cache_dir = homebase.user_cache_dir(app_name=app_name, app_author=app_author)user_logs_dir = homebase.user_logs_dir(app_name=app_name, app_author=app_author)user_config_dir = homebase.user_config_dir(app_name=app_name, app_author=app_author)user_state_dir = homebase.user_state_dir(app_name=app_name, app_author=app_author)# site specific directories, e.g. /usr/sharesite_data_dir = homebase.site_data_dir(app_name=app_name, app_author=app_author)site_config_dir = homebase.site_config_dir(app_name=app_name, app_author=app_author)```If you are running inside of a virtualenv, *homebase* will return paths that are relative to that environment.If you still want the user path, pass `use_virtualenv=False` in the call.For example, suppose you have set up a virtual environment in `/home/username/env` on linux```pythonimport homebaseapp_name = &quot;my_app&quot;app_author = &quot;nakatomi-corp&quot;user_data_dir = homebase.user_data_dir(app_name=app_name, app_author=app_author)# /home/username/env/data/my_appuser_data_dir = homebase.user_data_dir(app_name=app_name, app_author=app_author, use_virtualenv=False)# /home/username/.local/share/my_app.```See the [documentation](# TODO) for more details and examples.## LicenseSee [LICENSE.txt](LICENSE.txt)## AcknowledgementThis project is inspired by and is derived from [appdirs](https://github.com/ActiveState/appdirs)</longdescription>
</pkgmetadata>