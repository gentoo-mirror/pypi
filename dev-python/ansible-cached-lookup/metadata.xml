<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ansible-cached-lookupAn Ansible lookup plugin that caches the results of any other lookup, mostuseful in group/host vars.By default, Ansible evaluates any lookups in a group/host var whenever the varis accessed. For example, given a group/host var:```yamlcontent: &quot;{{ lookup('pipe', 'a-very-slow-command' }}&quot;```any tasks that access `content` (e.g. in a template) will re-evaluate thelookup, which adds up very quickly. See[ansible/ansible#9263](https://github.com/ansible/ansible/issues/9623).## Installation1. Pick a name that you want to use to call this plugin in Ansible playbooks.   This documentation assumes you're using the name `cached`.   ```   pip install ansible-cached-lookup   ```2. Create a `lookup_plugins` directory in the directory in which you run Ansible.   By default, Ansible will look for lookup plugins in an `lookup_plugins` folder   adjacent to the running playbook. For more information on this, or to change   the location where Ansible looks for lookup plugins, see the [Ansible   docs](https://docs.ansible.com/ansible/dev_guide/developing_plugins.html#distributing-plugins).3. Create a file called `cached.py` (or whatever name you picked) in the   `lookup_plugins` directory, with one line:   ```py   from ansible_cached_lookup import LookupModule   ```## ContributingTo run the tests, run `tox`.To format code to pass `tox -e lint`, run `tox -e format`.</longdescription>
</pkgmetadata>