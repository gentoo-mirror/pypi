<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># JestspectationPattern matching tools to test complex data structures.The design is inspired by the `expect` system from JavaScript's Jest testingframework.```pyimport jestspectation as expectassert {    &quot;a&quot;: 1,    &quot;b&quot;: 2,    &quot;c&quot;: 3.0,} == {    &quot;a&quot;: 1,    &quot;b&quot;: expect.Any(int),    &quot;c&quot;: expect.FloatApprox(2.5, magnitude=0.5)}```## Installation```shpip install jestspectation```## Usage with PytestThe library can be used as a pytest plugin, which can give access to much moredetailed error messages when assertions fail.This should result in output similar to the following```txt    def test_goodbye():&gt;       assert 1 == expect.Any(float)E       assert Type mismatchE         Expected any object of type floatE         Received 1 (int)```These advanced completions can also be used for most standard Python objectsby wrapping the expected values in an `Equals`. For example:```txt    def test_lists():&gt;       assert expect.Equals([1, 2, 3, 4]) == [1, 2, 3, 5, 6]E       assert [1, 2, 3, 4] == [1, 2, 3, 5, 6]E         !! [3] 4 == 5E            Value mismatchE            Expected 4E            Received 5E         ++ [4] 6```To automatically use Jestspectation's diff parsing, you can configureJestspectation.```pyimport jestspectationjestspectation.configure().pytest_all_diffs = True```</longdescription>
</pkgmetadata>