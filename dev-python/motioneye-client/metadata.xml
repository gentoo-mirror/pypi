<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/dermotduffy/hass-motioneye/blob/main/images/motioneye.png?raw=true&quot;     alt=&quot;motionEye icon&quot;     width=&quot;15%&quot;     align=&quot;right&quot;     style=&quot;float: right; margin: 10px 0px 20px 20px;&quot; /&gt;[![PyPi](https://img.shields.io/pypi/v/motioneye-client.svg?style=flat-square)](https://pypi.org/project/motioneye-client/)[![PyPi](https://img.shields.io/pypi/pyversions/motioneye-client.svg?style=flat-square)](https://pypi.org/project/motioneye-client/)[![Build Status](https://img.shields.io/github/actions/workflow/status/dermotduffy/motioneye-client/build.yaml?branch=main)](https://github.com/dermotduffy/motioneye-client/actions/workflows/build.yaml)[![Test Coverage](https://img.shields.io/codecov/c/gh/dermotduffy/motioneye-client?style=flat-square)](https://codecov.io/gh/dermotduffy/motioneye-client)[![License](https://img.shields.io/github/license/dermotduffy/hass-motioneye.svg?style=flat-square)](LICENSE)[![BuyMeCoffee](https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?style=flat-square)](https://www.buymeacoffee.com/dermotdu)# motionEye ClientA simple async API client for [motionEye](https://github.com/ccrisan/motioneye).## Constructor argumentsThe following arguments may be passed to the `MotionEyeClient` constructor:| Argument              | Type                    | Default                     | Description                         || --------------------- | ----------------------- | --------------------------- | ----------------------------------- || url                   | `str`                   | URL of the motionEye server || admin_username        | `str`                   | admin                       | The motionEye admin username        || admin_password        | `str`                   | &quot;&quot;                          | The motionEye admin password        || surveillance_username | `str`                   | user                        | The motionEye surveillance username || surveillance_password | `str`                   | &quot;&quot;                          | The motionEye surveillance password || session               | `aiohttp.ClientSession` | None                        | Optional aiohttp session to use     |This client needs both `admin` and `surveillance` passwords in order to interact withthe API (which generally require the `admin` user), as well as prepare the URLs fordata streaming (which require the `surveillance` user).## Primary Client MethodsAll async calls start with `async_`, and return the JSON response from the server (if any).### async_client_loginLogin to the motionEye server. Not actually necessary, but useful for verifying credentials.### async_client_closeClose the client session. Always returns True.### async_get_manifestGet the motionEye server manifest (e.g. server version number).### async_get_server_configGet the main motionEye server config.### async_get_camerasGet the listing of all cameras.### async_get_cameraGet the configuration of a single camera. Takes an integer `camera_id` argument.### async_set_cameraSet the configuration of a single camera. Takes an integer `camera_id` argument, and adictionary of the same format as returned by `async_get_camera`.### async_actionPerform a motionEye action on a camera. Takes an integer `camera_id` argument and anaction string.Common actions include `snapshot`, `record_start` and `record_stop`. motionEye alsosupports other user configurable actions which may be called in this manner. See[Action Buttons](https://github.com/ccrisan/motioneye/wiki/Action-Buttons) for more details.### async_get_moviesGet a list of recorded movies for a given `camera_id`. Accepts a `prefix` argument thatgives a path prefix to list (does not recurse).### async_get_imagesGet a list of saved images for a given `camera_id`. Accepts a `prefix` argument thatgives a path prefix to list (does not recurse).## Convenience Methods### is_camera_streamingConvenience method to take a camera dictionary (returned by `async_get_camera` or`async_get_cameras`) and return True if the camera has video stream enabled.### get_camera_stream_urlConvenience method to take a camera dictionary (returned by `async_get_camera` or`async_get_cameras`) and return the string URL of the streamed content (which can beopened separately). This extracts the hostname out of the motionEye URL and attaches thestreaming port to it -- depending on the configuration this may not necessarily lead toan accessible URL (e.g. in the use of motionEye behind a reverse proxy).Will raise [MotionEyeClientURLParseError](#MotionEyeClientURLParseError) if the hostnamecannot be extracted from the motionEye server URL.### get_camera_snapshot_urlConvenience method to take a camera dictionary (returned by `async_get_camera` or`async_get_cameras`) and return the string URL of a single still frame.### get_movie_urlConvenience method to take a camera id and the path to a saved movie, and return a linkto playback the movie. Takes a `preview` argument that if `True` returns a URL to a thumbnail.### get_image_urlConvenience method to take a camera id and the path to a saved image, and return a linkto that image. Takes a `preview` argument that if `True` returns a URL to a thumbnail.### is_file_type_image / is_file_type_movieDetermine if a given file_type `int` (from a web hook callback) represents an image or a movie respectively.## Context ManagerThe client may be used in as a context manager, which will automatically close thesession.```pythonasync with client.MotionEyeClient(&quot;http://localhost:8765&quot;, ) as mec:    if not mec:        return    ...````## Exceptions / Errors### MotionEyeClientErrorA generic base class -- all motionEye client exceptions inherit from this.### MotionEyeClientInvalidAuthErrorInvalid authentication detected during a request.### MotionEyeClientConnectionErrorConnected failed to given URL.&lt;a name=&quot;MotionEyeClientURLParseError&quot;&gt;&lt;/a&gt;### MotionEyeClientURLParseErrorUnable to parse the required URL.### MotionEyeClientPathErrorUnable to parse a path.### MotionEyeClientRequestErrorA request failed in some other undefined way.## Simple Example```python#!/usr/bin/env python&quot;&quot;&quot;Client test for motionEye.&quot;&quot;&quot;import asynciofrom motioneye_client.client import MotionEyeClientasync def query_motioneye_server() -&gt; None:    &quot;&quot;&quot;Test the motionEye client.&quot;&quot;&quot;    async with MotionEyeClient(&quot;http://localhost:8765&quot;) as client:        if not client:            return        manifest = await client.async_get_manifest()        print(f&quot;Manifest: {manifest}&quot;)        camera_list = await client.async_get_cameras()        print(f&quot;Cameras: {camera_list}&quot;)asyncio.get_event_loop().run_until_complete(query_motioneye_server())```## Building / TestingThis library is built using [Poetry](https://python-poetry.org/).Building:```bash$ poetry build```Testing:```bash$ poetry run pytest```## Updating DependenciesUpdating dependencies:```bash$ poetry update```Exporting to `requirements.txt` and `requirements_dev.txt`:```bash$ poetry export --without-hashes -o requirements.txt$ poetry export --without-hashes --dev -o requirements_dev.txt```</longdescription>
</pkgmetadata>