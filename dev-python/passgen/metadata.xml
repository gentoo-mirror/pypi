<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>passgen=======passgen is a tool for generating random passwords. It provides bothcommand line utility and underlying python module.Installation============passgen requires Python 2.7 or 3.x.passgen can be installed with `pip`::    $ pip install passgenTo install it from source, enter the source distribution directory and run::    $ python setup.py installTo install in development mode, run from project directory::    $ pip install --user -e .Usage (command line)====================The most basic usage of passgen command line utility prints 10 randompasswords, and is as follows::    $ passgenpassgen accepts several arguments configuring its outcome.Overall synopsis is::    $ passgen [-h] [-l LENGTH] [-n NUMBER]              [-p] [--limit-punctuation LIMIT_PUNCTUATION]              [--no-digits | --no-letters]              [--upper | --lower]Arguments:-h    Display help-l, --length LENGTH    Passwords should contain LENGTH characters. Defaults to 12.-n, --number NUMBER    Generate NUMBER passwords. Defaults to 10.-p, --punctuation    Use punctuation characters--limit-punctuation LIMIT_PUNCTUATION    Specify allowed punctuation characters--no-digits    Don't use digits--no-letters    Don't use letters--upper    Use only upper case letters--lower    Use only lower case lettersExamples--------Below are some examples of passgen usage.Output one password::    $ passgen -n 1    faFMKqApw24PGenerate one password with eight characters::    $ passgen -n 1 -l 8    h2MowzBQGenerate one password with all upper case letters::    $ passgen -n 1 --upper    3TLJ73WQSG6UGenerate one password with punctuation characters::    $ passgen -n 1 -p    oFmCF|s8kCE~Python module=============passgen Python module provides just one function also called passgen.| ``passgen(length=12, punctuation=False, digits=True, letters=True,            case='both')``It returns a random string with *length* characters. *punctuation*, *digits*and *letters* arguments specify whether punctuation, digits and lettersshould be used. *case* specifies letter case and can be one of 'upper','lower' or 'both'.For more details, run::    $ python -c 'import passgen; help(passgen.passgen)'Testing=======The passgen tests are done using ``unittest``. For running the tests, run fromproject directory::    $ python tests/test_passgen.py -vTODO====- Implement generation from format string.  For example, 'ddd' generating three-digit password.- Allow occurance restrictions on punctuation, digits and letters.  For example, ``passgen(min-punctuation=1)`` returning password with at least  one punctuation.License=======See LICENSE.</longdescription>
</pkgmetadata>