<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===================================PDF417 barcode generator for Python===================================.. image:: https://img.shields.io/travis/ihabunek/pdf417-py.svg?maxAge=3600&amp;style=flat-square   :target: https://travis-ci.org/ihabunek/pdf417-py.. image:: https://img.shields.io/badge/author-%40ihabunek-blue.svg?maxAge=3600&amp;style=flat-square   :target: https://twitter.com/ihabunek.. image:: https://img.shields.io/github/license/ihabunek/pdf417-py.svg?maxAge=3600&amp;style=flat-square   :target: https://opensource.org/licenses/MIT.. image:: https://img.shields.io/pypi/v/pdf417gen.svg?maxAge=3600&amp;style=flat-square   :target: https://pypi.python.org/pypi/pdf417genEasily encode your data into a 2D barcode using the PDF417 format... image:: https://raw.githubusercontent.com/ihabunek/pdf417-py/master/images/1_basic.jpgLicensed under the MIT License, see `LICENSE &lt;LICENSE&gt;`_.Installation------------Install using pip:.. code-block::    pip install pdf417genCLI---The ``pdf417gen`` command can be used to generate a barcode from commandline. Ittakes the input either as an argument or from stdin... code-block:: bash    # Show help    pdf417gen encode --help    # Encode given text and display the barcode    pdf417gen encode &quot;Beautiful is better than ugly&quot;    # Encode given text and save barcode to a file (extension determines format)    pdf417gen encode -o barcode.png &quot;Explicit is better than implicit&quot;    # Input from a file    pdf417gen encode &lt; input.txt    # Piped input    python -c &quot;import this&quot; | pdf417gen encodeUsage-----Creating bar codes is done in two steps:* Encode a string to a list of code words using ``encode()``* Render the barcode using one of the rendering functions: ``render_image()``,  ``render_svg()``.Usage overview:.. code-block:: python    from pdf417gen import encode, render_image, render_svg    # Some data to encode    text = &quot;&quot;&quot;Beautiful is better than ugly.    Explicit is better than implicit.    Simple is better than complex.    Complex is better than complicated.&quot;&quot;&quot;    # Convert to code words    codes = encode(text)    # Generate barcode as image    image = render_image(codes)  # Pillow Image object    image.save('barcode.jpg')    # Generate barcode as SVG    svg = render_svg(codes)  # ElementTree object    svg.write(&quot;barcode.svg&quot;)Supports strings (unicode in py2) and byte arrays (str in py2):.. code-block:: python    # These two inputs encode to the same code words    encode(u&quot;love ðŸ’”&quot;)    encode(b&quot;love \xf0\x9f\x92\x94&quot;)    # Default encoding is UTF-8, but you can specify your own    encode(u&quot;love ðŸ’”&quot;, encoding=&quot;utf-8&quot;)Encoding data-------------The first step is to encode your data to a list of code words... code-block:: python    encode(data, columns=6, security_level=2Ë™)Columns~~~~~~~The bar code size can be customized by defining the number of columns used torender the data, between 1 and 30, the default value is 6. A bar code can have amaximum of 90 rows, so for larger data sets you may need to increase the numberof columns to decrease the rows count... code-block:: python    codes = encode(text, columns=12)    image = render_image(codes)    image.show().. image:: https://raw.githubusercontent.com/ihabunek/pdf417-py/master/images/2_columns.jpgSecurity level~~~~~~~~~~~~~~Increasing the security level will produce stronger (and more numerous) errorcorrection codes, making the bar code larger, but less prone to corruption. Thesecurity level can range from 0 to 8, and procuces ``2^(level+1)`` errorcorrection code words, meaning level 0 produces 2 code words and level 8produces 512. The default security level is 2... code-block:: python    codes = encode(text, columns=12, security_level=6)    image = render_image(codes)    image.show().. image:: https://raw.githubusercontent.com/ihabunek/pdf417-py/master/images/3_security_level.jpgRender image------------The ``render_image`` function takes the following options:* ``scale`` - module width, in pixels (default: 3)* ``ratio`` - module height to width ratio (default: 3)* ``padding`` - image padding, in pixels (default: 20)* ``fg_color`` - foreground color (default: ``#000000``)* ``bg_color`` - background color (default: ``#FFFFFF``).. note::   A module is the smallest element of a barcode, analogous to a pixel. Modules   in a PDF417 bar code are tall and narrow.The function returns a Pillow Image_ object containing the barcode.Colors can be specified as hex codes or using HTML color names... code-block:: python    codes = encode(text, columns=3)    image = render_image(codes, scale=5, ratio=2, padding=5, fg_color=&quot;Indigo&quot;, bg_color=&quot;#ddd&quot;)    image.show().. image:: https://raw.githubusercontent.com/ihabunek/pdf417-py/master/images/4_rendering.jpgRender SVG----------The ``render_svg`` function takes the following options:* ``scale`` - module width, in pixels (default: 3)* ``ratio`` - module height to width ratio (default: 3)* ``padding`` - image padding, in pixels (default: 20)* ``color`` - foreground color (default: `#000000`)The function returns a ElementTree_ object containing the barcode in SVG format.Unlike ``render_image``, this function does not take a background color option.The background is left transparent... code-block:: python    codes = encode(text, columns=3)    svg = render_svg(codes, scale=5, ratio=2, color=&quot;Seaweed&quot;)    svg.write('barcode.svg')See also--------* pdf417-php_ - a PHP implementation* golang-pdf417_ - a Go implementation.. _pdf417-php: https://github.com/ihabunek/pdf417-php.. _golang-pdf417: https://github.com/ruudk/golang-pdf417.. _ElementTree: https://docs.python.org/3.5/library/xml.etree.elementtree.html#elementtree-objects.. _Image: https://pillow.readthedocs.io/en/3.2.x/reference/Image.html</longdescription>
</pkgmetadata>