<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/danielfrg/mkdocs-jupyter/main/docs/logo.png&quot; width=&quot;450px&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.org/project/mkdocs-jupyter/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/v/mkdocs-jupyter.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/mkdocs-jupyter/&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/pyversions/mkdocs-jupyter.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/danielfrg/mkdocs-jupyter/actions/workflows/test.yml&quot;&gt;        &lt;img src=&quot;https://github.com/danielfrg/mkdocs-jupyter/workflows/test/badge.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://codecov.io/gh/danielfrg/mkdocs-jupyter?branch=main&quot;&gt;        &lt;img src=&quot;https://codecov.io/gh/danielfrg/mkdocs-jupyter/branch/main/graph/badge.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;http://github.com/danielfrg/mkdocs-jupyter/blob/main/LICENSE.txt&quot;&gt;        &lt;img src=&quot;https://img.shields.io/:license-Apache%202-blue.svg&quot;&gt;    &lt;/a&gt;&lt;/p&gt;# mkdocs-jupyter: Use Jupyter Notebooks in mkdocs- [Demo Site](https://mkdocs-jupyter.danielfrg.com/)- Add Jupyter Notebooks directly to the mkdocs navigation- Support for multiple formats:  - `.ipynb` and `.py` files (using    [jupytext](https://github.com/mwouts/jupytext))- Same style as regular Jupyter Notebooks  - Support Jupyter Themes- Option to execute the notebook before converting- Support for [ipywidgets](https://github.com/jupyter-widgets/ipywidgets)- Support for mkdocs TOC- Option to include notebook source&lt;ahref=&quot;https://raw.githubusercontent.com/danielfrg/mkdocs-jupyter/master/docs/mkdocs-theme.png&quot;&gt;&lt;imgsrc=&quot;https://raw.githubusercontent.com/danielfrg/mkdocs-jupyter/master/docs/mkdocs-theme.png&quot;alt=&quot;mkdocs-jupyter default theme&quot;  width=&quot;300&quot;&gt;&lt;/a&gt; &lt;ahref=&quot;https://raw.githubusercontent.com/danielfrg/mkdocs-jupyter/master/docs/material-theme.png&quot;&gt;&lt;imgsrc=&quot;https://raw.githubusercontent.com/danielfrg/mkdocs-jupyter/master/docs/material-theme.png&quot;alt=&quot;mkdocs-jupyter material theme&quot;  width=&quot;300&quot;&gt;&lt;/a&gt;## Installation```shellpip install mkdocs-jupyter```## ConfigurationIn the `mkdocs.yml` use Jupyter notebooks (`.ipynb`) or Python scripts (`.py`)as pages:```yamlnav:  - Home: index.md  - Notebook page: notebook.ipynb  - Python file: python_script.pyplugins:  - mkdocs-jupyter```### Titles and Table of ContentsThe first h1 header (`#`) in your notebook will be used as the title.```md# This H1 header will be the the title.```This can be turned off in the configuration (in which case the filename will beused as title):```yamlplugins:  - mkdocs-jupyter:      ignore_h1_titles: True```In order to see the table of contents you need to maintain a hierarchicalheaders structure in your notebooks. You must use h2 headers (`##`) and not h1(`#`)```md## This H2 title will show in the table of contents```If you want to **nest headers** in the TOC you need to add additional levelslater in the same markdown cell or new bottom markdown cells:```md## This header will show as top level in the table of contents&lt;content&gt;### This one will be displayed inside the above level```### Including or Ignoring FilesYou can control which files are included or ignored via lists of glob patterns:```yamlplugins:  - mkdocs-jupyter:      include: [&quot;*.ipynb&quot;] # Default: [&quot;*.py&quot;, &quot;*.ipynb&quot;]      ignore: [&quot;some-irrelevant-files/*.ipynb&quot;]```### Execute NotebookYou can tell the plugin to execute the notebook before converting, default is`False`:```yamlplugins:  - mkdocs-jupyter:      execute: true```You can tell the plugin to ignore the execution of some files (with globmatching):```yamlplugins:  - mkdocs-jupyter:      execute_ignore:        - &quot;my-secret-files/*.ipynb&quot;```To fail when notebook execution fails set `allow_errors` to `false`:```yamlplugins:  - mkdocs-jupyter:      execute: true      allow_errors: false```#### KernelBy default the plugin will use the kernel specified in the notebook to executeit. You can specify a custom kernel name to use for all the notebooks:```yamlplugins:  - mkdocs-jupyter:      kernel_name: python3```### Ingore Code InputBy default the plugin will show full code and regular cell output details. Youcan hide cell code input for all the notebooks:```yamlplugins:  - mkdocs-jupyter:      show_input: False```You can also decide to hide the `Out[#]` output notation and other cell metadatafor all the notebooks:```yamlplugins:  - mkdocs-jupyter:      no_input: True```### Remove Cell Using TagsBy default the plugin will show full code and regular cell output details. Youcan hide cell code input for specific cells using tags:```yamlplugins:  - mkdocs-jupyter:      remove_tag_config:        remove_input_tags:          - hide_code```More detailed on removing cell based on tag, see [NbConvertCustomization](https://nbconvert.readthedocs.io/en/latest/removing_cells.html))### Jupyter themesYou can configure the different Jupyter themes. For example if using materialwith `slate` color scheme you can use the Jupyter Lab `dark` theme:```ymlplugins:  - mkdocs-jupyter:      theme: darktheme:  name: material  palette:    scheme: slate```### Extra CSS classesThis option will add a custom CSS class to the `div` container that highlightsthe code cells. This can be useful to add custom styles to the code cells.```ymlplugins:  - mkdocs-jupyter:      highlight_extra_classes: &quot;custom-css-classes```### RequireJSBy default RequireJS is not loaded. You can enable it with:```ymlplugins:  - mkdocs-jupyter:      include_requirejs: true```### Download notebook linkYou can tell the plugin to include the notebook source to make it easy to show adownload button in the theme, default is `False`:```ymlplugins:  - mkdocs-jupyter:      include_source: True```This setting will also create a `page.nb_url` value that you can use in yourtheme to make a link in each page.For example in `mkdocs-material` (see[customization](https://squidfunk.github.io/mkdocs-material/customization/#overriding-template-blocks)),you can create a `main.html` file like this:```jinja{% extends &quot;base.html&quot; %}{% block content %}{% if page.nb_url %}    &lt;a href=&quot;{{ page.nb_url }}&quot; title=&quot;Download Notebook&quot; class=&quot;md-content__button md-icon&quot;&gt;        {% include &quot;.icons/material/download.svg&quot; %}    &lt;/a&gt;{% endif %}{{ super() }}{% endblock content %}```![Download Notebook button](https://raw.githubusercontent.com/danielfrg/mkdocs-jupyter/master/docs/download-button.png)## StylesThis extensions includes the Jupyter Lab nbconvert CSS styles and does somemodifications to make it as generic as possible in order for it to work with avariety of mkdocs themes. This is not always possible and the theme we test themost is [mkdocs-material](https://squidfunk.github.io/mkdocs-material).It's possible you might need to do some CSS changes to make it look as good asyou want, for example for the material theme take a look at their [customizationdocs](https://squidfunk.github.io/mkdocs-material/customization/#overriding-template-blocks).Create a `main.html` file like:```jinja{% extends &quot;base.html&quot; %}{% block content %}{{ super() }}&lt;style&gt;// Do whatever changes you need here.jp-RenderedHTMLCommon p {    color: red}&lt;/style&gt;{% endblock content %}```## Mkdocs Material notesAny markdown specific features such as[admonitions](https://squidfunk.github.io/mkdocs-material/reference/admonitions/)wont work with mkdocs-jupyter because those features are not supported byJupyter itself and we use [nbconvert](https://nbconvert.readthedocs.io/) to makethe conversion.To use this type of features you have to define the HTML directly in themarkdown cells:```html&lt;div class=&quot;admonition note&quot;&gt;  &lt;p class=&quot;admonition-title&quot;&gt;Note&lt;/p&gt;  &lt;p&gt;    If two distributions are similar, then their entropies are similar, implies    the KL divergence with respect to two distributions will be smaller...  &lt;/p&gt;&lt;/div&gt;```</longdescription>
</pkgmetadata>