<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;img alt=&quot;robocrystallographer logo&quot; src=&quot;https://raw.githubusercontent.com/hackingmaterials/robocrystallographer/master/docs/src/_static/logo-01.png&quot; height=&quot;200px&quot;&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.org/project/robocrys/&quot;&gt;&lt;img alt=&quot;PyPI version&quot; src=&quot;https://img.shields.io/pypi/v/robocrys.svg?colorB=blue&quot;&gt; &lt;/a&gt;  &lt;a href=&quot;https://github.com/hackingmaterials/robocrystallographer/actions?query=workflow%3A%22Run+tests%22&quot;&gt;&lt;img alt=&quot;CircleCI&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/hackingmaterials/robocrystallographer/tests.yml?branch=main&quot;&gt; &lt;/a&gt;&lt;/p&gt;Robocrystallographer is a tool to generate text descriptions of crystalstructures. Similar to how a real-life crystallographer would analyse astructure, robocrystallographer looks at the symmetry, local environment, andextended connectivity when generating a description. The package includesutilities for identifying molecule names, component orientations,heterostructure information, and more...## UsageRobocrystallographer can be used from the command-line or from a python API.The package integrates with the [Materials Project](https://materialsproject.org)to for allow generation of structure descriptions directly from Materials Projectids. For example, to generate the description of SnO&lt;sub&gt;2&lt;/sub&gt;([mp-856](https://materialsproject.org/materials/mp-856/)), onecan simply run:```bashrobocrys mp-856```Alternatively, a structure file can be specified in place of a Materials Project id.Robocrystallographer supports the same file formats as[pymatgen](http://pymatgen.org), including the Crystallographic InformationFormat (CIF), and common electronic structure package formats such as POSCAR files.More information can be found on the[command-line interface page](https://hackingmaterials.github.io/robocrystallographer/cli.html).### Python interfaceThe two core classes in robocrystallographer are:- `StructureCondenser`: to condense the structure into an descriptive JSON  representation.- `StructureDescriber`: to turn the condensed structure into a text description.A minimal working example for generating text descriptions is simply:```pythonfrom pymatgen import Structurefrom robocrys import StructureCondenser, StructureDescriberstructure = Structure.from_file(&quot;my_structure.cif&quot;) # other file formats also supported# alternatively, uncomment the lines below to use the MPRester object# to fetch structures from the Materials Project database# from pymatgen import MPRester# structure = MPRester(API_KEY=None).get_structure_by_material_id(&quot;mp-856&quot;)condenser = StructureCondenser()describer = StructureDescriber()condensed_structure = condenser.condense_structure(structure)description = describer.describe(condensed_structure)```Where `structure` is a pymatgen Structure object. Both classes have manyoptions for customising the output of the structuredescriptions. More information is provided in the[module documentation](https://hackingmaterials.github.io/robocrystallographer/modules).### Intermediate JSON formatThe format of the intermediate JSON representation is detailed on the[condensed structure format page](https://hackingmaterials.github.io/robocrystallographer/format.html).### Example outputAn example of the output generated by robocrystallographer for SnO&lt;sub&gt;2&lt;/sub&gt; ([mp-856](https://materialsproject.org/materials/mp-856/)) is given below:&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;SnO2 crystal structure&quot; src=&quot;https://raw.githubusercontent.com/hackingmaterials/robocrystallographer/master/docs/src//_static/rutile.jpg&quot; height=&quot;200px&quot;&gt;&lt;/p&gt;&gt; SnO2 is Rutile structured and crystallizes in the tetragonal P4_2/mnm space&gt; group. The structure is three-dimensional. Sn(1) is bonded to six equivalent&gt; O(1) atoms to form a mixture of edge and corner-sharing SnO6 octahedra. The&gt; corner-sharing octahedral tilt angles are 51°. All Sn(1)–O(1) bond lengths&gt; are 2.09 Å. O(1) is bonded in a trigonal planar geometry to three equivalent&gt; Sn(1) atoms.## How to cite robocrystallographerPlease considering citing the following publication if using robocrystallographer in your work:&gt; Ganose, A., &amp; Jain, A. (2019). Robocrystallographer: Automated crystal structure  text descriptions and analysis. MRS Communications, 9(3), 874-881. https://doi.org/10.1557/mrc.2019.94## InstallationRobocrystallographer can be installed using pip:```bashpip install robocrys```Robocrystallographer requires Python 3.7+. The[OpenBabel](http://openbabel.org/wiki/Python)package is required to determine molecule names. This is an optionalrequirement but its use is recommended for bestresults. If you are using the [Conda](https://conda.io/) package managementsystem, OpenBabel can be installed using:```bashconda install -c conda-forge openbabel```## What’s new?Track changes to robocrystallographer through the[Changelog](https://hackingmaterials.github.io/robocrystallographer/changelog.html).## ContributingRobocrystallographer is in early development but we still welcome yourcontributions. Please read our [contribution guidelines](https://hackingmaterials.github.io/robocrystallographer/contributing.html)for more information. We maintain a list of allcontributors [here](https://hackingmaterials.github.io/robocrystallographer/contributors.html).## LicenseRobocrystallographer is released under a modified BSD license;the full text can be found[here](https://hackingmaterials.github.io/robocrystallographer/license.html).## AcknowledgementsLogo by Somewan from the Noun Project.</longdescription>
</pkgmetadata>