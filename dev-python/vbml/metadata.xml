<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/tesseradecade/vbml&quot;&gt;    &lt;img src=&quot;/logo.jpeg&quot; width=&quot;200px&quot; style=&quot;display: inline-block;&quot;&gt;  &lt;/a&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;  VBML - perfect pythonistic parser / string manipulator :sparkles:&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img alt=&quot;PyPI - License&quot; src=&quot;https://img.shields.io/pypi/l/vbml?style=flat-square&quot;&gt;  &lt;img alt=&quot;PyPI - Downloads&quot; src=&quot;https://img.shields.io/pypi/dw/vbml?style=flat-square&quot;&gt;  &lt;img alt=&quot;GitHub repo size&quot; src=&quot;https://img.shields.io/github/repo-size/tesseradecade/vbml?style=flat-square&quot;&gt;  &lt;img alt=&quot;GitHub issues by-label&quot; src=&quot;https://img.shields.io/github/issues/tesseradecade/vbml/bug?style=flat-square&quot;&gt;&lt;/p&gt;## Features* Clean `regex`-based parser* Easy-to-understand validators / Custom validators* Lots of features out-of-box`I am &lt;name&gt;, i am &lt;age:int&gt; years old` + `I am Steven, i am 20 years old` = `{&quot;name&quot;: &quot;Steven&quot;, &quot;age&quot;: 20}`## InstallationInstall with pip:```shell scriptpip install vbml```Or with poetry:```shell scriptpoetry add vbml```## Run testsClone repo from git:```shell scriptgit clone https://github.com/tesseradecade/vbml.git```Go to repository and run tests with `poetry`:```shell scriptcd vbmlpoetry installpoetry run pytest```## :book: DocumentationFull documentation contents are available in [docs/index.md](/docs/index.md)## Simple example```pythonfrom vbml import Patcher, Patternpatcher = Patcher()pattern = Pattern(&quot;I have &lt;amount:int&gt; apples. They are &lt;adj&gt;&quot;)result1 = patcher.check(pattern, &quot;I have 3 apples. They are green&quot;)result2 = patcher.check(pattern, &quot;I have three apples. They are green&quot;)result3 = patcher.check(pattern, &quot;Something irrelevant&quot;)result1 # {&quot;amount&quot;: 3, &quot;adj&quot;: &quot;green&quot;}result2 # Noneresult3 # None```Leave a star if this project helped you  Made by [timoniq](https://github.com/timoniq)</longdescription>
</pkgmetadata>