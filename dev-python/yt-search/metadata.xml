<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># yt-search## English## Install**Python 3.6.x or higher is required.**Install command:```cmd# Linux/OS X$ python -m pip install -U yt-search# Windows&gt; py -3 -m pip install -U yt-search```## ExampleSearch video```pythonimport yt_searchyt = yt_search.build(&quot;API Key&quot;)search_result = yt.search(&quot;keyword&quot;, sMax=10, sType=[&quot;video&quot;])print(search_result.title)print(search_result.videoId)print(search_result.channelTitle)```Search YouTube channel```pythonimport yt_searchyt = yt_search.build(&quot;API Key&quot;)search_result = yt.search(&quot;keyword&quot;, sMax=10, sType=[&quot;channel&quot;])print(search_result.channelTitle)print(search_result.channelId)```Search playlist```pythonimport yt_searchyt = yt_search.build(&quot;API Key&quot;)search_result = yt.search(&quot;keyword&quot;, sMax=10, sType=[&quot;playlist&quot;])print(search_result.title)print(search_result.playlistId)print(search_result.channelTitle)```sType can be select multiple by list```pythonimport yt_searchyt = yt_search.build(&quot;API Key&quot;)search_result = yt.search(&quot;keyword&quot;, sMax=10, sType=[&quot;video&quot;, &quot;playlist&quot;])print(search_result.title)print(search_result.videoId)print(search_result.playlistId)print(search_result.channelTitle)```Download search results with wavNeed youtube-dl and ffmpeg.```pythonimport yt_searchimport youtube_dlyt = yt_search.build(&quot;API Key&quot;)search_result = yt.search(&quot;keyword&quot;, sMax=10, sType=[&quot;video&quot;])options = {    'format': 'bestaudio/bestaudio',    'outtmpl': '%(title)s.%(ext)s',    'postprocessors': [        {            'key': 'FFmpegExtractAudio',            'preferredcodec': 'wav'        },        {            'key': 'FFmpegMetadata'        }    ]}with youtube_dl.YoutubeDL(options) as ydl:    ydl.download([&quot;https://www.youtube.com/watch?v=&quot; + i                  for i in search_result.videoId])```In the case of youtube#video, playlistId returns None.In the case of youtube#playlist, videoId returns None.In the case of youtube#channel, playlistId and videoId returns None.## 日本語## インストール**Python3.6.x以上が必要です。**インストールコマンド：```cmd# Linux/OS X$ python -m pip install -U yt-search# Windows&gt; py -3 -m pip install -U yt-search```## プログラムの例動画を検索```pythonimport yt_searchyt = yt_search.build(&quot;APIキー&quot;)search_result = yt.search(&quot;キーワード&quot;, sMax=10, sType=[&quot;video&quot;])print(search_result.title)print(search_result.videoId)print(search_result.channelTitle)```YouTubeチャンネルを検索```pythonimport yt_searchyt = yt_search.build(&quot;APIキー&quot;)search_result = yt.search(&quot;キーワード&quot;, sMax=10, sType=[&quot;channel&quot;])print(search_result.channelTitle)print(search_result.channelId)```プレイリストを検索```pythonimport yt_searchyt = yt_search.build(&quot;APIキー&quot;)search_result = yt.search(&quot;キーワード&quot;, sMax=10, sType=[&quot;playlist&quot;])print(search_result.title)print(search_result.playlistId)print(search_result.channelTitle)```sTypeはリストで複数選択可能です。例：```pythonimport yt_searchyt = yt_search.build(&quot;APIキー&quot;)search_result = yt.search(&quot;キーワード&quot;, sMax=10, sType=[&quot;video&quot;, &quot;playlist&quot;])print(search_result.title)print(search_result.videoId)print(search_result.playlistId)print(search_result.channelTitle)```検索結果をwavでダウンロードyoutube-dlとffmpegが必要です。```pythonimport yt_searchimport youtube_dlyt = yt_search.build(&quot;APIキー&quot;)search_result = yt.search(&quot;キーワード&quot;, sMax=10, sType=[&quot;video&quot;])options = {    'format': 'bestaudio/bestaudio',    'outtmpl': '%(title)s.%(ext)s',    'postprocessors': [        {            'key': 'FFmpegExtractAudio',            'preferredcodec': 'wav'        },        {            'key': 'FFmpegMetadata'        }    ]}with youtube_dl.YoutubeDL(options) as ydl:    ydl.download([&quot;https://www.youtube.com/watch?v=&quot; + i                  for i in search_result.videoId])```youtube#videoの場合はplaylistIdが、youtube#playlistの場合はvideoIdが、youtube#channelの場合はplaylistIdとvideoIdがNoneを返します。Noneを返さない場合もあります（値があるとき）</longdescription>
</pkgmetadata>