<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># grader_labextension[![Github Actions Status](https://github.com/github_username/grader-labextension/workflows/Build/badge.svg)](https://github.com/github_username/grader-labextension/actions/workflows/build.yml)A JupyterLab extension.This extension is composed of a Python package named `grader_labextension`for the server extension and a NPM package named `grader-labextension`for the frontend extension.## Requirements- JupyterLab &gt;= 3.0## InstallTo install the extension, execute:```bashpip install grader_labextension```## UninstallTo remove the extension, execute:```bashpip uninstall grader_labextension```## TroubleshootIf you are seeing the frontend extension, but it is not working, checkthat the server extension is enabled:```bashjupyter server extension list```If the server extension is installed and enabled, but you are not seeingthe frontend extension, check the frontend extension is installed:```bashjupyter labextension list```## Contributing### Development installNote: You will need NodeJS to build the extension package.The `jlpm` command is JupyterLab's pinned version of[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use`yarn` or `npm` in lieu of `jlpm` below.```bash# Clone the repo to your local environment# Change directory to the grader_labextension directory# Install package in development modepip install -e .# Link your development version of the extension with JupyterLabjupyter labextension develop . --overwrite# Server extension must be manually installed in develop modejupyter server extension enable grader_labextension# Rebuild extension Typescript source after making changesjlpm build```You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.```bash# Watch the source directory in one terminal, automatically rebuilding when neededjlpm watch# Run JupyterLab in another terminaljupyter lab```With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).By default, the `jlpm build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:```bashjupyter lab build --minimize=False```### Development uninstall```bash# Server extension must be manually disabled in develop modejupyter server extension disable grader_labextensionpip uninstall grader_labextension```In development mode, you will also need to remove the symlink created by `jupyter labextension develop`command. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`folder is located. Then you can remove the symlink named `grader-labextension` within that folder.### Packaging the extensionSee [RELEASE](RELEASE.md)</longdescription>
</pkgmetadata>