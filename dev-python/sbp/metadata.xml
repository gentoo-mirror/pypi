<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>SBP Bindings for Python=======================Python client for Swift Binary Protocol (SBP). Since v2.5 libsbp is compatible with Python 2.7, 3.5 to 3.9. For new projects,Python 3.7 or newer is recommended.Setup-----You must have ``python`` and ``pip`` installed.Install dependencies only::  $ pip install -r requirements.txtInstall from source::  $ pip install ./pythonInstall package from PyPI (use ``sudo ...`` to install globally)::  $ pip install sbpSetup using a virtual environment---------------------------------Setup and activate the ``virtualenv``::   $ virtualenv .env &amp;&amp; source .env/bin/activateInstall ``py.test`` in the virtualenv::   $ pip install pytest-virtualenvInstall the ``pt.test`` coverage tools::   $ pip install pytest-covFinally, proceed to the standard setup instructions.Usage Examples--------------Simple example~~~~~~~~~~~~~~Receives SBP messages over a serial port, decodes MSG_BASELINEmessages and prints them out. See `simple.py`_ .Run this example with::  $ python -m sbp.client.examples.simple -p /path/to/serial/portSending SBP messages over UDP~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Receives SBP messages over a serial port and sends all incomingmessages to a UDP socket. See `udp.py`_ .Run this example with::  $ python -m sbp.client.examples.udp -s /path/to/serial/portTesting--------------To run the tests and check for coverage::  $  py.test -v --cov sbp tests/To run the tests without suppressing stdout output:  $  py.test -v -s --cov sbp tests/License-------Copyright Â© 2015-2021 Swift NavigationDistributed under MIT... _simple.py: https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/examples/simple.py.. _udp.py: https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/examples/udp.py</longdescription>
</pkgmetadata>