<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![](images/hdxcli.png)](https://github.com/hydrolix/hdx-cli)`hdxcli` is a command-line tool to work with hydrolix projects and tablesinteractively.Common operations such as CRUD operations on projects/tables/transforms and others  can be performed.# Hdx-cli installationYou can install `hdxcli` from pip:```shellpip install hdxcli```## System RequirementsPython version `&gt;= 3.10` is required.Make sure you have the correct Python version installed before proceeding with the installation of `hdxcli`.# Usage## Command-line tool organizationThe tool is organized, mostly with the general invocation form of:```shellhdxcli &lt;resource&gt; [&lt;subresource...] &lt;verb&gt; [&lt;resource_name&gt;]```Table and project resources have defaults that depend on the profileyou are working with, so they can be omitted if you previously used the `set` command.For all other resources, you can use `--transform`, `--dictionary`, `--source`, etc. Please see the command line help for more information.## Profiles`hdxcli` supports multiple profiles. You can use a default profile oruse the `--profile` option to operate on a non-default profile.When trying to invoke a command, if a login to the server is necessary, a prompt will be shown and the token will be cached.## Listing and showing profilesListing profiles:```shellhdxcli profile list```Showing default profile:```shellhdxcli profile show```## Projects, tables and transformsThe basic operations you can do with these resources are:- list them- create a new resource- delete an existing resource- modify an existing resource- show a resource in raw json format- show settings from a resource- write a setting- show a single setting## Working with transformsYou can create and override transforms with the following commands.Create a transform:``` shellhdxcli transform create -f &lt;transform-settings-file&gt; &lt;transform-name&gt;```Remember that a transform is applied to a table in a project, so whatever you set with the command-line tool will be the target of your transform.If you want to override it, do:``` shellhdxcli --project &lt;project-name&gt; --table &lt;table-name&gt; transform create -f &lt;transform-settings-file&gt;.json &lt;transform-name&gt;```## Ingest### Batch JobCreate a batch job:``` shellhdxcli job batch ingest &lt;job-name&gt; &lt;job-settings&gt;.json````job-name` is the name of the job that will be displayed when listing batch jobs. `job-settings` is the path to the file containing the specifications required to create that ingestion (for more information on the required specifications, see Hydrolix API Reference).In this case, the project, table, and transform are being omitted and the CLI will use the default transform within the project and table previously configured in the profile with the `--set` command. Otherwise, you can add `--project &lt;project-name&gt;, --table &lt;table-name&gt; --transform &lt;transform-name&gt;`.This allows you to execute the command as follows:``` shellhdxcli --project &lt;project-name&gt;, --table &lt;table-name&gt; --transform &lt;transform-name&gt; job batch ingest &lt;job-name&gt; &lt;job-settings&gt;.json```# Commands- Profile  - *list*    - `hdxcli profile list`  - *add*    - `hdxcli profile add &lt;profile-name&gt;`  - *show*    - `hdxcli --profile &lt;profile-name&gt; profile show`- Set/Unset  - *set*    - `hdxcli set &lt;project-name&gt; &lt;table-name&gt;`  - *unset*    - `hdxcli unset`- Project  - *list*    - `hdxcli project list`  - *create*    - `hdxcli project create &lt;project-name&gt;`  - *delete*    - `hdxcli project delete &lt;project-name&gt;`  - *activity*    - `hdxcli --project &lt;project-name&gt; project activity`  - *stats*    - `hdxcli --project &lt;project-name&gt; project stats`  - *show*    - `hdxcli --project &lt;project-name&gt; project show`  - *settings*    - `hdxcli --project &lt;project-name&gt; project settings`    - `hdxcli --project &lt;project-name&gt; project settings &lt;setting-name&gt;`    - `hdxcli --project &lt;project-name&gt; project settings &lt;setting-name&gt; &lt;new-value&gt;`- Table- Transform- Job- Purgejobs- Sources- Dictionary- Dictionary Files- Function- Storage- Integration- Migrate- Version# FAQ: Common operations## Showing help In order to see what you can do with the tool:``` shellhdxcli --help```Check which commands are available for each resource by typing:``` shellhdxcli [&lt;resource&gt;...] [&lt;verb&gt;] --help```## Performing operations against another serverIf you want to use `hdxcli` against another server, use `--profile` option:``` shellhdxcli --profile &lt;profile-name&gt; project list```## Obtain indented resource informationWhen you use the verb `show` on any resource, the output looks like this:``` shellhdxcli --project &lt;project-name&gt; project show{&quot;name&quot;: &quot;project-name&quot;, &quot;org&quot;: &quot;org-uuid&quot;, &quot;description&quot;: &quot;description&quot;, &quot;uuid&quot;: &quot;uuid&quot;, ...}```If you need to have an indented json version, just add `-i`, `--indent int`:``` shellhdxcli --project &lt;project-name&gt; project show -i 4{    &quot;name&quot;: &quot;project-name&quot;,     &quot;org&quot;: &quot;org-uuid&quot;,     &quot;description&quot;: &quot;description&quot;,     &quot;uuid&quot;: &quot;uuid&quot;,     ...,}```</longdescription>
</pkgmetadata>