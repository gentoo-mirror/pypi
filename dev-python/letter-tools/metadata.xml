<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Letter Tools[![Downloads](https://pepy.tech/badge/letter-tools/month)](https://pepy.tech/project/letter-tools)- [Letter Tools](#letter-tools)- [Intro](#intro)- [Installing](#installing)- [Examples](#examples)- [Usage](#usage)# IntroThis is a collection of tools for doing stuff with letters.With a randint for letters and a range for letters and more.# InstallingTo install use this command:```shell$ pip install letter-tools```# ExamplesFirst an example for randomly picking a letter.```py&gt;&gt;&gt; from letter_tools import rand&gt;&gt;&gt; rand(&quot;a&quot;, &quot;h&quot;)c&gt;&gt;&gt; rand(&quot;a&quot;, &quot;h&quot;)g&gt;&gt;&gt; rand(1, 10)5&gt;&gt;&gt; rand(1, 10)7```Next an example for ranges.```py&gt;&gt;&gt; from letter_tools import range&gt;&gt;&gt; for i in range(&quot;i&quot;):...     print(i)...abcdefghi&gt;&gt;&gt; for i in range(&quot;d&quot;, &quot;g&quot;):...     print(i)...defg&gt;&gt;&gt; for i in range(1, 5):...     print(i)...12345#Using step&gt;&gt;&gt; for i in range(1, 5, 3):...     print(i)...14&gt;&gt;&gt; for i in range(&quot;d&quot;, &quot;g&quot;, 3):...     print(i)...dg```Now an example for word score.```py# Find the score of a word a=1, b=2 and add up the numbers for all the letters&gt;&gt;&gt; from letter_tools import word_score&gt;&gt;&gt; print(word_score(&quot;hi&quot;)) 17&gt;&gt;&gt; print(word_score(&quot;letter&quot;))       80&gt;&gt;&gt; print(word_score(&quot;hi&quot;, opt=&quot;&quot;)) 37  &gt;&gt;&gt; print(word_score(&quot;letter&quot;, opt=&quot;&quot;)) 82  ```Here we will use the scrabble score, it does almost the same thing as word score but it uses scrabble scoring rules.  a: 1, b: 3, c: 3, d: 2, e: 1, f: 4, g: 2, h: 4, i: 1, j: 8, k: 5, l: 1, m: 3, n: 1, o: 1, p: 3, q: 10, r: 1, s: 1, t: 1, u: 1, v: 4, w: 4, x: 8, y: 4, z: 10```py&gt;&gt;&gt; from letter_tools import scrabble_score&gt;&gt;&gt; print(scrabble_score(&quot;hi&quot;)) 5   &gt;&gt;&gt; print(scrabble_score(&quot;letter&quot;)) 6   ```Now for the derandomize and randomize functions.```py&gt;&gt;&gt; # For this we will use a word 'welcome' and randomize it.&gt;&gt;&gt; from letter_tools import randomize&gt;&gt;&gt; randomize(&quot;welcome&quot;) 'mlcoeew'&gt;&gt;&gt; # Now we will derandomize 'mlcoeew' &gt;&gt;&gt; from letter_tools import derandomize&gt;&gt;&gt; derandomize(&quot;mlcoeew&quot;) ['welcome']```Now for custom score.```py&gt;&gt;&gt; from letter_tools import custom_score&gt;&gt;&gt; custom_score('letter', {'l': 13, 'e': 7, 't': 16, 'r': 1}) 60```# UsageWord score could help you with making a game to find certain scored words. Here is an example for 100 scored words. This will not eliminate invalid words.```pyfrom letter_tools import word_scorewhile True:    word = input(&quot;Could you give me some words that add up to 100 exactly?\na=1, b=2 and so on\n&quot;)    if word_score(word) == 100:        print(f&quot;{word} is a 100 letter word correct!!!&quot;)        break    else:        print(f&quot;{word} is a {word_score(word)} not a 100 letter word wrong.&quot;)```We could also make a script to find 100 scored words.For this we will use the requests library and using [Dwyl's english word set](https://github.com/dwyl/english-words) I generated a json you could use for this.This is the code:```pyfrom letter_tools import word_scoreimport requestswords = requests.get(&quot;https://raw.githubusercontent.com/hostedposted/letter-tools/master/words.json&quot;).json()for i in words:    try:        if word_score(i) == 100:            print(i)    except KeyError:        pass```</longdescription>
</pkgmetadata>