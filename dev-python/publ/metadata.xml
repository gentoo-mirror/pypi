<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PublA personal publishing platform. Like a static publishing system, only dynamic.## MotivationI make a lot of different things — comics, music, art, code, games — and none ofthe existing content management systems I found quite satisfied my use cases.Either they don't allow enough flexibility in the sorts of content that they canprovide, or the complexity in managing the content makes it more complicated thansimply hand-authoring a site.I wanted to bring the best of the classic static web to a more dynamicpublishing system; scheduled posts, private posts, category-based templates, andbuilt-in support for image renditions (including thumbnails, high-DPI support,and image galleries). And I want to do it all using simple Markdown filesorganized in a sensible file hierarchy.## Basic tenets* Containerized web app that's deployable with little friction (hopefully)* Do one thing (present heterogeneous content), do it well (hopefully)* Use external tools for site content editing* Be CDN-friendly* High-DPI images and image sets as first-class citizens* Interoperate with everything that's open for interoperation (especially [IndieWeb](http://indieweb.org))## See it in actionThe main demonstration site is at https://beesbuzz.biz/ — it is of course awork in progress! The documentation site for Publ itself (which is also a work in progress) lives at https://publ.plaidweb.site/## Operating requirementsI am designing this to work in any WSGI-capable environment with a supportedversion of Python. This means that it will, for example, be deployable on anyshared hosting which has Passenger support (such as Dreamhost), as well as onHeroku, Google AppEngine, S3, or any other simple containerized deploymenttarget.The file system is the ground truth for all site data, and while it does use adatabase as a content index, the actual choice of database doesn't matter allthat much. A typical deployment will use SQLite, but MySQL, Postgres, Oracle,and Cockroach are also supported.## Developing PublIn order to develop Publ itself, you'll need to install its dependencies; seethe [getting startedguide](http://publ.plaidweb.site/manual/328-Getting-started) for moreinformation. In particular, make sure you have compatible versions of[Python](https://python.org/) and [Poetry](https://python-poetry.org/)installed, and, if on Windows, you'll probably need to install the [Visual C++build tools](https://visualstudio.microsoft.com/downloads/).As far as developing Publ itself goes, cloning this repository and running`./runTests.sh` (Linux/macOS/etc.) or `wintests.cmd` (Windows) should get you upand running. The runtime manual test suite site lives in `tests/` (with theactual site content in `content/`, `templates/` and `static/`).For developing CLI functionality, you'll have to override the `FLASK_APP`environment variable to be `test_app.py`.## Additional resourcesThe [Publ-site](https://github.com/PlaidWeb/Publ-site) repository stores all ofthe templates, site content, and configuration for the [Publsite](https://publ.plaidweb.site).The[Publ-templates-beesbuzz.biz](https://github.com/PlaidWeb/Publ-templates-beesbuzz.biz)repository provides a stripped-down sample site based on [my personalhomepage](https://beesbuzz.biz).## AuthorsIn order of first contribution:* [fluffy](https://github.com/fluffy-critter)* [karinassuni](https://github.com/karinassuni)</longdescription>
</pkgmetadata>