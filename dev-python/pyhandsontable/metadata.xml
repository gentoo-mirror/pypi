<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyhandsontable[![Build Status](https://travis-ci.org/patarapolw/pyhandsontable.svg?branch=master)](https://travis-ci.org/patarapolw/pyhandsontable)[![PyPI version shields.io](https://img.shields.io/pypi/v/pyhandsontable.svg)](https://pypi.python.org/pypi/pyhandsontable/)[![PyPI license](https://img.shields.io/pypi/l/pyhandsontable.svg)](https://pypi.python.org/pypi/pyhandsontable/)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pyhandsontable.svg)](https://pypi.python.org/pypi/pyhandsontable/)View a list of JSON-serializable dictionaries or a 2-D array, in HandsOnTable, in Jupyter Notebook.Nested JSON renderer is also supported and is default. Image and markdown renderers are possible, but has to be extended.## Installation```commandlinepip install pyhandsontable```## UsageIn Jupyter Notebook,```python&gt;&gt;&gt; from pyhandsontable import PagedViewer&gt;&gt;&gt; viewer = PagedViewer(data=data_matrix, **kwargs)&gt;&gt;&gt; viewer'A Handsontable is shown in Jupyter Notebook.'&gt;&gt;&gt; viewer.view(-1)'The last page is shown.'&gt;&gt;&gt; viewer.previous()'The previous page (i-1) is shown.'&gt;&gt;&gt; viewer.next()'The next page (i+1) is shown.'```Data matrix can be either a list of lists (2-D array) or a list of dictionaries.It is also possible to view all entries at once, but it could be bad, if there are too many rows.```python&gt;&gt;&gt; from pyhandsontable import view_table&gt;&gt;&gt; view_table(data_matrix, **kwargs)```## Acceptable kwargs- height: height of the window (default: 500)- width: width of the window (default: 1000)- title: title of the HTML file- maxColWidth: maximum column width. (Default: 200)- renderers: the renderers to use in generating the columns (see below.)- autodelete: whether the temporary HTML file should be autodeleted. (Default: True)- filename: filename of the temporary HTML file (default: 'temp.handsontable.html')- config: add additional config as defined in https://docs.handsontable.com/pro/5.0.0/tutorial-introduction.html  - This will override the default config (per key basis) which are:  ```javascript{    data: data,    rowHeaders: true,    colHeaders: true,    columns: columns,    manualColumnResize: true,    manualRowResize: true,    renderAllRows: true,    modifyColWidth: (width, col)=&gt;{        if(width &gt; maxColWidth) return maxColWidth;    },    afterRenderer: (td, row, column, prop, value, cellProperties)=&gt;{        td.innerHTML = '&lt;div class=&quot;wrapper&quot;&gt;&lt;div class=&quot;wrapped&quot;&gt;' + td.innerHTML + '&lt;/div&gt;&lt;/div&gt;';    }}````renderers` example, if your data is a 2-D array:```python{    1: 'html',    2: 'html'}```or if your data is list of dict:```python{    &quot;front&quot;: 'html',    &quot;back&quot;: 'html'}```## Enabling Image, HTML and Markdown rendererThis can be done in Python side, by converting everything to HTML. Just use [any markdown for Python library](https://github.com/Python-Markdown/markdown).```pythonfrom markdown import markdownimport base64image_html = f'&lt;img src=&quot;{image_url}&quot; width=100 /&gt;'image_html2 = f'&lt;img src=&quot;data:image/png;base64,{base64.b64encode(image_bytes).decode()}&quot; /&gt;'markdown_html = markdown(markdown_raw)```Any then,```pythonPagedViewer(data=data_matrix, renderers={    &quot;image_field&quot;: &quot;html&quot;,    &quot;html_field&quot;: &quot;html&quot;,    &quot;markdown_field&quot;: &quot;html&quot;})```## Screenshots![1.png](/screenshots/1.png?raw=true)![0.png](/screenshots/0.png?raw=true)## Related projects- [htmlviewer](https://github.com/patarapolw/htmlviewer) - similar in concept to this project, but does not use HandsOnTable.js- [TinyDB-viewer](https://github.com/patarapolw/tinydb-viewer) - uses HandsOnTable.js and also allow editing in Jupyter Notebook. ## LicenseThis software includes [`handsontable.js`](https://github.com/handsontable/handsontable), which is MIT-licensed.</longdescription>
</pkgmetadata>