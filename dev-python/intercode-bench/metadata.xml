<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ü§ñüíª IntercodeBuild interactive code environments for training, testing, and augmenting code and decision making agents&lt;p&gt;    &lt;a href=&quot;https://badge.fury.io/py/intercode-bench&quot;&gt;        &lt;img src=&quot;https://badge.fury.io/py/intercode-bench.svg&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://www.python.org/&quot;&gt;        &lt;img alt=&quot;Build&quot; src=&quot;https://img.shields.io/badge/Python-3.8+-1f425f.svg?color=purple&quot;&gt;    &lt;/a&gt;    &lt;a href=&quot;https://copyright.princeton.edu/policy&quot;&gt;        &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/License-MIT-blue&quot;&gt;    &lt;/a&gt;&lt;/p&gt;## üëã OverviewInterCode is a **lightweight, flexible, and easy-to-use framework** for designing interactive code environments. Following the popular [`gym`](https://gymnasium.farama.org/) interface definition, InterCode makes it easy to quickly define a code environment and deploy an agent to operate in code within the context of the environment.For an overview of InterCode, building interactive code tasks with InterCode, and evaluating agents on InterCode environments, please check out our [wiki](https://github.com/princeton-nlp/intercode/wiki), [website](https://intercode-benchmark.github.io/) and the original paper:**[InterCode: Standardizing and Benchmarking Interactive Coding with Execution Feedback](https://arxiv.org/abs/2306.14898)**  ## üõ†Ô∏è Installation&gt; **Note**&gt; InterCode requires the following installations to run:&gt; * `python` &gt;= 3.8&gt; * `docker`: Learn more [here](https://docs.docker.com/get-docker/) to install.```pip install intercode-bench```## üöÄ Quick StartBefore running the below code, make sure the Docker daemon/application is running locally.### BashCreate a python file and copy + paste the following code to interact with the InterCode Bash environment.```pythonimport readlinefrom intercode.assets import bash_build_docker, bash_image_name, bash_test_datafrom intercode.envs import BashEnvif __name__ == '__main__':    bash_build_docker()    env = BashEnv(bash_image_name, data_path=bash_test_data, traj_dir=&quot;logs/&quot;, verbose=True)    try:        for idx in range(3):            env.reset()            obs, done = env.observation, False            while not done:                action = input('&gt; ')                obs, reward, done, info = env.step(action)    except KeyboardInterrupt:        print(&quot;Keyboard interrupt detected&quot;)    finally:        env.close()```If InterCode was installed successfully, the InterCode Bash environment should be started successfully and a CLI interpreter should appear, allowing you to enter `bash` commands to interact with the task setting's file system. You can `^c` at any to time to exit the environment.### SQLCreate a python file and copy + paste the following code to interact with the InterCode SQL environment.```pythonimport readlinefrom intercode.assets import sql_build_docker, sql_image_name, sql_test_datafrom intercode.envs import SqlEnvfrom typing import Dictdef preprocess(record: Dict) -&gt; str:    db = record[&quot;extra&quot;][&quot;db&quot;]    return f&quot;use {db}&quot;if __name__ == '__main__':    sql_build_docker()    env = SqlEnv(sql_image_name, data_path=sql_test_data, preprocess=preprocess, traj_dir=&quot;logs/&quot;, verbose=True)    try:        for idx in range(3):            env.reset()            obs, done = env.observation, False            while not done:                action = input('&gt; ')                obs, reward, done, info = env.step(action)    except KeyboardInterrupt:        print(&quot;Keyboard interrupt detected&quot;)    finally:        env.close()```If InterCode was installed successfully, the InterCode SQL environment should be started successfully and a CLI interpreter should appear, allowing you to enter `SQL` commands to interact with the task setting's MySQL database. You can `^c` at any to time to exit the environment.## üîé Learn MoreTo learn more about the InterCode framework, please check out the [website](https://intercode-benchmark.github.io/) and GitHub [repository](https://github.com/princeton-nlp/intercode)## ü™™ LicenseCheck `LICENSE.md`</longdescription>
</pkgmetadata>