<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Netflix Conductor SDK - PythonThe `conductor-python` repository provides the client SDKs to manage:1. Task workers2. Tasks &amp; Workflows3. Schedules &amp; Secrets4. Role Based Access Control (RBAC)## Task WorkersBuilding the task workers in Python mainly consists of the following steps:1. Setup conductor-python package2. Create and run task workers### Setup Conductor Python Package* Create a virtual environment to build your package```shellvirtualenv conductorsource conductor/bin/activate```* Get Conductor Python SDK```shellpython3 -m pip install conductor-python```#### Server SettingsEverything related to server settings should be done within the `Configuration` class by setting the required parameter (when initializing an object) like this:```pythonfrom conductor.client.configuration.configuration import Configurationconfiguration = Configuration(    server_api_url='https://play.orkes.io/api',    debug=True)```* server_api_url : Conductor server address. For example, if you are running locally, it would look like; `http://localhost:8000/api`.* debug: It can take the values true/false. `true` for verbose logging `false` to display only the errors#### Authentication Settings (Optional)Configure the authentication settings if your Conductor server requires authentication.#### Access Control SetupSee [Access Control](https://orkes.io/content/docs/getting-started/concepts/access-control) for more details on role-based access control with Conductor and generating API keys for your environment.```pythonfrom conductor.client.configuration.configuration import Configurationfrom conductor.client.configuration.settings.authentication_settings import AuthenticationSettingsconfiguration = Configuration(    authentication_settings=AuthenticationSettings(        key_id='key',        key_secret='secret'    ))```#### Metrics Settings (Optional)Conductor uses [Prometheus](https://prometheus.io/) to collect metrics.```pythonmetrics_settings = MetricsSettings(    directory='/path/to/folder',    file_name='metrics_file_name.extension',    update_interval=0.1,)```* `directory`: Directory to store the metrics.  * Ensure that you have already created this folder, or the program should have permission to create it for you.* `file_name`: File where the metrics are stored.  * example: `metrics.log`* `update_interval`: Time interval in seconds to refresh metrics into the file.  * example: `0.1` means metrics are updated every  0.1s or 100ms.### Create and Run Task WorkersThe next step is to [create and run task workers](https://github.com/conductor-sdk/conductor-python/tree/main/docs/worker).## Tasks &amp; WorkflowsBuiling tasks and workflows involve usage of Orkes Clients that can be used to do the following:### Create task and workflow definitionsWe can use the metadata client to [manage task and workflow definitions](https://github.com/conductor-sdk/conductor-python/tree/main/docs/metadata).### Execute Workflows using CodeYou can [execute workflows using code](https://github.com/conductor-sdk/conductor-python/tree/main/docs/workflow).### Task ManagementYou can [manage tasks using code](https://github.com/conductor-sdk/conductor-python/tree/main/docs/task).### Unit Testing WorkflowsYou can [unit test your conductor workflows on a remote server before running them on production.](https://github.com/conductor-sdk/conductor-python/tree/main/docs/testing).### Error HandlingYou can [handle errors returned from any of the Orkes Client SDK methods](https://github.com/conductor-sdk/conductor-python/tree/main/docs/exceptions).## Schedules &amp; Secrets### Schedule ManagementYou can [manage schedules using code](https://github.com/conductor-sdk/conductor-python/tree/main/docs/schedule).### Secret ManagementYou can [manage secrets using code](https://github.com/conductor-sdk/conductor-python/tree/main/docs/secret).## Role Based Access Control (RBAC)### Access Control ManagementYou can [manage applications, users, groups and permissions using code](https://github.com/conductor-sdk/conductor-python/tree/main/docs/authorization).</longdescription>
</pkgmetadata>