<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>=====bleak=====.. figure:: https://raw.githubusercontent.com/hbldh/bleak/master/Bleak_logo.png    :target: https://github.com/hbldh/bleak    :alt: Bleak Logo    :scale: 50%.. image:: https://github.com/hbldh/bleak/workflows/Build%20and%20Test/badge.svg    :target: https://github.com/hbldh/bleak/actions?query=workflow%3A%22Build+and+Test%22    :alt: Build and Test.. image:: https://img.shields.io/pypi/v/bleak.svg    :target: https://pypi.python.org/pypi/bleak.. image:: https://img.shields.io/pypi/dm/bleak.svg    :target: https://pypi.python.org/pypi/bleak    :alt: PyPI - Downloads.. image:: https://readthedocs.org/projects/bleak/badge/?version=latest    :target: https://bleak.readthedocs.io/en/latest/?badge=latest    :alt: Documentation Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/blackBleak is an acronym for Bluetooth Low Energy platform Agnostic Klient.* Free software: MIT license* Documentation: https://bleak.readthedocs.io.Bleak is a GATT client software, capable of connecting to BLE devicesacting as GATT servers. It is designed to provide a asynchronous,cross-platform Python API to connect and communicate with e.g. sensors.Installation------------.. code-block:: bash    $ pip install bleakFeatures--------* Supports Windows 10, version 16299 (Fall Creators Update) or greater* Supports Linux distributions with BlueZ &gt;= 5.43* OS X/macOS support via Core Bluetooth API, from at least OS X version 10.11* Android backend compatible with python-for-androidBleak supports reading, writing and getting notifications fromGATT servers, as well as a function for discovering BLE devices.Usage-----To discover Bluetooth devices that can be connected to:.. code-block:: python    import asyncio    from bleak import BleakScanner    async def main():        devices = await BleakScanner.discover()        for d in devices:            print(d)    asyncio.run(main())Connect to a Bluetooth device and read its model number:.. code-block:: python    import asyncio    from bleak import BleakClient    address = &quot;24:71:89:cc:09:05&quot;    MODEL_NBR_UUID = &quot;00002a24-0000-1000-8000-00805f9b34fb&quot;    async def main(address):        async with BleakClient(address) as client:            model_number = await client.read_gatt_char(MODEL_NBR_UUID)            print(&quot;Model Number: {0}&quot;.format(&quot;&quot;.join(map(chr, model_number))))    asyncio.run(main(address))DO NOT NAME YOUR SCRIPT ``bleak.py``! It will cause a circular import error.See examples folder for more code, for instance example code for connecting to a`TI SensorTag CC2650 &lt;http://www.ti.com/ww/en/wireless_connectivity/sensortag/&gt;`_</longdescription>
</pkgmetadata>