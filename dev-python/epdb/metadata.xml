<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>========Overview========Adds functionality to the python debugger, including support for remotedebuggingInstallation============::    pip install epdbUsage=====For debugging code locally, epdb generally works the same as `pdb&lt;https://docs.python.org/3/library/pdb.html&gt;`_. You can debug a program fromthe python interpreter::    &gt;&gt;&gt; import epdb    &gt;&gt;&gt; import mymodule    &gt;&gt;&gt; epdb.Epdb().run('mymodule.test()')    *** NameError: name 'execfile' is not defined    &gt; /home/wasche/git/epdb/&lt;string&gt;(1)&lt;module&gt;()    -&gt; &quot;&quot;&quot;    (Epdb) continue    Traceback (most recent call last):      File &quot;&lt;console&gt;&quot;, line 1, in &lt;module&gt;      File &quot;/usr/lib64/python3.5/bdb.py&quot;, line 431, in run        exec(cmd, globals, locals)      File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;      File &quot;/home/wasche/git/epdb/mymodule.py&quot;, line 2, in test        import spam    ImportError: No module named 'spam'You can also drop breakpoints at specific places in a program's code byinserting::    import epdb; epdb.set_trace()or by using the alias ``st``::    import epdb; epbd.st()To debug code that is either running on a remote system, or in a process thatisn't attached to your tty you can use epdb in server mode::    import epdb; epdb.serve()By default ``epdb.serve()`` will start a simple telnet server on port 8080, butyou can use the ``port`` keyword argument to use a different port::    import epdb; epdb.serve(port=8888)You can connect to the epdb server by using ``epdb.connect()``::    &gt;&gt;&gt; import epdb    &gt;&gt;&gt; epdb.connect()By default ``epdb.connect()`` will attempt to connect to port 8080 onlocalhost. If you are debugging a process on another host or port, you can callconnect with the ``host`` or ``port`` keyword arguments::    &gt;&gt;&gt; import epdb    &gt;&gt;&gt; epdb.connect(host='some.host.com', port=8888)</longdescription>
</pkgmetadata>