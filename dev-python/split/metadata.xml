<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>============python-split============Functions to split and partition sequences.Installation------------::    pip install splitUsage-----All functions in this module return iterators, and consume inputlazily. In the examples below, the results are forced using ``list``and ``dict``.Chunks of equal size~~~~~~~~~~~~~~~~~~~~To partition a sequence into chunks of equal size, use ``chop``::    &gt;&gt;&gt; from split import chop    &gt;&gt;&gt; list(chop(3, range(10)))    [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9]]If ``truncate=True`` keyword argument is given, then sequence length istruncated to a multiple of chunk size, and all chunks have the samesize::    &gt;&gt;&gt; list(chop(3, range(10), truncate=True))    [[0, 1, 2], [3, 4, 5], [6, 7, 8]]Subsequences by a predicate~~~~~~~~~~~~~~~~~~~~~~~~~~~To split a sequence into two by a given predicate, use ``partition``::    &gt;&gt;&gt; from split import partition    &gt;&gt;&gt; def odd(x): return x%2    &gt;&gt;&gt; map(list, partition(odd, range(5)))    [[1, 3], [0, 2, 4]]For more general partitioning, use ``groupby``::    &gt;&gt;&gt; [(k, list(i)) for k,i in groupby(lambda x: x%3, range(7))]    [(0, [0, 3, 6]), (1, [1, 4]), (2, [2, 5])]This function is different from ``itertools.groupby``: it returns onlyone subsequence iterator per predicate value. Its return value can beconverted into dictionary.When working with very long sequences, consider using``predicate_values`` keyword argument to avoid scanning the entiresequence. For example::    &gt;&gt;&gt; longseq = xrange(int(1e9))    &gt;&gt;&gt; pred = lambda x: x%3    &gt;&gt;&gt; dict(groupby(pred, longseq, predicate_values=(0,1,2)))    {0: &lt;generator object subsequence at 0x301b7d0&gt;,     1: &lt;generator object subsequence at 0x301b780&gt;,     2: &lt;generator object subsequence at 0x301b730&gt;}Breaking on separators~~~~~~~~~~~~~~~~~~~~~~To break a sequence into chunks on some separators, use ``split``. Forexample, breaking on zero elements::    &gt;&gt;&gt; list(split(0, [1,2,3,0,4,5,0,0,6]))    [[1, 2, 3], [4, 5], [], [6]]You can use a function as a predicate too::    &gt;&gt;&gt; list(split(lambda x: x==5, range(10)))    [[0, 1, 2, 3, 4], [6, 7, 8, 9]]</longdescription>
</pkgmetadata>