<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Formic: Apache Ant FileSet and Globs in Python==============================================.. |v| image::  https://img.shields.io/pypi/v/formic2.svg  :target: https://pypi.python.org/pypi/formic2  :alt: Last stable version (PyPI).. [doc] image::  https://readthedocs.org/projects/formic/badge/?version=latest  :target: https://formic.readthedocs.io/  :alt: ReadTheDocsHistory-------Formic is forked from https://bitbucket.org/aviser/formic. The original project only supports python2.7 and has not been maintained for a long time.I added Python3 supports and fixed some issues.Formic now can work on any Python 2.6+ or Python 3.4+ system. If not, please `file an issue &lt;https://github.com/wolfhong/formic/issues/new&gt;`_. Yet not tested on other Python version.Formic has no runtime dependencies outside the Python system libraries.Install--------Formic can be installed from the Cheeseshop with easy_install::   $ easy_install formic2Or pip::   $ pip install formic2Quickstart----------Once installed, you can use Formic either from the command line to find from the current directory::   $ formic -i &quot;*.py&quot; -e &quot;__init__.py&quot; &quot;**/*test*/&quot; &quot;test_*&quot;This will search for files all Python files under the current directoryexcluding all `__init__.py` files, any file in directories whose name containsthe word 'test', and any files that start `test_`.You can also find from the specified directory like below::   $ formic /specified/directory/can/ignore/ -i &quot;*.py&quot; &quot;**/test/**/*.txt&quot; &quot;*.ini&quot;Output from Formic is formatted like the Unix find command, and so can easily be combined with other executables, eg::    $ formic -i &quot;**/*.bak&quot; | xargs rmwill delete all `.bak` files in or under the current directory (but excluding VCS directories such as `.svn` and `.hg`).Formic can also be integrated right into your Python project::    import formic    fileset = formic.FileSet(include=&quot;**.py&quot;,                             exclude=[&quot;**/*test*/**&quot;, &quot;test_*&quot;],                             directory=&quot;./&quot;,                             symlinks=False, )    for file_name in fileset:        # Do something with file_name        ...Formic is always case-insensitive on NT, but can be either case-sensitive or case-insensitive on POSIX.On NT::    $ formic ./test/ -i &quot;upp*&quot; &quot;upp*/&quot;    /some/where/formic/test/lower/UPPER.txt    /some/where/formic/test/UPPER/lower.txt    /some/where/formic/test/UPPER/UPPER.txtOn POSIX with case-insensitive::    $ formic ./test/ --insensitive -i &quot;upp*&quot; &quot;upp*/&quot;    /some/where/formic/test/lower/UPPER.txt    /some/where/formic/test/UPPER/lower.txt    /some/where/formic/test/UPPER/UPPER.txtwith case-sensitive::    $ formic ./test/ -i &quot;upp*&quot; &quot;upp*/&quot;    $That's about it :)Features--------Formic is a Python implementation of Apache Ant `FileSet and Globs&lt;http://ant.apache.org/manual/dirtasks.html#patterns&gt;`_ including the directory wildcard `**`.FileSet provides a terse way of specifying a set of files without having to enumerate individual files. It:1. **Includes** files from one or more Ant Globs, then2. Optionally **excludes** files matching further Ant Globs.Ant Globs are a superset of ordinary file system globs. The key differences:* They match whole paths, eg ``/root/myapp/*.py``* \*\* matches *any* directory or *directories*, eg ``/root/**/*.py`` matches  ``/root/one/two/my.py``* You can match the topmost directory or directories, eg ``/root/**``, or* The parent directory of the file, eg ``**/parent/*.py``, or* Any parent directory, eg ``**/test/**/*.py``This approach is the de-facto standard in several other languages and tools,including Apache Ant and Maven, Ruby (Dir) and Perforce (...).Python has built-in support for simple globs in `fnmatcher&lt;http://docs.python.org/library/fnmatch.html&gt;`_ and `glob&lt;http://docs.python.org/library/glob.html&gt;`_, but Formic:* Can recursively scan subdirectories* Matches arbitrary directories *in* the path (eg ``/1/**/2/**/3/**/*.py``).* Has a high level interface:  * Specify one or more globs to find files  * Globs can be used to exclude files  * Ant, and Formic, has a set of *default excludes*. These are files and    directories that, by default, are automatically excluded from all searches.    The majority of these are files and directories related to VCS (eg .svn    directories). Formic adds ``__pycache__``.  * Iterate through all matches in the sub-tree* Is more efficient with many common patterns; it runs relatively faster on large directory trees with large numbers of files.About-----Formic is originally written and maintained by `Andrew Alcock &lt;mailto:formic@aviser.asia&gt;`_ of `Aviser LLP &lt;http://www.aviser.asia&gt;`_, Singapore.But now, I forked it on GitHub and will maintain this project voluntarily for a long time.* `Origin Homepage &lt;http://www.aviser.asia/formic&gt;`_* `Current Issue tracker &lt;https://github.com/wolfhong/formic/issues?status=new&amp;status=open&gt;`_* `Current Source &lt;https://github.com/wolfhong/formic&gt;`_ on GitHub* `PyPI &lt;https://pypi.python.org/pypi/formic2&gt;`_* `ReadTheDocs &lt;https://formic.readthedocs.io/&gt;`_</longdescription>
</pkgmetadata>