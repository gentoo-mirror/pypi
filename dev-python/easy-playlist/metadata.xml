<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># easy-playlist**A library to easily manage yours playlists in python**## Getting started1. [**Installation**](#installation)2. [**Usages**](#usages)3. [**Code example**](#code-example)4. [**Documentation**](https://github.com/ThePhoenix78/easy-playlist/blob/main/DOCUMENTATION.md)## Installation**This library will work with python 3.6+**PyPi : `pip install easy-playlist`GitHub : [Github](https://github.com/ThePhoenix78/easy-playlist)## UsagesThis library will work with any .mp3 filesIt's was desinged to work with bots in general## Code example### Simple tasks```pyfrom easy_playlist import Playlistspls = Playlists()pls.add_playlist(&quot;test&quot;)pl = pls.get_playlist(&quot;test&quot;)# add music to your playlistpl.add_music(&quot;path_to_music.mp3&quot;)pl.add_music([&quot;path_to_music.mp3&quot;, &quot;path_to_other_music.mp3&quot;])# trigger the timer# this will take the first song of the playlistpl.play()# pause the timerpl.pause()# resume the timerpl.resume()# stop the current music and trigger the timer for the next onepl.next()# stop the current music and trigger the timer for the previous onepl.previous()# stop the timer and the musicpl.stop()# IMPORTANT# when you don't need to use the playlist anymore do this# this library use a thread to calculate the timepl.exit()```### To make it work with a bot```pyfrom easy_playlist import Playlists# any bot librarybot = Bot()pls = Playlists()pls.add_playlist(&quot;test&quot;)pl = pls.get_playlist(&quot;test&quot;)# code example@bot.command()def add_music(music):pl.add_music(music)@bot.command()def pause():pl.pause()bot.pause_music()@bot.command()def resume():pl.resume()bot.resume_music()@bot.command()def play(music):pl.play(music)bot.play_music(music)@pl.on_music_over()def music_over(data):print(f&quot;{data.playlist.name} {data.music.name} is over, playing next now&quot;)pl.next()bot.play_music(pl.get_current().file)```### An other code to explain```pypl = Playlists()pl.add_playlist(name=&quot;test1&quot;, playlist=[&quot;music/bip1.mp3&quot;, &quot;music/bip2.mp3&quot;])pl.add_playlist(name=&quot;test2&quot;, playlist=[&quot;music/bip1.mp3&quot;, &quot;music/bip2.mp3&quot;])pl.add_music(&quot;test1&quot;, &quot;music/bip3.mp3&quot;)pl1 = pl.get_playlist(&quot;test1&quot;)pl1.play()pl2 = pl.get_playlist(&quot;test2&quot;)pl2.play()print(&quot;starting...&quot;)@pl.on_music_over()def music_over(data):    print(f&quot;[{data.playlist.name}] {data.music.name} is over, next song now!&quot;)    if data.playlist.is_over():        print(f&quot;Playlist {data.playlist.name} is over&quot;)        data.playlist.clear()        return    data.playlist.next()```</longdescription>
</pkgmetadata>