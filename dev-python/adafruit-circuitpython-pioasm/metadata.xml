<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Introduction============.. image:: https://readthedocs.org/projects/adafruit-circuitpython-pioasm/badge/?version=latest    :target: https://docs.circuitpython.org/projects/pioasm/en/latest/    :alt: Documentation Status.. image:: https://raw.githubusercontent.com/adafruit/Adafruit_CircuitPython_Bundle/main/badges/adafruit_discord.svg    :target: https://adafru.it/discord    :alt: Discord.. image:: https://github.com/adafruit/Adafruit_CircuitPython_PIOASM/workflows/Build%20CI/badge.svg    :target: https://github.com/adafruit/Adafruit_CircuitPython_PIOASM/actions    :alt: Build Status.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black    :alt: Code Style: BlackSimple assembler to convert pioasm to bytesDependencies=============This driver depends on:* `Adafruit CircuitPython &lt;https://github.com/adafruit/circuitpython&gt;`_Please ensure all dependencies are available on the CircuitPython filesystem.This is easily achieved by downloading`the Adafruit library and driver bundle &lt;https://circuitpython.org/libraries&gt;`_.Installing from PyPI=====================On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `fromPyPI &lt;https://pypi.org/project/adafruit-circuitpython-pioasm/&gt;`_. To install for current user:.. code-block:: shell    pip3 install adafruit-circuitpython-pioasmTo install system-wide (this may be required in some cases):.. code-block:: shell    sudo pip3 install adafruit-circuitpython-pioasmTo install in a virtual environment in your current project:.. code-block:: shell    mkdir project-name &amp;&amp; cd project-name    python3 -m venv .venv    source .venv/bin/activate    pip3 install adafruit-circuitpython-pioasmUsage Example=============.. code-block:: python    import time    import rp2pio    import board    import adafruit_pioasm    squarewave = &quot;&quot;&quot;    .program squarewave        set pins 1 [1]  ; Drive pin high and then delay for one cycle        set pins 0      ; Drive pin low    &quot;&quot;&quot;    assembled = adafruit_pioasm.assemble(squarewave)    sm = rp2pio.StateMachine(        assembled,        frequency=2000,        init=adafruit_pioasm.assemble(&quot;set pindirs 1&quot;),        first_set_pin=board.LED,    )    print(&quot;real frequency&quot;, sm.frequency)    time.sleep(120)Documentation=============API documentation for this library can be found on `Read the Docs &lt;https://docs.circuitpython.org/projects/pioasm/en/latest/&gt;`_.For information on building library documentation, please check out `this guide &lt;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&gt;`_.Contributing============Contributions are welcome! Please read our `Code of Conduct&lt;https://github.com/adafruit/Adafruit_CircuitPython_PIOASM/blob/master/CODE_OF_CONDUCT.md&gt;`_before contributing to help this project stay welcoming.</longdescription>
</pkgmetadata>