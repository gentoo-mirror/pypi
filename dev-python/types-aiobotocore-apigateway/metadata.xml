<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;types-aiobotocore-apigateway&quot;&gt;&lt;/a&gt;# types-aiobotocore-apigateway[![PyPI - types-aiobotocore-apigateway](https://img.shields.io/pypi/v/types-aiobotocore-apigateway.svg?color=blue)](https://pypi.org/project/types-aiobotocore-apigateway)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-apigateway.svg?color=blue)](https://pypi.org/project/types-aiobotocore-apigateway)[![Docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_apigateway/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-apigateway?color=blue)](https://pypistats.org/packages/types-aiobotocore-apigateway)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[aiobotocore.APIGateway 2.5.1](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/apigateway.html#APIGateway)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in[types-aiobotocore-apigateway docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_apigateway/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [types-aiobotocore-apigateway](#types-aiobotocore-apigateway)  - [How to install](#how-to-install)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `types-aiobotocore` for `APIGateway` service.```bash# install with aiobotocore type annotationspython -m pip install 'types-aiobotocore[apigateway]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'types-aiobotocore-lite[apigateway]'# standalone installationpython -m pip install types-aiobotocore-apigateway```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y types-aiobotocore-apigateway```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `types-aiobotocore[apigateway]` in your environment:```bashpython -m pip install 'types-aiobotocore[apigateway]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `aiobotocore` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `types-aiobotocore-lite[apigateway]` in your environment:```bashpython -m pip install 'types-aiobotocore-lite[apigateway]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `types-aiobotocore` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `types-aiobotocore` with services you use in your environment:```bashpython -m pip install 'types-aiobotocore[apigateway]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed  `types-aiobotocore`Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `types-aiobotocore[apigateway]` with services you use in your  environment:```bashpython -m pip install 'types-aiobotocore[apigateway]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `types-aiobotocore[apigateway]` in your environment:```bashpython -m pip install 'types-aiobotocore[apigateway]'````Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `types-aiobotocore[apigateway]` in your environment:```bashpython -m pip install 'types-aiobotocore[apigateway]'```Optionally, you can install `types-aiobotocore` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `aiobotocore` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`APIGatewayClient` provides annotations for`session.create_client(&quot;apigateway&quot;)`.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_apigateway import APIGatewayClientsession = get_session()async with session.create_client(&quot;apigateway&quot;) as client:    client: APIGatewayClient    # now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`types_aiobotocore_apigateway.paginator` module contains type annotations forall paginators.```pythonfrom aiobotocore.session import get_sessionfrom types_aiobotocore_apigateway import APIGatewayClientfrom types_aiobotocore_apigateway.paginator import (    GetApiKeysPaginator,    GetAuthorizersPaginator,    GetBasePathMappingsPaginator,    GetClientCertificatesPaginator,    GetDeploymentsPaginator,    GetDocumentationPartsPaginator,    GetDocumentationVersionsPaginator,    GetDomainNamesPaginator,    GetGatewayResponsesPaginator,    GetModelsPaginator,    GetRequestValidatorsPaginator,    GetResourcesPaginator,    GetRestApisPaginator,    GetSdkTypesPaginator,    GetUsagePaginator,    GetUsagePlanKeysPaginator,    GetUsagePlansPaginator,    GetVpcLinksPaginator,)session = get_session()async with session.create_client(&quot;apigateway&quot;) as client:    client: APIGatewayClient    # Explicit type annotations are optional here    # Types should be correctly discovered by mypy and IDEs    get_api_keys_paginator: GetApiKeysPaginator = client.get_paginator(&quot;get_api_keys&quot;)    get_authorizers_paginator: GetAuthorizersPaginator = client.get_paginator(&quot;get_authorizers&quot;)    get_base_path_mappings_paginator: GetBasePathMappingsPaginator = client.get_paginator(        &quot;get_base_path_mappings&quot;    )    get_client_certificates_paginator: GetClientCertificatesPaginator = client.get_paginator(        &quot;get_client_certificates&quot;    )    get_deployments_paginator: GetDeploymentsPaginator = client.get_paginator(&quot;get_deployments&quot;)    get_documentation_parts_paginator: GetDocumentationPartsPaginator = client.get_paginator(        &quot;get_documentation_parts&quot;    )    get_documentation_versions_paginator: GetDocumentationVersionsPaginator = client.get_paginator(        &quot;get_documentation_versions&quot;    )    get_domain_names_paginator: GetDomainNamesPaginator = client.get_paginator(&quot;get_domain_names&quot;)    get_gateway_responses_paginator: GetGatewayResponsesPaginator = client.get_paginator(        &quot;get_gateway_responses&quot;    )    get_models_paginator: GetModelsPaginator = client.get_paginator(&quot;get_models&quot;)    get_request_validators_paginator: GetRequestValidatorsPaginator = client.get_paginator(        &quot;get_request_validators&quot;    )    get_resources_paginator: GetResourcesPaginator = client.get_paginator(&quot;get_resources&quot;)    get_rest_apis_paginator: GetRestApisPaginator = client.get_paginator(&quot;get_rest_apis&quot;)    get_sdk_types_paginator: GetSdkTypesPaginator = client.get_paginator(&quot;get_sdk_types&quot;)    get_usage_paginator: GetUsagePaginator = client.get_paginator(&quot;get_usage&quot;)    get_usage_plan_keys_paginator: GetUsagePlanKeysPaginator = client.get_paginator(        &quot;get_usage_plan_keys&quot;    )    get_usage_plans_paginator: GetUsagePlansPaginator = client.get_paginator(&quot;get_usage_plans&quot;)    get_vpc_links_paginator: GetVpcLinksPaginator = client.get_paginator(&quot;get_vpc_links&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`types_aiobotocore_apigateway.literals` module contains literals extracted fromshapes that can be used in user code for type checking.```pythonfrom types_aiobotocore_apigateway.literals import (    ApiKeySourceTypeType,    ApiKeysFormatType,    AuthorizerTypeType,    CacheClusterSizeType,    CacheClusterStatusType,    ConnectionTypeType,    ContentHandlingStrategyType,    DocumentationPartTypeType,    DomainNameStatusType,    EndpointTypeType,    GatewayResponseTypeType,    GetApiKeysPaginatorName,    GetAuthorizersPaginatorName,    GetBasePathMappingsPaginatorName,    GetClientCertificatesPaginatorName,    GetDeploymentsPaginatorName,    GetDocumentationPartsPaginatorName,    GetDocumentationVersionsPaginatorName,    GetDomainNamesPaginatorName,    GetGatewayResponsesPaginatorName,    GetModelsPaginatorName,    GetRequestValidatorsPaginatorName,    GetResourcesPaginatorName,    GetRestApisPaginatorName,    GetSdkTypesPaginatorName,    GetUsagePaginatorName,    GetUsagePlanKeysPaginatorName,    GetUsagePlansPaginatorName,    GetVpcLinksPaginatorName,    IntegrationTypeType,    LocationStatusTypeType,    OpType,    PutModeType,    QuotaPeriodTypeType,    SecurityPolicyType,    UnauthorizedCacheControlHeaderStrategyType,    VpcLinkStatusType,    APIGatewayServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    RegionName,)def check_value(value: ApiKeySourceTypeType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`types_aiobotocore_apigateway.type_defs` module contains structures and shapesassembled to typed dictionaries for additional type checking.```pythonfrom types_aiobotocore_apigateway.type_defs import (    AccessLogSettingsTypeDef,    ThrottleSettingsTypeDef,    ApiKeyIdsTypeDef,    ApiKeyResponseMetadataTypeDef,    ApiKeyTypeDef,    AuthorizerResponseMetadataTypeDef,    AuthorizerTypeDef,    BasePathMappingResponseMetadataTypeDef,    BasePathMappingTypeDef,    CanarySettingsTypeDef,    ClientCertificateResponseMetadataTypeDef,    ClientCertificateTypeDef,    StageKeyTypeDef,    CreateAuthorizerRequestRequestTypeDef,    CreateBasePathMappingRequestRequestTypeDef,    DeploymentCanarySettingsTypeDef,    DocumentationPartLocationTypeDef,    CreateDocumentationVersionRequestRequestTypeDef,    EndpointConfigurationTypeDef,    MutualTlsAuthenticationInputTypeDef,    CreateModelRequestRequestTypeDef,    CreateRequestValidatorRequestRequestTypeDef,    CreateResourceRequestRequestTypeDef,    CreateUsagePlanKeyRequestRequestTypeDef,    QuotaSettingsTypeDef,    CreateVpcLinkRequestRequestTypeDef,    DeleteApiKeyRequestRequestTypeDef,    DeleteAuthorizerRequestRequestTypeDef,    DeleteBasePathMappingRequestRequestTypeDef,    DeleteClientCertificateRequestRequestTypeDef,    DeleteDeploymentRequestRequestTypeDef,    DeleteDocumentationPartRequestRequestTypeDef,    DeleteDocumentationVersionRequestRequestTypeDef,    DeleteDomainNameRequestRequestTypeDef,    DeleteGatewayResponseRequestRequestTypeDef,    DeleteIntegrationRequestRequestTypeDef,    DeleteIntegrationResponseRequestRequestTypeDef,    DeleteMethodRequestRequestTypeDef,    DeleteMethodResponseRequestRequestTypeDef,    DeleteModelRequestRequestTypeDef,    DeleteRequestValidatorRequestRequestTypeDef,    DeleteResourceRequestRequestTypeDef,    DeleteRestApiRequestRequestTypeDef,    DeleteStageRequestRequestTypeDef,    DeleteUsagePlanKeyRequestRequestTypeDef,    DeleteUsagePlanRequestRequestTypeDef,    DeleteVpcLinkRequestRequestTypeDef,    MethodSnapshotTypeDef,    DocumentationPartIdsTypeDef,    DocumentationVersionResponseMetadataTypeDef,    DocumentationVersionTypeDef,    MutualTlsAuthenticationTypeDef,    EmptyResponseMetadataTypeDef,    ExportResponseTypeDef,    FlushStageAuthorizersCacheRequestRequestTypeDef,    FlushStageCacheRequestRequestTypeDef,    GatewayResponseResponseMetadataTypeDef,    GatewayResponseTypeDef,    GenerateClientCertificateRequestRequestTypeDef,    GetApiKeyRequestRequestTypeDef,    GetApiKeysRequestGetApiKeysPaginateTypeDef,    GetApiKeysRequestRequestTypeDef,    GetAuthorizerRequestRequestTypeDef,    GetAuthorizersRequestGetAuthorizersPaginateTypeDef,    GetAuthorizersRequestRequestTypeDef,    GetBasePathMappingRequestRequestTypeDef,    GetBasePathMappingsRequestGetBasePathMappingsPaginateTypeDef,    GetBasePathMappingsRequestRequestTypeDef,    GetClientCertificateRequestRequestTypeDef,    GetClientCertificatesRequestGetClientCertificatesPaginateTypeDef,    GetClientCertificatesRequestRequestTypeDef,    GetDeploymentRequestRequestTypeDef,    GetDeploymentsRequestGetDeploymentsPaginateTypeDef,    GetDeploymentsRequestRequestTypeDef,    GetDocumentationPartRequestRequestTypeDef,    GetDocumentationPartsRequestGetDocumentationPartsPaginateTypeDef,    GetDocumentationPartsRequestRequestTypeDef,    GetDocumentationVersionRequestRequestTypeDef,    GetDocumentationVersionsRequestGetDocumentationVersionsPaginateTypeDef,    GetDocumentationVersionsRequestRequestTypeDef,    GetDomainNameRequestRequestTypeDef,    GetDomainNamesRequestGetDomainNamesPaginateTypeDef,    GetDomainNamesRequestRequestTypeDef,    GetExportRequestRequestTypeDef,    GetGatewayResponseRequestRequestTypeDef,    GetGatewayResponsesRequestGetGatewayResponsesPaginateTypeDef,    GetGatewayResponsesRequestRequestTypeDef,    GetIntegrationRequestRequestTypeDef,    GetIntegrationResponseRequestRequestTypeDef,    GetMethodRequestRequestTypeDef,    GetMethodResponseRequestRequestTypeDef,    GetModelRequestRequestTypeDef,    GetModelTemplateRequestRequestTypeDef,    GetModelsRequestGetModelsPaginateTypeDef,    GetModelsRequestRequestTypeDef,    GetRequestValidatorRequestRequestTypeDef,    GetRequestValidatorsRequestGetRequestValidatorsPaginateTypeDef,    GetRequestValidatorsRequestRequestTypeDef,    GetResourceRequestRequestTypeDef,    GetResourcesRequestGetResourcesPaginateTypeDef,    GetResourcesRequestRequestTypeDef,    GetRestApiRequestRequestTypeDef,    GetRestApisRequestGetRestApisPaginateTypeDef,    GetRestApisRequestRequestTypeDef,    GetSdkRequestRequestTypeDef,    GetSdkTypeRequestRequestTypeDef,    GetSdkTypesRequestGetSdkTypesPaginateTypeDef,    GetSdkTypesRequestRequestTypeDef,    GetStageRequestRequestTypeDef,    GetStagesRequestRequestTypeDef,    GetTagsRequestRequestTypeDef,    GetUsagePlanKeyRequestRequestTypeDef,    GetUsagePlanKeysRequestGetUsagePlanKeysPaginateTypeDef,    GetUsagePlanKeysRequestRequestTypeDef,    GetUsagePlanRequestRequestTypeDef,    GetUsagePlansRequestGetUsagePlansPaginateTypeDef,    GetUsagePlansRequestRequestTypeDef,    GetUsageRequestGetUsagePaginateTypeDef,    GetUsageRequestRequestTypeDef,    GetVpcLinkRequestRequestTypeDef,    GetVpcLinksRequestGetVpcLinksPaginateTypeDef,    GetVpcLinksRequestRequestTypeDef,    ImportApiKeysRequestRequestTypeDef,    ImportDocumentationPartsRequestRequestTypeDef,    ImportRestApiRequestRequestTypeDef,    IntegrationResponseTypeDef,    TlsConfigTypeDef,    IntegrationResponseResponseMetadataTypeDef,    MethodResponseTypeDef,    MethodResponseResponseMetadataTypeDef,    MethodSettingTypeDef,    ModelResponseMetadataTypeDef,    ModelTypeDef,    PaginatorConfigTypeDef,    PatchOperationTypeDef,    PutGatewayResponseRequestRequestTypeDef,    PutIntegrationResponseRequestRequestTypeDef,    PutMethodRequestRequestTypeDef,    PutMethodResponseRequestRequestTypeDef,    PutRestApiRequestRequestTypeDef,    RequestValidatorResponseMetadataTypeDef,    RequestValidatorTypeDef,    ResponseMetadataTypeDef,    SdkConfigurationPropertyTypeDef,    SdkResponseTypeDef,    TagResourceRequestRequestTypeDef,    TagsTypeDef,    TemplateTypeDef,    TestInvokeAuthorizerRequestRequestTypeDef,    TestInvokeAuthorizerResponseTypeDef,    TestInvokeMethodRequestRequestTypeDef,    TestInvokeMethodResponseTypeDef,    UntagResourceRequestRequestTypeDef,    UsagePlanKeyResponseMetadataTypeDef,    UsagePlanKeyTypeDef,    UsageTypeDef,    VpcLinkResponseMetadataTypeDef,    VpcLinkTypeDef,    AccountTypeDef,    ApiStageTypeDef,    ApiKeysTypeDef,    AuthorizersTypeDef,    BasePathMappingsTypeDef,    CreateStageRequestRequestTypeDef,    ClientCertificatesTypeDef,    CreateApiKeyRequestRequestTypeDef,    CreateDeploymentRequestRequestTypeDef,    CreateDocumentationPartRequestRequestTypeDef,    DocumentationPartResponseMetadataTypeDef,    DocumentationPartTypeDef,    CreateRestApiRequestRequestTypeDef,    RestApiResponseMetadataTypeDef,    RestApiTypeDef,    CreateDomainNameRequestRequestTypeDef,    DeploymentResponseMetadataTypeDef,    DeploymentTypeDef,    DocumentationVersionsTypeDef,    DomainNameResponseMetadataTypeDef,    DomainNameTypeDef,    GatewayResponsesTypeDef,    IntegrationResponseMetadataTypeDef,    IntegrationTypeDef,    PutIntegrationRequestRequestTypeDef,    StageResponseMetadataTypeDef,    StageTypeDef,    ModelsTypeDef,    UpdateAccountRequestRequestTypeDef,    UpdateApiKeyRequestRequestTypeDef,    UpdateAuthorizerRequestRequestTypeDef,    UpdateBasePathMappingRequestRequestTypeDef,    UpdateClientCertificateRequestRequestTypeDef,    UpdateDeploymentRequestRequestTypeDef,    UpdateDocumentationPartRequestRequestTypeDef,    UpdateDocumentationVersionRequestRequestTypeDef,    UpdateDomainNameRequestRequestTypeDef,    UpdateGatewayResponseRequestRequestTypeDef,    UpdateIntegrationRequestRequestTypeDef,    UpdateIntegrationResponseRequestRequestTypeDef,    UpdateMethodRequestRequestTypeDef,    UpdateMethodResponseRequestRequestTypeDef,    UpdateModelRequestRequestTypeDef,    UpdateRequestValidatorRequestRequestTypeDef,    UpdateResourceRequestRequestTypeDef,    UpdateRestApiRequestRequestTypeDef,    UpdateStageRequestRequestTypeDef,    UpdateUsagePlanRequestRequestTypeDef,    UpdateUsageRequestRequestTypeDef,    UpdateVpcLinkRequestRequestTypeDef,    RequestValidatorsTypeDef,    SdkTypeResponseMetadataTypeDef,    SdkTypeTypeDef,    UsagePlanKeysTypeDef,    VpcLinksTypeDef,    CreateUsagePlanRequestRequestTypeDef,    UsagePlanResponseMetadataTypeDef,    UsagePlanTypeDef,    DocumentationPartsTypeDef,    RestApisTypeDef,    DeploymentsTypeDef,    DomainNamesTypeDef,    MethodResponseMetadataTypeDef,    MethodTypeDef,    StagesTypeDef,    SdkTypesTypeDef,    UsagePlansTypeDef,    ResourceResponseMetadataTypeDef,    ResourceTypeDef,    ResourcesTypeDef,)def get_structure() -&gt; AccessLogSettingsTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for`aiobotocore` updates. It delivers drop-in type annotations for you and makessure that:- All available `aiobotocore` services are covered.- Each public class and method of every `aiobotocore` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`types-aiobotocore-apigateway` version is the same as related `aiobotocore`version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_apigateway/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>