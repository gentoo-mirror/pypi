<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># easytree[![pythons](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue)](https://pypi.org/project/easytree)[![build](https://github.com/dschenck/easytree/workflows/easytree/badge.svg)](https://github.com/dschenck/easytree/actions)[![PyPI version](https://badge.fury.io/py/easytree.svg)](https://badge.fury.io/py/easytree) [![Documentation Status](https://readthedocs.org/projects/easytree/badge/?version=latest)](https://easytree.readthedocs.io/en/latest/?badge=latest) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Coverage](https://codecov.io/gh/dschenck/easytree/branch/master/graph/badge.svg?token=CPJXDL17CB )](https://codecov.io/gh/dschenck/easytree)A recursive dot-styled defaultdict to read and write deeply-nested trees## DocumentationDocumentation is hosted on [read the docs](https://easytree.readthedocs.io/en/latest/)## Installation```pip install easytree```## Quickstart ```python&gt;&gt;&gt; import easytree&gt;&gt;&gt; tree = easytree.dict()&gt;&gt;&gt; tree.foo.bar.baz = &quot;Hello world!&quot;&gt;&gt;&gt; tree {    &quot;foo&quot;: {        &quot;bar&quot;: {            &quot;baz&quot;: &quot;Hello world!&quot;        }    }}```Creating trees that combine both list and dict nodes is easy```python&gt;&gt;&gt; friends = easytree.list()&gt;&gt;&gt; friends.append({&quot;firstname&quot;:&quot;Alice&quot;})&gt;&gt;&gt; friends[0].address.country = &quot;Netherlands&quot;&gt;&gt;&gt; friends[0][&quot;interests&quot;].append(&quot;science&quot;)&gt;&gt;&gt; friends[    {        &quot;firstname&quot;: &quot;Alice&quot;,        &quot;address&quot;: {            &quot;country&quot;: &quot;Netherlands&quot;        },        &quot;interests&quot;: [            &quot;science&quot;        ]    }]```Writing deeply-nested trees with list nodes is easy with a context-manager:```python&gt;&gt;&gt; profile = easytree.dict()&gt;&gt;&gt; with profile.friends.append({&quot;firstname&quot;:&quot;Flora&quot;}) as friend: ...     friend.birthday = &quot;25/02&quot;...     friend.address.country = &quot;France&quot;&gt;&gt;&gt; profile{    &quot;friends&quot;: [        {            &quot;firstname&quot;: &quot;Flora&quot;,            &quot;birthday&quot;: &quot;25/02&quot;,            &quot;address&quot;: {                &quot;country&quot;: &quot;France&quot;            }        }    ]}```</longdescription>
</pkgmetadata>