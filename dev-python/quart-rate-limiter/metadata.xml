<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Quart-Rate-Limiter==================|Build Status| |pypi| |python| |license|Quart-Rate-Limiter is an extension for `Quart&lt;https://github.com/pgjones/quart&gt;`_ to allow for rate limits to bedefined and enforced on a per route basis. The 429 error responseincludes a `RFC7231&lt;https://tools.ietf.org/html/rfc7231#section-7.1.3&gt;`_ compliant``Retry-After`` header and the successful responses contain headerscompliant with the `RateLimit Header Fields for HTTP&lt;https://tools.ietf.org/html/draft-polli-ratelimit-headers-00&gt;`_ RFCdraft.Usage-----To add a rate limit first initialise the RateLimiting extension withthe application,.. code-block:: python    app = Quart(__name__)    rate_limiter = RateLimiter(app)or via the factory pattern,.. code-block:: python    rate_limiter = RateLimiter()    def create_app():        app = Quart(__name__)        rate_limiter.init_app(app)        return appNow this is done you can apply rate limits to any route by using the``rate_limit`` decorator,.. code-block:: python    @app.route('/')    @rate_limit(1, timedelta(seconds=10))    async def handler():        ...Or to apply rate limits to all routes within a blueprint by using the``limit_blueprint`` function,.. code-block:: python    blueprint = Blueprint(&quot;name&quot;, __name__)    limit_blueprint(blueprint, 1, timedelta(seconds=10))Or to apply rate limits to all routes in an app, define the defaultlimits when initialising the RateLimiter,.. code-block:: python    rate_limiter = RateLimiter(        default_limits=[RateLimit(1, timedelta(seconds=10))]    )and then to exempt a route,.. code-block:: python    @app.route(&quot;/exempt&quot;)    @rate_exempt    async def handler():        ...To alter the identification of remote users you can either supply aglobal key function when initialising the extension, or on a per routebasis.By default rate limiting information (TATs) will be stored in memory,which will result in unexpected behaviour if multiple workers areused. To solve this a redis store can be used by installing the``redis`` extra (``pip install quart-rate-limiter[redis]``) and thenusing as so,.. code-block:: python    from quart_rate_limiter.redis_store import RedisStore    redis_store = RedisStore(address)    RateLimiter(app, store=redis_store)This store uses `redis &lt;https://github.com/redis/redis-py&gt;`_,and any extra keyword arguments passed to the ``RedisStore``constructor will be passed to the redis ``create_redis`` function.A custom store is possible, see the ``RateLimiterStoreABC`` for therequired interface.Simple examples~~~~~~~~~~~~~~~To limit a route to 1 request per second and a maximum of 20 per minute,.. code-block:: python    @app.route('/')    @rate_limit(1, timedelta(seconds=1))    @rate_limit(20, timedelta(minutes=1))    async def handler():        ...Alternatively the ``limits`` argument can be used for multiple limits,.. code-block:: python    @app.route('/')    @rate_limit(        limits=[            RateLimit(1, timedelta(seconds=1)),            RateLimit(20, timedelta(minutes=1)),        ],    )    async def handler():        ...To identify remote users based on their authentication ID, rather thantheir IP,.. code-block:: python    async def key_function():        return current_user.id    RateLimiter(app, key_function=key_function)The ``key_function`` is a coroutine function to allow session lookupsif appropriate.Contributing------------Quart-Rate-Limiter is developed on `GitHub&lt;https://github.com/pgjones/quart-rate-limiter&gt;`_. You are very welcome toopen `issues &lt;https://github.com/pgjones/quart-rate-limiter/issues&gt;`_ orpropose `merge requests&lt;https://github.com/pgjones/quart-rate-limiter/merge_requests&gt;`_.Testing~~~~~~~The best way to test Quart-Rate-Limiter is with Tox,.. code-block:: console    $ pip install tox    $ toxthis will check the code style and run the tests.Help----This README is the best place to start, after that try opening an`issue &lt;https://github.com/pgjones/quart-rate-limiter/issues&gt;`_... |Build Status| image:: https://github.com/pgjones/quart-rate-limiter/actions/workflows/ci.yml/badge.svg   :target: https://github.com/pgjones/quart-rate-limiter/commits/main.. |pypi| image:: https://img.shields.io/pypi/v/quart-rate-limiter.svg   :target: https://pypi.python.org/pypi/Quart-Rate-Limiter/.. |python| image:: https://img.shields.io/pypi/pyversions/quart-rate-limiter.svg   :target: https://pypi.python.org/pypi/Quart-Rate-Limiter/.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg   :target: https://github.com/pgjones/quart-rate-limiter/blob/main/LICENSE</longdescription>
</pkgmetadata>