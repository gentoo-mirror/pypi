<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Build Status](https://github.com/geopython/geolinks/workflows/build%20%E2%9A%99%EF%B8%8F/badge.svg)](https://github.com/geopython/geolinks/actions)# geolinksUtilities to deal with geospatial links.  Working implementationof the Cat-Interop work at https://github.com/OSGeo/Cat-Interop## Installationgeolinks is best installed and used within a Python virtualenv.### Requirements* Python 3 and above* Python [virtualenv](https://virtualenv.pypa.io/) package### DependenciesDependencies are listed in [requirements.txt](requirements.txt). Dependenciesare automatically installed during geolinks's installation.### Installing the Packagefrom source:```bashpython3 -m venv my-envcd my-env. bin/activategit clone https://github.com/geopython/geolinks.gitcd geolinkspython setup.py buildpython setup.py install```via pip:```bashpip install geolinks```## Running```bashgeolinks link sniff 'http://host/wms?service=WMS'```## Using the API from Python```python&gt;&gt;&gt; from geolinks import sniff_link&gt;&gt;&gt; sniff_link('http://host/wms?service=WMS')'OGC:WMS'&gt;&gt;&gt; sniff_link('http://host/wms?service=WPS')'OGC:WPS'&gt;&gt;&gt; sniff_link('http://host/wms?service=CSW')'OGC:CSW'&gt;&gt;&gt; sniff_link('http://host/data/roads.kmz')'OGC:KML'&gt;&gt;&gt; sniff_link('http://host/data/roads.kml')'OGC:KML'```### Running Tests```bash# via setuptoolspython setup.py test# manuallycd testspython run_tests.py```## Development### Setting up a Development EnvironmentSame as installing a package.  Use a virtualenv.  Also install developerrequirements:```bashpip install -r requirements-dev.txt```## Releasing```bashvi geolinks/__init__.pygit commit -m 'update release version' geolinks/__init__.pyvi debian/changelog  # add changelog entry and summary of updates# push changesgit push origin mastergit tag -a x.y.z -m 'tagging release x.y.z'# push taggit push --tagsrm -fr build dist *.egg-infopython setup.py sdist bdist_wheel --universaltwine upload dist/*```### Code Conventions* [PEP8](https://www.python.org/dev/peps/pep-0008)### Bugs and IssuesAll bugs, enhancements and issues are managed on [GitHub](https://github.com/geopython/geolinks/issues).## Contact* [Tom Kralidis](https://github.com/tomkralidis)</longdescription>
</pkgmetadata>