<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># rio-tiler&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://user-images.githubusercontent.com/10407788/88133997-77560f00-cbb1-11ea-874c-a8f1d123a9df.jpg&quot; style=&quot;max-width: 800px;&quot; alt=&quot;rio-tiler&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;em&gt;User friendly Rasterio plugin to read raster datasets.&lt;/em&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/cogeotiff/rio-tiler/actions?query=workflow%3ACI&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://github.com/cogeotiff/rio-tiler/workflows/CI/badge.svg&quot; alt=&quot;Test&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://codecov.io/gh/cogeotiff/rio-tiler&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://codecov.io/gh/cogeotiff/rio-tiler/branch/main/graph/badge.svg&quot; alt=&quot;Coverage&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/rio-tiler&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/v/rio-tiler?color=%2334D058&amp;label=pypi%20package&quot; alt=&quot;Package version&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://anaconda.org/conda-forge/rio-tiler&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/conda/v/conda-forge/rio-tiler.svg&quot; alt=&quot;Conda Forge&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypistats.org/packages/rio-tiler&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/pypi/dm/rio-tiler.svg&quot; alt=&quot;Downloads&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://github.com/cogeotiff/rio-tiler/blob/main/LICENSE&quot; target=&quot;_blank&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/license/cogeotiff/rio-tiler.svg&quot; alt=&quot;Downloads&quot;&gt;  &lt;/a&gt;  &lt;a href=&quot;https://mybinder.org/v2/gh/cogeotiff/rio-tiler/main?filepath=docs%2Fexamples%2F&quot; target=&quot;_blank&quot; alt=&quot;Binder&quot;&gt;      &lt;img src=&quot;https://mybinder.org/badge_logo.svg&quot; alt=&quot;Binder&quot;&gt;  &lt;/a&gt;&lt;/p&gt;---**Documentation**: &lt;a href=&quot;https://cogeotiff.github.io/rio-tiler/&quot; target=&quot;_blank&quot;&gt;https://cogeotiff.github.io/rio-tiler/&lt;/a&gt;**Source Code**: &lt;a href=&quot;https://github.com/cogeotiff/rio-tiler&quot; target=&quot;_blank&quot;&gt;https://github.com/cogeotiff/rio-tiler&lt;/a&gt;---## Description`rio-tiler` was initially designed to create [slippy maptiles](https://en.wikipedia.org/wiki/Tiled_web_map) from large raster datasources and render these tiles dynamically on a web map. Since `rio-tiler` v2.0, we added many more helper methods to readdata and metadata from any raster source supported by Rasterio/GDAL.This includes local and remote files via HTTP, AWS S3, Google Cloud Storage,etc.At the low level, `rio-tiler` is *just* a wrapper around the [rasterio](https://github.com/rasterio/rasterio) and [GDAL](https://github.com/osgeo/gdal) libraries.## Features- Read any dataset supported by GDAL/Rasterio    ```python    from rio_tiler.io import Reader    with Reader(&quot;my.tif&quot;) as image:        print(image.dataset)  # rasterio opened dataset        img = image.read()    # similar to rasterio.open(&quot;my.tif&quot;).read() but returns a rio_tiler.models.ImageData object    ```- User friendly `tile`, `part`, `feature`, `point` reading methods    ```python    from rio_tiler.io import Reader    with Reader(&quot;my.tif&quot;) as image:        img = image.tile(x, y, z)            # read mercator tile z-x-y        img = image.part(bbox)               # read the data intersecting a bounding box        img = image.feature(geojson_feature) # read the data intersecting a geojson feature        img = image.point(lon,lat)           # get pixel values for a lon/lat coordinates    ```- Enable property assignment (e.g nodata) on data reading    ```python    from rio_tiler.io import Reader    with Reader(&quot;my.tif&quot;) as image:        img = image.tile(x, y, z, nodata=-9999) # read mercator tile z-x-y    ```- [STAC](https://github.com/radiantearth/stac-spec) support    ```python    from rio_tiler.io import STACReader    with STACReader(&quot;item.json&quot;) as stac:        print(stac.assets)  # available asset        img = stac.tile(  # read tile for asset1 and indexes 1,2,3            x,            y,            z,            assets=&quot;asset1&quot;,            indexes=(1, 2, 3),  # same as asset_indexes={&quot;asset1&quot;: (1, 2, 3)},        )        # Merging data from different assets        img = stac.tile(  # create an image from assets 1,2,3 using their first band            x,            y,            z,            assets=(&quot;asset1&quot;, &quot;asset2&quot;, &quot;asset3&quot;,),            asset_indexes={&quot;asset1&quot;: 1, &quot;asset2&quot;: 1, &quot;asset3&quot;: 1},        )    ```- [Xarray](https://xarray.dev) support **(&gt;=4.0)**    ```python    import xarray    from rio_tiler.io import XarrayReader    ds = xarray.open_dataset(        &quot;https://pangeo.blob.core.windows.net/pangeo-public/daymet-rio-tiler/na-wgs84.zarr/&quot;,        engine=&quot;zarr&quot;,        decode_coords=&quot;all&quot;,        consolidated=True,    )    da = ds[&quot;tmax&quot;]    with XarrayReader(da) as dst:        print(dst.info())        img = dst.tile(1, 1, 2)    ```    *Note: The XarrayReader needs optional dependencies to be installed `pip install rio-tiler[&quot;xarray&quot;]`.*- Non-Geo Image support **(&gt;=4.0)**    ```python    from rio_tiler.io import ImageReader    with ImageReader(&quot;image.jpeg&quot;) as src:        im = src.tile(0, 0, src.maxzoom)  # read top-left `tile`        im = src.part((0, 100, 100, 0))  # read top-left 100x100 pixels        pt = src.point(0, 0)  # read pixel value    ```    *Note: `ImageReader` is also compatible with proper geo-referenced raster datasets.*- [Mosaic](https://cogeotiff.github.io/rio-tiler/mosaic/) (merging or stacking)    ```python    from rio_tiler.io import Reader    from rio_tiler.mosaic import mosaic_reader    def reader(file, x, y, z, **kwargs):        with Reader(file) as image:            return image.tile(x, y, z, **kwargs)    img, assets = mosaic_reader([&quot;image1.tif&quot;, &quot;image2.tif&quot;], reader, x, y, z)    ```- Native support for multiple TileMatrixSet via [morecantile](https://developmentseed.org/morecantile/)    ```python    import morecantile    from rio_tiler.io import Reader    # Use EPSG:4326 (WGS84) grid    wgs84_grid = morecantile.tms.get(&quot;WorldCRS84Quad&quot;)    with Reader(&quot;my.tif&quot;, tms=wgs84_grid) as src:        img = src.tile(1, 1, 1)    ```## InstallYou can install `rio-tiler` using pip```bash$ pip install -U pip$ pip install -U rio-tiler```or install from source:```bash$ git clone https://github.com/cogeotiff/rio-tiler.git$ cd rio-tiler$ pip install -U pip$ pip install -e .```## Plugins#### [**rio-tiler-pds**][rio-tiler-pds][rio-tiler-pds]: https://github.com/cogeotiff/rio-tiler-pds`rio-tiler` v1 included several helpers for reading popular public datasets (e.g. Sentinel 2, Sentinel 1, Landsat 8, CBERS) from cloud providers. This functionality is now in a [separate plugin][rio-tiler-pds], enabling easier access to more public datasets.#### [**rio-tiler-mvt**][rio-tiler-mvt]Create Mapbox Vector Tiles from raster sources[rio-tiler-mvt]: https://github.com/cogeotiff/rio-tiler-mvt## Implementations[**titiler**][titiler]: A lightweight Cloud Optimized GeoTIFF dynamic tile server.[**cogeo-mosaic**][cogeo-mosaic]: Create mosaics of Cloud Optimized GeoTIFF based on the [mosaicJSON][mosaicjson_spec] specification.[titiler]: https://github.com/developmentseed/titiler[cogeo-mosaic]: https://github.com/developmentseed/cogeo-mosaic[mosaicjson_spec]: https://github.com/developmentseed/mosaicjson-spec## Contribution &amp; DevelopmentSee [CONTRIBUTING.md](https://github.com/cogeotiff/rio-tiler/blob/main/CONTRIBUTING.md)## AuthorsThe `rio-tiler` project was begun at Mapbox and was transferred to the `cogeotiff` Github organization in January 2019.See [AUTHORS.txt](https://github.com/cogeotiff/rio-tiler/blob/main/AUTHORS.txt) for a listing of individual contributors.## ChangesSee [CHANGES.md](https://github.com/cogeotiff/rio-tiler/blob/main/CHANGES.md).## LicenseSee [LICENSE](https://github.com/cogeotiff/rio-tiler/blob/main/LICENSE)</longdescription>
</pkgmetadata>