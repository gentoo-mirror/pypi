<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>cidr-trie=========Store CIDR IP addresses (both v4 and v6) in a trie for easy lookup.Read the documentation `here&lt;https://cidr-trie.readthedocs.io/en/latest/&gt;`_.Installation------------- Using pip:.. code-block:: bash    $ pip install cidr-trie- From source (Git):.. code-block:: bash    $ git clone https://github.com/Figglewatts/cidr-trie.git    $ cd cidr-trie    $ python setup.py install- From source (PyPI):.. code-block:: bash    $ wget https://files.pythonhosted.org/packages/6b/53/118c09dc2c294f41b12007634d53ed33219d15366ea8a1903fb98eb47c25/cidr_trie-1.0.tar.gz    $ tar xvf cidr_trie-1.0.tar.gz    $ cd cidr_trie-1.0    $ python setup.py installUsage-----cidr-trie can be used to build a trie of IP networks, storing dataon each node. The stored data can be of any type.Shown here is an example of building both IPv4 and IPv6 tries with data,and then retrieving data from both tries... code-block:: python    from cidr_trie import PatriciaTrie    # --- supports IPv4 ---    trie = PatriciaTrie()    trie.insert(&quot;0.0.0.0/0&quot;, &quot;Internet&quot;)    trie.insert(&quot;32.0.0.0/9&quot;, &quot;RIR-A&quot;)    trie.insert(&quot;32.128.0.0/9&quot;, &quot;RIR-B&quot;)    trie.insert(&quot;32.32.0.0/16&quot;, &quot;another&quot;)    trie.insert(&quot;32.32.32.0/24&quot;, &quot;third&quot;)    trie.insert(&quot;32.32.32.32/32&quot;, &quot;you&quot;)    trie.insert(&quot;192.168.0.1/32&quot;, &quot;totally different&quot;)    trie.insert(&quot;33.0.0.0/8&quot;, &quot;RIR3&quot;)    trie.insert(&quot;64.0.0.0/8&quot;, &quot;RIR2&quot;)    # nodes: ['Internet', 'RIR-A', 'another', 'third', 'you']    nodes_for_prefix = trie.find_all(&quot;32.32.32.32&quot;)    # prints &quot;Internet, RIR-A, another, third, you&quot;    print(', '.join(n.value for n in nodes_for_prefix))    # nodes: ['Internet', 'totally different']    trie.find_all(&quot;192.168.0.1/32&quot;)    # nodes: ['Internet', 'RIR-B']    trie.find_all(&quot;32.192.0.0/10&quot;)    # --- supports IPv6 ---    trie = PatriciaTrie()    trie.insert(&quot;::/0&quot;, &quot;Internet&quot;)    trie.insert(&quot;1234::/16&quot;, &quot;Test&quot;)    trie.insert(&quot;1234:1001::/32&quot;, &quot;Another one&quot;)    trie.insert(&quot;1234:1001:1920::/48&quot;, &quot;A third&quot;)    trie.insert(&quot;1234:1001:1920:2000:2020::/96&quot;, &quot;A fourth&quot;)    trie.insert(&quot;1234:1001:1920::ffff&quot;, &quot;A different one&quot;)    # nodes: ['Internet', 'Test', 'Another one', 'A third', 'A fourth']    trie.find_all(&quot;1234:1001:1920:2000:2020::/128&quot;)    # nodes: ['Internet', 'Test', 'Another one', 'A third', 'A different one']    trie.find_all(&quot;1234:1001:1920::ffff&quot;)</longdescription>
</pkgmetadata>