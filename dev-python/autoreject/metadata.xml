<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>autoreject==========|CircleCI|_ |GitHub Actions|_ |Codecov|_ |PyPI|_ |Conda-Forge|_.. |CircleCI| image:: https://circleci.com/gh/autoreject/autoreject/tree/master.svg?style=shield&amp;circle-token=:circle-token.. _CircleCI: https://circleci.com/gh/autoreject/autoreject.. |GitHub Actions| image:: https://github.com/autoreject/autoreject/actions/workflows/test.yml/badge.svg.. _GitHub Actions: https://github.com/autoreject/autoreject/actions/workflows/test.yml.. |Codecov| image:: http://codecov.io/github/autoreject/autoreject/coverage.svg?branch=master.. _Codecov: http://codecov.io/github/autoreject/autoreject?branch=master.. |PyPI| image:: https://badge.fury.io/py/autoreject.svg.. _PyPI: https://badge.fury.io/py/autoreject.. |Conda-Forge| image:: https://img.shields.io/conda/vn/conda-forge/autoreject.svg.. _Conda-Forge: https://anaconda.org/conda-forge/autoreject/This is a library to automatically reject bad trials and repair bad sensors in magneto-/electroencephalography (M/EEG) data... image:: https://autoreject.github.io/stable/_images/sphx_glr_plot_auto_repair_001.png   :width: 400The documentation can be found under the following links:- for the `stable release &lt;https://autoreject.github.io/stable/index.html&gt;`_- for the `latest (development) version &lt;https://autoreject.github.io/dev/index.html&gt;`_.. docs_readme_include_labelInstallation------------We recommend the `Anaconda Python distribution &lt;https://www.anaconda.com/&gt;`_and a **Python version &gt;= 3.8**.To obtain the stable release of ``autoreject``, you can use ``pip``::    pip install -U autorejectOr ``conda``::    conda install -c conda-forge autorejectIf you want the latest (development) version of ``autoreject``, use::    pip install https://api.github.com/repos/autoreject/autoreject/zipball/masterIf you do not have admin privileges on the computer, use the ``--user`` flagwith `pip`.To check if everything worked fine, you can do::    python -c 'import autoreject'and it should not give any error messages.Below, we list the dependencies for ``autoreject``.All required dependencies are installed automatically when you install ``autoreject``.* ``mne`` (&gt;=1.0)* ``numpy`` (&gt;=1.20.2)* ``scipy`` (&gt;=1.6.3)* ``scikit-learn`` (&gt;=0.24.2)* ``joblib``* ``matplotlib`` (&gt;=3.4.0)Optional dependencies are:* ``openneuro-py`` (&gt;= 2021.10.1, for fetching data from `OpenNeuro.org &lt;https://openneuro.org&gt;`_)Quickstart==========The easiest way to get started is to copy the following three lines of codein your script:.. code:: python&gt;&gt;&gt; from autoreject import AutoReject&gt;&gt;&gt; ar = AutoReject()&gt;&gt;&gt; epochs_clean = ar.fit_transform(epochs)  # doctest: +SKIPThis will automatically clean an `epochs` object read in using MNE-Python. To get therejection dictionary, simply do:.. code:: python&gt;&gt;&gt; from autoreject import get_rejection_threshold&gt;&gt;&gt; reject = get_rejection_threshold(epochs)  # doctest: +SKIPWe also implement RANSAC from the `PREP pipeline &lt;https://doi.org/10.3389/fninf.2015.00016&gt;`_(see `PyPREP &lt;https://github.com/sappelhoff/pyprep&gt;`_ for a full implementation of the PREP pipeline).The API is the same:.. code:: python&gt;&gt;&gt; from autoreject import Ransac&gt;&gt;&gt; rsc = Ransac()&gt;&gt;&gt; epochs_clean = rsc.fit_transform(epochs)  # doctest: +SKIPFor more details check out the example to`automatically detect and repair bad epochs &lt;https://autoreject.github.io/stable/_images/sphx_glr_plot_auto_repair_001.png&gt;`_.Bug reports===========Please use the `GitHub issue tracker &lt;https://github.com/autoreject/autoreject/issues&gt;`_ to report bugs.Cite====[1] Mainak Jas, Denis Engemann, Federico Raimondo, Yousra Bekhti, and Alexandre Gramfort, &quot;`Automated rejection and repair of bad trials in MEG/EEG &lt;https://hal.archives-ouvertes.fr/hal-01313458/document&gt;`_.&quot;In 6th International Workshop on Pattern Recognition in Neuroimaging (PRNI), 2016.[2] Mainak Jas, Denis Engemann, Yousra Bekhti, Federico Raimondo, and Alexandre Gramfort. 2017.&quot;`Autoreject: Automated artifact rejection for MEG and EEG data &lt;http://www.sciencedirect.com/science/article/pii/S1053811917305013&gt;`_&quot;.NeuroImage, 159, 417-429.</longdescription>
</pkgmetadata>