<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/Ch00k/ffmpy/workflows/test/badge.svg    :target: https://github.com/Ch00k/ffmpy/actions    :alt: Tests.. image:: https://codecov.io/gh/Ch00k/ffmpy/branch/master/graphs/badge.svg    :target: https://codecov.io/github/Ch00k/ffmpy    :alt: Coverage.. image:: https://readthedocs.org/projects/ffmpy/badge/?version=latest    :target: http://ffmpy.readthedocs.io/en/latest/?badge=latest    :alt: Documentation.. image:: https://img.shields.io/pypi/v/ffmpy.svg    :target: https://pypi.python.org/pypi/ffmpy    :alt: Latest versionffmpy=====ffmpy is a simplistic `FFmpeg &lt;http://ffmpeg.org/&gt;`_ command line wrapper. It implements a Pythonic interface for FFmpeg command line compilation and uses Python `subprocess &lt;https://docs.python.org/2/library/subprocess.html&gt;`_ module to execute compiled command line.Installation------------You guessed it::  pip install ffmpyQuick example-------------.. code:: python  &gt;&gt;&gt; import ffmpy  &gt;&gt;&gt; ff = ffmpy.FFmpeg(  ...     inputs={'input.mp4': None},  ...     outputs={'output.avi': None}  ... )  &gt;&gt;&gt; ff.run()This will take ``input.mp4`` file in the current directory as the input, change the video container from MP4 to AVI without changing any other video parameters and create a new output file ``output.avi`` in the current directory.Documentation-------------http://ffmpy.rtfd.ioSee `Examples &lt;http://ffmpy.readthedocs.io/en/latest/examples.html&gt;`_ section for usage examples.License-------ffmpy is licensed under the terms of MIT license</longdescription>
</pkgmetadata>