<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># json-flattenerPython library for denormalizing/flattening lists of complex objects to tables/data frames, with roundtripping## Notebook Example[EXAMPLE.ipynb](https://github.com/cmungall/json-flattener/blob/main/EXAMPLE.ipynb)## DescriptionGiven YAML/JSON/JSON-Lines such as:```yaml- id: S001  name: Lord of the Rings  genres:    - fantasy  creator:    name: JRR Tolkein    from_country: England  books:    - id: S001.1      name: Fellowship of the Ring      price: 5.99      summary: Hobbits    - id: S001.2      name: The Two Towers      price: 5.99      summary: More hobbits    - id: S001.3      name: Return of the King      price: 6.99      summary: Yet more hobbits- id: S002  name: The Culture Series  genres:    - scifi  creator:    name: Ian M Banks    from_country: Scotland  books:    - id: S002.1      name: Consider Phlebas      price: 5.99    - id: S002.2      name: Player of Games      price: 5.99```Denormalize using `jfl` command:```bashjfl flatten -C creator=flat -C books=multivalued -i examples/books1.yaml -o examples/books1-flattened.tsv```|id|name|genres|creator_name|creator_from_country|books_name|books_summary|books_price|books_id|creator_genres|---|---|---|---|---|---|---|---|---|---||S001|Lord of the Rings|[fantasy]|JRR Tolkein|England|[Fellowship of the Ring\|The Two Towers\|Return of the King]|[Hobbits\|More hobbits\|Yet more hobbits]|[5.99\|5.99\|6.99]|[S001.1\|S001.2\|S001.3]||S002|The Culture Series|[scifi]|Ian M Banks|Scotland|[Consider Phlebas\|Player of Games]||[5.99\|5.99]|[S002.1\|S002.2]|Convert back to JSON/YAML:```bashjfl unflatten -C creator=flat -C books=multivalued -i examples/books1.tsv -o examples/books1.yaml```This library also allows complex fields to be directly serialized as json or yaml (the default is to append `_json` to the key). For example:```bashjfl flatten -C creator=json -C books=json -i examples/books1.yaml -o examples/books1-jsonified.tsv```|id|name|genres|creator_json|books_json||---|---|---|---|---||S001|Lord of the Rings|[fantasy]|{\&quot;name\&quot;: \&quot;JRR Tolkein\&quot;, \&quot;from_country\&quot;: \&quot;England\&quot;}|[{\&quot;id\&quot;: \&quot;S001.1\&quot;, \&quot;name\&quot;: \&quot;Fellowship of the Ring\&quot;, \&quot;summary\&quot;: \&quot;Hobbits\&quot;, \&quot;price\&quot;: 5.99}, {\&quot;id\&quot;: \&quot;S001.2\&quot;, \&quot;name\&quot;: \&quot;The Two Towers\&quot;, \&quot;summary\&quot;: \&quot;More hobbits\&quot;, \&quot;price\&quot;: 5.99}, {\&quot;id\&quot;: \&quot;S001.3\&quot;, \&quot;name\&quot;: \&quot;Return of the King\&quot;, \&quot;summary\&quot;: \&quot;Yet more hobbits\&quot;, \&quot;price\&quot;: 6.99}]||S002|The Culture Series|[scifi]|{\&quot;name\&quot;: \&quot;Ian M Banks\&quot;, \&quot;from_country\&quot;: \&quot;Scotland\&quot;}|[{\&quot;id\&quot;: \&quot;S002.1\&quot;, \&quot;name\&quot;: \&quot;Consider Phlebas\&quot;, \&quot;price\&quot;: 5.99}, {\&quot;id\&quot;: \&quot;S002.2\&quot;, \&quot;name\&quot;: \&quot;Player of Games\&quot;, \&quot;price\&quot;: 5.99}]||S003|Book of the New Sun|[scifi, fantasy]|{\&quot;name\&quot;: \&quot;Gene Wolfe\&quot;, \&quot;genres\&quot;: [\&quot;scifi\&quot;, \&quot;fantasy\&quot;], \&quot;from_country\&quot;: \&quot;USA\&quot;}|[{\&quot;id\&quot;: \&quot;S003.1\&quot;, \&quot;name\&quot;: \&quot;Shadow of the Torturer\&quot;}, {\&quot;id\&quot;: \&quot;S003.2\&quot;, \&quot;name\&quot;: \&quot;Claw of the Conciliator\&quot;, \&quot;price\&quot;: 6.99}]||S004|Example with single book||{\&quot;name\&quot;: \&quot;Ms Writer\&quot;, \&quot;genres\&quot;: [\&quot;romance\&quot;], \&quot;from_country\&quot;: \&quot;USA\&quot;}|[{\&quot;id\&quot;: \&quot;S004.1\&quot;, \&quot;name\&quot;: \&quot;Blah\&quot;}]||S005|Example with no books||{\&quot;name\&quot;: \&quot;Mr Unproductive\&quot;, \&quot;genres\&quot;: [\&quot;romance\&quot;, \&quot;scifi\&quot;, \&quot;fantasy\&quot;], \&quot;from_country\&quot;: \&quot;USA\&quot;}||See&lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRyM06peU9BkrZbXJazuMlajw5s4Vbj5f0t0TE4hj_X9Ex_EASLSUZuaWUxYIhWbOC6CtPRtxrTGWQD/embed?start=false&amp;loop=false&amp;delayms=60000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;569&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;The primary use case is to go from a rich *normalized* data model (as python objects, JSON, or YAML) to a flatter representation that is amenable to processing with: * Solr/Lucene * Pandas/R Dataframes * Excel/Google sheets * Unix cut/grep/cat/etc * Simple denormalized SQL database representationsThe target denormalized format is a list of rows / a data matrix, where each cell is either an atom or a list of atoms.## Method * Each top level key becomes a column * if the key value is a dict/object, then flatten     * by default a '_' is used to separate the parent key from the inner key     * e.g. the composition of `creator` and `from_country` becomes `creator_from_country`     * currently one level of flattening is supported * if the key value is a list of atomic entities, then leave as is * if the key value is a list of dicts/objects, then flatten each key of this inner dict into a list     * e.g. if `books` is a list of book objects, and `name` is a key on book, then `books_name` is a list of names of each book     * order is significant - the first element of `books_name` is matched to the first element of `books_price`, etc * Allow any key to be serialized as yaml/json/pickle if configured## Command line usage (TODO)## Usage from PythonDocumentation coming soon: see test folder for now## use within LinkML## Comparison### Pandas json_normalize - https://pandas.pydata.org/pandas-docs/version/0.25.0/reference/api/pandas.io.json.json_normalize.html### Java json-flattener https://github.com/wnameless/json-flattener### Python### csvjsonhttps://csvjson.com/json2csv</longdescription>
</pkgmetadata>