<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Command Android Apps from Python[![Python 3.10](https://img.shields.io/badge/python-3.10-blue.svg)](https://www.python.org/downloads/release/python-3106/)[![License: AGPL v3](https://img.shields.io/badge/License-AGPL_v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)[![Code Style: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)[![Code Coverage](https://codecov.io/gh/a-t-0/snn/branch/main/graph/badge.svg)](https://codecov.io/gh/a-t-0/snnalgorithms)Uses `uiautomator` to automatically and safely control and navigate Androidapps.The user can specify some app logic (series of screens and button clicks) thatis executed on your Android phone through ADB.## WhyI wanted self-host my Nextcloud calendar with 1 command, from anywhere in theworld, no port-forwarding, no DNS stuff, no domain-name, no registrarconfiguration no nothing. That includes complete Android phone configurationautomation for me. Some apps did not have, and perhaps may not want, aconfiguration API. Configuring Android apps with automated key-presses is notsafe because an unexpected event may come up, e.g. a prompt for a phone update,a call may come in etc.So I wanted a safe- and controlled way to configure the app, using the UI. Thisrepository verifies each step in an arbitrary script, verifies the button isthe desired button etc. If unexpected changes are expected, the script aborts.Also, each phone manufacturer has a different rooting process, this repo canbecome a library to safely- and automatically root all (rootable) Androidphones automatically (except the user must enable `ADB` themselves).## Example![image](https://github.com/HiveMinds/app-commander/blob/main/src/appcommander/org_torproject_android/V16_6_3_RC_1/flow.png?raw=true)## UsageFirst satisfy the prerequisites:```bashpip install appcommander```Connect your phone, and tell this code which app you want to automate, and how:```bashpython -m src.appcommander -a org.torproject.android -v &quot;16.6.3 RC 1&quot; -t &quot;DAVx5&quot;```which is the same as:```bashpython -m src.appcommander --app-name org.torproject.android \--version &quot;16.6.3 RC 1&quot; -torify &quot;DAVx5&quot;```Or, to configure DAVx5:```bashpython -m src.appcommander -a at.bitfire.davdroid -v &quot;4.2.6&quot; -nu \&lt;your_nextcloud_username&gt; -np &lt;your_nextcloud_password&gt; -o &lt;your_onion_url&gt;```For more info, run:```bashpython -m src.appcommander --help```## TestingOne can simulate an android phone with:```shchmod +x emulate_android.sh./emulate_android.sh```And then launch the emulated android phone with:```sh. ~/.profilecd ~/.android/avd/android-small.avd/rm *.lockemulator -avd android-small -netdelay none -netspeed full -skin 768x1280```And run tests with:```bashpython -m pytest```or to see live output, on any tests filenames containing substring: `results`:```bashpython -m pytest --capture=tee-sys```## Test CoverageDevelopers can use:```bashconda env create --file environment.ymlconda activate appcommanderpython -m pytest```Currently the test coverage is `65%`. For type checking:```bashmypy --disallow-untyped-calls --disallow-untyped-defs tests/some_test.py```### Releasing pip package updateTo udate the Python pip package, one can first satisfy the following requirements:```bashpip install --upgrade pip setuptools wheelpip install twine```Followed by updating the package with:```bashrm -r distrm -r buildpython3 setup.py sdist bdist_wheelpython -m twine upload dist/\*```### Developer pip install```bashmkdir -p ~/bincp apk-ct.sh ~/bin/apk-ctchmod +x ~/bin/apk-ct```Then you can rebuild and locally re-install the `appcommander` pip package the command:```bashapk-ct```If you want to quickly test if your changes work, you can go into the root dirof this project and run:```bashpython3 setup.py sdist bdist_wheelpip install -e .```that installs the latest changes into the pip package locally (into your condaenvironment).&lt;!-- Un-wrapped URL's (Badges and Hyperlinks) --&gt;### Show your app-flowTo show how your script works, run (along with any additional input argsrequired for that script):```shpython -m src.appcommander -a &lt;package_name&gt; -v &lt;app_version&gt; -f \&lt;additional arguments&gt;```For example:```shpython -m src.appcommander -a &quot;at.bitfire.davdroid&quot; -v &quot;4.2.6&quot; -f  -nu \&lt;some_filler&gt; -np &lt;some_filler&gt; -o &lt;some_filler&gt;python -m src.appcommander -a &quot;at.bitfire.davdroid&quot; -v &quot;4.2.6&quot; -f -nu \asdf -np asdf -o asdfpython -m src.appcommander -a org.torproject.android -v &quot;16.6.3 RC 1&quot; \-f -t &quot;DAVx5&quot;```</longdescription>
</pkgmetadata>