<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Read and write ImageJ ROI format================================Roifile is a Python library to read, write, create, and plot `ImageJ`_ ROIs,an undocumented and ImageJ application specific format to store regions ofinterest, geometric shapes, paths, text, and whatnot for image overlays... _ImageJ: https://imagej.net:Author: `Christoph Gohlke &lt;https://www.cgohlke.com&gt;`_:License: BSD 3-Clause:Version: 2023.2.12:DOI: `10.5281/zenodo.6941603 &lt;https://doi.org/10.5281/zenodo.6941603&gt;`_Quickstart----------Install the roifile package and all dependencies from the`Python Package Index &lt;https://pypi.org/project/roifile/&gt;`_::    python -m pip install -U roifile[all]View overlays stored in a ROI, ZIP, or TIFF file::    python -m roifile file.roiSee `Examples`_ for using the programming interface.Source code, examples, and support are available on`GitHub &lt;https://github.com/cgohlke/roifile&gt;`_.Requirements------------This revision was tested with the following requirements and dependencies(other versions may work):- `CPython 3.8.10, 3.9.13, 3.10.10, 3.11.2 &lt;https://www.python.org&gt;`_- `Numpy 1.23.5 &lt;https://pypi.org/project/numpy/&gt;`_- `Tifffile 2023.2.3 &lt;https://pypi.org/project/tifffile/&gt;`_  (optional)- `Matplotlib 3.6.3 &lt;https://pypi.org/project/matplotlib/&gt;`_  (optional)Revisions---------2023.2.12- Delay import of zipfile.- Verify shape of coordinates on write.2022.9.19- Fix integer coordinates to -5000..60536 conforming with ImageJ (breaking).- Add subpixel_coordinates in frompoints for out-of-range integer coordinates.2022.7.29- Update metadata.2022.3.18- Fix creating ROIs from float coordinates exceeding int16 range (#7).- Fix bottom-right bounds in ImagejRoi.frompoints.2022.2.2- Add type hints.- Change ImagejRoi to dataclass.- Drop support for Python 3.7 and numpy &lt; 1.19 (NEP29).2021.6.6- Add enums for point types and sizes.2020.11.28- Support group attribute.- Add roiread and roiwrite functions (#3).- Use UUID as default name of ROI in ImagejRoi.frompoints (#2).2020.8.13- Support writing to ZIP file.- Support os.PathLike file names.2020.5.28- Fix int32 to hex color conversion.- Fix coordinates of closing path.- Fix reading TIFF files with no overlays.2020.5.1- Split positions from counters.2020.2.12- Initial release.Notes-----The ImageJ ROI format cannot store integer coordinate values outside therange of -5000..60536.Refer to the ImageJ `RoiDecoder.java&lt;https://github.com/imagej/ImageJ/blob/master/ij/io/RoiDecoder.java&gt;`_source code for a reference implementation.Other Python packages handling ImageJ ROIs:- `ijpython_roi &lt;https://github.com/dwaithe/ijpython_roi&gt;`_- `read-roi &lt;https://github.com/hadim/read-roi/&gt;`_- `napari_jroitools &lt;https://github.com/jayunruh/napari_jroitools&gt;`_Examples--------Create a new ImagejRoi instance from an array of x, y coordinates:&gt;&gt;&gt; roi = ImagejRoi.frompoints([[1.1, 2.2], [3.3, 4.4], [5.5, 6.6]])&gt;&gt;&gt; roi.roitype = ROI_TYPE.POINT&gt;&gt;&gt; roi.options |= ROI_OPTIONS.SHOW_LABELSExport the instance to an ImageJ ROI formatted byte string or file:&gt;&gt;&gt; out = roi.tobytes()&gt;&gt;&gt; out[:4]b'Iout'&gt;&gt;&gt; roi.tofile('_test.roi')Read the ImageJ ROI from the file and verify the content:&gt;&gt;&gt; roi2 = ImagejRoi.fromfile('_test.roi')&gt;&gt;&gt; roi2 == roiTrue&gt;&gt;&gt; roi.roitype == ROI_TYPE.POINTTrue&gt;&gt;&gt; roi.subpixelresolutionTrue&gt;&gt;&gt; roi.coordinates()array([[1.1, 2.2],       [3.3, 4.4],       [5.5, 6.6]], dtype=float32)&gt;&gt;&gt; roi.left, roi.top, roi.right, roi.bottom(1, 2, 7, 8)Plot the ROI using matplotlib:&gt;&gt;&gt; roi.plot()View the overlays stored in a ROI, ZIP, or TIFF file from a command line::    python -m roifile _test.roi</longdescription>
</pkgmetadata>