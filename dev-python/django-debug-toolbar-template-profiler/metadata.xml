<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>======================================django-debug-toolbar-template-profiler======================================.. image:: https://img.shields.io/pypi/v/django-debug-toolbar-template-profiler.svg       :target: https://pypi.python.org/pypi/django-debug-toolbar-template-profilerAn extra panel for`django-debug-toolbar &lt;https://django-debug-toolbar.readthedocs.io&gt;`__that displays time spent rendering each template.For example:.. image:: https://raw.githubusercontent.com/node13h/django-debug-toolbar-template-profiler/master/screenshot.pngInstallation============First, you'll need to install and configure django-debug-toolbar as per its`installation instructions&lt;https://django-debug-toolbar.readthedocs.io/en/latest/installation.html&gt;`__.Second, install this package:.. code-block:: sh    pip install django-debug-toolbar-template-profilerThird, add it to your installed apps - order doesn't matter but after`debug_toolbar` will keep it neatly grouped:.. code-block:: python    INSTALLED_APPS = [        # ...        &quot;debug_toolbar&quot;,        &quot;template_profiler_panel&quot;,        # ...    ]Fourth, configure django-debug-toolbar's ``DEBUG_TOOLBAR_PANELS`` setting`as per its documentation&lt;https://django-debug-toolbar.readthedocs.io/en/latest/configuration.html#debug-toolbar-panels&gt;`__to include the panel. You'll need to copy the default and add the panel at theend:.. code-block:: python    DEBUG_TOOLBAR_PANELS = [        # ...        &quot;template_profiler_panel.panels.template.TemplateProfilerPanel&quot;,    ]After this, you should see the &quot;Template Profiler&quot; panel when you load thetoolbar. Both Django and Jinja2 template ``render()`` calls will be measured.</longdescription>
</pkgmetadata>