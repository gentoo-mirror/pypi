<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Ever wanted to have animating fishes for progress bars in your command-linescript?Ever thought about doing it but then realizing you have better things to dowith your time than to write meaningless ASCII animation programs?Now you can have the best of both worlds: introducing ``fish``, the module thatmakes any program look awesome and display useful data while churning away onsome good 'ole data.Usage? Simple enough::    &gt;&gt;&gt; import fish    &gt;&gt;&gt; while churning:    ...     churn_churn()    ...     fish.animate()As a boy, I often dreamed of birds going back and forth as progress bars, so Idecided to implement just that::    &gt;&gt;&gt; import fish    &gt;&gt;&gt; bird = fish.Bird()    &gt;&gt;&gt; while churning:    ...     churn_churn()    ...     bird.animate()Want to show the current record number?::    &gt;&gt;&gt; from fish import ProgressFish    &gt;&gt;&gt; fish = ProgressFish()    &gt;&gt;&gt; for i, x in enumerate(churning):    ...     churn_churn()    ...     fish.animate(amount=i)Want to show numeric progress when you know the total number?::    &gt;&gt;&gt; from fish import ProgressFish    &gt;&gt;&gt; fish = ProgressFish(total=len(data))    &gt;&gt;&gt; for i, datum in enumerate(data):    ...     churn_churn()    ...     fish.animate(amount=i)`See a demo on YouTube`__.__ http://www.youtube.com/watch?v=xYeG5CVTCmkThe default fish is a simple bass at a pretty good velocity for an ASCII fish.Possibilities are endless here, gentlemen:    The only limit is yourself.    -- zombo.com`Fork on GitHub`____ http://github.com/lericson/fish</longdescription>
</pkgmetadata>