<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Sacremoses# License[MIT License](LICENSE).# Install```pip install -U sacremoses```NOTE: Sacremoses only supports Python 3 now (`sacremoses&gt;=0.0.41`). If you're using Python 2, the last possible version is `sacremoses==0.0.40`.# Usage (Python)## Tokenizer and Detokenizer```python&gt;&gt;&gt; from sacremoses import MosesTokenizer, MosesDetokenizer&gt;&gt;&gt; mt = MosesTokenizer(lang='en')&gt;&gt;&gt; text = 'This, is a sentence with weird\xbb symbols\u2026 appearing everywhere\xbf'&gt;&gt;&gt; expected_tokenized = 'This , is a sentence with weird \xbb symbols \u2026 appearing everywhere \xbf'&gt;&gt;&gt; tokenized_text = mt.tokenize(text, return_str=True)&gt;&gt;&gt; tokenized_text == expected_tokenizedTrue&gt;&gt;&gt; mt, md = MosesTokenizer(lang='en'), MosesDetokenizer(lang='en')&gt;&gt;&gt; sent = &quot;This ain't funny. It's actually hillarious, yet double Ls. | [] &lt; &gt; [ ] &amp; You're gonna shake it off? Don't?&quot;&gt;&gt;&gt; expected_tokens = ['This', 'ain', '&amp;apos;t', 'funny', '.', 'It', '&amp;apos;s', 'actually', 'hillarious', ',', 'yet', 'double', 'Ls', '.', '&amp;#124;', '&amp;#91;', '&amp;#93;', '&amp;lt;', '&amp;gt;', '&amp;#91;', '&amp;#93;', '&amp;amp;', 'You', '&amp;apos;re', 'gonna', 'shake', 'it', 'off', '?', 'Don', '&amp;apos;t', '?']&gt;&gt;&gt; expected_detokens = &quot;This ain't funny. It's actually hillarious, yet double Ls. | [] &lt; &gt; [] &amp; You're gonna shake it off? Don't?&quot;&gt;&gt;&gt; mt.tokenize(sent) == expected_tokensTrue&gt;&gt;&gt; md.detokenize(tokens) == expected_detokensTrue```## Truecaser```python&gt;&gt;&gt; from sacremoses import MosesTruecaser, MosesTokenizer# Train a new truecaser from a 'big.txt' file.&gt;&gt;&gt; mtr = MosesTruecaser()&gt;&gt;&gt; mtok = MosesTokenizer(lang='en')# Save the truecase model to 'big.truecasemodel' using `save_to`&gt;&gt; tokenized_docs = [mtok.tokenize(line) for line in open('big.txt')]&gt;&gt;&gt; mtr.train(tokenized_docs, save_to='big.truecasemodel')# Save the truecase model to 'big.truecasemodel' after training# (just in case you forgot to use `save_to`)&gt;&gt;&gt; mtr = MosesTruecaser()&gt;&gt;&gt; mtr.train('big.txt')&gt;&gt;&gt; mtr.save_model('big.truecasemodel')# Truecase a string after training a model.&gt;&gt;&gt; mtr = MosesTruecaser()&gt;&gt;&gt; mtr.train('big.txt')&gt;&gt;&gt; mtr.truecase(&quot;THE ADVENTURES OF SHERLOCK HOLMES&quot;)['the', 'adventures', 'of', 'Sherlock', 'Holmes']# Loads a model and truecase a string using trained model.&gt;&gt;&gt; mtr = MosesTruecaser('big.truecasemodel')&gt;&gt;&gt; mtr.truecase(&quot;THE ADVENTURES OF SHERLOCK HOLMES&quot;)['the', 'adventures', 'of', 'Sherlock', 'Holmes']&gt;&gt;&gt; mtr.truecase(&quot;THE ADVENTURES OF SHERLOCK HOLMES&quot;, use_known=True)['the', 'ADVENTURES', 'OF', 'SHERLOCK', 'HOLMES']&gt;&gt;&gt; mtr.truecase(&quot;THE ADVENTURES OF SHERLOCK HOLMES&quot;, return_str=True)'the adventures of Sherlock Holmes'```## Normalizer```python&gt;&gt;&gt; from sacremoses import MosesPunctNormalizer&gt;&gt;&gt; mpn = MosesPunctNormalizer()&gt;&gt;&gt; mpn.normalize('THIS EBOOK IS OTHERWISE PROVIDED TO YOU &quot;AS-IS.&quot;')'THIS EBOOK IS OTHERWISE PROVIDED TO YOU &quot;AS-IS.&quot;'```# Usage (CLI)Since version `0.0.42`, the pipeline feature for CLI is introduced, thus thereare global options that should be set first before calling the commands: - language - processes - encoding - quiet```shell$ pip install -U sacremoses&gt;=0.1$ sacremoses --helpUsage: sacremoses [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]...Options:  -l, --language TEXT      Use language specific rules when tokenizing  -j, --processes INTEGER  No. of processes.  -e, --encoding TEXT      Specify encoding of file.  -q, --quiet              Disable progress bar.  --version                Show the version and exit.  -h, --help               Show this message and exit.Commands:  detokenize  detruecase  normalize  tokenize  train-truecase  truecase```## PipelineExample to chain the following commands: - `normalize` with `-c` option to remove control characters. - `tokenize` with `-a` option for aggressive dash split rules. - `truecase` with `-a` option to indicate that model is for ASR    - if `big.truemodel` exists, load the model with `-m` option,   - otherwise train a model and save it with `-m` option to `big.truemodel` file. - save the output to console to the `big.txt.norm.tok.true` file.```shellcat big.txt | sacremoses -l en -j 4 \    normalize -c tokenize -a truecase -a -m big.truemodel \    &gt; big.txt.norm.tok.true```## Tokenizer```shell$ sacremoses tokenize --helpUsage: sacremoses tokenize [OPTIONS]Options:  -a, --aggressive-dash-splits   Triggers dash split rules.  -x, --xml-escape               Escape special characters for XML.  -p, --protected-patterns TEXT  Specify file with patters to be protected in                                 tokenisation.  -c, --custom-nb-prefixes TEXT  Specify a custom non-breaking prefixes file,                                 add prefixes to the default ones from the                                 specified language.  -h, --help                     Show this message and exit. $ sacremoses -l en -j 4 tokenize  &lt; big.txt &gt; big.txt.tok100%|██████████████████████████████████| 128457/128457 [00:05&lt;00:00, 24363.39it/s $ wget https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/tokenizer/basic-protected-patterns $ sacremoses -l en -j 4 tokenize -p basic-protected-patterns &lt; big.txt &gt; big.txt.tok100%|██████████████████████████████████| 128457/128457 [00:05&lt;00:00, 22183.94it/s```## Detokenizer```shell$ sacremoses detokenize --helpUsage: sacremoses detokenize [OPTIONS]Options:  -x, --xml-unescape  Unescape special characters for XML.  -h, --help          Show this message and exit. $ sacremoses -l en -j 4 detokenize &lt; big.txt.tok &gt; big.txt.tok.detok100%|██████████████████████████████████| 128457/128457 [00:16&lt;00:00, 7931.26it/s]```## Truecase```shell$ sacremoses truecase --helpUsage: sacremoses truecase [OPTIONS]Options:  -m, --modelfile TEXT            Filename to save/load the modelfile.                                  [required]  -a, --is-asr                    A flag to indicate that model is for ASR.  -p, --possibly-use-first-token  Use the first token as part of truecase                                  training.  -h, --help                      Show this message and exit.$ sacremoses -j 4 truecase -m big.model &lt; big.txt.tok &gt; big.txt.tok.true100%|██████████████████████████████████| 128457/128457 [00:09&lt;00:00, 14257.27it/s]```## Detruecase```shell$ sacremoses detruecase --helpUsage: sacremoses detruecase [OPTIONS]Options:  -j, --processes INTEGER  No. of processes.  -a, --is-headline        Whether the file are headlines.  -e, --encoding TEXT      Specify encoding of file.  -h, --help               Show this message and exit.$ sacremoses -j 4 detruecase  &lt; big.txt.tok.true &gt; big.txt.tok.true.detrue100%|█████████████████████████████████| 128457/128457 [00:04&lt;00:00, 26945.16it/s]```## Normalize```shell$ sacremoses normalize --helpUsage: sacremoses normalize [OPTIONS]Options:  -q, --normalize-quote-commas  Normalize quotations and commas.  -d, --normalize-numbers       Normalize number.  -p, --replace-unicode-puncts  Replace unicode punctuations BEFORE                                normalization.  -c, --remove-control-chars    Remove control characters AFTER normalization.  -h, --help                    Show this message and exit.$ sacremoses -j 4 normalize &lt; big.txt &gt; big.txt.norm100%|██████████████████████████████████| 128457/128457 [00:09&lt;00:00, 13096.23it/s]```</longdescription>
</pkgmetadata>