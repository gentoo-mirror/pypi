<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># NoiseFlow[![Actions Status](https://github.com/shakeflow/noiseflow/actions/workflows/workflow.yml/badge.svg)](https://github.com/shakeflow/noiseflow/actions)[![coverage](https://codecov.io/gh/shakeflow/noiseflow/branch/main/graph/badge.svg)](https://codecov.io/gh/shakeflow/noiseflow)[![docs](https://img.shields.io/badge/docs-stable-blue.svg)](https://shakeflow.github.io/noiseflow/)[![supported versions](https://img.shields.io/pypi/pyversions/noiseflow.svg?label=python_versions)](https://pypi.python.org/pypi/noiseflow)[![docs](https://badge.fury.io/py/noiseflow.svg)](https://badge.fury.io/py/noiseflow)## PrerequisitesNoiseFlow now supports `Clang` and `GCC` compiler in MacOS and Linux system separately, and all installation processes are under the `conda` environment, and we recommend to use miniconda. Make sure to install the following pre-packages before installing noiseflow:If you use `Clang` in Mac, please install `OpenMP` via `brew` as following:```bashbrew install openmp```And use `pip` and `conda` to install the following packages:```bashpip install joblibconda install -c conda-forge numpy scipy matplotlib conda install -c conda-forge obspyconda install -c conda-forge fftw (动态库)conda install -c conda-forge pybind11 (头文件)conda install -c conda-forge xtensor xsimd xtl xtensor-blas xtensor-python (可能是静态库)conda install -c conda-forge xtensor-fftw  #(usually failed at most time)  ```The `xtensor-fftw` and `KFR` need to be installed from source, first download them:```bashgit clone https://github.com/OUCyf/noiseflow.gitcd noiseflowgit submodule initgit submodule update```Note the `xtensor-fftw` do not support M1 chip, and if it is failed to install via conda, you can install it from source into conda environment as `$CONDA_PREFIX````bashcd ./external/xtensor-fftwmkdir build &amp;&amp; cd buildcmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIXmake install```The `KFR` package is C++ DSP framework, should be installed in `./extern/kfr` from source```bashcd ./external/kfrmkdir build &amp;&amp; cd buildcmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIXmake install```## InstallationNow you can install `NoiseFlow`. If you use `MacOS`, please make sure to use Clang as the complier```bashexport CXX=clang++# unset CXXpython setup.py install```If you use `Linux`, please use GCC as the compiler```bashexport CXX=g++-13python setup.py install```If you use `HPC` with `module` tool, you can use both Clang and GCC, for example using NOTS in Rice University.```bash# use gccmodule load GCC/13.1.0export CXX=g++python setup.py installINCLUDE_CMAKE_EXTENSION=1 pip install .# use clangmodule load GCCcore/11.2.0module load Clang/13.0.1export CXX=clang++python setup.py install``````bashconda install -c conda-forge stockwellNOISEFLOW_USE_CPP=1 pip install --no-binary :all: noiseflow --no-cache-dirgit submodule add https://gitclone.com/github.com/kfrlib/kfr.git extern/kfr```w## LicenseNoiseflow is dual-licensed, available under both commercial and apache license.If you want to use noiseflow in a commercial product or a closed-source project, you need to purchase a Commercial License.`stockwell`: 'numpy&gt;=1.18', scipy, fftw, ['cp36-*', 'cp37-*', 'cp38-*', 'cp39-*', 'cp310-*']## INSTALL (NOETS)- conda:```bashbrew install fftwconda install -c conda-forge fftw(没用)conda install -c conda-forge pybind11 (头文件)conda install -c conda-forge xtensor xsimd xtl xtensor-blas xtensor-python (可能是静态库)``````bashcd ./external/xtensor-fftwmkdir build &amp;&amp; cd buildmyenv = $(conda env list | grep ' \* ' | awk '{print $1}')conda_prefix = $(conda info --base)export CMAKE_PREFIX_PATH=&quot;${conda_prefix}/envs/${myenv}&quot;cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_PREFIX_PATH=$CONDA_PREFIXmake install```### [build-system]cmake = '^3.18.0'fftw = '^3.3.10'pybind11 = '^2.10.4'xtensor = '^0.24.6'xsimd = '8.0.5' # when the version is larger than 8.0.5, it will got error in compiling stage.xtl = '^0.7.5'xtensor_blas = '^0.20.0'xtensor_python = '^0.26.1'xtensor_fftw = '^0.2.6' # not show in conda envkfr = '^5.0.2' # not show in conda env### [optional-for-mac]libomp = '^16.0.6' # via brew</longdescription>
</pkgmetadata>