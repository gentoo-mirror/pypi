<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-range-parse [![Contributors](https://img.shields.io/github/contributors/markusressel/py-range-parse.svg)](https://github.com/markusressel/py-range-parse/graphs/contributors) [![MIT License](https://img.shields.io/github/license/markusressel/py-range-parse.svg)](/LICENSE) ![Code Size](https://img.shields.io/github/languages/code-size/markusressel/py-range-parse.svg) ![https://badge.fury.io/py/py-range-parse](https://badge.fury.io/py/py-range-parse.svg) [![Build Status](https://travis-ci.org/markusressel/py-range-parse.svg?branch=master)](https://travis-ci.org/markusressel/py-range-parse)**py-range-parse** is a library to parse commonly used range notations to python objects that act like sets.**py-range-parse is used by*** [container-app-conf](https://github.com/markusressel/container-app-conf)and hopefully many others :)# How to use```shellpip install py-range-parse``````pythonfrom py_range_parse import parse_rangerange = parse_range(&quot;[0..5]&quot;)```or create on manually:```pythonfrom py_range_parse import Rangerange = Range(0,5)```## Input formatsWhen parsing a `Range` from a `str` any whitespace is ignored.### `int` rangesIf both the _start_ and _end_ value are of type `int`, the resulting `Range` will only consider integers as part of it. If you want to include `float` values as well, at least one of the values has to be a `float`.* `[-2 .. 5]`* `[10 .. 1]`If the _end_ value is bigger than the _start_ value the resulting range will automatically be inverted. Therefore `range.start &lt;= range.end` is **always** `True` in a `Range`.### `float` rangesA `float` `Range` includes every possible `float` value between the _start_ and _end_ value.* `[-2.2 .. 5.123]`* `[-2.0 .. 5]`### InfinityInfinity can also be specified using both `inf` as well as the unicode symbol `∞`. Since it is internally represented using `math.inf` it will behave like a `float`.* `]-inf .. inf[`* `]-∞ .. ∞[`### Exclude bordersThe _start_ and _end_ values can be excluded from the `Range` independent of one another using the open bracket notation.* `]0 .. 5.5]`* `]0 .. inf[`## Operations### ContainsYou can easily check if a value is within a given `Range` like this:```python&gt; from py_range_parse import parse_range&gt; range = parse_range(&quot;[0 .. 5]&quot;)&gt; print(4 in range)True```### ComparisonYou can compare equality of two `Range` instances using the `==` operator.For two ranges to be equal they have to have the same * `start` value* `end` value* start inclusion* end inclusion* type (`int` or `float`)```python&gt; from py_range_parse import parse_range&gt; range1 = parse_range(&quot;[0 .. 5]&quot;)&gt; range2 = parse_range(&quot;[0 .. 5]&quot;)&gt; range3 = parse_range(&quot;[0 .. 5.0]&quot;)&gt; print(range1 == range2)True&gt; print(range1 == range3)False```# ContributingGitHub is for social coding: if you want to write code, I encourage contributions through pull requests from forksof this repository. Create GitHub tickets for bugs and new features and comment on the ones that you are interested in.# License```textpy-range-parseCopyright (c) 2019 Markus ResselPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.```</longdescription>
</pkgmetadata>