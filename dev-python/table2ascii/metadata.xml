<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># table2ascii[![build](https://img.shields.io/github/actions/workflow/status/DenverCoder1/table2ascii/python-test.yml?branch=main)](https://github.com/DenverCoder1/table2ascii/actions/workflows/python-app.yml)[![version](https://img.shields.io/pypi/v/table2ascii)](https://pypi.org/project/table2ascii/)[![downloads](https://static.pepy.tech/personalized-badge/table2ascii?period=total&amp;left_color=grey&amp;right_color=blue&amp;left_text=downloads)](https://pepy.tech/project/table2ascii)[![license](https://img.shields.io/pypi/l/table2ascii)](https://github.com/DenverCoder1/table2ascii/blob/main/LICENSE)[![discord](https://img.shields.io/discord/819650821314052106?color=5865F2&amp;logo=discord&amp;logoColor=white &quot;Dev Pro Tips Discussion &amp; Support Server&quot;)](https://discord.gg/fPrdqh3Zfu)An intuitive and type-safe library for converting 2D Python lists to fancy ASCII/Unicode tablesDocumentation and examples are available at [table2ascii.rtfd.io](https://table2ascii.readthedocs.io/)## 📥 Installation`pip install -U table2ascii`**Requirements:** `Python 3.7+`## 🧑💻 Usage### 🚀 Convert lists to ASCII tables```pyfrom table2ascii import table2asciioutput = table2ascii(    header=[&quot;#&quot;, &quot;G&quot;, &quot;H&quot;, &quot;R&quot;, &quot;S&quot;],    body=[[&quot;1&quot;, &quot;30&quot;, &quot;40&quot;, &quot;35&quot;, &quot;30&quot;], [&quot;2&quot;, &quot;30&quot;, &quot;40&quot;, &quot;35&quot;, &quot;30&quot;]],    footer=[&quot;SUM&quot;, &quot;130&quot;, &quot;140&quot;, &quot;135&quot;, &quot;130&quot;],)print(output)&quot;&quot;&quot;╔═════════════════════════════╗║  #     G     H     R     S  ║╟─────────────────────────────╢║  1    30    40    35    30  ║║  2    30    40    35    30  ║╟─────────────────────────────╢║ SUM   130   140   135   130 ║╚═════════════════════════════╝&quot;&quot;&quot;```### 🏆 Set first or last column headings```pyfrom table2ascii import table2asciioutput = table2ascii(    body=[[&quot;Assignment&quot;, &quot;30&quot;, &quot;40&quot;, &quot;35&quot;, &quot;30&quot;], [&quot;Bonus&quot;, &quot;10&quot;, &quot;20&quot;, &quot;5&quot;, &quot;10&quot;]],    first_col_heading=True,)print(output)&quot;&quot;&quot;╔════════════╦═══════════════════╗║ Assignment ║ 30   40   35   30 ║║    Bonus   ║ 10   20    5   10 ║╚════════════╩═══════════════════╝&quot;&quot;&quot;```### 📰 Set column widths and alignments```pyfrom table2ascii import table2ascii, Alignmentoutput = table2ascii(    header=[&quot;Product&quot;, &quot;Category&quot;, &quot;Price&quot;, &quot;Rating&quot;],    body=[        [&quot;Milk&quot;, &quot;Dairy&quot;, &quot;$2.99&quot;, &quot;6.283&quot;],        [&quot;Cheese&quot;, &quot;Dairy&quot;, &quot;$10.99&quot;, &quot;8.2&quot;],        [&quot;Apples&quot;, &quot;Produce&quot;, &quot;$0.99&quot;, &quot;10.00&quot;],    ],    column_widths=[12, 12, 12, 12],    alignments=[Alignment.LEFT, Alignment.CENTER, Alignment.RIGHT, Alignment.DECIMAL],)print(output)&quot;&quot;&quot;╔═══════════════════════════════════════════════════╗║ Product       Category         Price     Rating   ║╟───────────────────────────────────────────────────╢║ Milk           Dairy           $2.99      6.283   ║║ Cheese         Dairy          $10.99      8.2     ║║ Apples        Produce          $0.99     10.00    ║╚═══════════════════════════════════════════════════╝&quot;&quot;&quot;```### 🎨 Use a preset styleSee a list of 30+ preset styles [here](https://table2ascii.readthedocs.io/en/latest/styles.html).```pyfrom table2ascii import table2ascii, Alignment, PresetStyleoutput = table2ascii(    header=[&quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;],    body=[[&quot;10&quot;, &quot;30&quot;, &quot;40&quot;, &quot;35&quot;], [&quot;20&quot;, &quot;10&quot;, &quot;20&quot;, &quot;5&quot;]],    column_widths=[10, 10, 10, 10],    style=PresetStyle.ascii_box)print(output)&quot;&quot;&quot;+----------+----------+----------+----------+|  First   |  Second  |  Third   |  Fourth  |+----------+----------+----------+----------+|    10    |    30    |    40    |    35    |+----------+----------+----------+----------+|    20    |    10    |    20    |    5     |+----------+----------+----------+----------+&quot;&quot;&quot;output = table2ascii(    header=[&quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;],    body=[[&quot;10&quot;, &quot;30&quot;, &quot;40&quot;, &quot;35&quot;], [&quot;20&quot;, &quot;10&quot;, &quot;20&quot;, &quot;5&quot;]],    style=PresetStyle.plain,    cell_padding=0,    alignments=Alignment.LEFT,)print(output)&quot;&quot;&quot;First Second Third Fourth10    30     40    3520    10     20    5&quot;&quot;&quot;```### 🎲 Define a custom styleCheck [`TableStyle`](https://github.com/DenverCoder1/table2ascii/blob/main/table2ascii/table_style.py) for more info and [`PresetStyle`](https://github.com/DenverCoder1/table2ascii/blob/main/table2ascii/preset_style.py) for examples.```pyfrom table2ascii import table2ascii, TableStylemy_style = TableStyle.from_string(&quot;*-..*||:+-+:+     *''*&quot;)output = table2ascii(    header=[&quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;],    body=[[&quot;10&quot;, &quot;30&quot;, &quot;40&quot;], [&quot;20&quot;, &quot;10&quot;, &quot;20&quot;], [&quot;30&quot;, &quot;20&quot;, &quot;30&quot;]],    style=my_style)print(output)&quot;&quot;&quot;*-------.--------.-------*| First : Second : Third |+-------:--------:-------+|  10   :   30   :  40   ||  20   :   10   :  20   ||  30   :   20   :  30   |*-------'--------'-------*&quot;&quot;&quot;```### 🪄 Merge adjacent cells```pyfrom table2ascii import table2ascii, Merge, PresetStyleoutput = table2ascii(    header=[&quot;#&quot;, &quot;G&quot;, &quot;Merge&quot;, Merge.LEFT, &quot;S&quot;],    body=[        [1, 5, 6, 200, Merge.LEFT],        [2, &quot;E&quot;, &quot;Long cell&quot;, Merge.LEFT, Merge.LEFT],        [&quot;Bonus&quot;, Merge.LEFT, Merge.LEFT, &quot;F&quot;, &quot;G&quot;],    ],    footer=[&quot;SUM&quot;, &quot;100&quot;, &quot;200&quot;, Merge.LEFT, &quot;300&quot;],    style=PresetStyle.double_thin_box,    first_col_heading=True,)print(output)&quot;&quot;&quot;╔═════╦═════╤═══════╤═════╗║  #  ║  G  │ Merge │  S  ║╠═════╬═════╪═══╤═══╧═════╣║  1  ║  5  │ 6 │   200   ║╟─────╫─────┼───┴─────────╢║  2  ║  E  │  Long cell  ║╟─────╨─────┴───┬───┬─────╢║     Bonus     │ F │  G  ║╠═════╦═════╤═══╧═══╪═════╣║ SUM ║ 100 │  200  │ 300 ║╚═════╩═════╧═══════╧═════╝&quot;&quot;&quot;```## ⚙️ OptionsAll parameters are optional. At least one of `header`, `body`, and `footer` must be provided.Refer to the [documentation](https://table2ascii.readthedocs.io/en/stable/api.html#table2ascii) for more information.|       Option        |                                 Supported Types                                 |                                             Description                                              || :-----------------: | :-----------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------: ||      `header`       |              `Sequence[SupportsStr]`, `None`&lt;br/&gt;(Default: `None`)              |           First table row seperated by header row separator. Values should support `str()`           ||       `body`        |         `Sequence[Sequence[SupportsStr]]`, `None`&lt;br/&gt;(Default: `None`)         |           2D List of rows for the main section of the table. Values should support `str()`           ||      `footer`       |              `Sequence[SupportsStr]`, `None`&lt;br/&gt;(Default: `None`)              |           Last table row seperated by header row separator. Values should support `str()`            ||   `column_widths`   |       `Sequence[Optional[int]]`, `None`&lt;br/&gt;(Default: `None` / automatic)       |                         List of column widths in characters for each column                          ||    `alignments`     | `Sequence[Alignment]`, `Alignment`, `None`&lt;br/&gt;(Default: `None` / all centered) | Column alignments&lt;br/&gt;(ex. `[Alignment.LEFT, Alignment.CENTER, Alignment.RIGHT, Alignment.DECIMAL]`) || `number_alignments` |        `Sequence[Alignment]`, `Alignment`, `None`&lt;br/&gt;(Default: `None`)         |          Column alignments for numeric values. `alignments` will be used if not specified.           ||       `style`       |                `TableStyle`&lt;br/&gt;(Default: `double_thin_compact`)                |                                  Table style to use for the table\*                                  || `first_col_heading` |                          `bool`&lt;br/&gt;(Default: `False`)                          |                   Whether to add a heading column separator after the first column                   || `last_col_heading`  |                          `bool`&lt;br/&gt;(Default: `False`)                          |                   Whether to add a heading column separator before the last column                   ||   `cell_padding`    |                            `int`&lt;br/&gt;(Default: `1`)                             |           The minimum number of spaces to add between the cell content and the cell border           ||    `use_wcwidth`    |                          `bool`&lt;br/&gt;(Default: `True`)                           |             Whether to use [wcwidth][wcwidth] instead of `len()` to calculate cell width             |[wcwidth]: https://pypi.org/project/wcwidth/\*See a list of all preset styles [here](https://table2ascii.readthedocs.io/en/latest/styles.html).See the [API Reference](https://table2ascii.readthedocs.io/en/latest/api.html) for more info.## 👨🎨 Use cases### 🗨️ Discord messages and embeds-   Display tables nicely inside markdown code blocks on Discord-   Useful for making Discord bots with [Discord.py](https://github.com/Rapptz/discord.py)![image](https://user-images.githubusercontent.com/20955511/116203248-2973c600-a744-11eb-97d8-4b75ed2845c9.png)### 💻 Terminal outputs-   Tables display nicely whenever monospace fonts are fully supported-   Tables make terminal outputs look more professional![image](https://user-images.githubusercontent.com/20955511/207134452-a1eb1b9f-e63b-459b-8feb-fc6c234e902e.png)## 🤗 ContributingContributions are welcome!See [CONTRIBUTING.md](https://github.com/DenverCoder1/table2ascii/blob/main/CONTRIBUTING.md) for more details on how to get involved.</longdescription>
</pkgmetadata>