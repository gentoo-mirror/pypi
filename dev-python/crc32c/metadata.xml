<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>crc32c======.. image:: https://github.com/ICRAR/crc32c/workflows/Build%20and%20release%20to%20PyPI/badge.svg?branch=master.. image:: https://badge.fury.io/py/crc32c.svg    :target: https://badge.fury.io/py/crc32cThis package implements the crc32c checksum algorithm.It automatically chooses between a hardware-based implementation(using the CRC32C SSE 4.2 instruction of Intel CPUs,and the crc32* instructions on ARMv8 CPUs),or a software-based one when no hardware support can be found.Because ``crc32c`` is in PyPI, you can install it with:: pip install crc32cSupported platforms are Linux and OSX using the gcc and clang compilers,and Windows using the Visual Studio compiler. Other compilers inWindows (MinGW for instance) might work.Binary wheels are also provided in PyPI for major platforms/architectures.Usage-----The only method exposed by this module is ``crc32c(data, [crc])``.It computes the CRC32C checksum of ``data``starting with an initial ``crc`` checksum,similarly to how the built-in ``binascii.crc32`` works.It can thus be used like this:.. code-block:: python  print(crc32c.crc32c(b'hello world'))  # 3381945770  crc = crc32c.crc32c(b'hello')  print(crc32c.crc32c(b' world', crc))  # 3381945770In older versions,the function exposed by this module was called ``crc32``.That name is still present but deprecated,and will be removed in new versions of the library.Additionally one can consultthe following module-level values: * ``hardware_based`` indicates if the algorithm in use   is software- or hardware-based. * ``big_endian`` indicates whether the platform is big endian or not.Implementation details----------------------By default,if your CPU doesn't have CRC32C hardware support,the package will fallback to use a software implementationof the crc32c checksum algorithm.This behavior can be changed by settingthe ``CRC32C_SW_MODE`` environment variableto one of the following values:* ``auto``: same as if unset, will eventually be discontinued.* ``force``: use software implementation regardless of hardware support.* ``none``: fail to import the module with an ``ImportError``  if no hardware support is found (old 1.x default behavior).The software algorithm is basedon Intel's `slice-by-8 package &lt;https://sourceforge.net/projects/slicing-by-8/&gt;`_,with some adaptations doneby `Evan Jones &lt;https://www.evanjones.ca/crc32c.html&gt;`_and packaging provided by `Ferry Toth &lt;https://github.com/htot/crc32c&gt;`_.Further adaptations were requiredto make the code more portableand fit for inclusion within this python package.The Intel SSE 4.2 algorithmis based on `Mark Adler's code &lt;http://stackoverflow.com/questions/17645167/implementing-sse-4-2s-crc32c-in-software/17646775&gt;`_,with some modifications requiredto make the code more portableand fit for inclusion within this python package.The ARMv8 hardware implementationis based on Google's `crc32c &lt;https://github.com/google/crc32c&gt;`_C++ library.Copyright---------This package is copyrighted:: ICRAR - International Centre for Radio Astronomy Research (c) UWA - The University of Western Australia, 2017 Copyright by UWA (in the framework of the ICRAR)The original slice-by-8 software algorithmis copyrighted by:: Copyright (c) 2004-2006 Intel Corporation - All Rights ReservedFurther adaptations to the slice-by-8 algorithmprevious to the inclusion in this packageare copyrighted by:: Copyright 2008,2009,2010 Massachusetts Institute of Technology.The original Intel SSE 4.2 crc32c algorithmis copyrighted by:: Copyright (C) 2013 Mark AdlerThe crc32c ARMv8 hardware codeis copyrighted by:: Copyright 2017 The CRC32C AuthorsA copy of the `AUTHORS &lt;AUTHORS.google-crc32c&gt;`_ filefrom Google's crc32c projectas it was at the time of copying the codeis included in this repository.License-------This package is licensed under `the LGPL-2.1 license &lt;LICENSE&gt;`_.The original slice-by-8 software algorithmis licensed under `the 2-clause BSD licence&lt;https://opensource.org/licenses/bsd-license.html&gt;`_.Further modifications to the slice-by-8 software algorithmare licensed under `a 3-clause BSD licence &lt;LICENSE.slice-by-8&gt;`_The original Intel SSE 4.2 crc32c algorithm's codeis licensed under a custom licenseembedded in the ``crc32c_adler.c`` file.The original crc32c ARMv8 hardware codeis licensed under `a 3-clause BSD license &lt;LICENSE.google-crc32c&gt;`_.</longdescription>
</pkgmetadata>