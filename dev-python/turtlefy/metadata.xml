<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># turtlefy```              _,.---.---.---.--.._            _.-' `--.`---.`---'-. _,`--.._           /`--._ .'.     `.     `,`-.`-._\          ||   \  `.`---.__`__..-`. ,'`-._/     _  ,`\ `-._\   \    `.    `_.-`-._,``-.  ,`   `-_ \/ `-.`--.\    _\_.-'\__.-`-.`-._`. (_.o&gt; ,--. `._/'--.-`,--`  \_.-'       \`-._ \  `---'    `._ `---._/__,----`           `-. `-\            /_, ,  _..-'                    `-._\            \_, \/ ._(             \_, \/ ._\              `._,\/ ._\                `._// ./`-._                  `-._-_-_.-'```A collection of Shopify utilities to make life easier.Sometimes you just want to get things done in a straightforwardand lightweight manner.Like pulling all your Shopify orders into a list so youcan do stuff with them.Instead of reading all the API docs on how to paginate yourorders, or customers, products etc, just use the recursivefunction and you've got your list. Now do stuff.## Usage:```pythonfrom turtlefy.client import get_turtlefy_clientfrom turtlefy.resources import get_all_resourcesclient = get_turtlefy_client('https://base.myshopify.com', token='xxxx')order_uri = f'{client.api_path}/orders.json'orders = get_all_resources(client, order_uri, resource_type='orders')len(orders) &gt;&gt; 50```In addition, you can use the get_all_resources_iter function like this:```pythonfrom turtlefy.resources import get_all_resources_iter# Note that using limit=1 is very inefficient, but you can# yield one resource at a time this waycustomer_uri = f'{client.api_path}/customers.json?limit=1'for customer in get_all_resources_iter(client, customer_uri, resource_type='customer'):    print(customer)order_uri = f'{client.api_path}/orders.json?limit=250'for orders in get_all_resources_iter(client, order_uri, resource_type='orders'):    print(f'Got {len(orders)} orders')```## Automatic Rate Limiting:Also, some little goodies include automatic rate limit detection.Shopify uses a &quot;leaky bucket algorithm&quot; to determine when to startrate limiting your requests.https://shopify.dev/concepts/about-apis/rate-limitsNormally you would need to write some detection and backoff code in order topull a bunch of resources without hitting limits. With the Turtlefy client youcan just get all the resources and the client will handle the rate limitbackoff.NOTE: Currently this uses a very naive halving of the bucket leakcount. This will be getting a better, and proper exponential backoffcapability in the near future.What's with the name? It's turtles all the way down!https://en.m.wikipedia.org/wiki/Turtles_all_the_way_down</longdescription>
</pkgmetadata>