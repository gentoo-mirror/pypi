<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>mps-youtube===========.. image:: https://img.shields.io/pypi/v/mps-youtube.svg    :target: https://pypi.python.org/pypi/mps-youtube.. image:: https://img.shields.io/pypi/dm/mps-youtube.svg    :target: https://pypi.python.org/pypi/mps-youtube.. image:: https://img.shields.io/pypi/wheel/mps-youtube.svg    :target: http://pythonwheels.com/    :alt: Wheel StatusFeatures--------- Search and play audio/video from YouTube- Search tracks of albums by album title- Search and import YouTube playlists- Create and save local playlists- Download audio/video- Convert to mp3 &amp; other formats (requires ffmpeg or avconv)- View video comments- Works with Python 3.x- Works with Windows, Linux and Mac OS X- Requires mplayer or mpvThis project is based on `mps &lt;https://github.com/np1/mps&gt;`_, a terminal based program to search, stream and download music.  This implementation uses YouTube as a source of content and can play and download video as well as audio.  The `pafy &lt;https://github.com/np1/pafy&gt;`_ library handles interfacing with YouTube.`FAQ / Troubleshooting common issues &lt;https://github.com/np1/mps-youtube/wiki/Troubleshooting&gt;`_Screenshots-----------Search~~~~~~.. image:: http://np1.github.io/mpsyt-images2/std-search.pngA standard search is performed by entering ``/`` followed by search terms.Local Playlists~~~~~~~~~~~~~~~.. image:: http://np1.github.io/mpsyt-images2/local-playlists.pngSearch result items can easily be stored in local playlists.YouTube Playlists~~~~~~~~~~~~~~~~~.. image:: http://np1.github.io/mpsyt-images2/playlist-search.pngYouTube playlists can be searched and played or saved as local playlists.Download~~~~~~~~.. image:: http://np1.github.io/mpsyt-images2/download.pngContent can be downloaded in various formats and resolutions.Comments~~~~~~~~.. image:: http://np1.github.io/mpsyt-images2/comments.pngA basic comments browser is available to view YouTube user comments.Music Album Matching~~~~~~~~~~~~~~~~~~~~.. image:: http://np1.github.io/mpsyt-images2/album-1.png.. image:: http://np1.github.io/mpsyt-images2/album-2.pngAn album title can be specified and mps-youtube will attempt to find matches for each track of the album, based on title and duration.  Type ``help search`` for more info.Customisation~~~~~~~~~~~~~.. image:: http://np1.github.io/mpsyt-images2/customisation2.pngSearch results can be customised to display additional fields and ordered by various criteria.This configuration was set up using the following commands::    set order views    set columns user:14 date comments rating likes dislikes category:9 viewsType ``help config`` for help on configuration optionsInstallation------------Linux~~~~~Using `pip &lt;http://www.pip-installer.org&gt;`_::    [sudo] pip3 install mps-youtubeTo install the experimental development version and try the latest features:    [sudo] pip3 install -U git+https://github.com/mps-youtube/mps-youtube.gitInstalling youtube-dl is highly recommended::    [sudo] pip3 install youtube-dlFor mpris2 support, install the python bindings for dbus and gobject::    [sudo] pip3 install dbus-python pygobjectUbuntu~~~~~~You can install mps-youtube directly from the official repositories:    [sudo] apt install mps-youtubemacOS X~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Install mpv (recommended player) with `Homebrew &lt;http://brew.sh&gt;`_::    brew install mpvAlternately, you can install mplayer with `MacPorts &lt;http://www.macports.org&gt;`_::    sudo port install MPlayerOr with `Homebrew &lt;http://brew.sh&gt;`_::    brew install mplayerAdditional Windows installation notes~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~As an alternative to installing with pip, there is a standalone binary available. Go to `Releases &lt;https://github.com/np1/mps-youtube/releases&gt;`_ and download mpsyt-VERSION.exe under downloads for the latest release.Install the python `colorama &lt;https://pypi.python.org/pypi/colorama&gt;`_ module to get colors (optional)::    pip3 install coloramaMpsyt requires a player to use as a backend, with either mpv or mplayer supported. Mpv is the recommended option.Mpv can be downloaded from https://mpv.srsfckn.biz/Extract both ``mpv.exe`` and ``mpv.com`` to the same folder as ``mpsyt.exe`` or to a folder in the system path.Alternately, mplayer can be downloaded from http://oss.netfarm.it/mplayerExtract the ``mplayer.exe`` file, saving it to the folder that ``mpsyt.exe`` resides in (usually ``C:\PythonXX\Scripts\``) or to a folder in the system path.Run via Docker container~~~~~~~~~~~~~~~~~~~~~~~~Using `Docker &lt;http://www.docker.com&gt;`_, run with::    sudo docker run --device /dev/snd -it --rm --name mpsyt rothgar/mpsytAdditional Docker notes~~~~~~~~~~~~~~~~~~~~~~~If you would like to locally build the container you can run the following stepsCheck out this repo::    git clone https://github.com/np1/mps-youtube.gitEnter the directory and run docker build::    cd mps-youtube    sudo docker build -t mpsyt .Now run the container interactively with::    sudo docker run -v /dev/snd:/dev/snd -it --rm --privileged --name mpsyt mpsytIn order to have access to the local sound device (/dev/snd) the container needs to be privileged.Upgrading---------Upgrade pip installation::    [sudo] pip3 install mps-youtube --upgradeUsage-----mps-youtube is run on the command line using the command::    mpsytEnter ``h`` from within the program for help.IRC---An IRC channel `#mps-youtube` for the project is available on Freenode (chat.freenode.net:6697). You can join directly by clicking `this link &lt;https://webchat.freenode.net/?randomnick=1&amp;channels=%23mps-youtube&amp;uio=d4&gt;`_.</longdescription>
</pkgmetadata>