<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## SageMaker Docker Build[![Version](https://img.shields.io/pypi/v/sagemaker-studio-image-build.svg)](https://pypi.org/project/sagemaker-studio-image-build/)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)This is a CLI for building Docker images in SageMaker Studio using AWS CodeBuild.  ### UsageNavigate to the directory containing the Dockerfile and simply do:```bashsm-docker build .``` Any additional arguments supported with `docker build` are supported```bashsm-docker build . --file /path/to/Dockerfile --build-arg foo=bar```By default, the CodeBuild project will not run within a VPC, the image will be pushed to a repository `sagemakerstudio` with the tag `latest`, and use the Studio App's execution role and the default SageMaker Python SDK S3 bucketThese can be overridden with the relevant CLI options.```bashsm-docker build . --repository mynewrepo:1.0 --role SampleDockerBuildRole --bucket sagemaker-us-east-1-326543455535 --vpc-id vpc-0c70e76ef1c603b94 --subnet-ids subnet-0d984f080338960bb,subnet-0ac3e96808c8092f2 --security-group-ids sg-0d31b4042f2902cd0``` The CLI will take care of packaging the current directory and uploading to S3, creating a CodeBuild project, starting a build with the S3 artifacts, tailing the build logs, and uploading the built image to ECR.### InstallingInstall the CLI using pip.```bashpip install sagemaker-studio-image-build```Ensure the execution role has a trust policy with CodeBuild.```json{  &quot;Version&quot;: &quot;2012-10-17&quot;,  &quot;Statement&quot;: [    {      &quot;Effect&quot;: &quot;Allow&quot;,      &quot;Principal&quot;: {        &quot;Service&quot;: [          &quot;codebuild.amazonaws.com&quot;        ]      },      &quot;Action&quot;: &quot;sts:AssumeRole&quot;    }  ]}```The following permissions are required in the execution role to execute a build in CodeBuild and push the image to ECR```json{    &quot;Version&quot;: &quot;2012-10-17&quot;,    &quot;Statement&quot;: [        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;codebuild:DeleteProject&quot;,                &quot;codebuild:CreateProject&quot;,                &quot;codebuild:BatchGetBuilds&quot;,                &quot;codebuild:StartBuild&quot;            ],            &quot;Resource&quot;: &quot;arn:aws:codebuild:*:*:project/sagemaker-studio*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: &quot;logs:CreateLogStream&quot;,            &quot;Resource&quot;: &quot;arn:aws:logs:*:*:log-group:/aws/codebuild/sagemaker-studio*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;logs:GetLogEvents&quot;,                &quot;logs:PutLogEvents&quot;            ],            &quot;Resource&quot;: &quot;arn:aws:logs:*:*:log-group:/aws/codebuild/sagemaker-studio*:log-stream:*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: &quot;logs:CreateLogGroup&quot;,            &quot;Resource&quot;: &quot;*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;ecr:CreateRepository&quot;,                &quot;ecr:BatchGetImage&quot;,                &quot;ecr:CompleteLayerUpload&quot;,                &quot;ecr:DescribeImages&quot;,                &quot;ecr:DescribeRepositories&quot;,                &quot;ecr:UploadLayerPart&quot;,                &quot;ecr:ListImages&quot;,                &quot;ecr:InitiateLayerUpload&quot;,                 &quot;ecr:BatchCheckLayerAvailability&quot;,                &quot;ecr:PutImage&quot;            ],            &quot;Resource&quot;: &quot;arn:aws:ecr:*:*:repository/sagemaker-studio*&quot;        },        {            &quot;Sid&quot;: &quot;ReadAccessToPrebuiltAwsImages&quot;,            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;ecr:BatchGetImage&quot;,                &quot;ecr:GetDownloadUrlForLayer&quot;            ],            &quot;Resource&quot;: [                &quot;arn:aws:ecr:*:763104351884:repository/*&quot;,                &quot;arn:aws:ecr:*:217643126080:repository/*&quot;,                &quot;arn:aws:ecr:*:727897471807:repository/*&quot;,                &quot;arn:aws:ecr:*:626614931356:repository/*&quot;,                &quot;arn:aws:ecr:*:683313688378:repository/*&quot;,                &quot;arn:aws:ecr:*:520713654638:repository/*&quot;,                &quot;arn:aws:ecr:*:462105765813:repository/*&quot;            ]        },        {            &quot;Sid&quot;: &quot;EcrAuthorizationTokenRetrieval&quot;,            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;ecr:GetAuthorizationToken&quot;            ],            &quot;Resource&quot;: [                &quot;*&quot;            ]        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [              &quot;s3:GetObject&quot;,              &quot;s3:DeleteObject&quot;,              &quot;s3:PutObject&quot;              ],            &quot;Resource&quot;: &quot;arn:aws:s3:::sagemaker-*/*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;s3:CreateBucket&quot;            ],            &quot;Resource&quot;: &quot;arn:aws:s3:::sagemaker*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;iam:GetRole&quot;,                &quot;iam:ListRoles&quot;            ],            &quot;Resource&quot;: &quot;*&quot;        },        {            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: &quot;iam:PassRole&quot;,            &quot;Resource&quot;: &quot;arn:aws:iam::*:role/*&quot;,            &quot;Condition&quot;: {                &quot;StringLikeIfExists&quot;: {                    &quot;iam:PassedToService&quot;: &quot;codebuild.amazonaws.com&quot;                }            }        }    ]}```If you need to run your CodeBuild project within a VPC, please add the following actions to your execution role that the CodeBuild Project will assume:```json        {            &quot;Sid&quot;: &quot;VpcAccessActions&quot;,            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;ec2:CreateNetworkInterface&quot;,                &quot;ec2:CreateNetworkInterfacePermission&quot;,                &quot;ec2:DescribeDhcpOptions&quot;,                &quot;ec2:DescribeNetworkInterfaces&quot;,                &quot;ec2:DeleteNetworkInterface&quot;,                &quot;ec2:DescribeSubnets&quot;,                &quot;ec2:DescribeSecurityGroups&quot;,                &quot;ec2:DescribeVpcs&quot;            ],            &quot;Resource&quot;: &quot;*&quot;        }```### DevelopmentCheckout the repository.```bashmake install```#### Testing locallyTo build locally, use one of the example Dockerfiles in the *examples* directory```bashROLE_NAME=&lt;&lt;A role in your account to use in the CodeBuild build job&gt;&gt;(cd examples/basic_build &amp;&amp; sm-docker build . --role ${ROLE_NAME} )``````bash(cd examples/build_with_args &amp;&amp; sm-docker build . --role ${ROLE_NAME} --file Dockerfile.args --build-arg BASE_IMAGE=python:3.8 )```#### Testing on SageMaker StudioTo build a binary to use on SageMaker Studio, specify an S3 path and use the *s3bundle* target.```bashexport DEV_S3_PATH_PREFIX=s3://path/to/locationblack .make -k s3bundle```From a &quot;System Terminal&quot; in SageMaker Studio```bashexport DEV_S3_PATH_PREFIX=s3://path/to/locationaws s3 sync ${DEV_S3_PATH_PREFIX}/sagemaker-docker-build/dist . pip install sagemaker_studio_image_build-x.y.z.tar.gz```## SecuritySee [CONTRIBUTING](CONTRIBUTING.md#security-issue-notifications) for more information.## LicenseThis library is licensed under the MIT-0 License. See the LICENSE file.</longdescription>
</pkgmetadata>