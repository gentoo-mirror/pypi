<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>OTC Extensions==============.. image:: https://zuul.otc-service.com/api/tenant/eco/badge?project=opentelekomcloud/python-otcextensions&amp;pipeline=check&amp;branch=master    :target: https://zuul.otc-service.com/t/eco/builds?project=opentelekomcloud%2Fpython-otcextensions.. image:: https://readthedocs.org/projects/python-otcextensions/badge/?version=latest    :target: http://python-otcextensions.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusThe OTC Extensions augment the OpenStack SDK of features and servicesprovided by the Open Telekom Cloud. If installed as a Python package,they add several extra commands to the OpenStack Client CLI. Thereforethe project interacts closely with the* `python-openstacksdk`* `python-openstackclient`packages.Documentation-------------`Documentation Overview &lt;http://python-otcextensions.readthedocs.io/en/latest/&gt;`_Installation------------`Installation Page &lt;https://python-otcextensions.readthedocs.io/en/latest/install/index.html&gt;`_The OTC Extensions are hosted as the package `otcextensions` on PyPIand can be installed by pip as.. code-block: console   $ pip install otcextensionsThere are several optionsto do that including but not limited to pip userland installation, system wideinstallation as well as installation from operating system packets or directlyfrom source. Refer to the installation instructions_ in the projectsdocumentation.Configuration-------------`Configuration Page &lt;https://python-otcextensions.readthedocs.io/en/latest/install/configuration.html&gt;`_Acessing the Open Telekom Cloud APIs requires authentication andauthorization. For both there are several options available:* **Configuration files** (recommended): A file called `clouds.yaml`  holds all necessary configuration parameters. The file can be placed  either in the local directory, below the user home directory in  `.config/openstack` or in the system-wide directory  `/etc/openstack`. You may use a second file `secure.yaml` in the  same directories to extra protect clear-text password  credentials. For more details see the section `configuration`_ in  the official documentation.  Minimal sample ``clouds.yaml`` file:  .. code-block:: yaml    clouds:      otc:        profile: otc        auth:          username: '&lt;USER_NAME&gt;'          password: '&lt;PASSWORD&gt;'          project_name: '&lt;eu-de_project&gt;'          # or project_id: '&lt;123456_PROJECT_ID&gt;'          user_domain_name: 'OTC00000000001000000xxx'          # or user_domain_id: '&lt;123456_DOMAIN_ID&gt;'          auth_url: 'https://iam.eu-de.otc.t-systems.com:443/v3'        interface: 'public'        identity_api_version: 3 # !Important        ak: '&lt;AK_VALUE&gt;' # AK/SK pair for access to OBS        sk: '&lt;SK_VALUE&gt;'  With this configuration you can start using the CLI with ``openstack  --os-cloud otc *command*`` or by ``export OS_CLOUD=otc; openstack  *command*``.* **Environment variables:** Authentication using username/password is often  used::    export OS_AUTH_URL=&lt;url-to-openstack-identity&gt;    export OS_IDENTITY_API_VERSION=3    export OS_PROJECT_NAME=&lt;project-name&gt;    export OS_PROJECT_DOMAIN_NAME=&lt;project-domain-name&gt;    export OS_USERNAME=&lt;username&gt;    export OS_USER_DOMAIN_NAME=&lt;user-domain-name&gt;    export OS_PASSWORD=&lt;password&gt;  # (optional)    export S3_ACCESS_KEY_ID=&lt;access_key&gt;    export S3_SECRET_ACCESS_KEY=&lt;secret_access_key&gt;* **Command-Line Options:** The corresponding command-line options look  very similar::    --os-auth-url &lt;url&gt;    --os-identity-api-version 3    --os-project-name &lt;project-name&gt;    --os-project-domain-name &lt;project-domain-name&gt;    --os-username &lt;username&gt;    --os-user-domain-name &lt;user-domain-name&gt;    [--os-password &lt;password&gt;]    If a password is not provided above (in plaintext), you will be    interactively prompted to provide one securely.* **Existing Token:** Authentication may also be performed using an  already-acquired token and a URL pointing directly to the service  API that presumably was acquired from the Service Catalog::    export OS_TOKEN=&lt;token&gt;    export OS_URL=&lt;url-to-openstack-service&gt;* The corresponding command-line options look very similar::    --os-token &lt;token&gt;    --os-url &lt;url-to-openstack-service&gt;In addition to that a regular `clouds.yaml` configuration file can be usedMore information is available athttps://docs.openstack.org/python-openstackclient/latest/cli/authentication.htmlorhttps://developer.openstack.org/sdks/python/openstacksdk/users/configOTC Extensions CLI Usage------------------------`OTCE CLI Command Overview &lt;https://python-otcextensions.readthedocs.io/en/latest/cli/index.html&gt;`_OTC Extensions SDK Guides-------------------------`OTCE SDK Guides &lt;https://python-otcextensions.readthedocs.io/en/latest/sdk/guides/index.html&gt;`_Contributing------------* `Contribution Page &lt;https://python-otcextensions.readthedocs.io/en/latest/contributor/index.html&gt;`_Further Links-------------* `Release Notes &lt;https://docs.otc-service.com/releasenotes/python-otcextensions/&gt;`_* `Issue Tracker &lt;https://github.com/OpenTelekomCloud/python-otcextensions/issues&gt;`_.. _instructions: http://python-otcextensions.readthedocs.io/en/latest/install/</longdescription>
</pkgmetadata>