<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==============================pyrus-api==============================A python 3 client for the Pyrus API.The full documentation for API can be found here_... _here: https://pyrus.com/en/help/api/-----------------Installation-----------------To get the latest version:  - pip_ (preffrered)      $ pip install --upgrade pyrus-api  - Setuptools_: Use the easy_install tool included in the setuptools package:      $ easy_install --upgrade pyrus-api  - Manual installation: `Download the latest version of pyrus-api client`_, unpack the code, and run       $ python setup.py install.. _pip: https://pypi.python.org/pypi/pip.. _Setuptools: https://pypi.python.org/pypi/setuptools.. _`Download the latest version of pyrus-api client`: https://pypi.python.org/pypi/pyrus-api/-----------------Usage-----------------To start with the module:    &gt;&gt;&gt;  from pyrus import client    &gt;&gt;&gt;  import pyrus.models    &gt;&gt;&gt;  pyrus_client = client.PyrusAPI(login='login@pyrus.com', security_key='sadf2R5Wrdkn..')-----------------Examples-----------------Authenticate:    &gt;&gt;&gt; pyrus_client.auth()Get all form templates:    &gt;&gt;&gt; forms_response = pyrus_client.get_forms()    &gt;&gt;&gt; forms = forms_response.formsGet list of tasks created using specified form:    &gt;&gt;&gt; form_register_response = pyrus_client.get_registry(forms[0].id)    &gt;&gt;&gt; tasks = form_register_response.tasksYou can also filter registry by specific field value, status or current step number:    &gt;&gt;&gt; request = pyrus.models.requests.FormRegisterRequest(            include_archive=True,            steps=[1,2],            filters=[pyrus.models.entities.EqualsFilter(1, &quot;hello world&quot;)])    &gt;&gt;&gt; form_register_response = pyrus_client.get_registry(forms[0].id, request)Get task with all comments:    &gt;&gt;&gt; task = pyrus_client.get_task(tasks[0].id).taskAdd new comment to the task:    &gt;&gt;&gt; request = pyrus.models.requests.TaskCommentRequest(text=&quot;hello&quot;, action=&quot;finished&quot;)    &gt;&gt;&gt; task = pyrus_client.comment_task(tasks[0].id, request).taskUpload a file:    &gt;&gt;&gt; response = myclient.upload_file('C:\\path\\to\\file.txt').guidCreate a task:    &gt;&gt;&gt; request = CreateTaskRequest(            text=&quot;Task from python client&quot;,             participants=['colleague@email.com', 10196] #you can specify person id, email, or pyrus.models.entities.Person object            attachments = [guid])    &gt;&gt;&gt; task = pyrus_client.create_task(request).taskGet all available contacts:    &gt;&gt;&gt; contacts = pyrus_client.get_contacts()Get catalog with all items:    &gt;&gt;&gt; catalog_id = 1525    &gt;&gt;&gt; catalog_response = pyrus_client.get_catalog(catalog_id)    &gt;&gt;&gt; items = catalog_response.itemsGet profile:    &gt;&gt;&gt; profile_response = pyrus_client.get_profile()Get inbox:    &gt;&gt;&gt; inbox_response = pyrus_client.get_inbox(tasks_count=100)Get calendar:    &gt;&gt;&gt; calendar_response = (pyrus_client.get_calendar_tasks(req.CalendarRequest(        datetime.datetime.utcnow() - datetime.timedelta(days=30),        datetime.datetime.utcnow() + datetime.timedelta(days=30),        all_accessed_tasks=True,        item_count=55,        filter_mask=0b0111)))Get announcement with all comments:    &gt;&gt;&gt; announcement = pyrus_client.get_announcement(12321321).announcementGet announcements with all comments:    &gt;&gt;&gt; announcements = pyrus_client.get_announcements().announcementsAdd new comment to the announcement:    &gt;&gt;&gt; request = pyrus.models.requests.AnnouncementCommentRequest(text=&quot;hello&quot;, attachments = ['BEFCE22E-AEFF-4771-83D4-2A4B78FB05C6'])    &gt;&gt;&gt; announcement = pyrus_client.comment_announcement(12321321, request).announcementCreate an announcement:    &gt;&gt;&gt; request = CreateAnnouncementRequest(            text=&quot;Announcement from python client&quot;,             attachments = [guid])    &gt;&gt;&gt; announcement = pyrus_client.create_announcement(request).announcementGet form permissions:    &gt;&gt;&gt; permissions = pyrus_client.get_permissions(123)Change form permissions:    &gt;&gt;&gt; request = pyrus.models.requests.ChangePermissionsRequest({1733:'member'})    &gt;&gt;&gt; changed_permissions = pyrus_client.change_permissions(123, request)-----------------Support-----------------If you have any questions or comments please send an email to support@pyrus.com</longdescription>
</pkgmetadata>