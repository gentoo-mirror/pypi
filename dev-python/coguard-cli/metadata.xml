<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/coguardio/coguard-cli/raw/master/logo.png&quot; alt=&quot;Light mode logo&quot; width=&quot;500&quot;&gt;# CoGuardCoGuard is a comprehensive static analysis tool for IT infrastructureconfigurations (cloud and on-premise).Finding andfixing misconfigurations and security vulnerabilities for IaC, devices,containers, cloud settings, and applications. Reduce the noise of CVEnotifications and focus on small improvements for big wins.## Table of Contents- [Why CoGuard](#why-coguard)- [Introduction to the CLI](#introduction)- [Installation](#installation-instructions)    - [Pre-Requisites](#pre-requisites)    - [Install from repository or PIP](#installation)    - [Installation Tips](#installation-remarks)- [Usage](#how-to-use-it)    - [Scan local Docker images](#docker-scan)    - [Scan local project repositories](#repo-scan)    - [Extract &amp;amp; scan cloud configurations](#cloud-scan)    - [General Scan](#general-scan)    - [Add to CI/CD Pipeline](#add-to-cicd-pipeline)- [Screenshots](#screenshots)- [Supported Technologies &amp;amp; Roadmap](#supported-technologies)- [Learn More](#learn-more)## &lt;a id=&quot;why-coguard&quot;&gt;&lt;/a&gt;Why CoGuardInfrastructure as Code (IaC) is here to stay. The versioning andcontinuous scanning of every layer of your IT (on premise and cloud)infrastructure is crucial.CoGuard's team observed that there are a lot of policy checks on the layerscommunicating to the cloud, but the configurations inside specificcompute devices such as physical servers, virtual machines orcontainers are mostly neglected, or have silo-ed solutions at best.In order to have static analysis practices for IaC that go as deep asthe available tools for code, every layer needs to be equally addressed.In our practice, we observed that, at times, even an awareness oflocations of configuration files is lacking. This is why we created acommand line tool helping with discovering those configurations, andscanning them.CoGuard's CLI combines multiple ways to extract and scan your configurationfiles.1. Docker images: Modern   container scanners check for versions of software and libraries   installed on those containers, and establish if there are common known   vulnerabilities and exposures (CVEs). The   CoGuard CLI is trying to find known configuration files for e.g. web   servers or databases, and scans these for security and best practice.   Additionally, the last Docker file used to create an image is analyzed   as well.2. Project Repositories: Modern projects store their infrastructure   information inside code repositories for better visibility and   traceability. CoGuard can extract Infrastructure as Code (IaC)   files and other supported configurations. It also searches for   external container references and scans these as well.3. Cloud configurations not represented as IaC: Many organizations   have either not yet started using IaC tools, or have a hybrid model   of part IaC, part manual management. For these cases, we can   extract cloud configurations for AWS, Azure or GCP, and scan them   as well.## &lt;a id=&quot;introduction&quot;&gt;&lt;/a&gt; Introduction to the CoGuard CLIThis project is the command line interface to CoGuard, with additionalfunctionality for the auto-discovery of configuration files.The current release scans for:1. Docker images and its contents,2. project folders (such as GitHub Repositories) and3. will automatically extracted cloud configurations from the AWS, Azure and GCPIt searches for known [configuration files](#supported-technologies) of differentsoftware packages (like webservers, databases, etc.), and scans theseconfigurations for configuration errors and security best practices.## &lt;a id=&quot;installation-instructions&quot;&gt;&lt;/a&gt;Installation Instructions### &lt;a id=&quot;pre-requisites&quot;&gt;&lt;/a&gt;Pre-RequisitesYou need to have `python3`, `pip3` and `docker` installed on your system.Instructions for different operating systems and commands to be used for Python and Pip are provided below.&lt;details&gt;&lt;summary&gt;Ubuntu/Debian&lt;/summary&gt;```shellsudo apt install -y python3 python3-pip```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Alpine&lt;/summary&gt;```shellapk add python3 py3-pip```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;CentOS/Fedora&lt;/summary&gt;```shellsudo yum install -y python3 python3-pip```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Arch Linux&lt;/summary&gt;```shellsudo pacman -S python python-pip```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Mac OS&lt;/summary&gt;Assuming you are using [Homebrew](https://brew.sh), you have to run```shellbrew install python3```&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Windows&lt;/summary&gt;Download Python3 for Windows using [this link](https://www.python.org/downloads/windows/), andinstall it.&lt;/details&gt;### InstallationCoGuard CLI can either be pulled from this repository and useddirectly, or installed via `pip`:```shellpip3 install coguard-cli```This is a reminder that it is a requirement to have [Docker](https://docker.com) installed locally.### &lt;a id=&quot;installation-remarks&quot;&gt;&lt;/a&gt;Installation remarks**Remark 1**: It may happen that the folder where `pip` is installing packages is notin included in `PATH`. We have observed it on some Ubuntu installations, and onHomebrew Mac installs. For the Linux case, such as Ubuntu,you can find the binary usually under `$HOME/.local/bin/coguard`, i.e. you run```shell$HOME/.local/bin/coguard docker-image [&lt;YOUR-IMAGE-NAME-OR-ID&gt;]```For the Mac case, it is often installed under `~/Library/Python/&lt;YOUR_PYTHON_VERSION&gt;/bin/coguard`, i.e. you would run```shell~/Library/Python/&lt;YOUR_PYTHON_VERSION&gt;/bin/coguard docker-image [&lt;YOUR-IMAGE-NAME-OR-ID&gt;]```If you omit the image ID parameter, CoGuard will scan all the images currentlystored on your device.**Remark 2**: Windows users need to be allowed to create and read symbolic links.This can be achieved using three options:&lt;details&gt;&lt;summary&gt;Option 1&lt;/summary&gt;1. Run the CoGuard execution as admin temporarily. This can be achieved by opening the   PowerShell or command prompt as administrative user (right click on the icon),   or by issuing the command   ```shell   Start-Process powershell -Verb runAs   ```   inside an already open command/Powershell window.&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Option 2&lt;/summary&gt;2. Run Windows in Developer Mode (instructions on how to run Windows as a developer can   be found [here](https://docs.microsoft.com/en-us/gaming/game-bar/guide/developer-mode)).&lt;/details&gt;&lt;details&gt;&lt;summary&gt;Option 3&lt;/summary&gt;3. Run CoGuard on a Linux virtual machine, e.g. using the Windows subsystem for Linux.   This is commonly installed with Docker Desktop for Windows. If you do not have it installed,   then installation instructions can be found   [here](https://docs.microsoft.com/en-us/windows/wsl/install).   The installation steps for CoGuard using WSL are equivalent to the pre-requisites   and installation steps described for Linux (dependent on the distribution you choose).&lt;/details&gt;## How to use itAny of the following options requires you to create a CoGuard account.After completion, this image check will return the findings of CoGuardon this particular image. You can view the latest historical scan resultswhen logging in to [https://portal.coguard.io](https://portal.coguard.io).### &lt;a id=&quot;docker-scan&quot;&gt;&lt;/a&gt;Scanning Docker imagesUsing the CoGuard CLI, you can run a scan on your local Docker imagesusing```shellcoguard docker-image [scan] [&lt;YOUR-IMAGE-NAME-OR-ID&gt;]```### &lt;a id=&quot;repo-scan&quot;&gt;&lt;/a&gt;Scanning project repository foldersUsing the CoGuard CLI, you can run a scan on your localfile repositories using```shellcoguard folder [scan] [&lt;PATH-TO-FOLDER&gt;]```### &lt;a id=&quot;cloud-scan&quot;&gt;&lt;/a&gt;Extracting and scanning cloud configurations (BETA)Using the CoGuard CLI, you can run a scan a current snapshot of yourcloud configurations. This requires you to have the respectivecloud CLI tools (`aws-cli` for AWS, `gcloud` for GCP or `az` forAzure) installed and authenticated on your device.```shellcoguard cloud [scan] {aws, azure, gcp}```The extraction may take a couple of minutes, depending on yourinternet speed.### &lt;a id=&quot;general-scan&quot;&gt;&lt;/a&gt;General scanTo get a general scan, which includes all locally installed Dockerimages, anything in the current-working directory (recursive) and anyinstalled cloud provider authentication, simply run```shellcoguard scan```### &lt;a id=&quot;add-to-cicd-pipeline&quot;&gt;&lt;/a&gt;Inclusion into CI/CD pipelineCoGuard can be included as a step in your CI/CD pipeline. CoGuard generates thenecessary templates and scripts.GitHub Actions is available in the current release. To generate e.g. a GitHub ActionsYAML which automatically scans your repository onpull request/push, simply type```shellcoguard pipeline github add &lt;PATH_TO_YOUR_REPOSITORY&gt;```[Future support is planned](#support-roadmap) for GitLab CI/CD, Jenkins, Bamboo, CircleCI, etc.## Screenshot and further informationHere is a screenshot of a sample scan:![](./screenshot.png)As you can see, CoGuard also analyzes the last Dockerfile used.The checks are gathered from different security benchmarks, such as CIS, but alsodirectly from the user manuals of these software projects. At times, known issues forcertain versions and security remediations specific to a certain version are being takeninto account as well.## &lt;a id=&quot;supported-technologies&quot;&gt;&lt;/a&gt;Supported Technologies and RoadmapCoGuard currently supports the the auto-discovery of configuration files insideDocker containers, folders and cloud configuration exports. The full list of configurations filescan be found[in this folder](https://github.com/coguardio/coguard-cli/tree/master/src/coguard_cli/discovery/config_file_finders).- Supported Applications &amp;amp; Infrastructure as Code    - Apache Kafka    - Apache Tomcat    - Apache WebServer    - CloudFormation    - Dockerfile    - ElasticSearch    - Helm    - Kerberos    - Kubernetes    - MongoDB    - MySQL    - Netlify    - NGINX    - OpenTelemetry Collector    - PostgreSQL    - Redis    - TerraForm- Supported Cloud Hosts    - AWS    - Azure    - GCP    - OVH Cloud- &lt;a id=&quot;supported-roadmap&quot;&gt;&lt;/a&gt;Roadmap (Future Support Planned)    - Ansible    - Jenkins    - Bamboo    - CircleCI    - OpenAPI    - Puppet    - BitBucket Pipelines    - [Contact us](https://coguard.io/contact) for full list or to add a specific request or custom rulesThis listwill expand in the future. In addition, we are scanning theDockerfile used to create the images, and will add some Linuxconfiguration files in the near future.## &lt;a id=&quot;learn-more&quot;&gt;&lt;/a&gt;Learn more- [CoGuard](https://www.coguard.io)- [Blog](https://www.coguard.io/blog)- [Contact Us](https://coguard.io/contact</longdescription>
</pkgmetadata>