<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Welcome to nbstata&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt;`nbstata` is a [Jupyterkernel](https://docs.jupyter.org/en/latest/projects/kernels.html) for[Stata](https://www.stata.com/why-use-stata/) built on top of[pystata](https://www.stata.com/python/pystata/index.html).**[*For the User Guide, clickhere.*](https://hugetim.github.io/nbstata/user_guide.html)**## What is Jupyter?[JupyterLab](https://jupyterlab.readthedocs.io/en/stable/getting_started/overview.html)is a browser-based editor that allows you to combine interactive codeand results with[Markdown](https://daringfireball.net/projects/markdown/basics) in asingle document (called a Jupyter notebook). It is open source andwidely used. Though it is named after the three core programminglanguages it supports (Julia, Python, and R), it can be used with with awide variety of languages.`nbstata` allows you to create Stata notebooks (as opposed to usingStata within a *Python* notebook, which is a nice way to [embed Statacommands within Pythoncode](https://www.stata.com/python/pystata/notebook/Example2.html) butis needlessly clunky if you are working primarily with Stata).&lt;img align=&quot;center&quot; width=&quot;650&quot; src=&quot;https://github.com/kylebarron/stata_kernel/raw/master/docs/src/img/jupyter_notebook_example.gif&quot;&gt;### `nbstata` features- [x] [Easy  setup](https://hugetim.github.io/nbstata/user_guide.html#install)- [x] Works with Stata 17+ (only).- [x] Displays Stata output without the redundant ‘echo’ of (multi-line)  commands- [x] Autocompletion for variables, macros, matrices, and file paths- [x] DataGrid widget with `browse`-like capabilities (e.g., interactive  filtering)- [x] Variable and data properties (`describe` and `e`/`return list`)  available in a ‘contextual help’ side panel- [x] Interactive/richtext help files accessible within notebook- [x] `#delimit ;` interactive support (along with all types of  comments)### What can you do with Stata notebooks……that you can’t do with the [official Statainterface](https://www.stata.com/features/overview/graphical-user-interface/)?- Exploratory analysis that is both:  - interactive  - preserved for future reference/editing- Present results in a way that interweaves:\[1\]  - code  - results (including graphs)  - rich text:    1.  lists    2.  **Headings**    3.  &lt;img align=&quot;left&quot; width=&quot;54&quot; height=&quot;18.6&quot; src=&quot;index_files/figure-commonmark/b7f3a71a-1-image-2.png&quot;&gt;    4.  [links](https://hugetim.github.io/nbstata/)    5.  math: $y_{it}=\beta_0+\varepsilon_{it}$\[1\] Stata [dynamicdocuments](https://www.stata.com/manuals/rptdynamicdocumentsintro.pdf)can do this part, just with a less interactive workflow. (See also:[markstat](https://grodri.github.io/markstat/),[stmd](https://www.ssc.wisc.edu/~hemken/Stataworkshops/stmd/Usage/stmdusage.html),and[Statamarkdown](https://ssc.wisc.edu/~hemken/Stataworkshops/Statamarkdown/stata-and-r-markdown.html))Using `nbstata` with[Quarto](https://www.statalist.org/forums/forum/general-stata-discussion/general/1703835-ado-files-and-literate-programming)instead gives you a similar workflow, with greater flexibility ofoutput.## Contributing`nbstata` is being developed using[nbdev](https://nbdev.fast.ai/blog/posts/2022-07-28-nbdev2/#whats-nbdev).The `/nbs` directory is where edits to the source code should be made.(The python code is then exported to the `/nbdev` library folder.) Theone exception is `install.py`.For more, see[CONTRIBUTING.md](https://github.com/hugetim/nbstata/blob/master/CONTRIBUTING.md).## AcknowledgementsKyle Barron authored the original `stata_kernel` and Vinci Chow carriedthat work forward for Stata 17, converting the backend to use[pystata](https://www.stata.com/python/pystata/). `nbstata` wasoriginally derived from his[pystata-kernel](https://github.com/ticoneva/pystata-kernel), but muchof the docs and newer features are derived directly from `stata_kernel`.</longdescription>
</pkgmetadata>