<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cmyt[![PyPI](https://img.shields.io/pypi/v/cmyt.svg?logo=pypi&amp;logoColor=white&amp;label=PyPI)](https://pypi.org/project/cmyt)[![Conda Version](https://img.shields.io/conda/vn/conda-forge/cmyt.svg?logo=condaforge&amp;logoColor=white)](https://anaconda.org/conda-forge/cmyt)[![CI](https://github.com/yt-project/cmyt/actions/workflows/ci.yml/badge.svg)](https://github.com/yt-project/cmyt/actions/workflows/ci.yml)[![CI (bleeding edge)](https://github.com/yt-project/cmyt/actions/workflows/bleeding-edge.yaml/badge.svg)](https://github.com/yt-project/cmyt/actions/workflows/bleeding-edge.yaml)[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/yt-project/cmyt/main.svg)](https://results.pre-commit.ci/latest/github/yt-project/cmyt/main)[![yt-project](https://img.shields.io/static/v1?label=&quot;works%20with&quot;&amp;message=&quot;yt&quot;&amp;color=&quot;blueviolet&quot;)](https://yt-project.org)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/charliermarsh/ruff)&lt;a href=&quot;http://yt-project.org&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yt-project/yt/main/doc/source/_static/yt_logo.png&quot; width=&quot;150&quot;&gt;&lt;/a&gt;Matplotlib colormaps from the yt project !## Colormaps overviewThe following colormaps, as well as their respective reversed (`*_r`) versions are available### Perceptually uniform sequential colormaps&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/yt-project/cmyt/main/doc/overview_perceptually_uniform.png&quot; width=&quot;800&quot;&gt;&lt;/a&gt;&lt;/p&gt;### Monochromatic sequential colormaps&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/yt-project/cmyt/main/doc/overview_pixel.png&quot; width=&quot;800&quot;&gt;&lt;/a&gt;&lt;/p&gt;### Miscellaneous&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/yt-project/cmyt/main/doc/overview_misc.png&quot; width=&quot;800&quot;&gt;&lt;/a&gt;&lt;/p&gt;## Installationwith `pip````shellpython -m pip install cmyt```or with `conda````shellconda install -c conda-forge cmyt```## Usagecmyt integrates with matplotlib in a similar fashion to[cmocean](https://matplotlib.org/cmocean/) or[cmasher](https://cmasher.readthedocs.io)```pythonimport numpy as npimport matplotlib.pyplot as pltimport cmyt  # that's it !# generate example dataprng = np.random.RandomState(0x4D3D3D3)noise = prng.random_sample((100, 100))x, y = np.mgrid[-50:50, -50:50]z = 5 * np.exp(-(x**2 + y**2) / 1000)# setup the figurefig, ax = plt.subplots()ax.set(aspect=&quot;equal&quot;)# now we can refer to cmyt colormaps as stringsim = ax.pcolormesh(x, y, z + noise, cmap=&quot;cmyt.arbre&quot;, shading=&quot;flat&quot;)fig.colorbar(im, ax=ax)```&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/yt-project/cmyt/main/doc/demo.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt;&lt;/p&gt;```python# alternatively, cmyt maps can also be imported as objectsfrom cmyt import pastelfig, ax = plt.subplots()ax.set(aspect=&quot;equal&quot;)im = ax.contourf(x, y, z + noise, cmap=pastel)fig.colorbar(im, ax=ax)```&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/yt-project/cmyt/main/doc/demo_alt.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt;&lt;/p&gt;A gallery of comparable examples using all colormaps from cmyt is available [in the test directory](https://github.com/yt-project/cmyt/tree/main/tests/baseline).</longdescription>
</pkgmetadata>