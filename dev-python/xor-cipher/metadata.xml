<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `xor-cipher`[![License][License Badge]][License][![Version][Version Badge]][Package][![Downloads][Downloads Badge]][Package][![Documentation][Documentation Badge]][Documentation][![Check][Check Badge]][Actions][![Test][Test Badge]][Actions]&gt; *Simple, reusable and optimized XOR ciphers in Python.*`xor-cipher` is a fast implementation of the XOR cipher written using Cython.Our tests show that it can be `1000x` faster than pure Python implementations.It has been optimized to breeze through datasets of any size.## Installing**Python 3.7 or above is required.**### pipInstalling the library with `pip` is quite simple:```console$ pip install xor-cipher```Alternatively, the library can be installed from source:```console$ git clone https://github.com/xor-cipher/xor-cipher.git$ cd xor-cipher$ python -m pip install .```### poetryYou can add `xor-cipher` as a dependency with the following command:```console$ poetry add xor-cipher```Or by directly specifying it in the configuration like so:```toml[tool.poetry.dependencies]xor-cipher = &quot;^2.3.1&quot;```Alternatively, you can add it directly from the source:```toml[tool.poetry.dependencies.xor-cipher]git = &quot;https://github.com/xor-cipher/xor-cipher.git&quot;```## Examples### Simple CipherUse the `xor` function to perform the simple XOR cipher:```python&gt;&gt;&gt; from xor_cipher import xor&gt;&gt;&gt; xor(b&quot;Hello, world!&quot;, 0x42)b&quot;\n'..-nb5-0.&amp;c&quot;```### Cyclic CipherUse the `cyclic_xor` function to perform the cyclic XOR variation:```python&gt;&gt;&gt; from xor_cipher import cyclic_xor&gt;&gt;&gt; cyclic_xor(b&quot;Hello, world!&quot;, b&quot;BLOB&quot;)b&quot;\n)#.-`o5-&gt;#&amp;c&quot;```### String Cipher`xor-cipher` provides `xor_string` and `cyclic_xor_string` as variations of`xor` and `cyclic_xor`, respectively:```python&gt;&gt;&gt; from xor_cipher import xor_string&gt;&gt;&gt; xor_string(&quot;Hello, world!&quot;, 0x42)&quot;\n'..-nb5-0.&amp;c&quot;```### In-Place CipherThere are functions to perform the XOR cipher in-place, on `bytearray` instances:```python&gt;&gt;&gt; from xor_cipher import xor_in_place&gt;&gt;&gt; data = bytearray(b&quot;Hello, world!&quot;)&gt;&gt;&gt; xor_in_place(data, 0x42)&gt;&gt;&gt; databytearray(b&quot;\n'..-nb5-0.&amp;c&quot;)```## DocumentationYou can find the documentation [here][Documentation].## SupportIf you need support with the library, you can send an [email][Email].## ChangelogYou can find the changelog [here][Changelog].## Security PolicyYou can find the Security Policy of `xor-cipher` [here][Security].## ContributingIf you are interested in contributing to `xor-cipher`, make sure to take a look at the[Contributing Guide][Contributing Guide], as well as the [Code of Conduct][Code of Conduct].## License`xor-cipher` is licensed under the MIT License terms. See [License][License] for details.[Email]: mailto:support@xor-cipher.com[Actions]: https://github.com/xor-cipher/xor-cipher/actions[Changelog]: https://github.com/xor-cipher/xor-cipher/blob/main/CHANGELOG.md[Code of Conduct]: https://github.com/xor-cipher/xor-cipher/blob/main/CODE_OF_CONDUCT.md[Contributing Guide]: https://github.com/xor-cipher/xor-cipher/blob/main/CONTRIBUTING.md[Security]: https://github.com/xor-cipher/xor-cipher/blob/main/SECURITY.md[License]: https://github.com/xor-cipher/xor-cipher/blob/main/LICENSE[Package]: https://pypi.org/project/xor-cipher[Documentation]: https://xor-cipher.github.io/xor-cipher[License Badge]: https://img.shields.io/pypi/l/xor-cipher[Version Badge]: https://img.shields.io/pypi/v/xor-cipher[Downloads Badge]: https://img.shields.io/pypi/dm/xor-cipher[Documentation Badge]: https://github.com/xor-cipher/xor-cipher/workflows/docs/badge.svg[Check Badge]: https://github.com/xor-cipher/xor-cipher/workflows/check/badge.svg[Test Badge]: https://github.com/xor-cipher/xor-cipher/workflows/test/badge.svg</longdescription>
</pkgmetadata>