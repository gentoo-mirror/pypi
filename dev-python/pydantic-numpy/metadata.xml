<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pydantic-numpyPackage that integrates NumPy Arrays into Pydantic!- `NumpyModel` make it possible to dump and load `np.ndarray` within model fields alongside other fields that are not instances of `np.ndarray`!- `pydantic_numpy.typing` provides many typings such as `NpNDArrayFp64`, `Np3DArrayFp64` (float64 that must be 3D)!## UsageFor more examples see [test_ndarray.py](./tests/test_typing.py)```pythonimport numpy as npimport pydantic_numpy.typing as pndfrom pydantic_numpy import np_array_pydantic_annotated_typingfrom pydantic_numpy.model import NumpyModel, MultiArrayNumpyFileclass MyNumpyModel(NumpyModel):    any_array_dtype_and_dimension: pnd.NpNDArray    # Must be numpy float32 as dtype    k: np_array_pydantic_annotated_typing(data_type=np.float32)    shorthand_for_k: pnd.NpNDArrayFp32    must_be_1d_np_array: np_array_pydantic_annotated_typing(dimensions=1)class MyDemoModel(NumpyModel):    k: np_array_pydantic_annotated_typing(data_type=np.float32)# Instantiate from arraycfg = MyDemoModel(k=[1, 2])# Instantiate from numpy filecfg = MyDemoModel(k=&quot;path_to/array.npy&quot;)# Instantiate from npz file with keycfg = MyDemoModel(k=MultiArrayNumpyFile(path=&quot;path_to/array.npz&quot;, key=&quot;k&quot;))cfg.k   # np.ndarray[np.float32]cfg.dump(&quot;path_to_dump_dir&quot;, &quot;object_id&quot;)cfg.load(&quot;path_to_dump_dir&quot;, &quot;object_id&quot;)````NumpyModel.load` requires the original model:```pythonMyNumpyModel.load(&lt;path&gt;)```Use `model_agnostic_load` when you have several models that may be the correct model:```pythonfrom pydantic_numpy.model.np_model import model_agnostic_loadcfg.dump(&quot;path_to_dump_dir&quot;, &quot;object_id&quot;)equals_cfg = model_agnostic_load(&quot;path_to_dump_dir&quot;, &quot;object_id&quot;, models=[MyNumpyModel, MyDemoModel])```### Install```shellpip install pydantic-numpy```## ConsiderationsYou can install from [cheind's](https://github.com/cheind/pydantic-numpy) repository if you want Python `3.8` support, but this version only support Pydantic V1 and will not work with V2.### Licensing noticeAs of version `3.0.0` the license has moved over to BSD-4. The versions prior are under the MIT license.### HistoryThe original idea originates from [this discussion](https://gist.github.com/danielhfrank/00e6b8556eed73fb4053450e602d2434), and forked from [cheind's](https://github.com/cheind/pydantic-numpy) repository.</longdescription>
</pkgmetadata>