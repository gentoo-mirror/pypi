<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># elevenlabslib![PyPI - Downloads](https://img.shields.io/pypi/dm/elevenlabslib?color=%23009FFFFF&amp;style=for-the-badge)![PyPI](https://img.shields.io/pypi/v/elevenlabslib?color=%23FE6137&amp;style=for-the-badge)![GitHub last commit](https://img.shields.io/github/last-commit/lugia19/elevenlabslib?style=for-the-badge)Python wrapper for the full elevenlabs API.### **Documentation now available at https://elevenlabslib.readthedocs.io/en/latest/**# InstallationJust run `pip install elevenlabslib`, it's on [pypi](https://pypi.org/project/elevenlabslib/).Note: On Linux, you may need to install portaudio. On debian and derivatives, it's `sudo apt-get install libportaudio2`, and possibly also `sudo apt-get install python3-pyaudio`.**IMPORTANT**: The library requires libsndfile `v1.1.0` or newer, as that is when mp3 support was introduced. This won't be an issue on Windows, but may be relevant on other platforms. Check the [soundfile](https://github.com/bastibe/python-soundfile#installation) repo for more information.# UsageFor a far more comprehensive example, check [example.py](https://github.com/lugia19/elevenlabslib/blob/master/example.py) or [the docs](https://elevenlabslib.readthedocs.io/en/latest/).Here is a very simple usage sample. - Retrieves a voice based on the name- Plays back (using the included playback functions that use sounddevice) all its samples (and the preview) - Generates and plays back a new audio- Deletes the newly created audio from the user history```pyfrom elevenlabslib import *user = ElevenLabsUser(&quot;API_KEY&quot;)voice = user.get_voices_by_name(&quot;Rachel&quot;)[0]  # This is a list because multiple voices can have the same namevoice.play_preview(playInBackground=False)voice.generate_and_play_audio(&quot;Test.&quot;, playInBackground=False)for historyItem in user.get_history_items():    if historyItem.text == &quot;Test.&quot;:        # The first items are the newest, so we can stop as soon as we find one.        historyItem.delete()        break```</longdescription>
</pkgmetadata>