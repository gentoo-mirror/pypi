<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- PROJECT NAME --&gt;&lt;div align=&quot;center&quot;&gt;   &lt;img src=&quot;https://ik.imagekit.io/m0ci8dgk4/nlpipes_logo_eSBhzDKCZ.png?updatedAt=1679840445991&quot; alt=&quot;nlpipes_logo&quot; title=&quot;nlpipes logo&quot;&gt;  &lt;h2&gt;Text Classification with Transformers&lt;/h2&gt;&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;    &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;       &lt;img alt=&quot;Licence&quot; src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg&quot;&gt;    &lt;/a&gt;     &lt;a href=&quot;https://pypi.org/project/nlpipes/&quot;&gt;       &lt;img alt=&quot;PyPi Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/nlpipes&quot;&gt;    &lt;/a&gt;     &lt;a href=&quot;https://pypi.org/project/nlpipes/&quot;&gt;        &lt;img alt=&quot;PyPi Package Version&quot; src=&quot;https://img.shields.io/pypi/v/nlpipes&quot;&gt;    &lt;/a&gt;    &lt;!--    &lt;a href=&quot;https://pepy.tech/project/nlpipes/&quot;&gt;        &lt;img alt=&quot;PyPi Downloads&quot; src=&quot;https://static.pepy.tech/badge/nlpipes/month&quot;&gt;    &lt;/a&gt;    --&gt;&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;    &lt;a href=&quot;&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt;    â€¢ &lt;a href=&quot;&quot;&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/a&gt;&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;  &lt;img src=&quot;https://ik.imagekit.io/m0ci8dgk4/nlpipes_screenshot_q_FDeS4Js.png?updatedAt=1686231419316&quot;       alt=&quot;nlpipes_screenshot&quot;        title=&quot;nlpipes screenshot&quot;       width=&quot;75%&quot;       height=&quot;75%&quot;  &gt;&lt;/div&gt;## Overview`NLPipes` is for people unfamiliar with Transformers who want an end to end solution to solve practical text classification problems, including:* **Single-label classification**: A typical use case is sentiment detection where one want to detect the overall sentiment polarity (e.g., positive, neutral, negative) in a review.* **Multi-label classification**: A typical use case is aspect categories detection where one want to detect the multiple aspects mentionned in a review (e.g., product_quality, delivery_time, price, ...).* **Aspect-based classification**: A typical use case is aspect based sentiment analysis where one want to detect sentiment polarity associated to each aspect categories mentionned in a review (e.g., product_quality: neutral, delivery_time: negative, price: positive, ...).`NLPipes` expose a `Model` API that provide a unique and simple abstraction for all the tasks. The library maintain a common usage pattern across models (train, evaluate, predict, save) withalso a clear and consistent data structure (python lists as inputs/outputs data).#### Built with`NLPipes` is built with TensorFlow and HuggingFace Transformers:* [TensorFlow](https://www.tensorflow.org/): An end-to-end open source deep learning framework* [Transformers](https://huggingface.co/transformers/): An general-purpose open-sources library for transformers-based architectures## Getting Started#### Installation1. Create a virtual environment ```console python3 -m venv nlpipesenv source nlpipesenv/bin/activate ```2. Install the package ```console pip install nlpipes ```  #### TasksA model can be trained for a specific task by first loading a backbone model. The train command takesat minimum two parameters (X and Y), where X is a list of texts to train on and Y is the training target.The training target expect different formats, depending on what task you want to solve:##### Single Label Classification:Give one label name for each sequence of text in `X`: ```console  model = Model(&quot;albert-base-v2&quot;,                task='single-label-classification',                all_labels=[&quot;NEG&quot;, &quot;NEU&quot;, &quot;POS&quot;],               )    X = [&quot;This was bad.&quot;, &quot;This was great!&quot;]  Y = [&quot;NEG&quot;, &quot;POS&quot;]    model.train(X, Y) ```##### Multiple Label Classification:Give a list of class names for each sequence of text in `X`: ```console  model = Model(&quot;albert-base-v2&quot;,                task='multi-label-classification',                all_labels=all_labels,                )    X = [&quot;I want a refund!&quot;,       &quot;The bill I got is not correct and I also have technical issues&quot;,       &quot;All good&quot;]  Y = [       [&quot;billing&quot;],        [&quot;billing&quot;, &quot;tech support&quot;],       []      ]        model.train(X, Y) ```  ##### Aspect Based Classification:Give a list of lists of label lists (pairs) for each given text in `X`: ```console  model = Model(&quot;albert-base-v2&quot;,                task='class-label-classification',                all_labels=[&quot;NEG&quot;, &quot;NEU&quot;, &quot;POS&quot;],               )    X = [&quot;The room was nice.&quot;,       &quot;The food was great, but the staff was unfriendly.&quot;,       &quot;The room was horrible, but the waiters were welcoming&quot;]  Y = [       [[&quot;room&quot;, &quot;POS&quot;],       [[&quot;food&quot;, &quot;POS&quot;], [&quot;staff&quot;, &quot;NEG&quot;]],       [[&quot;room&quot;, &quot;NEG&quot;], [&quot;staff&quot;, &quot;POS&quot;]],      ]        model.train(X, Y) ```#### ExamplesHere are some examples on open datasets that show how to use `NLPipes` on different tasks:Name|Notebook|Description|Task|Size|Memory|Speed| ----|-----------|-----|---------|---------|---------|---------|GooglePlay Sentiment Detection|Available|Train a model to detect the sentiment polarity from the GooglePlay store |Single label classification|  |  |  StackOverflow tags Detection|Available|Train a model to detect tags from the StackOverFlow questions |Multiple label classification|  |  |Amazon Aspect Based Sentiment Detection|Available|Train a model to detect the aspect based sentiment polarity on Laptops Amazon reviews |Class label classification|  |  | ## Notices- `NLPipes` is still in its early stage. The library comes with no warranty and future releases could bring substantial API and behavior changes.</longdescription>
</pkgmetadata>