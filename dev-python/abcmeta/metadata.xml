<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># abcmeta[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/mortymacs/abcmeta/Python%20package)](https://github.com/mortymacs/abcmeta/actions/workflows/python-test.yml)[![PyPi version](https://badgen.net/pypi/v/abcmeta/)](https://pypi.org/project/abcmeta)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/abcmeta.svg)](https://pypi.python.org/pypi/abcmeta/)[![PyPI version fury.io](https://badge.fury.io/py/abcmeta.svg)](https://pypi.python.org/pypi/abcmeta/)[![PyPI download month](https://img.shields.io/pypi/dm/abcmeta.svg)](https://pypi.python.org/pypi/abcmeta/)Python meta class and abstract method library with restrictions.This library provides a restricted way to validate abstract methods.The Python's default abstract method library only validates the methodsthat exist in the derived classes and nothing else.What this library provides is apart from that validation it providesvalidations over the method's signature.All you need is to import `ABCMeta` and `abstractmethod` from this library.It works on both annotations and without annotations methods.### InstallationYou can install the package by `pip`:```bash$ pip install abcmeta```&gt; Note: abcmeta supports Python3.6+.### Quick start```pythonfrom typing import Dict, Textfrom abcmeta import ABC, abstractmethodclass Base(ABC):    @abstractmethod    def method_2(self, name: Text, age: int) -&gt; Dict[Text, Text]:        &quot;&quot;&quot;Abstract method.&quot;&quot;&quot;    @abstractmethod    def method_3(self, name, age):        &quot;&quot;&quot;Abstract method.&quot;&quot;&quot;class Drived(Base):    def method_2(self, name: Text, age: int) -&gt; Dict[Text, Text]:        return {&quot;name&quot;: &quot;test&quot;}    def method_3(self, name, age):        pass```If you put a different signature, it will raise an error with 'diff' format with hints about what you've missed:```pythonclass Drived(Base):    def method_2(self, name: Text, age: int) -&gt; List[Text]:        return {&quot;name&quot;: &quot;test&quot;}```And it will raise:```pythonTraceback (most recent call last):  File &quot;/Workspaces/test.py&quot;, line 41, in &lt;module&gt;    class Drived(Base):  File &quot;/usr/lib/python3.9/abc.py&quot;, line 85, in __new__    cls = super().__new__(mcls, name, bases, namespace, **kwargs)  File &quot;/abcmeta/__init__.py&quot;, line 179, in __init_subclass__    raise AttributeError(AttributeError: Signature of the derived method is not the same as parent class:- method_2(self, name: str, age: int) -&gt; Dict[str, str]?                                        ^ ^     -----+ method_2(self, name: str, age: int) -&gt; List[str]?                                        ^ ^Derived method expected to return in 'typing.Dict[str, str]' type, but returns 'typing.List[str]'```For different parameter names:```pythonclass Drived(Base):    def method_2(self, username: Text, age: int) -&gt; List[Text]:        return {&quot;name&quot;: &quot;test&quot;}```And it will raise:```pythonTraceback (most recent call last):  File &quot;/Workspaces/test.py&quot;, line 41, in &lt;module&gt;    class Drived(Base):  File &quot;/usr/lib/python3.9/abc.py&quot;, line 85, in __new__    cls = super().__new__(mcls, name, bases, namespace, **kwargs)  File &quot;/abcmeta/__init__.py&quot;, line 180, in __init_subclass__    raise AttributeError(AttributeError: Signature of the derived method is not the same as parent class:- method_2(self, name: str, age: int) -&gt; Dict[str, str]+ method_2(self, username: str, age: int) -&gt; Dict[str, str]?                ++++Derived method expected to get name paramter, but gets username```### IssueIf you're faced with a problem, please file an [issue](https://github.com/mortymacs/abcmeta/issues/new) on Github.### ContributeYou're always welcome to contribute to the project! Please file an issue and send your great PR.### LicensePlease read the [LICENSE](./LICENSE) file.</longdescription>
</pkgmetadata>