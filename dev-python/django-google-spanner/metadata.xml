<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Cloud Spanner support for Django================================|GA| |pypi| |versions|`Cloud Spanner`_ is the world's first fully managed relational database serviceto offer both strong consistency and horizontal scalability formission-critical online transaction processing (OLTP) applications. With CloudSpanner you enjoy all the traditional benefits of a relational database; butunlike any other relational database service, Cloud Spanner scales horizontallyto hundreds or thousands of servers to handle the biggest transactionalworkloads.- `Client Library Documentation`_- `Product Documentation`_.. |GA| image:: https://img.shields.io/badge/support-GA-gold.svg   :target: https://github.com/googleapis/google-cloud-python/blob/main/README.rst#general-availability.. |pypi| image:: https://img.shields.io/pypi/v/django-google-spanner.svg   :target: https://pypi.org/project/django-google-spanner/.. |versions| image:: https://img.shields.io/pypi/pyversions/django-google-spanner.svg   :target: https://pypi.org/project/django-google-spanner/.. _Cloud Spanner: https://cloud.google.com/spanner/.. _Client Library Documentation: https://googleapis.dev/python/django-google-spanner/latest/index.html.. _Product Documentation:  https://cloud.google.com/spanner/docsQuick Start-----------In order to use this library, you first need to go through the following steps:1. `Select or create a Cloud Platform project.`_2. `Enable billing for your project.`_3. `Enable the Google Cloud Spanner API.`_4. `Setup Authentication.`_.. _Select or create a Cloud Platform project.: https://console.cloud.google.com/project.. _Enable billing for your project.: https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project.. _Enable the Google Cloud Spanner API.:  https://cloud.google.com/spanner.. _Setup Authentication.: https://googleapis.dev/python/google-api-core/latest/auth.htmlThis package provides a `3rd-party database backend&lt;https://docs.djangoproject.com/en/2.2/ref/databases/#using-a-3rd-party-database-backend&gt;`__for using `Cloud Spanner &lt;https://cloud.google.com/spanner&gt;`__ with the `DjangoORM &lt;https://docs.djangoproject.com/en/2.2/topics/db/&gt;`__. It uses the `CloudSpanner Python client library &lt;https://github.com/googleapis/python-spanner&gt;`__under the hood.Installation------------Install this library in a `virtualenv`_ using pip. `virtualenv`_ is a tool tocreate isolated Python and Django environments. The basic problem it addresses is one ofdependencies and versions, and indirectly permissions.With `virtualenv`_, it's possible to install this library without needing systeminstall permissions, and without clashing with the installed systemdependencies... _`virtualenv`: https://virtualenv.pypa.io/en/latest/Supported versions~~~~~~~~~~~~~~~~~~The library supports `Django 2.2&lt;https://docs.djangoproject.com/en/2.2/&gt;`_, and `Django 3.2&lt;https://docs.djangoproject.com/en/3.2/&gt;`_.Both versions are long-term support (LTS) releases for the`Django project&lt;https://www.djangoproject.com/download/#supported-versions&gt;_`.The minimum required Python version is 3.6... code:: shell    pip3 install django==3.2Installing the package~~~~~~~~~~~~~~~~~~~~~~To install from PyPI:.. code:: shell    pip3 install django-google-spannerTo install from source:.. code:: shell    git clone git@github.com:googleapis/python-spanner-django.git    cd python-spanner-django    pip3 install -e .Creating a Cloud Spanner instance and database~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~If you don't already have a Cloud Spanner database, or want to start fromscratch for a new Django application, you can `create a new instance&lt;https://cloud.google.com/spanner/docs/getting-started/python#create_an_instance&gt;`__and `database&lt;https://cloud.google.com/spanner/docs/getting-started/python#create_a_database&gt;`__using the Google Cloud SDK:.. code:: shell    gcloud spanner instances create $INSTANCE --config=regional-us-central1 --description=&quot;New Django Instance&quot; --nodes=1    gcloud spanner databases create $DB --instance $INSTANCEConfiguring ``settings.py``~~~~~~~~~~~~~~~~~~~~~~~~~~~This package provides a Django application named ``django_spanner``. To use theCloud Spanner database backend, the application needs to installed andconfigured:-  Add ``django_spanner`` as the first entry in ``INSTALLED_APPS``:   .. code:: python       INSTALLED_APPS = [           'django_spanner',           ...       ]-  Edit the ``DATABASES`` setting to point to an existing Cloud Spanner database:   .. code:: python       DATABASES = {           'default': {               'ENGINE': 'django_spanner',               'PROJECT': '$PROJECT',               'INSTANCE': '$INSTANCE',               'NAME': '$DATABASE',           }       }Set credentials and project environment variables~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~You'll need to download a service account JSON key file and point to it using an environment variable:.. code:: shell    export GOOGLE_APPLICATION_CREDENTIALS=/path/to/keyfile.json    export GOOGLE_CLOUD_PROJECT=gcloud_projectApply the migrations~~~~~~~~~~~~~~~~~~~~Please run:.. code:: shell    $ python3 manage.py migrateThat'll take a while to run. After this you should be able to see the tables and indexes created in your Cloud Spanner console.Create a Django admin user~~~~~~~~~~~~~~~~~~~~~~~~~~~First you’ll need to create a user who can login to the admin site. Run the following command:.. code:: shell    $ python3 manage.py createsuperuserwhich will then produce a prompt which will allow you to create your super user.. code:: shell    Username: admin    Email address: admin@example.com    Password: **********    Password (again): **********    Superuser created successfully.Login as admin~~~~~~~~~~~~~~Now, run the server.. code:: shell    python3 manage.py runserverThen visit http://127.0.0.1:8000/admin/Create and register your first model~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Please follow the guides in https://docs.djangoproject.com/en/2.2/intro/tutorial02/#creating-modelsto create and register the model to the Django’s automatically-generated admin site.How it works------------Overall design~~~~~~~~~~~~~~.. figure:: https://raw.githubusercontent.com/googleapis/python-spanner-django/main/assets/overview.png   :alt: &quot;Overall Design&quot;Internals~~~~~~~~~.. figure:: https://raw.githubusercontent.com/googleapis/python-spanner-django/main/assets/internals.png   :alt: &quot;Internals&quot;Executing a query~~~~~~~~~~~~~~~~~Here is an example of how to add a row for Model Author, save it and later query it using Django.. code:: shell    &gt;&gt;&gt; author_kent = Author( first_name=&quot;Arthur&quot;, last_name=&quot;Kent&quot;, rating=Decimal(&quot;4.1&quot;),)    &gt;&gt;&gt; author_kent.save()    &gt;&gt;&gt; qs1 = Author.objects.all().values(&quot;first_name&quot;, &quot;last_name&quot;)How to contribute~~~~~~~~~~~~~~~~~Contributions to this library are always welcome and highly encouraged.See `CONTRIBUTING &lt;https://github.com/googleapis/python-spanner-django/blob/main/CONTRIBUTING.md&gt;`_ for more information on how to get started.Please note that this project is released with a Contributor Code of Conduct.By participating in this project you agree to abide by its terms. See the `Code of Conduct &lt;https://github.com/googleapis/python-spanner-django/blob/main/CODE_OF_CONDUCT.md&gt;`_ for more information.Limitations~~~~~~~~~~~Spanner has certain limitations of its own. The full set of limitations is documented`here &lt;https://cloud.google.com/spanner/quotas#schema_limits&gt;`__.It is recommended that you go through that list.Django spanner has a set of limitations as well, which you can find`here &lt;https://github.com/googleapis/python-spanner-django/blob/main/docs/limitations.rst&gt;`__.Features from spanner that are not supported in Django-spanner are listed `here &lt;https://github.com/googleapis/python-spanner-django/blob/main/docs/limitations-spanner.rst&gt;`__.</longdescription>
</pkgmetadata>