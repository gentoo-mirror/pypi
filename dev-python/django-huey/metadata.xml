<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription> [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) ![Version](https://img.shields.io/badge/version-1.1.2-informational.svg)# django-huey***This package is an extension of [huey](https://github.com/coleifer/huey) contrib djhuey package that allows users to manage multiple queues.## Compatible versions| Package     | Version     || ----------- | ----------- || Django      | 5.0         || Django      | 4.2         || Django      | 3.2         || huey        | 2.5         || huey        | 2.4         |## InstallationUsing pip package manager run:```pip install django-huey```Then, in your **settings.py** file add django_huey to the INSTALLED_APPS:```pythonINSTALLED_APPS = [...    'django_huey',]```## ConfigurationIn **settings.py** you must add the DJANGO_HUEY setting:```pythonDJANGO_HUEY = {    'default': 'first', #this name must match with any of the queues defined below.    'queues': {        'first': {#this name will be used in decorators below            'huey_class': 'huey.RedisHuey',              'name': 'first_tasks',              'consumer': {                'workers': 2,                'worker_type': 'thread',            },        },        'emails': {#this name will be used in decorators below            'huey_class': 'huey.RedisHuey',              'name': 'emails_tasks',              'consumer': {                'workers': 5,                'worker_type': 'thread',            },        }    }}```### Including queues from files*new in 1.1.0*You can also include a queue configuration from another file, located in one of your apps.Use django_huey.utils.include to do so:In **settings.py** you may have:```pythonDJANGO_HUEY = {    'default': 'first', #this name must match with any of the queues defined below.    'queues': {        # Your current queues definitions    }}# This is newfrom django_huey.utils import includeDJANGO_HUEY[&quot;queues&quot;].update(include(&quot;example_app.queues&quot;))```And in your `example_app.queues`:```pythonqueues = {    &quot;test&quot;: {        &quot;huey_class&quot;: &quot;huey.MemoryHuey&quot;,        &quot;results&quot;: True,        &quot;store_none&quot;: False,        &quot;immediate&quot;: False,        &quot;utc&quot;: True,        &quot;blocking&quot;: True,        &quot;consumer&quot;: {            &quot;workers&quot;: 1,            &quot;worker_type&quot;: &quot;thread&quot;,            &quot;initial_delay&quot;: 0.1,            &quot;backoff&quot;: 1.15,            &quot;max_delay&quot;: 10.0,            &quot;scheduler_interval&quot;: 60,            &quot;periodic&quot;: True,            &quot;check_worker_health&quot;: True,            &quot;health_check_interval&quot;: 300,        },    },}```Note: in your queues file, you should declare a variable called `queues`, so they can be included. If the variable doesn't exist, an `AttributeError` will be raised.### UsageNow you will be able to run multiple queues using:```python manage.py djangohuey --queue firstpython manage.py djangohuey --queue emails```Each queue must be run in a different terminal.If you defined a default queue, you can just run:```python manage.py djangohuey```And the default queue will be used.### Configuring tasksYou can use usual *huey* decorators to register tasks, but they must be imported from django_huey as shown below:```pythonfrom django_huey import db_task, task@task() #Use the default queue 'first'def some_func_that_uses_default_queue():    # perform some db task    pass@db_task(queue='first')def some_func():    # perform some db task    pass@task(queue='emails')def send_mails():# send some emails    pass```All the args and kwargs defined in huey decorators should work in the same way, if not, let us know.### Importing a huey instanceSometimes you'll need to import a huey instance in order to do some advanced configuration, for example, when using huey pipelines.You can do that by using the get_queue function from django_huey:```pythonfrom django_huey import get_queuefirst_q = get_queue('first')@first_q.task()def some_func():    pass```### Integration with huey monitorYou can use django-huey with [huey monitor](https://github.com/boxine/django-huey-monitor) using the following pattern:```pythonfrom django_huey import task, on_startup, signalfrom huey_monitor.tasks import startup_handler, store_signals# This setup must be done for each queue.signal(queue='emails')(store_signals)on_startup(queue='emails')(startup_handler)@task(queue='emails')def send_mails(parameter):# send some emails    pass```</longdescription>
</pkgmetadata>