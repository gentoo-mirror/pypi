<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- align a paragraph to the center --&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dgunning/edgartools&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/edgartools-logo.png&quot; alt=&quot;edgar-tools-logo&quot; height=&quot;80&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;The world's easiest, most powerful edgar library&lt;/p&gt;[![PyPI - Version](https://img.shields.io/pypi/v/edgartools.svg)](https://pypi.org/project/edgartools)![GitHub last commit](https://img.shields.io/github/last-commit/dgunning/edgartools)![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/dgunning/edgartools/python-hatch-workflow.yml)[![CodeFactor](https://www.codefactor.io/repository/github/dgunning/edgartools/badge)](https://www.codefactor.io/repository/github/dgunning/edgartools)[![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch)![GitHub](https://img.shields.io/github/license/dgunning/edgartools)-----&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dgunning/edgartools&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/edgar-demo.gif&quot; alt=&quot;edgardemo&quot; height=&quot;500&quot;&gt;&lt;/a&gt;&lt;/p&gt;# About the project**`edgartools`** is one of the nicest looking EDGAR libraries out there. It is also powerful and easy to use.You can query, filter and select any filing since 1994 and view the filing's html, text, xml or structured data.## Getting startedInstall using pip```bashpip install edgartools```Import and start using```pythonfrom edgar import *# Tell the SEC who you areset_identity(&quot;Michael Mccallum mike.mccalum@indigo.com&quot;)filings = get_filings()```# Concepts## How do I find a filing?Depends on what you know### A. I know the accession number```pythonfiling = find(&quot;0001065280-23-000273&quot;)```### B. I know the company ticker or cik```pythonfilings = Company(&quot;NFLX&quot;).get_filings(form=&quot;10-Q&quot;).latest(1)```### C. Show me a list of filings```pythonfilings = get_filings(form=&quot;10-Q&quot;)filing = filings[0]```## What can I do with a filingYou can **view** it in the terminal or **open** it in the browser, get the filing as **html**, **xml** or **text**, and download **attachments**. You can extract data from the filing into a data object.## What can I do with a companyYou can get the company's **filings**, **facts** and **financials**.# How to use edgartools| Task                                 | Code                                                  ||--------------------------------------|-------------------------------------------------------|| Set your EDGAR identity in Linux/Mac | `export EDGAR_IDENTITY=&quot;First Last email@domain.com&quot;` || Set your EDGAR identity in Windows   | `set EDGAR_IDENTITY=&quot;First Last email@domain.com&quot;`    || Set identity in Windows Powershell   | `$env:EDGAR_IDENTITY=&quot;First Last email@domain.com&quot;`   || Set identity in Python               | `set_identity(&quot;First Last email@domain.com&quot;)`         || Importing the library                | `from edgar import *`                                 |### Working with filings| Task                               | Code                                          ||------------------------------------|-----------------------------------------------|| Get filings for the year to date   | `filings = get_filings()`                     || Get only xbrl filings              | `filings = get_filings(index=&quot;xbrl&quot;)`         || Get filings for a specific year    | `filings = get_filings(2020)`                 || Get filings for a specific quarter | `filings = get_filings(2020, 1)`              || Get filings for multiple years     | `filings = get_filings([2020, 2021])`         || Get filigs for a range of years    | `filings = get_filings(year=range(2010, 2020)` || Get filings for a specific form    | `filings = get_filings(form=&quot;10-K&quot;)`          || Get filings for a list of forms    | `filings = get_filings(form=[&quot;10-K&quot;, &quot;10-Q&quot;])` || Show the next page of filings      | `filings.next()`                              || Show the previous page of filings  | `filings.prev()`                              || Get the first n filings            | `filings.head(20)`                            || Get the last n filings             | `filings.tail(20)`                            || Get the latest n filings by date   | `filings.latest(20)`                          || Get a random sample of the filings | `filings.sample(20)`                          || Filter filings on a date           | `filings = filings.filter(date=&quot;2020-01-01&quot;)` || Filter filings between dates       | `filings.filter(date=&quot;2020-01-01:2020-03-01&quot;)` || Filter filings before a date       | `filings.filter(date=&quot;:2020-03-01&quot;)`          |  | Filter filings after a date        | `filings.filter(date=&quot;2020-03-01:&quot;)`          || Get filings as a pandas dataframe  | `filings.to_pandas()`                         |### Working with a filing| Task                                      | Code                                                      ||-------------------------------------------|-----------------------------------------------------------|| Get a single filing                       | `filing = filings[3]`                                     || Get a filing by accession number          | `filing = get_by_accession_number(&quot;0000320193-20-34576&quot;)` || Get the filing homepage                   | `filing.homepage`                                         || Open a filing in the browser              | `filing.open()`                                           || Open the filing homepage in the browser   | `filing.homepage.open()`                                  || View the filing in the terminal           | `filing.view()`                                           || Get the html of the filing document       | `filing.html()`                                           || Get the XBRL of the filing document       | `filing.xbrl()`                                           || Get the filing document as markdown       | `filing.markdown()`                                       || Get the full submission text of a filing  | `filing.text()`                                           || Get and parse the data object of a filing | `filing.obj()`                                            || Get the filing attachments                | `filing.attachments`                                      || Get a single attachment                   | `attachment = filing.attachments[0]`                      || Open an attachment in the browser         | `attachment.open()`                                       || Download an attachment                    | `content = attachment.download()`                         |### Working with a company| Task                                     | Code                                                          ||------------------------------------------|---------------------------------------------------------------|| Get a company by ticker                  | `company = Company(&quot;AAPL&quot;)`                                   || Get a company by CIK                     | `company = Company(&quot;0000320193&quot;)`                             || Get company facts                        | `company.get_facts()`                                         || Get company facts as a pandas dataframe  | `company.get_facts().to_pandas()`                             || Get company filings                      | `company.get_filings()`                                       || Get company filings by form              | `company.get_filings(form=&quot;10-K&quot;)`                            || Get a company filing by accession_number | `company.get_filing(accession_number=&quot;0000320193-21-000139&quot;)` || Get the company's financials             | `company.financials`                                          || Get the company's balance sheet          | `company.financials.balance_sheet`                            || Get the company's cash flow statement    | `company.financials.cash_flow_statement`                      |# Installation```consolepip install edgartools```# Usage## Set your Edgar user identityBefore you can access the SEC Edgar API you need to set the identity that you will use to access Edgar.This is usually your name and email, or a company name and email.```bashSample Company Name AdminContact@&lt;sample company domain&gt;.com```The user identity is sent in the User-Agent string and the Edgar API will refuse to respond to your request without it.EdgarTools will look for an environment variable called `EDGAR_IDENTITY` and use that in each request.So, you need to set this environment variable before using it.### Setting EDGAR_IDENTITY in Linux/Mac```bashexport EDGAR_IDENTITY=&quot;Michael Mccallum mcalum@gmail.com&quot;```### Setting EDGAR_IDENTITY in Windows Powershell```bash $Env:EDGAR_IDENTITY=&quot;Michael Mccallum mcalum@gmail.com&quot;```Alternatively, you can call `set_identity` which does the same thing.```pythonfrom edgar import set_identityset_identity(&quot;Michael Mccallum mcalum@gmail.com&quot;)```For more detail see https://www.sec.gov/os/accessing-edgar-data## Usage### Importing edgar```pythonfrom edgar import *```### Getting filings```python# Get filings for the current year and quarterfilings = get_filings() # Get filings for 2022filings = get_filings(2022)                 # OR filings = get_filings(year=2022)# Get filings for 2022 quarter 4filings = get_filings(2022, 4)              # OR filings = get_filings(year=2022, quarter=4)# Get filings for 2020, 2021 and 2022filings = get_filings([2020, 2021, 2022])   # OR filings = get_filings(year=range(2020, 2023))# Get filings for 2020 quarters 1 and 2filings = get_filings(2020, quarter=[1,2])```![Get filings](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/get_filings.jpg)### Filtering filings```python# Filter for form Dfilings.filter(form=&quot;D&quot;)# Filter for form 10-K and 10-Q filings.filter(form=[&quot;10-K&quot;, &quot;10-Q&quot;])# When you filter by form e.g. &quot;D&quot; it includes amendments e.g. &quot;D\A&quot;. You can omit amendmentsfilings.filter(form=&quot;D&quot;, amendments=False)# Filter by filing_date. date and filing_date mean the same thing# Get all filings on 2023-02-23filings.filter(date=&quot;2023-02-23&quot;)                      # ORfilings.filter(filing_date=&quot;2023-02-23&quot;)# Filter to get all filings between 2023-01-23 and 2023-02-23     filings.filter(date=&quot;2023-01-23:2023-02-23&quot;)# Filter to get all filings since 2023-01-23   filings.filter(date=&quot;2023-01-23&quot;)# Filter to get all filings before 2023-02-23     filings.filter(date=&quot;:2023-02-23&quot;)```### Combining getting and filtering```pythonget_filings(2022, form=&quot;D&quot;)```### Convert the filings to a pandas dataframeThe filings data is stored in the `Filings` class as a `pyarrow.Table`. You can get the data as a pandas dataframe using`to_pandas````pythondf = filings.to_pandas()```## Navigating filingsThe Filings object allows you to navigate through filings using `filings.next()` and `filings.prev()`. This shows you pages of the data - the page size is about 50. ```python# To see the next page of datafilings.next()# To see the previous pagefilings.prev()# To see the current pagefilings.current()```![Get next filings](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/filings_next.jpg)## Getting the latest filingsYou can get the latest **n** filings by filing_date from a filings using `filings.latest()`.If you provide the parameter `n` it will return the latest `n` filings.```pythonfiling = filings.latest(n=5)filing```![Latest filings](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/latest_filings.jpg)If you omit this parameter, or set `n=1` it will return a single `Filings object.```pythonfiling = filings.latest()filing```![Latest filing](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/latest_filing.jpg)## Filtering filingsYou can filter the filings object using te `filter()` function. This allows you to filterby filing date, or by form.### Filtering filings by dateTo filter by filing date specify the filing date in **YYYY-MM-DD** format e.g. **2022-01-24**(Note the parameters `date` and `filing_date` are equivalent aliases for each other)```pythonfilings.filter(date=&quot;2021-01-24&quot;) # or filings.filter(filing_date=&quot;2021-01-24&quot;)```You can specify a filing date range using the colon```pythonfilings.filter(date=&quot;2021-01-12:2021-02-28&quot;) ```To filter by dates before a specified date use `:YYYY-MM-DD'```pythonfilings.filter(date=&quot;:2021-02-28&quot;) ```To filter by dates after a specified date use `YYYY-MM-DD:'```pythonfilings.filter(date=&quot;2021-02-28:&quot;) ```### Filtering filings by formYou can filter filings by form using the `form` parameter. ```pythonfilings.filter(form=&quot;10-K&quot;) ```To filter by form e.g. **10-K** and include form amendments use `amendments = True`. ```pythonfilings.filter(form=&quot;10-K&quot;, amendments=True) ```![Filter with amendments](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/filter_amendments.jpg)## Working with a single filingYou can get a single filing from the filings using the bracket operator `[]`, specifying the index of the filing. The index is the value displayed in the leftmostposition in the filings table. For example, to get the **10-Q** for **Costco** in the table aboveuse `filings[3]````pythonfiling = filings[3]```![Costco 10Q filing](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/costco_10Q.jpg)### View the filing homepageYou can view the filing homepage in the terminal using `filing.homepage`This gives you access to the `FilingHomepage` class that you can use to list all the documentsand datafiles on the filing.```pythonfiling.homepage```![Filing homepage](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/filing_homepage.jpg)### Open a filingYou can open the filing in your browser using `filing.open()`. This will work on environments with access to the browser, will probably not work on a remote server.```pythonfiling.open()```### Open the Filing HomepageYou can open the filing homepage in the browser using `filing.homepage.open()`.```pythonfiling.homepage.open()```### View the filing as MarkdownYou can view the filing's HTML content as markdown in the console using `view()`. It works for all filing typesbut can be a little slow for filings with large HTML files```pythonfiling.view()```### Get the filing's htmlYou can get the html content of the filing using`.html()````pythonfiling.html()```### Get the filing's html as MarkdownYou can get the html content as markdown using`.markdown()````pythonfiling.markdown()```## Viewing and downloading attachmentsEvery filing has a list of attachments. You can view the attachments using `filing.attachments````python# View the attachmentsfiling.attachments```![Filing attachments](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/filing_attachments.png)You can access each attachment using the bracket operator `[]` and the index of the attachment.    ```python# Get the first attachmentattachment = filing.attachments[0]```![Filing attachments](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/filing_attachment.png)You can download the attachment using `attachment.download()`. This will download the attachment to string or bytes in memory. ## Automatic parsing of filing dataNow the reason you may want to download attachments is to get information contained in data files.For example, **13F-HR** filings have attached infotable.xml files containing data from the holding report for that filing.Fortunately, the library handles this for you. If you call `filing.obj()` it will automatically download and parse the data filesinto a data object, for several different form types. Currently, the following forms are supported:| Form                       | Data Object            | Description                           ||----------------------------|------------------------|---------------------------------------|| 10-K                       | `TenK`                 | Annual report                         || 10-Q                       | `TenQ`                 | Quarterly report                      || 8-K                        | `EightK`               | Current report                        || MA-I                       | `MunicipalAdvisorForm` | Municipal advisor initial filing      || Form 144                   | `Form144`              | Notice of proposed sale of securities || D                          | `Offering`             | Offerings                             || 3,4,5                      | `Ownership`            | Ownership reports                     || 13F-HR                     | `ThirteenF`             | 13F Holdings Report                   || NPORT-P                    | `FundReport`           | Fund Report                           || EFFECT                     | `Effect`               | Notice of Effectiveness               || And other filing with XBRL | `FilingXbrl`            ||For example, to get the data object for a **13F-HR** filing you can do the following:```pythonfilings = get_filings(form=&quot;13F-HR&quot;)filing = filings[0]thirteenf = filing.obj()```![Filing attachments](docs/images/thirteenF.png)If you call `obj()` on a filing that does not have a data file, then it will return `None`.## Working with XBRL filingsSome filings are in **XBRL (eXtensible Business Markup Language)** format. These are mainly the newer filings, as the SEC has started requiring this for newer filings.If a filing is in XBRL format then it opens up a lot more ways to get structured data about that specific filing and also about the company referred to in that filing.The `Filing` class has an `xbrl` function that will download, parse and structure the filing's XBRL document if one exists.If it does not exist, then `filing.xbrl()` will return `None`.The function `filing.xbrl()` returns a `FilingXbrl` instance, which wraps the data, and provides convenientways of working with the xbrl data.```pythonfiling_xbrl = filing.xbrl()```![Filing homapage](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/10Q_xbrl.jpg)## Using the Company APIWith the company API you find a company using the **cik** or **ticker**. From the company you can access all their historical **filings**,and a dataset of the company **facts**.The SEC's company API also supplies a lot more details about a company including industry, the SEC filer type,the mailing and business address and much more.### Find a company using the cikThe **cik** is the id that uniquely identifies a company at the SEC.It is a number, but is sometimes shown in SEC Edgar resources as a string padded with leading zero's.For the edgar client API, just use the numbers and omit the leading zeroes.```pythoncompany = Company(1324424)```![expe](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/expe.png)### Find a company using tickerYou can get a company using a ticker e.g. **SNOW**. This will do a lookup for the company cik using the ticker, then load the company using the cik.This makes it two calls versus one for the cik company lookup, but is sometimes more convenient since tickers are easier to remember that ciks.Note that some companies have multiple tickers, so you technically cannot get SEC filings for a ticker.You instead get the SEC filings for the company to which the ticker belongs.The ticker is case-insensitive so you can use `Company(&quot;snow&quot;)`or `Company(&quot;SNOW&quot;)````pythonsnow = Company(&quot;snow&quot;)```![snow](https://raw.githubusercontent.com/dgunning/edgartools/main/docs/images/snow.jpg)### ```pythonCompany(1832950)```### Get filings for a companyTo get the company's filings use `get_filings()`. This gets all the company's filings that are available from the Edgar submissions endpoint.```pythoncompany.get_filings()```### Filtering filingsYou can filter the company filings using a number of different parameters.```pythonclass CompanyFilings:        ...        def get_filings(self,                    *,                    form: str | List = None,                    accession_number: str | List = None,                    file_number: str | List = None,                    is_xbrl: bool = None,                    is_inline_xbrl: bool = None                    ):        &quot;&quot;&quot;        Get the company's filings and optionally filter by multiple criteria        :param form: The form as a string e.g. '10-K' or List of strings ['10-Q', '10-K']        :param accession_number: The accession number that uniquely identifies an SEC filing e.g. 0001640147-22-000100        :param file_number: The file number e.g. 001-39504        :param is_xbrl: Whether the filing is xbrl        :param is_inline_xbrl: Whether the filing is inline_xbrl        :return: The CompanyFiling instance with the filings that match the filters        &quot;&quot;&quot;```#### The CompanyFilings classThe result of `get_filings()` is a `CompanyFilings` class. This class contains a pyarrow table with the filingsand provides convenient functions for working with filings.You can access the underlying pyarrow `Table` using the `.data` property```pythonfilings = company.get_filings()# Get the underlying Tabledata: pa.Table = filings.data```#### Get a filing by indexTo access a filing in the CompanyFilings use the bracket `[]` notation e.g. `filings[2]````pythonfilings[2]```#### Get the latest filingThe `CompanyFilings` class has a `latest` function that will return the latest `Filing`. So, to get the latest **10-Q** filing, you do the following```python# Latest filing makes sense if you filter by form  type e.g. 10-Qsnow_10Qs = snow.get_filings(form='10-Q')latest_10Q = snow_10Qs.latest()# Or chain the function callssnow.get_filings(form='10-Q').latest()```### Get company factsFacts are an interesting and important dataset about a company accumlated from data the company provides to the SEC.Company facts are available for a company on the Company Facts`f&quot;https://data.sec.gov/api/xbrl/companyfacts/CIK{cik:010}.json&quot;`It is a JSON endpoint and `edgartools` parses the JSON into a structured dataset - a `pyarrow.Table`.#### Getting facts for a companyTo get company facts, first get the company, then call `company.get_facts()````pythoncompany = Company(&quot;SNOW&quot;)company_facts = company.get_facts()```The result is a `CompanyFacts` object which wraps the underlying facts and provides convenient ways of workingwith the facts data. To get access to the underyling data use the `facts` property.You can get the facts as a pandas dataframe by calling `to_pandas````pythondf = company_facts.to_pandas()```Facts differ among companies. To see what facts are available you can use the `facts_meta` property.# ContributingContributions are welcome! We would love to hear your thoughts on how this library could be better at working with SEC Edgar.## Reporting IssuesWe use GitHub issues to track public bugs. Report a bug by [opening a new issue](https://github.com/dgunning/edgartools/issues); it's that easy!## Making code changes- Fork the repo and create your branch from master.- If you've added code that should be tested, add tests.- If you've changed APIs, update the documentation.- Ensure the test suite passes.- Make sure your code lints.- Issue that pull request!# License`edgartools` is distributed under the terms of the [MIT](https://spdx.org/licenses/MIT.html) license.## Contact[LinkedIn](https://www.linkedin.com/in/dwight-gunning-860124/)## Supporters[![Stargazers repo roster for @dgunning/edgartools](https://reporoster.com/stars/dgunning/edgartools)](https://github.com/dgunning/edgartools/stargazers)[![Forkers repo roster for @dgunning/edgartools](https://reporoster.com/forks/dgunning/edgartools)](https://github.com/dgunning/edgartools/network/members)</longdescription>
</pkgmetadata>