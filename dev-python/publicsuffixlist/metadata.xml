<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>publicsuffixlist===[Public Suffix List](https://publicsuffix.org/) parser implementation for Python 2.6+/3.x.- Compliant with [TEST DATA](https://raw.githubusercontent.com/publicsuffix/list/master/tests/test_psl.txt)- Support IDN (unicode or punycoded).- Support Python2.6+ and Python 3.x- Shipped with built-in PSL and the updater script.- Written in Pure Python. No library dependencies.[![Build Status](https://app.travis-ci.com/ko-zu/psl.svg?branch=master)](https://app.travis-ci.com/ko-zu/psl)[![PyPI version](https://badge.fury.io/py/publicsuffixlist.svg)](https://badge.fury.io/py/publicsuffixlist)[![Downloads](http://pepy.tech/badge/publicsuffixlist)](http://pepy.tech/project/publicsuffixlist)Install===`publicsuffixlist` can be installed via `pip` or `pip3`.```$ sudo pip install publicsuffixlist```If you are in a bit old distributions (RHEL/CentOS6.x), you may need to update `pip` itself before install.```$ sudo pip install -U pip```Usage===```pythonfrom publicsuffixlist import PublicSuffixListpsl = PublicSuffixList()# uses built-in PSL filepsl.publicsuffix(&quot;www.example.com&quot;)   # &quot;com&quot;# longest public suffix partpsl.privatesuffix(&quot;www.example.com&quot;)  # &quot;example.com&quot;# shortest domain assigned for a registrantpsl.privatesuffix(&quot;com&quot;) # None# None if no private (non-public) part foundpsl.publicsuffix(&quot;www.example.unknownnewtld&quot;) # &quot;unknownnewtld&quot;# new TLDs are valid public suffix by defaultpsl.publicsuffix(u&quot;www.example.香港&quot;)   # u&quot;香港&quot;# accept unicodepsl.publicsuffix(&quot;www.example.xn--j6w193g&quot;) # &quot;xn--j6w193g&quot;# accept punycoded IDNs by default```Latest PSL can be passed as a file like line-iterable object.```pythonwith open(&quot;latest_psl.dat&quot;, &quot;rb&quot;) as f:    psl = PublicSuffixList(f)```Works with both Python 2.x and 3.x.```$ python2 setup.py test$ python3 setup.py test```Drop-in compatibility code to replace [publicsuffix](https://pypi.org/project/publicsuffix/)```python# from publicsuffix import PublicSuffixListfrom publicsuffixlist.compat import PublicSuffixListpsl = PublicSuffixList()psl.suffix(&quot;www.example.com&quot;)   # return &quot;example.com&quot;psl.suffix(&quot;com&quot;)               # return &quot;&quot; (as str, not None)```Some convenient methods available.```pythonpsl.is_private(&quot;example.com&quot;)  # Truepsl.privateparts(&quot;aaa.www.example.com&quot;) # (&quot;aaa&quot;, &quot;www&quot;, &quot;example.com&quot;)psl.subdomain(&quot;aaa.www.example.com&quot;, depth=1) # &quot;www.example.com&quot;```Limitation===`publicsuffixlist` do NOT provide domain name validation.In DNS protocol, most of 8-bit characters are acceptable label of domain name. ICANN compliant registries do not accept domain names that have `_` (underscore) but hostname may have. DMARC records, for example.Users need to confirm the input is valid based on the users' context.Partially encoded (Unicode-mixed) Punycode is not supported because of very slow Punycode en/decoding and unpredictable encoding of results.If you are not sure the input is valid Punycode or not, you should do `unknowndomain.encode(&quot;idna&quot;)` which is idempotence.ICANN and private suffixes===The public suffix list contains both suffixes for ICANN domains and private suffixes. Using the flag `only_icann` the private suffixes can be deactivated:```&gt;&gt;&gt; psl = PublicSuffixList()&gt;&gt;&gt; psl.publicsuffix(&quot;example.priv.at&quot;)'priv.at'&gt;&gt;&gt; psl = PublicSuffixList(only_icann=True)&gt;&gt;&gt; psl.publicsuffix(&quot;example.priv.at&quot;)'at'```License===- This module is licensed under Mozilla Public License 2.0.- Public Suffix List maintained by Mozilla Foundation is licensed under Mozilla Public License 2.0.- PSL testcase dataset is public domain (CC0).Source / Link===- Git repository on GitHub (https://github.com/ko-zu/psl)- PyPI (https://pypi.org/project/publicsuffixlist/)</longdescription>
</pkgmetadata>