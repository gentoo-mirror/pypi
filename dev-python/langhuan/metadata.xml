<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># LangHuAn&gt; **Lang**uage **Hu**man **An**notations, a frontend for tagging AI project labels, drived by pandas dataframe data.&gt; From Chinese word **ÁêÖÂ¨õ[langhuan]** (Legendary realm where god curates books)Here's a [5 minutes youtube video](https://www.youtube.com/watch?v=Nwh6roiX_9I) explaining how langhuan works[![Introduction Video](https://raw.githubusercontent.com/raynardj/langhuan/main/docs/imgs/ner1.jpg)](https://www.youtube.com/watch?v=Nwh6roiX_9I)## Installation```shellpip install langhuan```## Minimun configuration walk through&gt; langhuan start a flask application from **pandas dataframe** üêº !### Simplest configuration for **NER** task üöÄ```pythonfrom langhuan import NERTaskapp = NERTask.from_df(    df, text_col=&quot;description&quot;,    options=[&quot;institution&quot;, &quot;company&quot;, &quot;name&quot;])app.run(&quot;0.0.0.0&quot;, port=5000)```### Simplest configuration for **Classify** task üöÄ```pythonfrom langhuan import ClassifyTaskapp = ClassifyTask.from_df(    df, text_col=&quot;comment&quot;,    options=[&quot;positive&quot;, &quot;negative&quot;, &quot;unbiased&quot;, &quot;not sure&quot;])app.run(&quot;0.0.0.0&quot;, port=5000)```![classification image](https://raw.githubusercontent.com/raynardj/langhuan/main/docs/imgs/classify1.jpg)## Frontend&gt; You can visit following pages for this app.### Tagging```http://[ip]:[port]/``` is for our hard working taggers to visit.### Admin```http://[ip]:[port]/admin``` is a page where you can üëÆüèΩ‚ôÇÔ∏è:* See the progress of each user.* Force save the progress, (or it will only save according to ```save_frequency```, default 42 entries)* Download the tagged entries## Advanced settings#### ValidationYou can set minimun verification number: ```cross_verify_num```, aka, how each entry will be validated, default is 1If you set ```cross_verify_num``` to 2, and you have 5 taggers, each entry will be seen by 2 taggers```pythonapp = ClassifyTask.from_df(    df, text_col=&quot;comment&quot;,    options=[&quot;positive&quot;, &quot;negative&quot;, &quot;unbiased&quot;, &quot;not sure&quot;],    cross_verify_num=2,)```#### Preset the taggingYou can set a column in dataframe, eg. called ```guessed_tags```, to preset the tagging result.Each cell can contain the format of tagging result, eg. ```json{&quot;tags&quot;:[    {&quot;text&quot;: &quot;Genomicare Bio Tech&quot;, &quot;offset&quot;:32, &quot;label&quot;:&quot;company&quot;},    {&quot;text&quot;: &quot;East China University of Politic Science &amp; Law&quot;, &quot;offset&quot;:96, &quot;label&quot;:&quot;company&quot;},    ]}```Then you can run the app with preset tag column```pythonapp = NERTask.from_df(    df, text_col=&quot;description&quot;,    options=[&quot;institution&quot;, &quot;company&quot;, &quot;name&quot;],    preset_tag_col=&quot;guessed_tags&quot;)app.run(&quot;0.0.0.0&quot;, port=5000)```#### Order strategyThe order of which text got tagged first is according to order_strategy.Default is set to ```&quot;forward_match&quot;```, you can try ```pincer``` or ```trident```![order strategies](https://raw.githubusercontent.com/raynardj/langhuan/main/docs/imgs/strategies.jpg)Assume the order_by_column is set to the prediction of last batch of deep learning model:- trident means the taggers tag the most confident positive, most confident negative, most unsure ones first.#### Load HistoryIf your service stopped, you can recover the progress from cache.Previous cache will be at ```$HOME/.cache/langhuan/{task_name}```You can change the save_frequency to suit your task, default is 42 entries.```pythonapp = NERTask.from_df(    df, text_col=&quot;description&quot;,    options=[&quot;institution&quot;, &quot;company&quot;, &quot;name&quot;],    save_frequency=128,    load_history=True,    task_name=&quot;task_NER_210123_110327&quot;    )```#### Admin Control&gt; This application assumes internal use within organization, hence the mininum security. If you set admin_control, all the admin related page will require ```adminkey```, the key will appear in the console prompt```pythonapp = NERTask.from_df(    df, text_col=&quot;description&quot;,    options=[&quot;institution&quot;, &quot;company&quot;, &quot;name&quot;],    admin_control=True,    )```#### From downloaded data =&gt; pytorch dataset&gt; For downloaded NER data tags, you can create a dataloader with the json file automatically:* [pytorch + huggingface tokenizer](https://raynardj.github.io/langhuan/docs/loader)* tensorflow + huggingface tokenizer, development pending#### Gunicorn supportThis is a **light weight** solution. When move things to gunicorn, multithreads is acceptable, but multiworkers will cause chaos.```shellgunicorn --workers=1 --threads=5 app:app```## Compatibility üíçWell, this library hasn't been tested vigorously against many browsers with many versions, so far* compatible with chrome, firefox, safari if version not too old.</longdescription>
</pkgmetadata>