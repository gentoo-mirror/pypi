<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># spatial-image[![Test](https://github.com/spatial-image/spatial-image/actions/workflows/test.yml/badge.svg)](https://github.com/spatial-image/spatial-image/actions/workflows/test.yml)[![DOI](https://zenodo.org/badge/234798632.svg)](https://zenodo.org/badge/latestdoi/234798632)A multi-dimensional spatial image data structure for scientific Python.To facilitate:- Multi-scale processing and analysis- Registration- Resampling- Subregion parallel processing- Coupling with meshes, point sets, and annotationswith scientific images, which are typically multi-dimensional with anisotropicsampling, this package provides a spatial-image data structure. In addition toan N-dimensional array of pixel values, spatial metadata defines the locationof the pixel sampling grid in space time. We also label the array dimensions.This metadata is easily utilized and elegantly carried through imageprocessing pipelines.This package defines spatial image metadata, provides a function,`is_spatial_image`, to verify the expected behavior of a spatial imageinstance, and provides a reference function, `to_spatial_image` to convert anarray-like, e.g. a [NumPyndarray](https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html)or a [Dask array](https://docs.dask.org/en/latest/array.html), to a spatialimage.The spatial-image data structure is implemented with [Xarray], a library forN-D labeled arrays and datasets in Python. The Xarray library is well-tested,relatively mature, and integrates well with scientific Python ecosystemtooling. The Xarray library leverages [NumPy](https://numpy.org/) and[pandas](https://pandas.pydata.org/) for labeled array indexing, integrateswell with machine-learning libraries utilizing the[scikit-learn](https://scikit-learn.org/) interface, integrates with[Dask](https://dask.org) for distributed computing, and[zarr](https://zarr.readthedocs.io/) for serialization.In essence, a spatial image is an[`xarray.DataArray`](https://xarray.pydata.org/en/stable/data-structures.html#dataarray)with a defined set of [`dims`] labels, `{'c', 'x', 'y', 'z', 't'}`,constraints on the [`coords`], to enforce uniform spacing in a givendirection, and defined set of additional metadata [`attrs`].## Installation```pip install spatial-image```## Definitions### Data DimensionsA spatial image's xarray [`dims`] belong to the set: `{'c', 'x', 'y', 'z', 't'}`. These dimensions are:&lt;dl&gt;  &lt;dt&gt;c&lt;/dt&gt;  &lt;dd&gt;Component / channel dimension.&lt;/dd&gt;  &lt;dt&gt;x&lt;/dt&gt;  &lt;dd&gt;First spatial dimension.&lt;/dd&gt;  &lt;dt&gt;y&lt;/dt&gt;  &lt;dd&gt;Second spatial dimension.&lt;/dd&gt;  &lt;dt&gt;z&lt;/dt&gt;  &lt;dd&gt;Third spatial dimension.&lt;/dd&gt;  &lt;dt&gt;t&lt;/dt&gt;  &lt;dd&gt;Time dimension.&lt;/dd&gt;&lt;/dl&gt;### Axis attributesEach `dim` has an axis with additional attributes to describe the dimension.&lt;dl&gt;  &lt;dt&gt;long_name&lt;/dt&gt;  &lt;dd&gt;A descriptive name for the axis, e.g. &lt;i&gt;anterior-posterior&lt;/i&gt; or &lt;i&gt;x-axis&lt;/i&gt;. Defaults to the dim name.&lt;/dd&gt;  &lt;dt&gt;units&lt;/dt&gt;  &lt;dd&gt;Units for the axis, e.g. &lt;i&gt;millimeters&lt;/i&gt;. Defaults to the empty string.&lt;/dd&gt;&lt;/dl&gt;### CoordinatesA spatial image's Xarray [`coords`] specify the spatial location of pixels inthe image for the `'x'`, `'y'`, and `'z'` data dimensions.  For the `'c'` and`'t'` data dimensions, component identities and timestamps can optionallybe provided.Spatial coordinates define the position *in the coordinate reference frame ofthe image*. In general, the image's coordinate reference frame may bedifferent from the world coordinate reference frame.Pixels are sampled on a uniform, possibly anisotropic, spatial grid.  Spatialcoordinates have a 64-bit float type. The difference between adjacentcoordinates, i.e. the pixel *spacing*, for a dimension must be uniform. Thefirst coordinate value defines the *origin* or *offset* of an image.The component or channel dimension coordinates defaults to a sequence ofinteger identifiers but can be strings describing the channels, e.g. ['r','g', 'b'].The time coordinates can have integer, float, or [`datetime64`] type.### Motivational Notes* Image-axis-aligned Cartesian coordinate reference frames enable Pythonic subscripting in processing pipelines on `xarray.DataArray`'s. When indexing with slices, the same slices are applied to the multi-dimensional pixel array as the 1-D coordinate arrays, and the result is valid.* Regular coordinate spacing enables processing optimizations, both algorithmically and computationally.## DevelopmentContributions are welcome and appreciated.To run the test suite:```git clone https://github.com/spatial-image/spatial-imagecd spatial-imagepip install -e &quot;.[test]&quot;pytest```[Xarray]: https://xarray.pydata.org/en/stable/[`dims`]: https://xarray.pydata.org/en/stable/terminology.html[`coords`]: https://xarray.pydata.org/en/stable/terminology.html[`attrs`]: https://xarray.pydata.org/en/stable/data-structures.html[`datetime64`]: https://docs.scipy.org/doc/numpy/reference/arrays.datetime.html</longdescription>
</pkgmetadata>