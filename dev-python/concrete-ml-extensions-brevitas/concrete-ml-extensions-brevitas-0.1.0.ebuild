# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=wheel

inherit python-r1 gs-pypi

DESCRIPTION="Quantization-aware training in PyTorch [wheel]"

HOMEPAGE="https://github.com/zama-ai/brevitas"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/py3/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}-py3-none-any.whl"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}-py3-none-any.whl"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="+bin-wheel export finn_integration_ge_pt150 finn_integration_lt_pt150 hadamard notebook ort_integration stt test tts vision"
DEPENDENCIES="dev-python/torch[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/setuptools[${PYTHON_USEDEP}]
	dev-python/future-annotations[${PYTHON_USEDEP}]
	dev-python/dependencies[${PYTHON_USEDEP}]
	>=dev-python/typing-extensions-3.7.4[${PYTHON_USEDEP}]
	export? ( dev-python/onnx[${PYTHON_USEDEP}] )
	export? ( dev-python/onnxoptimizer[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/torch[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/bitstring[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/toposort[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/qonnx[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/onnxruntime[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/onnx[${PYTHON_USEDEP}] )
	finn_integration_ge_pt150? ( dev-python/onnxoptimizer[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/torch[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/bitstring[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/finn-base[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/toposort[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/onnxruntime[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/onnxoptimizer[${PYTHON_USEDEP}] )
	finn_integration_lt_pt150? ( dev-python/onnx[${PYTHON_USEDEP}] )
	hadamard? ( dev-python/scipy[${PYTHON_USEDEP}] )
	notebook? ( dev-python/jupyter[${PYTHON_USEDEP}] )
	notebook? ( dev-python/nbmake[${PYTHON_USEDEP}] )
	ort_integration? ( dev-python/onnxruntime[${PYTHON_USEDEP}] )
	ort_integration? ( dev-python/onnx[${PYTHON_USEDEP}] )
	ort_integration? ( dev-python/onnxoptimizer[${PYTHON_USEDEP}] )
	stt? ( >=dev-python/pillow-4.3.0[${PYTHON_USEDEP}] )
	stt? ( dev-python/ruamel-yaml[${PYTHON_USEDEP}] )
	stt? ( dev-python/requests[${PYTHON_USEDEP}] )
	stt? ( dev-python/librosa[${PYTHON_USEDEP}] )
	stt? ( dev-python/inflect[${PYTHON_USEDEP}] )
	stt? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	stt? ( dev-python/torch-stft[${PYTHON_USEDEP}] )
	stt? ( dev-python/sox[${PYTHON_USEDEP}] )
	stt? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	stt? ( dev-python/soundfile[${PYTHON_USEDEP}] )
	stt? ( dev-python/numba[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cases[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-mock[${PYTHON_USEDEP}] )
	test? ( dev-python/mock[${PYTHON_USEDEP}] )
	test? ( dev-python/hypothesis[${PYTHON_USEDEP}] )
	test? ( dev-python/scipy[${PYTHON_USEDEP}] )
	test? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	tts? ( dev-python/soundfile[${PYTHON_USEDEP}] )
	tts? ( dev-python/librosa[${PYTHON_USEDEP}] )
	tts? ( dev-python/numpy[${PYTHON_USEDEP}] )
	tts? ( dev-python/scipy[${PYTHON_USEDEP}] )
	tts? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	tts? ( dev-python/pillow[${PYTHON_USEDEP}] )
	tts? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	vision? ( dev-python/torchvision[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
