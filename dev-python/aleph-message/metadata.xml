<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Aleph.im Message SpecificationThis library aims to provide an easy way to create, update and manipulate messages from Aleph.im.It mainly consists in [pydantic](https://pydantic-docs.helpmanual.io/) models that provide field type validation and IDE autocompletion for messages.This library provides:* schema validation when parsing messages.* cryptographic hash validation that the `item_hash` matches the content of the message.* type validation using type checkers such as [mypy](https://www.mypy-lang.org/) in development environments.* autocompletion support in development editors.The `item_hash` is commonly used as unique message identifier on Aleph.im.Cryptographic signatures are out of scope of this library and part of the `aleph-sdk-python`project, due to their extended scope and dependency on cryptographic libraries.This library is used in both client and node software of Aleph.im.## Usage```shellpip install aleph-message``````pythonimport requestsfrom aleph_message import Messagefrom pydantic import ValidationErrorALEPH_API_SERVER = &quot;https://official.aleph.cloud&quot;MESSAGE_ITEM_HASH = &quot;9b21eb870d01bf64d23e1d4475e342c8f958fcd544adc37db07d8281da070b00&quot;message_dict = requests.get(ALEPH_API_SERVER + &quot;/api/v0/messages.json?hashes=&quot; + MESSAGE_ITEM_HASH).json()try:    message = Message(**message_dict[&quot;messages&quot;][0])    print(message.sender)except ValidationError as e:    print(e.json(indent=4))```</longdescription>
</pkgmetadata>