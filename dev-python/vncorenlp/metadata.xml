<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-vncorenlp[![PyPI](https://img.shields.io/pypi/v/vncorenlp.svg)]()[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/vncorenlp.svg)]()A Python wrapper for [VnCoreNLP](https://github.com/vncorenlp/VnCoreNLP) using a bidirectional communication channel.## Table Of Contents  * [Prerequisites](#prerequisites)  * [Installation](#installation)  * [Example Usage](#example-usage)  * [Use An Existing Server](#use-an-existing-server)  * [Debug](#debug)  * [Some Use Cases](#some-use-cases)  * [License](#license)## Prerequisites- Java 1.8+ ([JRE](http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html) or [JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html))- VnCoreNLP ([Github](https://github.com/vncorenlp/VnCoreNLP) or [Download](https://github.com/vncorenlp/VnCoreNLP/archive/master.zip))## InstallationYou can install this package from PyPI using [pip](http://www.pip-installer.org):```$ [sudo] pip install vncorenlp```For Windows users, please ensure that you run the `Command Prompt` with **admin** privileges.## Example UsageA simple example of how to use `vncorenlp`:```python#!/usr/bin/python# -*- coding: utf-8 -*-import loggingfrom vncorenlp import VnCoreNLPdef simple_usage():    # Uncomment this line for debugging    # logging.basicConfig(level=logging.DEBUG)    vncorenlp_file = r'.../VnCoreNLP-1.0.1/VnCoreNLP-1.0.1.jar'    sentences = 'VTV đồng ý chia sẻ bản quyền World Cup 2018 cho HTV để khai thác. ' \                'Nhưng cả hai nhà đài đều phải chờ sự đồng ý của FIFA mới thực hiện được điều này.'    # Use &quot;with ... as&quot; to close the server automatically    with VnCoreNLP(vncorenlp_file) as vncorenlp:        print('Tokenizing:', vncorenlp.tokenize(sentences))        print('POS Tagging:', vncorenlp.pos_tag(sentences))        print('Named-Entity Recognizing:', vncorenlp.ner(sentences))        print('Dependency Parsing:', vncorenlp.dep_parse(sentences))        print('Annotating:', vncorenlp.annotate(sentences))        print('Language:', vncorenlp.detect_language(sentences))    # In this way, you have to close the server manually by calling close function    vncorenlp = VnCoreNLP(vncorenlp_file)    print('Tokenizing:', vncorenlp.tokenize(sentences))    print('POS Tagging:', vncorenlp.pos_tag(sentences))    print('Named-Entity Recognizing:', vncorenlp.ner(sentences))    print('Dependency Parsing:', vncorenlp.dep_parse(sentences))    print('Annotating:', vncorenlp.annotate(sentences))    print('Language:', vncorenlp.detect_language(sentences))    # Do not forget to close the server    vncorenlp.close()if __name__ == '__main__':    simple_usage()```And here is the output:```Tokenizing:[    ['VTV', 'đồng_ý', 'chia_sẻ', 'bản_quyền', 'World_Cup', '2018', 'cho', 'HTV', 'để', 'khai_thác', '.'],    ['Nhưng', 'cả', 'hai', 'nhà', 'đài', 'đều', 'phải', 'chờ', 'sự', 'đồng_ý', 'của', 'FIFA', 'mới', 'thực_hiện', 'được', 'điều', 'này', '.']]  POS Tagging:[    [('VTV', 'Ny'), ('đồng_ý', 'V'), ('chia_sẻ', 'V'), ('bản_quyền', 'N'), ('World_Cup', 'N'), ('2018', 'M'), ('cho', 'E'), ('HTV', 'Ny'), ('để', 'E'), ('khai_thác', 'V'), ('.', 'CH')],    [('Nhưng', 'C'), ('cả', 'P'), ('hai', 'M'), ('nhà', 'N'), ('đài', 'N'), ('đều', 'R'), ('phải', 'V'), ('chờ', 'V'), ('sự', 'Nc'), ('đồng_ý', 'V'), ('của', 'E'), ('FIFA', 'Np'), ('mới', 'R'), ('thực_hiện', 'V'), ('được', 'R'), ('điều', 'N'), ('này', 'P'), ('.', 'CH')]]  Named-Entity Recognizing:[    [('VTV', 'O'), ('đồng_ý', 'O'), ('chia_sẻ', 'O'), ('bản_quyền', 'O'), ('World_Cup', 'O'), ('2018', 'O'), ('cho', 'O'), ('HTV', 'O'), ('để', 'O'), ('khai_thác', 'O'), ('.', 'O')],    [('Nhưng', 'O'), ('cả', 'O'), ('hai', 'O'), ('nhà', 'O'), ('đài', 'O'), ('đều', 'O'), ('phải', 'O'), ('chờ', 'O'), ('sự', 'O'), ('đồng_ý', 'O'), ('của', 'O'), ('FIFA', 'B-ORG'), ('mới', 'O'), ('thực_hiện', 'O'), ('được', 'O'), ('điều', 'O'), ('này', 'O'), ('.', 'O')]]  Dependency Parsing:[    [('sub', 2, 1), ('root', 0, 2), ('vmod', 2, 3), ('dob', 3, 4), ('nmod', 4, 5), ('det', 5, 6), ('iob', 3, 7), ('pob', 7, 8), ('prp', 3, 9), ('vmod', 9, 10), ('punct', 2, 11)],    [('dep', 7, 1), ('nmod', 4, 2), ('det', 4, 3), ('sub', 7, 4), ('nmod', 4, 5), ('adv', 7, 6), ('root', 0, 7), ('vmod', 7, 8), ('dob', 8, 9), ('nmod', 9, 10), ('nmod', 9, 11), ('pob', 11, 12), ('adv', 14, 13), ('vmod', 7, 14), ('adv', 14, 15), ('dob', 14, 16), ('det', 16, 17), ('punct', 7, 18)]]  Annotating:{  &quot;sentences&quot;: [    [      {        &quot;index&quot;: 1,        &quot;form&quot;: &quot;VTV&quot;,        &quot;posTag&quot;: &quot;Ny&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 2,        &quot;depLabel&quot;: &quot;sub&quot;      },      {        &quot;index&quot;: 2,        &quot;form&quot;: &quot;đồng_ý&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 0,        &quot;depLabel&quot;: &quot;root&quot;      },      {        &quot;index&quot;: 3,        &quot;form&quot;: &quot;chia_sẻ&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 2,        &quot;depLabel&quot;: &quot;vmod&quot;      },      {        &quot;index&quot;: 4,        &quot;form&quot;: &quot;bản_quyền&quot;,        &quot;posTag&quot;: &quot;N&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 3,        &quot;depLabel&quot;: &quot;dob&quot;      },      {        &quot;index&quot;: 5,        &quot;form&quot;: &quot;World_Cup&quot;,        &quot;posTag&quot;: &quot;N&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 4,        &quot;depLabel&quot;: &quot;nmod&quot;      },      {        &quot;index&quot;: 6,        &quot;form&quot;: &quot;2018&quot;,        &quot;posTag&quot;: &quot;M&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 5,        &quot;depLabel&quot;: &quot;det&quot;      },      {        &quot;index&quot;: 7,        &quot;form&quot;: &quot;cho&quot;,        &quot;posTag&quot;: &quot;E&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 3,        &quot;depLabel&quot;: &quot;iob&quot;      },      {        &quot;index&quot;: 8,        &quot;form&quot;: &quot;HTV&quot;,        &quot;posTag&quot;: &quot;Ny&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;pob&quot;      },      {        &quot;index&quot;: 9,        &quot;form&quot;: &quot;để&quot;,        &quot;posTag&quot;: &quot;E&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 3,        &quot;depLabel&quot;: &quot;prp&quot;      },      {        &quot;index&quot;: 10,        &quot;form&quot;: &quot;khai_thác&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 9,        &quot;depLabel&quot;: &quot;vmod&quot;      },      {        &quot;index&quot;: 11,        &quot;form&quot;: &quot;.&quot;,        &quot;posTag&quot;: &quot;CH&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 2,        &quot;depLabel&quot;: &quot;punct&quot;      }    ],    [      {        &quot;index&quot;: 1,        &quot;form&quot;: &quot;Nhưng&quot;,        &quot;posTag&quot;: &quot;C&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;dep&quot;      },      {        &quot;index&quot;: 2,        &quot;form&quot;: &quot;cả&quot;,        &quot;posTag&quot;: &quot;P&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 4,        &quot;depLabel&quot;: &quot;nmod&quot;      },      {        &quot;index&quot;: 3,        &quot;form&quot;: &quot;hai&quot;,        &quot;posTag&quot;: &quot;M&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 4,        &quot;depLabel&quot;: &quot;det&quot;      },      {        &quot;index&quot;: 4,        &quot;form&quot;: &quot;nhà&quot;,        &quot;posTag&quot;: &quot;N&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;sub&quot;      },      {        &quot;index&quot;: 5,        &quot;form&quot;: &quot;đài&quot;,        &quot;posTag&quot;: &quot;N&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 4,        &quot;depLabel&quot;: &quot;nmod&quot;      },      {        &quot;index&quot;: 6,        &quot;form&quot;: &quot;đều&quot;,        &quot;posTag&quot;: &quot;R&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;adv&quot;      },      {        &quot;index&quot;: 7,        &quot;form&quot;: &quot;phải&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 0,        &quot;depLabel&quot;: &quot;root&quot;      },      {        &quot;index&quot;: 8,        &quot;form&quot;: &quot;chờ&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;vmod&quot;      },      {        &quot;index&quot;: 9,        &quot;form&quot;: &quot;sự&quot;,        &quot;posTag&quot;: &quot;Nc&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 8,        &quot;depLabel&quot;: &quot;dob&quot;      },      {        &quot;index&quot;: 10,        &quot;form&quot;: &quot;đồng_ý&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 9,        &quot;depLabel&quot;: &quot;nmod&quot;      },      {        &quot;index&quot;: 11,        &quot;form&quot;: &quot;của&quot;,        &quot;posTag&quot;: &quot;E&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 9,        &quot;depLabel&quot;: &quot;nmod&quot;      },      {        &quot;index&quot;: 12,        &quot;form&quot;: &quot;FIFA&quot;,        &quot;posTag&quot;: &quot;Np&quot;,        &quot;nerLabel&quot;: &quot;B-ORG&quot;,        &quot;head&quot;: 11,        &quot;depLabel&quot;: &quot;pob&quot;      },      {        &quot;index&quot;: 13,        &quot;form&quot;: &quot;mới&quot;,        &quot;posTag&quot;: &quot;R&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 14,        &quot;depLabel&quot;: &quot;adv&quot;      },      {        &quot;index&quot;: 14,        &quot;form&quot;: &quot;thực_hiện&quot;,        &quot;posTag&quot;: &quot;V&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;vmod&quot;      },      {        &quot;index&quot;: 15,        &quot;form&quot;: &quot;được&quot;,        &quot;posTag&quot;: &quot;R&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 14,        &quot;depLabel&quot;: &quot;adv&quot;      },      {        &quot;index&quot;: 16,        &quot;form&quot;: &quot;điều&quot;,        &quot;posTag&quot;: &quot;N&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 14,        &quot;depLabel&quot;: &quot;dob&quot;      },      {        &quot;index&quot;: 17,        &quot;form&quot;: &quot;này&quot;,        &quot;posTag&quot;: &quot;P&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 16,        &quot;depLabel&quot;: &quot;det&quot;      },      {        &quot;index&quot;: 18,        &quot;form&quot;: &quot;.&quot;,        &quot;posTag&quot;: &quot;CH&quot;,        &quot;nerLabel&quot;: &quot;O&quot;,        &quot;head&quot;: 7,        &quot;depLabel&quot;: &quot;punct&quot;      }    ]  ]}  Language: vi```## Use An Existing ServerFirst, you need to start the VnCoreNLPServer using this command:```$ vncorenlp -Xmx2g &lt;VnCoreNLP File&gt; -p 9000 -a &quot;wseg,pos,ner,parse&quot;```The parameter `-Xmx2g` means that the VM can allocate a maximum of 2 GB for the Heap Space.And then connect to the server using this code:```python# Use the existing serverwith VnCoreNLP(address='http://127.0.0.1', port=9000) as vncorenlp:    ...```## DebugThere are 3 ways to enable debugging:```python#!/usr/bin/python# -*- coding: utf-8 -*-import loggingimport sysfrom vncorenlp import VnCoreNLP# 1. Use the global logger# logging.basicConfig(level=logging.DEBUG)def simple_usage():    vncorenlp_file = r'.../VnCoreNLP-1.0.1/VnCoreNLP-1.0.1.jar'    sentences = 'VTV đồng ý chia sẻ bản quyền World Cup 2018 cho HTV để khai thác. ' \                'Nhưng cả hai nhà đài đều phải chờ sự đồng ý của FIFA mới thực hiện được điều này.'    # Use &quot;with ... as&quot; to close the server automatically    vncorenlp = VnCoreNLP(vncorenlp_file)    # 2. Set up the local logger here    logger = vncorenlp.logger    logger.setLevel(logging.DEBUG)    # Add stdout    ch = logging.StreamHandler(sys.stdout)    ch.setLevel(logging.DEBUG)    # Add formatter    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')    ch.setFormatter(formatter)    logger.addHandler(ch)    with vncorenlp:        print('Tokenizing:', vncorenlp.tokenize(sentences))        print('POS Tagging:', vncorenlp.pos_tag(sentences))        print('Named-Entity Recognizing:', vncorenlp.ner(sentences))        print('Dependency Parsing:', vncorenlp.dep_parse(sentences))        print('Annotating:', vncorenlp.annotate(sentences))        print('Language:', vncorenlp.detect_language(sentences))    # In this way, you have to close the server manually by calling close function    vncorenlp = VnCoreNLP(vncorenlp_file)    # 3. Set up the local logger here    logger = vncorenlp.logger    logger.setLevel(logging.DEBUG)    # Add stdout    ch = logging.StreamHandler(sys.stdout)    ch.setLevel(logging.DEBUG)    # Add formatter    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')    ch.setFormatter(formatter)    logger.addHandler(ch)    print('Tokenizing:', vncorenlp.tokenize(sentences))    print('POS Tagging:', vncorenlp.pos_tag(sentences))    print('Named-Entity Recognizing:', vncorenlp.ner(sentences))    print('Dependency Parsing:', vncorenlp.dep_parse(sentences))    print('Annotating:', vncorenlp.annotate(sentences))    print('Language:', vncorenlp.detect_language(sentences))    # Do not forget to close the server    vncorenlp.close()if __name__ == '__main__':    simple_usage()```## Some Use Cases```python#!/usr/bin/python# -*- coding: utf-8 -*-import loggingfrom vncorenlp import VnCoreNLPlogging.basicConfig(level=logging.DEBUG)def simple_usage():    vncorenlp_file = r'.../VnCoreNLP-1.0.1/VnCoreNLP-1.0.1.jar'    sentences = 'VTV đồng ý chia sẻ bản quyền World Cup 2018 cho HTV để khai thác. ' \                'Nhưng cả hai nhà đài đều phải chờ sự đồng ý của FIFA mới thực hiện được điều này.'    # Use only word segmentation    with VnCoreNLP(vncorenlp_file, annotators=&quot;wseg&quot;) as vncorenlp:        print('Tokenizing:', vncorenlp.tokenize(sentences))    # Specify the maximum heap size    with VnCoreNLP(vncorenlp_file, annotators=&quot;wseg&quot;, max_heap_size='-Xmx4g') as vncorenlp:        print('Tokenizing:', vncorenlp.tokenize(sentences))    # For debugging    with VnCoreNLP(vncorenlp_file, annotators=&quot;wseg&quot;, max_heap_size='-Xmx4g', quiet=False) as vncorenlp:        print('Tokenizing:', vncorenlp.tokenize(sentences))if __name__ == '__main__':    simple_usage()```## LicenseMIT</longdescription>
</pkgmetadata>