<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==================Django-MongoEngine==================|lifecycle| |gitter|.. |lifecycle| image:: https://img.shields.io/osslifecycle/MongoEngine/django-mongoengine   :alt: OSS Lifecycle.. |gitter| image:: https://badges.gitter.im/gitterHQ/gitter.png   :target: https://gitter.im/MongoEngine/django-mongoengine   :alt: Gitter chatTHIS IS UNSTABLE PROJECT, IF YOU WANT TO USE IT - FIX WHAT YOU NEEDRight now we're targeting to get things working on Django 3.0 and 4.0;WARNING: This project is not in good state, and is likely to break with django updates.It's better to use raw mongoengine.Working / Django 3.0-4.0------------------------* [ok] sessions* [ok] models/fields, fields needs testing* [ok] views* [ok] auth* [?] admin - partially working, some things brokenCurrent status-------------------------------------------------------------------------------Many parts of projects rewritten/removed;Instead of copying django code i try to subclass/reuse/even monkey-patch;Everything listed above is working; admin - just base fuctionslike changelist/edit, not tested with every form type; need's more work.Some code just plaholder to make things work;`django/forms/document_options.py` - dirty hack absolutely required toget thigs work with django. It replaces mongo _meta on model/class andprovide django-like interface.It get's replaced after class creation via some metaclass magick.Fields notes------------* mongo defaults Field(required=False), changed to django-style defaults  -&gt; Field(blank=False), and setting required = not blank in Field.__init__TODO----* Sync some files/docs that removed from mongoengine: https://github.com/seglberg/mongoengine/commit/a34f4c1beb93f430c37da20c8fd96ce02a0f20c1?diff=unified* Add docs for integrating: https://github.com/hmarr/django-debug-toolbar-mongo* Take a look at django-mongotools: https://github.com/wpjunior/django-mongotoolsConnecting==========In your **settings.py** file, add following lines::    MONGODB_DATABASES = {        &quot;default&quot;: {            &quot;name&quot;: database_name,            &quot;host&quot;: database_host,            &quot;password&quot;: database_password,            &quot;username&quot;: database_user,            &quot;tz_aware&quot;: True, # if you using timezones in django (USE_TZ = True)        },    }    INSTALLED_APPS += [&quot;django_mongoengine&quot;]Documents=========Inhherit your documents from ``django_mongoengine.Document``,and define fields using ``django_mongoengine.fields``.::    from django_mongoengine import Document, EmbeddedDocument, fields    class Comment(EmbeddedDocument):        created_at = fields.DateTimeField(            default=datetime.datetime.now, editable=False,        )        author = fields.StringField(verbose_name=&quot;Name&quot;, max_length=255)        email  = fields.EmailField(verbose_name=&quot;Email&quot;)        body = fields.StringField(verbose_name=&quot;Comment&quot;)    class Post(Document):        created_at = fields.DateTimeField(            default=datetime.datetime.now, editable=False,        )        title = fields.StringField(max_length=255)        slug = fields.StringField(max_length=255, primary_key=True)        comments = fields.ListField(            fields.EmbeddedDocumentField('Comment'), blank=True,        )Sessions========Django allows the use of different backend stores for its sessions. MongoEngineprovides a MongoDB-based session backend for Django, which allows you to usesessions in your Django application with just MongoDB. To enable the MongoEnginesession backend, ensure that your settings module has``'django.contrib.sessions.middleware.SessionMiddleware'`` in the``MIDDLEWARE_CLASSES`` field  and ``'django.contrib.sessions'`` in your``INSTALLED_APPS``. From there, all you need to do is add the following lineinto your settings module::    SESSION_ENGINE = 'django_mongoengine.sessions'    SESSION_SERIALIZER = 'django_mongoengine.sessions.BSONSerializer'Django provides session cookie, which expires after```SESSION_COOKIE_AGE``` seconds, but doesn't delete cookie at sessionsbackend, so ``'mongoengine.django.sessions'`` supports  `mongodb TTL &lt;http://docs.mongodb.org/manual/tutorial/expire-data/&gt;`_... note:: ``SESSION_SERIALIZER`` is only necessary in Django&gt;1.6 as the default   serializer is based around JSON and doesn't know how to convert   ``bson.objectid.ObjectId`` instances to strings.How to run example app----------------------.. code::    poetry install    poetry run pip install -r example/tumblelog/requirements.txt    poetry run python example/tumblelog/manage.py runserverHow to run tests----------------.. code::    poetry install    poetry run python -m pytest</longdescription>
</pkgmetadata>