<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. -*- mode: rst -*-.. image:: https://github.com/scikit-learn-contrib/lightning/actions/workflows/main.yml/badge.svg?branch=master    :target: https://github.com/scikit-learn-contrib/lightning/actions/workflows/main.yml.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.200504.svg    :target: https://doi.org/10.5281/zenodo.200504lightning==========lightning is a library for large-scale linear classification, regression andranking in Python.Highlights:- follows the `scikit-learn &lt;https://scikit-learn.org&gt;`_ API conventions- supports natively both dense and sparse data representations- computationally demanding parts implemented in `Cython &lt;https://cython.org&gt;`_Solvers supported:- primal coordinate descent- dual coordinate descent (SDCA, Prox-SDCA)- SGD, AdaGrad, SAG, SAGA, SVRG- FISTAExample-------Example that shows how to learn a multiclass classifier with group lassopenalty on the News20 dataset (c.f., `Blondel et al. 2013&lt;http://www.mblondel.org/publications/mblondel-mlj2013.pdf&gt;`_):.. code-block:: python    from sklearn.datasets import fetch_20newsgroups_vectorized    from lightning.classification import CDClassifier    # Load News20 dataset from scikit-learn.    bunch = fetch_20newsgroups_vectorized(subset=&quot;all&quot;)    X = bunch.data    y = bunch.target    # Set classifier options.    clf = CDClassifier(penalty=&quot;l1/l2&quot;,                       loss=&quot;squared_hinge&quot;,                       multiclass=True,                       max_iter=20,                       alpha=1e-4,                       C=1.0 / X.shape[0],                       tol=1e-3)    # Train the model.    clf.fit(X, y)    # Accuracy    print(clf.score(X, y))    # Percentage of selected features    print(clf.n_nonzero(percentage=True))Dependencies------------lightning requires Python &gt;= 3.7, setuptools, Joblib, Numpy &gt;= 1.12, SciPy &gt;= 0.19 andscikit-learn &gt;= 0.19. Building from source also requires Cython and a working C/C++ compiler. To run the tests you will also need pytest.Installation------------Precompiled binaries for the stable version of lightning are available for the main platforms and can be installed using pip:.. code-block:: sh    pip install sklearn-contrib-lightningor conda:.. code-block:: sh    conda install -c conda-forge sklearn-contrib-lightningThe development version of lightning can be installed from its git repository. In this case it is assumed that you have the git version control system, a working C++ compiler, Cython and the numpy development libraries. In order to install the development version, type:.. code-block:: sh  git clone https://github.com/scikit-learn-contrib/lightning.git  cd lightning  python setup.py installDocumentation-------------http://contrib.scikit-learn.org/lightning/On GitHub---------https://github.com/scikit-learn-contrib/lightningCiting------If you use this software, please cite it. Here is a BibTex snippet that you can use:.. code-block::  @misc{lightning_2016,    author       = {Blondel, Mathieu and                    Pedregosa, Fabian},    title        = {{Lightning: large-scale linear classification,                   regression and ranking in Python}},    year         = 2016,    doi          = {10.5281/zenodo.200504},    url          = {https://doi.org/10.5281/zenodo.200504}  }Other citing formats are available in `its Zenodo entry &lt;https://doi.org/10.5281/zenodo.200504&gt;`_.Authors-------- Mathieu Blondel- Manoj Kumar- Arnaud Rachez- Fabian Pedregosa- Nikita Titov</longdescription>
</pkgmetadata>