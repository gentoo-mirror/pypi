<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># parsetypesThis Python package provides tools for parsing serialised data to recover their original underlying types.[![](https://img.shields.io/badge/PyPI--inactive?style=social&amp;logo=pypi)](https://pypi.org/project/parsetypes/) [![](https://img.shields.io/badge/GitHub--inactive?style=social&amp;logo=github)](https://github.com/yushiyangk/parsetypes) [![](https://img.shields.io/badge/Documentation--inactive?style=social&amp;logo=readthedocs)](https://parsetypes.gnayihs.uy/)## OverviewThe `TypeParser` class provides configurable type inference and parsing. This can be [initialised with different settings](https://parsetypes.gnayihs.uy/parsetypes.html#TypeParser.__init__) to, for example:- treat `inf` as either a float or a normal string- give exact Decimal values instead of floats- detect inline lists## Install```pip install parsetypes```## Basic examplesImport parser:```pythonfrom parsetypes import TypeParser```Basic parsing:```pythonparser = TypeParser()parser.parse(&quot;1.2&quot;)   # 1.2parser.parse(&quot;true&quot;)  # Trueparser.parse(&quot;&quot;)      # None```Parsing a series so that it has a consistent type:```pythonparser = TypeParser()parser.parse_series([&quot;1&quot;, &quot;2&quot;, &quot;3&quot;])        # [1, 2, 3]parser.parse_series([&quot;5&quot;, &quot;6.7&quot;, &quot;8.&quot;])     # [5., 6.7, 8.]parser.parse_series([&quot;true&quot;, &quot;false&quot;, &quot;&quot;])  # [True, False, None]parser.parse_series([&quot;1&quot;, &quot;2.3&quot;, &quot;abc&quot;])    # [&quot;1&quot;, &quot;2.3&quot;, &quot;abc&quot;]```Parsing a table so that each column is of a consistent type:```pythonparser = TypeParser()table = parser.parse_table([[&quot;1&quot;, &quot;5&quot;,   &quot;true&quot;,  &quot;1&quot;],[&quot;2&quot;, &quot;6.7&quot;, &quot;false&quot;, &quot;2.3&quot;],[&quot;3&quot;, &quot;8.0&quot;, &quot;&quot;,      &quot;abc&quot;],]):assert table == [[1, 5.,  True,  &quot;1&quot;],[2, 6.7, False, &quot;2.3&quot;],[3, 8.,  None,  &quot;abc&quot;],]```## IssuesFound a bug? Please [file an issue](https://github.com/yushiyangk/parsetypes/issues), or, better yet, [submit a pull request](https://github.com/yushiyangk/parsetypes/pulls).## DevelopmentClone the repository with `git clone https://github.com/yushiyangk/parsetypes.git`.The source for the package is `src/`, with tests in `tests/`.### Virtual environmentCreate the venv using `python -m venv .`.To activate the venv, on Linux run `source Scripts/activate`, and on Windows run `Scripts/Activate.ps1` or `Scripts/activate.bat`.Later, to deactivate the venv, run `deactivate`.### DependenciesRun `pip install -r requirements.dev.txt`.### InstallTo install the package locally (in the venv) for development, run `pip install -e .`.### TasksFor unit tests, run `pytest`.To run unit tests across all supported Python versions, run `tox p -m testall`. This is slower than just `pytest`. Note that only Python versions that are installed locally will be run.To run the full set of tasks before package publication, run `tox p -m prepare`. Alternatively, see below for manually running individual steps in this process.#### Unit testsRun `pytest` or `coverage run -m pytest`.For coverage report, first run `coverage run -m pytest`, then either `coverage report -m` to print to stdout or `coverage html` to generate an HTML report in `htmlcov/`. Alternatively, run `tox r -m test` to do both steps automatically (slower).#### DocumentationRun `tox r -m docs`.The documentation is generated in `docs/html/`, using template files in `docs/template/`.#### PackagingBefore packaging, check the package metadata by running `pyroma .` or `tox r -m metadata`.To generate sdist and wheel packages, delete `dist/` and `parsetypes.egg-info/` if they exist, then run `python -m build`. Run `twine check dist/*` to check that the packages were generated properly. Alternatively, run `tox r -m package` to do these steps automatically.### Config files- `MANIFEST.in` Additional files to include in published sdist package- `pyproject.toml` Package metadata, as well as configs for test and build tools- `requirements.dev.txt` Package dependencies for development, in pip format- `requirements.publish.txt` Package dependencies for publishing, in pip format- `tox.ini` Config file for tox## ChangelogThis project follows [PEP 440](https://peps.python.org/pep-0440/) and [Semantic Versioning (SemVer)](https://semver.org/spec/v2.0.0.html). In addition to the guarantees specified by SemVer, for versions before 1.0, this project guarantees backwards compatibility of the API for patch version updates (0.&lt;var&gt;y&lt;/var&gt;.&lt;b&gt;&lt;var&gt;z&lt;/var&gt;&lt;/b&gt;).The recommended version specifier is &lt;code&gt;parsetypes ~= &lt;var&gt;x&lt;/var&gt;.&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; for version 1.0 and later, and &lt;code&gt;parsetypes ~= &lt;var&gt;0&lt;/var&gt;.&lt;var&gt;y&lt;/var&gt;.&lt;var&gt;z&lt;/var&gt;&lt;/code&gt; for versions prior to 1.0.### 0.3.1- Added the arguments `allow_negative` and `allow_sign` (both `True` by default) to &lt;code&gt;&lt;var&gt;parser&lt;/var&gt;.parse_int()&lt;/code&gt;, for parity with &lt;code&gt;&lt;var&gt;parser&lt;/var&gt;.is_int()&lt;/code&gt; which already had these arguments### 0.3- Made the previously public but undocumented instance variables of TypeParser that corresponded to the constructor arguments private instead- Added public properties to TypeParser for accessing or modifying the same settings in a controlled manner### 0.2.6- Added `Nullable` to automatic imports via `from parsetypes import *` (previously only `TypeParser` and `reduce_types` were imported)### 0.2.5- Fixed documentation### 0.2.4- Added &lt;code&gt;&lt;var&gt;parser&lt;/var&gt;.convert()&lt;/code&gt;### 0.2.1, 0.2.2, 0.2.3- Fixed documentation### 0.2- Added support for Python version 3.9; previously only 3.10 and 3.11 were supported### 0.1.1- Updated documentation### 0.1- Initial version</longdescription>
</pkgmetadata>