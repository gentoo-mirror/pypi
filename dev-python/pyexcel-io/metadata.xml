<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================================================================================pyexcel-io - Let you focus on data, instead of file formats================================================================================.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel.github.io/master/images/patreon.png   :target: https://www.patreon.com/chfw.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel-mobans/master/images/awesome-badge.svg   :target: https://awesome-python.com/#specific-formats-processing.. image:: https://github.com/pyexcel/pyexcel-io/workflows/run_tests/badge.svg   :target: http://github.com/pyexcel/pyexcel-io/actions.. image:: https://codecov.io/gh/pyexcel/pyexcel-io/branch/master/graph/badge.svg   :target: https://codecov.io/gh/pyexcel/pyexcel-io.. image:: https://badge.fury.io/py/pyexcel-io.svg   :target: https://pypi.org/project/pyexcel-io.. image:: https://anaconda.org/conda-forge/pyexcel-io/badges/version.svg   :target: https://anaconda.org/conda-forge/pyexcel-io.. image:: https://pepy.tech/badge/pyexcel-io/month   :target: https://pepy.tech/project/pyexcel-io.. image:: https://anaconda.org/conda-forge/pyexcel-io/badges/downloads.svg   :target: https://anaconda.org/conda-forge/pyexcel-io.. image:: https://img.shields.io/gitter/room/gitterHQ/gitter.svg   :target: https://gitter.im/pyexcel/Lobby.. image:: https://img.shields.io/static/v1?label=continuous%20templating&amp;message=%E6%A8%A1%E7%89%88%E6%9B%B4%E6%96%B0&amp;color=blue&amp;style=flat-square    :target: https://moban.readthedocs.io/en/latest/#at-scale-continous-templating-for-open-source-projects.. image:: https://img.shields.io/static/v1?label=coding%20style&amp;message=black&amp;color=black&amp;style=flat-square    :target: https://github.com/psf/black.. image:: https://readthedocs.org/projects/pyexcel-io/badge/?version=latest   :target: http://pyexcel-io.readthedocs.org/en/latest/Support the project================================================================================If your company has embedded pyexcel and its components into a revenue generatingproduct, please support me on github, `patreon &lt;https://www.patreon.com/bePatron?u=5537627&gt;`_or `bounty source &lt;https://salt.bountysource.com/teams/chfw-pyexcel&gt;`_ to maintainthe project and develop it further.If you are an individual, you are welcome to support me too and for however longyou feel like. As my backer, you will receive`early access to pyexcel related contents &lt;https://www.patreon.com/pyexcel/posts&gt;`_.And your issues will get prioritized if you would like to become my patreon as `pyexcel pro user`.With your financial support, I will be able to investa little bit more time in coding, documentation and writing interesting posts.Known constraints==================Fonts, colors and charts are not supported.Nor to read password protected xls, xlsx and ods files.Introduction================================================================================**pyexcel-io** provides **one** application programming interface(API) to readand write the data in excel format, import the data into and export the datafrom database. It provides support for csv(z) format, django database andsqlalchemy supported databases. Its supported file formats are extended to cover&quot;xls&quot;, &quot;xlsx&quot;, &quot;ods&quot; by the following extensions:.. _file-format-list:.. _a-map-of-plugins-and-file-formats:.. table:: A list of file formats supported by external plugins   ======================== ======================= =================   Package name              Supported file formats  Dependencies   ======================== ======================= =================   `pyexcel-io`_            csv, csvz [#f1]_, tsv,                            tsvz [#f2]_   `pyexcel-xls`_           xls, xlsx(read only),   `xlrd`_,                            xlsm(read only)         `xlwt`_   `pyexcel-xlsx`_          xlsx                    `openpyxl`_   `pyexcel-ods3`_          ods                     `pyexcel-ezodf`_,                                                    lxml   `pyexcel-ods`_           ods                     `odfpy`_   ======================== ======================= =================.. table:: Dedicated file reader and writers   ======================== ======================= =================   Package name              Supported file formats  Dependencies   ======================== ======================= =================   `pyexcel-xlsxw`_         xlsx(write only)        `XlsxWriter`_   `pyexcel-libxlsxw`_      xlsx(write only)        `libxlsxwriter`_   `pyexcel-xlsxr`_         xlsx(read only)         lxml   `pyexcel-xlsbr`_         xlsb(read only)         pyxlsb   `pyexcel-odsr`_          read only for ods, fods lxml   `pyexcel-odsw`_          write only for ods      loxun   `pyexcel-htmlr`_         html(read only)         lxml,html5lib   `pyexcel-pdfr`_          pdf(read only)          camelot   ======================== ======================= =================Plugin shopping guide------------------------Since 2020, all pyexcel-io plugins have dropped the support for python versionswhich are lower than 3.6. If you want to use any of those Python versions, please use pyexcel-ioand its plugins versions that are lower than 0.6.0.Except csv files, xls, xlsx and ods files are a zip of a folder containing a lot ofxml filesThe dedicated readers for excel files can stream readIn order to manage the list of plugins installed, you need to use pip to add or removea plugin. When you use virtualenv, you can have different plugins per virtualenvironment. In the situation where you have multiple plugins that does the same thingin your environment, you need to tell pyexcel which plugin to use per function call.For example, pyexcel-ods and pyexcel-odsr, and you want to get_array to use pyexcel-odsr.You need to append get_array(..., library='pyexcel-odsr')... _pyexcel-io: https://github.com/pyexcel/pyexcel-io.. _pyexcel-xls: https://github.com/pyexcel/pyexcel-xls.. _pyexcel-xlsx: https://github.com/pyexcel/pyexcel-xlsx.. _pyexcel-ods: https://github.com/pyexcel/pyexcel-ods.. _pyexcel-ods3: https://github.com/pyexcel/pyexcel-ods3.. _pyexcel-odsr: https://github.com/pyexcel/pyexcel-odsr.. _pyexcel-odsw: https://github.com/pyexcel/pyexcel-odsw.. _pyexcel-pdfr: https://github.com/pyexcel/pyexcel-pdfr.. _pyexcel-xlsxw: https://github.com/pyexcel/pyexcel-xlsxw.. _pyexcel-libxlsxw: https://github.com/pyexcel/pyexcel-libxlsxw.. _pyexcel-xlsxr: https://github.com/pyexcel/pyexcel-xlsxr.. _pyexcel-xlsbr: https://github.com/pyexcel/pyexcel-xlsbr.. _pyexcel-htmlr: https://github.com/pyexcel/pyexcel-htmlr.. _xlrd: https://github.com/python-excel/xlrd.. _xlwt: https://github.com/python-excel/xlwt.. _openpyxl: https://bitbucket.org/openpyxl/openpyxl.. _XlsxWriter: https://github.com/jmcnamara/XlsxWriter.. _pyexcel-ezodf: https://github.com/pyexcel/pyexcel-ezodf.. _odfpy: https://github.com/eea/odfpy.. _libxlsxwriter: http://libxlsxwriter.github.io/getting_started.html.. rubric:: Footnotes.. [#f1] zipped csv file.. [#f2] zipped tsv fileIf you need to manipulate the data, you might do it yourself or use its brotherlibrary `pyexcel &lt;https://github.com/pyexcel/pyexcel&gt;`__ .If you would like to extend it, you may use it to write your ownextension to handle a specific file format.Installation================================================================================You can install pyexcel-io via pip:.. code-block:: bash    $ pip install pyexcel-ioor clone it and install it:.. code-block:: bash    $ git clone https://github.com/pyexcel/pyexcel-io.git    $ cd pyexcel-io    $ python setup.py installDevelopment guide================================================================================Development steps for code changes#. git clone https://github.com/pyexcel/pyexcel-io.git#. cd pyexcel-ioUpgrade your setup tools and pip. They are needed for development and testing only:#. pip install --upgrade setuptools pipThen install relevant development requirements:#. pip install -r rnd_requirements.txt # if such a file exists#. pip install -r requirements.txt#. pip install -r tests/requirements.txtOnce you have finished your changes, please provide test case(s), relevant documentationand update changelog.yml.. note::    As to rnd_requirements.txt, usually, it is created when a dependent    library is not released. Once the dependecy is installed    (will be released), the future    version of the dependency in the requirements.txt will be valid.How to test your contribution------------------------------Although `nose` and `doctest` are both used in code testing, it is adviable that unit tests are put in tests. `doctest` is incorporated only to make sure the code examples in documentation remain valid across different development releases.On Linux/Unix systems, please launch your tests like this::    $ makeOn Windows, please issue this command::    &gt; test.batBefore you commit------------------------------Please run::    $ make formatso as to beautify your code otherwise your build may fail your unit test.License================================================================================New BSD LicenseChange log================================================================================0.6.6 - 31.1.2022--------------------------------------------------------------------------------**updated**#. `#112 &lt;https://github.com/pyexcel/pyexcel-io/issues/112&gt;`_: Log Empty Row   Warning instead 'print' 0.6.5 - 08.10.2021--------------------------------------------------------------------------------**updated**#. `#109 &lt;https://github.com/pyexcel/pyexcel-io/issues/109&gt;`_: enable ods3 to   have datetime0.6.4 - 31.10.2020--------------------------------------------------------------------------------**updated**#. `#102 &lt;https://github.com/pyexcel/pyexcel-io/issues/102&gt;`_: skip columns from   imported excel sheet.0.6.3 - 12.10.2020--------------------------------------------------------------------------------**fixed**#. `#96 &lt;https://github.com/pyexcel/pyexcel-io/issues/96&gt;`_: regression: unknown   file type shall trigger NoSupportingPluginFound**updated**#. extra dependencies uses 0.6.0 based plugins0.6.2 - 7.10.2020--------------------------------------------------------------------------------**updated**#. `#94 &lt;https://github.com/pyexcel/pyexcel-io/issues/94&gt;`_: keep backward   compatibility for pyexcel-xls 0.4.10.6.1 - 7.10.2020--------------------------------------------------------------------------------**removed**#. python 3.6 lower versions are no longer supported**updated**#. pyexcel-io plugin interface has been rewritten. PyInstaller user will be   impacted. please read 'Packaging with Pyinstaller' in the documentation.#. new query set reader plugin. pyexcel&lt;=0.6.4 has used intrusive way of getting   query set source done. it is against the plugin interface.**fixed**#. `#74 &lt;https://github.com/pyexcel/pyexcel-io/issues/74&gt;`_: handle zip files   which contain non-UTF-8 encoded files.**added**#. `#86 &lt;https://github.com/pyexcel/pyexcel-io/issues/86&gt;`_: allow trailing   options, get_data(...keep_trailing_empty_cells=True).0.5.20 - 17.7.2019--------------------------------------------------------------------------------**updated**#. `#70 &lt;https://github.com/pyexcel/pyexcel-io/issues/70&gt;`_: when the given file   is a root directory, the error shall read it is not a file0.5.19 - 14.7.2019--------------------------------------------------------------------------------**updated**#. `pyexcel#185 &lt;https://github.com/pyexcel/pyexcel/issues/185&gt;`_: handle stream   conversion if file type(html) needs string content then bytes to handle0.5.18 - 12.06.2019--------------------------------------------------------------------------------**updated**#. `#69 &lt;https://github.com/pyexcel/pyexcel-io/issues/69&gt;`_: Force file   type(force_file_type) on write0.5.17 - 04.04.2019--------------------------------------------------------------------------------**updated**#. `#68 &lt;https://github.com/pyexcel/pyexcel-io/issues/68&gt;`_: Raise IOError when   the data file does not exist0.5.16 - 19.03.2019--------------------------------------------------------------------------------**updated**#. `#67 &lt;https://github.com/pyexcel/pyexcel-io/issues/67&gt;`_: fix conversion   issue for long type on python 2.7 for ods0.5.15 - 16.03.2019--------------------------------------------------------------------------------**updated**#. `pyexcel-ods#33 &lt;https://github.com/pyexcel/pyexcel-ods/issues/33&gt;`_: fix   integer comparision error on i5860.5.14 - 21.02.2019--------------------------------------------------------------------------------**updated**#. `#65 &lt;https://github.com/pyexcel/pyexcel-io/issues/65&gt;`_: add   tests/__init__.py because python2.7 setup.py test needs it0.5.13 - 12.02.2019--------------------------------------------------------------------------------**updated**#. `#63 &lt;https://github.com/pyexcel/pyexcel-io/issues/63&gt;`_: Version 0.5.12   prevents xslx and ods plugin from being loaded0.5.12 - 9.02.2019--------------------------------------------------------------------------------**updated**#. `#60 &lt;https://github.com/pyexcel/pyexcel-io/issues/60&gt;`_: include tests in   tar ball#. `#61 &lt;https://github.com/pyexcel/pyexcel-io/issues/61&gt;`_: enable python   setup.py test0.5.11 - 3.12.2018--------------------------------------------------------------------------------**updated**#. `#59 &lt;https://github.com/pyexcel/pyexcel-io/issues/59&gt;`_: Please use   scan_plugins_regex, which lml 0.7 complains about0.5.10 - 27.11.2018--------------------------------------------------------------------------------**added**#. `#57 &lt;https://github.com/pyexcel/pyexcel-io/issues/57&gt;`_, long type will not   be written in ods. please use string type. And if the integer is equal or   greater than 10 to the power of 16, it will not be written either in ods. In   both situation, IntegerPrecisionLossError will be raised. And this version   enables pyexcel-ods and pyexcel-ods3 to do so.0.5.9.1 - 30.08.2018--------------------------------------------------------------------------------**updated**#. `#53 &lt;https://github.com/pyexcel/pyexcel-io/issues/53&gt;`_, upgrade lml   dependency to at least 0.0.20.5.9 - 23.08.2018--------------------------------------------------------------------------------**added**#. `pyexcel#148 &lt;https://github.com/pyexcel/pyexcel/issues/148&gt;`_, support   force_file_type0.5.8 - 16.08.2018--------------------------------------------------------------------------------**added**#. `#49 &lt;https://github.com/pyexcel/pyexcel-io/issues/49&gt;`_, support additional   options when detecting float values in csv format. default_float_nan,   ignore_nan_text0.5.7 - 02.05.2018--------------------------------------------------------------------------------**fixed**#. `#48 &lt;https://github.com/pyexcel/pyexcel-io/issues/48&gt;`_, turn off pep 0515#. `#47 &lt;https://github.com/pyexcel/pyexcel-io/issues/47&gt;`_, csv reader cannot   handle relative file names0.5.6 - 11.01.2018--------------------------------------------------------------------------------**fixed**#. `#46 &lt;https://github.com/pyexcel/pyexcel-io/issues/46&gt;`_, expose `bulk_save`   to developer0.5.5 - 23.12.2017--------------------------------------------------------------------------------**fixed**#. Issue `#45 &lt;https://github.com/pyexcel/pyexcel-io/issues/45&gt;`_, csv reader   throws exception because google app engine does not support mmap. People who   are not working with google app engine, need not to take this update. Enjoy   your Christmas break.0.5.4 - 10.11.2017--------------------------------------------------------------------------------**updated**#. PR `#44 &lt;https://github.com/pyexcel/pyexcel-io/pull/44&gt;`_, use unicodewriter   for csvz writers.0.5.3 - 23.10.2017--------------------------------------------------------------------------------**updated**#. pyexcel `pyexcel#105 &lt;https://github.com/pyexcel/pyexcel/issues/105&gt;`_,   remove gease from setup_requires, introduced by 0.5.2.#. remove python2.6 test support0.5.2 - 20.10.2017--------------------------------------------------------------------------------**added**#. `pyexcel#103 &lt;https://github.com/pyexcel/pyexcel/issues/103&gt;`_, include   LICENSE file in MANIFEST.in, meaning LICENSE file will appear in the released   tar ball.0.5.1 - 02.09.2017--------------------------------------------------------------------------------**Fixed**#. `pyexcel-ods#25 &lt;https://github.com/pyexcel/pyexcel-ods/issues/25&gt;`_,   Unwanted dependency on pyexcel.0.5.0 - 30.08.2017--------------------------------------------------------------------------------**Added**#. Collect all data type conversion codes as service.py.**Updated**#. `#19 &lt;https://github.com/pyexcel/pyexcel-io/issues/19&gt;`_, use cString by   default. For python, it will be a performance boost0.4.4 - 08.08.2017--------------------------------------------------------------------------------**Updated**#. `#42 &lt;https://github.com/pyexcel/pyexcel-io/issues/42&gt;`_, raise exception if   database table name does not match the sheet name0.4.3 - 29.07.2017--------------------------------------------------------------------------------**Updated**#. `#41 &lt;https://github.com/pyexcel/pyexcel-io/issues/41&gt;`_, walk away   gracefully when mmap is not available.0.4.2 - 05.07.2017--------------------------------------------------------------------------------**Updated**#. `#37 &lt;https://github.com/pyexcel/pyexcel-io/issues/37&gt;`_, permanently fix the   residue folder pyexcel by release all future releases in a clean clone.0.4.1 - 29.06.2017--------------------------------------------------------------------------------**Updated**#. `#39 &lt;https://github.com/pyexcel/pyexcel-io/issues/39&gt;`_, raise exception   when bulk save in django fails. Please `bulk_save=False` if you as the   developer choose to save the records one by one if bulk_save cannot be used.   However, exception in one-by-one save case will be raised as well. This   change is made to raise exception in the first place so that you as the   developer will be suprised when it was deployed in production.0.4.0 - 19.06.2017--------------------------------------------------------------------------------**Updated**#. 'built-in' as the value to the parameter 'library' as parameter to invoke   pyexcel-io's built-in csv, tsv, csvz, tsvz, django and sql won't work. It is   renamed to 'pyexcel-io'.#. built-in csv, tsv, csvz, tsvz, django and sql are lazy loaded.#. pyexcel-io plugin interface has been updated. v0.3.x plugins won't work.#. `#32 &lt;https://github.com/pyexcel/pyexcel-io/issues/32&gt;`_, csv and csvz file   handle are made sure to be closed. File close mechanism is enfored.#. iget_data function is introduced to cope with dangling file handle issue.**Removed**#. Removed plugin loading code and lml is used instead0.3.4 - 18.05.2017--------------------------------------------------------------------------------**Updated**#. `#33 &lt;https://github.com/pyexcel/pyexcel-io/issues/33&gt;`_, handle mmap object   differently given as file content. This issue has put in a priority to single   sheet csv over multiple sheets in a single memory stream. The latter format   is pyexcel own creation but is rarely used. In latter case,   multiple_sheet=True should be passed along get_data.#. `#34 &lt;https://github.com/pyexcel/pyexcel-io/issues/34&gt;`_, treat mmap object   as a file content.#. `#35 &lt;https://github.com/pyexcel/pyexcel-io/issues/35&gt;`_, encoding parameter   take no effect when given along with file content#. use ZIP_DEFALTED to really do the compression0.3.3 - 30.03.2017--------------------------------------------------------------------------------**Updated**#. `#31 &lt;https://github.com/pyexcel/pyexcel-io/issues/31&gt;`_, support pyinstaller0.3.2 - 26.01.2017--------------------------------------------------------------------------------**Updated**#. `#29 &lt;https://github.com/pyexcel/pyexcel-io/issues/29&gt;`_, change   skip_empty_rows to False by default0.3.1 - 21.01.2017--------------------------------------------------------------------------------**Added**#. updated versions of extra packages**Updated**#. `#23 &lt;https://github.com/pyexcel/pyexcel-io/issues/23&gt;`_, provide helpful   message when old pyexcel plugin exists#. restored previously available diagnosis message for missing libraries0.3.0 - 22.12.2016--------------------------------------------------------------------------------**Added**#. lazy loading of plugins. for example, pyexcel-xls is not entirely loaded   until xls format is used at its first attempted reading or writing. Since it   is loaded, it will not be loaded in the second io action.#. `pyexcel-xls#11 &lt;https://github.com/pyexcel/pyexcel-xls/issues/11&gt;`_, make   case-insensitive for file type0.2.6 - 21.12.2016--------------------------------------------------------------------------------**Updated**#. `#24 &lt;https://github.com/pyexcel/pyexcel-io/issues/24&gt;`__, pass on batch_size0.2.5 - 20.12.2016--------------------------------------------------------------------------------**Updated**#. `#26 &lt;https://github.com/pyexcel/pyexcel-io/issues/26&gt;`__, performance issue   with getting the number of columns.0.2.4 - 24.11.2016--------------------------------------------------------------------------------**Updated**#. `#23 &lt;https://github.com/pyexcel/pyexcel-io/issues/23&gt;`__, Failed to convert   long integer string in python 2 to its actual value0.2.3 - 16.09.2016--------------------------------------------------------------------------------**Added**#. `#21 &lt;https://github.com/pyexcel/pyexcel-io/issues/21&gt;`__, choose subset from   data base tables for export#. `#22 &lt;https://github.com/pyexcel/pyexcel-io/issues/22&gt;`__, custom renderer if   given `row_renderer` as parameter.0.2.2 - 31.08.2016--------------------------------------------------------------------------------**Added**#. support pagination. two pairs: start_row, row_limit and start_column,   column_limit help you deal with large files.#. `skip_empty_rows=True` was introduced. To include empty rows, put it to   False.**Updated**#. `#20 &lt;https://github.com/pyexcel/pyexcel-io/issues/20&gt;`__, pyexcel-io   attempts to parse cell contents of 'infinity' as a float/int, crashes0.2.1 - 11.07.2016--------------------------------------------------------------------------------**Added**#. csv format: handle utf-16 encoded csv files. Potentially being able to decode   other formats if correct &quot;encoding&quot; is provided#. csv format: write utf-16 encoded files. Potentially other encoding is also   supported#. support stdin as input stream and stdout as output stream**Updated**#. Attention, user of pyexcel-io! No longer io stream validation is performed in   python 3. The guideline is: io.StringIO for csv, tsv only, otherwise BytesIO   for xlsx, xls, ods. You can use RWManager.get_io to produce a correct stream   type for you.#. `#15 &lt;https://github.com/pyexcel/pyexcel-io/issues/15&gt;`__, support foreign   django/sql foreign key0.2.0 - 01.06.2016--------------------------------------------------------------------------------**Added**#. autoload of pyexcel-io plugins#. auto detect `datetime`, `float` and `int`. Detection can be switched off by   `auto_detect_datetime`, `auto_detect_float`, `auto_detect_int`0.1.0 - 17.01.2016--------------------------------------------------------------------------------**Added**#. yield key word to return generator as content</longdescription>
</pkgmetadata>