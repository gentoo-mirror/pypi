<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SciCamera---Consistent and reliable imaging for scientific applications.## Why _SciCamera_?Scientific imaging applications often require minimal post-processing pipelines, precise capture timing, near-gapless sequential frames, and easily configurable settings like gain, resolution, bit-depth, and exposure length. This project, which began as fork of the webcam/video-focused [`picamera2`][picamera2]library, aims to make it easy to configure and use cameras for scientific applications,with a focus on _performance, reliability, code quality, and maintainability_.### Why not _SciCamera_?SciCamera currently focuses on high-quality, timing-sensitive, minimally-processed_still images_. For low-bandwidth, real-time image and video streaming, we recommend the [`picamera2`][picamera2] library.## Platform support_SciCamera_ supports- Raspberry Pi OS (Bullseye or later), 64-bit.- x86 UbuntuOther debian flavors are likely to be supported. We welcome pull requests to extendthe testing toolchains to cover your platform.## Installation_SciCamera_ is a pure python package, but relies on the pythonc++ wrapper of _libcamera_._SciCamera_ can be installed simply with:```pip install scicamera```### Installing libcamera + python bindingsImport and use of the above pacakge requires that `libcamera` to be builtwith the python package enabled. On rasbian, this is accomplished by installing the `libcamera` package from apt. In x86 it must be built using something like the following:```bashgit clone https://github.com/Exclosure/libcamera.gitcd libcameragit checkout v0.0.4meson setup build -D pycamera=enabledninja -C buildsudo ninja -C build install```## Bugs/ContributingOpen an issue/PR to discuss your bug or feature. Once a course of actionhas been identified, open a PR, discuss the changes. Feature creep is not of interest, but we would be happyto help you build your more complicated project on top of this.If we like them, and the tests pass we will merge them. CI requires code has been processed `isort` and `black` toolchains.Doing this is pretty easy:```isort .black .```Great work.## Publishing to PYPIShould be added to github action later1. Add your pypi token  ```sh  $ poetry config pypi-token.pypi my-token  ```2. Cut a new tag  ```sh  $ git tag -a v0.1.0 -m &quot;Version 0.1.0&quot;  $ git push origin v0.1.0  ```3. Publish  ```sh  $ poetry publish --build  ```[picamera2]:https://github.com/raspberrypi/picamera2</longdescription>
</pkgmetadata>