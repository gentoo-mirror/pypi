<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># aws_role_switcherThis is a CLI application makes it easier to switch roles using auto completion from parsing your aws config/credential file and setting `&quot;AWS_SECRET_ACCESS_KEY&quot;, &quot;AWS_ACCESS_KEY_ID&quot;, &quot;AWS_SESSION_TOKEN&quot;, &quot;AWS_SECURITY_TOKEN&quot;` environment variables if present.This script does not support MFA roles, and designed to help cycle through profiles set manually, or as output from an SSO script like: https://github.com/Nike-Inc/gimme-aws-creds## Installation```python3 -m pip install -U aws_role_switcher```In order to work properly this script must be sourced, add the following to your .profile or .bashrc( you can adjust the alias name to whatever you want)```alias ars='source aws-role-switcher.sh'```Note: You can run this from the command line using `. aws-role-switcher.sh` or `source aws-role-switcher.sh`.## ConfigurationYou can set the following environmental variables:`AWS_PROFILE_SWITCHER_PATH` - Override the default credential/config file location from `$HOME/.aws/credentials`  I would recommend adding to your ~/.profile or ~/.bash_profile ## Example Usage`ars` to start prompt. TAB or start typing to start auto completion list. TAB or use arrows to cycle through list, and enter to select.### Pass profile and region positional variables (Optional)using a format of `&lt;script&gt; &lt;profile_arg&gt; &lt;region_arg&gt;` the utility will start the prompt process with the passed in argsi.e `ars admin uswest2`Example config file:```[default]aws_access_key_id = REDACTEDaws_secret_access_key = redactedaws_session_token = defaultaws_security_token = default[testing-administrator]aws_access_key_id = REDACTEDaws_secret_access_key = redactedaws_session_token = testingaws_security_token = testing[staging-administrator]aws_access_key_id = REDACTEDaws_secret_access_key = redactedaws_session_token = stagingaws_security_token = staging[production-administrator]aws_access_key_id = REDACTEDaws_secret_access_key = redactedaws_session_token = productionaws_security_token = production```Example Usage:![AWS Role Switcher Demo](examples/aws-switch-roles.gif)Updated Example (1.5.0):![AWS Role Switcher Demo](examples/ars-1.5.0.gif) ## Development### Bug Reports &amp; Feature RequestsPlease use the submit a issue to report any bugs or file feature requests.### DevelopingIf you are interested in being a contributor and want to get involved in developing this CLI application feel free to reach outIn general, PRs are welcome. We follow the typical trunk based development Git workflow. 1. **Branch** the repo  2. **Clone** the project to your own machine 3. **Commit** changes to your branch 4. **Push** your work back up to your branch 5. Submit a **Merge/Pull Request** so that we can review your changes**NOTE:** Be sure to merge the latest changes from &quot;upstream&quot; before making a pull request!</longdescription>
</pkgmetadata>