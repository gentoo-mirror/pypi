<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Python Utility for controlling HID USB RelaysThis utility is a Python version of [usb-relay-hid](https://github.com/pavel-a/usb-relay-hid)# Getting StartedSetup a python virtual environment and install requirements:```shellpython3 -m venv venv. venv/bin/activatepip install -r requirements.txt```The module can be installed with:```shell./setup.py install```The provided `pyhid-usb-relay` command is pretty much the same as the`hidusb-relay-cmd` from the `usb-relay-hid` project, and aims to be featurecompatible. Additional commands are implemented, and the best way to discoverwhat options are available is to run:```shellpyhid-usb-relay --help```# ConfigurationComing soon# PermissionsIf you want to access the relay devices as a normal user (which is recommended,since it will respect your local configuration), you will need to modify yourudev rules to allow access to the HID device. You can do this by creating afile named `/etc/udev/rules.d/90-hidusb-relay.rules` with the followingcontents:```# Give all users access to USB HID RelaySUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;16c0&quot;, ATTRS{idProduct}==&quot;05df&quot;, MODE:=&quot;0660&quot;, GROUP=&quot;dialout&quot;```You may need to reload your udev rules with `sudo udevadm control--reload-rules` and unplug and reattach the USB relay board for this to takeeffect**NOTE** This rule allows any user that is part of the `dialout` group toaccess the board. If this is not what you want, you should change the udevrules.# Fixing Serial NumbersThe relays that this tool is designed to control have a quirk that they allreport the same USB Vendor, Product, and Serial Number (The serial number usedby this code is retrieved by the HID API). This can make it hard to distinguishbetween multiple relays attached to the same device using udev rules.The `pyhid-usb-relay` tool can be used to help resolve this by using the`get-serial` subcommand, which will fetch the HID serial number from the devicewith a udev rule that looks like:```SUBSYSTEM==&quot;usb&quot;, ATTR{idVendor}==&quot;16c0&quot;, ATTR{idProduct}==&quot;05df&quot;, ACTION==&quot;add&quot;, PROGRAM=&quot;/usr/local/bin/pyhid-usb-relay get-serial '%E{BUSNUM}' '%E{DEVNUM}'&quot;, ENV{ID_SERIAL}:=&quot;%c&quot;```</longdescription>
</pkgmetadata>