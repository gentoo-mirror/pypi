<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Slack Machine[![Join the chat at Slack](https://img.shields.io/badge/chat-slack-green?logo=slack&amp;logoColor=white)](https://join.slack.com/t/slack-machine-chat/shared_invite/zt-1g87tzvlf-8bV_WnY3JZyaYNnRFwRd~w)[![image](https://img.shields.io/pypi/v/slack-machine.svg)](https://pypi.python.org/pypi/slack-machine)[![image](https://img.shields.io/pypi/l/slack-machine.svg)](https://pypi.python.org/pypi/slack-machine)[![image](https://img.shields.io/pypi/pyversions/slack-machine.svg)](https://pypi.python.org/pypi/slack-machine)[![CI Status](https://github.com/DonDebonair/slack-machine/actions/workflows/ci.yml/badge.svg)](https://github.com/DonDebonair/slack-machine/actions/workflows/ci.yml)[![image](https://codecov.io/gh/DonDebonair/slack-machine/branch/main/graph/badge.svg)](https://codecov.io/gh/DonDebonair/slack-machine)Slack Machine is a simple, yet powerful and extendable Slack bot framework. More than just a bot, SlackMachine is a framework that helps you develop your Slack workspace into a ChatOps powerhouse. Slack Machine is builtwith an intuitive plugin system that lets you build bots quickly, but also allows for easy code organization. Aplugin can look as simple as this:```pythonfrom machine.plugins.base import MachineBasePluginfrom machine.plugins.message import Messagefrom machine.plugins.decorators import respond_toclass DeploymentPlugin(MachineBasePlugin):    &quot;&quot;&quot;Deployments&quot;&quot;&quot;    @respond_to(r&quot;deploy (?P&lt;application&gt;\w+) to (?P&lt;environment&gt;\w+)&quot;)    async def deploy(self, msg: Message, application, environment):        &quot;&quot;&quot;deploy &lt;application&gt; &lt;environment&gt;: deploy application to target environment&quot;&quot;&quot;        await msg.say(f&quot;Deploying {application} to {environment}&quot;)```## _Breaking Changes_**Plugin initialization is now async** (v0.35.0)The optional initialization method[plugins can implement](https://dondebonair.github.io/slack-machine/plugins/misc/#plugin-initialization), which isrun once when the plugin is loaded, should be an **async** method starting the upcoming[v0.35.0](https://github.com/DonDebonair/slack-machine/releases/tag/v0.35.0). The reason for this is that thisallows plugins to interact with Slack through the Slack Machine's plugin API - most of which methods are async.Simply prefix your `init()` methods with `async`.**Dropped support for Python 3.7** (v0.34.0)As of [v0.34.0](https://github.com/DonDebonair/slack-machine/releases/tag/v0.34.0), support for Python 3.7 has beendropped. Python 3.7 has reached end-of-life on 2023-06-27.**AsyncIO** (v0.30.0)As of [v0.30.0](https://github.com/DonDebonair/slack-machine/releases/tag/v0.30.0) Slack Machine dropped support forthe old backend based on the RTM API. As such, Slack Machine is now fully based on[AsyncIO](https://docs.python.org/3/library/asyncio.html). This means plugins written before the rewrite to asyncioaren't supported anymore. See [here](https://dondebonair.github.io/slack-machine/migrating/) for a migration guide toget your old plugins working with the new version of Slack Machine.It's really easy!## Features- Get started with mininal configuration- Built on top of the [Slack Events API](https://api.slack.com/apis/connections/events-api) for smoothly responding  to events in semi real-time. Uses [Socket Mode](https://api.slack.com/apis/connections/socket) so your bot doesn't  need to be exposed to the internet!- Support for rich interactions using the [Slack Web API](https://api.slack.com/web)- High-level API for maximum convenience when building plugins- Low-level API for maximum flexibility- Built on top of [AsyncIO](https://docs.python.org/3/library/asyncio.html) to ensure good performance by handling  communication with Slack concurrently### Plugin API features:- Listen and respond to any regular expression- Respond to Slash Commands- Capture parts of messages to use as variables in your functions- Respond to messages in channels, groups and direct message conversations- Respond with reactions- Respond in threads- Respond with ephemeral messages- Send DMs to any user- Support for [blocks](https://api.slack.com/reference/block-kit/blocks)- Support for [message attachments](https://api.slack.com/docs/message-attachments) [Legacy üèö]- Listen and respond to any [Slack event](https://api.slack.com/events) supported by the Events API- Store and retrieve any kind of data in persistent storage (currently Redis, DynamoDB, SQLite and in-memory storage are  supported)- Schedule actions and messages- Emit and listen for events- Help texts for Plugins### Coming Soon- Support for Interactive Buttons- ... and much more## InstallationYou can install Slack Machine using pip:``` bash$ pip install slack-machine```or add it to your [Poetry](https://python-poetry.org/) project:```bashpoetry add slack-machine```It is **strongly recommended** that you install `slack-machine` inside a[virtual environment](https://docs.python.org/3/tutorial/venv.html)!## Usage1. Create a directory for your Slack Machine bot: `mkdir my-slack-bot &amp;&amp; cd my-slack-bot`2. Add a `local_settings.py` file to your bot directory: `touch local_settings.py`3. Create a new app in Slack: &lt;https://api.slack.com/apps&gt;4. Choose to create an app from an _App manifest_5. Copy/paste the following manifest: [`manifest.yaml`](docs/extra/manifest.yaml)6. Add the Slack App and Bot tokens to your `local_settings.py` like this:    ``` title=&quot;local_settings.py&quot;    SLACK_APP_TOKEN = &quot;xapp-my-app-token&quot;    SLACK_BOT_TOKEN = &quot;xoxb-my-bot-token&quot;    ```7. Start the bot with `slack-machine`8. ...9. Profit!## DocumentationYou can find the documentation for Slack Machine here: https://dondebonair.github.io/slack-machine/Go read it to learn how to properly configure Slack Machine, write plugins, and more!</longdescription>
</pkgmetadata>