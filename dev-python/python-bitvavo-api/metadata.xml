<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;  &lt;br&gt;  &lt;a href=&quot;https://bitvavo.com&quot;&gt;&lt;img src=&quot;https://bitvavo.com/assets/static/ext/logo-shape.svg&quot; width=&quot;100&quot; title=&quot;Bitvavo Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt;# Python Bitvavo ApiThis is the python wrapper for the Bitvavo API. This project can be used to build your own projects which interact with the Bitvavo platform. Every function available on the API can be called through a REST request or over websockets. For info on the specifics of every parameter consult the [Bitvavo API documentation](https://docs.bitvavo.com/)* Getting started       [REST](https://github.com/bitvavo/python-bitvavo-api#getting-started) [Websocket](https://github.com/bitvavo/python-bitvavo-api#getting-started-1)* General  * Time                [REST](https://github.com/bitvavo/python-bitvavo-api#get-time) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-time-1)  * Markets             [REST](https://github.com/bitvavo/python-bitvavo-api#get-markets) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-markets-1)  * Assets              [REST](https://github.com/bitvavo/python-bitvavo-api#get-assets) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-assets-1)* Market Data  * Book                [REST](https://github.com/bitvavo/python-bitvavo-api#get-book-per-market) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-book-per-market-1)  * Public Trades       [REST](https://github.com/bitvavo/python-bitvavo-api#get-trades-per-market) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-trades-per-market-1)  * Candles             [REST](https://github.com/bitvavo/python-bitvavo-api#get-candles-per-market) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-candles-per-market-1)  * Price Ticker        [REST](https://github.com/bitvavo/python-bitvavo-api#get-price-ticker) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-price-ticker-1)  * Book Ticker         [REST](https://github.com/bitvavo/python-bitvavo-api#get-book-ticker) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-book-ticker-1)  * 24 Hour Ticker      [REST](https://github.com/bitvavo/python-bitvavo-api#get-24-hour-ticker) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-24-hour-ticker-1)* Private   * Place Order         [REST](https://github.com/bitvavo/python-bitvavo-api#place-order) [Websocket](https://github.com/bitvavo/python-bitvavo-api#place-order-1)  * Update Order        [REST](https://github.com/bitvavo/python-bitvavo-api#update-order) [Websocket](https://github.com/bitvavo/python-bitvavo-api#update-order-1)  * Get Order           [REST](https://github.com/bitvavo/python-bitvavo-api#get-order) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-order-1)  * Cancel Order        [REST](https://github.com/bitvavo/python-bitvavo-api#cancel-order) [Websocket](https://github.com/bitvavo/python-bitvavo-api#cancel-order-1)  * Get Orders          [REST](https://github.com/bitvavo/python-bitvavo-api#get-orders) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-orders-1)  * Cancel Orders       [REST](https://github.com/bitvavo/python-bitvavo-api#cancel-orders) [Websocket](https://github.com/bitvavo/python-bitvavo-api#cancel-orders-1)  * Orders Open         [REST](https://github.com/bitvavo/python-bitvavo-api#get-orders-open) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-orders-open-1)  * Trades              [REST](https://github.com/bitvavo/python-bitvavo-api#get-trades) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-trades-1)  * Account             [REST](https://github.com/bitvavo/python-bitvavo-api#get-account) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-account-1)  * Balance             [REST](https://github.com/bitvavo/python-bitvavo-api#get-balance) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-balance-1)  * Deposit Assets     [REST](https://github.com/bitvavo/python-bitvavo-api#deposit-assets) [Websocket](https://github.com/bitvavo/python-bitvavo-api#deposit-assets-1)  * Withdraw Assets   [REST](https://github.com/bitvavo/python-bitvavo-api#withdraw-assets) [Websocket](https://github.com/bitvavo/python-bitvavo-api#withdraw-assets-1)  * Deposit History     [REST](https://github.com/bitvavo/python-bitvavo-api#get-deposit-history) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-deposit-history-1)  * Withdrawal History  [REST](https://github.com/bitvavo/python-bitvavo-api#get-withdrawal-history) [Websocket](https://github.com/bitvavo/python-bitvavo-api#get-withdrawal-history-1)* [Subscriptions](https://github.com/bitvavo/python-bitvavo-api#subscriptions)  * [Ticker Subscription](https://github.com/bitvavo/python-bitvavo-api#ticker-subscription)  * [Ticker 24 Hour Subscription](https://github.com/bitvavo/python-bitvavo-api#ticker-24-hour-subscription)  * [Account Subscription](https://github.com/bitvavo/python-bitvavo-api#account-subscription)  * [Candles Subscription](https://github.com/bitvavo/python-bitvavo-api#candles-subscription)  * [Trades Subscription](https://github.com/bitvavo/python-bitvavo-api#trades-subscription)  * [Book Subscription](https://github.com/bitvavo/python-bitvavo-api#book-subscription)  * [Book subscription with local copy](https://github.com/bitvavo/python-bitvavo-api#book-subscription-with-local-copy)## Installation```pip install python-bitvavo-api```## Rate LimitingBitvavo uses a weight based rate limiting system, with an allowed limit of 1000 per IP or API key each minute. Please inspect each endpoint in the [Bitvavo API documentation](https://docs.bitvavo.com/) to see the weight. Failure to respect the rate limit will result in an IP or API key ban.Since the remaining limit is returned in the header on each REST request, the remaining limit is tracked locally and can be requested through:```limit = bitvavo.getRemainingLimit()```The websocket functions however do not return a remaining limit, therefore the limit is only updated locally once a ban has been issued.## REST requestsThe general convention used in all functions (both REST and websockets), is that all optional parameters are passed as an dictionary, while required parameters are passed as separate values. Only when [placing orders](https://github.com/bitvavo/python-bitvavo-api#place-order) some of the optional parameters are required, since a limit order requires more information than a market order. The returned responses are all converted to a dictionary as well, such that `response['&lt;key&gt;'] = '&lt;value&gt;'`.### Getting startedThe API key and secret are required for private calls and optional for public calls. The access window and debugging parameter are optional for all calls. The access window is used to determine whether the request arrived within time, the value is specified in milliseconds. You can use the [time](https://github.com/bitvavo/python-bitvavo-api#get-time) function to synchronize your time to our server time if errors arise. REST url and WS url can be used to set a different endpoint (for testing purposes). Debugging should be set to true when you want to log additional information and full responses. Any parameter can be omitted, private functions will return an error when the api key and secret have not been set.```pythonfrom python_bitvavo_api.bitvavo import Bitvavobitvavo = Bitvavo({  'APIKEY': '&lt;APIKEY&gt;',  'APISECRET': '&lt;APISECRET&gt;',  'RESTURL': 'https://api.bitvavo.com/v2',  'WSURL': 'wss://ws.bitvavo.com/v2/',  'ACCESSWINDOW': 10000,  'DEBUGGING': False})```### General#### Get time```pythonresponse = bitvavo.time()print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;time&quot;: 1543397021396}```&lt;/details&gt;#### Get markets```python# options: marketresponse = bitvavo.markets({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;market&quot;: &quot;ADA-BTC&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;ADA&quot;,  &quot;quote&quot;: &quot;BTC&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;100&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;0.001&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}{  &quot;market&quot;: &quot;ADA-EUR&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;ADA&quot;,  &quot;quote&quot;: &quot;EUR&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;100&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;10&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}{  &quot;market&quot;: &quot;AE-BTC&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;AE&quot;,  &quot;quote&quot;: &quot;BTC&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;10&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;0.001&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}{  &quot;market&quot;: &quot;AE-EUR&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;AE&quot;,  &quot;quote&quot;: &quot;EUR&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;10&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;10&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}...```&lt;/details&gt;#### Get assets```python# options: symbolresponse = bitvavo.assets({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;symbol&quot;: &quot;ADA&quot;,    &quot;name&quot;: &quot;Cardano&quot;,    &quot;decimals&quot;: 6,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 20,    &quot;depositStatus&quot;: &quot;OK&quot;,    &quot;withdrawalFee&quot;: &quot;0.2&quot;,    &quot;withdrawalMinAmount&quot;: &quot;0.2&quot;,    &quot;withdrawalStatus&quot;: &quot;OK&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  {    &quot;symbol&quot;: &quot;AE&quot;,    &quot;name&quot;: &quot;Aeternity&quot;,    &quot;decimals&quot;: 8,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 30,    &quot;depositStatus&quot;: &quot;OK&quot;,    &quot;withdrawalFee&quot;: &quot;2&quot;,    &quot;withdrawalMinAmount&quot;: &quot;2&quot;,    &quot;withdrawalStatus&quot;: &quot;OK&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  {    &quot;symbol&quot;: &quot;AION&quot;,    &quot;name&quot;: &quot;Aion&quot;,    &quot;decimals&quot;: 8,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 0,    &quot;depositStatus&quot;: &quot;&quot;,    &quot;withdrawalFee&quot;: &quot;3&quot;,    &quot;withdrawalMinAmount&quot;: &quot;3&quot;,    &quot;withdrawalStatus&quot;: &quot;&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  {    &quot;symbol&quot;: &quot;ANT&quot;,    &quot;name&quot;: &quot;Aragon&quot;,    &quot;decimals&quot;: 8,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 30,    &quot;depositStatus&quot;: &quot;OK&quot;,    &quot;withdrawalFee&quot;: &quot;2&quot;,    &quot;withdrawalMinAmount&quot;: &quot;2&quot;,    &quot;withdrawalStatus&quot;: &quot;OK&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  ...]```&lt;/details&gt;### Market Data#### Get book per market```python# options: depthresponse = bitvavo.book('BTC-EUR', {})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;nonce&quot;: 26393,  &quot;bids&quot;: [    [      &quot;3008.8&quot;,      &quot;1.47148675&quot;    ],    [      &quot;3008.3&quot;,      &quot;1.10515032&quot;    ],    [      &quot;3007.7&quot;,      &quot;1.38627613&quot;    ],    [      &quot;3007.2&quot;,      &quot;0.72343843&quot;    ],    [      &quot;3006.7&quot;,      &quot;0.96668815&quot;    ],    [      &quot;3006.2&quot;,      &quot;3.50846635&quot;    ],    ...  ],  &quot;asks&quot;: [    [      &quot;3009.2&quot;,      &quot;2.74009412&quot;    ],    [      &quot;3011.3&quot;,      &quot;3.03788636&quot;    ],    [      &quot;3013.1&quot;,      &quot;3.91270989&quot;    ],    [      &quot;3015.1&quot;,      &quot;4.33891895&quot;    ],    [      &quot;3016&quot;,      &quot;1.34888815&quot;    ],    [      &quot;3016.5&quot;,      &quot;1.95726644&quot;    ],    ...  ]}```&lt;/details&gt;#### Get trades per market```python# options: limit, start, end, tradeIdFrom, tradeIdToresponse = bitvavo.publicTrades('BTC-EUR', {})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[   {    &quot;id&quot;: &quot;041689b3-cbb6-49ec-9964-2fb2d353dd1b&quot;,    &quot;timestamp&quot;: 1565672192018,    &quot;amount&quot;: &quot;0.12735922&quot;,    &quot;price&quot;: &quot;10147&quot;,    &quot;side&quot;: &quot;sell&quot;  },  {    &quot;id&quot;: &quot;fb1712f2-e183-457c-b9e5-ff0d31fccd1f&quot;,    &quot;timestamp&quot;: 1565672192014,    &quot;amount&quot;: &quot;0.08703703&quot;,    &quot;price&quot;: &quot;10149&quot;,    &quot;side&quot;: &quot;sell&quot;  },  {    &quot;id&quot;: &quot;b8cf5e20-65ca-4f45-a94c-44b7cb3952a5&quot;,    &quot;timestamp&quot;: 1565672192009,    &quot;amount&quot;: &quot;0.0979994&quot;,    &quot;price&quot;: &quot;10151&quot;,    &quot;side&quot;: &quot;sell&quot;  },  {    &quot;id&quot;: &quot;d10cc7ec-a735-4d5c-8169-c3099f8b5003&quot;,    &quot;timestamp&quot;: 1565672144747,    &quot;amount&quot;: &quot;0.01975188&quot;,    &quot;price&quot;: &quot;10151&quot;,    &quot;side&quot;: &quot;sell&quot;  }  ...]```&lt;/details&gt;#### Get candles per market```python# options: limit, start, endresponse = bitvavo.candles('BTC-EUR', '1h', {})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  [    1548669600000,    &quot;3012.9&quot;,    &quot;3015.8&quot;,    &quot;3000&quot;,    &quot;3012.9&quot;,    &quot;8&quot;  ],  [    1548669600000,    &quot;3012.9&quot;,    &quot;3015.8&quot;,    &quot;3000&quot;,    &quot;3012.9&quot;,    &quot;8&quot;  ],  [    1548669600000,    &quot;3012.9&quot;,    &quot;3015.8&quot;,    &quot;3000&quot;,    &quot;3012.9&quot;,    &quot;8&quot;  ],  [    1548417600000,    &quot;3124&quot;,    &quot;3125.1&quot;,    &quot;3124&quot;,    &quot;3124&quot;,    &quot;0.1&quot;  ],  [    1548237600000,    &quot;3143&quot;,    &quot;3143.3&quot;,    &quot;3141.1&quot;,    &quot;3143&quot;,    &quot;60.67250851&quot;  ],  ...]```&lt;/details&gt;#### Get price ticker```python# options: marketresponse = bitvavo.tickerPrice({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;market&quot;: &quot;EOS-EUR&quot;,    &quot;price&quot;: &quot;2.0142&quot;  },  {    &quot;market&quot;: &quot;XRP-EUR&quot;,    &quot;price&quot;: &quot;0.27848&quot;  },  {    &quot;market&quot;: &quot;ETH-EUR&quot;,    &quot;price&quot;: &quot;99.877&quot;  },  {    &quot;market&quot;: &quot;IOST-EUR&quot;,    &quot;price&quot;: &quot;0.005941&quot;  },  {    &quot;market&quot;: &quot;BCH-EUR&quot;,    &quot;price&quot;: &quot;106.57&quot;  },  {    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;price&quot;: &quot;3008.9&quot;  },  {    &quot;market&quot;: &quot;STORM-EUR&quot;,    &quot;price&quot;: &quot;0.0025672&quot;  },  {    &quot;market&quot;: &quot;EOS-BTC&quot;,    &quot;price&quot;: &quot;0.00066289&quot;  },  ...]```&lt;/details&gt;#### Get book ticker```python# options: marketresponse = bitvavo.tickerBook({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;market&quot;: &quot;ZIL-BTC&quot;,    &quot;bid&quot;: &quot;0.00000082&quot;,    &quot;ask&quot;: &quot;0.00000083&quot;,    &quot;bidSize&quot;: &quot;13822.00651664&quot;,    &quot;askSize&quot;: &quot;5743.88893286&quot;  },  {    &quot;market&quot;: &quot;ZIL-EUR&quot;,    &quot;bid&quot;: &quot;0.0082973&quot;,    &quot;ask&quot;: &quot;0.0084058&quot;,    &quot;bidSize&quot;: &quot;19586.15862762&quot;,    &quot;askSize&quot;: &quot;19048.86640562&quot;  },  {    &quot;market&quot;: &quot;ZRX-BTC&quot;,    &quot;bid&quot;: &quot;0.00001625&quot;,    &quot;ask&quot;: &quot;0.00001629&quot;,    &quot;bidSize&quot;: &quot;823.87743487&quot;,    &quot;askSize&quot;: &quot;868.23901671&quot;  },  {    &quot;market&quot;: &quot;ZRX-EUR&quot;,    &quot;bid&quot;: &quot;0.16443&quot;,    &quot;ask&quot;: &quot;0.16498&quot;,    &quot;bidSize&quot;: &quot;898.35016343&quot;,    &quot;askSize&quot;: &quot;419.16696625&quot;  },  ...]```&lt;/details&gt;#### Get 24 hour ticker```python# options: marketresponse = bitvavo.ticker24h({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;market&quot;: &quot;XVG-EUR&quot;,    &quot;open&quot;: &quot;0.0045692&quot;,    &quot;high&quot;: &quot;0.0045853&quot;,    &quot;low&quot;: &quot;0.0043599&quot;,    &quot;last&quot;: &quot;0.0044047&quot;,    &quot;volume&quot;: &quot;594786.9689017&quot;,    &quot;volumeQuote&quot;: &quot;2648.07&quot;,    &quot;bid&quot;: &quot;0.0043493&quot;,    &quot;bidSize&quot;: &quot;1561220.43836043&quot;,    &quot;ask&quot;: &quot;0.004453&quot;,    &quot;askSize&quot;: &quot;1457312.74672114&quot;,    &quot;timestamp&quot;: 1565684835077  },  {    &quot;market&quot;: &quot;ZIL-EUR&quot;,    &quot;open&quot;: &quot;0.0081178&quot;,    &quot;high&quot;: &quot;0.0084196&quot;,    &quot;low&quot;: &quot;0.0077389&quot;,    &quot;last&quot;: &quot;0.0084071&quot;,    &quot;volume&quot;: &quot;950455.78568402&quot;,    &quot;volumeQuote&quot;: &quot;7687.71&quot;,    &quot;bid&quot;: &quot;0.008294&quot;,    &quot;bidSize&quot;: &quot;19593.90088084&quot;,    &quot;ask&quot;: &quot;0.0084&quot;,    &quot;askSize&quot;: &quot;19048.86640562&quot;,    &quot;timestamp&quot;: 1565684834952  },  {    &quot;market&quot;: &quot;ZRX-EUR&quot;,    &quot;open&quot;: &quot;0.1731&quot;,    &quot;high&quot;: &quot;0.1731&quot;,    &quot;low&quot;: &quot;0.16426&quot;,    &quot;last&quot;: &quot;0.16477&quot;,    &quot;volume&quot;: &quot;22486.29651877&quot;,    &quot;volumeQuote&quot;: &quot;3727.45&quot;,    &quot;bid&quot;: &quot;0.16436&quot;,    &quot;bidSize&quot;: &quot;898.75082725&quot;,    &quot;ask&quot;: &quot;0.16476&quot;,    &quot;askSize&quot;: &quot;419.31541176&quot;,    &quot;timestamp&quot;: 1565684835335  },  ...]```&lt;/details&gt;### Private#### Place orderWhen placing an order, make sure that the correct optional parameters are set. For a limit order it is required to set both the amount and price. A market order is valid if either amount or amountQuote is set.```python# optional parameters: limit:(amount, price, postOnly), market:(amount, amountQuote, disableMarketProtection),#                      stopLoss/takeProfit:(amount, amountQuote, disableMarketProtection, triggerType, triggerReference, triggerAmount)#                      stopLossLimit/takeProfitLimit:(amount, price, postOnly, triggerType, triggerReference, triggerAmount)#                      all orderTypes: timeInForce, selfTradePrevention, responseRequiredresponse = bitvavo.placeOrder('BTC-EUR', 'buy', 'limit', { 'amount': '1', 'price': '3000' })print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{    &quot;orderId&quot;: &quot;5444f908-67c4-4c5d-a138-7e834b94360e&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548671550610,    &quot;updated&quot;: 1548671550610,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3007.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false}```&lt;/details&gt;#### Update orderWhen updating an order make sure that at least one of the optional parameters has been set. Otherwise nothing can be updated.```python# Optional parameters: limit:(amount, amountRemaining, price, timeInForce, selfTradePrevention, postOnly)#          untriggered stopLoss/takeProfit:(amount, amountQuote, disableMarketProtection, triggerType, triggerReference, triggerAmount)#                      stopLossLimit/takeProfitLimit: (amount, price, postOnly, triggerType, triggerReference, triggerAmount)response = bitvavo.updateOrder('BTC-EUR', '5444f908-67c4-4c5d-a138-7e834b94360e', { 'amount': '1.1' })print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{    &quot;orderId&quot;: &quot;5444f908-67c4-4c5d-a138-7e834b94360e&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548671550610,    &quot;updated&quot;: 1548671831685,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1.1&quot;,    &quot;amountRemaining&quot;: &quot;1.1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3308.25&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false}```&lt;/details&gt;#### Get order```pythonresponse = bitvavo.getOrder('BTC-EUR', '5444f908-67c4-4c5d-a138-7e834b94360e')print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{    &quot;orderId&quot;: &quot;5444f908-67c4-4c5d-a138-7e834b94360e&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548671550610,    &quot;updated&quot;: 1548671550610,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3007.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false}```&lt;/details&gt;#### Cancel order```pythonresponse = bitvavo.cancelOrder('BTC-EUR', '5986db7b-8d6e-4577-8003-22f363fb3626')print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;orderId&quot;: &quot;5986db7b-8d6e-4577-8003-22f363fb3626&quot;}```&lt;/details&gt;#### Get ordersReturns the same as get order, but can be used to return multiple orders at once.```python# options: limit, start, end, orderIdFrom, orderIdToresponse = bitvavo.getOrders('BTC-EUR', {})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;orderId&quot;: &quot;bad72641-7755-464c-8dcb-7c1d59b142ab&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548670024870,    &quot;updated&quot;: 1548670024870,    &quot;status&quot;: &quot;partiallyFilled&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;0.5&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;1504.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0.5&quot;,    &quot;filledAmountQuote&quot;: &quot;1500&quot;,    &quot;feePaid&quot;: &quot;3&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [      {        &quot;id&quot;: &quot;108c3633-0276-4480-a902-17a01829deae&quot;,        &quot;timestamp&quot;: 1548671992530,        &quot;amount&quot;: &quot;0.5&quot;,        &quot;price&quot;: &quot;3000&quot;,        &quot;taker&quot;: false,        &quot;fee&quot;: &quot;3&quot;,        &quot;feeCurrency&quot;: &quot;EUR&quot;,        &quot;settled&quot;: true      }    ],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  {    &quot;orderId&quot;: &quot;da1d8330-d6b7-4753-800a-01ad510a679b&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548666570234,    &quot;updated&quot;: 1548666570234,    &quot;status&quot;: &quot;filled&quot;,    &quot;side&quot;: &quot;sell&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;0.1&quot;,    &quot;amountRemaining&quot;: &quot;0&quot;,    &quot;price&quot;: &quot;4000&quot;,    &quot;onHold&quot;: &quot;0&quot;,    &quot;onHoldCurrency&quot;: &quot;BTC&quot;,    &quot;filledAmount&quot;: &quot;0.1&quot;,    &quot;filledAmountQuote&quot;: &quot;400&quot;,    &quot;feePaid&quot;: &quot;0.8&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [      {        &quot;id&quot;: &quot;79e4bf2f-4fac-4895-9bb2-a5c9c6e2ff3f&quot;,        &quot;timestamp&quot;: 1548666712071,        &quot;amount&quot;: &quot;0.1&quot;,        &quot;price&quot;: &quot;4000&quot;,        &quot;taker&quot;: false,        &quot;fee&quot;: &quot;0.8&quot;,        &quot;feeCurrency&quot;: &quot;EUR&quot;,        &quot;settled&quot;: true      }    ],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  ...]```&lt;/details&gt;#### Cancel ordersCancels all orders in a market. If no market is specified, all orders of an account will be canceled.```python# options: marketresponse = bitvavo.cancelOrders({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;orderId&quot;: &quot;4f9a809b-859f-4d8d-97b3-037113cdf2d0&quot;  },   {    &quot;orderId&quot;: &quot;95313ae5-ad65-4430-a0fb-63591bbc337c&quot;.  },   {    &quot;orderId&quot;: &quot;2465c3ab-5ae2-4d4d-bec7-345f51b3494d&quot;  },  ...]```&lt;/details&gt;#### Get orders openReturns all orders which are not filled or canceled.```python# options: marketresponse = bitvavo.ordersOpen({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;orderId&quot;: &quot;bad72641-7755-464c-8dcb-7c1d59b142ab&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548670024870,    &quot;updated&quot;: 1548670024870,    &quot;status&quot;: &quot;partiallyFilled&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;0.5&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;1504.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0.5&quot;,    &quot;filledAmountQuote&quot;: &quot;1500&quot;,    &quot;feePaid&quot;: &quot;3&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [      {        &quot;id&quot;: &quot;108c3633-0276-4480-a902-17a01829deae&quot;,        &quot;timestamp&quot;: 1548671992530,        &quot;amount&quot;: &quot;0.5&quot;,        &quot;price&quot;: &quot;3000&quot;,        &quot;taker&quot;: false,        &quot;fee&quot;: &quot;3&quot;,        &quot;feeCurrency&quot;: &quot;EUR&quot;,        &quot;settled&quot;: true      }    ],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  {    &quot;orderId&quot;: &quot;7586d610-2732-4ee6-8516-bed18cfc853b&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548670088749,    &quot;updated&quot;: 1548670088749,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3007.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  ...]```&lt;/details&gt;#### Get tradesReturns all trades within a market for this account.```python# options: limit, start, end, tradeIdFrom, tradeIdToresponse = bitvavo.trades('BTC-EUR', {})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;id&quot;: &quot;108c3633-0276-4480-a902-17a01829deae&quot;,    &quot;timestamp&quot;: 1548671992530,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;amount&quot;: &quot;0.5&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;taker&quot;: false,    &quot;fee&quot;: &quot;3&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;settled&quot;: true  },  {    &quot;id&quot;: &quot;79e4bf2f-4fac-4895-9bb2-a5c9c6e2ff3f&quot;,    &quot;timestamp&quot;: 1548666712071,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;side&quot;: &quot;sell&quot;,    &quot;amount&quot;: &quot;0.1&quot;,    &quot;price&quot;: &quot;4000&quot;,    &quot;taker&quot;: false,    &quot;fee&quot;: &quot;0.8&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;settled&quot;: true  },  {    &quot;id&quot;: &quot;102486d3-5b72-4fa2-89cf-84c934edb7ae&quot;,    &quot;timestamp&quot;: 1548666561486,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;side&quot;: &quot;sell&quot;,    &quot;amount&quot;: &quot;0.1&quot;,    &quot;price&quot;: &quot;4000&quot;,    &quot;taker&quot;: true,    &quot;fee&quot;: &quot;1&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;settled&quot;: true  },  ...]```&lt;/details&gt;#### Get accountReturns the fee tier for this account.```pythonresponse = bitvavo.account()print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;fees&quot;: {    &quot;taker&quot;: &quot;0.0025&quot;,    &quot;maker&quot;: &quot;0.0015&quot;,    &quot;volume&quot;: &quot;100.00&quot;  }}```&lt;/details&gt;#### Get balanceReturns the balance for this account.```python# options: symbolresponse = bitvavo.balance({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;symbol&quot;: &quot;EUR&quot;,    &quot;available&quot;: &quot;2599.95&quot;,    &quot;inOrder&quot;: &quot;2022.65&quot;  },  {    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;available&quot;: &quot;1.65437&quot;,    &quot;inOrder&quot;: &quot;0.079398&quot;  },  {    &quot;symbol&quot;: &quot;ADA&quot;,    &quot;available&quot;: &quot;4.8&quot;,    &quot;inOrder&quot;: &quot;0&quot;  },  {    &quot;symbol&quot;: &quot;BCH&quot;,    &quot;available&quot;: &quot;0.00952811&quot;,    &quot;inOrder&quot;: &quot;0&quot;  },  {    &quot;symbol&quot;: &quot;BSV&quot;,    &quot;available&quot;: &quot;0.00952811&quot;,    &quot;inOrder&quot;: &quot;0&quot;  },  ...]```&lt;/details&gt;#### Deposit assetsReturns the address which can be used to deposit funds.```pythonresponse = bitvavo.depositAssets('BTC')print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;address&quot;: &quot;BitcoinAddress&quot;}```&lt;/details&gt;#### Withdraw assetsCan be used to withdraw funds from Bitvavo.```python# optional parameters: paymentId, internal, addWithdrawalFeeresponse = bitvavo.withdrawAssets('BTC', '1', 'BitcoinAddress', {})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;success&quot;: True,  &quot;symbol&quot;: &quot;BTC&quot;,  &quot;amount&quot;: &quot;1&quot;}```&lt;/details&gt;#### Get deposit historyReturns the deposit history of your account.```python# options: symbol, limit, start, endresponse = bitvavo.depositHistory({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;timestamp&quot;: 1521550025000,    &quot;symbol&quot;: &quot;EUR&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;fee&quot;: &quot;0&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;address&quot;: &quot;NL12RABO324234234&quot;  },  {    &quot;timestamp&quot;: 1511873910000,    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;amount&quot;: &quot;0.099&quot;,    &quot;fee&quot;: &quot;0&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;txId&quot;: &quot;0c6497e608212a516b8218674cb0ca04f65b67a00fe8bddaa1ecb03e9b029255&quot;  },  ...]```&lt;/details&gt;#### Get withdrawal historyReturns the withdrawal history of an account.```python# options: symbol, limit, start, endresponse = bitvavo.withdrawalHistory({})print(response)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;timestamp&quot;: 1548425559000,    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;amount&quot;: &quot;0.09994&quot;,    &quot;fee&quot;: &quot;0.00006&quot;,    &quot;status&quot;: &quot;awaiting_processing&quot;,    &quot;address&quot;: &quot;1CqtG5z55x7bYD5GxsAXPx59DEyujs4bjm&quot;  },  {    &quot;timestamp&quot;: 1548409721000,    &quot;symbol&quot;: &quot;EUR&quot;,    &quot;amount&quot;: &quot;50&quot;,    &quot;fee&quot;: &quot;0&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;address&quot;: &quot;NL123BIM&quot;  },  {    &quot;timestamp&quot;: 1537803091000,    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;amount&quot;: &quot;0.01939&quot;,    &quot;fee&quot;: &quot;0.00002&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;txId&quot;: &quot;da2299c86fce67eb899aeaafbe1f81cf663a3850cf9f3337c92b2d87945532db&quot;,    &quot;address&quot;: &quot;3QpyxeA7yWWsSURXEmuBBzHpxjqn7Rbyme&quot;  },  ...]```&lt;/details&gt;## WebsocketsAll requests which can be done through REST requests can also be performed over websockets. Bitvavo also provides six [subscriptions](https://github.com/bitvavo/python-bitvavo-api#subscriptions). If subscribed to these, updates specific for that type/market are pushed immediately.### Getting startedThe websocket object should be intialised through the `newWebsocket()` function. After which a callback for the errors should be set. After this any desired function can be called. Finally the main thread should be kept alive for as long as you want the socket to stay open. This can be achieved through a simple `while()` loop, where the remaining limit is checked. This is in case a ban has been issued, otherwise the websocket object will keep trying to reconnect, while our servers keep closing the connection.```pythondef errorCallback(error):  print(&quot;Handle error here&quot;, error)def ownCallback(response):  print(&quot;Handle function response here&quot;, response)websocket = bitvavo.newWebsocket()websocket.setErrorCallback(errorCallback)# Call functions here, like:# websocket.time(ownCallback)limit = bitvavo.getRemainingLimit()try:  while(limit &gt; 0):    time.sleep(0.5)    limit = bitvavo.getRemainingLimit()except KeyboardInterrupt:  websocket.closeSocket()```The api key and secret are copied from the bitvavo object. Therefore if you want to use the private portion of the websockets API, you should set both the key and secret as specified in [REST requests](https://github.com/bitvavo/python-bitvavo-api#rest-requests).### Public#### Get time```pythonwebsocket.time(ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;time&quot;: 1543397021396}```&lt;/details&gt;#### Get markets```python# options: marketwebsocket.markets({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;market&quot;: &quot;ADA-BTC&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;ADA&quot;,  &quot;quote&quot;: &quot;BTC&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;100&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;0.001&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}{  &quot;market&quot;: &quot;ADA-EUR&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;ADA&quot;,  &quot;quote&quot;: &quot;EUR&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;100&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;10&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}{  &quot;market&quot;: &quot;AE-BTC&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;AE&quot;,  &quot;quote&quot;: &quot;BTC&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;10&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;0.001&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}{  &quot;market&quot;: &quot;AE-EUR&quot;,  &quot;status&quot;: &quot;trading&quot;,  &quot;base&quot;: &quot;AE&quot;,  &quot;quote&quot;: &quot;EUR&quot;,  &quot;pricePrecision&quot;: 5,  &quot;minOrderInBaseAsset&quot;: &quot;10&quot;,  &quot;minOrderInQuoteAsset&quot;: &quot;10&quot;,  &quot;orderTypes&quot;: [    &quot;market&quot;,    &quot;limit&quot;  ]}...```&lt;/details&gt;#### Get assets```python# options: symbolwebsocket.assets({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;symbol&quot;: &quot;ADA&quot;,    &quot;name&quot;: &quot;Cardano&quot;,    &quot;decimals&quot;: 6,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 20,    &quot;depositStatus&quot;: &quot;OK&quot;,    &quot;withdrawalFee&quot;: &quot;0.2&quot;,    &quot;withdrawalMinAmount&quot;: &quot;0.2&quot;,    &quot;withdrawalStatus&quot;: &quot;OK&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  {    &quot;symbol&quot;: &quot;AE&quot;,    &quot;name&quot;: &quot;Aeternity&quot;,    &quot;decimals&quot;: 8,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 30,    &quot;depositStatus&quot;: &quot;OK&quot;,    &quot;withdrawalFee&quot;: &quot;2&quot;,    &quot;withdrawalMinAmount&quot;: &quot;2&quot;,    &quot;withdrawalStatus&quot;: &quot;OK&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  {    &quot;symbol&quot;: &quot;AION&quot;,    &quot;name&quot;: &quot;Aion&quot;,    &quot;decimals&quot;: 8,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 0,    &quot;depositStatus&quot;: &quot;&quot;,    &quot;withdrawalFee&quot;: &quot;3&quot;,    &quot;withdrawalMinAmount&quot;: &quot;3&quot;,    &quot;withdrawalStatus&quot;: &quot;&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  {    &quot;symbol&quot;: &quot;ANT&quot;,    &quot;name&quot;: &quot;Aragon&quot;,    &quot;decimals&quot;: 8,    &quot;depositFee&quot;: &quot;0&quot;,    &quot;depositConfirmations&quot;: 30,    &quot;depositStatus&quot;: &quot;OK&quot;,    &quot;withdrawalFee&quot;: &quot;2&quot;,    &quot;withdrawalMinAmount&quot;: &quot;2&quot;,    &quot;withdrawalStatus&quot;: &quot;OK&quot;,    &quot;networks&quot;: [      &quot;Mainnet&quot;    ],    &quot;message&quot;: &quot;&quot;  },  ...]```&lt;/details&gt;#### Get book per market```python# options: depthwebsocket.book('BTC-EUR', {}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;nonce&quot;: 26393,  &quot;bids&quot;: [    [      &quot;3008.8&quot;,      &quot;1.47148675&quot;    ],    [      &quot;3008.3&quot;,      &quot;1.10515032&quot;    ],    [      &quot;3007.7&quot;,      &quot;1.38627613&quot;    ],    [      &quot;3007.2&quot;,      &quot;0.72343843&quot;    ],    [      &quot;3006.7&quot;,      &quot;0.96668815&quot;    ],    [      &quot;3006.2&quot;,      &quot;3.50846635&quot;    ],    ...  ],  &quot;asks&quot;: [    [      &quot;3009.2&quot;,      &quot;2.74009412&quot;    ],    [      &quot;3011.3&quot;,      &quot;3.03788636&quot;    ],    [      &quot;3013.1&quot;,      &quot;3.91270989&quot;    ],    [      &quot;3015.1&quot;,      &quot;4.33891895&quot;    ],    [      &quot;3016&quot;,      &quot;1.34888815&quot;    ],    [      &quot;3016.5&quot;,      &quot;1.95726644&quot;    ],    ...  ]}```&lt;/details&gt;#### Get trades per market```python# options: limit, start, end, tradeIdFrom, tradeIdTowebsocket.publicTrades('BTC-EUR', {}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[   {    &quot;id&quot;: &quot;041689b3-cbb6-49ec-9964-2fb2d353dd1b&quot;,    &quot;timestamp&quot;: 1565672192018,    &quot;amount&quot;: &quot;0.12735922&quot;,    &quot;price&quot;: &quot;10147&quot;,    &quot;side&quot;: &quot;sell&quot;  },  {    &quot;id&quot;: &quot;fb1712f2-e183-457c-b9e5-ff0d31fccd1f&quot;,    &quot;timestamp&quot;: 1565672192014,    &quot;amount&quot;: &quot;0.08703703&quot;,    &quot;price&quot;: &quot;10149&quot;,    &quot;side&quot;: &quot;sell&quot;  },  {    &quot;id&quot;: &quot;b8cf5e20-65ca-4f45-a94c-44b7cb3952a5&quot;,    &quot;timestamp&quot;: 1565672192009,    &quot;amount&quot;: &quot;0.0979994&quot;,    &quot;price&quot;: &quot;10151&quot;,    &quot;side&quot;: &quot;sell&quot;  },  {    &quot;id&quot;: &quot;d10cc7ec-a735-4d5c-8169-c3099f8b5003&quot;,    &quot;timestamp&quot;: 1565672144747,    &quot;amount&quot;: &quot;0.01975188&quot;,    &quot;price&quot;: &quot;10151&quot;,    &quot;side&quot;: &quot;sell&quot;  }  ...]```&lt;/details&gt;#### Get candles per market```python# options: limitwebsocket.candles('BTC-EUR', '1h', {}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  [    1548669600000,    &quot;3012.9&quot;,    &quot;3015.8&quot;,    &quot;3000&quot;,    &quot;3012.9&quot;,    &quot;8&quot;  ],  [    1548669600000,    &quot;3012.9&quot;,    &quot;3015.8&quot;,    &quot;3000&quot;,    &quot;3012.9&quot;,    &quot;8&quot;  ],  [    1548669600000,    &quot;3012.9&quot;,    &quot;3015.8&quot;,    &quot;3000&quot;,    &quot;3012.9&quot;,    &quot;8&quot;  ],  [    1548417600000,    &quot;3124&quot;,    &quot;3125.1&quot;,    &quot;3124&quot;,    &quot;3124&quot;,    &quot;0.1&quot;  ],  [    1548237600000,    &quot;3143&quot;,    &quot;3143.3&quot;,    &quot;3141.1&quot;,    &quot;3143&quot;,    &quot;60.67250851&quot;  ],  ...]```&lt;/details&gt;#### Get price ticker```python# options: marketwebsocket.tickerPrice({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;market&quot;: &quot;EOS-EUR&quot;,    &quot;price&quot;: &quot;2.0142&quot;  },  {    &quot;market&quot;: &quot;XRP-EUR&quot;,    &quot;price&quot;: &quot;0.27848&quot;  },  {    &quot;market&quot;: &quot;ETH-EUR&quot;,    &quot;price&quot;: &quot;99.877&quot;  },  {    &quot;market&quot;: &quot;IOST-EUR&quot;,    &quot;price&quot;: &quot;0.005941&quot;  },  {    &quot;market&quot;: &quot;BCH-EUR&quot;,    &quot;price&quot;: &quot;106.57&quot;  },  {    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;price&quot;: &quot;3008.9&quot;  },  {    &quot;market&quot;: &quot;STORM-EUR&quot;,    &quot;price&quot;: &quot;0.0025672&quot;  },  {    &quot;market&quot;: &quot;EOS-BTC&quot;,    &quot;price&quot;: &quot;0.00066289&quot;  },  ...]```&lt;/details&gt;#### Get book ticker```python# options: marketwebsocket.tickerBook({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;market&quot;: &quot;ZIL-BTC&quot;,    &quot;bid&quot;: &quot;0.00000082&quot;,    &quot;ask&quot;: &quot;0.00000083&quot;,    &quot;bidSize&quot;: &quot;13822.00651664&quot;,    &quot;askSize&quot;: &quot;5743.88893286&quot;  },  {    &quot;market&quot;: &quot;ZIL-EUR&quot;,    &quot;bid&quot;: &quot;0.0082973&quot;,    &quot;ask&quot;: &quot;0.0084058&quot;,    &quot;bidSize&quot;: &quot;19586.15862762&quot;,    &quot;askSize&quot;: &quot;19048.86640562&quot;  },  {    &quot;market&quot;: &quot;ZRX-BTC&quot;,    &quot;bid&quot;: &quot;0.00001625&quot;,    &quot;ask&quot;: &quot;0.00001629&quot;,    &quot;bidSize&quot;: &quot;823.87743487&quot;,    &quot;askSize&quot;: &quot;868.23901671&quot;  },  {    &quot;market&quot;: &quot;ZRX-EUR&quot;,    &quot;bid&quot;: &quot;0.16443&quot;,    &quot;ask&quot;: &quot;0.16498&quot;,    &quot;bidSize&quot;: &quot;898.35016343&quot;,    &quot;askSize&quot;: &quot;419.16696625&quot;  },  ...]```&lt;/details&gt;#### Get 24 hour ticker```python# options: marketwebsocket.ticker24h({}, timeCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;market&quot;: &quot;XVG-EUR&quot;,    &quot;open&quot;: &quot;0.0045692&quot;,    &quot;high&quot;: &quot;0.0045853&quot;,    &quot;low&quot;: &quot;0.0043599&quot;,    &quot;last&quot;: &quot;0.0044047&quot;,    &quot;volume&quot;: &quot;594786.9689017&quot;,    &quot;volumeQuote&quot;: &quot;2648.07&quot;,    &quot;bid&quot;: &quot;0.0043493&quot;,    &quot;bidSize&quot;: &quot;1561220.43836043&quot;,    &quot;ask&quot;: &quot;0.004453&quot;,    &quot;askSize&quot;: &quot;1457312.74672114&quot;,    &quot;timestamp&quot;: 1565684835077  },  {    &quot;market&quot;: &quot;ZIL-EUR&quot;,    &quot;open&quot;: &quot;0.0081178&quot;,    &quot;high&quot;: &quot;0.0084196&quot;,    &quot;low&quot;: &quot;0.0077389&quot;,    &quot;last&quot;: &quot;0.0084071&quot;,    &quot;volume&quot;: &quot;950455.78568402&quot;,    &quot;volumeQuote&quot;: &quot;7687.71&quot;,    &quot;bid&quot;: &quot;0.008294&quot;,    &quot;bidSize&quot;: &quot;19593.90088084&quot;,    &quot;ask&quot;: &quot;0.0084&quot;,    &quot;askSize&quot;: &quot;19048.86640562&quot;,    &quot;timestamp&quot;: 1565684834952  },  {    &quot;market&quot;: &quot;ZRX-EUR&quot;,    &quot;open&quot;: &quot;0.1731&quot;,    &quot;high&quot;: &quot;0.1731&quot;,    &quot;low&quot;: &quot;0.16426&quot;,    &quot;last&quot;: &quot;0.16477&quot;,    &quot;volume&quot;: &quot;22486.29651877&quot;,    &quot;volumeQuote&quot;: &quot;3727.45&quot;,    &quot;bid&quot;: &quot;0.16436&quot;,    &quot;bidSize&quot;: &quot;898.75082725&quot;,    &quot;ask&quot;: &quot;0.16476&quot;,    &quot;askSize&quot;: &quot;419.31541176&quot;,    &quot;timestamp&quot;: 1565684835335  },  ...]```&lt;/details&gt;### Private#### Place orderWhen placing an order, make sure that the correct optional parameters are set. For a limit order it is required to set both the amount and price. A market order is valid if either amount or amountQuote has been set.```python# optional parameters: limit:(amount, price, postOnly), market:(amount, amountQuote, disableMarketProtection),#                      stopLoss/takeProfit:(amount, amountQuote, disableMarketProtection, triggerType, triggerReference, triggerAmount)#                      stopLossLimit/takeProfitLimit:(amount, price, postOnly, triggerType, triggerReference, triggerAmount)#                      all orderTypes: timeInForce, selfTradePrevention, responseRequiredwebsocket.placeOrder('BTC-EUR', 'buy', 'limit', { 'amount': '1', 'price': '3000' }, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{    &quot;orderId&quot;: &quot;5444f908-67c4-4c5d-a138-7e834b94360e&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548671550610,    &quot;updated&quot;: 1548671550610,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3007.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false}```&lt;/details&gt;#### Update orderWhen updating an order make sure that at least one of the optional parameters has been set. Otherwise nothing can be updated.```python# Optional parameters: limit:(amount, amountRemaining, price, timeInForce, selfTradePrevention, postOnly)#          untriggered stopLoss/takeProfit:(amount, amountQuote, disableMarketProtection, triggerType, triggerReference, triggerAmount)#                      stopLossLimit/takeProfitLimit: (amount, price, postOnly, triggerType, triggerReference, triggerAmount)websocket.updateOrder('BTC-EUR', '5444f908-67c4-4c5d-a138-7e834b94360e', { 'amount': '1.1' }, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{    &quot;orderId&quot;: &quot;5444f908-67c4-4c5d-a138-7e834b94360e&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548671550610,    &quot;updated&quot;: 1548671831685,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1.1&quot;,    &quot;amountRemaining&quot;: &quot;1.1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3308.25&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false}```&lt;/details&gt;#### Get order```pythonwebsocket.getOrder('BTC-EUR', '5444f908-67c4-4c5d-a138-7e834b94360e', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{    &quot;orderId&quot;: &quot;5444f908-67c4-4c5d-a138-7e834b94360e&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548671550610,    &quot;updated&quot;: 1548671550610,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3007.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false}```&lt;/details&gt;#### Cancel order```pythonwebsocket.cancelOrder('BTC-EUR', '5986db7b-8d6e-4577-8003-22f363fb3626', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;orderId&quot;: &quot;5986db7b-8d6e-4577-8003-22f363fb3626&quot;}```&lt;/details&gt;#### Get ordersReturns the same as get order, but can be used to return multiple orders at once.```python# options: limit, start, end, orderIdFrom, orderIdTowebsocket.getOrders('BTC-EUR', {}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;orderId&quot;: &quot;bad72641-7755-464c-8dcb-7c1d59b142ab&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548670024870,    &quot;updated&quot;: 1548670024870,    &quot;status&quot;: &quot;partiallyFilled&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;0.5&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;1504.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0.5&quot;,    &quot;filledAmountQuote&quot;: &quot;1500&quot;,    &quot;feePaid&quot;: &quot;3&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [      {        &quot;id&quot;: &quot;108c3633-0276-4480-a902-17a01829deae&quot;,        &quot;timestamp&quot;: 1548671992530,        &quot;amount&quot;: &quot;0.5&quot;,        &quot;price&quot;: &quot;3000&quot;,        &quot;taker&quot;: false,        &quot;fee&quot;: &quot;3&quot;,        &quot;feeCurrency&quot;: &quot;EUR&quot;,        &quot;settled&quot;: true      }    ],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  {    &quot;orderId&quot;: &quot;da1d8330-d6b7-4753-800a-01ad510a679b&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548666570234,    &quot;updated&quot;: 1548666570234,    &quot;status&quot;: &quot;filled&quot;,    &quot;side&quot;: &quot;sell&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;0.1&quot;,    &quot;amountRemaining&quot;: &quot;0&quot;,    &quot;price&quot;: &quot;4000&quot;,    &quot;onHold&quot;: &quot;0&quot;,    &quot;onHoldCurrency&quot;: &quot;BTC&quot;,    &quot;filledAmount&quot;: &quot;0.1&quot;,    &quot;filledAmountQuote&quot;: &quot;400&quot;,    &quot;feePaid&quot;: &quot;0.8&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [      {        &quot;id&quot;: &quot;79e4bf2f-4fac-4895-9bb2-a5c9c6e2ff3f&quot;,        &quot;timestamp&quot;: 1548666712071,        &quot;amount&quot;: &quot;0.1&quot;,        &quot;price&quot;: &quot;4000&quot;,        &quot;taker&quot;: false,        &quot;fee&quot;: &quot;0.8&quot;,        &quot;feeCurrency&quot;: &quot;EUR&quot;,        &quot;settled&quot;: true      }    ],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  ...]```&lt;/details&gt;#### Cancel ordersCancels all orders in a market. If no market is specified, all orders of an account will be canceled.```python# options: marketwebsocket.cancelOrders({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;orderId&quot;: &quot;4f9a809b-859f-4d8d-97b3-037113cdf2d0&quot;  },   {    &quot;orderId&quot;: &quot;95313ae5-ad65-4430-a0fb-63591bbc337c&quot;.  },   {    &quot;orderId&quot;: &quot;2465c3ab-5ae2-4d4d-bec7-345f51b3494d&quot;  },  ...]```&lt;/details&gt;#### Get orders openReturns all orders which are not filled or canceled.```python# options: marketwebsocket.ordersOpen({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;orderId&quot;: &quot;bad72641-7755-464c-8dcb-7c1d59b142ab&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548670024870,    &quot;updated&quot;: 1548670024870,    &quot;status&quot;: &quot;partiallyFilled&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;0.5&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;1504.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0.5&quot;,    &quot;filledAmountQuote&quot;: &quot;1500&quot;,    &quot;feePaid&quot;: &quot;3&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [      {        &quot;id&quot;: &quot;108c3633-0276-4480-a902-17a01829deae&quot;,        &quot;timestamp&quot;: 1548671992530,        &quot;amount&quot;: &quot;0.5&quot;,        &quot;price&quot;: &quot;3000&quot;,        &quot;taker&quot;: false,        &quot;fee&quot;: &quot;3&quot;,        &quot;feeCurrency&quot;: &quot;EUR&quot;,        &quot;settled&quot;: true      }    ],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  {    &quot;orderId&quot;: &quot;7586d610-2732-4ee6-8516-bed18cfc853b&quot;,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;created&quot;: 1548670088749,    &quot;updated&quot;: 1548670088749,    &quot;status&quot;: &quot;new&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;orderType&quot;: &quot;limit&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;amountRemaining&quot;: &quot;1&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;onHold&quot;: &quot;3007.5&quot;,    &quot;onHoldCurrency&quot;: &quot;EUR&quot;,    &quot;filledAmount&quot;: &quot;0&quot;,    &quot;filledAmountQuote&quot;: &quot;0&quot;,    &quot;feePaid&quot;: &quot;0&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;fills&quot;: [],    &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,    &quot;visible&quot;: true,    &quot;timeInForce&quot;: &quot;GTC&quot;,    &quot;postOnly&quot;: false  },  ...]```&lt;/details&gt;#### Get tradesReturns all trades within a market for this account.```python# options: limit, start, end, tradeIdFrom, tradeIdTowebsocket.trades('BTC-EUR', {}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;id&quot;: &quot;108c3633-0276-4480-a902-17a01829deae&quot;,    &quot;timestamp&quot;: 1548671992530,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;side&quot;: &quot;buy&quot;,    &quot;amount&quot;: &quot;0.5&quot;,    &quot;price&quot;: &quot;3000&quot;,    &quot;taker&quot;: false,    &quot;fee&quot;: &quot;3&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;settled&quot;: true  },  {    &quot;id&quot;: &quot;79e4bf2f-4fac-4895-9bb2-a5c9c6e2ff3f&quot;,    &quot;timestamp&quot;: 1548666712071,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;side&quot;: &quot;sell&quot;,    &quot;amount&quot;: &quot;0.1&quot;,    &quot;price&quot;: &quot;4000&quot;,    &quot;taker&quot;: false,    &quot;fee&quot;: &quot;0.8&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;settled&quot;: true  },  {    &quot;id&quot;: &quot;102486d3-5b72-4fa2-89cf-84c934edb7ae&quot;,    &quot;timestamp&quot;: 1548666561486,    &quot;market&quot;: &quot;BTC-EUR&quot;,    &quot;side&quot;: &quot;sell&quot;,    &quot;amount&quot;: &quot;0.1&quot;,    &quot;price&quot;: &quot;4000&quot;,    &quot;taker&quot;: true,    &quot;fee&quot;: &quot;1&quot;,    &quot;feeCurrency&quot;: &quot;EUR&quot;,    &quot;settled&quot;: true  },  ...]```&lt;/details&gt;#### Get accountReturns the fee tier for this account.```pythonwebsocket.account(ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;fees&quot;: {    &quot;taker&quot;: &quot;0.0025&quot;,    &quot;maker&quot;: &quot;0.0015&quot;,    &quot;volume&quot;: &quot;100.00&quot;  }}```&lt;/details&gt;#### Get balanceReturns the balance for this account.```python# options: symbolwebsocket.balance({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;symbol&quot;: &quot;EUR&quot;,    &quot;available&quot;: &quot;2599.95&quot;,    &quot;inOrder&quot;: &quot;2022.65&quot;  },  {    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;available&quot;: &quot;1.65437&quot;,    &quot;inOrder&quot;: &quot;0.079398&quot;  },  {    &quot;symbol&quot;: &quot;ADA&quot;,    &quot;available&quot;: &quot;4.8&quot;,    &quot;inOrder&quot;: &quot;0&quot;  },  {    &quot;symbol&quot;: &quot;BCH&quot;,    &quot;available&quot;: &quot;0.00952811&quot;,    &quot;inOrder&quot;: &quot;0&quot;  },  {    &quot;symbol&quot;: &quot;BSV&quot;,    &quot;available&quot;: &quot;0.00952811&quot;,    &quot;inOrder&quot;: &quot;0&quot;  },  ...]```&lt;/details&gt;#### Deposit assetsReturns the address which can be used to deposit funds.```pythonwebsocket.depositAssets('BTC', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;address&quot;: &quot;BitcoinAddress&quot;}```&lt;/details&gt;#### Withdraw assetsCan be used to withdraw funds from Bitvavo.```python# optional parameters: paymentId, internal, addWithdrawalFeewebsocket.withdrawAssets('BTC', '1', 'BitcoinAddress', {}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;success&quot;: True,  &quot;symbol&quot;: &quot;BTC&quot;,  &quot;amount&quot;: &quot;1&quot;}```&lt;/details&gt;#### Get deposit historyReturns the deposit history of your account.```python# options: symbol, limit, start, endwebsocket.depositHistory({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;timestamp&quot;: 1521550025000,    &quot;symbol&quot;: &quot;EUR&quot;,    &quot;amount&quot;: &quot;1&quot;,    &quot;fee&quot;: &quot;0&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;address&quot;: &quot;NL12RABO324234234&quot;  },  {    &quot;timestamp&quot;: 1511873910000,    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;amount&quot;: &quot;0.099&quot;,    &quot;fee&quot;: &quot;0&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;txId&quot;: &quot;0c6497e608212a516b8218674cb0ca04f65b67a00fe8bddaa1ecb03e9b029255&quot;  },  ...]```&lt;/details&gt;#### Get withdrawal historyReturns the withdrawal history of an account.```python# options: symbol, limit, start, endwebsocket.withdrawalHistory({}, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python[  {    &quot;timestamp&quot;: 1548425559000,    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;amount&quot;: &quot;0.09994&quot;,    &quot;fee&quot;: &quot;0.00006&quot;,    &quot;status&quot;: &quot;awaiting_processing&quot;,    &quot;address&quot;: &quot;1CqtG5z55x7bYD5GxsAXPx59DEyujs4bjm&quot;  },  {    &quot;timestamp&quot;: 1548409721000,    &quot;symbol&quot;: &quot;EUR&quot;,    &quot;amount&quot;: &quot;50&quot;,    &quot;fee&quot;: &quot;0&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;address&quot;: &quot;NL123BIM&quot;  },  {    &quot;timestamp&quot;: 1537803091000,    &quot;symbol&quot;: &quot;BTC&quot;,    &quot;amount&quot;: &quot;0.01939&quot;,    &quot;fee&quot;: &quot;0.00002&quot;,    &quot;status&quot;: &quot;completed&quot;,    &quot;txId&quot;: &quot;da2299c86fce67eb899aeaafbe1f81cf663a3850cf9f3337c92b2d87945532db&quot;,    &quot;address&quot;: &quot;3QpyxeA7yWWsSURXEmuBBzHpxjqn7Rbyme&quot;  },  ...]```&lt;/details&gt;### Subscriptions#### Ticker subscriptionSends an update every time the best bid, best ask or last price changed.```pythonwebsocket.subscriptionTicker('BTC-EUR', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;event&quot;: &quot;ticker&quot;,  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;bestBid&quot;: &quot;9286.9&quot;,  &quot;bestBidSize&quot;: &quot;0.10705272&quot;,  &quot;bestAsk&quot;: &quot;9287.6&quot;,  &quot;bestAskSize&quot;: &quot;0.10990704&quot;,  &quot;lastPrice&quot;: &quot;9335&quot;}```&lt;/details&gt;#### Ticker 24 hour subscriptionUpdated ticker24h objects are sent on this channel once per second. A ticker24h object is considered updated if one of the values besides timestamp has changed.```pythonwebsocket.subscriptionTicker24h('BTC-EUR', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;open&quot;: &quot;10140&quot;,  &quot;high&quot;: &quot;10216&quot;,  &quot;low&quot;: &quot;10062&quot;,  &quot;last&quot;: &quot;10119&quot;,  &quot;volume&quot;: &quot;37.59541492&quot;,  &quot;volumeQuote&quot;: &quot;381752.87&quot;,  &quot;bid&quot;: &quot;10118&quot;,  &quot;bidSize&quot;: &quot;0.07267404&quot;,  &quot;ask&quot;: &quot;10119&quot;,  &quot;askSize&quot;: &quot;0.09386124&quot;,  &quot;timestamp&quot;: 1565685285795}```&lt;/details&gt;#### Account subscriptionSends an update whenever an event happens which is related to the account. These are ‘order’ events (create, update, cancel) or ‘fill’ events (a trade occurred).```pythonwebsocket.subscriptionAccount(&quot;BTC-EUR&quot;, ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```pythonFill:{  &quot;event&quot;: &quot;fill&quot;,  &quot;timestamp&quot;: 1548674189411,  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;orderId&quot;: &quot;78fef2d4-6278-4f4b-ade9-1a1c438680e5&quot;,  &quot;fillId&quot;: &quot;90d49d30-9d90-427d-ab4d-35d18c3356cb&quot;,  &quot;side&quot;: &quot;buy&quot;,  &quot;amount&quot;: &quot;0.03322362&quot;,  &quot;price&quot;: &quot;3002.4&quot;,  &quot;taker&quot;: true,  &quot;fee&quot;: &quot;0.249403312&quot;,  &quot;feeCurrency&quot;: &quot;EUR&quot;}Order:{  &quot;event&quot;: &quot;order&quot;,  &quot;orderId&quot;: &quot;78fef2d4-6278-4f4b-ade9-1a1c438680e5&quot;,  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;created&quot;: 1548674189406,  &quot;updated&quot;: 1548674189406,  &quot;status&quot;: &quot;filled&quot;,  &quot;side&quot;: &quot;buy&quot;,  &quot;orderType&quot;: &quot;market&quot;,  &quot;amountQuote&quot;: &quot;100&quot;,  &quot;amountQuoteRemaining&quot;: &quot;0.249403312&quot;,  &quot;onHold&quot;: &quot;0&quot;,  &quot;onHoldCurrency&quot;: &quot;EUR&quot;,  &quot;selfTradePrevention&quot;: &quot;decrementAndCancel&quot;,  &quot;visible&quot;: false,  &quot;disableMarketProtection&quot;: false}```&lt;/details&gt;#### Candles subscriptionSends an updated candle after each trade for the specified interval and market.```pythonwebsocket.subscriptionCandles('BTC-EUR', '1h', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;event&quot;: &quot;candle&quot;,  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;interval&quot;: &quot;1h&quot;,  &quot;candle&quot;: [    [      1548676800000,      &quot;2999.3&quot;,      &quot;2999.3&quot;,      &quot;2990.5&quot;,      &quot;2999.3&quot;,      &quot;11.15058838&quot;    ]  ]}```&lt;/details&gt;#### Trades subscriptionSends an update whenever a trade has happened on this market. For your own trades, please subscribe to account.```pythonwebsocket.subscriptionTrades('BTC-EUR', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;event&quot;: &quot;trade&quot;,  &quot;timestamp&quot;: 1548677539543,  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;id&quot;: &quot;d91bf798-e704-4f09-95f7-3444f8109346&quot;,  &quot;amount&quot;: &quot;0.88114879&quot;,  &quot;price&quot;: &quot;2992.2&quot;,  &quot;side&quot;: &quot;buy&quot;}```&lt;/details&gt;#### Book subscriptionSends an update whenever the order book for this specific market has changed. A list of tuples ([price, amount]) are returned, where amount ‘0’ means that there are no more orders at this price. If you wish to maintain your own copy of the order book, consider using the next function.```pythonwebsocket.subscriptionBookUpdate('BTC-EUR', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;event&quot;: &quot;book&quot;,  &quot;market&quot;: &quot;BTC-EUR&quot;,  &quot;nonce&quot;: 14870,  &quot;bids&quot;: [    [      &quot;2994.3&quot;,      &quot;0&quot;    ],    [      &quot;2994.2&quot;,      &quot;0.00334147&quot;    ]  ],  &quot;asks&quot;: []}```&lt;/details&gt;#### Book subscription with local copyThis is a combination of get book per market and the book subscription which maintains a local copy. On every update to the order book, the entire order book is returned to the callback, while the book subscription will only return updates to the book.```pythonwebsocket.subscriptionBook('BTC-EUR', ownCallback)```&lt;details&gt; &lt;summary&gt;View Response&lt;/summary&gt;```python{  &quot;bids&quot;: [    [      &quot;2996.7&quot;,      &quot;0.36620062&quot;    ],    [      &quot;2994.8&quot;,      &quot;0.04231826&quot;    ],    [      &quot;2994.2&quot;,      &quot;0.16617026&quot;    ],    [      &quot;2993.7&quot;,      &quot;0.23002489&quot;    ],    ...  ],  &quot;asks&quot;: [    [      &quot;2998.6&quot;,      &quot;8.64251588&quot;    ],    [      &quot;3001.2&quot;,      &quot;5.91405558&quot;    ],    [      &quot;3002.4&quot;,      &quot;3.5765691&quot;    ],    [      &quot;3003.9&quot;,      &quot;3.842524&quot;    ],    ...  ],  &quot;nonce&quot;: 21919,  &quot;market&quot;: &quot;BTC-EUR&quot;}```&lt;/details&gt;</longdescription>
</pkgmetadata>