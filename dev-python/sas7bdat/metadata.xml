<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sas7bdat.py===========This module will read sas7bdat files using pure Python (2.6+, 3+). No SAS softwarerequired! The module started out as a port of the R script of the same namefound here: &lt;https://github.com/BioStatMatt/sas7bdat&gt; but has since beencompletely rewritten.Also included with this library is a simple command line script,`sas7bdat_to_csv`, which converts sas7bdat files to csv files. It will alsoprint out header information and meta data using the `--header` option and itwill batch convert files as well. Use the `--help` option for more information.As is, I've successfully tested the script almost three hundred sample files Ifound on the internet. For the most part, it works well. We can now readcompressed files!I'm sure there are more issues that I haven't come across yet. Please let meknow if you come across a data file that isn't supported and I'll see if I canadd support for the file.Usage=====To install, run:```pip install sas7bdat```To create a sas7bdat object, simply pass the constructor a file path. Theobject is iterable so you can read the contents like this:```#!pythonfrom sas7bdat import SAS7BDATwith SAS7BDAT('foo.sas7bdat', skip_header=True) as reader:    for row in reader:        print row```Each row will be a list of values of type `string`, `float`, `datetime.date`,`datetime.datetime`, or `datetime.time`. Without `skip_header`, the first rowreturned will be the SAS variable names.If you'd like to get a pandas DataFrame, use the `to_data_frame` method:```#!pythondf = reader.to_data_frame()```[Variableattributes](https://support.sas.com/documentation/cdl/en/lrcon/65287/HTML/default/viewer.htm#n08fs0rt7fikeln1uh0t8v5pt25d.htm)are available from `reader.columns`. The order of these columns will be the sameas the corresponding values in each `row`. Each `Column` has the followingattributes:* `col_id` (`int`) - the column number* `name` (`bytes`)* `label` (`bytes`)* `format` (`str`)* `type` (`str`)* `length` (`int`)</longdescription>
</pkgmetadata>