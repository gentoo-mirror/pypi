<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># The TIRA ClientThis is a python client for [TIRA.io](https://tira.io).## Setup REST Client to Access Non-Public EndpointsTo access non-public endpoints, you will need an authentication via an API key to ensure that you have the correct access credentials.Please generate your API key online at [tira.io/admin/api/keys](https://www.tira.io/admin/api/keys) and create a credentials file at `~/.tira/.tira-settings.json` with the following content:```{&quot;api_key&quot;: &quot;&lt;YOUR-API-KEY&gt;&quot;}```## Download The results of some SubmissionYou can download runs of published and unblinded submissions via:```from tira.rest_api_client import Clienttira = Client()output = tira.get_run_output('&lt;task&gt;/&lt;team&gt;/&lt;approach&gt;', '&lt;dataset&gt;')```As an example, you can download all baseline BM25 runs submitted to [TIREx](https://www.tira.io/tirex) via:```from tira.rest_api_client import Clientfrom tira.tirex import TIREX_DATASETStira = Client()for dataset in TIREX_DATASETS:    output = tira.get_run_output('ir-benchmarks/tira-ir-starter/BM25 Re-Rank (tira-ir-starter-pyterrier)', dataset)```## Export datasetsYou can export datasets if you are the owner or if the dataset is public.Export a dataset via the cli:```tira-run --export-dataset '&lt;task&gt;/&lt;tira-dataset&gt;' --output-directory tira-dataset```Export a dataset via the python API:```from tira.rest_api_client import Clienttira = Client()tira.download_dataset('&lt;task&gt;', '&lt;tira-dataset&gt;')```## Running Jupyter Notebooks with TIRA```bashdocker build -t tira/submission-base-image:1.0.0 -f Dockerfile .```Testing the model locally can be done using the following command:```bashtira-run \  --input-directory ${PWD}/input \  --output-directory ${PWD}/output \  --image tira/submission-base-image:1.0.0 \  --command 'tira-run-notebook --input $inputDataset --output $outputDir /workspace/template-notebook.ipynb'```---Afterwards you can push the image to TIRA```bashdocker push tira/submission-base-image:1.0.0```and set the command:```bashtira-run-notebook --input $inputDataset --output $outputDir /workspace/template-notebook.ipynb```---Finally, if the actual processing in notebook is toggled via `is_running_as_inference_server()` (as seen in the[template notebook](template-notebook.ipynb))and your notebook defines a function named `predict` in the format```pythondef predict(input_list: List) -&gt; List:```you can start an inference server for your model with:```bashPORT=8001docker run --rm -it --init \  -v &quot;$PWD/logs:/workspace/logs&quot; \  -p $PORT:$PORT \  tira/submission-base-image:1.0.0 \  tira-run-inference-server --notebook /workspace/template-notebook.ipynb --port $PORT```Exemplary request for a server running on `localhost:8001` are```bash# POST (JSON list as payload)curl -X POST -H &quot;application/json&quot; \  -d &quot;[\&quot;element 1\&quot;, \&quot;element 2\&quot;, \&quot;element 3\&quot;]&quot; \  localhost:8001```and```bash# GET (JSON object string(s) passed to the 'payload' parameter)curl &quot;localhost:8001?payload=\&quot;element+1\&quot;&amp;payload=\&quot;element+2\&quot;&amp;payload=\&quot;element+3\&quot;&quot;```</longdescription>
</pkgmetadata>