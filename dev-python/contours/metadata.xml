<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>contours - contour calculation with matplotlib---------------------------------------------------------.. begin-descriptionThe `contours` package exposes Matplotlib's contour generators to the userproviding an equivalent of MATLAB's ``contourc`` function.  This is done forgrids (including curvilinear) as well as unstructured data via Delaunaytriangulation (**FUTURE**).Regular contours can be returned as `NumPy`_ arrays or as `Shapely`_LineStrings and LinearRings.  Filled contours can be returned as `NumPy`_arrays or as `Shapely`_ Polygons.Contour calculation without plotting is currently an open issue `#367`_ forMatplotlib.  In that discussion, the type of hackery done in this library isdiscouraged by the Matplotlib developers.  As of this writing there has been nodecision as to whether exposing contour calculations is a feature that shouldbe included in Matplotlib or not.  If such a refactoring in Matplotlib evertakes place, this library will be refactored to avoid using Matplotlib'sinternal components... _Shapely: http://toblerity.org/shapely/manual.html.. _NumPy: http://www.numpy.org.. _#367: https://github.com/matplotlib/matplotlib/issues/367.. end-description.. begin-body.. begin-linksLinks-----* `Download &lt;https://github.com/ccarocean/python-contours/archive/master.zip&gt;`_* `GitHub &lt;https://github.com/ccarocean/python-contours&gt;`_* `Documentation &lt;https://ccarocean.github.io/python-contours&gt;`_.. end-links.. begin-featuresFeatures--------* Filled and non-filled contours.* Contours on regular grids.* **TODO** Contours on unstructured data... end-featuresExamples--------A contrived example using `QuadContourGenerator` to compute the area andcircumference of a circle and a ring.&gt;&gt;&gt; from contours.core import shapely_formatter as shapely_fmt&gt;&gt;&gt; from contours.quad import QuadContourGenerator&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; x = np.arange(-1, 1+0.01, 0.01)&gt;&gt;&gt; y = np.arange(-1, 1+0.01, 0.01)&gt;&gt;&gt; z = np.sqrt(x[:, np.newaxis]**2 + y[np.newaxis, :]**2)&gt;&gt;&gt; c = QuadContourGenerator.from_rectilinear(x, y, z, shapely_fmt)&gt;&gt;&gt; contour = c.filled_contour(max=1.0)&gt;&gt;&gt; print('Area: {:0.2f}'.format(contour[0].area))Area: 3.14&gt;&gt;&gt; print('Length: {:0.2f}'.format(contour[0].length))Length: 6.28&gt;&gt;&gt; contour = c.filled_contour(min=0.5, max=1.0)&gt;&gt;&gt; print('Area: {:0.2f}'.format(contour[0].area))Area: 2.36&gt;&gt;&gt; print('Length: {:0.2f}'.format(contour[0].exterior.length))Length: 6.28&gt;&gt;&gt; print('Length: {:0.2f}'.format(contour[0].interiors[0].length))Length: 3.14.. begin-authorAuthor------The `contours` module was written by Michael R. Shannon (`@mrshannon&lt;https://github.com/mrshannon&gt;`_) &lt;mrshannon.aerospace@gmail.com&gt; in 2017.It is maintained by:* Michael R. Shannon (`@mrshannon &lt;https://github.com/mrshannon&gt;`_)  &lt;mrshannon.aerospace@gmail.com&gt; 2017-.. end-authorTesting-------**TODO**.. end-body</longdescription>
</pkgmetadata>