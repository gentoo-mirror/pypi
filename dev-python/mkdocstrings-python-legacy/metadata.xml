<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;mkdocstrings-python-legacy&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;The legacy Python handler for &lt;a href=&quot;https://github.com/mkdocstrings/mkdocstrings&quot;&gt;&lt;i&gt;mkdocstrings&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/mkdocstrings/python-legacy/actions?query=workflow%3Aci&quot;&gt;    &lt;img alt=&quot;ci&quot; src=&quot;https://github.com/mkdocstrings/python-legacy/workflows/ci/badge.svg&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://mkdocstrings.github.io/python-legacy/&quot;&gt;    &lt;img alt=&quot;documentation&quot; src=&quot;https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/mkdocstrings-python-legacy/&quot;&gt;    &lt;img alt=&quot;pypi version&quot; src=&quot;https://img.shields.io/pypi/v/mkdocstrings-python-legacy.svg&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://gitpod.io/#https://github.com/mkdocstrings/python-legacy&quot;&gt;    &lt;img alt=&quot;gitpod&quot; src=&quot;https://img.shields.io/badge/gitpod-workspace-blue.svg?style=flat&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://gitter.im/mkdocstrings/python-legacy&quot;&gt;    &lt;img alt=&quot;gitter&quot; src=&quot;https://badges.gitter.im/join%20chat.svg&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;---&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;logo.png&quot;&gt;&lt;/p&gt;WARNING: We suggest using the new handler instead:[mkdocstrings-python](https://mkdocstrings.github.io/python/).## InstallationYou can install this handler as a *mkdocstrings* extra:```toml title=&quot;pyproject.toml&quot;# PEP 621 dependencies declaration# adapt to your dependencies manager[project]dependencies = [    &quot;mkdocstrings[python-legacy]&gt;=0.18&quot;,]```You can also explicitely depend on the handler:```toml title=&quot;pyproject.toml&quot;# PEP 621 dependencies declaration# adapt to your dependencies manager[project]dependencies = [    &quot;mkdocstrings-python-legacy&quot;,]```## Preview&lt;!-- TODO: update the GIF with a more recent screen capture. Maybe use mp4 instead --&gt;![mkdocstrings_python_gif](https://user-images.githubusercontent.com/3999221/77157838-7184db80-6aa2-11ea-9f9a-fe77405202de.gif)## Features- **Data collection from source code**: collection of the object-tree and the docstrings is done thanks to  [pytkdocs](https://github.com/mkdocstrings/pytkdocs).- **Support for type annotations:** pytkdocs collects your type annotations and *mkdocstrings* uses them  to display parameters types or return types. - **Recursive documentation of Python objects:** just use the module dotted-path as identifier, and you get the full  module docs. You don't need to inject documentation for each class, function, etc.- **Support for documented attributes:** attributes (variables) followed by a docstring (triple-quoted string) will  be recognized by Griffe in modules, classes and even in `__init__` methods.- **Multiple docstring-styles support:** common support for Google-style, Numpydoc-style,  and Sphinx-style docstrings.- **Admonition support in Google docstrings:** blocks like `Note:` or `Warning:` will be transformed  to their [admonition](https://squidfunk.github.io/mkdocs-material/reference/admonitions/) equivalent.  *We do not support nested admonitions in docstrings!*- **Every object has a TOC entry:** we render a heading for each object, meaning *MkDocs* picks them into the Table  of Contents, which is nicely display by the Material theme. Thanks to *mkdocstrings* cross-reference ability,  you can reference other objects within your docstrings, with the classic Markdown syntax:  `[this object][package.module.object]` or directly with `[package.module.object][]`- **Source code display:** *mkdocstrings* can add a collapsible div containing the highlighted source code  of the Python object.</longdescription>
</pkgmetadata>