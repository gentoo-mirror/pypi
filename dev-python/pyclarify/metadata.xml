<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://www.clarify.io&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/clarify/data-science-tutorials/main/media/logo_dark.png&quot; alt=&quot;Clarify logo&quot; title=&quot;Clarify&quot; align=&quot;right&quot; height=&quot;80&quot; /&gt;&lt;/a&gt;# PyClarify[![PyPI package](https://img.shields.io/badge/pip%20install-pyclarify-brightgreen)](https://pypi.org/project/pyclarify/)[![Version number](https://img.shields.io/pypi/v/pyclarify?color=green&amp;label=version)](https://pypi.org/project/pyclarify/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/pyclarify)](https://pypi.org/project/pyclarify/)[![Actions Status](https://github.com/clarify/pyclarify/workflows/Build%20status/badge.svg)](https://github.com/clarify/pyclarify/actions)[![License](https://img.shields.io/github/license/clarify/pyclarify)](https://github.com/clarify/pyclarify/blob/main/LICENSE)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)&lt;hr/&gt;PyClarify helps users of Clarify to easily read, write and manipulate data in Clarify.- Data scientists can easily filter data, convert it to pandas with our built in methods, and write results back.- System integrators can set up pipelines for automatic streaming of data, and update labels on the fly.# Useful tutorials and documentation- [PyClarify SDK](https://pypi.org/project/pyclarify/)- [PyClarify documentation](https://clarify.github.io/pyclarify/)- [Clarify Developer documentation](https://docs.clarify.io/developers/welcome)- [Basic tutorial on using Python with Clarify](https://colab.research.google.com/github/clarify/data-science-tutorials/blob/main/tutorials/Introduction.ipynb)# PrerequisitesIn order to start using the Python SDK, you need- To know a bit of Python. For a refresher, see the [Official Python tutorial](https://docs.python.org/tutorial/).- Python3 (&gt;= 3.7) and pip.- Credentials from a Clarify integration. See the [introduction notebook](https://colab.research.google.com/github/clarify/data-science-tutorials/blob/main/tutorials/Introduction.ipynb) for a complete introduction.## Where to get itThe source code is currently hosted on GitHub at: https://github.com/clarify/pyclarifyBinary installers for the latest released version are available at the [PythonPackage Index (PyPI)](https://pypi.org/project/pyclarify).```sh# PyPI installpip install pyclarify```## Dependencies- [requests](https://requests.readthedocs.io/en/latest/) - The most used (and trusted) HTTP library.- [Pydantic](https://pydantic-docs.helpmanual.io) - Allowing for strict typing and data validation.- [Typing Extensions](https://typing.readthedocs.io) - Brings the typing use of new type system features on older Python versions, allowing us to support python 3.7+.# Interact with ClarifyPyClarify provides a fast and easy way to interact with Clarify.The `Client` class takes as an argument the path of your credentials in string format, which should always be the first step when starting to interact with PyClarify.For information about the Clarify Developer documentationclick [here](https://docs.clarify.io/developers/welcome).## QuickstartWe recommend using Google Colab to quickly learn how to interact with Clarify using Python. We have created an interactive introduction tutorial where you will learn all the basics to get you started.[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/clarify/data-science-tutorials/blob/main/tutorials/Introduction.ipynb)### Access you data with the _ClarifyClient_```pythonfrom pyclarify import Clientclient = Client(&quot;clarify-credentials.json&quot;)```### Create new _Signals_```pythonfrom pyclarify import Signalsignal = Signal(    name = &quot;Home temperature&quot;,    description = &quot;Temperature in the bedroom&quot;,    labels = {&quot;data-source&quot;: [&quot;Raspberry Pi&quot;], &quot;location&quot;: [&quot;Home&quot;]})response = client.save_signals(    input_ids=[&quot;INPUT_ID&quot;],    signals=[signal],    create_only=False)```### Populate your signals using _DataFrames_```pythonfrom pyclarify import DataFramedata = DataFrame(    series={&quot;INPUT_ID_1&quot;: [1, None], &quot;INPUT_ID_2&quot;: [None, 5]},    times = [&quot;2021-11-01T21:50:06Z&quot;,  &quot;2021-11-02T21:50:06Z&quot;],)response = client.insert(data)```### Query your stored signals```pythonresponse = client.select_signals(    skip=10,    limit=50,    sort=[&quot;-id&quot;])```### Publish them as _Items_```pythonfrom pyclarify import Itemclient = Client(&quot;./clarify-credentials.json&quot;)item = Item(    name = &quot;Home temperature&quot;,    description = &quot;Temperature in the bedroom&quot;,    labels = {&quot;data-source&quot;: [&quot;Raspberry Pi&quot;], &quot;location&quot;: [&quot;Home&quot;]},    visible=True)response = client.publish_signals(    signal_ids=['&lt;SIGNAL_ID&gt;'],    items=[item],    create_only=False)```### Use filters to get a specific selection```pythonfrom pyclarify.query import Filter, Regexonly_raspberries = Filter(    fields={        &quot;labels.unit-type&quot;: Regex(value=&quot;Raspberry&quot;)    })response = client.select_items(    filter=only_raspberries)```### Get the data and include relationships```pythonresponse = client.data_frame(    filter=only_raspberries,    include=[&quot;item&quot;])```### Look at our reference![&lt;img src=&quot;./docs/source/reference.png&quot; width=&quot;150&quot; /&gt;](https://clarify.github.io/pyclarify/)# ChangelogWondering about upcoming or previous changes to the SDK? Take a look at the [CHANGELOG](https://github.com/clarify/pyclarify/blob/main/CHANGELOG.md).# ContributingWant to contribute? Check out [CONTRIBUTING](https://github.com/clarify/pyclarify/blob/main/CONTRIBUTING.md).</longdescription>
</pkgmetadata>