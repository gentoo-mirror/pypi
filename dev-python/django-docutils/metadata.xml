<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-docutils &amp;middot; [![Python Package](https://img.shields.io/pypi/v/django-docutils.svg)](https://pypi.org/project/django-docutils/) [![License](https://img.shields.io/github/license/tony/django-docutils.svg)](https://github.com/tony/django-docutils/blob/master/LICENSE)django-docutils, docutils (reStructuredText) support for Django## QuickstartInstall django-docutils:```console$ pip install django-docutils```## Template filterIf you want to use the template filter, add it to your `INSTALLED_APPS` in your settings file:```pythonINSTALLED_APPS = [ # ... your default apps,    'django_docutils']```Then in your template:```django{% load django_docutils %}{% filter restructuredtext %}# hey# how's it goingA. howsB. itC. goingD. today**hi***hi*{% endfilter %}```## Template engine (class-based view)You can also use a class-based view to render restructuredtext.If you want to use reStructuredText as a django template engine, `INSTALLED_APPS` _isn't_ required,instead you add this to your `TEMPLATES` variable in your settings:```pythonTEMPLATES = [ # .. your default engines{    'NAME': 'docutils',    'BACKEND': 'django_docutils.engines.Docutils',    'DIRS': [],    'APP_DIRS': True,}]```Now django will be able to scan for .rst files and process them. In your view:```pythonfrom django_docutils.views import DocutilsViewclass HomeView(DocutilsView):    template_name = 'base.html'    rst_name = 'home.rst'```# Settings```pythonBASED_LIB_RST = {  # Optional, automatically maps roles, directives and transformers    'docutils': {        'raw_enabled': True,        'strip_comments': True,        'initial_header_level': 2,    },    'roles': {        'local': {            'gh': 'django_docutils.lib.roles.github.github_role',            'twitter': 'django_docutils.lib.roles.twitter.twitter_role',            'email': 'django_docutils.lib.roles.email.email_role',        }    },    'font_awesome': {  # Transformer to inject &lt;em class=&quot;&lt;class&gt;&quot;&gt;&lt;/em&gt;        'url_patterns': {            r'.*github.com.*': 'fab fa-github',            r'.*twitter.com.*': 'fab fa-twitter',            r'.*amzn.to.*': 'fab fa-amazon',            r'.*amazon.com.*': 'fab fa-amazon',            r'.*news.ycombinator.com*': 'fab fa-hacker-news',            r'.*leanpub.com.*': 'fab fa-leanpub',            r'.*python.org.*': 'fab fa-python',            r'.*pypi.org.*': 'fab fa-python',            r'.*djangoproject.com.*': 'fab fa-python',            r'.*wikipedia.org.*': 'fab fa-wikipedia',            r'((rtfd|readthedocs).)*$': 'fab fa-books',            r'^mailto:.*': 'fas fa-envelope',            r'((?!mywebsite.com|localhost).)*$': 'fas fa-external-link',        }    },}BASED_LIB_TEXT = {  # Optional    'uncapitalized_word_filters': ['project.my_module.my_capitalization_fn']}BASED_ADS = {  # If injecting ads    'AMAZON_AD_CODE': &quot;&quot;&quot;    &lt;script type=&quot;text/javascript&quot;&gt;    amzn_assoc_placement = &quot;adunit0&quot;;    amzn_assoc_search_bar = &quot;true&quot;;    amzn_assoc_tracking_id = &quot;mytracking-20&quot;;    amzn_assoc_search_bar_position = &quot;bottom&quot;;    amzn_assoc_ad_mode = &quot;search&quot;;    amzn_assoc_ad_type = &quot;smart&quot;;    amzn_assoc_marketplace = &quot;amazon&quot;;    amzn_assoc_region = &quot;US&quot;;    amzn_assoc_title = &quot;You may be interested in&quot;;    amzn_assoc_default_search_phrase = &quot;{keyword}&quot;;    amzn_assoc_default_category = &quot;All&quot;;    amzn_assoc_linkid = &quot;6efef5538142e4a4031b04de66b6e804&quot;;    &lt;/script&gt;    &lt;script src=&quot;//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US&quot;&gt;&lt;/script&gt;    &quot;&quot;&quot;,    'AMAZON_AD_STRIP': (        '&lt;script src=&quot;//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US&amp;'        'adInstanceId=521gc14d-d9f1-4691-8af2-a38de0d0cbad&quot;&gt;&lt;/script&gt;'    ),    'GOOGLE_AD_CODE': &quot;&quot;&quot;    &lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;    &lt;/script&gt;    &lt;ins class=&quot;adsbygoogle&quot;         style=&quot;display:block; text-align:center;&quot;         data-ad-layout=&quot;in-article&quot;         data-ad-format=&quot;fluid&quot;         data-ad-client=&quot;ca-pub-5555555555555555&quot;         data-ad-slot=&quot;5555555555&quot;&gt;&lt;/ins&gt;    &lt;script&gt;         (adsbygoogle = window.adsbygoogle || []).push({});    &lt;/script&gt;    &quot;&quot;&quot;,}```## More information- Python 3.8+- Django 3.1+[![Docs](https://github.com/tony/django-docutils/workflows/docs/badge.svg)](https://github.com/tony/django-docutils/actions?query=workflow%3A%22Docs%22)[![Build Status](https://github.com/tony/django-docutils/workflows/tests/badge.svg)](https://github.com/tony/django-docutils/actions?query=workflow%3A%22tests%22)[![Code Coverage](https://codecov.io/gh/tony/django-docutils/branch/master/graph/badge.svg)](https://codecov.io/gh/tony/django-docutils)</longdescription>
</pkgmetadata>