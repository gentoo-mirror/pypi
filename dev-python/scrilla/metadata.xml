<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># scrilla: A Financial Optimization Application_scrilla_ is an open-source financial analysis application written in **Python**. It can optimize portfolios, calculate statistics using a variety of methods and algorithms, generate graphical plots and much more. It uses historical data retrieved from various sources, such as the US Treasury RSS Feed, AlphaVantage, IEX and Quandl, to calibrate models. **NOTE**: None of the results of _scrilla_ should be interpretted as financial advice. All results assume past trends will continue indefinitely into the future, which is usually never the case in reality.![](https://github.com/chinchalinchin/chinchalinchin/blob/main/assets/scrilla_gui_ii.png)Documentation---- [Overview](https://chinchalinchin.github.io/scrilla/)- [Packages](https://chinchalinchin.github.io/scrilla/package/index.html)Coverage---- [Unit Tests](https://chinchalinchin.github.io/scrilla/coverage/index.html)Code Analysis---[![DeepSource](https://deepsource.io/gh/chinchalinchin/scrilla.svg/?label=active+issues&amp;show_trend=true&amp;token=tD25pyXAL4uIvrccqjlwzXIU)](https://deepsource.io/gh/chinchalinchin/scrilla/?ref=repository-badge)&lt;br/&gt;[![DeepSource](https://deepsource.io/gh/chinchalinchin/scrilla.svg/?label=resolved+issues&amp;show_trend=true&amp;token=tD25pyXAL4uIvrccqjlwzXIU)](https://deepsource.io/gh/chinchalinchin/scrilla/?ref=repository-badge)&lt;br/&gt;Pipelines---| Branch | Status || ------ | ------ || pypi/micro-update | [![CircleCI](https://circleci.com/gh/chinchalinchin/scrilla/tree/pypi%2Fmicro-update.svg?style=svg)](https://circleci.com/gh/chinchalinchin/scrilla/tree/pypi%2Fmicro-update) || pypi/micro-update | [![CircleCI](https://circleci.com/gh/chinchalinchin/scrilla/tree/pypi%2Fminor-update.svg?style=svg)](https://circleci.com/gh/chinchalinchin/scrilla/tree/pypi%2Fminor-update) || develop/main | [![CircleCI](https://circleci.com/gh/chinchalinchin/scrilla/tree/develop%2Fmain.svg?style=svg)](https://circleci.com/gh/chinchalinchin/scrilla/tree/develop%2Fmain)| ## Quick StartRefer to the [documentation](https://chinchalinchin.github.io/scrilla/) for more detailed information on installation and usage.## Installation### PyPi DistributionInstall the package with the &lt;b&gt;Python&lt;/b&gt; package manager,```shellpip install scrilla``` This will install a command line interface on your path under the name `scrilla`. Confirm your installation with with the `version` command,```shellscrilla version```You may need to add your Python scripts _/bin/_ to the $PATH if this command is not found. To keep the installation as minimal as possible, the base package does not include the GUI libraries. You can install the optional GUI dependency ([PySide6](https://pypi.org/project/PySide6/)) with,```shellpip install scrilla[gui]```Note, the GUI has a different CLI entrypoint, namely,```shellscrilla-gui```### SourceIf you are developing, you can build from source. `git clone` the [repository](https://github.com/chinchalinchin/scrilla) and then from the root directory install the project dependencies and build the library,```shellpip3 install -r requirements.txtpython3 -m build````cd` into the generated &lt;i&gt;/dist/&lt;/i&gt;  to manually install the packaged code,```pip install scrilla-&lt;major&gt;.&lt;minor&gt;.&lt;micro&gt;-py3-none-any.whl```## ConfigurationIn order to use this application, you will need to register for API keys with [AlphaVantage](https://www.alphavantage.co), [IEX](https://iexcloud.io/) and [Quandl/Nasdaq](https://www.quandl.com/). The program will need to be made aware of these keys somehow. The best option is storing these credentials in environment variables. You can add the following lines to your &lt;i&gt;.bashrc&lt;/i&gt; profile or corresponding configuration file for whatever shell you are using,```shellexport ALPHA_VANTAGE_KEY=&lt;key goes here&gt;export QUANDL_KEY=&lt;key goes here&gt;export IEX_KEY=&lt;key goes here&gt;```You can also invoke the CLI function `store` to store the credentials in the local installation &lt;i&gt;/data/common/&lt;/i&gt; directory. To do so,```shellscrilla store -key &lt;key&gt; -value &lt;value&gt;```where `&lt;key&gt;` is one of the values: **ALPHA_VANTAGE_KEY**, **QUANDL_KEY** or **IEX_KEY**. `&lt;value&gt;` is the corresponding key itself given to you after registration. Obviously, `&lt;value&gt;` is case-sensitiveKeep in mind if using this method to store the API keys, the keys will be stored unencrypted in the local installation's &lt;i&gt;/data/common/&lt;/i&gt; directory. The recommended method is storing the credentials in the environment. If no API keys are found through either of these methods, the application will raise an exception.**NOTE**: The **Quandl**/**Nasdaq** key is technically no required for the majority of the application to function, as interest rates are now retrieved directly from the **US Treasury** RSS feed. However, it is still recommended that you register for an API key, as **Quandl**/**Nasdaq** is still the only source of economic statistics, like GDP or inflation rates. ### Environment FileA sample environment file has been included in _/env/.sample.env_. To configure the application environment, copy this file into a new environment, adjust the values and load it into your session,```shellcp ./env/.sample.env ./env/.env# adjust .env valuessource ./env/.env# the values loaded into your session will now configure scrilla's execution environmentscrilla risk-profile GD LMT ```## Usage### Portfolio OptimizationThe following command will optimize a portfolio of consisting of *ALLY*, *BX*, *GLD*, *BTC* and *ETH* over the specified date range and save the result to a JSON file,```shellscrilla optimize-portfolio ALLY BX GLD BTC ETH \    -start &lt;YYYY-MM-DD&gt; \    -end &lt;YYYY-MM-DD&gt; \    -save &lt;absolute path to json file&gt; ```### Efficient FrontierThe following command will calculaate the efficient frontier for a portfolio consisting of *SPY*, *GLD* and *USO* over the specified date range and save the result to a JSON file,```shellscrilla efficient-frontier SPY GLD USO \    --start &lt;YYYY-MM-DD&gt; \    --end &lt;YYYY-MM-DD&gt; \    --save &lt;absolute path to json file&gt;```The following command will generate a plot of this frontier in the return-volatility plane,```shellscrilla plot-ef SPY GLD USO \    --start &lt;YYYY-MM-DD&gt; \     --end &lt;YYYY-MM-DD&gt; ```_scrilla_ has lots of other functions. See [usage](https://chinchalinchin.github.io/scrilla/USAGE.html) for more information.## CloudTODOcurrently working on a DynamoDB-based cache and Dockerfiles for lambda functions wrapped around scrilla's main features. will update this section once everything is completed.</longdescription>
</pkgmetadata>