<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>urlman------.. image:: https://travis-ci.org/andrewgodwin/urlman.svg?branch=master   :target: https://travis-ci.org/andrewgodwin/urlman   :alt: Test Status.. image:: https://codecov.io/gh/andrewgodwin/urlman/branch/master/graph/badge.svg   :target: https://codecov.io/gh/andrewgodwin/urlman   :alt: Test Coverage StatusA nicer way to do URLs for Django models.Replaces things like ``get_absolute_url`` with a ``.urls`` attribute thatcan reference other URLs and build sensible trees of things, and canthen be accessed using ``instance.urls.name``.This is so you can have URLs on your model instances directly (rather than reversingthrough the url lookup functions, which is not only slow but often hard to supplyarguments to). You can just throw ``{{ instance.urls.view }}`` into a template to geta link.It also lets you use Python string formatting syntax to place arguments into URLs fromthe model instance itself or from other URLs in the same set.Example:.. code-block:: python    import urlman    class Group(models.Model):    ...        class urls(urlman.Urls):            view = &quot;/{self.slug}/&quot;            users = &quot;{view}users/&quot;            admin = &quot;{view}admin/&quot;    def my_view(request):        group = ...        return redirect(group.urls.view)It's suggested that you use &quot;view&quot; as the equivalent name for``get_absolute_url``, and have a function like this on your model:.. code-block:: python    def get_absolute_url(self):        return self.urls.viewTo build a full URL use the ``full`` method like this:.. code-block:: python    def my_view(request):        group = ...        return redirect(group.urls.admin.full(scheme='https'))You can implement the `get_scheme(url)` and `get_hostname(url)` methods on your`Url` class to change your default theme and hostname from the urlman defaultsof `'http'` and `'localhost'`, respectively.If you use Django REST Framework, you can use ``urlman.UrlManField`` to providean object with a set of URLs. It is used like this (only the ``urls`` parameteris required):.. code-block:: python   from urlman.serializers import UrlManField   class MySerializer(ModelSerializer):       urls = UrlManField(urls=['view', 'edit'], attribute='urls', full=True)</longdescription>
</pkgmetadata>