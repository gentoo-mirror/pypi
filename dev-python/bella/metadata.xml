<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># bellapyBellaPy - A useful helper for any python program[![PyPI version](https://badge.fury.io/py/bella.svg)](https://badge.fury.io/py/bella)![CI test](https://github.com/ndaidong/bellapy/workflows/ci-test/badge.svg)![CodeQL](https://github.com/ndaidong/bellapy/workflows/CodeQL/badge.svg)## Contents* [Setup](#setup)* [APIs](#apis)* [Dev &amp; Test](#dev--test)* [License](#license)## Setup```bashpip install bella# or build from sourcegit clone https://github.com/ndaidong/bellapy.gitcd bellapypython3 setup.py install```## Usage```pyfrom bella import genid, md5genid()  # --&gt; akrqHX7eQyT3neF6genid(5)  # --&gt; xzxNKmd5('hello')  # --&gt; 5d41402abc4b2a76b9719d911017c592```# APIs### Datatype detection-  is_int(val: Any)-  is_float(val: Any)-  is_num(val: Any)-  is_str(val: Any)-  is_bool(val: Any)-  is_list(val: Any)-  is_dict(val: Any)-  is_valid_url(val: Any)### Encryption```pythonmd5(text: str)md160(text: str)sha256(text: str, salt: str, dkpower: int = 3, iterations: int = 50000)```Examples:```pythonmd5('hello')  # --&gt; 5d41402abc4b2a76b9719d911017c592md160('hello')  # --&gt; 108f07b8382412612c048d07d13f814118445acdsha256('1234', 'v23')  # --&gt; 457b01a0f6169725# dkpower relates to length of output, default is 3# output length = 2 ** (dkpower + 1)# for example with dkpower = 4 --&gt; output length = 2 ** 5 = 32sha256('1234', 'v23', dkpower=4) # --&gt; 457b01a0f61697250083c598f7b8a8fd```### Date &amp; time```pythonPY_DATE_PATTERN  # '%Y-%m-%d %H:%M:%S %z'MY_DATE_PATTERN  # '%a, %b %d, %Y %H:%M:%S'get_time()format_time(datetime, pattern)get_local_time()get_utc_time()```Examples```pythonfrom bella import PY_DATE_PATTERN, format_time, get_timenow = get_time()date_str = format_time(now, PY_DATE_PATTERN)print(date_str)```### Filesystem```pythonfrom bella import fsfs.exists(file_path: str)fs.isdir(file_path: str)fs.isfile(file_path: str)# Get list of child files/folders by specific glob patternfs.get_files(pattern)# Copy file or folder `source` into `dest`:fs.copy(source, dest)# Remove file or folderfs.remove(path)```### Utils```pythongenid(count: int = 16,  prefix: str = '') # return a random stringslugify(text: str) # create slug from a stringstrip_accents(text: str) # remove accents stringremove_tags(text: str) # remove HTML tags from a stringtruncate(text: str, maxlen: int) # cut a long string to shorter oneplurialize(word: str = None, count: int = 1) # return plural format of wordbyte_to_text(bytesize: int, precision: int = 2)write_json_to_file(file_path: str = '', data: dict = {})read_json_from_file(file_path: str = '')jprint(data: Any, sorting=True, identation=2)throttle(seconds: int) # decorator, make a function throttlingtiming(name: str) # decorator, measure time to execute an expressionhas_installed(package) # check if a python package is installedcurry(func) # make `func` become a curry functioncompose(functions) # performs right-to-left function compositionpipe(functions) # performs left-to-right function composition```Examples:```pythonprint(genid())  # --&gt; akrqHX7eQyT3neF6print(genid(5))  # --&gt; xzxNKprint(genid(10, 'id_'))  # --&gt; id_j0fpXAZslugify('BellaPy - A useful helper for any python program')# --&gt; bellapy-a-useful-helper-for-any-python-programslugify('Ngày hội “đám mây” của Amazon')# --&gt; ngay-hoi-dam-may-cua-amazonplurialize('leaf', 1)  # =&gt; leafplurialize('leaf', 2)  # =&gt; leaves@throttle(5)def fn(a):    print('No call multi times within 5 seconds')    print(a)fn(1)fn(2)fn(3)fn(4)fn(5)fn(6)fn(7)@timing('save_item')def save_item(data):    write_json_to_file('./cache.json', data)save_item(dict(name='Alice'))# =&gt; Timing for save_item: 0.00134 s```# Dev &amp; Test```bashgit clone https://github.com/ndaidong/bellapy.gitcd bellapypoetry install./run_test.sh```# LicenseThe MIT License (MIT)</longdescription>
</pkgmetadata>