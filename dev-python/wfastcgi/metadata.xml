<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>WFastCGI========wfastcgi.py provides a bridge between `IIS &lt;http://www.iis.net/&gt;`__ and Pythonusing WSGI and FastCGI, similar to what ``mod_python`` provides for Apache HTTPServer.It can be used with any Python web application or framework that supports WSGI,and provides an efficient way to handle requests and process pools through IIS.Installation============Downloading Package-------------------To install via the Python Package Index (PyPI), type:.. code:: shell    pip install wfastcgiInstalling IIS and FastCGI--------------------------See the `IIS Installation &lt;http://www.iis.net/learn/install&gt;`__ page forinformation about installing IIS on your version of Windows.The Application Development/CGI package is required for use with `wfastcgi`.Enabling wfastcgi-----------------Once ``wfastcgi`` and IIS are installed, run ``wfastcgi-enable`` as anadministrator to enable ``wfastcgi`` in the IIS configuration. This willconfigure a CGI application that can then be specified as a `route handler &lt;#route-handlers&gt;`__... code:: shell    wfastcgi-enableTo disable ``wfastcgi`` before uninstalling, run ``wfastcgi-disable``... code:: shell    wfastcgi-disable    pip uninstall wfastcgi**Note**: uninstalling ``wfastcgi`` does not automatically unregister the CGIapplication.If the first argument passed to ``wfastcgi-enable`` or ``wfastcgi-disable`` isa valid file, the entire command line is used to register or unregister the CGIhandler.For example, the following command will enable wfastcgi with IIS Express and aspecific host configuration:.. code:: shell    wfastcgi-enable &quot;C:\Program Files (x86)\IIS Express\appcmd.exe&quot;        /apphostconfig:C:\Path\To\applicationhost.configYou can disable wfastcgi in the same configuration file using``wfastcgi-disable`` with the same options:.. code:: shell    wfastcgi-disable &quot;C:\Program Files (x86)\IIS Express\appcmd.exe&quot;        /apphostconfig:C:\Path\To\applicationhost.config.. route-handlersRoute Handlers==============Routing requests to your Python application requires some site-localconfiguration. In your site's ``web.config`` file, you will need to add ahandler and some app settings:.. code:: xml    &lt;configuration&gt;      &lt;system.webServer&gt;        &lt;handlers&gt;          &lt;add name=&quot;Python FastCGI&quot;               path=&quot;*&quot;               verb=&quot;*&quot;               modules=&quot;FastCgiModule&quot;               scriptProcessor=&quot;C:\Python36\python.exe|C:\Python36\Lib\site-packages\wfastcgi.py&quot;               resourceType=&quot;Unspecified&quot;               requireAccess=&quot;Script&quot; /&gt;        &lt;/handlers&gt;      &lt;/system.webServer&gt;          &lt;appSettings&gt;        &lt;!-- Required settings --&gt;        &lt;add key=&quot;WSGI_HANDLER&quot; value=&quot;my_app.wsgi_app()&quot; /&gt;        &lt;add key=&quot;PYTHONPATH&quot; value=&quot;C:\MyApp&quot; /&gt;                &lt;!-- Optional settings --&gt;        &lt;add key=&quot;WSGI_LOG&quot; value=&quot;C:\Logs\my_app.log&quot; /&gt;        &lt;add key=&quot;WSGI_RESTART_FILE_REGEX&quot; value=&quot;.*((\.py)|(\.config))$&quot; /&gt;        &lt;add key=&quot;APPINSIGHTS_INSTRUMENTATIONKEY&quot; value=&quot;__instrumentation_key__&quot; /&gt;        &lt;add key=&quot;DJANGO_SETTINGS_MODULE&quot; value=&quot;my_app.settings&quot; /&gt;        &lt;add key=&quot;WSGI_PTVSD_SECRET&quot; value=&quot;__secret_code__&quot; /&gt;        &lt;add key=&quot;WSGI_PTVSD_ADDRESS&quot; value=&quot;ipaddress:port&quot; /&gt;      &lt;/appSettings&gt;    &lt;/configuration&gt;The value for ``scriptProcessor`` is displayed in the output of``wfastcgi-enable`` and may vary from machine to machine. The values for``path`` and ``verb`` may also be customized to further restrict the requestsfor which this handler will be used.The ``name`` value may be used in nested ``web.config`` files to exclude thishandler. For example, adding a ``web.config`` to your ``static/`` subdirectorycontaining ``&lt;remove name=&quot;Python FastCGI&quot; /&gt;`` will prevent IIS from servingstatic files through your Python app.The provided app settings are translated into environment variables and can beaccessed from your Python application using ``os.getenv``. The followingvariables are used by ``wfastcgi``.WSGI_HANDLER------------This is a Python name that evaluates to the WSGI application object. It is aseries of dotted names that are optionally called with no parameters. Whenresolving the handler, the following steps are used:1. As many names as possible are loaded using ``import``. The last name is   never imported.2. Once a module has been obtained, each remaining name is retrieved as an   attribute. If ``()`` follows the name, it is called before getting the   following name.Errors while resolving the name are returned as a simple 500 error page.Depending on your IIS configuration, you may only receive this page whenaccessing the site from the same machine.PYTHONPATH----------Python is already running when this setting is converted into an environmentvariable, so ``wfastcgi`` performs extra processing to expand environmentvariables in its value (including those added from app settings) and to expand``sys.path``.If you are running an implementation of Python that uses a variable namedsomething other than ``PYTHONPATH``, you should still specify this value as``PYTHONPATH``.WSGI_LOG--------This is a full path to a writable file where logging information is written.This logging is not highly efficient, and it is recommended that this settingonly be specified for debugging purposes.WSGI_RESTART_FILE_REGEX-----------------------The regular expression used to identify when changed files belong to yourwebsite. If a file belonging to your site changes, all active CGI processeswill be terminated so that the new files can be loaded.By default, all ``*.py`` and ``*.config`` files are included. Specify an emptystring to disable auto-restart.APPINSIGHTS_INSTRUMENTATIONKEY------------------------------Providing an instrumentation key with this value will enable request tracingwith `Application Insights &lt;http://pypi.org/project/applicationinsights&gt;`__for your entire site. If you have not installed the ``applicationinsights``package, a warning is written to ``WSGI_LOG`` (if enabled) but the site willoperate normally.Application Insights is a low-overhead monitoring system for tracking yourapplication's health and performance. When enabled, all errors in your sitewill be reported through Application Insights.DJANGO_SETTINGS_MODULE----------------------A commonly used registry key when deploying sites built using Django. TypicallyDjango sites will set ``WSGI_HANDLER`` to``django.core.handlers.wsgi.WSGIHandler()`` and load app-specific settingsthrough the module specified by this value.Sites using frameworks other than Django do not need to specify this value.WSGI_PTVSD_SECRET-----------------Providing an arbitrary string here and including the`ptvsd &lt;https://pypi.org/project/ptvsd&gt;`__ module in your environment willautomatically enable remote debugging of your web site. The string in thisapplication setting should be treated as a password, and needs to be providedwhen attaching to the running site.WSGI_PTVSD_ADDRESS------------------When ``WSGI_PTVSD_SECRET`` is specified, this value may also be specified tooverride the default listening address for remote debugging. By default,your site will listen on ``localhost:5678``, but in many cases you may needto change this to ``0.0.0.0:some-port`` in order to attach remotely.Remember that you will also need to forward the port through any firewallsyou might have configured.</longdescription>
</pkgmetadata>