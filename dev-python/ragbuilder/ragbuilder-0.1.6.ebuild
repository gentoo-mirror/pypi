# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="RagBuilder SDK - Create optimal Production-ready RAG pipelines"

HOMEPAGE=""
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all document-processors graph vectorstores"
DEPENDENCIES="dev-python/chromadb[${PYTHON_USEDEP}]
	dev-python/datasets[${PYTHON_USEDEP}]
	dev-python/fastapi[${PYTHON_USEDEP}]
	dev-python/jinja2[${PYTHON_USEDEP}]
	dev-python/langchain[${PYTHON_USEDEP}]
	dev-python/langchain-chroma[${PYTHON_USEDEP}]
	dev-python/langchain-community[${PYTHON_USEDEP}]
	dev-python/langchain-core[${PYTHON_USEDEP}]
	dev-python/langchain-huggingface[${PYTHON_USEDEP}]
	dev-python/langchain-openai[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-api-1.23.0[${PYTHON_USEDEP}]
	>=dev-python/opentelemetry-sdk-1.23.0[${PYTHON_USEDEP}]
	dev-python/opentelemetry-exporter-otlp[${PYTHON_USEDEP}]
	dev-python/optuna[${PYTHON_USEDEP}]
	dev-python/platformdirs[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.0.0[${PYTHON_USEDEP}]
	dev-python/python-dotenv[${PYTHON_USEDEP}]
	dev-python/ragas[${PYTHON_USEDEP}]
	dev-python/rerankers[${PYTHON_USEDEP}]
	>=dev-python/rich-13.0.0[${PYTHON_USEDEP}]
	dev-python/sentence-transformers[${PYTHON_USEDEP}]
	~dev-python/tenacity-8.4.2[${PYTHON_USEDEP}]
	dev-python/rank-bm25[${PYTHON_USEDEP}]
	>=dev-python/uvicorn-0.30.0[${PYTHON_USEDEP}]
	graph? ( dev-python/neo4j[${PYTHON_USEDEP}] )
	graph? ( dev-python/langchain-community[${PYTHON_USEDEP}] )
	vectorstores? ( >=dev-python/elasticsearch-8.0.0[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/faiss-cpu[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/pinecone-client[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/pymilvus[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/qdrant-client[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/weaviate-client[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/langchain-pinecone[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/langchain-weaviate[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/langchain-qdrant[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/langchain-milvus[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/langchain-postgres[${PYTHON_USEDEP}] )
	vectorstores? ( dev-python/langchain-elasticsearch[${PYTHON_USEDEP}] )
	document-processors? ( dev-python/PyMuPDF[${PYTHON_USEDEP}] )
	document-processors? ( dev-python/python-docx[${PYTHON_USEDEP}] )
	document-processors? ( >=dev-python/pikepdf-8.11.0[${PYTHON_USEDEP}] )
	document-processors? ( dev-python/pandoc[${PYTHON_USEDEP}] )
	document-processors? ( >=dev-python/pypdf-3.17.0[${PYTHON_USEDEP}] )
	document-processors? ( >=dev-python/markdown-3.5.0[${PYTHON_USEDEP}] )
	document-processors? ( >=dev-python/beautifulsoup4-4.12.0[${PYTHON_USEDEP}] )
	document-processors? ( dev-python/unstructured[${PYTHON_USEDEP}] )
	all? ( dev-python/ragbuilder[${PYTHON_USEDEP}] )
	all? ( dev-python/ragbuilder[${PYTHON_USEDEP}] )
	all? ( dev-python/ragbuilder[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
