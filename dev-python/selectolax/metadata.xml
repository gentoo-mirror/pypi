<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: docs/logo.png  :alt: selectolax logo-------------------------.. image:: https://img.shields.io/pypi/v/selectolax.svg        :target: https://pypi.python.org/pypi/selectolaxA fast HTML5 parser with CSS selectors using `Modest &lt;https://github.com/lexborisov/Modest/&gt;`_ and`Lexbor &lt;https://github.com/lexbor/lexbor&gt;`_ engines.Installation------------From PyPI using pip:.. code-block:: bash        pip install selectolax Development version from GitHub:.. code-block:: bash               git clone --recursive  https://github.com/rushter/selectolax        cd selectolax        pip install -r requirements_dev.txt        python setup.py installHow to compile selectolax while developing:.. code-block:: bash    make clean    make devBasic examples--------------.. code:: python    In [1]: from selectolax.parser import HTMLParser       ...:       ...: html = &quot;&quot;&quot;       ...: &lt;h1 id=&quot;title&quot; data-updated=&quot;20201101&quot;&gt;Hi there&lt;/h1&gt;       ...: &lt;div class=&quot;post&quot;&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry. &lt;/div&gt;       ...: &lt;div class=&quot;post&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/div&gt;       ...: &quot;&quot;&quot;       ...: tree = HTMLParser(html)    In [2]: tree.css_first('h1#title').text()    Out[2]: 'Hi there'    In [3]: tree.css_first('h1#title').attributes    Out[3]: {'id': 'title', 'data-updated': '20201101'}    In [4]: [node.text() for node in tree.css('.post')]    Out[4]:    ['Lorem Ipsum is simply dummy text of the printing and typesetting industry. ',     'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'].. code:: python    In [1]: html = &quot;&lt;div&gt;&lt;p id=p1&gt;&lt;p id=p2&gt;&lt;p id=p3&gt;&lt;a&gt;link&lt;/a&gt;&lt;p id=p4&gt;&lt;p id=p5&gt;text&lt;p id=p6&gt;&lt;/div&gt;&quot;       ...: selector = &quot;div &gt; :nth-child(2n+1):not(:has(a))&quot;    In [2]: for node in HTMLParser(html).css(selector):       ...:     print(node.attributes, node.text(), node.tag)       ...:     print(node.parent.tag)       ...:     print(node.html)       ...:    {'id': 'p1'}  p    div    &lt;p id=&quot;p1&quot;&gt;&lt;/p&gt;    {'id': 'p5'} text p    div    &lt;p id=&quot;p5&quot;&gt;text&lt;/p&gt;* `Detailed overview &lt;https://github.com/rushter/selectolax/blob/master/examples/walkthrough.ipynb&gt;`_Available backends------------------Selectolax supports two backends: ``Modest`` and ``Lexbor``. By default, all examples use the Modest backend.Most of the features between backends are almost identical, but there are still some differences.Currently, the ``Lexbor`` backend is in **beta** and missing some of the features.To use ``lexbor``, just import the parser and use it in the similar way to the `HTMLParser`... code:: python    In [1]: from selectolax.lexbor import LexborHTMLParser    In [2]: html = &quot;&quot;&quot;       ...: &lt;title&gt;Hi there&lt;/title&gt;       ...: &lt;div id=&quot;updated&quot;&gt;2021-08-15&lt;/div&gt;       ...: &quot;&quot;&quot;    In [3]: parser = LexborHTMLParser(html)    In [4]: parser.root.css_first(&quot;#updated&quot;).text()    Out[4]: '2021-08-15'Simple Benchmark----------------* Extract title, links, scripts and a meta tag from main pages of top 754 domains. See ``examples/benchmark.py`` for more information.============================ ===========Package                       Time============================ ===========Beautiful Soup (html.parser)  61.02 sec.lxml                          9.09 sec.html5_parser                  16.10 sec.selectolax (Modest)           2.94 sec.selectolax (Lexbor)           2.39 sec.============================ ===========Links-----*  `selectolax API reference &lt;http://selectolax.readthedocs.io/en/latest/parser.html&gt;`_*  `Detailed overview &lt;https://github.com/rushter/selectolax/blob/master/examples/walkthrough.ipynb&gt;`_*  `Modest introduction &lt;https://lexborisov.github.io/Modest/&gt;`_*  `Modest benchmark &lt;http://lexborisov.github.io/benchmark-html-persers/&gt;`_*  `Python benchmark &lt;https://rushter.com/blog/python-fast-html-parser/&gt;`_*  `Another Python benchmark &lt;https://www.peterbe.com/plog/selectolax-or-pyquery&gt;`_License-------* Modest engine â€” `LGPL2.1 &lt;https://github.com/lexborisov/Modest/blob/master/LICENSE&gt;`_* selectolax - `MIT &lt;https://github.com/rushter/selectolax/blob/master/LICENSE&gt;`_</longdescription>
</pkgmetadata>