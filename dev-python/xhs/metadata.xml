<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;h1 align=&quot;center&quot;&gt;üç∞xhs&lt;/h1&gt;[![PyPI](https://img.shields.io/pypi/v/xhs?label=xhs)](https://pypi.org/project/xhs/)[![](https://static.pepy.tech/badge/xhs)](https://pepy.tech/project/xhs)[![](https://img.shields.io/github/license/ReaJason/xhs)](https://github.com/ReaJason/xhs/blob/master/LICENSE)[![Tencent QQ](https://img.shields.io/badge/QQ-668689006-%2312B7F5?logo=tencentqq&amp;logoColor=white)](https://qm.qq.com/cgi-bin/qm/qr?k=ClAygjOnEiOotOGzu6yQ8ZhWekrArAXf&amp;jump_from=webapi&amp;authKey=Gje6CcffTA1untyXfv/Pitt4aXQ0m2I/4p0PeTaRYCueTgwM5NwT842miLW4zGL/)&lt;br /&gt; [![](https://github.com/ReaJason/xhs/actions/workflows/doc.yml/badge.svg)](https://reajason.github.io/xhs/)[![](https://github.com/ReaJason/xhs/actions/workflows/test.yml/badge.svg)](https://github.com/ReaJason/xhs/actions/workflows/test.yml)[![](https://github.com/ReaJason/xhs/actions/workflows/pypi.yml/badge.svg)](https://github.com/ReaJason/xhs/actions/workflows/pypi.yml)&lt;/div&gt;&gt; **Warning**&gt;&gt; The primary purpose of this repository is to practice my Python skills. It is important to note that web crawling may&gt; be considered illegal, and therefore, it is crucial to refrain from exerting any pressure or engaging in unauthorized&gt; activities on websites.**xhs** is a crawling tool designed to extract data from [xiaohongshu website](https://www.xiaohongshu.com/explore)## Usagexhs is available on PyPI:```console$ python -m pip install xhs```if you want the latest version, you can install from git:```console$ python -m pip install git+https://github.com/ReaJason/xhs```### Basic Usage &gt; maybe now is more complex, Thanks [@NanmiCoder](https://github.com/NanmiCoder)```shellcurl -O https://cdn.jsdelivr.net/gh/requireCool/stealth.min.js/stealth.min.jspip install playwrightplaywright install``````pythonfrom time import sleepfrom xhs import FeedType, XhsClientfrom playwright.sync_api import sync_playwrightdef get_context_page(playwright):    chromium = playwright.chromium    browser = chromium.launch(headless=True)    browser_context = browser.new_context(        viewport={&quot;width&quot;: 1920, &quot;height&quot;: 1080},        user_agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;    )    browser_context.add_init_script(path=&quot;stealth.min.js&quot;)    context_page = browser_context.new_page()    return browser_context, context_pageplaywright = sync_playwright().start()browser_context, context_page = get_context_page(playwright)cookie = &quot;please get cookie in website&quot;def sign(uri, data=None, a1=&quot;&quot;, web_session=&quot;&quot;):    context_page.goto(&quot;https://www.xiaohongshu.com&quot;)    cookie_list = browser_context.cookies()    web_session_cookie = list(filter(lambda cookie: cookie[&quot;name&quot;] == &quot;web_session&quot;, cookie_list))    if not web_session_cookie:        browser_context.add_cookies([            {'name': 'web_session', 'value': web_session, 'domain': &quot;.xiaohongshu.com&quot;, 'path': &quot;/&quot;},            {'name': 'a1', 'value': a1, 'domain': &quot;.xiaohongshu.com&quot;, 'path': &quot;/&quot;}]        )        sleep(1)    encrypt_params = context_page.evaluate(&quot;([url, data]) =&gt; window._webmsxyw(url, data)&quot;, [uri, data])    return {        &quot;x-s&quot;: encrypt_params[&quot;X-s&quot;],        &quot;x-t&quot;: str(encrypt_params[&quot;X-t&quot;])    }xhs_client = XhsClient(cookie, sign=sign)# get note infonote_info = xhs_client.get_note_by_id(&quot;63db8819000000001a01ead1&quot;)# get user infouser_info = xhs_client.get_user_info(&quot;5ff0e6410000000001008400&quot;)# get user notesuser_notes = xhs_client.get_user_notes(&quot;63273a77000000002303cc9b&quot;)# search notenotes = xhs_client.get_note_by_keyword(&quot;Â∞èÁ∫¢‰π¶&quot;)# get home recommend feedrecommend_type = FeedType.RECOMMENDrecommend_notes = xhs_client.get_home_feed(recommend_type)# save notes file in diskxhs_client.save_files_from_note_id(&quot;63db8819000000001a01ead1&quot;,                                   r&quot;C:\Users\User\Desktop&quot;# get user all note detailnotes = xhs_client.get_user_all_notes(&quot;5c2766b500000000050283f1&quot;)# resource releaseplaywright.stop()# more functions in development```Please refer to the [document(WIP)](https://reajason.github.io/xhs/) for more API references.~~use signature function~~( it's useless ):```python# sign get request&gt;&gt; &gt; from xhs import help&gt;&gt; &gt; help.sign(&quot;/api/sns/web/v1/user/otherinfo?target_user_id=5ff0e6410000000001008400&quot;){'x-s': 'sYMlOB5W0YdvZBVvOBw6slZJZjM+ZgaUOlFisBwJslc3', 'x-t': '1683368960336', 'x-s-common': '2UQAPsHC+aIjqArjwjHjNsQhPsHCH0rjNsQhPaHCH0P1PjhIHjIj2eHjwjQgynEDJ74AHjIj2ePjwjQhyoPTqBPT49pjHjIj2ecjwjHUN0P1PaHVHdWMH0ijHjIj2eGjwjHl+0W APAGhw / GIPAP9HjIj2eqjwjQAnLMV / FHMpAm88o8ycS89 / FQ7 + d + VnDkyyDF3nf4YpLRVzfSAcd4tq9l0PUHVHdWhH0ijHjIj2eDjwjFAPAPU + eHMweDANsQhP / Zjw0bR'}                                                                                                                                                # sign post request                                                                                                                                                &gt;&gt; &gt; help.sign(     &quot;/api/sns/web/v1/feed&quot;, {&quot;source_note_id&quot;: &quot;63db8819000000001a01ead1&quot;}) {'x-s': '1lU6sBdUOY5WZY5Ksg9G0Yw60jwBOlFWZj5W0jM+slc3', 'x-t': '1683368998055',  'x-s-common': '2UQAPsHC+aIjqArjwjHjNsQhPsHCH0rjNsQhPaHCH0P1PjhIHjIj2eHjwjQgynEDJ74AHjIj2ePjwjQhyoPTqBPT49pjHjIj2ecjwjHUN0P1PaHVHdWMH0ijHjIj2eGjwjHl+0W  APAGhw / DhPeLMHjIj2eqjwjHlJbL9qFQDpLR8 + p4yn / pNq9qEzAm84AGIyd4s / 9lBpMkx + pqIyDF3q9l0PUHVHdWhH0ijHjIj2eDjwjFlP0DEw / DFPeDANsQhP / Zjw0bR  '}  # generate a1 and webId, but it not useful until you sign them  &gt;&gt; &gt; help.get_a1_and_web_id()  ('187f09d3bc6wUrNpFbQ9Yc431AenpvlBJh2QIQahI50000261040', '12b49a1fd517aa8df85380e9961b6800')  # get search_id parameter  &gt;&gt; &gt; help.get_search_id()      '2BHU39J8HCTIW665YHFCW'```</longdescription>
</pkgmetadata>