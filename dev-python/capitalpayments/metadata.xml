<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CapitalPaymentsThis Api has been made Crypto Payments based on USDT.TRC20All examples are available into examples/ folder.#Â Install with pip&gt; pip install capitalpayments1. Create an account [Create account](capitalpayments.me/apps/signup &quot;Create account&quot;)2. Create api key [here](https://www.capitalpayments.co/apps/api/ &quot;here&quot;)3. Follow next steps to connect your account(NOTE: Sandbox mode needs test coins request [here](https://www.capitalpayments.co/apps/api/ &quot;here&quot;))# Login ```from sdk import SDKsdk = SDK('api_key','api_secret')response = sdk.login()```# Get environment ```from sdk import SDKsdk = SDK('api_key','api_secret')# get the environment : response &gt;= int $sandobox (0 or 1)response = sdk.getEnvironment()```# Get account```from sdk import SDKsdk = SDK('api_key','api_secret')# get the account dataresponse = sdk.getAccount()```# Get balance```from sdk import SDKsdk = SDK('api_key','api_secret')# get the balance from the apiresponse = sdk.getBalance()```# Get main wallet```from sdk import SDKsdk = SDK('api_key','api_secret')# get main wallet data (private key is included)response = sdk.getMainWallet()```# Get wallets```from sdk import SDKsdk = SDK('api_key','api_secret')# retrieves all wallets attached to api response = sdk.getWallets()```# Create invoice```from sdk import SDKsdk = SDK('api_key','api_secret')# retrieves invoice dataresponse = sdk.createInvoice({    'invoice_id' : 'invoice_id' # string     'amount' : 'amount' # float|int     'whatsApp' : 'whatsApp' # (optional) int whatsapp full number    'name' : 'customer_name' #  (optional) string customer's name})```# Create invoices```from sdk import SDKsdk = SDK('api_key','api_secret')# retrieves invoices dataresponse = sdk.createInvoices([    {        'invoice_id' : 'invoice_id' # string         'amount' : 'amount' # float|int         'whatsApp' : 'whatsApp' # (optional) int whatsapp full number        'name' : 'customer_name' #  (optional) string customer's name    },    {        'invoice_id' : 'invoice_id' # string         'amount' : 'amount' # float|int         'whatsApp' : 'whatsApp' # (optional) int whatsapp full number        'name' : 'customer_name' #  (optional) string customer's name    }])```# Get invoice status```from sdk import SDKsdk = SDK('api_key','api_secret')# get the invoice statusresponse = sdk.getInvoiceStatus({    'invoice_id' : 'invoice_id' # string })```# Cancel invoice```from sdk import SDKsdk = SDK('api_key','api_secret')# get the invoice statusresponse = sdk.cancelInvoice({    'invoice_id' : 'invoice_id' # string })```# Create payout```from sdk import SDKsdk = SDK('api_key','api_secret')# retrieve the payout dataresponse = sdk.createPayout({    'payout_id' : 'payout_id' # string     'amount' : 'amount' # float|int     'address' : 'USDT.TRC20WalletAddress' # string})```# Create payouts```from sdk import SDKsdk = SDK('api_key','api_secret')# retrieves payouts dataresponse = sdk.createPayouts([    {        'payout_id' : 'payout_id' # string         'amount' : 'amount' # float|int         'address' : 'USDT.TRC20WalletAddress' # string    },    {        'payout_id' : 'payout_id' # string         'amount' : 'amount' # float|int         'address' : 'USDT.TRC20WalletAddress' # string    },])```# Get payout status```from sdk import SDKsdk = SDK('api_key','api_secret')# get the payout statusresponse = sdk.getPayoutStatus({    'payout_id' : 'payout_id' # string })```# Cancel payout ```from sdk import SDKsdk = SDK('api_key','api_secret')# cancel payout  response = sdk.cancelPayout({    'payout_id' : 'PayoutId', # @string})```# create item```from sdk import SDKsdk = SDK('api_key','api_secret')# cancel payout  response = sdk.createItem({    'title' : 'title', # @string    'description' : 'description', # @string    'price' : 10 # @int|float})```# delete item```from sdk import SDKsdk = SDK('api_key','api_secret')# delete itemresponse = sdk.deleteItem({    'item_id' : 'item_id', # @string})```# get items```from sdk import SDKsdk = SDK('api_key','api_secret')# get array itemsresponse = sdk.getItems()```# get item```from sdk import SDKsdk = SDK('api_key','api_secret')# get itemresponse = sdk.getItem({    'item_id' : 'item_id', # @string})```# create customer```from sdk import SDKsdk = SDK('api_key','api_secret')# create customerresponse = sdk.createCustomer({    'name' : 'title', # @string    'email' : 'description', # @string    'whatsapp' : 'full_whatsapp', # @string    'address' : 'USDT.TRC20WalletAddress', # @string})```# delete customer```from sdk import SDKsdk = SDK('api_key','api_secret')# delete customerresponse = sdk.deleteCustomer({    'customer_id' : 'customer_id', # @string})```# get customers```from sdk import SDKsdk = SDK('api_key','api_secret')# get array customersresponse = sdk.getCustomers()```# get customer```from sdk import SDKsdk = SDK('api_key','api_secret')# get customer by idresponse = sdk.getCustomer({    'customer_id' : 'customer_id', # @string})```# set test invoice as payed```from sdk import SDKsdk = SDK('api_key','api_secret')# requires invoice_idresponse = sdk.setTestInvoiceAsPayed({    'invoice_id' : 'invoice_id'})``````# set deposit wallet```from sdk import SDKsdk = SDK('api_key','api_secret')# requires tron wallet address response = sdk.setDepositWallet({    'address' : 'TTCkwzmTZHjN4VSVRVz7s1h5btjWGfvnF9'})```</longdescription>
</pkgmetadata>