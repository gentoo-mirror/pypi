<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ScrapingAnt API client for Python[![PyPI version](https://badge.fury.io/py/scrapingant-client.svg)](https://badge.fury.io/py/scrapingant-client)`scrapingant-client` is the official library to access [ScrapingAnt API](https://docs.scrapingant.com) from your Pythonapplications. It provides useful features like parameters encoding to improve the ScrapingAnt usage experience. Requirespython 3.6+.&lt;!-- toc --&gt;- [Quick Start](#quick-start)- [API token](#api-token)- [API Reference](#api-reference)- [Exceptions](#exceptions)- [Examples](#examples)- [Useful links](#useful-links)&lt;!-- tocstop --&gt;## Quick Start```python3from scrapingant_client import ScrapingAntClientclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')# Scrape the example.com siteresult = client.general_request('https://example.com')print(result.content)```## Install```shellpip install scrapingant-client```If you need async support:```shellpip install scrapingant-client[async]```## API tokenIn order to get API token you'll need to register at [ScrapingAnt Service](https://app.scrapingant.com)## API ReferenceAll public classes, methods and their parameters can be inspected in this API reference.#### ScrapingAntClient(token)Main class of this library.| Param | Type                ||-------|---------------------|| token | &lt;code&gt;string&lt;/code&gt; |* * *#### ScrapingAntClient.general_request and ScrapingAntClient.general_request_asynchttps://docs.scrapingant.com/request-response-format#available-parameters| Param               | Type                                                                                                                       | Default    ||---------------------|----------------------------------------------------------------------------------------------------------------------------|------------|| url                 | &lt;code&gt;string&lt;/code&gt;                                                                                                        |            || method              | &lt;code&gt;string&lt;/code&gt;                                                                                                        | GET        || cookies             | &lt;code&gt;List[Cookie]&lt;/code&gt;                                                                                                  | None       || headers             | &lt;code&gt;List[Dict[str, str]]&lt;/code&gt;                                                                                          | None       || js_snippet          | &lt;code&gt;string&lt;/code&gt;                                                                                                        | None       || proxy_type          | &lt;code&gt;ProxyType&lt;/code&gt;                                                                                                     | datacenter | | proxy_country       | &lt;code&gt;str&lt;/code&gt;                                                                                                           | None       | | wait_for_selector   | &lt;code&gt;str&lt;/code&gt;                                                                                                           | None       || browser             | &lt;code&gt;boolean&lt;/code&gt;                                                                                                       | True       || return_page_source  | &lt;code&gt;boolean&lt;/code&gt;                                                                                                       | False      || data                | same as [requests param 'data'](https://requests.readthedocs.io/en/latest/user/quickstart/#more-complicated-post-requests) | None       || json                | same as [requests param 'json'](https://requests.readthedocs.io/en/latest/user/quickstart/#more-complicated-post-requests) | None       |**IMPORTANT NOTE:** &lt;code&gt;js_snippet&lt;/code&gt; will be encoded to Base64 automatically by the ScrapingAnt client library.* * *#### CookieClass defining cookie. Currently it supports only name and value| Param |  Type               | |-------|---------------------|| name  | &lt;code&gt;string&lt;/code&gt; | | value | &lt;code&gt;string&lt;/code&gt; |* * *#### ResponseClass defining response from API.| Param       | Type                       ||-------------|----------------------------|| content     | &lt;code&gt;string&lt;/code&gt;        || cookies     | &lt;code&gt;List[Cookie]&lt;/code&gt;  || status_code | &lt;code&gt;int&lt;/code&gt;           || text        | &lt;code&gt;string&lt;/code&gt;        |## Exceptions`ScrapingantClientException` is base Exception class, used for all errors.| Exception                            | Reason                                                                                                                       ||--------------------------------------|------------------------------------------------------------------------------------------------------------------------------|| ScrapingantInvalidTokenException     | The API token is wrong or you have exceeded the API calls request limit                                                      || ScrapingantInvalidInputException     | Invalid value provided. Please, look into error message for more info                                                        || ScrapingantInternalException         | Something went wrong with the server side code. Try again later or contact ScrapingAnt support                               || ScrapingantSiteNotReachableException | The requested URL is not reachable. Please, check it locally                                                                 || ScrapingantDetectedException         | The anti-bot detection system has detected the request. Please, retry or change the request settings.                        || ScrapingantTimeoutException          | Got timeout while communicating with Scrapingant servers. Check your network connection. Please try later or contact support |* * *## Examples### Sending custom cookies```python3from scrapingant_client import ScrapingAntClientfrom scrapingant_client import Cookieclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')result = client.general_request(    'https://httpbin.org/cookies',    cookies=[        Cookie(name='cookieName1', value='cookieVal1'),        Cookie(name='cookieName2', value='cookieVal2'),    ])print(result.content)# Response cookies is a list of Cookie objects# They can be used in next requestsresponse_cookies = result.cookies ```### Executing custom JS snippet```pythonfrom scrapingant_client import ScrapingAntClientclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')customJsSnippet = &quot;&quot;&quot;var str = 'Hello, world!';var htmlElement = document.getElementsByTagName('html')[0];htmlElement.innerHTML = str;&quot;&quot;&quot;result = client.general_request(    'https://example.com',    js_snippet=customJsSnippet,)print(result.content)```### Exception handling and retries```pythonfrom scrapingant_client import ScrapingAntClient, ScrapingantClientException, ScrapingantInvalidInputExceptionclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')RETRIES_COUNT = 3def parse_html(html: str):    ...  # Implement your data extraction hereparsed_data = Nonefor retry_number in range(RETRIES_COUNT):    try:        scrapingant_response = client.general_request(            'https://example.com',        )    except ScrapingantInvalidInputException as e:        print(f'Got invalid input exception: {{repr(e)}}')        break  # We are not retrying if request params are not valid    except ScrapingantClientException as e:        print(f'Got ScrapingAnt exception {repr(e)}')    except Exception as e:        print(f'Got unexpected exception {repr(e)}')  # please report this kind of exceptions by creating a new issue    else:        try:            parsed_data = parse_html(scrapingant_response.content)            break  # Data is parsed successfully, so we dont need to retry        except Exception as e:            print(f'Got exception while parsing data {repr(e)}')if parsed_data is None:    print(f'Failed to retrieve and parse data after {RETRIES_COUNT} tries')    # Can sleep and retry later, or stop the script execution, and research the reason else:    print(f'Successfully parsed data: {parsed_data}')```### Sending custom headers```python3from scrapingant_client import ScrapingAntClientclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')result = client.general_request(    'https://httpbin.org/headers',    headers={        'test-header': 'test-value'    })print(result.content)# Http basic auth exampleresult = client.general_request(    'https://jigsaw.w3.org/HTTP/Basic/',    headers={'Authorization': 'Basic Z3Vlc3Q6Z3Vlc3Q='})print(result.content)```### Simple async example```python3import asynciofrom scrapingant_client import ScrapingAntClientclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')async def main():    # Scrape the example.com site    result = await client.general_request_async('https://example.com')    print(result.content)asyncio.run(main())```### Sending POST request```python3from scrapingant_client import ScrapingAntClientclient = ScrapingAntClient(token='&lt;YOUR-SCRAPINGANT-API-TOKEN&gt;')# Sending POST request with json dataresult = client.general_request(    url=&quot;https://httpbin.org/post&quot;,    method=&quot;POST&quot;,    json={&quot;test&quot;: &quot;test&quot;},)print(result.content)# Sending POST request with bytes dataresult = client.general_request(    url=&quot;https://httpbin.org/post&quot;,    method=&quot;POST&quot;,    data=b'test_bytes',)print(result.content)```## Useful links- [Scrapingant API doumentation](https://docs.scrapingant.com)- [Scrapingant JS Client](https://github.com/scrapingant/scrapingant-client-js)</longdescription>
</pkgmetadata>