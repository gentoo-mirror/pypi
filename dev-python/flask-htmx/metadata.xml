<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>##########Flask-HTMX##########.. image:: https://badge.fury.io/py/flask-htmx.svg    :target: https://badge.fury.io/py/flask-htmx.. image:: https://readthedocs.org/projects/flask-htmx/badge/?version=latest    :target: https://flask-htmx.readthedocs.io/en/latest/?badge=latest    :alt: Documentation Status.. image:: https://codecov.io/gh/edmondchuc/flask-htmx/branch/main/graph/badge.svg?token=K6YB3PB33T    :target: https://codecov.io/gh/edmondchuc/flask-htmx.. image:: https://img.shields.io/badge/code%20style-black-000000.svg    :target: https://github.com/psf/black.. image:: https://img.shields.io/badge/License-MIT-red.svg    :target: https://github.com/edmondchuc/flask-htmx/blob/main/LICENSE.. image:: https://static.pepy.tech/personalized-badge/flask-htmx?period=week&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=downloads/week    :target: https://pepy.tech/project/flask-htmx.. image:: https://static.pepy.tech/personalized-badge/flask-htmx?period=month&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=downloads/month    :target: https://pepy.tech/project/flask-htmx.. image:: https://static.pepy.tech/personalized-badge/flask-htmx?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=downloads    :target: https://pepy.tech/project/flask-htmxA Flask extension to work with HTMX.Documentation: https://flask-htmx.readthedocs.io.. quickstart-startblockQuickstart==========Install the extension with pip... code-block:: bash    pip install flask-htmxOr perhaps you use Poetry... code-block:: bash    poetry add flask-htmxHTMX Request------------You can register the HTMX object by passing the Flask:code:`app` object via the constructor... code-block:: python    htmx = HTMX(app)Or you can register the HTMX object using`HTMX.init_app() &lt;https://flask-htmx.readthedocs.io/en/latest/flask_htmx.htmx.html#flask_htmx.htmx.HTMX.init_app&gt;`_... code-block:: python    htmx = HTMX()    htmx.init_app(app)A minimal working example... code-block:: python    from flask import Flask    from flask_htmx import HTMX    app = Flask(__name__)    htmx = HTMX(app)    @app.route(&quot;/&quot;)    def home():        if htmx:            return render_template(&quot;partials/thing.html&quot;)        return render_template(&quot;index.html&quot;)The above example checks whether the request camefrom HTMX or not. If :code:`htmx` evaluates to`True &lt;https://docs.python.org/3/library/constants.html#True&gt;`_, then it was a HTMX request, else`False &lt;https://docs.python.org/3/library/constants.html#False&gt;`_.This allows you to return a partialHTML when it's a HTMX request or the full page HTMLwhen it is a normal browser request.Flask-HTMX also supports checking for HTMX headersduring a request in the view. For example, checkthe current URL of the browser of a HTMX request... code-block:: python    @app.route(&quot;/&quot;)    def home():        current_url = htmx.current_url        return render_template(&quot;index.html&quot;, current_url=current_url)Other HTMX request headers are also available.See https://htmx.org/reference/#request_headers.HTMX Response-------------You might be interested on adding`htmx response headers &lt;https://htmx.org/reference/#response_headers&gt;`_ to your response.Use :code:`flask_htmx.make_response` for that. For example, instead of:.. code-block:: python    import json    from flask import make_response    from my_app import app    @app.route(&quot;/hola-mundo&quot;)    def hola_mundo():        body = &quot;Hola Mundo!&quot;        response = make_response(body)        response.headers[&quot;HX-Push-URL&quot;] = &quot;false&quot;        trigger_string = json.dumps({&quot;event1&quot;:&quot;A message&quot;, &quot;event2&quot;:&quot;Another message&quot;})        response.headers[&quot;HX-Trigger&quot;] = trigger_string        return responseYou can do:.. code-block:: python    from flask_htmx import make_response    from my_app import app    @app.route(&quot;/hola-mundo&quot;)    def hola_mundo():        body = &quot;Hola Mundo!&quot;        return make_response(            body,            push_url=False,            trigger={&quot;event1&quot;: &quot;A message&quot;, &quot;event2&quot;: &quot;Another message&quot;},        ).. quickstart-endblockDocumentation=============Visit the `full documentation &lt;https://flask-htmx.readthedocs.io&gt;`_.Development===========Installation------------.. code-block:: bash    poetry installRunning tests-------------.. code-block:: bash    poetry run pytestCoverage--------.. code-block:: bash    poetry run pytest --cov=flask_htmx tests/Docs----.. code-block:: bash    sphinx-autobuild docs docs/_build/html</longdescription>
</pkgmetadata>