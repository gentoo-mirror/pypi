<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>OpenTelemetry Google Cloud Integration======================================.. image:: https://badge.fury.io/py/opentelemetry-exporter-gcp-trace.svg    :target: https://badge.fury.io/py/opentelemetry-exporter-gcp-trace.. image:: https://readthedocs.org/projects/google-cloud-opentelemetry/badge/?version=latest    :target: https://google-cloud-opentelemetry.readthedocs.io/en/latest/?badge=latest    :alt: Documentation StatusThis library provides support for exporting traces to Google Cloud Trace.For resource detection and GCP trace context propagation, see`opentelemetry-tools-google-cloud&lt;https://pypi.org/project/opentelemetry-tools-google-cloud/&gt;`_. For theGoogle Cloud Monitoring exporter, see`opentelemetry-exporter-gcp-monitoring&lt;https://pypi.org/project/opentelemetry-exporter-gcp-monitoring/&gt;`_.Installation------------.. code:: bash    pip install opentelemetry-exporter-gcp-traceUsage-----.. code:: python    from opentelemetry import trace    from opentelemetry.exporter.cloud_trace import CloudTraceSpanExporter    from opentelemetry.sdk.trace import TracerProvider    from opentelemetry.sdk.trace.export import (        SimpleSpanProcessor,    )    trace.set_tracer_provider(TracerProvider())    cloud_trace_exporter = CloudTraceSpanExporter(        project_id='my-gcloud-project',    )    trace.get_tracer_provider().add_span_processor(        SimpleSpanProcessor(cloud_trace_exporter)    )    tracer = trace.get_tracer(__name__)    with tracer.start_as_current_span('foo'):        print('Hello world!')References----------* `Cloud Trace &lt;https://cloud.google.com/trace/&gt;`_* `OpenTelemetry Project &lt;https://opentelemetry.io/&gt;`_</longdescription>
</pkgmetadata>