<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>InstrumentKit=============.. image:: https://img.shields.io/travis/Galvant/InstrumentKit/master.svg?maxAge=2592000    :target: https://travis-ci.org/Galvant/InstrumentKit    :alt: Travis-CI build status.. image:: https://img.shields.io/coveralls/Galvant/InstrumentKit/master.svg?maxAge=2592000    :target: https://coveralls.io/github/Galvant/InstrumentKit?branch=master    :alt: Coveralls code coverage.. image:: https://readthedocs.org/projects/instrumentkit/badge/?version=latest    :target: https://readthedocs.org/projects/instrumentkit/?badge=latest    :alt: Documentation.. image:: https://img.shields.io/pypi/v/instrumentkit.svg?maxAge=86400    :target: https://pypi.python.org/pypi/instrumentkit    :alt: PyPI version.. image:: https://img.shields.io/pypi/pyversions/instrumentkit.svg?maxAge=2592000    :alt: Python versionsInstrumentKit is an open source Python library designed to help theend-user get straight into communicating with their equipment via a PC.InstrumentKit aims to accomplish this by providing a connection- andvendor-agnostic API. Users can freely swap between a variety ofconnection types (ethernet, gpib, serial, usb) without impacting theircode. Since the API is consistent across similar instruments, a usercan, for example, upgrade from their 1980's multimeter using GPIB to amodern Keysight 34461a using ethernet with only a single line change.Supported means of communication are:- Galvant Industries GPIBUSB adapter (``open_gpibusb``)- Serial (``open_serial``)- Sockets (``open_tcpip``)- VISA (``open_visa``)- Read/write from unix files (``open_file``)- USBTMC (``open_usbtmc``)- VXI11 over Ethernet (``open_vxi11``)There is planned support for HiSLIP someday, but a good Python HiSLIP library will be needed first.If you have any problems or have code you wish to contribute back to theproject please feel free to open an issue or a pull request!Installation------------The ``instruments`` package can be installed from this repository by thefollowing means:From Git:.. code-block:: console    $ git clone git@github.com:Galvant/InstrumentKit.git    $ cd InstrumentKit    $ python setup.py installFrom Github using pip:.. code-block:: console    $ pip install -e git+https://www.github.com/Galvant/InstrumentKit.git#egg=instrumentkitFrom pypi using pip:.. code-block:: console    $ pip install instrumentkitUsage Example-------------To open a connection to a generic SCPI-compatible multimeter using a GalvantIndustries' GPIBUSB adapter:.. code-block:: python    &gt;&gt;&gt; import instruments as ik    &gt;&gt;&gt; inst = ik.generic_scpi.SCPIMultimeter.open_gpibusb(&quot;/dev/ttyUSB0&quot;, 1)From there, various built-in properties and functions can be called. Forexample, the instrument's identification information can be retrieved bycalling the name property:.. code-block:: python    &gt;&gt;&gt; print(inst.name)Or, since in the demo we connected to an ``SCPIMultimeter``, we can preformmultimeter-specific tasks, such as switching functions, and taking ameasurement reading:.. code-block:: python    &gt;&gt;&gt; reading = inst.measure(inst.Mode.voltage_dc)    &gt;&gt;&gt; print(&quot;Value: {}, units: {}&quot;.format(reading.magnitude, reading.units))Due to the sheer number of commands most instruments support, not every singleone is included in InstrumentKit. If there is a specific command you wish tosend, one can use the following functions to do so:.. code-block:: python    &gt;&gt;&gt; inst.sendcmd(&quot;DATA&quot;) # Send command with no response    &gt;&gt;&gt; resp = inst.query(&quot;*IDN?&quot;) # Send command and retrieve responsePython Version Compatibility----------------------------At this time, Python 2.7, 3.5, 3.6, and 3.7 are supported. Should you encounterany problems with this library that occur in one version or another, pleasedo not hesitate to let us know.Documentation-------------You can find the project documentation at our ReadTheDocs pages located athttp://instrumentkit.readthedocs.org/en/latest/index.htmlContributing------------The InstrumentKit team always welcome additional contributions to the project.However, we ask that you please review our contributing developer guidelineswhich can be found in the documentation. We also suggest that you look atexisting classes which are similar to your work to learn more about thestructure of this project.To run the tests against all supported version of Python, you will need tohave the binary for each installed, as well as any requirements needed toinstall ``numpy`` under each Python version. On Debian/Ubuntu systems this meansyou will need to install the ``python-dev`` package for each version of Pythonsupported (``python2.7-dev``, ``python3.7-dev``, etc).With the required system packages installed, all tests can be run with ``tox``:.. code-block:: console    $ pip install tox    $ toxLicense-------All code in this repository is released under the AGPL-v3 license. Please seethe ``license`` folder for more information.</longdescription>
</pkgmetadata>