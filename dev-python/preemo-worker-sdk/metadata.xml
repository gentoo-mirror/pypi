<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Preemo Worker SDK[![PyPi Version](https://img.shields.io/pypi/v/preemo-worker-sdk)](https://pypi.org/project/preemo-worker-sdk/)[![License](https://img.shields.io/github/license/Preemo-Inc/worker-sdk)](https://github.com/Preemo-Inc/worker-sdk/blob/master/python/LICENSE)This subrepo contains the python implementation of the Preemo Worker SDK.## Installation```pip install preemo-worker-sdk```## Usage### Register FunctionIn order to register a function with Preemo workers, you can use `register` to decorate your functions.```pythonfrom preemo.worker import register@register(name=&quot;some_name&quot;, namespace=&quot;dev&quot;)def do_something(params: bytes):    ...```Both parameters, `name` and `namespace`, are optional. If the name isn't specified, it will default to the name of the function. If the namespace isn't specified, it will default to a global namespace.```python@registerdef do_something(params: str):    # registers with name do_something in the global namespace    ...```At the moment, only functions that take 0 or 1 bytes arguments will work. These functions should also either return `None` or bytes.### Execute FunctionIn order to execute a function that you have previously registered with Preemo workers, you can use `get_function`.```pythonfrom preemo.worker import get_functiondo_something = get_function(name=&quot;some_name&quot;, namespace=&quot;dev&quot;)result = do_something(b&quot;params&quot;)...```The second parameter, `namespace`, is optional. If the namespace isn't specified, it will default to a global namespace.```python# gets the function named do_something in the global namespacedo_something = get_function(&quot;do_something&quot;)result = do_something(b&quot;params&quot;)...```### Parallel Function ExecutionIn order to execute a function with multiple parameters at the same time, you can use `parallel`.```pythonfrom preemo.worker import get_function, paralleldo_something = get_function(name=&quot;some_name&quot;, namespace=&quot;dev&quot;)results = parallel(    do_something,    params=[        b&quot;params1&quot;,        b&quot;params2&quot;,        ...    ])...```If your function doesn't take a parameter and you'd like to run multiple instances of it in parallel, you can use the `count` parameter.```pythondo_something = get_function(name=&quot;some_name&quot;, namespace=&quot;dev&quot;)results = parallel(    do_something,    count=10)...```### ResultsIn order to view the result of an executed function, you can call `.get()`.```pythonfrom preemo.worker import get_functiondo_something = get_function(name=&quot;some_name&quot;, namespace=&quot;dev&quot;)result = do_something(b&quot;params&quot;)value = result.get()...```## Contributing[Contribution guidelines for this project](CONTRIBUTING.md)</longdescription>
</pkgmetadata>