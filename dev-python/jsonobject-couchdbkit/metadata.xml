<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>About the jsonobject fork of couchdbkit---------------------------------------`jsonobject-couchdbkit`_ is a fork of couchdbkit that replaces couchdbkit.schemawith a thin wrapper around jsonobject(which was, incidentally, written as a **way** faster replacementfor couchdbkit.schema.) See `jsonobject`_.About-----`Couchdbkit`_ provides you a full featured and easy client to access andmanage CouchDB. It allows you to manage a CouchDBserver, databases, docmanagements and view access. All objects mostly reflect python objects forconvenience. Server and Databases objects could be used for example as easyas using a dict... image:: https://secure.travis-ci.org/benoitc/couchdbkit.png?branch=master    :alt: Build Status    :target: https://secure.travis-ci.org/benoitc/couchdbkitInstallation------------Couchdbkit requires Python 2.x superior to 2.6.To install couchdbkit using pip you must make sure you have arecent version of distribute installed::    $ curl -O http://python-distribute.org/distribute_setup.py    $ sudo python distribute_setup.py    $ easy_install pipTo install or upgrade to the latest released version of couchdbkit::    $ pip install couchdbkitGetting started---------------This tutorial exposes key features of this library mainly through codeexamples. For in-depth description of the modules, you'll want to readthe `API`_ documentation.Write your first CouchDB document+++++++++++++++++++++++++++++++++::  from couchdbkit import Server  # server object  server = Server()  # create database  db = server.get_or_create_db(&quot;greeting&quot;)  doc = {&quot;mydoc&quot;: &quot;test&quot;}  db.save_doc(doc)::  import datetime  from couchdbkit import *  class Greeting(Document):      author = StringProperty()      content = StringProperty()      date = DateTimeProperty()Store the submitted Greetings+++++++++++++++++++++++++++++Here is the code to save a greet on ``Greeting``  database. We also see how to create a database::  from couchdbkit import Server  # associate Greeting to the db  Greeting.set_db(db)  # create a new greet  greet = Greeting(      author=&quot;Benoit&quot;,      content=&quot;Welcome to couchdbkit world&quot;,      date=datetime.datetime.utcnow()  )  # save it  greet.save().. NOTE::  You can just use the db object to save a Schema: ``db.save(greet)`` .Your document ``greet`` is now in the ``greetings`` db. Each documentis saved with a ``doc_type`` field that allow you to find easily eachkind of document with the views. By default ``doc_type`` is the name ofthe class.Now that you saved your document, you can update it::  greet.author = u&quot;Benoit Chesneau&quot;  greet.save()Here we updated the author name.Dynamic properties++++++++++++++++++Mmm ok, but isn't CouchDB storing documents schema less? Do you want toadd a property ? Easy::  greet.homepage = &quot;http://www.e-engura.org&quot;  greet.save()Now you have just added an homepage property to the document.Get all greetings+++++++++++++++++You first have to create a view and save it in the db. We will call it``greeting/all``. To do this we will use the loader system of couchdbkitthat allows you to send views to CouchDB.Let's create a folder that contains the design doc, and then the folderfor the view. On unix::  mkdir -p ~/Work/couchdbkit/example/_design/greeting/views/allIn this folder we edit a file `map.js`::  function(doc) {    if (doc.doc_type == &quot;Greeting&quot;)      emit(doc._id, doc);      }  }Here is a folder structure::  /Work/couchdbkit/example/:  --_design/  ---- greetings  ------ viewHere is a  screenshot:.. image:: http://couchdbkit.org/images/gettingstarted.pngA system will be provided to manage view creation and other things. Assome  noticed, this system works like `couchapp`_ and is fullycompatible.Then we use push function to send the design document to CouchDB::  from couchdbkit.designer import push  push('/path/to/example/_design/greetings', db)The design doc is now in the ``greetings`` database and you can get allgreets::  greets = Greeting.view('greeting/all').. _jsonobject-couchdbkit: https://github.com/dimagi/couchdbkit/tree/jsonobject.. _jsonobject: http://github.com/dimagi/jsonobject.. _Couchdbkit: http://couchdbkit.org.. _API: http://couchdbkit.org/doc/api/.. _couchapp:  http://github.com/couchapp/couchapp/tree/</longdescription>
</pkgmetadata>