<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>BrowserStacker==============Python wrapper for `BrowserStack &lt;https://www.browserstack.com/&gt;`_ features.|Build Status| |codecov.io|Installation------------The current stable release:::    pip install browserstackeror:::    easy_install browserstackeror from source:::    $ sudo python setup.py installUsage-----To start working with BrowserStack ScreenShots API simply type:.. code:: python    &gt;&gt;&gt; from browserstacker import ScreenShotsAPI    &gt;&gt;&gt; api = ScreenShotsAPI('user', 'key')    &gt;&gt;&gt; api.browsers()    [        {          &quot;os&quot;: &quot;Windows&quot;,          &quot;os_version&quot;: &quot;XP&quot;,          &quot;browser&quot;: &quot;chrome&quot;,          &quot;browser_version&quot;: &quot;21.0&quot;,          &quot;device&quot;: None        },        {          &quot;os&quot;: &quot;ios&quot;,          &quot;os_version&quot;: &quot;6.0&quot;,          &quot;browser&quot;: &quot;Mobile Safari&quot;,          &quot;browser_version&quot;: None,          &quot;device&quot;: &quot;iPhone 4S (6.0)&quot;        }      ....    ]Optionally you can filter the output of ``browsers`` by ``browser``, ``browser_version``, ``device``, ``os`` or ``os_version``... code:: python    &gt;&gt;&gt; api.browsers(os='Windows', browser='chrome')    [        {          &quot;os&quot;: &quot;Windows&quot;,          &quot;os_version&quot;: &quot;8.1&quot;,          &quot;browser&quot;: &quot;chrome&quot;,          &quot;browser_version&quot;: &quot;22.0&quot;,          &quot;device&quot;: None        },        {          &quot;os&quot;: &quot;Windows&quot;,          &quot;os_version&quot;: &quot;8.1&quot;,          &quot;browser&quot;: &quot;chrome&quot;,          &quot;browser_version&quot;: &quot;23.0&quot;,          &quot;device&quot;: None        }      ....    ]Command line:.. code:: bash    $ browserstacker browsers -os Windows -b chrome    Available browsers:    ------    browser_version: 22.0    os: Windows    browser: chrome    device: None    os_version: 8.1    ------    ...    Total browsers: 100Filtration values are case insensitive and are casted to strings during filtration.E.g. you can use integers for filtration by ``os_version`` parameter.Also it is possible to filter by multiple values:.. code:: python    &gt;&gt;&gt; api.browsers(os='Windows', browser=('chrome', 'firefox'))    [        {          &quot;os&quot;: &quot;Windows&quot;,          &quot;os_version&quot;: &quot;8.1&quot;,          &quot;browser&quot;: &quot;chrome&quot;,          &quot;browser_version&quot;: &quot;22.0&quot;,          &quot;device&quot;: None        },        {          &quot;os&quot;: &quot;Windows&quot;,          &quot;os_version&quot;: &quot;8.1&quot;,          &quot;browser&quot;: &quot;firefox&quot;,          &quot;browser_version&quot;: &quot;16.0&quot;,          &quot;device&quot;: None        }      ....    ]Command line:.. code:: bash    $ browserstacker browsers -os Windows -b chrome -b firefox    Available browsers:    ------    browser_version: 22.0    os: Windows    browser: chrome    device: None    os_version: 8.1    ------    ...    Total browsers: 215To generate screenshots:.. code:: python    &gt;&gt;&gt; browser = api.browsers()[0]    &gt;&gt;&gt; response = api.generate('http://www.google.com', browser)Command line:.. code:: bash    $ browserstacker generate http://www.google.com -os Windows -b firefox -bv 37.0 -ov XPHere you can pass single browsers or list of them.You'll get the ``job_id`` from response. To list available screenshots for ``job_id``:.. code:: python    &gt;&gt;&gt; api.list(response['job_id'])    {        &quot;id&quot;:&quot;13b93a14db22872fcb5fd1c86b730a51197db319&quot;,        &quot;state&quot;:&quot;done&quot;,        &quot;callback_url&quot;: &quot;http://staging.example.com&quot;,        &quot;win_res&quot;: &quot;1024x768&quot;,        &quot;mac_res&quot;: &quot;1920x1080&quot;,        &quot;quality&quot;: &quot;compressed&quot;,        &quot;wait_time&quot;: 5,        &quot;screenshots&quot;: [            {                &quot;os&quot;:&quot;Windows&quot;,                &quot;os_version&quot;:&quot;XP&quot;,                &quot;browser&quot;:&quot;ie&quot;,                &quot;browser_version&quot;:&quot;7.0&quot;,                &quot;id&quot;:&quot;be9989892cbba9b9edc2c95f403050aa4996ac6a&quot;,                &quot;state&quot;:&quot;done&quot;,                &quot;url&quot;:&quot;www.google.com&quot;,                &quot;thumb_url&quot;:&quot;https://www.browserstack.com/screenshots/13b93a14db22872fcb5fd1c86b730a51197db319/thumb_winxp_ie_7.0.jpg&quot;,                &quot;image_url&quot;:&quot;https://www.browserstack.com/screenshots/13b93a14db22872fcb5fd1c86b730a51197db319/winxp_ie_7.0.png&quot;,                &quot;created_at&quot;:&quot;2013-03-14 16:25:45 UTC&quot;,            }        ]    }Command line:.. code:: bash    $ browserstacker list 13b93a14db22872fcb5fd1c86b730a51197db319To download screenshots:.. code:: python    &gt;&gt;&gt; api.download(response['job_id'], 'path_to_screenshots_dir')Command line:.. code:: bash    $ browserstacker download 13b93a14db22872fcb5fd1c86b730a51197db319 -d screenshots_dirAll screenshots will be saved in 'path_to_screenshots_dir'. If ``destination`` kwarg is absent, then screenshots will bedownloaded to current working directory.Also you can use shortcut to create &amp; download screenshots to your local machine:.. code:: python    &gt;&gt;&gt; response = api.make('http://www.google.com', browser, destination='path_to_screenshots_dir')Command line:.. code:: bash    $ browserstacker make -os Windows -b firefox -bv 37.0 -ov XP -d screenshots_dirCommand line interface~~~~~~~~~~~~~~~~~~~~~~Browserstacker comes with command line interface built with `Click &lt;http://click.pocoo.org/&gt;`_.After installation ``browserstacker`` entry point will be availableIt exposes almost the same API as ``ScreenShotsAPI`` does. Does not support Python 3.2.To use CLI you have to pass user &amp; key directly:.. code:: bash    $ browserstacker -u user -k key browsers    Available browsers:    ...    Total browsers: 629Or via environment variables:.. code:: bash    $ export BROWSERSTACK_USER=user    $ export BROWSERSTACK_KEY=key    $ browserstacker browsersHelp is also available:.. code:: bash    $ browserstacker --help    Usage: browserstacker [OPTIONS] COMMAND [ARGS]...    Options:      -u, --user TEXT  Username on BrowserStack      -k, --key TEXT   Access key      -v, --verbosity  Verbosity level      --version        Show the version and exit.      --help           Show this message and exit.    Commands:      download      generate      browsers      list      makePython support--------------BrowserStacker supports Python 2.6, 2.7, 3.2, 3.3, 3.4, 3.5, PyPy, PyPy3 and Jython.**NOTE**. CLI does not support Python 3.2... |Build Status| image:: https://travis-ci.org/Stranger6667/browserstacker.svg?branch=master   :target: https://travis-ci.org/Stranger6667/browserstacker.. |codecov.io| image:: https://codecov.io/github/Stranger6667/browserstacker/coverage.svg?branch=master    :target: https://codecov.io/github/Stranger6667/browserstacker?branch=master</longdescription>
</pkgmetadata>