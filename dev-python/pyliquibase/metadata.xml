<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![License](http://img.shields.io/:license-apache%202.0-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)![Python package](https://github.com/memiiso/pyliquibase/workflows/Python%20package/badge.svg)# pyliquibaseUse [liquibase](http://www.liquibase.org/) with python. Java integration is done using Java Native Interface (JNI) using [pyjnius](https://github.com/kivy/pyjnius)MariaDB/MySQL, MSSQL, PostgreSQL, SQLite, H2, HSQLDB, Snowflake, Bigquery, Redshift JDBC Drivers included.## Installationinstall:```shellpip install pyliquibase```install from github:```shellpip install https://github.com/memiiso/pyliquibase/archive/master.zip --upgrade --user```## How to Useusing command line:```shellpyliquibase --defaultsFile=changelogs/liquibase.properties statuspyliquibase --defaultsFile=changelogs/liquibase.properties validatepyliquibase --defaultsFile=changelogs/liquibase.properties updateSQLpyliquibase --defaultsFile=changelogs/liquibase.properties update```using python:```pythonfrom pyliquibase import Pyliquibaseif __name__ == '__main__':    liquibase = Pyliquibase(defaultsFile=&quot;changelogs/liquibase.properties&quot;, logLevel=&quot;INFO&quot;)    # call execute with arguments    liquibase.execute(&quot;status&quot;)    liquibase.execute(&quot;rollback&quot;, &quot;MyTag&quot;)    # or     liquibase.validate()    liquibase.status()    liquibase.updateSQL()    liquibase.update()    liquibase.update_to_tag(&quot;MyTag&quot;)    liquibase.rollback(&quot;MyTag&quot;)    # liquibase maintenance commands    liquibase.changelog_sync()    liquibase.changelog_sync_to_tag(&quot;MyTag&quot;)    liquibase.clear_checksums()    liquibase.release_locks()```## Python Java IntegrationPython library is using `LiquibaseCommandLine` reflection class which uses/equivalent `LiquibaseCommandLine` java class.liquibase calls are executed by `LiquibaseCommandLine.execute(liquibaseargs)` method by passing given python arguments to java class.python java integration class using pyjnius(using the Java Native Interface (JNI))```pythonclass LiquibaseCommandLine(JavaClass, metaclass=MetaJavaClass):    __javaclass__ = 'liquibase/integration/commandline/LiquibaseCommandLine'    # methods    execute = JavaMethod('([Ljava/lang/String;)I')```### Contributors&lt;a href=&quot;https://github.com/memiiso/pyliquibase/graphs/contributors&quot;&gt;  &lt;img src=&quot;https://contributors-img.web.app/image?repo=memiiso/pyliquibase&quot; /&gt;&lt;/a&gt;##LIQUIBASE is a registered trademark of [Liquibase](https://www.liquibase.com) , INC.</longdescription>
</pkgmetadata>