<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># finoptionsPython implementation of the R package fOptions for use in energy trading. Changes include coverting the package to OOP as well as Finite Difference Methods for Option greeks for all Options.## Supported by Rpanda Training Solutions&lt;br&gt;To install package run:```pip install finoptions```## Working with finoptionsVanilla Options are found at the root of the package. For example, to run a Generalized Black Scholes Option:```pythonimport finoptions as foopt = fo.GBSOption(10.0, 8.0, 1.0, 0.02, 0.01, 0.1)opt.call() # to get call priceopt.put() # to get put priceopt.summary() # for a printed summary of the optionopt.greeks() # to get the greeks for the option# to calculate implied volatility, omit the sigma argument and then # call the volatility methodopt = fo.GBSOption(10.0, 8.0, 1.0, 0.02, 0.01)opt.volatility(2)```All options follow the same format for calls, puts, greeks and summaries. GBSOption uses the analytic solution to calculate to the greeks, but for all other options the finite difference method is used.## Calculating Options for Multiple InputsThe vanilla options are capable of calculating calls, puts, vols and greeks for multiple inputs at the same time by passing numpy arrays of values as parameters. Currently this only works for the vanilla options.```pythonimport finoptions as foimport numpy as npopt = fo.GBSOption(10.0, np.arange(5,15), 1.0, 0.02, 0.01, 0.1)opt.call() # to get call priceopt.put() # to get put priceopt.summary() # for a printed summary of the optionopt.greeks() # to get the greeks for the option```# NotebooksTo see example notebooks, please see github repo found here:https://github.com/bbcho/finoptions-dev/tree/main/notebooks</longdescription>
</pkgmetadata>