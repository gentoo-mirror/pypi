<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>django-decorator-include========================Include Django URL patterns with decorators.Maintained by St√©phane &quot;Twidi&quot; Angel, and Jon Dufresne onhttps://github.com/twidi/django-decorator-includebased on the original work from Jeff Kistler onhttps://github.com/jeffkistler/django-decorator-include... image:: https://badge.fury.io/py/django-decorator-include.svg    :target: https://badge.fury.io/py/django-decorator-include.. image:: https://travis-ci.org/twidi/django-decorator-include.svg?branch=develop    :target: https://travis-ci.org/twidi/django-decorator-includeInstallation------------Assuming you have pip installed, run the following command to install fromPyPI::    pip install django-decorator-includeUsage-----``decorator_include`` is intended for use in URL confs as a replacement for the``django.conf.urls.include`` function. It works in almost the same way as``include`` however the first argument should be either a decorator or aniterable of decorators to apply to all included views (if an iterable, the order of thedecorators is the order in which the functions will be applied on the views).Herei s an example URL conf::    from django.contrib import admin    from django.core.exceptions import PermissionDenied    from django.urls import path    from django.contrib.auth.decorators import login_required, user_passes_test    from decorator_include import decorator_include    from mysite.views import index    def only_user(username):        def check(user):            if user.is_authenticated and user.username == username:                return True            raise PermissionDenied        return user_passes_test(check)    urlpatterns = [        path('', views.index, name='index'),        # will redirect to login page if not authenticated        path('secret/', decorator_include(login_required, 'mysite.secret.urls')),        # will redirect to login page if not authenticated        # will return a 403 http error if the user does not have the &quot;god&quot; username        path('admin/', decorator_include([login_required, only_user('god')], admin.site.urls),    ]Supported versions------------------=============== ==================Django versions Python versions=============== ==================2.0             3.4, 3.5, 3.6, 3.72.1             3.5, 3.6, 3.72.2             3.5, 3.6, 3.7, 3.83.0             3.6, 3.7, 3.8=============== ==================All library versions to use for old Django/Python support---------------------------------------------------------=============== ======================= ==================Django versions Python versions         Library versions=============== ======================= ==================1.4, 1.5        2.6, 2.7                1.21.6             2.6, 2.7, 3.2, 3.3      1.21.7             2.7, 3.2, 3.3, 3.4      1.21.8             2.7, 3.2, 3.3, 3.4, 3.5 1.31.9, 1.10       2.7, 3.4, 3.5           1.31.11            2.7, 3.4, 3.5, 3.6      1.4.x (&gt;=1.4.1,&lt;2)2.0             3.4, 3.5, 3.6, 3.7      3.02.1             3.5, 3.6, 3.7           3.02.2             3.5, 3.6, 3.7, 3.8      3.03.0             3.6, 3.7, 3.8           3.0=============== ======================= ==================Development-----------Make sure you are in a virtualenv on a valid python version.Grab the sources from Github::    git clone -b develop https://github.com/twidi/django-decorator-include.gitThen go into the newly created ``django-decorator-include`` directory and installthe few needed libraries::    pip install -r requirements.txtTo run the tests, this library provides a test project, so you can launchthem this way::    django-admin test --settings=tests.settings testsOr simply launch the ``runtests.sh`` script (it will run this exact command)::    ./runtests.shBase your work on the ``develop`` branch. Iit should be the default branch ongit assuming you used the ``-b develop`` argument on the ``git clone``command as shown above.When creating the pull request, ensure you are using the correct base(twidi/django-decorator-include on develop).</longdescription>
</pkgmetadata>