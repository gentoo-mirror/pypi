<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>``{% nav %}`` tag=================.. image:: https://badge.fury.io/py/django-navtag.svg   :target: https://badge.fury.io/py/django-navtag.. image:: https://travis-ci.org/SmileyChris/django-navtag.svg?branch=master   :target: http://travis-ci.org/SmileyChris/django-navtag.. image:: https://codecov.io/gh/SmileyChris/django-navtag/branch/master/graph/badge.svg   :target: https://codecov.io/gh/SmileyChris/django-navtagA simple Django template tag to handle navigation item selection... contents::    :local:    :backlinks: noneUsage-----Add the app to your ``INSTALLED_APPS`` setting:.. code:: python    INSTALLED_APPS = (        # ...        'django_navtag',    )Give your base template a navigation block something like this:.. code:: jinja    {% load navtag %}    {% block nav %}    {% nav text ' class=&quot;selected&quot;' %}    &lt;ul class=&quot;nav&quot;&gt;        &lt;li{{ nav.home }}&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;        &lt;li{{ nav.about }}&gt;&lt;a href=&quot;/about/&quot;&gt;About&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;    {% endblock %}In your templates, extend the base and set the navigation location:.. code:: jinja    {% extends &quot;base.html&quot; %}    {% block nav %}    {% nav &quot;home&quot; %}    {{ block.super }}    {% endblock %}.. note::    This works for multiple levels of template inheritance, due to the fact    that only the first ``{% nav %}`` call found will change the ``nav``    context variable.Hierarchical navigation-----------------------To create a sub-menu you can check against, simply dot-separate the item:.. code:: jinja    {% nav &quot;about_menu.info&quot; %}This will be pass for both ``{% if nav.about_menu %}`` and``{% if nav.about_menu.info %}``.Using a different context variable----------------------------------By default, this tag creates a ``nav`` context variable. To use an alternatecontext variable name, call ``{% nav [item] for [var_name] %}``:.. code:: jinja    {% block nav %}    {% nav &quot;home&quot; for sidenav %}    {{ block.super }}    {% endblock %}Setting the text output by the nav variable-------------------------------------------As shown in the initial example, you can set the text return value of the``nav`` context variable. Use the format ``{% nav text [content] %}``. Forexample:.. code:: jinja    {% nav text &quot;active&quot; %}    &lt;ul&gt;    &lt;li class=&quot;{{ nav.home }}&quot;&gt;Home&lt;/li&gt;    &lt;li class=&quot;{{ nav.contact }}&quot;&gt;Contact&lt;/li&gt;    &lt;/ul&gt;Alternately, you can use boolean comparison of the context variable rather thantext value:.. code:: jinja    &lt;section{% if nav.home %} class=&quot;wide&quot;{% endif %}&gt;If using a different context variable name, use the format``{% nav text [content] for [var_name] %}``.</longdescription>
</pkgmetadata>