<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># trojai-sdkTrojAI's SDK and command line interface.## Utils```pythonfrom trojsdk.core import client_utils, data_utils```The client_utils provide and easy way to submit jobs to the cluster. It can be used programatically, or through the command line. The data_utils provide simple functions which can help to use the SDK's components.`python````python# Submit a job using a provided config filejob_handler = client_utils.submit_evaluation(&quot;path/to/config.json&quot;)# Check the status of the job. Alternatively, use 'kubectl describe pod &lt;trojeval job&gt;' within your terminal, with the context set to the cluster.job_handler.check_job_status()````command line````bashtsdk -c path/to/config.json````python````python# Use the load_json_from_disk function to recursively load JSON data from a file, and its json sub-files, which can be specified by a path string.config_dict = data_utils.load_json_from_disk(&quot;path/to/config.json&quot;)# Create the config object and retrieve the dict containing the docker_metadata if it is present within the config dict.config, docker_metadata = data_utils.config_from_dict(config_dict)```---## SDK Components### Config```pythonfrom trojsdk.config.nlp import NLPTrojConfigfrom trojsdk.config.tabular import TabularTrojConfigfrom trojsdk.config.vision import VisionTrojConfigfrom trojsdk.config.auth import TrojAuthConfig```For examples and explanations on configuring your config files, please visit our gitbook.&lt;br/&gt;[Intro to TrojAI](https://trojai.gitbook.io/trojai/)&lt;br/&gt;[NLP](https://trojai.gitbook.io/trojai/nlp/configuring-your-nlp-evaluation)&lt;br/&gt;[Tabular](https://trojai.gitbook.io/trojai/tabular/configuring-your-tabular-evaluation)### Client```pythonfrom trojsdk import TrojClient``````python# Load the json config file into a dictionaryconfig_dict = data_utils.load_json_from_disk(Path(&quot;C:/Users/macjo/Downloads/tabular_SMOTETomek_logistic_base.json&quot;))# Split the docker_metadata from the config dict, and create a config object file.config, docker_metadata = client_utils.config_from_dict(config_dict)# Create the client with its auth credentials and endpoint.client = TrojClient(auth_config=config.auth_config)# Post the job with the config object and docker information.res = client.post_job(config, docker_metadata)time.sleep(2) # It will take a couple seconds to submit the job.jobs = client.get_job_status(res[&quot;data&quot;][&quot;job_name&quot;])```</longdescription>
</pkgmetadata>