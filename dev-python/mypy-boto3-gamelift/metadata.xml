<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;mypy-boto3-gamelift&quot;&gt;&lt;/a&gt;# mypy-boto3-gamelift[![PyPI - mypy-boto3-gamelift](https://img.shields.io/pypi/v/mypy-boto3-gamelift.svg?color=blue)](https://pypi.org/project/mypy-boto3-gamelift)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-gamelift.svg?color=blue)](https://pypi.org/project/mypy-boto3-gamelift)[![Docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_gamelift/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-gamelift?color=blue)](https://pypistats.org/packages/mypy-boto3-gamelift)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[boto3.GameLift 1.27.0](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/gamelift.html#GameLift)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in[mypy-boto3-gamelift docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_gamelift/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [mypy-boto3-gamelift](#mypy-boto3-gamelift)  - [How to install](#how-to-install)    - [VSCode extension](#vscode-extension)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;vscode-extension&quot;&gt;&lt;/a&gt;### VSCode extensionAdd[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)extension to your VSCode and run `AWS boto3: Quick Start` command.Click `Modify` and select `boto3 common` and `GameLift`.&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `boto3-stubs` for `GameLift` service.```bash# install with boto3 type annotationspython -m pip install 'boto3-stubs[gamelift]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'boto3-stubs-lite[gamelift]'# standalone installationpython -m pip install mypy-boto3-gamelift```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y mypy-boto3-gamelift```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `boto3-stubs[gamelift]` in your environment:```bashpython -m pip install 'boto3-stubs[gamelift]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `boto3` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `boto3-stubs-lite[gamelift]` in your environment:```bashpython -m pip install 'boto3-stubs-lite[gamelift]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `boto3-stubs` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `boto3-stubs` with services you use in your environment:```bashpython -m pip install 'boto3-stubs[gamelift]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed `boto3-stubs`Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `boto3-stubs[gamelift]` with services you use in your environment:```bashpython -m pip install 'boto3-stubs[gamelift]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `boto3-stubs[gamelift]` in your environment:```bashpython -m pip install 'boto3-stubs[gamelift]'````Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `boto3-stubs[gamelift]` in your environment:```bashpython -m pip install 'boto3-stubs[gamelift]'```Optionally, you can install `boto3-stubs` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`GameLiftClient` provides annotations for `boto3.client(&quot;gamelift&quot;)`.```pythonfrom boto3.session import Sessionfrom mypy_boto3_gamelift import GameLiftClientclient: GameLiftClient = Session().client(&quot;gamelift&quot;)# now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`mypy_boto3_gamelift.paginator` module contains type annotations for allpaginators.```pythonfrom boto3.session import Sessionfrom mypy_boto3_gamelift import GameLiftClientfrom mypy_boto3_gamelift.paginator import (    DescribeFleetAttributesPaginator,    DescribeFleetCapacityPaginator,    DescribeFleetEventsPaginator,    DescribeFleetUtilizationPaginator,    DescribeGameServerInstancesPaginator,    DescribeGameSessionDetailsPaginator,    DescribeGameSessionQueuesPaginator,    DescribeGameSessionsPaginator,    DescribeInstancesPaginator,    DescribeMatchmakingConfigurationsPaginator,    DescribeMatchmakingRuleSetsPaginator,    DescribePlayerSessionsPaginator,    DescribeScalingPoliciesPaginator,    ListAliasesPaginator,    ListBuildsPaginator,    ListComputePaginator,    ListFleetsPaginator,    ListGameServerGroupsPaginator,    ListGameServersPaginator,    ListLocationsPaginator,    ListScriptsPaginator,    SearchGameSessionsPaginator,)client: GameLiftClient = Session().client(&quot;gamelift&quot;)# Explicit type annotations are optional here# Types should be correctly discovered by mypy and IDEsdescribe_fleet_attributes_paginator: DescribeFleetAttributesPaginator = client.get_paginator(    &quot;describe_fleet_attributes&quot;)describe_fleet_capacity_paginator: DescribeFleetCapacityPaginator = client.get_paginator(    &quot;describe_fleet_capacity&quot;)describe_fleet_events_paginator: DescribeFleetEventsPaginator = client.get_paginator(    &quot;describe_fleet_events&quot;)describe_fleet_utilization_paginator: DescribeFleetUtilizationPaginator = client.get_paginator(    &quot;describe_fleet_utilization&quot;)describe_game_server_instances_paginator: DescribeGameServerInstancesPaginator = (    client.get_paginator(&quot;describe_game_server_instances&quot;))describe_game_session_details_paginator: DescribeGameSessionDetailsPaginator = client.get_paginator(    &quot;describe_game_session_details&quot;)describe_game_session_queues_paginator: DescribeGameSessionQueuesPaginator = client.get_paginator(    &quot;describe_game_session_queues&quot;)describe_game_sessions_paginator: DescribeGameSessionsPaginator = client.get_paginator(    &quot;describe_game_sessions&quot;)describe_instances_paginator: DescribeInstancesPaginator = client.get_paginator(    &quot;describe_instances&quot;)describe_matchmaking_configurations_paginator: DescribeMatchmakingConfigurationsPaginator = (    client.get_paginator(&quot;describe_matchmaking_configurations&quot;))describe_matchmaking_rule_sets_paginator: DescribeMatchmakingRuleSetsPaginator = (    client.get_paginator(&quot;describe_matchmaking_rule_sets&quot;))describe_player_sessions_paginator: DescribePlayerSessionsPaginator = client.get_paginator(    &quot;describe_player_sessions&quot;)describe_scaling_policies_paginator: DescribeScalingPoliciesPaginator = client.get_paginator(    &quot;describe_scaling_policies&quot;)list_aliases_paginator: ListAliasesPaginator = client.get_paginator(&quot;list_aliases&quot;)list_builds_paginator: ListBuildsPaginator = client.get_paginator(&quot;list_builds&quot;)list_compute_paginator: ListComputePaginator = client.get_paginator(&quot;list_compute&quot;)list_fleets_paginator: ListFleetsPaginator = client.get_paginator(&quot;list_fleets&quot;)list_game_server_groups_paginator: ListGameServerGroupsPaginator = client.get_paginator(    &quot;list_game_server_groups&quot;)list_game_servers_paginator: ListGameServersPaginator = client.get_paginator(&quot;list_game_servers&quot;)list_locations_paginator: ListLocationsPaginator = client.get_paginator(&quot;list_locations&quot;)list_scripts_paginator: ListScriptsPaginator = client.get_paginator(&quot;list_scripts&quot;)search_game_sessions_paginator: SearchGameSessionsPaginator = client.get_paginator(    &quot;search_game_sessions&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`mypy_boto3_gamelift.literals` module contains literals extracted from shapesthat can be used in user code for type checking.```pythonfrom mypy_boto3_gamelift.literals import (    AcceptanceTypeType,    BackfillModeType,    BalancingStrategyType,    BuildStatusType,    CertificateTypeType,    ComparisonOperatorTypeType,    ComputeStatusType,    ComputeTypeType,    DescribeFleetAttributesPaginatorName,    DescribeFleetCapacityPaginatorName,    DescribeFleetEventsPaginatorName,    DescribeFleetUtilizationPaginatorName,    DescribeGameServerInstancesPaginatorName,    DescribeGameSessionDetailsPaginatorName,    DescribeGameSessionQueuesPaginatorName,    DescribeGameSessionsPaginatorName,    DescribeInstancesPaginatorName,    DescribeMatchmakingConfigurationsPaginatorName,    DescribeMatchmakingRuleSetsPaginatorName,    DescribePlayerSessionsPaginatorName,    DescribeScalingPoliciesPaginatorName,    EC2InstanceTypeType,    EventCodeType,    FilterInstanceStatusType,    FleetActionType,    FleetStatusType,    FleetTypeType,    FlexMatchModeType,    GameServerClaimStatusType,    GameServerGroupActionType,    GameServerGroupDeleteOptionType,    GameServerGroupInstanceTypeType,    GameServerGroupStatusType,    GameServerHealthCheckType,    GameServerInstanceStatusType,    GameServerProtectionPolicyType,    GameServerUtilizationStatusType,    GameSessionPlacementStateType,    GameSessionStatusReasonType,    GameSessionStatusType,    InstanceStatusType,    IpProtocolType,    ListAliasesPaginatorName,    ListBuildsPaginatorName,    ListComputePaginatorName,    ListFleetsPaginatorName,    ListGameServerGroupsPaginatorName,    ListGameServersPaginatorName,    ListLocationsPaginatorName,    ListScriptsPaginatorName,    LocationFilterType,    LocationUpdateStatusType,    MatchmakingConfigurationStatusType,    MetricNameType,    OperatingSystemType,    PlayerSessionCreationPolicyType,    PlayerSessionStatusType,    PolicyTypeType,    PriorityTypeType,    ProtectionPolicyType,    RoutingStrategyTypeType,    ScalingAdjustmentTypeType,    ScalingStatusTypeType,    SearchGameSessionsPaginatorName,    SortOrderType,    GameLiftServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    RegionName,)def check_value(value: AcceptanceTypeType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`mypy_boto3_gamelift.type_defs` module contains structures and shapes assembledto typed dictionaries for additional type checking.```pythonfrom mypy_boto3_gamelift.type_defs import (    AcceptMatchInputRequestTypeDef,    RoutingStrategyTypeDef,    AnywhereConfigurationTypeDef,    AttributeValueTypeDef,    AwsCredentialsTypeDef,    BuildTypeDef,    CertificateConfigurationTypeDef,    ClaimFilterOptionTypeDef,    GameServerTypeDef,    ComputeTypeDef,    TagTypeDef,    S3LocationTypeDef,    IpPermissionTypeDef,    LocationConfigurationTypeDef,    ResourceCreationLimitPolicyTypeDef,    LocationStateTypeDef,    InstanceDefinitionTypeDef,    LaunchTemplateSpecificationTypeDef,    GamePropertyTypeDef,    FilterConfigurationTypeDef,    GameSessionQueueDestinationTypeDef,    PlayerLatencyPolicyTypeDef,    PriorityConfigurationTypeDef,    LocationModelTypeDef,    MatchmakingRuleSetTypeDef,    CreatePlayerSessionInputRequestTypeDef,    PlayerSessionTypeDef,    CreatePlayerSessionsInputRequestTypeDef,    CreateVpcPeeringAuthorizationInputRequestTypeDef,    VpcPeeringAuthorizationTypeDef,    CreateVpcPeeringConnectionInputRequestTypeDef,    DeleteAliasInputRequestTypeDef,    DeleteBuildInputRequestTypeDef,    DeleteFleetInputRequestTypeDef,    DeleteFleetLocationsInputRequestTypeDef,    DeleteGameServerGroupInputRequestTypeDef,    DeleteGameSessionQueueInputRequestTypeDef,    DeleteLocationInputRequestTypeDef,    DeleteMatchmakingConfigurationInputRequestTypeDef,    DeleteMatchmakingRuleSetInputRequestTypeDef,    DeleteScalingPolicyInputRequestTypeDef,    DeleteScriptInputRequestTypeDef,    DeleteVpcPeeringAuthorizationInputRequestTypeDef,    DeleteVpcPeeringConnectionInputRequestTypeDef,    DeregisterComputeInputRequestTypeDef,    DeregisterGameServerInputRequestTypeDef,    DescribeAliasInputRequestTypeDef,    DescribeBuildInputRequestTypeDef,    DescribeComputeInputRequestTypeDef,    DescribeEC2InstanceLimitsInputRequestTypeDef,    EC2InstanceLimitTypeDef,    DescribeFleetAttributesInputDescribeFleetAttributesPaginateTypeDef,    DescribeFleetAttributesInputRequestTypeDef,    DescribeFleetCapacityInputDescribeFleetCapacityPaginateTypeDef,    DescribeFleetCapacityInputRequestTypeDef,    DescribeFleetEventsInputDescribeFleetEventsPaginateTypeDef,    DescribeFleetEventsInputRequestTypeDef,    EventTypeDef,    DescribeFleetLocationAttributesInputRequestTypeDef,    DescribeFleetLocationCapacityInputRequestTypeDef,    DescribeFleetLocationUtilizationInputRequestTypeDef,    FleetUtilizationTypeDef,    DescribeFleetPortSettingsInputRequestTypeDef,    DescribeFleetUtilizationInputDescribeFleetUtilizationPaginateTypeDef,    DescribeFleetUtilizationInputRequestTypeDef,    DescribeGameServerGroupInputRequestTypeDef,    DescribeGameServerInputRequestTypeDef,    DescribeGameServerInstancesInputDescribeGameServerInstancesPaginateTypeDef,    DescribeGameServerInstancesInputRequestTypeDef,    GameServerInstanceTypeDef,    DescribeGameSessionDetailsInputDescribeGameSessionDetailsPaginateTypeDef,    DescribeGameSessionDetailsInputRequestTypeDef,    DescribeGameSessionPlacementInputRequestTypeDef,    DescribeGameSessionQueuesInputDescribeGameSessionQueuesPaginateTypeDef,    DescribeGameSessionQueuesInputRequestTypeDef,    DescribeGameSessionsInputDescribeGameSessionsPaginateTypeDef,    DescribeGameSessionsInputRequestTypeDef,    DescribeInstancesInputDescribeInstancesPaginateTypeDef,    DescribeInstancesInputRequestTypeDef,    InstanceTypeDef,    DescribeMatchmakingConfigurationsInputDescribeMatchmakingConfigurationsPaginateTypeDef,    DescribeMatchmakingConfigurationsInputRequestTypeDef,    DescribeMatchmakingInputRequestTypeDef,    DescribeMatchmakingRuleSetsInputDescribeMatchmakingRuleSetsPaginateTypeDef,    DescribeMatchmakingRuleSetsInputRequestTypeDef,    DescribePlayerSessionsInputDescribePlayerSessionsPaginateTypeDef,    DescribePlayerSessionsInputRequestTypeDef,    DescribeRuntimeConfigurationInputRequestTypeDef,    DescribeScalingPoliciesInputDescribeScalingPoliciesPaginateTypeDef,    DescribeScalingPoliciesInputRequestTypeDef,    DescribeScriptInputRequestTypeDef,    DescribeVpcPeeringConnectionsInputRequestTypeDef,    DesiredPlayerSessionTypeDef,    EC2InstanceCountsTypeDef,    EmptyResponseMetadataTypeDef,    TargetTrackingConfigurationTypeDef,    MatchedPlayerSessionTypeDef,    PlacedPlayerSessionTypeDef,    PlayerLatencyTypeDef,    GetComputeAccessInputRequestTypeDef,    GetComputeAuthTokenInputRequestTypeDef,    GetComputeAuthTokenOutputTypeDef,    GetGameSessionLogUrlInputRequestTypeDef,    GetGameSessionLogUrlOutputTypeDef,    GetInstanceAccessInputRequestTypeDef,    InstanceCredentialsTypeDef,    ListAliasesInputListAliasesPaginateTypeDef,    ListAliasesInputRequestTypeDef,    ListBuildsInputListBuildsPaginateTypeDef,    ListBuildsInputRequestTypeDef,    ListComputeInputListComputePaginateTypeDef,    ListComputeInputRequestTypeDef,    ListFleetsInputListFleetsPaginateTypeDef,    ListFleetsInputRequestTypeDef,    ListFleetsOutputTypeDef,    ListGameServerGroupsInputListGameServerGroupsPaginateTypeDef,    ListGameServerGroupsInputRequestTypeDef,    ListGameServersInputListGameServersPaginateTypeDef,    ListGameServersInputRequestTypeDef,    ListLocationsInputListLocationsPaginateTypeDef,    ListLocationsInputRequestTypeDef,    ListScriptsInputListScriptsPaginateTypeDef,    ListScriptsInputRequestTypeDef,    ListTagsForResourceRequestRequestTypeDef,    PaginatorConfigTypeDef,    TargetConfigurationTypeDef,    PutScalingPolicyOutputTypeDef,    RegisterComputeInputRequestTypeDef,    RegisterGameServerInputRequestTypeDef,    RequestUploadCredentialsInputRequestTypeDef,    ResolveAliasInputRequestTypeDef,    ResolveAliasOutputTypeDef,    ResponseMetadataTypeDef,    ResumeGameServerGroupInputRequestTypeDef,    ServerProcessTypeDef,    SearchGameSessionsInputRequestTypeDef,    SearchGameSessionsInputSearchGameSessionsPaginateTypeDef,    StartFleetActionsInputRequestTypeDef,    StartFleetActionsOutputTypeDef,    StopFleetActionsInputRequestTypeDef,    StopFleetActionsOutputTypeDef,    StopGameSessionPlacementInputRequestTypeDef,    StopMatchmakingInputRequestTypeDef,    SuspendGameServerGroupInputRequestTypeDef,    UntagResourceRequestRequestTypeDef,    UpdateBuildInputRequestTypeDef,    UpdateFleetAttributesOutputTypeDef,    UpdateFleetCapacityInputRequestTypeDef,    UpdateFleetCapacityOutputTypeDef,    UpdateFleetPortSettingsOutputTypeDef,    UpdateGameServerInputRequestTypeDef,    UpdateGameSessionInputRequestTypeDef,    ValidateMatchmakingRuleSetInputRequestTypeDef,    ValidateMatchmakingRuleSetOutputTypeDef,    VpcPeeringConnectionStatusTypeDef,    AliasTypeDef,    UpdateAliasInputRequestTypeDef,    PlayerTypeDef,    GetComputeAccessOutputTypeDef,    DescribeBuildOutputTypeDef,    ListBuildsOutputTypeDef,    UpdateBuildOutputTypeDef,    ClaimGameServerInputRequestTypeDef,    ClaimGameServerOutputTypeDef,    DescribeGameServerOutputTypeDef,    ListGameServersOutputTypeDef,    RegisterGameServerOutputTypeDef,    UpdateGameServerOutputTypeDef,    DescribeComputeOutputTypeDef,    ListComputeOutputTypeDef,    RegisterComputeOutputTypeDef,    CreateAliasInputRequestTypeDef,    CreateLocationInputRequestTypeDef,    CreateMatchmakingRuleSetInputRequestTypeDef,    ListTagsForResourceResponseTypeDef,    TagResourceRequestRequestTypeDef,    CreateBuildInputRequestTypeDef,    CreateBuildOutputTypeDef,    CreateScriptInputRequestTypeDef,    RequestUploadCredentialsOutputTypeDef,    ScriptTypeDef,    UpdateScriptInputRequestTypeDef,    DescribeFleetPortSettingsOutputTypeDef,    UpdateFleetPortSettingsInputRequestTypeDef,    CreateFleetLocationsInputRequestTypeDef,    FleetAttributesTypeDef,    UpdateFleetAttributesInputRequestTypeDef,    CreateFleetLocationsOutputTypeDef,    DeleteFleetLocationsOutputTypeDef,    LocationAttributesTypeDef,    GameServerGroupTypeDef,    UpdateGameServerGroupInputRequestTypeDef,    CreateGameSessionInputRequestTypeDef,    CreateMatchmakingConfigurationInputRequestTypeDef,    GameSessionTypeDef,    MatchmakingConfigurationTypeDef,    UpdateMatchmakingConfigurationInputRequestTypeDef,    CreateGameSessionQueueInputRequestTypeDef,    GameSessionQueueTypeDef,    UpdateGameSessionQueueInputRequestTypeDef,    CreateLocationOutputTypeDef,    ListLocationsOutputTypeDef,    CreateMatchmakingRuleSetOutputTypeDef,    DescribeMatchmakingRuleSetsOutputTypeDef,    CreatePlayerSessionOutputTypeDef,    CreatePlayerSessionsOutputTypeDef,    DescribePlayerSessionsOutputTypeDef,    CreateVpcPeeringAuthorizationOutputTypeDef,    DescribeVpcPeeringAuthorizationsOutputTypeDef,    DescribeEC2InstanceLimitsOutputTypeDef,    DescribeFleetEventsOutputTypeDef,    DescribeFleetLocationUtilizationOutputTypeDef,    DescribeFleetUtilizationOutputTypeDef,    DescribeGameServerInstancesOutputTypeDef,    DescribeInstancesOutputTypeDef,    FleetCapacityTypeDef,    GameServerGroupAutoScalingPolicyTypeDef,    GameSessionConnectionInfoTypeDef,    GameSessionPlacementTypeDef,    StartGameSessionPlacementInputRequestTypeDef,    InstanceAccessTypeDef,    PutScalingPolicyInputRequestTypeDef,    ScalingPolicyTypeDef,    RuntimeConfigurationTypeDef,    VpcPeeringConnectionTypeDef,    CreateAliasOutputTypeDef,    DescribeAliasOutputTypeDef,    ListAliasesOutputTypeDef,    UpdateAliasOutputTypeDef,    StartMatchBackfillInputRequestTypeDef,    StartMatchmakingInputRequestTypeDef,    CreateScriptOutputTypeDef,    DescribeScriptOutputTypeDef,    ListScriptsOutputTypeDef,    UpdateScriptOutputTypeDef,    CreateFleetOutputTypeDef,    DescribeFleetAttributesOutputTypeDef,    DescribeFleetLocationAttributesOutputTypeDef,    CreateGameServerGroupOutputTypeDef,    DeleteGameServerGroupOutputTypeDef,    DescribeGameServerGroupOutputTypeDef,    ListGameServerGroupsOutputTypeDef,    ResumeGameServerGroupOutputTypeDef,    SuspendGameServerGroupOutputTypeDef,    UpdateGameServerGroupOutputTypeDef,    CreateGameSessionOutputTypeDef,    DescribeGameSessionsOutputTypeDef,    GameSessionDetailTypeDef,    SearchGameSessionsOutputTypeDef,    UpdateGameSessionOutputTypeDef,    CreateMatchmakingConfigurationOutputTypeDef,    DescribeMatchmakingConfigurationsOutputTypeDef,    UpdateMatchmakingConfigurationOutputTypeDef,    CreateGameSessionQueueOutputTypeDef,    DescribeGameSessionQueuesOutputTypeDef,    UpdateGameSessionQueueOutputTypeDef,    DescribeFleetCapacityOutputTypeDef,    DescribeFleetLocationCapacityOutputTypeDef,    CreateGameServerGroupInputRequestTypeDef,    MatchmakingTicketTypeDef,    DescribeGameSessionPlacementOutputTypeDef,    StartGameSessionPlacementOutputTypeDef,    StopGameSessionPlacementOutputTypeDef,    GetInstanceAccessOutputTypeDef,    DescribeScalingPoliciesOutputTypeDef,    CreateFleetInputRequestTypeDef,    DescribeRuntimeConfigurationOutputTypeDef,    UpdateRuntimeConfigurationInputRequestTypeDef,    UpdateRuntimeConfigurationOutputTypeDef,    DescribeVpcPeeringConnectionsOutputTypeDef,    DescribeGameSessionDetailsOutputTypeDef,    DescribeMatchmakingOutputTypeDef,    StartMatchBackfillOutputTypeDef,    StartMatchmakingOutputTypeDef,)def get_structure() -&gt; AcceptMatchInputRequestTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for `boto3`updates. It delivers drop-in type annotations for you and makes sure that:- All available `boto3` services are covered.- Each public class and method of every `boto3` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`mypy-boto3-gamelift` version is the same as related `boto3` version andfollows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_gamelift/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>