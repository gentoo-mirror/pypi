<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Pokemon Card RecognizerRecognize a Pokémon Card in an image or video.```pythonfrom card_recognizer.api.card_recognizer import CardRecognizer, OperatingMode# init and set output pathsrecognizer = CardRecognizer(    mode=OperatingMode.PULLS_VIDEO)recognizer.set_summary_file(summary_file=&quot;summary.txt&quot;)recognizer.set_output_path(output_path=&quot;out_figs&quot;)# run recognizer on video and visualize resultspulls = recognizer.exec(&quot;/path/to/video&quot;)recognizer.vis()```Example analysis of a booster pack opening video:![](https://github.com/prateekt/pokemon-card-recognizer/blob/75409e8ecdc32256dfc4a0a8243782152fdd406b/example2.png?raw=true)![](https://github.com/prateekt/pokemon-card-recognizer/blob/75409e8ecdc32256dfc4a0a8243782152fdd406b/example.png?raw=true)&lt;b&gt;Benchmarks&lt;/b&gt;: https://docs.google.com/presentation/d/1Q6PzJpqyyLFvtkLGoCFeXaHYOauOzeF_umx8V3w4fV8/edit?usp=sharing&lt;b&gt;Installation:&lt;/b&gt;```make conda_devconda activate card_rec_envpip install pokemon-card-recognizer```    Note that the CardRecognizer works MUCH (~5x-10x) faster on NVIDIA GPU, so it is highly recommended that you have CUDA. If CUDA is available, the CardRecognizer will automatically use it. Otherwise, the CardRecognizer will default to CPU which is substantially slower and not recommended for batch processing.If processing video files, you may also need to download and install FFMPEG (https://ffmpeg.org/) which is used to uncompress videos into image frames.On linux:```commandlinesudo apt updatesudo apt install ffmpeg```Optional: The default OCR backend used by CardRecognizer is easy_ocr which is installed via the conda, but if you choose to use PyTesseract instead, you will need to install it:```commandlinesudo apt install tesseract-ocrsudo apt install libtesseract-dev  ```&lt;b&gt;Example Usage to Recognize a Card in a Single Image:&lt;/b&gt;```pythonfrom card_recognizer.api.card_recognizer import CardRecognizer, OperatingModerecognizer = CardRecognizer(    mode=OperatingMode.SINGLE_IMAGE,    set_name=&quot;master&quot;)pred_result = recognizer.exec(&quot;/path/to/image&quot;)detected_card = recognizer.classifier.reference.lookup_card_prediction(    card_prediction=pred_result[0])print(detected_card.set)print(detected_card.name)print(detected_card.number)```&lt;b&gt;Useful Operating Modes for CardRecognizer: &lt;/b&gt;```commandline# process a single imageOperatingMode.SINGLE_IMAGE# process a directory of imagesOperatingMode.IMAGE_DIR# process a video fileOperatingMode.VIDEO# process a video file where cards are being shown (&quot;pulled&quot;) sequentially (no assumption on # of cards shown in the video)OperatingMode.PULLS_VIDEO# process a video file where cards are being shown sequentially, # coming from a booster pack (assumes 11 cards are being shown in the video and # finds the best statistical estimation of at most 11 most likely shown cards).OperatingMode.BOOSTER_PULLS_VIDEO```&lt;b&gt; Card Reference Sets &lt;/b&gt;Note that you can change &quot;set_name&quot; in the CardRecognizer constructor to whatever specific set reference (e.g. &quot;base1&quot;, &quot;jungle&quot;, etc) you want. For list of supported reference sets, view```pythonfrom card_recognizer.reference.core.build import ReferenceBuildprint(ReferenceBuild.supported_card_sets())```&lt;b&gt;Building Card Reference:&lt;/b&gt;The pypi package and GitHub source for pokemon-card-recognizer comes bundled with pre-rebuilt references for all major Pokémon card sets. It is recommended to use the pre-built references. If however, you want to rebuild the reference for some reason, you can do:```commandlinepython card_recognizer/reference/core/build.py [PTCGSDK_API_KEY]```where `PTCGSDK_API_KEY` is your PTCGSDK API key. You can get one here: https://pokemontcg.io/.Note that building and evaluating the reference can take an hour or more, depending on your system configuration. It is recommended to use the prebuilt card references that come pre-bundled.&lt;b&gt; *This API is unofficial, open-source, in development, and not affiliated with the Pokémon Company. &lt;/b&gt;</longdescription>
</pkgmetadata>