<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## ff### About`ff` is a tool for finding files in the filesystem.**NOTE: ff is in the early stages of development, expect things to break andsyntax to change.**### Summary`ff` is a tool for finding files in the filesystem that all share a set ofcommon features. Its scope is similar to `find(1)` and `fd(1)` but it aims atbeing more accessible and easier to use than `find` and more versatile andpowerful than `fd`. It is written in [Python &gt;= 3.6](https://www.python.org/).### Features* Search by file attributes.* Search in a wide variety of file metadata.* Simple yet powerful expression syntax.* Flexible output options.* Flexible sort options.* Extendable by user plugins.* Parallel search and processing.* Usable in scripts with a Python API.### ExamplesStore all files from the current directory that are tracked by `git(1)` in a`tar(1)` archive:```sh$ ff type=f git.tracked=yes --sort --exec-batch tar cvzf git-tracked.tar.gz```Find files in the directory `Videos/` that end with `.mkv` or `.mp4` and arebetween 720 and 1080 pixels high:```sh$ ff Videos/ {{ ext=mkv or ext=mp4 }} and {{ height+=720 and height-=1080 }}```More examples are [here](https://github.com/gustaebel/ff/blob/master/EXAMPLES.md).### InstallationTo build and install `ff` simply type:```sh$ python setup.py install```or```sh$ pip install find-ff```Building with [Cython](https://cython.org/) is also supported. Cython &gt;= 3.0 isrequired. Depending on the set of arguments this may offer a significantspeed-up.```sh$ python setup-cython.py install```### Python APIYou can use `ff`'s query capabilities in your own scripts:```pythonfrom ff import Findfor entry in Find(&quot;type=f git.tracked=yes&quot;, directories=[&quot;/home/user/project&quot;], sort=[&quot;path&quot;]):    print(entry[&quot;relpath&quot;])```### Developing plugins and debug modeThere is a template for new plugins to start from (`plugin_template.py`) withexhaustive instructions and comments, so you can develop plugins for your ownneeds.Useful in that regard is `ff`'s debug mode. It can be activated by executingthe `ff` module.```sh$ python -m ff --debug info,cache ...```Debug mode produces lots of messages which can be limited to certain categoriesusing the `--debug category1,category2,...` option. On top of that, debug modeactivates many internal checks using `assert()`. Therefore, it is advisable touse debug mode during plugin development.</longdescription>
</pkgmetadata>