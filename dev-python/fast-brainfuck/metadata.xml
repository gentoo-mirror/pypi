<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p&gt;&lt;span&gt;&lt;span style=&quot;font-family:Verdana, Arial, Helvetica, sans-serif;line-height:19px;text-indent:26px;&quot;&gt;&lt;span style=&quot;font-size:14px;&quot;&gt;&lt;span style=&quot;font-family:Arial;line-height:26px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;# A big bugfix is applied to this package due to the technique Python uses to import modules.In previous versions, when brainfuck_to_function is called, it creates a module named _foo, which is imported. But Python also stores it into a cache, that means when you call brainfuck_to_function again, the new module would not be imported, which causes a function the same as the previous function is returned.However, in this version and higher, a module with a random name is created instead, which fixed the bug.### This is a very fast brainfuck &quot;compiler&quot;.When used, it builds brainfuck code into Python extension modules, and imports it.Requires:1. Python&gt;=3.62. C++ Compiler available3. pybind11#### Running brainfuckUse the 'brainfuck_to_function' function to convert brainfuck into function.It will take several seconds for the C++ compiler to build the module, but after build, you can call it anytime without building, which will be faster, and about 3x faster than directly using a brainfuck **interpreter** implemented in C++.```pythonfrom fastbf import brainfuck_to_functioncode='++++++++[&gt;++++++++&lt;-]&gt;++++++++.&gt;++++++++++++[&gt;++++++++&lt;-]&gt;+++++.+++++++..+++.&gt;++++[&gt;++++++++&lt;-]&gt;.&lt;&lt;&lt;&lt;+++++++++++++++.&gt;&gt;.+++.------.--------.&gt;&gt;+.'func=brainfuck_to_function(code)func() # Hello World!```#### Freezing brainfuck into executablesfast-brainfuck is not supposed to be frozen into executables (e.g. using PyInstaller).But fortunately, you can use the 'dist_brainfuck' function to convert brainfuck into Python modules.You can write setup.py like this:```pythonfrom fastbf import dist_brainfuckcode='++++++++[&gt;++++++++&lt;-]&gt;++++++++.&gt;++++++++++++[&gt;++++++++&lt;-]&gt;+++++.+++++++..+++.&gt;++++[&gt;++++++++&lt;-]&gt;.&lt;&lt;&lt;&lt;+++++++++++++++.&gt;&gt;.+++.------.--------.&gt;&gt;+.'dist_brainfuck(    code,'hello')```Then run **python setup.py build_ext --inplace**, the files hello.py and hello.xxx.pyd (hello.xxx.so) will be created, you can now use```pythonimport hellohello.run()```to run the brainfuck in your script (which **CAN** be frozen into executables).Note that fast-brainfuck does **NOT** clean up the temporary files it creates. You have to manually delete them if you want.fast-brainfuck can run on **CPython** or **PyPy**.#### ImportError: xxxIf you encountered this error when using this package in PyPy in Windows, that means your username has non-ASCII characters.You can run```pythonimport osos.environ['TMP']='C:\\Somedir'```before using fast-brainfuck to fix the error.Note that moving the pointer to the left of the origin causes **UNDEFINED BEHAVIOR** in this version</longdescription>
</pkgmetadata>