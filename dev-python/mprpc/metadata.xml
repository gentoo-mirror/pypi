<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>   Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);   you may not use this file except in compliance with the License.   You may obtain a copy of the License at       http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions and   limitations under the License.Description: mprpc        =====                .. image:: https://badge.fury.io/py/mprpc.png            :target: http://badge.fury.io/py/mprpc                .. image:: https://travis-ci.org/studio-ousia/mprpc.png?branch=master            :target: https://travis-ci.org/studio-ousia/mprpc                mprpc is a lightweight `MessagePack RPC &lt;https://github.com/msgpack-rpc/msgpack-rpc&gt;`_ library. It enables you to easily build a distributed server-side system by writing a small amount of code. It is built on top of `gevent &lt;http://www.gevent.org/&gt;`_ and `MessagePack &lt;http://msgpack.org/&gt;`_.                        Installation        ------------                To install mprpc, simply:                .. code-block:: bash                    $ pip install mprpc                Alternatively,                .. code-block:: bash                    $ easy_install mprpc                Examples        --------                RPC server        ^^^^^^^^^^                .. code-block:: python                    from gevent.server import StreamServer            from mprpc import RPCServer                    class SumServer(RPCServer):                def sum(self, x, y):                    return x + y                    server = StreamServer(('127.0.0.1', 6000), SumServer())            server.serve_forever()                RPC client        ^^^^^^^^^^                .. code-block:: python                    from mprpc import RPCClient                    client = RPCClient('127.0.0.1', 6000)            print client.call('sum', 1, 2)                        RPC client with connection pooling        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                .. code-block:: python                    import gsocketpool.pool            from mprpc import RPCPoolClient                    client_pool = gsocketpool.pool.Pool(RPCPoolClient, dict(host='127.0.0.1', port=6000))                    with client_pool.connection() as client:                print client.call('sum', 1, 2)                        Performance        -----------                mprpc significantly outperforms the `official MessagePack RPC &lt;https://github.com/msgpack-rpc/msgpack-rpc-python&gt;`_ (**1.8x** faster), which is built using `Facebook's Tornado &lt;http://www.tornadoweb.org/en/stable/&gt;`_ and `MessagePack &lt;http://msgpack.org/&gt;`_, and `ZeroRPC &lt;http://zerorpc.dotcloud.com/&gt;`_ (**14x** faster), which is built using `ZeroMQ &lt;http://zeromq.org/&gt;`_ and `MessagePack &lt;http://msgpack.org/&gt;`_.                Results        ^^^^^^^                .. image:: https://raw.github.com/studio-ousia/mprpc/master/docs/img/perf.png            :width: 550px            :height: 150px            :alt: Performance Comparison                mprpc        ~~~~~                .. code-block:: bash                    % python benchmarks/benchmark.py            call: 9508 qps            call_using_connection_pool: 10172 qps                        Official MesssagePack RPC        ~~~~~~~~~~~~~~~~~~~~~~~~~                .. code-block:: bash                    % pip install msgpack-rpc-python            % python benchmarks/benchmark_msgpackrpc_official.py            call: 4976 qps                ZeroRPC        ~~~~~~~                .. code-block:: bash                    % pip install zerorpc            % python benchmarks/benchmark_zerorpc.py            call: 655 qps                        Documentation        -------------                Documentation is available at http://mprpc.readthedocs.org/.        Keywords: rpc,msgpack,messagepack,msgpackrpc,messagepackrpc,messagepack rpc,geventPlatform: UNKNOWNClassifier: Development Status :: 4 - BetaClassifier: Intended Audience :: DevelopersClassifier: Natural Language :: EnglishClassifier: License :: OSI Approved :: Apache Software LicenseClassifier: Programming Language :: PythonClassifier: Programming Language :: Python :: 2.6Classifier: Programming Language :: Python :: 2.7Classifier: Programming Language :: Python :: 3.3Classifier: Programming Language :: Python :: 3.4Classifier: Programming Language :: Python :: 3.5</longdescription>
</pkgmetadata>