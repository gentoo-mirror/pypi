<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI](https://img.shields.io/pypi/v/pymantra)](https://pypi.org/project/pymantra/)![License](https://img.shields.io/pypi/l/pymantra)![Linting](https://github.com/lipitum/pymantra/actions/workflows/linting.yaml/badge.svg)![Tests](https://github.com/lipitum/pymantra/actions/workflows/run_tests.yaml/badge.svg)[![Documentation](https://readthedocs.org/projects/pymantra/badge/?version=latest)](https://pymantra.readthedocs.io)[![Coverage](https://codecov.io/gh/LipiTUM/pymantra/branch/main/graph/badge.svg)](https://app.codecov.io/gh/LipiTUM/pymantra)# Metabolomics-centred graph-based multi-omics integration![](./docs/_static/Figure1.svg)**mantra** is a conceptual approach to compute estimates for the change ofmetabolic reaction activity between two groups of samples. It relies on linearrelationships between substrate and product metabolites of a reaction and howthe coefficients of these relationships change between conditions. In additionto analyzing metabolomics data, mantra also provides a correlation-basedapproach for *multi-omics integration*.As an approach to provide smaller, mechanistically interpretable results basedon both the reaction estimates (and multi-omics associations) and the metabolicnetwork structure, network enrichment on the basis of a simulated-annealingassisted local search is used.The ``pymantra`` package provides all functionalities for computing changes inreaction activity, multi-omics associations and performing the networkenrichment as well as reporting and plotting their results. Additionally, itcontains utilities to perform metabolite ID mapping.```mermaidflowchart LRsubgraph in[Required Input]    met(Metabolome Data)endsubgraph opt[Optional Multi-Omics Data]    direction LR    subgraph opti[Input]        direction LR        org(Organism/Microbiome Data)        cat(Genome/Transcriptome Data)    end    subgraph optc[Associations]        associ[compute_multiomics_associations]    endendsubgraph db[&quot;Databases (online and/or offline)&quot;]    neo4j[(neo4j Graph)]    sql[(SQL ID maps)]endnamemap[NameMapper&lt;br&gt;&lt;i&gt;Metabolite ID Mapping&lt;/i&gt;]netgen[NetworkGenerator]metnet(((Metabolic Network)))estimates[Reaction Estimates]lso[Local Search Enrichment]res[Enrichment Results]reac[ ]sql -.-&gt; namemapmet --&gt; namemap --&gt; netgenneo4j -.-&gt; netgenopti --&gt; netgen --&gt; metnetmetnet &amp; opti &amp; estimates --&gt; optcmetnet &amp; met --- reac ----&gt; estimatesestimates &amp; optc --&gt; lso --&gt; resstyle reac width:0px,height:0px```### ManuscriptIf you would like to learn more about the details of the methodology and seesome real-world results please check out our [manuscript](https://doi.org/10.1101/2023.05.15.540613).## Getting StartedTo get started we recommend going through some[code examples](https://pymantra.readthedocs.io/en/latest/examples/index.html) providedin pymantra's documentation and the installation guide below.### Installation#### Using `pip`The recommended installation is via `pip`.It has pre-compiled wheels available for all major operating systems.Generally using python version 3.10 or newer is recommended, but backwardscompatability is ensured down to 3.8.If you would like to run the experiments presented in the paper (code inthe [experiments folder](experiments)), please use the second option to installthe additional dependencies and mind the different version requirements (see[README](experiments/README.md)).Additionally, dependencies required for package development and generation ofsphinx documentation can be obtained.```shell# install with package dependenciespip install pymantra# for including the dependencies to run the paper experimentspip install pymantra[experiments]# for including the development dependenciespip install pymantra[dev]# for including the documentation dependenciespip install pymantra[docs]```#### Installation from sourceTo install from source first clone the github repository including submodules```shellgit clone https://github.com/lipitum/pymantra.git --recursive```Additionally, you need to download required database files for name mappingfrom [here](https://drive.google.com/drive/folders/1sWTHWRqzglWOjTMwNa_aqkKT__Y7Snmq?usp=sharing)On macOS and Linux we recommend to use the following from within the pymantradirectory```shellpip install gdowngdown --folder https://drive.google.com/drive/folders/1sWTHWRqzglWOjTMwNa_aqkKT__Y7Snmq?usp=sharingmv package/chebi.db pymantra/namemapping/ChEBI/mv package/hmdb.db pymantra/namemapping/HMDB/mv package/mantra.db pymantra/namemapping/mantra_db/mv package/reactome.db pymantra/namemapping/Reactome/rm -r package```On Windows the syntax would change to (untested)```pip install gdowngdown --folder https://drive.google.com/drive/folders/1sWTHWRqzglWOjTMwNa_aqkKT__Y7Snmq?usp=sharingmove package\chebi.db pymantra\namemapping\ChEBI\move package\hmdb.db pymantra\namemapping\HMDB\move package\mantra.db pymantra\namemapping\mantra_db\move package\reactome.db pymantra\namemapping\Reactome\rmdir /s /q package```Make sure you have a C++ compiler installed (recommended are gcc forLinux and OS X and Visual C++ for Windows). Please make sure thecompiler matches the one, with which your python distribution was installed.The only c++ dependency for compilation isthe [boost library](https://robots.uc3m.es/installation-guides/install-boost.html).In case it is already installed on your system (with version &gt;= 1.77) you canalso drop the `--recursive` flag in the `git clone` call. In addition toinstalling boost from source you can also use `conda`.In addition to boost, we use OpenMP for parallel processing. It is usuallyinstalled with your compiler, although macOS users might have to run additionalinstallation steps. Windows has currently no support for new OpenMP standards.If it is not possible to compile with OpenMP, parallelized options will beunavailable in the python package, but all other functionalities are notaffected.On macOS installation can be done on different ways, e.g. through MacPorts orhomebrew (recommended - `brew install libomp`).Once the c++ dependencies are installed, the package installation can beinvoked by calling `pip install````shellpip install .```To verify installation run the unit tests```shellpython -m pytest```Similar to the regular `pip` installation you can also install the optionaldependencies.## DatabasePer default the setup script installs all code, but **not** the neo4j database.Instead, an online version of the database will be used. Since this is slowerthan having a local database, we provide two options to run the neo4j databaselocally.### DockerWe provide a docker script to run the neo4j database on your computer in a[separate repository](https://github.com/lipitum/pymantra_db_api).Please follow the instructions there to run the container.When calling the ``NetworkGenerator`` make sure your provide the correct URIand the user and password given in your .env file int pymantra-db-api folder.If you use the default setting this leads to```pythonAPINetworkGenerator(&quot;127.0.0.1:8084&quot;)```In this case only `APINetworkGenerator.get_subgraph` and`APINetworkGenerator.as_networkx` are available instead of the whole`NewtorkGenerator` function repertoire. Yet, for most use cases these functionsare all you need.### Manual InstallationIf you want to generate the networks outside docker, you will  have to installneo4j on your systems (community version is sufficient).For instructions see the [installation page](https://neo4j.com/docs/operations-manual/current/installation/).Having installed neo4j, download the mantra database dump from[here]() and move the[comment]: &lt;&gt; (TODO: finish the instruction)The ``NetworkGenerator`` can now be initialized with```pythonNetworkGenerator(&quot;bolt://127.0.0.1:7687&quot;, (&quot;&lt;user&gt;&quot;, &quot;&lt;password&gt;&quot;))```## Manuscript ExperimentsAll code used to generate the results presented in our [manuscript]()is located in the [examples](examples) folder. Please mind the higher versionrequirements indicated in the [README](examples/README.md) when reproducingthe experiments.## CitationIf you use `pymantra` for your own work, please cite our manuscript```bibtex@article{koehler2023,    title       = {Identification and Integration of Key-Metabolic Reactions from Untargeted Metabolomics Data},    author      = {K\&quot;ohler, Nikolai and W\&quot;urf, Vivian and Rose, Tim D and Pauling, Josch K},    journal     = {bioRxiv},    year        = {2023},    publisher   = {Cold Spring Harbor Laboratory},    doi         = {https://doi.org/10.1101/2023.05.15.540613}}```</longdescription>
</pkgmetadata>