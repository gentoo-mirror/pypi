<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>About-----This is a fork of &quot;python replacement for java.util.Properties&quot; recipe on ASPN:http://code.activestate.com/recipes/496795/ The project is maintained by Anand B Pillaianandpillai@letterboxes.org, anand@anvetsu.com .License-------The code is re-licensed under MIT License. See ``LICENSE`` file for more details.What this is------------This module is designed to be a python equivalent to the``java.util.Properties &lt;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Properties.html&gt;``\ \_class.Currently, the basic input/output methods are supported.Fundamentally, this module is designed so that users can easily parse and manipulate Java Propertiesfiles - that's it. There's a fair number of us pythonistas who work in multi-language shops, andconstantly writing your own parsing mechanism is just painful. Not to mention Java guys arenotoriously unwilling to use anything which is cross-language for configuration, unless it's XML,which is a form of self-punishment. :)Python support--------------The module is cross Python2 and Python3 compatible.This module has basic support for Python3. It means the tests should pass under any version ofPython3 though it has been tested only for versions &gt;= Python 3.6.6.Due to the changes for Python3, this should work under any Python2 version &gt;= Python 2.7.Caveats-------The code still uses Python2 type strings inside. In other words proper unicode support is stillmissing.Plans-----Here is a plan for the current version which runs under Python2 in approximate decreasing priorityorder.1. Keep/maintain blank lines and comments found in the original file2. Add unicode support3. Provide python property access on top of direct dictionary get/set4. Make the module compatible with the new methods in latest J2SE.Usage-----::        from pyjavaproperties import Properties        p = Properties()        p.load(open('test.properties'))        p.list()        print p        print p.items()        print p['name3']        p['name3'] = 'changed = value'        print p['name3']            p['new key'] = 'new value'        p.store(open('test2.properties','w'))See also the Properties.list() method, which will return an iterator over the property keysTests-----::    $ python pyjavaproperties_test.pyChanges &amp; News--------------version 0.7------------  Setup.py for release 0.7.-  Created CHANGELOG.txt-  Updated README.md showing tests, changes section and updates to author etc.-  Relicensed to MIT from PSF.-  Rewrote N.B's patch to relicense repo under MIT.-  Basic python3 support plus python2/3 cross compatibility.-  Absorbing TODO in README.md.-  README =&gt; README.md.-  Added support for referenced properties.-  Added tests for referenced properties and saving as well.-  Minor tweaks in code.-  Code moved to new git repo.</longdescription>
</pkgmetadata>