<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- markdownlint-disable --&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://raw.githubusercontent.com/litestar-org/branding/473f54621e55cde9acbb6fcab7fc03036173eb3d/assets/Branding%20-%20PNG%20-%20Transparent/Logo%20-%20Banner%20-%20Inline%20-%20Light.png&quot; alt=&quot;Litestar Logo - Light&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;&lt;!-- markdownlint-restore --&gt;&lt;div align=&quot;center&quot;&gt;&lt;!-- prettier-ignore-start --&gt;| Project   |     | Status||-----------|:----||| CI/CD     |     | [![Latest Release](https://github.com/litestar-org/litestar/actions/workflows/publish.yaml/badge.svg)](https://github.com/litestar-org/litestar/actions/workflows/publish.yaml) [![ci](https://github.com/litestar-org/litestar/actions/workflows/ci.yaml/badge.svg)](https://github.com/litestar-org/litestar/actions/workflows/ci.yaml) [![Documentation Building](https://github.com/litestar-org/litestar/actions/workflows/docs.yaml/badge.svg?branch=main)](https://github.com/litestar-org/litestar/actions/workflows/docs.yaml|| Quality   |     | [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&amp;metric=coverage)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&amp;metric=alert_status)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar) [![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&amp;metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar) [![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&amp;metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar) [![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=litestar-org_litestar&amp;metric=security_rating)](https://sonarcloud.io/summary/new_code?id=litestar-org_litestar)                                                                                                                                                                                                                                                                        || Package   |     | [![PyPI - Version](https://img.shields.io/pypi/v/litestar?labelColor=202235&amp;color=edb641&amp;logo=python&amp;logoColor=edb641)](https://badge.fury.io/py/litestar) ![PyPI - Support Python Versions](https://img.shields.io/pypi/pyversions/litestar?labelColor=202235&amp;color=edb641&amp;logo=python&amp;logoColor=edb641) ![Starlite PyPI - Downloads](https://img.shields.io/pypi/dm/starlite?logo=python&amp;label=starlite%20downloads&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641) ![Litestar PyPI - Downloads](https://img.shields.io/pypi/dm/litestar?logo=python&amp;label=litestar%20downloads&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  || Community |     | [![Reddit](https://img.shields.io/reddit/subreddit-subscribers/litestarapi?label=r%2FLitestar&amp;logo=reddit&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641)](https://reddit.com/r/litestarapi) [![Discord](https://img.shields.io/discord/919193495116337154?labelColor=202235&amp;color=edb641&amp;label=chat%20on%20discord&amp;logo=discord&amp;logoColor=edb641)](https://discord.gg/X3FJqy8d2j) [![Matrix](https://img.shields.io/badge/chat%20on%20Matrix-bridged-202235?labelColor=202235&amp;color=edb641&amp;logo=matrix&amp;logoColor=edb641)](https://matrix.to/#/#litestar:matrix.org) [![Medium](https://img.shields.io/badge/Medium-202235?labelColor=202235&amp;color=edb641&amp;logo=medium&amp;logoColor=edb641)](https://blog.litestar.dev) [![Twitter](https://img.shields.io/twitter/follow/LitestarAPI?labelColor=202235&amp;color=edb641&amp;logo=twitter&amp;logoColor=edb641&amp;style=flat)](https://twitter.com/LitestarAPI) [![Blog](https://img.shields.io/badge/Blog-litestar.dev-202235?logo=blogger&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641)](https://blog.litestar.dev)                                                                                                                                                                                               || Meta      |     | [![Litestar Project](https://img.shields.io/badge/Litestar%20Org-%E2%AD%90%20Litestar-202235.svg?logo=python&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641)](https://github.com/litestar-org/litestar) [![types - Mypy](https://img.shields.io/badge/types-Mypy-202235.svg?logo=python&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641)](https://github.com/python/mypy) [![License - MIT](https://img.shields.io/badge/license-MIT-202235.svg?logo=python&amp;labelColor=202235&amp;color=edb641&amp;logoColor=edb641)](https://spdx.org/licenses/) [![Litestar Sponsors](https://img.shields.io/badge/Sponsor-%E2%9D%A4-%23edb641.svg?&amp;logo=github&amp;logoColor=edb641&amp;labelColor=202235)](https://github.com/sponsors/litestar-org) [![linting - Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json&amp;labelColor=202235)](https://github.com/astral-sh/ruff) [![code style - Black](https://img.shields.io/badge/code%20style-black-000000.svg?logo=python&amp;labelColor=202235&amp;logoColor=edb641)](https://github.com/psf/black) [![All Contributors](https://img.shields.io/github/all-contributors/litestar-org/litestar?labelColor=202235&amp;color=edb641&amp;logoColor=edb641)](#contributors-)  |&lt;!-- prettier-ignore-end --&gt;&lt;/div&gt;&lt;hr&gt;Litestar is a powerful, flexible yet opinionated ASGI framework, focused onbuilding APIs, and offers high-performance data validation and parsing,dependency injection, first-class ORM integration, authorization primitives, and muchmore that's needed to get applications up and running.Check out the [documentation ðŸ“š](https://docs.litestar.dev/) for a detailed overview ofits features!Additionally, the [Litestar fullstack repository](https://github.com/litestar-org/litestar-fullstack)can give you a good impression how a fully fledged Litestar application may look.## Installation```shellpip install litestar```## Quick Start```pythonfrom litestar import Litestar, get@get(&quot;/&quot;)def hello_world() -&gt; dict[str, str]:    &quot;&quot;&quot;Keeping the tradition alive with hello world.&quot;&quot;&quot;    return {&quot;hello&quot;: &quot;world&quot;}app = Litestar(route_handlers=[hello_world])```## Core Features- [Class based controllers](#class-based-controllers)- [Dependency Injection](#dependency-injection)- [Layered Middleware](#middleware)- [Plugin System](#plugin-system-orm-support-and-dtos)- [OpenAPI 3.1 schema generation](#openapi)- [Life Cycle Hooks](#request-life-cycle-hooks)- [Route Guards based Authorization](#route-guards)- Support for `dataclasses`, `TypedDict`, [pydantic version 1 and version 2](https://docs.pydantic.dev/latest/),  [msgspec](https://github.com/jcrist/msgspec) and [attrs](https://www.attrs.org/en/stable/)- Layered parameter declaration- [Automatic API documentation with](#redoc-swagger-ui-and-stoplight-elements-api-documentation):  - [Redoc](https://github.com/Redocly/redoc)  - [Stoplight Elements](https://github.com/stoplightio/elements)  - [Swagger-UI](https://swagger.io/tools/swagger-ui/)- [Trio](https://trio.readthedocs.io/en/stable/) support (built-in, via [AnyIO](https://anyio.readthedocs.io/))- Ultra-fast validation, serialization and deserialization using [msgspec](https://github.com/jcrist/msgspec)- SQLAlchemy integration- Piccolo ORM Support## Example Applications- [starlite-pg-redis-docker](https://github.com/litestar-org/starlite-pg-redis-docker): In addition to Litestar, this  demonstrates a pattern of application modularity, SQLAlchemy 2.0 ORM, Redis cache connectivity, and more. Like all  Litestar projects, this application is open to contributions, big and small.- [litestar-fullstack](https://github.com/litestar-org/litestar-fullstack): A reference application that contains most of the boilerplate required for a web application.  It features a Litestar app configured with best practices, SQLAlchemy 2.0 and SAQ, a frontend integrated with Vitejs and Jinja2 templates, Docker, and more.- [litestar-hello-world](https://github.com/litestar-org/litestar-hello-world): A bare-minimum application setup. Great  for testing and POC work.## Features### Class Based ControllersWhile supporting function based route handlers, Litestar also supports and promotes python OOP using class basedcontrollers:```python title=&quot;my_app/controllers/user.py&quot;from typing import List, Optionalfrom datetime import datetimefrom litestar import Controller, get, post, put, patch, deletefrom litestar.dto import DTODatafrom pydantic import UUID4from my_app.models import User, PartialUserDTOclass UserController(Controller):    path = &quot;/users&quot;    @post()    async def create_user(self, data: User) -&gt; User:        ...    @get()    async def list_users(self) -&gt; List[User]:        ...    @get(path=&quot;/{date:int}&quot;)    async def list_new_users(self, date: datetime) -&gt; List[User]:        ...    @patch(path=&quot;/{user_id:uuid}&quot;, dto=PartialUserDTO)    async def partial_update_user(        self, user_id: UUID4, data: DTOData[PartialUserDTO]    ) -&gt; User:        ...    @put(path=&quot;/{user_id:uuid}&quot;)    async def update_user(self, user_id: UUID4, data: User) -&gt; User:        ...    @get(path=&quot;/{user_name:str}&quot;)    async def get_user_by_name(self, user_name: str) -&gt; Optional[User]:        ...    @get(path=&quot;/{user_id:uuid}&quot;)    async def get_user(self, user_id: UUID4) -&gt; User:        ...    @delete(path=&quot;/{user_id:uuid}&quot;)    async def delete_user(self, user_id: UUID4) -&gt; None:        ...```### Data Parsing, Type Hints and PydanticLitestar is rigorously typed, and it enforces typing. For example, if you forget to type a return value for a routehandler, an exception will be raised. The reason for this is that Litestar uses typing data to generate OpenAPI specs,as well as to validate and parse data. Thus typing is absolutely essential to the framework.Furthermore, Litestar allows extending its support using plugins.### Plugin System, ORM support and DTOsLitestar has a plugin system that allows the user to extend serialization/deserialization, OpenAPI generation and otherfeatures. It ships with a builtin plugin for SQL Alchemy, which allows the user to use SQLAlchemy declarative classes&quot;natively&quot;, i.e. as type parameters that will be serialized/deserialized and to return them as values from routehandlers.Litestar also supports the programmatic creation of DTOs with a `DTOFactory` class, which also supports the use ofplugins.### OpenAPILitestar has custom logic to generate OpenAPI 3.1.0 schema, include optional generation of examples using the[`polyfactory`](https://pypi.org/project/polyfactory/) library.#### ReDoc, Swagger-UI and Stoplight Elements API DocumentationLitestar serves the documentation from the generated OpenAPI schema with:- [ReDoc](https://redoc.ly/)- [Swagger-UI](https://swagger.io/tools/swagger-ui/)- [Stoplight Elements](https://github.com/stoplightio/elements)All these are available and enabled by default.### Dependency InjectionLitestar has a simple but powerful DI system inspired by pytest. You can define named dependencies - sync or async - atdifferent levels of the application, and then selective use or overwrite them.```pythonfrom litestar import Litestar, getfrom litestar.di import Provideasync def my_dependency() -&gt; str:    ...@get(&quot;/&quot;)async def index(injected: str) -&gt; str:    return injectedapp = Litestar([index], dependencies={&quot;injected&quot;: Provide(my_dependency)})```### MiddlewareLitestar supports typical ASGI middleware and ships with middlewares to handle things such as- CORS- CSRF- Rate limiting- GZip and Brotli compression- Client- and server-side sessions### Route GuardsLitestar has an authorization mechanism called `guards`, which allows the user to define guard functions at differentlevel of the application (app, router, controller etc.) and validate the request before hitting the route handlerfunction.```pythonfrom litestar import Litestar, getfrom litestar.connection import ASGIConnectionfrom litestar.handlers.base import BaseRouteHandlerfrom litestar.exceptions import NotAuthorizedExceptionasync def is_authorized(connection: ASGIConnection, handler: BaseRouteHandler) -&gt; None:    # validate authorization    # if not authorized, raise NotAuthorizedException    raise NotAuthorizedException()@get(&quot;/&quot;, guards=[is_authorized])async def index() -&gt; None:    ...app = Litestar([index])```### Request Life Cycle HooksLitestar supports request life cycle hooks, similarly to Flask - i.e. `before_request` and `after_request`## PerformanceLitestar is fast. It is on par with, or significantly faster than comparable ASGI frameworks.You can see and run the benchmarks [here](https://github.com/litestar-org/api-performance-tests),or read more about it [here](https://docs.litestar.dev/latest/benchmarks) in our documentation.## ContributingLitestar is open to contributions big and small. You can always [join our discord](https://discord.gg/X3FJqy8d2j) serveror [join our Matrix](https://matrix.to/#/#litestar:matrix.org) spaceto discuss contributions and project maintenance. For guidelines on how to contribute, pleasesee [the contribution guide](CONTRIBUTING.rst).</longdescription>
</pkgmetadata>