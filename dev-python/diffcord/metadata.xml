<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Diffcord Python SDKA Python wrapper for the Diffcord API written in Python. ## Installation```pip install diffcord```## Pycord Example```pythonfrom diffcord import Client, VoteWebhookListener, UserBotVote, UserVoteInformationimport discordintents = discord.Intents.default()bot = discord.Bot(intents=intents)async def send_stats_success():    &quot;&quot;&quot; Handle stats successfully sent to Diffcord    &quot;&quot;&quot;    print(&quot;Stats sent successfully!&quot;)async def send_stats_failure(e: Exception) -&gt; None:    &quot;&quot;&quot; Handle stats failed to send to Diffcord error    &quot;&quot;&quot;    print(&quot;Stats failed to send:&quot;, e)async def on_vote(vote: UserBotVote) -&gt; None:    &quot;&quot;&quot; Handle the vote.    &quot;&quot;&quot;    # LOGIC HERE... (give rewards, etc.)    # example: send a DM to the user who voted    user = await bot.fetch_user(vote.user_id)  # Get the discord user object from the user id    await user.send(&quot;Thanks for voting!&quot;)  # Send a DM to the user who voted# create Diffcord client &amp; webhook listener# &quot;port&quot; represents the port to listen on for incoming vote webhooks from Diffcord, choose any port you would like which is not in usediff_webhook_listener = VoteWebhookListener(port=8080, handle_vote=on_vote, verify_code=&quot;WEBHOOK_AUTH_CODE_HERE&quot;)diff_client = Client(bot, &quot;YOUR_DIFFCORD_API_TOKEN&quot;, diff_webhook_listener,                     send_stats_success=send_stats_success, send_stats_failure=send_stats_failure)# on startup event@bot.eventasync def on_ready():    # start the webhook listener &amp; start send stats    await diff_client.start()  # required@bot.slash_command(name=&quot;example&quot;)async def example_command(ctx):    # get user vote info    user_vote_info: UserVoteInformation = await diff_client.get_user_vote_info(ctx.author.id)    # get amount of bot votes this month    bot_votes_this_month: int = await diff_client.bot_votes_this_month()    # respond    message = f&quot;You have voted {user_vote_info.monthly_votes} times this month! This bot has {bot_votes_this_month} votes this month!&quot;    await ctx.respond(message)bot.run(&quot;YOUR_BOT_TOKEN&quot;)```</longdescription>
</pkgmetadata>