<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ðŸŒ± Turn any object into a module ðŸŒ±Callable modules!  Indexable modules!?Ever wanted to call a module directly, or index it?  Or just sick of seeing`from foo import foo` in your examples?Give your module the awesome power of an object, or maybe just save alittle typing, with `xmod`.`xmod` is a tiny library that lets a module to do things that normallyonly a class could do - handy for modules that &quot;just do one thing&quot;.## Example: Make a module callable like a function!    # In your_module.py    import xmod    @xmod    def a_function():        return 'HERE!!'    # Test at the command line    &gt;&gt;&gt; import your_module    &gt;&gt;&gt; your_module()    HERE!!## Example: Make a module look like a list!?!    # In your_module.py    import xmod    xmod(list(), __name__)    # Test at the command line    &gt;&gt;&gt; import your_module    &gt;&gt;&gt; assert your_module == []    &gt;&gt;&gt; your_module.extend(range(3))    &gt;&gt;&gt; print(your_module)    [0, 1, 2]### [API Documentation](https://rec.github.io/xmod#xmod--api-documentation)</longdescription>
</pkgmetadata>