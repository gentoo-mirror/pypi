<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># py-unicode-linebreakPython bindings for the Rust crate [unicode-linebreak].## Installation```bashpip install unicode-linebreak```## Usage```pythonfrom unicode_linebreak import linebreaks, Allowed, Mandatorys = 'a b\nc\r\nd e\rf end'expected_result = [    (2, Allowed), (4, Mandatory), (7, Mandatory), (9, Allowed),    (11, Mandatory), (13, Allowed), (16, Mandatory)]assert list(linebreaks(s)) == expected_result```Returns an iterator which iterates over tuples with thebinary character position of the linebreak and a booleanindicating whether the linebreak is a mandatory break.```python# the end of the string is always a mandatory breakassert list(linebreaks(s))[-1] == (0, Mandatory)# Mandatory and Allowed are just boolean valuesassert expected_result[0][1] is Allowed is Falseassert expected_result[-1][1] is Mandatory is True```&gt; Note that the binary character position is not the same&gt; as the readable character index, but the binary position.&gt; See the Rust method on strings [`char_indices()`].## Contribute```bashpython -m virtualenv venvsource venv/bin/activatepip install -r dev-requirements.txtmaturin develop &amp;&amp; python -m unittest```[unicode-linebreak]: https://crates.io/crates/unicode-linebreak[`char_indices()`]: https://doc.rust-lang.org/std/primitive.str.html#method.char_indices</longdescription>
</pkgmetadata>