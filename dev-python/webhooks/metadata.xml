<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================webhooks===============================.. image:: https://pypip.in/d/webhooks/badge.png        :target: https://pypi.python.org/pypi/webhooks.. image:: https://badge.fury.io/py/webhooks.png    :target: https://badge.fury.io/py/webhooks.. image:: https://travis-ci.org/pydanny/webhooks.png   :alt: Build Status   :target: https://travis-ci.org/pydanny/webhooks.. image:: https://pypip.in/wheel/webhooks/badge.png    :target: https://pypi.python.org/pypi/webhooks/    :alt: Wheel StatusPython + Webhooks Made Easy* Free software: BSD license* Documentation: http://webhooks.rtfd.org.**WARNING** This project is in a pre-alpha state. It's not ready for use on ANYTHING.Python Versions----------------Currently works in:    * Python 2.7    * Python 3.3Existing Features------------------* Easy to integrate into any package or project* Comes with several built-in senders for synchronous webhooks.* Comes with a RedisQ-powered asynchronous webhook.* Extendable functionality through the use of custom senders and hash functions.Planned Features-----------------* Comes with many built-in senders for synchronous and asynchronous webhooks.* Special functions for combining multiple sends of identical payloads going to one target into one.* Follows http://resthooks.org patterns* Great documentation* Compatibility with PyPyUsage-----Follow these easy steps:1. Import the ``webhook`` decorator.2. Define a function that returns a JSON-serializable dictionary or iterable.3. Add the ``webhook`` decorator and pass in a ``sender_callable``.4. Call the function!Synchronous example (async examples to come soon):.. code-block:: python    &gt;&gt;&gt; from webhooks import webhook    &gt;&gt;&gt; from webhooks.senders import targeted    &gt;&gt;&gt; @webhook(sender_callable=targeted.sender)    &gt;&gt;&gt; def basic(url, wife, husband):    &gt;&gt;&gt;     return {&quot;husband&quot;: husband, &quot;wife&quot;: wife}    &gt;&gt;&gt; r = basic(url=&quot;http://httpbin.org/post&quot;, husband=&quot;Danny&quot;, wife=&quot;Audrey&quot;)    &gt;&gt;&gt; import pprint    &gt;&gt;&gt; pprint.pprint(r)    {'attempt': 1,    'hash': '29788eb987104b8a87d201292fa459d9',    'husband': 'Danny',    'response': b'{\n  &quot;args&quot;: {},\n  &quot;data&quot;: &quot;&quot;,\n  &quot;files&quot;: {},\n  &quot;form&quot;: {\n    &quot;attempt&quot;: &quot;1&quot;,\n    &quot;hash&quot;: &quot;29788eb987104b8a87d201292fa459d9&quot;,\n    &quot;husband&quot;: &quot;Danny&quot;,\n    &quot;url&quot;: &quot;http://httpbin.org/post&quot;,\n    &quot;wife&quot;: &quot;Audrey&quot;\n  },\n  &quot;headers&quot;: {\n    &quot;Accept&quot;: &quot;*/*&quot;,\n    &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;,\n    &quot;Connection&quot;: &quot;close&quot;,\n    &quot;Content-Length&quot;: &quot;109&quot;,\n    &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;,\n    &quot;Host&quot;: &quot;httpbin.org&quot;,\n    &quot;User-Agent&quot;: &quot;python-requests/2.3.0 CPython/3.3.5 Darwin/12.3.0&quot;,\n    &quot;X-Request-Id&quot;: &quot;d25119e4-08ba-4523-abc4-b9a9ac10225b&quot;\n  },\n  &quot;json&quot;: null,\n  &quot;origin&quot;: &quot;108.185.146.101&quot;,\n  &quot;url&quot;: &quot;http://httpbin.org/post&quot;\n}',    'status_code': 200,    'url': 'http://httpbin.org/post',    'wife': 'Audrey'}    Projects Powered by Webhooks----------------------------* https://github.com/pydanny/dj-webhooksHistory-------0.4.2 (2014-05-22)+++++++++++++++++++* Convert python-requests bytes to string when using Python 30.4.1 (2014-05-22)+++++++++++++++++++* Replaced `json262` with `standardjson` package.0.4.0 (2014-05-20)++++++++++++++++++* Replaced `utils.encoders` with `json262` package.* utf-8 encoding everywhere* Add `from `__future__ import absolute_import` everywhere.0.3.2 (2014-05-17)++++++++++++++++++* Brought in simplified `cached_property` decorator0.3.1 (2014-05-15)++++++++++++++++++* Added more Senderable attributes to make it easier to track what's going on.* Added the missing webhooks.sender package to setup.py.0.3.0 (2014-05-14)++++++++++++++++++* Added extensible Senderable class to expedite creating new senders.* Added async_redis sender.* Added travis-ci.0.2.0 (2014-05-13)++++++++++++++++++* Added functioning hook decorator.* Ramped up test coverage.* Hash functions placed in their own module.* Cleaned up JSON encoder thanks to Audrey Roy Greenfeld!0.1.0 (2014-05-07)++++++++++++++++++* First release on PyPI.</longdescription>
</pkgmetadata>