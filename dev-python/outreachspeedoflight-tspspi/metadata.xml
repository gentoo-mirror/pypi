<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Outreach project utility: Speed of light_Work in progress_This is the frontend to the _speed of light_ outreach project. This projecthas been developed to measure the speed of light similar to the ideathat Hippolyte Fizeau developed in 1848. In contrast to his experimentin this case a little cheat is used - a bicycle works as chopper to producea sharp difference in light intensity of a laser source. The light travelsthrough two arms of the experiment - one being only a few meters away fromthe chopper, the other being about hundred meters away. The signal of bothpulses is recorded on photodiodes and sampled by a fast oscilloscope (thisis where the cheating comes in - we have a definition of time and fast directsampling).Since this project has been developed to increase the interest in scienceand let people participate actively during exhibitions it's by no way aprecision measurement - it's more of a (working) experiment that peoplecan look at, play with and grasp the idea of light traveling at finite speeds.This application:* Gathers data from the oscilloscope* Visualizes the samples* Calculates a cross correlation of the symmetrized periodicalized recorded  function* Estimates the speed of light from this correlation function by doing  a simple peak search* Does averaging over the estimated speed of light and visualized this.## Experimental setupThe experimental setup consists of two basic parts:* A chopper assembly - where a bicycle is used (or any other kind of chopper)* A beam splitter and photodiode assembly as well as a long beam line![Chopper assembly](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/assembly_chopper.png)![Beam splitter and photodiode assembly](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/assembly_diodeandcoupling.png)# Example screenshots## Running the embedded DAQ simulation![Running simulation](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/screenshot_simulation.png)## Example run in the lab![Test run](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/screenshot_running.png)![Test run: Chopper setup](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/expsetup_chopper01.jpg)![Test run: Chopper setup](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/expsetup_chopper02.jpg)![Test run: Beam splitter and photodiodes](https://raw.githubusercontent.com/tspspi/outreachspeedoflight/master/doc/expsetup_splitterdiodes.jpg)# Configuration files## daq.confThe data acquisition module configures the communication with the MSO5000 oscilloscope.Example configuration:```{&quot;osci&quot; : {&quot;ip&quot; : &quot;10.0.0.196&quot;,&quot;port&quot; : 5555,&quot;sperdiv&quot; : 1e-6,&quot;trigch&quot; : 1,&quot;triglvl&quot; : 0.5,&quot;ch1&quot; : {&quot;offset&quot; : 0,&quot;scale&quot; : 0.5},&quot;ch2&quot; : {&quot;offset&quot; : 0,&quot;scale&quot; : 0.1},&quot;maxqueryrate&quot; : 2},&quot;chopper&quot; : {&quot;diameter&quot; : 68e-2},&quot;path&quot; : {&quot;length&quot; : 100,&quot;n&quot; : 1.4},&quot;loglevel&quot; : &quot;debug&quot;,&quot;mode&quot; : &quot;continuous&quot;}```The ```osci``` section configured the MSO5000 oscilloscope:* Connectivity:   * The ```ip``` field can be either the IP or hostname as string   * ```port``` is optional and defaults to ```5555```* Optional _Horizontal axis_ (time) configuration:   * ```sperdiv``` specifies the seconds per division on the horizontal axis.     This has to be a value supported by the oscilloscope* Optional _Trigger_ configuration:   * ```trigch``` selects a channel (1 or 2) for the trigger to act on   * ```triglvl``` selects the trigger level in volts.* Optional channel configuration ```ch1``` and ```ch2```:   * One can specify an ```offset``` in volts   * and a ```scale``` specified in _volts per division_ that has to be     a supported value by the oscilloscope* A optional maximum query rate in Hz (i.e. queries per second) that can  be used to limit the amount of queries to the oscilloscope since at some  point it won't update it's own local display anymore due to prioritization  of network queries. When not specified the application queries as fast  as possible.The ```chopper``` section configures the chopper that is used. For ourexperimental setup this can be a bicycle or a simple wooden wheel:* ```diameter``` configures the diameter of the wheel in meters. This is only  used for velocity calculation from trigger rate assuming that only one trigger  is issued per cycle.An important configuration is the ```path```. This describes the free paththe light pulse is traveling through. One can describe the ```length``` inmeters and the refractive index ```n``` (1 for air or vacuum or about 1.4 forglass fibers)At last one can select between two modes of operation using the ```mode```parameter:* ```triggered``` uses the scope in single trigger mode and re-arms when ready to  gather more data. This ensures that both channels correspond to the same  event but looks less real time on the oscilloscopes local display.* ```continuous``` continuously samples on the scope and queries data as fast  as possible.## gui.confThe user interface can be configured using ```gui.conf```. This allows one to configuresome analysis parameters:* The number of last measurements to be shown using ```lastsamples```* The number of measurements to include in rolling average ```averagecount```* A optional fit of a Gaussian function into the difference signal (that can  also be used instead of the autocorrelation function to detect the time delay).  This is done in the ```difffit``` dictionary:   * ```enable``` is set to the strings ```&quot;true&quot;``` or ```&quot;false&quot;```. When set     to true fitting is enabled. Keep in mind this is numerically more demanding than the other methods   * ```primary``` can be either ```&quot;true&quot;``` or ```&quot;false&quot;```. If set to true     the FWHM of the fit is used as measure for time delay of the signals and thus to calculate the speed of light. When set to ```&quot;false&quot;``` the fit is only plotted and the speed is still calculated using the cross correlation of both signals   * ```dump``` is set to ```&quot;true&quot;``` to dump fitting result and parameters     to the standard output (for debugging purposes)* To handle noisy signals on the photodiodes ```movingaverage``` can be set to any integer  value larger than 0 (or to 0 to disable the feature). It applies a moving average  filter of the specified number of samples - and thus applies a low pass filter  to the signal.In addition one can directly configure some layout parameters:* ```plotsize``` with ```x``` and ```y``` parameters directly scales all plots* ```mainwindowsize``` with ```x``` and ```y``` parameters scales the main window  as initially created.Note that invalid setting of those parameters might clip some graphs or causesome strange behavior of the user interface.## highscore.conf```{  &quot;loglevel&quot; : &quot;debug&quot;,  &quot;highscorefile&quot; : &quot;/tmp/highscore.dat&quot;,  &quot;mainwindowsize&quot; : {    &quot;x&quot; : 1920,    &quot;y&quot; : 1500  },  &quot;tablesize&quot; : {    &quot;x&quot; : 1350,    &quot;y&quot; : 250  }}```</longdescription>
</pkgmetadata>