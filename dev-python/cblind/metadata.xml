<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># cblind[![PyPI](https://img.shields.io/pypi/v/cblind)](https://pypi.org/project/cblind/)A colorblind-friendly python module that allows color choice for plotting multiple curves  Works only with python $\geq$ 3.7  8 colormaps are now available to map 2D fields  Authors: Gaylor Wafflard-Fernandez, Cl√©ment Robert  Author-email: gaylor.wafflard@univ-grenoble-alpes.fr## InstallationInstall with `pip````pip install cblind```To import cblind:```pythonimport cblind as cb```## Usage for plotting10 palette functions to plot curves are available for now in the Colorplots class, with the corresponding test plotting functions.  ### cblind```pythoncolor, linestyle = cb.Coloplots().cblind(nb_of_plots)```from 1 to 12 plots [DISTINCT COLORS]. For more than 12 plots, the linestyle is changed.  ```pythoncb.test_cblind(nb_of_plots)```![cblind](https://github.com/Volodia99/cblind/raw/master/imgs/cblind.png)### contrast```pythoncolor, linestyle = cb.Coloplots().contrast(nb_of_plots)```for less than 4 contrast plots [DISTINCT COLORS]. For more than 12 plots, the linestyle is changed.  ```pythoncb.test_contrast(nb_of_plots)```![contrast](https://github.com/Volodia99/cblind/raw/master/imgs/contrast.png)### huescale```pythoncolor, linestyle = cb.Coloplots().huescale(nb_of_plots, *option)```from 1 to 9 plots [SEQUENTIAL DATA]. With option &quot;blue&quot;,&quot;bluegreen&quot;,&quot;green&quot;, &quot;gold&quot;,&quot;brown&quot;,&quot;rose&quot;,&quot;purple&quot; for less than 3 plots, otherwise ocherscale.  ```pythoncb.test_huescale(nb_of_plots, *option)```![huescale](https://github.com/Volodia99/cblind/raw/master/imgs/huescale.png)### rbscale```pythoncolor, linestyle = cb.Coloplots().rbscale(nb_of_plots)```from 3 to 11 plots [DIVERGING DATA].  ```pythoncb.test_rbscale(nb_of_plots)```![rbscale](https://github.com/Volodia99/cblind/raw/master/imgs/rbscale.png)### rainbow```pythoncolor, linestyle = cb.Coloplots().rainbow(nb_of_plots)```from 4 to 12 plots [RAINBOW SCHEME].  ```pythoncb.test_rainbow(nb_of_plots)```![rainbow](https://github.com/Volodia99/cblind/raw/master/imgs/rainbow.png)### extreme_rainbow```pythoncolor, linestyle = cb.Coloplots().extreme_rainbow(nb_of_plots)```from 1 to 34 plots [RAINBOW SCHEME].  ```pythoncb.test_extreme_rainbow(nb_of_plots)```![extreme_rainbow](https://github.com/Volodia99/cblind/raw/master/imgs/extreme_rainbow.png)### solstice```pythoncolor, linestyle = cb.Coloplots().solstice(nb_of_plots)```for less than 11 plots [DIVERGING DATA]  ```pythoncb.test_solstice(nb_of_plots)```![solstice](https://github.com/Volodia99/cblind/raw/master/imgs/solstice.png)### bird```pythoncolor, linestyle = cb.Coloplots().bird(nb_of_plots)```for less than 9 plots [DIVERGING DATA]  ```pythoncb.test_bird(nb_of_plots)```![bird](https://github.com/Volodia99/cblind/raw/master/imgs/bird.png)### pregunta```pythoncolor, linestyle = cb.Coloplots().pregunta(nb_of_plots)```for less than 9 plots [DIVERGING DATA]  ```pythoncb.test_pregunta(nb_of_plots)```![pregunta](https://github.com/Volodia99/cblind/raw/master/imgs/pregunta.png)### monocolor```pythoncolor, linestyle = cb.Coloplots().monocolor(nb_of_plots, *option)```from 1 to 13 monochromatic plots [MONOCOLOR/PRINTING] with different linestyles. With option &quot;b&amp;w&quot;, &quot;blue&quot;, &quot;red&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;purple&quot;.```pythoncb.test_monocolor(nb_of_plots, *option)```![monocolor](https://github.com/Volodia99/cblind/raw/master/imgs/monocolor.png)## Usage for colormaps8 cblind palettes are available for now : &quot;cb.rbscale&quot;, &quot;cb.rainbow&quot;, &quot;cb.extreme_rainbow&quot;, &quot;cb.huescale&quot;, &quot;cb.solstice&quot;, &quot;cb.bird&quot;, &quot;cb.pregunta&quot;, &quot;cb.iris&quot;, but also all colormaps from matplotlib + &quot;\_r&quot; variants for reverse colormaps.  ```pythoncmap = cb.cbmap(palette, nbin)```The `nbin` argument is used to discretize the colormaps.  ![colormaps](https://github.com/Volodia99/cblind/raw/master/imgs/colormaps.png)To test the colormaps, you can try:```pythoncb.test_mapping(palette, nbin)```### Example with a field `data2d````pythonimport numpy as npimport matplotlib.pyplot as pltdata2d = np.repeat(np.linspace(0,1,100),20).reshape(100,20).Tfig, ax = plt.subplots()im = ax.imshow(data2d, cmap=cb.cbmap(&quot;cb.rainbow_r&quot;, nbin=10), aspect='auto')fig.colorbar(im)plt.show()```### Basic mapping function```pythoncb.mapping(fig,ax,data2d,extent,palette=palette,nbin=nbin)```**REFERENCE**  Paul Tol. 2012. &quot;Colour Schemes.&quot; SRON Technical Note, SRON/EPS/TN/09-002.  https://personal.sron.nl/~pault/data/colourschemes.pdf</longdescription>
</pkgmetadata>