<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># prefect-kubernetes&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://pypi.python.org/pypi/prefect-kubernetes/&quot; alt=&quot;PyPI version&quot;&gt;        &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/prefect-kubernetes?color=0052FF&amp;labelColor=090422&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/PrefectHQ/prefect-kubernetes/&quot; alt=&quot;Stars&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/stars/PrefectHQ/prefect-kubernetes?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypistats.org/packages/prefect-kubernetes/&quot; alt=&quot;Downloads&quot;&gt;        &lt;img src=&quot;https://img.shields.io/pypi/dm/prefect-kubernetes?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/PrefectHQ/prefect-kubernetes/pulse&quot; alt=&quot;Activity&quot;&gt;        &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/PrefectHQ/prefect-kubernetes?color=0052FF&amp;labelColor=090422&quot; /&gt;&lt;/a&gt;    &lt;br&gt;    &lt;a href=&quot;https://prefect-community.slack.com&quot; alt=&quot;Slack&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&amp;labelColor=090422&amp;logo=slack&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://discourse.prefect.io/&quot; alt=&quot;Discourse&quot;&gt;        &lt;img src=&quot;https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&amp;labelColor=090422&amp;logo=discourse&quot; /&gt;&lt;/a&gt;&lt;/p&gt;## Welcome!`prefect-kubernetes` is a collection of Prefect tasks, flows, and blocks enabling orchestration, observation and management of Kubernetes resources.Jump to [examples](#example-usage).## ResourcesFor more tips on how to use tasks and flows in a Collection, check out [Using Collections](https://docs.prefect.io/collections/usage/)!### InstallationInstall `prefect-kubernetes` with `pip`:```bash pip install prefect-kubernetes ```Requires an installation of Python 3.7+.We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.These tasks are designed to work with Prefect 2. For more information about how to use Prefect, please refer to the [Prefect documentation](https://docs.prefect.io/).Then, to register [blocks](https://docs.prefect.io/ui/blocks/) on Prefect Cloud:```bashprefect block register -m prefect_kubernetes```Note, to use the `load` method on Blocks, you must already have a block document [saved through code](https://docs.prefect.io/concepts/blocks/#saving-blocks) or [saved through the UI](https://docs.prefect.io/ui/blocks/).### Example Usage#### Use `with_options` to customize options on any existing task or flow```pythonfrom prefect_kubernetes.flows import run_namespaced_jobcustomized_run_namespaced_job = run_namespaced_job.with_options(    name=&quot;My flow running a Kubernetes Job&quot;,    retries=2,    retry_delay_seconds=10,) # this is now a new flow object that can be called```For more tips on how to use tasks and flows in a Collection, check out [Using Collections](https://docs.prefect.io/collections/usage/)!#### Specify and run a Kubernetes Job from a yaml file```pythonfrom prefect_kubernetes.credentials import KubernetesCredentialsfrom prefect_kubernetes.flows import run_namespaced_job # this is a flowfrom prefect_kubernetes.jobs import KubernetesJobk8s_creds = KubernetesCredentials.load(&quot;k8s-creds&quot;)job = KubernetesJob.from_yaml_file( # or create in the UI with a dict manifest    credentials=k8s_creds,    manifest_path=&quot;path/to/job.yaml&quot;,)job.save(&quot;my-k8s-job&quot;, overwrite=True)if __name__ == &quot;__main__&quot;:    # run the flow    run_namespaced_job(job)```#### Generate a resource-specific client from `KubernetesClusterConfig````python# with minikube / docker desktop &amp; a valid ~/.kube/config this should ~just work~from prefect.blocks.kubernetes import KubernetesClusterConfigfrom prefect_kubernetes.credentials import KubernetesCredentialsk8s_config = KubernetesClusterConfig.from_file('~/.kube/config')k8s_credentials = KubernetesCredentials(cluster_config=k8s_config)with k8s_credentials.get_client(&quot;core&quot;) as v1_core_client:    for namespace in v1_core_client.list_namespace().items:        print(namespace.metadata.name)```#### List jobs in a specific namespace```pythonfrom prefect import flowfrom prefect_kubernetes.credentials import KubernetesCredentialsfrom prefect_kubernetes.jobs import list_namespaced_job@flowdef kubernetes_orchestrator():    v1_job_list = list_namespaced_job(        kubernetes_credentials=KubernetesCredentials.load(&quot;k8s-creds&quot;),        namespace=&quot;my-namespace&quot;,    )```#### Patch an existing deployment```pythonfrom kubernetes.client.models import V1Deploymentfrom prefect import flowfrom prefect_kubernetes.credentials import KubernetesCredentialsfrom prefect_kubernetes.deployments import patch_namespaced_deploymentfrom prefect_kubernetes.utilities import convert_manifest_to_model@flowdef kubernetes_orchestrator():    v1_deployment_updates = convert_manifest_to_model(        manifest=&quot;path/to/manifest.yaml&quot;,        v1_model_name=&quot;V1Deployment&quot;,    )    v1_deployment = patch_namespaced_deployment(        kubernetes_credentials=KubernetesCredentials.load(&quot;k8s-creds&quot;),        deployment_name=&quot;my-deployment&quot;,        deployment_updates=v1_deployment_updates,        namespace=&quot;my-namespace&quot;    )```## FeedbackIf you encounter any bugs while using `prefect-kubernetes`, feel free to open an issue in the [prefect-kubernetes](https://github.com/PrefectHQ/prefect-kubernetes) repository.If you have any questions or issues while using `prefect-kubernetes`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).Feel free to star or watch [`prefect-kubernetes`](https://github.com/PrefectHQ/prefect-kubernetes) for updates too!## ContributingIf you'd like to help contribute to fix an issue or add a feature to `prefect-kubernetes`, please [propose changes through a pull request from a fork of the repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork). Here are the steps: 1. [Fork the repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo#forking-a-repository)2. [Clone the forked repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo#cloning-your-forked-repository)3. Install the repository and its dependencies:``` pip install -e &quot;.[dev]&quot;```4. Make desired changes5. Add tests6. Insert an entry to [CHANGELOG.md](https://github.com/PrefectHQ/prefect-kubernetes/blob/main/CHANGELOG.md)7. Install `pre-commit` to perform quality checks prior to commit:``` pre-commit install ```8. `git commit`, `git push`, and create a pull request</longdescription>
</pkgmetadata>