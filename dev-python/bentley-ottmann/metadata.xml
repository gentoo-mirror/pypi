<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>bentley_ottmann===============[![](https://github.com/lycantropos/bentley_ottmann/workflows/CI/badge.svg?branch=master)](https://github.com/lycantropos/bentley_ottmann/actions/workflows/ci.yml &quot;Github Actions&quot;)[![](https://readthedocs.org/projects/bentley_ottmann/badge/?version=latest)](https://bentley-ottmann.readthedocs.io/en/latest &quot;Documentation&quot;)[![](https://codecov.io/gh/lycantropos/bentley_ottmann/branch/master/graph/badge.svg)](https://codecov.io/gh/lycantropos/bentley_ottmann &quot;Codecov&quot;)[![](https://img.shields.io/github/license/lycantropos/bentley_ottmann.svg)](https://github.com/lycantropos/bentley_ottmann/blob/master/LICENSE &quot;License&quot;)[![](https://badge.fury.io/py/bentley-ottmann.svg)](https://badge.fury.io/py/bentley-ottmann &quot;PyPI&quot;)In what follows `python` is an alias for `python3.6` or `pypy3.6`or any later version (`python3.7`, `pypy3.7` and so on).Installation------------Install the latest `pip` &amp; `setuptools` packages versions```bashpython -m pip install --upgrade pip setuptools```### UserDownload and install the latest stable version from `PyPI` repository```bashpython -m pip install --upgrade bentley_ottmann```### DeveloperDownload the latest version from `GitHub` repository```bashgit clone https://github.com/lycantropos/bentley_ottmann.gitcd bentley_ottmann```Install dependencies```bashpython -m pip install -r requirements.txt```Install```bashpython setup.py install```Usage-----With segments```python&gt;&gt;&gt; from ground.base import get_context&gt;&gt;&gt; context = get_context()&gt;&gt;&gt; Point, Segment = context.point_cls, context.segment_cls&gt;&gt;&gt; unit_segments = [Segment(Point(0, 0), Point(1, 0)), ...                  Segment(Point(0, 0), Point(0, 1))]```we can check if they intersect```python&gt;&gt;&gt; from bentley_ottmann.planar import segments_intersect&gt;&gt;&gt; segments_intersect(unit_segments)True```With contours```python&gt;&gt;&gt; Contour = context.contour_cls&gt;&gt;&gt; triangle = Contour([Point(0, 0), Point(1, 0), Point(0, 1)])&gt;&gt;&gt; degenerate_triangle = Contour([Point(0, 0), Point(2, 0), Point(1, 0)])```we can check if they are self-intersecting or not```python&gt;&gt;&gt; from bentley_ottmann.planar import contour_self_intersects&gt;&gt;&gt; contour_self_intersects(triangle)False&gt;&gt;&gt; contour_self_intersects(degenerate_triangle)True```Development-----------### Bumping version#### PreparationInstall[bump2version](https://github.com/c4urself/bump2version#installation).#### Pre-releaseChoose which version number category to bump following [semverspecification](http://semver.org/).Test bumping version```bashbump2version --dry-run --verbose $CATEGORY```where `$CATEGORY` is the target version number category name, possiblevalues are `patch`/`minor`/`major`.Bump version```bashbump2version --verbose $CATEGORY```This will set version to `major.minor.patch-alpha`. #### ReleaseTest bumping version```bashbump2version --dry-run --verbose release```Bump version```bashbump2version --verbose release```This will set version to `major.minor.patch`.### Running testsInstall dependencies```bashpython -m pip install -r requirements-tests.txt```Plain```bashpytest```Inside `Docker` container:- with `CPython`  ```bash  docker-compose --file docker-compose.cpython.yml up  ```- with `PyPy`  ```bash  docker-compose --file docker-compose.pypy.yml up  ````Bash` script:- with `CPython`  ```bash  ./run-tests.sh  ```  or  ```bash  ./run-tests.sh cpython  ```- with `PyPy`  ```bash  ./run-tests.sh pypy  ````PowerShell` script:- with `CPython`  ```powershell  .\run-tests.ps1  ```  or  ```powershell  .\run-tests.ps1 cpython  ```- with `PyPy`  ```powershell  .\run-tests.ps1 pypy  ```</longdescription>
</pkgmetadata>