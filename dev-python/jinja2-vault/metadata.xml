<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Jinja2 library for loading Vault scretsThe idea behind this project is to allow dynamically loading [vault](vaultproject.io) secrets in applications like [cookiecutter](https://github.com/audreyr/cookiecutter). ## InstallationTo install just run ```pip install jinja2-vault```## Usage Add the jinja2 `secret` function like this:```j2password={% secret &quot;password&quot;, path=&quot;database&quot;, mount=&quot;app1/secret&quot; %}```As simple python code to test is: ```pythonfrom jinja2 import Environment, Templateenv = Environment(    extensions=['jinja2-vault.VaultExtension'])template = env.from_string('password={% secret &quot;password&quot;, path=&quot;database&quot;, mount=&quot;app1/secret&quot; %}')result = template.render()print(result)```Both examples load key `password` from `app1/secret/database` where `app1/secret` is the mount and `database` the path.## Setup for cookiecutterAdd the module to the cookiecutter.json.  Example: ```json {    &quot;some_var&quot;: &quot;var&quot;,    &quot;_extensions&quot;: [        &quot;jinja2-vault.VaultExtension&quot;    ]}```The further usage the same as desribed in **Usage**.## Todo[ ] Add some unit tests## BuildTo build and push the package:```python setup.py sdist``````python -m twine upload dist/*```</longdescription>
</pkgmetadata>