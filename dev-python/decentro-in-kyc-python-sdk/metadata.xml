<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># decentro-in-kyc-python-sdkKYC &amp; Onboarding- API version: 1.0.0- Package version: 4.3.0For more information, please visit [https://decentro.tech](https://decentro.tech)## Requirements.Python &gt;=3.7## Installation &amp; Usage### pip installIf the python package is hosted on a repository, you can install directly using:```shpip install decentro-in-kyc-python-sdk==4.3.0```(you may need to run `pip` with root permission: `sudo pip install decentro-in-kyc-python-sdk==4.3.0`)Then import the package:```pythonimport decentro_in_kyc_client```## Getting StartedPlease follow the [installation procedure](#installation--usage) and then run the following:```pythonfrom pprint import pprintfrom decentro_in_kyc_client import Decentrodecentro = Decentro(    # Defining the host is optional and defaults to https://in.staging.decentro.tech    # See configuration.py for a list of all supported configuration parameters.    host = &quot;https://in.staging.decentro.tech&quot;,    # Configure API key authorization: client_id    client_id = 'YOUR_API_KEY',    # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed    # api_key_prefix = {'client_id': 'Bearer'},    # Configure API key authorization: client_secret    client_secret = 'YOUR_API_KEY',    # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed    # api_key_prefix = {'client_secret': 'Bearer'},    # Configure API key authorization: module_secret    module_secret = 'YOUR_API_KEY',    # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed    # api_key_prefix = {'module_secret': 'Bearer'},)body = {        &quot;reference_id&quot;: &quot;ABCDEF12345&quot;,        &quot;consent&quot;: False,        &quot;consent_purpose&quot;: &quot;For Testing Purpose Only&quot;,        &quot;quality_parameter&quot;: &quot;all&quot;,    }try:    # Image Quality Check    check_image_quality_response = decentro.kyc.check_image_quality(        body=body    )    pprint(check_image_quality_response.body)    pprint(check_image_quality_response.body[&quot;decentroTxnId&quot;])    pprint(check_image_quality_response.body[&quot;status&quot;])    pprint(check_image_quality_response.body[&quot;responseCode&quot;])    pprint(check_image_quality_response.body[&quot;message&quot;])    pprint(check_image_quality_response.body[&quot;data&quot;])    pprint(check_image_quality_response.headers)    pprint(check_image_quality_response.status)    pprint(check_image_quality_response.round_trip_time)except ApiException as e:    print(&quot;Exception when calling KYCApi.check_image_quality: %s\n&quot; % e)    pprint(e.body)    if e.status == 400:        pprint(e.body[&quot;decentroTxnId&quot;])        pprint(e.body[&quot;status&quot;])        pprint(e.body[&quot;responseCode&quot;])        pprint(e.body[&quot;message&quot;])    pprint(e.headers)    pprint(e.status)    pprint(e.reason)    pprint(e.round_trip_time)```## Documentation for API EndpointsAll URIs are relative to *https://in.staging.decentro.tech*Class | Method | HTTP request | Description------------ | ------------- | ------------- | -------------*KYCApi* | [**check_image_quality**](docs/apis/tags/KYCApi.md#check_image_quality) | **post** /v2/kyc/forensics/image_quality | Image Quality Check*KYCApi* | [**check_photocopy**](docs/apis/tags/KYCApi.md#check_photocopy) | **post** /v2/kyc/forensics/photocopy_check | Photocopy Check*KYCApi* | [**check_video_liveness**](docs/apis/tags/KYCApi.md#check_video_liveness) | **post** /v2/kyc/forensics/video_liveness | Liveness Check*KYCApi* | [**classify_document**](docs/apis/tags/KYCApi.md#classify_document) | **post** /v2/kyc/document_classification | ID Classification*KYCApi* | [**extract_text**](docs/apis/tags/KYCApi.md#extract_text) | **post** /kyc/scan_extract/ocr | Scan &amp;amp; Extract*KYCApi* | [**mask_aadhaar_uid**](docs/apis/tags/KYCApi.md#mask_aadhaar_uid) | **post** /v2/kyc/identities/mask_aadhaar_uid | Aadhaar Masking*KYCApi* | [**match_face**](docs/apis/tags/KYCApi.md#match_face) | **post** /v2/kyc/forensics/face_match | Face Match*KYCApi* | [**validate**](docs/apis/tags/KYCApi.md#validate) | **post** /kyc/public_registry/validate | Validate## Documentation For Models - [CheckImageQuality400Response](docs/models/CheckImageQuality400Response.md) - [CheckImageQualityRequest](docs/models/CheckImageQualityRequest.md) - [CheckImageQualityResponse](docs/models/CheckImageQualityResponse.md) - [CheckPhotocopy400Response](docs/models/CheckPhotocopy400Response.md) - [CheckPhotocopyRequest](docs/models/CheckPhotocopyRequest.md) - [CheckPhotocopyResponse](docs/models/CheckPhotocopyResponse.md) - [CheckVideoLiveness400Response](docs/models/CheckVideoLiveness400Response.md) - [CheckVideoLivenessRequest](docs/models/CheckVideoLivenessRequest.md) - [CheckVideoLivenessResponse](docs/models/CheckVideoLivenessResponse.md) - [ClassifyDocument400Response](docs/models/ClassifyDocument400Response.md) - [ClassifyDocumentRequest](docs/models/ClassifyDocumentRequest.md) - [ClassifyDocumentResponse](docs/models/ClassifyDocumentResponse.md) - [ExtractText400Response](docs/models/ExtractText400Response.md) - [ExtractTextRequest](docs/models/ExtractTextRequest.md) - [ExtractTextResponse](docs/models/ExtractTextResponse.md) - [MaskAadhaarRequest](docs/models/MaskAadhaarRequest.md) - [MaskAadhaarUid400Response](docs/models/MaskAadhaarUid400Response.md) - [MaskAadhaarUidResponse](docs/models/MaskAadhaarUidResponse.md) - [MatchFace400Response](docs/models/MatchFace400Response.md) - [MatchFaceRequest](docs/models/MatchFaceRequest.md) - [MatchFaceResponse](docs/models/MatchFaceResponse.md) - [Validate400Response](docs/models/Validate400Response.md) - [ValidateRequest](docs/models/ValidateRequest.md) - [ValidateResponse](docs/models/ValidateResponse.md)## Documentation For Authorization Authentication schemes defined for the API:## client_id- **Type**: API key- **API key parameter name**: client_id- **Location**: HTTP header## client_secret- **Type**: API key- **API key parameter name**: client_secret- **Location**: HTTP header## module_secret- **Type**: API key- **API key parameter name**: module_secret- **Location**: HTTP header</longdescription>
</pkgmetadata>