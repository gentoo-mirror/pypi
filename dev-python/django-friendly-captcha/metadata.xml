<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django Friendly Captcha=======================.. image:: https://img.shields.io/pypi/v/django-friendly-captcha    :target: https://pypi.python.org/pypi/django-friendly-captcha.. image:: https://img.shields.io/pypi/dm/django-friendly-captcha    :alt: PyPI - Downloads    :target: https://pypi.python.org/pypi/django-friendly-captchaDjango field/widget for Friendly Captcha (https://friendlycaptcha.com).Installation------------Latest version:    pip install -e git+git://github.com/christianwgd/django-friendly-captcha.git#egg=django-friendly-captchaStable version:    pip install django-friendly-captchaDocumentation-------------Usage#####Add 'friendly_captcha' to your INSTALLED_APPS... code-block::    INSTALLED_APPS = [        ...        'friendly_captcha',    ]Add the captcha field to your form:.. code-block::    from friendly_captcha.fields import FrcCaptchaField    class ContactForm(forms.ModelForm):        class Meta:            model = ContactMessage            fields = (                'name', 'email', 'subject', 'text'            )        captcha = FrcCaptchaField()As of version 0.1.7 the javascript static assets are included inthe widget, so there is no need to do that in your project templates.Version 0.1.7 includes friendly captcha version 0.9.11 javascript files.If you need a different version you can set these by providingthem in your settings:.. code-block::    FRC_WIDGET_MODULE_JS = 'https://unpkg.com/friendly-challenge@0.9.8/widget.module.min.js'    FRC_WIDGET_JS = 'https://unpkg.com/friendly-challenge@0.9.8/widget.min.js'For version 0.1.6 and below you need to include the script tags fromFriendly Captcha to your forms template(see https://docs.friendlycaptcha.com/#/installation).. code-block::    &lt;script type=&quot;module&quot; src=&quot;https://unpkg.com/friendly-challenge@0.9.8/widget.module.min.js&quot; async defer&gt;&lt;/script&gt;    &lt;script nomodule src=&quot;https://unpkg.com/friendly-challenge@0.9.8/widget.min.js&quot; async defer&gt;&lt;/script&gt;If you build up your form from single fields, dont't forget to includethe captcha form field.Configuration#############Register to Friendly Captcha at https://friendlycaptcha.com/signup to get yoursitekey and captcha secret... code-block::    FRC_CAPTCHA_SECRET = '&lt;yourCaptchaSecret'    FRC_CAPTCHA_SITE_KEY = '&lt;yourCaptchaSiteKey&gt;'.. code-block::    FRC_CAPTCHA_VERIFICATION_URL = 'https://api.friendlycaptcha.com/api/v1/siteverify'In default the form will fail with an error ('Captcha test failed'). You can changethis behaviour by setting FRC_CAPTCHA_FAIL_SILENT to True... code-block::    FRC_CAPTCHA_FAIL_SILENT = FalseWhen setting FAIL_SILENT to True it's up to you to handle captcha verification:.. code-block::    # in your form view    def form_valid(self, form):        captcha_verified = form.cleaned_data['captcha']        if captcha_verified:            # send mail or whatever ...        else:            # captcha verification failed, do nothing ...Custom widget attributes########################You can add custom widget attrs to the FrcCaptchaField like in any otherDjango field:.. code-block::    captcha = FrcCaptchaField(widget=FrcCaptchaWidget(attrs={'data-start': 'auto'}))See https://docs.friendlycaptcha.com/#/widget_api for additional widget attrs.The data-lang attr is set from your Django configured language.Logging#######If you want to log the results of the captcha verifications you canadd a logger to your logging configuration:.. code-block::    'django.friendly_captcha': {        'handlers': ['default'],        'level': 'INFO',    }</longdescription>
</pkgmetadata>