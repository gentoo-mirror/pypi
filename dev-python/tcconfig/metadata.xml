<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. contents:: **tcconfig**   :backlinks: top   :depth: 2Summary=========`tcconfig &lt;https://github.com/thombashi/tcconfig&gt;`__ is a tc command wrapper. Make it easy to set up traffic control of network bandwidth/latency/packet-loss/packet-corruption/etc. to a network-interface/Docker-container(veth)... image:: https://badge.fury.io/py/tcconfig.svg    :target: https://badge.fury.io/py/tcconfig    :alt: PyPI package version.. image:: https://img.shields.io/pypi/pyversions/tcconfig.svg    :target: https://pypi.org/project/tcconfig    :alt: Supported Python versions.. image:: https://github.com/thombashi/tcconfig/actions/workflows/tests.yml/badge.svg    :target: https://github.com/thombashi/tcconfig/actions/workflows/tests.yml    :alt: Test CI status.. image:: https://github.com/thombashi/tcconfig/actions/workflows/build_and_release.yml/badge.svg   :target: https://github.com/thombashi/tcconfig/actions/workflows/build_and_release.yml   :alt: Build CI statusTraffic control------------------------Setup traffic shaping rules^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Easy to apply traffic shaping rules to specific network:- Outgoing/Incoming packets- Source/Destination IP-address/network (IPv4/IPv6)- Source/Destination portsAvailable parameters^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^The following parameters can be set to network interfaces:- Network bandwidth rate ``[G/M/K bps]``- Network latency ``[microseconds/milliseconds/seconds/minutes]``- Packet loss rate ``[%]``- Packet corruption rate ``[%]``- Packet duplicate rate ``[%]``- Packet reordering rate  ``[%]``Targets^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- Network interfaces: e.g. ``eth0``- Docker container (``veth`` corresponding with a container).. image:: docs/gif/tcset_example.gifUsage=======Set traffic control (``tcset`` command)-----------------------------------------``tcset`` is a command to add traffic control rule to a network interface (device).e.g. Set a limit on bandwidth up to 100Kbps^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: console    # tcset eth0 --rate 100Kbpse.g. Set network latency^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^You can use time units (such as us/sec/min/etc.) to designate delay time.Set 100 milliseconds network latency'''''''''''''''''''''''''''''''''''''''''''''''''''.. code-block:: console    # tcset eth0 --delay 100msSet 10 seconds network latency'''''''''''''''''''''''''''''''''''''''''''''''''''.. code-block:: console    # tcset eth0 --delay 10secSet 0.5 minutes (30 seconds) network latency'''''''''''''''''''''''''''''''''''''''''''''''''''.. code-block:: console    # tcset eth0 --delay 0.5minYou can also use the following time units:.. table::    +------------+----------------------------------------------------------+    |    Unit    |                Available specifiers (str)                |    +============+==========================================================+    |hours       |``h``/``hour``/``hours``                                  |    +------------+----------------------------------------------------------+    |minutes     |``m``/``min``/``mins``/``minute``/``minutes``             |    +------------+----------------------------------------------------------+    |seconds     |``s``/``sec``/``secs``/``second``/``seconds``             |    +------------+----------------------------------------------------------+    |milliseconds|``ms``/``msec``/``msecs``/``millisecond``/``milliseconds``|    +------------+----------------------------------------------------------+    |microseconds|``us``/``usec``/``usecs``/``microsecond``/``microseconds``|    +------------+----------------------------------------------------------+e.g. Set 0.1% packet loss^^^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: console    # tcset eth0 --loss 0.1%e.g. All of the above settings at once^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: console    # tcset eth0 --rate 100Kbps --delay 100ms --loss 0.1%e.g. Specify the IP address of traffic control^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: console    # tcset eth0 --delay 100ms --network 192.168.0.10e.g. Specify the IP network and port of traffic control^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: console    # tcset eth0 --delay 100ms --network 192.168.0.0/24 --port 80Set traffic control to a docker container^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Execute ``tcconfig`` with ``--docker`` option on a Docker host:.. code-block:: console    # tcset &lt;container name or ID&gt; --docker ...You could use ``--src-container``/``--dst-container`` options to specify source/destination container.Set traffic control within a docker container^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^You need to run a container with ``--cap-add NET_ADMIN`` optionif you you would like to set a tc rule within a container:.. code-block:: console    docker run -d --cap-add NET_ADMIN -t &lt;docker image&gt;A container image that builtin tcconfig can be available at https://hub.docker.com/r/thombashi/tcconfig/Delete traffic control (``tcdel`` command)------------------------------------------``tcdel`` is a command to delete traffic shaping rules from a network interface (device).e.g. Delete traffic control of ``eth0``^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^You can delete all of the shaping rules for the ``eth0`` with ``-a``/``--all`` option:.. code-block:: console    # tcdel eth0 --allDisplay traffic control configurations (``tcshow`` command)-----------------------------------------------------------``tcshow`` is a command to display the current traffic control settings for network interface(s).Example^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^.. code-block:: console    # tcset eth0 --delay 10ms --delay-distro 2  --loss 0.01% --rate 0.25Mbps --network 192.168.0.10 --port 8080    # tcset eth0 --delay 1ms --loss 0.02% --rate 500Kbps --direction incoming    # tcshow eth0    {        &quot;eth0&quot;: {            &quot;outgoing&quot;: {                &quot;dst-network=192.168.0.10/32, dst-port=8080, protocol=ip&quot;: {                    &quot;filter_id&quot;: &quot;800::800&quot;,                    &quot;delay&quot;: &quot;10.0ms&quot;,                    &quot;delay-distro&quot;: &quot;2.0ms&quot;,                    &quot;loss&quot;: &quot;0.01%&quot;,                    &quot;rate&quot;: &quot;250Kbps&quot;                }            },            &quot;incoming&quot;: {                &quot;protocol=ip&quot;: {                    &quot;filter_id&quot;: &quot;800::800&quot;,                    &quot;delay&quot;: &quot;1.0ms&quot;,                    &quot;loss&quot;: &quot;0.02%&quot;,                    &quot;rate&quot;: &quot;500Kbps&quot;                }            }        }    }For more information----------------------More examples are available at https://tcconfig.rtfd.io/en/latest/pages/usage/index.htmlInstallation============Installation: pip------------------------------``tcconfig`` can be installed from `PyPI &lt;https://pypi.python.org/pypi&gt;`__ via`pip &lt;https://pip.pypa.io/en/stable/installing/&gt;`__ (Python package manager) command... code:: console    sudo pip install tcconfigInstallation: dpkg (Debian/Ubuntu)--------------------------------------------.. code:: console    curl -sSL https://raw.githubusercontent.com/thombashi/tcconfig/master/scripts/installer.sh | sudo bashDependencies============- Python 3.6+- `Python package dependencies (automatically installed) &lt;https://github.com/thombashi/tcconfig/network/dependencies&gt;`__Linux packages--------------- mandatory: required for ``tc`` command:    - `Ubuntu`/`Debian`: ``iproute2``    - `Fedora`/`RHEL`: ``iproute-tc``- optional: required to when you use ``--iptables`` option:    - ``iptables``Linux kernel module----------------------------- ``sch_netem``Optional Python packages----------------------------- `Pygments &lt;http://pygments.org/&gt;`__Documentation===============https://tcconfig.rtfd.io/Troubleshooting=================https://tcconfig.rtfd.io/en/latest/pages/troubleshooting.htmlDocker image==============https://hub.docker.com/r/thombashi/tcconfig/Sponsors====================================.. image:: https://avatars.githubusercontent.com/u/44389260?s=48&amp;u=6da7176e51ae2654bcfd22564772ef8a3bb22318&amp;v=4   :target: https://github.com/chasbecker   :alt: Charles Becker (chasbecker).. image:: https://avatars.githubusercontent.com/u/46711571?s=48&amp;u=57687c0e02d5d6e8eeaf9177f7b7af4c9f275eb5&amp;v=4   :target: https://github.com/Arturi0   :alt: onetime: Arturi0.. image:: https://avatars.githubusercontent.com/u/3658062?s=48&amp;v=4   :target: https://github.com/b4tman   :alt: onetime: Dmitry Belyaev (b4tman)`Become a sponsor &lt;https://github.com/sponsors/thombashi&gt;`__</longdescription>
</pkgmetadata>