<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># assemblyai![](https://img.shields.io/badge/Python-2.7%2C%203.5%2C%203.6-blue.svg)[![](https://img.shields.io/pypi/v/assemblyai.svg)](https://pypi.org/project/assemblyai/)[![](https://img.shields.io/travis/AssemblyAI/assemblyai-python-sdk.svg)](https://travis-ci.org/AssemblyAI/assemblyai-python-sdk/builds)[![](https://pyup.io/repos/github/AssemblyAI/assemblyai-python-sdk/shield.svg)](https://pyup.io/repos/github/AssemblyAI/assemblyai-python-sdk)[![](https://codecov.io/gh/AssemblyAI/assemblyai-python-sdk/branch/master/graph/badge.svg)](https://codecov.io/gh/AssemblyAI/assemblyai-python-sdk)[![](https://api.codeclimate.com/v1/badges/a4fbbc5b564389549af7/maintainability)](https://codeclimate.com/repos/5afb734416a00d6f410000a9/maintainability)[![](https://img.shields.io/badge/Slack-community-71D4DF.svg)](https://docs.assemblyai.com/help/#slack)&lt;!-- [![](https://readthedocs.org/projects/assemblyai-python-sdk/badge/?version=latest)](https://readthedocs.org/projects/assemblyai-python-sdk) --&gt;Integrate the AssemblyAI API to accurately recognize speech in your application.You can also train custom models to more accurately recognize speech in your application, and expand vocabulary with custom words like product/person names.Documentation:- https://docs.assemblyai.com- https://assemblyai-python-sdk.readthedocs.ioSlack community: https://docs.assemblyai.com/help/#slackIssues: https://github.com/assemblyai/assemblyai-python-sdk## Getting startedFirst, [get an API token](https://www.assemblyai.com/), and then pip install the SDK.```shellpip install assemblyai```## QuickstartStart transcribing:```pythonimport assemblyaiaai = assemblyai.Client(token='your-secret-api-token')transcript = aai.transcribe(filename='/path/to/example.wav')```Get the completed transcript. Transcripts take about half the duration of theaudio to complete.```pythonwhile transcript.status != 'completed':    transcript = transcript.get()text = transcript.text```Instead of a local file, you can also specify a url for the audio file:```pythontranscript = aai.transcribe(audio_url='https://example.com/example.wav')```## Custom modelsThe quickstart example transcribes audio using our default model. In order to boostaccuracy and recognize custom words, you can create a custom model. You can read moreabout how custom model work [in the docs](https://docs.assemblyai.com/guides/custom_models_101/).Create a custom model.```pythonimport assemblyaiaai = assemblyai.Client(token='your-secret-api-token')# boost accuracy for keywords/phrases, and add custom words# to the vocabularyphrases = [&quot;foobar&quot;, &quot;Dirk Gently&quot;, &quot;electric monk&quot;, &quot;yourLingoHere&quot;,           &quot;perhaps a common phrase here&quot;, &quot;and a common response&quot;]model = aai.train(phrases)```Check to see that the model has finished training -- models take about sixminutes to complete.```Pythonwhile model.status != 'trained':    model = model.get()```Reference the model when creating a transcript.```pythontranscript = aai.transcribe(filename='/path/to/example.wav', model=model)```## Transcribing stereo audio with two speakers on different channelsFor stereo audio with two speakers on separate channels, you can leverageenhanced accuracy and formatting by setting speak_count to 2.```pythontranscript = aai.transcribe('example.wav', speaker_count=2)```## Transcribing without formatted textTo receive transcript text without formatting or punctuation, set the optionformat_text to False (default is True).```pythontranscript = aai.transcribe('example.wav', format_text=False)```## Model and Transcript attributesPrior models and transcripts can be called by ID.```pythonmodel = aai.model.get(id=&lt;id&gt;)transcript = aai.transcript.get(id=&lt;id&gt;)```To inspect additional attributes, use `props()`:```Pythonmodel.props()&gt;&gt;&gt; ['headers',&gt;&gt;&gt;  'id',&gt;&gt;&gt;  'status',&gt;&gt;&gt;  'name',&gt;&gt;&gt;  'phrases',&gt;&gt;&gt;  'warning',&gt;&gt;&gt;  'dict']transcript.props()&gt;&gt;&gt; ['headers',&gt;&gt;&gt;  'id',&gt;&gt;&gt;  'audio_url',&gt;&gt;&gt;  'model',&gt;&gt;&gt;  'status',&gt;&gt;&gt;  'warning',&gt;&gt;&gt;  'text',&gt;&gt;&gt;  'confidence',&gt;&gt;&gt;  'segments',&gt;&gt;&gt;  'speaker_count',&gt;&gt;&gt;  'dict']```The `dict` attribute contains the raw API response:```Pythonmodel.dicttranscript.dict```For additional background on the raw API response, see: [https://docs.assemblyai.com](https://docs.assemblyai.com)## TroubleshootingEnable verbose logging by enabling the Client debug option:```Pythonimport assemblyaiaai = assemblyai.Client(debug=True)```More options to get unstuck:- Create an [Issue](https://github.com/AssemblyAI/assemblyai-python-sdk/issues)- Join us on [Slack](https://docs.assemblyai.com/help/#slacksupport)- Send us an [email](mailto:support@assemblyai.com)## DevelopmentInstall dev requirements, install from source and run tests.```shellpip install -r requirements_dev.txtpython setup.py installtox```## ContributingBug reports and pull requests welcome.## Release notes**0.2.6** - Bug fixes, logging improvements, and cleanup</longdescription>
</pkgmetadata>