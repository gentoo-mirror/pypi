<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>******pycraf******- *Version:* 2.0.1- *Authors:* Benjamin Winkel, Marta Bautista, Federico Di Vruno,  Gyula I. G. JÃ³zsa- *User manual:* `stable &lt;https://bwinkel.github.io/pycraf/&gt;`__ |  `developer &lt;https://bwinkel.github.io/pycraf/latest/&gt;`__.. image:: https://img.shields.io/pypi/v/pycraf.svg    :target: https://pypi.python.org/pypi/pycraf    :alt: PyPI tag.. image:: https://img.shields.io/badge/license-GPL-blue.svg    :target: https://www.github.com/bwinkel/pycraf/blob/master/COPYING    :alt: License.. image:: https://zenodo.org/badge/doi/10.5281/zenodo.1244192.svg    :target: https://doi.org/10.5281/zenodo.1244192    :alt: Zenodo DOIThe pycraf Python package provides functions and procedures forvarious tasks in spectrum-management compatibility studies. A typical examplewould be to calculate the interference levels at a radio telescope producedfrom a radio broadcasting tower.Releases are `registered on PyPI &lt;http://pypi.python.org/pypi/pycraf&gt;`_,and development is occurring at the`project's github page &lt;http://github.com/bwinkel/pycraf/&gt;`_.Project Status==============.. image:: https://dev.azure.com/bwinkel78/Benjamin-Winkel-Projects/_apis/build/status/bwinkel.pycraf?repoName=bwinkel%2Fpycraf&amp;branchName=master    :target: https://dev.azure.com/bwinkel78/Benjamin-Winkel-Projects/_build?definitionId=2    :alt: Pycrafs's CI Status on Azure PipelinesFeatures========- Full implementation of `ITU-R Rec. P.452-16 &lt;https://www.itu.int/rec/R-REC-P.452-16-201507-I/en&gt;`_ that allows to calculate path  attenuation for the distance between interferer and victim service. Supports  to load NASA's `Shuttle Radar Topography Mission (SRTM) &lt;https://www2.jpl.nasa.gov/srtm/&gt;`_ data for height-profile generation.- Full implementation of `ITU-R Rec. P.676-10 &lt;https://www.itu.int/rec/R-REC-P.676-10-201309-S/en&gt;`_, which provides two atmospheric  models to calculate the attenuation for paths through Earth's atmosphere.- Provides various antenna patterns necessary for compatibility studies (e.g.,  RAS, IMT, fixed-service links).- Functions to convert power flux densities, field strengths, transmitted and  received powers at certain distances and frequencies into each other.Usage=====Examples and Documentation--------------------------We provide `an online documentation and API reference &lt;https://bwinkel.github.io/pycraf/&gt;`_. Furthermore, you can find tutorials and HowTos inthe `notebooks &lt;http://nbviewer.jupyter.org/github/bwinkel/pycraf/blob/master/notebooks/&gt;`_directory on the pycraf repository.Testing-------After installation (see below) you can test, if everything works as intended::    import pycraf    pycraf.test()By default, the `test` function will skip over tests that requiredata from the internet. One can include them by::    pycraf.test(remote_data='any')This will *always* download SRTM data (few tiles only) to test theauto-download functionality! Do this only, if you can afford the networktraffic.License=======Several licenses apply; see the `license directory &lt;https://github.com/bwinkel/pycraf/blob/master/licenses/&gt;`_ in the repository. The pycraf Python packageitself is published under `GPL v3 &lt;https://github.com/bwinkel/pycraf/blob/master/licenses/COPYING&gt;`_, an open-source license.For some of the functionality provided in pycraf, data files provided by theITU are necessary. For example, the atmospheric model in the *pycraf.atm*subpackage implements the algorithm described in `ITU-R Recommendation P.676 &lt;https://www.itu.int/rec/R-REC-P.676-10-201309-S/en&gt;`_.Annex 1 of this Recommendation makes use of spectroscopic information of theoxygen and water vapour lines given in Tables 1 and 2 of P.676. Anotherexample are the radiometeorological data files that are distributed alongside`ITU-R Rec. P.452-16 &lt;https://www.itu.int/rec/R-REC-P.452-16-201507-I/en&gt;`_ITU kindly gave us permission to include data files into pycraf that aredistributed with the Recommendations on the ITU servers. This makes it possibleto just use pycraf without the need to manually download necessary data files.However, these data files are not free for commercial use. For details, pleasesee the `LICENSE.ITU &lt;https://www.github.com/bwinkel/pycraf/blob/master/licenses/LICENSE.ITU&gt;`_ file.Some of the examples/images in the pycraf documentation and tutorial notebooksmake use of `Copernicus &lt;https://www.copernicus.eu/en&gt;`_ data. For these, theconditions in `COPERNICUS.EU &lt;https://www.github.com/bwinkel/pycraf/blob/master/COPERNICUS.EU&gt;`_ apply.Since pycraf uses the `Astropy Package Template &lt;https://github.com/astropy/package-template&gt;`_ for packaging, we also refer to the associated  `license &lt;https://github.com/bwinkel/pycraf/blob/master/licenses/LICENSE_ASTROPY_PACKAGE_TEMPLATE.rst&gt;`_.Installation============We strongly recommend to use the `Anaconda Python distribution&lt;https://www.anaconda.com/distribution/&gt;`_, as it allows to download `pycraf`binaries for all major platforms (Linux, OSX, Windows). After installingAnaconda/Miniconda, one can use the `conda` package manager to install it::    conda install pycraf -c conda-forgeOf course, it is always a good idea to do this in its own environment, suchthat you don't mess up with your standard environment, e.g.::    conda create -n pycraf-env python=3.9 pycrafIf you don't like Anaconda, the easiest way to install pycraf is via pip::    pip install pycrafThe installation is also possible from source. Download the tar.gz-file,extract (or clone from GitHub) and simply execute::    python -m pip install .Dependencies------------We kept the dependencies as minimal as possible. The following packages arerequired:* Python 3.8 or later* setuptools* cython 0.29 or later* numpy 1.18 or later* astropy 4.0 or later* scipy 1.7 or later* pytest 5.4 or later* pytest-remotedata 0.3.3 or laterThe following packages are optional, and you will need them for certainfeatures and to build the docs:* h5py 3.3 or later; for caching* matplotlib 3.4 or later; for some plot helpers* pyproj 2.6 or later; for the `geospatial` subpackage* sgp4 2.0 or later; for the `satellite` subpackage* rasterio 1.2 or later; for the `satellite` subpackageFor further details, we refer to the online documention `installationinstructions &lt;https://bwinkel.github.io/pycraf/install.html&gt;`_. It alsoincludes some hints for running pycraf on Windows or MacOS. Older versionsof the packages may work, but no support will be provided.SRTM data---------To make full use of the path attenuation calculations provided by pycraf(implements `ITU-R Rec. P.452 &lt;https://www.itu.int/rec/R-REC-P.452-16-201507-I/en&gt;`_), we recommend to use NASA's`Shuttle Radar Topography Mission (SRTM) &lt;https://www2.jpl.nasa.gov/srtm/&gt;`_data for height-profile generation. pycraf can work with so-called *.hgt*files, a very simple binary format. Each *.hgt* file, a so-called tile, justcontains 1201x1201 16-bit integers. From the file naming scheme, one can inferthe associated coordinates. Most tiles contain one square-degree.Unfortunately, we cannot provide SRTM data as part of the package, due to thelarge file sizes and legal reasons. But once you downloaded the necessarytiles (all or only a subset appropriate for your region), simply define theenvironment variable *SRTMDATA*, let it point to the folder containing thetiles, and pycraf will find the files when it is imported from Python.On windows::    set SRTMDATA=C:\[path-to-srtm]\On Linux/MacOS (sh-like)::    export SRTMDATA=[path-to-srtm]/There is also the possibility to change the path to the SRTM directory duringrun-time (see documentation).Acknowledgments===============We are very grateful for the kind support from ITU study groups and ITU'slegal department.This code is makes use of the excellent work provided by the`Astropy &lt;http://www.astropy.org/&gt;`_ community. pycraf uses the Astropy package and also the`Astropy Package Template &lt;https://github.com/astropy/package-template&gt;`_for the packaging.Who do I talk to?=================If you encounter any problems or have questions, do not hesitate to raise anissue or make a pull request. Moreover, you can contact the devs directly:- *bwinkel@mpifr.de*</longdescription>
</pkgmetadata>