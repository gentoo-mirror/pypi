<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mip-cvxpy  [![PyPI](https://img.shields.io/pypi/v/mip-cvxpy.svg)](https://pypi.org/project/mip-cvxpy/) | [![Test](https://github.com/jurasofish/mip_cvxpy/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/jurasofish/mip_cvxpy/actions/workflows/test.yml)This package allows you to solve [CVXPY](https://github.com/cvxgrp/cvxpy)problems using the [python-mip](https://github.com/coin-or/python-mip)package as a backend solver. It works for mixed integer linear problems.This allows you to use CBC from CVXPY without needing to manually installCBC. By default, CVXOPT calls [CyLP](https://github.com/coin-or/CyLP)to use CBC and requires CBC to be manually installed. python-mip, onthe other hand, comes with CBC bundled through pypi.This package is based heavily off the [CyLP/CBC interface](https://github.com/cvxgrp/cvxpy/blob/master/cvxpy/reductions/solvers/conic_solvers/cbc_conif.py)and is slower: on smaller problems mip_cvxpy interface takes perhaps 1.3x as longas CyLP, and on larger problems perhaps 5x as long (see the benchmark in thetest suite). CyLP has a significant advantage in natively supporting sparse matrices and vectorisation.## InstallationInstall from pypi```pip install mip_cvxpy```## UsageUse as a [custom solver](https://www.cvxpy.org/tutorial/advanced/index.html#custom-solvers)```pythonimport numpy as npimport cvxpy as cpfrom mip_cvxpy import PYTHON_MIPn = int(1e3)vars = cp.Variable(n, integer=True)objective = cp.Maximize(cp.sum(vars))constraints = [    vars[0] == 1,    vars &lt;= np.linspace(10, n + 10, num=n),]problem = cp.Problem(objective, constraints)optimal_value = problem.solve(solver=PYTHON_MIP())print(problem.status)```#### Additional solver optionsYou can pass additional solver options like```pythonoptimal_value = problem.solve(solver=solver, max_seconds=10, other_option=7)```This is equivalent to ```pythonimport mipm = mip.Model()m.max_seconds=10m.other_option=7...```</longdescription>
</pkgmetadata>