<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ambient-archiverDownload and analyse your data from ambientweather.net## Installation    pip install ambient-archiverThis installs `ambient` in your PATH.## Usage`ambient` takes three required options: `--api_key`, `--application_key` and`--mac`, which you can get from your [account page onambientweather.net](https://ambientweather.net/account). You can omit theoptions by setting `AMBIENT_API_KEY` `AMBIENT_APPLICATION_KEY` and `AMBIENT_MAC`in your environment.See `ambient --help` for more.### Commands - `ambient backfill` writes all data from 2020-01-01 to the end of the last   UTC day into YYYY-MM-DD.json.gz files in the present working directory (one   file per day) - `ambient today` overwrites &lt;today&gt;.json.gz with all data since 00:00 UTC - `ambient yesterday` overwrites &lt;yesterday&gt;.json.gz with all data between   00:00 UTC yesterday and 23:59 UTC yesterday.`backfill` does not overwrite files. You must manually delete them ifyou want fresh copies for some reason. `today` and `yesterday` overwrite.### Shell completionYou can optionally enable shell completion by running the appropriate commandfor your shell:```basheval &quot;$(_AMBIENT_COMPLETE=bash_source ambient)&quot; &gt;&gt; ~/.bashrc # basheval &quot;$(_AMBIENT_COMPLETE=zsh_source ambient)&quot; &gt;&gt; ~/.zshrc  # zsh_AMBIENT_COMPLETE=fish_source foo-bar &gt; ~/.config/fish/completions/ambient.fish  # fish```## Automation with Github Actions1. Create a new repository, run `ambient backfill` then check everything in2. Add these files in `.github/workflows/`   &lt;details&gt;   &lt;summary&gt;&lt;code&gt;.github/workflows/ambient.yml&lt;/code&gt; (&lt;code&gt;ambient today&lt;/code&gt;   every five minutes)&lt;/summary&gt;        name: ambient        on:          workflow_dispatch:          # every 5 minutes          schedule:            - cron:  '*/5 * * * *'        jobs:          ambient:            runs-on: ubuntu-latest            steps:            - name: Check out repo              uses: actions/checkout@v3            - name: Set up Python              uses: actions/setup-python@v4              with:                python-version: 3.10            - name: Install Python dependencies              run: |                pip install ambient-archiver            - name: Overwrite since midnight              env:                AMBIENT_MAC: ${{ secrets.AMBIENT_MAC }}                AMBIENT_API_KEY: ${{ secrets.AMBIENT_API_KEY }}                AMBIENT_APPLICATION_KEY: ${{ secrets.AMBIENT_APPLICATION_KEY }}              run: ambient today            - name: Commit and push if it changed              run: |-                git config --global user.name &quot;scraper-bot&quot;                git config user.email &quot;actions@users.noreply.github.com&quot;                git add -A                timestamp=$(date -u)                git commit -m &quot;Scraped at ${timestamp}&quot; || exit 0                git push   &lt;/details&gt;   &lt;details&gt;   &lt;summary&gt;&lt;code&gt;.github/workflows/daily.yml&lt;/code&gt; (&lt;code&gt;ambient yesterday&lt;/code&gt;   every day at 01:00 UTC)&lt;/summary&gt;        name: daily        on:          workflow_dispatch:          # daily, 1am UTC          schedule:            - cron:  '0 1 * * *'        jobs:          daily:            runs-on: ubuntu-latest            steps:            - name: Check out repo              uses: actions/checkout@v3            - name: Set up Python              uses: actions/setup-python@v4              with:                python-version: 3.10            - name: Install Python dependencies              run: |                pip install ambient-archiver            - name: Overwrite yesterday              env:                AMBIENT_MAC: ${{ secrets.AMBIENT_MAC }}                AMBIENT_API_KEY: ${{ secrets.AMBIENT_API_KEY }}                AMBIENT_APPLICATION_KEY: ${{ secrets.AMBIENT_APPLICATION_KEY }}              run: ambient-oy            - name: Commit and push if it changed              run: |-                git config --global user.name &quot;scraper-bot&quot;                git config user.email &quot;actions@users.noreply.github.com&quot;                git add -A                timestamp=$(date -u)                git commit -m &quot;Downloaded at at ${timestamp}&quot; || exit 0                git push   &lt;/details&gt;   The daily workflow deals with the fact that the more regular job does not   in practice run every five minutes. It ensures the completed file for that   day has the last few records for the day.3. Push to GitHub4. Configure `AMBIENT_MAC`, `AMBIENT_API_KEY` and `AMBIENT_APPLICATION_KEY` as   Secrets in the GitHub settings for that repository</longdescription>
</pkgmetadata>