<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Vespa for Data Scientists================&lt;!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --&gt;![](https://vespa.ai/assets/vespa-logo-color.png)## MotivationThis library contains application specific code related to datamanipulation and analysis of different Vespa use cases. The [Vespapython API](https://pyvespa.readthedocs.io/) is used to interact withVespa applications from python for faster exploration.The main goal of this space is to facilitate prototyping andexperimentation for data scientists. Please visit Vespa [sampleapps](https://github.com/vespa-engine/sample-apps/) forproducuction-ready use cases and [Vespa docs](https://docs.vespa.ai/)for in-depth Vespa documentation.## InstallCode to support and reproduce the usecases documented here can be foundin the `learntorank` library.Install via PyPI:`pip install learntorank`## DevelopmentAll the code and content of this repo is created using[nbdev](https://nbdev.fast.ai/) by editting notebooks. We will give asummary below about the main points required to contribute, but wesuggest going through [nbdevtutorials](https://nbdev.fast.ai/tutorials/tutorial.html) to learn more.### Setting up environment1.  Create and activate a virtual environment of your choice. We    recommend [pipenv](https://github.com/pypa/pipenv).    ``` bash    pipenv shell    ```2.  Install Jupyter Lab (or Jupyter Notebook if you prefer).    ``` bash    pip3 install jupyterlab    ```3.  Create a new kernel for Jupyter that uses the virtual environment    created at step 1.    -   Check where the current list of kernels is located with        `jupyter kernelspec list`.    -   Copy one of the existing folder and rename it to `learntorank`.    -   Modify the `kernel.json` file that is inside the new folder to        reflect the `python3`executable associated with your virtual        env.4.  Install `nbdev` library:    ``` bash    pip3 install nbdev    ```5.  Install `learntorank` in development mode:    ``` bash    pip3 install -e .[dev]    ```### Most used nbdev commandsFrom your terminal:-   `nbdev_help`: List all nbdev commands available.-   `nbdev_readme`: Update `README.md` based on `index.ipynb`-   Preview documentation while editing the notebooks:    -   `nbdev_preview --port 3000`-   Workflow before pushing code:    -   `nbdev_test --n_workers 2`: Execute all the tests inside        notebooks.        -   Tests can run in parallel but since we create Docker            containers we suggest a low number of workers to preserve            memory.    -   `nbdev_export`: Export code from notebooks to the python        library.    -   `nbdev_clean`: Clean notebooks to avoid merge conflicts.-   Publish library    -   `nbdev_bump_version`: Bump library version.    -   `nbdev_pypi`: Publish library to PyPI.</longdescription>
</pkgmetadata>