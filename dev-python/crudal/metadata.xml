<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CRUDALReady to use CRUD methods for SQLAlchemy models. Both *Sync* and *Async*```pip install crudal```# Examples## Sync### Model initialization```pythonfrom crudal import DeclarativeCrudBasefrom sqlalchemy import Integer, String, create_enginefrom sqlalchemy.orm import Mapped, mapped_column, sessionmakerengine = create_engine(&quot;sqlite://&quot;)SessionLocal = sessionmaker(engine, expire_on_commit=False)class User(DeclarativeCrudBase):    __tablename__ = &quot;person&quot;    __session__ = sessionmaker(engine, expire_on_commit=False)    id: Mapped[int] = mapped_column(Integer, primary_key=True)    name: Mapped[str] = mapped_column(String, nullable=False)DeclarativeCrudBase.metadata.create_all(bind=engine)```### Add new item```pythonuser = User(name=&quot;Andrew&quot;)user.add()```### Find itemFind all users with name equals *Andrew*```pythonusers_found = User.find(name=&quot;Andrew&quot;)for u in users_found:    assert u.name == &quot;Andrew&quot;```### Update itemChange name of all users with name *Andrew* to *John*```pythonUser.update(session=session, values=dict(name=&quot;John&quot;), name=&quot;Andrew&quot;)```### Delete item```pythonUser.delete(name=&quot;John&quot;)```## Async```pythonfrom crudal import DeclarativeCrudBaseAsyncfrom sqlalchemy import Integer, String, create_enginefrom sqlalchemy.orm import Mapped, Session, mapped_columnclass User(DeclarativeCrudBaseAsync):    __tablename__ = &quot;person&quot;    id: Mapped[int] = mapped_column(Integer, primary_key=True)    name: Mapped[str] = mapped_column(String, nullable=False)```## Find```pythonwith Session(bind=engine) as session:    p = User(name=&quot;Andrew&quot;)    p.add(session=session)    p2 = User(name=&quot;Bob&quot;)    p2.add(session=session)    # find person with name &quot;Andrew&quot;    andrew = User.find(session=session, name=&quot;Andrew&quot;)    all_users = User.all(session=session)    for u in all_users:      print(u.name)```###</longdescription>
</pkgmetadata>