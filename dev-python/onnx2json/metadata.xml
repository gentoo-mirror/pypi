<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># onnx2jsonExports the ONNX file to a JSON file and JSON dict. Click here for **[json2onnx](https://github.com/PINTO0309/json2onnx)**.https://github.com/PINTO0309/simple-onnx-processing-tools[![PyPI - Downloads](https://img.shields.io/pypi/dm/onnx2json?color=2BAF2B&amp;label=Downloads%EF%BC%8FInstalled)](https://pypistats.org/packages/onnx2json) ![GitHub](https://img.shields.io/github/license/PINTO0309/onnx2json?color=2BAF2B) [![PyPI](https://img.shields.io/pypi/v/onnx2json?color=2BAF2B)](https://pypi.org/project/onnx2json/)&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://user-images.githubusercontent.com/33194443/170162575-4c3b9b62-a8f4-44a3-9240-856f9abdf460.png&quot; /&gt;&lt;/p&gt;## 1. Setup### 1-1. HostPC```bash### option$ echo export PATH=&quot;~/.local/bin:$PATH&quot; &gt;&gt; ~/.bashrc \&amp;&amp; source ~/.bashrc### run$ pip install -U onnx protobuf \&amp;&amp; python3 -m pip install -U onnx_graphsurgeon --index-url https://pypi.ngc.nvidia.com \&amp;&amp; pip install -U onnx2json```### 1-2. Dockerhttps://github.com/PINTO0309/simple-onnx-processing-tools#docker## 2. CLI Usage```usage:  onnx2json [-h]  -if INPUT_ONNX_FILE_PATH  -oj OUTPUT_JSON_PATH  [-i JSON_INDENT]optional arguments:  -h, --help      show this help message and exit  -if INPUT_ONNX_FILE_PATH, --input_onnx_file_path INPUT_ONNX_FILE_PATH      Input ONNX model path. (*.onnx)  -oj OUTPUT_JSON_PATH, --output_json_path OUTPUT_JSON_PATH      Output JSON file path (*.json) If not specified, no JSON file is output.  -i JSON_INDENT, --json_indent JSON_INDENT      Number of indentations in JSON. (default=2)```## 3. In-script Usage```python&gt;&gt;&gt; from onnx2json import convert&gt;&gt;&gt; help(convert)Help on function convert in module onnx2json.onnx2json:convert(  input_onnx_file_path: Union[str, NoneType] = '',  onnx_graph: Union[onnx.onnx_ml_pb2.ModelProto, NoneType] = None,  output_json_path: Union[str, NoneType] = '',  json_indent: Union[int, NoneType] = 2)    Parameters    ----------    input_onnx_file_path: Optional[str]        Input onnx file path.        Either input_onnx_file_path or onnx_graph must be specified.        Default: ''    onnx_graph: Optional[onnx.ModelProto]        onnx.ModelProto.        Either input_onnx_file_path or onnx_graph must be specified.        onnx_graph If specified, ignore input_onnx_file_path and process onnx_graph.    output_json_path: Optional[str]        Output JSON file path (*.json) If not specified, no JSON file is output.        Default: ''    json_indent: Optional[int]        Number of indentations in JSON.        Default: 2    Returns    -------    onnx_json: dict        Converted JSON dict.```## 4. CLI Execution```bash$ onnx2json \--input_onnx_file_path NonMaxSuppression.onnx \--output_json_path NonMaxSuppression.json \--json_indent 2```## 5. In-script Execution```pythonfrom onnx2json import convertonnx_json = convert(  input_onnx_file_path=&quot;NonMaxSuppression.onnx&quot;,  output_json_path=&quot;NonMaxSuppression.json&quot;,  json_indent=2,)# oronnx_json = convert(  onnx_graph=graph,)```## 6. Issueshttps://github.com/PINTO0309/simple-onnx-processing-tools/issues</longdescription>
</pkgmetadata>