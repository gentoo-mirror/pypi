<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[SFTPGo]: https://github.com/drakkan/sftpgosftpgo-client=============[![PyPI](https://img.shields.io/pypi/v/sftpgo-client.svg)](https://pypi.org/project/sftpgo-client)[![License](https://img.shields.io/github/license/ramnes/sftpgo-client)](LICENSE)[![Code style](https://img.shields.io/badge/code%20style-black-black)](https://github.com/ambv/black)Python client for the [SFTPGo][] APIThe `sftpgo_client.base` package is automatically generated from the [OpenAPIspecification](generator/openapi.yaml) provided by [SFTPGo][] using[openapi-python-client](https://github.com/triaxtec/openapi-python-client).Installation------------```pip install sftpgo-client```Examples--------* Creating a client:```pythonfrom sftpgo_client import Clientclient = Client(    base_url=&quot;http://localhost:8080/api/v2&quot;, user=&quot;admin&quot;, password=&quot;password&quot;)```In an asyncio environment, use the asynchronous client instead:```pythonfrom sftpgo_client import AsyncClientclient = AsyncClient(    base_url=&quot;http://localhost:8080/api/v2&quot;, user=&quot;admin&quot;, password=&quot;password&quot;)```* Listing users:```pythonusers = client.get_users()for user in users:    print(user.username)```or with the asynchronous client:```pythonusers = await client.get_users()for user in users:    print(user.username)```All API endpoints are available in both the synchronous and asynchronous clients.* Adding a new user:```pythonfrom sftpgo_client import Useruser = User.from_dict(    {        &quot;username&quot;: &quot;user&quot;,        &quot;password&quot;: &quot;password&quot;,        &quot;permissions&quot;: {&quot;/&quot;: [&quot;*&quot;]},    })client.add_user(json_body=user)```Development-----------You can fetch the latest version of the [SFTPGo][] OpenAPI specification andupdate `sftpgo_client.base` with:```./generator/run.sh```You can run the tests with:```docker-compose up -dpytest```</longdescription>
</pkgmetadata>