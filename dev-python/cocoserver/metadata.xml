<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>A Simple HTTP Server for Static Content=======================================This Python module provides a modified version of the ThreadingHTTPServerclass from the http.server module in the standard library.  This serveris designed to serve a static web site, such as documentation for apython project generated by Sphinx and installed with the software.  Itserves the files locally, on a random port of the loopback interface,and hence works off line.  The server runs in its own daemon threadof the python process, so it terminates when the python program exitsand thus will not leave zombie processes running.The server has been modified to allow any file in the site to be gzipcompressed and served with a Content-Encoding header set to &quot;gzip&quot;.The compressed file will be automatically decompressed by the browser,with no noticeable performance loss.  This is more efficient than thetypical case of serving compressed content over the internet since thecompression is done in advance. It also takes significantly less spaceon the user's disk. (Brotli compression would be even more efficientin both ways, but web browsers still tend to only support Brotlicompression over https, due to the prevalence of broken proxy serverson the internet.)Source code is available on `Github &lt;https://github.com/3-manifolds/cocoserver/&gt;`_.The git repository includes a script (compress_site.py) for compressing all ofthe .html, .css, .js, .woff and .svg files below a given site root directory.The tool is aware of Sphinx's tendency to produce many identical copies of thesame (large) _static directory.  So it also collects the contents of all of the_static subdirectories into one _static directory in the root, replacing theothers by symlinks.The server can be installed by running: ``python3 -m pip install cocoserver``.To use the server::    &gt;&gt;&gt; from cocoserver import StaticServer  &gt;&gt;&gt; s = StaticServer('my/site/root')  &gt;&gt;&gt; s.visit('mypage')The pip package also installs a console script named *coco* which canbe used to view your static site, for example by running: ``coco /usr/local/share/doc/myproject``.</longdescription>
</pkgmetadata>