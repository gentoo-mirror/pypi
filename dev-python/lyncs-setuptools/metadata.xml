<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Setup tools for Lyncs and CMake support[![python](https://img.shields.io/pypi/pyversions/lyncs_setuptools.svg?logo=python&amp;logoColor=white)](https://pypi.org/project/lyncs_setuptools/)[![pypi](https://img.shields.io/pypi/v/lyncs_setuptools.svg?logo=python&amp;logoColor=white)](https://pypi.org/project/lyncs_setuptools/)[![license](https://img.shields.io/github/license/Lyncs-API/lyncs.setuptools?logo=github&amp;logoColor=white)](https://github.com/Lyncs-API/lyncs.setuptools/blob/master/LICENSE)[![build &amp; test](https://img.shields.io/github/workflow/status/Lyncs-API/lyncs.setuptools/build%20&amp;%20test?logo=github&amp;logoColor=white)](https://github.com/Lyncs-API/lyncs.setuptools/actions)[![codecov](https://img.shields.io/codecov/c/github/Lyncs-API/lyncs.setuptools?logo=codecov&amp;logoColor=white)](https://codecov.io/gh/Lyncs-API/lyncs.setuptools)[![pylint](https://img.shields.io/badge/pylint%20score-9.9%2F10-green?logo=python&amp;logoColor=white)](http://pylint.pycqa.org/)[![black](https://img.shields.io/badge/code%20style-black-000000.svg?logo=codefactor&amp;logoColor=white)](https://github.com/ambv/black)In this package we provide a wrap around the standard setutools to be used in Lyncs projects.## InstallationThe package can be installed via `pip`:```pip install [--user] lyncs_setuptools```## UsageLyncs setuptools automizes the deduction of many setup.py options.Its use in a `setup.py` file is the following```pythonfrom lyncs_setuptools import setupsetup(package_name, **kwargs)```where package_name is the name of the package and kwargs are a list of arguments additional or replacement of the one automatically deduced.**NOTE:** For seeing the list of the automatically deduced options, run `lyncs_setuptools` from command line in the directory containing the file `setup.py`.**NOTE:** for correctly installing your package via `pip`, you need to add a file named `pyproject.toml` with the following content.```[build-system]requires = [&quot;lyncs_setuptools&quot;, ]```Add `&quot;cmake&quot;` to the requirements list if you use the following CMake extension.### CMakeExensionBased on https://www.benjack.io/2017/06/12/python-cpp-tests.html we provide a CMakeExtension to support CMake files.A CMakeExtension can be added as follow```pythonfrom lyncs_setuptools import setup, CMakeExtensionext = CMakeExtension(install_dir, source_dir='.', cmake_args=[])setup(package_name, ext_modules = [ext])```## Setup parametersThe following are the parameter used by default in the setup### Automatically deduced:- **author**: (git) author of first commit- **author_email:** (git) email of author of first commit- **version:** (python) value of `__version__` defined in `__init__.py` - **url:** (git) remote address of origin- **project_urls:** (git) defines Source, Documentation, Tracker, Download- **description:** (file) first title of the README- **long_description:** (file) content of the README- **long_description_content_type:** (file) type of README (md/rst)- **classifiers:** (partially)   - ***version***: *Planning* (&lt;0.1.0), *Pre-Alpha* (&lt;0.3.0), *Alpha* (&lt;0.6.0), *Beta* (&lt;1.0.0), *Production/Stable* (&lt;3.0.0), *Mature* (&gt;=3.0.0)  - ***license***: TODO- **keywords:** (&gt;3 chars or capital) words in description### Defaulted values- **classifiers:** python 3-only, science</longdescription>
</pkgmetadata>