<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![build](https://gitlab.com/cps-phd-leutwyler-nicolas/rca_fca_general/badges/master/pipeline.svg)# FCA algorithmsThis is a module providing a set of commonly used algorithms in FCA, RCA, and some of its variants. Its general intention is to provide an easy to use API so that it's easier to create other programs using these algorithms. The main algorithm that calculates formal concepts is `inclose`, and, in [this version](https://pypi.org/project/fca-algorithms/1.0.0/), it is implemented in C++. Considering this, the API is expected to behave somewhat acceptably.# CLI## FCA### Plot a hasse diagram from a context```bashfca_cli -c input.csv --show_hasse```The context is expected to be a `csv` with the following formatname|attr1|attr2----|:-----:|:-----:obj1|x|obj2||xobj3|x|xobj4||### Output files```bashfca_cli -c input.csv --show_hasse --output_dir path/to/folder/ ```Will create two files, one representing the hasse graph, the other one with a concept for each line. The line is the index in the hasse graph.## RCATo plot the hasse diagrams of the contexts 1 and 2 after applying RCA with exists```bashfca_cli -k context_1.csv context_2.csv -r relation_1_2.csv relation_2_1.csv --show_hasse```to specify operator```bashfca_cli -k context_1.csv context_2.csv -r relation_1_2.csv relation_2_1.csv --show_hasse -o forall```# FCA utilsModule for FCA basics such as retrieving concepts, drawing a hasse diagram, etc## Getting formal concepts```pythonfrom fca.api_models import Context, Conceptc = Context(O : List[str], A : List[str], I : List[List[int]])concepts = c.get_concepts(c) List[Concept]```## Getting association rules```pythonfrom fca.api_models import Contextc = Context(O, A, I)c.get_association_rules(min_support=0.4, min_confidence=1)```## Drawing hasse diagram```pythonfrom fca.plot.plot import plot_from_hassefrom fca.api_models import Contextc = Context(O, A, I)hasse_lattice, concepts = c.get_lattice(c)plot_from_hasse(hasse_lattice, concepts)```# TODO- Make algorithms to be able to work with streams (big files)# Contributors* Ramshell (Nicolas Leutwyler)</longdescription>
</pkgmetadata>