<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Microsoft Azure Kusto Library for Python========================================Overview--------.. code-block:: python    from azure.kusto.data import KustoClient, KustoConnectionStringBuilder    cluster = &quot;&lt;insert here your cluster name&gt;&quot;    client_id = &quot;&lt;insert here your AAD application id&gt;&quot;    client_secret = &quot;&lt;insert here your AAD application key&gt;&quot;    authority_id = &quot;&lt;insert here your AAD tenant id&gt;&quot;    kcsb = KustoConnectionStringBuilder.with_aad_application_key_authentication(cluster, client_id, client_secret, authority_id)    # It is a good practice to re-use the KustoClient instance, as it maintains a pool of connections to the Kusto service.    # This sample shows how to create a client and close it in the same scope, for demonstration purposes.    with KustoClient(kcsb) as client:        db = &quot;Samples&quot;        query = &quot;StormEvents | take 10&quot;        response = client.execute(db, query)        for row in response.primary_results[0]:            print(row[0], &quot; &quot;, row[&quot;EventType&quot;])*Kusto Python Client* Library provides the capability to query Kusto clusters using Python.It is Python 3.x compatible and supportsall data types through familiar Python DB API interface.It's possible to use the library, for instance, from `Jupyter Notebooks&lt;http://jupyter.org/&gt;`_.which are attached to Spark clusters,including, but not exclusively, `Azure Databricks&lt;https://azure.microsoft.com/en-us/services/databricks/&gt;`_. instances.Async Client~~~~~~~~~~~~Kusto now provides an asynchronous client for queries.To use the client, first install the package with the &quot;aio&quot; extra:.. code:: bash    pip install azure-kusto-data[aio]The async client uses exact same interface as the regular client, exceptthat it lives in the ``azure.kusto.data.aio`` namespace, and it returns``Futures`` you will need to ``await`` its.. code:: python    from azure.kusto.data import KustoConnectionStringBuilder    from azure.kusto.data.aio import KustoClient    cluster = &quot;&lt;insert here your cluster name&gt;&quot;    client_id = &quot;&lt;insert here your AAD application id&gt;&quot;    client_secret = &quot;&lt;insert here your AAD application key&gt;&quot;    authority_id = &quot;&lt;insert here your AAD tenant id&gt;&quot;    async def sample():        kcsb = KustoConnectionStringBuilder.with_aad_application_key_authentication(cluster, client_id, client_secret, authority_id)        async with KustoClient(kcsb) as client:            db = &quot;Samples&quot;            query = &quot;StormEvents | take 10&quot;            response = await client.execute(db, query)            for row in response.primary_results[0]:                print(row[0], &quot; &quot;, row[&quot;EventType&quot;])Links~~~~~* `How to install the package &lt;https://github.com/Azure/azure-kusto-python#install&gt;`_.* `Kusto query sample &lt;https://github.com/Azure/azure-kusto-python/blob/master/azure-kusto-data/tests/sample.py&gt;`_.* `GitHub Repository &lt;https://github.com/Azure/azure-kusto-python/tree/master/azure-kusto-data&gt;`_.</longdescription>
</pkgmetadata>