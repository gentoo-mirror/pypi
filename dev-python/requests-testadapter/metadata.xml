<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>====================requests-testadapter====================.. image:: https://secure.travis-ci.org/ambv/requests-testadapter.png  :target: https://secure.travis-ci.org/ambv/requests-testadapterCurrently a very basic module that provides an adapter for `requests&lt;http://pypi.python.org/pypi/requests&gt;`_ that mocks network activity for unittest purposes.How to use----------This code assumes your HTTP client is written in a way that enables passinga custom `Session&lt;http://www.python-requests.org/en/latest/user/advanced/#session-objects&gt;`_object. When that's the case, all you have to do is to mount the adapter toanswer for a specific prefix::  &gt;&gt;&gt; import requests  &gt;&gt;&gt; from requests_testadapter import TestAdapter  &gt;&gt;&gt; s = requests.Session()  &gt;&gt;&gt; s.mount('http://', TestAdapter(b'Mock!', status=404))  &gt;&gt;&gt; r = s.get('http://mocked.com')  &gt;&gt;&gt; r.status_code  404  &gt;&gt;&gt; r.text  'Mock!'You can also specify a ``headers`` dictionary as a keyword argument to``TestAdapter``.TestSession~~~~~~~~~~~In ``requests`` 1.2.0 and older, the order of mounted adapters isunpredictable.  To make sure you can mount arbitrary paths with their ownrespective adapters, use ``TestSession`` which always matches the longestprefix::  &gt;&gt;&gt; from requests_testadapter import TestAdapter, TestSession  &gt;&gt;&gt; s = TestSession()  &gt;&gt;&gt; s.mount('http://git', TestAdapter(b'git'))  &gt;&gt;&gt; s.mount('http://github', TestAdapter(b'github'))  &gt;&gt;&gt; s.mount('http://github.com', TestAdapter(b'github.com'))  &gt;&gt;&gt; s.mount('http://github.com/about/', TestAdapter(b'github.com/about'))  &gt;&gt;&gt; r = s.get('http://github.com/about/')  &gt;&gt;&gt; r.text  u'github.com/about'  &gt;&gt;&gt; r = s.get('http://github.com')  &gt;&gt;&gt; r.text  u'github.com'  &gt;&gt;&gt; r = s.get('http://gittip.com')  &gt;&gt;&gt; r.text  u'git'``TestSession`` doesn't connect the default handlers for HTTP and HTTPS so youwill be notified if your requests unintentionally try to reach externalwebsites in your unit tests::  &gt;&gt;&gt; r = s.get('http://bitbucket.org')  Traceback (most recent call last):  ...  requests.exceptions.InvalidSchema: No connection adapters were found for  'http://bitbucket.org/'How do I run the tests?-----------------------The easiest way would be to extract the source tarball and run::  $ python test/test_testadapter.pyIf you have all compatible Python implementations available on your system, youcan run tests on all of them by using tox::  $ pip install tox  $ tox  GLOB sdist-make: setup.py  py26 inst-nodeps: .tox/dist/requests-testadapter-0.1.0.zip  py26 runtests: commands[0]  ..  ----------------------------------------------------------------------  Ran 2 tests in 0.014s  OK  py27 inst-nodeps: .tox/dist/requests-testadapter-0.1.0.zip  py27 runtests: commands[0]  ..  ----------------------------------------------------------------------  Ran 2 tests in 0.014s  OK  py32 inst-nodeps: .tox/dist/requests-testadapter-0.1.0.zip  py32 runtests: commands[0]  ..  ----------------------------------------------------------------------  Ran 2 tests in 0.024s  OK  py33 inst-nodeps: .tox/dist/requests-testadapter-0.1.0.zip  py33 runtests: commands[0]  ..  ----------------------------------------------------------------------  Ran 2 tests in 0.017s  OK  _______________________________ summary ______________________________    py26: commands succeeded    py27: commands succeeded    py32: commands succeeded    py33: commands succeeded    congratulations :)Change Log----------0.3.0~~~~~* fixed a compatibility problem with ``requests`` 1.2.1+0.2.0~~~~~* introduced ``TestSession`` to make adapter order predictable in ``requests``  1.2 and older* ``TestAdapter`` doesn't prefetch ``response.content`` anymore if  ``stream=True`` is passed to a request. This lets the user read  ``response.raw`` herself.0.1.0~~~~~* initial published versionAuthors-------Glued together by `≈Åukasz Langa &lt;mailto:lukasz@langa.pl&gt;`_. Additional fixes byLuke Sneeringer.</longdescription>
</pkgmetadata>