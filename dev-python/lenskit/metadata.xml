<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python recommendation tools![Test Suite](https://github.com/lenskit/lkpy/workflows/Test%20Suite/badge.svg)[![codecov](https://codecov.io/gh/lenskit/lkpy/branch/master/graph/badge.svg)](https://codecov.io/gh/lenskit/lkpy)[![Maintainability](https://api.codeclimate.com/v1/badges/c02098c161112e19c148/maintainability)](https://codeclimate.com/github/lenskit/lkpy/maintainability)LensKit is a set of Python tools for experimenting with and studying recommendersystems.  It provides support for training, running, and evaluating recommenderalgorithms in a flexible fashion suitable for research and education.LensKit for Python (LKPY) is the successor to the Java-based LensKit project.If you use LensKit for Python in published research, please cite:&gt; Michael D. Ekstrand. 2020.&gt; LensKit for Python: Next-Generation Software for Recommender Systems Experiments.&gt; In &lt;cite&gt;Proceedings of the 29th ACM International Conference on Information and Knowledge Management&lt;/cite&gt; (CIKM '20).&gt; DOI:[10.1145/3340531.3412778](https://dx.doi.org/10.1145/3340531.3412778).&gt; arXiv:[1809.03125](https://arxiv.org/abs/1809.03125) [cs.IR].## InstallingTo install the current release with Anaconda (recommended):    conda install -c conda-forge lenskitOr you can use `pip`:    pip install lenskitTo use the latest development version, install directly from GitHub:    pip install -U git+https://github.com/lenskit/lkpyThen see [Getting Started](https://lkpy.lenskit.org/en/latest/GettingStarted.html)## Developing[issues]: https://github.com/lenskit/lkpy/issues[workflow]: https://github.com/lenskit/lkpy/wiki/DevWorkflowTo contribute to LensKit, clone or fork the repository, get to work, and submita pull request.  We welcome contributions from anyone; if you are looking for aplace to get started, see the [issue tracker][].Our development workflow is documented in [the wiki][workflow]; the wiki alsocontains other information on *developing* LensKit. User-facing documentation isat &lt;https://lkpy.lenskit.org&gt;.[conda-lock]: https://github.com/conda-incubator/conda-lockWe recommend using an Anaconda environment for developing LensKit.We don't maintain the Conda environment specification directly - instead, wemaintain information in `setup.toml` to be able to generate it, so that we definedependencies and versions in one place.[conda-lock][] can help you set up the environment (replace `linux-64` with your platform):    # install conda-lock in base environment    # alternatively: pip install conda-lock    conda install -c conda-forge conda-lock    # create the lock file for Python 3.9    conda-lock -p linux-64 -f pyproject.toml -f lkbuild/python-3.9-spec.yml    # create the environment    conda env create -n lkpy -f conda-linux-64.lockThis will create a Conda environment called `lkpy` with the packages required to develop and testLensKit.We also provide support for automating some of this process through LensKit'sinfrastructure utilities:    invoke dev-lockThe `lkbuild/boot-env.yml` file defines a Conda environment with the packages necessaryfor the lockfile generation to work.  The full set of commands:    conda env create -f lkbuild/boot-env.yml    conda activate lkboot    invoke dev-lock    conda create -n lkpy -f conda-linux-64.lock    conda activate lkpy`invoke dev-lock` can optionally specify the BLAS implementation (`openblas` or `mkl`), and thePython version.## Testing ChangesYou should always test your changes by running the LensKit test suite:    python -m pytestIf you want to use your changes in a LensKit experiment, you can locally installyour modified LensKit into your experiment's environment.  We recommend usingseparate environments for LensKit development and for each experiment; you willneed to install the modified LensKit into your experiment's repository:    conda activate my-exp    conda install -c conda-forge flit    cd /path/to/lkpy    flit install --pth-file --deps noneYou may need to first uninstall LensKit from your experiment repo; make sure thatLensKit's dependencies are all still installed.Once you have pushed your code to a GitHub branch, you can use a Git repository asa Pip dependency in an `environment.yml` for your experiment, to keep using thecorrect modified version of LensKit until your changes make it in to a release.## Resources- [Documentation](https://lkpy.lenskit.org)- [Mailing list, etc.](https://lenskit.org/connect)## AcknowledgementsThis material is based upon work supported by the National Science Foundationunder Grant No. IIS 17-51278. Any opinions, findings, and conclusions orrecommendations expressed in this material are those of the author(s) and do notnecessarily reflect the views of the National Science Foundation.</longdescription>
</pkgmetadata>