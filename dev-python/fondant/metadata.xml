<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;top&quot;&gt;&lt;/a&gt;&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/ml6team/fondant/main/docs/art/fondant_banner.svg&quot; height=&quot;250px&quot;/&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;    &lt;i&gt;        &lt;b&gt;Production-ready&lt;/b&gt;         data processing made         &lt;b&gt;easy&lt;/b&gt;         and         &lt;b&gt;shareable&lt;/b&gt;    &lt;/i&gt;    &lt;br&gt;    &lt;a href=&quot;http://fondant.ai&quot;&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;    &lt;br&gt;    &lt;br&gt;    &lt;a href=&quot;https://discord.gg/HnTdWhydGp&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://dcbadge.vercel.app/api/server/HnTdWhydGp?style=flat-square&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/fondant/&quot;&gt;&lt;img alt=&quot;PyPI version&quot; src=&quot;https://img.shields.io/pypi/v/fondant?color=brightgreen&amp;style=flat-square&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://fondant.readthedocs.io/en/latest/license/&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/ml6team/fondant?style=flat-square&amp;color=brightgreen&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/ml6team/fondant/actions/workflows/pipeline.yaml&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/ml6team/fondant/pipeline.yaml?style=flat-square&quot;&gt;&lt;/a&gt;    &lt;a href=&quot;https://coveralls.io/github/ml6team/fondant?branch=main&quot;&gt;&lt;img alt=&quot;Coveralls&quot; src=&quot;https://img.shields.io/coverallsCoverage/github/ml6team/fondant?style=flat-square&quot;&gt;&lt;/a&gt;&lt;/p&gt;---&lt;table&gt;  &lt;thead&gt;    &lt;tr&gt;      &lt;th width=&quot;33%&quot;&gt;üöÄ Production-ready&lt;/th&gt;      &lt;th width=&quot;33%&quot;&gt;üë∂ Easy&lt;/th&gt;      &lt;th width=&quot;33%&quot;&gt;üë´ Shareable&lt;/th&gt;    &lt;/tr&gt;  &lt;/thead&gt;  &lt;tbody&gt;    &lt;tr&gt;      &lt;td&gt;          Benefit from built-in features such as autoscaling, data lineage, and pipeline caching, and deploy to (managed) platforms such as &lt;i&gt;Vertex AI&lt;/i&gt;, &lt;i&gt;Sagemaker&lt;/i&gt;, and &lt;i&gt;Kubeflow Pipelines&lt;/i&gt;.      &lt;/td&gt;      &lt;td&gt;          Implement your custom data processing code using datastructures you know such as &lt;i&gt;Pandas&lt;/i&gt; dataframes.          Move from local development to remote deployment without any code changes.      &lt;/td&gt;      &lt;td&gt;          Fondant components are defined by a clear interface, which makes them reusable and shareable.&lt;br&gt;          Compose your own pipeline using components available on &lt;a href=&quot;https://fondant.ai/en/latest/components/hub/&quot;&gt;&lt;b&gt;our hub&lt;/b&gt;&lt;/a&gt;.      &lt;/td&gt;    &lt;/tr&gt;  &lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;## ü™§ Why Fondant?With the advent of transfer learning and now foundation models, everyone has started sharing and reusing machine learning models. Most of the work now goes into building data processing pipelines, which everyone still does from scratch. This doesn't need to be the case, though, if processing components would be shareable and pipelines composable. Realizing this is the main vision behind Fondant.Towards that end, Fondant offers:- üîß Plug ‚Äòn‚Äô play composable data processing pipelines- üß© Library containing off-the-shelf reusable components- üêº A simple Pandas based interface for creating custom components- üìä Built-in lineage, caching, and data explorer- üöÄ Production-ready, scalable deployment- ‚òÅÔ∏è Integration with runners across different clouds (Vertex, Sagemaker, Kubeflow)&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;## üí® Getting StartedEager to get started? Follow our [**step by step guide**](https://fondant.readthedocs.io/en/latest/getting_started) to get your first pipeline up and running.&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;## üß© Reusable componentsFondant comes with a library of reusable components that you can leverage to compose your own pipeline:- Data ingestion: _S3, GCS, ABS, Hugging Face, local file system, ..._- Data Filtering: _Duplicates, language, visual style, topic, format, aesthetics, NSFW, license,   ..._- Data Enrichment: _Captions, segmentations, embeddings, ..._- Data Transformation: _Image cropping, image resizing, text chunking, ...._- Data retrieval: _Common Crawl, LAION, ..._üëâ **Check our [Component Hub](https://fondant.ai/en/latest/components/hub/) for an overview of all available components**&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;## ü™Ñ Example pipelinesWe have created several ready-made example pipelines for you to use as a starting point for exploring Fondant. They are hosted as separate repositories containing a notebook tutorial so you can easily clone them and get started:üìñ [**RAG ingestion pipeline**](https://github.com/ml6team/fondant-usecase-RAG)  An end-to-end Fondant pipeline that prepares documents for a RAG (Retrieval Augmented Generation) system by chunking and embedding them, and writing them to a vector store.üõãÔ∏è [**ControlNet Interior Design Pipeline**](https://github.com/ml6team/fondant-usecase-controlnet)  An end-to-end Fondant pipeline to collect and process data for the fine-tuning of a ControlNet model, focusing on images related to interior design.üñºÔ∏è [**Filter creative common license images**](https://github.com/ml6team/fondant-usecase-filter-creative-commons)  An end-to-end Fondant pipeline that starts from our Fondant-CC-25M creative commons image dataset and filters and downloads the desired images.üî¢ [**Datacomp pipeline**](https://github.com/ml6team/fondant-usecase-datacomp)  An end-to-end Fondant pipeline filtering image-text data to train a CLIP model for the DataComp competition.## ‚öíÔ∏è InstallationFondant can be installed using pip:```pip install fondant```For more detailed installation options, check the [**installation page**](https://fondant.ai/en/latest/guides/installation/) on our documentation.## üë®üíª Usage#### PipelineFondant allows you to easily define data pipelines comprised of both reusable and customcomponents. The following pipeline for instance uses the reusable `load_from_hf_hub` componentto load a dataset from the Hugging Face Hub and process it using a custom component:**_pipeline.py_**```pythonfrom fondant.pipeline import ComponentOp, Pipelinepipeline = Pipeline(pipeline_name=&quot;example pipeline&quot;, base_path=&quot;fs://bucket&quot;)load_from_hub_op = ComponentOp.from_registry(    name=&quot;load_from_hf_hub&quot;,    arguments={        &quot;dataset_name&quot;: &quot;lambdalabs/pokemon-blip-captions&quot;    },)pipeline.add_op(load_from_hub_op)custom_op = ComponentOp(    component_dir=&quot;components/custom_component&quot;,    arguments={        &quot;min_width&quot;: 600,        &quot;min_height&quot;: 600,    },)pipeline.add_op(custom_op, dependencies=load_from_hub_op)```#### ComponentTo create a custom component, you first need to describe its contract as a yaml specification.It defines the data consumed and produced by the component and any arguments it takes.**_fondant_component.yaml_**```yamlname: Custom componentdescription: This is a custom componentimage: custom_component:latestconsumes:  images:    fields:      data:        type: binaryproduces:  captions:    fields:      data:        type: utf8args:  argument1:    description: An argument passed to the component at runtime    type: str  argument2:    description: Another argument passed to the component at runtime    type: str```Once you have your component specification, all you need to do is implement a constructorand a single `.transform` method and Fondant will do the rest. You will get the data defined inyour specification partition by partition as a Pandas dataframe.**_component/src/main.py_**```pythonimport pandas as pdfrom fondant.component import PandasTransformComponentclass ExampleComponent(PandasTransformComponent):    def __init__(self, *args, argument1, argument2) -&gt; None:        &quot;&quot;&quot;        Args:            argumentX: An argument passed to the component        &quot;&quot;&quot;        # Initialize your component here based on the arguments    def transform(self, dataframe: pd.DataFrame) -&gt; pd.DataFrame:        &quot;&quot;&quot;Implement your custom logic in this single method        Args:            dataframe: A Pandas dataframe containing the data        Returns:            A pandas dataframe containing the transformed data        &quot;&quot;&quot;```For more advanced use cases, you can use the `DaskTransformComponent` instead.### Running your pipelineOnce you have a pipeline you can easily run (and compile) it by using the built-in CLI:```bashfondant run local pipeline.py```To see all available runner and arguments you can check the fondant CLI help pages```bashfondant --help```Or for a subcommand:```bashfondant &lt;subcommand&gt; --help```&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;## üë≠ ContributingWe welcome contributions of different kinds:|                                  |                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ||----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|| **Issues**                       | If you encounter any issue or bug, please submit them as a [Github issue](https://github.com/ml6team/fondant/issues). You can also submit a pull request directly to fix any clear bugs.                                                                                                                                                                                                                                                                                      || **Suggestions and feedback**     | Our roadmap and priorities are defined based on community feedback. To provide input, you can join [our discord](https://discord.gg/HnTdWhydGp) or submit an idea in our [Github Discussions](https://github.com/ml6team/fondant/discussions/categories/ideas).                                                                                                                                                                                                               || **Framework code contributions** | If you want to help with the development of the Fondant framework, have a look at the issues marked with the [good first issue](https://github.com/ml6team/fondant/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) label. If you want to add additional functionality, please submit an issue for it first.                                                                                                                                                     || **Reusable components**          | Extending our library of reusable components is a great way to contribute. If you built a component which would be useful for other users, please submit a PR adding them to the [components/](https://github.com/ml6team/fondant/tree/main/components) directory. You can find a list of possible contributable components [here](https://github.com/ml6team/fondant/issues?q=is%3Aissue+is%3Aopen+label%3A%22Components%22) or your own ideas are also welcome! |For a detailed view on the roadmap and day to day development, you can check our [github projectboard](https://github.com/orgs/ml6team/projects/1).You can also check out our [architecture](docs/architecture.md) page to famliarize yourself with the Fondant architecture and repository structure.### Environment setupWe use [poetry](https://python-poetry.org/docs/) and [pre-commit](https://pre-commit.com/) to enable a smooth developer flow. Run the following commands toset up your development environment:```shellpip install poetrypoetry install --all-extraspre-commit install```&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;</longdescription>
</pkgmetadata>