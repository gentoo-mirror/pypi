<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django-Webpush==============[![Say Thanks!](https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg)](https://saythanks.io/to/safwan.rahman15@gmail.com)Django-Webpush is a Package made for integrating and sending [Web Push Notification](https://developer.mozilla.org/en/docs/Web/API/Push_API) in Django Application.Currently, it Supports Sending Push Notification to **Firefox 46+ and Chrome 52+**.----------Installation and Setup----------------------You can install it easily from pypi by running    pip install django-webpushAfter installing the package, add `webpush` in in your `INSTALLED_APPS` settings```pythonINSTALLED_APPS = (    ...    'webpush',)```If you would like to send notification to Google Chrome Users, you need to add a ``WEBPUSH_SETTINGS`` entry with the **Vapid Credentials** Like following:```pythonWEBPUSH_SETTINGS = {    &quot;VAPID_PUBLIC_KEY&quot;: &quot;Vapid Public Key&quot;,    &quot;VAPID_PRIVATE_KEY&quot;:&quot;Vapid Private Key&quot;,    &quot;VAPID_ADMIN_EMAIL&quot;: &quot;admin@example.com&quot;}```**Replace ``&quot;Vapid Public Key&quot;`` and ``&quot;Vapid Private Key&quot;`` with your Vapid Keys. Also replace ``admin@example.com`` with your email so that the push server of browser can reach to you if anything goes wrong.**&gt; **To know how to obtain Vapid Keys please see this [`py_vapid`](https://github.com/web-push-libs/vapid/tree/master/python) and [Google Developer Documentation](https://developers.google.com/web/fundamentals/push-notifications/subscribing-a-user#how_to_create_application_server_keys). You can obtain one easily from [web-push-codelab.glitch.me](https://web-push-codelab.glitch.me/). ``Application Server Keys`` and ``Vapid Keys`` both are same.**Then include `webpush` in the `urls.py````pythonurlpatterns =  [    url(r'^webpush/', include('webpush.urls'))]  ````django-webpush` is shipped with built in **`jinja`** support.If you would like to use with jinja backend,pass ``pipeline.jinja2.PipelineExtension`` to your jinja environment.If you are using `django_jinja` as template backend you can do following:```pythonfrom django_jinja.builtins import DEFAULT_EXTENSIONSTEMPLATES = [    {        &quot;BACKEND&quot;: &quot;django_jinja.backend.Jinja2&quot;,        &quot;OPTIONS&quot;: {            &quot;extensions&quot;: DEFAULT_EXTENSIONS + [                &quot;webpush.jinja2.WebPushExtension&quot;            ]        }    }]```**Then run Migration by ***`python manage.py migrate`*****Adding Web Push Information in Template---------------------------------------So in template, you need to load `webpush_notifications` custom template tag by following:- If you are using built in templating engine, add `{% load webpush_notifications %}` in the template- If you are using **jinja** templating engine, you do not need to load anything.Next, inside the `&lt;head&gt;&lt;/head&gt;` tag add `webpush_header` according to your templating engine:```html&lt;head&gt;  # For django templating engine  {% webpush_header %}  # For jinja templating engine  {{ webpush_header() }}&lt;/head&gt;```Next, inside the `&lt;body&gt;&lt;/body&gt;` tag, insert `webush_button` where you would like to see the **Subscribe to Push Messaging** Button. Like following```html&lt;body&gt;  &lt;p&gt; Hello World! &lt;/p&gt;  # For django templating engine  {% webpush_button %}  # For jinja templating engine  {{ webpush_button() }}&lt;/body&gt;```Or if you want to add custom classes (e.g. bootstrap)```html&lt;body&gt;  &lt;p&gt; Hello World! &lt;/p&gt;  # For django templating engine  {% webpush_button with_class=&quot;btn btn-outline-info&quot; %}  # For jinja templating engine  {{ webpush_button(with_class=&quot;btn btn-outline-info&quot;) }}&lt;/body&gt;``` &gt;**Note:** The Push Notification Button will show only if the user is logged in or any `group` named is passed through `webpush` context ***If you would like to mark the subscription as a group, like all person subscribe for push notification from the template should be marked as group and would get same notification, you should pass a `webpush` context to the template through views. The `webpush` context should have a dictionary like `{&quot;group&quot;: group_name}`*** . Like following```python webpush = {&quot;group&quot;: group_name } # The group_name should be the name you would define.return render(request, 'template.html',  {&quot;webpush&quot;:webpush})```&gt; **Note:** If you dont pass `group` through the `webpush` context, only logged in users can see the button for subscription and able to get notification.----------Sending Web Push Notification-----------------------------A Web Push generally have a header and body. According to the W3C Specification, the data should be encrypted in transmission. The data is addressed as payload generally. Also a TTL header should be included indicating how much time the web push server store the data if the user is not online.So in order to send notification, see below.- If you would like to send notification to a specific group, do like following:    ```python    from webpush import send_group_notification    payload = {&quot;head&quot;: &quot;Welcome!&quot;, &quot;body&quot;: &quot;Hello World&quot;}    send_group_notification(group_name=&quot;my_group&quot;, payload=payload, ttl=1000)    # All subscribe subscribe through &quot;my_group&quot; will get a web push notification.    # A ttl of 1000 is passed so the web push server will store    # the data maximum 1000 seconds if any user is not online    ```- If you would like to send Notification to a specific user, do like following    ```python    from webpush import send_user_notification    payload = {&quot;head&quot;: &quot;Welcome!&quot;, &quot;body&quot;: &quot;Hello World&quot;}    send_user_notification(user=user, payload=payload, ttl=1000)    # Here in the user parameter, a user object should be passed    # The user will get notification to all of his subscribed browser. A user can subscribe many browsers.    ```    **And the subscribers will get a notification like:**![Web Push Notification](http://i.imgur.com/VA6cxRc.png)- If you notification should have an icon or open a url when clicked, you can add those to the payload:    ``` python    from webpush import send_user_notification        from webpush import send_group_notification    payload = {&quot;head&quot;: &quot;Welcome!&quot;, &quot;body”: &quot;Hello World&quot;,                &quot;icon&quot;: &quot;https://i.imgur.com/dRDxiCQ.png“, &quot;url&quot;: &quot;https://www.example.com&quot;}    send_group_notification(group_name=&quot;my_group&quot;, payload=payload, ttl=1000)    ```**And the subscribers will get a notification like:**![Web Push Notification icon](http://i.imgur.com/Vr1RMvF.png)**That will open https://www.example.com if clicked.** - If you want fine grained control over sending a single push message, do like following    ```python    from webpush.utils import send_to_subscription    payload = {&quot;head&quot;: &quot;Welcome!&quot;, &quot;body&quot;: &quot;Hello World&quot;}    user = request.user    push_infos = user.webpush_info.select_related(&quot;subscription&quot;)    for push_info in push_infos:        send_to_subscription(push_info.subscription, payload)    ```       **And the subscribers will get a notification like** ![Web Push Notification](http://i.imgur.com/VA6cxRc.png)License=======----Copyright © 2018 Safwan RahmanThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</longdescription>
</pkgmetadata>