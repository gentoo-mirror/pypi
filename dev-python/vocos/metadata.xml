<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Vocos: Closing the gap between time-domain and Fourier-based neural vocoders for high-quality audio synthesis[Audio samples](https://charactr-platform.github.io/vocos/) |Paper [[abs]](https://arxiv.org/abs/2306.00814) [[pdf]](https://arxiv.org/pdf/2306.00814.pdf)Vocos is a fast neural vocoder designed to synthesize audio waveforms from acoustic features. Trained using a GenerativeAdversarial Network (GAN) objective, Vocos can generate waveforms in a single forward pass. Unlike other typicalGAN-based vocoders, Vocos does not model audio samples in the time domain. Instead, it generates spectralcoefficients, facilitating rapid audio reconstruction through inverse Fourier transform.## InstallationTo use Vocos only in inference mode, install it using:```bashpip install vocos```If you wish to train the model, install it with additional dependencies:```bashpip install vocos[train]```## Usage### Reconstruct audio from mel-spectrogram```pythonimport torchfrom vocos import Vocosvocos = Vocos.from_pretrained(&quot;charactr/vocos-mel-24khz&quot;)mel = torch.randn(1, 100, 256)  # B, C, Taudio = vocos.decode(mel)```Copy-synthesis from a file:```pythonimport torchaudioy, sr = torchaudio.load(YOUR_AUDIO_FILE)if y.size(0) &gt; 1:  # mix to mono    y = y.mean(dim=0, keepdim=True)y = torchaudio.functional.resample(y, orig_freq=sr, new_freq=24000)y_hat = vocos(y)```### Reconstruct audio from EnCodec tokensAdditionally, you need to provide a `bandwidth_id` which corresponds to the embedding for bandwidth from thelist: `[1.5, 3.0, 6.0, 12.0]`.```pythonvocos = Vocos.from_pretrained(&quot;charactr/vocos-encodec-24khz&quot;)audio_tokens = torch.randint(low=0, high=1024, size=(8, 200))  # 8 codeboooks, 200 framesfeatures = vocos.codes_to_features(audio_tokens)bandwidth_id = torch.tensor([2])  # 6 kbpsaudio = vocos.decode(features, bandwidth_id=bandwidth_id)```Copy-synthesis from a file: It extracts and quantizes features with EnCodec, then reconstructs them with Vocos in asingle forward pass.```pythony, sr = torchaudio.load(YOUR_AUDIO_FILE)if y.size(0) &gt; 1:  # mix to mono    y = y.mean(dim=0, keepdim=True)y = torchaudio.functional.resample(y, orig_freq=sr, new_freq=24000)y_hat = vocos(y, bandwidth_id=bandwidth_id)```### Integrate with üê∂ [Bark](https://github.com/suno-ai/bark) text-to-audio modelSee [example notebook](notebooks%2FBark%2BVocos.ipynb).## Pre-trained models| Model Name                                                                          | Dataset       | Training Iterations | Parameters |-------------------------------------------------------------------------------------|---------------|-------------------|------------|| [charactr/vocos-mel-24khz](https://huggingface.co/charactr/vocos-mel-24khz)         | LibriTTS      | 1M                | 13.5M| [charactr/vocos-encodec-24khz](https://huggingface.co/charactr/vocos-encodec-24khz) | DNS Challenge | 2M                | 7.9M## TrainingPrepare a filelist of audio files for the training and validation set:```bashfind $TRAIN_DATASET_DIR -name *.wav &gt; filelist.trainfind $VAL_DATASET_DIR -name *.wav &gt; filelist.val```Fill a config file, e.g. [vocos.yaml](configs%2Fvocos.yaml), with your filelist paths and start training with:```bashpython train.py -c configs/vocos.yaml```Refer to [Pytorch Lightning documentation](https://lightning.ai/docs/pytorch/stable/) for details about customizing thetraining pipeline.## CitationIf this code contributes to your research, please cite our work:```@article{siuzdak2023vocos,  title={Vocos: Closing the gap between time-domain and Fourier-based neural vocoders for high-quality audio synthesis},  author={Siuzdak, Hubert},  journal={arXiv preprint arXiv:2306.00814},  year={2023}}```## LicenseThe code in this repository is released under the MIT license as found in the[LICENSE](LICENSE) file.</longdescription>
</pkgmetadata>