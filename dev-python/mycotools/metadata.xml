<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img        src=&quot;https://gitlab.com/xonq/mycotools/-/raw/master/misc/pictogo.white.png&quot;    &gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;# NOTEThis software is a beta release (prokaryote is alpha state) - errors areexpected. Kindly raise an issue if the error has not been mentioned.If you can find the bug, even better! The goal is to reach a longterm stablerelease - please join me in this aspiration.# PURPOSEBring broadscale comparative genomics to the masses. Mycotools is a compilation of computational biology tools and database([MycotoolsDB/MTDB](https://github.com/xonq/mycotools/blob/master/MTDB.md)) softwarethat facilitate large-scale comparative genomics. MycotoolsDB dereplicates and locallyassimilates all NCBI and MycoCosm (Joint Genome Institute) genomes into a database schema with uniform file curation, scalability, and automation as guiding principles. - Database initialization is as simple as `mtdb u --init &lt;DIR&gt;`- `mtdb u --update` brings the database to the current date- The MycotoolsDB (MTDB) uniformly curates the numerous iterations of  the `gff` into a consistent standard- The `.mtdb` database format enables swift transitions from analyses with datasets of 100,000s genomes to as few as a lineage of interest- Mycotools [software suite](https://github.com/xonq/mycotools/blob/master/USAGE.md) includes modules to automate routine-complex  comparative genomics&lt;p align=&quot;center&quot;&gt;    &lt;img        src=&quot;https://gitlab.com/xonq/mycotools/-/raw/master/misc/mtdb.png&quot;    &gt;&lt;/p&gt;&lt;br /&gt;# CITINGIf Mycotools contribute to your analysis, please cite the preprint and mentionthe version in-line. Konkel, Z., Slot, J. C. Mycotools: An Automated and Scalable Platform forComparative Genomics. bioRxiv 2023.09.08.556886; doi: https://doi.org/10.1101/2023.09.08.556886---&lt;br /&gt;# INSTALLThe installation guide will use miniconda3 as the environment manager. Pleasereference their [install and initialization instructions](https://docs.conda.io/projects/miniconda/en/latest/).&lt;br /&gt;## 1. Configuring miniconda3Setup and prioritize channels for your miniconda installation. This step must becompleted for new and old installs.```bashconda config --add channels defaultsconda config --add channels biocondaconda config --add channels conda-forgeconda config --set channel_priority strict```&lt;br /&gt;## 2. Installing mycotoolsMake sure `conda` is active, usually by seeing `(base)` in in your shell.If not, try `conda activate base` or `source activate base`. ```bashconda create -n mycotools mycotools -c xonq -yconda activate mycotoolspython3 -m pip install mycotools --upgrademtdb -d```NOTE: The conda package is broken on its own, so please explicitly run `pip install` as noted above to update themycotools package inside the conda environment.&lt;br /&gt;Determine if you are going to link to an already installed database, or becomethe administrator of a new one:## 3a. USER: Integrate with already initialized MycotoolsDBTo link with an existing database, fill in `&lt;PATH&gt;` with the database path```bashmtdb --init &lt;DB_PATH&gt;```&lt;br /&gt;## 3b. ADMINISTRATOR: Initialize a local MycotoolsDB```bashmtdb update --init &lt;DB_PATH&gt;```&lt;br /&gt;&lt;br /&gt;# USAGEOnce installed, you're good to proceed to the[usage guide!](https://github.com/xonq/mycotools/blob/master/USAGE.md)&lt;br /&gt;&lt;br /&gt;# UPDATEMycotools is currently in an advanced beta state with frequent updates. It isrecommended to run the following in your conda environment if you are havingtrouble with analyses:```bashpython3 -m pip install mycotools --upgrade```NOTE: Make sure the conda environment is active when updating.I recommend updating with `pip` because the `conda` distribution is currently prone to dependency issues and will not update reliably.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;### A NOTE ON THE CODEEach standalone script is written with a `cli` function, designed tohandle running the script from the command line, as well as `main` function(s),which are importable python modules. This enables Mycotoolsto be a pipelining-friendly software suite, both from a command line andpython scripting standpoint.Code edits should focus on stabilizing existing features and simplifying/decerasing the code base.I try to implement code aligned with principles of the [functionalprogramming paradigm](https://docs.python.org/3/howto/functional.html) andmodifications should act in accord with this paradigm, i.e. sparingimplementation of new classes, limited necessary abstraction, no hidden statechanges, and function-based flow.&lt;img align=&quot;right&quot; src=&quot;https://gitlab.com/xonq/mycotools/-/raw/master/misc/ablogo.png&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</longdescription>
</pkgmetadata>