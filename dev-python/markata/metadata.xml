<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=center&gt;  &lt;br&gt;  &lt;a href=&quot;https://github.com/WaylonWalker/markata&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/22648375/167527193-4e66d537-e78f-44dd-be65-2c1c109adf34.png&quot; alt=&quot;Markata&quot; width=&quot;400&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p align=center&gt;  &lt;em&gt;    Markdown to site, plugins all the way down  &lt;/em&gt;&lt;/p&gt;## Coming soonpydantic all the things.  All post objects and config will become pydantic objects.  This will allow for validation to happen early, and referencing post attributes or config, it can be assumed that they exist whether they were explicitly created or cohersed to their defaults early in the build.---A static site generator that will give you a great site with many standard webfeatures like rss, sitemaps, and seo tags, out of the box. Running `markatabuild` will get you a that only requires you to write Markdown. If you haveadditional features that you want, don't worry, since markata is builtcompletely on plugins you can develop and install your own plugins to add thefeatures you want.## QuickStartMarkata is fully configurable through a `markata.toml` file, but the defaultsallow to build your site right out of the box with nothing more than Markdown.### Installation`markata` is hosted on pypi and can be installed using pip.```bashpython -m pip install markata```### Create Some ContentMake some `.md` files in your current working directory. By default, `markata`will recursively look in all subdirectories for markdown files `**/*.md`.```bashmkdir pagesecho '# My First Post' &gt; first-post.mdecho '# Hello World' &gt; hello-world.md```### Build your siteInstall markata into your virtual environment and run `markata build`. It willcreate your site in `./markout`, leave its cache in `./.markata.cache`, andcopy all assets from `./static` into `./markout` by default.```bashpython -m pip install markatamarkata build# or if pipx is your thingpipx run markata build```### Building a Blog with Markata _using a template_The markata cli includes a `new` command that will present you with questionsto fill in the jinja variables in this repo.```bashmarkata new blog [directory]# start the site and watch for changeshatch run tui```Now if you open localhost:8000, you will be presented with an example site thatwill walk you through some features of markata. You can play with it atyour own pace, or drop all the pages and start writing your own content.## MotivationMarkata is able to build your site purely from Markdown, allowing you to getstarted creating your own content quickly. Out of the box it will cover yourseo tags, rss feeds, sitemap, and og images. Since it is built completely fromplugins you can remove, modify, or add to any of its behavior.- configurable- plugins- seo- rss- sitemap- og-image## Using MarkataThe docs are still a work in progress, but the[base_cli](https://markata.dev/markata/plugins/base_cli/) walks through how toeffectively use the `markata build` command. At this point Markata is far fromstable and **will change quite a bit**, should you choose to use it on realsite make sure you pin to the version that you want to build from. I will letyou know as it becomes more stable and ready to use without diligence ofpinning to the version you want.**Honestly** A big motivation for me was wanting to learn and understand how tocreate a project that is completely plugin driven. This is highly a learningproject for me, and it has grown into something I use every day.## Examples GallaryMarkata has a project gallery to show off sites built with markata. Please[submit](https://github.com/WaylonWalker/markata/issues/78) yours, and checkout the [project-gallery](http://markata.dev/project-gallery/) for inspiration.</longdescription>
</pkgmetadata>