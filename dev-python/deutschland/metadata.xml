<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI version deutschland](https://badge.fury.io/py/deutschland.svg)](https://pypi.python.org/pypi/deutschland/)[![GitHub license](https://img.shields.io/github/license/bundesAPI/deutschland.svg)](https://github.com/bundesAPI/deutschland/blob/main/LICENSE)[![Lint](https://github.com/bundesAPI/deutschland/actions/workflows/black.yml/badge.svg?branch=main)](https://github.com/bundesAPI/deutschland/actions/workflows/black.yml)[![Publish Python üêç distributions üì¶ to PyPI and TestPyPI](https://github.com/bundesAPI/deutschland/actions/workflows/publish.yml/badge.svg?branch=main)](https://github.com/bundesAPI/deutschland/actions/workflows/publish.yml)[![Run Python üêç tests](https://github.com/bundesAPI/deutschland/actions/workflows/runtests.yml/badge.svg?branch=main)](https://github.com/bundesAPI/deutschland/actions/workflows/runtests.yml)# DeutschlandA python package that gives you easy access to the most valuable datasets of Germany.## Installation```bashpip install deutschland```### DevelopmentFor development poetry version `&gt;=1.2.0` is required.## Geographic dataFetch information about streets, house numbers, building outlines, ‚Ä¶```pythonfrom deutschland.geo import Geogeo = Geo()# top_right and bottom_left coordinatesdata = geo.fetch([52.530116236589244, 13.426532801586827],                 [52.50876180448243, 13.359631043007212])print(data.keys())# dict_keys(['Adresse', 'Barrierenlinie', 'Bauwerksflaeche', 'Bauwerkslinie', 'Bauwerkspunkt', 'Besondere_Flaeche', 'Besondere_Linie', 'Besonderer_Punkt', 'Gebaeudeflaeche', 'Gebaeudepunkt', 'Gewaesserflaeche', 'Gewaesserlinie', 'Grenze_Linie', 'Historischer_Punkt', 'Siedlungsflaeche', 'Vegetationslinie', 'Verkehrsflaeche', 'Verkehrslinie', 'Verkehrspunkt', 'Hintergrund'])print(data[&quot;Adresse&quot;][0])# {'geometry': {'type': 'Point', 'coordinates': (13.422642946243286, 52.51500157651358)}, 'properties': {'postleitzahl': '10179', 'ort': 'Berlin', 'ortsteil': 'Mitte', 'strasse': 'Holzmarktstra√üe', 'hausnummer': '55'}, 'id': 0, 'type': 'Feature'}```For the detailed documentation of this API see [here](https://adv-smart.de/docs/dokumentation/web_vektor_datenmodell.html)The data is provided by the [AdV SmartMapping](https://adv-smart.de/index_en.html). The team consists of participants from the German state surveying offices, the Federal Agency for Cartography and Geodesy (BKG), the German Federal Armed Forces (Bundeswehr ZGeoBW) and third parties from research and education.## Company Data### BundesanzeigerGet financial reports for all german companies that are reporting to Bundesanzeiger.More```pythonfrom deutschland.bundesanzeiger import Bundesanzeigerba = Bundesanzeiger()# search termdata = ba.get_reports(&quot;Deutsche Bahn AG&quot;)# returns a dictionary with all reports found as fulltext reportsprint(data.keys())# dict_keys(['Jahresabschluss zum Gesch√§ftsjahr vom 01.01.2020 bis zum 31.12.2020', 'Konzernabschluss zum Gesch√§ftsjahr vom 01.01.2020 bis zum 31.12.2020\nErg√§nzung der Ver√∂ffentlichung vom 04.06.2021',```*Big thanks to Nico Duldhardt and Friedrich Sch√∂ne, who [supported this implementation with their machine learning model](https://av.tib.eu/media/52366).*### HandelsregisterThe code for the Handelsregister moved to this [repo](https://github.com/bundesAPI/handelsregister).## Consumer Protection Data### LebensmittelwarnungGet current product warnings provided by the german federal portal lebensmittelwarnung.de.```pythonfrom deutschland.lebensmittelwarnung import Lebensmittelwarnunglw = Lebensmittelwarnung()# search by content type and region, see documetation for all available paramsdata = lw.get(&quot;lebensmittel&quot;, &quot;berlin&quot;)print(data)# [{'id': 19601, 'guid': 'https://www.lebensmittelwarnung.de/bvl-lmw-de/detail/lebensmittel/19601', 'pubDate': 'Fri, 10 Feb 2017 12:28:45 +0000', 'imgSrc': 'https://www.lebensmittelwarnung.de/bvl-lmw-de/opensaga/attachment/979f8cd3-969e-4a6c-9a8e-4bdd61586cd4/data.jpg', 'title': 'Sidroga Bio S√§uglings- und Kindertee', 'manufacturer': 'Lebensmittel', 'warning': 'Pyrrolizidinalkaloide', 'affectedStates': ['Baden-W√ºrttemberg', '...']}]```## Federal Job Openings### NRW#### VERENAGet open substitute teaching positions in NRW from https://www.schulministerium.nrw.de/BiPo/Verena/angebote```pythonfrom deutschland.verena import Verenav = Verena()data = v.get()print(data)# a full example data can be found at deutschland/verena/example.md# [{ &quot;school_id&quot;: &quot;99999&quot;, &quot;desc&quot;: &quot;Eine Schule\nSchule der Sekundarstufe II\ndes Landkreis Schuling\n9999 Schulingen&quot;, &quot;replacement_job_title&quot;: &quot;Lehrkraft&quot;, &quot;subjects&quot;: [ &quot;Fach 1&quot;, &quot;Fach 2&quot; ], &quot;comments&quot;: &quot;Bemerkung zur Stelle: Testbemerkung&quot;, &quot;duration&quot;: &quot;01.01.2021 - 01.01.2022&quot;, ...} ...]```## AutobahnGet data from the Autobahn.```pythonfrom deutschland import autobahnfrom deutschland.autobahn.api import default_apifrom pprint import pprintautobahn_api_instance = default_api.DefaultApi()try:    # Auflistung aller Autobahnen    api_response = autobahn_api_instance.list_autobahnen()    pprint(api_response)    # Details zu einer Ladestation    station_id = &quot;RUxFQ1RSSUNfQ0hBUkdJTkdfU1RBVElPTl9fMTczMzM=&quot;  # str |    api_response = autobahn_api_instance.get_charging_station(station_id)    pprint(api_response)except autobahn.ApiException as e:    print(&quot;Exception when calling DefaultApi-&gt;get_charging_station: %s\n&quot; % e)```For the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/autobahn/README.md)### PresseportalNot available for now due to changes in the API.## Auto-Generated API-Clients### bundesratFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/bundesrat/README.md)### bundestagFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/bundestag/README.md)### destatisFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/destatis/README.md)### dwdFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/dwd/README.md)### interpolFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/interpol/README.md)### jobsucheFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/jobsuche/README.md)### ladestationenFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/ladestationen/README.md)### mudabFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/mudab/README.md)### ninaFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/nina/README.md)### polizei_brandenburgFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/polizei_brandenburg/README.md)### risikogebieteFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/risikogebiete/README.md)### smardFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/smard/README.md)### strahlenschutzFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/strahlenschutz/README.md)### travelwarningFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/travelwarning/README.md)### zollFor the detailed documentation of this API see [here](https://github.com/bundesAPI/deutschland/blob/main/docs/zoll/README.md)</longdescription>
</pkgmetadata>