# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Capture and query workflow provenance data using data observability"

HOMEPAGE=""
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all analytics dask dev docs kafka ml-dev mlflow mongo nvidia responsibleai tensorboard"
DEPENDENCIES="dev-python/Flask-RESTful[${PYTHON_USEDEP}]
	dev-python/lmdb[${PYTHON_USEDEP}]
	dev-python/msgpack[${PYTHON_USEDEP}]
	dev-python/omegaconf[${PYTHON_USEDEP}]
	dev-python/pandas[${PYTHON_USEDEP}]
	dev-python/psutil[${PYTHON_USEDEP}]
	dev-python/py-cpuinfo[${PYTHON_USEDEP}]
	dev-python/pyarrow[${PYTHON_USEDEP}]
	dev-python/redis[${PYTHON_USEDEP}]
	dev-python/requests[${PYTHON_USEDEP}]
	all? ( dev-python/alembic[${PYTHON_USEDEP}] )
	all? ( dev-python/confluent-kafka[${PYTHON_USEDEP}] )
	all? ( dev-python/dask[${PYTHON_USEDEP}] )
	all? ( dev-python/jupyterlab[${PYTHON_USEDEP}] )
	all? ( dev-python/mlflow-skinny[${PYTHON_USEDEP}] )
	all? ( dev-python/nbmake[${PYTHON_USEDEP}] )
	all? ( dev-python/nvidia-ml-py[${PYTHON_USEDEP}] )
	all? ( dev-python/pika[${PYTHON_USEDEP}] )
	all? ( dev-python/plotly[${PYTHON_USEDEP}] )
	all? ( dev-python/pymongo[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	all? ( dev-python/ruff[${PYTHON_USEDEP}] )
	all? ( dev-python/scipy[${PYTHON_USEDEP}] )
	all? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	all? ( dev-python/sqlalchemy[${PYTHON_USEDEP}] )
	all? ( dev-python/tbparse[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorflow[${PYTHON_USEDEP}] )
	all? ( dev-python/tomli[${PYTHON_USEDEP}] )
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	all? ( dev-python/watchdog[${PYTHON_USEDEP}] )
	analytics? ( dev-python/plotly[${PYTHON_USEDEP}] )
	analytics? ( dev-python/scipy[${PYTHON_USEDEP}] )
	analytics? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	dask? ( dev-python/dask[${PYTHON_USEDEP}] )
	dask? ( dev-python/tomli[${PYTHON_USEDEP}] )
	dev? ( dev-python/jupyterlab[${PYTHON_USEDEP}] )
	dev? ( dev-python/nbmake[${PYTHON_USEDEP}] )
	dev? ( dev-python/pika[${PYTHON_USEDEP}] )
	dev? ( dev-python/pytest[${PYTHON_USEDEP}] )
	dev? ( dev-python/ruff[${PYTHON_USEDEP}] )
	docs? ( dev-python/furo[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	kafka? ( dev-python/confluent-kafka[${PYTHON_USEDEP}] )
	ml-dev? ( dev-python/datasets[${PYTHON_USEDEP}] )
	ml-dev? ( dev-python/nltk[${PYTHON_USEDEP}] )
	ml-dev? ( <dev-python/numpy-2.0[${PYTHON_USEDEP}] )
	ml-dev? ( dev-python/sacremoses[${PYTHON_USEDEP}] )
	ml-dev? ( dev-python/torch[${PYTHON_USEDEP}] )
	ml-dev? ( dev-python/torchtext[${PYTHON_USEDEP}] )
	ml-dev? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/alembic[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/mlflow-skinny[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/sqlalchemy[${PYTHON_USEDEP}] )
	mlflow? ( dev-python/watchdog[${PYTHON_USEDEP}] )
	mongo? ( dev-python/pymongo[${PYTHON_USEDEP}] )
	nvidia? ( dev-python/nvidia-ml-py[${PYTHON_USEDEP}] )
	responsibleai? ( dev-python/torch[${PYTHON_USEDEP}] )
	tensorboard? ( dev-python/tbparse[${PYTHON_USEDEP}] )
	tensorboard? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	tensorboard? ( dev-python/tensorflow[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
