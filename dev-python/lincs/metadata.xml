<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. Copyright 2023 Vincent Jacques.. WARNING, this README is rendered to HTML in several places    - on GitHub (https://github.com/mics-lab/lincs/)    - on PyPI after publication of the package (https://pypi.org/project/lincs/)    - on GitHub Pages (https://mics-lab.github.io/lincs/)    So when you change it, take care to check all those places.*lincs* (Learn and Infer Non Compensatory Sortings) is a collection of MCDA algorithms, usable as a C++ library, a Python package and a command-line utility.*lincs* is licensed under the GNU Lesser General Public License v3.0 as indicated by the two files `COPYING &lt;https://github.com/MICS-Lab/lincs/blob/v0.4.5/COPYING&gt;`_ and `COPYING.LESSER &lt;https://github.com/MICS-Lab/lincs/blob/v0.4.5/COPYING.LESSER&gt;`_.@todo (When we have a paper to actually cite) Add a note asking academics to kindly cite our work.*lincs* is available for install from the `Python package index &lt;https://pypi.org/project/lincs/&gt;`_.Its `documentation &lt;http://mics-lab.github.io/lincs/&gt;`_and its `source code &lt;https://github.com/mics-lab/lincs/&gt;`_ are on GitHub.Questions? Remarks? Bugs? Want to contribute? Open `an issue &lt;https://github.com/MICS-Lab/lincs/issues&gt;`_ or `a discussion &lt;https://github.com/MICS-Lab/lincs/discussions&gt;`_!Contributors and previous work==============================*lincs* is developed by the `MICS &lt;https://mics.centralesupelec.fr/&gt;`_ research team at `CentraleSup√©lec &lt;https://www.centralesupelec.fr/&gt;`_.Its main authors are (alphabetical order):- `Laurent Cabaret &lt;https://cabaretl.pages.centralesupelec.fr/&gt;`_ (performance optimization)- `Vincent Jacques &lt;https://vincent-jacques.net&gt;`_ (engineering)- `Vincent Mousseau &lt;https://www.centralesupelec.fr/fr/2EBDCB86-64A4-4747-96E8-C3066CB61F3D&gt;`_ (domain expertise)- `Wassila Ouerdane &lt;https://wassilaouerdane.github.io/&gt;`_ (domain expertise)It's based on work by:- `Olivier Sobrie &lt;http://olivier.sobrie.be/&gt;`_ (The &quot;weights, profiles, breed&quot; learning strategy for MR-Sort models, and the profiles improvement heuristic, developed in his `Ph.D thesis &lt;http://olivier.sobrie.be/papers/phd_2016_sobrie.pdf&gt;`_, and `implemented in Python &lt;https://github.com/oso/pymcda&gt;`_)- Emma Dixneuf, Thibault Monsel and Thomas Vindard (`C++ implementation of Sobrie's heuristic &lt;https://github.com/Mostah/fastPL/&gt;`_)@todo Add links to the fundamental articles for NCS.@todo Add links to the articles that define other learning methods we re-implement.Project goals=============Provide MCDA tools usable out of the box----------------------------------------You should be able to use *lincs* without being a specialist of MCDA and/or NCS models.Just follow the `Get started &lt;#get-started&gt;`_ section below.Provide a base for developing new MCDA algorithms-------------------------------------------------*lincs* is designed to be easy to extend with new algorithms of even replace parts of existing algorithms.See our `contributor guide &lt;https://mics-lab.github.io/lincs/contributor-guide.html&gt;`_ for more details.*lincs* also provides a benchmark framework to compare algorithms (@todo Implement and document).This should make it easier to understand the relative strengths and weaknesses of each algorithm.Versioning==========Starting with version 1.0.0, *lincs* tries to apply `semantic versioning &lt;https://semver.org/&gt;`_ at a *code* level:upgrading patch and minor releases should not require changes in client code but may require you to recompile and link it.Get started===========Depending on your favorite approach, you can either start with our `hands-on &quot;Get started&quot; guide &lt;https://mics-lab.github.io/lincs/get-started.html&gt;`_or with our `conceptual overview documentation &lt;https://mics-lab.github.io/lincs/conceptual-overview.html&gt;`_.The former will show you how to use our tools, the latter will explain the concepts behind them: what's MCDA, what are NCS models, *etc.*If in doubt, start with the conceptual overview.We highly recommend you read the other one just after.Once you've used *lincs* a bit, you can follow up with our `user guide &lt;https://mics-lab.github.io/lincs/user-guide.html&gt;`_and `reference documentation &lt;https://mics-lab.github.io/lincs/reference.html&gt;`_.Develop *lincs* itself======================See our `contributor guide &lt;https://mics-lab.github.io/lincs/contributor-guide.html&gt;`_.</longdescription>
</pkgmetadata>