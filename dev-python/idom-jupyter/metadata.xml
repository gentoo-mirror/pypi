<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># idom-jupyterA client for [IDOM](https://github.com/idom-team/idom) implemented using Jupyter widgets## Try It Now!Check out some live examples by clicking the badge below:&lt;a href=&quot;https://mybinder.org/v2/gh/idom-team/idom-jupyter/main?filepath=notebooks%2Fintroduction.ipynb&quot;&gt;    &lt;img alt=&quot;Binder&quot; height=&quot;25px&quot; src=&quot;https://mybinder.org/badge_logo.svg&quot; /&gt;&lt;/a&gt;## Getting StartedTo install use `pip`:```pip install idom_jupyter```Then, before anything else, do one of the following:1. At the top of your notebook run   ```python   import idom_jupyter   ```2. Register `idom_jupyter` as a permanant IPython extension in [your config file](https://ipython.readthedocs.io/en/stable/config/intro.html#introduction-to-ipython-configuration):   ```python   c.InteractiveShellApp.extensions = [       'idom_jupyter'   ]   ```## UsageOnce you're done [getting started](#getting-started), you can author and display IDOMlayouts natively in your Jupyter Notebook:```pythonimport idom@idom.componentdef ClickCount():    count, set_count = idom.hooks.use_state(0)    return idom.html.button(        {&quot;onClick&quot;: lambda event: set_count(count + 1)},        [f&quot;Click count: {count}&quot;],    )ClickCount()```You can also turn an `idom` element constructor into one that returns an `ipywidget` withthe `idom_juptyer.widgetize` function. This is useful if you wish to use IDOM in combinationwith other Jupyter Widgets as in the following example:```pythonClickCountWidget = idom_jupyter.widgetize(ClickCount)ipywidgets.Box(    [        ClickCountWidget(),        ClickCountWidget(),    ])```Alternatively just wrap an `idom` element instance in an `idom_jupyter.LayoutWidget`:```pythonipywidgets.Box(    [        idom_jupyter.LayoutWidget(ClickCount()),        idom_jupyter.LayoutWidget(ClickCount()),    ])```For a more detailed introduction check out this live demo here:&lt;a href=&quot;https://mybinder.org/v2/gh/idom-team/idom-jupyter/main?filepath=notebooks%2Fintroduction.ipynb&quot;&gt;    &lt;img alt=&quot;Binder&quot; height=&quot;25px&quot; src=&quot;https://mybinder.org/badge_logo.svg&quot; /&gt;&lt;/a&gt;## Development InstallationFor a development installation (requires [Node.js](https://nodejs.org) and [Yarn version 1](https://classic.yarnpkg.com/)),    $ git clone https://github.com/idom-team/idom-jupyter.git    $ cd idom-jupyter    $ pip install -e .    $ jupyter nbextension install --py --symlink --overwrite --sys-prefix idom_jupyter    $ jupyter nbextension enable --py --sys-prefix idom_jupyterWhen actively developing your extension for JupyterLab, run the command:    $ jupyter labextension develop --overwrite idom_jupyterThen you need to rebuild the JS when you make a code change:    $ cd js    $ yarn run buildYou then need to refresh the JupyterLab page when your javascript changes.</longdescription>
</pkgmetadata>