<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## RFC compliant (Bind9) provider for octoDNSAn [octoDNS](https://github.com/octodns/octodns/) provider that targets [Bind](https://www.isc.org/bind/) and other standards compliant servers. It includes support for sourcing records via AXFR, reading zone files, and fully managing records with [RFC 2136](https://datatracker.ietf.org/doc/html/rfc2136).### Installation#### Command line```pip install octodns-bind```#### requirements.txt/setup.pyPinning specific versions or SHAs is recommended to avoid unplanned upgrades.##### Versions```# Start with the latest versions and don't just copy what's hereoctodns==0.9.20octodns-bind==0.0.1```##### SHAs```# Start with the latest/specific versions and don't just copy what's here-e git+https://git@github.com/octodns/octodns.git@9da19749e28f68407a1c246dfdf65663cdc1c422#egg=octodns-e git+https://git@github.com/octodns/octodns-bind.git@ec9661f8b335241ae4746eea467a8509205e6a30#egg=octodns_bind```### Configuration#### ZoneFileSourceA source that reads DNS records from zone files in a local directory.```yamlproviders:  zonefile:      class: octodns_bind.ZoneFileSource      # The directory holding the zone files      # Filenames should match zone name (eg. example.com.)      # with optional extension specified with file_extension      directory: ./zonefiles      # File extension on zone files      # Appended to zone name to locate file      # (optional, default None)      file_extension: .zone      # Should sanity checks of the origin node be done      # (optional, default true)      check_origin: false```#### AxfrSourceA source that support the AXFR protocol```yamlproviders:  axfr:      class: octodns_bind.AxfrSource      # The address of nameserver to perform zone transfer against      host: ns1.example.com      # The port that the nameserver is listening on. Optional. Default: 53      port: 53      # Use IPv6 to perform operations. Optional. Default: False      ipv6: False      # The number of seconds to wait until timing out. Optional. Default: 15      timeout: 15      # optional, default: non-authed      key_name: env/AXFR_KEY_NAME      # optional, default: non-authed      key_secret: env/AXFR_KEY_SECRET      # optional, see https://github.com/rthalley/dnspython/blob/master/dns/tsig.py#L78      # for available algorithms      key_algorithm: hmac-sha1```See below for example Bind9 server configuration. Any server that supports RFCcompliant AXFR should work here. If you have a need for support of other authmechinism please open an issue.#### Rfc2136Provider/BindProviderA provider that combines AXFR and RFC 2136 to enable a full featured octoDNSprovider for the [Bind9 server](https://www.isc.org/bind/)Both allow transfer   allow-transfer { key octodns.exxampled.com.; };  allow-update { key octodns.exxampled.com.; };```yamlproviders:  rfc2136:      # also available as octodns_bind.BindProvider      class: octodns_bind.Rfc2136Provider      # The address of nameserver to perform zone transfer against      host: ns1.example.com      # The port that the nameserver is listening on. Optional. Default: 53      port: 53      # Use IPv6 to perform operations. Optional. Default: False      ipv6: False      # The number of seconds to wait until timing out. Optional. Default: 15      timeout: 15      # optional, default: non-authed      key_name: env/AXFR_KEY_NAME      # optional, default: non-authed      key_secret: env/AXFR_KEY_SECRET      # optional, see https://github.com/rthalley/dnspython/blob/master/dns/tsig.py#L78      # for available algorithms      key_algorithm: hmac-sha1```Example Bind9 config to enable AXFR and RFC 2136```# generated with rndc-confgenkey octodns.exxampled.com. {  algorithm hmac-sha256;  secret &quot;vZew5TtZLTZKTCl00xliGt+1zzsuLWQWFz48bRbPnZU=&quot;;};zone &quot;exxampled.com.&quot; {  type master;  file &quot;/var/lib/bind/db.exxampled.com&quot;;  notify explicit;  # this enables AXFR  allow-transfer { key octodns.exxampled.com.; };  # this allows RFC 2136  allow-update { key octodns.exxampled.com.; };};```Any server that supports RFC compliant AXFR and RFC 2136 should work here. Ifyou have a need for support of other auth mechinism please open an issue.### Support Information#### RecordsA, AAAA, CAA, CNAME, LOC, MX, NS, PTR, SPF, SRV, SSHFP, TLSA, TXT#### DynamicThis module does not support dynamic records.### DevelopmentSee the [/script/](/script/) directory for some tools to help with the development process. They generally follow the [Script to rule them all](https://github.com/github/scripts-to-rule-them-all) pattern. Most useful is `./script/bootstrap` which will create a venv and install both the runtime and development related requirements. It will also hook up a pre-commit hook that covers most of what's run by CI.#### Local ServerA local server is included in the repo via [docker-compose.yml](/docker-compose.yml). This will set up a Bind9 server with AXFR transfers and RFC 2136 updates enabled for use in development on IPv4 and IPv6. Configuration for the server can be found in [docker/etc/bind/named.conf](docker/etc/bind/named.conf), including the TSIG secret which can be used to perform authenticated operations. Zonefiles can be found in [docker/var/lib/bind](docker/var/lib/bind). All logs are written to STDOUT and can be viewed by running `docker-compose logs -f`An example octodns configuration to interact with the local server is below:```yamlproviders:  rfc2136:    class: octodns_bind.Rfc2136Provider    host: localhost    key_name: 'octodns.exxampled.com.'    key_secret: 'vZew5TtZLTZKTCl00xliGt+1zzsuLWQWFz48bRbPnZU='    key_algorithm: 'hmac-sha256'zones:  exxampled.com.:    sources:      - config    targets:      - rfc2136```</longdescription>
</pkgmetadata>