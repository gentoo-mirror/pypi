<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ajsonapi: asynchronous JSON API![coverage](https://gitlab.com/rvdg/ajsonapi/badges/master/coverage.svg?job=coverage)## What is it?*ajsonapi* is a Python package for creating a [JSON API][json-api] web serverbacked by a database from a user-provided object model.## How to specify an object model?Let's look at a simple object model specification.```python# model.pyfrom ajsonapi import (JSON_API,                      OneToManyRelationship,                      ManyToOneRelationship,                      Attribute,                      String)class Persons(JSON_API):    name = Attribute(String)    articles = OneToManyRelationship('Articles', rfkey='person_id')class Articles(JSON_API):    title = Attribute(String)    author = ManyToOneRelationship('Persons', lfkey='person_id')```This model contains two class definitions: `Persons` and `Articles`. A personhas a name and can author zero of more articles. An article has a title andhas exactly one author (who is a person). The only parts in the model that maybe unobvious are the `lfkey` and `rfkey` parameters in the relationshipdefinitions. They are abbreviations for *local foreign key* and *remoteforeign key*, respectively. Ajsonapi uses these parameters to identify that`Persons.articles` and `Articles.author` are each other's reverse relationshipand to persist objects and their relationships in the database.For a more elaborate (albeit abstract) object model see [ajsonapi's model forfunctional testing][functest-model].## How to create a web server?```python# app.pyfrom aiohttp.web import run_appfrom ajsonapi import Applicationimport model  # Or directly include the above code snippetasync def make_app():    app = Application()    await app.connect_database('postgresql://user:password@localhost:5432/db')    await app.create_tables()    app.add_json_api_routes()    return app.apprun_app(make_app())```## What does ajsonapi provide?From the above six line model, ajsonapi creates a web server that supports thefollowing eighteen operations (combinations of HTTP method and URI) asdescribed by the [JSON API specification][json-api-spec].```GET, POST                 /personsGET, PATCH, DELETE        /persons/{id}GET, POST, PATCH, DELETE  /persons/{id}/relationships/articlesGET                       /persons/{id}/articlesGET, POST                 /articlesGET, PATCH, DELETE        /articles/{id}GET, PATCH                /articles/{id}/relationships/authorGET                       /articles/{id}/author```All `GET` operations that return a collection support the `?include`, `?fields`,`?filter`, `?sort`, and `?page` query parameters.  All objects created andmanipulated through the web server are persisted in a Postgres database by ajsonapi.## Where to get it?```shpip install ajsonapi```[json-api]: https://jsonapi.org[json-api-spec]: https://jsonapi.org/format[functest-model]: https://gitlab.com/rvdg/ajsonapi/blob/master/ajsonapi/functests/model.py</longdescription>
</pkgmetadata>