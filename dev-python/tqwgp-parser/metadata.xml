<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Talk Quote Work Get-Paid (aka TQWGP) proposal and invoice parser[![Build Status](https://travis-ci.org/YtoTech/talk-quote-work-getpaid-parser.svg?branch=master)](https://travis-ci.org/YtoTech/talk-quote-work-getpaid-parser) [![PyPI version](https://badge.fury.io/py/tqwgp-parser.svg)](https://pypi.python.org/pypi/tqwgp-parser/)&gt; Your text base sales and accounting toolkit, especially designed for freelancers, by freelancers# Installing```shpip install tqwgp-parser```# Usage## Parsing proposalsFirst, declare your quote data:```pythonmy_proposal = {    &quot;title&quot;: &quot;Tesla Model 3 Configurator&quot;,    &quot;date&quot;: &quot;29 novembre 2016&quot;,    &quot;place&quot;: &quot;Philadelphie&quot;,    &quot;version&quot;: &quot;v1&quot;,    &quot;sect&quot;: {        &quot;email&quot;: &quot;bf@bf-printer.com&quot;,        &quot;logo&quot;: &quot;tests/samples/tesla_logo.png&quot;,        &quot;name&quot;: &quot;BF Printer \\&amp; Co&quot;,    },    &quot;legal&quot;: {        &quot;address&quot;: {            &quot;city&quot;: &quot;Philadelphie&quot;,            &quot;line1&quot;: &quot;E Thompson Saint&quot;,            &quot;zip&quot;: &quot;19125&quot;,        },        &quot;siret&quot;: &quot;999999999 00099&quot;,    },    &quot;author&quot;: {        &quot;civility&quot;: &quot;M.&quot;,        &quot;mobile&quot;: &quot;07.73.35.51.00&quot;,        &quot;name&quot;: &quot;Benjamin Franklin&quot;,        &quot;role&quot;: &quot;membre&quot;,    },    &quot;client&quot;: {        &quot;contact&quot;: {            &quot;civility&quot;: &quot;M.&quot;,            &quot;name&quot;: &quot;Elon Musk&quot;,            &quot;role&quot;: &quot;CEO&quot;,            &quot;sason&quot;: &quot;son&quot;,        },        &quot;legal&quot;: {            &quot;address&quot;: {                &quot;city&quot;: &quot;Chambourcy&quot;,                &quot;line1&quot;: &quot;103 Route de Mantes&quot;,                &quot;zip&quot;: &quot;78240&quot;,            },            &quot;siret&quot;: &quot;524335262 00084&quot;,        },        &quot;name&quot;: &quot;Tesla&quot;,    },    &quot;object&quot;: &quot;The current proposal includes ...\n&quot;,    &quot;prestations&quot;: [        {            &quot;description&quot;: &quot;Files for describing the steps of product configuration, their prices, etc.&quot;,            &quot;price&quot;: 5000,            &quot;title&quot;: &quot;Definition of configurations&quot;,        }    ],}```&gt; Note: your can look at more complete and various samples in [`tests/samples`](tests/samples).You can then process this proposal data using `tqwgp_parser.parse_quote`:```pythonimport pprintfrom tqwgp_parser import parse_quotemy_parsed_proposal = parse_quote(my_proposal)pprint.pprint(my_parsed_proposal)```&gt; Pro-tip: the data can be declared in flat files, for eg. using Yaml or Json formats. It could also be loaded from a database: this is your choice!## Parsing invoicesDeclare your invoices data:```pythonmy_invoices = {    &quot;sect&quot;: {&quot;email&quot;: &quot;bf@bf-printer.com&quot;, &quot;name&quot;: &quot;BF Printer \\&amp; Co&quot;},    &quot;legal&quot;: {        &quot;address&quot;: {            &quot;city&quot;: &quot;Philadelphie&quot;,            &quot;line1&quot;: &quot;E Thompson Saint&quot;,            &quot;zip&quot;: &quot;19125&quot;,        },        &quot;siret&quot;: &quot;999999999 00099&quot;,    },    &quot;author&quot;: {        &quot;civility&quot;: &quot;M.&quot;,        &quot;mobile&quot;: &quot;07.73.35.51.00&quot;,        &quot;name&quot;: &quot;Benjamin Franklin&quot;,        &quot;role&quot;: &quot;membre&quot;,    },    &quot;client&quot;: {        &quot;contact&quot;: {            &quot;civility&quot;: &quot;M.&quot;,            &quot;name&quot;: &quot;Elon Musk&quot;,            &quot;role&quot;: &quot;CEO&quot;,            &quot;sason&quot;: &quot;son&quot;,        },        &quot;legal&quot;: {            &quot;address&quot;: {                &quot;city&quot;: &quot;Chambourcy&quot;,                &quot;line1&quot;: &quot;103 Route de Mantes&quot;,                &quot;zip&quot;: &quot;78240&quot;,            },            &quot;siret&quot;: &quot;524335262 00084&quot;,        },        &quot;name&quot;: &quot;Tesla&quot;,    },    &quot;invoices&quot;: [        {            &quot;date&quot;: &quot;5 janvier 2017&quot;,            &quot;lines&quot;: [{&quot;price&quot;: 12000, &quot;title&quot;: &quot;Acompte devis 16-TESLA-01&quot;}],            &quot;number&quot;: &quot;17001&quot;,            &quot;vat_rate&quot;: 20,        }    ],}```And process it with the help of `tqwgp_parser.parse_invoices`:```pythonimport pprintfrom tqwgp_parser import parse_invoicesmy_parsed_invoices = parse_invoices(my_invoices)pprint.pprint(my_parsed_invoices)```## Going furtherYou could then feed the processed data to your own document edition toolchain to create PDFs from it. This could include using Pandoc and LaTeX to edit the PDF (see for eg. [mrzool's invoice-boilerplate](https://github.com/mrzool/invoice-boilerplate/) setup) ; or sending it to an online PDF compiler with your own template (for eg. with a LaTeX template and [LaTeX-on-HTTP](https://github.com/YtoTech/latex-on-http)), or using HTML/CSS based template (with tooks like [WeasyPrint](https://github.com/Kozea/WeasyPrint/tree/gh-pages/samples/invoice) or [ReLaXed](https://github.com/RelaxedJS/ReLaXed)).You may also use the parsed data in a web application.-------------------# TQWGP text-base documents specificationThe format of the TQWGP text-base documents is not finalized.We'll use this repository as a working specification, through the [samples](tests/samples) and [tests](tests).-------------------# Contributing## TestsTo contribute to the parser and specification, please wrote test samples for your modifications.The tests are written for being runned with `pytest`:```shpipenv run pytest -vv```</longdescription>
</pkgmetadata>