<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># otools-rpc[![Version](https://img.shields.io/pypi/v/otools-rpc?color=blue&amp;label=version)](https://pypi.org/project/otools-rpc/)[![LastCommit](https://img.shields.io/github/last-commit/MrFaBemol/otools-rpc?color=green)](https://en.wikipedia.org/wiki/MIT_License)[![Status](https://img.shields.io/pypi/status/otools-rpc?color=orange)](https://pypi.org/project/otools-rpc/)[![License](https://img.shields.io/github/license/MrFaBemol/otools-rpc?color=blue)](https://en.wikipedia.org/wiki/MIT_License)[![Downloads](https://img.shields.io/pypi/dm/otools-rpc?color=blue)](https://pypi.org/project/otools-rpc/)otools-rpc is a Python package for interacting with the Odoo ERP system through XML-RPC requests. It provides a convenient way to communicate with Odoo and perform various operations. Please note that the package is currently in the testing/alpha phase, and further improvements and updates are expected.## Features[//]: # (### Environnement Class)The `Environment` class represents the environment for interacting with the Odoo ERP system. It provides the following features:- Authentication: Authenticate with the Odoo system using username and password.- Access Models: Access different models (tables) in the Odoo system.- Caching: Caching mechanism to improve performance.- Logging: Logging capabilities with customizable log levels.## InstallationYou can install otools-rpc using pip:```console$ pip install otools-rpc```See on pypi: https://pypi.org/project/otools-rpc/## Usage### EnvironmentHere are some examples of how to use otools-rpc to interact with the Odoo ERP system via the external API:```pythonfrom otools_rpc.external_api import Environmenturl = &quot;http://localhost:8069/&quot;username = &quot;admin&quot;password = &quot;admin&quot;db = &quot;my_odoo&quot;# Create an instance of the environmentenv = Environment(url, username, password, db=db)env = env.with_context(lang='en_US')print(env)# Example: Create an invoice for a specific partnerpartner_id = env['res.partner'].search([('name', '=', 'Mitchell Admin')], limit=1)invoice_vals = {    'partner_id': partner_id.id,    'date_invoice': '2023-05-12',    'type': 'out_invoice',    'invoice_line_ids': [        (0, 0, {            'product_id': env['product.product'].search([('name', '=', 'Product A')], limit=1).id,            'quantity': 5,            'price_unit': 10.0,        }),        (0, 0, {            'product_id': env['product.product'].search([('name', '=', 'Product B')], limit=1).id,            'quantity': 3,            'price_unit': 15.0,        }),    ],}invoice_id = env['account.move'].create(invoice_vals)print(&quot;Created invoice:&quot;, invoice_id)# Posting the invoiceinvoice_id.action_post()```### DBManager```pythonfrom otools_rpc.db_manager import DBManagerurl = &quot;http://localhost:8069/&quot;master_password = &quot;adminadmin&quot;dbmanager = DBManager(url, master_password)#Return list of all the available DB in your Odoo ENVdbmanager.dbobject.list()#Duplicating my_odoo to my_new_odoodbmanager.duplicate(db='my_odoo', new_name=&quot;my_new_odoo&quot;)#Deleting my_new_odoodbmanager.drop(db='my_new_odoo')```More details are coming soon...![Stars](https://img.shields.io/github/stars/MrFaBemol/otools-rpc?style=social)![Watchers](https://img.shields.io/github/watchers/MrFaBemol/otools-rpc?style=social)![Forks](https://img.shields.io/github/forks/MrFaBemol/otools-rpc?style=social)</longdescription>
</pkgmetadata>