<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>===============================Getting Started with grafanalib===============================.. image:: https://readthedocs.org/projects/grafanalib/badge/?version=latest    :alt: Documentation Status    :scale: 100%    :target: https://grafanalib.readthedocs.io/en/latest/?badge=latestDo you like `Grafana &lt;http://grafana.org/&gt;`_ but wish you could version yourdashboard configuration? Do you find yourself repeating common patterns? Ifso, grafanalib is for you.grafanalib lets you generate Grafana dashboards from simple Python scripts.How it works============Take a look at `the examples directory&lt;https://github.com/weaveworks/grafanalib/blob/main/grafanalib/tests/examples/&gt;`_,e.g. `this dashboard&lt;https://github.com/weaveworks/grafanalib/blob/main/grafanalib/tests/examples/example.dashboard.py&gt;`_will configure a dashboard with a single row, with one QPS graph broken downby status code and another latency graph showing median and 99th percentilelatency.In the code is a fair bit of repetition here, but once you figure out whatworks for your needs, you can factor that out.See `our Weave-specific customizations&lt;https://github.com/weaveworks/grafanalib/blob/main/grafanalib/weave.py&gt;`_for inspiration.You can read the entire grafanlib documentation on `readthedocs.io&lt;https://grafanalib.readthedocs.io/&gt;`_.Getting started===============grafanalib is just a Python package, so:.. code-block:: console  $ pip install grafanalibGenerate the JSON dashboard like so:.. code-block:: console  $ curl -o example.dashboard.py https://raw.githubusercontent.com/weaveworks/grafanalib/main/grafanalib/tests/examples/example.dashboard.py  $ generate-dashboard -o frontend.json example.dashboard.pySupport=======This library is in its very early stages. We'll probably make changes thatbreak backwards compatibility, although we'll try hard not to.grafanalib works with Python 3.6 through 3.10.Developing==========If you're working on the project, and need to build from source, it's done as follows:.. code-block:: console  $ virtualenv .env  $ . ./.env/bin/activate  $ pip install -e .Configuring Grafana Datasources===============================This repo used to contain a program ``gfdatasource`` for configuringGrafana data sources, but it has been retired since Grafana now has abuilt-in way to do it.  See https://grafana.com/docs/administration/provisioning/#datasourcesCommunity=========We currently don't follow a roadmap for ``grafanalib`` and both `maintainers&lt;https://github.com/weaveworks/grafanalib/blob/main/MAINTAINERS&gt;` have recentlybecome somewhat occupied otherwise.We'd like you to join the ``grafanalib`` community! If you would like tohelp out maintaining ``grafanalib`` that would be great. It's a fairly laid-backand straight-forward project. Please talk to us on Slack (see the links below).We follow the `CNCF Code of Conduct &lt;/docs/CODE_OF_CONDUCT.rst&gt;`_.Getting Help------------If you have any questions about, feedback for or problems with ``grafanalib``:- Read the documentation at https://grafanalib.readthedocs.io- Invite yourself to the `Weave Users Slack &lt;https://slack.weave.works/&gt;`_.- Ask a question on the `#grafanalib &lt;https://weave-community.slack.com/messages/grafanalib/&gt;`_ slack channel.- `File an issue &lt;https://github.com/weaveworks/grafanalib/issues/new&gt;`_.Your feedback is always welcome!</longdescription>
</pkgmetadata>