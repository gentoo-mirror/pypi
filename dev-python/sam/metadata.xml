<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;    &lt;img src=&quot;docs/source/images/logo.png&quot; width=600&gt;&lt;br&gt;&lt;/div&gt;# SAM[![PyPI Latest Release](https://img.shields.io/pypi/v/sam.svg)](https://pypi.org/project/sam/)[![Documentation Status](https://readthedocs.org/projects/sam-rhdhv/badge/?version=latest)](https://sam-rhdhv.readthedocs.io/en/latest/?badge=latest)[![Downloads](https://static.pepy.tech/personalized-badge/sam?period=month&amp;units=international_system&amp;left_color=black&amp;right_color=orange&amp;left_text=PyPI%20downloads%20per%20month)](https://pepy.tech/project/sam)[![License](https://img.shields.io/pypi/l/sam.svg)](https://github.com/RoyalHaskoningDHV/sam/blob/main/LICENSE)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336)](https://pycqa.github.io/isort/)SAM (Smart Asset Management) is a Python package for *timeseries analysis*, *anomaly detection* and *forecasting*.The documentation is available on [ReadTheDocs](https://sam-rhdhv.readthedocs.io/en/latest/).Author: [Royal HaskoningDHV](https://global.royalhaskoningdhv.com/)Email: [ruud.kassing@rhdhv.com](mailto:ruud.kassing@rhdhv.com)## Getting started### InstallationThe easiest way to install is package is using pip:```pip install sam```There are different optional dependencies for SAM, if you are unsure use `pip install 'sam[all]'` other options include `plotting` (just use the plotting functionality), `data_science` (all dependencies needed for a data scientist) and `data_engineering` (dependencies for data engineer).Keep in mind that the sam package is updated frequently, and after a while, your local version may be out of date with the online documentation. To be sure, run the `pip install -U sam` command to install the latest version.### Simple exampleBelow you can find a simple example on how to use one of our timeseries models. For more examples, check our [example notebooks](https://github.com/RoyalHaskoningDHV/sam/tree/main/examples)```pythonfrom sam.datasets import load_rainbow_beachfrom sam.models import MLPTimeseriesRegressorfrom sam.feature_engineering import SimpleFeatureEngineerdata = load_rainbow_beach()X, y = data, data[&quot;water_temperature&quot;]# Easily create rolling and time features to be used by the modelsimple_features = SimpleFeatureEngineer(    rolling_features=[        (&quot;wave_height&quot;, &quot;mean&quot;, 24),        (&quot;wave_height&quot;, &quot;mean&quot;, 12),    ],    time_features=[        (&quot;hour_of_day&quot;, &quot;cyclical&quot;),    ],    keep_original=False,)# Define your model, see the docs for all parametersmodel = MLPTimeseriesRegressor(    predict_ahead=(1, 2, 3), # Multiple predict aheads are possible    quantiles=(0.025, 0.975), # Predict quantile bounds for anomaly detection    feature_engineer=simple_features,    epochs=20,)model.fit(X, y)```### ConfigurationA configuration file can be created as `.config` and should be located in your working directory. This configuration file only stores api credentials for now, but more options may be added in the future. The configuration file is parsed using the [Python3 configparser](https://docs.python.org/3/library/configparser.html), and an example configuration is shown below:```ini[regenradar]url=https://rhdhv.lizard.net/api/v3/raster-aggregates/?user=user.namepassword=secret[openweathermap]apikey=secret```## Issue tracking and Feature RequestsAnyone can create feature requests or bug reports! You can browse and create new issues on GitHub: https://github.com/RoyalHaskoningDHV/sam/issues</longdescription>
</pkgmetadata>