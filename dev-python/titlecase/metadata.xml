<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Titlecase=========.. image:: https://codecov.io/gh/ppannuto/python-titlecase/branch/main/graph/badge.svg?token=J1Li8uhB8q    :target: https://codecov.io/gh/ppannuto/python-titlecaseThis filter changes a given text to Title Caps, and attempts to be cleverabout SMALL words like a/an/the in the input.The list of &quot;SMALL words&quot; which are not capped comes from the New YorkTimes Manual of Style, plus some others like 'vs' and 'v'.The filter employs some heuristics to guess abbreviations that don't need conversion.+------------------+----------------+| Original         | Conversion     |+==================+================+| this is a test   | This Is a Test |+------------------+----------------+| THIS IS A TEST   | This Is a Test |+------------------+----------------+| this is a TEST   | This Is a TEST |+------------------+----------------+More examples and expected behavior for corner cases are available in the`package test suite &lt;https://github.com/ppannuto/python-titlecase/blob/main/titlecase/tests.py&gt;`__.This library is a resurrection of `Stuart Colville'stitlecase.py &lt;https://muffinresearch.co.uk/titlecasepy-titlecase-in-python/&gt;`__,which was in turn a port of `John Gruber'stitlecase.pl &lt;http://daringfireball.net/2008/05/title_case&gt;`__.Issues, updates, pull requests, etc should be directed`to github &lt;https://github.com/ppannuto/python-titlecase&gt;`__.Installation------------The easiest method is to simply use pip:::    (sudo) pip install titlecaseUsage-----Titlecase provides only one function, simply:.. code-block:: python    &gt;&gt;&gt; from titlecase import titlecase    &gt;&gt;&gt; titlecase('a thing')    'A Thing'A callback function may also be supplied, which will be called for every word:.. code-block:: python    &gt;&gt;&gt; def abbreviations(word, **kwargs):    ...   if word.upper() in ('TCP', 'UDP'):    ...     return word.upper()    ...    &gt;&gt;&gt; titlecase.titlecase('a simple tcp and udp wrapper', callback=abbreviations)    'A Simple TCP and UDP Wrapper'The callback function is supplied with an ``all_caps`` keyword argument, indicatingwhether the entire line of text was entirely capitalized. Returning ``None`` fromthe callback function will allow titlecase to process the word as normal.Command Line Usage------------------Titlecase also provides a command line utility ``titlecase``:::    $ titlecase make me a title    Make Me a Title    $ echo &quot;Can pipe and/or whatever else&quot; | titlecase    Can Pipe and/or Whatever Else    # Or read/write files:    $ titlecase -f infile -o outfileIn addition, commonly used acronyms can be kept in a local fileat `~/.titlecase.txt`. This file contains one acronym per line.The acronym will be maintained in the title as it is provided.Once there is e.g. one line saying `TCP`, then it will be automaticallyused when used from the command line.::    $ titlecase I LOVE TCP    I Love TCPLimitations-----------This is a best-effort library that uses regexes to try to do intelligentthings, but will have limitations. For example, it does not have the contextualawareness to distinguish acronyms from words: us (we) versus US (United States).The regexes and titlecasing rules were written for American English. Whilethere is basic support for Unicode characters, such that something like&quot;El Ni√±o&quot; will work, it is likely that accents or non-English phrases willnot be handled correctly.If anyone has concrete solutions to improve these or other shortcomings of thelibrary, pull requests are very welcome!</longdescription>
</pkgmetadata>