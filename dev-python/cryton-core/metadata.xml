<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Coverage](https://gitlab.ics.muni.cz/cryton/cryton-core/badges/master/coverage.svg)[//]: # (TODO: add badges for python versions, black, pylint, flake8, unit tests, integration tests)# Cryton CoreCryton Core is the center point of the Cryton toolset. It is used for:- Creating, planning, and scheduling attack scenarios- Generating reports from attack scenarios- Controlling Workers and scenarios executionCryton toolset is tested and targeted primarily on **Debian** and **Kali Linux**. Please keep in mind that **only the latest version is supported** and issues regarding different OS or distributions may **not** be resolved.For more information see the [documentation](https://cryton.gitlab-pages.ics.muni.cz/cryton-documentation/).## Quick-startTo be able to execute attack scenarios, you also need to install **[Cryton Worker](https://gitlab.ics.muni.cz/cryton/cryton-worker)** and **[Cryton CLI](https://gitlab.ics.muni.cz/cryton/cryton-cli)** packages.  Optionally you can install [Cryton Frontend](https://gitlab.ics.muni.cz/cryton/cryton-frontend) for a non-command line experience.Make sure Git, Docker, and Docker Compose plugin are installed:- [Git](https://git-scm.com/)- [Docker Compose](https://docs.docker.com/compose/install/)Optionally, check out these Docker [post-installation steps](https://docs.docker.com/engine/install/linux-postinstall/).The following script clones the repository and runs the Docker Compose configuration. The compose file contains the necessary prerequisites(Postgres, PgBouncer, RabbitMQ), Cryton Core itself (listener and REST API), and a proxy that allows access to the Cryton Core's REST APIat http://0.0.0.0:8000/.```shellgit clone https://gitlab.ics.muni.cz/cryton/cryton-core.gitcd cryton-coregit checkout $(git tag --list &quot;2023.1.*&quot; | tail -n 1)sed -i &quot;s|CRYTON_CORE_RABBIT_HOST=127.0.0.1|CRYTON_CORE_RABBIT_HOST=cryton-rabbit|&quot; .envsed -i &quot;s|CRYTON_CORE_DB_HOST=127.0.0.1|CRYTON_CORE_DB_HOST=cryton-pgbouncer|&quot; .envsed -i &quot;s|CRYTON_CORE_API_USE_STATIC_FILES=false|CRYTON_CORE_API_USE_STATIC_FILES=true|&quot; .envdocker compose up -d```For more information see the [documentation](https://cryton.gitlab-pages.ics.muni.cz/cryton-documentation/).## ContributingContributions are welcome. Please **contribute to the [project mirror](https://gitlab.com/cryton-toolset)** on gitlab.com.For more information see the [contribution page](https://cryton.gitlab-pages.ics.muni.cz/cryton-documentation/latest/contribution-guide/).</longdescription>
</pkgmetadata>