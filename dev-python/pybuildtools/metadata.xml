<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-build-toolsA toolkit containing many powerful utilities, including: * OS utilities (buildtools.os_utils) * Indented logging with colorama support (buildtools.bt_logging.log) * The powerful Maestro build management system (buildtools.maestro) * A powerful VCS repository wrapper system (buildtools.repo) * A mess of other random things.## os_utils```pythonfrom buildtools import os_utils# Ensure test/ existsos_utils.ensureDirExists('test')# Get copy of current environmental variables.ENV = os_utils.ENV.clone()# Add .bin/ to the beginning of PATH in our virtual environmentENV.prependTo('PATH', '.bin/')# Remove any duplicate entries from PATHENV.removeDuplicatedEntries('PATH')# Find gcc in our virtual environment (checks PATHEXT on Windows, too!)# Returns the path to gcc, or None if it couldn't be found.GCC = ENV.which('gcc')# Ensure bash exists before continuing (same rules as above)ENV.assertWhich('bash')# Bring up gcc's help page. Crash if non-0 exit code, echo command to console, and output STDOUT/STDERR to console.os_utils.cmd([GCC, '--help'], critical=True, echo=True, show_output=True)```## Logging```pythonfrom buildtools import logdef a():  log.info('This will be indented if a() is called in a log block.')log.info('No indentation, yet.')with log.warning('A warning. Next line will be indented.'):  log.error('Error!')  with log.info('The following function\'s log output will be indented by another layer.')    a()    log.critical('So will %s!', 'this')```## Maestro```pythonfrom buildtools.maestro import BuildMaestrofrom buildtools.maestro.fileio import ReplaceTextTargetfrom buildtools.maestro.coffeescript import CoffeeBuildTargetfrom buildtools.maestro.web import SCSSBuildTarget, SCSSConvertTargetbm = BuildMaestro()# Compile CoffeeScript to JSbm.add(CoffeeBuildTarget('htdocs/js/vgws.js',                 ['coffee/src/vgws.coffee']))bm.add(CoffeeBuildTarget('htdocs/js/editpoll.multichoice.js', ['coffee/editpoll.multichoice.coffee'], dependencies=['htdocs/js/vgws.js']))bm.add(CoffeeBuildTarget('htdocs/js/editpoll.option.js',      ['coffee/editpoll.editpoll.coffee'], dependencies=['htdocs/js/vgws.js']))# Convert CSS to SCSSbm.add(SCSSBuildTarget('htdocs/css/style.css', ['style/style.scss'], [], import_paths=['style'], compass=True))# Compile, taking dependencies into count when ordering operations.bm.run()# Same as above, but providing command line arguments such as --clean, and --rebuild.bm.as_app()```</longdescription>
</pkgmetadata>