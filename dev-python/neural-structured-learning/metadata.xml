<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Neural Structured Learning (NSL) is a new learning paradigm to train neuralnetworks by leveraging structured signals in addition to feature inputs.Structure can be explicit as represented by a graph or implicit as inducedby adversarial perturbation.Structured signals are commonly used to represent relations or similarityamong samples that may be labeled or unlabeled. Leveraging these signalsduring neural network training harnesses both labeled and unlabeled data,which can improve model accuracy, particularly when the amount of labeleddata is relatively small. Additionally, models trained with samples that aregenerated by adversarial perturbation have been shown to be robust againstmalicious attacks, which are designed to mislead a model's prediction orclassification.NSL generalizes to Neural Graph Learning as well as to Adversarial Learning.The NSL framework in TensorFlow provides the following easy-to-use APIs andtools for developers to train models with structured signals:* Keras APIs to enable training with graphs (explicit structure) and  adversarial perturbations (implicit structure).* TF ops and functions to enable training with structure when using  lower-level TensorFlow APIs.* Tools to build graphs and construct graph inputs for training.The NSL framework is designed to be flexible and can be used to train anykind of neural network. For example, feed-forward, convolution, andrecurrent neural networks can all be trained using the NSL framework. Inaddition to supervised and semi-supervised learning (a low amount ofsupervision), NSL can in theory be generalized to unsupervised learning.Incorporating structured signals is done only during training, so theperformance of the serving/inference workflow remains unchanged.</longdescription>
</pkgmetadata>