<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># QtWaitingSpinner[![PyPI version](https://badge.fury.io/py/pyqtspinner.svg)](https://badge.fury.io/py/pyqtspinner)QtWaitingSpinner is a highly configurable, custom Qt widget for showing &quot;waiting&quot; or&quot;loading&quot; spinner icons in Qt applications, e.g. the spinners below are allQtWaitingSpinner widgets differing only in their configuration:![waiting spinner](https://raw.githubusercontent.com/z3ntu/QtWaitingSpinner/gh-pages/waiting-spinners.gif)The widget is pretty customizable:![examples](https://raw.githubusercontent.com/fbjorn/QtWaitingSpinner/master/static/examples.png)### Installation`pip install pyqtspinner`### ConfigurationThe following properties can all be controlled directly through their correspondingsetters:- Color of the widget- &quot;Roundness&quot; of the lines- Speed (rotations per second)- Number of lines to be drawn- Line length- Line width- Radius of the spinner's &quot;dead space&quot; or inner circle- The percentage fade of the &quot;trail&quot;- The minimum opacity of the &quot;trail&quot;### UsageYou can easily adjust spinner settings by running:```bashpyqtspinner-conf```![configuration](https://raw.githubusercontent.com/fbjorn/QtWaitingSpinner/master/static/config.png)Make the spinner you would like and press &quot;show init args&quot; button. It will generate thecode snippet which is almost ready-to-use:```pythonWaitingSpinner(    parent,    roundness=100.0,    opacity=3.141592653589793,    fade=80.0,    radius=10,    lines=20,    line_length=10,    line_width=2,    speed=1.5707963267948966,    color=(0, 0, 0))```As an alternative example, the code below will create a spinner that (1) blocks all userinput to the main application for as long as the spinner is active, (2) automaticallycenters itself on its parent widget every time &quot;start&quot; is called and (3) makes use ofthe default shape, size and color settings.```pythonspinner = QtWaitingSpinner(self, True, True, Qt.ApplicationModal)spinner.start() # starts spinning```Enjoy!### Thanks:to [@z3ntu](https://github.com/z3ntu) for the groundwork. to[@snowwlex](https://github.com/snowwlex) for the widget itself.</longdescription>
</pkgmetadata>