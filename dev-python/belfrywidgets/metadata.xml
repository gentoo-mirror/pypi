<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>BelfryWidets============A collection of useful Tkinter widgets and mega-widgets.This package contains:CollapsiblePane:  A LabelFrame derivitive that can be collapsed by clicking on the label.LabelButton:  A Label derivitive that is clickable like a button, with rollovers and focus.TabbedNoteBook:  A notebook that provides Safari-style tabs, with optional close-buttons  per tab.Wizard:  A wizard dialog with Prev/Next/Finish/Cancel buttons, which progresses  through multiple panes of widgets.ScrolledListbox:  A Listbox widget with scrollbars, similar to the ScrolledText widget.ProgressBar:  A rounded progress bar, similar in function to tkinter.ttk.Progressbar,  except that the colors are more controllable on all platforms.ToolTip:  Attaches a tooltip to a widget, so that hovering over that widget will  show a small tooltip message.CollapsiblePane---------------Example code::    from belfrywidgets import CollapsiblePane    tk = Tk()    cp = CollapsiblePane(        tk,        text=&quot;Click Here to Collapse&quot;,        visible=True,        collapsible=True,    )    cp.pack(side=TOP, fill=BOTH, expand=1, padx=5, pady=5)    lbl1 = Label(cp.holder, text=&quot;This is a label.&quot;)    lbl2 = Label(cp.holder, text=&quot;This is another label.&quot;)    lbl1.pack(side=TOP)    lbl2.pack(side=TOP)    tk.mainloop()LabelButton-----------Example code::    from belfrywidgets import LabelButton    tk = Tk()    b1 = LabelButton(tk, text=&quot;Button 1&quot;, command=lambda: print(&quot;B1!&quot;))    b2 = LabelButton(tk, text=&quot;Button 2&quot;, command=lambda: print(&quot;B2!&quot;))    b1.pack(side=TOP, padx=20, pady=20)    b2.pack(side=TOP, padx=20, pady=20)    tk.mainloop()TabbedNoteBook--------------Example code::    from belfrywidgets import TabbedNoteBook    def _closeit(name):        print(&quot;Close tab %s&quot; % name)        return True  # Return True to allow closing tab.    tk = Tk()    tnb = TabbedNoteBook(tk, width=640, height=480)    tnb.pack_propagate(False)  # Keep noteboox from shrinking to fit contents.    tnb.pack(side=TOP, fill=BOTH, expand=1)    pane1 = tnb.add_pane(        'one', 'First Pane',        closecommand=lambda: _closeit('one')    )    lbl1 = Label(pane1, text=&quot;This is a label.&quot;)    lbl1.pack(side=TOP, fill=BOTH, expand=1)    pane2 = tnb.add_pane(        'two', 'Second Pane',        closecommand=lambda: _closeit('two')    )    lbl2 = Label(pane2, text=&quot;This is a second label.&quot;)    lbl2.pack(side=TOP, fill=BOTH, expand=1)    pane3 = tnb.add_pane(        'three', 'Third Pane',        closecommand=lambda: _closeit('three')    )    lbl3 = Label(pane3, text=&quot;This is a third label.&quot;)    lbl3.pack(side=TOP, fill=BOTH, expand=1)    lbl = tnb.pane_label('two')    lbl.config(text=&quot;Tab 2&quot;)    tk.mainloop()Wizard------Example code::    from belfrywidgets import Wizard    root = Tk()    wiz = Wizard(        width=640,        height=480,        cancelcommand=lambda: print(&quot;Cancel&quot;),        finishcommand=lambda: print(&quot;Finish&quot;),    )    def disable_finish():        wiz.set_finish_enabled(False)    def enable_finish():        wiz.set_finish_enabled(True)    pane1 = wiz.add_pane('one', 'First', entrycommand=disable_finish)    lbl1 = Label(pane1, text=&quot;This is the first pane.&quot;)    lbl1.pack(side=TOP, fill=BOTH, expand=1)    pane2 = wiz.add_pane( 'two', 'Second')    lbl2 = Label(pane2, text=&quot;This is the second pane.&quot;)    lbl2.pack(side=TOP, fill=BOTH, expand=1)    pane3 = wiz.add_pane(        'three', 'Third',        entrycommand=enable_finish,        prevcommand=disable_finish    )    lbl3 = Label(pane3, text=&quot;This is the third pane.&quot;)    lbl3.pack(side=TOP, fill=BOTH, expand=1)    # wiz.show_pane('two')    # wiz.del_pane('two')    # wiz.set_prev_enabled(True)    # wiz.set_next_enabled(True)    root.wm_withdraw()    root.wait_window(wiz)ScrolledListbox---------------Example code::    from belfrywidgets import Wizard    root = Tk()    lbox = ScrolledListbox(        root,        horiz_scroll=False,        vert_scroll=True,        width=30,        height=15,    )    lbox.pack(side=TOP, fill=BOTH, expand=1)    for i in range(1,51):        lbox.insert(END, &quot;Item %d&quot; % i)    tk.mainloop()ProgressBar-----------Indeterminate mode example code::    from belfrywidgets import ProgressBar, INDETERMINATE    tk = Tk()    tk.config(background=&quot;#446&quot;)    pb = ProgressBar(        tk, mode=INDETERMINATE,        bordercolor=&quot;#446&quot;,        foreground=&quot;red&quot;,        background=&quot;cyan&quot;    )    pb.pack(fill=BOTH, expand=1, padx=10, pady=10)    pb.start()    tk.after(20000, pb.stop)    tk.mainloop()Determinate mode example code::    from belfrywidgets import ProgressBar, DETERMINATE    tk = Tk()    tk.config(background=&quot;#446&quot;)    v = DoubleVar()    v.set(0.0)    pb = ProgressBar(        tk, mode=DETERMINATE,        maximum=200,        variable=v,        bordercolor=&quot;#446&quot;,        foreground=&quot;red&quot;,        background=&quot;cyan&quot;    )    pb.pack(fill=BOTH, expand=1, padx=10, pady=10)    def inc():        v.set(v.get()+1)        if v.get() &lt; 200:            tk.after(100, inc)    inc()    tk.mainloop()ToolTip-------Example code::    from belfrywidgets import ToolTip    tk = Tk()    ent = Entry(tk)    txt = Text(tk, borderwidth=2, relief=&quot;sunken&quot;)    ent.pack(side=TOP, padx=5, pady=5)    txt.pack(side=TOP, padx=5, pady=5)    txt.insert(END, &quot;Tagged Text\n&quot;, &quot;footag&quot;)    txt.insert(END, &quot;Untagged Text\n&quot;)    ToolTip(ent, &quot;This is an entry widget.&quot;)    ToolTip(txt, &quot;This is a text widget.&quot;, tag=&quot;footag&quot;)    tk.mainloop()</longdescription>
</pkgmetadata>