<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Donfig======.. image:: https://github.com/pytroll/donfig/workflows/CI/badge.svg?branch=main    :target: https://github.com/pytroll/donfig/actions?query=workflow%3A%22CI%22.. image:: https://codecov.io/gh/pytroll/donfig/branch/main/graph/badge.svg?token=xmvNtxzdoB   :target: https://codecov.io/gh/pytroll/donfig.. image:: https://anaconda.org/conda-forge/donfig/badges/version.svg   :target: https://anaconda.org/conda-forge/donfig/.. image:: https://results.pre-commit.ci/badge/github/pytroll/donfig/main.svg   :target: https://results.pre-commit.ci/latest/github/pytroll/donfig/main   :alt: pre-commit.ci statusDonfig is a python library meant to make configuration easier for otherpython packages. Donfig can be configured programmatically, byenvironment variables, or from YAML files in standard locations. Thebelow examples show the basics of using donfig. For more details see theofficial `documentation &lt;https://donfig.readthedocs.io/en/latest/&gt;`_.Installation------------Donfig can be installed from PyPI using pip:.. code-block:: bash    pip install donfigOr with conda using the conda-forge channel:.. code-block:: bash    conda install -c conda-forge donfigUsing Donfig------------Create the package-wide configuration object for your package named `mypkg`:.. code-block:: python    # mypkg/__init__.py    from donfig import Config    config = Config('mypkg')Use the configuration object:.. code-block:: python    from mypkg import config    important_val = config.get('important_key')    if important_val:        # do something    else:        # something elseSet configuration in Python---------------------------Configuration can be modified in python before code using it is called:.. code-block:: python    # mypkg/work.py    from mypkg import config    config.set(important_key=5)    # use the configurationDonfig configurations can also be changed as a context manager:.. code-block:: python    config.set(other_key=True)    with config.set(other_key=False):        print(config.get('other_key'))  # False    print(config.get('other_key'))  # TrueConfigure from environment variables------------------------------------Environment variables are automatically loaded when the Config object iscreated. Any environment variable starting with the name of the configobject in all capital letters and an underscore will be loaded in tothe config object:.. code-block:: bash    export MYPKG_MY_KEY=&quot;a value&quot;And can be accessed in python:.. code-block:: python    from mypkg import config    print(config.get('my_key'))Configure from YAML file------------------------Donfig will also automatically load any YAML configuration files found inspecific paths. The default paths:- ~/.config/&lt;config name&gt;/- /etc/&lt;config name&gt;/- &lt;sys.prefix&gt;/etc/&lt;config name&gt;/Note the `/etc/&lt;config name&gt;/` directory can also be specified with theenvironment variable `DASK_ROOT_CONFIG`. Also note that`~/.config/&lt;package name&gt;` (or other location specified with `DASK_CONFIG`)can be created as a custom user configuration file for easier usercustomization (see documentation for details).History-------Donfig is based on the original configuration logic of the `dask` library.The code has been modified to use a config object instead of a globalconfiguration dictionary. This makes the configuration logic of dask availableto everyone. The name &quot;donfig&quot; is a shortening of &quot;dask.config&quot;, the originaldask module that implemented this functionality.License-------Original code from the dask library was distributed under the licensespecified in `DASK_LICENSE.txt`. In November 2018 this code was migrated tothe Donfig project under the MIT license described in `LICENSE.txt`. The fullcopyright for this project is therefore::    Copyright (c) 2018 Donfig Developers    Copyright (c) 2014-2018, Anaconda, Inc. and contributors</longdescription>
</pkgmetadata>