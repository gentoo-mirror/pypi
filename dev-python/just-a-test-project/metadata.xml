<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Just a test project[![PyPI](https://img.shields.io/pypi/v/just-a-test-project?style=flat-square)](https://pypi.python.org/pypi/just-a-test-project/)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/just-a-test-project?style=flat-square)](https://pypi.python.org/pypi/just-a-test-project/)[![PyPI - License](https://img.shields.io/pypi/l/just-a-test-project?style=flat-square)](https://pypi.python.org/pypi/just-a-test-project/)[![Coookiecutter - Wolt](https://img.shields.io/badge/cookiecutter-Wolt-00c2e8?style=flat-square&amp;logo=cookiecutter&amp;logoColor=D4AA00&amp;link=https://github.com/woltapp/wolt-python-package-cookiecutter)](https://github.com/woltapp/wolt-python-package-cookiecutter)---**Documentation**: [https://creditornot.github.io/just-a-test-project](https://creditornot.github.io/just-a-test-project)**Source Code**: [https://github.com/creditornot/just-a-test-project](https://github.com/creditornot/just-a-test-project)**PyPI**: [https://pypi.org/project/just-a-test-project/](https://pypi.org/project/just-a-test-project/)---A project for testing wolt-python-package-cookiecutter## Installation```shpip install just-a-test-project```## Development* Clone this repository* Requirements:  * [Poetry](https://python-poetry.org/)  * Python 3.7+* Create a virtual environment and install the dependencies```shpoetry install```* Activate the virtual environment```shpoetry shell```### Testing```shpytest```### DocumentationThe documentation is automatically generated from the content of the [docs directory](./docs) and from the docstrings of the public signatures of the source code. The documentation is updated and published as a [Github project page ](https://pages.github.com/) automatically as part each release.### ReleasingTrigger the [Draft release workflow](https://github.com/creditornot/just-a-test-project/actions/workflows/draft_release.yml)(press _Run workflow_). This will update the changelog &amp; version and create a GitHub release which is in _Draft_ state.Find the draft release from the[GitHub releases](https://github.com/creditornot/just-a-test-project/releases) and publish it. When a release is published, it'll trigger [release](.github/workflows/release.yml) workflow which creates PyPI release and deploys updated documentation.### Pre-commitPre-commit hooks run all the auto-formatters (e.g. `black`, `isort`), linters (e.g. `mypy`, `flake8`), and other quality checks to make sure the changeset is in good shape before a commit/push happens.You can install the hooks with (runs for each commit):```shpre-commit install```Or if you want them to run only for each push:```shpre-commit install -t pre-push```Or if you want e.g. want to run all checks manually for all files:```shpre-commit run --all-files```---This project was generated using the [wolt-python-package-cookiecutter](https://github.com/woltapp/wolt-python-package-cookiecutter) template.</longdescription>
</pkgmetadata>