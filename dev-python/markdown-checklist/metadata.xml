<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[Markdown Checklist](https://github.com/FND/markdown-checklist)a [Python Markdown](http://pythonhosted.org/Markdown/) extension for lists oftasks with checkboxesinspired by[GitHub task lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments):    * [ ] foo    * [x] bar    * [ ] bazbecomes    &lt;ul&gt;    &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; foo&lt;/li&gt;    &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled checked&gt; bar&lt;/li&gt;    &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; baz&lt;/li&gt;    &lt;/ul&gt;* a dash can be used instead of an asterisk for list items* both upper- and lowercase &quot;x&quot; are accepted to activate checkboxesInstallation------------    $ pip install markdown-checklistUsage-----    import markdown    html = markdown.markdown(source, extensions=['markdown_checklist.extension'])or    import markdown    from markdown_checklist.extension import ChecklistExtension    html = markdown.markdown(source, extensions=[ChecklistExtension()])There is also a small JavaScript/jQuery library to make checkboxes interactive:    new Checklists(&quot;article&quot;, function(checkbox, callback) {        var uri = checkbox.closest(&quot;article&quot;).find(&quot;h1 a&quot;).attr(&quot;href&quot;);        jQuery.get(uri, callback);    }, function(markdown, checkbox, callback) {        var uri = checkbox.closest(&quot;article&quot;).find(&quot;h1 a&quot;).attr(&quot;href&quot;);        jQuery.ajax({            type: &quot;put&quot;,            uri: uri,            data: markdown,            success: callback        });    });See included `checklists.js` for details.</longdescription>
</pkgmetadata>