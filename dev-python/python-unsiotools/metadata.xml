<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>## ABOUTUNSIOTOOLS contains a collection of [unsio](https://projets.lam.fr/projects/unsio) based programs and depends of the [Nemo](https://teuben.github.io/nemo/) package.You have access to [falcON](https://iopscience.iop.org/article/10.1086/312724/pdf) algorithm to compute density and gravity.## Installing python wrapper```pip install python-unsiotools -U```## To get some docstring help```# Help on falcON classpydoc unsiotools.simulations.cfalcon```## Usage- In the example below, we load a RAMSES simulation, and compute density and gravity on HALO particles```pythonimport unsio.input as uns_in  # unsio reading moduleimport unsiotools.simulations.cfalcon as falconmyfile=&quot;/home/jcl/output_00004&quot; # input RAMSES simulation# we instantiate a CUNS_IN objectmy_in=uns_in.CUNS_IN(myfile,&quot;halo&quot;) # We select components HALO## Reading#if my_in.nextFrame(): # load snapshot  # read halo positions  status,pos=my_in.getData(&quot;halo&quot;,&quot;pos&quot;)  # read halo mass  status,mass=my_in.getData(&quot;halo&quot;,&quot;mass&quot;)  # read time simulation  status,timex=my_in.getData(&quot;time&quot;)# compute densitycf=falcon.CFalcon()ok,rho,hsml=cf.getDensity(pos,mass)print(&quot;Rho=&quot;,rho)# compute gravityeps=0.05 # softeningok,acc,phi=cf.getGravity(pos,mass,eps)print (ok,acc,phi)```- In this more simple example, we compute density and gravity on random data. Note that data must be in **float32** format```pythonimport unsiotools.simulations.cfalcon as falconimport numpy as nppos=np.float32(np.random.random_sample((300,)))mass=np.float32(np.random.random_sample((100,)))cf=falcon.CFalcon()# densityok,rho,hsml=cf.getDensity(pos,mass)print(f&quot;ok={ok}\nrho={rho}&quot;)# gravityeps=0.05ok,acc,phi=cf.getGravity(pos,mass,eps)print (f&quot;ok={ok}\nacc={acc}\nphi={phi}&quot;)```## LicenceUNSIOTOOLS is open source and released under the terms of the [CeCILL2 Licence](http://www.cecill.info/licences/Licence_CeCILL_V2-en.html)## WebpagePLease visit :- [UNSIO project home page](https://projets.lam.fr/projects/unsio)- [UNSIO Python reading manual](https://projets.lam.fr/projects/unsio/wiki/PythonReadDataNew)- [UNSIO Python writing manual](https://projets.lam.fr/projects/unsio/wiki/PythonWriteDataNew)- [UNSIO Pypi page](https://pypi.org/project/python-unsio/)- [NEMO home page](https://teuben.github.io/nemo/)## Copyright**Copyright Jean-Charles LAMBERT**     **Jean-Charles.Lambert_at_lam.fr**     </longdescription>
</pkgmetadata>