<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># SCRU128: Sortable, Clock and Random number-based Unique identifier[![PyPI](https://img.shields.io/pypi/v/scru128)](https://pypi.org/project/scru128/)[![License](https://img.shields.io/pypi/l/scru128)](https://github.com/scru128/python/blob/main/LICENSE)SCRU128 ID is yet another attempt to supersede [UUID] for the users who needdecentralized, globally unique time-ordered identifiers. SCRU128 is inspired by[ULID] and [KSUID] and has the following features:- 128-bit unsigned integer type- Sortable by generation time (as integer and as text)- 25-digit case-insensitive textual representation (Base36)- 48-bit millisecond Unix timestamp that ensures useful life until year 10889- Up to 281 trillion time-ordered but unpredictable unique IDs per millisecond- 80-bit three-layer randomness for global uniqueness```pythonimport scru128# generate a new identifier objectx = scru128.new()print(x)  # e.g., &quot;036z951mhjikzik2gsl81gr7l&quot;print(int(x))  # as a 128-bit unsigned integer# generate a textual representation directlyprint(scru128.new_string())  # e.g., &quot;036z951mhzx67t63mq9xe6q0j&quot;```See [SCRU128 Specification] for details.[UUID]: https://en.wikipedia.org/wiki/Universally_unique_identifier[ULID]: https://github.com/ulid/spec[KSUID]: https://github.com/segmentio/ksuid[SCRU128 Specification]: https://github.com/scru128/spec## Command-line interface`scru128` generates SCRU128 IDs.```bash$ scru128036zg4zlmdwdz8414eim77vct$ scru128 -n 4036zg4zlv707wnczl108ky4i7036zg4zlv707wnczl12towmho036zg4zlv707wnczl14hirm6n036zg4zlv707wnczl17110shh````scru128-inspect` prints the components of given SCRU128 IDs as human- andmachine-readable JSON objects.```bash$ scru128 -n 2 | scru128-inspect{  &quot;input&quot;:        &quot;036zg552n91mt9s0gyhdwif95&quot;,  &quot;canonical&quot;:    &quot;036zg552n91mt9s0gyhdwif95&quot;,  &quot;timestampIso&quot;: &quot;2022-03-20T08:34:01.493+00:00&quot;,  &quot;timestamp&quot;:    &quot;1647765241493&quot;,  &quot;counterHi&quot;:    &quot;10145723&quot;,  &quot;counterLo&quot;:    &quot;13179084&quot;,  &quot;entropy&quot;:      &quot;4167049657&quot;,  &quot;fieldsHex&quot;:    [&quot;017fa6763e95&quot;, &quot;9acfbb&quot;, &quot;c918cc&quot;, &quot;f86021b9&quot;]}{  &quot;input&quot;:        &quot;036zg552n91mt9s0gyj7i56sj&quot;,  &quot;canonical&quot;:    &quot;036zg552n91mt9s0gyj7i56sj&quot;,  &quot;timestampIso&quot;: &quot;2022-03-20T08:34:01.493+00:00&quot;,  &quot;timestamp&quot;:    &quot;1647765241493&quot;,  &quot;counterHi&quot;:    &quot;10145723&quot;,  &quot;counterLo&quot;:    &quot;13179085&quot;,  &quot;entropy&quot;:      &quot;3838717859&quot;,  &quot;fieldsHex&quot;:    [&quot;017fa6763e95&quot;, &quot;9acfbb&quot;, &quot;c918cd&quot;, &quot;e4ce2fa3&quot;]}```## LicenseLicensed under the Apache License, Version 2.0.</longdescription>
</pkgmetadata>