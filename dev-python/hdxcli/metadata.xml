<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![](images/hdxcli.png)](https://github.com/hydrolix/hdx-cli)`hdxcli` is a command-line tool to work with hydrolix projects and tablesinteractively.Common operations such as CRUD operations on projects/tables/transforms and others  can be performed.# Hdx-cli installationYou can install `hdxcli` from pip:```shellpip install hdxcli```# Using hdxcli command-line program`hdxcli` supports multiple profiles. You can use a default profile oruse the `--profile` option to operate on a non-default profile.When trying to invoke a command, if a login to the server is necessary, a prompt will be shown and the token will be cached.# Command-line tool organizationThe tool is organized, mostly with the general invocation form of:```shellhdxcli &lt;resource&gt; [&lt;subresource...] &lt;verb&gt; [&lt;resource_name&gt;]```Table and project resources have defaults that depend on the profile you are working with,so they can be omitted if you used the `set` command.For all other resources, you can use `--transform`, `--dictionary`, etc. Please see thecommand line help for more information.## Projects, tables and transformsThe basic operations you can do with these resources are:- list them- create a new resource- delete an existing resource- modify an existing resource- show a resource in raw json format- show settings from a resource- write a setting- show a single setting## Working with transforms and batch jobsIn order to use a transforms, you need to:1. create a transform``` shellhdxcli transform create -f atransform.json atransform```Where atransform.json is a local file and atransform is the name for the transform that will be uploaded to the cluster. Remember that a transform is applied to a table in a project, so whatever you `set` with the command-line tool will be the target of your transform.If you want to override it, do:``` shellhdxcli --project &lt;the-project&gt; --table &lt;the-table&gt; transform create -f atransform.json atransform```2. ingest a batch job``` shellhdxcli job batch ingest &lt;job-name&gt; &lt;job-url&gt;```The job-name is the job name you will see if you list the job batch. job url can be either a local url or a urlto a bucket *for which the cluster has at lease read access to*.## Listing and showing your profiles Listing profiles:``` shellhdxcli profile list```Shogin default profile``` shellhdxcli profile show```## FAQ: Common operations### Showing help In order to see what you can do with the tool:``` shellhdxcli --help```### Listing resourcesTo list projects:``` shellhdxcli project list```To list resources on a project:``` shellhdxcli --project &lt;project-name&gt; table list```You can avoid repeating the project and table name by using the `set` command:### Set/unset project and table``` shellhdxcli set &lt;your-project&gt; &lt;your-table&gt;```Subsequent operations will be applied to the project and table. If you want to `unset`it, just do:``` shellhdxcli unset```### Creating resources``` shellhdxcli project create &lt;project-name&gt;```### Peforming operations against another serverIf you want to use `hdxcli` against another server, use `--profile` option:### Working with resource settingsShow settings for a resource:``` shellhdxcli project &lt;myprojectname&gt; settings`````` shellhdxcli table &lt;mytablename&gt; settings`````` shellhdxcli --transform &lt;mytransform transform settings```Modify a setting:``` shellhdxcli table &lt;mytablename&gt; settings key value```Show a single setting:``` shellhdxcli table &lt;mytablename&gt; settings key value```### Getting help for subcommandsCheck which commands are available for each resource by typing:```hdxcli [&lt;resource&gt;...] [&lt;verb&gt;] --help```</longdescription>
</pkgmetadata>