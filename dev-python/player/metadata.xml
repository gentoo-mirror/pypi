<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>player======.. image :: https://travis-ci.org/fafhrd91/player.png   :target:  https://travis-ci.org/fafhrd91/playerplayer allows to address templates with two parameters, category and name. Also it is possible to use set of directoriesfor each layer, in that case `player` searches templatesin each directory. It allows to override templates without changingcode. For example form library can define layer `field`::     &gt;&gt; ls ./fields/     .. bool.pt     .. file.pt     ...     .. textarea.ptIn your application you can override any of this template by defining new layer for `field` category::     &gt;&gt; ls ./myproject/fields/     .. bool.ptUsually top level directory is a category and file in directory is template.For example 'form:view.lt'::    `form` - layer category    `view` - template name    `.lt`  - custom pyramid renderer factoryLayer can to be defined with `add_layer` config directive:.. code-block:: python    &gt;&gt; config = Configurator()    .. config.include('player')    ..    .. config.add_layer('form', path='./path_to_form_dirctory/form/')`form` directory can contain any template:.. code-block:: python    &gt;&gt; ./form/    ..   view.pt    ..   actions.jinja2It is possible to use any of this templates as pyramid renderer path:.. code-block:: python    &gt;&gt; config.add_view(    ..     name='view.html',     ..     renderer='form:view.lt')or :.. code-block:: python    &gt;&gt; config.add_view(    ..     name='actions.html',     ..     renderer='form:actions.lt')It is possible to run python code before rendering template. There are `add_tmpl_filter` directive and `player.tmpl_filter` decorator:.. code-block:: python    &gt;&gt; def form_actions(context, request):    ..     return {'url': ...}    &gt;&gt; config.add_tmpl_filter('form:actions', form_action, name='custom')   or:.. code-block:: python    &gt;&gt; import player    &gt;&gt; @player.tmpl_filter('form:actions', name='custom')    .. def form_actions(context, request):    ..     return {'url': ...}`form_actions` function gets call just before rendering template.Layer has to be defined with `add_layer` directve before registering template filter function.Customization-------------Any number of layer categories can be registered and any number oflayers can be registered in each category. It doesnt require to override all templates from category. For example it is possible to override just view.pt template::    &gt;&gt; config.add_layer('form', 'custom', path='path_to_form_directory_2/form')and content of this new directory::    &gt;&gt; ./another_path/form/    ..   view.jinja2Now view `view.html` uses `view.jinja2` template. But `actions.html` stiluses original template.Another example, if you want customize `bool` field from ptah.form packageall you need is to create some folder, add it as 'fields' layer, and put`bool.pt` template to this folder, something like that::   &gt;&gt; config.add_layer('fields', 'custom', 'mypackage:fields')and ::   &gt;&gt; .mypackage/fields/   ..    bool.ptRequest method--------------`player` also provides request method `render_tmpl`. It accceptspath::   ..  ${structure: request.render_tmpl('form:actions')`.lt` extension is optional in this case.player-------...License-------player is offered under the BSD license.CHANGES=======0.6.1 (01-22-2013)------------------- Added python 2.60.6 (12-10-2012)----------------- Allow to use standard renderers in `render` function0.5 (11-30-2012)----------------- Use jinja2 for templates- Added `layout_data` request property- Allow to pass several messages to `error` message0.4 (11-12-2012)----------------- Added `player.layout` renderer- Added `-c` argument to `player` console script,   it allows to customize templates- `set_layout_data` accepts keyword arguments- Removed `player.wrap_layout()`- Removed python2.6 support0.3 (11-07-2012)----------------- Added `set_layout_data` request method, allow to set global layout options- Added status messages- Added formatters0.2 (11-01-2012)----------------- Added `layout` subsystem0.1 (10-30-2012)----------------- Initial release</longdescription>
</pkgmetadata>