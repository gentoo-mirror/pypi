<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># HEADS UP!PreTeXt-CLI has moved to &lt;https://pypi.org/project/pretext&gt;! To upgrade:```pip uninstall pretextbookpip install --upgrade pretext```Original README follows...---# PreTeXt-CLIA package for authoring and building [PreTeXt](https://pretextbook.org) documents.- GitHub: &lt;https://github.com/PreTeXtBook/pretext-cli/&gt;## Documentation and examples for authors/publishersMost documentation for PreTeXt authors and publishers is available at:- &lt;https://pretextbook.org/doc/guide/html/&gt;Authors and publishers may also find the examples catalog useful as well:- &lt;https://pretextbook.org/examples.html&gt;We have a few notes below (TODO: publish these in the Guide).### Installation#### Installing PythonPreTeXt-CLI requires the Python version specified in `pyproject.toml`.To check your version, type this into your terminal or command prompt:```python -V```If your version is 2.x, try this instead(and if so, either replace all future references to `python`in these instructions with `python3`).```python3 -V```If you don't have a compatible Python available, try one of these:- https://www.python.org/downloads/  - Windows warning: Be sure to select the option adding Python to your Path.- https://github.com/pyenv/pyenv#installation (Mac/Linux)- https://github.com/pyenv-win/pyenv-win#installation (Windows)#### Installing PreTeXt-CLIOnce you've confirmed that you're using a valid version of Python, justrun (replacing `python` with `python3` if necessary):```python -m pip install --user pretextbook```(It's also possible you may get an error like `error: invalid command 'bdist_wheel'`— good news, you can ignore it!)After installation, try to run:```pretext --help```If that works, great! Otherwise, it likely means that Python packagesaren't available on your “PATH”. In that case, replace all `pretext`commands with `python -m pretext` instead:```python -m pretext --help```Either way, you're now ready to use the CLI, the `--help` option will explain how to use all the differentsubcommands like `pretext new` and `pretext build`.#### External dependenciesWe install as much as we can with the `pip install` command, but depending on your machineyou may require some extra software:- [TeXLive](https://www.tug.org/texlive/)- [pdftoppm/Ghostscript](https://github.com/abarker/pdfCropMargins/blob/master/doc/installing_pdftoppm_and_ghostscript.rst)#### Upgrading PreTeXt-CLIIf you have an existing installation and you want to upgrade to a more recent version, you can run:```python -m pip install --upgrade pretextbook```#### Custom XSLCustom XSL is not encouraged for most authors, but (for example) developers workingbleeding-edge XSL from core PreTeXt may want to call XSL different from thatwhich is shipped with a fixed version of the CLI. This may be accomplished byadding an `&lt;xsl/&gt;` element to your target with a relative (to `project.ptx`) orabsolute path to the desired XSL. *(Note: this XSL must only importother XSL files in the same directory or within subdirectories.)*For example:```&lt;target name=&quot;html&quot;&gt;  &lt;format&gt;html&lt;/format&gt;  &lt;source&gt;source/main.ptx&lt;/source&gt;  &lt;publication&gt;publication/publication.ptx&lt;/publication&gt;  &lt;output-dir&gt;output/html&lt;/output-dir&gt;  &lt;xsl&gt;../pretext/xsl/pretext-html.xsl&lt;/xsl&gt;&lt;/target&gt;```If your custom XSL file needs to import the XSLshipped with the CLI (e.g. `pretext-common.xsl`), then use a `./core/`prefix in your custom XSL's `xsl:import@href` as follows:```&lt;xsl:import href=&quot;./core/pretext-common.xsl&quot;/&gt;```Similarly, `entities.ent` may be used:```&lt;!DOCTYPE xsl:stylesheet [    &lt;!ENTITY % entities SYSTEM &quot;./core/entities.ent&quot;&gt;    %entities;]&gt;```*Note: previously this was achieved with a `pretext-href` attribute - this is now deprecated and will be removed in a future release.*---## Development**Note.** The remainder of this documentation is intended only for those interestedin contributing to the developement of this project.  Anyone who simply wishes to*use* the PreTeXt-CLI can stop reading here. From the &quot;Clone or Download&quot; button on GitHub, copy the `REPO_URL` into the belowcommand to clone the project.```bashgit clone [REPO_URL]cd pretext-cli```### Using a valid Python installationDevelopers and contributors must install aversion of Python that matching the requirements in `pyproject.toml`.#### Using pyenv and poetry (Mac/Linux)The `pyenv` tool for Linux automates the process of running the correctversion of Python when working on this project (even if you haveother versions of Python installed on your system).- https://github.com/pyenv/pyenv#installationRun the following, replacing `PYTHON_VERSION` with your desired version.```pyenv install PYTHON_VERSION```Then follow these instructions to install `poetry`.- https://python-poetry.org/docs/#installation    - Note 2022/06/21: you may ignore &quot;This installer is deprecated&quot;. See      [python-poetry/poetry/issues/4128](https://github.com/python-poetry/poetry/issues/4128)Then you should be able to install dependencies into a virtual environmentwith this command.```poetry install```Then to use the in-development package, you can either enter a poetry shell:```pretext --version # returns system versionpoetry shellpretext --version # returns version being developedexitpretext --version # returns system version```Or use the runner (as long as you remain within the package directory):```pretext --version             # returns system versionpoetry run pretext --version  # returns version being developed```If you run `echo 'alias pr=&quot;poetry run&quot;' &gt;&gt; ~/.bashrc` then restart yourshell, this becomes less of a mouthful:```pretext --version     # returns system versionpr pretext --version  # returns version being developed```#### Steps on WindowsIn windows, you can either use the bash shell and follow the directions above,or try [pyenv-win](https://github.com/pyenv-win/pyenv-win#installation).  Inthe latter case, make sure to follow all the installation instructions, includingthe **Finish the installation**.  Then proceed to follow the directions above toinstall a version of python matching `.pyproject.toml`.  Finally, you may then needto manually add that version of python to your path.### Updating dependenciesTo add dependencies for the package, run```poetry add DEPENDENCY-NAME```If someone else has added a dependency:```poetry install```### Syncing untracked updatesUpdates to certain files tracked to the repository willneed to be rebuilt by each user when pulled from GitHub.The file `pretext/__init__.py` tracks the upstreamcommit of core PreTeXt XSL/Python code we're developing against(from `PreTeXtBook/pretext`).To fetch these updates from upstream, run:```poetry run python scripts/fetch_core.py```If you instead want to point to a local copy of `PreTeXtBook/pretext`,try this instead to set up symlinks:```poetry run python scripts/symlink_core.py path/to/pretext```Updates to `templates/` must be zipped and moved into`pretext/templates/resources`. This is done automatically byrunning:```poetry run python scripts/zip_templates.py```### TestingSets are contained in `tests/`. To run all tests:```poetry run pytest```To run a specific test, say `test_name` inside `test_file.py`:```poetry run pytest -k name```Tests are automatically run by GitHub Actions when pushing to identifyregressions.### PackagingTo check if a successful build is possible:```poetry run python scripts/build_package.py```To publish a new alpha release, first add/commit any changes. Thenthe following handles bumping versions, publishing to PyPI,and associated Git management.```poetry run python scripts/release_alpha.py```Publishing a stable release is similar:```poetry run python scripts/release_stable.py # patch +0.+0.+1poetry run python scripts/release_stable.py minor # +0.+1.0poetry run python scripts/release_stable.py major # +1.0.0```---## About### PreTeXt-CLI Lead Developers- [Steven Clontz](https://clontz.org/)- [Oscar Levin](https://math.oscarlevin.com/)### About PreTeXtThe development of [PreTeXt's core](https://github.com/PreTeXtBook/pretext)is led by [Rob Beezer](http://buzzard.ups.edu/).</longdescription>
</pkgmetadata>