<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>python-oletools===============|PyPI| |Build Status| |Say Thanks!|`oletools &lt;http://www.decalage.info/python/oletools&gt;`__ is a package ofpython tools to analyze `Microsoft OLE2files &lt;http://en.wikipedia.org/wiki/Compound_File_Binary_Format&gt;`__(also called Structured Storage, Compound File Binary Format or CompoundDocument File Format), such as Microsoft Office documents or Outlookmessages, mainly for malware analysis, forensics and debugging. It isbased on the `olefile &lt;http://www.decalage.info/olefile&gt;`__ parser. Seehttp://www.decalage.info/python/oletools for more info.**Quick links:** `Homepage &lt;http://www.decalage.info/python/oletools&gt;`__ -`Download/Install &lt;https://github.com/decalage2/oletools/wiki/Install&gt;`__- `Documentation &lt;https://github.com/decalage2/oletools/wiki&gt;`__ -`ReportIssues/Suggestions/Questions &lt;https://github.com/decalage2/oletools/issues&gt;`__- `Contact the Author &lt;http://decalage.info/contact&gt;`__ -`Repository &lt;https://github.com/decalage2/oletools&gt;`__ - `Updates onTwitter &lt;https://twitter.com/decalage2&gt;`__`Cheatsheet &lt;https://github.com/decalage2/oletools/blob/master/cheatsheet/oletools_cheatsheet.pdf&gt;`__Note: python-oletools is not related to OLETools published by BeCubedSoftware.News-----  **2022-05-09 v0.60.1**:   -  olevba:      -  fixed a bug when calling XLMMacroDeobfuscator (PR #737)      -  removed keyword &quot;sample&quot; causing false positives   -  oleid: fixed OleID init issue (issue #695, PR #696)   -  oleobj:      -  added simple detection of CVE-2021-40444 initial stage      -  added detection for customUI onLoad      -  improved handling of incorrect filenames in OLE package (PR         #451)   -  rtfobj: fixed code to find URLs in OLE2Link objects for Py3 (issue      #692)   -  ftguess:      -  added PowerPoint and XPS formats (PR #716)      -  fixed issue with XPS and malformed documents (issue #711)      -  added XLSB format (issue #758)   -  improved logging with common module log_helper (PR #449)-  **2021-06-02 v0.60**:   -  ftguess: new tool to identify file formats and containers (issue      #680)   -  oleid: (issue #679)      -  each indicator now has a risk level      -  calls ftguess to identify file formats      -  calls olevba+mraptor to detect and analyse VBA+XLM macros   -  olevba:      -  when XLMMacroDeobfuscator is available, use it to extract and         deobfuscate XLM macros   -  rtfobj:      -  use ftguess to identify file type of OLE Package (issue #682)      -  fixed bug in re_executable_extensions   -  crypto: added PowerPoint transparent password '/01Hannes      Ruescher/01' (issue #627)   -  setup: XLMMacroDeobfuscator, xlrd2 and pyxlsb2 added as optional      dependencies-  **2021-05-07 v0.56.2**:   -  olevba:      -  updated plugin_biff to v0.0.22 to fix a bug (issues #647, #674)   -  olevba, mraptor:      -  added detection of Workbook_BeforeClose (issue #518)   -  rtfobj:      -  fixed bug when OLE package class name ends with null characters         (issue #507, PR #648)   -  oleid:      -  fixed bug in check_excel (issue #584, PR #585)   -  clsid:      -  added several CLSIDs related to MS Office click-to-run issue         CVE-2021-27058      -  added checks to ensure that all CLSIDs are uppercase (PR #678)-  **2021-04-02 v0.56.1**:   -  olevba:      -  fixed bug when parsing some malformed files (issue #629)   -  oleobj:      -  fixed bug preventing detection of links 'externalReference',         'frame', 'hyperlink' (issue #641, PR #670)   -  setup:      -  avoid installing msoffcrypto-tool when platform is PyPy+Windows         (issue #473)      -  PyPI version is now a wheel package to improve installation and         avoid antivirus false positives due to test files (issues #215,         #398)-  **2020-09-28 v0.56**:   -  olevba/mraptor:      -  added detection of trigger \_OnConnecting   -  olevba:      -  updated plugin_biff to v0.0.17 to improve Excel 4/XLM macros         parsing      -  added simple analysis of Excel 4/XLM macros in XLSM files (PR         #569)      -  added detection of template injection (PR #569)      -  added detection of many suspicious keywords (PR #591 and #569,         see https://www.certego.net/en/news/advanced-vba-macros/)      -  improved MHT detection (PR #532)      -  added --no-xlm option to disable Excel 4/XLM macros parsing (PR         #532)      -  fixed bug when decompressing raw chunks in VBA (issue #575)      -  fixed bug with email package due to monkeypatch for MHT parsing         (issue #602, PR #604)      -  fixed option --relaxed (issue #596, PR #595)      -  enabled relaxed mode by default (issues #477, #593)      -  fixed detect_vba_macros to always return VBA code as unicode on         Python 3 (issues #455, #477, #587, #593)      -  replaced option --pcode by --show-pcode and --no-pcode,         replaced optparse by argparse (PR #479)   -  oleform: improved form parsing (PR #532)   -  oleobj: &quot;Ole10Native&quot; is now case insensitive (issue #541)   -  clsid: added PDF (issue #552), Microsoft Word Picture (issue #571)   -  ppt_parser: fixed bug on Python 3 (issues #177, #607, PR #450)-  **2019-12-03 v0.55**:   -  olevba:      -  added support for SLK files and XLM macro extraction from SLK      -  VBA Stomping detection      -  integrated pcodedmp to extract and disassemble P-code      -  detection of suspicious keywords and IOCs in P-code      -  new option --pcode to display P-code disassembly      -  improved detection of auto execution triggers   -  rtfobj: added URL carver for CVE-2017-0199   -  better handling of unicode for systems with locale that does not      support UTF-8, e.g. LANG=C (PR #365)   -  tests:      -  test files can now be encrypted, to avoid antivirus alerts (PR         #217, issue #215)      -  tests that trigger antivirus alerts have been temporarily         disabled (issue #215)See the `fullchangelog &lt;https://github.com/decalage2/oletools/wiki/Changelog&gt;`__ formore information.Tools:------Tools to analyze malicious documents~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-  `oleid &lt;https://github.com/decalage2/oletools/wiki/oleid&gt;`__: to   analyze OLE files to detect specific characteristics usually found in   malicious files.-  `olevba &lt;https://github.com/decalage2/oletools/wiki/olevba&gt;`__: to   extract and analyze VBA Macro source code from MS Office documents   (OLE and OpenXML).-  `MacroRaptor &lt;https://github.com/decalage2/oletools/wiki/mraptor&gt;`__:   to detect malicious VBA Macros-  `msodde &lt;https://github.com/decalage2/oletools/wiki/msodde&gt;`__: to   detect and extract DDE/DDEAUTO links from MS Office documents, RTF   and CSV-  `pyxswf &lt;https://github.com/decalage2/oletools/wiki/pyxswf&gt;`__: to   detect, extract and analyze Flash objects (SWF) that may be embedded   in files such as MS Office documents (e.g. Word, Excel) and RTF,   which is especially useful for malware analysis.-  `oleobj &lt;https://github.com/decalage2/oletools/wiki/oleobj&gt;`__: to   extract embedded objects from OLE files.-  `rtfobj &lt;https://github.com/decalage2/oletools/wiki/rtfobj&gt;`__: to   extract embedded objects from RTF files.Tools to analyze the structure of OLE files~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-  `olebrowse &lt;https://github.com/decalage2/oletools/wiki/olebrowse&gt;`__:   A simple GUI to browse OLE files (e.g. MS Word, Excel, Powerpoint   documents), to view and extract individual data streams.-  `olemeta &lt;https://github.com/decalage2/oletools/wiki/olemeta&gt;`__: to   extract all standard properties (metadata) from OLE files.-  `oletimes &lt;https://github.com/decalage2/oletools/wiki/oletimes&gt;`__:   to extract creation and modification timestamps of all streams and   storages.-  `oledir &lt;https://github.com/decalage2/oletools/wiki/oledir&gt;`__: to   display all the directory entries of an OLE file, including free and   orphaned entries.-  `olemap &lt;https://github.com/decalage2/oletools/wiki/olemap&gt;`__: to   display a map of all the sectors in an OLE file.Projects using oletools:------------------------oletools are used by a number of projects and online malware analysisservices, including `ACE &lt;https://github.com/IntegralDefense/ACE&gt;`__,`Anlyz.io &lt;https://sandbox.anlyz.io/&gt;`__,`AssemblyLine &lt;https://www.cse-cst.gc.ca/en/assemblyline&gt;`__,`CAPE &lt;https://github.com/ctxis/CAPE&gt;`__,`CinCan &lt;https://cincan.io&gt;`__, `CuckooSandbox &lt;https://github.com/cuckoosandbox/cuckoo&gt;`__,`DARKSURGEON &lt;https://github.com/cryps1s/DARKSURGEON&gt;`__,`Deepviz &lt;https://sandbox.deepviz.com/&gt;`__,`DIARIO &lt;https://diario.elevenpaths.com/&gt;`__,`dridex.malwareconfig.com &lt;https://dridex.malwareconfig.com&gt;`__, `EMLAnalyzer &lt;https://github.com/ninoseki/eml_analyzer&gt;`__,`FAME &lt;https://certsocietegenerale.github.io/fame/&gt;`__,`FLARE-VM &lt;https://github.com/fireeye/flare-vm&gt;`__,`Hybrid-analysis.com &lt;https://www.hybrid-analysis.com/&gt;`__,`IntelOwl &lt;https://github.com/certego/IntelOwl&gt;`__, `JoeSandbox &lt;https://www.document-analyzer.net/&gt;`__, `LaikaBOSS &lt;https://github.com/lmco/laikaboss&gt;`__,`MacroMilter &lt;https://github.com/sbidy/MacroMilter&gt;`__,`mailcow &lt;https://mailcow.email/&gt;`__,`malshare.io &lt;https://malshare.io&gt;`__,`malware-repo &lt;https://github.com/Tigzy/malware-repo&gt;`__, `MalwareRepository Framework (MRF) &lt;https://www.adlice.com/download/mrf/&gt;`__,`MalwareBazaar &lt;https://bazaar.abuse.ch/&gt;`__,`olefy &lt;https://github.com/HeinleinSupport/olefy&gt;`__,`Pandora &lt;https://github.com/pandora-analysis/pandora&gt;`__,`PeekabooAV &lt;https://github.com/scVENUS/PeekabooAV&gt;`__,`pcodedmp &lt;https://github.com/bontchev/pcodedmp&gt;`__,`PyCIRCLean &lt;https://github.com/CIRCL/PyCIRCLean&gt;`__,`REMnux &lt;https://remnux.org/&gt;`__,`Snake &lt;https://github.com/countercept/snake&gt;`__,`SNDBOX &lt;https://app.sndbox.com&gt;`__, `Splunk add-on for MS O365Email &lt;https://splunkbase.splunk.com/app/5365/&gt;`__,`SpuriousEmu &lt;https://github.com/ldbo/SpuriousEmu&gt;`__,`Strelka &lt;https://github.com/target/strelka&gt;`__,`stoQ &lt;https://stoq.punchcyber.com/&gt;`__, `SublimePlatform/MQL &lt;https://docs.sublimesecurity.com/docs/enrichment-functions&gt;`__,`TheHive/Cortex &lt;https://github.com/TheHive-Project/Cortex-Analyzers&gt;`__,`TSUGURI Linux &lt;https://tsurugi-linux.org/&gt;`__,`Vba2Graph &lt;https://github.com/MalwareCantFly/Vba2Graph&gt;`__,`Viper &lt;http://viper.li/&gt;`__,`ViperMonkey &lt;https://github.com/decalage2/ViperMonkey&gt;`__,`YOMI &lt;https://yomi.yoroi.company&gt;`__, and probably`VirusTotal &lt;https://www.virustotal.com&gt;`__,`FileScan.IO &lt;https://www.filescan.io&gt;`__. And quite a few `otherprojects onGitHub &lt;https://github.com/search?q=oletools&amp;type=Repositories&gt;`__.(Please `contact me &lt;(http://decalage.info/contact)&gt;`__ if you have orknow a project using oletools)Download and Install:---------------------The recommended way to download and install/update the **latest stablerelease** of oletools is to use`pip &lt;https://pip.pypa.io/en/stable/installing/&gt;`__:-  On Linux/Mac: ``sudo -H pip install -U oletools[full]``-  On Windows: ``pip install -U oletools[full]``This should automatically create command-line scripts to run each toolfrom any directory: ``olevba``, ``mraptor``, ``rtfobj``, etc.The keyword ``[full]`` means that all optional dependencies will beinstalled, such as XLMMacroDeobfuscator. If you prefer a lighter versionwithout optional dependencies, just remove ``[full]`` from the commandline.To get the **latest development version** instead:-  On Linux/Mac:   ``sudo -H pip install -U https://github.com/decalage2/oletools/archive/master.zip``-  On Windows:   ``pip install -U https://github.com/decalage2/oletools/archive/master.zip``See the`documentation &lt;https://github.com/decalage2/oletools/wiki/Install&gt;`__for other installation options.Documentation:--------------The latest version of the documentation can be found`online &lt;https://github.com/decalage2/oletools/wiki&gt;`__, otherwise acopy is provided in the doc subfolder of the package.How to Suggest Improvements, Report Issues or Contribute:---------------------------------------------------------This is a personal open-source project, developed on my spare time. Anycontribution, suggestion, feedback or bug report is welcome.To suggest improvements, report a bug or any issue, please use the`issue reporting page &lt;https://github.com/decalage2/oletools/issues&gt;`__,providing all the information and files to reproduce the problem.You may also `contact the author &lt;http://decalage.info/contact&gt;`__directly to provide feedback.The code is available in `a GitHubrepository &lt;https://github.com/decalage2/oletools&gt;`__. You may use it tosubmit enhancements using forks and pull requests.License-------This license applies to the python-oletools package, apart from thethirdparty folder which contains third-party files published with theirown license.The python-oletools package is copyright (c) 2012-2022 Philippe Lagadec(http://www.decalage.info)All rights reserved.Redistribution and use in source and binary forms, with or withoutmodification, are permitted provided that the following conditions aremet:-  Redistributions of source code must retain the above copyright   notice, this list of conditions and the following disclaimer.-  Redistributions in binary form must reproduce the above copyright   notice, this list of conditions and the following disclaimer in the   documentation and/or other materials provided with the distribution.THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;ASIS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITEDTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR APARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHTHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITEDTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, ORPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OFLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDINGNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THISSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.--------------olevba contains modified source code from the officeparser project,published under the following MIT License (MIT):officeparser is copyright (c) 2014 John William DavisonPermission is hereby granted, free of charge, to any person obtaining acopy of this software and associated documentation files (the&quot;Software&quot;), to deal in the Software without restriction, includingwithout limitation the rights to use, copy, modify, merge, publish,distribute, sublicense, and/or sell copies of the Software, and topermit persons to whom the Software is furnished to do so, subject tothe following conditions:The above copyright notice and this permission notice shall be includedin all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESSOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OFMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANYCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THESOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE... |PyPI| image:: https://img.shields.io/pypi/v/oletools.svg   :target: https://pypi.org/project/oletools/.. |Build Status| image:: https://travis-ci.org/decalage2/oletools.svg?branch=master   :target: https://travis-ci.org/decalage2/oletools.. |Say Thanks!| image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg   :target: https://saythanks.io/to/decalage2</longdescription>
</pkgmetadata>