<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pytest_aws_configTiny [Pytest](https://pytest.org) plugin that mocks your AWS configuration in tests, making your tests independent of the configuration on the developer machine. In particular, it prevents your tests from accessing your AWS credentials.## Why is this useful?Developers often use AWS configuration files to store (temporary) credentials to IAM users/roles. This is very useful to access the AWS account from the command line. But it also means that tests will run with these credentials.```&gt; export AWS_PROFILE=production&gt; aws logs describe-log-groups  # analyze some issue on production&gt; ... time passes ...&gt; ... write some code ...&gt; pytest tests  # execute tests```Whoops! These tests just ran with access to your production account. Hopefully everything was correctly mocked or patched.## InstallationJust install this plugin with `pip install pytest_aws_config`. No configuration necessary.## What about functional tests?Of course, some of your tests may actually need AWS credentials. You have two options:- Disable the plugin when running functional tests: `pytest -p no:pytest_aws_config`- Keep the plugin and use some other mechanism (e.g. a pytest fixture) to set the configuration in the test. Then your tests remain independent of the configuration on the developer machine.## LinksAWS documentation on [configuration files](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html) and [environment variables](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html).</longdescription>
</pkgmetadata>