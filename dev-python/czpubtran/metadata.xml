<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># CzPubTranA Python package to rertrieve realtime information about public transit in CZ by calling CHAPS REST API.Main purpose at the moment is to feed a sensor in Home-Assistant# Installpip install czpubtran# Example usage```import asyncioimport loggingimport aiohttpfrom datetime import datetime, timefrom czpubtran.api import czpubtranlogging.basicConfig(level=logging.ERROR)async def test():    session = aiohttp.ClientSession(raise_for_status=True)    bus = czpubtran(session, '')    timetables = await bus.async_list_combination_ids()    print(&quot;Listing available timetables (Combination IDs)&quot;)    print(timetables)    print('------------------------------------------------')    await bus.async_find_connection('Namesti Republiky', 'Chodov', 'ABCz')    print(f'First connection from {bus.origin} to {bus.destination} using timetable {bus.combination_id}:')    print(f'Departure: {bus.departure} line {bus.line}')    print(f'Duration: {bus.duration}')    print('Connections:')    for i, description in [(0, '1st connection'), (1, '2nd connection')]:        print(f'{description}:')        for detail in bus.connection_detail[i]:            print(                f&quot;line {detail['line']} &quot;                f&quot;at {detail['depTime']} &quot;                f&quot;from {detail['depStation']} &quot;                f&quot;-&gt; {detail['arrStation']} &quot;                f&quot;{detail['arrTime']} &quot;                f&quot;(delay: {detail['delay']} min)&quot;)    print('------------------------------------------------')    await bus.async_find_connection('Namesti Republiky', 'Chodov', 'ABCz', '23:20')    print(f'Scheduled connection from {bus.origin} to {bus.destination} at {bus.start_time}:')    print(f'Departure: {bus.departure} line {bus.line}')    print(f'Duration: {bus.duration}')    print('Connections:')    for i, description in [(0, '1st connection'), (1, '2nd connection')]:        print(f'{description}:')        for detail in bus.connection_detail[i]:            print(                f&quot;line {detail['line']} &quot;                f&quot;at {detail['depTime']} &quot;                f&quot;from {detail['depStation']} &quot;                f&quot;-&gt; {detail['arrStation']} &quot;                f&quot;{detail['arrTime']} &quot;                f&quot;(delay: {detail['delay']} min)&quot;)    await session.close()asyncio.run(test())```</longdescription>
</pkgmetadata>