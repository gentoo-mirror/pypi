<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Azure Container Registry client library for PythonAzure Container Registry allows you to store and manage container images and artifacts in a private registry for all types of container deployments.Use the client library for Azure Container Registry to:- List images or artifacts in a registry- Obtain metadata for images and artifacts, repositories and tags- Set read/write/delete properties on registry items- Delete images and artifacts, repositories and tags[Source code][source] | [Package (Pypi)][package] | [API reference documentation][docs] | [REST API documentation][rest_docs] | [Product documentation][product_docs]## _Disclaimer__Azure SDK Python packages support for Python 2.7 has ended 01 January 2022. For more information and questions, please refer to https://github.com/Azure/azure-sdk-for-python/issues/20691_## Getting started### Install the packageInstall the Azure Container Registry client library for Python with [pip][pip_link]:```bashpip install --pre azure-containerregistry```### Prerequisites* Python 3.6 or later is required to use this package.* You need an [Azure subscription][azure_sub] and a [Container Registry account][container_registry_docs] to use this package.To create a new Container Registry, you can use the [Azure Portal][container_registry_create_portal],[Azure PowerShell][container_registry_create_ps], or the [Azure CLI][container_registry_create_cli].Here's an example using the Azure CLI:```Powershellaz acr create --name MyContainerRegistry --resource-group MyResourceGroup --location westus --sku Basic```### Authenticate the clientThe [Azure Identity library][identity] provides easy Azure Active Directory support for authentication. The `DefaultAzureCredential` assumes the `AZURE_CLIENT_ID`, `AZURE_TENANT_ID`, and `AZURE_CLIENT_SECRET` environment variables are set, for more information refer to the [Azure Identity environment variables section](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#environment-variables)```python# Create a ContainerRegistryClient that will authenticate through Active Directoryfrom azure.containerregistry import ContainerRegistryClientfrom azure.identity import DefaultAzureCredentialendpoint = &quot;https://mycontainerregistry.azurecr.io&quot;audience = &quot;https://management.azure.com&quot;client = ContainerRegistryClient(endpoint, DefaultAzureCredential(), audience=audience)```## Key conceptsA **registry** stores Docker images and [OCI Artifacts](https://opencontainers.org/).  An image or artifact consists of a **manifest** and **layers**.  An image's manifest describes the layers that make up the image, and is uniquely identified by its **digest**.  An image can also be &quot;tagged&quot; to give it a human-readable alias.  An image or artifact can have zero or more **tags** associated with it, and each tag uniquely identifies the image.  A collection of images that share the same name but have different tags, is referred to as a **repository**.For more information please see [Container Registry Concepts](https://docs.microsoft.com/azure/container-registry/container-registry-concepts).## ExamplesThe following sections provide several code snippets covering some of the most common ACR Service tasks, including:- [List repositories](#list-repositories)- [List tags with anonymous access](#list-tags-with-anonymous-access)- [Set artifact properties](#set-artifact-properties)- [Delete images](#delete-images)Please note that each sample assumes there is a `CONTAINERREGISTRY_ENDPOINT` environment variable set to a string containing the `https://` prefix and the name of the login server, for example &quot;https://myregistry.azurecr.io&quot;.### List repositoriesIterate through the collection of repositories in the registry.```pythonendpoint = os.environ[&quot;CONTAINERREGISTRY_ENDPOINT&quot;]with ContainerRegistryClient(endpoint, DefaultAzureCredential(), audience=&quot;https://management.azure.com&quot;) as client:    # Iterate through all the repositories    for repository_name in client.list_repository_names():        print(repository_name)```### List tags with anonymous accessIterate through the collection of tags in the repository with anonymous access.```pythonendpoint = os.environ[&quot;CONTAINERREGISTRY_ENDPOINT&quot;]with ContainerRegistryClient(endpoint, DefaultAzureCredential(), audience=&quot;https://management.azure.com&quot;) as client:    manifest = client.get_manifest_properties(&quot;library/hello-world&quot;, &quot;latest&quot;)    print(manifest.repository_name + &quot;: &quot;)    for tag in manifest.tags:        print(tag + &quot;\n&quot;)```### Set artifact propertiesSet properties of an artifact.```pythonendpoint = os.environ[&quot;CONTAINERREGISTRY_ENDPOINT&quot;]with ContainerRegistryClient(endpoint, DefaultAzureCredential(), audience=&quot;https://management.azure.com&quot;) as client:    # Set permissions on the v1 image's &quot;latest&quot; tag    client.update_manifest_properties(        &quot;library/hello-world&quot;,        &quot;latest&quot;,        can_write=False,        can_delete=False    )```### Delete imagesDelete images older than the first three in the repository.```pythonendpoint = os.environ[&quot;CONTAINERREGISTRY_ENDPOINT&quot;]with ContainerRegistryClient(endpoint, DefaultAzureCredential(), audience=&quot;https://management.azure.com&quot;) as client:    for repository in client.list_repository_names():        manifest_count = 0        for manifest in client.list_manifest_properties(repository, order_by=ArtifactManifestOrder.LAST_UPDATED_ON_DESCENDING):            manifest_count += 1            if manifest_count &gt; 3:                print(&quot;Deleting {}:{}&quot;.format(repository, manifest.digest))                client.delete_manifest(repository, manifest.digest)```## Troubleshooting### GeneralACR client library will raise exceptions defined in [Azure Core][azure_core_exceptions].### LoggingThis library uses the standard[logging][python_logging] library for logging.Basic information about HTTP sessions (URLs, headers, etc.) is logged at `INFO` level.Detailed `DEBUG` level logging, including request/response bodies and **unredacted**headers, can be enabled on the client or per-operation with the `logging_enable` keyword argument.See full SDK logging documentation with examples [here][sdk_logging_docs].### Optional ConfigurationOptional keyword arguments can be passed in at the client and per-operation level.The azure-core [reference documentation][azure_core_ref_docs]describes available configurations for retries, logging, transport protocols, and more.## Next steps- Go further with azure.containerregistry and our [samples][samples].- Watch a [demo or deep dive video](https://azure.microsoft.com/resources/videos/index/?service=container-registry).- Read more about the [Azure Container Registry service](https://docs.microsoft.com/azure/container-registry/container-registry-intro).## ContributingThis project welcomes contributions and suggestions.  Most contributions requireyou to agree to a Contributor License Agreement (CLA) declaring that you havethe right to, and actually do, grant us the rights to use your contribution. Fordetails, visit [cla.microsoft.com][cla].This project has adopted the [Microsoft Open Source Code of Conduct][coc].For more information see the [Code of Conduct FAQ][coc_faq]or contact [opencode@microsoft.com][coc_contact] with anyadditional questions or comments.![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fsdk%2Fcontainerregistry%2Fazure-containerregistry%2FREADME.png)&lt;!-- LINKS --&gt;[source]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/containerregistry/azure-containerregistry[package]: https://pypi.org/project/azure-containerregistry/[docs]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-containerregistry/1.0.0b1/index.html[rest_docs]: https://docs.microsoft.com/rest/api/containerregistry/[product_docs]:  https://docs.microsoft.com/azure/container-registry[pip_link]: https://pypi.org[container_registry_docs]: https://docs.microsoft.com/azure/container-registry/container-registry-intro[container_registry_create_ps]: https://docs.microsoft.com/azure/container-registry/container-registry-get-started-powershell[container_registry_create_cli]: https://docs.microsoft.com/azure/container-registry/container-registry-get-started-azure-cli[container_registry_create_portal]: https://docs.microsoft.com/azure/container-registry/container-registry-get-started-portal[container_registry_concepts]: https://docs.microsoft.com/azure/container-registry/container-registry-concepts[azure_cli]: https://docs.microsoft.com/cli/azure[azure_sub]: https://azure.microsoft.com/free/[identity]: https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/identity/azure-identity/README.md[samples]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/containerregistry/azure-containerregistry/samples[cla]: https://cla.microsoft.com[coc]: https://opensource.microsoft.com/codeofconduct/[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/[coc_contact]: mailto:opencode@microsoft.com[azure_core_ref_docs]: https://aka.ms/azsdk/python/core/docs[azure_core_exceptions]: https://aka.ms/azsdk/python/core/docs#module-azure.core.exceptions[python_logging]: https://docs.python.org/3/library/logging.html[sdk_logging_docs]: https://docs.microsoft.com/azure/developer/python/azure-sdk-logging</longdescription>
</pkgmetadata>