<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># owo.pyA wrapper that was written inside of Python that allows for you to upload images to the owo.whats-th.is and shorten URLs through uwu.whats-th.is. Allows for both methods through Async and Non-Async. (Suppports py2)# Instructions1. Gain a API key in order to be actually able to use the service.2. Run the command `pip install owo`.3. Check the usage below to find some basic examples of how to use the script.### Mobile DevicesFor use on Android devices using [Termux](https://termux.com/), the Termux:API package is required to use the background monitor.You will need to install using your device's app store AND by running `$ apt install termux-tools termux-api`**It is also REQUIRED to do the following after installing, or it will not work!**```bash$ owo-fix```The background monitor watches for new files in a directory (usually a screenshots folder) and uploads those new files.The program accepts several command-line flags.```$ owo-bg --helpusage: bg.py [-h] [-p PATH] -k KEY [-u URL] [-tts]optional arguments:  -h, --help            show this help message and exit  -p PATH, --path PATH  Path to check file updates  -k KEY, --key KEY     API Key  -u URL, --url URL     Base vanity url to use  -tts                  Confirm message over tts | Mobile only```The base url can be any of the owo.whats-th.is vanity urls.**Example Use**`$ owo-bg -p &quot;/storage/Pictures/Screenshots&quot; -k &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; -u &quot;https://i.am-a.ninja/&quot;`This starts a background task monitoring `/storage/Pictures/Screenshots/` for new files, uploads those files and returns the link, using the vanity url [https://i.am-a.ninja/](https://i.am-a.ninja/)# UsageBasic usage of the script is like so.**Image Uploading**```pythonimport owoowo.upload_files(API_KEY, &quot;file.png&quot;, &quot;file.py&quot;)```returns something like..```python{&quot;file.png&quot;: &quot;url&quot;, &quot;file.py&quot;: &quot;url&quot;}```**URL Shortening**```pythonimport owoowo.shorten_urls(API_KEY, &quot;url1&quot;,&quot;url2&quot;)```returns something like..```python[&quot;shortened url 1&quot;,&quot;shortened url 2&quot;]```For more powerful/better examples please check /examples/.# Contribute1. Fork repo.2. Edit code.3. Make a PR.4. Submit said PR.# LicenseA copy of the MIT license can be found in `LICENSE.md`.</longdescription>
</pkgmetadata>