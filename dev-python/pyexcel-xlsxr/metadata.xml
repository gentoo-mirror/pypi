<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================================================================================pyexcel-xlsxr - Let you focus on data, instead of xlsx format================================================================================.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel.github.io/master/images/patreon.png   :target: https://www.patreon.com/chfw.. image:: https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg   :target: https://awesome-python.com/#specific-formats-processing.. image:: https://travis-ci.org/pyexcel/pyexcel-xlsxr.svg?branch=master   :target: http://travis-ci.org/pyexcel/pyexcel-xlsxr.. image:: https://codecov.io/gh/pyexcel/pyexcel-xlsxr/branch/master/graph/badge.svg   :target: https://codecov.io/gh/pyexcel/pyexcel-xlsxr.. image:: https://badge.fury.io/py/pyexcel-xlsxr.svg   :target: https://pypi.org/project/pyexcel-xlsxr.. image:: https://pepy.tech/badge/pyexcel-xlsxr/month   :target: https://pepy.tech/project/pyexcel-xlsxr/month.. image:: https://img.shields.io/gitter/room/gitterHQ/gitter.svg   :target: https://gitter.im/pyexcel/Lobby.. image:: https://img.shields.io/static/v1?label=continuous%20templating&amp;message=%E6%A8%A1%E7%89%88%E6%9B%B4%E6%96%B0&amp;color=blue&amp;style=flat-square    :target: https://moban.readthedocs.io/en/latest/#at-scale-continous-templating-for-open-source-projects.. image:: https://img.shields.io/static/v1?label=coding%20style&amp;message=black&amp;color=black&amp;style=flat-square    :target: https://github.com/psf/black**pyexcel-xlsxr** is a specialized xlsx reader using lxml. It does partial reading, meaningit wont load all content into memory.lxml installation=================This library depends on lxml. Because its availablity, the use of this library is restricted.for PyPy, lxml == 3.4.4 are tested to work well. But lxml above 3.4.4 is difficult to get installed.for Python 3.7, please use lxml==4.1.1.Otherwise, this library works OK with lxml 3.4.4 or above.Support the project================================================================================If your company has embedded pyexcel and its components into a revenue generatingproduct, please support me on github, `patreon &lt;https://www.patreon.com/bePatron?u=5537627&gt;`_or `bounty source &lt;https://salt.bountysource.com/teams/chfw-pyexcel&gt;`_ to maintainthe project and develop it further.If you are an individual, you are welcome to support me too and for however longyou feel like. As my backer, you will receive`early access to pyexcel related contents &lt;https://www.patreon.com/pyexcel/posts&gt;`_.And your issues will get prioritized if you would like to become my patreon as `pyexcel pro user`.With your financial support, I will be able to investa little bit more time in coding, documentation and writing interesting posts.Known constraints==================Fonts, colors and charts are not supported.Installation================================================================================You can install pyexcel-xlsxr via pip:.. code-block:: bash    $ pip install pyexcel-xlsxror clone it and install it:.. code-block:: bash    $ git clone https://github.com/pyexcel/pyexcel-xlsxr.git    $ cd pyexcel-xlsxr    $ python setup.py installUsage================================================================================As a standalone library--------------------------------------------------------------------------------Read from an xlsx file********************************************************************************Here's the sample code:.. code-block:: python    &gt;&gt;&gt; from pyexcel_xlsxr import get_data    &gt;&gt;&gt; data = get_data(&quot;your_file.xlsx&quot;)    &gt;&gt;&gt; import json    &gt;&gt;&gt; print(json.dumps(data))    {&quot;Sheet 1&quot;: [[1, 2, 3], [4, 5, 6]], &quot;Sheet 2&quot;: [[&quot;row 1&quot;, &quot;row 2&quot;, &quot;row 3&quot;]]}Read from an xlsx from memory********************************************************************************Continue from previous example:.. code-block:: python    &gt;&gt;&gt; # This is just an illustration    &gt;&gt;&gt; # In reality, you might deal with xlsx file upload    &gt;&gt;&gt; # where you will read from requests.FILES['YOUR_XLSX_FILE']    &gt;&gt;&gt; data = get_data(io)    &gt;&gt;&gt; print(json.dumps(data))    {&quot;Sheet 1&quot;: [[1, 2, 3], [4, 5, 6]], &quot;Sheet 2&quot;: [[7, 8, 9], [10, 11, 12]]}Pagination feature********************************************************************************Let's assume the following file is a huge xlsx file:.. code-block:: python   &gt;&gt;&gt; huge_data = [   ...     [1, 21, 31],   ...     [2, 22, 32],   ...     [3, 23, 33],   ...     [4, 24, 34],   ...     [5, 25, 35],   ...     [6, 26, 36]   ... ]   &gt;&gt;&gt; sheetx = {   ...     &quot;huge&quot;: huge_data   ... }   &gt;&gt;&gt; save_data(&quot;huge_file.xlsx&quot;, sheetx)And let's pretend to read partial data:.. code-block:: python   &gt;&gt;&gt; partial_data = get_data(&quot;huge_file.xlsx&quot;, start_row=2, row_limit=3)   &gt;&gt;&gt; print(json.dumps(partial_data))   {&quot;huge&quot;: [[3, 23, 33], [4, 24, 34], [5, 25, 35]]}And you could as well do the same for columns:.. code-block:: python   &gt;&gt;&gt; partial_data = get_data(&quot;huge_file.xlsx&quot;, start_column=1, column_limit=2)   &gt;&gt;&gt; print(json.dumps(partial_data))   {&quot;huge&quot;: [[21, 31], [22, 32], [23, 33], [24, 34], [25, 35], [26, 36]]}Obvious, you could do both at the same time:.. code-block:: python   &gt;&gt;&gt; partial_data = get_data(&quot;huge_file.xlsx&quot;,   ...     start_row=2, row_limit=3,   ...     start_column=1, column_limit=2)   &gt;&gt;&gt; print(json.dumps(partial_data))   {&quot;huge&quot;: [[23, 33], [24, 34], [25, 35]]}As a pyexcel plugin--------------------------------------------------------------------------------No longer, explicit import is needed since pyexcel version 0.2.2. Instead,this library is auto-loaded. So if you want to read data in xlsx format,installing it is enough.Reading from an xlsx file********************************************************************************Here is the sample code:.. code-block:: python    &gt;&gt;&gt; import pyexcel as pe    &gt;&gt;&gt; sheet = pe.get_book(file_name=&quot;your_file.xlsx&quot;)    &gt;&gt;&gt; sheet    Sheet 1:    +---+---+---+    | 1 | 2 | 3 |    +---+---+---+    | 4 | 5 | 6 |    +---+---+---+    Sheet 2:    +-------+-------+-------+    | row 1 | row 2 | row 3 |    +-------+-------+-------+Reading from a IO instance********************************************************************************You got to wrap the binary content with stream to get xlsx working:.. code-block:: python    &gt;&gt;&gt; # This is just an illustration    &gt;&gt;&gt; # In reality, you might deal with xlsx file upload    &gt;&gt;&gt; # where you will read from requests.FILES['YOUR_XLSX_FILE']    &gt;&gt;&gt; xlsxfile = &quot;another_file.xlsx&quot;    &gt;&gt;&gt; with open(xlsxfile, &quot;rb&quot;) as f:    ...     content = f.read()    ...     r = pe.get_book(file_type=&quot;xlsx&quot;, file_content=content)    ...     print(r)    ...    Sheet 1:    +---+---+---+    | 1 | 2 | 3 |    +---+---+---+    | 4 | 5 | 6 |    +---+---+---+    Sheet 2:    +-------+-------+-------+    | row 1 | row 2 | row 3 |    +-------+-------+-------+License================================================================================New BSD LicenseDeveloper guide==================Development steps for code changes#. git clone https://github.com/pyexcel/pyexcel-xlsxr.git#. cd pyexcel-xlsxrUpgrade your setup tools and pip. They are needed for development and testing only:#. pip install --upgrade setuptools pipThen install relevant development requirements:#. pip install -r rnd_requirements.txt # if such a file exists#. pip install -r requirements.txt#. pip install -r tests/requirements.txtOnce you have finished your changes, please provide test case(s), relevant documentationand update CHANGELOG.rst... note::    As to rnd_requirements.txt, usually, it is created when a dependent    library is not released. Once the dependecy is installed    (will be released), the future    version of the dependency in the requirements.txt will be valid.How to test your contribution------------------------------Although `nose` and `doctest` are both used in code testing, it is adviable that unit tests are put in tests. `doctest` is incorporated only to make sure the code examples in documentation remain valid across different development releases.On Linux/Unix systems, please launch your tests like this::    $ makeOn Windows systems, please issue this command::    &gt; test.batBefore you commit------------------------------Please run::    $ make formatso as to beautify your code otherwise travis-ci may fail your unit test.Change log================================================================================0.6.0 - 10.10.2020--------------------------------------------------------------------------------**Updated**#. New style xlsx plugins, promoted by pyexcel-io v0.6.2.0.5.3 - 23.06.2020--------------------------------------------------------------------------------**Fixed**#. `#5 &lt;https://github.com/pyexcel/pyexcel-xlsxr/issues/5&gt;`_: AttributeError   when a cell text is None#. `#2 &lt;https://github.com/pyexcel/pyexcel-xlsxr/issues/2&gt;`_: unit test failed   in OpenSuSE0.5.2 - 15.09.2018--------------------------------------------------------------------------------**Updated**#. Fix python 3 compactibility0.5.1 - 14.07.2018--------------------------------------------------------------------------------**Updated**#. `#1 &lt;https://github.com/pyexcel/pyexcel-xlsxr/issues/1&gt;`_: fix xml parsing   problem when the microsoft spreadsheetml 2009 ac name space 'x14ac' made lxml   an idiot0.5.0 - 24.11.2017--------------------------------------------------------------------------------**Added**#. Initial release. In order align it with pyexcel 0.5.0 release, its version   start from 0.5.0</longdescription>
</pkgmetadata>