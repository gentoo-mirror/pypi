<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Sasmodels=========Theory models for small angle scattering.The models provided are usable directly in the bumps fitting package andin the sasview analysis package.  If OpenCL is available, the models willrun much faster.  If not, then precompiled versions will be included withthe distributed package.  New models can be added if OpenCL or a C compileris available.Install-------The easiest way to use sasmodels is from `SasView &lt;http://www.sasview.org/&gt;`_.You can also install sasmodels as a standalone package in python. Use`miniconda &lt;https://docs.conda.io/en/latest/miniconda.html&gt;`_or `anaconda &lt;https://www.anaconda.com/&gt;`_to create a python environment with the sasmodels dependencies::    $ conda create -n sasmodels -c conda-forge numpy scipy matplotlib pyopenclThe option ``-n sasmodels`` names the environment sasmodels, and the option``-c conda-forge`` selects the conda-forge package channel because pyopenclis not part of the base anaconda distribution.Activate the environment and install sasmodels::    $ conda activate sasmodels    (sasmodels) $ pip install sasmodelsInstall `bumps &lt;https://github.com/bumps/bumps&gt;`_ if you want to use it to fityour data::    (sasmodels) $ pip install bumpsUsage-----Check that the works::    (sasmodels) $ python -m sasmodels.compare cylinderTo show the orientation explorer::    (sasmodels) $ python -m sasmodels.jitterDocumentation is available online as part of the SasView`fitting perspective &lt;http://www.sasview.org/docs/index.html&gt;`_as well as separate pages for`individual models &lt;http://www.sasview.org/docs/user/sasgui/perspectives/fitting/models/index.html&gt;`_.Programming details for sasmodels are available in the`developer documentation &lt;http://www.sasview.org/docs/dev/dev.html&gt;`_.Fitting Example---------------The example directory contains a radial+tangential data set for an orientedrod-like shape.To load the example data, you will need the SAS data loader from the sasviewpackage. This is not yet available on PyPI, so you will need a copy of theSasView source code to run it.  Create a directory somewhere to hold thesasview and sasmodels source code, which we will refer to as $SOURCE.Use the following to install sasview, and the sasmodels examples::    (sasmodels) $ cd $SOURCE    (sasmodels) $ conda install git    (sasmodels) $ git clone https://github.com/sasview/sasview.git    (sasmodels) $ git clone https://github.com/sasview/sasmodels.gitSet the path to the sasview source on your python path within the sasmodelsenvironment.  On Windows, this will be::    (sasmodels)&gt; set PYTHONPATH=&quot;$SOURCE\sasview\src&quot;    (sasmodels)&gt; cd $SOURCE/sasmodels/example    (sasmodels)&gt; python -m bumps.cli fit.py cylinder --previewOn Mac/Linux with the standard shell this will be::    (sasmodels) $ export PYTHONPATH=&quot;$SOURCE/sasview/src&quot;    (sasmodels) $ cd $SOURCE/sasmodels/example    (sasmodels) $ bumps fit.py cylinder --previewThe fit.py model accepts up to two arguments.  The first argument is themodel type, which has been defined for cylinder, capped_cylinder,core_shell_cylinder, ellipsoid, triaxial_ellipsoid and lamellar.  Thesecond argument is view, which can be radial or tangential.  To fitboth radial and tangential simultaneously, use the word &quot;both&quot;.See `bumps documentation &lt;https://bumps.readthedocs.io/&gt;`_ for detailedinstructions on running the fit.|TestStatus|_ |TravisStatus|_.. |TestStatus| image:: https://github.com/SasView/sasmodels/workflows/Test/badge.svg?branch=master.. _TestStatus: https://github.com/SasView/sasmodels/actions?query=workflow%3ATest+branch%3Amaster.. |TravisStatus| image:: https://travis-ci.org/SasView/sasmodels.svg?branch=master.. _TravisStatus: https://travis-ci.org/SasView/sasmodels</longdescription>
</pkgmetadata>