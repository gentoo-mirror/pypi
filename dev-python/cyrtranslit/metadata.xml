<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7734906.svg)](https://doi.org/10.5281/zenodo.7734906)## What is CyrTranslit?A Python package for bi-directional transliteration of Cyrillic script to Latin script and vice versa.By default, transliterates for the Serbian language. A language flag can be set in order to transliterate to and from Bulgarian, Montenegrin, Macedonian, Mongolian, Russian, Serbian, Tajik, and Ukrainian.## What is transliteration?Transliteration is the conversion of a text from one script to another. For instance, a Latin alphabet transliteration of the Serbian phrase _&quot;Мој ховеркрафт је пун јегуља&quot;_ is _&quot;Moj hoverkraft je pun jegulja&quot;_.## CitationA citation would be much appreciated if you use CyrTranslit in a research publication:[Georges Labrèche. (2023). CyrTranslit (v1.1.1). Zenodo. https://doi.org/10.5281/zenodo.7734906](https://doi.org/10.5281/zenodo.7734906)BibTex entry:```bibtex@software{georges_labreche_2023_7734906,  author       = {Georges Labrèche},  title        = {CyrTranslit},  month        = mar,  year         = 2023,  note         = {{A Python package for bi-directional                    transliteration of Cyrillic script to Latin script                   and vice versa. Supports transliteration for                   Bulgarian, Montenegrin, Macedonian, Mongolian,                   Russian, Serbian, Tajik, and Ukrainian.}},  publisher    = {Zenodo},  version      = {v1.1.1},  doi          = {10.5281/zenodo.7734906},  url          = {https://doi.org/10.5281/zenodo.7734906}}```## Supporting researchCyrTranslit is actively used as a reliable tool to advance research! Here's an incomplete list of publications for research projects that have relied on CyrTranslit:- Ljajić, Adela &amp; Prodanović, Nikola &amp; Medvecki, Darija &amp; Bašaragin, Bojana &amp; Mitrović, Jelena. (2022). &quot;[Topic Modeling Technique on Covid19 Tweets in Serbian](https://www.researchgate.net/publication/364302202_Topic_Modeling_Technique_on_Covid19_Tweets_in_Serbian),&quot; in 12th International Conference on Information Society and Technology (ICIST), Kopaonik, Serbia.- Mussylmanbay, Meiirgali. (2022). &quot;[Addresses Standardization and Geocoding using Natural Language Processing](https://nur.nu.edu.kz/handle/123456789/6705),&quot; Nazarbayev University, Kazakhstan.- Jokic, Danka &amp; Stanković, Ranka &amp; Krstev, Cvetana &amp; Šandrih Todorović, Branislava. (2021). &quot;[A Twitter Corpus and Lexicon for Abusive Speech Detection in Serbian](https://drops.dagstuhl.de/opus/volltexte/2021/14549/),&quot; in 3rd Conference on Language, Data and Knowledge (LDK 2021). 10.4230/OASIcs.LDK.2021.13. - Lakew, Surafel Melaku (2020). &quot;[Thesis Multilingual Neural Machine Translation for Low Resource Languages](https://surafelml.github.io/phd-thesis/),&quot; University of Trento, Italy.- Filo, Denis. (2020). &quot;[Neuronový strojový překlad pro jazykové páry s malým množstvím trénovacích dat: Low-Resource Neural Machine Translation](https://www.fit.vut.cz/study/thesis/23087/.en),&quot; Brno University of Technology, Brno, Czechia.- Batanović, Vuk &amp; Nikolic, Bosko. (2019). &quot;[Using Language Technologies to Automate the UNDP Rapid Integrated Assessment Mechanism in Serbian](https://www.researchgate.net/publication/339615659_Using_Language_Technologies_to_Automate_the_UNDP_Rapid_Integrated_Assessment_Mechanism_in_Serbian),&quot; in International Conference on Language Technologies for All: Enabling Linguistic Diversity and Multilingualism Worldwide (LT4All), Paris, France.- Brown, J. M. M. &amp; Schmidt, Andreas &amp; Wierzba, Marta (Eds.). (2019). &quot;[Of trees and birds: A Festschrift for Gisbert Fanselow](https://publishup.uni-potsdam.de/opus4-ubp/frontdoor/deliver/index/docId/42654/file/of_trees_and_birds.pdf),&quot; Universitätsverlag Potsdam, Potsdam.- Lakew, Surafel Melaku &amp; Erofeeva, Aliia &amp; Federico, Marcello. (2018). &quot;[Neural Machine Translation into Language Varieties](https://aclanthology.org/W18-6316/),&quot; in 3rd Conference on Machine Translation: Research Papers, Brussels, Belgium.- Ljajić, Adela &amp; Marovac, Ulfeta. (2018). &quot;[Improving sentiment analysis for twitter data by handling negation rules in the Serbian language](http://www.doiserbia.nb.rs/Article.aspx?ID=1820-02141800013L),&quot; Computer Science and Information Systems. 16. 13-13. 10.2298/CSIS180122013L. - Жабран, И., Кикоть, А., Гафияк, А., Бородина, Е., &amp; Алёшин, С. (2017). &quot;[Developing Q-Orca site backend using various Python programming language libraries](https://www.moderntechno.de/index.php/meit/article/view/meit07-03-021),&quot; Modern Engineering and Innovative Technologies, 3(07-03), 48–53.## How do I install this?CyrTranslit is [hosted in the Python Package Index (PyPI)](https://pypi.python.org/pypi/cyrtranslit) so it can be installed using pip:```python -m pip install cyrtranslit         # latest versionpython -m pip install cyrtranslit==1.1.1  # specific versionpython -m pip install cyrtranslit&gt;=1.1.1  # minimum version```## What languages are supported?CyrTranslit currently supports bi-directional transliteration of Bulgarian, Montenegrin, Macedonian, Mongolian, Russian, Serbian, Tajik, and Ukrainian:```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.supported()['bg', 'me', 'mk', 'mn', 'ru', 'sr', 'tj', 'ua']```## How do I use this? CyrTranslit can be used both programatically and via command line interface.### Programmatically#### Bulgarian```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Съединението прави силата!&quot;, &quot;bg&quot;)&quot;Săedinenieto pravi silata!&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Săedinenieto pravi silata!&quot;, &quot;bg&quot;)&quot;Съединението прави силата!&quot;```#### Montenegrin```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Република&quot;, &quot;me&quot;)&quot;Republika&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Republika&quot;, &quot;me&quot;)&quot;Република&quot;```#### Macedonian```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Моето летачко возило е полно со јагули&quot;, &quot;mk&quot;)&quot;Moeto letačko vozilo e polno so jaguli&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Moeto letačko vozilo e polno so jaguli&quot;, &quot;mk&quot;)&quot;Моето летачко возило е полно со јагули&quot;```#### Mongolian```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Амрагаа Сүнжидмаагаа гэсээр ирлээ дээ хө-хө-хө&quot;, &quot;mn&quot;)&quot;Amragaa Sünjidmaagaa geseer irlee dee khö-khö-khö&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Amragaa Sünjidmaagaa geseer irlee dee khö-khö-khö&quot;, &quot;mn&quot;)&quot;Амрагаа Сүнжидмаагаа гэсээр ирлээ дээ хө-хө-хө&quot;```#### Russian```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Моё судно на воздушной подушке полно угрей&quot;, &quot;ru&quot;)&quot;Moyo sudno na vozdushnoj podushke polno ugrej&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Moyo sudno na vozdushnoj podushke polno ugrej&quot;, &quot;ru&quot;)&quot;Моё судно на воздушной подушке полно угрей&quot;```#### Serbian```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Мој ховеркрафт је пун јегуља&quot;)&quot;Moj hoverkraft je pun jegulja&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Moj hoverkraft je pun jegulja&quot;)&quot;Мој ховеркрафт је пун јегуља&quot;```#### Tajik```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Ман мактуб навишта истодам&quot;, &quot;tj&quot;)&quot;Man maktub navišta istodam&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Man maktub navišta istodam&quot;, &quot;tj&quot;)&quot;Ман мактуб навишта истодам&quot;```#### Ukrainian```python&gt;&gt;&gt; import cyrtranslit&gt;&gt;&gt; cyrtranslit.to_latin(&quot;Під лежачий камінь вода не тече&quot;, &quot;ua&quot;)&quot;Pid ležačyj kamin' voda ne teče&quot;&gt;&gt;&gt; cyrtranslit.to_cyrillic(&quot;Pid ležačyj kamin' voda ne teče&quot;, &quot;ua&quot;)&quot;Під лежачий камінь вода не тече&quot;```## Command Line InterfaceSample command line call to transliterate a Russian text file:```bash$ cyrtranslit -l RU -i tests/ru.txt -o tests/output.txt```Use the -c argument to accomplish the reverse, that is to input latin characters and output cyrillic.Use the -h argument for help.You can also omit the input and output files and use standard input/output```bash$ echo 'Мој ховеркрафт је пун јегуља' | cyrtranslit -l srMoj hoverkraft je pun jegulja$ echo 'Moj hoverkraft je pun jegulja' | cyrtranslit -l srМој ховеркрафт је пун јегуља```You can test the &quot;script&quot; by running it directly on the Python command line interface, e.g.:```python&gt;&gt;&gt; import sys&gt;&gt;&gt; import cyrtranslit.cyrtranslit&gt;&gt;&gt; sys.argv.extend(['-l', 'RU'])&gt;&gt;&gt; sys.argv.extend(['-i', 'tests/ru.txt'])&gt;&gt;&gt; sys.argv.extend(['-o', 'tests/output.txt'])&gt;&gt;&gt; cyrtranslit.cyrtranslit.main()&gt;&gt;&gt; exit()```## How can I contribute?You can include support for other Cyrillic script alphabets. Follow these steps in order to do so:1. Create a new transliteration dictionary in the **[mapping.py](https://github.com/opendatakosovo/cyrillic-transliteration/blob/master/cyrtranslit/mapping.py)** file and reference to it in the _**[TRANSLIT\_DICT](https://github.com/opendatakosovo/cyrillic-transliteration/blob/ab88bb466d12b9a9ad8d3eb6dc86d0bab871175d/cyrtranslit/mapping.py#L326-L360)**_ dictionary.2. Watch out for cases where two consecutive Latin alphabet letters are meant to transliterate into a single Cyrillic script letter. These cases need to be explicitly checked for [inside the **to_cyrillic()** function in **\_\_init\_\_.py**](https://github.com/opendatakosovo/cyrillic-transliteration/blob/ab88bb466d12b9a9ad8d3eb6dc86d0bab871175d/cyrtranslit/__init__.py#L62-L191).3. Add test cases inside of **[tests.py](https://github.com/opendatakosovo/cyrillic-transliteration/blob/master/tests.py)**.4. Add test CLI input files in the **[tests](https://github.com/opendatakosovo/cyrillic-transliteration/tree/master/tests)** directory.5. Update the documentation in the **[README.md](https://github.com/opendatakosovo/cyrillic-transliteration/blob/master/README.md)**.6. List yourself as one of the contributors.Before tagging a release version and deploying to [PyPI](https://pypi.org/):1. Update the `version` and `download_url` properties in [setup.py](https://github.com/opendatakosovo/cyrillic-transliteration/blob/master/setup.py).2. [Reserve a Zenodo DOI](https://cassgvp.github.io/github-for-collaborative-documentation/docs/tut/6-Zenodo-integration.html) for the release and update this readme's Zenodo badge and [citation instructions](https://github.com/opendatakosovo/cyrillic-transliteration#citation).A big thank you to everyone who contributed:- Bulgarian 🇧🇬: [@Syndamia](https://github.com/Syndamia) and [@Sparkycz](https://github.com/Sparkycz).- Russian 🇷🇺: [@ratijas](https://github.com/ratijas) and [@rominf](https://github.com/rominf).- Tajik 🇹🇯: [@diejani](https://github.com/diejani).- Ukrainian 🇺🇦: [@AnonymousVoice1](https://github.com/AnonymousVoice1).- Mongolian 🇲🇳: [@Serbipunk](https://github.com/Serbipunk).- Command Line Interface (CLI): [@ZJaume](https://github.com/ZJaume).</longdescription>
</pkgmetadata>