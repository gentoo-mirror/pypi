<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;  &lt;img    src=&quot;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&quot;    height=&quot;30&quot;    width=&quot;0px&quot;  /&gt;  üíª onboard&lt;i&gt;me&lt;/i&gt;  &lt;img    src=&quot;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&quot;    height=&quot;30&quot;    width=&quot;0px&quot;  /&gt;&lt;/h1&gt;Get¬†your¬†daily¬†driver, or personalized üê≥ container,¬†just¬†the¬†way¬†you¬†like¬†it! From¬†dot files management, to package installation, to setting up neovim, to other little features you didn't know you needed, `onboardme` intends to save you time with initializing and maintaining your personal evironments ‚ú®&lt;p align=&quot;center&quot;&gt;&lt;img width=&quot;90%&quot; src='https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/image_in_terminal.png' alt='screenshot of color samples and image of dog using a computer using sixel'&gt;&lt;/p&gt;## Features&lt;details&gt;  &lt;summary&gt;&lt;h4&gt;Keep your Dot Files Up To Date Across multiple systems&lt;/h4&gt;&lt;/summary&gt;  `onboardme` can manage your [dot files] using a git by turning your home directory into a repo.We even provide default dot files, so you don't have to manage them- The [default dot files] are open source, and the maintainers use these themselves- They cover a lot of common apps/tools you probably want anyway- They have consistent colorschemes accross different CLI/TUI programs üòÉ- They set all the helpful BASH aliases you could need (zsh support coming soon)&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;h4&gt;Package management accross multiple package managers&lt;h4&gt;&lt;/summary&gt;    We install and upgrade libraries and apps using common package managers. We also provide a currated list of default packages.  - checkout the [default packages]- supports `brew`, `apt`, `snap`, `flatpak`, and `pip` (and you can add your own üòÑ)- group together packages for different kinds of environments  - onboardme provides default package groups:    - default (no desktop GUI apps installed by default, always installed)    - macOS (default apps for _macOS only_ apps, always installed on macOS)    - gui (default GUI apps for Linux desktops, optionally installed)    - devops (devops related tooling, optionally installed) &lt;sub&gt;**Linux ARM Users NOTE**: `brew` is currently [unsupported on linux/arm64](https://docs.brew.sh/Homebrew-on-Linux#arm-unsupported), and as we'd have to compile everything from source anyway, we don't support running the brew package manager via onboardme on linux/arm64 or (AArch64) at all right now._We do have a docker image ([jessebot/onboardme:latest-arm](https://hub.docker.com/r/jessebot/onboardme)) optimized for arm though that you can run on AArch64 and it's perfect for a dockerized dev environment on an M1 or later mac or any other ARM 64 device that runs docker :)&lt;/sub&gt;&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;h4&gt;NeoVim Plugin Installtion and Updates&lt;h4&gt;&lt;/summary&gt;`onboardme` keeps your neovim plugins installed and up to date with [lazy.nvim] under the hood.  &lt;h4&gt;Why no vim though?&lt;/h4&gt;  If you haven't already made the switch from Vim to [NeoVim], you can try out NeoVim today with `onboardme` :D We used to support both neovim _and_ vim, but these days none of the primary developers of this repo use pure vim anymore, so we can't ensure it's up to standards. All of your knowledge from vim is still helpful in neovim though, and we highly recommend switching as neovim has a lot more features and a very active plugin community :) NeoVim maintains a guide on how to switch from vim [here](https://neovim.io/doc/user/nvim.html#nvim-from-vim). &lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;h4&gt;Easy &lt;code&gt;yaml&lt;/code&gt; config files using XDG Base Directory Spec&lt;h4&gt;&lt;/summary&gt;We use use [XDG Base Directory Spec] for [config files](#configuration) so you always know where they are :)&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;h4&gt;Docker image for an on-the-go dev workspace&lt;h4&gt;&lt;/summary&gt;The docker image is built nightly, and on push to `main` via GHA. The base image is `debian:bookworm`, but we will rollout support for Ubuntu down the line :)See the [dockerhub page](https://hub.docker.com/r/jessebot/onboardme) for more info!&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;&lt;h4&gt;Other optional configurations&lt;h4&gt;&lt;/summary&gt;    - Enable touchID for sudo on macOS- Add your user to the docker group- Install [nerdfonts](https://www.nerdfonts.com) (defaults to mononoki and Symbols Only)&lt;/details&gt;### Screenshots&lt;details&gt;  &lt;summary&gt;Example of &lt;code&gt;onboardme --help&lt;/code&gt;&lt;/summary&gt;&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/help_text.svg&quot;&gt;&lt;img src=&quot;./docs/onboardme/screenshots/help_text.svg&quot; alt='screenshot of full output of onboardme --help'&gt;&lt;/a&gt;&lt;/p&gt;&lt;/details&gt;&lt;details&gt;  &lt;summary&gt;Examples of the terminal after &lt;code&gt;onboardme&lt;/code&gt; runs&lt;/summary&gt;&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;### neovim&lt;img width=&quot;90%&quot; src='https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/neovim_example_1.png' alt='screenshot of neovim with colors'&gt;### Powerline and ls&lt;img width=&quot;80%&quot; src='https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/ls_tree_examples.png' alt='screenshot of powerline and lsd'&gt;### Powerline with git&lt;img width=&quot;90%&quot; src='https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/git_powerline_example.png' alt='screenshot of powerline and git colors'&gt;### Image and colors### Python virtual env in powerline and cat&lt;img width=&quot;90%&quot; src='https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/python_virtual_env_example.png' alt='screenshot of using bat and python virtual env in powerline'&gt;&lt;/p&gt;&lt;/details&gt;# Installation## Install LocallyYou'll need `curl`, `brew`, `git`, and Python 3.11 to get started. We have a setup script to install those (except `curl`) and help you get your environment to the XDG spec under &lt;b&gt;Locally&lt;/b&gt;. For docker, see the section below.&lt;details&gt;  &lt;summary&gt;Local prereq install script&lt;/summary&gt;.&lt;details&gt;  &lt;summary&gt;&lt;code&gt;curl&lt;/code&gt;, a pre-prereq&lt;/summary&gt;  ```bash  # Debian/Ubuntu may not have curl installed depending on where you are, so this will install it for you  type -p curl &gt;/dev/null || (sudo apt update &amp;&amp; sudo apt install curl -y)  ```&lt;/details&gt;Make sure you have sudo access, otherwise we won't be able to install certain things.The quickest way to get started on a fresh macOS or distro of Debian (including Ubuntu) is:```bash# this will download setup.sh to your current directory and run it/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/jessebot/onboardme/main/setup.sh)&quot;```#### LinuxSource your updated `.bashrc`:```bash# for linuxsource ~/.bashrc```#### MacOSsource your updated `.bash_profile`:```bashbashsource ~/.bash_profile```You will still have to set your default shell to BASH to if you want to take advantage of the default dot files for onboardme. You can do that like this:```bashbrew install bashsudo -i# if you're on an M1 or newer:echo &quot;/opt/homebrew/bin/bash&quot; &gt;&gt; /etc/shells &amp;&amp; exitchsh -s /opt/homebrew/bin/bash $(whoami)# if you're on a mac earlier than the M1:echo &quot;/usr/local/bin/bash&quot; &gt;&gt; /etc/shells &amp;&amp; exitchsh -s /usr/local/bin/bash $(whoami)```After that, you can also set the shell directly in your terminal app via the settings.&lt;/details&gt;If you've already got all the above prereq on your machine, you can just do:```bash# should also work with pipx, if you'd like to use that insteadpip install --user --upgrade onboardme```## Using the Docker imageRead more about our docker tags and how to use them at [jessebot/onboardme](https://hub.docker.com/r/jessebot/onboardme) on DockerHub.# Usage_Now_ you can run `onboardme` üéâ ```bash# this will display the help text for onboardmeonboardme --help# Running this won't overwrite any existing dot files, but it may add new ones.onboardme```From here, if you want to *completely wipe your existing dot files* for a fresh start with with `onboardme`, you can run:```bash# WARNING: This will overwrite your local dotfiles, including your .bashrc and .bash_profile# can also be done with: onboardme -Oonboardme --overwrite```You can read more in depth at the [Getting Started Docs] üíô! There's also more [docs] on basically every program that onboardme touches.### UpgradesIf you're on python 3.11, you should be able to do:```bashpip3.11 install --upgrade onboardme```### Configurationonboardme has lots of CLI options, but you can also use config files. You have to create these files for the time being.Config files are in `$XDG_CONFIG_HOME/onboardme/`, &lt;sub&gt;or `~/.config/onboardme/` if `$XDG_CONFIG_HOME` is not defined&lt;/sub&gt;.| Config File                               |        Description                                  ||:------------------------------------------|:----------------------------------------------------|| `$XDG_CONFIG_HOME/onboardme/config.yml`   | For step configuration to run either all steps, or just a subset. | | `$XDG_CONFIG_HOME/onboardme/packages.yml` | For adding packages with different package managers |Examples:&lt;details&gt;&lt;summary&gt;&lt;code&gt;~/.config/onboardme/config.yml&lt;/code&gt;&lt;/summary&gt;```yamllog:  # Full path to a file you'd like to log to. Creates file if it doesn't exist  file: &quot;&quot;  # what level of logs to output (DEBUG, INFO, WARN, ERROR)  level: &quot;INFO&quot;# steps refer to a specific function in the list of functions we runsteps:  # these are mac specific steps  Darwin:    # clones dot files into home dir/git fetches updates for dot files    - dot_files    # install packages    - packages    # adds nerdfonts    - font_setup    # runs :Lazy sync to install all your plugins    - neovim_setup    # sets up touchID for sudo    - sudo_setup  # these are linux specific steps  Linux:    - dot_files    - packages    - font_setup    - neovim_setup    # add your user to the docker group    - group_setupdot_files:  # personal git repo URL for your dot files, defaults to jessebot/dot_files  git_url: &quot;https://github.com/jessebot/dot_files.git&quot;  # the branch to use for the git repo above, defaults to main  git_branch: &quot;main&quot;  # !CAREFUL: runs a `git reset --hard`, which will overwite/delete local files in ~ that  # conflict with the above defined git repo url and branch. You should run  # `onboardme -s dot_files` to get the files that would be overwritten  overwrite: false# basic package configpackage:  # Remove any of the below pkg managers to only run the remaining pkg managers  managers:    # these are macOS specific steps    Darwin:      - brew      - pip3.11    # these are linux specific steps    Linux:      - brew      - pip3.11      - apt      - snap      - flatpak  # list of extra existing packages groups to install  groups:    - default    # uncomment these to add them as default installed package groups    # - gui    # - gaming    # - devops```&lt;/details&gt;## Under the HoodMade and tested for these operating systems:[![Tested on Ventura 13.4 with a 13-inch M1 Macbook pro and a 13-inch AMD 1,4 GHz Quad-Core Intel Core i5 2020 Macbook Pro](https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&amp;logo=apple&amp;logoColor=white)](https://wikiless.org/wiki/MacOS?lang=en)[![Tested only on Debian Bookworm (debian:bookworm)](https://img.shields.io/badge/Debian-A81D33?style=for-the-badge&amp;logo=debian&amp;logoColor=white)](https://www.debian.org/)[![Tested only on ubuntu servers](https://img.shields.io/badge/Ubuntu-E95420?style=for-the-badge&amp;logo=ubuntu&amp;logoColor=white)](https://ubuntu.com/)And optomized for the following programs:[![made-with-neovim](https://img.shields.io/badge/NeoVim-0f191f?style=for-the-badge&amp;logo=neovim&amp;logoColor=#5c983b)](https://neovim.io/)[![made-with-python](https://img.shields.io/badge/Python-FFD43B?style=for-the-badge&amp;logo=python&amp;logoColor=blue)](https://www.python.org/)[![made-with-bash](https://img.shields.io/badge/GNU%20Bash-000000?style=for-the-badge&amp;logo=GNU%20Bash&amp;logoColor=#5c983b)](https://www.gnu.org/software/bash/)[![made-with-powerline](https://img.shields.io/badge/powerline-000000?style=for-the-badge&amp;logo=powerline&amp;logoColor=#5c983b)](https://powerline.readthedocs.io/en/master/overview.html)#### Built using these great tools:[&lt;img src=&quot;https://github.com/textualize/rich/raw/master/imgs/logo.svg&quot; alt=&quot;rich python library logo with with yellow snake&quot; width=&quot;200&quot;&gt;](https://github.com/Textualize/rich/tree/master)[&lt;img src=&quot;https://raw.githubusercontent.com/ryanoasis/nerd-fonts/master/images/nerd-fonts-logo.svg&quot; width=&quot;120&quot; alt=&quot;nerd-fonts: Iconic font aggregator, collection, and patcher&quot;&gt;](https://www.nerdfonts.com/)## Status  &lt;a href=&quot;https://github.com/jessebot/onboardme/releases&quot;&gt;    &lt;img src=&quot;https://img.shields.io/github/v/release/jessebot/onboardme?style=plastic&amp;labelColor=484848&amp;color=3CA324&amp;logo=GitHub&amp;logoColor=white&quot;&gt;    &lt;/a&gt; &lt;br&gt;&lt;/br&gt;Actively used by the maintainers daily, but software is always changing, so please report üêõ in the GitHub issues, and we will collect them, and release them back into the wild, because we are vegan and nice. (Kidding, we will help! üòå):star: If you like this project, please star it to help us keep motivated :3### ContributorsWe love contributors! Feel free to open a pull request, and we will review it asap! :)&lt;!-- readme: contributors -start --&gt;&lt;table&gt;&lt;tr&gt;    &lt;td align=&quot;center&quot;&gt;        &lt;a href=&quot;https://github.com/jessebot&quot;&gt;            &lt;img src=&quot;https://avatars.githubusercontent.com/u/2389292?v=4&quot; width=&quot;100;&quot; alt=&quot;jessebot&quot;/&gt;            &lt;br /&gt;            &lt;sub&gt;&lt;b&gt;JesseBot&lt;/b&gt;&lt;/sub&gt;        &lt;/a&gt;    &lt;/td&gt;    &lt;td align=&quot;center&quot;&gt;        &lt;a href=&quot;https://github.com/cloudymax&quot;&gt;            &lt;img src=&quot;https://avatars.githubusercontent.com/u/84841307?v=4&quot; width=&quot;100;&quot; alt=&quot;cloudymax&quot;/&gt;            &lt;br /&gt;            &lt;sub&gt;&lt;b&gt;Max!&lt;/b&gt;&lt;/sub&gt;        &lt;/a&gt;    &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;!-- readme: contributors -end --&gt;## Shameless plugs for other projectsGet running on a machine using a bootable USB stick with [pxeless](https://github.com/cloudymax/pxeless).Get started with virtual machines and QEMU with [scrap metal](https://github.com/cloudymax/Scrap-Metal).Get started with testing kubernetes on metal with [smol k8s lab](https://github.com/jessebot/smol_k8s_lab).&lt;!-- link references --&gt;[documentation]: https://jessebot.github.io/onboardme/onboardme &quot;onboardme documentation&quot;[docs]: https://jessebot.github.io/onboardme/onboardme &quot;onboardme documentation&quot;[default dot files]: https://github.com/jessebot/dot_files &quot;default dot files for onboardme&quot;[help text]: https://raw.githubusercontent.com/jessebot/onboardme/main/docs/onboardme/screenshots/help_text.svg &quot;an svg of the command: onboardme --help&quot;[Getting Started Docs]: https://jessebot.github.io/onboardme/onboardme/getting-started &quot;getting started documentation&quot;[default packages]: https://github.com/jessebot/dot_files/blob/main/.config/onboardme/packages.yml &quot;default installed packages for onboardme&quot;&lt;!-- external link references --&gt;[dot files]: https://en.wikipedia.org/wiki/Hidden_file_and_hidden_directory#Unix_and_Unix-like_environments &quot;wiki entry for dot file explanation&quot;[XDG Base Directory Spec]: https://specifications.freedesktop.org/basedir-spec/latest/ar01s03.html[NeoVim]: https://neovim.io/ &quot;neovim, vim improved&quot;[lazy.nvim]: https://github.com/folke/lazy.nvim &quot;lazy.nvim, a plugin manager for neovim&quot;</longdescription>
</pkgmetadata>