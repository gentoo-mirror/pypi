# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_11,3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Litestar - A production-ready, highly performant, extensible ASGI API Framework"

HOMEPAGE="https://litestar.dev/"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="annotated-types attrs brotli cli cryptography full jinja jwt mako minijinja opentelemetry piccolo picologging prometheus pydantic redis sqlalchemy standard structlog valkey"
DEPENDENCIES=">=dev-python/anyio-3.0[${PYTHON_USEDEP}]
	dev-python/click[${PYTHON_USEDEP}]
	>=dev-python/httpx-0.22[${PYTHON_USEDEP}]
	dev-python/litestar-htmx[${PYTHON_USEDEP}]
	>=dev-python/msgspec-0.18.2[${PYTHON_USEDEP}]
	>=dev-python/multidict-6.0.2[${PYTHON_USEDEP}]
	>=dev-python/multipart-1.2.0[${PYTHON_USEDEP}]
	dev-python/polyfactory[${PYTHON_USEDEP}]
	dev-python/pyyaml[${PYTHON_USEDEP}]
	dev-python/rich-click[${PYTHON_USEDEP}]
	>=dev-python/rich-13.0.0[${PYTHON_USEDEP}]
	dev-python/typing-extensions[${PYTHON_USEDEP}]
	annotated-types? ( dev-python/annotated-types[${PYTHON_USEDEP}] )
	attrs? ( dev-python/attrs[${PYTHON_USEDEP}] )
	brotli? ( dev-python/Brotli[${PYTHON_USEDEP}] )
	cli? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	cli? ( dev-python/uvicorn[${PYTHON_USEDEP}] )
	cli? ( >=dev-python/uvloop-0.18.0[${PYTHON_USEDEP}] )
	cryptography? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	full? ( dev-python/advanced-alchemy[${PYTHON_USEDEP}] )
	full? ( dev-python/annotated-types[${PYTHON_USEDEP}] )
	full? ( dev-python/attrs[${PYTHON_USEDEP}] )
	full? ( dev-python/Brotli[${PYTHON_USEDEP}] )
	full? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	full? ( dev-python/email-validator[${PYTHON_USEDEP}] )
	full? ( dev-python/fast-query-parsers[${PYTHON_USEDEP}] )
	full? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	full? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] )
	full? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	full? ( >=dev-python/mako-1.2.4[${PYTHON_USEDEP}] )
	full? ( dev-python/minijinja[${PYTHON_USEDEP}] )
	full? ( dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}] )
	full? ( dev-python/piccolo[${PYTHON_USEDEP}] )
	full? ( dev-python/picologging[${PYTHON_USEDEP}] )
	full? ( dev-python/prometheus-client[${PYTHON_USEDEP}] )
	full? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	full? ( dev-python/pydantic-extra-types[${PYTHON_USEDEP}] )
	full? ( >=dev-python/pyjwt-2.9.0[${PYTHON_USEDEP}] )
	full? ( <dev-python/redis-5.3[${PYTHON_USEDEP}] )
	full? ( dev-python/structlog[${PYTHON_USEDEP}] )
	full? ( dev-python/uvicorn[${PYTHON_USEDEP}] )
	full? ( >=dev-python/uvloop-0.18.0[${PYTHON_USEDEP}] )
	full? ( dev-python/valkey[${PYTHON_USEDEP}] )
	jinja? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] )
	jwt? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	jwt? ( >=dev-python/pyjwt-2.9.0[${PYTHON_USEDEP}] )
	mako? ( >=dev-python/mako-1.2.4[${PYTHON_USEDEP}] )
	minijinja? ( dev-python/minijinja[${PYTHON_USEDEP}] )
	opentelemetry? ( dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}] )
	piccolo? ( dev-python/piccolo[${PYTHON_USEDEP}] )
	picologging? ( dev-python/picologging[${PYTHON_USEDEP}] )
	prometheus? ( dev-python/prometheus-client[${PYTHON_USEDEP}] )
	pydantic? ( dev-python/email-validator[${PYTHON_USEDEP}] )
	pydantic? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	pydantic? ( dev-python/pydantic-extra-types[${PYTHON_USEDEP}] )
	redis? ( <dev-python/redis-5.3[${PYTHON_USEDEP}] )
	sqlalchemy? ( dev-python/advanced-alchemy[${PYTHON_USEDEP}] )
	standard? ( dev-python/fast-query-parsers[${PYTHON_USEDEP}] )
	standard? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	standard? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	standard? ( dev-python/uvicorn[${PYTHON_USEDEP}] )
	standard? ( >=dev-python/uvloop-0.18.0[${PYTHON_USEDEP}] )
	structlog? ( dev-python/structlog[${PYTHON_USEDEP}] )
	valkey? ( dev-python/valkey[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
