<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img src=&quot;https://github.com/natasha/natasha-logos/blob/master/yargy.svg&quot;&gt;![CI](https://github.com/natasha/yargy/actions/workflows/test.yml/badge.svg)Yargy uses rules and dictionaries to extract structured information from Russian texts. Yargy is similar to &lt;a href=&quot;https://yandex.ru/dev/tomita&quot;&gt;Tomita parser&lt;/a&gt;.## InstallYargy supports Python 3.7+, PyPy 3, depends only on &lt;a href=&quot;http://github.com/pymorphy2/pymorphy2&quot;&gt;Pymorphy2&lt;/a&gt;.```bash$ pip install yargy```## Usage```pythonfrom yargy import Parser, rule, and_, not_from yargy.interpretation import factfrom yargy.predicates import gramfrom yargy.relations import gnc_relationfrom yargy.pipelines import morph_pipelineName = fact(    'Name',    ['first', 'last'],)Person = fact(    'Person',    ['position', 'name'])LAST = and_(    gram('Surn'),    not_(gram('Abbr')),)FIRST = and_(    gram('Name'),    not_(gram('Abbr')),)POSITION = morph_pipeline([    'управляющий директор',    'вице-мэр'])gnc = gnc_relation()NAME = rule(    FIRST.interpretation(        Name.first    ).match(gnc),    LAST.interpretation(        Name.last    ).match(gnc)).interpretation(    Name)PERSON = rule(    POSITION.interpretation(        Person.position    ).match(gnc),    NAME.interpretation(        Person.name    )).interpretation(    Person)parser = Parser(PERSON)match = parser.match('управляющий директор Иван Ульянов')print(match)Person(    position='управляющий директор',    name=Name(        first='Иван',        last='Ульянов'    ))```## DocumentationAll materials are in Russian:* &lt;a href=&quot;https://habr.com/ru/post/349864/&quot;&gt;Overview&lt;/a&gt;* &lt;a href=&quot;https://www.youtube.com/watch?v=NQxzx0qYgK8&quot;&gt;Video from workshop&lt;/a&gt;* &lt;a href=&quot;https://nbviewer.jupyter.org/github/natasha/yargy/blob/master/docs/index.ipynb&quot;&gt;Getting started&lt;/a&gt;* &lt;a href=&quot;https://nbviewer.jupyter.org/github/natasha/yargy/blob/master/docs/ref.ipynb&quot;&gt;Reference&lt;/a&gt;* &lt;a href=&quot;https://nbviewer.jupyter.org/github/natasha/yargy/blob/master/docs/cookbook.ipynb&quot;&gt;Cookbook&lt;/a&gt;* &lt;a href=&quot;https://github.com/natasha/yargy-examples&quot;&gt;Examples&lt;/a&gt;* &lt;a href=&quot;https://github.com/natasha/natasha-usage#yargy&quot;&gt;Code snippets&lt;/a&gt;## Support- Chat — https://t.me/natural_language_processing- Issues — https://github.com/natasha/yargy/issues- Commercial support — https://lab.alexkuk.ru## DevelopmentDev env```bashbrew install graphvizpython -m venv ~/.venvs/natasha-yargysource ~/.venvs/natasha-yargy/bin/activatepip install -r requirements/dev.txtpip install -e .python -m ipykernel install --user --name natasha-yargy```Test + lint```bashmake test```Update docs```bashmake exec-docs# Manually check git diff docs/, commit```Release```bash# Update setup.py versiongit commit -am 'Up version'git tag v0.16.0git pushgit push --tags# Github Action builds dist and publishes to PyPi```</longdescription>
</pkgmetadata>