<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Correction Helper## ProjectThis is just a set of tools to help writing correction bots in Python for Python.It is used for [hackinscience](https://hackinscience.org), but couldbe used elsewhere.## Security considerationsRunning student code is probably really unsafe, unless you trust yourstudents not to drop you a backdoor.This projet does *not* help with security in any ways, maybe take alook at [firejail](https://github.com/netblue30/firejail) if you havetrust issues (Yes you can use `correction-helper` inside `firejail`).## UsageTo install it, run: `pip install correction-helper`.In your checking code, you can use it like this:### The `student_code` decoratorThis decorator is aimed to catch most problems that could happen instudent code, use it simply as:```pythonwith student_code():    their_function()```Find a more complete example in the `examples/` directory.## Allowed parameters for `student_code`, and their default values### `exception_prefix=&quot;I got an exception:&quot;`Printed right before the exception, if any.It's allowed to give a list of strings, in which case they'll beseparated by `&quot;\n\n&quot;`, useful to render markdown paragraphs.### `print_prefix=&quot;Your code printed:&quot;`Message to display before the student prints (in case `print_allowed`is `False` or `None`).It's allowed to give a list of strings, in which case they'll beseparated by `&quot;\n\n&quot;`, useful to render markdown paragraphs.### `too_slow_message=&quot;Your program looks too slow, looks like an infinite loop.&quot;`Message to display in case the code runs slower than the given `timeout` (defaults to 1s).It's allowed to give a list of strings, in which case they'll beseparated by `&quot;\n\n&quot;`, useful to render markdown paragraphs.### `prefix=()`A prefix for `print_prefix`, `exception_prefix`, and`too_slow_message=`, usefull to deduplicate strings, like:```pythonwith student_code(    prefix=&quot;While calling blahblah('bar')&quot;,    print_prefix=&quot;it printed:&quot;,    exception_prefix=&quot;it raised:&quot;,    too_slow_message=&quot;it took more than 1s, had to kill it.&quot;,):    blahblah('bar')```### `friendly=False`To use, or not[friendly-traceback](https://github.com/aroberge/friendly-traceback/)instead of bare Python exceptions.### `print_allowed=True`To allow or deny the student to print to stdout and stderr.- `True`: Prints are allowed (and displayed).- `None`: Prints are allowed (but not displayed).- `False`: Prints are disallowed (and displayed).In all cases you can read what they printed using the value of thecontext manager:```pythonwith student_code(print_allowed=None) as run:    their_function()assert run.err == &quot;&quot;assert run.out == &quot;42&quot;```## Good practicesWrite the student checking code a you would write unit test for yourown code.</longdescription>
</pkgmetadata>