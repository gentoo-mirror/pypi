<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>QCEngine========[![Travis build](https://img.shields.io/travis/MolSSI/QCEngine/master.svg?logo=linux&amp;logoColor=white)](https://travis-ci.org/MolSSI/QCEngine)[![codecov](https://img.shields.io/codecov/c/github/MolSSI/QCEngine.svg?logo=Codecov&amp;logoColor=white)](https://codecov.io/gh/MolSSI/QCEngine)[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/MolSSI/QCEngine.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/MolSSI/QCEngine/context:python)[![Documentation Status](https://img.shields.io/github/workflow/status/MolSSI/QCEngine/CI/master?label=docs&amp;logo=readthedocs&amp;logoColor=white)](http://docs.qcarchive.molssi.org/projects/qcengine/en/latest/)[![Conda (channel only)](https://img.shields.io/conda/vn/conda-forge/qcengine?color=blue&amp;logo=anaconda&amp;logoColor=white)](https://anaconda.org/conda-forge/qcengine)[![Chat on Slack](https://img.shields.io/badge/chat-on_slack-808493.svg?longCache=true&amp;style=flat&amp;logo=slack)](https://join.slack.com/t/qcarchive/shared_invite/enQtNDIzNTQ2OTExODk0LTE3MWI0YzBjNzVhNzczNDM0ZTA5MmQ1ODcxYTc0YTA1ZDQ2MTk1NDhlMjhjMmQ0YWYwOGMzYzJkZTM2NDlmOGM)&lt;!--[![Azure Build Status](https://dev.azure.com/MolSSI/QCArchive/_apis/build/status/MolSSI.QCEngine?branchName=master)](https://dev.azure.com/MolSSI/QCArchive/_build/latest?definitionId=5&amp;branchName=master)--&gt;Quantum chemistry program executor and IO standardizer ([QCSchema](https://github.com/MolSSI/QCSchema)) for quantum chemistry.# ExampleA simple example of QCEngine's capabilities is as follows:```python&gt;&gt;&gt; import qcengine as qcng&gt;&gt;&gt; import qcelemental as qcel&gt;&gt;&gt; mol = qcel.models.Molecule.from_data(&quot;&quot;&quot;O  0.0  0.000  -0.129H  0.0 -1.494  1.027H  0.0  1.494  1.027&quot;&quot;&quot;)&gt;&gt;&gt; inp = qcel.models.AtomicInput(    molecule=mol,    driver=&quot;energy&quot;,    model={&quot;method&quot;: &quot;SCF&quot;, &quot;basis&quot;: &quot;sto-3g&quot;},    keywords={&quot;scf_type&quot;: &quot;df&quot;}    )```These input specifications can be executed with the ``compute`` function along with a program specifier:```python&gt;&gt;&gt; ret = qcng.compute(inp, &quot;psi4&quot;)```The results contain a complete record of the computation:```python&gt;&gt;&gt; ret.return_result-74.45994963230625&gt;&gt;&gt; ret.properties.scf_dipole_moment[0.0, 0.0, 0.6635967188869244]&gt;&gt;&gt; ret.provenance.cpuIntel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz```See the [documentation](https://qcengine.readthedocs.io/en/latest/) for more information.# LicenseBSD-3C. See the [License File](LICENSE) for more information.</longdescription>
</pkgmetadata>