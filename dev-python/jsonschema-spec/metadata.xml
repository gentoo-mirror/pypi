<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>***************JSONSchema Spec***************.. image:: https://img.shields.io/pypi/v/jsonschema-spec.svg     :target: https://pypi.python.org/pypi/jsonschema-spec.. image:: https://travis-ci.org/p1c2u/jsonschema-spec.svg?branch=master     :target: https://travis-ci.org/p1c2u/jsonschema-spec.. image:: https://img.shields.io/codecov/c/github/p1c2u/jsonschema-spec/master.svg?style=flat     :target: https://codecov.io/github/p1c2u/jsonschema-spec?branch=master.. image:: https://img.shields.io/pypi/pyversions/jsonschema-spec.svg     :target: https://pypi.python.org/pypi/jsonschema-spec.. image:: https://img.shields.io/pypi/format/jsonschema-spec.svg     :target: https://pypi.python.org/pypi/jsonschema-spec.. image:: https://img.shields.io/pypi/status/jsonschema-spec.svg     :target: https://pypi.python.org/pypi/jsonschema-specAbout#####JSONSchema Spec with object-oriented pathsKey features############* Traverse elements like paths* Access spec on demand with separate dereferencing accessor layerInstallation############.. code-block:: console   pip install jsonschema-specAlternatively you can download the code and install from the repository:.. code-block:: console   pip install -e git+https://github.com/p1c2u/jsonschema-spec.git#egg=jsonschema_specUsage#####.. code-block:: python   &gt;&gt;&gt; from jsonschema_spec import Spec      &gt;&gt;&gt; d = {   ...     &quot;properties&quot;: {   ...        &quot;info&quot;: {   ...            &quot;$ref&quot;: &quot;#/$defs/Info&quot;,   ...        },   ...     },   ...     &quot;$defs&quot;: {   ...         &quot;Info&quot;: {   ...             &quot;properties&quot;: {   ...                 &quot;title&quot;: {   ...                     &quot;$ref&quot;: &quot;http://example.com&quot;,   ...                 },   ...                 &quot;version&quot;: {   ...                     &quot;type&quot;: &quot;string&quot;,   ...                     &quot;default&quot;: &quot;1.0&quot;,   ...                 },   ...             },   ...         },   ...     },   ... }      &gt;&gt;&gt; spec = Spec.from_dict(d)      &gt;&gt;&gt; # Stat keys   &gt;&gt;&gt; &quot;properties&quot; in spec   True      &gt;&gt;&gt; # Concatenate paths with /   &gt;&gt;&gt; info_spec = spec / &quot;properties&quot; / &quot;info&quot;      &gt;&gt;&gt; # Stat keys with implicit dereferencing   &gt;&gt;&gt; &quot;properties&quot; in info_spec   True      &gt;&gt;&gt; # Concatenate paths with implicit dereferencing   &gt;&gt;&gt; version_spec = info_spec / &quot;properties&quot; / &quot;version&quot;      &gt;&gt;&gt; # Open content with implicit dereferencing   &gt;&gt;&gt; with version_spec.open() as version:   ...     print(version)   {'type': 'string', 'default': '1.0'}Related projects################* `openapi-core &lt;https://github.com/p1c2u/openapi-core&gt;`__   Python library that adds client-side and server-side support for the OpenAPI.* `openapi-spec-validator &lt;https://github.com/p1c2u/openapi-spec-validator&gt;`__   Python library that validates OpenAPI Specs against the OpenAPI 2.0 (aka Swagger) and OpenAPI 3.0 specification* `openapi-schema-validator &lt;https://github.com/p1c2u/openapi-schema-validator&gt;`__   Python library that validates schema against the OpenAPI Schema Specification v3.0.License#######Copyright (c) 2017-2022, Artur Maciag, All rights reserved. Apache-2.0</longdescription>
</pkgmetadata>