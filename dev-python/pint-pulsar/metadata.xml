<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/nanograv/PINT/blob/master/docs/logo/PINT_LOGO_128trans.png   :alt: PINT Logo   :align: rightPINT====.. image:: https://github.com/nanograv/pint/workflows/CI%20Tests/badge.svg   :target: https://github.com/nanograv/pint/actions   :alt: Actions Status.. image:: https://codecov.io/gh/nanograv/PINT/branch/master/graph/badge.svg?token=xIOFqcKKrP   :target: https://codecov.io/gh/nanograv/PINT   :alt: Coverage   .. image:: https://readthedocs.org/projects/nanograv-pint/badge/?version=latest   :target: https://nanograv-pint.readthedocs.io/en/latest/?badge=latest   :alt: Documentation Status.. image:: https://img.shields.io/badge/arXiv-2012.00074-red   :target: https://arxiv.org/abs/2012.00074   :alt: PINT Paper on arXiv.. image:: https://img.shields.io/badge/ascl-1902.007-blue.svg?colorB=262255   :target: https://www.ascl.net/1902.007   :alt: PINT on ASCL.. image:: https://img.shields.io/pypi/l/pint-pulsar    :target: https://github.com/nanograv/PINT/blob/master/LICENSE.md    :alt: License:BSD.. image:: https://img.shields.io/badge/code_of_conduct-Contributor_Covenant-blue.svg    :target: https://github.com/nanograv/PINT/blob/master/CODE_OF_CONDUCT.md    :alt: Code of ConductPINT is not TEMPO3------------------PINT is a project to develop a new pulsar timing solution based onpython and modern libraries. It is still in active development,but it can already produce residuals from most &quot;normal&quot;timing models that agree with Tempo and Tempo2 to within ~10nanoseconds. It can be used within python scripts or notebooks,and there are several command line tools that come with it.The primary reasons we are developing PINT are:* To have a robust system to check high-precision timing results that is  completely independent of TEMPO and Tempo2* To make a system that is easy to extend and modify due to a good design  and the use of a modern programming language, techniques, and libraries.IMPORTANT Notes!----------------PINT has a naming conflict with the `pint &lt;https://pypi.org/project/Pint/&gt;`_ units package available from PyPI (i.e. using pip) and conda.  Do **NOT** ``pip install pint`` or ``conda install pint``!  See below!PINT requires `longdouble` arithmetic within `numpy`, which is currently not supported natively on M1 Macs (e.g., with the `ARM64 conda build &lt;https://conda-forge.org/blog/posts/2020-10-29-macos-arm64/&gt;`_).  So it may be better to install the standard `osx-64` build and rely on Rosetta.Installing----------.. image:: https://anaconda.org/conda-forge/pint-pulsar/badges/version.svg   :target: https://anaconda.org/conda-forge/pint-pulsar   :alt: Conda Version.. image:: https://img.shields.io/pypi/v/pint-pulsar.svg   :target: https://pypi.python.org/pypi/pint-pulsar   :alt: PyPI.. image:: https://img.shields.io/pypi/pyversions/pint-pulsar.svg   :target: https://pypi.python.org/pypi/pint-pulsar   :alt: PyVersionsPINT is now available via PyPI as the package `pint-pulsar &lt;https://pypi.org/project/pint-pulsar&gt;`_, so it is now simple to install via pip.For most users, who don't want to develop the PINT code, installation should just be a matter of::   $ pip install pint-pulsarBy default this will install in your system site-packages.  Depending on your system and preferences, you may want to append ``--user`` to install it for just yourself (e.g. if you don't have permission to write in the system site-packages), or you may want to create a virtualenv to work on PINT (using a virtualenv is highly recommended by the PINT developers).PINT is also available for Anaconda python under the conda-forge channel:    $ conda install -c conda-forge pint-pulsarThe above two options install the latest *released* version. If you want access to the latest development version, the source code, example notebooks, and tests, you can install from source, by cloning the source repository from GitHub, then installit, ensuring that all dependencies needed to run PINT are available::    $ git clone https://github.com/nanograv/PINT.git    $ cd PINT    $ pip install .Complete installation instructions are available here_... _here: https://nanograv-pint.readthedocs.io/en/latest/installation.htmlUsing-----See the online documentation_.  Specifically:* `tutorials &lt;https://nanograv-pint.readthedocs.io/en/latest/tutorials.html&gt;`_* `API reference &lt;https://nanograv-pint.readthedocs.io/en/latest/reference.html&gt;`_* `How to's for common tasks &lt;https://github.com/nanograv/PINT/wiki/How-To&gt;`_Are you a NANOGrav member?  Then join the #pint channel in the NANOGrav slack.  If you have tasks that aren't covered in the material above, you canemail pint@nanograv.org or one of the people below:* Scott Ransom (sransom@nrao.edu)* Paul Ray (Paul.Ray@nrl.navy.mil)* David Kaplan (kaplan@uwm.edu)  Want to do something new?  Submit a github `issue &lt;https://github.com/nanograv/PINT/issues&gt;`_.  .. _documentation:   http://nanograv-pint.readthedocs.io/en/latest/And for more details, please read and cite(!) the PINT paper_... _paper:   https://ui.adsabs.harvard.edu/abs/2021ApJ...911...45L/abstract</longdescription>
</pkgmetadata>