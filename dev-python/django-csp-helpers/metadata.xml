<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># django-csp-helpers  [![PyPI](https://img.shields.io/pypi/v/django-csp-helpers)](https://pypi.org/project/django-csp-helpers/)A set of template tags (and mixins!) to assist in building CSP-enabled websites using[django-csp](https://github.com/mozilla/django-csp).## Install1.  Add &quot;csp_helpers&quot; to your `INSTALLED_APPS`:```pythonINSTALLED_APPS = [    ...    'csp_helpers',]```## Mixins*django-csp-helpers* includes a pair of mixins that can be applied to views and forms toallow for the use of CSP nonces in widgets and form media.### How to useSimply add **CSPViewMixin** to your Views, and **CSPFormMixin** to your Forms or ModelForms.You will need to use *both* mixins together, they don't work alone.**CSPFormMixin**```pythonfrom csp_helpers.mixins import CSPFormMixinclass ArticleForm(CSPFormMixin, ModelForm):    ...```**CSPViewMixin**```pythonfrom csp_helpers.mixins import CSPViewMixinfrom .forms import ArticleFormclass ArticleUpdateView(CSPViewMixin, UpdateView):    form_class = ArticleForm    ...```#### Using only CSPFormMixinIf you are managing your form manually, or not using class-based views, you will not be ableto use **CSPViewMixin**. In these cases, just call your form with `csp_nonce` as an argumentmanually, like below.```pythonform = MyFancyForm(csp_nonce=request.csp_nonce)```### What it doesThe *django-csp-helpers* mixins will modify and extend your views and forms in two ways.#### Form WidgetsForm widgets will be patched to inject a CSP nonce into the rendering context for templatewidgets. You can access this with `{{ csp_nonce }}` in your widget templates.#### Form MediaForm media (CSS and JS) will be included with CSP nonces.## Template Tags*django-csp-helpers* also includes a pair of template tags### render_bundle_cspAn exact replacement for the [django-webpack-loader](https://github.com/owais/django-webpack-loader)`render_bundle` tag that includes bundles with CSP nonces.```djangotemplate{% load render_bundle_csp %}{% render_bundle_csp 'main' 'css' %}{% render_bundle_csp 'main' 'js %}```### media_cspA less advanced version of the form media functionality provided by the mixins above. Simply load this tagand pass it a form, and it will include the form media with CSP nonces.```djangotemplate{% load media_csp %}{# include form media #}{% media_csp myform %}```## LicenseThis software is released under the MIT license.```Copyright (c) 2019-2020 Luke RogersPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.```</longdescription>
</pkgmetadata>