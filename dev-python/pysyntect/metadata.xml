<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pysyntect[![Project License - MIT](https://img.shields.io/pypi/l/pysyntect.svg)](https://raw.githubusercontent.com/spyder-ide/pysyntect/master/LICENSE)[![pypi version](https://img.shields.io/pypi/v/pysyntect.svg)](https://pypi.org/project/pysyntect/)[![conda version](https://img.shields.io/conda/vn/conda-forge/pysyntect.svg)](https://www.anaconda.com/download/)[![download count](https://img.shields.io/conda/dn/conda-forge/pysyntect.svg)](https://www.anaconda.com/download/)[![Downloads](https://pepy.tech/badge/pysyntect)](https://pepy.tech/project/pysyntect)[![PyPI status](https://img.shields.io/pypi/status/pysyntect.svg)](https://github.com/spyder-ide/pysyntect)![Linux build](https://github.com/spyder-ide/pysyntect/workflows/Linux%20build/badge.svg)![MacOS build](https://github.com/spyder-ide/pysyntect/workflows/MacOS%20build/badge.svg)![Windows build](https://github.com/spyder-ide/pysyntect/workflows/Windows%20build/badge.svg)*Copyright © 2020– Spyder Project Contributors*## OverviewPython bindings for the [Syntect](https://github.com/trishume/syntect) library. Pysyntect provides a lightweight, fast engine to compute syntax highlighting using [Sublime Text syntax definitions](http://www.sublimetext.com/docs/3/syntax.html#include-syntax) and TextMate theme definitions, which are shared by many editors.&lt;!-- Insert some image here --&gt;![Python example](https://raw.githubusercontent.com/spyder-ide/pysyntect/master/doc/python.png)&lt;!-- ![C example](./doc/c.png) --&gt;&lt;!-- ![Elixir example](./doc/elixir.png) --&gt;&lt;!-- ![Rust example](./doc/rust.png) --&gt;## InstallingTo install pysyntect, you can use both conda or pip package managers:```bash# Using Conda (Recommended)conda install pysyntect -c spyder-ide# Using pippip install pysyntect```## DependenciesTo compile pysyntect, you will require the latest stable/beta/nightly release of [Rust](https://rustup.rs/), alongside [Cargo](https://crates.io/). Also, it requires a Python distribution with its corresponding development headers. Finally, this project depends on the following Cargo crates:* [PyO3](https://github.com/PyO3/pyo3): Library used to produce Python bindings from Rust code.* [Syntect](https://github.com/trishume/syntect): Syntax highlighting library in Rust.* [Maturin](https://github.com/PyO3/maturin): Build system to build and publish Rust-based Python packages## Compilling locallyBesides Rust, you will require the latest version of maturin installed to compile this project locally:```bashpip install maturin toml```After installing those packages, it is possible to execute the following command to compile pysyntect:```bashmaturin develop```In order to produce wheels, ``maturin build`` can be used instead. This project supports [PEP517](https://www.python.org/dev/peps/pep-0517/), thus pip can be used to install this package as well:```bashpip install -U .```## Running testsWe use pytest to run tests as it follows (after calling ``maturin develop``):```bashpytest -v syntect/tests```## Package usagePysyntect provides utillities and functions for loading themes and syntax definitions, as well to highlight text strings. Pysyntect supports over 500 [syntax language definitions](https://github.com/spyder-ide/pysyntect/tree/master/syntect/grammars) across many TextMate theme definitions (not included as part of this package).```pythonfrom syntect import (highlight, load_theme_folder,                     load_default_syntax, load_syntax_folder,                     escape_to_console)# Load default syntax grammarssyntax = load_default_syntax()# Load syntax grammars from a pathsyntax = load_syntax_folder(&quot;path/to/a/folder/with/grammars&quot;)# Languages supported by the syntax setsyntax.languages# Load theme definitions from a paththemes = load_theme_folder(&quot;path/to/a/folder/with/themes&quot;)# List of themes loadedthemes.themes# Select a themetheme = themes['&lt;name_of_the_theme&gt;']# Load a file and syntax highlight itwith open('my_file.extension', 'r') as f:    lines = f.read()# Returns a list of styles to apply per tokencolor_ranges = highlight(lines, 'extension', syntax, theme)# Get background/foreground colors by tokenstyle, token = color_ranges[0]background = style.backgroundforeground = style.foregroundcomponents = ('r', 'g', 'b', 'a')bg_red, bg_green, bg_blue, bg_alpha = [getattr(background, c)                                       for c in components]fg_red, fg_green, fg_blue, fg_alpha = [getattr(foreground, c)                                       for c in components]# Preview syntax highlighing result to consoleescape_to_console(color_ranges, display_bg=True)```## ChangelogPlease see our [CHANGELOG](https://github.com/spyder-ide/pysyntect/blob/master/CHANGELOG.md) file to learn more about our new features and improvements.## Contribution guidelinesWe follow PEP8 and PEP257 for pure python packages and Rust to compile extensions. We use MyPy type annotations for all functions and classes declared on this package. Feel free to send a PR or create an issue if you have any problem/question.</longdescription>
</pkgmetadata>