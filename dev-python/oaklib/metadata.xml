<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Ontology Access Kit (OAK)Python lib for common ontology operations over a variety of backends.&lt;img src=&quot;docs/logos/oak-logo_black-icon.png&quot; width=&quot;20%&quot;&gt;[![PyPI version](https://badge.fury.io/py/oaklib.svg)](https://badge.fury.io/py/oaklib)![](https://github.com/incatools/ontology-access-kit/workflows/Build/badge.svg)[![badge](https://img.shields.io/badge/launch-binder-579ACA.svg)](https://mybinder.org/v2/gh/incatools/ontology-access-kit/main?filepath=notebooks)[![Downloads](https://pepy.tech/badge/oaklib/week)](https://pepy.tech/project/oaklib)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6456239.svg)](https://doi.org/10.5281/zenodo.6456239)[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg)](.github/CODE_OF_CONDUCT.md) OAK provides a collection of [interfaces](https://incatools.github.io/ontology-access-kit/interfaces/index.html) for various ontology operations, including: - [look up basic features](https://incatools.github.io/ontology-access-kit/interfaces/basic.html) of an ontology element, such as its label, definition, relationships, or aliases - search an ontology for a term - validate an ontology - modify or delete terms - generate and visualize subgraphs - identify lexical matches and export as SSSOM mapping tables - perform more advanced operations, such as graph traversal, OWL axiom processing, or text annotationThese interfaces are *separated* from any particular backend, for which there a number of different [adapters](https://incatools.github.io/ontology-access-kit/implementations/index.html).This means the same Python API and command line can be used regardless of whether the ontology: - is served by a remote API such as OLS or BioPortal - is present locally on the filesystem in owl, obo, obojson, or sqlite formats - is to be downloaded from a remote repository such as the OBO library - is queried from a remote database, including SPARQL endpoints (Ontobee/Ubergraph), A SQL database, a Solr/ES endpoint## Documentation:- [incatools.github.io/ontology-access-kit](https://incatools.github.io/ontology-access-kit)- Presentations:   - [Using the OAK command line](https://doi.org/10.5281/zenodo.7708962) *OBO Academy 2023*   - [Introduction to OAK](https://doi.org/10.5281/zenodo.7765088) *OAK workshop 2022*## ContributingSee the contribution guidelines at [CONTRIBUTING.md](.github/CONTRIBUTING.md).All contributors are expected to uphold our [Code of Conduct](.github/CODE_OF_CONDUCT.md).## Usage```pythonfrom oaklib import get_adapter# connect to the CL sqlite database adapter# (will first download if not already downloaded)adapter = get_adapter(&quot;sqlite:obo:cl&quot;)NEURON = &quot;CL:0000540&quot;print('## Basic info')print(f'ID: {NEURON}')print(f'Label: {adapter.label(NEURON)}')for alias in adapter.entity_aliases(NEURON):    print(f'Alias: {alias}')print('## Relationships (direct)')for relationship in adapter.relationships([NEURON]):    print(f' * {relationship.predicate} -&gt; {relationship.object} &quot;{adapter.label(relationship.object)}&quot;')    print('## Ancestors (over IS_A and PART_OF)')from oaklib.datamodels.vocabulary import IS_A, PART_OFfrom oaklib.interfaces import OboGraphInterfaceif not isinstance(adapter, OboGraphInterface):    raise ValueError('This adapter does not support graph operations')for ancestor in adapter.ancestors(NEURON, predicates=[IS_A, PART_OF]):    print(f' * ANCESTOR: &quot;{adapter.label(ancestor)}&quot;')```For more examples, see- [demo notebook](https://github.com/incatools/ontology-access-kit/blob/main/notebooks/basic-demo.ipynb)- [tutorial part 2](https://incatools.github.io/ontology-access-kit/intro/tutorial02.html)## Command LineSee: - [CLI docs](https://incatools.github.io/ontology-access-kit/cli.html) - [Example notebooks](https://github.com/INCATools/ontology-access-kit/tree/main/notebooks/Commands## SearchUse the pronto backend to fetch and parse an ontology from the OBO library, then use the `search` command```bashrunoak -i obolibrary:pato.obo search osmol ```Returns:```PATO:0001655 ! osmolarityPATO:0001656 ! decreased osmolarityPATO:0001657 ! increased osmolarityPATO:0002027 ! osmolalityPATO:0002028 ! decreased osmolalityPATO:0002029 ! increased osmolalityPATO:0045034 ! normal osmolalityPATO:0045035 ! normal osmolarity```### QC and ValidationPerform validation on PR using sqlite/rdftab instance:```bashrunoak -i sqlite:../semantic-sql/db/pr.db validate```### List all termsList all terms obolibrary has for mondo```bashrunoak -i obolibrary:mondo.obo terms ```### Lexical indexMake a lexical index of all terms in Mondo:```bashrunoak  -i obolibrary:mondo.obo lexmatch -L mondo.index.yaml```### SearchSearching over OBO using ontobee:```bashrunoak  -i ontobee: search tentacle```yields:```http://purl.obolibrary.org/obo/CEPH_0000256 ! tentaclehttp://purl.obolibrary.org/obo/CEPH_0000257 ! tentacle absencehttp://purl.obolibrary.org/obo/CEPH_0000258 ! tentacle pad...```Searching over a broader set of ontologies in bioportal (requires API KEY)(https://www.bioontology.org/wiki/BioPortal_Help#Getting_an_API_key)```bashrunoak set-apikey bioportal YOUR-KEY-HERErunoak  -i bioportal: search tentacle```yields:```BTO:0001357 ! tentaclehttp://purl.jp/bio/4/id/200906071014668510 ! tentacleCEPH:0000256 ! tentaclehttp://www.projecthalo.com/aura#Tentacle ! TentacleCEPH:0000256 ! tentacle...```Alternatively, you can add &quot;BIOPORTAL_API_KEY&quot; to your environment variables.Searching over more limited set of ontologies in Ubergraph:```bashrunoak -v -i ubergraph: search tentacle```yields```UBERON:0013206 ! nasal tentacle```### Annotating Texts```bashrunoak  -i bioportal: annotate neuron from CA4 region of hippocampus of mouse```yields:```yamlobject_id: CL:0000540object_label: neuronobject_source: https://data.bioontology.org/ontologies/NIFDYSmatch_type: PREFsubject_start: 1subject_end: 6subject_label: NEURONobject_id: http://www.co-ode.org/ontologies/galen#Neuronobject_label: Neuronobject_source: https://data.bioontology.org/ontologies/GALENmatch_type: PREFsubject_start: 1subject_end: 6subject_label: NEURON...```### MappingCreate a SSSOM mapping file for a set of ontologies:```bashrobot merge -I http://purl.obolibrary.org/obo/hp.owl -I http://purl.obolibrary.org/obo/mp.owl convert --check false -o hp-mp.oborunoak lexmatch -i hp-mp.obo -o hp-mp.sssom.tsv```### Visualization of ancestor graphsUse the sqlite backend to visualize graph up from 'vacuole' using test ontology sqlite:```bashrunoak -i sqlite:tests/input/go-nucleus.db  viz GO:0005773```![img](notebooks/output/vacuole.png)Same using ubergraph, restricting to is-a and part-of```bashrunoak -i ubergraph:  viz GO:0005773 -p i,BFO:0000050```Same using pronto, fetching ontology from obolibrary```bashrunoak -i obolibrary:go.obo  viz GO:0005773```## ConfigurationOAK uses [`pystow`](https://github.com/cthoyt/pystow) for caching. By default,this goes inside `~/.data/`, but can be configured following[these instructions](https://github.com/cthoyt/pystow#%EF%B8%8F%EF%B8%8F-configuration).</longdescription>
</pkgmetadata>