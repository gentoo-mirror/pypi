<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Rejected========Rejected is a AMQP consumer daemon and message processing framework. It allowsfor rapid development of message processing consumers by handling all of thecore functionality of communicating with RabbitMQ and management of consumerprocesses.Rejected runs as a master process with multiple consumer configurations that areeach run it an isolated process. It has the ability to collect statisticaldata from the consumer processes and report on it.Rejected supports Python 2.7 and 3.4+.|Version| |Status| |Coverage| |License|Features--------- Automatic exception handling including connection management and consumer restarting- Smart consumer classes that can automatically decode and deserialize message bodies based upon message headers- Metrics logging and submission to statsd and InfluxDB- Built-in profiling of consumer code- Ability to write asynchronous code in consumers allowing for parallel communication with external resourcesDocumentation-------------https://rejected.readthedocs.ioExample Consumers-----------------.. code:: python    from rejected import consumer    import logging    LOGGER = logging.getLogger(__name__)    class Test(consumer.Consumer):        def process(self, message):            LOGGER.debug('In Test.process: %s' % message.body)Async Consumer^^^^^^^^^^^^^^To make a consumer async, you can decorate the`Consumer.prepare &lt;http://rejected.readthedocs.org/en/latest/api_consumer.html#rejected.consumer.Consumer.prepare&gt;`_and `Consumer.process &lt;http://rejected.readthedocs.org/en/latest/api_consumer.html#rejected.consumer.Consumer.process&gt;`_methods using Tornado's`@gen.coroutine &lt;http://www.tornadoweb.org/en/stable/gen.html#tornado.gen.coroutine&gt;`_.Asynchronous consumers do not allow for concurrent processing multiple messages in the same process, butrather allow you to use asynchronous clients like`Tornado's &lt;http://tornadoweb.org&gt;`_`AsyncHTTPClient &lt;http://www.tornadoweb.org/en/stable/httpclient.html&gt;`_ and the`Queries &lt;http://queries.readthedocs.org/en/latest/tornado_session.html&gt;`_PostgreSQL library to perform parallel tasks using coroutines when processing a single message... code:: python    import logging    from rejected import consumer    from tornado import gen    from tornado import httpclient    class AsyncExampleConsumer(consumer.Consumer):        @gen.coroutine        def process(self):            LOGGER.debug('Message: %r', self.body)            http_client = httpclient.AsyncHTTPClient()            results = yield [http_client.fetch('http://www.github.com'),                             http_client.fetch('http://www.reddit.com')]            LOGGER.info('Length: %r', [len(r.body) for r in results])Example Configuration---------------------.. code:: yaml    %YAML 1.2    ---    Application:      poll_interval: 10.0      stats:        log: True        influxdb:          enabled: True          scheme: http          host: localhost          port: 8086          user: username          password: password          database: dbname        statsd:          enabled: True          host: localhost          port: 8125          prefix: applications.rejected      Connections:        rabbitmq:          host: localhost          port: 5672          user: guest          pass: guest          ssl: False          vhost: /          heartbeat_interval: 300      Consumers:        example:          consumer: rejected.example.Consumer          sentry_dsn: https://[YOUR-SENTRY-DSN]          connections:            - name: rabbitmq1              consume: True          drop_exchange: dlxname          qty: 2          queue: generated_messages          qos_prefetch: 100          ack: True          max_errors: 100          config:            foo: True            bar: baz    Daemon:      user: rejected      group: daemon      pidfile: /var/run/rejected/example.%(pid)s.pid    Logging:      version: 1      formatters:        verbose:          format: &quot;%(levelname) -10s %(asctime)s %(process)-6d %(processName) -25s %(name) -20s %(funcName) -25s: %(message)s&quot;          datefmt: &quot;%Y-%m-%d %H:%M:%S&quot;        verbose_correlation:          format: &quot;%(levelname) -10s %(asctime)s %(process)-6d %(processName) -25s %(name) -20s %(funcName) -25s: %(message)s {CID %(correlation_id)s}&quot;          datefmt: &quot;%Y-%m-%d %H:%M:%S&quot;        syslog:          format: &quot;%(levelname)s &lt;PID %(process)d:%(processName)s&gt; %(name)s.%(funcName)s: %(message)s&quot;        syslog_correlation:          format: &quot;%(levelname)s &lt;PID %(process)d:%(processName)s&gt; %(name)s.%(funcName)s: %(message)s {CID %(correlation_id)s)&quot;      filters:        correlation:          '()': rejected.log.CorrelationFilter          'exists': True        no_correlation:          '()': rejected.log.CorrelationFilter          'exists': False      handlers:        console:          class: logging.StreamHandler          formatter: verbose          debug_only: false          filters: [no_correlation]        console_correlation:          class: logging.StreamHandler          formatter: verbose_correlation          debug_only: false          filters: [correlation]        syslog:          class: logging.handlers.SysLogHandler          facility: daemon          address: /var/run/syslog          formatter: syslog          filters: [no_correlation]        syslog_correlation:          class: logging.handlers.SysLogHandler          facility: daemon          address: /var/run/syslog          formatter: syslog          filters: [correlation]      loggers:        helper:          level: INFO          propagate: true          handlers: [console, console_correlation, syslog, syslog_correlation]        rejected:          level: INFO          propagate: true          handlers: [console, console_correlation, syslog, syslog_correlation]        tornado:          level: INFO          propagate: true          handlers: [console, console_correlation, syslog, syslog_correlation]      disable_existing_loggers: true      incremental: falseVersion History---------------Available at https://rejected.readthedocs.org/en/latest/history.html.. |Version| image:: https://img.shields.io/pypi/v/rejected.svg?   :target: https://pypi.python.org/pypi/rejected.. |Status| image:: https://img.shields.io/travis/gmr/rejected.svg?   :target: https://travis-ci.org/gmr/rejected.. |Coverage| image:: https://img.shields.io/codecov/c/github/gmr/rejected.svg?   :target: https://codecov.io/github/gmr/rejected?branch=master.. |License| image:: https://img.shields.io/pypi/l/rejected.svg?   :target: https://rejected.readthedocs.org</longdescription>
</pkgmetadata>