# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="1.4.4rc1"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="OpenVINO™ Training Extensions: Train, Evaluate, Optimize, Deploy Computer Vision Models via OpenVINO™"

HOMEPAGE="https://github.com/openvinotoolkit/training_extensions"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="action anomaly classification detection full segmentation visual_prompting"
DEPENDENCIES="dev-python/attrs[${PYTHON_USEDEP}]
	dev-python/networkx[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/omegaconf[${PYTHON_USEDEP}]
	dev-python/opencv-python[${PYTHON_USEDEP}]
	dev-python/pymongo[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	dev-python/Shapely[${PYTHON_USEDEP}]
	dev-python/imagesize[${PYTHON_USEDEP}]
	dev-python/dill[${PYTHON_USEDEP}]
	action? ( dev-python/natsort[${PYTHON_USEDEP}] )
	action? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	action? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	action? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	action? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	action? ( dev-python/psutil[${PYTHON_USEDEP}] )
	action? ( dev-python/scipy[${PYTHON_USEDEP}] )
	action? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	action? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	action? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	action? ( dev-python/nncf[${PYTHON_USEDEP}] )
	action? ( dev-python/onnx[${PYTHON_USEDEP}] )
	action? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	action? ( dev-python/openvino[${PYTHON_USEDEP}] )
	action? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	action? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	action? ( dev-python/mmcv-full[${PYTHON_USEDEP}] )
	action? ( dev-python/mmaction2[${PYTHON_USEDEP}] )
	action? ( dev-python/mmdet[${PYTHON_USEDEP}] )
	action? ( dev-python/mmdeploy[${PYTHON_USEDEP}] )
	action? ( dev-python/yapf[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/natsort[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/psutil[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/scipy[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/nncf[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/onnx[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/openvino[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/torchtext[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/anomalib[${PYTHON_USEDEP}] )
	anomaly? ( dev-python/kornia[${PYTHON_USEDEP}] )
	classification? ( dev-python/natsort[${PYTHON_USEDEP}] )
	classification? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	classification? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	classification? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	classification? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	classification? ( dev-python/psutil[${PYTHON_USEDEP}] )
	classification? ( dev-python/scipy[${PYTHON_USEDEP}] )
	classification? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	classification? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	classification? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	classification? ( dev-python/nncf[${PYTHON_USEDEP}] )
	classification? ( dev-python/onnx[${PYTHON_USEDEP}] )
	classification? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	classification? ( dev-python/openvino[${PYTHON_USEDEP}] )
	classification? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	classification? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	classification? ( dev-python/mmcv-full[${PYTHON_USEDEP}] )
	classification? ( dev-python/mmcls[${PYTHON_USEDEP}] )
	classification? ( dev-python/timm[${PYTHON_USEDEP}] )
	classification? ( dev-python/mmdeploy[${PYTHON_USEDEP}] )
	classification? ( dev-python/pytorchcv[${PYTHON_USEDEP}] )
	classification? ( dev-python/yapf[${PYTHON_USEDEP}] )
	detection? ( dev-python/natsort[${PYTHON_USEDEP}] )
	detection? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	detection? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	detection? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	detection? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	detection? ( dev-python/psutil[${PYTHON_USEDEP}] )
	detection? ( dev-python/scipy[${PYTHON_USEDEP}] )
	detection? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	detection? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	detection? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	detection? ( dev-python/nncf[${PYTHON_USEDEP}] )
	detection? ( dev-python/onnx[${PYTHON_USEDEP}] )
	detection? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	detection? ( dev-python/openvino[${PYTHON_USEDEP}] )
	detection? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	detection? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	detection? ( dev-python/mmcv-full[${PYTHON_USEDEP}] )
	detection? ( dev-python/mmdet[${PYTHON_USEDEP}] )
	detection? ( dev-python/pytorchcv[${PYTHON_USEDEP}] )
	detection? ( dev-python/mmcls[${PYTHON_USEDEP}] )
	detection? ( dev-python/timm[${PYTHON_USEDEP}] )
	detection? ( dev-python/mmdeploy[${PYTHON_USEDEP}] )
	detection? ( dev-python/mmengine[${PYTHON_USEDEP}] )
	detection? ( dev-python/scikit-image[${PYTHON_USEDEP}] )
	detection? ( dev-python/yapf[${PYTHON_USEDEP}] )
	full? ( dev-python/natsort[${PYTHON_USEDEP}] )
	full? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	full? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	full? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	full? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	full? ( dev-python/psutil[${PYTHON_USEDEP}] )
	full? ( dev-python/scipy[${PYTHON_USEDEP}] )
	full? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	full? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	full? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	full? ( dev-python/nncf[${PYTHON_USEDEP}] )
	full? ( dev-python/onnx[${PYTHON_USEDEP}] )
	full? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	full? ( dev-python/openvino[${PYTHON_USEDEP}] )
	full? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	full? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	full? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	full? ( dev-python/torchtext[${PYTHON_USEDEP}] )
	full? ( dev-python/anomalib[${PYTHON_USEDEP}] )
	full? ( dev-python/kornia[${PYTHON_USEDEP}] )
	full? ( dev-python/mmcv-full[${PYTHON_USEDEP}] )
	full? ( dev-python/mmcls[${PYTHON_USEDEP}] )
	full? ( dev-python/timm[${PYTHON_USEDEP}] )
	full? ( dev-python/mmdeploy[${PYTHON_USEDEP}] )
	full? ( dev-python/pytorchcv[${PYTHON_USEDEP}] )
	full? ( dev-python/yapf[${PYTHON_USEDEP}] )
	full? ( dev-python/mmdet[${PYTHON_USEDEP}] )
	full? ( dev-python/mmengine[${PYTHON_USEDEP}] )
	full? ( dev-python/scikit-image[${PYTHON_USEDEP}] )
	full? ( dev-python/mmsegmentation[${PYTHON_USEDEP}] )
	full? ( dev-python/einops[${PYTHON_USEDEP}] )
	full? ( dev-python/pytorch-lightning[${PYTHON_USEDEP}] )
	full? ( dev-python/mmaction2[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/natsort[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/psutil[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/scipy[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/nncf[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/onnx[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/openvino[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/mmcv-full[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/mmsegmentation[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/scikit-image[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/mmdeploy[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/timm[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/pytorchcv[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/einops[${PYTHON_USEDEP}] )
	segmentation? ( dev-python/yapf[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/natsort[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/prettytable[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/protobuf[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/datumaro[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/psutil[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/scipy[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/bayesian-optimization[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/multiprocess[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/nncf[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/onnx[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/openvino-model-api[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/openvino[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/openvino-dev[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/openvino-telemetry[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/scikit-image[${PYTHON_USEDEP}] )
	visual_prompting? ( dev-python/pytorch-lightning[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
