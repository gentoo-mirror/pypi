<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Textract-Overlayeramazon-textract-overlayer provides functions to help overlay bounding boxes on documents.# Install```bash&gt; python -m pip install amazon-textract-overlayer```Make sure your environment is setup with AWS credentials through configuration files or environment variables or an attached role. (https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html)# SamplesPrimary method provided is get_bounding_boxes which returns bounding boxes based on the Textract_Type passed in.Mostly taken from the ```amazon-textract``` command from the package ```amazon-textract-helper```.This will return the bounding boxes for WORD and CELL data types.```pythonfrom textractoverlayer.t_overlay import DocumentDimensions, get_bounding_boxesfrom textractcaller.t_call import Textract_Features, Textract_Types, call_textractdoc = call_textract(input_document=input_document, features=features)# image is a PIL.Image.Image in this casedocument_dimension:DocumentDimensions = DocumentDimensions(doc_width=image.size[0], doc_height=image.size[1])overlay=[Textract_Types.WORD, Textract_Types.CELL]bounding_box_list = get_bounding_boxes(textract_json=doc, document_dimensions=document_dimension, overlay_features=overlay)```The actual overlay drawing of bounding boxes for images is in the ```amazon-textract``` command from the package ```amazon-textract-helper``` and looks like this:```pythonfrom PIL import Image, ImageDrawimage = Image.open(input_document)rgb_im = image.convert('RGB')draw = ImageDraw.Draw(rgb_im)# check the impl in amazon-textract-helper for ways to associate different colors to typesfor bbox in bounding_box_list:    draw.rectangle(xy=[bbox.xmin, bbox.ymin, bbox.xmax, bbox.ymax], outline=(128, 128, 0), width=2)rgb_im.show()```The draw bounding boxes within PDF documents the following code can be used:```pythonimport fitz# for local stored filesfile_path = &quot;&lt;&lt;replace with the local path to your pdf file&gt;&gt;&quot;doc = fitz.open(file_path)# for files stored in S3 the streaming object can be used# doc = fitz.open(stream=&quot;&lt;&lt;replace with stream_object_variable&gt;&gt;&quot;, filetype=&quot;pdf&quot;)# draw boxesfor p, page in enumerate(doc):    p += 1    for bbox in bounding_box_list:        if bbox.page_number == p:            page.draw_rect(                [bbox.xmin, bbox.ymin, bbox.xmax, bbox.ymax], color=(0, 1, 0), width=2            )# save file locally doc.save(&quot;&lt;&lt;local path for output file&gt;&gt;&quot;)```</longdescription>
</pkgmetadata>