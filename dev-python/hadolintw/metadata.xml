<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Publish](https://github.com/mperezi/hadolint-wrapper/workflows/Publish/badge.svg)](https://github.com/mperezi/hadolint-wrapper/actions?query=workflow%3APublish)# hadolint-wrapper ## What is hadolint?[Hadolint](https://github.com/hadolint/hadolint) stands for Haskell Dockerfile Linter and is:&gt; A smarter Dockerfile linter that helps you build [best practice](https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices) Docker images. ## Example### Dockerfile```dockerfileFROM debianRUN export node_version=&quot;0.10&quot; \&amp;&amp; apt-get update &amp;&amp; apt-get -y install nodejs=&quot;$node_verion&quot;COPY package.json usr/src/appRUN cd /usr/src/app \&amp;&amp; npm install node-staticEXPOSE 80000CMD &quot;npm start&quot;```### With hadolint```$ hadolint DockerfileDockerfile:1 DL3006 Always tag the version of an image explicitlyDockerfile:2 SC2154 node_verion is referenced but not assigned (did you mean 'node_version'?).Dockerfile:2 DL3009 Delete the apt-get lists after installing somethingDockerfile:2 DL3015 Avoid additional packages by specifying `--no-install-recommends`Dockerfile:5 DL3003 Use WORKDIR to switch to a directoryDockerfile:5 DL3016 Pin versions in npm. Instead of `npm install &lt;package&gt;` use `npm install &lt;package&gt;@&lt;version&gt;`Dockerfile:8 DL3011 Valid UNIX ports range from 0 to 65535Dockerfile:9 DL3025 Use arguments JSON notation for CMD and ENTRYPOINT arguments```### With hadolint wrapper```bash$ hadolintw Dockerfile```![sample-output](https://user-images.githubusercontent.com/43891734/76677889-a3de9680-65d3-11ea-9575-8ba289bcb149.png)## InstallationOn OS X, the easiest way to install *hadolintw* is using [Homebrew](http://brew.sh/)```$ brew tap mperezi/tools$ brew install hadolint-wrapper```On other platforms, install *hadolintw* using pip```$ pip install hadolintw```## Usage```$ hadolintwUsage: hadolintw [OPTIONS] DOCKERFILE [HADOLINT_ARGS]...  Provides a more clear output for hadolintOptions:  -d, --use-docker             use the dockerized version of hadolint  --color [never|auto|always]  --help                       Show this message and exit.```Set up as a wrapper:```$ alias hadolint=hadolintw$ hadolint Dockerfile --ignore DL3020# Please note that all hadolint options must come AFTER the Dockerfile```## FAQ### Does the wrapper keep the exit status of hadolint so that I can use it in my CI environment?No problem.### My CI environment doesn't support colorized output. Can I disable it?By default the wrapper can detect if the output is being written to a tty or a pipe or a file, enabling or disabling the color codes accordingly (`â€”color auto` is the default setting). However you can always turn this feature on or off regardless of the type of output destination:```$ hadolintw --color never Dockerfile```### In our team we have a `hadolint.yml` with some rules defined for our project. Can we still use it with the hadolint wrapper?Sure.```$ hadolintw Dockerfile --config hadolint.yml```### The hadolint program is not available where my build is going to run but at least I have access to a Docker environment. Can I still run hadolint?[Be my guest](https://hub.docker.com/r/hadolint/hadolint).```$ hadolintw --use-docker DockerfileUnable to find image 'hadolint/hadolint:latest' locallylatest: Pulling from hadolint/hadolint8a8460b25d70: Pulling fs layer8a8460b25d70: Verifying Checksum8a8460b25d70: Download complete8a8460b25d70: Pull completeDigest: sha256:0cdbd1e0f5fd3135d17617bb510a85c0248eb70b041021fe5431d4d1501d41b9Status: Downloaded newer image for hadolint/hadolint:latest...```</longdescription>
</pkgmetadata>