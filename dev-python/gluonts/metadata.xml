<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;img class=&quot;hide-on-website&quot; height=&quot;100px&quot; src=&quot;https://ts.gluon.ai/dev/_static/gluonts.svg&quot;&gt;# GluonTS - Probabilistic Time Series Modeling in Python[![PyPI](https://img.shields.io/pypi/v/gluonts.svg?style=flat-square&amp;color=b75347)](https://pypi.org/project/gluonts/)[![GitHub](https://img.shields.io/github/license/awslabs/gluonts.svg?style=flat-square&amp;color=df7e66)](./LICENSE)[![Static](https://img.shields.io/static/v1?label=docs&amp;message=stable&amp;color=edc775&amp;style=flat-square)](https://ts.gluon.ai/)[![Static](https://img.shields.io/static/v1?label=docs&amp;message=dev&amp;color=edc775&amp;style=flat-square)](https://ts.gluon.ai/dev/)[![PyPI Downloads](https://img.shields.io/pypi/dm/gluonts?style=flat-square&amp;color=94b594)](https://pepy.tech/project/gluonts)GluonTS is a Python package for probabilistic time series modeling, focusing on deep learning based models,based on [PyTorch](https://pytorch.org) and [MXNet](https://mxnet.apache.org).## InstallationGluonTS requires Python 3.7 or newer, and the easiest way to install it is via `pip`:```bash# support for mxnet models, faster datasetspip install &quot;gluonts[mxnet,pro]&quot;# support for torch models, faster datasetspip install &quot;gluonts[torch,pro]&quot;```## Simple ExampleTo illustrate how to use GluonTS, we train a DeepAR-model and make predictionsusing the simple &quot;airpassengers&quot; dataset. The dataset consists of a singletime series, containing monthly international passengers between the years1949 and 1960, a total of 144 values (12 years * 12 months). We split thedataset into train and test parts, by removing the last three years (36 month)from the train data. Thus, we will train a model on just the first nine yearsof data.```pyimport pandas as pdimport matplotlib.pyplot as pltfrom gluonts.dataset.pandas import PandasDatasetfrom gluonts.dataset.split import splitfrom gluonts.mx import DeepAREstimator, Trainer# Load data from a CSV file into a PandasDatasetdf = pd.read_csv(    &quot;https://raw.githubusercontent.com/AileenNielsen/&quot;    &quot;TimeSeriesAnalysisWithPython/master/data/AirPassengers.csv&quot;,    index_col=0,    parse_dates=True,)dataset = PandasDataset(df, target=&quot;#Passengers&quot;)# Train a DeepAR model on all data but the last 36 monthstraining_data, test_gen = split(dataset, offset=-36)model = DeepAREstimator(    prediction_length=12, freq=&quot;M&quot;, trainer=Trainer(epochs=5)).train(training_data)# Generate test instances and predictions for themtest_data = test_gen.generate_instances(prediction_length=12, windows=3)forecasts = list(model.predict(test_data.input))# Plot predictionsdf[&quot;#Passengers&quot;].plot(color=&quot;black&quot;)for forecast, color in zip(forecasts, [&quot;green&quot;, &quot;blue&quot;, &quot;purple&quot;]):    forecast.plot(color=f&quot;tab:{color}&quot;)plt.legend([&quot;True values&quot;], loc=&quot;upper left&quot;, fontsize=&quot;xx-large&quot;)```![[train-test]](https://d2kv9n23y3w0pn.cloudfront.net/static/README/forecasts.png)Note that the forecasts are displayed in terms of a probability distribution:The shaded areas represent the 50% and 90% prediction intervals, respectively,centered around the median.## ContributingIf you wish to contribute to the project, please refer to our[contribution guidelines](https://github.com/awslabs/gluonts/tree/dev/CONTRIBUTING.md).## CitingIf you use GluonTS in a scientific publication, we encourage you to add the following references to the related papers,in addition to any model-specific references that are relevant for your work:```bibtex@article{gluonts_jmlr,  author  = {Alexander Alexandrov and Konstantinos Benidis and Michael Bohlke-Schneider    and Valentin Flunkert and Jan Gasthaus and Tim Januschowski and Danielle C. Maddix    and Syama Rangapuram and David Salinas and Jasper Schulz and Lorenzo Stella and    Ali Caner Türkmen and Yuyang Wang},  title   = {{GluonTS: Probabilistic and Neural Time Series Modeling in Python}},  journal = {Journal of Machine Learning Research},  year    = {2020},  volume  = {21},  number  = {116},  pages   = {1-6},  url     = {http://jmlr.org/papers/v21/19-820.html}}``````bibtex@article{gluonts_arxiv,  author  = {Alexandrov, A. and Benidis, K. and Bohlke-Schneider, M. and    Flunkert, V. and Gasthaus, J. and Januschowski, T. and Maddix, D. C.    and Rangapuram, S. and Salinas, D. and Schulz, J. and Stella, L. and    Türkmen, A. C. and Wang, Y.},  title   = {{GluonTS: Probabilistic Time Series Modeling in Python}},  journal = {arXiv preprint arXiv:1906.05264},  year    = {2019}}```## Links### Documentation* [Documentation (stable)](https://ts.gluon.ai/stable/)* [Documentation (development)](https://ts.gluon.ai/dev/)### References* [JMLR MLOSS Paper](http://www.jmlr.org/papers/v21/19-820.html)* [ArXiv Paper](https://arxiv.org/abs/1906.05264)* [Collected Papers from the group behind GluonTS](https://github.com/awslabs/gluonts/tree/dev/REFERENCES.md): a bibliography.### Tutorials and Workshops* [Tutorial at IJCAI 2021 (with videos)](https://lovvge.github.io/Forecasting-Tutorial-IJCAI-2021/) with [YouTube link](https://youtu.be/AB3I9pdT46c). * [Tutorial at WWW 2020 (with videos)](https://lovvge.github.io/Forecasting-Tutorial-WWW-2020/)* [Tutorial at SIGMOD 2019](https://lovvge.github.io/Forecasting-Tutorials/SIGMOD-2019/)* [Tutorial at KDD 2019](https://lovvge.github.io/Forecasting-Tutorial-KDD-2019/)* [Tutorial at VLDB 2018](https://lovvge.github.io/Forecasting-Tutorial-VLDB-2018/)* [Neural Time Series with GluonTS](https://youtu.be/beEJMIt9xJ8)* [International Symposium of Forecasting: Deep Learning for Forecasting workshop](https://lostella.github.io/ISF-2020-Deep-Learning-Workshop/)</longdescription>
</pkgmetadata>