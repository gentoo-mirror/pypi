<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mkdocs-simple-hooksDefine your own hooks for mkdocs, without having to create a new package.## SetupInstall the plugin using pip:```bashpip install mkdocs-simple-hooks```Next, add a python module to either the `docs/` directory or the root mkdocs directory. Then, add the plugin and hooks definition to your `mkdocs.yml`:```yamlplugins:  - search  - mkdocs-simple-hooks:      hooks:        hook-name: &quot;your.module:hook_function&quot;```&gt; If you have no `plugins` entry in your config file yet, you'll likely also want to add the `search` plugin. MkDocs enables it by default if there is no `plugins` entry set.More information about plugins in the [MkDocs documentation][mkdocs-plugins].## UsageYou can use this plugin to create simple hooks for `mkdocs` without having to create a separate plugin package.Just define a function and register it as a hook in the `mkdocs.yml`. The function shallhave the same API as the desired hook. To see available hooks and their API, see theevents chapter in the [mkdocs documentation][mkdocs-hooks].## ExampleLet's say you want to copy the `README.md` file to `docs/index.md`. To do that, create a new file, e.g.: `docs/hooks.py`, and put the following function there:  ```pythonimport shutildef copy_readme(*args, **kwargs):    shutil.copy(&quot;README.md&quot;, &quot;docs/index.md&quot;)```Now, register the hook in your `mkdocs.yml`:  ```yamlplugins:  - mkdocs-simple-hooks:      hooks:        on_pre_build: &quot;docs.hooks:copy_readme&quot;```That's all - the `copy_readme()` function will run every time, before building the documentation.  ## Disabling the pluginYou can use the `enabled` option to optionally disable this plugin. A possible use case is local development where you might want faster build times. It's recommended to use this option with an environment variable together with a default fallback (introduced in `mkdocs` v1.2.1, see [docs](https://www.mkdocs.org/user-guide/configuration/#environment-variables)). Example:```yamlplugins:  - mkdocs-simple-hooks:      enabled: !ENV [ENABLE_MKDOCS_SIMPLE_HOOKS, True]      hooks:        on_pre_build: &quot;docs.hooks:copy_readme&quot;```Which enables you to disable the plugin locally using:```bashexport ENABLE_MKDOCS_SIMPLE_HOOKS=falsemkdocs serve```[mkdocs-plugins]: http://www.mkdocs.org/user-guide/plugins/[mkdocs-hooks]: https://www.mkdocs.org/user-guide/plugins/#events</longdescription>
</pkgmetadata>