<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a href=&quot;https://raw.github.com/cobrapitz/MehlBot/master/docs/badges/interrogate-badge.svg&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://raw.github.com/cobrapitz/MehlBot/master/docs/badges/interrogate-badge.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/cobrapitz/MehlBot/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/github/license/cobrapitz/mehlbot&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/cobrapitz/MehlBot&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/badge/mehl-bot-f39f37&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/mehlbot/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/mehlbot&quot;&gt;&lt;/a&gt;&lt;a href='https://mehlbot.readthedocs.io/en/latest/?badge=latest'&gt;&lt;img src='https://readthedocs.org/projects/mehlbot/badge/?version=latest' alt='Documentation Status' /&gt;&lt;/a&gt;[//]: # (&lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;)[//]: # (&lt;a href=&quot;https://pypi.org/project/mehlbot/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/badge/mehl-bot-f39f37&quot;&gt;&lt;/a&gt;)[//]: # (![t]&amp;#40;https://app.codecov.io/gh/cobrapitz/mehlbot&amp;#41;)[//]: # ([![security: bandit]&amp;#40;https://img.shields.io/badge/security-bandit-yellow.svg&amp;#41;]&amp;#40;https://github.com/PyCQA/bandit&amp;#41;)[//]: # (![example workflow]&amp;#40;https://github.com/github/docs/actions/workflows/main.yml/badge.svg&amp;#41;)# MehlBotMehlBot is a Discord bot that responds to commands by executing (callback) functions.It's built around the `discord.Client` class.This allows an easy integration to existing bots and creation of new bots. Documentation: [docs](https://mehlbot.readthedocs.io/en/latest/)See [examples/hellow_bot.py](https://github.com/cobrapitz/MehlBot/blob/master/examples/hello_bot.py) for full source code.```Python# imports ... class HelloBot(discord.Client):  # discord.Client class    def __init__(self, intents: Intents, **options) -&gt; None:        super().__init__(intents=intents, **options)    async def on_ready(self) -&gt; None:  # Gets called when bot is ready/started        print(&quot;Bot started.&quot;)    async def on_message(self, message: Message):        if message.author == self.user:  # skip if message's author is the bot            return        # necessary callback command        # bot_commands are in mehlbot.command        command_found = await command_callback.process_command(self, bot_commands, message)        # prefix with command if message is command        log_msg = &quot;&quot; if not command_found else &quot;command: &quot;        log_msg += f&quot;{message.author.nick} ({message.author.name}): '{message.content}'&quot;        print(log_msg)def main():    hello_bot = HelloBot(discord.Intents.all())  # discord intents    with Path(&quot;token.txt&quot;).open() as file:  # load token form file (.gitignore) or use env        token = file.read()    hello_bot.run(token)```And this shows how to add commands```Pythonfrom mehlbot.command import add_commandasync def _add(message: discord.Message, client: discord.Client, args: List):    url = args[0]    ...async def _export_playlist(message: discord.Message, client: discord.Client, args: List):    playlist = args[0]    ...    add_command(&quot;add&quot;, _add,            allowed_num_args=[[&quot;url&quot;]], # requires exactly 1 argument            description=&quot;Adds the given YouTube url to the current playlist.&quot;)add_command(&quot;export playlist&quot;, _export_playlist,            allowed_num_args=[[], [&quot;playlist_name&quot;]], # either 0 or 1 arg            description=&quot;Exports urls of current playlist or of given playlist.&quot;)```- - - </longdescription>
</pkgmetadata>