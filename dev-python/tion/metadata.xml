<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Tion ApiThis package provides API to control Tion breezer## Usage:```pythonimport osimport loggingfrom tion import TionApi, Breezer, Zone, MagicAirlogging.basicConfig(level=logging.INFO)# initialization api with no saving auth information (for test only)email, password = os.environ.get(&quot;TION_AUTH&quot;).split(',')api = TionApi(email, password, auth_fname=None)# getting current co2 level from magicairmagicair = api.get_devices(name_part=&quot;magic&quot;)[0]print(f&quot;magicair.co2: {magicair.co2}&quot;)# getting breezerbreezer = api.get_devices(name_part=&quot;breezer&quot;)[0]# setting manual mode for breezer zonebreezer.zone.mode = &quot;manual&quot;assert breezer.zone.send() is True, &quot;Failed to send zone data&quot;print(f&quot;breezer.zone.mode: {breezer.zone.mode}&quot;)# setting breezer speed manuallybreezer.speed = 3assert breezer.send() is True, &quot;Failed to send breezer data&quot;print(f&quot;breezer.is_on: {breezer.is_on}, breezer.speed: {breezer.speed}&quot;)# setting air source to outsidebreezer.gate = 2assert breezer.send() is True, &quot;Failed to send breezer data&quot;print(f&quot;breezer.is_on: {breezer.is_on}, breezer.speed: {breezer.speed}, breezer.gate: {breezer.gate}&quot;)# setting auto mode for breezer's zonebreezer.zone.mode = &quot;auto&quot;assert breezer.zone.send() is True, &quot;Failed to send zone data&quot;print(f&quot;breezer.zone.mode: {breezer.zone.mode}&quot;)# setting breezer minimum speed to 3 and maximum to 6breezer.speed_min_set = 3breezer.speed_max_set = 6assert breezer.send() is True, &quot;Failed to send breezer data&quot;print(f&quot;breezer.speed_min_set: {breezer.speed_min_set}, breezer.speed_max_set: {breezer.speed_max_set}&quot;)```</longdescription>
</pkgmetadata>