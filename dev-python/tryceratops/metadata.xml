<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;center&quot;&gt;    &lt;img src=&quot;https://raw.githubusercontent.com/guilatrova/tryceratops/main/img/logo.png&quot;&gt;&lt;/p&gt;&lt;h2 align=&quot;center&quot;&gt;Prevent Exception Handling AntiPatterns in Python&lt;/h2&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://github.com/guilatrova/tryceratops/actions&quot;&gt;&lt;img alt=&quot;Actions Status&quot; src=&quot;https://github.com/guilatrova/tryceratops/workflows/CI/badge.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/tryceratops/&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/tryceratops&quot;/&gt;&lt;/a&gt;  &lt;img src=&quot;https://badgen.net/pypi/python/tryceratops&quot; /&gt;  &lt;a href=&quot;https://github.com/relekang/python-semantic-release&quot;&gt;&lt;img alt=&quot;Semantic Release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/guilatrova/tryceratops/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/license/guilatrova/tryceratops&quot;/&gt;&lt;/a&gt;  &lt;a href=&quot;https://pepy.tech/project/tryceratops/&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://static.pepy.tech/personalized-badge/tryceratops?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=blue&amp;left_text=%F0%9F%A6%96%20Downloads&quot;/&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/psf/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;/&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/guilatrova/tryceratops&quot;&gt;&lt;img alt=&quot;try/except style: tryceratops&quot; src=&quot;https://img.shields.io/badge/try%2Fexcept%20style-tryceratops%20%F0%9F%A6%96%E2%9C%A8-black&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://twitter.com/intent/user?screen_name=guilatrova&quot;&gt;&lt;img alt=&quot;Follow guilatrova&quot; src=&quot;https://img.shields.io/twitter/follow/guilatrova?style=social&quot;/&gt;&lt;/a&gt;&lt;/p&gt;Inspired by [this blog post](https://blog.guilatrova.dev/handling-exceptions-in-python-like-a-pro/). I described [the building process of this tool here](https://blog.guilatrova.dev/project-tryceratops/).&gt; ‚ÄúFor those who like dinosaurs ü¶ñ and clean try/except ‚ú® blocks.‚Äù**Summary**- [Installation and usage](#installation-and-usage)  - [Installation](#installation)  - [Usage](#usage)  - [`flake8` Plugin](#flake8-plugin)- [Violations](#violations)  - [Autofix support](#autofix-support)  - [Ignoring violations](#ignoring-violations)  - [Configuration](#configuration)- [Pre-commit](#pre-commit)- [Show your style](#show-your-style)- [Extra Resources](#extra-resources)- [Contributing](#contributing)- [Change log](#change-log)- [License](#license)- [Credits](#credits)---## Installation and usage### Installation```pip install tryceratops```OR```poetry add -D tryceratops```### Usage```tryceratops [filename or dir...]```You can enable experimental analyzers by running:```tryceratops --experimental [filename or dir...]```You can ignore specific violations by using: `--ignore TRYXXX` repeatedly:```tryceratops --ignore TRY201 --ignore TRY202 [filename or dir...]```You can exclude dirs by using: `--exclude dir/path` repeatedly:```tryceratops --exclude tests --exclude .venv [filename or dir...]```You can also autofix some violations:```tryceratops --autofix [filename or dir...]```![example](https://raw.githubusercontent.com/guilatrova/tryceratops/main/img/tryceratops-example3.gif)### [`flake8`](https://github.com/PyCQA/flake8) Pluginü¶ñ Tryceratops is also a plugin for `flake8`, so you can:```‚ùØ flake8 --select TRY src/tests/samples/violations/call_raise_vanilla.pysrc/tests/samples/violations/call_raise_vanilla.py:13:9: TRY002 Create your own exceptionsrc/tests/samples/violations/call_raise_vanilla.py:13:9: TRY003 Avoid specifying long messages outside the exception classsrc/tests/samples/violations/call_raise_vanilla.py:21:9: TRY201 Simply use 'raise' without specifying exception object again```## ViolationsAll violations and its descriptions can be found in [docs](https://github.com/guilatrova/tryceratops/tree/main/docs/violations).### Autofix supportSo far, autofix only supports violations: [TRY200](docs/violations/TRY200.md), [TRY201](docs/violations/TRY201.md), and [TRY400](docs/violations/TRY400.md).### Ignoring violationsIf you want to ignore a violation in a specific file, you can either:- Add a comment with `noqa` to the top of the file you want to ignore- Add a comment with `noqa` to the line you want to ignore- Add a comment with `noqa: CODE` to the line you want to ignore a specific violationExample:```pydef verbose_reraise_1():    try:        a = 1    except Exception as ex:        raise ex  # noqa: TRY202```### ConfigurationYou can set up a `pyproject.toml` file to set rules.This is useful to avoid reusing the same CLI flags over and over again and helps to define the structure of your project.Example:```toml[tool.tryceratops]exclude = [&quot;samples&quot;]ignore = [&quot;TRY002&quot;, &quot;TRY200&quot;, &quot;TRY300&quot;]experimental = true```CLI flags always overwrite the config file.## Pre-commitIf you wish to use pre-commit, add this:```yaml  - repo: https://github.com/guilatrova/tryceratops    rev: v2.0.0    hooks:      - id: tryceratops```## Show your style[![try/except style: tryceratops](https://img.shields.io/badge/try%2Fexcept%20style-tryceratops%20%F0%9F%A6%96%E2%9C%A8-black)](https://github.com/guilatrova/tryceratops)Add this fancy badge to your project's `README.md`:```md[![try/except style: tryceratops](https://img.shields.io/badge/try%2Fexcept%20style-tryceratops%20%F0%9F%A6%96%E2%9C%A8-black)](https://github.com/guilatrova/tryceratops)```## Extra ResourcesIf you want to read more about:- [How to structure exceptions in Python üêç üèóÔ∏è üí£](https://blog.guilatrova.dev/how-to-structure-exception-in-python-like-a-pro/)- [How to log in Python üêçüå¥](https://blog.guilatrova.dev/how-to-log-in-python-like-a-pro/)- [Book: Effective Python](https://amzn.to/3bEVHpG)## ContributingThank you for considering making Tryceratops better for everyone!Refer to [Contributing docs](docs/CONTRIBUTING.md).## Change logSee [CHANGELOG](CHANGELOG.md).## LicenseMIT## CreditsThanks to God for the inspiration üôå ‚òÅÔ∏è ‚òÄÔ∏èThe [black](https://github.com/psf/black) project for insights.</longdescription>
</pkgmetadata>