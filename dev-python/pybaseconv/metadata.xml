<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pybaseconv[![Build Status](https://travis-ci.com/El-Sam/pybaseconv.svg?branch=master)](https://travis-ci.com/El-Sam/pybaseconv)**pybaseconv** is a library that allows you to convert any large number (no fractions) from any base to any other base, thus freedom to choose source and/or destination bases.There are 5 predefined bases that are supported by **pybaseconv**, which are:* `DEC` : the decimal base  `&quot;0123456789&quot;`.* `BIN` : the binary base `&quot;01&quot;`.* `OCT` : the octal base `&quot;01234567&quot;`.* `HEX` : the hexadecimal base `&quot;0123456789abcdef&quot;`.* `FLICKER_BASE_58` &amp; `BITCOIN_BASE_58`: two variations of the **Base58** encoding, more info [here](https://en.wikipedia.org/wiki/Base58).## Module usage```pythonfrom pybaseconv import Converter, BASEdec2hex_converter = Converter(BASE.DEC, BASE.HEX)print(dec2hex_converter.convert('738653'))  # returns b455ddec2bitcoin_converter = Converter(BASE.DEC, BASE.BITCOIN_BASE_58)print(dec2bitcoin_converter.convert('292251'))  # returns 2Vspdec2custom_base_converter = Converter(BASE.DEC, '*&amp;@#$')print(dec2custom_base_converter.convert('539'))  # returns $&amp;@$bin2dec_converter = Converter(BASE.BIN, BASE.DEC)print(bin2dec_converter.convert('11112'))  # raises exception because 11112 is not a binary number```*PS*: when using custom bases, make sure that the digits are sorted from smallest to the largest, in order to get the appropriate conversion.</longdescription>
</pkgmetadata>