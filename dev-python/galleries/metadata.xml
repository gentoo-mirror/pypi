<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># GalleriesGalleries is a python package to manage images galleries and is mainly designed for recognition purposes. With this package you can create a gallery specifying where to get the images from and how to get annotations (if exist) from each image.# Installation`pip install galleries`# UsageGallery construction```pythonfrom galleries.annotations_parsers.file_name_parser import FileNameSepParserfrom galleries.gallery import Galleryfrom galleries.images_providers.local_files_image_providers import LocalFilesImageProviderimages_provider = LocalFilesImageProvider(&quot;path/to/images&quot;)annotations_parser = FileNameSepParser([&quot;label&quot;, &quot;age&quot;], sep=&quot;_&quot;)gallery = Gallery(images_provider, annotations_parser)```Traverse images```pythonimages = gallery.get_images()  # returns a generatorfor image in images:  # image is a numpy ndarray  pass```Get annotations```pythonannotations = gallery.get_annotations()  # returns a generatorfor annotation in annotations:  # annotation is a dictionary  pass```You can also generate new data for each image and easily save it using a `GalleryDataHandler`, which is an abstract class. `GalleryGenericDataHandler` is an implementation of this class that takes information of how to generate the new data and where to save it.For instance, this is a code example of how to extract features from a gallery and save it to disk:```pythonfrom galleries.write_gallery_data import GalleryGenericDataHandlerfeature_extractor = ...  # your feature extractor here which has a features(image) methoddata_generator = &quot;&lt;folder name&gt;&quot;, &quot;&lt;feature extractor name&gt;&quot;, feature_extractor.features# write features if do not existgallery_features_writer = GalleryGenericDataHandler(gallery, &quot;directory/to/save/features&quot;)exist_features = gallery_features_writer.exists_data(data_generator)if not exist_features:  gallery_features_writer.write_data(data_generator)# read featuresfeatures = gallery_features_writer.read_data(data_generator)```</longdescription>
</pkgmetadata>