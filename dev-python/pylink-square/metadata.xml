<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pylink======|Build Status|Python interface for the SEGGER J-Link.Requirements-------------  `Python &gt;= 2.7 &lt;https://www.python.org/downloads/&gt;`__-  `GNU ARM Embedded   Toolchain &lt;https://launchpad.net/gcc-arm-embedded&gt;`__ (for functional   tests)-  `SEGGER J-Link Tools &gt;=   6.0b &lt;https://www.segger.com/downloads/jlink&gt;`__Installation------------Clone the project into a local repository, then navigate to thedirectory and run:::   $ python setup.py installExternal Dependencies~~~~~~~~~~~~~~~~~~~~~In order to use this library, you will need to have installed the SEGGERtools. The tools can be installed from the SEGGER website`here &lt;https://www.segger.com/downloads/jlink&gt;`__. This package iscompatible with versions of the SEGGER tool ``&gt;= 6.0b``. Download thesoftware under ``J-Link Software and Documentation Pack`` for yourspecific hardware. ``PyLink`` will automatically find the library if youhave installed it this way, but for best results, you should use one ofthe two methods listed below depending on your operating system:On Mac^^^^^^::   # Option A: Copy the library to your libraries directory.   $ cp libjlinkarm.dylib /usr/local/lib/   # Option B: Add SEGGER's J-Link directory to your dynamic libraries path.   $ export DYLD_LIBRARY_PATH=/Applications/SEGGER/JLink:$DYLD_LIBRARY_PATHOn Windows^^^^^^^^^^Windows searches for DLLs in the following order:1. The current directory of execution.2. The Windows system directory.3. The Windows directory.You can copy the ``JLinkARM.dll`` to any of the directories listedabove. Alternatively, add the SEGGER J-Link directory to your``%PATH%``.On Linux^^^^^^^^::   # Option A: Copy the library to your libraries directory.   $ cp libjlinkarm.so /usr/local/lib/   # Option B: Add SEGGER's J-Link library path to your libraries path.   $ export LD_LIBRARY_PATH=/path/to/SEGGER/JLink:$LD_LIBRARY_PATHUsage-----::   import pylink   if __name__ == '__main__':      serial_no = '123456789'      jlink = pylink.JLink()      # Open a connection to your J-Link.      jlink.open(serial_no)      # Connect to the target device.      jlink.connect('device', verbose=True)      # Do whatever you want from here on in.      jlink.flash(firmware, 0x0)      jlink.reset()Troubleshooting---------------Should you run into any issues, refer to the documentation, as well ascheck out our `troubleshooting &lt;./TROUBLESHOOTING.md&gt;`__ document.Documentation-------------Documentation follows the `Google Python StyleGuide &lt;https://google.github.io/styleguide/pyguide.html&gt;`__, and uses`Sphinx &lt;http://www.sphinx-doc.org/en/stable/&gt;`__ documentationgenerator with the`Napoleon &lt;http://www.sphinx-doc.org/en/stable/ext/napoleon.html&gt;`__extension to provide Google style Python support. To generate thedocumentation, these packages will need to be installed (they areincluded in the provided ``requirements.txt`` file). With these packagesinstalled, you can generate the documentation as follows:::   $ cd docs   $ make htmlDeveloping for PyLink---------------------First install the development requirements by running:::   $ pip install -r requirements.txtAfter youâ€™ve installed the requirements, decide on the development workyou want to do. See the documentation about`contributing &lt;./CONTRIBUTING.md&gt;`__ before you begin your developmentwork.Testing-------To run tests, execute the following:::   # Unit tests   $ python setup.py test   # Functional tests   $ python setup.py bddtestThere are two types of tests: ``functional`` and ``unit``. Informationabout both can be found under `tests/README.md &lt;tests/README.md&gt;`__.Coverage~~~~~~~~Code coverage can be generated as follows:::   $ python setup.py coverage   $ open htmlcov/index.htmlContributing------------Please see the documentation on `contributing &lt;./CONTRIBUTING.md&gt;`__.License-------::   Copyright 2017 Square, Inc.   Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);   you may not use this file except in compliance with the License.   You may obtain a copy of the License at       http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions and   limitations under the License.See terms and conditions `here &lt;./LICENSE.md&gt;`__... |Build Status| image:: https://travis-ci.org/square/pylink.svg?branch=master   :target: https://travis-ci.org/square/pylink</longdescription>
</pkgmetadata>