<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># &lt;code&gt;oddsjam-api&lt;/code&gt;: A lightweight OddsJam API wrapper## V2 UpdateV2 support is now available for the new endpoints/models listed at the [OddsJam Developer Page](https://developer.oddsjam.com/).  The client exposed by this package is backwards compatible, and runs in v1 by default. Versions can be switched as follows:``` python    from OddsJamClient import OddsJamClient;    Client = OddsJamClient(YOUR_API_KEY);    v1Results = Client.GetLeagues(); #Default v1 endpoints    Client.UseV2();    v2Results = Client.GetLeagues(); #v2 endpoints```This update comes with the following changes:&lt;ul&gt;&lt;li&gt;Type hinting for function calls is no longer available. Function calls will appear with &lt;code&gt;(*args: Any, **kwargs:Any) -&gt; Any&lt;/code&gt;. Please refer to the developer documentation for valid arguments.&lt;/li&gt;&lt;li&gt;The V2 client does &lt;strong&gt;not&lt;/strong&gt; contain a GetMarkets() function.&lt;/li&gt;&lt;li&gt;The V2 client requires &lt;i&gt;at least one&lt;/i&gt; argument for the GetOdds() function. This is due to the amount of data returned from the new V2 endpoint. Attempting a call to GetOdds() &lt;i&gt;without&lt;/i&gt; a parameter will result in an &lt;code&gt;InvalidGetOddsV2Error&lt;/code&gt;, and the endpoint will &lt;i&gt;not&lt;/i&gt; be hit.&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;## What is &lt;code&gt;oddsjam-api&lt;/code&gt;?&lt;code&gt;oddsjam-api&lt;/code&gt; is a fast, lightweight wrapper for the [OddsJam API](https://developer.oddsjam.com/). It strives to be as intuitive to use as possible, providing strongly typed requests and responses to ensure predictability and consistency.## How do I use it?Start by installing the &lt;code&gt;oddsjam-api&lt;/code&gt; package (currently only on TestPyPI):```     pip install oddsjam-api```Create an instance of the &lt;code&gt;OddsJamClient&lt;/code&gt;:``` python    from OddsJamClient import OddsJamClient;    Client = OddsJamClient(YOUR_API_KEY);```Then simply call whichever function you'd like to:``` python     from OddsJamClient import OddsJamClient;    Client = OddsJamClient(YOUR_API_KEY);    GamesResponse = Client.GetGames();```Parameters are not required for any function call, but can be provided as desired:``` python    from OddsJamClient import OddsJamClient;    Client = OddsJamClient(YOUR_API_KEY);    GamesResponse = Client.GetGames(league='ncaa', sport='football');```Parameters will raise specific errors:``` python    GamesResponse = Client.GetGames(sport='curling');     #Raises SportError, with a list of valid values    OddsResponse = Client.GetOdds(sportsbook='212 Bet');    #Raises SportsBookError, with a list of valid values```Note: Sport and SportsBook parameters are *case insensitive*Accessing the object of a response requires accessing the response's object:``` python        from OddsJamClient import OddsJamClient;    Client = OddsJamClient(YOUR_API_KEY);    GamesResponse = Client.GetGames();    Games = GamesResponse.Games;```List comprehension can also be used to access objects:``` python    AwayTeams = [g.away_team for g in GamesResponse.Games];```Nested objects can be accessed similarly:``` python    OddsResponse = Client.GetOdds();    print(OddsResponse.Odds[0].game.sport)```The raw response from the API is also accessible via the *RawResponse* property of any *Response* object:``` python    Raw = GamesResponse.RawResponse;    Jobj = json.loads(raw);```## Built-in functionsConvert entire Odds collection to decimal, then back to American:``` python    OddsResponse = Client.GetOdds();    OddsResponse.AsDecimal();    OddsResponse.AsAmerican();```Convert individual Odds object to decimal, then back to American:``` python    OddsResponse = Client.GetOdds();    FirstOdd = OddsResponse.Odds[0];    FirstOdd.AsDecimal();    FirstOdd.AsAmerican();```## Example usageFlatten and output data using pandas:``` python    import pandas as pd;    from OddsJamClient import OddsJamClient;    Client = OddsJamClient(YOUR_API_KEY);    Odds = Client.GetOdds().Odds;    df = pd.DataFrame(Odds);    #Lambda over rows to extract just the ID from the 'game' object in each row    df['game'] = df.apply(lambda row: row['game']['id'], axis=1)        #Get odds for Moneyline markets only    df = df.loc[df['market_name'] == 'Moneyline']```# PyPi* Prod: https://pypi.org/project/oddsjam-api* Test: https://test.pypi.org/project/oddsjam-api-testORIGINAL CREDIT GOES TO https://github.com/cooperbrandon1</longdescription>
</pkgmetadata>