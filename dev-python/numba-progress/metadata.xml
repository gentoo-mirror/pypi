<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Numba-progress A progress bar implementation for numba functions using tqdm.The module provides the class `ProgressBar` that works as a wrapper around the `tqdm.tqdm` progress bar. It works by spawning a separate thread that updates the `tqdm` progress bar based on an atomic counter which can be accessed within a numba nopython function.The progress bar works with parallel as well as sequential numba functions.## Installation### Using pip```pip install numba-progress```### From source```git clone https://github.com/mortacious/numba-progress.gitcd numba-progresspython setup.py install```## Usage```pythonfrom numba import njitfrom numba_progress import ProgressBarnum_iterations = 100@njit(nogil=True)def numba_function(num_iterations, progress_proxy):    for i in range(num_iterations):        #&lt;DO CUSTOM WORK HERE&gt;        progress_proxy.update(1)with ProgressBar(total=num_iterations) as progress:    numba_function(num_iterations, progress)```The `ProgressBar` also works within parallel functions out of the box.```pythonfrom numba import njit, prangefrom numba_progress import ProgressBarnum_iterations = 100@njit(nogil=True, parallel=True)def numba_function(num_iterations, progress_proxy):    for i in prange(num_iterations):        #&lt;DO CUSTOM WORK HERE&gt;        progress_proxy.update(1)with ProgressBar(total=num_iterations) as progress:    numba_function(num_iterations, progress)```See also the `examples` folder for more usage examples.</longdescription>
</pkgmetadata>