<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># PTPAPI[![PyPI](https://img.shields.io/pypi/v/ptpapi)](https://pypi.org/project/ptpapi/)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ptpapi)A small API for a mildly popular movie site. The goal was to be ableto collect as much information in as few network requests as possible.## Dependencies* Python 3.7+* pip## InstallationUse of a[virtualenv](https://virtualenv.readthedocs.org/en/latest/userguide.html#usage)or [pipx](https://pypa.github.io/pipx/) is optional, but highlyrecommended.`pip install ptpapi`## ConfigurationOpen the file `~/.ptpapi.conf` for editing, and make sure it looks like the following:```ini[Main][PTP]ApiUser=&lt;ApiUser&gt;ApiKey=&lt;ApiKey&gt;```Both values can be found in the &quot;Security&quot; section of yourprofile. This is only the minimum required configuration. See`ptpapi.conf.example` for a full-futured config file with comments.## UsageThe three CLI commands are `ptp`, `ptp-reseed`, and `ptp-bookmarks`### `ptp`This is a generally utility to do various things inside PTP. As ofright now it can download files, search the site for movies, and listmessage in your inbox.See `ptp help` for more information.#### `ptp inbox`A small utility to read messages in your inbox. No reply capability currently.#### `ptp download`An alias for `ptp-search -d`#### `ptp search`This subcommand lets you search the site for movies. It can take movieand permalinks, as well as search by arbitrary parameters, and the`-d` flag allows for downloading matching torrents. For instance:- `ptp search year=1980-2000 taglist=sci.fi`- `ptp search &quot;Star Wars&quot;`.It can also accept URLs for torrents and collages:- `ptp search &quot;https://passthepopcorn.me/torrents.php?id=68148&quot;`- `ptp search &quot;https://passthepopcorn.me/collages.php?id=2438&quot;`and regular search URLs:- `ptp search &quot;https://passthepopcorn.me/torrents.php?action=advanced&amp;year=1980-2000&amp;taglist=action&quot;`.As a general rule of thumb anything supported by the advanced sitesearch will work with `ptp search`, e.g. searching`https://passthepopcorn.me/torrents.php?action=advanced&amp;taglist=comedy&amp;format=x264&amp;media=Blu-ray&amp;resolution=1080p&amp;scene=1`is the same as `ptp search taglist=comedy format=x264 media=Blu-rayresolution=1080p scene=1`.To work with multiple pages of results, use the `--pages &lt;num&gt;` flag.There are a couple aliases to make life easier:* `genre`, `genres`, `tags` -&gt; `taglist`* `name` -&gt; `searchstr`* `bookmarks` -&gt; Search only your bookmarksIn addition, [Tempita](http://pythonpaste.org/tempita/) can be usedfor custom formatting. For instance, `ptp search --movie-format=&quot;&quot;--torrent-format=&quot;{{UploadTime}} - {{ReleaseName}}&quot; year=1980-2000taglist=sci.fi grouping=no`.Using the `-d` flag will download one torrent from each of the matchedtorrents (deciding which one to download is done via[filters](#filters)) to the[downloadDirectory](ptpapi.conf.example#L9).The `-p/--pages [int]` option can be used to scrape multiple pages atonce. N.B.: If any `page` parameter is in the original search query,paging will start from that page.#### `ptp fields`Simply list fields that can be used for the `ptp search` formatting.### `ptp-reseed`This script automatically matches up files to movies on PTP. It's mostbasic usage is `ptp-reseed &lt;file path&gt;`. This will search PTP for anymovies matching that filename, and if it finds a match, willautomatically download the torrent and add it to rtorrent. It can dosome basic file manipulation if it finds a close enough match.For instance, if you have the file `Movie.2000.mkv`, and the torrentcontains `Movie (2000)/Movie.2000.mkv`, the script will try toautomatically create the folder `Movie (2000)` and hard link the fileinside of it before attempting to seed it.See `ptp-reseed -h` and `ptpapi.conf.example` for more information andconfiguration options.#### guessitBy default the script looks for exact matches against file names andsizes. If you'd like the name matching to be less strict, you caninstall the guessit library (`pip install 'guessit&gt;=3'`), and if thefilename search fails, the script will attempt to parse the movie nameout of the file with guessit.### `ptp-reseed-machine`This tool is meant to complement `ptp-reseed`, by taking using[Prowlarr](https://github.com/Prowlarr/Prowlarr) to find and downloadpeotential reseeds from any supported site.To get it set up, first [installProwlarr](https://wiki.servarr.com/prowlarr/installation). Be sureyour instance (or any of the *arrs) isn't exposed to the internet!From, simply use the UI to add any trackers/indexers you'd like tosearch, as well as any downloaders. Then, add the following config to`~/.ptpapi.conf`:```ini[Prowlarr]url=http://YOUR_PROWLER_HOSTNAME_OR_IP/api_key=YOUR_API_KEY```If everything thing is all setup, running `ptp-reseed-machine` willscrape the first page of needforseed.php and attempt to download anypotential matches. See `--help` for passing additional parameters ordifferent search targets.After a download has been triggered, you can then use `ptp-reseed`with your download client of choice to automatically reseed the pathinto a client. Here's a simple example of a post script for sabnzbd:```bash#!/bin/bashif [[ &quot;$SAB_PP_STATUS&quot; -eq 0 ]]; then  ls *.iso *.img 2&gt;/dev/null | xargs -r 7z x  ptp-reseed &quot;$SAB_COMPLETE_DIR&quot;fi```or for a `rtorrent.rc`:```inimethod.set_key = event.download.finished, ptp_reseed, &quot;execute.nothrow.bg={ptp-reseed,$d.base_path=}&quot;```## Concepts### FiltersFilters were designed as a way to take a full movie group, and narrowit down to a single torrent. A filter consists of multiplesub-filters, where the first sub-filter to match will download thetorrent, and if not, the next sub-filter will be checked. If none ofthe sub-filters match, no download will occur. Filters are separatefrom the actual search parameters sent to the siteThe full list of possible values for picking encodes is:* `GP` or `Scene`* `576p` or `720p` or `1080p`* `XviD` or `x264`* `HD` or `SD`* `remux` or `not-remux`* `seeded` - the number of seeds is greater than 0 (deprecated, use `seeders&gt;0`)* `not-trumpable` - ignore any trumpable torrents* `unseen` - ignores all torrents if you've marked the movie as seen or rated it* `unsnatched` - ignore all torrents unless you've never snatched one before (note that seeding counts as &quot;snatched&quot;, but leeching doesn't)There are also values that allow for simple comparisons, e.g. `size&gt;1400M`.* `seeders`* `size`Note that it's possible to have two incompatible values, e.g. `GP` and`Scene`, but this simply means the sub-filter won't ever match atorrent, and will always be skipped over.The possible values for sorting are:* `most recent` (the default if none are specified)* `smallest`* `most seeders`* `largest`#### ExamplesFor instance, the filter `smallest GP,720p scene,largest` wouldattempt to download the smallest GP. If there are no GPs, it will tryto find a 720p scene encode. If it can't find either of those, it willjust pick the largest torrent available.As another example, if you wanted to filter for encodes that are lessthan 200MiB with only one seeder, you could use `seeders=1 size&lt;200M`.## NotesI did this mostly for fun and to serve my limited needs, which is whyit's not as polished as it could be, and will probably changefrequently.  Pull requests are welcomed.### Deprecated ConfigurationThe new ApiUser/ApiKey system is preferred, however if you find bugsor limitations, the old cookie-based method can be used:Open the file `~/.ptpapi.conf` for editing, and make sure it lookslike the following:```ini[Main][PTP]username=&lt;username&gt;password=&lt;password&gt;passkey=&lt;passkey&gt;```</longdescription>
</pkgmetadata>