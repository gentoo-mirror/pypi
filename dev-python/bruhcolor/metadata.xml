<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># bruhcolor[![Supported Python versions](https://img.shields.io/pypi/pyversions/termcolor.svg?logo=python&amp;logoColor=FFE873)](https://pypi.org/project/bruhcolor/)**What is bruhcolor you may ask?**&lt;br/&gt;&lt;br/&gt; bruhcolor is a terminal coloring package similar to termcolor with some differences. &lt;br/&gt;&lt;br/&gt;First, bruhcolor supports 256 colors (given your terminal can supoprt that). Along with this, it offers a few more options for customizing the text compared to termcolor. &lt;br/&gt;&lt;br/&gt;Another major difference is the the use of a wrapper class, rather than returning the escape-sequenced string. When using python's `len()` method on this color-coded strings, it would return a length that included the escape charcaters. Perhaps this is intended in one use case, but for mine it was not. Thus, a wrapper class was made. This wrapper class can give back the length of the pre-colored text when using python's `len()` method. ALong with this, using something like a `f-string` could be trouble some . . . again given the fact the length of a colored string is significantly longer than the orginal text. The wrapper class allows for better formatting with `f-strings`, allowing the formatter to treat the colored text the same as it would the original, unmodified version.## Installation### From PyPI```bashpython -m pip install --upgrade bruhcolor```### From source```bashgit clone https://github.com/ethanlchristensen/bruhcolorcd bruhcolorpython -m pip install .```## Example / Usage```pythonimport bruhcolor# Display all of the color codesbruhcolor.colors()# Simple test messagetest_1 = bruhcolor.bruhcolored(&quot;Hello World from bruhcolor!&quot;, color=24)print(test_1)# Support mult repitionprint(test_1 * 5)print()# More in depth exampletest_2 = bruhcolor.bruhcolored(&quot;Hello World from bruhcolor!&quot;, color=24, on_color=196, attrs=['blink', 'reverse', 'italic'])print(test_2)print()test_3 = test_1 + test_2print(test_3)test_3 += &quot;How are you doing?&quot;print(test_3)print()# Getting lengthsprint(len(test_1))print(len(test_2))print(len(test_3))```&lt;br/&gt;&lt;img src=&quot;https://i.ibb.co/94RrnQ7/sample-run.png&quot; alt=&quot;sample-run&quot; border=&quot;0&quot;&gt;&lt;br/&gt;&lt;br/&gt;&lt;ul&gt;  &lt;li&gt;Color Codes: 0 - 255&lt;/li&gt;  &lt;li&gt;Highlight Codes: 0 - 255&lt;/li&gt;  &lt;li&gt;Attributes: blink, reverse, bold, crossed-out, italic, underline, dark, concealed&lt;/li&gt; &lt;/ul&gt;</longdescription>
</pkgmetadata>