<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># LaspyLaspy is a python library for reading, modifying and creating LAS LiDARfiles.Laspy is compatible with Python  3.7+.## Features- LAS support.- LAZ support via `lazrs` or `laszip` backend.- LAS/LAZ streamed/chunked reading/writting.- [COPC] support over files.- [COPC] support over https with `requests` package.- CRS support via `pyproj` package.[COPC]: https://github.com/copcio/copcio.github.io## ExamplesDirectly read and write las```Pythonimport laspylas = laspy.read('filename.las')las.points = las.points[las.classification == 2]las.write('ground.laz')```Open data to inspect header (opening only reads the header and vlrs)```Pythonimport laspywith laspy.open('filename.las') as f:    print(f&quot;Point format:       {f.header.point_format}&quot;)    print(f&quot;Number of points:   {f.header.point_count}&quot;)    print(f&quot;Number of vlrs:     {len(f.header.vlrs)}&quot;)```Use the 'chunked' reading &amp; writing features```Pythonimport laspywith laspy.open('big.laz') as input_las:    with laspy.open('ground.laz', mode=&quot;w&quot;, header=input_las.header) as ground_las:        for points in input_las.chunk_iterator(2_000_000):            ground_las.write_points(points[points.classification == 2])```Appending points to existing file```Pythonimport laspywith laspy.open('big.laz') as input_las:    with laspy.open('ground.laz', mode=&quot;a&quot;) as ground_las:        for points in input_las.chunk_iterator(2_000_000):            ground_las.append_points(points[points.classification == 2])```API Documentation and tutorials are available at[ReadTheDocs](https://laspy.readthedocs.io/en/latest/).## InstallationLaspy can be installed either with `pip`:```pip install laspy # without LAZ support# Orpip install laspy[laszip] # with LAZ support via LASzip# Orpip install laspy[lazrs] # with LAZ support via lazrs```## ChangelogSee [CHANGELOG.md](CHANGELOG.md)</longdescription>
</pkgmetadata>