<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Merlin SDKThis project contains python library for interacting with Merlin, machinelearning model serving component of CaraML.It provides interface to:- Manage ML project resources- Track metrics and training performance- Package and Deploy Model## Installation```shell scriptpip install merlin-sdk```and authenticate to gcloud```bashgcloud auth application-default login```## Getting StartedThe easiest way to get started is to explore example notebook:1. [Deploying xgboost model](sample/xgboost/Sample.ipynb)2. [Deploying sklearn model](sample/sklearn/Sample.ipynb)3. [Deploying tensorflow model](sample/tensorflow/Sample.ipynb)4. [Deploying pytorch model](sample/pytorch/Sample.ipynb)5. [Deploying user defined model](sample/pyfunc/Sample.ipynb)# DevelopmentRequirements:- pipenv (`pip install pipenv`)- swagger code gen (`brew install swagger-codegen`)Setup development environment:```bashmake setup```## Merlin CLIWith the CLI, users can deploy a trained model (serialized model) without touching Python code at all.![](merlin_cli.gif)To use the CLI:```// to see available subcommandsmerlin --help// to see subcommand optionsmerlin SUBCOMMAND --help// deploy existing xgboost model located inside cur_model_dirmerlin deploy --url localhost --model-type xgboost --project sample --model-dir cur_model_dir --model-name xgboost-sample --env staging// undeploy xgboost-sample version 1merlin undeploy --url localhost --project sample --model-name xgboost-sample --model-version=1// generate pyfunc code basemerlin scaffold -p merlin-project -m model-name -e id```</longdescription>
</pkgmetadata>