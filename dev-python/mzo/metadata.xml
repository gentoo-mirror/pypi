<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># mzoA (third-party) command-line interface to your Monzo account. Because _Sometimes_ the command-line is more convenient then swiping and tapping.This README covers the environment setup if you are looking torun the applications source code / work on the project. If youare looking for the documentation and more straight forwardinstallation instructions [see the docs](https://jamesstidard.github.io/Mzo-Cli/).## PrerequisitesAt the time of writing this the project is using Python 3.6.5.You will need that version of python installed before starting.If you don't currently have a method of managing multiple Pythonversions on your machine, I would recommend checking out [pyenv](https://github.com/pyenv/pyenv).The projects dependencies are also managed by [pipenv](https://docs.pipenv.org/).You should head over there and make sure that you also have thattool setup.Finally I've used a `package.json` in my Python project (heresyI'm sure), which aggregates all ancillary project scripts togetherfor building and deploying. Specifically I'm using the [yarn](https://yarnpkg.com/lang/en/)package manager for these npm dependencies.## Summoning RitualOnce you've completed the prerequisites above you should be ableto bring the application to life with the following commands.```bash# clone the source code to your machine$ git clone https://github.com/jamesstidard/mzo-cli$ cd mzo-cli/$ pipenv install --dev --python 3.6.5$ pipenv shell```### Run```bash$ mzo --help```### Test```bash$ yarn test```### Document```bash$ yarn docs:dev```### Deploy mzo```bash$ yarn mzo:deploy```### Deploy Docs```bash$ yarn docs:deploy```</longdescription>
</pkgmetadata>