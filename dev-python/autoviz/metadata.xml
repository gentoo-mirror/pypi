<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AutoViz: The One-Line Automatic Data Visualization Library![logo](logo.png)Unlock the power of **AutoViz** to visualize any dataset, any size, with just a single line of code! Plus, now you can save these interactive charts as HTML files automatically with the `html` setting.[![Pepy Downloads](https://pepy.tech/badge/autoviz)](https://pepy.tech/project/autoviz)[![Pepy Downloads per week](https://pepy.tech/badge/autoviz/week)](https://pepy.tech/project/autoviz)[![Pepy Downloads per month](https://pepy.tech/badge/autoviz/month)](https://pepy.tech/project/autoviz)[![standard-readme compliant](https://img.shields.io/badge/standard--readme-OK-green.svg)](https://github.com/RichardLitt/standard-readme)[![Python Versions](https://img.shields.io/pypi/pyversions/autoviz.svg)](https://pypi.org/project/autoviz)[![PyPI Version](https://img.shields.io/pypi/v/autoviz.svg)](https://pypi.org/project/autoviz)[![PyPI License](https://img.shields.io/pypi/l/autoviz.svg)](https://github.com/AutoViML/AutoViz/blob/master/LICENSE)With AutoViz, you can easily and quickly generate insightful visualizations for your data. Whether you're a beginner or an expert in data analysis, AutoViz can help you explore your data and uncover valuable insights. Try it out and see the power of automated visualization for yourself!## Table of Contents- [The purpose and motivation for AutoViz](#motivation)- [How to install and setup AutoViz in your environment](#installation)- [How to use AutoViz with various options and settings](#usage)- [The API and available options](#api)- [Examples to get you started](#examples)- [Maintainers](#maintainers)- [Contributing to the project](#contributing)- [License](#license)- [Additional Tips before you start](#tips)- [Disclaimer](#disclaimer)# Motivation&lt;p&gt;The motivation to create AutoViz stems from the need for a more efficient, user-friendly, and automated approach to data visualization. Visualizing data is a crucial step in the data analysis process, as it helps users understand patterns, trends, and relationships in the data. However, creating insightful visualizations can be time-consuming and require specialized knowledge of various plotting libraries and techniques.&lt;/p&gt;&lt;p&gt;AutoViz addresses these challenges by providing an easy-to-use, automated solution for generating meaningful visualizations with minimal effort. Its key motivation is to:&lt;/p&gt;&lt;ol&gt;  &lt;li&gt;&lt;strong&gt;Save time and effort&lt;/strong&gt;: AutoViz simplifies the visualization process by requiring just a single line of code to generate multiple insightful plots, eliminating the need to write multiple lines of code for each chart.&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;Handle large datasets&lt;/strong&gt;: AutoViz is designed to work with datasets of any size, intelligently sampling the data when necessary to ensure that the visualizations are generated quickly and efficiently, without compromising on the insights.&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;Accessibility&lt;/strong&gt;: AutoViz makes data visualization accessible to a broader audience, including non-experts and beginners in data analysis, by abstracting away the complexities of various plotting libraries.&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;Automate the visualization process&lt;/strong&gt;: AutoViz intelligently selects the appropriate visualizations for the given data, taking into account the data types and relationships among variables, which helps users quickly gain insights without having to manually decide which plots to create.&lt;/li&gt;  &lt;li&gt;&lt;strong&gt;Customization and interactivity&lt;/strong&gt;: AutoViz offers various options for customization, enabling users to tailor the generated visualizations to their specific needs and preferences. Moreover, with interactive chart formats like Bokeh, users can explore the data more dynamically.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;In summary, the motivation behind AutoViz is to make data visualization more efficient, accessible, and automated, enabling users to quickly gain valuable insights from their data and focus on making data-driven decisions.&lt;/p&gt;## Installation**Prerequisites**- [Anaconda](https://docs.anaconda.com/anaconda/install/)Create a new environment and install the required dependencies to clone AutoViz:**From PyPi:**```shcd &lt;AutoViz_Destination&gt;git clone git@github.com:AutoViML/AutoViz.git# or download and unzip https://github.com/AutoViML/AutoViz/archive/master.zipconda create -n &lt;your_env_name&gt; python=3.7 anacondaconda activate &lt;your_env_name&gt; # ON WINDOWS: `source activate &lt;your_env_name&gt;`cd AutoVizpip install -r requirements.txt```# UsageDiscover how to use AutoViz in this &lt;a href=&quot;https://towardsdatascience.com/autoviz-a-new-tool-for-automated-visualization-ec9c1744a6ad?gi=822a01be6cd0&quot;&gt;Medium article&lt;/a&gt;.In the AutoViz directory, open a Jupyter Notebook or on the command terminal and use this line to instantiate the AutoViz_Class. &lt;b&gt;Note: You no longer need to use from autoviz.AutoViz_Class import AutoViz_Class&lt;/b&gt;. Instead, simply run:```from autoviz import AutoViz_ClassAV = AutoViz_Class()dft = AV.AutoViz(filename)```Feed AutoViz any input filename (in CSV, txt, or JSON format), and set `max_rows_analyzed` and `max_cols_analyzed` based on memory limitations in your environment, and watch the magic happen!AutoViz can now create charts in multiple  formats using the `chart_format` setting:- If `chart_format ='png'` or `'svg'` or `'jpg'`: Matplotlib charts are plotted inline.    * Can be saved locally (using `verbose=2` setting) or displayed (`verbose=1`) in Jupyter Notebooks.    * This is the default behavior for AutoViz.- If `chart_format='bokeh'`: Interactive Bokeh charts are plotted in Jupyter Notebooks.- If `chart_format='server'`, dashboards will pop up for each kind of chart on your browser.- If `chart_format='html'`, interactive Bokeh charts will be created and silently saved as HTML files under the `AutoViz_Plots` directory (under working folder) or any other directory that you specify using the `save_plot_dir` setting (during input).![var_charts](var_charts.JPG)AV.AutoViz is the main plotting function in AutoViz_Class (AV). Depending on the chart_format you choose, AutoViz will automatically call either the AutoViz_Main function or AutoViz_Holo function.# APIArguments for AV.AutoViz() method:- `filename`: Use an empty string (&quot;&quot;) if there's no associated filename and you want to use a dataframe; set dfte as the dataframe name. Provide a filename and leave dfte empty to load the dataset.- `sep`: File separator (comma, semi-colon, tab, or any column-separating value).- `depVar`: Target variable in your dataset; leave empty if not applicable.- `dfte`: Input dataframe for plotting charts; leave empty if providing a filename.- `header`: Row number of the header row in your file (0 for the first row).- `verbose`: 0 for minimal info and charts, 1 for more info and charts, or 2 for saving charts locally without display.- `lowess`: Use regression lines for each pair of continuous variables against the target variable in small datasets; avoid using for large datasets (&gt;100,000 rows).- `chart_format`: `'svg', 'png', 'jpg', 'bokeh', 'server', or 'html'` for displaying or saving charts in various formats, depending on the `verbose` option.- `max_rows_analyzed`: Limit the max number of rows for chart display, particularly useful for very large datasets (millions of rows) to reduce chart generation time. A statistically valid sample will be used.- `max_cols_analyzed`: Limit the number of continuous variables to be analyzed.- `save_plot_dir`: Directory for saving plots. Default is None, which saves plots under the current directory in a subfolder named AutoViz_Plots. If the save_plot_dir doesn't exist, it will be created.![bokeh_charts](bokeh_charts.JPG)## Additional Notes&lt;ul&gt;  &lt;li&gt;AutoViz will visualize any sized file using a statistically valid sample.&lt;/li&gt;  &lt;li&gt;COMMA is the default separator in the file, but you can change it.&lt;/li&gt;  &lt;li&gt;Assumes the first row as the header in the file, but this can be changed.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Verbose Option&lt;/h3&gt;&lt;ol&gt;  &lt;li&gt;Display minimal information but show charts in your notebook&lt;/li&gt;  &lt;li&gt;Print extra information on the notebook and display charts&lt;/li&gt;  &lt;li&gt;Do not display charts; save them locally under the AutoViz_Plots directory in your current working folder.&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Chart Format Option&lt;/h3&gt;&lt;ul&gt;  &lt;li&gt;&lt;code&gt;'svg', 'jpg' or 'png'&lt;/code&gt;: Display or save all charts, depending on the verbose option&lt;/li&gt;  &lt;li&gt;&lt;code&gt;'bokeh'&lt;/code&gt;: Plot interactive charts using Bokeh in your Jupyter Notebook&lt;/li&gt;  &lt;li&gt;&lt;code&gt;'server'&lt;/code&gt;: Display charts in your browser, with one chart type per tab&lt;/li&gt;  &lt;li&gt;&lt;code&gt;'html'&lt;/code&gt;: Create interactive Bokeh charts and save them under the AutoViz_Plots directory or the directory specified in the save_plot_dir setting.&lt;/li&gt;&lt;/ul&gt;![server_charts](server_charts.JPG)# ExamplesHere are some examples to help you get started with AutoViz:## Example 1: Visualize a CSV file with a target variable```from autoviz import AutoViz_ClassAV = AutoViz_Class()filename = &quot;your_file.csv&quot;target_variable = &quot;your_target_variable&quot;dft = AV.AutoViz(    filename,    sep=&quot;,&quot;,    depVar=target_variable,    dfte=None,    header=0,    verbose=1,    lowess=False,    chart_format=&quot;svg&quot;,    max_rows_analyzed=150000,    max_cols_analyzed=30,    save_plot_dir=None)```## Example 2: Visualize a Pandas DataFrame without a target variable:```import pandas as pdfrom autoviz import AutoViz_ClassAV = AutoViz_Class()data = {'col1': [1, 2, 3, 4, 5], 'col2': [5, 4, 3, 2, 1]}df = pd.DataFrame(data)dft = AV.AutoViz(    &quot;&quot;,    sep=&quot;,&quot;,    depVar=&quot;&quot;,    dfte=df,    header=0,    verbose=1,    lowess=False,    chart_format=&quot;svg&quot;,    max_rows_analyzed=150000,    max_cols_analyzed=30,    save_plot_dir=None)```## Example 3: Generate interactive Bokeh charts and save them as HTML files in a custom directory```from autoviz import AutoViz_ClassAV = AutoViz_Class()filename = &quot;your_file.csv&quot;target_variable = &quot;your_target_variable&quot;custom_plot_dir = &quot;your_custom_plot_directory&quot;dft = AV.AutoViz(    filename,    sep=&quot;,&quot;,    depVar=target_variable,    dfte=None,    header=0,    verbose=2,    lowess=False,    chart_format=&quot;html&quot;,    max_rows_analyzed=150000,    max_cols_analyzed=30,    save_plot_dir=custom_plot_dir)```These examples should give you an idea of how to use AutoViz with different scenarios and settings. By tailoring the options and settings, you can generate visualizations that best suit your needs, whether you're working with large datasets, interactive charts, or simply exploring the relationships between variables.# MaintainersAutoViz is actively maintained and improved by a team of dedicated developers. If you have any questions, suggestions or issues, feel free to reach out to the maintainers.* [@AutoViML](https://github.com/AutoViML)* [@morenoh149](https://github.com/morenoh149)* [@hironroy](https://github.com/hironroy)# ContributingWe welcome contributions from the community! If you're interested in contributing to AutoViz, please follow these steps:&lt;h2&gt;Fork the repository on GitHub&lt;/h2&gt;&lt;ol&gt;  &lt;li&gt;Clone your fork and create a new branch for your feature or bugfix.&lt;/li&gt;  &lt;li&gt;Commit your changes to the new branch, ensuring that you follow coding standards and write appropriate tests.&lt;/li&gt;  &lt;li&gt;Push your changes to your fork on GitHub.&lt;/li&gt;  &lt;li&gt;Submit a pull request to the main repository, detailing your changes and referencing any related issues.&lt;/li&gt;&lt;/ol&gt;See [the contributing file](contributing.md)!# LicenseAutoViz is released under the Apache License, Version 2.0. By using AutoViz, you agree to the terms and conditions specified in the license.# Tips&lt;p&gt;That covers the main aspects of AutoViz, but here are some additional tips and reminders to help you make the most of the library:&lt;/p&gt;&lt;ul&gt;  &lt;li&gt;Make sure to regularly upgrade AutoViz to benefit from the &lt;a href=&quot;https://github.com/AutoViML/AutoViz/blob/master/updates.md&quot;&gt;latest features, bug fixes, and improvements&lt;/a&gt;. You can update it using &lt;code&gt;pip install --upgrade autoviz&lt;/code&gt;.&lt;/li&gt;  &lt;li&gt;AutoViz is highly customizable, so don't hesitate to explore and experiment with various settings, such as &lt;code&gt;chart_format&lt;/code&gt;, &lt;code&gt;verbose&lt;/code&gt;, and &lt;code&gt;max_rows_analyzed&lt;/code&gt;. This will allow you to create visualizations that better suit your specific needs and preferences.&lt;/li&gt;  &lt;li&gt;Remember to delete the &lt;code&gt;AutoViz_Plots&lt;/code&gt; directory (or any custom directory you specified) periodically if you used the &lt;code&gt;verbose=2&lt;/code&gt; option, as it can accumulate a large number of saved charts over time.&lt;/li&gt;  &lt;li&gt;For further guidance or inspiration, check out the &lt;a href=&quot;https://towardsdatascience.com/autoviz-a-new-tool-for-automated-visualization-ec9c1744a6ad&quot;&gt;Medium article on AutoViz&lt;/a&gt;, as well as other online resources and tutorials.&lt;/li&gt;  &lt;li&gt;If you encounter any issues, have questions, or want to suggest improvements, don't hesitate to engage with the AutoViz community through the &lt;a href=&quot;https://github.com/AutoViML/AutoViz&quot;&gt;GitHub repository&lt;/a&gt; or other online platforms.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;By leveraging AutoViz's powerful and flexible features, you can streamline your data visualization process and gain valuable insights more efficiently. Happy visualizing!&lt;/p&gt;## DISCLAIMERThis project is not an official Google project. It is not supported by Google and Google specifically disclaims all warranties as to its quality, merchantability, or fitness for a particular purpose.</longdescription>
</pkgmetadata>