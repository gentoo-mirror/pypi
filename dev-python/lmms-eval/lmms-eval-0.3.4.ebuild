# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_12,3_13,3_14} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="A framework for evaluating large multi-modality language models"

HOMEPAGE="https://lmms-lab.github.io"
LICENSE="# For the main pipeline structure-related code, we maintain the original license provided with lm-evaluation-harness, which is the MIT License."
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME//-/_}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME//-/_}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="audio gemini metrics mmsearch qwen reka"
DEPENDENCIES="dev-python/accelerate[${PYTHON_USEDEP}]
	>=dev-python/black-24.1.0[${PYTHON_USEDEP}]
	>=dev-python/isort-5.13.2[${PYTHON_USEDEP}]
	dev-python/datasets[${PYTHON_USEDEP}]
	dev-python/evaluate[${PYTHON_USEDEP}]
	~dev-python/httpx-0.23.3[${PYTHON_USEDEP}]
	dev-python/jsonlines[${PYTHON_USEDEP}]
	dev-python/numexpr[${PYTHON_USEDEP}]
	~dev-python/numpy-1.26.4[${PYTHON_USEDEP}]
	dev-python/peft[${PYTHON_USEDEP}]
	>=dev-python/pybind11-2.6.2[${PYTHON_USEDEP}]
	dev-python/pytablewriter[${PYTHON_USEDEP}]
	dev-python/sacrebleu[${PYTHON_USEDEP}]
	>=dev-python/scikit-learn-0.24.1[${PYTHON_USEDEP}]
	~dev-python/sqlitedict-2.1.0[${PYTHON_USEDEP}]
	dev-python/torch[${PYTHON_USEDEP}]
	dev-python/torchvision[${PYTHON_USEDEP}]
	dev-python/timm[${PYTHON_USEDEP}]
	dev-python/einops[${PYTHON_USEDEP}]
	dev-python/ftfy[${PYTHON_USEDEP}]
	dev-python/openai[${PYTHON_USEDEP}]
	dev-python/opencv-python-headless[${PYTHON_USEDEP}]
	dev-python/av[${PYTHON_USEDEP}]
	dev-python/hf-transfer[${PYTHON_USEDEP}]
	dev-python/nltk[${PYTHON_USEDEP}]
	dev-python/sentencepiece[${PYTHON_USEDEP}]
	dev-python/yt-dlp[${PYTHON_USEDEP}]
	dev-python/pycocoevalcap[${PYTHON_USEDEP}]
	dev-python/tqdm-multiprocess[${PYTHON_USEDEP}]
	dev-python/transformers[${PYTHON_USEDEP}]
	dev-python/transformers-stream-generator[${PYTHON_USEDEP}]
	dev-python/zstandard[${PYTHON_USEDEP}]
	dev-python/pillow[${PYTHON_USEDEP}]
	dev-python/pyyaml[${PYTHON_USEDEP}]
	dev-python/sympy[${PYTHON_USEDEP}]
	dev-python/latex2sympy2[${PYTHON_USEDEP}]
	dev-python/mpmath[${PYTHON_USEDEP}]
	dev-python/jinja2[${PYTHON_USEDEP}]
	dev-python/openpyxl[${PYTHON_USEDEP}]
	dev-python/loguru[${PYTHON_USEDEP}]
	dev-python/hf-transfer[${PYTHON_USEDEP}]
	~dev-python/tenacity-8.3.0[${PYTHON_USEDEP}]
	dev-python/wandb[${PYTHON_USEDEP}]
	dev-python/tiktoken[${PYTHON_USEDEP}]
	dev-python/pre-commit[${PYTHON_USEDEP}]
	dev-python/pydantic[${PYTHON_USEDEP}]
	dev-python/packaging[${PYTHON_USEDEP}]
	dev-python/decord[${PYTHON_USEDEP}]
	dev-python/eva-decord[${PYTHON_USEDEP}]
	dev-python/zss[${PYTHON_USEDEP}]
	dev-python/protobuf[${PYTHON_USEDEP}]
	dev-python/sentence-transformers[${PYTHON_USEDEP}]
	dev-python/python-dotenv[${PYTHON_USEDEP}]
	audio? ( dev-python/more-itertools[${PYTHON_USEDEP}] )
	audio? ( dev-python/editdistance[${PYTHON_USEDEP}] )
	audio? ( dev-python/zhconv[${PYTHON_USEDEP}] )
	audio? ( dev-python/librosa[${PYTHON_USEDEP}] )
	audio? ( dev-python/soundfile[${PYTHON_USEDEP}] )
	metrics? ( dev-python/pywsd[${PYTHON_USEDEP}] )
	metrics? ( dev-python/spacy[${PYTHON_USEDEP}] )
	metrics? ( dev-python/anls[${PYTHON_USEDEP}] )
	metrics? ( dev-python/rouge[${PYTHON_USEDEP}] )
	metrics? ( dev-python/capture-metric[${PYTHON_USEDEP}] )
	metrics? ( dev-python/levenshtein[${PYTHON_USEDEP}] )
	gemini? ( dev-python/google-generativeai[${PYTHON_USEDEP}] )
	reka? ( ~dev-python/httpx-0.23.3[${PYTHON_USEDEP}] )
	reka? ( dev-python/reka-api[${PYTHON_USEDEP}] )
	qwen? ( dev-python/decord[${PYTHON_USEDEP}] )
	qwen? ( dev-python/qwen-vl-utils[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/playwright[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/requests[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/duckduckgo-search[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/langchain[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/langchain-community[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/beautifulsoup4[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/FlagEmbedding[${PYTHON_USEDEP}] )
	mmsearch? ( dev-python/rouge[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
