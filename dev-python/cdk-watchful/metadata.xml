<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>---### ‚ú® Have you heard of &lt;a href=&quot;https://github.com/cdklabs/cdk-monitoring-constructs&quot;&gt;cdk-monitoring-constructs&lt;/a&gt;? ‚ú®&lt;/span&gt;Watchful on steroids. Check it out! üîù---# cdk-watchful&gt; Watching your CDK back since 2019Watchful is an [AWS CDK](https://github.com/awslabs/aws-cdk) construct library that makes it easyto monitor CDK apps. It automatically synthesizes alarms and dashboards for supported AWS resources.```pythonimport { Watchful } from 'cdk-watchful'const wf = new Watchful(this, 'watchful');wf.watchDynamoTable('My Cute Little Table', myTable);wf.watchLambdaFunction('My Function', myFunction);wf.watchApiGateway('My REST API', myRestApi);```And...![](https://raw.githubusercontent.com/eladb/cdk-watchful/master/example/sample.png)## InitializeTo get started, just define a `Watchful` construct in your CDK app.You can initialize using an email address, SQS ARN or both:```pythonimport { Watchful } from 'cdk-watchful'import * as sns from 'aws-cdk-lib/aws-sns';import * as sqs from 'aws-cdk-lib/aws-sqs';const alarmSqs = sqs.Queue.fromQueueArn(this, 'AlarmQueue', 'arn:aws:sqs:us-east-1:444455556666:alarm-queue')const alarmSns = sns.Topic.fromTopicArn(this, 'AlarmTopic', 'arn:aws:sns:us-east-2:444455556666:MyTopic');const wf = new Watchful(this, 'watchful', {  alarmEmail: 'your@email.com',  alarmSqs,  alarmSns,  alarmActionArns: [ 'arn:aws:sqs:us-east-1:444455556666:alarm-queue' ]});```## Add ResourcesWatchful manages a central dashboard and configures default alarming for:* Amazon DynamoDB: `watchful.watchDynamoTable`* AWS Lambda: `watchful.watchLambdaFunction`* Amazon API Gateway: `watchful.watchApiGateway`* [Request yours](https://github.com/eladb/cdk-watchful/issues/new)## Watching ScopesWatchful can also watch complete CDK construct scopes. It will automaticallydiscover all watchable resources within that scope (recursively), add themto your dashboard and configure alarms for them.```pythonwf.watchScope(storageLayer);```## ExampleSee a more complete [example](https://github.com/eladb/cdk-watchful/blob/master/example/index.ts).## ContributingContributions of all kinds are welcome and celebrated. Raise an issue, submit a PR, do the right thing.To set up a dev environment:1. Clone this repo2. `yarn`Development workflow (change code and run tests automatically):```shellyarn test:watch```Build (like CI):```shellyarn build```And then publish as a PR.## License[Apache 2.0](https://github.com/eladb/cdk-watchful/blob/master/LICENSE)</longdescription>
</pkgmetadata>