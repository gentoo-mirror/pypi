<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/cthoyt/umls_downloader/raw/main/docs/source/logo.png&quot; height=&quot;150&quot;&gt;&lt;/p&gt;--&gt;&lt;h1 align=&quot;center&quot;&gt;  UMLS Downloader&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;    &lt;a href=&quot;https://github.com/cthoyt/umls_downloader/actions?query=workflow%3ATests&quot;&gt;        &lt;img alt=&quot;Tests&quot; src=&quot;https://github.com/cthoyt/umls_downloader/workflows/Tests/badge.svg&quot; /&gt;    &lt;/a&gt;    &lt;a href='https://umls-downloader.readthedocs.io/en/latest/?badge=latest'&gt;        &lt;img src='https://readthedocs.org/projects/umls-downloader/badge/?version=latest' alt='Documentation Status' /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/umls_downloader&quot;&gt;        &lt;img alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/umls_downloader&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://pypi.org/project/umls_downloader&quot;&gt;        &lt;img alt=&quot;PyPI - Python Version&quot; src=&quot;https://img.shields.io/pypi/pyversions/umls_downloader&quot; /&gt;    &lt;/a&gt;    &lt;a href=&quot;https://github.com/cthoyt/umls_downloader/blob/main/LICENSE&quot;&gt;        &lt;img alt=&quot;PyPI - License&quot; src=&quot;https://img.shields.io/pypi/l/umls_downloader&quot; /&gt;    &lt;/a&gt;    &lt;a href='https://github.com/psf/black'&gt;        &lt;img src='https://img.shields.io/badge/code%20style-black-000000.svg' alt='Code style: black' /&gt;    &lt;/a&gt;&lt;/p&gt;Don't worry about [UMLS Terminology Services (UTS)](https://uts.nlm.nih.gov/uts/)licensing and distribution rules - just use`umls_downloader` to write code that knows how to download content and use itautomatically from the following (non-exhaustive) list of resources:- [UMLS](https://www.nlm.nih.gov/research/umls/licensedcontent/umlsknowledgesources.html)- [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/rxnormfiles.html)- [SemMedDB](https://lhncbc.nlm.nih.gov/ii/tools/SemRep_SemMedDB_SKR/SemMedDB_download.html)- [SNOMED-CT](https://www.nlm.nih.gov/healthit/snomedct/international.html)- potentially more in the futureor any content that can be downloaded throughthe [UTS ticket granting](https://documentation.uts.nlm.nih.gov/automating-downloads.html)system. There's no centralized list of content available through the UTS sosuggestions for additional resources are welcome throughthe [issue tracker](https://github.com/cthoyt/umls_downloader/issues).Full documentation are available at [umls-downloader.readthedocs.io](https://umls-downloader.readthedocs.io).## Installation```bash$ pip install umls_downloader```## Download A Specific Version of UMLS```pythonimport osfrom umls_downloader import download_umls# Get this from https://uts.nlm.nih.gov/uts/edit-profileapi_key = ...path = download_umls(version=&quot;2021AB&quot;, api_key=api_key)# This is where it gets downloaded: ~/.data/bio/umls/2021AB/umls-2021AB-mrconso.zipexpected_path = os.path.join(    os.path.expanduser(&quot;~&quot;), &quot;.data&quot;, &quot;umls&quot;, &quot;2021AB&quot;,    &quot;umls-2021AB-mrconso.zip&quot;,)assert expected_path == path.as_posix()```After it's been downloaded once, it's smart and doesn't need to download again.It gets stored using [`pystow`](https://github.com/cthoyt/pystow) automaticallyin the `~/.data/bio/umls` directory.A full list of functions is available in the[documentation](https://umls-downloader.readthedocs.io).## Automating Configuration of UTS CredentialsThere are two ways to automatically set the username and password so you don'thave to worry about getting it and passing it around in your python code:1. Set `UMLS_API_KEY` in the environment2. Create `~/.config/umls.ini` and set in the `[umls]` section a `api_key` key.```pythonfrom umls_downloader import download_umls# Same path as beforepath = download_umls(version=&quot;2021AB&quot;)```## Download the Latest VersionFirst, you'll have toinstall [`bioversions`](https://github.com/cthoyt/bioversions)with `pip install bioversions`, whose job it is to look up the latest version ofmany databases. Then, you can modify the previous code slightly by omittingthe `version` keyword argument:```pythonfrom umls_downloader import download_umls# Same path as before (as of November 21st, 2021)path = download_umls()```## Download and open the fileThe UMLS file is zipped, so it's usually accompanied with the followingboilerplate code:```pythonimport zipfilefrom umls_downloader import download_umlspath = download_umls()with zipfile.ZipFile(path) as zip_file:    with zip_file.open(&quot;MRCONSO.RRF&quot;, mode=&quot;r&quot;) as file:        for line in file:            ...```This exact code is wrapped with the `open_umls()` using Python's context managerso it can more simply be written as:```pythonfrom umls_downloader import open_umlswith open_umls() as file:    for line in file:        ...```The `version` and `api_key` arguments also apply here.## Why not an API?The UMLS provides an [API](https://documentation.uts.nlm.nih.gov/rest/home.html)for access to tiny bits of data at a time. There are even two recent (last 5years) packages [`umls-api`](https://pypi.org/project/umls-api)[`connect-umls`](https://pypi.org/project/connect-umls) that provide a wrapperaround them. However, API access is generally rate limited, difficult to use inbulk, and slow. For working with UMLS (or any other database, for that matter)inbulk, it's necessary to download full database dumps.## üëã Attribution### ‚öñÔ∏è LicenseThe code in this package is licensed under the MIT License.### üç™ CookiecutterThis package was createdwith [@audreyfeldroy](https://github.com/audreyfeldroy)'s[cookiecutter](https://github.com/cookiecutter/cookiecutter) packageusing [@cthoyt](https://github.com/cthoyt)'s[cookiecutter-snekpack](https://github.com/cthoyt/cookiecutter-snekpack)template.</longdescription>
</pkgmetadata>