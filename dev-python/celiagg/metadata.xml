<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>celiagg=======.. image:: https://img.shields.io/pypi/v/celiagg.svg  :target: https://pypi.python.org/pypi/celiagg  :alt: PyPI.. image:: https://github.com/celiagg/celiagg/workflows/Test/badge.svg   :target: https://github.com/celiagg/celiagg/actions?query=workflow%3A%22Test%22   :alt: Build statusceliagg provides a simple, stateless canvas object that usesAnti-Grain Geometry 2.4 &lt;svn://svn.code.sf.net/p/agg/svn&gt; with Cython torender directly into a Numpy array.A respectably modern C++ compiler is required to build celiagg`Documentation! &lt;https://celiagg.github.io/celiagg/&gt;`_Installation------------``pip install celiagg`` should do the trick.Building from source with the Freetype font library on macOS requiresthe `pkg-config` tool which can be installed via Homebrew, MacPorts, orother macOS package management systems.Dependencies------------* Numpy* Cython (build-time only)* Freetype2 (optional)Contributing------------We encourage contributions to celiagg!  If you would like to contribute, justfork the repository on GitHub, make your changes, and issue a pull request.History-------celiagg started as pyagg (https://github.com/erikhvatum/pyagg) but was renamedto avoid clashing with PyAgg (https://github.com/karimbahgat/PyAgg).celiagg is a play on Celiac (Anti grain...) and AGG (Anti-Grain Geometry).</longdescription>
</pkgmetadata>