<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pybravia&lt;a href=&quot;https://pypi.org/project/pybravia/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/pybravia&quot; alt=&quot;PyPi release&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/Drafteed/pybravia/ci.yml?branch=master&quot; alt=&quot;GitHub Workflow Status&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/Drafteed/pybravia&quot; alt=&quot;MIT License&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/code%20style-black-black&quot; alt=&quot;Code style&quot;&gt;Python Bravia provides an easy-to-use async interface for controlling of Sony Bravia TVs 2013 and newer.This library primarily being developed with the intent of supporting [Home Assistant](https://www.home-assistant.io/integrations/braviatv/).For more information, take a look at [BRAVIA Professional Display Knowledge Center](https://pro-bravia.sony.net/develop/).## RequirementsThis library supports Python 3.8 and higher.## Installation```shpip install pybravia```## Connect and API usage### With PSK (recommended)```pyimport asyncioimport loggingfrom pybravia import BraviaClient, BraviaErrorHOST = &quot;192.168.1.20&quot;PSK = &quot;sony&quot;logging.basicConfig(level=logging.DEBUG)async def main():    &quot;&quot;&quot;Example of connect with PSK.&quot;&quot;&quot;    async with BraviaClient(HOST) as client:        try:            connected = await client.connect(psk=PSK)            info = await client.get_system_info()            print(info)            await client.volume_up()        except BraviaError:            print(&quot;Could not connect&quot;)loop = asyncio.new_event_loop()loop.run_until_complete(main())loop.close()```### With PIN code#### Start pairing process and display PIN on the TV```pyimport asyncioimport loggingfrom pybravia import BraviaClient, BraviaErrorHOST = &quot;192.168.1.20&quot;CLIENTID = &quot;MyClientID&quot;NICKNAME = &quot;MyNicknameID&quot;logging.basicConfig(level=logging.DEBUG)async def main():    &quot;&quot;&quot;Pairing process initialization example.&quot;&quot;&quot;    async with BraviaClient(HOST) as client:        try:            await client.pair(CLIENTID, NICKNAME)        except BraviaError:            print(&quot;Could not connect&quot;)loop = asyncio.new_event_loop()loop.run_until_complete(main())loop.close()```#### Connect and usage```pyimport asyncioimport loggingfrom pybravia import BraviaClient, BraviaErrorHOST = &quot;192.168.1.20&quot;CLIENTID = &quot;MyClientID&quot;NICKNAME = &quot;MyNicknameID&quot;PIN = &quot;2170&quot;logging.basicConfig(level=logging.DEBUG)async def main():    &quot;&quot;&quot;Example of connect with PIN.&quot;&quot;&quot;    async with BraviaClient(HOST) as client:        try:            connected = await client.connect(PIN, CLIENTID, NICKNAME)            info = await client.get_system_info()            print(info)            await client.volume_up()        except BraviaError:            print(&quot;Could not connect&quot;)loop = asyncio.new_event_loop()loop.run_until_complete(main())loop.close()```## ContributingSee an issue? Have something to add? Issues and pull requests are accepted in this repository.## LicenseThis project is released under the MIT License. Refer to the LICENSE file for details.</longdescription>
</pkgmetadata>