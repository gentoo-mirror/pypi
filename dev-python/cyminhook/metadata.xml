<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>cyminhook=========.. image:: https://img.shields.io/pypi/v/cyminhook.svg   :target: https://pypi.org/project/cyminhook/   :alt: PyPI.. image:: https://github.com/segevfiner/cyminhook/actions/workflows/docs.yml/badge.svg   :target: https://segevfiner.github.io/cyminhook/   :alt: DocsHook functions on Windows using `MinHook &lt;https://github.com/TsudaKageyu/minhook&gt;`_.Quick Start:.. code-block:: python    import ctypes    import ctypes.wintypes    import cyminhook    import win32api    import win32con    class MessageBoxExWHook(cyminhook.MinHook):        signature = ctypes.WINFUNCTYPE(            ctypes.c_int,            ctypes.wintypes.HWND,            ctypes.wintypes.LPCWSTR,            ctypes.wintypes.LPCWSTR,            ctypes.wintypes.UINT,            ctypes.wintypes.WORD,            use_last_error=True,        )        target = ctypes.windll.user32.MessageBoxExW        def detour(self, hWnd, lpText, lpCaption, uType, langId):            return self.original(hWnd, &quot;Hooked&quot;, &quot;Hooked&quot;, uType, langId)    with MessageBoxExWHook() as hook:        hook.enable()        win32api.MessageBox(None, &quot;Hello, World!&quot;, &quot;Python&quot;, win32con.MB_OK)</longdescription>
</pkgmetadata>