<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Roo - manages environments and dependencies in R![Build](https://github.com/AstraZeneca/roo/actions/workflows/python.yml/badge.svg)![Flake8](https://github.com/AstraZeneca/roo/actions/workflows/lint.yml/badge.svg)[![Maturity Level](https://img.shields.io/badge/Maturity%20Level-Under%20Development-orange)](https://img.shields.io/badge/Maturity%20Level-Under%20Development-orange)# DescriptionRoo is a python program that handles R dependencies and R environments, ensuring environment reproducibilitythat satisfy dependency constraints. If you are familiar with python poetry or pip it aims at being the same.## MotivationRoo was born out of frustration at the current R environment handling toolsthat are not up to expected needs when it's time to ensure a reproducibleenvironment that is guaranteed to have dependencies satisfied. Utilities suchas packrat and renv, and the general status of CRAN, do not favour suchreliability. Most R programmers always use the most recent code available on CRAN, but thisis not going to work for validated applications that need a specified environmentthat is unchanged even if a reinstallation happens at a later date. While you couldargue that packrat or renv freezes the packages in the current environment,unfortunately the mechanism with which those packages are discovered to beginwith has potential issues.### Subdependency conflicts, and why it's a problemSay for example that you want to install two packages, `A` and `B`. Both depend onpackage `C`.  However, `A` depends on `C &gt;= 2`, and `B` depends on `C &lt; 2`. It is obvious that there is no version of `C` that satisfies the constraints,therefore the environment cannot be created. This is an important point thatone wants to be aware of, because validation depends on a reliable andconsistent environment.There are effective techniques to deal with this so called &quot;dependency hell&quot;.Roo is not as performant as tools such as conda and poetry for python, but itsatisfies the basic need I currently have to ensure the environment is stable,reproducible, and consistent (of course, assuming that the annotations in thepackages are correct!)Roo does a lot more than this, and it's basically a work in progress. As a datascientist you are unlikely to need Roo in your daily work, because Roo ismostly focused on production-level rather than exploratory coding. However, if timeallows, an R interface will be written to at least install from a roo lock file.# Requirements and InstallationRoo is written in python and requires python 3.8 or above. It runs on any platform, and it can be installed from pypi with:    pip install rooDependencies will be installed automatically.</longdescription>
</pkgmetadata>