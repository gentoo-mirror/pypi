<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># platon-aide它是一个小助手，能够帮助您快速访问PlatON区块链，并使用其基本功能 # 安装方法```shellpip install platon_aide```# 使用方法```pythonfrom platon_account import Accountfrom platon_aide import Aidefrom platon_aide.economic import new_economicuri = 'http://192.168.120.121:6789'&quot;&quot;&quot;初始化部分&quot;&quot;&quot;# 实例化aideaide = Aide(uri)# 特殊情况实例化aide# 这里因为节点关闭了admin、debug的api，aide将无法自动获取经济模型参数和节点信息# 为了避免aide自动获取报错，需要自己生成经济模型对象，并指定关闭的接口data = {&quot;common&quot;: {&quot;maxEpochMinutes&quot;: 3, &quot;nodeBlockTimeWindow&quot;: 10, &quot;perRoundBlocks&quot;: 10, &quot;maxConsensusVals&quot;: 4, &quot;additionalCycleTime&quot;: 28},        &quot;staking&quot;: {&quot;stakeThreshold&quot;: 100000000000000000000000, &quot;operatingThreshold&quot;: 10000000000000000000, &quot;maxValidators&quot;: 5, &quot;unStakeFreezeDuration&quot;: 2,                    &quot;rewardPerMaxChangeRange&quot;: 500, &quot;rewardPerChangeInterval&quot;: 2},        &quot;slashing&quot;: {&quot;slashFractionDuplicateSign&quot;: 100, &quot;duplicateSignReportReward&quot;: 50, &quot;maxEvidenceAge&quot;: 1, &quot;slashBlocksReward&quot;: 5, &quot;zeroProduceCumulativeTime&quot;: 1,                     &quot;zeroProduceNumberThreshold&quot;: 1, &quot;zeroProduceFreezeDuration&quot;: 1},        &quot;gov&quot;: {&quot;versionProposalVoteDurationSeconds&quot;: 1600, &quot;versionProposalSupportRate&quot;: 6670, &quot;textProposalVoteDurationSeconds&quot;: 160, &quot;textProposalVoteRate&quot;: 5000,                &quot;textProposalSupportRate&quot;: 6670, &quot;cancelProposalVoteRate&quot;: 5000, &quot;cancelProposalSupportRate&quot;: 6670, &quot;paramProposalVoteDurationSeconds&quot;: 160,                &quot;paramProposalVoteRate&quot;: 5000, &quot;paramProposalSupportRate&quot;: 6670},        &quot;reward&quot;: {&quot;newBlockRate&quot;: 50, &quot;platonFoundationYear&quot;: 10, &quot;increaseIssuanceRatio&quot;: 250, &quot;theNumberOfDelegationsReward&quot;: 2},        &quot;restricting&quot;: {&quot;minimumRelease&quot;: 100000000000000000000},        &quot;innerAcc&quot;: {&quot;platonFundAccount&quot;: &quot;lat1drz94my95tskswnrcnkdvnwq43n8jt6dmzf8h8&quot;, &quot;platonFundBalance&quot;: 0, &quot;cdfAccount&quot;: &quot;lat1kvurep20767ahvrkraglgd9t34w0w2g059pmlx&quot;,                     &quot;cdfBalance&quot;: 421411981000000000000000000}}economic = new_economic(data)aide = Aide(uri, economic=economic, exclude_api=['admin', 'debug'])&quot;&quot;&quot;交易签名部分&quot;&quot;&quot;# 设置默认账户，后续使用aide发交易，如果不指定私钥，则都会使用默认账户签名交易account = Account.from_key('f51ca759562e1daf9e5302d121f933a8152915d34fcbc27e542baf256b5e4b74', aide.hrp)aide.set_default_account(account)to_account = Account.create(hrp='lat')print(aide.transfer.transfer(to_account.address, 10 * 10 ** 18))# 使用特定私钥签名，附带自主指定交易信息方法txn = {'gas': 21000, 'gasPrice': 1 * 10 ** 9, 'nonce': 100}private_key = 'f51ca759562e1daf9e5302d121f933a8152915d34fcbc27e542baf256b5e4b74'print(aide.transfer.transfer(to_account.address, 10 * 10 ** 18, txn=txn, private_key=private_key))&quot;&quot;&quot;普通交易部分&quot;&quot;&quot;# 发送转账to_account = Account.create(hrp='lat')print(aide.transfer.transfer(to_account.address, 10 * 10 ** 18))# 调用web3print(aide.web3.clientVersion)# 调用内置合约print(aide.delegate.get_delegate_lock_info())&quot;&quot;&quot;调用合约部分&quot;&quot;&quot;false = Falseture = Trueabi = [{&quot;anonymous&quot;: false, &quot;inputs&quot;: [{&quot;indexed&quot;: false, &quot;internalType&quot;: &quot;uint256&quot;, &quot;name&quot;: &quot;_chainId&quot;, &quot;type&quot;: &quot;uint256&quot;}], &quot;name&quot;: &quot;_putChainID&quot;, &quot;type&quot;: &quot;event&quot;},       {&quot;inputs&quot;: [], &quot;name&quot;: &quot;getChainID&quot;, &quot;outputs&quot;: [{&quot;internalType&quot;: &quot;uint256&quot;, &quot;name&quot;: &quot;&quot;, &quot;type&quot;: &quot;uint256&quot;}], &quot;stateMutability&quot;: &quot;view&quot;, &quot;type&quot;: &quot;function&quot;},       {&quot;inputs&quot;: [], &quot;name&quot;: &quot;putChainID&quot;, &quot;outputs&quot;: [], &quot;stateMutability&quot;: &quot;nonpayable&quot;, &quot;type&quot;: &quot;function&quot;}]bytecode = '608060405234801561001057600080fd5b50610107806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806336319ab0146037578063564b81ef14603f575b600080fd5b603d6059565b005b60456099565b6040516050919060ae565b60405180910390f35b466000819055507f68e891aec7f9596d6e192c48cb82364ec392d423bce80abd6e1ee5ad05860256600054604051608f919060ae565b60405180910390a1565b600046905090565b60a88160c7565b82525050565b600060208201905060c1600083018460a1565b92915050565b600081905091905056fea264697066735822122037a1668252253271128182c71109922cb1e300fb08a7080a0587f360df4071ba64736f6c63430008060033'# 部署新的合约contract = aide.contract.deploy(abi=abi, bytecode=bytecode)print(contract.ADDRESS)# 已有合约，直接初始化contract_address = '0x00'contract = aide.contract.init(abi=abi, address=contract_address)print(contract.ADDRESS)# call调用print(aide.contract.getChainID())# 发送交易，和call一样res = aide.contract.putChainID()# 解析eventprint(aide.contract.PutChainID(res))```</longdescription>
</pkgmetadata>