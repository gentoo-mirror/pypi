<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Profyle### Development tool for analysing and managing python traces&lt;a href=&quot;https://pypi.org/project/profyle&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/v/profyle&quot; alt=&quot;Package version&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pypi.org/project/profyle&quot; target=&quot;_blank&quot;&gt;    &lt;img src=&quot;https://img.shields.io/pypi/pyversions/profyle.svg?color=%2334D058&quot; alt=&quot;Supported Python versions&quot;&gt;&lt;/a&gt;## Why do you need Profyle?### BottlenecksWith Profyle you can easily detect where in your code you have a bottleneck, simply analyze the trace and see what function or operation is taking most of the execution time of the request### Enhance performaceAnalyze the traces and decide which parts of your code should be improved## Installation&lt;div class=&quot;termy&quot;&gt;```console$ pip install profyle---&gt; 100%```&lt;/div&gt;## Example### 1. ImplementIn order to track all your API requests you must implement the &lt;code&gt;ProfyleMiddleware&lt;/code&gt;&lt;details markdown=&quot;1&quot;&gt;&lt;summary&gt;FastAPI&lt;/summary&gt;```Pythonfrom fastapi import FastAPIfrom profyle.middleware.fastapi import ProfyleMiddlewareapp = FastAPI()app.add_middleware(ProfyleMiddleware)@app.get(&quot;/items/{item_id}&quot;)async def read_item(item_id: int):    return {&quot;item_id&quot;: item_id}```&lt;/details&gt;&lt;details markdown=&quot;1&quot;&gt;&lt;summary&gt;Flask&lt;/summary&gt;```Pythonfrom flask import Flaskfrom profyle.middleware.flask import ProfyleMiddlewareapp = Flask(__name__)app.wsgi_app = ProfyleMiddleware(app.wsgi_app)@app.route(&quot;/&quot;)def hello_world():    return &quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;```&lt;/details&gt;&lt;details markdown=&quot;1&quot;&gt;&lt;summary&gt;Django&lt;/summary&gt;Soon..&lt;/details&gt;### 2. Run* Run the web server:&lt;div class=&quot;termy&quot;&gt;```console$ profyle startINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)INFO:     Started reloader process [28720]INFO:     Started server process [28722]INFO:     Waiting for application startup.INFO:     Application startup complete.```&lt;/div&gt;### 3. List* List all requests tracing:![Alt text](https://github.com/vpcarlos/profyle/blob/main/docs/img/traces.png?raw=true &quot;Traces&quot;)### 4. Analyze* Profyle stands on the shoulder of giants: &lt;a href=&quot;https://github.com/gaogaotiantian/viztracer&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;Viztracer&lt;/a&gt; and  &lt;a href=&quot;https://github.com/google/perfetto&quot; class=&quot;external-link&quot; target=&quot;_blank&quot;&gt;Perfetto&lt;/a&gt;* Detailed function entry/exit information on timeline with source code* Super easy to use, no source code change for most features, no package dependency* Supports threading, multiprocessing, subprocess and async* Powerful front-end, able to render GB-level trace smoothly* Works on Linux/MacOS/Window![Alt text](https://github.com/vpcarlos/profyle/blob/main/docs/img/trace1.png?raw=true &quot;Trace1&quot;)![Alt text](https://github.com/vpcarlos/profyle/blob/main/docs/img/trace2.png?raw=true &quot;Trace2&quot;)## CLI Commands### start* Start the web server and view profile traces&lt;div class=&quot;termy&quot;&gt;```console$ profyle startINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)INFO:     Started reloader process [28720]INFO:     Started server process [28722]INFO:     Waiting for application startup.INFO:     Application startup complete.```&lt;/div&gt;### clean* Delete all profile traces&lt;div class=&quot;termy&quot;&gt;```console$ profyle clean10 traces removed ```&lt;/div&gt;### check* Check traces DB size&lt;div class=&quot;termy&quot;&gt;```console$ profyle checkDB size: 30MB```&lt;/div&gt;</longdescription>
</pkgmetadata>