<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;h1 align=&quot;center&quot;&gt;piston_rspy&lt;/h1&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypi.python.org/pypi/piston_rspy/&quot;&gt;&lt;img height=&quot;20&quot; alt=&quot;PyPI&quot; src=&quot;https://img.shields.io/pypi/v/piston_rspy.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Jonxslays/piston_rspy/blob/master/LICENSE&quot;&gt;&lt;img height=&quot;20&quot; alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/Jonxslays/piston_rspy&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pepy.tech/project/piston-rspy&quot;&gt;&lt;img height=&quot;20&quot; alt=&quot;Build&quot; src=&quot;https://pepy.tech/badge/piston-rspy&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;Python bindings for &lt;a href=&quot;https://github.com/Jonxslays/piston_rs&quot;&gt;&lt;code&gt;piston_rs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;## What is piston_rspy?piston_rspy provides Python users the ability to interact with the[Piston](https://github.com/engineer-man/piston) code execution engine,but behind the scenes it is powered by [piston_rs](https://github.com/Jonxslays/piston_rs),a Rust library designed for the same purpose.## Getting startedpiston_rspy officially supports Python versions 3.7, 3.8, 3.9, 3.10, and 3.11.For an in depth look at the API, check out the [documentation](https://jonxslays.github.io/piston_rspy/piston_rspy/)!### Installation```bashpip install piston_rspy```### UsageFetching the available runtimes from Piston.```pyimport asyncioimport piston_rspyasync def main() -&gt; None:    client = piston_rspy.Client()    runtimes = await client.fetch_runtimes()    print(runtimes)if __name__ == &quot;__main__&quot;:    asyncio.run(main())```---Executing python code via Piston.```pyimport asyncioimport piston_rspyasync def main() -&gt; None:    file = piston_rspy.File(        name=&quot;main.py&quot;,        content=&quot;for i in range(10): print(i)&quot;,    )    executor = piston_rspy.Executor(        language=&quot;python&quot;,        version=&quot;3.10&quot;,        files=[file],    )    client = piston_rspy.Client()    response = await client.execute(executor)    print(f&quot;Language: {response.language} v{response.version}&quot;)    if response.compile:        print(f&quot;Compilation:\n{response.compile.output}&quot;)    print(f&quot;Output:\n{response.run.output}&quot;)if __name__ == &quot;__main__&quot;:    asyncio.run(main())```---The builder flow that is used in `piston_rs` is available in`piston_rspy` as well.```pyimport asyncioimport piston_rspyasync def main() -&gt; None:    client = piston_rspy.Client()    response = await client.execute(        piston_rspy.Executor()        .set_language(&quot;python&quot;)        .set_version(&quot;3.10&quot;)        .add_file(            piston_rspy.File(                name=&quot;main.py&quot;,                content=&quot;for i in range(10): print(i)&quot;,            )        )    )    print(f&quot;Language: {response.language} v{response.version}&quot;)    if response.compile:        print(f&quot;Compilation:\n{response.compile.output}&quot;)    print(f&quot;Output:\n{response.run.output}&quot;)if __name__ == &quot;__main__&quot;:    asyncio.run(main())```## Licensepiston_rspy is licensed under the [MIT License](https://github.com/Jonxslays/piston_rspy/blob/master/LICENSE).</longdescription>
</pkgmetadata>