<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![Documentation Status](https://readthedocs.org/projects/pytest-ngrok/badge/?version=latest)](https://pytest-ngrok.readthedocs.io/en/latest/?badge=latest)[![ci](https://github.com/Apkawa/pytest-ngrok/actions/workflows/ci.yml/badge.svg)](https://github.com/Apkawa/pytest-django-ngrok/actions/workflows/ci.yml)[![Codecov](https://codecov.io/gh/Apkawa/pytest-ngrok/branch/master/graph/badge.svg)](https://codecov.io/gh/Apkawa/pytest-ngrok) &lt;/br&gt;[![PyPi](https://img.shields.io/pypi/v/pytest-ngrok.svg)](https://pypi.python.org/pypi/pytest-ngrok)[![PyPI Python versions](https://img.shields.io/pypi/pyversions/pytest-ngrok.svg)](https://pypi.python.org/pypi/pytest-ngrok)[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)&lt;/br&gt;&lt;!--[![codecov](https://codecov.io/gh/Apkawa/pytest-ngrok/branch/master/graph/badge.svg)](https://codecov.io/gh/Apkawa/pytest-ngrok)[![Requirements Status](https://requires.io/github/Apkawa/pytest-ngrok/requirements.svg?branch=master)](https://requires.io/github/Apkawa/pytest-ngrok/requirements/?branch=master)[![PyUP](https://pyup.io/repos/github/Apkawa/pytest-ngrok/shield.svg)](https://pyup.io/repos/github/Apkawa/pytest-ngrok)--&gt;pytest integration for [ngrok.io](https://ngrok.com/)# Installationfrom PyPi```bashpip install pytest-ngrok```or from git```bashpip install -e git+https://githib.com/Apkawa/pytest-ngrok.git#egg=pytest-ngrok```# Usage```pythonimport pytestfrom urllib.error import HTTPErrorfrom urllib.request import urlopendef test_ngrok(ngrok, httpserver):    httpserver.expect_request(&quot;/foobar&quot;).respond_with_data(&quot;ok&quot;)    remote_url = ngrok(httpserver.port)    assert urlopen(remote_url + &quot;/foobar&quot;).read() == b'ok'def test_ngrok_context_manager(ngrok, httpserver):    # example local server    httpserver.expect_request(&quot;/foobar&quot;).respond_with_data(&quot;ok&quot;)    with ngrok(httpserver.port) as remote_url:        _test_url = str(remote_url) + '/foobar'        assert urlopen(_test_url).read() == b'ok'    # Connection closes    pytest.raises(HTTPError, urlopen, _test_url)```With `pytest-django` can use fixture `live_server_ngrok````pythondef test_server(live_server_ngrok):    assert live_server_ngrok.url.endswith('ngrok.io')```# Contributing## Initialize```bashpython -m venv /tmp/.venv/pytest-ngroksource /tmp/.venv/pytest-ngrok/activatepip install -r requirements-dev.txt```## Run tests```bashpytesttox```## Update version```bashpython setup.py bumpversion```## Publish pypi```bashpython setup.py publish```</longdescription>
</pkgmetadata>