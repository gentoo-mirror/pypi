<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># 🚀 GPTBaseWelcome to GPTBase! This Python library provides a straightforward and user-friendly interface to leverage OpenAI's powerful GPT-3.5-Turbo and GPT-4 models for text generation. 📚🔍## ✨ Features- 🎛️ Configurable parameters for chat completion.- 💬 Support for both individual prompts and chat conversations.- ⚡ Stream output option for faster response times.- 📝 Built-in logging and rich printing for enhanced visualization.- 🔄 Customizable model choice, including GPT-3.5-Turbo, GPT-4, and other variants.- 📈 Easy model parameter adjustment.- 🤖 Support for function calls in chat completions.## 📦 InstallationYou can easily install the GPTBase library from PyPI with a single command line:```bashpip install gptbase```Once installed, import it in your Python script:```pythonfrom gptbase.basev2 import ChatAssistant, CompletionParameters, FunctionCall```## 📚 UsageThe library includes two powerful classes: `Assistant` for individual prompts and `ChatAssistant` for engaging, multi-turn chat conversations.Here's a snippet showcasing a simple usage of the `ChatAssistant` class:```pythonfrom gptbase.basev2 import ChatAssistant, CompletionParameterscm = CompletionParameters(stream=True)assistant = ChatAssistant(memory_turns=3)message = assistant.chat(&quot;I want to learn Python&quot;, cm)```And here's an example of how to use function calls:```pythonfrom gptbase.basev2 import Assistant, CompletionParameters, FunctionCall# Define the functionget_weather_function = FunctionCall(&quot;get_current_weather&quot;, {&quot;location&quot;: &quot;Boston&quot;})# Define the functions that the model can callfunctions = [    {        &quot;name&quot;: &quot;get_current_weather&quot;,        &quot;description&quot;: &quot;Gets the current weather for a given location&quot;,        &quot;parameters&quot;: {            &quot;type&quot;: &quot;object&quot;,            &quot;properties&quot;: {                &quot;location&quot;: {                    &quot;type&quot;: &quot;string&quot;,                    &quot;description&quot;: &quot;The location to get the weather for&quot;                }            },            &quot;required&quot;: [&quot;location&quot;]        }    }]# Define the parameters for the chat completionparams = CompletionParameters(    model=&quot;gpt-3.5-turbo-0613&quot;,    function_call=get_weather_function,    functions=functions,    # Add other parameters as needed)# Create an instance of the Assistant classassistant = Assistant()# Call the functionresponse = assistant.ask(&quot;What's the weather like in Boston?&quot;, params=params)# Print the responseprint(response)extract_function_call(response)def get_current_weather(location):    &quot;&quot;&quot;fake get current weather function.&quot;&quot;&quot;    print(f&quot;Today's fake weather for {location} is _°&quot;)func_dic = {get_current_weather.__name__: get_current_weather}call_with_chat_completion(response, func_dic)```And you will get output like this:```plaintextToday's fake weather for Boston is _°```You can also use the command line interface for chat conversations:```bashgptbase-chat --memory-turns 3 --system-prompt &quot;This is a system prompt.&quot;```For more examples and a deeper dive into usage, please refer to the detailed documentation. 📘## 🙋 SupportIf you have any questions, run into any issues, or just need a little help, don't hesitate to reach out. We're here to help! 🤝---Whether you're a veteran developer or just getting started, GPTBase is a powerful tool for any text generation task. Give it a try today! 🌟</longdescription>
</pkgmetadata>