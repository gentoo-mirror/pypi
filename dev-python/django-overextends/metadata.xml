<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://secure.travis-ci.org/stephenmcd/django-overextends.png?branch=master   :target: http://travis-ci.org/stephenmcd/django-overextendsCreated by `Stephen McDonald &lt;http://twitter.com/stephen_mcd&gt;`_Introduction============A Django reusable app providing the ``overextends`` template tag, adrop-in replacement for Django's ``extends`` tag, which allows you touse circular template inheritance.The primary use-case for ``overextends`` is to simultaneously overrideand extend templates from other reusable apps, in your own Django project.Example=======Consider the following settings module and templates, with the apps``app1`` and ``app2`` bundled in the project, for example's sake::    # settings.py    INSTALLED_APPS = (        &quot;app1&quot;,        &quot;app2&quot;,        &quot;overextends&quot;,    )    TEMPLATE_LOADERS = (        &quot;django.template.loaders.filesystem.Loader&quot;,        &quot;django.template.loaders.app_directories.Loader&quot;,    )    PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))    TEMPLATE_DIRS = (os.path.join(PROJECT_ROOT, &quot;templates&quot;),)    &lt;!-- myproject/app1/templates/pages/page.html --&gt;    &lt;h1&gt;Title&lt;/h1&gt;    {% block main %}    &lt;p&gt;A paragraph in app1&lt;/p&gt;    {% enblock %}    &lt;footer&gt;Copyright 2012&lt;/footer&gt;    &lt;!-- myproject/app2/templates/pages/page.html --&gt;    {% overextends &quot;pages/page.html&quot; %}    {% block main %}    &lt;p&gt;A paragraph in app2, that wants to be on top of app1's main block&lt;/p&gt;    {{ block.super }}    {% enblock %}    &lt;!-- myproject/templates/pages/page.html --&gt;    {% overextends &quot;pages/page.html&quot; %}    {% block main %}    {{ block.super }}    &lt;p&gt;A paragraph in the project's template directory, under the other main blocks&lt;/p&gt;    {% enblock %}The resulting HTML rendered when ``pages/page.html`` was loaded would be::    &lt;h1&gt;Title&lt;/h1&gt;    &lt;p&gt;A paragraph in app2, that wants to be on top of app1's main block&lt;/p&gt;    &lt;p&gt;A paragraph in app1&lt;/p&gt;    &lt;p&gt;A paragraph in the project's template directory, under the other main blocks&lt;/p&gt;    &lt;footer&gt;Copyright 2012&lt;/footer&gt;For a detailed analysis of why you would use this approach, how it works,and alternative approaches, read my initial blog post:`Circular Template Inheritance for Django`_Installation============The easiest way to install django-overextends is directly from PyPiusing `pip`_ by running the following command::    $ pip install -U django-overextendsOtherwise you can download django-overextends and install it directlyfrom source::    $ python setup.py installProject Configuration=====================Once installed you can configure your project to usedjango-overextends by adding the ``overextends`` app to the``INSTALLED_APPS`` in your project's ``settings`` module::    INSTALLED_APPS = (        # ... other apps here ...        'overextends',    )For Django 1.9+ you must add overextends to the `builtins` key of your `TEMPLATES` setting::    TEMPLATES = [        {            'BACKEND': 'django.template.backends.django.DjangoTemplates',            'APP_DIRS': True,            'OPTIONS': {                'builtins': ['overextends.templatetags.overextends_tags'],            }        },    ]Note that while the ``overextends`` tag is provided by the package``overextends.templatetags.overextends_tags``, it is unnecessary to use``{% load overextends_tags %}`` in your templates. Like the ``extends``tag, ``overextends`` must be the first tag in your template, so it isautomatically added to Django's built-in template tags, removing theneed to load its tag library in each template... _`Circular Template Inheritance for Django`: http://blog.jupo.org/2012/05/17/circular-template-inheritance-for-django/.. _`pip`: http://www.pip-installer.org/</longdescription>
</pkgmetadata>