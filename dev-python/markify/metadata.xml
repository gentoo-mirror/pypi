<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!--COLORS:302D41 (label)96CDFB (blue)DDB6F2 (pink)ABE9B3 (green)F8BD96 (orange)--&gt;&lt;br&gt;&lt;div align='center'&gt;   &lt;!-- &lt;img src=&quot;https://img.shields.io/github/stars/msr8/markify?color=FFBE0B&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=FB5607&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/github/last-commit/msr8/markify?color=FF006E&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/issues/msr8/markify?color=8338EC&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/github/license/msr8/markify?color=3A86FF&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;br&gt;&lt;br&gt;&lt;br&gt; --&gt;   &lt;img src=&quot;https://img.shields.io/github/stars/msr8/markify?color=F72585&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=7209B7&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/github/last-commit/msr8/markify?color=3A0CA3&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/issues/msr8/markify?color=4361EE&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/github/license/msr8/markify?color=4CC9F0&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;!-- &lt;br&gt;&lt;br&gt;&lt;br&gt;   &lt;img src=&quot;https://img.shields.io/github/stars/msr8/markify?color=CDB4DB&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=FFC8DD&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/github/last-commit/msr8/markify?color=FFAFCC&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/issues/msr8/markify?color=BDE0FE&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/github/license/msr8/markify?color=A2D2FF&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt; --&gt;   &lt;!-- &lt;br&gt;&lt;br&gt;&lt;br&gt;   &lt;img src=&quot;https://img.shields.io/github/stars/msr8/markify?color=F8BD96&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=048A81&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/github/last-commit/msr8/markify?color=DDB6F2&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/issues/msr8/markify?color=ABE9B3&amp;labelColor=302D41&amp;style=for-the-badge&quot;&gt;      &lt;img src=&quot;https://img.shields.io/github/license/msr8/markify?color=96CDFB&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt; --&gt;   &lt;!-- &lt;br&gt;&lt;br&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=69626D&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=AB4E68&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=305252&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=E36588&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=545454&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=048A81&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt;   &lt;img src=&quot;https://img.shields.io/pypi/v/markify?color=9D6381&amp;labelColor=302D41&amp;style=for-the-badge&quot;/&gt; --&gt;   &lt;br&gt;   &lt;!-- &lt;video controls&gt;         &lt;source src='https://raw.githubusercontent.com/msr8/markify/main/ass/usagelol.mp4' type=&quot;video/mp4&quot;&gt;lol    &lt;/video&gt; --&gt;&lt;/div&gt;&lt;!-- &lt;br&gt; --&gt;&lt;p align='center'&gt;&lt;a href='https://github.com/msr8/markify' &gt;Github&lt;/a&gt; |&lt;a href='https://pypi.org/project/markify'&gt;PyPi&lt;/a&gt;&lt;/p&gt;# Index* [Introduction](#introduction)* [Installation](#installation)* [Usage](#usage)* [Flags](#flags)* [How does this work?](#how-does-this-work)* [FAQs](#faqs)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;# IntroductionMarkify is an open source command line application written in python which scrapes data from your social media(s) (ie reddit, discord, and twitter for now) and generates new setences based on them using markov chains&lt;br&gt;&lt;br&gt;# InstallationThere are many methods to install markify on your device, such as:&lt;br&gt;## 1) Install the pip package***(Reccomended)***```bashpython -m pip install markify```## 2) Install it via pip and git```bashpython -m pip install git+https://github.com/msr8/markify.git```## 3) Clone the repo and install the package```bashgit clone https://github.com/msr8/markifycd markifypython setup.py install```## 4) Clone the repo and run markify without installing to PATH```bashgit clone https://github.com/msr8/markifycd markifypython -m pip install -r requirements.txtcd srcpython markify.py```&lt;br&gt;&lt;br&gt;# UsageTo use, you can simply just run `markify` on the command line, but we gotta setup a config file first. If you're windows, the default location for the config file is `%LOCALAPPDATA%\markify\config.json`, and on linux/macOS it is `~/.config/markify/config.json`. Alterantively, you can provide the path to the config file using the `-c --config` flag. If you run the program and the config file doesn't exist, it makes an empty template. An ideal config file should look like:```json{    &quot;reddit&quot;: {        &quot;username&quot;     : &quot;...&quot;    },    &quot;discord&quot;: {        &quot;token&quot;        : &quot;...&quot;    },    &quot;twitter&quot;: {        &quot;username&quot;     : &quot;...&quot;    }}```where the username under reddit section is your reddit username, token under discord is your discord token, and username under twitter is your twitter username. If any of them are not given, the program will skip the collection process for that social media&lt;br&gt;&lt;br&gt;# FlagsYou can view the available flags by running `markify --help`. It should show the following text:```  -h, --help            show this help message and exit  -c CONFIG, --config CONFIG                        The path to config file. By default, its {LOCALAPPDATA}/markify/config.json on                        windows, and ~/.config/markify/config.json on other operating systems  -d DATA, --data DATA  The path to the json data file. If given, the program will not scrape any data and                        will just compile the model and generate sentences  -n NUMBER, --number NUMBER                        Number of sentences to generate. Default is 50  -v, --version         Print out the version number```More explanation is given below:&lt;br&gt;## -c --configThis is the path to the config file (config.json). By default, its `{LOCALAPPDATA}/markify/config.json` on windows, and `~/.config/markify/config.json` on other operating systems. For example:```bashmarkify -c /Users/tyrell/Documents/config.json```## -d --dataThis is the path to the data file containing all the scraped content. If it is given, the program doesn't scrape any data and just complies a model based on the data present in the file. By default, a new data file is generated in the `DATA` folder in the config folder and is named `x.json` where `x` is the current epoch time in seconds. For example:```bashmarkify -d /Users/tyrell/.config/markify/DATA/1658433988.json```## -n --numberThis is the number of sentences to generate after compiling the model. Default is 50. For example:```bashmarkify -n 20```## -v --versionPrint out the version of markify you're using via this flag. For example:```bashmarkify -v```&lt;br&gt;&lt;br&gt;# How does this work?This program has 4 main parts: Scraping reddit comments, scraping discord messages, scraping tweets, generating sentences using markov chains. More explanation is given below&lt;br&gt;## Scraping reddit commentsThe program uses the [Pushshift's API](https://github.com/pushshift/api) to scrape your comments. Since Pushshift can only return 100 comments at a time, the program gets the timestamp of the oldest comment and then sends a request to the API to get comments before that timestamp. This loop goes on until either all your comments are scraped, or 10000 comments are scraped. I chose to use Pushshift's API since its faster, yeilds more result, and doesnt need a client ID or secret&lt;br&gt;## Scraping discord messagesTo scrape discord messages, first the program checks if the token is valid or not by getting basic information (username, discriminator, and account ID) through the `/users/@me` endpoint. Then it gets all the DM channels you have participated in through the `/@me/channels` endpoint. Then it extracts the channel IDs from the response and gets the recent 100 messages in the channels using the `/channels/channelid/messages` endpoint, where `channelid` is the channel ID. Then it goes through the respone and adds the messages which are a text message, sent by you, and arent empty, to the data file&lt;br&gt;## Scraping tweetsThe program uses the [snscrape](https://github.com/JustAnotherArchivist/snscrape) module to scrape your tweets. The program keeps scraping your tweets until either it has scraped all the tweets, or has scraped 10000 tweets&lt;br&gt;## Generating sentences using markov chainsThe program extracts all the useful texts from the data file and makes a markov chain model based on them using the [markovify](https://github.com/jsvine/markovify) module. Then the program generates new sentences (default being 50) and prints them out&lt;br&gt;&lt;br&gt;# FAQs&lt;br&gt;### Q) How do I get my discord token?Recently (as of July 2022), discord reworked its system of tokens and the format of the new tokes is a bit different. You can obtain your discord token using this [guide](https://www.androidauthority.com/get-discord-token-3149920/)&lt;br&gt;### Q) The program is throwing an error and is telling me to install &quot;averaged_perceptron_tagger&quot; or something. What to do?Running the command given below should work```bashpython3 -c &quot;import nltk; nltk.download('averaged_perceptron_tagger')&quot;```You can visit [this page](https://www.nltk.org/data.html) for more information&lt;br&gt;### Q) The installation is stuck at building lxml. What to do?Sadly, all you can do is wait. It is a [known issue with lxml](https://stackoverflow.com/questions/33064433/lxml-will-never-finish-building-on-ubuntu)&lt;!-- TODO-&gt; Convert the video to a video tag in setup.py--&gt;</longdescription>
</pkgmetadata>