<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># MyPy Merge Experimentation LibraryA library for developing Merge experiments in Python## Hello world```pythonimport mergexp as mxfrom mx.unit import gb, ms, mbpsfrom mx.machine import cores, memoryfrom mx.net import capacity, latency# define a topologytopo = mx.Topology('hello mx')# make some devicesa = topo.device('a', cores &gt; 2, memory &lt;= gb(4))b = topo.device('b', cores &lt; 6, memory &gt;= gb(4))# connect devicestopo.connect([a, b], capacity &lt; mbps(100), latency &gt; ms(5))```## Hello mobile```pythonimport mergexp as mxfrom mx.stochastic import normal, poissonfrom mx.unit import gb, ms, mbpsfrom mx.machine import cores, memory, arch, armv7, x86_64from mx.net import capacity, latencyfrom mx.mobile import collision, migration# define a topologytopo = mx.Topology('hello mobile')# define a few device typesdef mobile(name):    return topo.device(        name,         cores == 1,         memory &lt; gb(2),         arch == armv7,    )def server(name):    return topo.device(        name,        cores &gt;= 8,        memory &gt;= gb(8),        arch == x86_64,    )# instantiate devicesmobiles = [mobile('m%d'%i) for i in range(47)]servers = [server(name) for name in ['s0', 's1']]nodes = mobiles + servers# connect devicesnet = topo.connect(nodes,     latency == normal(mean=ms(5), variance=1.0),    capacity == normal(mean=mbps(15), variance=0.3),    collision == poisson(rate=47),     migration == poisson(rate=10),)```</longdescription>
</pkgmetadata>