<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![build status](https://github.com/asottile/setup-py-upgrade/actions/workflows/main.yml/badge.svg)](https://github.com/asottile/setup-py-upgrade/actions/workflows/main.yml)[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/asottile/setup-py-upgrade/main.svg)](https://results.pre-commit.ci/latest/github/asottile/setup-py-upgrade/main)setup-py-upgrade================upgrade a setup.py to declarative metadata## installation```bashpip install setup-py-upgrade```## cliConsult the help for the latest usage:```console$ setup-py-upgrade --helpusage: setup-py-upgrade [-h] directorypositional arguments:  directoryoptional arguments:  -h, --help  show this help message and exit```pass the root directory of the repository you'd like to convertthe script overwrites `setup.py` and `setup.cfg` when run## sample output```console$ setup-py-upgrade ../pre-commit../pre-commit/setup.py and ../pre-commit/setup.cfg written!$ tail -n999 ../pre-commit/setup.{py,cfg}==&gt; ../pre-commit/setup.py &lt;==from setuptools import setupsetup()==&gt; ../pre-commit/setup.cfg &lt;==[metadata]name = pre_commitdescription = A framework for managing and maintaining multi-language pre-commit hooks.long_description = file: README.mdlong_description_content_type = text/markdownurl = https://github.com/pre-commit/pre-commitversion = 1.14.2author = Anthony Sottileauthor_email = asottile@umich.educlassifiers =    License :: OSI Approved :: MIT License    Programming Language :: Python :: 2    Programming Language :: Python :: 2.7    Programming Language :: Python :: 3    Programming Language :: Python :: 3.6    Programming Language :: Python :: 3.7    Programming Language :: Python :: Implementation :: CPython    Programming Language :: Python :: Implementation :: PyPy[options]packages = find:install_requires =    aspy.yaml    cfgv&gt;=1.4.0    identify&gt;=1.0.0    importlib-metadata    nodeenv&gt;=0.11.1    pyyaml    six    toml    virtualenv    futures; python_version&lt;&quot;3.2&quot;    importlib-resources; python_version&lt;&quot;3.7&quot;[options.packages.find]exclude =    tests*    testing*[options.entry_points]console_scripts =    pre-commit = pre_commit.main:main    pre-commit-validate-config = pre_commit.clientlib:validate_config_main    pre-commit-validate-manifest = pre_commit.clientlib:validate_manifest_main[options.package_data]pre_commit.resources =    *.tar.gz    empty_template_*    hook-tmpl[bdist_wheel]universal = True```## what versions of setuptools / pip does the output work with?- `pip&gt;=1.5` (when installing from a wheel)    - released 2014-01-02- `setuptools&gt;=30.3` (when building from source)    - released 2016-12-08- `virtualenv&gt;=15.2` (to get a sufficient setuptools via `--no-download`)   - released 2018-03-21## what is not supporteddeclarative metadata does not support `ext_modules` or setuptools plugins --those must stay in `setup.py`.  If you're converting a project which uses oneof those, you'll see a message like:```console$ setup-py-upgrade ../future-breakpoint/ext_modules= is not supported in setup.cfg```To convert those, temporarily remove the offending constructs from `setup.py`,then run `setup-py-upgrade`, then paste them back into the file.## related projects- [setup-cfg-fmt]: apply a consistent format to `setup.cfg` files[setup-cfg-fmt]: https://github.com/asottile/setup-cfg-fmt</longdescription>
</pkgmetadata>