<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;a id=&quot;mypy-boto3-elasticache&quot;&gt;&lt;/a&gt;# mypy-boto3-elasticache[![PyPI - mypy-boto3-elasticache](https://img.shields.io/pypi/v/mypy-boto3-elasticache.svg?color=blue)](https://pypi.org/project/mypy-boto3-elasticache)[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-elasticache.svg?color=blue)](https://pypi.org/project/mypy-boto3-elasticache)[![Docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_elasticache/)[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-elasticache?color=blue)](https://pypistats.org/packages/mypy-boto3-elasticache)![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)Type annotations for[boto3.ElastiCache 1.28.0](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/elasticache.html#ElastiCache)service compatible with [VSCode](https://code.visualstudio.com/),[PyCharm](https://www.jetbrains.com/pycharm/),[Emacs](https://www.gnu.org/software/emacs/),[Sublime Text](https://www.sublimetext.com/),[mypy](https://github.com/python/mypy),[pyright](https://github.com/microsoft/pyright) and other tools.Generated by[mypy-boto3-builder 7.14.5](https://github.com/youtype/mypy_boto3_builder).More information can be found on[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in[mypy-boto3-elasticache docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_elasticache/).See how it helps to find and fix potential bugs:![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)- [mypy-boto3-elasticache](#mypy-boto3-elasticache)  - [How to install](#how-to-install)    - [VSCode extension](#vscode-extension)    - [From PyPI with pip](#from-pypi-with-pip)  - [How to uninstall](#how-to-uninstall)  - [Usage](#usage)    - [VSCode](#vscode)    - [PyCharm](#pycharm)    - [Emacs](#emacs)    - [Sublime Text](#sublime-text)    - [Other IDEs](#other-ides)    - [mypy](#mypy)    - [pyright](#pyright)  - [Explicit type annotations](#explicit-type-annotations)    - [Client annotations](#client-annotations)    - [Paginators annotations](#paginators-annotations)    - [Waiters annotations](#waiters-annotations)    - [Literals](#literals)    - [Typed dictionaries](#typed-dictionaries)  - [How it works](#how-it-works)  - [What's new](#what's-new)    - [Implemented features](#implemented-features)    - [Latest changes](#latest-changes)  - [Versioning](#versioning)  - [Thank you](#thank-you)  - [Documentation](#documentation)  - [Support and contributing](#support-and-contributing)&lt;a id=&quot;how-to-install&quot;&gt;&lt;/a&gt;## How to install&lt;a id=&quot;vscode-extension&quot;&gt;&lt;/a&gt;### VSCode extensionAdd[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)extension to your VSCode and run `AWS boto3: Quick Start` command.Click `Modify` and select `boto3 common` and `ElastiCache`.&lt;a id=&quot;from-pypi-with-pip&quot;&gt;&lt;/a&gt;### From PyPI with pipInstall `boto3-stubs` for `ElastiCache` service.```bash# install with boto3 type annotationspython -m pip install 'boto3-stubs[elasticache]'# Lite version does not provide session.client/resource overloads# it is more RAM-friendly, but requires explicit type annotationspython -m pip install 'boto3-stubs-lite[elasticache]'# standalone installationpython -m pip install mypy-boto3-elasticache```&lt;a id=&quot;how-to-uninstall&quot;&gt;&lt;/a&gt;## How to uninstall```bashpython -m pip uninstall -y mypy-boto3-elasticache```&lt;a id=&quot;usage&quot;&gt;&lt;/a&gt;## Usage&lt;a id=&quot;vscode&quot;&gt;&lt;/a&gt;### VSCode- Install  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)- Install  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)- Set `Pylance` as your Python Language Server- Install `boto3-stubs[elasticache]` in your environment:```bashpython -m pip install 'boto3-stubs[elasticache]'```Both type checking and code completion should now work. No explicit typeannotations required, write your `boto3` code as usual.&lt;a id=&quot;pycharm&quot;&gt;&lt;/a&gt;### PyCharmInstall `boto3-stubs-lite[elasticache]` in your environment:```bashpython -m pip install 'boto3-stubs-lite[elasticache]'````Both type checking and code completion should now work. Explicit typeannotations **are required**.Use `boto3-stubs` package instead for implicit type discovery.&lt;a id=&quot;emacs&quot;&gt;&lt;/a&gt;### Emacs- Install `boto3-stubs` with services you use in your environment:```bashpython -m pip install 'boto3-stubs[elasticache]'```- Install [use-package](https://github.com/jwiegley/use-package),  [lsp](https://github.com/emacs-lsp/lsp-mode/),  [company](https://github.com/company-mode/company-mode) and  [flycheck](https://github.com/flycheck/flycheck) packages- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package```elisp(use-package lsp-pyright  :ensure t  :hook (python-mode . (lambda ()                          (require 'lsp-pyright)                          (lsp)))  ; or lsp-deferred  :init (when (executable-find &quot;python3&quot;)          (setq lsp-pyright-python-executable-cmd &quot;python3&quot;))  )```- Make sure emacs uses the environment where you have installed `boto3-stubs`Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;sublime-text&quot;&gt;&lt;/a&gt;### Sublime Text- Install `boto3-stubs[elasticache]` with services you use in your environment:```bashpython -m pip install 'boto3-stubs[elasticache]'```- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) packageType checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;other-ides&quot;&gt;&lt;/a&gt;### Other IDEsNot tested, but as long as your IDE supports `mypy` or `pyright`, everythingshould work.&lt;a id=&quot;mypy&quot;&gt;&lt;/a&gt;### mypy- Install `mypy`: `python -m pip install mypy`- Install `boto3-stubs[elasticache]` in your environment:```bashpython -m pip install 'boto3-stubs[elasticache]'````Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;pyright&quot;&gt;&lt;/a&gt;### pyright- Install `pyright`: `npm i -g pyright`- Install `boto3-stubs[elasticache]` in your environment:```bashpython -m pip install 'boto3-stubs[elasticache]'```Optionally, you can install `boto3-stubs` to `typings` folder.Type checking should now work. No explicit type annotations required, writeyour `boto3` code as usual.&lt;a id=&quot;explicit-type-annotations&quot;&gt;&lt;/a&gt;## Explicit type annotations&lt;a id=&quot;client-annotations&quot;&gt;&lt;/a&gt;### Client annotations`ElastiCacheClient` provides annotations for `boto3.client(&quot;elasticache&quot;)`.```pythonfrom boto3.session import Sessionfrom mypy_boto3_elasticache import ElastiCacheClientclient: ElastiCacheClient = Session().client(&quot;elasticache&quot;)# now client usage is checked by mypy and IDE should provide code completion```&lt;a id=&quot;paginators-annotations&quot;&gt;&lt;/a&gt;### Paginators annotations`mypy_boto3_elasticache.paginator` module contains type annotations for allpaginators.```pythonfrom boto3.session import Sessionfrom mypy_boto3_elasticache import ElastiCacheClientfrom mypy_boto3_elasticache.paginator import (    DescribeCacheClustersPaginator,    DescribeCacheEngineVersionsPaginator,    DescribeCacheParameterGroupsPaginator,    DescribeCacheParametersPaginator,    DescribeCacheSecurityGroupsPaginator,    DescribeCacheSubnetGroupsPaginator,    DescribeEngineDefaultParametersPaginator,    DescribeEventsPaginator,    DescribeGlobalReplicationGroupsPaginator,    DescribeReplicationGroupsPaginator,    DescribeReservedCacheNodesPaginator,    DescribeReservedCacheNodesOfferingsPaginator,    DescribeServiceUpdatesPaginator,    DescribeSnapshotsPaginator,    DescribeUpdateActionsPaginator,    DescribeUserGroupsPaginator,    DescribeUsersPaginator,)client: ElastiCacheClient = Session().client(&quot;elasticache&quot;)# Explicit type annotations are optional here# Types should be correctly discovered by mypy and IDEsdescribe_cache_clusters_paginator: DescribeCacheClustersPaginator = client.get_paginator(    &quot;describe_cache_clusters&quot;)describe_cache_engine_versions_paginator: DescribeCacheEngineVersionsPaginator = (    client.get_paginator(&quot;describe_cache_engine_versions&quot;))describe_cache_parameter_groups_paginator: DescribeCacheParameterGroupsPaginator = (    client.get_paginator(&quot;describe_cache_parameter_groups&quot;))describe_cache_parameters_paginator: DescribeCacheParametersPaginator = client.get_paginator(    &quot;describe_cache_parameters&quot;)describe_cache_security_groups_paginator: DescribeCacheSecurityGroupsPaginator = (    client.get_paginator(&quot;describe_cache_security_groups&quot;))describe_cache_subnet_groups_paginator: DescribeCacheSubnetGroupsPaginator = client.get_paginator(    &quot;describe_cache_subnet_groups&quot;)describe_engine_default_parameters_paginator: DescribeEngineDefaultParametersPaginator = (    client.get_paginator(&quot;describe_engine_default_parameters&quot;))describe_events_paginator: DescribeEventsPaginator = client.get_paginator(&quot;describe_events&quot;)describe_global_replication_groups_paginator: DescribeGlobalReplicationGroupsPaginator = (    client.get_paginator(&quot;describe_global_replication_groups&quot;))describe_replication_groups_paginator: DescribeReplicationGroupsPaginator = client.get_paginator(    &quot;describe_replication_groups&quot;)describe_reserved_cache_nodes_paginator: DescribeReservedCacheNodesPaginator = client.get_paginator(    &quot;describe_reserved_cache_nodes&quot;)describe_reserved_cache_nodes_offerings_paginator: DescribeReservedCacheNodesOfferingsPaginator = (    client.get_paginator(&quot;describe_reserved_cache_nodes_offerings&quot;))describe_service_updates_paginator: DescribeServiceUpdatesPaginator = client.get_paginator(    &quot;describe_service_updates&quot;)describe_snapshots_paginator: DescribeSnapshotsPaginator = client.get_paginator(    &quot;describe_snapshots&quot;)describe_update_actions_paginator: DescribeUpdateActionsPaginator = client.get_paginator(    &quot;describe_update_actions&quot;)describe_user_groups_paginator: DescribeUserGroupsPaginator = client.get_paginator(    &quot;describe_user_groups&quot;)describe_users_paginator: DescribeUsersPaginator = client.get_paginator(&quot;describe_users&quot;)```&lt;a id=&quot;waiters-annotations&quot;&gt;&lt;/a&gt;### Waiters annotations`mypy_boto3_elasticache.waiter` module contains type annotations for allwaiters.```pythonfrom boto3.session import Sessionfrom mypy_boto3_elasticache import ElastiCacheClientfrom mypy_boto3_elasticache.waiter import (    CacheClusterAvailableWaiter,    CacheClusterDeletedWaiter,    ReplicationGroupAvailableWaiter,    ReplicationGroupDeletedWaiter,)client: ElastiCacheClient = Session().client(&quot;elasticache&quot;)# Explicit type annotations are optional here# Types should be correctly discovered by mypy and IDEscache_cluster_available_waiter: CacheClusterAvailableWaiter = client.get_waiter(    &quot;cache_cluster_available&quot;)cache_cluster_deleted_waiter: CacheClusterDeletedWaiter = client.get_waiter(&quot;cache_cluster_deleted&quot;)replication_group_available_waiter: ReplicationGroupAvailableWaiter = client.get_waiter(    &quot;replication_group_available&quot;)replication_group_deleted_waiter: ReplicationGroupDeletedWaiter = client.get_waiter(    &quot;replication_group_deleted&quot;)```&lt;a id=&quot;literals&quot;&gt;&lt;/a&gt;### Literals`mypy_boto3_elasticache.literals` module contains literals extracted fromshapes that can be used in user code for type checking.```pythonfrom mypy_boto3_elasticache.literals import (    AZModeType,    AuthTokenUpdateStatusType,    AuthTokenUpdateStrategyTypeType,    AuthenticationTypeType,    AutomaticFailoverStatusType,    CacheClusterAvailableWaiterName,    CacheClusterDeletedWaiterName,    ChangeTypeType,    ClusterModeType,    DataTieringStatusType,    DescribeCacheClustersPaginatorName,    DescribeCacheEngineVersionsPaginatorName,    DescribeCacheParameterGroupsPaginatorName,    DescribeCacheParametersPaginatorName,    DescribeCacheSecurityGroupsPaginatorName,    DescribeCacheSubnetGroupsPaginatorName,    DescribeEngineDefaultParametersPaginatorName,    DescribeEventsPaginatorName,    DescribeGlobalReplicationGroupsPaginatorName,    DescribeReplicationGroupsPaginatorName,    DescribeReservedCacheNodesOfferingsPaginatorName,    DescribeReservedCacheNodesPaginatorName,    DescribeServiceUpdatesPaginatorName,    DescribeSnapshotsPaginatorName,    DescribeUpdateActionsPaginatorName,    DescribeUserGroupsPaginatorName,    DescribeUsersPaginatorName,    DestinationTypeType,    InputAuthenticationTypeType,    IpDiscoveryType,    LogDeliveryConfigurationStatusType,    LogFormatType,    LogTypeType,    MultiAZStatusType,    NetworkTypeType,    NodeUpdateInitiatedByType,    NodeUpdateStatusType,    OutpostModeType,    PendingAutomaticFailoverStatusType,    ReplicationGroupAvailableWaiterName,    ReplicationGroupDeletedWaiterName,    ServiceUpdateSeverityType,    ServiceUpdateStatusType,    ServiceUpdateTypeType,    SlaMetType,    SourceTypeType,    TransitEncryptionModeType,    UpdateActionStatusType,    ElastiCacheServiceName,    ServiceName,    ResourceServiceName,    PaginatorName,    WaiterName,    RegionName,)def check_value(value: AZModeType) -&gt; bool:    ...```&lt;a id=&quot;typed-dictionaries&quot;&gt;&lt;/a&gt;### Typed dictionaries`mypy_boto3_elasticache.type_defs` module contains structures and shapesassembled to typed dictionaries for additional type checking.```pythonfrom mypy_boto3_elasticache.type_defs import (    TagTypeDef,    AllowedNodeTypeModificationsMessageTypeDef,    AuthenticationModeTypeDef,    AuthenticationTypeDef,    AuthorizeCacheSecurityGroupIngressMessageRequestTypeDef,    AvailabilityZoneTypeDef,    BatchApplyUpdateActionMessageRequestTypeDef,    BatchStopUpdateActionMessageRequestTypeDef,    CacheParameterGroupStatusTypeDef,    CacheSecurityGroupMembershipTypeDef,    EndpointTypeDef,    NotificationConfigurationTypeDef,    SecurityGroupMembershipTypeDef,    CacheEngineVersionTypeDef,    CacheNodeTypeSpecificValueTypeDef,    CacheNodeUpdateStatusTypeDef,    ParameterTypeDef,    CacheParameterGroupNameMessageTypeDef,    CacheParameterGroupTypeDef,    EC2SecurityGroupTypeDef,    CloudWatchLogsDestinationDetailsTypeDef,    CompleteMigrationMessageRequestTypeDef,    ConfigureShardTypeDef,    CreateGlobalReplicationGroupMessageRequestTypeDef,    NodeGroupConfigurationTypeDef,    CustomerNodeEndpointTypeDef,    DecreaseNodeGroupsInGlobalReplicationGroupMessageRequestTypeDef,    DeleteCacheClusterMessageRequestTypeDef,    DeleteCacheParameterGroupMessageRequestTypeDef,    DeleteCacheSecurityGroupMessageRequestTypeDef,    DeleteCacheSubnetGroupMessageRequestTypeDef,    DeleteGlobalReplicationGroupMessageRequestTypeDef,    DeleteReplicationGroupMessageRequestTypeDef,    DeleteSnapshotMessageRequestTypeDef,    DeleteUserGroupMessageRequestTypeDef,    DeleteUserMessageRequestTypeDef,    WaiterConfigTypeDef,    DescribeCacheClustersMessageDescribeCacheClustersPaginateTypeDef,    DescribeCacheClustersMessageRequestTypeDef,    DescribeCacheEngineVersionsMessageDescribeCacheEngineVersionsPaginateTypeDef,    DescribeCacheEngineVersionsMessageRequestTypeDef,    DescribeCacheParameterGroupsMessageDescribeCacheParameterGroupsPaginateTypeDef,    DescribeCacheParameterGroupsMessageRequestTypeDef,    DescribeCacheParametersMessageDescribeCacheParametersPaginateTypeDef,    DescribeCacheParametersMessageRequestTypeDef,    DescribeCacheSecurityGroupsMessageDescribeCacheSecurityGroupsPaginateTypeDef,    DescribeCacheSecurityGroupsMessageRequestTypeDef,    DescribeCacheSubnetGroupsMessageDescribeCacheSubnetGroupsPaginateTypeDef,    DescribeCacheSubnetGroupsMessageRequestTypeDef,    DescribeEngineDefaultParametersMessageDescribeEngineDefaultParametersPaginateTypeDef,    DescribeEngineDefaultParametersMessageRequestTypeDef,    DescribeEventsMessageDescribeEventsPaginateTypeDef,    DescribeEventsMessageRequestTypeDef,    DescribeGlobalReplicationGroupsMessageDescribeGlobalReplicationGroupsPaginateTypeDef,    DescribeGlobalReplicationGroupsMessageRequestTypeDef,    DescribeReplicationGroupsMessageDescribeReplicationGroupsPaginateTypeDef,    DescribeReplicationGroupsMessageRequestTypeDef,    DescribeReservedCacheNodesMessageDescribeReservedCacheNodesPaginateTypeDef,    DescribeReservedCacheNodesMessageRequestTypeDef,    DescribeReservedCacheNodesOfferingsMessageDescribeReservedCacheNodesOfferingsPaginateTypeDef,    DescribeReservedCacheNodesOfferingsMessageRequestTypeDef,    DescribeServiceUpdatesMessageDescribeServiceUpdatesPaginateTypeDef,    DescribeServiceUpdatesMessageRequestTypeDef,    DescribeSnapshotsMessageDescribeSnapshotsPaginateTypeDef,    DescribeSnapshotsMessageRequestTypeDef,    TimeRangeFilterTypeDef,    DescribeUserGroupsMessageDescribeUserGroupsPaginateTypeDef,    DescribeUserGroupsMessageRequestTypeDef,    FilterTypeDef,    KinesisFirehoseDestinationDetailsTypeDef,    DisassociateGlobalReplicationGroupMessageRequestTypeDef,    EmptyResponseMetadataTypeDef,    EventTypeDef,    FailoverGlobalReplicationGroupMessageRequestTypeDef,    GlobalNodeGroupTypeDef,    GlobalReplicationGroupInfoTypeDef,    GlobalReplicationGroupMemberTypeDef,    ListAllowedNodeTypeModificationsMessageRequestTypeDef,    ListTagsForResourceMessageRequestTypeDef,    ParameterNameValueTypeDef,    ModifyCacheSubnetGroupMessageRequestTypeDef,    ModifyGlobalReplicationGroupMessageRequestTypeDef,    ReshardingConfigurationTypeDef,    ModifyUserGroupMessageRequestTypeDef,    NodeGroupMemberUpdateStatusTypeDef,    PaginatorConfigTypeDef,    ProcessedUpdateActionTypeDef,    RebalanceSlotsInGlobalReplicationGroupMessageRequestTypeDef,    RebootCacheClusterMessageRequestTypeDef,    RecurringChargeTypeDef,    RemoveTagsFromResourceMessageRequestTypeDef,    UserGroupsUpdateStatusTypeDef,    SlotMigrationTypeDef,    ResponseMetadataTypeDef,    RevokeCacheSecurityGroupIngressMessageRequestTypeDef,    ServiceUpdateTypeDef,    SubnetOutpostTypeDef,    TestFailoverMessageRequestTypeDef,    UnprocessedUpdateActionTypeDef,    UserGroupPendingChangesTypeDef,    AddTagsToResourceMessageRequestTypeDef,    CopySnapshotMessageRequestTypeDef,    CreateCacheParameterGroupMessageRequestTypeDef,    CreateCacheSecurityGroupMessageRequestTypeDef,    CreateCacheSubnetGroupMessageRequestTypeDef,    CreateSnapshotMessageRequestTypeDef,    CreateUserGroupMessageRequestTypeDef,    PurchaseReservedCacheNodesOfferingMessageRequestTypeDef,    TagListMessageTypeDef,    CreateUserMessageRequestTypeDef,    ModifyUserMessageRequestTypeDef,    UserResponseMetadataTypeDef,    UserTypeDef,    CacheNodeTypeDef,    NodeGroupMemberTypeDef,    CacheEngineVersionMessageTypeDef,    CacheNodeTypeSpecificParameterTypeDef,    CacheParameterGroupsMessageTypeDef,    CreateCacheParameterGroupResultTypeDef,    CacheSecurityGroupTypeDef,    DecreaseReplicaCountMessageRequestTypeDef,    IncreaseReplicaCountMessageRequestTypeDef,    NodeSnapshotTypeDef,    StartMigrationMessageRequestTypeDef,    DescribeCacheClustersMessageCacheClusterAvailableWaitTypeDef,    DescribeCacheClustersMessageCacheClusterDeletedWaitTypeDef,    DescribeReplicationGroupsMessageReplicationGroupAvailableWaitTypeDef,    DescribeReplicationGroupsMessageReplicationGroupDeletedWaitTypeDef,    DescribeUpdateActionsMessageDescribeUpdateActionsPaginateTypeDef,    DescribeUpdateActionsMessageRequestTypeDef,    DescribeUsersMessageDescribeUsersPaginateTypeDef,    DescribeUsersMessageRequestTypeDef,    DestinationDetailsTypeDef,    EventsMessageTypeDef,    GlobalReplicationGroupTypeDef,    ModifyCacheParameterGroupMessageRequestTypeDef,    ResetCacheParameterGroupMessageRequestTypeDef,    ModifyReplicationGroupShardConfigurationMessageRequestTypeDef,    RegionalConfigurationTypeDef,    NodeGroupUpdateStatusTypeDef,    ReservedCacheNodeTypeDef,    ReservedCacheNodesOfferingTypeDef,    ReshardingStatusTypeDef,    ServiceUpdatesMessageTypeDef,    SubnetTypeDef,    UpdateActionResultsMessageTypeDef,    UserGroupResponseMetadataTypeDef,    UserGroupTypeDef,    DescribeUsersResultTypeDef,    NodeGroupTypeDef,    CacheParameterGroupDetailsTypeDef,    EngineDefaultsTypeDef,    AuthorizeCacheSecurityGroupIngressResultTypeDef,    CacheSecurityGroupMessageTypeDef,    CreateCacheSecurityGroupResultTypeDef,    RevokeCacheSecurityGroupIngressResultTypeDef,    SnapshotTypeDef,    LogDeliveryConfigurationRequestTypeDef,    LogDeliveryConfigurationTypeDef,    PendingLogDeliveryConfigurationTypeDef,    CreateGlobalReplicationGroupResultTypeDef,    DecreaseNodeGroupsInGlobalReplicationGroupResultTypeDef,    DeleteGlobalReplicationGroupResultTypeDef,    DescribeGlobalReplicationGroupsResultTypeDef,    DisassociateGlobalReplicationGroupResultTypeDef,    FailoverGlobalReplicationGroupResultTypeDef,    IncreaseNodeGroupsInGlobalReplicationGroupResultTypeDef,    ModifyGlobalReplicationGroupResultTypeDef,    RebalanceSlotsInGlobalReplicationGroupResultTypeDef,    IncreaseNodeGroupsInGlobalReplicationGroupMessageRequestTypeDef,    UpdateActionTypeDef,    PurchaseReservedCacheNodesOfferingResultTypeDef,    ReservedCacheNodeMessageTypeDef,    ReservedCacheNodesOfferingMessageTypeDef,    CacheSubnetGroupTypeDef,    DescribeUserGroupsResultTypeDef,    DescribeEngineDefaultParametersResultTypeDef,    CopySnapshotResultTypeDef,    CreateSnapshotResultTypeDef,    DeleteSnapshotResultTypeDef,    DescribeSnapshotsListMessageTypeDef,    CreateCacheClusterMessageRequestTypeDef,    CreateReplicationGroupMessageRequestTypeDef,    ModifyCacheClusterMessageRequestTypeDef,    ModifyReplicationGroupMessageRequestTypeDef,    PendingModifiedValuesTypeDef,    ReplicationGroupPendingModifiedValuesTypeDef,    UpdateActionsMessageTypeDef,    CacheSubnetGroupMessageTypeDef,    CreateCacheSubnetGroupResultTypeDef,    ModifyCacheSubnetGroupResultTypeDef,    CacheClusterTypeDef,    ReplicationGroupTypeDef,    CacheClusterMessageTypeDef,    CreateCacheClusterResultTypeDef,    DeleteCacheClusterResultTypeDef,    ModifyCacheClusterResultTypeDef,    RebootCacheClusterResultTypeDef,    CompleteMigrationResponseTypeDef,    CreateReplicationGroupResultTypeDef,    DecreaseReplicaCountResultTypeDef,    DeleteReplicationGroupResultTypeDef,    IncreaseReplicaCountResultTypeDef,    ModifyReplicationGroupResultTypeDef,    ModifyReplicationGroupShardConfigurationResultTypeDef,    ReplicationGroupMessageTypeDef,    StartMigrationResponseTypeDef,    TestFailoverResultTypeDef,)def get_structure() -&gt; TagTypeDef:    return {...}```&lt;a id=&quot;how-it-works&quot;&gt;&lt;/a&gt;## How it worksFully automated[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefullygenerates type annotations for each service, patiently waiting for `boto3`updates. It delivers drop-in type annotations for you and makes sure that:- All available `boto3` services are covered.- Each public class and method of every `boto3` service gets valid type  annotations extracted from `botocore` schemas.- Type annotations include up-to-date documentation.- Link to documentation is provided for every method.- Code is processed by [black](https://github.com/psf/black) and  [isort](https://github.com/PyCQA/isort) for readability.&lt;a id=&quot;what's-new&quot;&gt;&lt;/a&gt;## What's new&lt;a id=&quot;implemented-features&quot;&gt;&lt;/a&gt;### Implemented features- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`  libraries- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`  compatibility- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type  annotations for each service- Generated `TypeDefs` for each service- Generated `Literals` for each service- Auto discovery of types for `boto3.client` and `boto3.resource` calls- Auto discovery of types for `session.client` and `session.resource` calls- Auto discovery of types for `client.get_waiter` and `client.get_paginator`  calls- Auto discovery of types for `ServiceResource` and `Resource` collections- Auto discovery of types for `aiobotocore.Session.create_client` calls&lt;a id=&quot;latest-changes&quot;&gt;&lt;/a&gt;### Latest changesBuilder changelog can be found in[Releases](https://github.com/youtype/mypy_boto3_builder/releases).&lt;a id=&quot;versioning&quot;&gt;&lt;/a&gt;## Versioning`mypy-boto3-elasticache` version is the same as related `boto3` version andfollows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.&lt;a id=&quot;thank-you&quot;&gt;&lt;/a&gt;## Thank you- [Allie Fitter](https://github.com/alliefitter) for  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),  this package is based on top of his work- [black](https://github.com/psf/black) developers for an awesome formatting  tool- [Timothy Edmund Crosley](https://github.com/timothycrosley) for  [isort](https://github.com/PyCQA/isort) and how flexible it is- [mypy](https://github.com/python/mypy) developers for doing all dirty work  for us- [pyright](https://github.com/microsoft/pyright) team for the new era of typed  Python&lt;a id=&quot;documentation&quot;&gt;&lt;/a&gt;## DocumentationAll services type annotations can be found in[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_elasticache/)&lt;a id=&quot;support-and-contributing&quot;&gt;&lt;/a&gt;## Support and contributingThis package is auto-generated. Please reports any bugs or request new featuresin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)repository.</longdescription>
</pkgmetadata>