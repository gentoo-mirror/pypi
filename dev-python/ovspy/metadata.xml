<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ovspyOpen vSwitch Library written in Python  [ovspy Â· PyPI](https://pypi.org/project/ovspy/)## Supported Operation- Bridge  - Get(name, uuid, port)  - Add  - Delete- Port  - Get(name, uuid, vlan)  - Add(with VLAN)  - Delete## install```pip install ovspy```## Getting Started### Configure Open vSwitch ManagerThis library manipulate Open vSwitch by access OVSDB  You need to configure OVSDB manager port to manipulate OVSDB from ovspy via TCP.```sudo ovs-vsctl set-manager ptcp:5678```### Bridge```import ovspy.clientovs = ovspy.client.OvsClient(5678)#Get exist all bridges#This function return list of OvsBridge instancefor br in ovs.get_bridges():    print(br.get_name())#Find bridge by bridge name#This function return OvsBridge instance#If specified bridge is not found, the function return Nonebridge = ovs.find_bridge(&quot;br0&quot;)print(bridge.get_name())#Add bridge#If specified bridge is already exist, This function raise ovspy.ovs_error.Duplicateovs.add_bridge(&quot;br1&quot;)#Delete bridge#If specified bridge is not exist, This function raise ovspy.ovs_error.NotFoundovs.del_bridge(&quot;br1&quot;)```### Port```import ovspy.clientovs = ovspy.client.OvsClient(5678)#Get Bridge instancebridge = ovs.find_bridge(&quot;br0&quot;)#Get all ports which is associate to birgdefor p in bridge.get_ports():    print(&quot;%s:(%s)&quot; % (p.get_name(), p.get_vlan_info()))#Find port by nameport =  bridge.find_port(&quot;p0&quot;)print(port.get_name())#Add port(Access port)bridge.add_port(&quot;p1&quot;, 10)#Add port(Trunk port)bridge.add_port(&quot;p2&quot;)bridge.add_port(&quot;p3&quot;, [])#Add port(Trunk port with restrict vlan)bridge.add_port(&quot;p4&quot;, [10, 20])#Delete portbridge.del_port(&quot;p3&quot;)```### Errorsovspy has following class as custom exception- `ovspy.ovs_error.OvspyError`  - Super class of custom exceptions- `ovspy.ovs_error.Duplicate`  - The error is raise when user operation cause duplicate status(e.g. Case of try to create port with same name as existing port)- `ovspy.ovs_error.NotFound`  - The error is raise when user specified resource is not exist. (e.g. Case of try to delete port but the port is not existing)- `ovspy.ovs_error.TransactionError`  - The error is raise when failed to transaction with OVSDB. (e.g. Timeout for connection)- `ovspy.ovs_error.Unsupported`  - The error is raise when user try to unsupported operation with ovspy.</longdescription>
</pkgmetadata>