<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>PyWallet===========.. image:: https://img.shields.io/pypi/pyversions/pywallet.svg?maxAge=60    :target: https://pypi.python.org/pypi/pywallet    :alt: Python version.. image:: https://img.shields.io/pypi/v/pywallet.svg?maxAge=60    :target: https://pypi.python.org/pypi/pywallet    :alt: PyPi version.. image:: https://img.shields.io/pypi/status/pywallet.svg?maxAge=60    :target: https://pypi.python.org/pypi/pywallet    :alt: PyPi status\**Simple BIP32 (HD) wallet creation for: BTC, BTG, BCH, ETH, LTC, DASH, DOGE**BIP32 (or HD for &quot;hierarchical deterministic&quot;) wallets allow you to createchild wallets which can only generate public keys and don't expose aprivate key to an insecure server.This library simplify the process of creating new wallets for theBTC, BTG, BCH, ETH, LTC, DASH and DOGE cryptocurrencies.Most of the code here is forked from:- Steven Buss's `Bitmerchant &lt;https://github.com/sbuss/bitmerchant&gt;`_ (original)- BlockIo's `multimerchant-python &lt;https://github.com/BlockIo/multimerchant-python&gt;`_ (fork of Bitmerchant)- Michail Brynard's `Ethereum BIP44 Python &lt;https://github.com/michailbrynard/ethereum-bip44-python&gt;`_I simply added support for a few more cryptocurrencies (BCH, BTG, DASH), as well as createdmethods to simplify the creation of HD wallets and child wallets.Enjoy!--------------Installation-------------Install via PiP:.. code:: bash   $ sudo pip install pywalletExample code:=============Create HD Wallet----------------The following code creates a new Bitcoin HD wallet:.. code:: python    # create_btc_wallet.py    from pywallet import wallet    # generate 12 word mnemonic seed    seed = wallet.generate_mnemonic()    # create bitcoin wallet    w = wallet.create_wallet(network=&quot;BTC&quot;, seed=seed, children=1)    print(w)Output looks like this:.. code:: bash    $ python create_btc_wallet.py    {      &quot;coin&quot;: &quot;BTC&quot;,      &quot;seed&quot;: &quot;guess tiny intact poet process segment pelican bright assume avocado view lazy&quot;,      &quot;address&quot;: &quot;1HwPm2tcdakwkTTWU286crWQqTnbEkD7av&quot;,      &quot;xprivate_key&quot;: &quot;xprv9s21ZrQH143K2Dizn667UCo9oYPdTPSMWq7D5t929aXf1kfnmW79CryavzBxqbWfrYzw8jbyTKvsiuFNwr1JL2qfrUy2Kbwq4WbBPfxYGbg&quot;,      &quot;xpublic_key&quot;: &quot;xpub661MyMwAqRbcEhoTt7d7qLjtMaE7rrACt42otGYdhv4dtYzwK3RPkfJ4nEjpFQDdT8JjT3VwQ3ZKjJaeuEdpWmyw16sY9SsoY68PoXaJvfU&quot;,      &quot;wif&quot;: &quot;L1EnVJviG6jR2oovFbfxZoMp1JknTACKLzsTKqDNUwATCWpY1Fp4&quot;,      &quot;children&quot;: [{         &quot;address&quot;: &quot;1E3btRwsoJx2jUcMnATyx7poHhV2tomL8g&quot;,         &quot;path&quot;: &quot;m/0&quot;,         &quot;xpublic_key&quot;: &quot;xpub69Fho5TtAbdoXyWzgUV1ZYst9K4bVfoGNLZxQ9u5js4Rb1jEyUjDtoATXbWvAcV8cERCMMnH8wYRVVUsRDSfaMjLqaY3TvD7Am9ALjq5PsG&quot;,         &quot;wif&quot;: &quot;KysRDiwJNkS9VPzy1UH76DrCDizsWKtEooSzikich792RVzcUaJP&quot;     }]    }Similarly, you can do the same for an Ethereum wallet:.. code:: python    # create_eth_wallet.py    from pywallet import wallet    seed = wallet.generate_mnemonic()    w = wallet.create_wallet(network=&quot;ETH&quot;, seed=seed, children=1)    print(w)Output looks like this (no WIF for Ethereum):.. code:: bash    $ python create_eth_wallet.py    {      &quot;coin&quot;: &quot;ETH&quot;,      &quot;seed&quot;: &quot;traffic happy world clog clump cattle great toy game absurd alarm auction&quot;,      &quot;address&quot;: &quot;0x3b777f60eb04fcb13e6b27e468532e491409722e&quot;,      &quot;xprivate_key&quot;: &quot;xprv9yTuSjwb95QZznV6epMWpb4Kpc2S8ZRaQuAf5B697YXtQD2tDmmJ5KvwJWVjtbVrdJ1WBKNnuodrpTKGfHfiPSEgrAxUjL5RP1gQwwT3fFx&quot;,      &quot;xpublic_key&quot;: &quot;xpub6GhhMtkVjoPi5DKtqapKzMzrzdGjo1EPc7Ka6KdeoXYdCrTBH1Hu1wKysm8boWSy8VeTKVJi6gQJ2qJ4YG2ZhvFDcUUgMJrFCJWN1PGtBry&quot;,      &quot;wif&quot;: &quot;&quot;,      &quot;children&quot;: [{        &quot;address&quot;: &quot;0x87eb82d43fa7316df0a989c0d951a9037ed02f9b&quot;,        &quot;path&quot;: &quot;m/0&quot;,        &quot;xpublic_key&quot;: &quot;xpub6LnpVXD73jNuAYXxzQCnEY6wXQspwkiAEkZWoX4BW9Tzx6KbUrMUYAU1Yvw4kebPHSPiEJPo8irHWHSwQR6WuVwUj85xURsugPWeJVH6sau&quot;,        &quot;wif&quot;: &quot;&quot;      }]    }\* Valid options for `network` are: BTC, BTG, BCH, LTC, DASH, DOGECreate Child Wallet-------------------You can create child-wallets (BIP32 wallets) from the HD wallet's**Extended Public Key** to generate new public addresses withoutrevealing your private key.Example:.. code-block:: python    # create_child_wallet.py    from pywallet import wallet    WALLET_PUBKEY = 'YOUR WALLET XPUB'    # generate address for specific user (id = 10)    user_addr = wallet.create_address(network=&quot;BTC&quot;, xpub=WALLET_PUBKEY, child=10)    # or generate a random address, based on timestamp    rand_addr = wallet.create_address(network=&quot;BTC&quot;, xpub=WALLET_PUBKEY)    print(&quot;User Address\n&quot;, user_addr)    print(&quot;Random Address\n&quot;, rand_addr)Output looks like this:.. code:: bash    $ python create_child_wallet.py    User Address    {      &quot;address&quot;: &quot;13myudz3WhpBezoZue6cwRUoHrzWs4vCrb&quot;,      &quot;path&quot;: &quot;m/0/395371597&quot;    }    Random Address    {      &quot;address&quot;: &quot;1KpS2wC5J8bDsGShXDHD7qdGvnic1h27Db&quot;,      &quot;path&quot;: &quot;m/0/394997119&quot;    }-----IMPORTANT=========I **highly** recommend that you familiarize yourself with the Blockchain technology andbe aware of security issues.Reading `Mastering Bitcoin &lt;https://github.com/bitcoinbook/bitcoinbook&gt;`_ and going overSteven Buss's security notes on the `Bitmerchant repository &lt;https://github.com/sbuss/bitmerchant&gt;`_is a good start.Enjoy!</longdescription>
</pkgmetadata>