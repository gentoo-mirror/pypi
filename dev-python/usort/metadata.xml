<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># μsort**Safe, minimal import sorting for Python projects.**[![documentation](https://readthedocs.org/projects/usort/badge/?version=stable)](https://usort.readthedocs.io/en/stable/?badge=stable)[![version](https://img.shields.io/pypi/v/usort.svg)](https://pypi.org/project/usort)[![changelog](https://img.shields.io/badge/change-log-blue.svg)](https://usort.readthedocs.io/en/latest/changelog.html)[![license](https://img.shields.io/pypi/l/usort.svg)](https://github.com/facebook/usort/blob/main/LICENSE)μsort is a safe, minimal import sorter. Its primary goal is to make no &quot;dangerous&quot;changes to code. This is achieved by detecting distinct &quot;blocks&quot; of imports that arethe most likely to be safely interchangeable, and only reordering imports within theseblocks without altering formatting. Code style is left as an exercise for lintersand formatters.Within a block, µsort will follow common Python conventions for grouping imports basedon source (standard library, third-party, first-party, or relative), and then sortinglexicographically within each group. This will commonly look like:```pyimport refrom pathlib import Pathfrom typing import Iterablefrom unittest.mock import call, Mock, patchimport aiohttpfrom aiosqlite import connectimport foofrom bar import barfrom .main import main```Blocks are inferred from a number of real world conditions, including any intermediatestatements between imports:```pyimport warningswarnings.filterwarnings(...)import reimport sys```In this case, µsort detects two blocks–separated by the call to `filterwarnings()`,and will only sort imports inside of each block. Running µsort on this codewill generate no changes, because each block is already sorted.Imports can be excluded from blocks using the `#usort:skip` directive, or with`#isort:skip` for compatibility with existing codebases. µsort will leavethese imports unchanged, and treat them as block separators.See the [User Guide][] for more details about how blocks are detected,and how sorting is performed.## Installµsort requires Python 3.6 or newer to run. Install µsort with:```shell-session$ pip install usort```## UsageTo format one or more files or directories in-place:```shell-session$ usort format &lt;path&gt; [&lt;path&gt; ...]```To generate a diff of changes without modifying files:```shell-session$ usort diff &lt;path&gt;```To just validate that files are formatted correctly, like during CI:```shell-session$ usort check &lt;path&gt;```# Licenseμsort is MIT licensed, as found in the [LICENSE][] file.[LICENSE]: https://github.com/facebook/usort/tree/main/LICENSE[User Guide]: https://usort.readthedocs.io/en/stable/guide.html</longdescription>
</pkgmetadata>