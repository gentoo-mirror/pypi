<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python SDK for Metaloop platformMetaloop Python SDK is a python library to access [Metaloop](http://data.deepglint.com/)and manage your datasets.It provides:-   A pythonic way to access your Metaloop resources by Metaloop OpenAPI [api](http://data.deepglint.com/api/v1/docs/).## Installation```consolepip install metaloop-python-sdk```## DocumentationMore information can be found on the [examples](https://gitlab.deepglint.com/metaloop/metaloop-python-sdk/-/tree/dev/metaloop/examples)## Usage生成API Token```  在登录平台后，点击页面右上角的用户名，在个人信息页面中，即可获取本用户的API Token  正式环境将http://192.168.100.71:30301 替换为 http://data.deepglint.com```操作数据集```pythonimport timefrom metaloop.client import MDSif __name__ == '__main__':    # use MDS(&quot;0c02ca70e142b75a75ca4118ce33dbb0&quot;, &quot;http://192.168.100.71:30301&quot;) when connecting test-server    mds_client = MDS(&quot;0c02ca70e142b75a75ca4118ce33dbb0&quot;)    date_time = time.strftime(&quot;%Y%m%d%H%M%S&quot;, time.localtime())    dataset_name = f&quot;test_dataset_{date_time}&quot;    # create new dataset    dataset = mds_client.create_dataset(        dataset_name,        &quot;image&quot;,        [&quot;screw&quot;],        comment=&quot;this is a test dataset for mds&quot;    )    # print dataset info    dataset.summary()        # get existed dataset    dataset = mds_client.get_dataset(dataset_name)    dataset.summary()    # create version    dataset.create_version(comment=&quot;this is a test version for mds&quot;)    dataset.summary()    # switch version    dataset.checkout(0)    dataset.summary()        # import local data to dataset    dataset.import_data(&quot;import_test/sample_test&quot;)    # accelerated when running on tencent cloud    dataset.import_data(&quot;import_test/sample_test&quot;, storage_type='cos')    # export data to local filesystem    dataset.export_data(&quot;export_test&quot;)    # delete version    dataset.delete_version(0)    dataset.summary()    # iter objects    for item in dataset:        print(item)        response = requests.get(item['obj_url'])        image = Image.open(BytesIO(response.content)).convert(&quot;RGB&quot;)        image.show()    # delete dataset    mds_client.delete_dataset(dataset_name)    dataset.summary()        ```## Development- CI pipeline</longdescription>
</pkgmetadata>