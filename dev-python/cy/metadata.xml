<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Crispy logo](crispy/data/images/logo.png)[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause) [![PyPI version](https://badge.fury.io/py/cy.svg)](https://badge.fury.io/py/cy) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2530755.svg)](https://doi.org/10.5281/zenodo.2530755)Module with utility functions to process CRISPR-based screens and method to correct gene independent copy-number effects.Description--Crispy uses [Sklearn](http://scikit-learn.org/stable/index.html) implementation of [Gaussian Process Regression](http://scikit-learn.org/stable/modules/generated/sklearn.gaussian_process.GaussianProcessRegressor.html#sklearn.gaussian_process.GaussianProcessRegressor), fitting each sample independently.Install--Install [`pybedtools`](https://daler.github.io/pybedtools/main.html#quick-install-via-conda) and then install `Crispy````conda install -c bioconda pybedtoolspip install cy```Examples--Support to library imports:```pythonfrom crispy.CRISPRData import Library# Master Library, standardised assembly of KosukeYusa V1.1, Avana, Brunello and TKOv3 # CRISPR-Cas9 libraries.master_lib = Library.load_library(&quot;MasterLib_v1.csv.gz&quot;)# Genome-wide minimal CRISPR-Cas9 library. minimal_lib = Library.load_library(&quot;MinLibCas9.csv.gz&quot;)# Some of the most broadly adopted CRISPR-Cas9 libraries:# 'Avana_v1.csv.gz', 'Brunello_v1.csv.gz', 'GeCKO_v2.csv.gz', 'Manjunath_Wu_v1.csv.gz', # 'TKOv3.csv.gz', 'Yusa_v1.1.csv.gz'brunello_lib = Library.load_library(&quot;Brunello_v1.csv.gz&quot;)```Select sgRNAs (across multiple CRISPR-Cas9 libraries) for a given gene:```pythonfrom crispy.GuideSelection import GuideSelection# sgRNA selection classgselection = GuideSelection()# Select 5 optimal sgRNAs for MCL1 across multiple libraries gene_guides = gselection.select_sgrnas(    &quot;MCL1&quot;, n_guides=5, offtarget=[1, 0], jacks_thres=1, ruleset2_thres=.4)# Perform different rounds of sgRNA selection with increasingly relaxed efficiency thresholds gene_guides = gselection.selection_rounds(&quot;TRIM49&quot;, n_guides=5, do_amber_round=True, do_red_round=True)```Copy-number correction:```pythonimport crispy as cyimport matplotlib.pyplot as pltfrom crispy.CRISPRData import ReadCounts, Library&quot;&quot;&quot;Import sample data&quot;&quot;&quot;rawcounts, copynumber = cy.Utils.get_example_data()&quot;&quot;&quot;Import CRISPR-Cas9 libraryImportant:      Library has to have the following columns: &quot;Chr&quot;, &quot;Start&quot;, &quot;End&quot;, &quot;Approved_Symbol&quot;      Library and segments have to have consistent &quot;Chr&quot; formating: &quot;Chr1&quot; or &quot;chr1&quot; or &quot;1&quot;      Gurantee that &quot;Start&quot; and &quot;End&quot; columns are int&quot;&quot;&quot;lib = Library.load_library(&quot;Yusa_v1.1.csv.gz&quot;)lib = lib.rename(    columns=dict(start=&quot;Start&quot;, end=&quot;End&quot;, chr=&quot;Chr&quot;, Gene=&quot;Approved_Symbol&quot;)).dropna(subset=[&quot;Chr&quot;, &quot;Start&quot;, &quot;End&quot;])lib[&quot;Chr&quot;] = &quot;chr&quot; + lib[&quot;Chr&quot;]lib[&quot;Start&quot;] = lib[&quot;Start&quot;].astype(int)lib[&quot;End&quot;] = lib[&quot;End&quot;].astype(int)&quot;&quot;&quot;Calculate fold-change&quot;&quot;&quot;plasmids = [&quot;ERS717283&quot;]rawcounts = ReadCounts(rawcounts).remove_low_counts(plasmids)sgrna_fc = rawcounts.norm_rpm().foldchange(plasmids)&quot;&quot;&quot;Correct CRISPR-Cas9 sgRNA fold changes&quot;&quot;&quot;crispy = cy.Crispy(    sgrna_fc=sgrna_fc.mean(1), copy_number=copynumber, library=lib.loc[sgrna_fc.index])# Fold-changes and correction integrated funciton.# Output is a modified/expanded BED formated data-frame with sgRNA and segments information#   n_sgrna: represents the minimum number of sgRNAs required per segment to consider in the fit.#            Recomended default values range between 4-10.bed_df = crispy.correct(n_sgrna=10)print(bed_df.head())# Gaussian Process Regression is storedcrispy.gpr.plot(x_feature=&quot;ratio&quot;, y_feature=&quot;fold_change&quot;)plt.show()```![GPR](crispy/data/images/example_gp_fit.png)Credits and License--Developed at the [Wellcome Sanger Institue](https://www.sanger.ac.uk/) (2017-2020).For citation please refer to:[Gonçalves E, Behan FM, Louzada S, Arnol D, Stronach EA, Yang F, Yusa K, Stegle O, Iorio F, Garnett MJ (2019) Structural rearrangements generate cell-specific, gene-independent CRISPR-Cas9 loss of fitness effects. Genome Biol 20: 27](https://doi.org/10.1186/s13059-019-1637-z)[Gonçalves E, Thomas M, Behan FM, Picco G, Pacini C, Allen F, Parry-Smith D, Iorio F, Parts L, Yusa K, Garnett MJ (2019) Minimal genome-wide human CRISPR-Cas9 library. bioRxiv](https://www.biorxiv.org/content/10.1101/848895v1)</longdescription>
</pkgmetadata>