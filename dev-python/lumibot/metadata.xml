<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Backtesting and trading for stocks, options, crypto, futures and more!# Documentation**Check out the documentation for the project here: &lt;http://lumibot.lumiwealth.com/&gt;**# CommunityIf you want to learn more about Lumibot or Algorithmic Trading then you will love out communities! You can join us on our forum or Discord.**To join/view our forum: &lt;https://lumiwealth.circle.so/c/lumibot/&gt;****To join us on Discord: &lt;https://discord.gg/TmMsJCKY3T&gt;**# CoursesIf you need extra help building your algorithm, we have courses to help you out.**For our Algorithmic Trading course: &lt;https://lumiwealth.com/algorithmic-trading-landing-page&gt;****For our Machine Learning for Trading course: &lt;https://www.lumiwealth.com/product-category/machine-learning-purchase/&gt;****For our Options Trading course: &lt;https://www.lumiwealth.com/product-category/options-trading-purchase/&gt;**# LicenseThis library is covered by the MIT license for open sourced software which can be found here: &lt;https://github.com/Lumiwealth/lumibot/blob/master/LICENSE&gt;# Profiling and Optimization Tips to Improve Performance## ProfilingWe recommend using yappi to profile your code. You can install it with `pip install yappi`. You can then use it to profile your code like this:```pythonimport yappiyappi.start()# Run your code here, eg. a backtestMachineLearningLongShort.backtest(    PandasDataBacktesting,    backtesting_start,    backtesting_end,    pandas_data=pandas_data,    benchmark_asset=&quot;TQQQ&quot;,)# Stop the profileryappi.stop()# Save the resultsthreads = yappi.get_thread_stats()for thread in threads:    print(        &quot;Function stats for (%s) (%d)&quot; % (thread.name, thread.id)    )  # it is the Thread.__class__.__name__    yappi.get_func_stats(ctx_id=thread.id).save(        f&quot;profile_{thread.name}.out&quot;, type=&quot;pstat&quot;    )```## Viewing the resultsWe recommend using snakeviz to view the results. You can install it with `pip install snakeviz`. You can then use it to view the results like this:```bashsnakeviz profile_MachineLearningLongShort.out```</longdescription>
</pkgmetadata>