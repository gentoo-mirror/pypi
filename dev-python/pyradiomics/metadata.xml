<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pyradiomics v3.1.0## Build Status| Linux / MacOS                 | Windows                       || ----------------------------- | ----------------------------- || [![][circleci]][circleci-lnk] | [![][appveyor]][appveyor-lnk] |[appveyor]: https://ci.appveyor.com/api/projects/status/kvu7897q0v4imwdc?svg=true[appveyor-lnk]: https://ci.appveyor.com/project/AIM-Harvard/pyradiomics-k4sto[circleci]: https://dl.circleci.com/status-badge/img/gh/AIM-Harvard/pyradiomics/tree/master.svg?style=shield[circleci-lnk]: https://circleci.com/gh/AIM-Harvard/pyradiomics## Radiomics feature extraction in PythonThis is an open-source python package for the extraction of Radiomics features from medical imaging.With this package we aim to establish a reference standard for Radiomic Analysis, and provide a tested and maintainedopen-source platform for easy and reproducible Radiomic Feature extraction. By doing so, we hope to increase awarenessof radiomic capabilities and expand the community.The platform supports both the feature extraction in 2D and 3D and can be used to calculate single values per featurefor a region of interest (&quot;segment-based&quot;) or to generate feature maps (&quot;voxel-based&quot;). **Not intended for clinical use.****If you publish any work which uses this package, please cite the following publication:***van Griethuysen, J. J. M., Fedorov, A., Parmar, C., Hosny, A., Aucoin, N., Narayan, V., Beets-Tan, R. G. H.,Fillion-Robin, J. C., Pieper, S.,  Aerts, H. J. W. L. (2017). Computational Radiomics System to Decode the RadiographicPhenotype. Cancer Research, 77(21), e104â€“e107. https://doi.org/10.1158/0008-5472.CAN-17-0339*### Join the Community!Please join the [Radiomics community section of the 3D Slicer Discourse](https://discourse.slicer.org/c/community/radiomics/23).### Feature ClassesCurrently supports the following feature classes: - First Order Statistics - Shape-based (2D and 3D) - Gray Level Co-occurrence Matrix (GLCM) - Gray Level Run Length Matrix (GLRLM) - Gray Level Size Zone Matrix (GLSZM) - Gray Level Dependece Matrix (GLDM) - Neighboring Gray Tone Difference Matrix (NGTDM)### Filter ClassesAside from the feature classes, there are also some built-in optional filters:- Laplacian of Gaussian (LoG, based on SimpleITK functionality)- Wavelet (using the PyWavelets package)- Square- Square Root- Logarithm- Exponential- Gradient (Magnitude)- Local Binary Pattern (LBP) 2D / 3D### Supporting reproducible extractionAside from calculating features, the pyradiomics package includes provenance information in theoutput. This information contains information on used image and mask, as well as applied settingsand filters, thereby enabling fully reproducible feature extraction.### DocumentationFor more information, see the sphinx generated documentation available [here](http://pyradiomics.readthedocs.io/).Alternatively, you can generate the documentation by checking out the master branch and running from the root directory:    python setup.py build_sphinxThe documentation can then be viewed in a browser by opening `PACKAGE_ROOT\build\sphinx\html\index.html`. Furthermore, an instruction video is available [here](http://radiomics.io/pyradiomics.html).### InstallationPyRadiomics is OS independent and compatible with Python &gt;= 3.5. Pre-built binaries are available onPyPi and Conda. To install PyRadiomics, ensure you have pythoninstalled and run:    `python -m pip install pyradiomics`Detailed installation instructions, as well as instructions for building PyRadiomics from source, are available in the [documentation](http://pyradiomics.readthedocs.io/en/latest/installation.html).### DockerPyRadiomics also supports [Dockers](https://www.docker.com/).  Currently, 2 dockers are available:The first one is a [Jupyter notebook](http://jupyter.org/) with PyRadiomics pre-installed with example Notebooks. To get the Docker:    docker pull radiomics/pyradiomics:latestThe `radiomics/notebook` Docker has an exposed volume (`/data`) that can be mapped to the host system directory.  For example, to mount the current directory:    docker run --rm -it --publish 8888:8888 -v `pwd`:/data radiomics/notebookor for a less secure notebook, skip the randomly generated token    docker run --rm -it --publish 8888:8888 -v `pwd`:/data radiomics/notebook start-notebook.sh --NotebookApp.token=''and open the local webpage at http://localhost:8888/ with the current directory at http://localhost:8888/tree/data.The second is a docker which exposes the PyRadiomics CLI interface. To get the CLI-Docker:    docker pull radiomics/pyradiomics:CLIYou can then use the PyRadiomics CLI as follows:    docker run radiomics/pyradiomics:CLI --helpFor more information on using docker, see[here](https://pyradiomics.readthedocs.io/en/latest/installation.html#use-pyradiomics-docker)### UsagePyRadiomics can be easily used in a Python script through the `featureextractor`module. Furthermore, PyRadiomics provides a commandline script, `pyradiomics`, for both single image extraction and batchprocessing. Finally, a convenient front-end interface is provided as the 'Radiomics'extension for 3D Slicer, available [here](https://github.com/AIM-Harvard/SlicerRadiomics).### 3rd-party packages used in pyradiomics: - SimpleITK (Image loading and preprocessing) - numpy (Feature calculation) - PyWavelets (Wavelet filter) - pykwalify (Enabling yaml parameters file checking) - six (Python 3 Compatibility) - scipy (Only for LBP filter, install separately to enable this filter) - scikit-image (Only for LBP filter, install separately to enable this filter) - trimesh (Only for LBP filter, install separately to enable this filter)See also the [requirements file](requirements.txt).### 3D SlicerPyRadiomics is also available as an [extension](https://github.com/AIM-Harvard/SlicerRadiomics) to [3D Slicer](slicer.org). Download and install the 3D slicer [nightly build](http://download.slicer.org/), the extension is then available in theextension manager under &quot;SlicerRadiomics&quot;.### LicenseThis package is covered by the open source [3-clause BSD License](LICENSE.txt).### Developers - [Joost van Griethuysen](https://github.com/JoostJM)&lt;sup&gt;1,3,4&lt;/sup&gt; - [Andriy Fedorov](https://github.com/fedorov)&lt;sup&gt;2&lt;/sup&gt; - [Nicole Aucoin](https://github.com/naucoin)&lt;sup&gt;2&lt;/sup&gt; - [Jean-Christophe Fillion-Robin](https://github.com/jcfr)&lt;sup&gt;5&lt;/sup&gt; - [Ahmed Hosny](https://github.com/ahmedhosny)&lt;sup&gt;1&lt;/sup&gt; - [Steve Pieper](https://github.com/pieper)&lt;sup&gt;6&lt;/sup&gt; - [Hugo Aerts (PI)](https://github.com/hugoaerts)&lt;sup&gt;1,2&lt;/sup&gt;&lt;sup&gt;1&lt;/sup&gt;Department of Radiation Oncology, Dana-Farber Cancer Institute, Brigham and Women's Hospital, Harvard Medical School, Boston, MA,&lt;sup&gt;2&lt;/sup&gt;Department of Radiology, Brigham and Women's Hospital, Harvard Medical School, Boston, MA,&lt;sup&gt;3&lt;/sup&gt;Department of Radiology, Netherlands Cancer Institute, Amsterdam, The Netherlands, &lt;sup&gt;4&lt;/sup&gt;GROW-School for Oncology and Developmental Biology, Maastricht University Medical Center, Maastricht, The Netherlands,&lt;sup&gt;5&lt;/sup&gt;Kitware,&lt;sup&gt;6&lt;/sup&gt;Isomics### ContactWe are happy to help you with any questions. Please contact us on the [Radiomics community section of the 3D Slicer Discourse](https://discourse.slicer.org/c/community/radiomics/23).We welcome contributions to PyRadiomics. Please read the [contributing guidelines](CONTRIBUTING.rst) on how tocontribute to PyRadiomics.**This work was supported in part by the US National Cancer Institute grants: U24CA194354 - QUANTITATIVE RADIOMICS SYSTEM DECODING THE TUMOR PHENOTYPE and U01CA190234 - TUMOR GENOTYPE AND RADIOMIC PHENOTYPE IN LUNG CANCER**</longdescription>
</pkgmetadata>