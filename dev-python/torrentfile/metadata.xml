<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># TorrentFile![torrentfile](https://github.com/alexpdev/torrentfile/blob/master/site/images/torrentfile.png?raw=true)* * *![GitHub repo size](https://img.shields.io/github/repo-size/alexpdev/torrentfile?color=orange)![GitHub License](https://img.shields.io/github/license/alexpdev/torrentfile?color=red&amp;logo=apache)![PyPI - Downloads](https://img.shields.io/pypi/dm/torrentfile?color=brown)![GitHub Last Commit](https://badgen.net/github/last-commit/alexpdev/torrentfile?color=blue)[![CI](https://github.com/alexpdev/TorrentFile/actions/workflows/pyworkflow.yml/badge.svg?branch=master&amp;event=push)](https://github.com/alexpdev/torrentfile/actions/workflows/pyworkflow.yml)[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/b67ff65b3d574025b65b6587266bbab7)](https://www.codacy.com/gh/alexpdev/torrentfile/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=alexpdev/torrentfile&amp;utm_campaign=Badge_Coverage)[![Codacy Badge](https://app.codacy.com/project/badge/Grade/b67ff65b3d574025b65b6587266bbab7)](https://www.codacy.com/gh/alexpdev/torrentfile/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=alexpdev/torrentfile&amp;utm_campaign=Badge_Grade)[![DeepSource](https://deepsource.io/gh/alexpdev/TorrentFile.svg/?label=active+issues&amp;token=16Sl_dF7nTU8YgPilcqhvHm8)](https://deepsource.io/gh/alexpdev/torrentfile/)[![codecov](https://codecov.io/gh/alexpdev/torrentfile/branch/master/graph/badge.svg?token=EWF7NIL9SQ)](https://codecov.io/gh/alexpdev/torrentfile?color=navy&amp;logo=codecov)## üåê OverviewA command line interface for creating, reviewing, editing, or verifying bittorrent meta files (`.torrent` files). _`torrentfile`_ is open source, and supports all versions of Bittorrent files, including hybrid meta files. The code baseis also importable and can easily be used as a library for creating or manipulating torrent files in external projects.Documentation is available at [https://alexpdev.github.io/torrentfile](https://alexpdev.github.io/torrentfile).&gt; A GUI frontend for this project can be found at &lt;https://github.com/alexpdev/TorrentfileQt&gt;## üîå Requirements-   Python 3.6+-   Tested on Linux, Windows and Mac## üíª Install**PyPi:**```bashpip install torrentfile```**Git:**```bashgit clone https://github.com/alexpdev/torrentfile.gitcd torrentfilepip install .```&gt; Download pre-compiled binaries from the [release page](https://github.com/alexpdev/torrentfile/releases).## üìö Documentation### torrentfile documentation available at [https://alexpdev.github.io/torrentfile](https://alexpdev.github.io/torrentfile)## üöÄ Usage![Basic Usage](https://github.com/alexpdev/torrentfile/blob/master/assets/Torrentfile.gif?raw=True)&gt; Usage examples can be found in the project documentation on the [examples page.](https://alexpdev.github.io/torrentfile/usage)## üìù LicenseApache Software License v2.0 - See [LICENSE](&quot;https://github.com/alexpdev/torrentfile/blob/master/LICENSE&quot;)## üí° Issues &amp; Requests &amp; PRsIf you encounter any bugs or would like to request a new feature please open a new issue.&gt; PRs and other contributions are welcome&lt;https://github.com/alexpdev/torrentfile/issues&gt;* * *## Usage Examples### Creating Bittorrent FilesCreating a basic torrent file is as easy as using the create subcommand with the path to the torrent file.```bashtorrentfile create /path/to/content```You can add one or more trackers by using any one of `-a`, `--announce` flags and listing their URL as a space separated list.```bashtorrentfile create /path/to/content -a http://tracker1.com http://tracker2.net```If you intend to distribute the file on a private tracker then you should use one  of `-p`, `--private` flags, which tells your Bittorrent clients to disable DHT and  multitracker protocols.```bashtorrentfile create /path/to/content --private```By default **`torrentfile`** displays a progress bar indicating how much of the content  has already been processed.  To turn off this display you can either use `--quiet` mode in  as a global flag or you can set the `--prog` flag to 0.```bashtorrentfile --quiet create /path/to/content``````bashtorrentfile create /path/to/content --prog 0```**`torrentfile`** extracts the name of the contents top level file or directory  and saves the torrent file to the current working directory with the extracted title.For example running the follwing command would create `./content.torrent`.```bashtorrentfile create /path/to/content```To specify an alternative path or filename you may use the `-o`, `--out` flags  followed by the path to the preferred destination.```bashtorrentfile create /path/to/content -o /some/other/path/torrent.torrent```If the path specified is an existing directory, then the torrent file will besaved to that directory, with same filename as the default top level path name.For example the following command would create a torrent file at `/some/other/path/content.torrent`.```bashtorrentfile create /path/to/content -o /some/other/path/```Bittorrent protocol V1 is still the most commonly used version, therefore _`torrentfile`_ createsBittorrent version 1 torrent files by default. To specify creating a V2 file or hybrid (v1 and v2)use the `--meta-version` followed by the specific version number format to use.  The options include:`1`(v1 default), `2`(v2), or `3`(v1 &amp; v2).```bashtorrentfile create /path/to/content --meta-version 2``````bashtorrentfile create /path/to/content --meta-version 3 ```&gt;`torrentfile` now includes the option to command line flags for the `create` sub-command from an `ini` styleconfiguration file, by using the `--config` and optional `--config-path` options to specify the pathto the configuration file.  If `--config-path` is ommited, then `torrentfile` will look by default in the currentworking directory for a file named `torrentfile.ini`. If the file is not discovered in the current working directory, it will move on to look `~/.torrentfile/torrentfile.ini` followed by `~/.config/torrentfile.ini`.  Please see the [documentation](https://alexpdev.github.io/torrentfile/overview/) for more details on how the configuration file should beformatted.### Check/Recheck TorrentThe `recheck` subcommand allows you to scan a Bittorrent file and compare it's contents, against a file or directory containing the contents the torrent file was created from.The output provided by this process gives a detailed perspective if any files are missingor have been corrupted in any way.  Supports any version of Bittorrent file.```bashtorrentfile recheck /path/to/some.torrent /path/to/content```### Edit TorrentTo edit specific fields of the torrent file, there is the `edit` subcommand.  Using thissubcommand you can specify the field with one of the available field flags, for example`--announce` and specify the value you wish to change it to.```bashtorrentfile edit /path/to/content --announce https://new.tracker.url1.com  https://newtracker.url/2```You can use the `-h` flag for a full list of available fields that can be edited.```bashtorrentfile edit -h```### Create MagnetTo create a magnet URI for a pre-existing torrent meta file, use the sub-command  `magnet` or `m` with the path to the torrent file.```bashtorrentfile magnet /path/to/some.torrent```### GUIIf you prefer a windowed GUI please check out the official GUI frontend [here](https://github.com/alexpdev/TorrentFileQt)</longdescription>
</pkgmetadata>