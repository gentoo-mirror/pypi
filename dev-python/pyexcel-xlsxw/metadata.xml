<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>================================================================================pyexcel-xlsxw - Let you focus on data, instead of xlsx format================================================================================.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel.github.io/master/images/patreon.png   :target: https://www.patreon.com/chfw.. image:: https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg   :target: https://awesome-python.com/#specific-formats-processing.. image:: https://travis-ci.org/pyexcel/pyexcel-xlsxw.svg?branch=master   :target: http://travis-ci.org/pyexcel/pyexcel-xlsxw.. image:: https://codecov.io/gh/pyexcel/pyexcel-xlsxw/branch/master/graph/badge.svg   :target: https://codecov.io/gh/pyexcel/pyexcel-xlsxw.. image:: https://badge.fury.io/py/pyexcel-xlsxw.svg   :target: https://pypi.org/project/pyexcel-xlsxw.. image:: https://pepy.tech/badge/pyexcel-xlsxw/month   :target: https://pepy.tech/project/pyexcel-xlsxw/month.. image:: https://img.shields.io/gitter/room/gitterHQ/gitter.svg   :target: https://gitter.im/pyexcel/Lobby.. image:: https://img.shields.io/static/v1?label=continuous%20templating&amp;message=%E6%A8%A1%E7%89%88%E6%9B%B4%E6%96%B0&amp;color=blue&amp;style=flat-square    :target: https://moban.readthedocs.io/en/latest/#at-scale-continous-templating-for-open-source-projects.. image:: https://img.shields.io/static/v1?label=coding%20style&amp;message=black&amp;color=black&amp;style=flat-square    :target: https://github.com/psf/black.. image:: https://readthedocs.org/projects/pyexcel-xlsxw/badge/?version=latest   :target: http://pyexcel-xlsxw.readthedocs.org/en/latest/**pyexcel-xlsxw** is a tiny wrapper library to write data in xlsx and xlsm fromat using xlsxwriter. You are likely to use it with `pyexcel &lt;https://github.com/pyexcel/pyexcel&gt;`__.Support the project================================================================================If your company has embedded pyexcel and its components into a revenue generatingproduct, please support me on github, `patreon &lt;https://www.patreon.com/bePatron?u=5537627&gt;`_or `bounty source &lt;https://salt.bountysource.com/teams/chfw-pyexcel&gt;`_ to maintainthe project and develop it further.If you are an individual, you are welcome to support me too and for however longyou feel like. As my backer, you will receive`early access to pyexcel related contents &lt;https://www.patreon.com/pyexcel/posts&gt;`_.And your issues will get prioritized if you would like to become my patreon as `pyexcel pro user`.With your financial support, I will be able to investa little bit more time in coding, documentation and writing interesting posts.Known constraints==================Fonts, colors and charts are not supported.Installation================================================================================You can install pyexcel-xlsxw via pip:.. code-block:: bash    $ pip install pyexcel-xlsxwor clone it and install it:.. code-block:: bash    $ git clone https://github.com/pyexcel/pyexcel-xlsxw.git    $ cd pyexcel-xlsxw    $ python setup.py installUsage================================================================================As a standalone library--------------------------------------------------------------------------------Write to an xlsx file********************************************************************************Here's the sample code to write a dictionary to an xlsx file:.. code-block:: python    &gt;&gt;&gt; from pyexcel_xlsxw import save_data    &gt;&gt;&gt; data = OrderedDict() # from collections import OrderedDict    &gt;&gt;&gt; data.update({&quot;Sheet 1&quot;: [[1, 2, 3], [4, 5, 6]]})    &gt;&gt;&gt; data.update({&quot;Sheet 2&quot;: [[&quot;row 1&quot;, &quot;row 2&quot;, &quot;row 3&quot;]]})    &gt;&gt;&gt; save_data(&quot;your_file.xlsx&quot;, data)Here's the sample code to help you read the data back. You will need to install pyexcel-xls or pyexcel-xlsx... code-block:: python    &gt;&gt;&gt; from pyexcel_io import get_data    &gt;&gt;&gt; data = get_data(&quot;your_file.xlsx&quot;)    &gt;&gt;&gt; import json    &gt;&gt;&gt; print(json.dumps(data))    {&quot;Sheet 1&quot;: [[1, 2, 3], [4, 5, 6]], &quot;Sheet 2&quot;: [[&quot;row 1&quot;, &quot;row 2&quot;, &quot;row 3&quot;]]}Write an xlsx to memory********************************************************************************Here's the sample code to write a dictionary to an xlsx file:.. code-block:: python    &gt;&gt;&gt; from pyexcel_xlsxw import save_data    &gt;&gt;&gt; data = OrderedDict()    &gt;&gt;&gt; data.update({&quot;Sheet 1&quot;: [[1, 2, 3], [4, 5, 6]]})    &gt;&gt;&gt; data.update({&quot;Sheet 2&quot;: [[7, 8, 9], [10, 11, 12]]})    &gt;&gt;&gt; io = StringIO()    &gt;&gt;&gt; save_data(io, data)    &gt;&gt;&gt; # do something with the io    &gt;&gt;&gt; # In reality, you might give it to your http response    &gt;&gt;&gt; # object for downloadingHere's the sample code to help you read the data back. You will need to install pyexcel-xls or pyexcel-xlsx... code-block:: python    &gt;&gt;&gt; # This is just an illustration    &gt;&gt;&gt; # In reality, you might deal with xlsx file upload    &gt;&gt;&gt; # where you will read from requests.FILES['YOUR_XLSX_FILE']    &gt;&gt;&gt; data = get_data(io, 'xlsx')    &gt;&gt;&gt; print(json.dumps(data))    {&quot;Sheet 1&quot;: [[1, 2, 3], [4, 5, 6]], &quot;Sheet 2&quot;: [[7, 8, 9], [10, 11, 12]]}As a pyexcel plugin--------------------------------------------------------------------------------No longer, explicit import is needed since pyexcel version 0.2.2. Instead,this library is auto-loaded. So if you want to read data in xlsx format,installing it is enough.Let's assume we have data as the following... code-block:: python    &gt;&gt;&gt; import pyexcel as pe    &gt;&gt;&gt; sheet = pe.get_book(file_name=&quot;your_file.xlsx&quot;)    &gt;&gt;&gt; sheet    Sheet 1:    +---+---+---+    | 1 | 2 | 3 |    +---+---+---+    | 4 | 5 | 6 |    +---+---+---+    Sheet 2:    +-------+-------+-------+    | row 1 | row 2 | row 3 |    +-------+-------+-------+Writing to an xlsx file********************************************************************************Here is the sample code:.. code-block:: python    &gt;&gt;&gt; sheet.save_as(&quot;another_file.xlsx&quot;)Writing to a StringIO instance********************************************************************************You need to pass a StringIO instance to Writer:.. code-block:: python    &gt;&gt;&gt; data = [    ...     [1, 2, 3],    ...     [4, 5, 6]    ... ]    &gt;&gt;&gt; io = StringIO()    &gt;&gt;&gt; sheet = pe.Sheet(data)    &gt;&gt;&gt; io = sheet.save_to_memory(&quot;xlsx&quot;, io)    &gt;&gt;&gt; # then do something with io    &gt;&gt;&gt; # In reality, you might give it to your http response    &gt;&gt;&gt; # object for downloadingLicense================================================================================New BSD LicenseDeveloper guide==================Development steps for code changes#. git clone https://github.com/pyexcel/pyexcel-xlsxw.git#. cd pyexcel-xlsxwUpgrade your setup tools and pip. They are needed for development and testing only:#. pip install --upgrade setuptools pipThen install relevant development requirements:#. pip install -r rnd_requirements.txt # if such a file exists#. pip install -r requirements.txt#. pip install -r tests/requirements.txtOnce you have finished your changes, please provide test case(s), relevant documentationand update CHANGELOG.rst... note::    As to rnd_requirements.txt, usually, it is created when a dependent    library is not released. Once the dependecy is installed    (will be released), the future    version of the dependency in the requirements.txt will be valid.How to test your contribution------------------------------Although `nose` and `doctest` are both used in code testing, it is adviable that unit tests are put in tests. `doctest` is incorporated only to make sure the code examples in documentation remain valid across different development releases.On Linux/Unix systems, please launch your tests like this::    $ makeOn Windows systems, please issue this command::    &gt; test.batBefore you commit------------------------------Please run::    $ make formatso as to beautify your code otherwise travis-ci may fail your unit test.Change log================================================================================0.6.1 - 10.10.2020--------------------------------------------------------------------------------**Fixed**#. `#9 &lt;https://github.com/pyexcel/pyexcel-xlsxw/issues/9&gt;`_: pyexcel-xlsxw   0.6.0 failed to write to a stream0.6.0 - 8.10.2020--------------------------------------------------------------------------------**Updated**#. New style xlsx plugins, promoted by pyexcel-io v0.6.2.0.4.2 - 23.10.2017--------------------------------------------------------------------------------**updated**#. pyexcel `pyexcel#105 &lt;https://github.com/pyexcel/pyexcel/issues/105&gt;`_,   remove gease from setup_requires, introduced by 0.4.1.#. remove python2.6 test support0.4.1 - 20.10.2017--------------------------------------------------------------------------------**added**#. `pyexcel#103 &lt;https://github.com/pyexcel/pyexcel/issues/103&gt;`_, include   LICENSE file in MANIFEST.in, meaning LICENSE file will appear in the released   tar ball.0.4.0 - 19.06.2017--------------------------------------------------------------------------------**Updated**#. pyexcel-io plugin interface now updated to use `lml   &lt;https://github.com/chfw/lml&gt;`_.#. Remove the false claim that this library writes xlsm#. `#1 &lt;https://github.com/pyexcel/pyexcel-xlsxw/issues/1&gt;`_, Feature request:   support Workbook options in XLSXWriter.open()#. Support pyexcel-io v0.3.0#. initial release to see if xlsxwriter would write xlsx significantly faster   than openpyxl0.3.2 - 03.03.2017--------------------------------------------------------------------------------**Updated**#. pyexcel-io plugin interface now updated to use `lml   &lt;https://github.com/chfw/lml&gt;`_.#. Remove the false claim that this library writes xlsm#. `#1 &lt;https://github.com/pyexcel/pyexcel-xlsxw/issues/1&gt;`_, Feature request:   support Workbook options in XLSXWriter.open()#. Support pyexcel-io v0.3.0#. initial release to see if xlsxwriter would write xlsx significantly faster   than openpyxl0.3.1 - 24.02.2017--------------------------------------------------------------------------------**Updated**#. pyexcel-io plugin interface now updated to use `lml   &lt;https://github.com/chfw/lml&gt;`_.#. Remove the false claim that this library writes xlsm#. `#1 &lt;https://github.com/pyexcel/pyexcel-xlsxw/issues/1&gt;`_, Feature request:   support Workbook options in XLSXWriter.open()#. Support pyexcel-io v0.3.0#. initial release to see if xlsxwriter would write xlsx significantly faster   than openpyxl0.3.0 - 22.12.2016--------------------------------------------------------------------------------**Updated**#. pyexcel-io plugin interface now updated to use `lml   &lt;https://github.com/chfw/lml&gt;`_.#. Remove the false claim that this library writes xlsm#. `#1 &lt;https://github.com/pyexcel/pyexcel-xlsxw/issues/1&gt;`_, Feature request:   support Workbook options in XLSXWriter.open()#. Support pyexcel-io v0.3.0#. initial release to see if xlsxwriter would write xlsx significantly faster   than openpyxl0.0.1 - 26.08.2016--------------------------------------------------------------------------------**Updated**#. pyexcel-io plugin interface now updated to use `lml   &lt;https://github.com/chfw/lml&gt;`_.#. Remove the false claim that this library writes xlsm#. `#1 &lt;https://github.com/pyexcel/pyexcel-xlsxw/issues/1&gt;`_, Feature request:   support Workbook options in XLSXWriter.open()#. Support pyexcel-io v0.3.0#. initial release to see if xlsxwriter would write xlsx significantly faster   than openpyxl</longdescription>
</pkgmetadata>