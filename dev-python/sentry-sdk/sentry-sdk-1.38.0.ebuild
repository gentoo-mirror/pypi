# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Python client for Sentry (https://sentry.io)"

HOMEPAGE="https://github.com/getsentry/sentry-python"
LICENSE="MIT"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="aiohttp arq asyncpg beam bottle celery chalice clickhouse-driver django falcon fastapi flask grpcio httpx huey loguru opentelemetry opentelemetry-experimental pure_eval pymongo pyspark quart rq sanic sqlalchemy starlette starlite tornado"
DEPENDENCIES="dev-python/certifi[${PYTHON_USEDEP}]
	dev-python/urllib3[${PYTHON_USEDEP}]
	aiohttp? ( dev-python/aiohttp[${PYTHON_USEDEP}] )
	arq? ( dev-python/arq[${PYTHON_USEDEP}] )
	asyncpg? ( dev-python/asyncpg[${PYTHON_USEDEP}] )
	beam? ( dev-python/apache-beam[${PYTHON_USEDEP}] )
	bottle? ( dev-python/bottle[${PYTHON_USEDEP}] )
	celery? ( dev-python/celery[${PYTHON_USEDEP}] )
	chalice? ( dev-python/chalice[${PYTHON_USEDEP}] )
	clickhouse-driver? ( dev-python/clickhouse-driver[${PYTHON_USEDEP}] )
	django? ( dev-python/django[${PYTHON_USEDEP}] )
	falcon? ( dev-python/falcon[${PYTHON_USEDEP}] )
	fastapi? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	flask? ( dev-python/flask[${PYTHON_USEDEP}] )
	flask? ( dev-python/blinker[${PYTHON_USEDEP}] )
	flask? ( dev-python/markupsafe[${PYTHON_USEDEP}] )
	grpcio? ( dev-python/grpcio[${PYTHON_USEDEP}] )
	httpx? ( dev-python/httpx[${PYTHON_USEDEP}] )
	huey? ( dev-python/huey[${PYTHON_USEDEP}] )
	loguru? ( dev-python/loguru[${PYTHON_USEDEP}] )
	opentelemetry? ( dev-python/opentelemetry-distro[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-distro[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-aiohttp-client[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-django[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-fastapi[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-flask[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-requests[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-sqlite3[${PYTHON_USEDEP}] )
	opentelemetry-experimental? ( dev-python/opentelemetry-instrumentation-urllib[${PYTHON_USEDEP}] )
	pure_eval? ( dev-python/pure-eval[${PYTHON_USEDEP}] )
	pure_eval? ( dev-python/executing[${PYTHON_USEDEP}] )
	pure_eval? ( dev-python/asttokens[${PYTHON_USEDEP}] )
	pymongo? ( dev-python/pymongo[${PYTHON_USEDEP}] )
	pyspark? ( dev-python/pyspark[${PYTHON_USEDEP}] )
	quart? ( dev-python/quart[${PYTHON_USEDEP}] )
	quart? ( dev-python/blinker[${PYTHON_USEDEP}] )
	rq? ( dev-python/rq[${PYTHON_USEDEP}] )
	sanic? ( dev-python/sanic[${PYTHON_USEDEP}] )
	sqlalchemy? ( dev-python/sqlalchemy[${PYTHON_USEDEP}] )
	starlette? ( dev-python/starlette[${PYTHON_USEDEP}] )
	starlite? ( dev-python/starlite[${PYTHON_USEDEP}] )
	tornado? ( dev-python/tornado[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
