<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Python Novu SDK[![PyPI](https://img.shields.io/pypi/v/novu?color=blue)](https://pypi.org/project/novu/)![Tests Status](https://github.com/novuhq/novu-python/actions/workflows/.github/workflows/tests.yml/badge.svg)[![codecov](https://codecov.io/gh/novuhq/novu-python/branch/main/graph/badge.svg?token=RON7F8QTZX)](https://codecov.io/gh/novuhq/novu-python)[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white)](https://github.com/pre-commit/pre-commit)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/novu)![PyPI - License](https://img.shields.io/pypi/l/novu)[![semantic-release: angular](https://img.shields.io/badge/semantic--release-angular-e10079?logo=semantic-release)](https://github.com/semantic-release/semantic-release)---The [Python Novu](https://novu.co) SDK and package provides a fluent and expressive interface for interacting with [Novu's API](https://api.novu.co/api) and managing notifications.## InstallTo install this package```shell# Via pippip install novu# Via poetrypoetry add novu```## Contents- [Install](#install)- [Quick start](#quick-start)- [Code Snippet Examples](#code-snippet-examples)  - [Events](#events)  - [Subscribers](#subscribers)  - [Topics](#topics)  - [Feeds](#feeds)  - [Environments](#environments)- [Go further](#go-further)- [Development](#development)## Quick startThis package is a wrapper of all the resources offered by Novu, we will just start by triggering an event on Novu.To do this, you will need to:1. Create your first notification workflow and keep in mind the identifier to trigger the workflow: https://docs.novu.co/overview/quickstart/general-quickstart#create-a-workflow2. Retrieve your API key from the Novu dashboard directly in the settings section: https://web.novu.co/settings3. Write code to trigger your first event:```pythonfrom novu.api import EventApievent_api = EventApi(&quot;https://api.novu.co&quot;, &quot;&lt;NOVU_API_KEY&gt;&quot;)event_api.trigger(    name=&quot;&lt;YOUR_WORKFLOW_ID&gt;&quot;,  # The workflow ID is the slug of the workflow name. It can be found on the workflow page.    recipients=&quot;&lt;YOUR_SUBSCRIBER_ID&gt;&quot;,    payload={},  # Your Novu payload goes here)```This will trigger a notification to the subscribers.## Code Snippet Examples### EventsFirstly, make imports and declare the needed variables this way:```pythonfrom novu.api import EventApiurl = &quot;https://api.novu.co&quot;api_key = &quot;&lt;NOVU_API_KEY&gt;&quot;# You can sign up on https://web.novu.co to get your API key from https://web.novu.co/settings```**Trigger an event** - Send notification to subscribers:```pythonfrom novu.api import EventApinovu = EventApi(url, api_key).trigger(    name=&quot;digest-workflow-example&quot;,  # This is the Workflow ID. It can be found on the workflow page.    recipients=&quot;&lt;SUBSCRIBER_IDENTIFIER&gt;&quot;, # The subscriber ID can be gotten from the dashboard.    payload={},  # Your custom Novu payload goes here)```**Bulk Trigger events** - Trigger multiple events at once:```pythonfrom novu.dto.event import InputEventDtofrom novu.api import EventApiurl = &quot;https://api.novu.co&quot;api_key = &quot;&lt;NOVU_API_KEY&gt;&quot;event_1 = InputEventDto(    name=&quot;digest-workflow-example&quot;,  # The workflow ID is the slug of the workflow name. It can be found on the workflow page.    recipients=&quot;&lt;SUBSCRIBER_IDENTIFIER&gt;&quot;,    payload={},  # Your custom Novu payload goes here)event_2 = InputEventDto(    name=&quot;digest-workflow-example&quot;,    recipients=&quot;&lt;SUBSCRIBER_IDENTIFIER&gt;&quot;,    payload={},)novu = EventApi(&quot;https://api.novu.co&quot;, api_key).trigger_bulk(events=[event1, event2])```**Broadcast to all current subscribers:**```pythonnovu = EventApi(url, api_key).broadcast(    name=&quot;digest-workflow-example&quot;,    payload={&quot;customVariable&quot;: &quot;value&quot;},  # Optional)```### Subscribers```pythonfrom novu.dto.subscriber import SubscriberDtofrom novu.api.subscriber import SubscriberApiurl = &quot;https://api.novu.co&quot;api_key = &quot;&lt;NOVU_API_KEY&gt;&quot;# Define a subscriber instancesubscriber = SubscriberDto(    email=&quot;novu_user@mail.com&quot;,    subscriber_id=&quot;82a48af6ac82b3cc2157b57f&quot;, #This is what the subscriber_id looks like    first_name=&quot;&quot;,  # Optional    last_name=&quot;&quot;,  # Optional    phone=&quot;&quot;,  # Optional    avatar=&quot;&quot;,  # Optional)# Create a subscribernovu = SubscriberApi(url, api_key).create(subscriber)# Get a subscribernovu = SubscriberApi(url, api_key).get(subscriber_id)# Get list of subscribersnovu = SubscriberApi(url, api_key).list()```### Topics```pythonfrom novu.api import TopicApiurl = &quot;&lt;NOVU_URL&gt;&quot;api_key = &quot;&lt;NOVU_API_KEY&gt;&quot;# Create a topicnovu = TopicApi(url, api_key).create(    key=&quot;new-customers&quot;, name=&quot;New business customers&quot;)# Get a topicnovu = TopicApi(url, api_key).get(key=&quot;new-customers&quot;)# List topicsnovu = TopicApi(url, api_key).list()# Rename a topicnovu = TopicApi(url, api_key).rename(key=&quot;new-customers&quot;, name=&quot;New business customers&quot;)# Subscribe a list of subscribers to a topicnovu = TopicApi(url, api_key).subscribe(key=&quot;old-customers&quot;, subscribers=&quot;&lt;LIST_OF_SUBSCRIBER_IDs&gt;&quot;)# Unsubscribe a list of subscribers from a topicnovu = TopicApi(url, api_key).unsubscribe(key=&quot;old-customers&quot;, subscribers=&quot;&lt;LIST_OF_SUBSCRIBER_IDs&gt;&quot;)```### Feeds```pythonfrom novu.api.feed import FeedApiurl = &quot;&lt;NOVU_URL&gt;&quot;api_key = &quot;&lt;NOVU_API_KEY&gt;&quot;# Create a Feednovu = FeedApi(url, api_key).create(name=&quot;&lt;SUPPLY_NAME_FOR_FEED&gt;&quot;)# Delete a Feednovu = FeedApi(url, api_key).delete(feed_id=&quot;&lt;FEED_IDENTIFIER&quot;)# List feedsnovu = FeedApi(url, api_key).list()```### Environments```pythonfrom novu.api.environment import EnvironmentApiurl = &quot;&lt;NOVU_URL&gt;&quot;api_key = &quot;&lt;NOVU_API_KEY&gt;&quot;# Create an Environmentnovu = EnvironmentApi(url, api_key).create(    name=&quot;&lt;INSERT_NAME&gt;&quot;,    parent_id=&quot;&lt;INSERT_PARENT_ID&gt;&quot; # Optional. Defaults to None)# # List existing environmentsnovu = EnvironmentApi(url, api_key).list()# # Get the current environmentnovu = EnvironmentApi(url, api_key).current()# # Retrieve an environment's API_KEYnovu = EnvironmentApi(url, api_key).api_keys()```## Go furtherAfter a quick start with the SDK, you'll quickly get to grips with the advanced use of the SDK and the other APIs available.For this purpose, documentation is available here: https://novu-python.readthedocs.io/## Development```bash# install depspoetry install# pre-commitpoetry run pre-commit install --install-hookpoetry run pre-commit install --install-hooks --hook-type commit-msg```</longdescription>
</pkgmetadata>