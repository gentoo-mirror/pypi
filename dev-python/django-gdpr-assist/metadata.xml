<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>==================django-GDPR-assist==================Tools to help manage your users' data in the age of GDPRhttps://github.com/wildfish/django-gdpr-assist.. image:: https://travis-ci.org/wildfish/django-gdpr-assist.svg?branch=master    :target: https://travis-ci.org/wildfish/django-gdpr-assist.. image:: https://coveralls.io/repos/wildfish/django-gdpr-assist/badge.svg?branch=master&amp;service=github    :target: https://coveralls.io/github/wildfish/django-gdpr-assist?branch=master.. image:: https://readthedocs.org/projects/django-gdpr-assist/badge/?version=latest    :target: https://django-gdpr-assist.readthedocs.io/en/latest/?badge=latestFeatures========* Find, export and anonymise personal data to comply with GDPR requests* Track anonymisation and deletion of personal data to replay after restoring  backups* Anonymise all models to sanitise working copies of a production databaseSupports Django 2.2 to 4.0, on Python 3.6 to 3.10.See the `full documentation &lt;https://django-gdpr-assist.readthedocs.io&gt;`_ for detailsof how GDPR-assist works; in particular:* `Installation &lt;https://django-gdpr-assist.readthedocs.io/en/latest/installation.html&gt;`_  - how to install* `Usage &lt;https://django-gdpr-assist.readthedocs.io/en/latest/usage.html&gt;`_  - overview of how to use it with your project* `Upgrading &lt;https://django-gdpr-assist.readthedocs.io/en/latest/upgrading.html&gt;`_  - what has changed from previous versions and how to upgrade* `Contributing &lt;https://django-gdpr-assist.readthedocs.io/en/latest/contributing.html&gt;`_  - how to contribute to the projectQuickstart==========Install with ``pip install django-gdpr-assist``, add ``gdpr_assist`` toDjango's ``INSTALLED_APPS`` and add a ``gdpr_log`` definition to ``DATABASES``.Then start adding privacy metadata to your models::    class Comment(models.Model):        name = models.CharField(max_length=255, blank=True)        age = models.IntegerField(null=True, blank=True)        message = models.TextField()        class PrivacyMeta:            fields = ['name', 'age']            search_fields = ['name']            export_fields = ['name', 'age', 'message']This will allow you to anonymise and export data in this model using thestandard gdpr-assist admin tool. You can also configure anonymisation ordeletion of a related model to trigger anonymisation of your model, and canmanually register a ``PrivacyMeta`` for third-party models without modifyingtheir code.Anonymisation and deletion events for models registered with gdpr-assist arelogged for replay after a backup restoration with the ``gdpr_rerun`` managementcommand. When you need to work with a copy of the production data, there isalso the ``anonymise_db`` command, which will anonymise the whole database.</longdescription>
</pkgmetadata>