<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Keytree=======Keytree provides functions for reading and writing KML using the ElementTreeAPI. Reading KML-----------KML Placemark elements can be adapted to the Python geo interface and then usedwith packages like Shapely_::  &gt;&gt;&gt; data = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  ... &lt;kml xmlns=&quot;http://www.opengis.net/kml/2.2&quot;&gt;  ...   &lt;Document&gt;  ...     &lt;Placemark id=&quot;pm_1&quot;&gt;  ...       &lt;name&gt;point&lt;/name&gt;  ...       &lt;Snippet&gt;Point test&lt;/Snippet&gt;  ...       &lt;Point&gt;  ...         &lt;coordinates&gt;  ...           -122.364383,37.824664,0  ...         &lt;/coordinates&gt;  ...       &lt;/Point&gt;  ...     &lt;/Placemark&gt;  ...   &lt;/Document&gt;  ... &lt;/kml&gt;  ... &quot;&quot;&quot;  &gt;&gt;&gt; from xml.etree import ElementTree  &gt;&gt;&gt; doc = ElementTree.fromstring(data)  &gt;&gt;&gt; kmlns = doc.tag.split('}')[0][1:]  &gt;&gt;&gt; placemarks = doc.findall('*/{%s}Placemark' % kmlns)  &gt;&gt;&gt; p0 = placemarks[0]  &gt;&gt;&gt; import keytree  &gt;&gt;&gt; f = keytree.feature(p0)  &gt;&gt;&gt; print f.id, f.properties.name, f.properties.snippet  pm_1, point, Point test  &gt;&gt;&gt;   &gt;&gt;&gt; from shapely.geometry import shape  &gt;&gt;&gt; s = shape(f.geometry)  &gt;&gt;&gt; print s.buffer(1.5).exterior.length  9.4209934708642571Writing KML-----------Objects that provide the Python geo interface can also be converted toElementTree API Elements::  &gt;&gt;&gt; f = {  ...     'id': 'pm_2',   ...     'geometry': {  ...         'type': 'Point',   ...         'coordinates': (-122.364383, 37.824663999999999) },  ...     'properties': {  ...         'title': 'Feature 2',   ...         'description': 'The second feature', }The first argument to the keytree.element function is an XML context, thecreated element will have the same namespace as that element::  &gt;&gt;&gt; data = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  ... &lt;kml xmlns=&quot;http://www.opengis.net/kml/2.2&quot;&gt;  ...   &lt;Document&gt;  ...   &lt;/Document&gt;  ... &lt;/kml&gt;  ... &quot;&quot;&quot;  &gt;&gt;&gt; doc = ElementTree.fromstring(data)  &gt;&gt;&gt; elem = element(doc, f)  &gt;&gt;&gt; print elem  &lt;Element {http://www.opengis.net/kml/2.2}Placemark at ...&gt;  &gt;&gt;&gt; pprint(list(elem))  [&lt;Element {http://www.opengis.net/kml/2.2}name at ...&gt;,   &lt;Element {http://www.opengis.net/kml/2.2}Snippet at ...&gt;,   &lt;Element {http://www.opengis.net/kml/2.2}description at ...&gt;,   &lt;Element {http://www.opengis.net/kml/2.2}Point at ...&gt;]The created element is not automatically added to the KML context and must beappended to its proper Document or Folder::  &gt;&gt;&gt; doc[0].append(elem)  &gt;&gt;&gt; print etree.tostring(doc)  &lt;ns0:kml xmlns:ns0=&quot;http://www.opengis.net/kml/2.2&quot;&gt;    &lt;ns0:Document&gt;      &lt;ns0:Placemark id=&quot;pm_2&quot;&gt;        &lt;ns0:name&gt;Number 2&lt;/ns0:name&gt;        &lt;ns0:Snippet&gt;Placemark number 2&lt;/ns0:Snippet&gt;        &lt;ns0:description /&gt;        &lt;ns0:Point&gt;          &lt;ns0:coordinates&gt;0.000000,0.000000,0.0&lt;/ns0:coordinates&gt;        &lt;/ns0:Point&gt;      &lt;/ns0:Placemark&gt;    &lt;/ns0:Document&gt;  &lt;/ns0:kml&gt;KML Helpers-----------The keytree.kml module contains a few useful utility functions::  &gt;&gt;&gt; from keytree.kml import kml_ns, findall_placemarks  &gt;&gt;&gt; print kml_ns(doc)  {http://www.opengis.net/kml/2.2}  &gt;&gt;&gt; findall_placemarks(doc)  [&lt;Element {http://www.opengis.net/kml/2.2}Placemark at ...&gt;].. _Shapely: http://pypi.python.org/pypi/Shapely</longdescription>
</pkgmetadata>