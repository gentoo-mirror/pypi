<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;img alt=&quot;Logo&quot; src=&quot;https://github.com/etna-team/etna/raw/master/etna_logo.png&quot; width=&quot;100%&quot;/&gt;&lt;/div&gt;&lt;h3 align=&quot;center&quot;&gt;Predict your time series the easiest way&lt;/h3&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://pypi.org/project/etna/&quot;&gt;&lt;img alt=&quot;PyPI Version&quot; src=&quot;https://img.shields.io/pypi/v/etna.svg&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://pypi.org/project/etna/&quot;&gt;&lt;img alt=&quot;Python versions&quot; src=&quot;https://img.shields.io/pypi/pyversions/etna.svg&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://pepy.tech/project/etna&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://static.pepy.tech/personalized-badge/etna?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=green&amp;left_text=Downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://codecov.io/gh/etna-team/etna&quot;&gt;&lt;img alt=&quot;Coverage&quot; src=&quot;https://img.shields.io/codecov/c/github/etna-team/etna.svg&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/etna-team/etna/actions/workflows/test.yml?query=branch%3Amaster++&quot;&gt;&lt;img alt=&quot;Test passing&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/etna-team/etna/test.yml?branch=master&amp;label=tests&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/etna-team/etna/actions/workflows/publish.yml&quot;&gt;&lt;img alt=&quot;Docs publish&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/etna-team/etna/publish.yml?label=docs&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/etna-team/etna/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/etna-team/etna.svg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://t.me/etna_support&quot;&gt;&lt;img alt=&quot;Telegram&quot; src=&quot;https://img.shields.io/badge/channel-telegram-blue&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/etna-team/etna/discussions&quot;&gt;&lt;img alt=&quot;GitHub Discussions&quot; src=&quot;https://img.shields.io/github/discussions/etna-team/etna&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/etna-team/etna/graphs/contributors&quot;&gt;&lt;img alt=&quot;Contributors&quot; src=&quot;https://img.shields.io/github/contributors/etna-team/etna.svg&quot; /&gt;&lt;/a&gt;  &lt;a href=&quot;https://github.com/etna-team/etna/stargazers&quot;&gt;&lt;img alt=&quot;Stars&quot; src=&quot;https://img.shields.io/github/stars/etna-team/etna?style=social&quot; /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;center&quot;&gt;  &lt;a href=&quot;https://etna.tinkoff.ru&quot;&gt;Homepage&lt;/a&gt; |   &lt;a href=&quot;https://docs.etna.ai/stable/&quot;&gt;Documentation&lt;/a&gt; |  &lt;a href=&quot;https://github.com/etna-team/etna/tree/master/examples&quot;&gt;Tutorials&lt;/a&gt; |  &lt;a href=&quot;https://github.com/etna-team/etna/blob/master/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; |  &lt;a href=&quot;https://github.com/etna-team/etna/releases&quot;&gt;Release Notes&lt;/a&gt;&lt;/p&gt;ETNA is an easy-to-use time series forecasting framework. It includes built in toolkits for time series preprocessing, feature generation, a variety of predictive models with unified interface - from classic machine learningto SOTA neural networks, models combination methods and smart backtesting.ETNA is designed to make working with time series simple, productive, and fun. ETNA is the first python open source framework of [Tinkoff.ru](https://www.tinkoff.ru/eng/)Artificial Intelligence Center. The library started as an internal product in our company - we use it in over 10+ projects now, so we often release updates. Contributions are welcome - check our [Contribution Guide](https://github.com/etna-team/etna/blob/master/CONTRIBUTING.md).## QuickstartLet's load and prepare the data.```pythonimport pandas as pdfrom etna.datasets import TSDataset# Read the datadf = pd.read_csv(&quot;examples/data/example_dataset.csv&quot;)# Create a TSDatasetdf = TSDataset.to_dataset(df)ts = TSDataset(df, freq=&quot;D&quot;)# Choose a horizonHORIZON = 14# Make train/test splittrain_ts, test_ts = ts.train_test_split(test_size=HORIZON)```Define transformations and model:```pythonfrom etna.models import CatBoostMultiSegmentModelfrom etna.transforms import DateFlagsTransformfrom etna.transforms import DensityOutliersTransformfrom etna.transforms import FourierTransformfrom etna.transforms import LagTransformfrom etna.transforms import LinearTrendTransformfrom etna.transforms import MeanTransformfrom etna.transforms import SegmentEncoderTransformfrom etna.transforms import TimeSeriesImputerTransformfrom etna.transforms import TrendTransform# Prepare transformstransforms = [    DensityOutliersTransform(in_column=&quot;target&quot;, distance_coef=3.0),    TimeSeriesImputerTransform(in_column=&quot;target&quot;, strategy=&quot;forward_fill&quot;),    LinearTrendTransform(in_column=&quot;target&quot;),    TrendTransform(in_column=&quot;target&quot;, out_column=&quot;trend&quot;),    LagTransform(in_column=&quot;target&quot;, lags=list(range(HORIZON, 122)), out_column=&quot;target_lag&quot;),    DateFlagsTransform(week_number_in_month=True, out_column=&quot;date_flag&quot;),    FourierTransform(period=360.25, order=6, out_column=&quot;fourier&quot;),    SegmentEncoderTransform(),    MeanTransform(in_column=f&quot;target_lag_{HORIZON}&quot;, window=12, seasonality=7),    MeanTransform(in_column=f&quot;target_lag_{HORIZON}&quot;, window=7),]# Prepare modelmodel = CatBoostMultiSegmentModel()```Fit `Pipeline` and make a prediction:```pythonfrom etna.pipeline import Pipeline# Create and fit the pipelinepipeline = Pipeline(model=model, transforms=transforms, horizon=HORIZON)pipeline.fit(train_ts)# Make a forecastforecast_ts = pipeline.forecast()```Let's plot the results:```pythonfrom etna.analysis import plot_forecastplot_forecast(forecast_ts=forecast_ts, test_ts=test_ts, train_ts=train_ts, n_train_samples=50)```![](examples/assets/readme/quickstart.png)Print the metric value across the segments:```pythonfrom etna.metrics import SMAPEmetric = SMAPE()metric_value = metric(y_true=test_ts, y_pred=forecast_ts)metric_value``````bash{'segment_a': 4.799114474387907, 'segment_b': 3.271014290441896, 'segment_c': 6.758606238307858, 'segment_d': 4.512871862697337}```Notebook with this example is available [here](examples/quickstart.ipynb).## Installation ETNA is available on [PyPI](https://pypi.org/project/etna), so you can use `pip` to install it.Install default version:```bashpip install --upgrade pippip install etna```The default version doesn't contain all the dependencies, because some of them are needed only for specific models, e.g. Prophet, PyTorch.Available user extensions are the following:* `prophet`: adds prophet model`,* `torch`: adds models based on neural nets,* `wandb`: adds wandb logger,* `auto`: adds AutoML functionality,* `statsforecast`: adds models from [statsforecast](https://nixtla.github.io/statsforecast/)* `classiciation`: adds time series classification functionality.Install extension:```bashpip install etna[extension-name]```Install all the extensions:```bashpip install etna[all]```There are also developer extensions. All the extensions are listed in [`pyproject.toml`](https://github.com/etna-team/etna/blob/master/pyproject.toml#L93).Without the appropriate extension you will get an `ImportError` trying to import the model that needs it.For example, `etna.models.ProphetModel` needs `prophet` extension and can't be used without it.### ConfigurationETNA supports configuration files. It means that library will check that all the specified packages are installed prior to script start and NOT during runtime. To set up a configuration for your project you should create a `.etna` file at the project's root. To see the available options look at [`Settings`](https://github.com/etna-team/etna/blob/master/etna/settings.py#L94). There is an [example](https://github.com/etna-team/etna/tree/master/examples/configs/.etna) of configuration file.## TutorialsWe have also prepared a set of tutorials for an easy introduction:| Notebook                                                                                                                     |                                                                                                                                         Interactive launch ||:-----------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------:|| [Get started](https://github.com/etna-team/etna/tree/master/examples/101-get_started.ipynb)                                 |                [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/101-get_started.ipynb) || [Backtest](https://github.com/etna-team/etna/tree/master/examples/102-backtest.ipynb)                                       |                   [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/102-backtest.ipynb) || [EDA](https://github.com/etna-team/etna/tree/master/examples/103-EDA.ipynb)                                                 |                        [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/103-EDA.ipynb) || [Regressors and exogenous data](https://github.com/etna-team/etna/tree/master/examples/201-exogenous_data.ipynb)            |             [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/201-exogenous_data.ipynb) || [Deep learning models](https://github.com/etna-team/etna/tree/master/examples/202-NN_examples.ipynb)                        |                [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/202-NN_examples.ipynb) || [Ensembles](https://github.com/etna-team/etna/tree/master/examples/303-ensembles.ipynb)                                     |                  [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/203-ensembles.ipynb) || [Outliers](https://github.com/etna-team/etna/tree/master/examples/204-outliers.ipynb)                                       |                   [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/204-outliers.ipynb) || [AutoML](https://github.com/etna-team/etna/tree/master/examples/205-automl.ipynb)                                           |                     [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/205-automl.ipynb) || [Clustering](https://github.com/etna-team/etna/tree/master/examples/206-clustering.ipynb)                                   |                 [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/206-clustering.ipynb) || [Feature selection](https://github.com/etna-team/etna/blob/master/examples/207-feature_selection.ipynb)                     |          [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/207-feature_selection.ipynb) || [Forecasting strategies](https://github.com/etna-team/etna/tree/master/examples/208-forecasting_strategies.ipynb)           |     [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/208-forecasting_strategies.ipynb) || [Mechanics of forecasting](https://github.com/etna-team/etna/blob/master/examples/209-mechanics_of_forecasting.ipynb)       |   [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/209-mechanics_of_forecasting.ipynb) || [Custom model and transform](https://github.com/etna-team/etna/tree/master/examples/301-custom_transform_and_model.ipynb)   | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/301-custom_transform_and_model.ipynb) || [Inference: using saved pipeline on a new data](https://github.com/etna-team/etna/tree/master/examples/302-inference.ipynb) |                  [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/302-inference.ipynb) || [Hierarchical time series](https://github.com/etna-team/etna/blob/master/examples/303-hierarchical_pipeline.ipynb)          |      [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/303-hierarchical_pipeline.ipynb) || [Forecast interpretation](https://github.com/etna-team/etna/tree/master/examples/304-forecast_interpretation.ipynb)         |    [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/304-forecast_interpretation.ipynb) || [Classification](https://github.com/etna-team/etna/blob/master/examples/305-classification.ipynb)                           |             [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/etna-team/etna/master?filepath=examples/305-classification.ipynb) |## DocumentationETNA documentation is available [here](https://docs.etna.ai/stable/).## CommunityTo ask the questions or discuss the library you can join our [telegram chat](https://t.me/etna_support). ## Resources- [Forecasting using ETNA library | 60 lines Catboost](https://www.kaggle.com/code/goolmonika/forecasting-using-etna-library-60-lines-catboost) on Kaggle- [Прикладные задачи анализа данных, лекция 8 — Временные ряды 2](https://youtu.be/1gXVbidDZck) on YouTube- [Time Series Forecasting Strategies in ETNA](https://medium.com/its-tinkoff/time-series-forecasting-strategies-in-etna-93d7d2f8a911) on Medium- [ETNA: Time Series Analysis. What, why and how?](https://medium.com/its-tinkoff/etna-time-series-analysis-what-why-and-how-e45557af4f6c) on Medium- [ETNA Meetup Jun 2022](https://www.youtube.com/watch?v=N1Xy3EqY058&amp;list=PLLrf_044z4JrSsjMd-3dF6VbBLPI_yOxG) on YouTube- [DUMP May 2022 talk](https://youtu.be/12uuxepdtks) on YouTube- [ETNA Regressors](https://medium.com/its-tinkoff/etna-regressors-d2722923e88e) on Medium- [Time series forecasting with ETNA: first steps](https://medium.com/its-tinkoff/time-series-forecasting-with-etna-first-steps-dfaf90c5b919) on Medium- [EDA notebook for Ubiquant Market Prediction](https://www.kaggle.com/code/martins0n/ubiquant-eda-toy-predictions-etna) on Kaggle- [Tabular Playground Series - Mar 2022 (7th place!)](https://www.kaggle.com/code/chikovalexander/tps-mar-2022-etna/notebook?scriptVersionId=91575908) on Kaggle- [Tabular Playground Series - Jan 2022](https://www.kaggle.com/code/chikovalexander/tps-jan-2022-etna/notebook) on Kaggle- [Forecasting with ETNA: Fast and Furious](https://medium.com/its-tinkoff/forecasting-with-etna-fast-and-furious-1b58e1453809) on Medium- [Store sales prediction with etna library](https://www.kaggle.com/dmitrybunin/store-sales-prediction-with-etna-library?scriptVersionId=81104235) on Kaggle- [PyCon Russia September 2021 talk](https://youtu.be/VxWHLEFgXnE) on YouTube## Acknowledgments### ETNA.Team[Andrey Alekseev](https://github.com/iKintosh),[Nikita Barinov](https://github.com/diadorer),[Dmitriy Bunin](https://github.com/Mr-Geekman),[Aleksandr Chikov](https://github.com/alex-hse-repository),[Vladislav Denisov](https://github.com/v-v-denisov),[Martin Gabdushev](https://github.com/martins0n),[Sergey Kolesnikov](https://github.com/Scitator),[Artem Makhin](https://github.com/Ama16),[Ivan Mitskovets](https://github.com/imitskovets),[Albina Munirova](https://github.com/albinamunirova),[Julia Shenshina](https://github.com/julia-shenshina),[Yuriy Tarasyuk](https://github.com/DBcreator),[Konstantin Vedernikov](https://github.com/scanhex12),[Ivan Nedosekov](https://github.com/GrozniyToaster),[Rodion Petrov](https://github.com/Noidor1)### ETNA.Contributors[WinstonDovlatov](https://github.com/WinstonDovlatov),[mvakhmenin](https://github.com/mvakhmenin),[Carlosbogo](https://github.com/Carlosbogo),[Pacman1984](https://github.com/Pacman1984),[looopka](https://github.com/looopka),[Artem Levashov](https://github.com/soft1q),[Aleksey Podkidyshev](https://github.com/alekseyen)## LicenseFeel free to use our library in your commercial and private applications.ETNA is covered by [Apache 2.0](/LICENSE). Read more about this license [here](https://choosealicense.com/licenses/apache-2.0/)&gt; Please note that `etna[prophet]` is covered by [GPL 2.0](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html) due to pystan package.</longdescription>
</pkgmetadata>