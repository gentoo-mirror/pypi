<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/datalad/datalad-installer/workflows/Test/badge.svg?branch=master    :target: https://github.com/datalad/datalad-installer/actions?workflow=Test    :alt: CI Status.. image:: https://codecov.io/gh/datalad/datalad-installer/branch/master/graph/badge.svg    :target: https://codecov.io/gh/datalad/datalad-installer.. image:: https://img.shields.io/pypi/pyversions/datalad-installer.svg    :target: https://pypi.org/project/datalad-installer/.. image:: https://img.shields.io/github/license/datalad/datalad-installer.svg    :target: https://opensource.org/licenses/MIT    :alt: MIT License`GitHub &lt;https://github.com/datalad/datalad-installer&gt;`_| `PyPI &lt;https://pypi.org/project/datalad-installer/&gt;`_| `Issues &lt;https://github.com/datalad/datalad-installer/issues&gt;`_| `Changelog &lt;https://github.com/datalad/datalad-installer/blob/master/CHANGELOG.md&gt;`_``datalad-installer`` is a script for installing Datalad_, git-annex_, andrelated components all in a single invocation.  It requires no third-partyPython libraries, though it does make heavy use of external packaging commands... _Datalad: https://www.datalad.org.. _git-annex: https://git-annex.branchable.comInstallation============``datalad-installer`` requires Python 3.7 or higher.  Just use `pip&lt;https://pip.pypa.io&gt;`_ for Python 3 (You have pip, right?) to install it::    python3 -m pip install datalad-installerAlternatively, download the latest version directly from&lt;https://raw.githubusercontent.com/datalad/datalad-installer/master/src/datalad_installer.py&gt;.Usage=====::    datalad-installer [&lt;global options&gt;] &lt;component&gt;[=&lt;version&gt;] [&lt;options&gt;] &lt;component&gt;[=&lt;version&gt;] [&lt;options&gt;] ...``datalad-installer`` provisions one or more *components* listed on the commandline.  Each component is either a software package (e.g., Datalad or git-annex)or an environment in which software packages can be installed.  If nocomponents are specified on the command line, the script defaults to installingthe ``datalad`` component.Global Options---------------E FILE, --env-write-file FILE  Append any ``PATH`` modifications or other                                shell commands needed to use the new components                                to the given file.  This option can be                                specified multiple times.  If this option is                                not given, the data is written to a temporary                                file whose location is logged at the beginning                                of the program.-l LEVEL, --log-level LEVEL     Set the log level to the given value.  Possible                                values are &quot;``CRITICAL``&quot;, &quot;``ERROR``&quot;,                                &quot;``WARNING``&quot;, &quot;``INFO``&quot;, &quot;``DEBUG``&quot; (all                                case-insensitive) and their Python integer                                equivalents.  [default value: INFO]--sudo &lt;ask|error|ok&gt;           What to do when the script needs to run a                                command with ``sudo`` or privilege escalation:                                ask for confirmation (default), error, or run                                without confirmation.  This is always &quot;``ok``&quot;                                on Windows, where the system always asks for                                confirmation.-V, --version                   Display the script version and exit-h, --help                      Display usage information and exitComponents----------``venv``~~~~~~~~Creates a Python virtual environment using ``python -m venv``.  Subsequent``datalad`` components on the command line will be installed into this virtualenvironment by default if not overridden by an intervening componnent.Options'''''''-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                ``python -m venv``--path PATH                     Create the virtual environment at ``PATH``.  If                                not specified, the environment will be created                                in a directory in ``$TMPDIR``.``miniconda``~~~~~~~~~~~~~Installs the latest version of Miniconda.  Subsequent ``conda-env`` componentson the command line will use this installation, and subsequent ``datalad`` and``git-annex`` components will be installed using this conda by default if notoverridden by an intervening component.The Miniconda installation script is downloaded from``$ANACONDA_URL/Miniconda3-latest-$OS-x86_64.{sh,exe}``, where``$ANACONDA_URL`` is taken from the environment, defaulting to``https://repo.anaconda.com/miniconda``.Options'''''''--batch                         Run the Miniconda installation script in batch                                (noninteractive) mode.  This is always done                                when installing on Windows.                                In addition, if a spec is given (see below),                                this option causes ``--yes`` to be passed to                                ``conda install``.-c CHANNEL, --channel CHANNEL   Specify additional Conda channels to use when                                installing the packages listed in the spec (see                                below).  This option can be specified multiple                                times.-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the Miniconda installation script.--path PATH                     Install Miniconda at ``PATH``.  If not                                specified, it will be installed in a directory                                in ``$TMPDIR``.--python-match &lt;major|minor|micro&gt;                                Include ``python=V`` in the ``--spec``, where                                ``V`` is the Python version used to run                                ``datalad-installer`` to the given version                                level (e.g., under Python 3.9.13,                                ``--python-match major`` will install                                ``python=3``, ``minor`` will install                                ``python=3.9``, and ``micro`` will install                                ``python=3.9.13``)--spec SPEC                     Space-separated specifiers for packages to                                install in the Conda base environment after                                provisioning.``conda-env``~~~~~~~~~~~~~Creates a Conda environment.  If there is no preceding ``miniconda`` componenton the command line, Conda must already be installed on the system, and thisinstallation will be used to create the environment.Subsequent ``datalad`` and ``git-annex`` components will be installed into thisenvironment by default if not overridden by an intervening component.Options'''''''-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the ``conda create`` command.-n NAME, --name NAME            The name for the new environment.  If not                                specified, a random name will be generated.--spec SPEC                     Space-separated specifiers for packages to                                install in the new environment.``neurodebian``~~~~~~~~~~~~~~~Installs &amp; configures `NeuroDebian &lt;https://neuro.debian.net&gt;`_.Options'''''''-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the ``nd-configurerepo`` command.``git-annex``~~~~~~~~~~~~~Installs git-annex_.  The component takes an ``-m``, ``--method`` optionspecifying the installation method to use; the supported methods are:- ``apt``- ``autobuild``- ``brew``- ``conda`` (only supported on Linux)- ``datalad/git-annex``- ``datalad/git-annex:release``- ``datalad/git-annex:tested``- ``datalad/packages``- ``deb-url``- ``dmg``- ``neurodebian``- ``snapshot``If no method is specified, or if the method is set to &quot;``auto``&quot;, then the mostrecent component on the command line that provides a compatible installationmethod will be used.  If there is no such component, the first supportedcomponent from the following list will be used:- ``conda``- ``apt``- ``neurodebian``- ``brew``- ``autobuild``- ``datalad/packages``A specific version to install can be specified for those methods that supportit by suffixing &quot;``git-annex``&quot; with &quot;``=``&quot; and the version number on thecommand line.The ``git-annex`` component also accepts all options for the supportedinstallation methods; options not belonging to whichever method ends up usedwill be ignored.``datalad``~~~~~~~~~~~Installs Datalad_.  The component takes an ``-m``, ``--method`` optionspecifying the installation method to use; the supported methods are:- ``apt``- ``brew``- ``conda``- ``deb-url``- ``pip``If no method is specified, or if the method is set to &quot;``auto``&quot;, then the mostrecent component on the command line that provides a compatible installationmethod will be used.  If there is no such component, the first supportedcomponent from the following list will be used:- ``conda``- ``apt``- ``neurodebian``- ``brew``- ``autobuild``- ``datalad/packages``A specific version to install can be specified for those methods that supportit by suffixing &quot;``datalad``&quot; with &quot;``=``&quot; and the version number on thecommand line.The ``datalad`` component also accepts all options for the supportedinstallation methods; options not belonging to whichever method ends up usedwill be ignored.``rclone``~~~~~~~~~~~Installs rclone_.  The component takes an ``-m``, ``--method`` optionspecifying the installation method to use; the supported methods are:.. _rclone: https://rclone.org- ``apt``- ``brew``- ``conda``- ``deb-url``- ``downloads.rclone.org``If no method is specified, or if the method is set to &quot;``auto``&quot;, then the mostrecent component on the command line that provides a compatible installationmethod will be used.  If there is no such component, the first supportedcomponent from the following list will be used:- ``conda``- ``apt``- ``brew``- ``downloads.rclone.org``A specific version to install can be specified for those methods that supportit by suffixing &quot;``rclone``&quot; with &quot;``=``&quot; and the version number on thecommand line.The ``rclone`` component also accepts all options for the supportedinstallation methods; options not belonging to whichever method ends up usedwill be ignored.``git-annex-remote-rclone``~~~~~~~~~~~~~~~~~~~~~~~~~~~Installs git-annex-remote-rclone_.  The component takes an ``-m``, ``--method``option specifying the installation method to use; the supported methods are:.. _git-annex-remote-rclone:   https://github.com/DanielDent/git-annex-remote-rclone- ``apt``- ``brew``- ``conda``- ``deb-url``- ``DanielDent/git-annex-remote-rclone``If no method is specified, or if the method is set to &quot;``auto``&quot;, then the mostrecent component on the command line that provides a compatible installationmethod will be used.  If there is no such component, the first supportedcomponent from the following list will be used:- ``conda``- ``apt``- ``brew``- ``DanielDent/git-annex-remote-rclone``A specific version to install can be specified for those methods that supportit by suffixing &quot;``git-annex-remote-rclone``&quot; with &quot;``=``&quot; and the versionnumber on the command line.The ``git-annex-remote-rclone`` component also accepts all options for thesupported installation methods; options not belonging to whichever method endsup used will be ignored.Installation Methods--------------------``apt``~~~~~~~Install with ``sudo apt-get install``.  Supports installing specific versions.Options'''''''--build-dep                     Run ``sudo apt-get build-dep`` instead of                                ``sudo apt-get install``.-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the installation command.``autobuild``~~~~~~~~~~~~~Downloads &amp; installs the latest official build of ``git-annex`` fromkitenet.net.  Does not support installing specific versions.This installation method is only supported on Linux and macOS.``brew``~~~~~~~~Install with ``brew`` (`Homebrew &lt;https://brew.sh&gt;`_).  Does not supportinstalling specific versions.Options'''''''-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the installation command.``conda``~~~~~~~~~Install with ``conda install``.  Supports installing specific versions.Options'''''''-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the installation command.``DanielDent/git-annex-remote-rclone``~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Downloads &amp; installs ``git-annex-remote-rclone`` from a release of its GitHubproject.This installation method is only supported on Linux and macOS.Options'''''''--bin-dir DIR                   Directory in which to install the ``rclone``                                executable.  Defaults to ``/usr/local/bin``.                                If this contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR``.``datalad/git-annex``~~~~~~~~~~~~~~~~~~~~~Downloads &amp; installs the artifact from the latest build of `datalad/git-annex&lt;https://github.com/datalad/git-annex&gt;`_ that produced artifacts for therunning OS.  Does not support installing specific versions.This installation method requires a GitHub OAuth token with appropriatepermissions.  It must be specified either via the ``GITHUB_TOKEN`` environmentvariable or as the value of the ``hub.oauthtoken`` Git config option.Options'''''''--install-dir DIR               Directory in which to unpack the ``*.deb``                                package instead of installing it system-wide.                                If this contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR``. (Linux only)``datalad/git-annex:release``~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Downloads &amp; installs the asset for the running OS from the latest release (orthe specified version) of `datalad/git-annex&lt;https://github.com/datalad/git-annex&gt;`_.  If no explicit version is specifiedand the latest release lacks an asset for the running OS, the most recentrelease with a matching asset is used.Options'''''''--install-dir DIR               Directory in which to unpack the ``*.deb``                                package instead of installing it system-wide.                                If this contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR``. (Linux only)``datalad/git-annex:tested``~~~~~~~~~~~~~~~~~~~~~~~~~~~~Downloads &amp; installs the artifact from the latest successful build of`datalad/git-annex &lt;https://github.com/datalad/git-annex&gt;`_ for the running OS.Does not support installing specific versions.This installation method requires a GitHub OAuth token with appropriatepermissions.  It must be specified either via the ``GITHUB_TOKEN`` environmentvariable or as the value of the ``hub.oauthtoken`` Git config option.Options'''''''--install-dir DIR               Directory in which to unpack the ``*.deb``                                package instead of installing it system-wide.                                If this contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR``. (Linux only)``datalad/packages``~~~~~~~~~~~~~~~~~~~~~Downloads &amp; installs the artifact from&lt;https://datasets.datalad.org/?dir=/datalad/packages&gt; for the running OS.Supports installing specific versions (though note that the version strings forthis method tend to include Git commit information, e.g.,&quot;``8.20210127+git111-gbe5a0e4b8``&quot;).Options'''''''--install-dir DIR               Directory in which to unpack the ``*.deb``                                package instead of installing it system-wide.                                If this contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR``. (Linux only)``deb-url``~~~~~~~~~~~Download &amp; install a given ``*.deb`` package.  Does not support installingspecific versions.Options'''''''-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the installation command.--install-dir DIR               Directory in which to unpack the ``*.deb``                                package instead of installing it system-wide.                                If this contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR``.  If this contains the string                                ``{version}``, it will be replaced with the                                package's version. (``git-annex`` only)--url URL                       Specify the URL of the ``*.deb`` package.  This                                option is required for this installation                                method.``dmg``~~~~~~~Install git-annex to the ``/Applications`` directory from a properly-built``*.dmg`` image.  Does not support installing specific versions.This installation method is only supported on macOS.Options'''''''--path PATH                     Specify the path to the ``*.dmg`` image.  This                                option is required for this installation                                method.``downloads.rclone.org``~~~~~~~~~~~~~~~~~~~~~~~~Downloads &amp; installs ``rclone`` from &lt;https://downloads.rclone.org&gt;.Options'''''''--bin-dir DIR                   Directory in which to install the ``rclone``                                executable.  This option is required on                                Windows.  On Linux &amp; macOS, the directory                                defaults to ``/usr/local/bin``.  If the path                                contains the string ``{tmpdir}``, it will be                                replaced with the path to a directory in                                ``$TMPDIR``.--man-dir DIR                   Directory under which to install the ``rclone``                                manpage; specifically, the file ``rclone.1``                                will be placed in the ``man1/`` subdirectory of                                the given directory.  If this option is not                                specified, the manpage is not installed.  If                                the path contains the string ``{tmpdir}``, it                                will be replaced with the path to a directory                                in ``$TMPDIR`` (the same one as used for                                ``--bin-dir``, if applicable).``neurodebian``~~~~~~~~~~~~~~~Install from NeuroDebian repositories with ``sudo apt-get install``.  Supportsinstalling specific versions.Options'''''''--build-dep                     Run ``sudo apt-get build-dep`` instead of                                ``sudo apt-get install``.-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the installation command.``pip``~~~~~~~Install with ``python -m pip``.  Supports installing specific versions.If a ``venv`` component is previously given on the command line, theinstallation will be performed in that virtual environment; otherwise, it willbe performed using the same Python used to run ``datalad-installer``.Options'''''''--devel                         Install the given component from its GitHub                                repository instead of from PyPI.-e ARGS, --extra-args ARGS      Specify extra command-line arguments to pass to                                the installation command.-E EXTRAS, --extras EXTRAS      Specify (comma-separated) package extras to                                install.``snapshot``~~~~~~~~~~~~Downloads &amp; installs the latest official snapshot build of ``git-annex`` fromkitenet.net.  Does not support installing specific versions.This installation method is only supported on Linux and macOS.</longdescription>
</pkgmetadata>