<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Azure Data Explorer (Kusto) dialect for SQLAlchemy[![pypi](https://img.shields.io/pypi/v/sqlalchemy-kusto)](https://pypi.org/project/sqlalchemy-kusto/)`sqlalchemy-kusto` implements a DBAPI ([PEP-249](https://www.python.org/dev/peps/pep-0249)) and [SQLAlchemy dialect](https://docs.sqlalchemy.org/en/14/dialects/) that enables SQL query execution via SQLAlchemy.Current project includes support for two dialects: SQL dialect and KQL dialect.## SQL dialectCurrent implementation has full support for SQL queries. But pay your attention that Kusto implementation of T-SQL has not full coverage; check the [list of known issues](https://docs.microsoft.com/en-us/azure/data-explorer/kusto/api/tds/sqlknownissues).## KQL dialectKQL dialect still in progress. Please, use it on your own risk for now.&gt; Notice that implemented Kusto dialects don't support DDL statements and inserts, deletes, updates.## Installation```shellpip install sqlalchemy-kusto```## Library usage ### Using DBAPI```pythonfrom sqlalchemy_kusto import connectconnection = connect(        cluster=kusto_url,        database=database_name,        msi=False,        user_msi=None,        azure_ad_client_id=kusto_client_id,        azure_ad_client_secret=kusto_client_secret,        azure_ad_tenant_id=kusto_tenant_id,)result = connection.execute(f&quot;select 1&quot;).fetchall()```### Using SQLAlchemy raw sql```pythonfrom sqlalchemy.engine import create_engineengine = create_engine(    f&quot;kustosql+{kusto_url}/{database_name}?&quot;    f&quot;msi=False&amp;azure_ad_client_id={kusto_client_id}&amp;&quot;    f&quot;azure_ad_client_secret={kusto_client_secret}&amp;&quot;    f&quot;azure_ad_tenant_id={kusto_tenant_id}&quot;)engine.connect()cursor = engine.execute(f&quot;select top 1&quot;)data_rows = cursor.fetchall()```### Using SQLAlchemy ```pythonfrom sqlalchemy import create_engine, MetaData, Table, Column, String, Integerengine = create_engine(    f&quot;kustosql+{kusto_url}/{database_name}?&quot;    f&quot;msi=False&amp;azure_ad_client_id={kusto_client_id}&amp;&quot;    f&quot;azure_ad_client_secret={kusto_client_secret}&amp;&quot;    f&quot;azure_ad_tenant_id={kusto_tenant_id}&quot;)my_table = Table(        &quot;MyTable&quot;,        MetaData(),        Column(&quot;Id&quot;, Integer),        Column(&quot;Text&quot;, String),)query = my_table.select().limit(5)engine.connect()cursor = engine.execute(query)print([row for row in cursor])```### Using with Apache Superset[Apache Superset](https://github.com/apache/superset) starting from [version 1.5](https://github.com/apache/superset/blob/1c1beb653a52c1fcc67a97e539314f138117c6ba/RELEASING/release-notes-1-5/README.md) also supports Kusto database engine spec. \When connecting to a new data source you may choose a data source type either KustoSQL or KustoKQL depending on the dialect you want to use.There are following connection string formats:```shell# KustoSQLkustosql+https://&lt;CLUSTER_URL&gt;/&lt;DATABASE&gt;?azure_ad_client_id=&lt;CLIENT_ID&gt;&amp;azure_ad_client_secret=&lt;CLIENT_SECRET&gt;&amp;azure_ad_tenant_id=&lt;TENANT_ID&gt;&amp;msi=False# KustoKQLkustokql+https://&lt;CLUSTER_URL&gt;/&lt;DATABASE&gt;?azure_ad_client_id=&lt;CLIENT_ID&gt;&amp;azure_ad_client_secret=&lt;CLIENT_SECRET&gt;&amp;azure_ad_tenant_id=&lt;TENANT_ID&gt;&amp;msi=False```&gt; Important notice on package version compatibility. \&gt; Apache Superset stable releases 1.5 and 2.0 dependent on `sqlalchemy==1.3.24`. If you want to use `sqlalchemy-kusto` with these versions you need to install version `1.*` of the package.&gt; &gt; Current `master` branch of the `apache/superset` dependent on `sqlalchemy==1.4.36`. If you want to use `sqlalchemy-kusto` with the latest unstable version of `apache/superset`, you need to install version `2.*` of the package.## ContributingPlease see the [CONTRIBUTING.md](.github/CONTRIBUTING.md) for development setup and contributing process guidelines.---[Issue in Apache Superset repository](https://github.com/apache/superset/issues/10646) that inspired current solution.</longdescription>
</pkgmetadata>