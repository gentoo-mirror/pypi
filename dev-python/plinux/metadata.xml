<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![PyPI version](https://badge.fury.io/py/plinux.svg)](https://badge.fury.io/py/plinux)[![Python application](https://github.com/c-pher/plinux/actions/workflows/pythonapp.yml/badge.svg?branch=master)](https://github.com/c-pher/plinux/actions/workflows/pythonapp.yml)# PlinuxCross-platform tool to work with remote Linux OS.Plinux based on paramiko project. It can establish ssh connection to a remote server, execute command as user or with sudo rights. Plinux returns object with exit code, sent command, stdout/sdtderr response.## InstallationFor most users, the recommended method to install is via pip:```cmdpip install plinux```## Import```pythonfrom plinux import Plinux```---## Usage#### The most recommended usage way:```pythonfrom plinux import Plinuxclient = Plinux(host=&quot;172.16.0.124&quot;, username=&quot;bobby&quot;, password=&quot;qawsedrf&quot;)response = client.run_cmd(&quot;hostname&quot;)print(response.stdout)  # WebServerprint(response.ok)  # True``````pythonfrom plinux import Plinuxclient = Plinux()response = client.run_cmd_local(&quot;hostname&quot;)print(response.stdout)  # WebServerprint(response.ok)  # True```#### Command using sudo:```pythonfrom plinux import Plinuxclient = Plinux(host=&quot;172.16.0.124&quot;, username=&quot;bobby&quot;, password=&quot;qawsedrf&quot;, logger_enabled=True)response = client.run_cmd(&quot;systemctl stop myservicename.service&quot;, sudo=True)print(response)  # SSHResponse(response=(0, None, None, &quot;sudo -S -p '' -- sh -c 'systemctl stop myservicename.service'&quot;))print(response.command)  # sudo -S -p '' -- sh -c 'systemctl stop myservicename.service'print(response.exited)  # 0```#### SFTP usage:```pythonfrom plinux import Plinuxtool = Plinux(host=&quot;ftp.test.local&quot;, username=&quot;bobby&quot;, password=&quot;qawsedrf&quot;)sftp = tool.sftpprint(sftp.listdir())```#### SQLite3 usage:```pythonfrom plinux import Plinuxclient = Plinux(host=&quot;cdn1.test.local&quot;, username=&quot;bobby&quot;, password=&quot;qawsedrf&quot;)db_path = '/opt/ProductName/rxdb/StorageConfig.db'sql = 'select Data from DtoDataContainer'db = client.sqlite3(db_path, sql).json()print(db)  # {&quot;Settings1&quot;: 1, &quot;Settings2&quot;: 2...,&quot;Settings10&quot;: 10}print(db['Setting1'])  # {&quot;Settings1&quot;: 1}```#### AliasesSome methods have &quot;human commands&quot; and aliases:* client.run_cmd(&quot;cat /home/bobby/text&quot;)* client.cat(&quot;/home/bobby/text&quot;)</longdescription>
</pkgmetadata>