<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Cub Client for Python=====================.. image:: https://github.com/praetoriandigital/cub-python/workflows/Tests/badge.svg        :target: https://github.com/praetoriandigital/cub-python/actions?query=workflow%3ATestsRequirements------------Python version 2.7, 3.5, 3.6, 3.7, 3.8, 3.9 or PyPy. For better security, werecommend to install `Python Requests`_ library, since it supports SSL certsverification. To install Requests, simply run::    $ pip install requestsor using easy_install::    $ easy_install requestsRequests library is optional. If it is not installed, Cub Client will useurllib2 instead. All features of Cub Client will remain fully functional, butit will not verify SSL certificate of Cub API... _`Python Requests`: http://docs.python-requests.org/Installation------------Install using pip, recommended (`why?`_)::    $ pip install cubor using easy_install::    $ easy_install cub.. _`why?`: http://www.pip-installer.org/en/latest/other-tools.html#pip-compared-to-easy-installUsage-----User Login~~~~~~~~~~.. code:: python    import cub    import cub.config    cub.config.api_key = '&lt;your-secret-key&gt;'    user = cub.User.login(        username='&lt;username&gt;',        password='&lt;password&gt;',    )Get User by token~~~~~~~~~~~~~~~~~.. code:: python    import cub    user = cub.User.get('&lt;token&gt;')Report bugs-----------Report issues to the project's `Issues Tracking`_ on Github... _`Issues Tracking`: https://github.com/praetoriandigital/cub-python/issuesDevelopment-----------Run tests with local python::    $ INTEGRATION_TESTS_SECRET_KEY={key} INTEGRATION_TESTS_USER_PASS={password} pytest -v --tb=short tests.pyInstall tox::    $ pip install toxRun tests with tox::    $ INTEGRATION_TESTS_SECRET_KEY={key} INTEGRATION_TESTS_USER_PASS={password} toxTo install additional pythons, you can use `pyenv`_::    $ pyenv install 3.5.10    $ pyenv install 3.6.12    $ # in project dir run pyenv local    $ pyenv local system 3.5.10 3.6.12.. _`pyenv`: https://github.com/pyenv/pyenv/</longdescription>
</pkgmetadata>