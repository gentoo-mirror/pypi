<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pylint-json2htmlA pylint JSON report file to HTML: pylint is used to generate a JSON report,and this tool will transform this report into an HTML document:    usage: pylint-json2html [-h] [-o FILENAME] [-e OUTPUT_ENCODING]                            [-t FILENAME] [-f FORMAT] [FILENAME]    Transform Pylint JSON report to HTML    positional arguments:    FILENAME              Pylint JSON report input file (or stdin)    optional arguments:    -h, --help          show this help message and exit    -o FILENAME, --output FILENAME                        Pylint HTML report output file (or stdout)    -e ENCODING, --encoding ENCODING                        Encoding used to write output file (if not stdout);                        default to utf-8    -t FILENAME, --template FILENAME                        Jinja2 custom template to generate report    -f FORMAT, --input-format FORMAT                        Pylint JSON Report input type (json or jsonextended)## Why?Since its [1.7 version](https://pylint.readthedocs.io/en/latest/whatsnew/1.7.html#removed-changes),Pylint does not provide an HTML output format. The release notes say that:&gt; It was lately a second class citizen in Pylint, being mostly neglected.&gt; Since we now have the JSON reporter, it can be used as a basis for building&gt; more prettier HTML reports than what Pylint can currently generate.&gt; This is part of the effort of removing cruft from Pylint, by removing less&gt; used features.And I agree with that statements. Few people use the HTML reports, and pylintis getting old. Its core features are complex and they require a lot of timesand efforts - and I am thankful for that software to exist in the first place!So here it is: a plugin to fulfill my own needs. I share it as open-sourcebecause why not?## InstallationTo install this tool, use pip:    (venv) $ pip install pylint-json2htmlYou can always download the sources from the github repository, and use the`setup.py` file to `install` or `develop`, but I would not recommend thatunless you plan to contribute to this small project of mine.## UsageMy favorite way of using `pylint` and `pylint-json2html` is this one:    (venv) $ pylint my_package | pylint-json2html -o pylint.htmlProvided that you configure your Pylint config file with:    [REPORTS]    output-format=jsonBut you can generate first a JSON file, then use `pylint-json2html` to read it:    (venv) $ pylint your_package &gt; pylint.json    (venv) $ pylint-json2html -o pylint.html pylint.jsonYou can also redirect `pylint-json2html`'s stdout:    (venv) $ pylint-json2html pylint.json &gt; pylint.htmlYou can specify the output encoding used to write to your file. Note that youcan't do that with stdout (you will have to configure your environment's localeif you want to control that):    (venv) $ pylint-json2html -o pylint.html -e utf-8 pylint.jsonThis is especially usefull when your locale is something like `cp1252` or`latin1`, and you want to make sure your output file is properly written asutf-8 (as it should be when working with Python file).## Extended ReportActually, I lied about my favorite way, it is this one:    (venv) $ pylint my_package | pylint-json2html -f jsonextended -o pylint.htmlWith this Pylint configuration:    [MASTER]    load-plugins=pylint_json2html    [REPORTS]    output-format=jsonextendedThe `pylint_json2html` is a Pylint plugin that adds a new output format:`jsonextended`. By default, the `json` format contains only a list of messages,and this new format contains also metrics, such the number of analysedstatements, or the list of dependencies.The configuration above can be tested using the command line instead:    (venv) $ pylint --load-plugins=pylint_json2html \                    --output-format=jsonextended your_package &gt; pylint.jsonThen, you will be able to use the JSON extended report to generate an HTMLreport:    (venv) $ pylint-json2html -f jsonextended -o pylint.html pylint.jsonAnd voil√†!## Custom TemplateThis plugin uses a Jinja2 template to generate the HTML output, but you mayneed your own template. For that purpose, you can use the option`-t/--template`, like this:    (venv) $ pylint-json2html -f jsonextended -t custom.tpl -o pylint.html pylint.json### ReportIn your template you have access to a `report` object:* `report.score`: score given by pylint, available only with  `jsonextended` format* `report.previous_score`: previous score given by pylint, available only with  `jsonextended` format* `report.modules`: a list of 2-value tuple: `(module, messages)`The `module` object:* `module.name`: name of the module* `module.path`: path to the module's fileThe `messages` value is a list of dict, each with the following keys:* `line`* `column`* `type`* `symbol`* `message-id`* `obj`* `message`### MetricsIn your template you have access to a `metrics` dict with the following keys:`types`, `symbols`, `modules`, `paths`. Each of them contains a dict.### EncodingThe default template contains that header:    &lt;meta charset=&quot;utf-8&quot;&gt;So if you want to use a different output encoding, make sure that:1. you can actually encode the characters from pylint's output with that   encoding2. and also that you use your own custom template to change that meta tag,   otherwise that might not look very good in a browser</longdescription>
</pkgmetadata>