<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>odc.stac########|Documentation Status| |Test Status| |Test Coverage| |Binder|Load STAC items into ``xarray`` Datasets. Process locally or distribute dataloading and computation with Dask_.Usage#####odc.stac.load~~~~~~~~~~~~~.. code-block:: python   catalog = pystac_client.Client.open(...)   query = catalog.search(...)   xx = odc.stac.load(       query.get_items(),       bands=[&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;],   )   xx.red.plot.imshow(col=&quot;time&quot;)For more details see `Documentation`_ and `Sample Notebooks`_, or try it out on Binder_.Installation############Using pip~~~~~~~~~.. code-block:: bash   pip install odc-stacTo install with ``botocore`` support (for working with AWS):.. code-block:: bash   pip install 'odc-stac[botocore]'Using Conda~~~~~~~~~~~This package is be available on ``conda-forge`` channel:.. code-block:: bash   conda install -c conda-forge odc-stacFrom unreleased source~~~~~~~~~~~~~~~~~~~~~~To use development version of ``odc-stac`` install dependencies from ``conda``, theninstall ``odc-stac`` with ``pip``.Sample ``environment.yml`` is provided below... code-block:: yaml   channels:     - conda-forge   dependencies:     - odc-geo &gt;=0.1.3     - xarray &gt;=0.20.1     - numpy     - dask     - pandas     - affine     - rasterio     - toolz     - pystac     - pystac-client     - pip =22     - pip:       - &quot;git+https://github.com/opendatacube/odc-stac/&quot;Developing##########To develop ``odc-stac`` locally using pip (assuming you have virtualenvwrapper_ installed):.. code-block:: bash   git clone https://github.com/opendatacube/odc-stac   cd odc-stac   mkvirtualenv odc-stac   pip install -e .   pip install -r requirements-dev.txtRun tests with pytest_:.. code-block:: bash   pytestLinting is provided by mypy_, pylint_, and black_:.. code-block:: bash   black --check .   pylint -v odc   mypy odc.. |Documentation Status| image:: https://readthedocs.org/projects/odc-stac/badge/?version=latest   :target: https://odc-stac.readthedocs.io/en/latest/?badge=latest   :alt: Documentation Status.. |Test Status| image:: https://github.com/opendatacube/odc-stac/actions/workflows/main.yml/badge.svg   :target: https://github.com/opendatacube/odc-stac/actions/workflows/main.yml   :alt: Test Status.. |Test Coverage| image:: https://codecov.io/gh/opendatacube/odc-stac/branch/develop/graph/badge.svg?token=HQ8nTuZHH5   :target: https://codecov.io/gh/opendatacube/odc-stac   :alt: Test Coverage.. |Binder| image:: https://mybinder.org/badge_logo.svg   :target: https://mybinder.org/v2/gh/opendatacube/odc-stac/develop?urlpath=lab/workspaces/demo   :alt: Run Examples in Binder.. _Binder: https://mybinder.org/v2/gh/opendatacube/odc-stac/develop?urlpath=lab/workspaces/demo.. _virtualenvwrapper: https://virtualenvwrapper.readthedocs.io.. _pytest: https://docs.pytest.org.. _mypy: http://mypy-lang.org/.. _pylint: https://pylint.org/.. _black: https://github.com/psf/black.. _`Documentation`: https://odc-stac.readthedocs.io/.. _`Sample Notebooks`: https://odc-stac.readthedocs.io/en/latest/examples.html.. _Dask: https://dask.org/</longdescription>
</pkgmetadata>