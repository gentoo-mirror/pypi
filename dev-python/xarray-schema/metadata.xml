<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;p align=&quot;left&quot;&gt;  &lt;a href=&quot;https://carbonplan.org/#gh-light-mode-only&quot;&gt;    &lt;img src=&quot;https://carbonplan-assets.s3.amazonaws.com/monogram/dark-small.png&quot; height=&quot;48px&quot; /&gt;  &lt;/a&gt;  &lt;a href=&quot;https://carbonplan.org/#gh-dark-mode-only&quot;&gt;    &lt;img src=&quot;https://carbonplan-assets.s3.amazonaws.com/monogram/light-small.png&quot; height=&quot;48px&quot; /&gt;  &lt;/a&gt;&lt;/p&gt;# xarray-schemaSchema validation for Xarray[![CI](https://github.com/carbonplan/ndpyramid/actions/workflows/main.yaml/badge.svg)](https://github.com/carbonplan/xarray-schema/actions/workflows/main.yaml)[![codecov](https://codecov.io/gh/carbonplan/xarray-schema/branch/main/graph/badge.svg?token=EI729ZRFK0)](https://codecov.io/gh/carbonplan/xarray-schema)![MIT License](https://badgen.net/badge/license/MIT/blue)## installationInstall xarray-schema from PyPI:```shellpip install xarray-schema```Conda:```shellconda install -c conda-forge xarray-schema```Or install it from source:```shellpip install git+https://github.com/carbonplan/xarray-schema```## usageXarray-schema's API is modeled after [Pandera](https://pandera.readthedocs.io/en/stable/). The `DataArraySchema` and `DatasetSchema` objects both have `.validate()` methods.The basic usage is as follows:```pythonimport numpy as npimport xarray as xrfrom xarray_schema import DataArraySchema, DatasetSchema, CoordsSchemada = xr.DataArray(np.ones(4, dtype='i4'), dims=['x'], name='foo')schema = DataArraySchema(dtype=np.integer, name='foo', shape=(4, ), dims=['x'])schema.validate(da)```You can also use it to validate a `Dataset` like so:```schema_ds = DatasetSchema({'foo': schema})schema_ds.validate(da.to_dataset())```Each component of the Xarray data model is implemented as a stand alone class:```pythonfrom xarray_schema.components import (    DTypeSchema,    DimsSchema,    ShapeSchema,    NameSchema,    ChunksSchema,    ArrayTypeSchema,    AttrSchema,    AttrsSchema)# example constructionsdtype_schema = DTypeSchema('i4')dims_schema = DimsSchema(('x', 'y', None))  # None is used as a wildcardshape_schema = ShapeSchema((5, 10, None))  # None is used as a wildcardname_schema = NameSchema('foo')chunk_schema = ChunkSchema({'x': None, 'y': -1})  # None is used as a wildcard, -1 is used asArrayTypeSchema = ArrayTypeSchema(np.ndarray)# Example usagedtype_schama.validate(da.dtype)# Each object schema can be exported to JSON formatdtype_json = dtype_schama.to_json()```## roadmapThis is a very early prototype of a library. Some key things are missing:1. Validation of `coords` and `attrs`. These are not implemented yet.1. Exceptions: Pandera accumulates schema exceptions and reports them all at once. Currently, we are a eagerly raising `SchemaErrors` when the are found.1. Roundtrip schemas to/from JSON and/or YAML format.## licenseAll the code in this repository is [MIT](https://choosealicense.com/licenses/mit/) licensed, but we request that you please provide attribution if reusing any of our digital content (graphics, logo, articles, etc.).## about usCarbonPlan is a non-profit organization that uses data and science for climate action. We aim to improve the transparency and scientific integrity of climate solutions through open data and tools. Find out more at [carbonplan.org](https://carbonplan.org/) or get in touch by [opening an issue](https://github.com/carbonplan/xarray-schema/issues/new) or [sending us an email](mailto:hello@carbonplan.org).</longdescription>
</pkgmetadata>