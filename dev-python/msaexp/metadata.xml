<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://github.com/gbrammer/msaexp/actions/workflows/python-package.yml/badge.svg    :target: https://github.com/gbrammer/msaexp/actions.. image:: https://badge.fury.io/py/msaexp.svg    :target: https://badge.fury.io/py/msaexp    .. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.7579050.svg   :target: https://doi.org/10.5281/zenodo.7579050   .. image:: https://readthedocs.org/projects/msaexp/badge/?version=latest    :target: https://msaexp.readthedocs.io/en/latest/?badge=latest    :alt: Documentation Status    `msaexp`===================================================================================Tools for extracting JWST NIRSpec MSA spectra directly from the telescope exposuresUnder heavy construction...... note::    Please submit any questions/comments/problems you have through the `Issues &lt;https://github.com/gbrammer/msaexp/issues&gt;`_ interface.~~~~~~~~~~~~~Documentation~~~~~~~~~~~~~Documentation will be here: https://msaexp.readthedocs.io/, though it's essentially just the module API for now.The overall procedure is demonstrated in these notebooks:- `drizzled-nirspec.ipynb &lt;https://github.com/gbrammer/msaexp/blob/main/docs/examples/drizzled-nirspec.ipynb&gt;`_: Demo of new drizzling and combination code (`0.6.0`) with prism data from JWST program `GO-1433 &lt;https://www.stsci.edu/cgi-bin/get-proposal-info?id=1433&amp;observatory=JWST&gt;`_ (PI: Dan Coe)- `process-rxj2129.ipynb &lt;https://github.com/gbrammer/msaexp/blob/main/docs/examples/process-rxj2129.ipynb&gt;`_: Demo with prism data from JWST program `DD-2767 &lt;https://www.stsci.edu/cgi-bin/get-proposal-info?id=2756&amp;observatory=JWST&gt;`_ (PI: Pat Kelly)- `process-smacs0723.ipynb &lt;https://github.com/gbrammer/msaexp/blob/main/docs/examples/process-smacs0723.ipynb&gt;`_: Demo with medium resolution data from the JWST `ERO-2736 &lt;https://www.stsci.edu/cgi-bin/get-proposal-info?id=2736&amp;observatory=JWST&gt;`_ program on the cluster SMACS-0723 (PI: Klaus Pontoppidon)Try running the RXJ2129 demo notebook directly on GitHub in a Codespace:   1. Fork the repository from https://github.com/gbrammer/msaexp  2. &quot;&lt;&gt; Code&quot; pulldown &gt; &quot;Codespaces&quot; &gt; &quot;+&quot; to start the codespace  3. Wait for the initialization to complete  4. Navigate to the &quot;docs/examples/&quot; directory in the codespace  5. Open &quot;process-rxj2129.ipynb&quot; and run it  6. Commit to your forked repository any changes to the notebook itself or files created that you want to save outside the codespace  7. Profit!</longdescription>
</pkgmetadata>