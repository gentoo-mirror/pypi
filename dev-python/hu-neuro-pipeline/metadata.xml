<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># hu-neuro-pipeline![PyPI](https://img.shields.io/pypi/v/hu-neuro-pipeline)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/hu-neuro-pipeline)![GitHub](https://img.shields.io/github/license/alexenge/hu-neuro-pipeline)Single trial EEG pipeline at the [Abdel Rahman Lab for Neurocognitive Psychology](https://abdelrahmanlab.com), Humboldt-Universität zu BerlinBased on Frömer, R., Maier, M., &amp; Abdel Rahman, R. (2018).Group-level EEG-processing pipeline for flexible single trial-based analyses including linear mixed models.*Frontiers in Neuroscience*, *12*, 48. &lt;https://doi.org/10.3389/fnins.2018.00048&gt;## 1. Installation### 1.1 For Python usersInstall the pipeline via `pip` from the [Python Package Index](https://pypi.org/project/hu-neuro-pipeline/) (PyPI):```bashpython3 -m pip install hu-neuro-pipeline```To install the latest development version from [GitHub](https://github.com/alexenge/hu-neuro-pipeline.git):```bashpython3 -m pip install git+https://github.com/alexenge/hu-neuro-pipeline.git```### 1.2 For R usersFirst install [reticulate](https://rstudio.github.io/reticulate/) and [Miniconda](https://docs.conda.io/en/latest/miniconda.html) for being able to import Python packages into R:```rinstall.packages(&quot;reticulate&quot;)reticulate::install_miniconda()```Then install the pipeline via `pip` from the [Python Package Index](https://pypi.org/project/hu-neuro-pipeline/) (PyPI):```rreticulate::py_install(&quot;hu-neuro-pipeline&quot;, pip = TRUE)```To install the latest development version from [GitHub](https://github.com/alexenge/hu-neuro-pipeline.git):```rreticulate::py_install(&quot;git+https://github.com/alexenge/hu-neuro-pipeline.git&quot;, pip = TRUE)```## 2. Usage[Pipeline inputs](docs/inputs.md) &amp; [outputs](docs/outputs.md)&lt;img src=&quot;https://i.imgur.com/WSj9t4b.png&quot; width=&quot;400&quot;&gt;## 3. Examples### 3.1 For Python usersHere is a fairly minimal example for a (fictional) N400/P600 experiment with two experimental factors: `semantics` (e.g., related versus unrelated words) and emotional `context` (e.g., emotionally negative versus neutral).```pythonfrom pipeline import group_pipelinetrials, evokeds, config = group_pipeline(    vhdr_files='Results/EEG/raw',    log_files='Results/RT',    output_dir='Results/EEG/export',    besa_files='Results/EEG/cali',    triggers=[201, 202, 211, 212],    skip_log_conditions={'semantics': 'filler'},    components={'name': ['N400', 'P600'],                'tmin': [0.3, 0.5],                'tmax': [0.5, 0.9],                'roi': [['C1', 'Cz', 'C2', 'CP1', 'CPz', 'CP2'],                        ['Fz', 'FC1', 'FC2', 'C1', 'Cz', 'C2']]},    average_by={'related': 'semantics == &quot;related&quot;',                'unrelated': 'semantics == &quot;unrelated&quot;'})```In this example we have specified:* The paths to the raw EEG data, to the behavioral log files, to the desired output directory, and to the BESA files for ocular correction* Four different EEG `triggers` corresponding to each of the four cells in the 2 × 2 design* The fact that log files contain additional trials from a semantic `'filler'` condition (which we want to skip because they don't have corresponding EEG triggers)* The *a priori* defined time windows and regions of interest for the N400 and P600 `components`* The log file columns (`average_by`) for which we want to obtain by-participant averaged waveforms (i.e., for all main and interaction effects)### 3.2 For R usersHere is the same example as above but for using the pipeline from R:```R# Import Python modulepipeline &lt;- reticulate::import(&quot;pipeline&quot;)# Run the group level pipelineres &lt;- pipeline$group_pipeline(    vhdr_files = &quot;Results/EEG/raw&quot;,    log_files = &quot;Results/RT&quot;,    output_dir = &quot;Results/EEG/export&quot;,    besa_files = &quot;Results/EEG/cali&quot;,    triggers = c(201, 202, 211, 212),    skip_log_conditions = list(&quot;semantics&quot; = &quot;filler&quot;),    components = list(        &quot;name&quot; = list(&quot;N400&quot;, &quot;P600&quot;),        &quot;tmin&quot; = list(0.3, 0.5),        &quot;tmax&quot; = list(0.5, 0.9),        &quot;roi&quot; = list(            c(&quot;C1&quot;, &quot;Cz&quot;, &quot;C2&quot;, &quot;CP1&quot;, &quot;CPz&quot;, &quot;CP2&quot;),            c(&quot;Fz&quot;, &quot;FC1&quot;, &quot;FC2&quot;, &quot;C1&quot;, &quot;Cz&quot;, &quot;C2&quot;)        )    ),    average_by = list(        related = &quot;semantics == 'related'&quot;,        unrelated = &quot;semantics == 'unrelated'&quot;    ))# Extract resultstrials &lt;- res[[1]]evokeds &lt;- res[[2]]config &lt;- res[[3]]```</longdescription>
</pkgmetadata>