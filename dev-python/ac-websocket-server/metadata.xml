<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># AC-WEBSOCKETS-SERVERThe ac-websockets-server is a python based server to control a local Assetto Corsa dedicated server via a websockets connection from a remote host.## InstallationYou can install ac-websockets-server from PyPi:```pip install ac-websockets-server```The module is only supported in python3.## How to use## Websocket CommandsThe client protocol consists of single line commands which receive a Google style JSON object response.### shutdownThe following ACWS related commands are supported:- `shutdown now`  shutdown the ACWS server### serverThe following server related commands are supported:- `server drivers`  shows a summary of the active drivers on the server- `server entries`  shows a summary of the entry_list.ini contents- `server info`  shows a summary of the server- `server sessions`  shows a summary of configured sessions- `server start` starts the AC server- `server stop`  stops the AC server- `server restart`   stops and starts the AC serverExcerts from the responses to these commands are shown below.#### server drivers```# server drivers{    &quot;data&quot;: {        &quot;drivers&quot;: {            &quot;Mark Hannon&quot;: {                &quot;name&quot;: &quot;Mark Hannon&quot;,                &quot;host&quot;: &quot;192.168.1.1&quot;,                &quot;port&quot;: 50834,                &quot;car&quot;: &quot;bmw_m3_e30&quot;,                &quot;guid&quot;: &quot;9993334455599&quot;,                &quot;ballast&quot;: 0,                &quot;msg&quot;: &quot;joining&quot;            },            &quot;Boof Head&quot;: {                &quot;name&quot;: &quot;Boof Head&quot;,                &quot;host&quot;: &quot;192.168.2.1&quot;,                &quot;port&quot;: 50834,                &quot;car&quot;: &quot;bmw_m3_e30&quot;,                &quot;guid&quot;: &quot;123456768&quot;,                &quot;ballast&quot;: 0,                &quot;msg&quot;: &quot;joining&quot;            },            &quot;Crazy Guy&quot;: {                &quot;name&quot;: &quot;Crazy Guy&quot;,                &quot;host&quot;: &quot;192.168.3.1&quot;,                &quot;port&quot;: 50834,                &quot;car&quot;: &quot;bmw_m3_e30&quot;,                &quot;guid&quot;: &quot;7777777777777&quot;,                &quot;ballast&quot;: 0,                &quot;msg&quot;: &quot;joining&quot;            }        }    }}```#### server entries```# server entries{    &quot;data&quot;: {        &quot;entries&quot;: {            &quot;CAR_0&quot;: {                &quot;car_id&quot;: &quot;CAR_0&quot;,                &quot;model&quot;: &quot;dj_skipbarber_f2000&quot;,                &quot;skin&quot;: &quot;The9GAG&quot;,                &quot;spectator_mode&quot;: &quot;0&quot;,                &quot;drivername&quot;: &quot;&quot;,                &quot;team&quot;: &quot;&quot;,                &quot;guid&quot;: &quot;76561198102064903&quot;,                &quot;ballast&quot;: &quot;0&quot;,                &quot;restrictor&quot;: &quot;0&quot;            }```#### server sessions```# server sessions{    &quot;Practice&quot;: {        &quot;type&quot;: &quot;Practice&quot;,        &quot;laps&quot;: 0,        &quot;time&quot;: 120,        &quot;msg&quot;: &quot;&quot;    },    &quot;Qualify&quot;: {        &quot;type&quot;: &quot;Qualify&quot;,        &quot;laps&quot;: 0,        &quot;time&quot;: &quot;10&quot;,        &quot;msg&quot;: &quot;&quot;    },    &quot;Race&quot;: {        &quot;type&quot;: &quot;Race&quot;,        &quot;laps&quot;: 20,        &quot;time&quot;: 0,        &quot;msg&quot;: &quot;&quot;    }}```#### server start```# server start{    &quot;data&quot;: {        &quot;msg&quot;: &quot;Assetto Corsa server started&quot;    }}# {    &quot;data&quot;: {        &quot;serverInfo&quot;: {            &quot;version&quot;: &quot;v1.15&quot;,            &quot;timestamp&quot;: &quot;2022-07-22 10:42:32.8776464 +1000 AEST m=+0.007426800&quot;,            &quot;track&quot;: &quot;rt_autodrom_most&quot;,            &quot;cars&quot;: &quot;[\&quot;ks_mazda_mx5_cup\&quot;]&quot;,            &quot;msg&quot;: &quot;&quot;        }    }}```### gridThe following grid related commands are supported:- `grid finish`  sets grid order based on latest race finishing order- `grid reverse`  sets grid order based on latest race REVERSED order- `grid order`  shows a summary of the current/updated grid order- `grid entries`  shows a summary of the all slots for/from entry_list.ini- `grid save` write the changes to the grid to the entry_list.ini fileSetting reverse grid and then writing the result are shown below:```# grid reverse{    &quot;data&quot;: {        &quot;msg&quot;: &quot;test/results/2020_12_20_20_58_RACE.json parse SUCCESS&quot;    }}# grid finish{    &quot;data&quot;: {        &quot;grid&quot;: {            &quot;1&quot;: &quot;Keith&quot;,            &quot;2&quot;: &quot;.SNRL.shille&quot;,            &quot;3&quot;: &quot;Wayne&quot;,            &quot;4&quot;: &quot;Russ S&quot;,            &quot;5&quot;: &quot;Mark Hannon&quot;,            &quot;6&quot;: &quot;RussG&quot;,            &quot;7&quot;: &quot;ab156&quot;        }    }}# grid write{    &quot;data&quot;: {        &quot;msg&quot;: &quot;entry_list.ini file update SUCCESS&quot;    }}```### lobbyThe following lobby related commands are supported:- `lobby info` shows the lobby info- `lobby restart`   re-registers to the lobby### trackerThe following tracker related commands are supported:- `tracker start` starts the AC server- `tracker stop`  stops the AC server- `tracker restart`   stops and starts the AC serverAll commands require stracker.ini to be stored in the cfg directory and stracker.exe in the server root.</longdescription>
</pkgmetadata>