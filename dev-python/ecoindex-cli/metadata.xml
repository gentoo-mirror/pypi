<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Ecoindex-Cli[![Quality check](https://github.com/cnumr/ecoindex_cli/workflows/Quality%20checks/badge.svg)](https://github.com/cnumr/ecoindex_cli/actions/workflows/quality.yml)[![PyPI version](https://badge.fury.io/py/ecoindex-cli.svg)](https://badge.fury.io/py/ecoindex-cli)This tool provides an easy way to analyze websites with [Ecoindex](https://www.ecoindex.fr) from your local computer using multi-threading. You have the ability to:- Make the analysis on multiple pages- Define multiple screen resolution- Make a recursive analysis from a given websiteThis CLI is built on top of [ecoindex-python](https://pypi.org/project/ecoindex/) with [Typer](https://typer.tiangolo.com/)The output is always a CSV file with the results of the analysis.## Requirements- Python ^3.10- [pip](https://pip.pypa.io/en/stable/)## Setup```bashpip install --user -U ecoindex-cli```## Use caseThe cli gets 2 commands: `analyze` and `report` which can be used separately:```bashecoindex-cli --help                                ``````bashUsage: ecoindex-cli [OPTIONS] COMMAND [ARGS]...  Ecoindex cli to make analysis of webpagesOptions:  --install-completion [bash|zsh|fish|powershell|pwsh]                                  Install completion for the specified shell.  --show-completion [bash|zsh|fish|powershell|pwsh]                                  Show completion for the specified shell, to                                  copy it or customize the installation.  --help                          Show this message and exit.Commands:  analyze  Make an ecoindex analysis of given webpages or website.  report   If you already performed an ecoindex analysis and have your...```### Make a simple analysisYou give just one web url```bashecoindex-cli analyze --url https://www.ecoindex.fr```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashThere are 1 url(s), do you want to process? [Y/n]:1 urls for 1 window sizeProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-20_164433/results.csv written !```&lt;/details&gt;&gt; This makes an analysis with a screen resolution of 1920x1080px by default and with the last known version of chromedriver. You can set those settings with options: `--window-size` and `--chrome-version`### Set the output fileYou can define the csv output file```bashecoindex-cli analyze --url https://www.ecoindex.fr --output-file ~/ecoindex-results/ecoindex.csv```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashüìÅÔ∏è Urls recorded in file `input/www.ecoindex.fr.csv`There are 1 url(s), do you want to process? [Y/n]:1 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /home/vvatelot/ecoindex-results/ecoindex.csv written !```&lt;/details&gt;### Export to JSON fileBy default, the results are exported to a CSV file. But, you can specify to export the results to a JSON file.```bashecoindex-cli analyze --url https://www.ecoindex.fr --export-format json```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashüìÅÔ∏è Urls recorded in file `input/www.ecoindex.fr.csv`There are 1 url(s), do you want to process? [Y/n]:1 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2022-03-05_215320/results.json written !```&lt;/details&gt;### Multiple url analysis```bashecoindex-cli analyze --url https://www.ecoindex.fr --url https://www.greenit.fr/```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashThere are 2 url(s), do you want to process? [Y/n]:2 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-20_164524/results.csv written !```&lt;/details&gt;### Provide urls from a fileYou can use a file with given urls that you want to analyze: One url per line. This is helpful if you want to play the same scenario recurrently.```bashecoindex-cli analyze --urls-file input/ecoindex.csv```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashThere are 2 url(s), do you want to process? [Y/n]:2 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-20_164524/results.csv written !```&lt;/details&gt;### Make a recursive analysisYou can make a recursive analysis of a given webiste. This means that the app will try to find out all the pages into your website and launch an analysis on all those web pages. ‚ö†Ô∏è This can process for a very long time! **Use it at your own risks!**```bashecoindex-cli analyze --url https://www.ecoindex.fr --recursive```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bash‚è≤Ô∏è Crawling root url https://www.ecoindex.fr -&gt; Wait a minute !üìÅÔ∏è Urls recorded in file `/tmp/ecoindex-cli/input/www.ecoindex.fr.csv`There are 3 url(s), do you want to process? [Y/n]:3 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-20_164729/results.csv written !```&lt;/details&gt;### Using a specific Chrome versionYou can use a specific Chrome version to make the analysis. This is useful if you use an old chrome version. You just have to provide the main Chrome version number.```bashecoindex-cli analyze --url https://www.ecoindex.fr --chrome-version 107```Or if you do not know the Chrome version number, you can use the one line command```bashecoindex-cli analyze --url https://www.ecoindex.fr --chrome-version (google-chrome --version  | grep --only -P '(?&lt;=\\s)\\d{3}')```### Using multi-threadgingYou can use multi-threading to speed up the analysis when you have a lot of websites to analyze. In this case, you can define the maximum number of workers to use:```bashecoindex-cli analyze --url https://www.ecoindex.fr --url https://www.greenit.fr/ --max-workers 10```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashThere are 2 url(s), do you want to process? [Y/n]:2 urls for 1 window size with 10 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-20_164524/results.csv written !```&gt; By default, the number of maximum workers is set to CPU count.&lt;/details&gt;### Disable console interactionYou can disable confirmations, and force the app to answer yes to all of them. It can be useful if you need to start the app from another script, or if you have no time to wait it to finish.```bashecoindex-cli analyze --url https://www.ecoindex.fr --recursive --no-interaction```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bash‚è≤Ô∏è Crawling root url https://www.ecoindex.fr -&gt; Wait a minute !üìÅÔ∏è Urls recorded in file `/tmp/ecoindex-cli/input/www.ecoindex.fr.csv`3 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-11-04_081913/results.csv written !```&lt;/details&gt;### Set other screen resolutionsYou can provide other screen resolutions. By default, the screen resolution is `1920x1080px` but you can provide other resolution for example if you want to test ecoindex for mobile.```bashecoindex-cli analyze --url https://www.ecoindex.fr --window-size 1920,1080 --window-size 386,540```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashThere are 1 url(s), do you want to process? [Y/n]:1 urls for 2 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-21_212244/results.csv written !```&lt;/details&gt;### Generate a html reportYou can generate a html report easily at the end of the analysis. You just have to add the option `--html-report`.```bashecoindex-cli analyze --url https://www.ecoindex.fr --recursive --html-report```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bash‚è≤Ô∏è Crawling root url https://www.ecoindex.fr -&gt; Wait a minute !üìÅÔ∏è Urls recorded in file `input/www.ecoindex.fr.csv`There are 3 url(s), do you want to process? [Y/n]:3 urls for 1 window size with 2 maximum workersProcessing  [####################################]  100%üôåÔ∏è File output/www.ecoindex.fr/2021-04-21_212127/results.csv written !ü¶ÑÔ∏è Amazing! A report has been generated to /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-04-21_212127/index.html```&gt; When generating a html report, the results are written in a CSV file and you can not specify the result file location. So options `--export-format` and `--output-file` are ignored.&lt;/details&gt;Here is a sample result:![Sample report](doc/report.png)### Only generate a report from existing result fileIf you already performed an anlayzis and (for example), forgot to generate the html report, you do not need to re-run a full analyzis, you can simply request a report from your result file :```bashecoindex-cli report &quot;/tmp/ecoindex-cli/output/www.ecoindex.fr/2021-05-06_191355/results.csv&quot; &quot;www.synchrone.fr&quot;```&lt;details&gt;&lt;summary&gt;Result&lt;/summary&gt;```bashü¶ÑÔ∏è Amazing! A report has been generated to /tmp/ecoindex-cli/output/www.ecoindex.fr/2021-05-06_191355/index.html```&lt;/details&gt;## Results exampleThe result of the analysis is a CSV or JSON file which can be easily used for further analysis:### CSV example```csvwidth,height,url,size,nodes,requests,grade,score,ges,water,date,page_type1920,1080,https://www.ecoindex.fr,521.54,45,68,B,75.0,1.5,2.25,2022-05-03 22:28:49.280479,1920,1080,https://www.greenit.fr,1374.641,666,167,E,32.0,2.36,3.54,2022-05-03 22:28:51.176216,website```### JSON example```json[    {        &quot;width&quot;: 1920,        &quot;height&quot;: 1080,        &quot;url&quot;: &quot;https://www.ecoindex.fr&quot;,        &quot;size&quot;: 521.54,        &quot;nodes&quot;: 45,        &quot;requests&quot;: 68,        &quot;grade&quot;: &quot;B&quot;,        &quot;score&quot;: 75.0,        &quot;ges&quot;: 1.5,        &quot;water&quot;: 2.25,        &quot;date&quot;: &quot;2022-05-03 22:25:01.016749&quot;,        &quot;page_type&quot;: null    },    {        &quot;width&quot;: 1920,        &quot;height&quot;: 1080,        &quot;url&quot;: &quot;https://www.greenit.fr&quot;,        &quot;size&quot;: 1163.386,        &quot;nodes&quot;: 666,        &quot;requests&quot;: 148,        &quot;grade&quot;: &quot;E&quot;,        &quot;score&quot;: 34.0,        &quot;ges&quot;: 2.32,        &quot;water&quot;: 3.48,        &quot;date&quot;: &quot;2022-05-03 22:25:04.516676&quot;,        &quot;page_type&quot;: &quot;website&quot;    }]```## DockerYou can use this application in a docker container. You can build the image with the following command:```bashdocker build -t ecoindex-cli .```&gt; You can set a sepcific chrome version using `--build-arg CHROME_VERSION=107.0.5304.121-1` (default is `107.0.5304.121-1`)And then you can run the container with the following command:```bashdocker run -it --rm -v $(pwd)/output:/tmp ecoindex-cli:latest ecoindex-cli analyze --url https://www.ecoindex.fr --recursive --chrome-version 107```&gt; You have to set the `--chrome-version` option to the same main version as the one used to build the image.### Fields description- `width` is the screen width used for the page analysis (in pixels)- `height` is the screen height used for the page analysis (in pixels)- `url` is the analysed page url- `size` is the size of the page and of the downloaded elements of the page in KB- `nodes` is the number of the DOM elements in the page- `requests` is the number of external requests made by the page- `grade` is the corresponding ecoindex grade of the page (from A to G)- `score`¬†is the corresponding ecoindex score of the page (0 to 100)- `ges` is the equivalent of greenhouse gases emission (in `gCO2e`) of the page- `water`is the equivalent water consumption (in `cl`) of the page- `date` is the datetime of the page analysis- `page_type` is the type of the page, based ton the [opengraph type tag](https://ogp.me/#types)## TestingIn order to develop or test, you have to use [Poetry](https://python-poetry.org/), install the dependencies and execute a poetry shell:```bashpoetry install &amp;&amp; \poetry shell```We use Pytest to run unit tests for this project. The test suite are in the `tests` folder. Just execute :```bashpytest --cov-report term-missing:skip-covered --cov=. --cov-config=.coveragerc tests```&gt; This runs pytest and also generate a [coverage report](https://pytest-cov.readthedocs.io/en/latest/) (terminal and html)## DisclaimerThe LCA values used by [ecoindex_cli](https://github.com/cnumr/ecoindex_cli) to evaluate environmental impacts are not under free license - ¬©Fr√©d√©ric BordagePlease also refer to the mentions provided in the code files for specifics on the IP regime.## [License](LICENSE)## [Contributing](CONTRIBUTING.md)## [Code of conduct](CODE_OF_CONDUCT.md)</longdescription>
</pkgmetadata>