<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Log RedactorRedacts data in python logs based on regex filters passed in by the user.  This will work with json logging formats as well and also with nested data in the `extra` argument. # Examples```pythonimport reimport loggingimport logredactor# Create a loggerlogger = logging.getLogger()# Add the redact filter to the logger with your custom filtersredact_patterns = [re.compile(r'\d+')]# if no `default_mask` is passed in, 4 asterisks will be usedlogger.addFilter(logredactor.RedactingFilter(redact_patterns, default_mask='xx'))logger.warning(&quot;This is a test 123...&quot;)# Output: This is a test xx...```Python only applies the filter on that logger, so any other files using logging will not get the filter applied. To have this filter applied to all loggers do the following```pythonimport reimport loggingimport logredactorfrom pythonjsonlogger import jsonlogger# Create a pattern to hide api key in url. This uses a _Positive Lookbehind_redact_patterns = [re.compile(r'(?&lt;=api_key=)[\w-]+')]# Override the logging handler that you want redactedclass RedactStreamHandler(logging.StreamHandler):    def __init__(self, *args, **kwargs):        logging.StreamHandler.__init__(self, *args, **kwargs)        self.addFilter(logredactor.RedactingFilter(redact_patterns))root_logger = logging.getLogger()sys_stream = RedactStreamHandler()# Also set the formatter to use json, this is optional and all nested keys will get redacted toosys_stream.setFormatter(jsonlogger.JsonFormatter('%(name)s %(message)s'))root_logger.addHandler(sys_stream)logger = logging.getLogger(__name__)logger.error(&quot;Request Failed&quot;, extra={'url': 'https://example.com?api_key=my-secret-key'})# Output: {&quot;name&quot;: &quot;__main__&quot;, &quot;message&quot;: &quot;Request Failed&quot;, &quot;url&quot;: &quot;https://example.com?api_key=****&quot;}```</longdescription>
</pkgmetadata>