<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;!-- markdownlint-disable --&gt;&lt;p align=&quot;center&quot;&gt;  &lt;img src=&quot;https://github.com/starlite-api/branding/blob/9ab099a2089219c07727baaa29f67e9474ff93c8/assets/Starlite%20Branding%20-%20SVG%20-%20Transparent/Logo%20-%20Banner%20-%20Inline%20-%20Light.svg#gh-light-mode-only&quot; alt=&quot;Starlite Logo - Light&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;  &lt;img src=&quot;https://github.com/starlite-api/branding/blob/9ab099a2089219c07727baaa29f67e9474ff93c8/assets/Starlite%20Branding%20-%20SVG%20-%20Transparent/Logo%20-%20Banner%20-%20Inline%20-%20Dark.svg#gh-dark-mode-only&quot; alt=&quot;Starlite Logo - Dark&quot; width=&quot;100%&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;&lt;!-- markdownlint-restore --&gt;&lt;!-- markdownlint-disable --&gt;&lt;div align=&quot;center&quot;&gt;![PyPI - License](https://img.shields.io/pypi/l/pydantic-factories?color=blue)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pydantic-factories)[![Discord](https://img.shields.io/discord/919193495116337154?color=202235&amp;label=%20Discord&amp;logo=discord)](https://discord.gg/X3FJqy8d2j) [![Matrix](https://img.shields.io/badge/%5Bm%5D%20Matrix-bridged-blue?color=202235)](https://matrix.to/#/#starlitespace:matrix.org) [![Reddit](https://img.shields.io/reddit/subreddit-subscribers/starlite?label=r%2FStarlite&amp;logo=reddit)](https://reddit.com/r/starlite)&lt;/div&gt;&lt;!-- markdownlint-restore --&gt;# ‚ö†Ô∏è# The next version of this library is released as [polyfactory](https://pypi.org/project/polyfactory/). Users are encouraged to migrate to it.# ‚ö†Ô∏è# Pydantic-FactoriesThis library offers powerful mock data generation capabilities for [pydantic](https://github.com/samuelcolvin/pydantic)based models, `dataclasses` and `TypeDict`s. It can also be used with other libraries that use pydantic as a foundation.Check out [the documentation üìö](https://starlite-api.github.io/pydantic-factories/).## Installation```shellpip install pydantic-factories```## Example```pythonfrom datetime import date, datetimefrom typing import List, Unionfrom pydantic import BaseModel, UUID4from pydantic_factories import ModelFactoryclass Person(BaseModel):    id: UUID4    name: str    hobbies: List[str]    age: Union[float, int]    birthday: Union[datetime, date]class PersonFactory(ModelFactory):    __model__ = Personresult = PersonFactory.build()```That's it - with almost no work, we are able to create a mock data object fitting the `Person` class model definition.This is possible because of the typing information available on the pydantic model and model-fields, which are used as asource of truth for data generation.The factory parses the information stored in the pydantic model and generates a dictionary of kwargs that are passed tothe `Person` class' init method.## Features- ‚úÖ supports both built-in and pydantic types- ‚úÖ supports pydantic field constraints- ‚úÖ supports complex field types- ‚úÖ supports custom model fields- ‚úÖ supports dataclasses- ‚úÖ supports TypedDicts## Why This Library?- üíØ powerful- üíØ extensible- üíØ simple- üíØ rigorously tested## ContributingThis library is open to contributions - in fact we welcome it. [Please see the contribution guide!](CONTRIBUTING.md)</longdescription>
</pkgmetadata>