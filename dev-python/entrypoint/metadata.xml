<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># `entrypoint`[![License][License Badge]][License][![Version][Version Badge]][Package][![Downloads][Downloads Badge]][Package][![Discord][Discord Badge]][Discord][![Documentation][Documentation Badge]][Documentation][![Check][Check Badge]][Actions][![Test][Test Badge]][Actions][![Coverage][Coverage Badge]][Coverage]&gt; *Decorated functions as entry points.*In python, an *entry point* can be thought of as an explicit functionthat gets called when the script is run directly from the console.Defining an entry point requires some boilerplate code, which isabstracted away by this library.## Installing**Python 3.7 or above is required.**### pipInstalling the library with `pip` is quite simple:```console$ pip install entrypoint```Alternatively, the library can be installed from source:```console$ git clone https://github.com/nekitdev/entrypoint.git$ cd entrypoint$ python -m pip install .```### poetryYou can add `entrypoint` as a dependency with the following command:```console$ poetry add entrypoint```Or by directly specifying it in the configuration like so:```toml[tool.poetry.dependencies]entrypoint = &quot;^1.3.0&quot;```Alternatively, you can add it directly from the source:```toml[tool.poetry.dependencies.entrypoint]git = &quot;https://github.com/nekitdev/entrypoint.git&quot;```## Examples### DecoratedDeclare the `main` function as an *entry point*:```pythonfrom entrypoint import entrypoint@entrypoint(__name__)def main() -&gt; None:    print(&quot;Hello, world!&quot;)```Run the script directly from the console:```console$ python file.pyHello, world!```When importing the module, `main` does not get called:```python&gt;&gt;&gt; import file&gt;&gt;&gt; # no output```### NoteNote that `main` gets called **immediately, before any code below can be executed**.```python@entrypoint(__name__)def main() -&gt; None:    print(&quot;-&gt; in main&quot;)print(&quot;&lt;- outside&quot;)``````console$ python note.py-&gt; in main&lt;- outside```### DirectIt is possible to run `main` directly:```pythonentrypoint(__name__).call(main)```This method allows to take control over where and when the function gets called.### Check`entrypoint` also provides `is_main` function that resemblesthe common (and de-facto standard) way of implementing *entry points*:```pythonfrom entrypoint import is_mainif is_main(__name__):    print(&quot;Hello, world!&quot;)```### Async`entrypoint` does not provide any specific functionality to run async functions.Instead, you can specify, for example, a `main` function that runs its `async_main` counterpart:```pythonimport asyncioasync def async_main() -&gt; None:    print(&quot;Hello, world!&quot;)@entrypoint(__name__)def main() -&gt; None:    asyncio.run(async_main())```## DocumentationYou can find the documentation [here][Documentation].## SupportIf you need support with the library, you can send an [email][Email]or refer to the official [Discord server][Discord].## ChangelogYou can find the changelog [here][Changelog].## Security PolicyYou can find the Security Policy of `entrypoint` [here][Security].## ContributingIf you are interested in contributing to `entrypoint`, make sure to take a look at the[Contributing Guide][Contributing Guide], as well as the [Code of Conduct][Code of Conduct].## License`entrypoint` is licensed under the MIT License terms. See [License][License] for details.[Email]: mailto:support@nekit.dev[Discord]: https://nekit.dev/discord[Actions]: https://github.com/nekitdev/entrypoint/actions[Changelog]: https://github.com/nekitdev/entrypoint/blob/main/CHANGELOG.md[Code of Conduct]: https://github.com/nekitdev/entrypoint/blob/main/CODE_OF_CONDUCT.md[Contributing Guide]: https://github.com/nekitdev/entrypoint/blob/main/CONTRIBUTING.md[Security]: https://github.com/nekitdev/entrypoint/blob/main/SECURITY.md[License]: https://github.com/nekitdev/entrypoint/blob/main/LICENSE[Package]: https://pypi.org/project/entrypoint[Coverage]: https://codecov.io/gh/nekitdev/entrypoint[Documentation]: https://nekitdev.github.io/entrypoint[Discord Badge]: https://img.shields.io/badge/chat-discord-5865f2[License Badge]: https://img.shields.io/pypi/l/entrypoint[Version Badge]: https://img.shields.io/pypi/v/entrypoint[Downloads Badge]: https://img.shields.io/pypi/dm/entrypoint[Documentation Badge]: https://github.com/nekitdev/entrypoint/workflows/docs/badge.svg[Check Badge]: https://github.com/nekitdev/entrypoint/workflows/check/badge.svg[Test Badge]: https://github.com/nekitdev/entrypoint/workflows/test/badge.svg[Coverage Badge]: https://codecov.io/gh/nekitdev/entrypoint/branch/main/graph/badge.svg</longdescription>
</pkgmetadata>