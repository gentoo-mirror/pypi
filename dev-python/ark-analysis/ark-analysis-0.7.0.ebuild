# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Toolbox for analysis on segmented images from MIBI."

HOMEPAGE=""
LICENSE="Modified Apache License 2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="colors lab_ext test"
DEPENDENCIES="dev-python/alpineer[${PYTHON_USEDEP}]
	<dev-python/cython-1.0[${PYTHON_USEDEP}]
	dev-python/datasets[${PYTHON_USEDEP}]
	<dev-python/dill-0.4[${PYTHON_USEDEP}]
	dev-python/feather-format[${PYTHON_USEDEP}]
	>=dev-python/importlib-metadata-5.0[${PYTHON_USEDEP}]
	dev-python/ipympl[${PYTHON_USEDEP}]
	<dev-python/ipython-9.0[${PYTHON_USEDEP}]
	<dev-python/jupyterlab-4.0[${PYTHON_USEDEP}]
	<dev-python/matplotlib-4.0[${PYTHON_USEDEP}]
	>=dev-python/multiprocess-0.70.13[${PYTHON_USEDEP}]
	<dev-python/natsort-9.0[${PYTHON_USEDEP}]
	<dev-python/numpy-1.24[${PYTHON_USEDEP}]
	dev-python/palettable[${PYTHON_USEDEP}]
	>=dev-python/pandas-2.0[${PYTHON_USEDEP}]
	<dev-python/pillow-10.0[${PYTHON_USEDEP}]
	dev-python/pyFlowSOM[${PYTHON_USEDEP}]
	<dev-python/requests-3.0[${PYTHON_USEDEP}]
	dev-python/scikit-image[${PYTHON_USEDEP}]
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	<dev-python/scipy-2.0[${PYTHON_USEDEP}]
	<dev-python/seaborn-1.0[${PYTHON_USEDEP}]
	dev-python/spatial-lda[${PYTHON_USEDEP}]
	<dev-python/statsmodels-1.0[${PYTHON_USEDEP}]
	>=dev-python/tifffile-2022.0[${PYTHON_USEDEP}]
	<dev-python/tqdm-5.0[${PYTHON_USEDEP}]
	dev-python/umap-learn[${PYTHON_USEDEP}]
	>=dev-python/xarray-2022.0[${PYTHON_USEDEP}]
	<dev-python/xmltodict-1.0[${PYTHON_USEDEP}]
	<dev-python/zstandard-1.0[${PYTHON_USEDEP}]
	dev-python/ark-analysis[${PYTHON_USEDEP}]
	colors? ( dev-python/palettable[${PYTHON_USEDEP}] )
	colors? ( dev-python/cmasher[${PYTHON_USEDEP}] )
	colors? ( dev-python/cmocean[${PYTHON_USEDEP}] )
	colors? ( dev-python/colorcet[${PYTHON_USEDEP}] )
	colors? ( dev-python/SciencePlots[${PYTHON_USEDEP}] )
	lab_ext? ( dev-python/jupyterlab-lsp[${PYTHON_USEDEP}] )
	lab_ext? ( dev-python/python-lsp-server[${PYTHON_USEDEP}] )
	lab_ext? ( dev-python/jupyterlab-git[${PYTHON_USEDEP}] )
	lab_ext? ( dev-python/jupyterlab-execute-time[${PYTHON_USEDEP}] )
	lab_ext? ( dev-python/jupyterlab-skip-traceback[${PYTHON_USEDEP}] )
	lab_ext? ( dev-python/lckr-jupyterlab-variableinspector[${PYTHON_USEDEP}] )
	test? ( dev-python/attrs[${PYTHON_USEDEP}] )
	test? ( dev-python/coveralls[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cases[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-mock[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-pycodestyle[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-randomly[${PYTHON_USEDEP}] )
	test? ( dev-python/pytest-asyncio[${PYTHON_USEDEP}] )
	test? ( dev-python/testbook[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
