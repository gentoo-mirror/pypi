<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>sallron |PyPI version fury.io| |PyPI pyversions|================================================    Dynamically schedule data aggregation ‚öîÔ∏è üëÅÔ∏è üóÑÔ∏èAPI agnostic data aggregation scheduler that automatically interactswith your interface class and sends responses to DB.Dependencies^^^^^^^^^^^^-  requests-  schedule-  pymongo-  walrus-  psutil-  pytz-  discord-logger-  boto3Setup~~~~~.. code:: bash    pip3 install sallronDB Structure~~~~~~~~~~~~To doUsage~~~~~If you want a regular lifecycle, just run the following code:.. code:: python    import sallron    import ExampleInterface    sallron.configureye(        MONGO_CONN_STR='mongodb+srv://...',        MAX_STEEL_URL='https://5423csd3j.exe...',        ADMIN_COLLECTION='admin',        _WEBHOOK='https://discord.com/api/webhooks/...', # Discord webhook for logging        # AWS CONFIG        AWS_ACCESS_KEY_ID=&quot;asnwnwjsMANS...&quot;,        AWS_SECRET_ACCESS_KEY_ID=&quot;JASDWKkjndm$234/mkasd...&quot;,        AWS_REGION=&quot;us-east-2&quot;, # default        LOGGING_BUCKET='s3 bucket name for storing logs'    ) # configure your MongoDB settings    sallron.ring_ruler(ExampleInterface, &quot;my_interface&quot;)Now, for auto-resets + notifications on exceptions/crashes, save theprevious file as you normally would (i.e. runner.py) and create a newfile (i.e. erunner.py):.. code:: python    from sallron import eternal_runner    from os.path import join, dirname    here = dirname(__file__)    if __name__ == &quot;__main__&quot;:        filename = &quot;runner.py&quot;        filepath = join(here, filename)        eternal_runner(filepath)Then just:.. code:: shell    python3 erunner.pyConfigureye~~~~~~~~~~~Required settings:-  MONGO\_CONN\_STR-  ADMIN\_COLLECTIONAvailable settings (= std\_value):-  OS = 'UBUNTU'-  SAVE\_LOGS = False-  LOG\_DIR = &quot;logs/&quot;-  MAX\_LOG\_SIZE = 100000000 # 100Mb.. |PyPI version fury.io| image:: https://d25lcipzij17d.cloudfront.net/badge.svg?id=py&amp;type=6&amp;v=0.0.9&amp;x2=0   :target: https://github.com/elint-tech/sallron.. |PyPI pyversions| image:: https://img.shields.io/pypi/pyversions/sallron   :target: https://github.com/elint-tech/sallron</longdescription>
</pkgmetadata>