<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>[![DOI](https://zenodo.org/badge/98517215.svg)](https://zenodo.org/badge/latestdoi/98517215)[![Coverage Status](https://coveralls.io/repos/github/zooniverse/aggregation-for-caesar/badge.svg?branch=master)](https://coveralls.io/github/zooniverse/aggregation-for-caesar?branch=master)# Getting startedThis is a collection of external reducers written for [caesar](https://github.com/zooniverse/caesar) and offline use.---## DocumentationYou can find the [latest documentation](https://aggregation-caesar.zooniverse.org/docs) on the aggregations code's website.---## Installing for offline use### With your own python install (python 3 only)Instal the latest stable release:```bashpip install panoptes_aggregation```Upgrade and existing installation:```bashpip install -U panoptes_aggregation```Or for development or testing, you can install the latest development version directly from GitHub:```bashpip install -U git+https://github.com/zooniverse/aggregation-for-caesar.git```#### Install the Graphical User Interface (GUI)If you would like to use the GUI instead of the command line install the package with:```bashpip install &quot;panoptes_aggregation[gui]&quot;```Or for the latest development build from GitHub:```bashpip install -U git+https://github.com/zooniverse/aggregation-for-caesar.git#egg=panoptes-aggregation[gui]```#### Anaconda build of pythonIf your are using the anaconda version of python some of the dependencies should be installed using the `conda` package manager before installing `panoptes_aggregation`:```bashconda install -c conda-forge python-levenshtein hdbscanconda install wxpython psutil```#### Mac Anaconda buildIf you are installing this code on a Mac using the anaconda build of python and you want to use the GUI instead of the command line you will have to update one line of the of code in the `panoptes_aggregation_gui` script.  Change the first line from:```python#!/path/to/anaconda/python/bin/python```to:```python#!/bin/bash /path/to/anaconda/python/bin/python.app```You can find the location of this file with the command:```bashwhich panoptes_aggregation_gui```You will also need to run:```bashconda install python.app```### With Docker[https://docs.docker.com/get-started/](https://docs.docker.com/get-started/)**Using docker-compose** [https://docs.docker.com/compose/](https://docs.docker.com/compose/)```docker-compose -f docker-compose.local_scripts.yml build local_scripts```From the root directory of this repository, run the desired python scripts using the docker image, e.g. `config_workflow_panoptes --help````docker-compose -f docker-compose.local_scripts.yml run --rm local_scripts panoptes_aggregation --help```**Or directly via docker**```docker build . -f Dockerfile.bin_cmds -t aggregation_for_caesar```From the root directory of this repository, run the desired python scripts using the docker image, e.g. `panoptes_aggregation --help````docker run -it --rm --name config_workflow_panoptes -v &quot;$PWD&quot;:/usr/src/aggregation aggregation_for_caesar panoptes_aggregation --help```**Note** The GUI does not work inside a docker container.---## Installing for online useThe docker file included is ready to be deployed on any server.  Once deployed, the extractors will be available on the `/extractors/&lt;name of extractor function&gt;` routes and the reducers will be available on the `/reducers/&lt;name of reducer function&gt;` routes.  Any keywords passed into these functions should be included as url parameters on the route (e.g. `https://aggregation-caesar.zooniverse.org/extractors/point_extractor_by_frame?task=T0`).  For more complex keywords (e.g. `detals` for subtasks), python's [urllib.parse.urlencode](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode) can be used to translate a keyword list into the proper url encoding.The documentation will be built and available on the `/docs` route.### Build/run the app in docker locallyTo run a local version use:```bashdocker-compose builddocker-compose up```and listen on `localhost:5000`.### Running tests in the docker containerTo run the tests use:```bashdocker-compose run --rm aggregation nosetests```</longdescription>
</pkgmetadata>