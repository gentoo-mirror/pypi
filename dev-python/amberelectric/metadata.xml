<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Amber - An entirely new way to buy electricityAmber is an Australian-based electricity retailer that pass through the real-time wholesale price of energy.Because of Amber's wholesale power prices, you can save hundreds of dollars a year by automating high power devices like air-conditioners, heat pumps and pool pumps.This Python library provides an interface to the API, allowing you to react to current and forecast prices, as well as download your historic usage.## Details- API version: 1.0- Package version: 1.0.3## RequirementsPython &gt;= 3.6## Getting startedNot an Amber customer yet? Join here: https://join.amber.com.au/signupOnce your account has been created, you need to create an [API token](https://app.amber.com.au/developers)## Installation### pip installIf the python package is hosted on a repository, you can install directly using:```shpip install amberelectric```## Usage### Setup and confirguration```python# Import the libraryimport amberelectricfrom amberelectric.api import amber_api# These are just for demo purposes...from pprint import pprintfrom datetime import date# Insert the API token you created at https://app.amber.com.au/developersconfiguration = amberelectric.Configuration(    access_token = 'psk_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')# Create an API instanceapi = amber_api.AmberApi.create(configuration)```### Fetching SitesAll the interesting functions require a site id, so find one of those first - they can be identified by the National Metering Identifier (NMI)```pythontry:    sites = api.get_sites()except amberelectric.ApiException as e:    print(&quot;Exception: %s\n&quot; % e)```This will return a List of Sites### Fetching PricesThe API allows you to fetch previous, current and forecast prices by day.If no start_date or end_date is supplied, it default to the current day.Note: If duration is 30, there will be 48 intervals per channel. A duration of5 returns 288 intervals.```pythonsite_id = sites[0].idtry:    start_date = date(2021, 6, 1)    end_date = date(2021, 6, 2)    range = api.get_prices(site_id, start_date=start_date, end_date=end_date)    today = api.get_prices(site_id)except amberelectric.ApiException as e:    print(&quot;Exception: %s\n&quot; % e)```You can also just ask for the current price```pythonsite_id = sites[0].idtry:    current = api.get_current_prices(site_id)except amberelectric.ApiException as e:    print(&quot;Exception: %s\n&quot; % e)```and the current price plus some number of previous and next intervals```pythonsite_id = sites[0].idtry:    current = api.get_current_price(site_id, next=4)    # returns the current interval and the next 4 forecast intervaslexcept amberelectric.ApiException as e:    print(&quot;Exception: %s\n&quot; % e)```### UsageYou can request your usage for a given day.```pythonsite_id = sites[0].idtry:    usage = api.get_usage(site_id, date(2021, 6, 1), date(2021, 6, 1))except amberelectric.ApiException as e:    print(&quot;Exception: %s\n&quot; % e)```</longdescription>
</pkgmetadata>