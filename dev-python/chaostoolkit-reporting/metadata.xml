<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># A general purpose reporting generator for Chaos Toolkit[![Build, Test, and Lint](https://github.com/chaostoolkit/chaostoolkit-reporting/actions/workflows/build.yaml/badge.svg)](https://github.com/chaostoolkit/chaostoolkit-reporting/actions/workflows/build.yaml)The Chaos Toolkit reporting extension library.## PurposeThe purpose of this library is to provide reporting support to the[Chaos Toolkit][chaostoolkit] experiment results.[chaostoolkit]: https://chaostoolkit.org## FeaturesThe library takes the journal generated by the `chaos run` commandand transforms into a human friendly report. The report can be a standalonePDF or HTML document.## InstallInstall this package as any other Python packages:```console$ pip install -U chaostoolkit-reporting```Notice that this draws a few [dependencies][deps]:[deps]: https://github.com/chaostoolkit/chaostoolkit-reporting/blob/master/requirements.txtSome of them are LGPL v3 licensed.You will also need to [install some additional dependencies](uni-install.md) that the `chaos report` command relies upon.## UsageOnce installed, a new `report` subcommand will be made available to the`chaos` command, use it as follows:```console$ chaos report --export-format=html5 journal.json report.html```or, for a PDF document:```console$ chaos report --export-format=pdf journal.json report.pdf```You can also generate a single report from many journals at once:```console$ chaos report --export-format=pdf journal-1.json journal-2 journal-3 report.pdf```Or more succinctly:```console$ chaos report --export-format=pdf journal-*.json report.pdf```## Download a Docker ImageAs the dependencies for this plugin can be difficult to get right, we alsoprovide a docker image - note that this image is rather big with 1.4Gb topull. You can install `Docker` from the [Docker Hub][dockerhub].[dockerhub]: https://hub.docker.com/search?q=&amp;type=edition&amp;offering=community```console$ docker pull chaostoolkit/reporting```### Use a Docker containerTo generate a PDF report using the Docker image you must first ensure that you are running the command from where the `journal.json`file, generated during an experiment run, can be found. To check for this you can run:```console$ ls```And you should see the `journal.json` file:```journal.json```Now you can run the docker command:```console$ docker run \    --user `id -u` \    -v `pwd`:/tmp/result \    -it \    chaostoolkit/reporting```This will create `chaostoolkit.log` and `report.pdf` files in this directory.```console$ ls``````chaostoolkit.log   journal.json   report.pdf```The `report.json` file will be owned by the user id returned by the command `id -u`, it shouldbe your user. The reason we specify a user is that, by default, the containerruns as root and the image doesn't make a guess about which user will runthe container. If you don't have the `id` command you can set the valuemanually as follows instead: `--user 1000:1000` assuming both your user andgroup ids are `1000`.The default command of the image is equivalent to running this without acontainer:```console$ chaos report --export-format=pdf journal.json report.pdf```If you wish to override that command, pass the `chaos report` parameters asfollows:```console$ docker run \    --user `id -u` \    -v `pwd`:/tmp/result \    -it \    chaostoolkit/reporting -- report --export-format=html5 journal.json report.html```And the same files will be created:```console$ ls``````chaostoolkit.log   journal.json   report.pdf```## ContributeContributors to this project are welcome as this is an open-source effort thatseeks [discussions][join] and continuous improvement.[join]: https://join.chaostoolkit.org/From a code perspective, if you wish to contribute, you will need to run a Python 3.7+ environment. Then, fork this repository and submit a PR. Theproject cares for code readability and checks the code style to match bestpractices defined in [PEP8][pep8]. Please also make sure you provide testswhenever you submit a PR so we keep the code reliable.[pep8]: https://pycodestyle.readthedocs.io/en/latest/</longdescription>
</pkgmetadata>