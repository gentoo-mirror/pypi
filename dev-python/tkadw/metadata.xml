<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># tkadw![PyPI](https://img.shields.io/pypi/v/tkadw?logo=python&amp;logoColor=white&amp;label=Version&amp;labelColor=black&amp;color=blue&amp;link=https%3A%2F%2Ftest.pypi.org%2Fproject%2Ftkadw%2F)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/tkadw?logo=python&amp;logoColor=white&amp;label=Support%20interpreter&amp;labelColor=black)![PyPI - Wheel](https://img.shields.io/pypi/wheel/tkadw?logo=python&amp;logoColor=white&amp;label=Support%20wheel&amp;labelColor=black&amp;color=blue)![PyPI - License](https://img.shields.io/pypi/l/tkadw?logo=python&amp;logoColor=white&amp;label=License&amp;labelColor=black&amp;color=blue)---使用tkinter.Canvas、tcltk扩展自绘技术实现的扩展界面&gt; - `轻量`&gt;&gt; 仅用`python`代码实现，不掺杂大型数据文件&gt; - `支持圆角`&gt;&gt; 运用`DrawEngine`引擎快速画出圆角矩形&gt; - `跨平台`&gt;&gt; `tkinter.Canvas`的跨平台性## 安装安装使用的途径仅在`pypi.org`平台上，所以可以直接使用`pip````bashpython -m pip install -U tkadw````Requirement already satisfied: tkadw in $pythonpath\lib\site-packages (0.1.4)`对于`windows`平台，安装时需勾选`tcl/tk`选项安装`tkinter`对于`linux`平台，需自行查询`python3-tk`的安装步骤## 包树视图```TKADW 源目录├─advanced 高级包：用平台的接口实现更多扩展功能├─canvas Canvas包：集合基本的绘画组件及额外组件库│  ├─adwite 使用Canvas包设计的UI组件库│  ├─atomize 使用Canvas包设计的UI组件库│  └─fluent 使用Canvas包设计的UI组件库└─tkite 其他根据gtk设计的UI组件库   └─gtk 使用Canvas包设计的UI组件库```## Canvas组件库`Canvas组件库`是用`tkinter.Canvas`自绘技术进行绘制实现的基础组件库### 主题配置我提供了一个配置主题的方法`palette`，主题设置为字典类型。如`AdwDrawButton`的样式```python{    &quot;button&quot;: {  # 类        &quot;back&quot;: &quot;#353535&quot;,  # 背景颜色        &quot;border&quot;: &quot;#454545&quot;,  # 边框颜色        &quot;text_back&quot;: &quot;#ffffff&quot;,  # 文字颜色        &quot;border_width&quot;: 1,  # 边框宽带        &quot;active&quot;: {  # 状态：被鼠标碰到            &quot;back&quot;: &quot;#3a3a3a&quot;,  # 背景颜色            &quot;border&quot;: &quot;#454545&quot;,  # 边框颜色            &quot;text_back&quot;: &quot;#cecece&quot;,  # 文字颜色            &quot;border_width&quot;: 1,  # 边框宽带        },        &quot;pressed&quot;: {  # 状态：被鼠标按下            &quot;back&quot;: &quot;#2f2f2f&quot;,  # 背景颜色            &quot;border&quot;: &quot;#454545&quot;,  # 边框颜色            &quot;text_back&quot;: &quot;#9a9a9a&quot;,  # 文字颜色            &quot;border_width&quot;: 1,  # 边框宽带        },    }}```如果想要制作基于`Canvas组件`的扩展组件，可以继承`default_palette`方法，在此会将设置为默认样式，以`GTkButton`为例```pythonfrom tkadw import AdwDrawRoundButton3class GTkButton(AdwDrawRoundButton3):    def __init__(self, *args, **kwargs):        super().__init__(*args, **kwargs)    def default_palette(self):        self.palette_gtk_light()    def palette_gtk_light(self):        self.palette(            {                &quot;button&quot;: {                    &quot;radius&quot;: 11,                    &quot;back&quot;: &quot;#f6f5f4&quot;,                    &quot;border&quot;: &quot;#ccc6c1&quot;,                    &quot;text_back&quot;: &quot;#2e3436&quot;,                    &quot;border_width&quot;: 1.3,                    &quot;active&quot;: {                        &quot;back&quot;: &quot;#f8f8f7&quot;,                        &quot;border&quot;: &quot;#dad6d2&quot;,                        &quot;text_back&quot;: &quot;#2e3436&quot;,                        &quot;border_width&quot;: 1.3,                    },                    &quot;pressed&quot;: {                        &quot;back&quot;: &quot;#dad6d2&quot;,                        &quot;border&quot;: &quot;#dad6d2&quot;,                        &quot;text_back&quot;: &quot;#2e3436&quot;,                        &quot;border_width&quot;: 1.3,                    },                }            }```## GTk组件库`GTk组件库`使用`tkadw.canvas`设计的UI组件库。我为每个组件都额外设计了`Dark暗黑`组件。[![1.png](https://i.postimg.cc/nLtB97YG/QQ-20230623160308.png)](https://postimg.cc/LJNnrJWJ)&gt; 暂无macOS下的演示图，因为作者是个学生党，买不起苹果电脑### GTkButton 按钮组件#### 示例```pythonfrom tkinter import Tkfrom tkadw import GTkButton, GTkDarkButton, GTkFrame, GTkDarkFrameroot = Tk()root.configure(background=&quot;#1e1e1e&quot;)frame = GTkFrame(root)button1 = GTkButton(frame.frame, text=&quot;GTkButton&quot;)button1.pack(fill=&quot;x&quot;, ipadx=5, padx=5, pady=5)frame.pack(fill=&quot;both&quot;, expand=&quot;yes&quot;, side=&quot;right&quot;)frame2 = GTkDarkFrame(root)button2 = GTkDarkButton(frame2.frame, text=&quot;GTkDarkButton&quot;)button2.pack(fill=&quot;x&quot;, ipadx=5, padx=5, pady=5)frame2.pack(fill=&quot;both&quot;, expand=&quot;yes&quot;, side=&quot;left&quot;)root.mainloop()```[![2.gif](https://i.postimg.cc/J05HJ4mY/2.gif)](https://postimg.cc/1V4z1S8D)### GTkEntry 输入框组件#### 示例```pythonfrom tkinter import Tkfrom tkadw import GTkEntry, GTkDarkEntry, GTkFrame, GTkDarkFrameroot = Tk()root.configure(background=&quot;#1e1e1e&quot;)frame = GTkFrame(root)entry1 = GTkEntry(frame.frame)entry1.pack(fill=&quot;x&quot;, ipadx=5, padx=5, pady=5)frame.pack(fill=&quot;both&quot;, expand=&quot;yes&quot;, side=&quot;right&quot;)frame2 = GTkDarkFrame(root)entry2 = GTkDarkEntry(frame2.frame)entry2.pack(fill=&quot;x&quot;, ipadx=5, padx=5, pady=5)frame2.pack(fill=&quot;both&quot;, expand=&quot;yes&quot;, side=&quot;left&quot;)root.mainloop()```[![3.gif](https://i.postimg.cc/fbyPrJrX/3.gif)](https://postimg.cc/t10D1CyC)### GTkTextBox 文本输入框组件#### 示例```pythonfrom tkinter import Tkfrom tkadw import GTkFrame, GTkDarkFrame, GTkTextBox, GTkDarkTextBoxroot = Tk()root.configure(background=&quot;#1f1f1f&quot;)frame = GTkFrame(root)textbox1 = GTkTextBox(frame.frame)textbox1.pack(fill=&quot;x&quot;, ipadx=5, padx=5, pady=5)frame.pack(fill=&quot;both&quot;, expand=&quot;yes&quot;, side=&quot;right&quot;)frame2 = GTkDarkFrame(root)textbox2 = GTkDarkTextBox(frame2.frame)textbox2.pack(fill=&quot;x&quot;, ipadx=5, padx=5, pady=5)frame2.pack(fill=&quot;both&quot;, expand=&quot;yes&quot;, side=&quot;left&quot;)root.mainloop()```[![4.gif](https://i.postimg.cc/hjJdZsQN/4.gif)](https://postimg.cc/8JScjhHb)## 更新记录&gt; `&lt;=0.2.0`:&gt;&gt; 作者都没记下来&gt; `0.2.0`:&gt;&gt; `201`主题配置&gt; &gt;&gt; `202`改变修复`AdwDrawEntry`的`Entry`组件在`Linux`平台下出现边框&gt; &gt;&gt; `203`修复各别解释器类似注释的错误&gt; `0.2.1`&gt;&gt; `211`扩充README文档&gt;&gt;&gt; `212`新增组件`Adw`&gt; &gt;&gt; `213`删除多余文件&gt; `0.2.2` &gt;&gt; `221`扩展额外界面库`BiliBili`，根据`BiliBili桌面版`设计&gt; &gt;&gt; `222`修复`palette`修改完后没完全修改配色的问题&gt; &gt;&gt; `223`扩展额外界面库`Win11`，根据`Sunvalley`设计&gt; &gt;&gt; `224`修复`AdwDrawButton`类边框遮挡的问题&gt; `0.2.3`&gt;&gt; `231` `AdwDrawEngine`添加绘画渐变图形的方法&gt; &gt;&gt; `232`扩展额外界面库`Fluent`，作者制作设计&gt; `0.2.4`&gt;&gt; `241`补充导入</longdescription>
</pkgmetadata>