<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>README######.. image:: https://coveralls.io/repos/github/mlenzen/collections-extended/badge.svg?branch=master:target: https://coveralls.io/github/mlenzen/collections-extended?branch=master:alt: Coverage.. image:: https://pepy.tech/badge/collections-extended/week:target: https://pepy.tech/project/collections-extended/:alt: DownloadsDocumentation:http://collections-extended.lenzm.net/GitHub:https://github.com/mlenzen/collections-extendedPyPI:https://pypi.python.org/pypi/collections-extendedOverview========``collections_extended`` is a pure Python module with no dependencies providing:- a ``bag`` class, AKA **multiset**,- a ``setlist`` class, which is a **unique list** or **ordered set**,- a ``bijection`` class, ``RangeMap`` which is a mapping from ranges to values and- a ``IndexedDict`` class, which is an ordered mapping whose elements can be accessed using index, in addition to key.There are also frozen (hashable) varieties of bags and setlists.Compatible with and tested against Python 3.6, 3.7, 3.8, 3.9, 3.10 &amp; PyPy3.Getting Started===============.. code-block:: python&gt;&gt;&gt; from collections_extended import bag, setlist, bijection, RangeMap, IndexedDict&gt;&gt;&gt; from datetime import date&gt;&gt;&gt; b = bag('abracadabra')&gt;&gt;&gt; b.count('a')5&gt;&gt;&gt; b.remove('a')&gt;&gt;&gt; b.count('a')4&gt;&gt;&gt; 'a' in bTrue&gt;&gt;&gt; b.count('d')1&gt;&gt;&gt; b.remove('d')&gt;&gt;&gt; b.count('d')0&gt;&gt;&gt; 'd' in bFalse&gt;&gt;&gt; sl = setlist('abracadabra')&gt;&gt;&gt; slsetlist(('a', 'b', 'r', 'c', 'd'))&gt;&gt;&gt; sl[3]'c'&gt;&gt;&gt; sl[-1]'d'&gt;&gt;&gt; 'r' in sl  # testing for inclusion is fastTrue&gt;&gt;&gt; sl.index('d')  # so is finding the index of an element4&gt;&gt;&gt; sl.insert(1, 'd')  # inserting an element already in raises a ValueErrorTraceback (most recent call last):...raise ValueErrorValueError&gt;&gt;&gt; sl.index('d')4&gt;&gt;&gt; bij = bijection({'a': 1, 'b': 2, 'c': 3})&gt;&gt;&gt; bij.inverse[2]'b'&gt;&gt;&gt; bij['a'] = 2&gt;&gt;&gt; bij == bijection({'a': 2, 'c': 3})True&gt;&gt;&gt; bij.inverse[1] = 'a'&gt;&gt;&gt; bij == bijection({'a': 1, 'c': 3})True&gt;&gt;&gt; version = RangeMap()&gt;&gt;&gt; version[date(2017, 10, 20): date(2017, 10, 27)] = '0.10.1'&gt;&gt;&gt; version[date(2017, 10, 27): date(2018, 2, 14)] = '1.0.0'&gt;&gt;&gt; version[date(2018, 2, 14):] = '1.0.1'&gt;&gt;&gt; version[date(2017, 10, 24)]'0.10.1'&gt;&gt;&gt; version[date(2018, 7, 1)]'1.0.1'&gt;&gt;&gt; version[date(2018, 6, 30):] = '1.0.2'&gt;&gt;&gt; version[date(2018, 7, 1)]'1.0.2'&gt;&gt;&gt; idict = IndexedDict()&gt;&gt;&gt; idict['a'] = &quot;A&quot;&gt;&gt;&gt; idict['b'] = &quot;B&quot;&gt;&gt;&gt; idict['c'] = &quot;C&quot;&gt;&gt;&gt; idict.get(key='a')'A'&gt;&gt;&gt; idict.get(index=2)'C'&gt;&gt;&gt; idict.index('b')1Installation============``pip install collections-extended``Usage=====``from collections_extended import bag, frozenbag, setlist, frozensetlist, bijection``Classes=======There are seven new collections provided:Bags----bagThis is a bag AKA multiset.frozenbagThis is a frozen (hashable) version of a bag.Setlists--------setlistAn ordered set or a list of unique elements depending on how you look at it.frozensetlistThis is a frozen (hashable) version of a setlist.Mappings--------bijectionA one-to-one mapping.RangeMapA mapping from ranges (of numbers/dates/etc)IndexedDictA mapping that keeps insertion order and allows access by index.Python 2--------The package no longer supports Python 2. The last version to supportPython 2.7, 3.4 &amp; 3.5 was 1.0. No new feature releases will be done for 1.x butany significant bugs that come up may be fixed.:Author: Michael Lenzen:Copyright: 2021 Michael Lenzen:License: Apache License, Version 2.0:Project Homepage: https://github.com/mlenzen/collections-extended</longdescription>
</pkgmetadata>