<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div dir=&quot;rtl&quot;  markdown=&quot;1&quot;&gt;# دریافت اطلاعات بازار بورس تهران[![Test](https://github.com/Glyphack/pytse-client/actions/workflows/unit_test.yml/badge.svg)](https://github.com/Glyphack/pytse-client/actions/workflows/unit_test.yml)[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/Glyphack/pytse-client.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/Glyphack/pytse-client/context:python)[![Discord Chat](https://img.shields.io/discord/730808323808559106?label=discord)](https://discord.gg/ampPDKHpVv)با استفاده از pytse client میتونید به دیتای بازار بورس تهران در پایتون دسترسی داشته باشید.هدف حل مشکلات گرفتن اطلاعات بروز از سایت بازار بورس تهران هست.## میخواید مشارکت کنید؟لطفا [این صفحه](https://github.com/Glyphack/pytse-client/blob/master/CONTRIBUTING.md) رو مطالعه کنید- [دریافت اطلاعات بازار بورس تهران](#دریافت-اطلاعات-بازار-بورس-تهران)  - [میخواید مشارکت کنید؟](#میخواید-مشارکت-کنید)  - [قابلیتها](#قابلیتها)  - [نصب](#نصب)  - [نصب آخرین نسخه در حال توسعه](#نصب-آخرین-نسخه-در-حال-توسعه)  - [نحوه استفاده](#نحوه-استفاده)    - [دانلود سابقه سهم ها](#دانلود-سابقه-سهم-ها)    - [دانلود سابقه شاخص های مالی](#دانلود-سابقه-شاخص-های-مالی)    - [دانلود تاریخچه orderbook](#دانلود-تاریخچه-orderbook)    - [دانلود سابقه معاملات حقیقی و حقوقی به صورت مجزا](#دانلود-سابقه-معاملات-حقیقی-و-حقوقی-به-صورت-مجزا)    - [ماژول Ticker](#ماژول-ticker)        - [نکته ۱](#نکته-۱)        - [نکته ۲](#نکته-۲)      - [اطلاعات نمادهای حذف شده](#اطلاعات-نمادهای-حذف-شده)      - [اطلاعات حقیقی و حقوقی](#اطلاعات-حقیقی-و-حقوقی)      - [سهامداران عمده](#سهامداران-عمده)      - [تاریخچهی سهامداران عمده](#تاریخچهی-سهامداران-عمده)      - [تاریخچه تعداد سهام](#تاریخچه-تعداد-سهام)      - [شناور سهم](#شناور-سهم)      - [اطلاعات لحظهای سهام](#اطلاعات-لحظهای-سهام)      - [ریز معاملات سهام](#ریز-معاملات-سهام)    - [تمامی اطلاعات موجود برای فیلترنویسی](#تمامی-اطلاعات-موجود-برای-فیلترنویسی)    - [گرفتن تمام اطلاعات تاریخی یا لحظهای نماد به صورت CSV](#گرفتن-تمام-اطلاعات-تاریخی-یا-لحظهای-نماد-به-صورت-csv)  - [کامیونیتی](#کامیونیتی)  - [منابع آموزشی](#منابع-آموزشی)  - [الهام گرفته از:](#الهام-گرفته-از)## قابلیتها- دریافت اطلاعات تاریخی به صورت تعدیلشده و تعدیل نشده برای نمادها- دریافت اطلاعات لحظه نمادها- دریافت اطلاعات تاریخی شاخصهای مالی- قابلیت گرفتن اطلاعات یک سهم مانند گروه سهم و اطلاعات معاملات حقیقی و حقوقی- دریافت اطلاعات فاندامنتال یک نماد شامل (EPS ,P/E و حجم مبنا)- دریافت اطلاعات سهامداران عمده- دریافت آمارهای کلیدی مربوط به فیلترنویسی برای نمادها- دریافت ریزمعاملاتی آخرین روز معاملاتی نمادها- دریافت orderbook با پنج مظنه برتر## نصب&lt;div dir=&quot;ltr&quot;&gt;```bashpip install pytse-client```&lt;/div&gt;## نصب آخرین نسخه در حال توسعهاین نسخهی در حال توسعه است که بر روی گیتهاب قرار دارد، همهی قابلیتهای گفته شده در این صفحه را دارد اما ممکن است بعضی قابلیتهای جدید تست شده نباشند. در صورتی که نسخهی بالا کاری که میخواهید را انجام نمیدهد این را نصب کنید.&lt;div dir=&quot;ltr&quot;&gt;```bashpip install git+https://github.com/Glyphack/pytse-client.git```&lt;/div&gt;## نحوه استفاده### دانلود سابقه سهم هابا استفاده از این تابع میتوان سابقه سهام رو دریافت کرد و هم اون رو ذخیره و هم توی کد استفاده کرد&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tsetickers = tse.download(symbols=&quot;all&quot;, write_to_csv=True)print(tickers[&quot;ولملت&quot;])  # history# Output            date     open     high  ...     volume  count    close0     2009-02-18   1050.0   1050.0  ...  330851245    800   1050.01     2009-02-21   1051.0   1076.0  ...  335334212   6457   1057.02     2009-02-22   1065.0   1074.0  ...    8435464    603   1055.03     2009-02-23   1066.0   1067.0  ...    8570222    937   1060.04     2009-02-25   1061.0   1064.0  ...    7434309    616   1060.0...          ...      ...      ...  ...        ...    ...      ...2323  2020-04-14   9322.0   9551.0  ...  105551315  13536   9400.02324  2020-04-15   9410.0   9815.0  ...  201457026  11322   9815.02325  2020-04-18  10283.0  10283.0  ...  142377245   8929  10283.02326  2020-04-19  10797.0  10797.0  ...  292985635  22208  10380.02327  2020-04-20  10600.0  11268.0  ...  295590437  16313  11268.0```&lt;/div&gt;برای دانلود سابقه یک یا چند سهم کافیست اسم اونها به تابع داده بشه:&lt;div dir=&quot;rtl&quot;&gt;همچنین با گذاشتن`write_to_csv=True`سابقه سهم توی فایلی با نماد سهم نوشته میشهسابقه سهم در قالب `Dataframe` استدر صورتی که میخواهید تاریخ شمسی به خروجی اضافه شود میتوانید با گذاشتن`include_jdate=True`این امکان را فراهم کنیدبرای دریافت قیمتهای تعدیل شده از`adjust=True`استفاده کنید&lt;/div&gt;&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tsetse.download(symbols=&quot;وبملت&quot;, write_to_csv=True)tse.download(symbols=&quot;وبملت&quot;, write_to_csv=True, include_jdate=True)tse.download(symbols=[&quot;وبملت&quot;, &quot;ولملت&quot;], write_to_csv=True)```&lt;/div&gt;### دانلود سابقه شاخص های مالی&lt;div style=&quot;line-height:80px;&quot;&gt;برای دانلود سابقه شاخص های منتخب بازار که از طریق این &lt;a href=&quot;http://www.tsetmc.com/Loader.aspx?Partree=151315&amp;Flow=1&quot;&gt;  لینک &lt;/a&gt;می توانید لیست نام آن ها را ملاحظه کنید کافی است اسم شاخص یا شاخص های مورد نظر خود را به صورت&lt;strong&gt; دقیقا مشابه با لینک ارائه شده در بالا &lt;/strong&gt;در بخش `symbols`وارد کنید.همینطور در صورتی که علاقه داشته باشید دیتای مربوط به همه شاخص ها را دریافت کنید کافی است که در برابر کلید `symbols`رشته`&quot;all&quot;`وارد کنید.چند نمونه از دریافت دادههای شاخصی را میتوانید در پایین مشاهده کنید.&lt;/div&gt;&lt;div dir=&quot;ltr&quot;&gt;```pythonfrom pytse_client.download import download_financial_indexesdownload_financial_indexes(symbols=&quot;all&quot;, write_to_csv=True, base_path=&quot;hello&quot;)download_financial_indexes(symbols=[&quot;شاخص قيمت 50 شركت&quot;, &quot;فني مهندسي&quot;], write_to_csv=True, include_jdate=True)```&lt;/div&gt;&lt;div&gt;&lt;i&gt;به این موضوع توجه داشته باشید که دیتای دریافتی تنها حاوی مقدار شاخص مورد نظر در پایان روز معاملاتی است و اطلاعاتی از `OHLCV`شاخص در اختیار شما قرار نمیدهد.&lt;/i&gt;&lt;/div&gt;### دانلود تاریخچه orderbook```pythontse.get_orderbook(    symbol_name,    start_date,    end_date=None,    to_csv=False,    base_path=None,    ignore_date_validation=False,    diff_orderbook=False,  # faster to process but only stores the difference    async_requests=True,)```در بالا مقادیر دیفالت تابع را مشاهده میکنید.ورودی `ignore_date_validation=True` برای وقتی است که از اینکه روز شروع و پایان حتما روز معاملاتی هستند اطمینان ندارید.ورودی `diff_orderbook=True` برای زمانی است که میخواهید خروجی تا حد امکان خامتری دریافت کنید. این خروجی سریعتر دریافت میشود. دیتافریم خروجی فقط شامل تغییرات `orderbook` است و در یک لحظه مشخص صراحتا وضعیت آن را مشخص نمیکند.برای متوالی گرفتن و حذف آپشن async میتوانید `async_requests=False` قرار دهید ولی توجه داشته باشید سرعت دریافت داده ها کاهش مییابد.```pythonsymbol = &quot;خساپا&quot;start_date = datetime.date(2023, 3, 1)end_date = datetime.date(2023, 4, 4)df_dict = get_orderbook(        symbol,        start_date=start_date,        end_date=end_date,        diff_orderbook=False,        ignore_date_validation=True,        to_csv=True,        async_requests=True,    )```فرمت خروجی یک دیکشنری با key تاریخ روز و value دیتافریم آن روز است.### دانلود سابقه معاملات حقیقی و حقوقی به صورت مجزابرای دانلود سابقه معاملات حقیقی و حقوقی برای تمامی نمادها میتوان از تابع زیر استفاده کرد&lt;div dir=&quot;ltr&quot;&gt;```pythonfrom pytse_client import download_client_types_recordsif __name__ == '__main__':    records_dict = download_client_types_records(&quot;all&quot;)    print(records_dict[&quot;فولاد&quot;])# Outputdate         individual_buy_count  ... individual_ownership_change2020-09-01                36298  ...                   -691857.02020-08-31                58185  ...                  83789408.02020-08-26                  461  ...                  21647730.02020-08-25                 1248  ...                  14716846.02020-08-24                38291  ...                -238454702.0...                         ...  ...                         ...2008-12-02                    7  ...                    -10000.02008-12-01                    8  ...                         0.02008-11-30                   10  ...                    -12781.02008-11-29                  116  ...                   4596856.02008-11-26                   14  ...                    -20000.0[2518 rows x 17 columns]```&lt;/div&gt;مشابه تابع قبلی میتوان نتایج را ذخیره کرد&lt;div dir=&quot;ltr&quot;&gt;```pythonfrom pytse_client import download_client_types_recordsif __name__ == '__main__':    # Records are saved as a .csv file with the same name of ticer's    records = download_client_types_records(&quot;فولاد&quot;, write_to_csv=True)```&lt;/div&gt;### ماژول Tickerاین ماژول برای کار با دیتای یک سهم خاص هست و با گرفتن نماد اطلاعات موجود رو میدهبرای مثال:&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tsetse.download(symbols=&quot;نوری&quot;, write_to_csv=True)  # optionalticker = tse.Ticker(&quot;نوری&quot;)print(ticker.history)  # سابقه قیمت سهمprint(ticker.client_types)  # حقیقی حقوقیprint(ticker.title)  # نام شرکتپتروشيمي نوري (نوري)print(ticker.url)  # آدرس صفحه سهمhttp://tsetmc.com/Loader.aspx?ParTree=151311&amp;i=19040514831923530print(ticker.group_name)  # نام گروهمحصولات شيمياييprint(ticker.fiscal_year)  # سال مالی12/29print(ticker.eps)  # EPS16442.0print(ticker.p_e_ratio)  # P/E6.705388638851721print(ticker.group_p_e_ratio)  # group P/E8.24print(ticker.nav)  # NAV خالص ارزش داراییها ویژه صندوقها میباشد112,881print(ticker.nav_date)  # last date of NAV تاریخ بروزرسانی خالص ارزش داراییها ویژه صندوقها میباشد1400/7/25 13:58:00print(ticker.psr)  # PSR این نسبت ویژه شرکتهای تولیدی است71483.0238888889print(ticker.p_s_ratio)  # P/S این نسبت ویژه شرکتهای تولیدی است1.5423242331125966print(ticker.base_volume)  # حجم مبنا918780.0print(ticker.state)  # وضعیت نمادمجازprint(ticker.last_price)  # آخرین معامله109940print(ticker.adj_close)  # قیمت پایانی110250print(ticker.yesterday_price)  # قیمت دیروز106800print(ticker.open_price)  # قیمت اولین معامله108200print(ticker.high_price)  # قیمت حداکثر111830print(ticker.low_price)  # قیمت حداقل108200print(ticker.count)  # تعداد معاملات3934print(ticker.volume)  # حجم معاملات2602437print(ticker.value)  # ارزش معاملات286919407590print(ticker.last_date)  # تاریخ آخرین اطلاعات قیمت پایانی ناشی از تغییرات شرکتی و معاملات2021-11-01 12:29:54print(ticker.flow)  # عنوان بازاربورسprint(ticker.sta_max)  # حداکثر قیمت مجاز115760.0print(ticker.sta_min)  # حداقل قیمت مجاز104740.0print(ticker.min_week)  # حداقل قیمت هفته اخیر104500.0print(ticker.max_week)  # حداکثر قیمت هفته اخیر111830.0print(ticker.min_year)  # حداقل قیمت بازه سال48320.0print(ticker.max_year)  # حداکثر قیمت بازه سال197000.0print(ticker.month_average_volume)  # میانگین حجم ماه3865804print(ticker.float_shares)  # درصد سهام شناور10.0print(ticker.best_supply_price)  # قیمت بهترین تقاضا109960print(ticker.best_supply_vol)  # حجم بهترین تقاضا8296print(ticker.best_demand_price)  # قیمت بهترین عرضه109920print(ticker.best_demand_vol)  # حجم بهترین عرضه3620print(ticker.total_shares)  # تعداد سهامprint(ticker.market_cap) # ارزش بازار شرکتprint(ticker.shareholders)  # اطلاعات سهامداران عمدهprint(ticker.get_shareholders_history())) # تاریخچهی سهامداران عمدهprint(ticker.get_trade_details())  # ریز معاملات روز جاریprint(ticker.get_ticker_real_time_info_response()) # اطلاعات لحظهای مانند قیمت و پیشنهادات خرید و فروش```&lt;/div&gt;برای دریافت قیمتهای تعدیل شده هم میشه از این کد استفاده کرد&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(symbol=&quot;بركت&quot;, adjust=True)```&lt;/div&gt;برای استفاده لازم نیست حتما تابع دانلود صدا زده بشه.اگر این کد رو بدون دانلود کردن سهم استفاده کنید خودش اطلاعات سهم رو از سایت میگیره،اما اگر قبل از اون از دانلود استفاده کرده باشیدبه جای گرفتن از اینترنت اطلاعات رو از روی فایل میخونه که سریع تر هست##### نکته ۱طبق تجربه ای که داشتم چون گاهی اوقات سایت بورس مدت زیادی طول میکشه تا اطلاعات رو بفرسته یا بعضی مواقع نمیفرسته بهتر هست که اول تابع دانلود رو استفاده کنید برای سهمهایی که لازم هست و بعد با دیتای اونها کار کنید.در صورت نیاز به اطلاعات لحظهای نماد بهتر است کل [اطلاعات لحظهای سهام](#اطلاعات-لحظهای-سهام) را یکجا دریافت کنید تا هم دیتای دریافتی مربوط به یک زمان باشند و هم از ارسال درخواستهای مکرر به سایت بورس جلوگیری شود.##### نکته ۲بعضی از ویژگیها برای همهی سهمها در دسترس نیست. برای مثال بعضی از سهمها دارای آخرین قیمت یا پی به ای یا ای پی اس نیستند. مقدار این ویژگیها در صورت نبودن برابر با `None` خواهد بود. پس باید در برنامه خود اینکه این مقادیر وجود دارند را بررسی کنید.#### اطلاعات نمادهای حذف شدهتعدادی از نمادها توی سایت به شکل حذف شده هستند. برای گرفتن دیتای این نمادها از ماژول تیکر استفاده کنید.برای مثال جهت دسترسی به دیتای نماد حذف شده خصدرا، اندیس آن را از آدرس نماد در سایت بورس بگیریدhttp://www.tsetmc.com/Loader.aspx?ParTree=151311&amp;i=25165947991415904&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;&quot;, index=&quot;25165947991415904&quot;)```&lt;/div&gt;مقدار `index` را با مقدار جلوی `i=` جایگزین میکنیم.#### اطلاعات حقیقی و حقوقیاطلاعات خرید و فروش حقیقی و حقوقی سهام رو میشه از طریق `ticker.client_types` گرفت این اطلاعات یه DataFrame شامل اطلاعات موجود در تب حقیقی حقوقی(تب بنفشی که در این [صفحه](http://www.tsetmc.com/Loader.aspx?ParTree=151311&amp;i=778253364357513) هست) سهم هست:&lt;div dir=&quot;ltr&quot;&gt;```date : تاریخindividual_buy_count : تعداد معاملات خرید حقیقیcorporate_buy_count : تعداد معلاملات خرید حقوقیindividual_sell_count : تعداد معاملات فروش حقیقیcorporate_sell_count : تعداد معلاملات فروش حقوقیindividual_buy_vol : حجم خرید حقیقیcorporate_buy_vol : حجم خرید حقوقیindividual_sell_vol : حجم فروش حقیقیcorporate_sell_value : حجم فروش حقوقیindividual_buy_mean_price : قیمت میانگین خرید حقیقیindividual_sell_mean_price : قیمت میانگین فروش حقیقیcorporate_buy_mean_price : قیمت میانگین خرید حقوقیcorporate_sell_mean_price : قیمت میانگین فروش حقوقیindividual_ownership_change : تغییر مالکیت حقوقی به حقیقی```&lt;/div&gt;#### سهامداران عمدهسهامداران عمده اطلاعات داخل این [صفحه](http://tsetmc.com/Loader.aspx?Partree=15131T&amp;c=IRO1BMLT0007) هست.این اطلاعات رو میشه با `shareholders` گرفت که یک DataFrame هست.&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;وبملت&quot;)print(ticker.shareholders)  # اطلاعات سهامداران عمده# Output change   percentage       share                                 shareholder0   دولت جمهوري اسلامي ايران                    23,114,768,760  11.160     01   صندوق تامين آتيه كاركنان بانك ملت           13,353,035,330  6.440      02   صندوق سرمايه گذاري واسطه گري مالي يكم       11,748,764,647  5.670      03   شركت پتروشيمي فن آوران-سهامي عام-           9,253,327,080   4.460      04   شركت گروه مالي ملت-سهام عام-                8,933,698,834   4.310      05   صندوق سرمايه گذاري.ا.بازارگرداني ملت     8,395,500,914   4.050      06   شركت سرمايه گذاري صباتامين-سهامي عام-       7,659,597,269   3.690      07   شركت تعاوني معين آتيه خواهان                4,561,801,327   2.200      08   شركت س اتهران س.خ-م ك م ف ع-                4,278,903,677   2.060      09   شركت گروه توسعه مالي مهرآيندگان-سهامي عام-  4,161,561,525   2.000      010  شركت س اخراسان رضوي س.خ-م ك م ف ع-          3,442,236,423   1.660      011  شركت س افارس س.خ-م ك م ف ع-                 2,593,956,288   1.250      012  شركت س اخوزستان س.خ-م ك م ف ع-              2,526,080,803   1.220      013  شركت شيرين عسل-سهامي خاص-                   2,496,936,881   1.200      014  شركت سرمايه گذاري ملي ايران-سهامي عام-      2,423,674,676   1.170      015  شركت س ااصفهان س.خ-م ك م ف ع-               2,274,221,331   1.090      0```&lt;/div&gt;#### تاریخچهی سهامداران عمدهبا استفاده از تابع get_shareholders_history میشه تاریخچه اطلاعات سهامداران عمده رو گرفت:**رفع خطای asyncio.run() cannot be called from a running event loop**در صورتی که این خطا رو گرفتید به این معنی هست که تابع `get_shareholders_history` در یک تابع `async` داره اجرا میشه.برای رفع اون کافیه که تابع `get_shareholders_history_async` رو استفاده کنید مطابق مثال پایین تکه کد دوم.&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;وبملت&quot;)ticker.get_shareholders_history(    from_when=datetime.timedelta(days=90),  # تعداد روزهای گذشته که مقدار پیشفرض ۹۰ روز است    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است    only_trade_days=True,  # فقط روزهای معاملاتی که پیشفرض بله است)# در صورتی که میخواهید تابع# async# رو استفاده کنیدawait ticker.get_shareholders_history(    from_when=datetime.timedelta(days=90),  # تعداد روزهای گذشته که مقدار پیشفرض ۹۰ روز است    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است    only_trade_days=True,  # فقط روزهای معاملاتی که پیشفرض بله است)```&lt;/div&gt;خروجی این تابع یک دیتا فریم حاوی دیتای زیر است:&lt;div dir=&quot;ltr&quot;&gt;```,date,shareholder_id,shareholder_shares,shareholder_percentage,shareholder_instrument_id,shareholder_name,change0,2021-08-30 17:01:23.037957,273,2910355428.0,32.19,IRO1RSAP0000,شركت ايراني توليداتومبيل-سايپا-,11,2021-08-30 17:01:23.037957,406,975144471.0,10.78,IRO1RSAP0000,شركت سايپا,12,2021-08-30 17:01:23.037957,50264,454000000.0,5.02,IRO1RSAP0000,شركت ايراني توليداتومبيل سايپا-سهامي عام-,13,2021-08-30 17:01:23.037957,42636,409843922.0,4.53,IRO1RSAP0000,شركت سرمايه گذاري وتوسعه صنعتي نيوان ابتكارس.ع,14,2021-08-30 17:01:23.037957,46966,116002189.0,1.28,IRO1RSAP0000,BFMصندوق.س.ا.بازارگرداني سهم آشنايكم,15,2021-08-31 17:01:23.037957,273,2910355428.0,32.19,IRO1RSAP0000,شركت ايراني توليداتومبيل-سايپا-,16,2021-08-31 17:01:23.037957,406,975144471.0,10.78,IRO1RSAP0000,شركت سايپا,17,2021-08-31 17:01:23.037957,50264,454000000.0,5.02,IRO1RSAP0000,شركت ايراني توليداتومبيل سايپا-سهامي عام-,18,2021-08-31 17:01:23.037957,42636,409843922.0,4.53,IRO1RSAP0000,شركت سرمايه گذاري وتوسعه صنعتي نيوان ابتكارس.ع,19,2021-08-31 17:01:23.037957,46966,116002189.0,1.28,IRO1RSAP0000,BFMصندوق.س.ا.بازارگرداني سهم آشنايكم,110,2021-09-01 17:01:23.037957,273,2910355428.0,32.19,IRO1RSAP0000,شركت ايراني توليداتومبيل-سايپا-,111,2021-09-01 17:01:23.037957,406,975144471.0,10.78,IRO1RSAP0000,شركت سايپا,112,2021-09-01 17:01:23.037957,50264,454000000.0,5.02,IRO1RSAP0000,شركت ايراني توليداتومبيل سايپا-سهامي عام-,113,2021-09-01 17:01:23.037957,42636,409843922.0,4.53,IRO1RSAP0000,شركت سرمايه گذاري وتوسعه صنعتي نيوان ابتكارس.ع,114,2021-09-01 17:01:23.037957,46966,116002189.0,1.28,IRO1RSAP0000,BFMصندوق.س.ا.بازارگرداني سهم آشنايكم,1```&lt;/div&gt;&lt;div id=&quot;qa&quot; /&gt;گرفتن این دیتا کار زمان بری هست (با توجه به تعداد روزی که لازم دارید) و سریع کردن کار با کد به راحتی امکان پذیر نیست. سعی نکنید با همزمان اجرا کردن این تابع برای سهمهای مختلف روند رو سریعتر کنید چون سایت ip رو بلاک میکنه.اگر موقع اجرای کد پیغام زیر را به تعداد زیاد گرفتید (مثلا هر ثانیه این پیغام اومد) یعنی آیپی شما توسط سایت بورس بلاک شده و چند دقیقه صبر کنید و دوباره ادامه بدید.&lt;div dir=&quot;ltr&quot;&gt;```Retrying pytse_client.ticker.ticker.Ticker._get_ticker_daily_info_page_response in 1.3127419515957892 seconds as it raised ClientResponseError: 500, message='Internal Server Error', url=URL('http://cdn.tsetmc.com/Loader.aspx?ParTree=15131P&amp;i=56574323121551263&amp;d=20210220').```&lt;/div&gt;#### تاریخچه تعداد سهامبرای گرفتن این اطلاعات از تابع `get_total_shares_history_async`استفاده کنید.خروجی این تابع یک دیتافریم با دو ستون date, total_sharesاست.توجه داشته باشید که اجرا کردن این تابع به علت `async` بودن متفاوت از بقیه دستورات است.برای اطلاعات بیشتر دربارهی این نوع توابع [این ویدیو](https://www.youtube.com/watch?v=EHHxGAfcZWw) را ببینیددر صورتی که در کد خود تابع async ندارید:&lt;div dir=&quot;ltr&quot;&gt;```pythonimport asyncioimport pytse_client as tseticker = tse.Ticker(&quot;وبملت&quot;)result = asyncio.run(ticker.get_total_shares_history_async(    from_when=datetime.timedelta(days=90),  # تعداد روزهای گذشته که مقدار پیشفرض ۶۰ روز است    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است    only_trade_days=True,  # فقط روزهای معاملاتی که پیشفرض بله است)```&lt;/div&gt;اگر در برنامهی خود کد async دارید:این تابع را به این شکل اجرا کنید&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;وبملت&quot;)result = await ticker.get_total_shares_history_async(    from_when=datetime.timedelta(days=90),  # تعداد روزهای گذشته که مقدار پیشفرض ۶۰ روز است    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است    only_trade_days=True,  # فقط روزهای معاملاتی که پیشفرض بله است)```&lt;/div&gt;#### شناور سهمبرای مثال میشه با استفاده از دیتای سهامداران عمده، شناوری سهم رو حساب کرد:&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;وبملت&quot;)print(ticker.shareholders.percentage.sum())  # جمع درصد سهامداران عمده53.63print(100 - ticker.shareholders.percentage.sum())  # درصد سهام شناور46.37```&lt;/div&gt;#### اطلاعات لحظهای سهاماز طریق تابع `get_ticker_real_time_info_response` میشه اطلاعات لحظهای سهام رو گرفت.در صورتی که هنگام گرفتن اطلاعات لحظهای وضعیت سهام در حالت ممنوع متوقف باشد یا نماد قدیمی باشد اطلاعات لحظهای موجود نیست و با ارور مواجه خواهید شد که باید به درستی هندل شود.برای گرفتن اطلاعات لحظهای به صورت فایل csv میتوانید از تابع زیر استفاده کنید:&lt;div dir=&quot;ltr&quot;&gt;```pythondf = ticker_real_time_data_to_csv(ticker)df.to_csv(&quot;test.csv&quot;) # برای ذخیره کردن در فایل```&lt;/div&gt;نمونهی استفاده&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;وبملت&quot;)try:    real_time_data = ticker.get_ticker_real_time_info_response()except RuntimeError: # هندل کردن ارور در صورت وجود نداشتن اطلاعات لحظهای    print(&quot;cannot get realtime data&quot;)print(real_time_data.buy_orders) # پیشنهادات خریدprint(real_time_data.sell_orders) # پیشنهادات فروشprint(real_time_data.best_supply_price)  # قیمت بهترین تقاضاprint(real_time_data.best_supply_vol)  # حجم بهترین تقاضاprint(real_time_data.best_demand_price)  # قیمت بهترین عرضهprint(real_time_data.best_demand_vol)  # حجم بهترین عرضهprint(real_time_data.state)  # وضعیت نمادprint(real_time_data.last_price)  # قیمت آخرین معاملهprint(real_time_data.adj_close)  # قیمت پایانیprint(real_time_data.yesterday_price)  # قیمت دیروزprint(real_time_data.open_price)  # قیمت اولین معاملهprint(real_time_data.high_price)  # قیمت حداکثرprint(real_time_data.low_price)  # قیمت حداقلprint(real_time_data.count)  # تعداد معاملاتprint(real_time_data.volume)  # حجم معاملاتprint(real_time_data.value)  # ارزش معاملاتprint(real_time_data.last_date)  # آخرین اطلاعات قیمت ناشی از تغییرات شرکتی و معاملات# پیشنهادات فروشfor sell_order in real_time_data.sell_orders:    print(sell_order.volume, sell_order.count, sell_order.price)# پیشنهادات خریدfor buy_order in real_time_data.buy_orders:    print(buy_order.volume, buy_order.count, buy_order.price)# اطلاعات خرید و فروش حقیقی و حقوقیprint(real_time_data.individual_trade_summary.buy_count)print(real_time_data.individual_trade_summary.buy_vol)print(real_time_data.individual_trade_summary.sell_count)print(real_time_data.individual_trade_summary.sell_vol)print(real_time_data.corporate_trade_summary.buy_count)print(real_time_data.corporate_trade_summary.buy_vol)print(real_time_data.corporate_trade_summary.sell_count)print(real_time_data.corporate_trade_summary.sell_vol)```&lt;/div&gt;#### ریز معاملات سهاماز طریق تابع `get_trade_details` میتوان ریز معاملات آخرین روز معاملاتی سهام را گرفت:&lt;div dir=&quot;ltr&quot;&gt;```pythonimport pytse_client as tseticker = tse.Ticker(&quot;نوری&quot;)trade_details = ticker.get_trade_details()print(trade_details)# Output          date  volume     price0     09:00:20   10000  111900.01     09:00:20    4480  111900.02     09:00:20    3171  111900.03     09:00:20    1647  111900.04     09:00:20    1101  111900.0       ...     ...       ...6478  12:29:57    1163  116000.06479  12:29:57    2159  116000.06480  12:29:57     795  116000.06481  12:29:58     257  116000.06482  12:29:59     601  116000.0```&lt;/div&gt;### تمامی اطلاعات موجود برای فیلترنویسیدر بخش دیدهبان بازار امکان فیلترنویسی به زبان جاوااسکریپت وجود دارد. یکی از اطلاعات مهمی که معاملهگران معمولا با اسفاده از آن فیلترنویسی میکنند آمارهای کلیدی سهام است که شامل تمامی موارد ذکر شده در [آمارهای کلیدی](./pytse_client/ticker_statisticals/README.md)است.همچنین تمامی اطلاعات ارائه شده در مورد اطلاعات حقیقی حقوقی های سهام هم که در ادامه آمده است میتوانید دریافت کنید.```sh&quot;numof_individual_buy&quot;, &quot;numof_corporate_buy&quot;,&quot;vol_individual_buy&quot;, &quot;vol_corporate_buy&quot;,&quot;numof_individual_sell&quot;, &quot;numof_corporate_sell&quot;,&quot;vol_individual_sell&quot;, &quot;vol_corporate_sell&quot;```همچنین همه اطلاعات ارائه شده توسط دیده بان بازار را هم می توانید برای تمامی سهام دریافت کنید. در ادامه مشاهده میکنید.```sh&quot;index&quot;, &quot;code&quot;, &quot;symbol&quot;, &quot;name&quot;, &quot;last_changed&quot;, &quot;open_price&quot;,&quot;adj_closing_price&quot;, &quot;last_price&quot;, &quot;number_of_trans&quot;,&quot;volume_of_trans&quot;, &quot;value_of_trans&quot;, &quot;min_price&quot;, &quot;max_year&quot;,&quot;yesterday_price&quot;, &quot;EPS&quot;, &quot;base_volume&quot;, &quot;group_number&quot;, &quot;max_price_allowed&quot;, &quot;min_price_allowed&quot;, &quot;number_of_stocks&quot;```در واقع از دیده بان بازار دیتاهای زیر قابل دریافت بود که به عنوان نمونه قرار میدهم ولی برخی از دیتاها برای توسعه دهندگان پکیج قابل فهم نبود(آنهایی که با `?` در زیر مشخص شده اند) که در صورت علاقه مندی میتوانید با اطلاع رسانی کاربرد آن ها به ما در توسعه پکیج کمک کنید.```sh'71957984642204570', # id'IRO7APTP0001', # code'شپترو', # symbol'پتروشيمي آبادان', # name'122931', # last changed (time 12:29:31)'2470', # open price'2438', # adj_closing price'2436', # last price'861', # number of trans (daily)'29225934', # volume of trans (daily)'71250969784', # value of trans (daily)'2436', # min price (daily)'2500', # max price (daily)'2511', # yesterday price'-43', # EPS'4000000', # base voulume'3423', # ?'4', # ?'44', # group number'2586.00', # max allowed (daily)'2436.00', # min allowed (daily)'10000000000', # number of stocks'309' # ?```ممکن است گاهی برخی از این اطلاعات موجود نباشند که باید در برنامه از وجود آن برای سهام مورد نظر اطمینان پیدا کنید.البته باید دقت داشت اگر برخی از این اطلاعات گاهی برای برخی نمادها موجود نبود در خود دیدهبان بازار هم موجود نبوده است.در حال حاضر امکان دریافت کل اطلاعات بروز شده و لحظهای مربوط به فیلترنویسی با استفاده از تکه کد زیر موجود است.&lt;div dir=&quot;ltr&quot;&gt;```pythonfrom pytse_client import get_statskey_stats = get_stats(base_path=&quot;hello&quot;, to_csv=True)# Output   ave_numof_buyer_last_12_month  ave_numof_buyer_last_3_month  ave_numof_corporation_buyer_last_12_month  ...  symbol                          name            index0                          610.0                         345.0                                        1.0  ...   وسپهر  سرمایه گذاری مالی سپهرصادرات  1143126626541551                          816.0                         381.0                                        1.0  ...    شصدف                صنعتی دوده فام  2040928727529572                           92.0                          76.0                                        0.0  ...     فسا                  پتروشیمی فسا  3180053558961473                          298.0                         246.0                                        2.0  ...   فرآور          فرآوریموادمعدنیایران  4089344232240974                          407.0                         332.0                                        1.0  ...   سبزوا              سیمان لار سبزوار  611986653700161```همانطور که در مثال(ناقص به دلیل کمبود جا) بالا می بینید خروجی این دستور یک pandas dataframe است که **آمارهای کلیدی به علاوه اطلاعات حقیقی و حقوقی و همچنین اطلاعات دیده بان بازار** تمامی نمادهایی که در پکیج معتبر هستند و دیدهبان در اختیار کاربران قرار میدهد را در خود دارد.به صورت همزمان اطلاعات در `hello/key_stats.csv` ذخیره میشود.در صورتی که نمیخواهید خروجی csv ساخته شود کافی است که `to_csv=False` قرار دهید.همینطور در صورت خالی گذاشتن `base_path` به جای آن `stats_data/stats.csv` استفاده میشود.&lt;/div&gt;### گرفتن تمام اطلاعات تاریخی یا لحظهای نماد به صورت CSVبرای استفاده راحتتر از اطلاعات لحظهای یا تاریخی و یا درست کردن فایل برای نرم افزارهای دیگه توابعی وجود داره که تمام اطلاعات نماد رو در یک فایل برمیگردونه.اطلاعات تاریخی برگشته شامل اطلاعات خرید و فروش حقیقی و حقوقی و تاریخچه سهم هست که در هر سطر با ذکر تاریخ وجود دارنداطلاعات لحظهای تنها یک سطر هست و شامل اطلاعات تابلو هست.توجه کنید این اطلاعات چیزی بیشتر از توابع موجود در پکیج ندارند و صرفا برای راحتی کار کاربران توسعه داده شدهاند.&lt;div dir=&quot;ltr&quot;&gt;```pythonticker = Ticker(&quot;وبملت&quot;)historical_data = export_ticker_history_as_csv(ticker)real_time_data = ticker_real_time_data_to_csv(ticker)# برای نوشتن این اطلاعات به شکل فایل csvhistorical_data.to_csv(&quot;history.csv&quot;)real_time_data.to_csv(&quot;realtime.csv&quot;)```&lt;/div&gt;## کامیونیتیاگر درباره پکیج یا استفاده از اون سوالی دارید میتونید توی سرور دیسکورد بپرسید.https://discord.gg/ampPDKHpVv&lt;div id=&quot;education&quot; /&gt;## منابع آموزشیلیست زیر پست و یا دورههای آموزشی است که به شما کمک میکند استفاده از پایتون و پکیج pytse را بیاموزید- https://virgool.io/@sh.hooshyari/%D8%AF%D8%B1%DB%8C%D8%A7%D9%81%D8%AA-%D8%A7%D8%B7%D9%84%D8%A7%D8%B9%D8%A7%D8%AA-%D8%A8%D9%88%D8%B1%D8%B3-%D8%AA%D9%87%D8%B1%D8%A7%D9%86-%D8%A8%D8%A7-%D9%BE%D8%A7%DB%8C%D8%AA%D9%88%D9%86-mgaev4iytip6- https://github.com/sfmqrb/Eco-Finance-Course&lt;div id=&quot;credits&quot; /&gt;## الهام گرفته از:- [tehran_stocks](https://github.com/ghodsizadeh/tehran-stocks)- [yfinance](https://github.com/ranaroussi/yfinance)&lt;/div&gt;</longdescription>
</pkgmetadata>