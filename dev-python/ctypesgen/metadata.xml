<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>                              ctypesgen                              ---------                  (c) Ctypesgen developers 2007-2022                 https://github.com/ctypesgen/ctypesgen_ctypesgen_ is a pure-python ctypes wrapper generator. It parses C header filesand creates a wrapper for libraries based on what it finds.Preprocessor macros are handled in a manner consistent with typical C code.Preprocessor macro functions are translated into Python functions that are thenmade available to the user of the newly-generated Python wrapper library.It can also output JSON, which can be used with Mork, which generates bindingsfor Lua, using the alien module (which binds libffi to Lua).## DocumentationSee https://github.com/ctypesgen/ctypesgen/wiki for full documentation.Run `ctypesgen --help` for full range of available options.## Installation_ctypesgen_ can be installed by `pip install ctypesgen`. It requires Python 3.7to run.## Basic UsageThis project automatically generates ctypes wrappers for header files writtenin C.For example, if you'd like to generate Neon bindings, you can do so using thisrecipe (using a standard pip install):```shctypesgen -lneon /usr/local/include/neon/ne_*.h -o neon.py```Some libraries, such as APR, need special flags to compile. You can pass theseflags in on the command line.For example:```shFLAGS = `apr-1-config --cppflags --includes`ctypesgen $FLAGS -llibapr-1.so $HOME/include/apr-1/apr*.h -o apr.py```Sometimes, libraries will depend on each other. You can specify thesedependencies using -mmodule, where module is the name of the dependency module.Here's an example for apr_util:```shctypesgen $FLAGS -llibaprutil-1.so $HOME/include/apr-1/ap[ru]*.h \-mapr -o apr_util.py```If you want JSON output (e.g. for generating Lua bindings), use```--output-language=json```When outputting JSON, you will probably also want to use```--all-headers --builtin-symbols --no-stddef-types --no-gnu-types--no-python-types```## Related Software of Interest_libffi_ is a portable Foreign Function Interface library:http://sources.redhat.com/libffi/_Mork_, the friendly alien, can be found at:https://github.com/rrthomas/mork## License_ctypesgen_ is distributed under the New (2-clause) BSD License:http://www.opensource.org/licenses/bsd-license.phpCopyright (c) 2007-2022, Ctypesgen DevelopersAll rights reserved.Redistribution and use in source and binary forms, with or withoutmodification, are permitted provided that the following conditions are met:1. Redistributions of source code must retain the above copyright notice,   this list of conditions and the following disclaimer.2. Redistributions in binary form must reproduce the above copyright   notice, this list of conditions and the following disclaimer in the   documentation and/or other materials provided with the distribution.THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THEIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSEARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BELIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, ORCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OFSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESSINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER INCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THEPOSSIBILITY OF SUCH DAMAGE.## Change Log### v1.1.1- Fixed inconsistency in version output in released packages### v1.1.0This release has a number of bug fixes in addition to a few new features.Following a complete transition to Python 3, with dropped Python 2 support,major work was made towards code modernization and quality.- The code is now Black formatted and Flake8 tested- Greatly improved unittest framework- Embedded PLY version updated to 3.11- New option: `--no-embed-preamble` create separate files for preamble and  loader instead of embedding in each output file- New option: `--allow-gnu-c` do not undefine `__GNUC__`- Fixed library loader search path on macOS- Fixed rare bug, processing (legacy) header files with MacRoman encoding  on macOS- Added full support for floating and integer constants- Added support for sized integer types on Windows- Added support to handle `restrict` and `_Noreturn` keywords- Added name formats to posix library loader- Fixed mapping of 'short int' to c_short- Git tags are now using `x.y.z` format### v1.0.2Many issues fixed. Parse gcc attributes moreImplements automatic calling convention selection based on gcc attributes forstdcall/cdecl.- Simplify and unify library loader for various platforms. Improve library path  searches on Linux (parsed ld.so.conf includes now).- First implementaion of #pragma pack- First implemenation of #undef- Adds several command line options:  `-D` `--define`  `-U` `--undefine`  `--no-undefs`  `-P` `--strip-prefix`  `--debug-level`### v1.0.1Fix handling of function prototypes Other minor improvments included.### v1.0.0Py2/Py3 support Various development branches merged backIn addition to the various developments from the different branches, thistag also represents a code state that:- ties in with Travis CI to watch code developments- improves testsuite, including moving all JSON tests to testsuite- includes a decent Debian package build configuration- automatically creates a man page to be included in the Debian package</longdescription>
</pkgmetadata>