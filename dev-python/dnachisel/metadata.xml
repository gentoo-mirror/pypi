<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>DNA Chisel==========DNA Chisel (complete documentation `here &lt;https://edinburgh-genome-foundry.github.io/DnaChisel/&gt;`_)is a Python library for optimizing DNA sequences with respect to a set ofconstraints and optimization objectives. It comes with over 15 classes ofsequence specifications which can be composed to, for instance, codon-optimizegenes, meet the  constraints of a commercial DNA provider, avoid homologiesbetween sequences, tune GC content, or all of this at once!DNA Chisel also allows users to define their own specifications in Python,making the library suitable for a large range of automated sequence designapplications, and complex custom design projects. It can be used as a Pythonlibrary, a command-line interface, or a `web application &lt;https://cuba.genomefoundry.org/sculpt_a_sequence&gt;`_.Example of use---------------.. code:: python    from dnachisel import *    # DEFINE THE OPTIMIZATION PROBLEM    some_sequence = random_dna_sequence(10000)    problem = DnaOptimizationProblem(        sequence=some_sequence,        constraints=[            AvoidPattern(&quot;BsaI_site&quot;),            EnforceGCContent(mini=0.3, maxi=0.7, window=50),            EnforceTranslation(location=(500, 1400))        ],        objectives=[CodonOptimize(species='e_coli', location=(500, 1400))]    )    # SOLVE THE CONSTRAINTS, OPTIMIZE WITH RESPECT TO THE OBJECTIVE    problem.resolve_constraints()    problem.optimize()    # PRINT SUMMARIES TO CHECK THAT CONSTRAINTS PASS    print(problem.constraints_text_summary())    print(problem.objectives_text_summary())Alternatively, DNA Chisel lets you define problems by annotating a Genbank file.You can also define a problem by annotating directly a Genbank as follows:.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaChisel/master/docs/_static/images/example_sequence.png   :alt: [logo]   :align: center   :width: 450pxSee `this page &lt;https://edinburgh-genome-foundry.github.io/DnaChisel/ref/builtin_specifications.html&gt;`_for an overview of available specifications.Infos-----**PIP installation:**.. code:: bash  pip install dnachisel[reports](you can omit the ``[reports]`` suffix if you intend to use dnachisel onlyfor sequence optimization, without generating figures or PDF reports)**Web documentation:**`&lt;https://edinburgh-genome-foundry.github.io/DnaChisel/&gt;`_**Github Page**`&lt;https://github.com/Edinburgh-Genome-Foundry/DnaChisel&gt;`_**Live demo**`&lt;http://cuba.genomefoundry.org/sculpt_a_sequence&gt;`_**License:** MIT, Copyright Edinburgh Genome FoundryMore biology software-----------------------.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Edinburgh-Genome-Foundry.github.io/master/static/imgs/logos/egf-codon-horizontal.png  :target: https://edinburgh-genome-foundry.github.io/DNA Chisel is part of the `EGF Codons &lt;https://edinburgh-genome-foundry.github.io/&gt;`_ synthetic biology software suite for DNA design, manufacturing and validation.</longdescription>
</pkgmetadata>