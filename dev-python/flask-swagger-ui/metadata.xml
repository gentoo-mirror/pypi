<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># flask-swagger-uiSimple Flask blueprint for adding [Swagger UI](https://github.com/swagger-api/swagger-ui) to your flask application.Included Swagger UI version: 4.11.1.## Installation`pip install flask-swagger-ui`## UsageExample application:```pythonfrom flask import Flaskfrom flask_swagger_ui import get_swaggerui_blueprintapp = Flask(__name__)SWAGGER_URL = '/api/docs'  # URL for exposing Swagger UI (without trailing '/')API_URL = 'http://petstore.swagger.io/v2/swagger.json'  # Our API url (can of course be a local resource)# Call factory function to create our blueprintswaggerui_blueprint = get_swaggerui_blueprint(    SWAGGER_URL,  # Swagger UI static files will be mapped to '{SWAGGER_URL}/dist/'    API_URL,    config={  # Swagger UI config overrides        'app_name': &quot;Test application&quot;    },    # oauth_config={  # OAuth config. See https://github.com/swagger-api/swagger-ui#oauth2-configuration .    #    'clientId': &quot;your-client-id&quot;,    #    'clientSecret': &quot;your-client-secret-if-required&quot;,    #    'realm': &quot;your-realms&quot;,    #    'appName': &quot;your-app-name&quot;,    #    'scopeSeparator': &quot; &quot;,    #    'additionalQueryStringParams': {'test': &quot;hello&quot;}    # })app.register_blueprint(swaggerui_blueprint)app.run()# Now point your browser to localhost:5000/api/docs/```## ConfigurationThe blueprint supports overloading all Swagger UI configuration options that can be JSON serialized.See https://github.com/swagger-api/swagger-ui#parameters for options.Plugins and function parameters are not supported at this time.OAuth2 parameters can be found at https://github.com/swagger-api/swagger-ui#oauth2-configuration .</longdescription>
</pkgmetadata>