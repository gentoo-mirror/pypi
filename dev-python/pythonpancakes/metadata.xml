<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># üêç Python Pancakes ü•ûA simple request wrapper for the Pancake-Swap API.## InstallationInstall package ```bash# Using pip$ pip install pythonpancakes# Or from source$ git clone https://github.com/scottburlovich/pythonpancakes.git pythonpancakes$ cd pythonpancakes$ python3 setup.py install```Import module into your project and initialize API class```pythonfrom pythonpancakes import PancakeSwapAPIps = PancakeSwapAPI()```## UsagePlease note, the API functionality currently exposed by PancakeSwap is quite basic. This package will be updated as they add new functionality.## `summary()`Returns a dictionary containing data for the top ~1000 PancakeSwap pairs, sorted by reserves.Example invocation:```pythonsummary = ps.summary()```Example output:```python# output:{  &quot;updated_at&quot;: 1234567,              // UNIX timestamp  &quot;data&quot;: {    &quot;0x..._0x...&quot;: {                  // BEP20 token addresses, joined by an underscore      &quot;price&quot;: &quot;...&quot;,                 // price denominated in token1/token0      &quot;base_volume&quot;: &quot;...&quot;,           // last 24h volume denominated in token0      &quot;quote_volume&quot;: &quot;...&quot;,          // last 24h volume denominated in token1      &quot;liquidity&quot;: &quot;...&quot;,             // liquidity denominated in USD      &quot;liquidity_BNB&quot;: &quot;...&quot;          // liquidity denominated in BNB    },    // ...  }}```---## `tokens(address)`If address parameter is specified, returns the token information, based on address. Otherwise, returns the tokens in the top ~1000 pairs on PancakeSwap, sorted by reserves.Example invocation without address:```pythontokens = ps.tokens()```Example output without address:```python{  &quot;updated_at&quot;: 1234567,              // UNIX timestamp  &quot;data&quot;: {    &quot;0x...&quot;: {                        // the address of the BEP20 token      &quot;name&quot;: &quot;...&quot;,                  // not necessarily included for BEP20 tokens      &quot;symbol&quot;: &quot;...&quot;,                // not necessarily included for BEP20 tokens      &quot;price&quot;: &quot;...&quot;,                 // price denominated in USD      &quot;price_BNB&quot;: &quot;...&quot;,             // price denominated in BNB    },    // ...  }}```Example invocation with address:```pythontoken = ps.tokens('0x00000000000...')```Example output with address:```python# output{  &quot;updated_at&quot;: 1234567,              // UNIX timestamp  &quot;data&quot;: {    &quot;name&quot;: &quot;...&quot;,                    // not necessarily included for BEP20 tokens    &quot;symbol&quot;: &quot;...&quot;,                  // not necessarily included for BEP20 tokens    &quot;price&quot;: &quot;...&quot;,                   // price denominated in USD    &quot;price_BNB&quot;: &quot;...&quot;,               // price denominated in BNB  }}```---## `pairs()`Returns data for the top ~1000 PancakeSwap pairs, sorted by reserves.Example invocation:```pythonpairs = ps.pairs()```Example output```python{  &quot;updated_at&quot;: 1234567,              // UNIX timestamp  &quot;data&quot;: {    &quot;0x..._0x...&quot;: {                  // the asset ids of BNB and BEP20 tokens, joined by an underscore      &quot;pair_address&quot;: &quot;0x...&quot;,        // pair address      &quot;base_name&quot;: &quot;...&quot;,             // token0 name      &quot;base_symbol&quot;: &quot;...&quot;,           // token0 symbol      &quot;base_address&quot;: &quot;0x...&quot;,        // token0 address      &quot;quote_name&quot;: &quot;...&quot;,            // token1 name      &quot;quote_symbol&quot;: &quot;...&quot;,          // token1 symbol      &quot;quote_address&quot;: &quot;0x...&quot;,       // token1 address      &quot;price&quot;: &quot;...&quot;,                 // price denominated in token1/token0      &quot;base_volume&quot;: &quot;...&quot;,           // volume denominated in token0      &quot;quote_volume&quot;: &quot;...&quot;,          // volume denominated in token1      &quot;liquidity&quot;: &quot;...&quot;,             // liquidity denominated in USD      &quot;liquidity_BNB&quot;: &quot;...&quot;          // liquidity denominated in BNB    },    // ...  }}```</longdescription>
</pkgmetadata>