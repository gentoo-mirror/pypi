# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="OpenMMLab Model Pretraining Toolbox and Benchmark"

HOMEPAGE="https://github.com/open-mmlab/mmpretrain"
LICENSE="Apache-2.0"
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all mim multimodal optional tests"
DEPENDENCIES="all? ( dev-python/interrogate[${PYTHON_USEDEP}] )
	dev-python/einops[${PYTHON_USEDEP}]
	dev-python/importlib-metadata[${PYTHON_USEDEP}]
	dev-python/mat4py[${PYTHON_USEDEP}]
	dev-python/matplotlib[${PYTHON_USEDEP}]
	dev-python/modelindex[${PYTHON_USEDEP}]
	dev-python/numpy[${PYTHON_USEDEP}]
	dev-python/rich[${PYTHON_USEDEP}]
	all? ( dev-python/albumentations[${PYTHON_USEDEP}] )
	all? ( dev-python/grad-cam[${PYTHON_USEDEP}] )
	all? ( dev-python/requests[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	all? ( dev-python/einops[${PYTHON_USEDEP}] )
	all? ( dev-python/importlib-metadata[${PYTHON_USEDEP}] )
	all? ( dev-python/mat4py[${PYTHON_USEDEP}] )
	all? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	all? ( dev-python/modelindex[${PYTHON_USEDEP}] )
	all? ( dev-python/numpy[${PYTHON_USEDEP}] )
	all? ( dev-python/rich[${PYTHON_USEDEP}] )
	all? ( dev-python/coverage[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	mim? ( dev-python/mmcv[${PYTHON_USEDEP}] )
	mim? ( dev-python/mmengine[${PYTHON_USEDEP}] )
	multimodal? ( dev-python/pycocotools[${PYTHON_USEDEP}] )
	multimodal? ( dev-python/transformers[${PYTHON_USEDEP}] )
	optional? ( dev-python/albumentations[${PYTHON_USEDEP}] )
	optional? ( dev-python/grad-cam[${PYTHON_USEDEP}] )
	optional? ( dev-python/requests[${PYTHON_USEDEP}] )
	optional? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	tests? ( dev-python/coverage[${PYTHON_USEDEP}] )
	tests? ( dev-python/interrogate[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
