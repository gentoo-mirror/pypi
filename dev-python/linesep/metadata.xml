<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: http://www.repostatus.org/badges/latest/active.svg    :target: http://www.repostatus.org/#active    :alt: Project Status: Active â€” The project has reached a stable, usable          state and is being actively developed... image:: https://github.com/jwodder/linesep/workflows/Test/badge.svg?branch=master    :target: https://github.com/jwodder/linesep/actions?workflow=Test    :alt: CI Status.. image:: https://codecov.io/gh/jwodder/linesep/branch/master/graph/badge.svg    :target: https://codecov.io/gh/jwodder/linesep.. image:: https://img.shields.io/pypi/pyversions/linesep.svg    :target: https://pypi.org/project/linesep.. image:: https://img.shields.io/github/license/jwodder/linesep.svg    :target: https://opensource.org/licenses/MIT    :alt: MIT License`GitHub &lt;https://github.com/jwodder/linesep&gt;`_| `PyPI &lt;https://pypi.org/project/linesep&gt;`_| `Documentation &lt;https://linesep.readthedocs.io&gt;`_| `Issues &lt;https://github.com/jwodder/linesep/issues&gt;`_| `Changelog &lt;https://github.com/jwodder/linesep/blob/master/CHANGELOG.md&gt;`_``linesep`` provides basic functions &amp; classes for reading, writing, splitting,&amp; joining text with custom separators that can occur either before, between, orafter the segments they separate.Installation============``linesep`` requires Python 3.7 or higher.  Just use `pip&lt;https://pip.pypa.io&gt;`_ for Python 3 (You have pip, right?) to install::    python3 -m pip install linesepExamples========Reading sections separated by a &quot;``---``&quot; line:.. code:: python    with open('text.txt') as fp:        for entry in linesep.read_separated(fp, '\n---\n'):            ...Parsing output from ``find -print0``:.. code:: python    find = subprocess.Popen(        ['find', '/', '-some', '-complicated', '-condition', '-print0'],        stdout=subprocess.PIPE,    )    for filepath in linesep.read_terminated(find.stdout, '\0'):        ...A poor man's `JSON Text Sequence &lt;https://tools.ietf.org/html/rfc7464&gt;`_ parser:.. code:: python    for entry in linesep.read_preceded(fp, '\x1E'):        try:            obj = json.loads(entry)        except ValueError:            pass        else:            yield objRead from a text file one paragraph at a time:.. code:: python    with open(&quot;my-novel.txt&quot;) as fp:        for paragraph in linesep.read_paragraphs(fp):            ...Split input from an ``anyio.TextReceiveStream`` on newlines:.. code:: python    async with anyio.TextReceiveStream( ... ) as stream:        splitter = linesep.UnicodeNewlineSplitter()        async for line in splitter.aitersplit(stream):            print(line)</longdescription>
</pkgmetadata>