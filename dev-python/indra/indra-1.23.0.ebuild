# automatically generated by g-sorcery
# please do not edit this file

EAPI=8

REALNAME="${PN}"
LITERALNAME="${PN}"
REALVERSION="${PV}"
DIGEST_SOURCES="yes"
PYTHON_COMPAT=( python{3_10,3_11,3_12} )
DISTUTILS_USE_PEP517=standalone

inherit python-r1 gs-pypi

DESCRIPTION="Integrated Network and Dynamical Reasoning Assembler"

HOMEPAGE="http://github.com/sorgerlab/indra"
LICENSE=""
SRC_URI="https://files.pythonhosted.org/packages/source/${REALNAME::1}/${REALNAME}/${REALNAME}-${REALVERSION}.tar.gz"
SOURCEFILE="${REALNAME}-${REALVERSION}.tar.gz"
RESTRICT="test"

SLOT="0"
KEYWORDS="~amd64 ~x86"

IUSE="all api aws bel eidos-offline explanation geneways graph grounding hypothesis isi machine owl plot reach-offline sbml sklearn-belief tests trips-offline"
DEPENDENCIES="dev-python/pysb[${PYTHON_USEDEP}]
	dev-python/objectpath[${PYTHON_USEDEP}]
	>=dev-python/requests-2.11[${PYTHON_USEDEP}]
	dev-python/lxml[${PYTHON_USEDEP}]
	dev-python/ipython[${PYTHON_USEDEP}]
	dev-python/future[${PYTHON_USEDEP}]
	>=dev-python/networkx-3.0[${PYTHON_USEDEP}]
	>=dev-python/pandas-2.0[${PYTHON_USEDEP}]
	dev-python/ndex2[${PYTHON_USEDEP}]
	dev-python/jinja[${PYTHON_USEDEP}]
	dev-python/protmapper[${PYTHON_USEDEP}]
	dev-python/obonet[${PYTHON_USEDEP}]
	dev-python/tqdm[${PYTHON_USEDEP}]
	dev-python/pybiopax[${PYTHON_USEDEP}]
	all? ( <dev-python/scikit-learn-1.5.0[${PYTHON_USEDEP}] )
	all? ( dev-python/boto3[${PYTHON_USEDEP}] )
	all? ( dev-python/adeft[${PYTHON_USEDEP}] )
	all? ( dev-python/tzlocal[${PYTHON_USEDEP}] )
	all? ( dev-python/pronto[${PYTHON_USEDEP}] )
	all? ( dev-python/nltk[${PYTHON_USEDEP}] )
	all? ( dev-python/flask-restx[${PYTHON_USEDEP}] )
	all? ( dev-python/pykqml[${PYTHON_USEDEP}] )
	all? ( dev-python/gunicorn[${PYTHON_USEDEP}] )
	all? ( dev-python/flask-cors[${PYTHON_USEDEP}] )
	all? ( dev-python/pyjnius[${PYTHON_USEDEP}] )
	all? ( dev-python/paths-graph[${PYTHON_USEDEP}] )
	all? ( dev-python/pynose[${PYTHON_USEDEP}] )
	all? ( dev-python/kappy[${PYTHON_USEDEP}] )
	all? ( dev-python/pybel[${PYTHON_USEDEP}] )
	all? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pyyaml-5.1.0[${PYTHON_USEDEP}] )
	all? ( <dev-python/cython-3.0[${PYTHON_USEDEP}] )
	all? ( dev-python/pygraphviz[${PYTHON_USEDEP}] )
	all? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	all? ( dev-python/click[${PYTHON_USEDEP}] )
	all? ( dev-python/python-libsbml[${PYTHON_USEDEP}] )
	all? ( dev-python/stemming[${PYTHON_USEDEP}] )
	all? ( <dev-python/flask-4.0[${PYTHON_USEDEP}] )
	all? ( dev-python/docstring-parser[${PYTHON_USEDEP}] )
	all? ( dev-python/gilda[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	all? ( dev-python/pytz[${PYTHON_USEDEP}] )
	all? ( dev-python/reportlab[${PYTHON_USEDEP}] )
	all? ( dev-python/tweepy[${PYTHON_USEDEP}] )
	api? ( <dev-python/flask-4.0[${PYTHON_USEDEP}] )
	api? ( dev-python/flask-restx[${PYTHON_USEDEP}] )
	api? ( dev-python/flask-cors[${PYTHON_USEDEP}] )
	api? ( dev-python/docstring-parser[${PYTHON_USEDEP}] )
	api? ( dev-python/gunicorn[${PYTHON_USEDEP}] )
	aws? ( dev-python/boto3[${PYTHON_USEDEP}] )
	aws? ( dev-python/reportlab[${PYTHON_USEDEP}] )
	bel? ( dev-python/pybel[${PYTHON_USEDEP}] )
	eidos-offline? ( <dev-python/cython-3.0[${PYTHON_USEDEP}] )
	eidos-offline? ( dev-python/pyjnius[${PYTHON_USEDEP}] )
	explanation? ( dev-python/kappy[${PYTHON_USEDEP}] )
	explanation? ( dev-python/paths-graph[${PYTHON_USEDEP}] )
	geneways? ( dev-python/stemming[${PYTHON_USEDEP}] )
	geneways? ( dev-python/nltk[${PYTHON_USEDEP}] )
	graph? ( dev-python/pygraphviz[${PYTHON_USEDEP}] )
	grounding? ( dev-python/adeft[${PYTHON_USEDEP}] )
	grounding? ( dev-python/gilda[${PYTHON_USEDEP}] )
	hypothesis? ( dev-python/gilda[${PYTHON_USEDEP}] )
	isi? ( dev-python/nltk[${PYTHON_USEDEP}] )
	isi? ( dev-python/unidecode[${PYTHON_USEDEP}] )
	machine? ( dev-python/pytz[${PYTHON_USEDEP}] )
	machine? ( dev-python/tzlocal[${PYTHON_USEDEP}] )
	machine? ( dev-python/tweepy[${PYTHON_USEDEP}] )
	machine? ( >=dev-python/pyyaml-5.1.0[${PYTHON_USEDEP}] )
	machine? ( dev-python/click[${PYTHON_USEDEP}] )
	owl? ( dev-python/pronto[${PYTHON_USEDEP}] )
	plot? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	reach-offline? ( <dev-python/cython-3.0[${PYTHON_USEDEP}] )
	reach-offline? ( dev-python/pyjnius[${PYTHON_USEDEP}] )
	sbml? ( dev-python/python-libsbml[${PYTHON_USEDEP}] )
	sklearn-belief? ( <dev-python/scikit-learn-1.5.0[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest[${PYTHON_USEDEP}] )
	tests? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	tests? ( dev-python/pynose[${PYTHON_USEDEP}] )
	trips-offline? ( dev-python/pykqml[${PYTHON_USEDEP}] )"
BDEPEND="${DEPENDENCIES}"
RDEPEND="${DEPENDENCIES}"
