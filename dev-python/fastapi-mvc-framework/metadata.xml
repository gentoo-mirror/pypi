<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># fastapi_frameworkA mvc framework used FastApiSimple and elegant use of FastApi in MVC mode## usage:install:```bashpip install fastapi-mvc-framework```controller:```pythonfrom fastapi_mvc_framework import api_router,api,Request,Response,BaseController,application,WebSocket,WebSocketDisconnectfrom typing import Dict from app.services import UserServiceapplication._public_auth_url = '/user/login'application._user_auth_url = '/user/login'@api_router(auth='public')class TestController(BaseController):     @api.get(&quot;/user/login&quot;)    def login(self):        &quot;&quot;&quot;:title Login&quot;&quot;&quot;          redirect = self.params['redirect'] if 'redirect' in self.params else '/'         return self.view()         @api.get(&quot;/user/logout&quot;)    def logout(self):        return self._user_logout()        @api.post(&quot;/test/verity_user&quot;)    async def verity_user(self):         form = self.params        username = form['username']        password = form['password']        redirect = form['redirect']        if username and password:            #do veritied            if username in ['bruce','alice'] and password:                return self._verity_successed(username,redirect)            else:                return self._verity_error()         return self._verity_error()        @api.get(&quot;/&quot; )    def home(self,request:Request):         '''        :title Home        '''        c = self.session.get('home',1)        c = c+1          self.cookies[&quot;a&quot;] = c        if c&gt;10:            del self.cookies[&quot;a&quot;]            c = 0        self.session['home'] = c        text = &quot;Hello World! I'm in FastapiMvcFramework&quot;        routers_map = application.routers_map        routers = application.routes         return self.view()        @api.get(&quot;/xml&quot;,auth='user')    def get_legacy_data(self):        &quot;&quot;&quot;:title XML(Protected)&quot;&quot;&quot;        data = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot;?&gt;        &lt;shampoo&gt;        &lt;Header&gt;            Apply shampoo here.        &lt;/Header&gt;        &lt;Body&gt;            You'll have to use soap here.        &lt;/Body&gt;        &lt;/shampoo&gt;        &quot;&quot;&quot;        return self.view(content=data,media_type=&quot;application/xml&quot;)              @api.get(&quot;/chatgpt&quot;)    def chatgpt(self):        &quot;&quot;&quot;        :title Chat        &quot;&quot;&quot;        return self.view()```home.html:```html&lt;body&gt;    &lt;header&gt;        &lt;h1&gt;My Website&lt;/h1&gt;    &lt;/header&gt;    &lt;nav&gt;        {% for item in routers_map %} {% if 'GET' in routers_map[item]['methods'] %}        &lt;a href=&quot;{{routers_map[item]['path']}}&quot;&gt;{{routers_map[item]['doc'] and routers_map[item]['doc']['title'] or item}}&lt;/a&gt; {% endif %} {% endfor %}        &lt;a href=&quot;#&quot;&gt;About&lt;/a&gt;        &lt;a href=&quot;#&quot;&gt;Contact&lt;/a&gt; {% if request.session['user'] %}        &lt;a href=&quot;/user/logout&quot;&gt;&lt;b&gt;{{request.session['user']['username']}}&lt;/b&gt; Logout&lt;/a&gt; {% endif %}    &lt;/nav&gt;    &lt;section&gt;        &lt;h2&gt;Welcome to my website&lt;/h2&gt;        &lt;p&gt;This is an example of a responsive design that works well on both desktop and mobile devices.&lt;/p&gt;        &lt;p&gt;here is the `text` variable in class method:{{text}}&lt;/p&gt;        &lt;p style=&quot;color:red&quot;&gt;&lt;b&gt;{{flash}}&lt;/b&gt;&lt;/p&gt;    &lt;/section&gt;    &lt;footer&gt;        &lt;p&gt;&amp;copy; 2023 My Website&lt;/p&gt;    &lt;/footer&gt;&lt;/body&gt;```your project directory structrue like this:```+---app|   |   __init__.py|   ||   +---controllers|   |   |   test_controller.py|   |   |   __init__.py|   |   ||   +---models|   |   |   user_model.py|   |   |   __init__.py|   |   ||   +---services|   |   |   user_service.py|   |   |   __init__.py|   |   ||   +---views|   |   +---abc|   |   |   \---2.0|   |   |           css.css|   |   |           home.html|   |   ||   |   +---test|   |   |       chatgpt.css|   |   |       chatgpt.html|   |   |       chatgpt.js|   |   |       home.html|   |   |       home.js|   |   |       login.html|   |   ||   |   \---ws|   |           ws_home.html|   |+---app1|   |   __init__.py|   ||   +---controllers|   |   |   test1_controller.py|   |   |   __init__.py|   |   ||   +---views|   |   +---test1|   |   |   \---v1.0|   |   |           home.css|   |   |           home.html|   |   |           home1.css|   |   ||   |   \---test2|+---configs|       alembic.ini|       cache.yaml|       casbin-adapter.csv|       casbin-model.conf|       database.yaml|       general.yaml|       session.yaml|+---data|   +---alembic|   |   |   env.py|   |   |   README|   |   |   script.py.mako|   |   ||   |   +---versions|   |   |   |   0d0205db5b39_create_tables.py|   |   |   |   0e4e15e67367_autogenerate.py|   |   |   |   108dad121227__new_upgrade_operations_detected__add_.py|   |   |   |   ac7ce07126b3_autogenerate.py|   |   |   |   e51711eb3d84_autogenerate.py|   |   |   ||   \---db|           test.db```</longdescription>
</pkgmetadata>