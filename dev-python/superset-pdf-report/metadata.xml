<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># superset-pdf-reportsuperset-pdf-report is a Python tool for downloading charts from the Apache Superset API or URLs to generate a PDF report via LaTeX and send it via e-mail.There are two possiblilities for using this tool:- run it by Celery via supersetconfig.py- run it via class PDF_report## InstallationUse the package manager [pip](https://pip.pypa.io/en/stable/) to install superset-pdf-report.```bashpip install superset-pdf-report```### Configuration of superset-pdf-reportOpen config.py in supersetpdfreport and enter the needed information or use the suggested environment variables.### Create your jobCreate a `&lt;your_job&gt;.json` in supersetpdfreport/jobs Please refer to the example_job.json## Configuration and start via CeleryInsert in superset_config.pyCelery config:```bashCELERY_IMPORTS += (&quot;supersetpdfreport.task&quot;,)CELERYBEAT_SCHEDULE.update(    {        &quot;reports.pdf-scheduler&quot;: {            &quot;task&quot;: &quot;reports.pdf-scheduler&quot;,            &quot;schedule&quot;: crontab(minute=&quot;*&quot;),        }    })```You have to restart your Apache Superset application for this changes.## Start via PDF_report()Create a start.py```bashfrom supersetpdfreport.pdf_report import PDF_reportjob_name = &quot;&lt;your job&gt;.json&quot;pdf_report_task = PDF_report()pdf_report_task.execute(job_name)```Start the Python script```bashpython3 start.py```## Usage1. Download the charts you need for the report2. Download the images you need for the report3. Create your LaTeX file in /latex and use the images in latex/images4. Activate the &quot;generate_pdf&quot; in job5. Send it via e-mail or send to nextcloud</longdescription>
</pkgmetadata>