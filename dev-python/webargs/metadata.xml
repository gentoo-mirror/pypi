<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>*******webargs*******.. image:: https://badgen.net/pypi/v/webargs    :target: https://pypi.org/project/webargs/    :alt: PyPI version.. image:: https://dev.azure.com/sloria/sloria/_apis/build/status/marshmallow-code.webargs?branchName=dev    :target: https://dev.azure.com/sloria/sloria/_build/latest?definitionId=6&amp;branchName=dev    :alt: Build status.. image:: https://readthedocs.org/projects/webargs/badge/   :target: https://webargs.readthedocs.io/   :alt: Documentation.. image:: https://badgen.net/badge/marshmallow/3    :target: https://marshmallow.readthedocs.io/en/latest/upgrading.html    :alt: marshmallow 3 compatible.. image:: https://badgen.net/badge/code%20style/black/000    :target: https://github.com/ambv/black    :alt: code style: blackHomepage: https://webargs.readthedocs.io/webargs is a Python library for parsing and validating HTTP request objects, with built-in support for popular web frameworks, including Flask, Django, Bottle, Tornado, Pyramid, Falcon, and aiohttp... code-block:: python    from flask import Flask    from webargs import fields    from webargs.flaskparser import use_args    app = Flask(__name__)    @app.route(&quot;/&quot;)    @use_args({&quot;name&quot;: fields.Str(required=True)}, location=&quot;query&quot;)    def index(args):        return &quot;Hello &quot; + args[&quot;name&quot;]    if __name__ == &quot;__main__&quot;:        app.run()    # curl http://localhost:5000/\?name\='World'    # Hello WorldInstall=======::    pip install -U webargswebargs supports Python &gt;= 3.7.Documentation=============Full documentation is available at https://webargs.readthedocs.io/.Support webargs===============webargs is maintained by a group of `volunteers &lt;https://webargs.readthedocs.io/en/latest/authors.html&gt;`_.If you'd like to support the future of the project, please considercontributing to our Open Collective:.. image:: https://opencollective.com/marshmallow/donate/button.png    :target: https://opencollective.com/marshmallow    :width: 200    :alt: Donate to our collectiveProfessional Support====================Professionally-supported webargs is available through the`Tidelift Subscription &lt;https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&amp;utm_medium=referral&amp;utm_campaign=readme&gt;`_.Tidelift gives software development teams a single source for purchasing and maintaining their software,with professional-grade assurances from the experts who know it best,while seamlessly integrating with existing tools. [`Get professional support`_].. _`Get professional support`: https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&amp;utm_medium=referral&amp;utm_campaign=readme.. image:: https://user-images.githubusercontent.com/2379650/45126032-50b69880-b13f-11e8-9c2c-abd16c433495.png    :target: https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&amp;utm_medium=referral&amp;utm_campaign=readme    :alt: Get supported marshmallow with TideliftSecurity Contact Information============================To report a security vulnerability, please use the`Tidelift security contact &lt;https://tidelift.com/security&gt;`_.Tidelift will coordinate the fix and disclosure.Project Links=============- Docs: https://webargs.readthedocs.io/- Changelog: https://webargs.readthedocs.io/en/latest/changelog.html- Contributing Guidelines: https://webargs.readthedocs.io/en/latest/contributing.html- PyPI: https://pypi.python.org/pypi/webargs- Issues: https://github.com/marshmallow-code/webargs/issues- Ecosystem / related packages: https://github.com/marshmallow-code/webargs/wiki/EcosystemLicense=======MIT licensed. See the `LICENSE &lt;https://github.com/marshmallow-code/webargs/blob/dev/LICENSE&gt;`_ file for more details.</longdescription>
</pkgmetadata>