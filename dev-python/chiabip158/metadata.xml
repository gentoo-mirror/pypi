<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Chia BIP158![Build](https://github.com/Chia-Network/chiabip158/workflows/Build/badge.svg)![PyPI](https://img.shields.io/pypi/v/chiabip158?logo=pypi)![PyPI - Format](https://img.shields.io/pypi/format/chiabip158?logo=pypi)![GitHub](https://img.shields.io/github/license/Chia-Network/chiabip158?logo=Github)[![Total alerts](https://img.shields.io/lgtm/alerts/g/Chia-Network/chiabip158.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/Chia-Network/chiabip158/alerts/)[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/Chia-Network/chiabip158.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/Chia-Network/chiabip158/context:python)[![Language grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/Chia-Network/chiabip158.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/Chia-Network/chiabip158/context:cpp)This implements the compact block filter construction in BIP 158. The code isnot used anywhere in the Bitcoin Core code base yet. The next step towardsBIP 157 support would be to create an indexing module similar to TxIndex thatconstructs the basic and extended filters for each validated block.## Install```bashpython3 -m venv venv. venv/bin/activatepip3 install .```## Run python tests```bashpython3 tests/simple_test.py```## Installation steps on a fresh OSX imageInstall brew:```bashruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;brew install python3  brew install boost  ```At this point the only error is can’t find boost_thread libThe issue is the homebrew boost ships libboost_thread-mt libs but doesn’tinclude plain libboost_thread, so clang can’t find it. Interestingly, homebrewboost does have both plain and -mt files for the libboost_system libraries.```bash$ find /usr/local/lib/ | grep boost_thread  libboost_thread-mt.a  libboost_thread-mt.dylib  ```Solution, with no guarantees that this is &quot;the Right Way to do things&quot;, butappears to work fine for the configure stage:```bashcd /usr/local/lib  ln -s libboost_thread-mt.a libboost_thread.a  ln -s libboost_thread-mt.dylib libboost_thread.dylib  ```## ci BuildingThe primary build process for this repository is to use GitHub Actions tobuild binary wheels for MacOS, Linux (x64 and aarch64), and Windows and publishthem with a source wheel on PyPi. See `.github/workflows/build.yml`. CMake uses[FetchContent](https://cmake.org/cmake/help/latest/module/FetchContent.html)to download [pybind11](https://github.com/pybind/pybind11). Building is thenmanaged by [cibuildwheel](https://github.com/joerick/cibuildwheel). Furtherinstallation is then available via `pip install chiabip158` e.g.## Contributing and workflowContributions are welcome and more details are available in chia-blockchain's[CONTRIBUTING.md](https://github.com/Chia-Network/chia-blockchain/blob/master/CONTRIBUTING.md).The master branch is usually the currently released latest version on PyPI.Note that at times chiabip158 will be ahead of the release version thatchia-blockchain requires in it's master/release version in preparation for anew chia-blockchain release. Please branch or fork master and then create apull request to the master branch. Linear merging is enforced on master andmerging requires a completed review. PRs will kick off a GitHub actions cibuild and analysis of chiabip158 at[lgtm.com](https://lgtm.com/projects/g/Chia-Network/chiabip158/?mode=list).Please make sure your build is passing and that it does not increase alertsat lgtm.</longdescription>
</pkgmetadata>