<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Django CKEditor 5 ==================   CKEditor 5 for Django &gt;= 2.0Quick start----------- .. code-block:: bash         pip install django-ckeditor-51. Add &quot;django_ckeditor_5&quot; to your INSTALLED_APPS in your `project/settings.py` like this: .. code-block:: python        INSTALLED_APPS = [            ...            'django_ckeditor_5',        ]2. Also, in your `project/settings.py` add:  .. code-block:: python      STATIC_URL = '/static/'      MEDIA_URL = '/media/'      MEDIA_ROOT = os.path.join(BASE_DIR, 'media')      customColorPalette = [            {                'color': 'hsl(4, 90%, 58%)',                'label': 'Red'            },            {                'color': 'hsl(340, 82%, 52%)',                'label': 'Pink'            },            {                'color': 'hsl(291, 64%, 42%)',                'label': 'Purple'            },            {                'color': 'hsl(262, 52%, 47%)',                'label': 'Deep Purple'            },            {                'color': 'hsl(231, 48%, 48%)',                'label': 'Indigo'            },            {                'color': 'hsl(207, 90%, 54%)',                'label': 'Blue'            },        ]      CKEDITOR_5_CUSTOM_CSS = 'path_to.css' # optional      CKEDITOR_5_FILE_STORAGE = &quot;path_to_storage.CustomStorage&quot; # optional      CKEDITOR_5_CONFIGS = {         'default': {            'toolbar': ['heading', '|', 'bold', 'italic', 'link',                        'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],            },        'extends': {            'blockToolbar': [                'paragraph', 'heading1', 'heading2', 'heading3',                '|',                'bulletedList', 'numberedList',                '|',                'blockQuote',            ],            'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',            'code','subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',                        'bulletedList', 'numberedList', 'todoList', '|',  'blockQuote', 'imageUpload', '|',                        'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',                        'insertTable',],            'image': {                'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',                            'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side',  '|'],                'styles': [                    'full',                    'side',                    'alignLeft',                    'alignRight',                    'alignCenter',                ]                },            'table': {                'contentToolbar': [ 'tableColumn', 'tableRow', 'mergeTableCells',                'tableProperties', 'tableCellProperties' ],                'tableProperties': {                    'borderColors': customColorPalette,                    'backgroundColors': customColorPalette                },                'tableCellProperties': {                    'borderColors': customColorPalette,                    'backgroundColors': customColorPalette                }            },            'heading' : {                'options': [                    { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },                    { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },                    { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },                    { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }                ]            }        },        'list': {            'properties': {                'styles': 'true',                'startIndex': 'true',                'reversed': 'true',            }        }    }3. Include the app URLconf in your `project/urls.py` like this:   .. code-block:: python       from django.conf import settings       from django.conf.urls.static import static              # [ ... ]              urlpatterns += [            path(&quot;ckeditor5/&quot;, include('django_ckeditor_5.urls'), name=&quot;ck_editor_5_upload_file&quot;),       ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)        4. Add to your `project/models.py`:  .. code-block:: python        from django.db import models        from django_ckeditor_5.fields import CKEditor5Field                        class Article(models.Model):            title=models.CharField('Title', max_length=200)            text=CKEditor5Field('Text', config_name='extends')            Includes the following ckeditor5 plugins:            Essentials,            UploadAdapter,            CodeBlock,            Autoformat,            Bold,            Italic,            Underline,            Strikethrough,            Code,            Subscript,            Superscript,            BlockQuote,            Heading,            Image,            ImageCaption,            ImageStyle,            ImageToolbar,            ImageResize,            Link,            List,            Paragraph,            Alignment,            Font,            PasteFromOffice,            SimpleUploadAdapter,            MediaEmbed,            RemoveFormat,            Table,            TableToolbar,            TableCaption,            TableProperties,            TableCellProperties,            Indent,            IndentBlock,            Highlight,            TodoList,            ListProperties,            SourceEditing,            GeneralHtmlSupport,            ImageInsert,            WordCount,            MentionExamples-----------Example of using a widget in a form:^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  .. code-block:: python      from django import forms      from django_ckeditor_5.widgets import CKEditor5Widget      from .models import Comment      class CommentForm(forms.ModelForm):            &quot;&quot;&quot;Form for comments to the article.&quot;&quot;&quot;            def __init__(self, *args, **kwargs):                super().__init__(*args, **kwargs)                self.fields[&quot;text&quot;].required = False            class Meta:                model = Comment                fields = (&quot;author&quot;, &quot;text&quot;)                widgets = {                    &quot;text&quot;: CKEditor5Widget(                        attrs={&quot;class&quot;: &quot;django_ckeditor_5&quot;}, config_name=&quot;comment&quot;                    )                }Custom storage example:^^^^^^^^^^^^^^^^^^^^^^^  .. code-block:: python      import os      from urllib.parse import urljoin      from django.conf import settings      from django.core.files.storage import FileSystemStorage      class CustomStorage(FileSystemStorage):          &quot;&quot;&quot;Custom storage for django_ckeditor_5 images.&quot;&quot;&quot;          location = os.path.join(settings.MEDIA_ROOT, &quot;django_ckeditor_5&quot;)          base_url = urljoin(settings.MEDIA_URL, &quot;django_ckeditor_5/&quot;)Installing from GitHub:^^^^^^^^^^^^^^^^^^^^^^^  .. code-block:: bash    cd your_root_project    git clone https://github.com/hvlads/django-ckeditor-5.git    cd django-ckeditor-5    yarn install    yarn run prod    cd your_root_project    python manage.py collectstatic    Example Sharing content styles between front-end and back-end:^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^To apply ckeditor5 styling outside of the editor, download content.styles.css from the official ckeditor5 docs and include it as a styleshet within your HTML template. You will need to add the ck-content class to the container of your content for the styles to be applied.`&lt;https://ckeditor.com/docs/ckeditor5/latest/installation/advanced/content-styles.html#sharing-content-styles-between-frontend-and-backend&gt;`_.. code-block:: html   &lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/assets/content-styles.css&quot; type=&quot;text/css&quot;&gt;   ...   &lt;div class=&quot;ck-content&quot;&gt;   &lt;p&gt;ckeditor content&lt;/p&gt;   &lt;/div&gt;</longdescription>
</pkgmetadata>