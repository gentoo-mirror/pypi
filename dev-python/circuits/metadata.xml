<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. _Python Programming Language: http://www.python.org/.. _#circuits IRC Channel: http://webchat.freenode.net/?randomnick=1&amp;channels=circuits&amp;uio=d4.. _FreeNode IRC Network: http://freenode.net.. _Python Standard Library: http://docs.python.org/library/.. _MIT License: http://www.opensource.org/licenses/mit-license.php.. _Create an Issue: https://github.com/circuits/circuits/issues/new.. _Mailing List: http://groups.google.com/group/circuits-users.. _Website: http://circuitsframework.com/.. _PyPi: http://pypi.python.org/pypi/circuits.. _Documentation: http://circuits.readthedocs.org/en/latest/.. _Downloads: https://github.com/circuits/circuits/releases.. _Ask a Question: http://stackoverflow.com/questions/ask.. _Stackoverflow: http://stackoverflow.com/.. _Google+ Group: https://plus.google.com/communities/107775112577294599973.. image:: https://github.com/circuits/circuits/actions/workflows/python-app.yml/badge.svg   :target: https://github.com/circuits/circuits/actions/workflows/python-app.yml   :alt: Build Status.. image:: https://codecov.io/gh/circuits/circuits/branch/master/graph/badge.svg  :target: https://codecov.io/gh/circuits/circuits  :alt: Coverage.. image:: https://badge.waffle.io/circuits/circuits.png?label=ready&amp;title=Ready   :target: https://waffle.io/circuits/circuits   :alt: Stories Readycircuits is a **Lightweight** **Event** driven and **Asynchronous****Application Framework** for the `Python Programming Language`_with a strong **Component** Architecture.circuits also includes a lightweight, high performance and scalableHTTP/WSGI compliant web server as well as various I/O and Networkingcomponents.- `Website`_- `Downloads`_- `Documentation`_Got questions?- `Ask a Question`_ (Tag it: ``circuits-framework``)Examples--------Hello....... code:: python    #!/usr/bin/env python    &quot;&quot;&quot;circuits Hello World&quot;&quot;&quot;    from circuits import Component, Event    class hello(Event):        &quot;&quot;&quot;hello Event&quot;&quot;&quot;    class App(Component):        def hello(self):            &quot;&quot;&quot;Hello Event Handler&quot;&quot;&quot;            print(&quot;Hello World!&quot;)        def started(self, component):            &quot;&quot;&quot;Started Event Handler            This is fired internally when your application starts up and can be used to            trigger events that only occur once during startup.            &quot;&quot;&quot;            self.fire(hello())  # Fire hello Event            raise SystemExit(0)  # Terminate the Application    App().run()Echo Server............. code:: python    #!/usr/bin/env python    &quot;&quot;&quot;Simple TCP Echo Server    This example shows how you can create a simple TCP Server (an Echo Service)    utilizing the builtin Socket Components that the circuits library ships with.    &quot;&quot;&quot;    from circuits import handler, Debugger    from circuits.net.sockets import TCPServer    class EchoServer(TCPServer):        @handler(&quot;read&quot;)        def on_read(self, sock, data):            &quot;&quot;&quot;Read Event Handler            This is fired by the underlying Socket Component when there has been            new data read from the connected client.            ..note :: By simply returning, client/server socket components listen                      to ValueChagned events (feedback) to determine if a handler                      returned some data and fires a subsequent Write event with                      the value returned.            &quot;&quot;&quot;            return data    # Start and &quot;run&quot; the system.    # Bind to port 0.0.0.0:9000    app = EchoServer(9000)    Debugger().register(app)    app.run()Hello Web........... code:: python    #!/usr/bin/env python    from circuits.web import Server, Controller    class Root(Controller):        def index(self):            &quot;&quot;&quot;Index Request Handler            Controller(s) expose implicitly methods as request handlers.            Request Handlers can still be customized by using the ``@expose``            decorator. For example exposing as a different path.            &quot;&quot;&quot;            return &quot;Hello World!&quot;    app = Server((&quot;0.0.0.0&quot;, 9000))    Root().register(app)    app.run()More `examples &lt;https://github.com/circuits/circuits/tree/master/examples&gt;`_...Features--------- event driven- concurrency support- component architecture- asynchronous I/O components- no required external dependencies- full featured web framework (circuits.web)- coroutine based synchronization primitivesRequirements------------- circuits has no dependencies beyond the `Python Standard Library`_.Supported Platforms-------------------- Linux, FreeBSD, Mac OS X, Windows- Python 2.7, 3.4, 3.5, 3.6- pypy (the newer the better)Installation------------The simplest and recommended way to install circuits is with pip.You may install the latest stable release from PyPI with pip::    $ pip install circuitsIf you do not have pip, you may use easy_install::    $ easy_install circuitsAlternatively, you may download the source package from the`PyPi`_ or the `Downloads`_ extract it and install using::    $ python setup.py install.. note::    You can install the `development version    &lt;https://github.com/circuits/circuits/archive/master.zip#egg=circuits-dev&gt;`_    via ``pip install circuits==dev``.License-------circuits is licensed under the `MIT License`_.Feedback--------We welcome any questions or feedback about bugs and suggestions on how toimprove circuits.Let us know what you think about circuits. `@pythoncircuits &lt;http://twitter.com/pythoncircuits&gt;`_.Do you have suggestions for improvement? Then please `Create an Issue`_with details of what you would like to see. I'll take a look at it andwork with you to either incorporate the idea or find a better solution.Community---------There are also several places you can reach out to the circuits community:- `Mailing List`_- `Google+ Group`_- `#circuits IRC Channel`_ on the `FreeNode IRC Network`_- `Ask a Question`_ on `Stackoverflow`_ (Tag it: ``circuits-framework``)----Disclaimer----------Whilst I (James Mills) continue to contribute and maintain the circuits projectI do not represent the interests or business of my employer Facebook Inc. Thecontributions I make are of my own free time and have no bearing or relevanceto Facebook Inc.</longdescription>
</pkgmetadata>