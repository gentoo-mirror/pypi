<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Gene Normalizer![PyPI - Python Version](https://img.shields.io/pypi/pyversions/gene-normalizer?color=gr) [![tests](https://github.com/cancervariants/gene-normalization/actions/workflows/github-actions.yml/badge.svg)](https://github.com/cancervariants/gene-normalization/actions/workflows/github-actions.yml) [![DOI](https://zenodo.org/badge/309797998.svg)](https://zenodo.org/badge/latestdoi/309797998)Services and guidelines for normalizing gene terms## Basic usageCreate a database instance and pass it to the `QueryHandler` constructor:```&gt;&gt;&gt; from gene.query import QueryHandler&gt;&gt;&gt; from gene.database import create_db&gt;&gt;&gt; q = QueryHandler(create_db())```Call the `normalize()` method with a gene term. If available, a rich description of the normalized concept is returned.```&gt;&gt;&gt; result = q.normalize(&quot;BRAF&quot;)&gt;&gt;&gt; result.gene_descriptor.gene&quot;hgnc:1097&quot;&gt;&gt;&gt; result.gene_descriptor.alternate_labels['NS7', 'RAFB1', 'B-raf', 'BRAF-1', 'BRAF1', 'B-RAF1']```See the [documentation](https://gene-normalizer.readthedocs.io/en/latest/) for more information, or check out the [public REST instance](https://normalize.cancervariants.org/gene) for a live demonstration.## InstallationThe Normalizer is available via PyPI:```commandlinepip install gene-normalizer[etl,pg]```The `[etl,pg]` argument tells pip to install packages to fulfill the dependencies of the `gene.etl` package and the PostgreSQL data storage implementation.### External requirementsGene Normalization relies on [SeqRepo](https://github.com/biocommons/biocommons.seqrepo) data, which you must download yourself.From the _root_ directory:```pip install seqreposudo mkdir /usr/local/share/seqreposudo chown $USER /usr/local/share/seqreposeqrepo pull -i 2021-01-29  # Replace with latest version using `seqrepo list-remote-instances` if outdated```If you get an error similar to the one below:```PermissionError: [Error 13] Permission denied: '/usr/local/share/seqrepo/2021-01-29._fkuefgd' -&gt; '/usr/local/share/seqrepo/2021-01-29'```You will want to do the following:\(*Might not be ._fkuefgd, so replace with your error message path*)```consolesudo mv /usr/local/share/seqrepo/2021-01-29._fkuefgd /usr/local/share/seqrepo/2021-01-29```Use the `SEQREPO_ROOT_DIR` environment variable to set the path of an already existing SeqRepo directory. The default is `/usr/local/share/seqrepo/latest`.### Database InitializationThe Normalizer supports two data storage options:* [DynamoDB](https://aws.amazon.com/dynamodb), a NoSQL service provided by AWS. This is our preferred storage solution. In addition to cloud deployment, Amazon also provides a tool for local service, which can be installed [here](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html). Once downloaded, you can start service by running `java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb` in a terminal (add a `-port &lt;VALUE&gt;` option to use a different port)* [PostgreSQL](https://www.postgresql.org/), a well-known relational database technology. Once starting the Postgres server process, [ensure that a database is created](https://www.postgresql.org/docs/current/sql-createdatabase.html) (we typically name ours `gene_normalizer`).By default, the Gene Normalizer expects to find a DynamoDB instance listening at `http://localhost:8000`. Alternative locations can be specified in two ways:The first way is to set the `--db_url` option to the URL endpoint.```commandlinegene_update --update_all --db_url=&quot;http://localhost:8001&quot;```The second way is to set the `GENE_NORM_DB_URL` environment variable to the URL endpoint.```commandlineexport GENE_NORM_DB_URL=&quot;http://localhost:8001&quot;```To use a PostgreSQL instance instead of DynamoDB, provide a PostgreSQL connection URL instead, e.g.```commandlineexport GENE_NORM_DB_URL=&quot;postgresql://postgres@localhost:5432/gene_normalizer&quot;```### Adding and refreshing dataUse the `gene_update` command in a shell to update the database.#### Update source(s)The normalizer currently pulls data from [HGNC](https://www.genenames.org/), [Ensembl](https://useast.ensembl.org/index.html), and [NCBI](https://www.ncbi.nlm.nih.gov/gene/).To update one source, simply set `--sources` to the source you wish to update. The normalizer will check to see if local source data is up-to-date, acquire the most recent data if not, and use it to populate the database.For example, run the following to acquire the latest HGNC data if necessary, and update the HGNC gene records in the normalizer database:```commandlinegene_update --sources=&quot;hgnc&quot;```To update multiple sources, you can use the `--sources` option with the source names separated by spaces.#### Update all sourcesTo update all sources, use the `--update_all` flag:```commandlinegene_update --update_all```### Starting the gene normalization serviceOnce the Gene Normalizer database has been loaded, from the project root, run the following:```commandlineuvicorn gene.main:app --reload```Next, view the OpenAPI docs on your local machine:http://127.0.0.1:8000/gene## Developer instructionsThe following sections include instructions specifically for developers.### InstallationFor a development install, we recommend using Pipenv. See the[pipenv docs](https://pipenv-fork.readthedocs.io/en/latest/#install-pipenv-today)for direction on installing pipenv in your compute environment.Once installed, clone the repo and initialize the environment:```commandlinegit clone https://github.com/cancervariants/gene-normalizationcd gene-normalizationpipenv shellpipenv updatepipenv install --dev```Alternatively, install the `pg`, `etl`, `dev`, and `test` dependency groups in a virtual environment:```commandlinegit clone https://github.com/cancervariants/gene-normalizationcd gene-normalizationpython3 -m virtualenv venvsource venv/bin/activatepip install -e &quot;.[pg,etl,dev,test]&quot;```### Init coding style testsCode style is managed by [flake8](https://github.com/PyCQA/flake8) and checked prior to commit.We use [pre-commit](https://pre-commit.com/#usage) to run conformance tests.This ensures:* Check code style* Check for added large files* Detect AWS Credentials* Detect Private KeyBefore first commit run:```commandlinepre-commit install```### Running unit testsBy default, tests will employ an existing database. For test environments where this is unavailable (e.g. in CI), the `GENE_TEST` environment variable can be set to initialize a local DynamoDB instance with miniature versions of input data files before tests are executed.```commandlineexport GENE_TEST=true```Running unit tests is as easy as pytest.```commandlinepipenv run pytest```</longdescription>
</pkgmetadata>