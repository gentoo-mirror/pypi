<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>.. image:: https://travis-ci.org/seatgeek/fuzzywuzzy.svg?branch=master    :target: https://travis-ci.org/seatgeek/fuzzywuzzyFuzzyWuzzy==========Fuzzy string matching like a boss. It uses `Levenshtein Distance &lt;https://en.wikipedia.org/wiki/Levenshtein_distance&gt;`_ to calculate the differences between sequences in a simple-to-use package.Requirements============-  Python 2.7 or higher-  difflib-  `python-Levenshtein &lt;https://github.com/ztane/python-Levenshtein/&gt;`_ (optional, provides a 4-10x speedup in String   Matching, though may result in `differing results for certain cases &lt;https://github.com/seatgeek/fuzzywuzzy/issues/128&gt;`_)For testing~~~~~~~~~~~-  pycodestyle-  hypothesis-  pytestInstallation============Using PIP via PyPI.. code:: bash    pip install fuzzywuzzyor the following to install `python-Levenshtein` too.. code:: bash    pip install fuzzywuzzy[speedup]Using PIP via Github.. code:: bash    pip install git+git://github.com/seatgeek/fuzzywuzzy.git@0.18.0#egg=fuzzywuzzyAdding to your ``requirements.txt`` file (run ``pip install -r requirements.txt`` afterwards).. code:: bash    git+ssh://git@github.com/seatgeek/fuzzywuzzy.git@0.18.0#egg=fuzzywuzzyManually via GIT.. code:: bash    git clone git://github.com/seatgeek/fuzzywuzzy.git fuzzywuzzy    cd fuzzywuzzy    python setup.py installUsage=====.. code:: python    &gt;&gt;&gt; from fuzzywuzzy import fuzz    &gt;&gt;&gt; from fuzzywuzzy import processSimple Ratio~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.ratio(&quot;this is a test&quot;, &quot;this is a test!&quot;)        97Partial Ratio~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.partial_ratio(&quot;this is a test&quot;, &quot;this is a test!&quot;)        100Token Sort Ratio~~~~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.ratio(&quot;fuzzy wuzzy was a bear&quot;, &quot;wuzzy fuzzy was a bear&quot;)        91    &gt;&gt;&gt; fuzz.token_sort_ratio(&quot;fuzzy wuzzy was a bear&quot;, &quot;wuzzy fuzzy was a bear&quot;)        100Token Set Ratio~~~~~~~~~~~~~~~.. code:: python    &gt;&gt;&gt; fuzz.token_sort_ratio(&quot;fuzzy was a bear&quot;, &quot;fuzzy fuzzy was a bear&quot;)        84    &gt;&gt;&gt; fuzz.token_set_ratio(&quot;fuzzy was a bear&quot;, &quot;fuzzy fuzzy was a bear&quot;)        100Process~~~~~~~.. code:: python    &gt;&gt;&gt; choices = [&quot;Atlanta Falcons&quot;, &quot;New York Jets&quot;, &quot;New York Giants&quot;, &quot;Dallas Cowboys&quot;]    &gt;&gt;&gt; process.extract(&quot;new york jets&quot;, choices, limit=2)        [('New York Jets', 100), ('New York Giants', 78)]    &gt;&gt;&gt; process.extractOne(&quot;cowboys&quot;, choices)        (&quot;Dallas Cowboys&quot;, 90)You can also pass additional parameters to ``extractOne`` method to make it use a specific scorer. A typical use case is to match file paths:.. code:: python    &gt;&gt;&gt; process.extractOne(&quot;System of a down - Hypnotize - Heroin&quot;, songs)        ('/music/library/good/System of a Down/2005 - Hypnotize/01 - Attack.mp3', 86)    &gt;&gt;&gt; process.extractOne(&quot;System of a down - Hypnotize - Heroin&quot;, songs, scorer=fuzz.token_sort_ratio)        (&quot;/music/library/good/System of a Down/2005 - Hypnotize/10 - She's Like Heroin.mp3&quot;, 61).. |Build Status| image:: https://api.travis-ci.org/seatgeek/fuzzywuzzy.png?branch=master   :target: https:travis-ci.org/seatgeek/fuzzywuzzyKnown Ports============FuzzyWuzzy is being ported to other languages too! Here are a few ports we know about:-  Java: `xpresso's fuzzywuzzy implementation &lt;https://github.com/WantedTechnologies/xpresso/wiki/Approximate-string-comparison-and-pattern-matching-in-Java&gt;`_-  Java: `fuzzywuzzy (java port) &lt;https://github.com/xdrop/fuzzywuzzy&gt;`_-  Rust: `fuzzyrusty (Rust port) &lt;https://github.com/logannc/fuzzyrusty&gt;`_-  JavaScript: `fuzzball.js (JavaScript port) &lt;https://github.com/nol13/fuzzball.js&gt;`_-  C++: `Tmplt/fuzzywuzzy &lt;https://github.com/Tmplt/fuzzywuzzy&gt;`_-  C#: `fuzzysharp (.Net port) &lt;https://github.com/BoomTownRoi/BoomTown.FuzzySharp&gt;`_-  Go: `go-fuzzywuzz (Go port) &lt;https://github.com/paul-mannino/go-fuzzywuzzy&gt;`_-  Free Pascal: `FuzzyWuzzy.pas (Free Pascal port) &lt;https://github.com/DavidMoraisFerreira/FuzzyWuzzy.pas&gt;`_-  Kotlin multiplatform: `FuzzyWuzzy-Kotlin &lt;https://github.com/willowtreeapps/fuzzywuzzy-kotlin&gt;`_-  R: `fuzzywuzzyR (R port) &lt;https://github.com/mlampros/fuzzywuzzyR&gt;`_</longdescription>
</pkgmetadata>