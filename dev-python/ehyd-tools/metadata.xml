<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>© [Institute of Urban Water Management and Landscape Water Engineering](https://www.tugraz.at), [Graz University of Technology](https://www.tugraz.at/home/) and [Markus Pichler](mailto:markus.pichler@tugraz.at)# eHYD Tools[![license](https://img.shields.io/github/license/markuspic/ehyd_tools.svg?style=flat)](https://github.com/MarkusPic/ehyd_tools/blob/master/LICENSE)[![PyPI](https://img.shields.io/pypi/v/ehyd_tools.svg)](https://pypi.python.org/pypi/ehyd-tools)Reading and analyzing hydro(geo)logic time series from the Austrian government's &quot;ehyd.gv.at&quot; platform.Various tools for exporting and analyzing &gt;10a rain time-series from the [ehyd.gv.at](https://ehyd.gv.at) platform of the Austian government.If you are interested in a statistical heavy rain analysis like on *(Ö)Kostra*, take a look at my other python package [intensity_duration_frequency_analysis](https://github.com/MarkusPic/intensity_duration_frequency_analysis) which is compatible with this package.# InstallThe script is written in Python3. (use a version &gt; 3.5)## WindowsYou have to install python (i.e. the original python from the [website](https://www.python.org/downloads/)).The following commands show the usage for Linux/Unix systems. To use these features on Windows you have to add ```python -m``` before each command and you have to add the path to your python binary to the environment variables [^path1].[^path1]: https://geek-university.com/python/add-python-to-the-windows-path/There is also an option during the installation to add python to the PATH automatically. [^path2][^path2]: https://datatofish.com/add-python-to-windows-path/![python_install](https://datatofish.com/wp-content/uploads/2018/10/0001_add_Python_to_Path.png)## Linux/UnixPython is pre-installed on most operating systems (as you probably knew).## Required python packagesPackages required for this program will be installed with pip during the installation process and can be seen in the 'requirements.txt' file.## Fresh install```bashpip install ehyd-tools```Add the following tags to the command for special options:- ```--user```: To install the package only for the local user account (no admin rights needed)- ```--upgrade```: To update the package# Alternative Repositories- https://github.com/hydrogeology-graz/ehyd- https://github.com/joha1/ehyd_reader# Usage for general time-series data### Examples Jupyter notebooks for Extended python API&gt; links only work on GitHub!- [the design rainfall](example/example_design_rainfall.ipynb)- [model rain creator](example/example_synthetic_rain.ipynb)- [the general data-reader](example/example_python_api_general.ipynb)- [the gis extract](example/example_gis_export.ipynb)# Usage for high-res precipitation time-seriesTo start the script use following commands in the terminal/Prompt```ehyd_tools```## Commandline tool With the `-h` (help) flag you can see the complete functionality of the tool.```bashehyd_tools -h```&gt; ```&gt; usage: __main__.py [-h] [-id ID] [--input INPUT] [--max10a] [--start START]&gt;                    [--end END] [--add_gaps] [--to_csv] [--to_parquet] [--plot]&gt;                    [--statistics] [--meta] [--unix]&gt; &gt; optional arguments:&gt;   -h, --help     show this help message and exit&gt;   -id ID         the id number for the station from the ehyd.gv.at platform&gt;   --input INPUT  path to the rain input file including the filename&gt;   --max10a       consider only 10 years with the most availability (for&gt;                  clipping the data)&gt;   --start START  custom start time (Format=&quot;YYYY-MM-DD&quot;) for clipping the data&gt;   --end END      custom end time (Format=&quot;YYYY-MM-DD&quot;) for clipping the data&gt;   --add_gaps     save a gaps-table as a csv-file&gt;   --to_csv       save the time-series as csv-file (to the current directory if&gt;                  the id is used or in the directory of the input-file)&gt;   --to_parquet   save the time-series as parquet-file (to the current&gt;                  directory if the id is used or in the directory of the input-&gt;                  file) - parquet is a much faster as csv to read and write&gt;   --plot         save a bar-plot with monthly sums and availability as a png-&gt;                  file&gt;   --statistics   save the basic statistics (sum, max &amp; min) as a txt-file&gt;   --meta         save the meta-data presented in ehyd as a txt-file&gt;   --unix         export the csv files with a &quot;,&quot; as separator and a &quot;.&quot; as&gt;                  decimal sign (otherwise &quot;;&quot; as separator and a &quot;,&quot; as decimal&gt;                  sign will be used)&gt; ```## The high-res precipitation stations&gt; links only work on GitHub![List of ehyd-stations with the id-number and the label](ehyd_tools/ehyd_stations.json)## Examples&gt; links only work on GitHub![Example Jupyter notebook for the commandline](example/example_commandline.ipynb)[Example Jupyter notebook for the python api](example/example_python_api.ipynb)[Example python skript](example/example_python_api.py)### Example results files&gt; links only work on GitHub![Data-gaps in the series](example/ehyd_112086_gaps.csv)[Meta-data of the series](example/ehyd_112086_meta.txt)### Example Plot&gt; links only work on GitHub!![Regenhöhenlinien](example/ehyd_112086_plot.png)</longdescription>
</pkgmetadata>