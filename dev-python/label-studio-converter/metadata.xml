<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Label Studio Converter[Website](https://labelstud.io/) • [Docs](https://labelstud.io/guide) • [Twitter](https://twitter.com/heartexlabs) • [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstud.io)## Table of Contents- [Introduction](#introduction)- [Examples](#examples)    - [JSON](#json)    - [CSV](#csv)    - [CoNLL 2003](#conll-2003)    - [COCO](#coco)    - [Pascal VOC XML](#pascal-voc-xml)- [Contributing](#contributing)- [License](#license)## IntroductionLabel Studio Format Converter helps you to encode labels into the format of your favorite machine learning library.## Examples#### JSON**Running from the command line:**```bashpip install -U label-studio-converterpython label-studio-converter export -i exported_tasks.json -c examples/sentiment_analysis/config.xml -o output_dir -f CSV```**Running from python:**```pythonfrom label_studio_converter import Converterc = Converter('examples/sentiment_analysis/config.xml')c.convert_to_json('examples/sentiment_analysis/completions/', 'tmp/output.json')```Getting output file: `tmp/output.json````json[  {    &quot;reviewText&quot;: &quot;Good case, Excellent value.&quot;,    &quot;sentiment&quot;: &quot;Positive&quot;  },  {    &quot;reviewText&quot;: &quot;What a waste of money and time!&quot;,    &quot;sentiment&quot;: &quot;Negative&quot;  },  {    &quot;reviewText&quot;: &quot;The goose neck needs a little coaxing&quot;,    &quot;sentiment&quot;: &quot;Neutral&quot;  }]```Use cases: any tasks#### CSVRunning from the command line:```bashpython label_studio_converter/cli.py --input examples/sentiment_analysis/completions/ --config examples/sentiment_analysis/config.xml --output output_dir --format CSV --csv-separator $'\t'```Running from python:```pythonfrom label_studio_converter import Converterc = Converter('examples/sentiment_analysis/config.xml')c.convert_to_csv('examples/sentiment_analysis/completions/', 'output_dir', sep='\t', header=True)```Getting output file `tmp/output.tsv`:```tsvreviewTextsentimentGood case, Excellent value.PositiveWhat a waste of money and time!NegativeThe goose neck needs a little coaxingNeutral```Use cases: any tasks#### CoNLL 2003Running from the command line:```bashpython label_studio_converter/cli.py --input examples/named_entity/completions/ --config examples/named_entity/config.xml --output tmp/output.conll --format CONLL2003```Running from python:```pythonfrom label_studio_converter import Converterc = Converter('examples/named_entity/config.xml')c.convert_to_conll2003('examples/named_entity/completions/', 'tmp/output.conll')```Getting output file `tmp/output.conll````text-DOCSTART- -X- OShowers -X- _ Ocontinued -X- _ Othroughout -X- _ Othe -X- _ Oweek -X- _ Oin -X- _ Othe -X- _ OBahia -X- _ B-Locationcocoa -X- _ Ozone, -X- _ O...```Use cases: text tagging#### COCORunning from the command line:```bashpython label_studio_converter/cli.py --input examples/image_bbox/completions/ --config examples/image_bbox/config.xml --output tmp/output.json --format COCO --image-dir tmp/images```Running from python:```pythonfrom label_studio_converter import Converterc = Converter('examples/image_bbox/config.xml')c.convert_to_coco('examples/image_bbox/completions/', 'tmp/output.conll', output_image_dir='tmp/images')```Output images could be found in `tmp/images`Getting output file `tmp/output.json````json{  &quot;images&quot;: [    {      &quot;width&quot;: 800,      &quot;height&quot;: 501,      &quot;id&quot;: 0,      &quot;file_name&quot;: &quot;tmp/images/62a623a0d3cef27a51d3689865e7b08a&quot;    }  ],  &quot;categories&quot;: [    {      &quot;id&quot;: 0,      &quot;name&quot;: &quot;Planet&quot;    },    {      &quot;id&quot;: 1,      &quot;name&quot;: &quot;Moonwalker&quot;    }  ],  &quot;annotations&quot;: [    {      &quot;id&quot;: 0,      &quot;image_id&quot;: 0,      &quot;category_id&quot;: 0,      &quot;segmentation&quot;: [],      &quot;bbox&quot;: [        299,        6,        377,        260      ],      &quot;ignore&quot;: 0,      &quot;iscrowd&quot;: 0,      &quot;area&quot;: 98020    },    {      &quot;id&quot;: 1,      &quot;image_id&quot;: 0,      &quot;category_id&quot;: 1,      &quot;segmentation&quot;: [],      &quot;bbox&quot;: [        288,        300,        132,        90      ],      &quot;ignore&quot;: 0,      &quot;iscrowd&quot;: 0,      &quot;area&quot;: 11880    }  ],  &quot;info&quot;: {    &quot;year&quot;: 2019,    &quot;version&quot;: &quot;1.0&quot;,    &quot;contributor&quot;: &quot;Label Studio&quot;  }}```Use cases: image object detection#### Pascal VOC XMLRunning from the command line:```bashpython label_studio_converter/cli.py --input examples/image_bbox/completions/ --config examples/image_bbox/config.xml --output tmp/voc-annotations --format VOC --image-dir tmp/images```Running from python:```pythonfrom label_studio_converter import Converterc = Converter('examples/image_bbox/config.xml')c.convert_to_voc('examples/image_bbox/completions/', 'tmp/output.conll', output_image_dir='tmp/images')```Output images can be found in `tmp/images`Corresponding annotations could be found in `tmp/voc-annotations/*.xml`:```xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;annotation&gt;&lt;folder&gt;tmp/images&lt;/folder&gt;&lt;filename&gt;62a623a0d3cef27a51d3689865e7b08a&lt;/filename&gt;&lt;source&gt;&lt;database&gt;MyDatabase&lt;/database&gt;&lt;annotation&gt;COCO2017&lt;/annotation&gt;&lt;image&gt;flickr&lt;/image&gt;&lt;flickrid&gt;NULL&lt;/flickrid&gt;&lt;/source&gt;&lt;owner&gt;&lt;flickrid&gt;NULL&lt;/flickrid&gt;&lt;name&gt;Label Studio&lt;/name&gt;&lt;/owner&gt;&lt;size&gt;&lt;width&gt;800&lt;/width&gt;&lt;height&gt;501&lt;/height&gt;&lt;depth&gt;3&lt;/depth&gt;&lt;/size&gt;&lt;segmented&gt;0&lt;/segmented&gt;&lt;object&gt;&lt;name&gt;Planet&lt;/name&gt;&lt;pose&gt;Unspecified&lt;/pose&gt;&lt;truncated&gt;0&lt;/truncated&gt;&lt;difficult&gt;0&lt;/difficult&gt;&lt;bndbox&gt;&lt;xmin&gt;299&lt;/xmin&gt;&lt;ymin&gt;6&lt;/ymin&gt;&lt;xmax&gt;676&lt;/xmax&gt;&lt;ymax&gt;266&lt;/ymax&gt;&lt;/bndbox&gt;&lt;/object&gt;&lt;object&gt;&lt;name&gt;Moonwalker&lt;/name&gt;&lt;pose&gt;Unspecified&lt;/pose&gt;&lt;truncated&gt;0&lt;/truncated&gt;&lt;difficult&gt;0&lt;/difficult&gt;&lt;bndbox&gt;&lt;xmin&gt;288&lt;/xmin&gt;&lt;ymin&gt;300&lt;/ymin&gt;&lt;xmax&gt;420&lt;/xmax&gt;&lt;ymax&gt;390&lt;/ymax&gt;&lt;/bndbox&gt;&lt;/object&gt;&lt;/annotation&gt;```Use cases: image object detection### YOLO to Label Studio converter Usage:```label-studio-converter import yolo -i /yolo/root/directory -o ls-tasks.json```Help:```label-studio-converter import yolo -husage: label-studio-converter import yolo [-h] -i INPUT [-o OUTPUT]                                          [--to-name TO_NAME]                                          [--from-name FROM_NAME]                                          [--out-type OUT_TYPE]                                          [--image-root-url IMAGE_ROOT_URL]                                          [--image-ext IMAGE_EXT]optional arguments:  -h, --help            show this help message and exit  -i INPUT, --input INPUT                        directory with YOLO where images, labels, notes.json                        are located  -o OUTPUT, --output OUTPUT                        output file with Label Studio JSON tasks  --to-name TO_NAME     object name from Label Studio labeling config  --from-name FROM_NAME                        control tag name from Label Studio labeling config  --out-type OUT_TYPE   annotation type - &quot;annotations&quot; or &quot;predictions&quot;  --image-root-url IMAGE_ROOT_URL                        root URL path where images will be hosted, e.g.:                        http://example.com/images or s3://my-bucket  --image-ext IMAGE_EXT                        image extension to search: .jpg, .png```YOLO export folder example:```yolo-folder  images   - 1.jpg   - 2.jpg   - ...  labels   - 1.txt   - 2.txt  classes.txt```classes.txt example```AirplaneCar```## ContributingWe would love to get your help for creating converters to other models. Please feel free to create pull requests.- [Contributing Guideline](https://github.com/heartexlabs/label-studio/blob/develop/CONTRIBUTING.md)- [Code Of Conduct](https://github.com/heartexlabs/label-studio/blob/develop/CODE_OF_CONDUCT.md)## LicenseThis software is licensed under the [Apache 2.0 LICENSE](/LICENSE) © [Heartex](https://www.heartex.com/). 2020&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;</longdescription>
</pkgmetadata>