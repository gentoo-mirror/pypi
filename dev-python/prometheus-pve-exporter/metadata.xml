<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>Prometheus Proxmox VE Exporter==============================|Build Status| |Package Version|This is an exporter that exposes information gathered from Proxmox VEnode for use by the Prometheus monitoring system.Installation------------Note: Python 2 is not supported anymore as of version 2.0.0. Instead use Python 3.6 or better.Using pip:==========.. code:: shell    python3 -m pip install prometheus-pve-exporter    pve-exporter --helpUsing docker:=============.. code:: shell   docker pull prompve/prometheus-pve-exporterExample: Display usage message:.. code:: shell   docker run -it --rm prompve/prometheus-pve-exporter --helpExample: Run the image with a mounted configuration file and published port:.. code:: shell   docker run --name prometheus-pve-exporter -d -p 127.0.0.1:9221:9221 -v /path/to/pve.yml:/etc/pve.yml prompve/prometheus-pve-exporterPrometheus PVE Exporter will now be reachable at http://localhost:9221/.Usage-----::    usage: pve_exporter [-h] [--collector.status] [--collector.version]                        [--collector.node] [--collector.cluster]                        [--collector.resources] [--collector.config]                        [config] [port] [address]    positional arguments:      config                Path to configuration file (pve.yml)      port                  Port on which the exporter is listening (9221)      address               Address to which the exporter will bind    optional arguments:      -h, --help            show this help message and exit      --collector.status, --no-collector.status                            Exposes Node/VM/CT-Status (default: True)      --collector.version, --no-collector.version                            Exposes PVE version info (default: True)      --collector.node, --no-collector.node                            Exposes PVE node info (default: True)      --collector.cluster, --no-collector.cluster                            Exposes PVE cluster info (default: True)      --collector.resources, --no-collector.resources                            Exposes PVE resources info (default: True)      --collector.config, --no-collector.config                            Exposes PVE onboot status (default: True)Use `::` for the `address` argument in order to bind to both IPv6 and IPv4sockets on dual stacked machines.Visit http://localhost:9221/pve?target=1.2.3.4 where 1.2.3.4 is the IPof the Proxmox VE node to get metrics from. Specify the ``module``request parameter, to choose which module to use from the config file.The ``target`` request parameter defaults to ``localhost``. Hence if``pve_exporter`` is deployed directly on the proxmox host, ``target``can be omitted.Use the `--collector.X` / `--no-collector.X` flags to enable disable selectedcollectors.Note that that the config collector results in one API call per guest VM/CT.It is therefore recommended to disable this collector using the`--no-collector.config` flag on big deployments.See the wiki_  for more examples and docs.Exported Metrics----------------Here's an example of the metrics exported.::    # HELP pve_up Node/VM/CT-Status is online/running    # TYPE pve_up gauge    pve_up{id=&quot;node/proxmox&quot;} 1.0    pve_up{id=&quot;qemu/100&quot;} 1.0    # HELP pve_disk_size_bytes Size of storage device    # TYPE pve_disk_size_bytes gauge    pve_disk_size_bytes{id=&quot;qemu/100&quot;} 6.8719476736e+010    pve_disk_size_bytes{id=&quot;node/proxmox&quot;} 3.1044079616e+010    pve_disk_size_bytes{id=&quot;storage/proxmox/local&quot;} 3.1044079616e+010    pve_disk_size_bytes{id=&quot;storage/proxmox/local-lvm&quot;} 6.9243764736e+010    pve_disk_size_bytes{id=&quot;storage/proxmox/vms&quot;} 1.934882766848e+012    # HELP pve_disk_usage_bytes Disk usage in bytes    # TYPE pve_disk_usage_bytes gauge    pve_disk_usage_bytes{id=&quot;qemu/100&quot;} 0.0    pve_disk_usage_bytes{id=&quot;node/proxmox&quot;} 1.7571426304e+010    pve_disk_usage_bytes{id=&quot;storage/proxmox/local&quot;} 1.7571426304e+010    pve_disk_usage_bytes{id=&quot;storage/proxmox/local-lvm&quot;} 6.619703908e+09    pve_disk_usage_bytes{id=&quot;storage/proxmox/vms&quot;} 8.32870981632e+011    # HELP pve_memory_size_bytes Size of memory    # TYPE pve_memory_size_bytes gauge    pve_memory_size_bytes{id=&quot;qemu/100&quot;} 1.7179869184e+010    pve_memory_size_bytes{id=&quot;node/proxmox&quot;} 6.739961856e+010    # HELP pve_memory_usage_bytes Memory usage in bytes    # TYPE pve_memory_usage_bytes gauge    pve_memory_usage_bytes{id=&quot;qemu/100&quot;} 1.6573280275e+010    pve_memory_usage_bytes{id=&quot;node/proxmox&quot;} 5.3907812352e+010    # HELP pve_network_transmit_bytes Number of bytes transmitted over the network    # TYPE pve_network_transmit_bytes gauge    pve_network_transmit_bytes{id=&quot;qemu/100&quot;} 7.75070828e+09    # HELP pve_network_receive_bytes Number of bytes received over the network    # TYPE pve_network_receive_bytes gauge    pve_network_receive_bytes{id=&quot;qemu/100&quot;} 1.529756162e+09    # HELP pve_disk_write_bytes Number of bytes written to storage    # TYPE pve_disk_write_bytes gauge    pve_disk_write_bytes{id=&quot;qemu/100&quot;} 1.50048127488e+011    # HELP pve_disk_read_bytes Number of bytes read from storage    # TYPE pve_disk_read_bytes gauge    pve_disk_read_bytes{id=&quot;qemu/100&quot;} 7.473739264e+09    # HELP pve_cpu_usage_ratio CPU usage (value between 0.0 and pve_cpu_usage_limit)    # TYPE pve_cpu_usage_ratio gauge    pve_cpu_usage_ratio{id=&quot;qemu/100&quot;} 0.105009724408557    pve_cpu_usage_ratio{id=&quot;node/proxmox&quot;} 0.984243806697115    # HELP pve_cpu_usage_limit Maximum allowed CPU usage    # TYPE pve_cpu_usage_limit gauge    pve_cpu_usage_limit{id=&quot;qemu/100&quot;} 1.0    pve_cpu_usage_limit{id=&quot;node/proxmox&quot;} 4.0    # HELP pve_uptime_seconds Number of seconds since the last boot    # TYPE pve_uptime_seconds gauge    pve_uptime_seconds{id=&quot;qemu/100&quot;} 315039.0    pve_uptime_seconds{id=&quot;node/proxmox&quot;} 315069.0    # HELP pve_storage_shared Whether or not the storage is shared among cluster nodes    # TYPE pve_storage_shared gauge    pve_storage_shared{id=&quot;storage/proxmox/local&quot;} 0.0    pve_storage_shared{id=&quot;storage/proxmox/local-lvm&quot;} 0.0    pve_storage_shared{id=&quot;storage/proxmox/vms&quot;} 0.0    # HELP pve_guest_info VM/CT info    # TYPE pve_guest_info gauge    pve_guest_info{id=&quot;qemu/100&quot;,name=&quot;samplevm1&quot;,node=&quot;proxmox&quot;,type=&quot;qemu&quot;} 1.0    # HELP pve_storage_info Storage info    # TYPE pve_storage_info gauge    pve_storage_info{id=&quot;storage/proxmox/local&quot;,node=&quot;proxmox&quot;,storage=&quot;local&quot;} 1.0    pve_storage_info{id=&quot;storage/proxmox/local-lvm&quot;,node=&quot;proxmox&quot;,storage=&quot;local-lvm&quot;} 1.0    pve_storage_info{id=&quot;storage/proxmox/vms&quot;,node=&quot;proxmox&quot;,storage=&quot;vms&quot;} 1.0    # HELP pve_node_info Node info    # TYPE pve_node_info gauge    pve_node_info{id=&quot;node/proxmox&quot;,level=&quot;&quot;,name=&quot;proxmox&quot;,nodeid=&quot;0&quot;} 1.0    # HELP pve_onboot_status Proxmox vm config onboot value    # TYPE pve_onboot_status gauge    pve_onboot_status{id=&quot;qemu/201&quot;,node=&quot;proxmox&quot;,type=&quot;qemu&quot;} 1.0    # HELP pve_version_info Proxmox VE version info    # TYPE pve_version_info gauge    pve_version_info{release=&quot;7.1&quot;,repoid=&quot;6fe299a0&quot;,version=&quot;7.1-5&quot;} 1.0Authentication--------------**Using pve.yml config file**Example ``pve.yml`` for password authentication:.. code:: yaml    default:        user: prometheus@pve        password: sEcr3T!        # Optional: set to false to skip SSL/TLS verification        verify_ssl: trueExample ``pve.yml`` for `token authentication`_:.. code:: yaml   default:       user: prometheus@pve       token_name: &quot;your-token-id&quot;       token_value: &quot;...&quot;**Using environment variables:**If the ``PVE_USER`` environment variable exists, then configuration is taken fromthe environment instead of from the ``pve.yml`` config file. The followingenvironment variables are respected:* ``PVE_USER``: user nameRequired for password authentication:* ``PVE_PASSWORD``: user passwordRequired for `token authentication`_:* ``PVE_TOKEN_NAME``: token name* ``PVE_TOKEN_VALUE``: token valueOptional:* ``PVE_VERIFY_SSL``: Either ``true`` or ``false``, whether or not to verify PVE tls  certificate. Defaults to ``true``.* ``PVE_MODULE``: Name of the configuration module. Defaults to ``default``.The configuration is passed directly into `proxmoxer.ProxmoxAPI()`_.**Note on verify_ssl and certificate trust store:**When operating PVE with self-signed certificates, then it is necessary toeither import the certificate into the local trust store (see this `SE answer`_for Debian/Ubuntu) or add ``verify_ssl: false`` to the config dict as a siblingto the credentials. Note that PVE `supports Let's Encrypt`_ out ouf the box. Inmany cases setting up trusted certificates is the better option than operatingwith self-signed certs.Proxmox VE Configuration------------------------For security reasons it is essential to add a user with read-only access(PVEAuditor role) for the purpose of metrics collection.Refer to the  `Proxmox Documentation`_ for the several ways of creating a user. Once created, assign the user the `/` path permission.Prometheus Configuration------------------------The PVE exporter can be deployed either directly on a Proxmox VE node oronto a separate machine.Example config for PVE exporter running on PVE node:.. code:: yaml    scrape_configs:      - job_name: 'pve'        static_configs:          - targets:            - 192.168.1.2:9221  # Proxmox VE node with PVE exporter.            - 192.168.1.3:9221  # Proxmox VE node with PVE exporter.        metrics_path: /pve        params:          module: [default]Example config for PVE exporter running on Prometheus host:.. code:: yaml    scrape_configs:      - job_name: 'pve'        static_configs:          - targets:            - 192.168.1.2  # Proxmox VE node.            - 192.168.1.3  # Proxmox VE node.        metrics_path: /pve        params:          module: [default]        relabel_configs:          - source_labels: [__address__]            target_label: __param_target          - source_labels: [__param_target]            target_label: instance          - target_label: __address__            replacement: 127.0.0.1:9221  # PVE exporter.Grafana Dashboards------------------* `Proxmox via Prometheus by Pietro Saccardi`_.. |Build Status| image:: https://github.com/prometheus-pve/prometheus-pve-exporter/actions/workflows/ci.yml/badge.svg   :target: https://github.com/prometheus-pve/prometheus-pve-exporter/actions/workflows/ci.yml.. |Package Version| image:: https://img.shields.io/pypi/v/prometheus-pve-exporter.svg   :target: https://pypi.python.org/pypi/prometheus-pve-exporter.. _wiki: https://github.com/prometheus-pve/prometheus-pve-exporter/wiki.. _`token authentication`: https://pve.proxmox.com/wiki/User_Management#pveum_tokens.. _`proxmoxer.ProxmoxAPI()`: https://pypi.python.org/pypi/proxmoxer.. _`SE answer`: https://askubuntu.com/a/1007236.. _`supports Let's Encrypt`: https://pve.proxmox.com/pve-docs/pve-admin-guide.html#sysadmin_certificate_management.. _`Proxmox Documentation`: https://pve.proxmox.com/pve-docs/pve-admin-guide.html#pveum_permission_management.. _`Proxmox via Prometheus by Pietro Saccardi`: https://grafana.com/dashboards/10347</longdescription>
</pkgmetadata>