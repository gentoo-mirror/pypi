<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># ChemivecVectorized Cheminformatics Python library, based on EPAM Indigo toolkit C-APIand using NumPy for input/output.### Supported operations:```rxn_subsearch(input, query) - reaction substructure match    input : reaction SMILES array (numpy, pandas and python list supported)    query : reaction query SMARTS, ex &quot;C=C&gt;&gt;C-C&quot;```### Example usage:```pythonimport numpy as npimport chemivecarr = np.array(['[C:1]=O&gt;&gt;[C:1]O', 'C=O&gt;&gt;CO'])query = &quot;[C:1]=O&gt;&gt;[C:1]O&quot;res = chemivec.rxn_subsearch(arr, query=query)print(res)# Output: array([ True, False]) ```### MultithreadingMultithreading realized by OpenMP library. By default, tries to use maximum available number of cores.Number of cores can be specified as a global option or passed as a parameter.```pythonimport chemivecchemivec.rxn_subsearch(arr, query=query)   # default max available coreschemivec.set_option(&quot;n_jobs&quot;, 12)                 # change defaultschemivec.rxn_subsearch(arr, query=query, n_jobs=8)```### Atom-to-atom matching (AAM) If atom mapping is present in the query, ex `[C:1]&gt;&gt;[C:1]` chemivec follows the standard DAYLIGHT SMARTS rulesdeclared here https://www.daylight.com/dayhtml/doc/theory/theory.smarts.html (Section 4.6 Reaction Queries)### InstallDownload from pip`pip install chemivec`### Build from sources`python3 -m twine check wheelhouse/*`#### Ubuntusudo apt install build-essential ninja-build mc wget git libcairo2-dev zlib1g-dev -ygit clone https://github.com/alkorolyov/chemivecwget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh;chmod +x Mambaforge-Linux-x86_64.sh;bash Mambaforge-Linux-x86_64.sh;export MAMBA_NO_BANNER=1### if conda still not seen then ~/.bashrc is not sourced when you log in using SSH.### You need to source it in your ~/.bash_profile like this:echo &quot;if [ -f ~/.bashrc ]; then. ~/.bashrcfi&quot; &gt;&gt; ~/.bash_profile# restart shellconda config --set auto_activate_base falsemamba create -n devmamba activate devmamba install pip pytest -ypip install .#### (optional) to build in cibuildwheelpip install cibuildwheelsudo apt-get install docker.io -y; sudo groupadd docker; sudo usermod -aG docker $USERsudo reboot nowcd chemiveccibuildwheel --platform linux#### Windowsmingw64 on windowsdownload stable mingw64 release, extract and add to %Path%https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-10.0.0-msvcrt-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64msvcrt-10.0.0-r1.zipdownload ninja and also add to %Path%https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip`cmake -B build -G &quot;Ninja&quot; -D CMAKE_C_COMPILER=gcc.exe -D CMAKE_CXX_COMPILER=g++.exe .``cmake --build build --target _chemivec`#### MacOShttps://github.com/DrDonk/unlockerhttps://www.wikigain.com/how-to-install-macos-monterey-on-vmware-on-windows-pc/https://intoguide.com/install-vmware-tools-on-macos-monterey/https://href.li/?https://softwareupdate.vmware.com/cds/vmw-desktop/fusion/11.1.0/13668589/packages/com.vmware.fusion.tools.darwin.zip.tar### MiscTo check dependencies of your `*.pyd` librarydumpbin should be run from developer command prompt of VS 2022`dumpbin mylib_c_ext.pyd /DEPENDENTS`</longdescription>
</pkgmetadata>