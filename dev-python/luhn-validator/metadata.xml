<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># luhn-validatorA Python package to validate identification numbers using Luhn algorithm withadditional optional checks.[![Build Status](https://img.shields.io/github/workflow/status/mhalshehri/luhn-validator/Release)][build][![Coverage Status](https://img.shields.io/badge/coverage-100%25-success)][coverage][![Code Quality](https://img.shields.io/codefactor/grade/github/mhalshehri/luhn-validator/main?&amp;label=codefactor)][quality][![PyPI Version](https://img.shields.io/pypi/v/luhn-validator)][pypi-version][![Package License](https://img.shields.io/github/license/mhalshehri/luhn-validator)][license][build]: https://github.com/mhalshehri/luhn-validator/actions/workflows/release.yml[coverage]: https://github.com/mhalshehri/luhn-validator/actions/workflows/release.yml[quality]: https://www.codefactor.io/repository/github/mhalshehri/luhn-validator/overview/main[pypi-version]: https://pypi.python.org/pypi/luhn-validator[license]: https://github.com/mhalshehri/luhn-validator/blob/main/LICENSE## OverviewThe Luhn algorithm or Luhn formula, also known as the &quot;modulus 10&quot; or &quot;mod 10&quot;algorithm, named after its creator, IBM scientist Hans Peter Luhn, is a simplechecksum formula used to validate a variety of identification numbers, such as:- US National Provider Identifier numbers.- Canadian Social Insurance Numbers.- Saudi Arabia National and Resident ID numbers.- South African ID numbers.- Swedish National identification numbers.- Swedish Corporate Identity Numbers (OrgNr).- Greek Social Security Numbers (ΑΜΚΑ).- Credit card numbers.- IMEI numbers.The algorithm is in the public domain and is in wide use today. It was designedto protect against accidental errors. Most credit cards and many governmentidentification numbers use the algorithm as a simple method of distinguishingvalid numbers from mistyped or otherwise incorrect numbers.## Features- Simple API to validate numbers based on the Luhn algorithm.- Extended validation to cover number length and/or prefix(es).- Can validate numbers containing hyphens or spaces.- Works on Python 3.6+ with zero dependencies.- Thoroughly tested with 100% test coverage.## InstallationTo install using `pip`, run:```shellpip install luhn-validator```## Usage Examples```pycon&gt;&gt;&gt; from luhn_validator import validate&gt;&gt;&gt; # Simple checksum validation&gt;&gt;&gt; validate(&quot;1101798278&quot;)True&gt;&gt;&gt; # Additional check for length (9 digits)&gt;&gt;&gt; validate(&quot;1101798278&quot;, 9)False&gt;&gt;&gt; # Additional checks for prefix (either 1 or 2)&gt;&gt;&gt; validate(&quot;1101798278&quot;, 10, [&quot;1&quot;, &quot;2&quot;])True&gt;&gt;&gt; # Validate numbers containing hyphens&gt;&gt;&gt; validate(&quot;01-055102-109831-4&quot;, None, &quot;01&quot;)True```## API Reference### &lt;kbd&gt;function&lt;/kbd&gt; `validate````pythonvalidate(    number: str,    length: int | None = None,    prefix: str | list[str] | None = None) -&gt; bool```Validate checksum and format of an identification number based on the Luhnalgorithm.**Args:**- **`number`**: Identification number to validate.- **`length`**: How many digits the number must contain. (The default is `None`,  which implies skipping the length check).- **`prefix`**: Exact digit(s) the number must start with. When a list of digits  is provided, one of the values must match. (The default is `None`, which  implies skipping the prefix check).**Returns:**- `True` when the number is valid, otherwise `False`.## LicenseThis project is licensed under the terms of the MIT license.</longdescription>
</pkgmetadata>