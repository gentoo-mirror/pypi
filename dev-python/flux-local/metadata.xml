<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>flux-local is a set of tools and libraries for managing a local flux gitops repository focused on validation steps to help improve quality of commits, PRs, and general local testing.This library uses command line tools like kustomize and helm to replicate the behavior offlux to gather objects in the cluster. It only looks at the local git repo, and not a livecluster. However, this is fine since the local repository has enough information and thedefinition is simple. Secrets are ignored as the content is not needed to validate thecluster is creating valid objects.This library at first glance is little more than shell scripts running commands, but is easierto test, maintain, and evolve. This does not support all features of flux, but shouldbe close enough for home use.See [documentation](https://allenporter.github.io/flux-local/) for full quickstart and API reference.See the [github project](https://github.com/allenporter/flux-local).## flux-local CLIThe CLI is written in python and packaged as part of the `flux-local` python library, which can be installed using pip:```bash$ pip3 install flux-local```### flux-local getYou can use the `flux-local` cli to inspect objects in the cluster, similar to how you mightuse the flux command on a real cluster.This example lists all Kustomizations in the cluster:```bash$ flux-local get ks -o wideNAME                 PATH                                                   HELMREPOS    RELEASESapps                 ./tests/testdata/cluster/apps/prod                     0            0infra-controllers    ./tests/testdata/cluster/infrastructure/controllers    0            0infra-configs        ./tests/testdata/cluster/infrastructure/configs        2            0```This example lists all HelmReleases in the cluster:```bash$ flux-local get hr -ANAMESPACE    NAME       REVISION    CHART              SOURCEpodinfo      podinfo    6.3.2       podinfo-podinfo    podinfometallb      metallb    4.1.14      metallb-metallb    bitnami```This example lists all HelmReleases in a specific namespace:```bash$ flux-local get hr -n metallbNAME       REVISION    CHART              SOURCEmetallb    4.1.14      metallb-metallb    bitnami```### flux-local buildYou can use the `flux-local` cli to build all objects in a cluster, similar to how youuse `kustomize build`, which is used underneath. Here is an example to build all flux`Kustomization` objects within a git repository, using `kustomize cfg count` to parsethe yaml output:```bash$ flux-local build tests/testdata/cluster/ | kustomize cfg countClusterPolicy: 1ConfigMap: 1HelmRelease: 2HelmRepository: 2Namespace: 1```You can also specify the root to build all clusters.Additionally, you can inflate `HelmRelease` objects inside each `Kustomization` by addingthe `--enable-helm` command line flag. This example again shows `kustomize cfg count`to parse the yaml output which now includes the resources from `HelmRelease` objectsdefined in the cluster:```bash$ flux-local build tests/testdata/cluster/ --enable-helm --skip-crds | kustomize cfg countClusterPolicy: 1ClusterRole: 2ClusterRoleBinding: 2ConfigMap: 3DaemonSet: 1Deployment: 3HelmRelease: 2HelmRepository: 2Ingress: 1Namespace: 1Role: 3RoleBinding: 3Secret: 1Service: 3ServiceAccount: 2ValidatingWebhookConfiguration: 1```### flux-local diffYou may also use `flux-local` to verify your local changes to cluster resources have the desirdeffect. This is similar to `flux diff` but entirely local. This will run a local `kustomize build`first against the local repo then again against a prior repo revision, then prints the output:```bash$ flux-local diff ks apps---+++@@ -2,6 +2,13 @@   kind: Namespace   metadata:     name: podinfo+- apiVersion: v1+  data:+    foo: bar+  kind: ConfigMap+  metadata:+    name: podinfo-config+    namespace: podinfo - apiVersion: helm.toolkit.fluxcd.io/v2beta1   kind: HelmRelease   metadata:```Additionally `flux-local` can inflate a `HelmRelease` locally and show diffs in the outputobjects. This is similar to `flux diff` but for HelmReleases:```diff$ flux-local diff hr -n podinfo podinfo---+++@@ -33,8 +33,8 @@     labels:       app.kubernetes.io/managed-by: Helm       app.kubernetes.io/name: podinfo-      app.kubernetes.io/version: 6.3.2-      helm.sh/chart: podinfo-6.3.2+      app.kubernetes.io/version: 6.3.3+      helm.sh/chart: podinfo-6.3.3     name: podinfo   spec:     ports:...```You may also use an external diff program such as [dyff](https://github.com/homeport/dyff) whichis more compact for diffing yaml resources:```bash$ git statusOn branch devYour branch is up to date with 'origin/dev'.Changes not staged for commit:modified:   home/dev/hajimari-values.yaml$ export DIFF=&quot;dyff between --omit-header --color on&quot;# flux-local diff ks home --path clusters/dev/spec.chart.spec.version  (HelmRelease/hajimari/hajimari)  ± value change    - 2.0.2    + 2.0.1$ flux-local diff hr hajimari -n hajimari --path clusters/dev/metadata.labels.helm.sh/chart  (ClusterRoleBinding/default/hajimari)  ± value change    - hajimari-2.0.2    + hajimari-2.0.1metadata.labels.helm.sh/chart  (PersistentVolumeClaim/default/hajimari-data)  ± value change    - hajimari-2.0.2    + hajimari-2.0.1```### flux-local testYou can verify that the resources in the cluster are formatted properly before commit or as partof a CI system. The `flux-local test` command will build the `Kustomization` resources in thecluster:```$ flux-local test============================================= test session starts =============================================collected 18 itemsclusters/dev .........                                                                                  [ 50%]clusters/prod .........                                                                                 [100%]============================================= 18 passed in 11.43s =============================================$ flux-local test -v============================================= test session starts =============================================collected 18 items./clusters/dev::certmanager::kustomization PASSED                                                       [  5%]./clusters/dev::crds::kustomization PASSED                                                              [ 11%]./clusters/dev::games::kustomization PASSED                                                             [ 16%]./clusters/dev::home::kustomization PASSED                                                              [ 22%]./clusters/dev::infrastructure::kustomization PASSED                                                    [ 27%]./clusters/dev::monitoring::kustomization PASSED                                                        [ 33%]./clusters/dev::network::kustomization PASSED                                                           [ 38%]./clusters/dev::services::kustomization PASSED                                                          [ 44%]./clusters/dev::settings::kustomization PASSED                                                          [ 50%]./clusters/prod::certmanager::kustomization PASSED                                                      [ 55%]./clusters/prod::crds::kustomization PASSED                                                             [ 61%]./clusters/prod::games::kustomization PASSED                                                            [ 66%]./clusters/prod::home::kustomization PASSED                                                             [ 72%]./clusters/prod::infrastructure::kustomization PASSED                                                   [ 77%]./clusters/prod::monitoring::kustomization PASSED                                                       [ 83%]./clusters/prod::network::kustomization PASSED                                                          [ 88%]./clusters/prod::services::kustomization PASSED                                                         [ 94%]./clusters/prod::settings::kustomization PASSED                                                         [100%]============================================= 18 passed in 11.81s ============================================```You may also validate `HelmRelease` objects can be templated properly with the `--enable-helm`flag. This will run `kustomize build` then run `helm template` on all the `HelmRelease` objectsfound. Additionally the `--enable-kyverno` flag will apply any found `ClusterPolicy` objects toall objects in the cluster and verify they pass:```$ flux-local test --enable-helm --enable-kyverno============================================= test session starts =============================================collected 81 itemsclusters/dev .....................................                                                      [ 45%]clusters/prod ............................................                                              [100%]======================================== 81 passed in 75.40s (0:01:15) ========================================```## LibraryThe `flux_local` [library documentation](https://allenporter.github.io/flux-local/) for detailson the python APIs provided.</longdescription>
</pkgmetadata>