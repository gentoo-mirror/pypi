<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Django Case Insensitive Model Field```bashpip install django_case_insensitive_field```With Django Case Insensitive Field you can make Django Model Field case insensitive - by default Django can't do this which will make it impossible to add a unique field that will be case insensitive regardeless of case.Let's assume you have a `username`  field on your `UserModel` which ofcourse would require `username` to be unique accross the `table` but to Django `abc` is different from `ABC` because it is case sensitive (meaning: users can use the same username but with different case).Look at the example below:```pythonfrom django.db import modelsclass UserModel(models.Model):    username = models.CharField(max_length=16, unique=True)user1 = UserModel(username='user1')user1.save()  # will go throughuser2 = UserModel(username='User1') # will still go throughuser2.save()  # will go through```## Using Django Case Insensitive ModelTo make Django Model Field insensitive, you can use the code below:No need for installation ot inclusion in app.```python# fields.pyfrom django.db.models import CharFieldfrom django_case_insensitive_field import CaseInsensitiveFieldMixinclass CaseInsensitiveCharField(CaseInsensitiveFieldMixin, CharField):    &quot;&quot;&quot;[summary]    Makes django CharField case insensitive \n    Extends both the `CaseInsensitiveMixin` and  CharField \n    Then you can import     &quot;&quot;&quot;    def __init__(self, *args, **kwargs):        super(CaseInsensitiveFieldMixin, self).__init__(*args, **kwargs) ``````python# models.pyfrom .fields import CaseInsensitiveCharFieldclass UserModel(models.Model):    username = CaseInsensitiveCharField(max_length=16, unique=True)user1 = UserModel(username='user1')user1.save()  # will go throughuser2 = UserModel(username='User1') user2.save() # will not go through```## Note:All values are converted to lowercase before insertion and extraction from database.## Compatibility1. Compatible with every database - POSTGRESQL, SQLITE, MYSQL etc.2. Compatible with Django 2+, 3+## DependenciesHolla! No dependecy. Lightweight!</longdescription>
</pkgmetadata>