<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># category&gt; Categorical transformation for data science[![PyPI version](https://img.shields.io/pypi/v/category)](https://pypi.org/project/category)![Python version](https://img.shields.io/pypi/pyversions/category)![License](https://img.shields.io/github/license/raynardj/category)![PyPI Downloads](https://img.shields.io/pypi/dm/category)## Installationpip install works for this library.```shellpip install category```## Single Category```python&gt;&gt;&gt; from category import Category&gt;&gt;&gt; book = Category(['a', 'b', 'c', 'Category_d', 'e', 'f', 'g', 'h', 'i', 'j'], pad_mst = False)&gt;&gt;&gt; book.i2c[2]'c'&gt;&gt;&gt; book.c2i[['Category_d','f']]array([3, 5])```You can set ```pad_mst``` to ```True``` to handle the missing token```python&gt;&gt;&gt; from category import Category&gt;&gt;&gt; book = Category(['a', 'b', 'c', 'Category_d', 'e', 'f', 'g', 'h', 'i', 'j'], pad_mst = True)&gt;&gt;&gt; book.i2c[2] # the 1st token is the missing token, not 'a' any more'b'&gt;&gt;&gt; book.c2i[['Stranger','Category_d','Unknown','f']]array([0, 4, 0, 6])```## Multi-Category```python&gt;&gt;&gt; from category import (Category, MultiCategory)&gt;&gt;&gt; cates = list(f&quot;category{i}&quot; for i in range(1000))&gt;&gt;&gt; multi_cate = MultiCategory(Category(cates, pad_mst = True))&gt;&gt;&gt; multi_cate.string_to_index(&quot;category42, category108&quot;)array([42, 108])```You can also try to convert a list of strings, containing multicategorical info (which the data input is frequently used in tabular data), to nhot encoded array, and back```python&gt;&gt;&gt; nhot = multi_cate.batch_strings_to_nhot([&quot;category42, category108&quot;,&quot;category999&quot;])&gt;&gt;&gt; multi_cate.nhot_to_list(nhot)[0][&quot;category42&quot;, &quot;category108&quot;]```## PerformanceThe running speed of this library mostly depends on python dictionary and numpy operations. Though python is a 'slow' language, such application is pretty fast, and not easy to improve using other language.Here we compare the this library with the [Rust implementation](https://github.com/raynardj/rust_category)## References* [GitHub](https://github.com/raynardj/category)* [PyPI package](https://pypi.org/project/category/)* [Rust implementation](https://github.com/raynardj/rust_category)* Used in [Tai-Chi engine](https://github.com/tcengine/tai-chi), a verstile user-friendly deep learning library</longdescription>
</pkgmetadata>