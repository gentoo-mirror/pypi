<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>pytest-ethereum===============`Join the chat athttps://gitter.im/ethereum/pytest-ethereum &lt;https://gitter.im/ethereum/pytest-ethereum?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge&gt;`__`Build Status &lt;https://circleci.com/gh/ethereum/pytest-ethereum&gt;`__`PyPI version &lt;https://badge.fury.io/py/pytest-ethereum&gt;`__ `Pythonversions &lt;https://pypi.python.org/pypi/pytest-ethereum&gt;`__ `Docsbuild &lt;http://pytest-ethereum.readthedocs.io/en/latest/?badge=latest&gt;`__Pytest library for ethereum projects.Read more in the `documentation onReadTheDocs &lt;https://pytest-ethereum.readthedocs.io/&gt;`__. `View thechangelog &lt;https://pytest-ethereum.readthedocs.io/en/latest/releases.html&gt;`__.Quickstart----------.. code:: sh   pip install pytest-ethereumDeveloper Setup---------------If you would like to hack on pytest-ethereum, please check out the`Ethereum Development TacticalManual &lt;https://github.com/pipermerriam/ethereum-dev-tactical-manual&gt;`__for information on how we do:-  Testing-  Pull Requests-  Code Style-  DocumentationDevelopment Environment Setup~~~~~~~~~~~~~~~~~~~~~~~~~~~~~You can set up your dev environment with:.. code:: sh   git clone git@github.com:ethereum/pytest-ethereum.git   cd pytest-ethereum   virtualenv -p python3 venv   . venv/bin/activate   pip install -e .[dev]Testing Setup~~~~~~~~~~~~~During development, you might like to have tests run on every file save.Show flake8 errors on file change:.. code:: sh   # Test flake8   when-changed -v -s -r -1 pytest_ethereum/ tests/ -c &quot;clear; flake8 pytest_ethereum tests &amp;&amp; echo 'flake8 success' || echo 'error'&quot;Run multi-process tests in one command, but without color:.. code:: sh   # in the project root:   pytest --numprocesses=4 --looponfail --maxfail=1   # the same thing, succinctly:   pytest -n 4 -f --maxfail=1Run in one thread, with color and desktop notifications:.. code:: sh   cd venv   ptw --onfail &quot;notify-send -t 5000 'Test failure ⚠⚠⚠⚠⚠' 'python 3 test on pytest-ethereum failed'&quot; ../tests ../pytest_ethereumRelease setup~~~~~~~~~~~~~For Debian-like systems:::   apt install pandocTo release a new version:.. code:: sh   make release bump=$$VERSION_PART_TO_BUMP$$How to bumpversion^^^^^^^^^^^^^^^^^^The version format for this repo is ``{major}.{minor}.{patch}`` forstable, and ``{major}.{minor}.{patch}-{stage}.{devnum}`` for unstable(``stage`` can be alpha or beta).To issue the next version in line, specify which part to bump, like``make release bump=minor`` or ``make release bump=devnum``.If you are in a beta version, ``make release bump=stage`` will switch toa stable.To issue an unstable version when the current version is stable, specifythe new version explicitly, like``make release bump=&quot;--new-version 4.0.0-alpha.1 devnum&quot;``</longdescription>
</pkgmetadata>