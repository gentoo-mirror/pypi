<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>`schedule &lt;https://schedule.readthedocs.io/&gt;`__===============================================.. image:: https://github.com/dbader/schedule/workflows/Tests/badge.svg        :target: https://github.com/dbader/schedule/actions?query=workflow%3ATests+branch%3Amaster.. image:: https://coveralls.io/repos/dbader/schedule/badge.svg?branch=master        :target: https://coveralls.io/r/dbader/schedule.. image:: https://img.shields.io/pypi/v/schedule.svg        :target: https://pypi.python.org/pypi/schedulePython job scheduling for humans. Run Python functions (or any other callable) periodically using a friendly syntax.- A simple to use API for scheduling jobs, made for humans.- In-process scheduler for periodic jobs. No extra processes needed!- Very lightweight and no external dependencies.- Excellent test coverage.- Tested on Python and 3.7, 3.8, 3.9, 3.10, 3.11Usage-----.. code-block:: bash    $ pip install schedule.. code-block:: python    import schedule    import time    def job():        print(&quot;I'm working...&quot;)    schedule.every(10).seconds.do(job)    schedule.every(10).minutes.do(job)    schedule.every().hour.do(job)    schedule.every().day.at(&quot;10:30&quot;).do(job)    schedule.every(5).to(10).minutes.do(job)    schedule.every().monday.do(job)    schedule.every().wednesday.at(&quot;13:15&quot;).do(job)    schedule.every().day.at(&quot;12:42&quot;, &quot;Europe/Amsterdam&quot;).do(job)    schedule.every().minute.at(&quot;:17&quot;).do(job)    def job_with_argument(name):        print(f&quot;I am {name}&quot;)    schedule.every(10).seconds.do(job_with_argument, name=&quot;Peter&quot;)    while True:        schedule.run_pending()        time.sleep(1)Documentation-------------Schedule's documentation lives at `schedule.readthedocs.io &lt;https://schedule.readthedocs.io/&gt;`_.Meta----Daniel Bader - `@dbader_org &lt;https://twitter.com/dbader_org&gt;`_ - mail@dbader.orgInspired by `Adam Wiggins' &lt;https://github.com/adamwiggins&gt;`_ article `&quot;Rethinking Cron&quot; &lt;https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/&gt;`_ and the `clockwork &lt;https://github.com/Rykian/clockwork&gt;`_ Ruby module.Distributed under the MIT license. See `LICENSE.txt &lt;https://github.com/dbader/schedule/blob/master/LICENSE.txt&gt;`_ for more information.https://github.com/dbader/schedule</longdescription>
</pkgmetadata>