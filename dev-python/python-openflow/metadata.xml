<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>########Overview########**WARNING: As previously announced on our communication channels, the Kytosproject will enter the &quot;shutdown&quot; phase on May 31, 2021. After this date,only critical patches (security and core bug fixes) will be accepted, and theproject will be in &quot;critical-only&quot; mode for another six months (until November30, 2021). For more information visit the FAQ at &lt;https://kytos.io/faq&gt;. We'llhave eternal gratitude to the entire community of developers and users that madethe project so far.**|Experimental| |Openflow| |Tag| |Release| |License| |Build| |Coverage| |Quality|*python-openflow* is a low level library to parse and create OpenFlow messages.If you want to read an OpenFlow packet from an open socket or send a message toan OpenFlow switch, this is your best friend. The main features are: highperformance, short learning curve and free software license.This library is part of `Kytos project &lt;http://kytos.io&gt;`_, but feel free touse this simple and intuitive library in other projects... attention::   *python-openflow* does not perform I/O operations. To communicate with a   switch, you must write your own controller using this library or use our   `Kytos SDN Platform &lt;http://kytos.io/&gt;`_.A quick start follows for you to check whether this project fits your needs.For a more detailed documentation, please check the `python-openflow APIReference Manual &lt;http://docs.kytos.io/developer/pyof/&gt;`_.Quick Start***********Installing==========In order to use this software please install python3.6 or greater into yourenvironment beforehand.We are doing a huge effort to make Kytos and its components available on allcommon distros. So, we recommend you to download it from your distro repository.But if you are trying to test, develop or just want a more recent version of oursoftware no problem: Download now, the latest release (it still a betasoftware), from our repository:First you need to clone `python-openflow` repository:.. code-block:: shell   $ git clone https://github.com/kytos/python-openflow.gitAfter cloning, the installation process is done by standard `setuptools` installprocedure:.. code-block:: shell   $ cd python-openflow   $ sudo python3 setup.py installAlternatively, if you are a developer and want to install in develop mode:.. code-block:: shell   $ cd python-openflow   $ pip3 install -r requirements/dev.txtBasic Usage Example===================See how it is easy to create a feature request message with this library.  Youcan use ipython3 to get the advantages of autocompletion:.. code-block:: python    &gt;&gt;&gt; from pyof.v0x01.controller2switch.features_request import FeaturesRequest    &gt;&gt;&gt; request = FeaturesRequest()    &gt;&gt;&gt; print(request.header.message_type)    Type.OFPT_FEATURES_REQUESTIf you need to send this message via socket, call the ``pack()`` method to getits binary representation to be sent through the network:.. code:: python    &gt;&gt;&gt; binary_msg = request.pack()    &gt;&gt;&gt; print(binary_msg)    b&quot;\x01\x05\x00\x08\x14\xad'\x8d&quot;    &gt;&gt;&gt; # Use a controller (e.g. Kytos SDN controller) to send &quot;binary_msg&quot;To parse a message, use the ``unpack()`` function:.. code:: python   &gt;&gt;&gt; from pyof.utils import unpack   &gt;&gt;&gt; binary_msg = b&quot;\x01\x05\x00\x08\x14\xad'\x8d&quot;   &gt;&gt;&gt; msg = unpack(binary_msg)   &gt;&gt;&gt; print(msg.header.version)   UBInt8(1) # OpenFlow 1.0   &gt;&gt;&gt; print(msg.header.message_type)   Type.OFPT_FEATURES_REQUESTPlease, note that this library do not send or receive messages via socket. Youhave to create your own server to receive messages from switches. This libraryonly helps you to handle OpenFlow messages in a more pythonic way.Authors*******For a complete list of authors, please open ``AUTHORS.rst`` file.Contributing************If you want to contribute to this project, please read `Kytos Documentation&lt;https://docs.kytos.io/developer/how_to_contribute/&gt;`__ website.License*******This software is under *MIT-License*. For more information please read``LICENSE`` file... |Experimental| image:: https://img.shields.io/badge/stability-experimental-orange.svg.. |Openflow| image:: https://img.shields.io/badge/Openflow-1.3-brightgreen.svg   :target: https://www.opennetworking.org/images/stories/downloads/sdn-resources/onf-specifications/openflow/openflow-switch-v1.3.5.pdf.. |Tag| image:: https://img.shields.io/github/tag/kytos/python-openflow.svg   :target: https://github.com/kytos/python-openflow/tags.. |Release| image:: https://img.shields.io/github/release/kytos/python-openflow.svg   :target: https://github.com/kytos/python-openflow/releases.. |License| image:: https://img.shields.io/github/license/kytos/python-openflow.svg   :target: https://github.com/kytos/python-openflow/blob/master/LICENSE.. |Build| image:: https://scrutinizer-ci.com/g/kytos/python-openflow/badges/build.png?b=master   :alt: Build status   :target: https://scrutinizer-ci.com/g/kytos/python-openflow/?branch=master.. |Coverage| image:: https://scrutinizer-ci.com/g/kytos/python-openflow/badges/coverage.png?b=master   :alt: Code coverage   :target: https://scrutinizer-ci.com/g/kytos/python-openflow/?branch=master.. |Quality| image:: https://scrutinizer-ci.com/g/kytos/python-openflow/badges/quality-score.png?b=master   :alt: Code-quality score   :target: https://scrutinizer-ci.com/g/kytos/python-openflow/?branch=master</longdescription>
</pkgmetadata>