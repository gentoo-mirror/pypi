<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># uff_`U`ff, once upon a time, I've created a mesh with a lot of duplicating vertices and needed to `F`ind unique vertices `F`ast._## Install guide### c++ (minimal):```git clone git@github.com:tataratat/uff.gitcd uffmkdir buildcd buildcmake -DBUILD_EXAMPLES=OFF -DBUILD_FORTRAN_MODULE=OFF -DCMAKE_BUILD_PREFIX=&lt;path-to-install-dir&gt; ..(make)make install```This makes function `uff` available from fortran side. For example:```fortrancall uff(...)```However, if you prefer to have a separate fortran module, set `-DBUILD_FORTRAN_MODULE=ON`. This allows:```fortranuse uff, only ufffortrancall ufffortran(...)```### python:_option1: `pip`_```pip install uffpy```It works the best with `gcc` and `clang`. To make sure, you can set:```export CC=gcc # or clang```The newest version should always be available with:```pip install git+https://github.com/tataratat/uff.git@dev```_option2: DIY_```git clone git@github.com:tataratat/uff.gitcd uffpip install -r requirements.txtpython3 setup.py install   # or `pip install .````</longdescription>
</pkgmetadata>