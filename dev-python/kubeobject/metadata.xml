<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># KubeObject_A simple to use wrapping on top of Kubernetes custom resources withobject oriented semantics._KubeObject allows you to use Kubernetes Custom Objects in an objectoriented way. It works by defining an object, by instantiating it witha `name` and `namespace` and then &quot;bounding&quot; this object to aKubernetes object by creating it, or loading it, if it already exists.# Quick StartIn the following example we create an &quot;Istio&quot; object, which willmanage one of the Custom Objects defined by the[Istio](https://operatorhub.io/operator/istio) operator. A simplelifecycle is explained below.``` python# Builds the object, but it is &quot;unbound&quot;, this is, it is not# referring to an actual object in Kubernetes.istio = CustomObject(&quot;my-istio&quot;, &quot;my-namespace&quot;, plural=&quot;istios&quot;, api_version=&quot;istio.banzaicloud.io/v1beta1&quot;)# Let's pass the simplest spec we canistio[&quot;spec&quot;] = {&quot;version&quot;: &quot;1.1.0&quot;, &quot;mtls&quot;: True}# And now create it; after creation the object is &quot;bound&quot;istio.create()```Updating the object's `Spec` and checking the object's `Status` is oneof our goals as well, like in the following example:``` python# The Istio operator should have started working on deploying# this new Custom Resource. Let's get the status of the objectprint(istio[&quot;status&quot;])# This is empty, because since calling `create()` we have not# updated from the actual object in Kubernetes. Let's get an# up-to-date object.istio.reload()# I want to avoid calling `reload()` everytime I need a new# versionistio.auto_reload = True# Now we'll wait until the object has reached a given status:while istio[&quot;status&quot;][&quot;Status&quot;] == &quot;Reconciling&quot;: time.sleep(5)# Check the Status after &quot;Reconciling&quot;print(&quot;Our status is:&quot;, istio[&quot;status&quot;][&quot;Status&quot;])```After doing all its work, the `Istio` object might need to be deleted:``` pythonistio.delete()```</longdescription>
</pkgmetadata>