<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># dpixelsA(nother) wrapper for the Python Discord Pixel API.## Features - Proper ratelimite handeling. - Saves ratelimits in a json file, so restarting scripts won't trigger cooldowns. - Supports all Pixel API endpoints. - Supports autodrawing of images.## ExamplesGet the canvas:```pyclient = dpixels.Client(token=&quot;your token&quot;)canvas = await client.get_canvas()# this also caches the canvas, so later you can do:canvas = client.canvas```Get a specific pixel:```pypixel = canvas[0, 0]  # get the pixel at 0,0pixel = await client.get_pixel(0, 0)  # fetch the pixel at 0, 0pixel.hex  # the hex valuepixel.int  # the int valuepixel.rgb  # the rgb value```Setting a pixel:```pyawait client.set_pixel(0, 0, dpixels.Color(255, 255, 255))  # set the pixel at 0,0 to white```Autodrawing an image:```pyfrom PIL import Imageim = Image.open(&quot;path_to_image.ext&quot;)source = dpixels.Source.from_image((0, 0), im)await client.draw_sources([source])  # draw the source```## CreditsThis library is heavily based on [Artemis21/dpypx](https://github.com/Artemis21/dpypx)</longdescription>
</pkgmetadata>