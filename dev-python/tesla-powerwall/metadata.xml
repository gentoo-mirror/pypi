<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>![Licence](https://img.shields.io/github/license/jrester/tesla_powerwall?style=for-the-badge)![PyPI - Downloads](https://img.shields.io/pypi/dm/tesla_powerwall?color=blue&amp;style=for-the-badge)![PyPI](https://img.shields.io/pypi/v/tesla_powerwall?style=for-the-badge)Python Tesla Powerwall API for consuming a local endpoint. The API is by no means complete and mainly features methods which are considered to be of common use. If you feel like methods should be included you are welcome to open an Issue or create a Pull Request.&gt; Note: This is not an official API provided by Tesla and not affilated in anyways with Tesla.Powerwall Software versions from 1.47.0 to 1.50.1 as well as 20.40 to 22.9.2 are tested, but others will probably work too. If you encounter an error regarding a change in the API of the Powerwall because your Powerwall has a different version than listed here please open an Issue to report this change so it can be fixed.# Table of Contents &lt;!-- omit in TOC --&gt;- [Installation](#installation)- [Usage](#usage)    - [Setup](#setup)    - [Authentication](#authentication)    - [General](#general)        - [Errors](#errors)        - [Response](#response)    - [Battery level](#battery-level)    - [Capacity](#capacity)    - [Battery Packs](#battery-packs)    - [Powerwall Status](#powerwall-status)    - [Sitemaster](#sitemaster)    - [Siteinfo](#siteinfo)    - [Meters](#meters)        - [Aggregates](#aggregates)        - [Current power supply/draw](#current-power-supplydraw)        - [Energy exported/imported](#energy-exportedimported)    - [Device Type](#device-type)    - [Grid Status](#grid-status)    - [Operation mode](#operation-mode)    - [Powerwalls Serial Numbers](#powerwalls-serial-numbers)    - [Gateway DIN](#gateway-din)    - [VIN](#vin)    - [Off-grid status](#off-grid-status-set-island-mode)## InstallationInstall the library via pip:```bash$ pip install tesla_powerwall```## UsageFor a basic Overview of the functionality of this library you can take a look at `examples/example.py`:```bash$ export POWERWALL_IP=&lt;ip of your Powerwall&gt;$ export POWERWALL_PASSWORD=&lt;your password&gt;$ python3 examples/example.py```### Setup```pythonfrom tesla_powerwall import Powerwall# Create a simple powerwall object by providing the IPpowerwall = Powerwall(&quot;&lt;ip of your Powerwall&gt;&quot;)#=&gt; &lt;Powerwall ...&gt;# Create a powerwall object with more optionspowerwall = Powerwall(    endpoint=&quot;&lt;ip of your powerwall&gt;&quot;,    # Configure timeout; default is 10    timeout=10,    # Provide a requests.Session or None to have one created    http_session=None,    # Whether to verify the SSL certificate or not    verify_ssl=False,    disable_insecure_warning=True)#=&gt; &lt;Powerwall ...&gt;```&gt; Note: By default the API client does not verify the SSL certificate of the Powerwall. If you want to verify the SSL certificate you can set `verify_ssl` to `True`.&gt; The API client suppresses warnings about an inseucre request (because we aren't verifing the certificate). If you want to enable those warnings you can set `disable_insecure_warning` to `False`.### AuthenticationSince version 20.49.0 authentication is required for all methods. For that reason you must call `login` before making a request to the API.When you perform a request without being loggedin a `AccessDeniedError` will be thrown.To login you can either use `login` or `login_as`. `login` logs you in as `User.CUSTOMER` whereas with `login_as` you can choose a different user:```pythonfrom tesla_powerwall import User# Login as customer without email# The default value for the email is &quot;&quot;powerwall.login(&quot;&lt;password&gt;&quot;)#=&gt; &lt;LoginResponse ...&gt;# Login as customer with emailpowerwall.login(&quot;&lt;password&gt;&quot;, &quot;&lt;email&gt;&quot;)#=&gt; &lt;LoginResponse ...&gt;# Login with different userpowerwall.login_as(User.INSTALLER, &quot;&lt;password&gt;&quot;, &quot;&lt;email&gt;&quot;)#=&gt; &lt;LoginResponse ...&gt;# Check if we are logged in# This method only checks wether a cookie with a Bearer token exists# It does not verify whether this token is validpowerwall.is_authenticated()#=&gt; True# Logoutpowerwall.logout()```### GeneralThe API object directly maps the REST endpoints with a python method in the form of `&lt;verb&gt;_&lt;path&gt;`. So if you need the raw json responses you can use the API object. It can be either created manually or retrived from an existing `Powerwall`:```pythonfrom tesla_powerwall import API# Manually create API objectapi = API('https://&lt;ip&gt;/')# Perform get on 'system_status/soe'api.get_system_status_soe()#=&gt; {'percentage': 97.59281925744594}# From existing powerwallapi = powerwall.get_api()api.get_system_status_soe()```The `Powerwall` objet provides a wrapper around the API and exposes common methods.#### ErrorsAs the powerwall REST API varies widley between version and country it may happen that an attribute may not be included in your response. If that is the case a `MissingAttributeError` will be thrown indicating what attribute wasn't available. #### ResponseResponses are usally wrapped inside a `Response` object to provide convenience methods. An Example is the `Meter` class which is a sublass of `Response`. Each `Response` object includes the `response` member which consists of the plain json response. ```pythonfrom helpers import assert_attributestatus = powerwall.get_status()#=&gt; &lt;PowerwallStatus ...&gt;status.version# is the same asassert_attribute(status.response, &quot;version&quot;)# orstatus.assert_attribute(&quot;version&quot;)```For retriving the version you could also alternativly use `powerwall.get_version`.### Battery levelGet charge in percent:```pythonpowerwall.get_charge()#=&gt; 97.59281925744594 (%)```Get charge in watt:```pythonpowerwall.get_energy()#=&gt; 14807 (W)```### CapacityGet the capacity of your powerwall in watt:```pythonpowerwall.get_capacity()#=&gt; 28078 (W)```### Battery PacksGet information about the battery packs that are installed:```pythonbatteries = powerwall.get_batteries()#=&gt; [&lt;Battery ...&gt;, &lt;Battery ...&gt;]batteries[0].part_number#=&gt; &quot;XXX-G&quot;batteries[0].serial_number#=&gt; &quot;TGXXX&quot;batteries[0].energy_remaining#=&gt; 7378 (W)batteries[0].capacity#=&gt; 14031 (W)batteries[0].energy_charged#=&gt; 5525740 (W)batteries[0].energy_discharged#=&gt; 4659550 (W)batteries[0].wobble_detected#=&gt; False```### Powerwall Status```pythonstatus = powerwall.get_status()#=&gt; &lt;PowerwallStatus ...&gt;status.version#=&gt; '1.49.0'status.up_time_seconds#=&gt; datetime.timedelta(days=13, seconds=63287, microseconds=146455)status.start_time#=&gt; datetime.datetime(2020, 9, 23, 23, 31, 16, tzinfo=datetime.timezone(datetime.timedelta(seconds=28800)))status.device_type#=&gt; DeviceType.GW2```### Sitemaster```pythonsm = powerwall.sitemaster #=&gt; &lt;SiteMaster ...&gt;sm.status #=&gt; StatusUpsm.running#=&gt; truesm.connected_to_tesla#=&gt; true```The sitemaster can be started and stopped using `run()` and `stop()`### Siteinfo```pythoninfo = powerwall.get_site_info()#=&gt; &lt;SiteInfo ...&gt;info.site_name#=&gt; 'Tesla Home'info.country#=&gt; 'Germany'info.nominal_system_energy#=&gt; 13.5info.timezone#=&gt; 'Europe/Berlin'```### Meters#### Aggregates```pythonfrom tesla_powerwall import MeterTypemeters = powerwall.get_meters()#=&gt; &lt;MetersAggregates ...&gt;# access meter, but may return None when meter is not availablemeters.get_meter(MeterType.SOLAR)#=&gt; &lt;Meter ...&gt;# access meter, but may raise MeterNotAvailableError when the meter is not available at your powerwall (e.g. no solar panels installed)meters.solar#=&gt; &lt;Meter ...&gt;# get all available meters at the current powerwallmeters.meters#=&gt; [&lt;MeterType.SITE: 'site'&gt;, &lt;MeterType.BATTERY: 'battery'&gt;, &lt;MeterType.LOAD: 'load'&gt;, &lt;MeterType.SOLAR: 'solar'&gt;]```Available meters are: `solar`, `site`, `load`, `battery`, `generator`, and `busway`. Some of those meters might not be available based on the installation and raise MeterNotAvailableError when accessed.#### Current power supply/draw`Meter` provides different methods for checking current power supply/draw:```pythonmeters = powerwall.get_meters()meters.solar.get_power()#=&gt; 0.4 (in kWh)meters.solar.instant_power#=&gt; 409.941801071167 (in watts)meters.solar.is_drawing_from()#=&gt; Truemeters.load.is_sending_to()#=&gt; Truemeters.battery.is_active()#=&gt; False# Different precision settings might return different resultsmeters.battery.is_active(precision=5)#=&gt; True```&gt; Note: For MeterType.LOAD `is_drawing_from` **always** returns `False` because it cannot be drawn from `load`.#### Energy exported/importedGet energy exported/imported in watts with `energy_exported` and `energy_imported`. For the values in kWh use `get_energy_exported` and `get_energy_imported`:```pythonmeters.battery.energy_exported#=&gt; 6394100meters.battery.get_energy_exported()#=&gt; 6394.1meters.battery.energy_imported#=&gt; 7576570meters.battery.get_energy_imported()#=&gt; 7576.6```### Device Type```pythonpowerwall.get_device_type()#=&gt; &lt;DeviceType.GW1: 'hec'&gt;```### Grid StatusGet current grid status. ```pythonpowerwall.get_grid_status()#=&gt; &lt;GridStatus.Connected: 'SystemGridConnected'&gt;powerwall.is_grid_services_active()#=&gt; False```### Operation mode```pythonpowerwall.get_operation_mode()#=&gt; &lt;OperationMode.SELF_CONSUMPTION: ...&gt;powerwall.get_backup_reserve_percentage()#=&gt; 5.000019999999999```### Powerwalls Serial Numbers```pythonserials = powerwall.get_serial_numbers()#=&gt; [&quot;...&quot;, &quot;...&quot;, ...]```### Gateway DIN```pythondin = powerwall.get_gateway_din()#=&gt; 4159645-02-A--TGXXX```### VIN```pythonvin = powerwall.get_vin()```### Off-grid status (Set Island mode)Take your powerwall on- and off-grid similar to the &quot;Take off-grid&quot; button in the Tesla app. #### Set powerwall to off-grid (Islanded)```pythonpowerwall.set_island_mode(IslandMode.OFFGRID)```#### Set powerwall to off-grid (Connected)```pythonpowerwall.set_island_mode(IslandMode.ONGRID)```</longdescription>
</pkgmetadata>