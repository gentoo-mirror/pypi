<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># evohome_rf[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![CircleCI](https://circleci.com/gh/zxdavb/evohome_rf.svg?style=svg)](https://circleci.com/gh/zxdavb/evohome_rf) [![Join the chat at https://gitter.im/evohome_rf/community](https://badges.gitter.im/evohome_rf/community.svg)](https://gitter.im/evohome_rf/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)It does three things:a) convert the RF packets in useful JSONb) builds a picture (schema, config &amp; state) of an evohome-compatible system - either passively (by eavesdropping), or actively (probing)c) allows you to send commands to evohomeIt provides services to https://github.com/zxdavb/evohome_cc, a Home Assistant integrationIt requires a USB-to-RF device, either a Honeywell HGI80 (rare, expensive) or something running [evofw3](https://github.com/ghoti57/evofw3), such as the one from [here](https://indalo-tech.onlineweb.shop/).## Installation```git clone https://github.com/zxdavb/evohome_rfcd evohome_rfpip install -r requirements.txt```You may want to clean up/create a virtual environment somewhere along the way, something like:```deactivaterm -rf venvpython -m venv venv. venv/bin/activatepip install --upgrade pip```## Instructions```python client.py monitor /dev/ttyUSB0```Be sure to have a look at `-o packet_log.out` and `-p` (probe).</longdescription>
</pkgmetadata>