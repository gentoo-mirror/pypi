<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># Infobip API Python SDK[![Version](https://img.shields.io/pypi/v/infobip-api-python-sdk)](https://pypi.org/project/infobip-api-python-sdk/)![Python](https://img.shields.io/pypi/pyversions/infobip-api-python-sdk)[![Workflow](https://img.shields.io/github/workflow/status/infobip-community/infobip-api-python-sdk/Python%20package)](https://github.com/infobip-community/infobip-api-python-sdk/actions/workflows/python-package.yml)![Release](https://img.shields.io/github/release-date/infobip-community/infobip-api-python-sdk)[![Licence](https://img.shields.io/github/license/infobip-community/infobip-api-python-sdk)](LICENSE)Client SDK to use the Infobip API with Python.This package enables you to use multiple Infobip communication channels, like SMS, MMS, WhatsApp, Email, etc.---## üì° Supported APIsThe following communication channels are supported:- [SMS + 2FA](https://www.infobip.com/docs/api#channels/sms)- [Whatsapp](https://www.infobip.com/docs/api#channels/whatsapp)- [Email](https://www.infobip.com/docs/api#channels/email)- [WebRTC](https://www.infobip.com/docs/api#channels/webrtc/)- [MMS](https://www.infobip.com/docs/api#channels/mms)- [RCS](https://www.infobip.com/docs/api#channels/rcs)The following platform management APIs are supported:- [Entities](https://www.infobip.com/docs/api/platform/application-entity)More APIs to be added in the near future.## üîê AuthenticationCurrently, infobip-api-python-sdk only supports API Key authentication,and the key needs to be passed during client creation.This will most likely change with future versions,once more authentication methods are included.## üì¶ InstallationTo install infobip SDK you will need to run:```bashpip install infobip-api-python-sdk```Details of the package can be foundin the [PyPI page](https://pypi.org/project/infobip-api-python-sdk/).## üöÄ Usage### Code ExampleTo use the package you'll need an Infobip account.If you don't already have one, you can create a free trial account[here](https://www.infobip.com/signup).In this example, we will show how to send a WhatsApp text message.Other channels can be used in a similar way.The first step is to import the necessary channel, in this case WhatsApp channel.```pythonfrom infobip_channels.whatsapp.channel import WhatsAppChannel```Now you can create instance of `WhatsAppChannel` with your `base_url` and `api_key`.```pythonc = WhatsAppChannel.from_auth_params({    &quot;base_url&quot;: &quot;&lt;your_base_url&gt;&quot;,    &quot;api_key&quot;: &quot;&lt;your_api_key&gt;&quot;})```Alternatively, you can create the instance from the environment, having the `IB_BASE_URL` and `IB_API_KEY` variablesset, like this:```pythonc = WhatsAppChannel.from_env()```After that you can access all the methods from `WhatsAppChannel`.To send text message you can use `send_text_message` method and add correct payload:```pythonresponse = c.send_text_message(    {      &quot;from&quot;: &quot;&lt;WhatsApp sender number from your Infobib account&gt;&quot;,      &quot;to&quot;: &quot;&lt;Number that will receive WhatsApp message&gt;&quot;,      &quot;messageId&quot;: &quot;a28dd97c-1ffb-4fcf-99f1-0b557ed381da&quot;,      &quot;content&quot;: {        &quot;text&quot;: &quot;Some text&quot;      },      &quot;callbackData&quot;: &quot;Callback data&quot;,      &quot;notifyUrl&quot;: &quot;https://www.example.com/whatsapp&quot;    })```### SamplesWe are adding samples in the [samples](samples) folder, which you can use as a reference on how to use the SDKwith real payloads.## üóíÔ∏è NotesFor `infobip-api-python-sdk` versioning we use[Semantic Versioning](https://semver.org) scheme.Python 3.6 is the minimum supported version by this library.## üß° Want to help and improve this open-source SDK?Check out our [contributing guide](CONTRIBUTING.md) and [code of conduct](CODE_OF_CONDUCT.md).## ‚öñÔ∏è LicenseThis library is distributed under the MIT license found in the [License](LICENSE).</longdescription>
</pkgmetadata>