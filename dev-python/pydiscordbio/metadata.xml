<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># pydiscordbio ![PyPI - Downloads](https://img.shields.io/pypi/dw/pydiscordbio) ![PyPI](https://img.shields.io/pypi/v/pydiscordbio)An unofficial asynchronous Python wrapper for the [discord.bio](https://discord.bio) api.### Installing```pip install pydiscordbio```### Usage- Setting up the client  &gt; This will be used to make requests to the API```pyfrom pydiscordbio import Clientclient = Client()```- Exceptions| Error                                 | Description                                                || ------------------------------------- | ---------------------------------------------------------- || pydiscordbio.exceptions.APIError      | Raised when the request to the API itself fails            || pydiscordbio.exceptions.NotFound      | Raised when the request to the API returns status code 404 || pydiscordbio.exceptions.UserNotFound  | Raised when a user doesn't exist in the API                || pydiscordbio.exceptions.InvalidSearch | Raised when a search query is invalid                      |- Getting a user's details, discord info and connections via username or Discord ID  &gt; All methods of Client are typed meaning your IDE should auto complete the attributes```pyuser = await client.user(&quot;wa&quot;)#oruser = await client.user(738128655145762949)```- Getting a specific value from a user's details, e.g. description or a users banner URL```pydescription = (await client.user(&quot;wa&quot;)).details.descriptionbanner_url = (await client.user(&quot;wa&quot;)).details.banner```- Getting a specific value from a user's Discord, e.g. discord ID or username```pydescription = (await client.user(&quot;wa&quot;)).discord.idbanner_url = (await client.user(&quot;wa&quot;)).discord.username```- Getting a user's connected website```pywebsite = (await client.user(&quot;wa&quot;)).connections.website# Discord connectionsdiscord_connections = (await client.user(&quot;wa&quot;)).connections.discord# Returns a list of DiscordConnection objects```- Miscellaneous Endpoints```pytop_users = await client.top()# Returns a list of PartialUser objects from the top liked profiles``````pyresult = await client.search('Adam')# Returns a list of PartialUser objects from the query```### Attributes- UserDetails (from client.user)```pydetails: Userdiscord: Discordconnections: UserConnections```- User```pyslug: struser_id: intflags: intverified: boolpremium_type: intcreated_at: datetimedescription: strlocation: strgender: Optional[str]birthday: Optional[datetime]email: Optional[str]occupation: Optional[str]banner: Optional[str]premium: boolstaff: boollikes: int```- Discord```pyid: intusername: strfull_username: stravatar: Optional[str]avatar_url: stris_avatar_animated: booldiscriminator: strflags: int```- UserConnections```pywebsite: Optional[str]instagram: Optional[str]snapchat: Optional[str]linkedin: Optional[str]discord: List[DiscordConnection]```- PartialUser```pyslug: strverified: boolstaff: boolpremium: boollikes: intdescription: Optional[str]discord: Discord```- DiscordConnection```pyconnection_type: strname: strid: str```</longdescription>
</pkgmetadata>