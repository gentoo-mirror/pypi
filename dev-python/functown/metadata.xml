<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># üé∑ FuncTown üé∑[![PyPI Version](https://img.shields.io/pypi/v/functown.svg)](https://pypi.python.org/pypi/functown)[![PyPI downloads](https://img.shields.io/pypi/dm/functown.svg)](https://pypistats.org/packages/functown)![Packaging](https://github.com/felixnext/python-functown/actions/workflows/python-package.yml/badge.svg)[![Supported Python versions](https://img.shields.io/pypi/pyversions/functown.svg?logo=python&amp;logoColor=FFE873)](https://pypi.org/project/functown/)[![Code style: Black](https://img.shields.io/badge/code%20style-Black-000000.svg)](https://github.com/psf/black)`FuncTown` is a python library that is designed to make your life with Azure Functionseasier.The core features of `FuncTown` are:* **Error handling** - automatically handle errors and return a response to the user* **Debugging** - Set debug flags that automatically return logs and traces as part oferror responses from your function* **JWT token validation** - automatically validate JWT tokens and provide the userinformation* **Request argument parsing** - automatically parse arguments from the `HttpRequest`and provide them to your function* **Metrics** - Handle connections to Application Insights and gives you easy to usemetrics objects* **Logging, Tracing &amp; Events** - Log your functions data directly into ApplicationInsightsFor detailed features see the [docs](docs/overview.md).## Getting StartedYou can install `FuncTown` using `pip`:```bashpip install functown```&gt; Note that some dependencies are hidden behind sub-packages (e.g. `functown[jwt]` for&gt; JWT token validation).Almost all functionality of `FuncTown` is provided through decorators.If you want to add error handling to your function:```pythonfrom logging import Loggerfrom functown import ErrorHandler@ErrorHandler(debug=True, enable_logger=True)def main(req: func.HttpRequest, logger: Logger, **kwargs) -&gt; func.HttpResponse:    logger.info('Python HTTP trigger function processed a request.')    # ...    # exception will be caught and handled by the decorator (returning a 500)    raise ValueError(&quot;something went wrong&quot;)    return func.HttpResponse(&quot;success&quot;, status_code=200)```&gt; Note: Decorators might pass down additional arguments to your function,&gt; so it is generally a good idea to modify your function signature to accept these&gt; arguments (see [docs](docs/overview.md) for more information) and add a `**kwargs`&gt; to the end.Decorators are also stackable, so we could parse function arguments and handle a JWTToken in the same function:```pythonfrom functown import ArgsHandler, RequestArgHandler, AuthHandlerfrom functown.auth import Token@ArgsHandler()@AuthHandler(scopes=[&quot;user.read&quot;])def main(    req: func.HttpRequest, args: RequestArgHandler, token: Token) -&gt; func.HttpResponse:    # retrieve some arguments    data = args.get_body_query(&quot;data_name&quot;, required=True, allowed=[&quot;foo&quot;, &quot;bar&quot;])    switch = args.get_body(&quot;bool_name&quot;, map_fct='bool')    file = args.get_file('file_name', required=True)    # check the user id    user_id = token.user_id    # ...```This would also directly fail with a `400` message if there is no token provided,or the token does not contain the required scopes.Be sure to check out the [docs](docs/overview.md) for a full overview of alldecorators.If you want to test it on your own Azure Subscription, you can check out the[example guide](docs/dev-guide.md#setting-up-the-function-app) in the dev section of thedocs.üé∑ Welcome to FuncTown! üé∑## Note‚ÄºÔ∏è If you find this library helpful or have suggestions please let me know.Also any contributions are welcome! ‚ÄºÔ∏è[![&quot;Buy Me A Coffee&quot;](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/felixnext)</longdescription>
</pkgmetadata>