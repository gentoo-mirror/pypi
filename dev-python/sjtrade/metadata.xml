<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># sjtrade[![PyPI](https://img.shields.io/pypi/v/sjtrade)](https://pypi.org/project/sjtrade/)[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)[![Test and Deploy](https://github.com/Yvictor/sjtrade/actions/workflows/test-deploy.yml/badge.svg)](https://github.com/Yvictor/sjtrade/actions/workflows/test-deploy.yml)[![codecov](https://codecov.io/gh/Yvictor/sjtrade/branch/master/graph/badge.svg?token=hHZzwJEPyt)](https://codecov.io/gh/Yvictor/sjtrade)[![Telegram](https://img.shields.io/badge/chat-%20telegram-blue.svg)](https://t.me/joinchat/973EyAQlrfthZTk1)[![Open Tutorial In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/yvictor/sjtrade/blob/master/tutorial/quickstart.ipynb)shioaji day trading demo package## Install```pip install sjtrade```## Get started### Init Shioaji and SjTrader``` pythonimport shioaji as sjimport sjtradeapi = sj.Shioaji()accounts = api.login(**login_kws)sjtrader = sjtrade.SJTrader(api)```### Set Position Filepath and Preview Position``` pythonsjtrader.position_filepath = &quot;position.txt&quot;sjtrade.io.file.read_position(sjtrader.position_filepath)```### Set Custom Position FileReader``` pythonfrom sjtrade.io.file import read_csv_positionsjtrader.read_position_func = read_csv_positionsjtrader.position_filepath = &quot;position.csv&quot;sjtrader.read_position_func(sjtrader.position_filepath)```### Set entry_pct stop_profit_pct stop_loss_pct``` pythonsjtrader.entry_pct = 0.05sjtrader.stop_profit_pct = 0.095sjtrader.stop_loss_pct = 0.09```### Start sjtrader``` pythonsjtrader.start()```### What do sjtrader start actually do``` ipythonsjtrader.start??``````Signature: sjtrader.start()Source:       def start(self):        positions = read_position(self._position_filepath)        self.api.set_order_callback(self.order_deal_handler)        sleep_until(8, 45)        self.place_entry_order(positions, self.entry_pct)        sleep_until(8, 54, 59)        self.api.quote.set_on_tick_stk_v1_callback(self.cancel_preorder_handler)        sleep_until(8, 59, 55)        self.api.quote.set_on_tick_stk_v1_callback(self.intraday_handler)        sleep_until(13, 25, 59)        self.open_position_cover()File:      ~/.pyenv/versions/miniconda3-latest/lib/python3.7/site-packages/sjtrade/trader.pyType:      method```### Simulationall order will be place as success and deal when price touch```api = sj.Shioaji()accounts = api.login(**login_kws)sjtrader = sjtrade.SJTrader(api, simulation=True)sjtrader.position_filepath = &quot;position.txt&quot;sjtrade.io.file.read_position(sjtrader.position_filepath)sjtrader.entry_pct = 0.05sjtrader.stop_profit_pct = 0.095sjtrader.stop_loss_pct = 0.09sjtrader.start()```### Notifications ``` bashpip install notifiers```#### Check notifiers``` pythonfrom notifiers import get_notifiernotifier = get_notifier(&quot;telegram&quot;)TELECHATID = &quot;&quot;TELEBOT_TOKEN = &quot;&quot;PARAMS = {&quot;chat_id&quot;: TELECHATID, &quot;token&quot;: TELEBOT_TOKEN}notifier.notify(message=&quot;test&quot;, **PARAMS)```#### Check logger``` pythonfrom loguru import loggerfrom notifiers.logging import NotificationHandlerhandler = NotificationHandler(&quot;telegram&quot;, defaults=PARAMS)logger.add(handler, level=&quot;INFO&quot;)logger.info(&quot;logger test&quot;)```## Developer's guide```flit install -s```</longdescription>
</pkgmetadata>