<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription>&lt;div align=&quot;center&quot;&gt;&lt;h1 align=&quot;center&quot;&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://dstack.ai&quot;&gt;    &lt;img alt=&quot;dstack&quot; src=&quot;https://raw.githubusercontent.com/dstackai/dstack/master/docs/assets/images/dstack-logo.svg&quot; width=&quot;400px&quot;/&gt;  &lt;/a&gt;&lt;/h1&gt;&lt;h4 align=&quot;center&quot;&gt;ML workflows as code&lt;/h4&gt;&lt;p align=&quot;center&quot;&gt;The easiest way to run ML workflows on any cloud platform &lt;/p&gt;[![Slack](https://img.shields.io/badge/slack-join%20chat-blueviolet?logo=slack&amp;style=for-the-badge)](https://join.slack.com/t/dstackai/shared_invite/zt-xdnsytie-D4qU9BvJP8vkbkHXdi6clQ)&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://dstack.ai/docs/quick-start&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Quick start&lt;/b&gt;&lt;/a&gt; • &lt;a href=&quot;https://dstack.ai/docs&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Docs&lt;/b&gt;&lt;/a&gt; • &lt;a href=&quot;https://dstack.ai/tutorials/dolly&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Tutorials&lt;/b&gt;&lt;/a&gt; •&lt;a href=&quot;https://dstack.ai/blog&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Blog&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;[![Last commit](https://img.shields.io/github/last-commit/dstackai/dstack)](https://github.com/dstackai/dstack/commits/)[![PyPI - License](https://img.shields.io/pypi/l/dstack?style=flat&amp;color=blue)](https://github.com/dstackai/dstack/blob/master/LICENSE.md)&lt;/div&gt;## What is dstack?`dstack` makes it very easy to define ML workflowsand run them on any cloud platform. It provisions infrastructure,manages data, and monitors usage for you.Ideal for processing data, training models, running apps, and any other ML development tasks.## Installation and setupTo use `dstack`, install it with `pip` and start the Hub application.```shellpip install dstackdstack start```The `dstack start` command starts the Hub application, and creates the default project to run workflows locally.If you'll want to run workflows in the cloud (e.g. AWS, or GCP), simply log into the Hub application, and create a new project.## Run your first  workflowsLet's define our first ML workflow in `.dstack/workflows/hello.yaml`:```yamlworkflows:  - name: train-mnist    provider: bash    commands:      - pip install torchvision pytorch-lightning tensorboard      - python examples/mnist/train_mnist.py    artifacts:      - path: ./lightning_logs```The YAML file allows you to request hardware [resources](https://dstack.ai/docs/usage/resources), run [Python](https://dstack.ai/docs/usage/python),save [artifacts](https://dstack.ai/docs/usage/artifacts), use [cache](https://dstack.ai/docs/usage/cache) and  [dependencies](https://dstack.ai/docs/usage/deps), create [dev environments](https://dstack.ai/docs/usage/dev-environments),run [apps](https://dstack.ai/docs/usage/apps), and many more.## Run itGo ahead and run it:```shelldstack run train-mnistRUN        WORKFLOW     SUBMITTED  STATUS     TAG  BACKENDSpenguin-1  train-mnist  now        Submitted       localProvisioning... It may take up to a minute. ✓To interrupt, press Ctrl+C.GPU available: False, used: FalseEpoch 1: [00:03&lt;00:00, 280.17it/s, loss=1.35, v_num=0]```The `dstack run` command runs the workflow using the settings specified for the project configured with theHub application.## Create a Hub projectAs mentioned above, the default project runs workflows locally.However, you can log into the application and create other projects that allow you to run workflows in the cloud.&lt;img src=&quot;https://dstack.ai/assets/dstack-hub-create-project.png&quot; width=&quot;800px&quot; /&gt;If you want the project to use the cloud, you'll need to provide cloud credentials and specify settings such as theartifact storage bucket and the region where the workflows will run.&lt;img src=&quot;https://dstack.ai/assets/dstack-hub-view-project.png&quot; width=&quot;800px&quot; /&gt;Once a project is created, copy the CLI command from the project settings and execute it in your terminal.&lt;div class=&quot;termy&quot;&gt;```shelldstack config --url http://127.0.0.1:3000 \  --project gcp \  --token b934d226-e24a-4eab-a284-eb92b353b10f```&lt;/div&gt;The `dstack config` command configures `dstack` to run workflows using the settings fromthe corresponding project.You can configure multiple projects and use them interchangeably (by passing the `--project` argument to the `dstack run` command. Any project can be set as the default by passing `--default` to the `dstack config` command.Configuring multiple projects can be convenient if you want to run workflows both locally and in the cloud or if you would like to use multiple clouds.## Manage resourcesConsider that you have configured a project that allows you to use a GPU (e.g., a local backend if you have a GPUlocally, or an AWS or GCP backend).Let's update our workflow and add `resources`.```yamlworkflows:  - name: train-mnist    provider: bash    commands:      - pip install torchvision pytorch-lightning tensorboard      - python examples/mnist/train_mnist.py    artifacts:      - path: ./lightning_logs    resources:      gpu:        name: V100        count: 1```Let's run the workflow:```shelldstack run train-mnist --project gcpRUN        WORKFLOW     SUBMITTED  STATUS     TAG  BACKENDSpenguin-1  train-mnist  now        Submitted       localProvisioning... It may take up to a minute. ✓To interrupt, press Ctrl+C.GPU available: True, used: TrueEpoch 1: [00:03&lt;00:00, 280.17it/s, loss=1.35, v_num=0]```If your project is configured to use the cloud, the Hub application will automatically create the necessary cloudresources to execute the workflow and tear them down once it is finished.## More informationFor additional information and examples, see the following links:* [Quick start](https://dstack.ai/docs/quick-start)* [Docs](https://dstack.ai/docs)* [Tutorials](https://dstack.ai/tutorials/dolly)* [Blog](https://dstack.ai/blog) ##  Licence[Mozilla Public License 2.0](LICENSE.md)</longdescription>
</pkgmetadata>