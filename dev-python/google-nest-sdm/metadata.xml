<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>gentoo@houseofsuns.org</email>
		<name>Markus Walter</name>
	</maintainer>
	<longdescription># python-google-nest-sdmThis is a library for Google Nest [Device Access](https://developers.google.com/nest/device-access)using the [Smart Device Management API](https://developers.google.com/nest/device-access/api).# UsageThis can be used with the sandbox which requires [Registration](https://developers.google.com/nest/device-access/registration), accepting termsand a fee.You'll want to following the [Get Started](https://developers.google.com/nest/device-access/get-started)guides for setup including steps in the google cloud console.  Overall, this isfairly complicated with many steps that are easy to get wrong.  It is likelyworth it to make sure you can get the API working using their supplied curlcommands with your account before attempting to use this library.# StructureThis API was designed for use in Home Assistant following the advice in[Building a Python Library for an API](https://developers.home-assistant.io/docs/api_lib_index/).If you are integrating this from outside Home Assistant, you'll need tocreate your own oauth integration and token refresh mechanism and tooling.# Fetching DataThis is an example to use the command line tool to access the API:```PROJECT_ID=&quot;some-project-id&quot;CLIENT_ID=&quot;some-client-id&quot;CLIENT_SECRET=&quot;some-client-secret&quot;# Initial call will ask you to authorize OAuth2 then cache the tokengoogle_nest --project_id=&quot;${PROJECT_ID}&quot; --client_id=&quot;${CLIENT_ID}&quot; --client_secret=&quot;${CLIENT_SECRET}&quot; list_structures# Subsequent calls only need the project idgoogle_nest --project_id=&quot;${PROJECT_ID}&quot; get_device &quot;some-device-id&quot;google_nest --project_id=&quot;${PROJECT_ID}&quot; set_mode COOLgoogle_nest --project_id=&quot;${PROJECT_ID}&quot; set_cool 25.0```# SubscriptionsSee [Device Access: Getting Started: Subscribe to Events](https://developers.google.com/nest/device-access/subscribe-to-events)for documentation on how to create a pull subscription.You can create the subscription to use with the tool with these steps:* Create the topic:  * Visit the [Device Access Console](https://console.nest.google.com/device-access)  * Select a project  * Enable Pub/Sub and note the full `topic` based on the `project_id`* Create the subscriber:  * Visit [Google Cloud Platform: Pub/Sub: Subscriptions](https://console.cloud.google.com/cloudpubsub/subscriptions)  * Create a subscriber  * Enter the `Topic Name`  * Create a `Subscription Name`, e.g. &quot;project-id-python&quot; which is your `subscriber_id`This is an example to run the command line tool to subscribe:```PROJECT_ID=&quot;some-project-id&quot;SUBSCRIPTION_ID=&quot;projects/some-id/subscriptions/enterprise-some-project-id-python-google-nest&quot;google_nest --project_id=&quot;${PROJECT_ID}&quot; subscribe ${SUBSCRIPTION_ID}```# Development```$ python3 -m venv venv$ source venv/bin/activate$ pip3 install -e .$ pip3 install -r requirements.txt# Running tests$ pytest# Running tests w/ Code Coverage$ pytest --cov=google_nest_sdm tests/ --cov-report=term-missing# Formatting and linting$ pre-commit run --all-files```# Funding and SupportIf you are interested in donating money to this effort, instead send adonation to [Black Girls Code](https://donorbox.org/support-black-girls-code)which is a great organization growing the next generation of software engineers.</longdescription>
</pkgmetadata>